uint64_t sub_1003969B0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  void *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;

  v1 = v0;
  v2 = *v0;
  sub_10002F214(&qword_1006A4CE0);
  v3 = static _SetStorage.resize(original:capacity:move:)();
  v4 = v3;
  if (*(void *)(v2 + 16))
  {
    v5 = 1 << *(unsigned char *)(v2 + 32);
    v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      v6 = ~(-1 << v5);
    }
    else {
      v6 = -1;
    }
    v7 = v6 & *(void *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      Hasher.init(_seed:)();
      String.hash(into:)();
      result = Hasher._finalize()();
      v22 = -1 << *(unsigned char *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26) {
            v24 = 0;
          }
          v25 |= v27;
          v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_100396C90()
{
  v1 = v0;
  uint64_t v2 = *v0;
  sub_10002F214(&qword_1006A4DC0);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  uint64_t *v6 = v26;
                }
                v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = static Hasher._hash(seed:_:)();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_100396F14()
{
  v1 = v0;
  uint64_t v2 = _s3TagVMa();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  int64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_10002F214(&qword_1006A4D00);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  if (*(void *)(v6 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v6 + 32);
    unint64_t v9 = (void *)(v6 + 56);
    uint64_t v10 = -1;
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    unint64_t v11 = v10 & *(void *)(v6 + 56);
    int64_t v12 = (unint64_t)(v8 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v14 << 6);
      }
      else
      {
        int64_t v17 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
LABEL_28:
          __break(1u);
          return result;
        }
        if (v17 >= v12) {
          goto LABEL_22;
        }
        unint64_t v18 = v9[v17];
        ++v14;
        if (!v18)
        {
          int64_t v14 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_22;
          }
          unint64_t v18 = v9[v14];
          if (!v18)
          {
            int64_t v14 = v17 + 2;
            if (v17 + 2 >= v12) {
              goto LABEL_22;
            }
            unint64_t v18 = v9[v14];
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_22:
                swift_release();
                uint64_t v20 = 1 << *(unsigned char *)(v6 + 32);
                if (v20 > 63) {
                  bzero((void *)(v6 + 56), ((unint64_t)(v20 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v9 = -1 << v20;
                }
                *(void *)(v6 + 16) = 0;
                break;
              }
              unint64_t v18 = v9[v19];
              if (!v18)
              {
                while (1)
                {
                  int64_t v14 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_28;
                  }
                  if (v14 >= v12) {
                    goto LABEL_22;
                  }
                  unint64_t v18 = v9[v14];
                  ++v19;
                  if (v18) {
                    goto LABEL_21;
                  }
                }
              }
              int64_t v14 = v19;
            }
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v14 << 6);
      }
      sub_1003A171C(*(void *)(v6 + 48) + *(void *)(v3 + 72) * v16, (uint64_t)v5, (uint64_t (*)(void))_s3TagVMa);
      uint64_t result = sub_1003975FC((uint64_t)v5, v7);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v7;
  return result;
}

uint64_t sub_100397184()
{
  v1 = v0;
  uint64_t v2 = type metadata accessor for AccountEntity();
  uint64_t v34 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_10002F214((uint64_t *)&unk_1006A4D90);
  uint64_t v6 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = *(void *)(v5 + 56);
    v33 = (void *)(v5 + 56);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & v9;
    v31 = v0;
    int64_t v32 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v12 = v6 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v32) {
          goto LABEL_33;
        }
        unint64_t v19 = v33[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v19 = v33[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v32) {
              goto LABEL_33;
            }
            unint64_t v19 = v33[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v32)
              {
LABEL_33:
                swift_release();
                v1 = v31;
                uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
                if (v29 > 63) {
                  bzero(v33, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v33 = -1 << v29;
                }
                *(void *)(v5 + 16) = 0;
                break;
              }
              unint64_t v19 = v33[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v32) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v33[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(v34 + 72);
      sub_1003A171C(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for AccountEntity);
      Hasher.init(_seed:)();
      type metadata accessor for AccountID();
      sub_10039F3FC((unint64_t *)&unk_1006A27E0, (void (*)(uint64_t))&type metadata accessor for AccountID);
      dispatch thunk of Hashable.hash(into:)();
      type metadata accessor for URL();
      sub_10039F3FC((unint64_t *)&unk_10069BA10, (void (*)(uint64_t))&type metadata accessor for URL);
      dispatch thunk of Hashable.hash(into:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      uint64_t result = Hasher._finalize()();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t result = sub_1003A171C((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21, (uint64_t (*)(void))type metadata accessor for AccountEntity);
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v7;
  return result;
}

uint64_t sub_1003975FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)();
  sub_10002F034(a1, (uint64_t)v10, (uint64_t *)&unk_1006A3E20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    Hasher._combine(_:)(1u);
    sub_10039F3FC((unint64_t *)&unk_1006A4CF0, (void (*)(uint64_t))&type metadata accessor for Date);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v11 = _s3TagVMa();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._finalize()();
  unint64_t v12 = _HashTable.nextHole(atOrAfter:)();
  *(void *)(a2 + 56 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
  uint64_t result = sub_1003A171C(a1, *(void *)(a2 + 48) + *(void *)(*(void *)(v11 - 8) + 72) * v12, (uint64_t (*)(void))_s3TagVMa);
  ++*(void *)(a2 + 16);
  return result;
}

unint64_t sub_1003978A4(uint64_t a1, void *a2)
{
  NSObject._rawHashValue(seed:)(a2[5]);
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

uint64_t sub_100397928(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = (int *)type metadata accessor for FolderEntity();
  uint64_t v9 = *((void *)v8 - 1);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0) {
    goto LABEL_26;
  }
  if (a3)
  {
    sub_100395634();
  }
  else
  {
    if (v13 > v12)
    {
      sub_100399B54((uint64_t (*)(void))type metadata accessor for FolderEntity, (uint64_t *)&unk_1006A4DF0, (uint64_t (*)(void))type metadata accessor for FolderEntity);
      goto LABEL_26;
    }
    sub_100399F58();
  }
  uint64_t v14 = *v4;
  Hasher.init(_seed:)();
  FolderEntity.hash(into:)();
  Swift::Int v15 = Hasher._finalize()();
  uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
  a2 = v15 & ~v16;
  if ((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v16;
    uint64_t v18 = *(void *)(v9 + 72);
    while (1)
    {
      sub_1003A1784(*(void *)(v14 + 48) + v18 * a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FolderEntity);
      if (static FolderID.== infix(_:_:)() & 1) != 0 && (static URL.== infix(_:_:)())
      {
        uint64_t v19 = v8[6];
        uint64_t v20 = *(void *)&v11[v19];
        uint64_t v21 = *(void *)&v11[v19 + 8];
        uint64_t v22 = (void *)(a1 + v19);
        BOOL v23 = v20 == *v22 && v21 == v22[1];
        if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          uint64_t v24 = v8[7];
          uint64_t v25 = *(void *)&v11[v24];
          uint64_t v26 = *(void *)&v11[v24 + 8];
          BOOL v27 = (void *)(a1 + v24);
          BOOL v28 = v25 == *v27 && v26 == v27[1];
          if (v28 || (_stringCompareWithSmolCheck(_:_:expecting:)())
            && v11[v8[8]] == *(unsigned char *)(a1 + v8[8])
            && v11[v8[9]] == *(unsigned char *)(a1 + v8[9]))
          {
            break;
          }
        }
      }
      sub_1003A17EC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FolderEntity);
      a2 = (a2 + 1) & v17;
      if (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_26;
      }
    }
    sub_1003A17EC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FolderEntity);
    ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
LABEL_26:
  uint64_t v29 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_1003A171C(a1, *(void *)(v29 + 48) + *(void *)(v9 + 72) * a2, (uint64_t (*)(void))type metadata accessor for FolderEntity);
  uint64_t v31 = *(void *)(v29 + 16);
  BOOL v32 = __OFADD__(v31, 1);
  uint64_t v33 = v31 + 1;
  if (v32) {
    __break(1u);
  }
  else {
    *(void *)(v29 + 16) = v33;
  }
  return result;
}

Swift::Int sub_100397C44(Swift::Int result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  Swift::Int v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_100395AF0();
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (Swift::Int)sub_100399388();
      goto LABEL_12;
    }
    sub_10039A3DC();
  }
  uint64_t v9 = *v3;
  uint64_t result = AnyHashable._rawHashValue(seed:)(*(void *)(*v3 + 40));
  uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
  a2 = result & ~v10;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v11 = ~v10;
    do
    {
      sub_100033188(*(void *)(v9 + 48) + 40 * a2, (uint64_t)v19);
      char v12 = static AnyHashable.== infix(_:_:)();
      uint64_t result = sub_100033134((uint64_t)v19);
      if (v12) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v11;
    }
    while (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v13 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v14 = *(void *)(v13 + 48) + 40 * a2;
  long long v15 = *(_OWORD *)(v6 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v6;
  *(_OWORD *)(v14 + 16) = v15;
  *(void *)(v14 + 32) = *(void *)(v6 + 32);
  uint64_t v16 = *(void *)(v13 + 16);
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (!v17)
  {
    *(void *)(v13 + 16) = v18;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100397DB0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  BOOL v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_100395DBC();
  }
  else
  {
    if (v11 > v10)
    {
      sub_100399558((uint64_t (*)(void))&type metadata accessor for UUID, &qword_1006A4DE0);
      goto LABEL_12;
    }
    sub_10039A670();
  }
  uint64_t v12 = *v3;
  sub_10039F3FC((unint64_t *)&qword_1006A4DD0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v13 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    BOOL v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_10039F3FC(&qword_10069DE60, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10039806C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  BOOL v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1003961B8();
  }
  else
  {
    if (v11 > v10)
    {
      sub_100399558((uint64_t (*)(void))&type metadata accessor for IndexPath, &qword_1006A4C98);
      goto LABEL_12;
    }
    sub_10039AA20();
  }
  uint64_t v12 = *v3;
  sub_10039F3FC(&qword_1006A4C80, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  uint64_t v13 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    BOOL v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_10039F3FC((unint64_t *)&unk_1006A4C88, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100398328(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  BOOL v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1003965B4();
  }
  else
  {
    if (v11 > v10)
    {
      sub_100399558((uint64_t (*)(void))&type metadata accessor for URL, &qword_10069BA08);
      goto LABEL_12;
    }
    sub_10039ADD0();
  }
  uint64_t v12 = *v3;
  sub_10039F3FC((unint64_t *)&unk_10069BA10, (void (*)(uint64_t))&type metadata accessor for URL);
  uint64_t v13 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    BOOL v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_10039F3FC((unint64_t *)&qword_1006A4D60, (void (*)(uint64_t))&type metadata accessor for URL);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

Swift::Int sub_1003985E4(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1003969B0();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_100399808();
      goto LABEL_22;
    }
    sub_10039B180();
  }
  uint64_t v11 = *v4;
  Hasher.init(_seed:)();
  String.hash(into:)();
  uint64_t result = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  char v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *char v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_100398780(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_100396C90();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1003999BC();
      goto LABEL_14;
    }
    sub_10039B430();
  }
  uint64_t v8 = *v3;
  uint64_t result = static Hasher._hash(seed:_:)();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_1003988A4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v56 = a1;
  uint64_t v55 = sub_10002F214((uint64_t *)&unk_1006A0050);
  __chkstk_darwin(v55);
  unint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = _s3TagVMa();
  uint64_t v44 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  v45 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  BOOL v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v41 - v18;
  __chkstk_darwin(v17);
  char v21 = (char *)&v41 - v20;
  unint64_t v22 = *(void *)(*v3 + 16);
  unint64_t v23 = *(void *)(*v3 + 24);
  v41 = v3;
  if (v23 > v22 && (a3 & 1) != 0) {
    goto LABEL_25;
  }
  if (a3)
  {
    sub_100396F14();
  }
  else
  {
    if (v23 > v22)
    {
      sub_100399B54((uint64_t (*)(void))_s3TagVMa, &qword_1006A4D00, (uint64_t (*)(void))_s3TagVMa);
      goto LABEL_25;
    }
    sub_10039B694();
  }
  uint64_t v54 = *v3;
  Hasher.init(_seed:)();
  sub_10002F034(v56, (uint64_t)v21, (uint64_t *)&unk_1006A3E20);
  v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v53 = v11 + 48;
  if (v52(v21, 1, v10) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    uint64_t v24 = v45;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v45, v21, v10);
    Hasher._combine(_:)(1u);
    sub_10039F3FC((unint64_t *)&unk_1006A4CF0, (void (*)(uint64_t))&type metadata accessor for Date);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v24, v10);
  }
  v46 = (void *)(v56 + *(int *)(v48 + 20));
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v25 = Hasher._finalize()();
  uint64_t v26 = -1 << *(unsigned char *)(v54 + 32);
  a2 = v25 & ~v26;
  uint64_t v51 = v54 + 56;
  if ((*(void *)(v54 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v50 = ~v26;
    uint64_t v49 = *(void *)(v44 + 72);
    v42 = (void (**)(char *, uint64_t, uint64_t))(v11 + 32);
    v47 = (void (**)(char *, uint64_t))(v11 + 8);
    v43 = v19;
    do
    {
      sub_1003A1784(*(void *)(v54 + 48) + v49 * a2, (uint64_t)v9, (uint64_t (*)(void))_s3TagVMa);
      sub_10002F034(v56, (uint64_t)v19, (uint64_t *)&unk_1006A3E20);
      uint64_t v27 = (uint64_t)&v7[*(int *)(v55 + 48)];
      sub_10002F034((uint64_t)v9, (uint64_t)v7, (uint64_t *)&unk_1006A3E20);
      sub_10002F034((uint64_t)v19, v27, (uint64_t *)&unk_1006A3E20);
      BOOL v28 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v52;
      if (v52(v7, 1, v10) == 1)
      {
        sub_10002B754((uint64_t)v19, (uint64_t *)&unk_1006A3E20);
        if (v28(v27, 1, v10) != 1) {
          goto LABEL_20;
        }
        sub_10002B754((uint64_t)v7, (uint64_t *)&unk_1006A3E20);
      }
      else
      {
        sub_10002F034((uint64_t)v7, (uint64_t)v16, (uint64_t *)&unk_1006A3E20);
        if (v28(v27, 1, v10) == 1)
        {
          sub_10002B754((uint64_t)v19, (uint64_t *)&unk_1006A3E20);
          (*v47)(v16, v10);
LABEL_20:
          sub_10002B754((uint64_t)v7, (uint64_t *)&unk_1006A0050);
          goto LABEL_14;
        }
        uint64_t v29 = v9;
        uint64_t v30 = v16;
        uint64_t v31 = v45;
        (*v42)(v45, v27, v10);
        sub_10039F3FC(&qword_10069FA10, (void (*)(uint64_t))&type metadata accessor for Date);
        char v32 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v33 = *v47;
        uint64_t v34 = v31;
        BOOL v16 = v30;
        uint64_t v9 = v29;
        uint64_t v19 = v43;
        (*v47)(v34, v10);
        sub_10002B754((uint64_t)v19, (uint64_t *)&unk_1006A3E20);
        v33(v16, v10);
        sub_10002B754((uint64_t)v7, (uint64_t *)&unk_1006A3E20);
        if ((v32 & 1) == 0) {
          goto LABEL_14;
        }
      }
      v35 = &v9[*(int *)(v48 + 20)];
      if (*(void *)v35 == *v46 && *((void *)v35 + 1) == v46[1]
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        sub_1003A17EC((uint64_t)v9, (uint64_t (*)(void))_s3TagVMa);
        ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        __break(1u);
        break;
      }
LABEL_14:
      sub_1003A17EC((uint64_t)v9, (uint64_t (*)(void))_s3TagVMa);
      a2 = (a2 + 1) & v50;
    }
    while (((*(void *)(v51 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_25:
  uint64_t v36 = *v41;
  *(void *)(*v41 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_1003A171C(v56, *(void *)(v36 + 48) + *(void *)(v44 + 72) * a2, (uint64_t (*)(void))_s3TagVMa);
  uint64_t v38 = *(void *)(v36 + 16);
  BOOL v39 = __OFADD__(v38, 1);
  uint64_t v40 = v38 + 1;
  if (v39) {
    __break(1u);
  }
  else {
    *(void *)(v36 + 16) = v40;
  }
  return result;
}

uint64_t sub_100398FF4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v7 = type metadata accessor for AccountEntity();
  uint64_t v27 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_19;
  }
  if (a3)
  {
    sub_100397184();
  }
  else
  {
    if (v11 > v10)
    {
      sub_100399B54((uint64_t (*)(void))type metadata accessor for AccountEntity, (uint64_t *)&unk_1006A4D90, (uint64_t (*)(void))type metadata accessor for AccountEntity);
      goto LABEL_19;
    }
    sub_10039B8D0();
  }
  uint64_t v12 = *v3;
  Hasher.init(_seed:)();
  type metadata accessor for AccountID();
  sub_10039F3FC((unint64_t *)&unk_1006A27E0, (void (*)(uint64_t))&type metadata accessor for AccountID);
  dispatch thunk of Hashable.hash(into:)();
  type metadata accessor for URL();
  sub_10039F3FC((unint64_t *)&unk_10069BA10, (void (*)(uint64_t))&type metadata accessor for URL);
  dispatch thunk of Hashable.hash(into:)();
  uint64_t v13 = (void *)(a1 + *(int *)(v7 + 24));
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v14 = Hasher._finalize()();
  uint64_t v15 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v14 & ~v15;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v15;
    uint64_t v17 = *(void *)(v27 + 72);
    while (1)
    {
      sub_1003A1784(*(void *)(v12 + 48) + v17 * a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for AccountEntity);
      if (static AccountID.== infix(_:_:)() & 1) != 0 && (static URL.== infix(_:_:)())
      {
        uint64_t v18 = &v9[*(int *)(v7 + 24)];
        BOOL v19 = *(void *)v18 == *v13 && *((void *)v18 + 1) == v13[1];
        if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          break;
        }
      }
      sub_1003A17EC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for AccountEntity);
      a2 = (a2 + 1) & v16;
      if (((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_19;
      }
    }
    sub_1003A17EC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for AccountEntity);
    ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
LABEL_19:
  uint64_t v20 = *v26;
  *(void *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_1003A171C(a1, *(void *)(v20 + 48) + *(void *)(v27 + 72) * a2, (uint64_t (*)(void))type metadata accessor for AccountEntity);
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void *sub_100399388()
{
  v1 = v0;
  sub_10002F214((uint64_t *)&unk_1006A4D80);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    uint64_t result = (void *)sub_100033188(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v23);
    uint64_t v17 = *(void *)(v4 + 48) + v16;
    long long v18 = v23[0];
    long long v19 = v23[1];
    *(void *)(v17 + 32) = v24;
    *(_OWORD *)uint64_t v17 = v18;
    *(_OWORD *)(v17 + 16) = v19;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_100399558(uint64_t (*a1)(void), uint64_t *a2)
{
  uint64_t v4 = v2;
  uint64_t v5 = a1(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v25 - v7;
  sub_10002F214(a2);
  uint64_t v9 = *v2;
  uint64_t v10 = static _SetStorage.copy(original:)();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_30:
    *uint64_t v4 = v11;
    return result;
  }
  uint64_t result = (void *)(v10 + 56);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  uint64_t v26 = v4;
  uint64_t v27 = (const void *)(v9 + 56);
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v13) {
    uint64_t result = memmove(result, v27, 8 * v13);
  }
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 56);
  int64_t v28 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v22);
    ++v15;
    if (!v23)
    {
      int64_t v15 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_28;
      }
      unint64_t v23 = *((void *)v27 + v15);
      if (!v23)
      {
        int64_t v15 = v22 + 2;
        if (v22 + 2 >= v28) {
          goto LABEL_28;
        }
        unint64_t v23 = *((void *)v27 + v15);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v15 << 6);
LABEL_12:
    unint64_t v21 = *(void *)(v6 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(void *)(v9 + 48) + v21, v5);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v11 + 48) + v21, v8, v5);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v28)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t v4 = v26;
    goto LABEL_30;
  }
  unint64_t v23 = *((void *)v27 + v24);
  if (v23)
  {
    int64_t v15 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v15);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_100399808()
{
  v1 = v0;
  sub_10002F214(&qword_1006A4CE0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    unint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1003999BC()
{
  v1 = v0;
  sub_10002F214(&qword_1006A4DC0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_100399B54(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = v3;
  uint64_t v7 = a1(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v29 - v9;
  sub_10002F214(a2);
  uint64_t v11 = *v3;
  uint64_t v12 = static _SetStorage.copy(original:)();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_30:
    uint64_t *v6 = v13;
    return result;
  }
  uint64_t v30 = v6;
  uint64_t result = (void *)(v12 + 56);
  uint64_t v15 = v11 + 56;
  unint64_t v16 = (unint64_t)((1 << *(unsigned char *)(v13 + 32)) + 63) >> 6;
  if (v13 != v11 || (unint64_t)result >= v11 + 56 + 8 * v16) {
    uint64_t result = memmove(result, (const void *)(v11 + 56), 8 * v16);
  }
  int64_t v18 = 0;
  *(void *)(v13 + 16) = *(void *)(v11 + 16);
  uint64_t v19 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & *(void *)(v11 + 56);
  int64_t v22 = (unint64_t)(v19 + 63) >> 6;
  while (1)
  {
    if (v21)
    {
      unint64_t v23 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v24 = v23 | (v18 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v26 >= v22) {
      goto LABEL_28;
    }
    unint64_t v27 = *(void *)(v15 + 8 * v26);
    ++v18;
    if (!v27)
    {
      int64_t v18 = v26 + 1;
      if (v26 + 1 >= v22) {
        goto LABEL_28;
      }
      unint64_t v27 = *(void *)(v15 + 8 * v18);
      if (!v27)
      {
        int64_t v18 = v26 + 2;
        if (v26 + 2 >= v22) {
          goto LABEL_28;
        }
        unint64_t v27 = *(void *)(v15 + 8 * v18);
        if (!v27) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v21 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v18 << 6);
LABEL_12:
    unint64_t v25 = *(void *)(v8 + 72) * v24;
    sub_1003A1784(*(void *)(v11 + 48) + v25, (uint64_t)v10, a3);
    uint64_t result = (void *)sub_1003A171C((uint64_t)v10, *(void *)(v13 + 48) + v25, a3);
  }
  int64_t v28 = v26 + 3;
  if (v28 >= v22)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t v6 = v30;
    goto LABEL_30;
  }
  unint64_t v27 = *(void *)(v15 + 8 * v28);
  if (v27)
  {
    int64_t v18 = v28;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v18 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v18 >= v22) {
      goto LABEL_28;
    }
    unint64_t v27 = *(void *)(v15 + 8 * v18);
    ++v28;
    if (v27) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

id sub_100399DB4(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_10002F214(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _SetStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    int64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v14) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100399F58()
{
  v1 = v0;
  uint64_t v2 = type metadata accessor for FolderEntity();
  uint64_t v33 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_10002F214((uint64_t *)&unk_1006A4DF0);
  uint64_t v6 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v7;
    return result;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 56);
  uint64_t v30 = v0;
  uint64_t v31 = v5 + 56;
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  int64_t v32 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v32) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v31 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v31 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v32) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v31 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    uint64_t v21 = *(void *)(v33 + 72);
    sub_1003A1784(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FolderEntity);
    Hasher.init(_seed:)();
    type metadata accessor for FolderID();
    sub_10039F3FC(&qword_10069C8B8, (void (*)(uint64_t))&type metadata accessor for FolderID);
    dispatch thunk of Hashable.hash(into:)();
    type metadata accessor for URL();
    sub_10039F3FC((unint64_t *)&unk_10069BA10, (void (*)(uint64_t))&type metadata accessor for URL);
    dispatch thunk of Hashable.hash(into:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Hasher._combine(_:)(v4[*(int *)(v2 + 32)]);
    Hasher._combine(_:)(v4[*(int *)(v2 + 36)]);
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = sub_1003A171C((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21, (uint64_t (*)(void))type metadata accessor for FolderEntity);
    ++*(void *)(v7 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v32)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    v1 = v30;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v31 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v32) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v31 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10039A3DC()
{
  v1 = v0;
  uint64_t v2 = *v0;
  sub_10002F214((uint64_t *)&unk_1006A4D80);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v9) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v12;
    if (!v20)
    {
      int64_t v12 = v19 + 1;
      if (v19 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v12);
      if (!v20)
      {
        int64_t v12 = v19 + 2;
        if (v19 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v20 = *(void *)(v6 + 8 * v12);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_24:
    sub_100033188(*(void *)(v2 + 48) + 40 * v18, (uint64_t)v29);
    uint64_t result = AnyHashable._rawHashValue(seed:)(*(void *)(v4 + 40));
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v10 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v23) & ~*(void *)(v10 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v10 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v13 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    uint64_t v14 = *(void *)(v4 + 48) + 40 * v13;
    long long v15 = v29[0];
    long long v16 = v29[1];
    *(void *)(v14 + 32) = v30;
    *(_OWORD *)uint64_t v14 = v15;
    *(_OWORD *)(v14 + 16) = v16;
    ++*(void *)(v4 + 16);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v12 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v12);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10039A670()
{
  v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_10002F214(&qword_1006A4DE0);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  uint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_10039F3FC((unint64_t *)&qword_1006A4DD0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10039AA20()
{
  v1 = v0;
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_10002F214(&qword_1006A4C98);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  uint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_10039F3FC(&qword_1006A4C80, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10039ADD0()
{
  v1 = v0;
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_10002F214(&qword_10069BA08);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  uint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_10039F3FC((unint64_t *)&unk_10069BA10, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10039B180()
{
  v1 = v0;
  uint64_t v2 = *v0;
  sub_10002F214(&qword_1006A4CE0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *uint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10039B430()
{
  v1 = v0;
  uint64_t v2 = *v0;
  sub_10002F214(&qword_1006A4DC0);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = static Hasher._hash(seed:_:)();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10039B694()
{
  v1 = v0;
  uint64_t v2 = _s3TagVMa();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  int64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_10002F214(&qword_1006A4D00);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_24:
    uint64_t *v1 = v7;
    return result;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v9 = v6 + 56;
  uint64_t v10 = -1;
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  unint64_t v11 = v10 & *(void *)(v6 + 56);
  int64_t v12 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v14 << 6);
      goto LABEL_6;
    }
    int64_t v17 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v17 >= v12) {
      goto LABEL_22;
    }
    unint64_t v18 = *(void *)(v9 + 8 * v17);
    ++v14;
    if (!v18)
    {
      int64_t v14 = v17 + 1;
      if (v17 + 1 >= v12) {
        goto LABEL_22;
      }
      unint64_t v18 = *(void *)(v9 + 8 * v14);
      if (!v18)
      {
        int64_t v14 = v17 + 2;
        if (v17 + 2 >= v12) {
          goto LABEL_22;
        }
        unint64_t v18 = *(void *)(v9 + 8 * v14);
        if (!v18) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v14 << 6);
LABEL_6:
    sub_1003A1784(*(void *)(v6 + 48) + *(void *)(v3 + 72) * v16, (uint64_t)v5, (uint64_t (*)(void))_s3TagVMa);
    uint64_t result = sub_1003975FC((uint64_t)v5, v7);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_22:
    uint64_t result = swift_release_n();
    goto LABEL_24;
  }
  unint64_t v18 = *(void *)(v9 + 8 * v19);
  if (v18)
  {
    int64_t v14 = v19;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v14 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v14 >= v12) {
      goto LABEL_22;
    }
    unint64_t v18 = *(void *)(v9 + 8 * v14);
    ++v19;
    if (v18) {
      goto LABEL_21;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_10039B8D0()
{
  v1 = v0;
  uint64_t v2 = type metadata accessor for AccountEntity();
  uint64_t v33 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_10002F214((uint64_t *)&unk_1006A4D90);
  uint64_t v6 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v7;
    return result;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 56);
  unint64_t v30 = v0;
  uint64_t v31 = v5 + 56;
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  int64_t v32 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v32) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v31 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v31 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v32) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v31 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    uint64_t v21 = *(void *)(v33 + 72);
    sub_1003A1784(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for AccountEntity);
    Hasher.init(_seed:)();
    type metadata accessor for AccountID();
    sub_10039F3FC((unint64_t *)&unk_1006A27E0, (void (*)(uint64_t))&type metadata accessor for AccountID);
    dispatch thunk of Hashable.hash(into:)();
    type metadata accessor for URL();
    sub_10039F3FC((unint64_t *)&unk_10069BA10, (void (*)(uint64_t))&type metadata accessor for URL);
    dispatch thunk of Hashable.hash(into:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = sub_1003A171C((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21, (uint64_t (*)(void))type metadata accessor for AccountEntity);
    ++*(void *)(v7 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v32)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    v1 = v30;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v31 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v32) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v31 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10039BD10(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v5 = a1;
    char v6 = __CocoaSet.contains(_:)();

    if (v6)
    {
      uint64_t v7 = sub_10039C784();
      swift_bridgeObjectRelease();
      return v7;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::Int v8 = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v9 = NSObject._rawHashValue(seed:)(v8);
  uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    goto LABEL_12;
  }
  type metadata accessor for UIAppIntentInteraction();
  id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
  char v13 = static NSObject.== infix(_:_:)();

  if ((v13 & 1) == 0)
  {
    uint64_t v14 = ~v10;
    do
    {
      unint64_t v11 = (v11 + 1) & v14;
      if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        goto LABEL_12;
      }
      id v15 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
      char v16 = static NSObject.== infix(_:_:)();
    }
    while ((v16 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v2;
  uint64_t v20 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100399DB4(&qword_10069B9E8);
    uint64_t v18 = v20;
  }
  uint64_t v7 = *(void *)(*(void *)(v18 + 48) + 8 * v11);
  sub_10039CDC4(v11);
  *uint64_t v2 = v20;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_10039BEE0(void *a1)
{
  return sub_10039BEFC(a1, (unint64_t *)&qword_1006A49F0, (uint64_t)ICHashtag_ptr, (uint64_t *)&unk_1006A4D70);
}

uint64_t sub_10039BEFC(void *a1, unint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7 = v4;
  uint64_t v9 = *v4;
  if ((*v4 & 0xC000000000000001) != 0)
  {
    if (v9 < 0) {
      uint64_t v10 = *v4;
    }
    else {
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v11 = a1;
    char v12 = __CocoaSet.contains(_:)();

    if (v12)
    {
      uint64_t v13 = sub_10039C92C(v10, (uint64_t)v11, a4, a2);
      swift_bridgeObjectRelease();
      return v13;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::Int v14 = *(void *)(v9 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v15 = NSObject._rawHashValue(seed:)(v14);
  uint64_t v16 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v17 = v15 & ~v16;
  if (((*(void *)(v9 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
    goto LABEL_15;
  }
  sub_100031418(0, a2);
  id v18 = *(id *)(*(void *)(v9 + 48) + 8 * v17);
  char v19 = static NSObject.== infix(_:_:)();

  if ((v19 & 1) == 0)
  {
    uint64_t v20 = ~v16;
    do
    {
      unint64_t v17 = (v17 + 1) & v20;
      if (((*(void *)(v9 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
        goto LABEL_15;
      }
      id v21 = *(id *)(*(void *)(v9 + 48) + 8 * v17);
      char v22 = static NSObject.== infix(_:_:)();
    }
    while ((v22 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v24 = *v7;
  uint64_t v26 = *v7;
  *uint64_t v7 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100399DB4(a4);
    uint64_t v24 = v26;
  }
  uint64_t v13 = *(void *)(*(void *)(v24 + 48) + 8 * v17);
  sub_10039CDC4(v17);
  *uint64_t v7 = v26;
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_10039C0E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for Participant();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::Int v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_10039F3FC(&qword_1006A4CD8, (void (*)(uint64_t))&type metadata accessor for Participant);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    uint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    Swift::Int v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_10039F3FC(&qword_1006A4CE8, (void (*)(uint64_t))&type metadata accessor for Participant);
      char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    id v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    *id v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100399558((uint64_t (*)(void))&type metadata accessor for Participant, &qword_1006A4CD0);
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_10039CAD8(v12, (uint64_t (*)(void))&type metadata accessor for Participant, &qword_1006A4CD8, (void (*)(uint64_t))&type metadata accessor for Participant, (uint64_t)&protocol conformance descriptor for Participant);
    *id v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

uint64_t sub_10039C428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::Int v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_10039F3FC(&qword_1006A4C80, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    uint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    Swift::Int v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_10039F3FC((unint64_t *)&unk_1006A4C88, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    id v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    *id v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100399558((uint64_t (*)(void))&type metadata accessor for IndexPath, &qword_1006A4C98);
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_10039CAD8(v12, (uint64_t (*)(void))&type metadata accessor for IndexPath, &qword_1006A4C80, (void (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    *id v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

uint64_t sub_10039C768(void *a1)
{
  return sub_10039BEFC(a1, (unint64_t *)&qword_1006A4DB0, (uint64_t)ICNoteEditorViewController_ptr, (uint64_t *)&unk_10069BBA0);
}

uint64_t sub_10039C784()
{
  v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = __CocoaSet.count.getter();
  uint64_t v3 = swift_unknownObjectRetain();
  Swift::Int v4 = sub_100395218(v3, v2, &qword_10069B9E8, (void (*)(void))&type metadata accessor for UIAppIntentInteraction);
  Swift::Int v16 = v4;
  Swift::Int v5 = *(void *)(v4 + 40);
  swift_retain();
  Swift::Int v6 = NSObject._rawHashValue(seed:)(v5);
  uint64_t v7 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    type metadata accessor for UIAppIntentInteraction();
    id v9 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
    char v10 = static NSObject.== infix(_:_:)();

    if (v10)
    {
LABEL_6:
      swift_release();
      uint64_t v14 = *(void *)(*(void *)(v4 + 48) + 8 * v8);
      sub_10039CDC4(v8);
      if (static NSObject.== infix(_:_:)())
      {
        Swift::Int *v1 = v16;
        return v14;
      }
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v7;
      while (1)
      {
        unint64_t v8 = (v8 + 1) & v11;
        if (((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
          break;
        }
        id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
        char v13 = static NSObject.== infix(_:_:)();

        if (v13) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_10039C92C(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t v7 = v4;
  swift_bridgeObjectRelease();
  uint64_t v8 = __CocoaSet.count.getter();
  uint64_t v9 = swift_unknownObjectRetain();
  Swift::Int v10 = sub_100395414(v9, v8, a3, a4);
  Swift::Int v22 = v10;
  Swift::Int v11 = *(void *)(v10 + 40);
  swift_retain();
  Swift::Int v12 = NSObject._rawHashValue(seed:)(v11);
  uint64_t v13 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v14 = v12 & ~v13;
  if ((*(void *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
  {
    sub_100031418(0, a4);
    id v15 = *(id *)(*(void *)(v10 + 48) + 8 * v14);
    char v16 = static NSObject.== infix(_:_:)();

    if (v16)
    {
LABEL_6:
      swift_release();
      uint64_t v20 = *(void *)(*(void *)(v10 + 48) + 8 * v14);
      sub_10039CDC4(v14);
      if (static NSObject.== infix(_:_:)())
      {
        *uint64_t v7 = v22;
        return v20;
      }
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v13;
      while (1)
      {
        unint64_t v14 = (v14 + 1) & v17;
        if (((*(void *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v10 + 48) + 8 * v14);
        char v19 = static NSObject.== infix(_:_:)();

        if (v19) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_10039CAD8(int64_t a1, uint64_t (*a2)(void), unint64_t *a3, void (*a4)(uint64_t), uint64_t a5)
{
  v43 = a4;
  uint64_t v44 = a5;
  v42 = a3;
  uint64_t v7 = a2(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t result = __chkstk_darwin(v7);
  Swift::Int v11 = (char *)&v38 - v10;
  uint64_t v12 = *v5;
  uint64_t v13 = *v5 + 56;
  uint64_t v14 = -1 << *(unsigned char *)(*v5 + 32);
  unint64_t v15 = (a1 + 1) & ~v14;
  if (((1 << v15) & *(void *)(v13 + 8 * (v15 >> 6))) != 0)
  {
    uint64_t v38 = v5;
    uint64_t v16 = ~v14;
    swift_retain();
    uint64_t v17 = _HashTable.previousHole(before:)();
    uint64_t v18 = v12;
    if ((*(void *)(v13 + 8 * (v15 >> 6)) & (1 << v15)) != 0)
    {
      unint64_t v40 = (v17 + 1) & v16;
      uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      uint64_t v19 = v8 + 16;
      BOOL v39 = v20;
      uint64_t v45 = *(void *)(v19 + 56);
      uint64_t v41 = v19;
      id v21 = (void (**)(char *, uint64_t))(v19 - 8);
      do
      {
        uint64_t v22 = v13;
        int64_t v23 = v45 * v15;
        v39(v11, *(void *)(v18 + 48) + v45 * v15, v7);
        uint64_t v24 = v18;
        sub_10039F3FC(v42, v43);
        uint64_t v25 = dispatch thunk of Hashable._rawHashValue(seed:)();
        (*v21)(v11, v7);
        unint64_t v26 = v25 & v16;
        if (a1 >= (uint64_t)v40)
        {
          if (v26 >= v40 && a1 >= (uint64_t)v26)
          {
LABEL_16:
            uint64_t v18 = v24;
            uint64_t v29 = *(void *)(v24 + 48);
            int64_t v30 = v45 * a1;
            unint64_t v31 = v29 + v45 * a1;
            unint64_t v32 = v29 + v23 + v45;
            if (v45 * a1 < v23 || v31 >= v32)
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v15;
            }
            else
            {
              a1 = v15;
              if (v30 != v23)
              {
                swift_arrayInitWithTakeBackToFront();
                a1 = v15;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v26 >= v40 || a1 >= (uint64_t)v26)
        {
          goto LABEL_16;
        }
        uint64_t v18 = v24;
LABEL_5:
        unint64_t v15 = (v15 + 1) & v16;
        uint64_t v13 = v22;
      }
      while (((*(void *)(v22 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) != 0);
    }
    *(void *)(v13 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    Swift::Int v5 = v38;
  }
  else
  {
    *(void *)(v13 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v34 = *v5;
  uint64_t v35 = *(void *)(*v5 + 16);
  BOOL v36 = __OFSUB__(v35, 1);
  uint64_t v37 = v35 - 1;
  if (v36)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v34 + 16) = v37;
    ++*(_DWORD *)(v34 + 36);
  }
  return result;
}

unint64_t sub_10039CDC4(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(v3 + 40);
        id v11 = *(id *)(*(void *)(v3 + 48) + 8 * v6);
        Swift::Int v12 = NSObject._rawHashValue(seed:)(v10);

        Swift::Int v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v2 >= v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(v3 + 48);
            uint64_t v17 = (void *)(v16 + 8 * v2);
            uint64_t v18 = (void *)(v16 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v17 >= v18 + 1))
            {
              *uint64_t v17 = *v18;
              int64_t v2 = v6;
            }
          }
        }
        else if (v13 >= v9 || v2 >= v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_10039CF68(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v10 = *(void *)(v3 + 48);
        id v11 = (void *)(v10 + 8 * v6);
        uint64_t v12 = static Hasher._hash(seed:_:)() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_16:
            unint64_t v15 = (void *)(v10 + 8 * v2);
            if (v2 != v6 || (int64_t v2 = v6, v15 >= v11 + 1))
            {
              *unint64_t v15 = *v11;
              int64_t v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v16 = *(void *)(v3 + 16);
  BOOL v17 = __OFSUB__(v16, 1);
  uint64_t v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_10039D0F0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    unint64_t v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_10002F214((uint64_t *)&unk_1006A4D70);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  unint64_t v9 = (void *)result;
  uint64_t v29 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v29[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v29[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v29[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    Swift::Int v18 = v9[5];
    id v19 = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = NSObject._rawHashValue(seed:)(v18);
    uint64_t v20 = -1 << *((unsigned char *)v9 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(void *)(v9[6] + 8 * v23) = v19;
    ++v9[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v29[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v29[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10039D350(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a1;
  uint64_t v7 = type metadata accessor for Participant();
  uint64_t v37 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  sub_10002F214(&qword_1006A4CD0);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  uint64_t v10 = result;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v34;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  uint64_t v35 = (uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32);
  uint64_t v36 = v37 + 16;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v33)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v34[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v33) {
          goto LABEL_37;
        }
        unint64_t v18 = v34[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v33) {
            goto LABEL_37;
          }
          unint64_t v18 = v34[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v33) {
              goto LABEL_37;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_37;
                }
                unint64_t v18 = v34[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = a4;
    uint64_t v21 = *(void *)(a4 + 48);
    uint64_t v22 = *(void *)(v37 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v9, v21 + v22 * v16, v7);
    sub_10039F3FC(&qword_1006A4CD8, (void (*)(uint64_t))&type metadata accessor for Participant);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v23 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v14 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v14 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = (*v35)(*(void *)(v10 + 48) + v26 * v22, v9, v7);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v20;
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10039D6DC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a1;
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v37 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  sub_10002F214(&qword_1006A4C98);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  uint64_t v10 = result;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v34;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  uint64_t v35 = (uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32);
  uint64_t v36 = v37 + 16;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v33)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v34[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v33) {
          goto LABEL_37;
        }
        unint64_t v18 = v34[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v33) {
            goto LABEL_37;
          }
          unint64_t v18 = v34[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v33) {
              goto LABEL_37;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_37;
                }
                unint64_t v18 = v34[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = a4;
    uint64_t v21 = *(void *)(a4 + 48);
    uint64_t v22 = *(void *)(v37 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v9, v21 + v22 * v16, v7);
    sub_10039F3FC(&qword_1006A4C80, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v23 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v14 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v14 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = (*v35)(*(void *)(v10 + 48) + v26 * v22, v9, v7);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v20;
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10039DA68(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_10039DBF0((unint64_t *)((char *)&v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, a2, v3);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_10039DBF0((unint64_t *)v8, v5, a2, v3);
    swift_release();
    swift_slowDealloc();
  }
  return v7;
}

uint64_t sub_10039DBF0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v66 = a2;
  v69 = a1;
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v66 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v66 - v13;
  uint64_t result = __chkstk_darwin(v12);
  unint64_t v18 = (char *)&v66 - v16;
  unint64_t v19 = *(void *)(a3 + 16);
  unint64_t v20 = *(void *)(a4 + 16);
  uint64_t v81 = v7 + 16;
  uint64_t v78 = a3;
  uint64_t v79 = a4;
  uint64_t v76 = v7;
  if (v20 >= v19)
  {
    uint64_t v73 = 0;
    int64_t v43 = 0;
    uint64_t v44 = *(void *)(a3 + 56);
    int64_t v68 = a3 + 56;
    uint64_t v45 = 1 << *(unsigned char *)(a3 + 32);
    if (v45 < 64) {
      uint64_t v46 = ~(-1 << v45);
    }
    else {
      uint64_t v46 = -1;
    }
    unint64_t v47 = v46 & v44;
    int64_t v70 = (unint64_t)(v45 + 63) >> 6;
    uint64_t v77 = a4 + 56;
    uint64_t v48 = (void (**)(char *, uint64_t))(v7 + 8);
    v80 = v17;
    if ((v46 & v44) != 0) {
      goto LABEL_39;
    }
LABEL_40:
    int64_t v50 = v43 + 1;
    if (!__OFADD__(v43, 1))
    {
      if (v50 < v70)
      {
        unint64_t v51 = *(void *)(v68 + 8 * v50);
        int64_t v52 = v43 + 1;
        if (!v51)
        {
          int64_t v52 = v43 + 2;
          if (v43 + 2 >= v70) {
            goto LABEL_62;
          }
          unint64_t v51 = *(void *)(v68 + 8 * v52);
          if (!v51)
          {
            int64_t v52 = v43 + 3;
            if (v43 + 3 >= v70) {
              goto LABEL_62;
            }
            unint64_t v51 = *(void *)(v68 + 8 * v52);
            if (!v51)
            {
              uint64_t v53 = v43 + 4;
              if (v43 + 4 >= v70) {
                goto LABEL_62;
              }
              unint64_t v51 = *(void *)(v68 + 8 * v53);
              if (!v51)
              {
                while (1)
                {
                  int64_t v52 = v53 + 1;
                  if (__OFADD__(v53, 1)) {
                    goto LABEL_68;
                  }
                  if (v52 >= v70) {
                    goto LABEL_62;
                  }
                  unint64_t v51 = *(void *)(v68 + 8 * v52);
                  ++v53;
                  if (v51) {
                    goto LABEL_53;
                  }
                }
              }
              int64_t v52 = v43 + 4;
            }
          }
        }
LABEL_53:
        uint64_t v74 = (v51 - 1) & v51;
        int64_t v75 = v52;
        for (unint64_t i = __clz(__rbit64(v51)) + (v52 << 6); ; unint64_t i = __clz(__rbit64(v47)) | (v43 << 6))
        {
          uint64_t v54 = *(void *)(a3 + 48);
          uint64_t v55 = *(void *)(v7 + 72);
          unint64_t v72 = i;
          uint64_t v56 = *(void (**)(void (**)(char *, uint64_t), unint64_t, uint64_t))(v7 + 16);
          v56(v80, v54 + v55 * i, v6);
          sub_10039F3FC(&qword_1006A4C80, (void (*)(uint64_t))&type metadata accessor for IndexPath);
          uint64_t v57 = dispatch thunk of Hashable._rawHashValue(seed:)();
          uint64_t v58 = -1 << *(unsigned char *)(a4 + 32);
          unint64_t v59 = v57 & ~v58;
          if ((*(void *)(v77 + ((v59 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v59))
          {
            v71 = (char *)((unint64_t)v48 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
            uint64_t v60 = ~v58;
            while (1)
            {
              v56((void (**)(char *, uint64_t))v11, *(void *)(v79 + 48) + v59 * v55, v6);
              sub_10039F3FC((unint64_t *)&unk_1006A4C88, (void (*)(uint64_t))&type metadata accessor for IndexPath);
              char v61 = dispatch thunk of static Equatable.== infix(_:_:)();
              v62 = *v48;
              (*v48)(v11, v6);
              if (v61) {
                break;
              }
              unint64_t v59 = (v59 + 1) & v60;
              if (((*(void *)(v77 + ((v59 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v59) & 1) == 0)
              {
                a3 = v78;
                a4 = v79;
                int64_t v43 = v75;
                uint64_t v7 = v76;
                v63 = v80;
                unint64_t v47 = v74;
                goto LABEL_60;
              }
            }
            uint64_t result = ((uint64_t (*)(void, uint64_t))v62)(v80, v6);
            *(unint64_t *)((char *)v69 + ((v72 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v72;
            unint64_t v47 = v74;
            BOOL v28 = __OFADD__(v73++, 1);
            a3 = v78;
            a4 = v79;
            int64_t v43 = v75;
            uint64_t v7 = v76;
            if (v28) {
              goto LABEL_66;
            }
            if (!v74) {
              goto LABEL_40;
            }
          }
          else
          {
            v62 = *v48;
            a3 = v78;
            int64_t v43 = v75;
            uint64_t v7 = v76;
            v63 = v80;
            unint64_t v47 = v74;
LABEL_60:
            uint64_t result = ((uint64_t (*)(void, uint64_t))v62)(v63, v6);
            if (!v47) {
              goto LABEL_40;
            }
          }
LABEL_39:
          uint64_t v74 = (v47 - 1) & v47;
          int64_t v75 = v43;
        }
      }
      goto LABEL_62;
    }
  }
  else
  {
    int64_t v21 = 0;
    uint64_t v22 = *(void *)(a4 + 56);
    uint64_t v67 = a4 + 56;
    uint64_t v23 = 1 << *(unsigned char *)(a4 + 32);
    if (v23 < 64) {
      uint64_t v24 = ~(-1 << v23);
    }
    else {
      uint64_t v24 = -1;
    }
    unint64_t v25 = v24 & v22;
    int64_t v68 = (unint64_t)(v23 + 63) >> 6;
    unint64_t v72 = v7 + 32;
    uint64_t v73 = 0;
    uint64_t v77 = a3 + 56;
    v80 = (void (**)(char *, uint64_t))(v7 + 8);
    v71 = (char *)&v66 - v16;
    if ((v24 & v22) != 0) {
      goto LABEL_9;
    }
LABEL_10:
    int64_t v30 = v21 + 1;
    if (!__OFADD__(v21, 1))
    {
      if (v30 < v68)
      {
        unint64_t v31 = *(void *)(v67 + 8 * v30);
        int64_t v32 = v21 + 1;
        if (v31) {
          goto LABEL_23;
        }
        int64_t v32 = v21 + 2;
        if (v21 + 2 >= v68) {
          goto LABEL_62;
        }
        unint64_t v31 = *(void *)(v67 + 8 * v32);
        if (v31) {
          goto LABEL_23;
        }
        int64_t v32 = v21 + 3;
        if (v21 + 3 >= v68) {
          goto LABEL_62;
        }
        unint64_t v31 = *(void *)(v67 + 8 * v32);
        if (v31)
        {
LABEL_23:
          uint64_t v74 = (v31 - 1) & v31;
          int64_t v75 = v32;
          for (unint64_t j = __clz(__rbit64(v31)) + (v32 << 6); ; unint64_t j = __clz(__rbit64(v25)) | (v21 << 6))
          {
            uint64_t v34 = *(void *)(v7 + 72);
            uint64_t v35 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
            v35(v18, *(void *)(a4 + 48) + v34 * j, v6);
            (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v14, v18, v6);
            sub_10039F3FC(&qword_1006A4C80, (void (*)(uint64_t))&type metadata accessor for IndexPath);
            uint64_t v36 = v14;
            uint64_t v37 = dispatch thunk of Hashable._rawHashValue(seed:)();
            uint64_t v38 = -1 << *(unsigned char *)(a3 + 32);
            unint64_t v39 = v37 & ~v38;
            if ((*(void *)(v77 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39))
            {
              int64_t v70 = (unint64_t)v80 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
              uint64_t v40 = ~v38;
              while (1)
              {
                v35(v11, *(void *)(v78 + 48) + v39 * v34, v6);
                sub_10039F3FC((unint64_t *)&unk_1006A4C88, (void (*)(uint64_t))&type metadata accessor for IndexPath);
                char v41 = dispatch thunk of static Equatable.== infix(_:_:)();
                v42 = *v80;
                (*v80)(v11, v6);
                if (v41) {
                  break;
                }
                unint64_t v39 = (v39 + 1) & v40;
                if (((*(void *)(v77 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39) & 1) == 0)
                {
                  a3 = v78;
                  int64_t v21 = v75;
                  uint64_t v7 = v76;
                  uint64_t v14 = v36;
                  unint64_t v18 = v71;
                  goto LABEL_30;
                }
              }
              uint64_t result = ((uint64_t (*)(char *, uint64_t))v42)(v36, v6);
              uint64_t v26 = (v39 >> 3) & 0x1FFFFFFFFFFFFFF8;
              uint64_t v27 = 1 << v39;
              uint64_t v14 = v36;
              *(unint64_t *)((char *)v69 + v26) |= v27;
              unint64_t v25 = v74;
              BOOL v28 = __OFADD__(v73++, 1);
              a3 = v78;
              a4 = v79;
              int64_t v21 = v75;
              uint64_t v7 = v76;
              unint64_t v18 = v71;
              if (v28) {
                goto LABEL_65;
              }
              if (!v74) {
                goto LABEL_10;
              }
            }
            else
            {
              v42 = *v80;
              int64_t v21 = v75;
              uint64_t v7 = v76;
              uint64_t v14 = v36;
              unint64_t v18 = v71;
LABEL_30:
              unint64_t v25 = v74;
              uint64_t result = ((uint64_t (*)(char *, uint64_t))v42)(v14, v6);
              a4 = v79;
              if (!v25) {
                goto LABEL_10;
              }
            }
LABEL_9:
            uint64_t v74 = (v25 - 1) & v25;
            int64_t v75 = v21;
          }
        }
        uint64_t v33 = v21 + 4;
        if (v21 + 4 < v68)
        {
          unint64_t v31 = *(void *)(v67 + 8 * v33);
          if (v31)
          {
            int64_t v32 = v21 + 4;
            goto LABEL_23;
          }
          while (1)
          {
            int64_t v32 = v33 + 1;
            if (__OFADD__(v33, 1)) {
              goto LABEL_67;
            }
            if (v32 >= v68) {
              break;
            }
            unint64_t v31 = *(void *)(v67 + 8 * v32);
            ++v33;
            if (v31) {
              goto LABEL_23;
            }
          }
        }
      }
LABEL_62:
      uint64_t v64 = v66;
      uint64_t v65 = v73;
      swift_retain();
      return sub_10039D6DC(v69, v64, v65, a3);
    }
    __break(1u);
  }
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
  return result;
}

uint64_t sub_10039E3FC(unint64_t a1, uint64_t a2, char a3, unint64_t a4, uint64_t a5, char a6)
{
  uint64_t result = 0;
  if (a4 == a1
    && ((a1 >> 8) & 1) == ((a4 >> 8) & 1)
    && ((a1 >> 16) & 1) == ((a4 >> 16) & 1)
    && ((a1 >> 24) & 1) == ((a4 >> 24) & 1)
    && (BYTE4(a1) & 1) == (BYTE4(a4) & 1)
    && ((a1 >> 40) & 1) == ((a4 >> 40) & 1))
  {
    if (a3)
    {
      if (a6) {
        return 1;
      }
    }
    else if ((a6 & 1) == 0 && a2 == a5)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

void *sub_10039E48C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100169C2C(0, v1, 0);
    uint64_t v3 = a1 + 32;
    do
    {
      sub_10038FD88(v3);
      uint64_t v5 = v4;
      unint64_t v7 = _swiftEmptyArrayStorage[2];
      unint64_t v6 = _swiftEmptyArrayStorage[3];
      if (v7 >= v6 >> 1) {
        sub_100169C2C(v6 > 1, v7 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v7 + 1;
      _swiftEmptyArrayStorage[v7 + 4] = v5;
      v3 += 32;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

void *sub_10039E56C(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v5);
      unint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      id v9 = [a2 objectWithID:v6];
      self;
      uint64_t v10 = swift_dynamicCastObjCClass();

      if (v10)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
      }
      ++v5;
      if (v8 == v4) {
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void *sub_10039E718(unint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6 = a1;
  if (a1 >> 62) {
    goto LABEL_23;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v7; uint64_t v7 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v26 = v6;
    unint64_t v8 = v6 & 0xC000000000000001;
    uint64_t v9 = 4;
    uint64_t v10 = &selRef_isShared;
    while (1)
    {
      id v11 = v8 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v6 + 8 * v9);
      uint64_t v12 = v9 - 3;
      if (__OFADD__(v9 - 4, 1)) {
        break;
      }
      BOOL v28 = v11;
      id v13 = [a2 v10[481] v11];
      self;
      uint64_t v14 = (void *)swift_dynamicCastObjCClass();
      if (v14 && (id v15 = [v14 standardizedContent]) != 0)
      {
        uint64_t v16 = v15;
        unint64_t v17 = v8;
        uint64_t v18 = v7;
        unint64_t v19 = a2;
        uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v22 = v21;

        if (v20 == a3 && v22 == a4)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          return v28;
        }
        char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();

        if (v24)
        {
          swift_bridgeObjectRelease();
          return v28;
        }
        id v13 = v28;
        a2 = v19;
        uint64_t v7 = v18;
        unint64_t v6 = v26;
        unint64_t v8 = v17;
        uint64_t v10 = &selRef_isShared;
      }
      else
      {
      }
      ++v9;
      if (v12 == v7) {
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
  }
LABEL_24:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10039E92C(uint64_t a1, int a2)
{
  if (a2 != 1)
  {
    double v3 = 16.0;
    if ((a2 & 0x1000000) == 0)
    {
      if (objc_msgSend(self, "ic_isVision")) {
        double v3 = 12.0;
      }
      else {
        double v3 = 0.0;
      }
    }
    uint64_t v4 = self;
    id v5 = [v4 estimatedDimension:48.0];
    id v6 = [v4 estimatedDimension:34.0];
    uint64_t v7 = self;
    id v8 = [v7 sizeWithWidthDimension:v5 heightDimension:v6];

    id v9 = [self itemWithLayoutSize:v8];
    id v10 = [v4 fractionalWidthDimension:1.0];
    id v11 = [v4 estimatedDimension:34.0];
    id v12 = [v7 sizeWithWidthDimension:v10 heightDimension:v11];

    id v13 = self;
    sub_10002F214(&qword_10069BA00);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_100529F20;
    *(void *)(v14 + 32) = v9;
    specialized Array._endMutation()();
    sub_100031418(0, (unint64_t *)&qword_1006A4CB8);
    id v15 = v9;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v17 = [v13 horizontalGroupWithLayoutSize:v12 subitems:isa];

    id v18 = [self fixedSpacing:8.0];
    [v17 setInterItemSpacing:v18];

    id v19 = [self sectionWithGroup:v17];
    [v19 setContentInsets:v3, v3, v3, v3];
    [v19 setInterGroupSpacing:8.0];
    id v20 = [objc_allocWithZone((Class)UICollectionViewCompositionalLayout) initWithSection:v19];
    goto LABEL_20;
  }
  uint64_t v2 = a1;
  if (*(void *)(a1 + 16))
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_10002F214((uint64_t *)&unk_1006A4CC0);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_100524D10;
    *(void *)(v2 + 32) = 0;
  }
  uint64_t v21 = self;
  uint64_t v22 = (SEL *)&selRef_estimatedDimension_;
  id v8 = [v21 estimatedDimension:34.0];
  uint64_t v23 = *(void *)(v2 + 16);
  if (v23)
  {
    char v24 = self;
    unint64_t v25 = self;
    swift_bridgeObjectRetain();
    uint64_t v26 = 0;
    double v27 = 0.0;
    do
    {
      double v28 = *(double *)(v2 + 8 * v26 + 32);
      id v29 = [v21 absoluteDimension:v28];
      id v30 = v8;
      id v31 = [v24 sizeWithWidthDimension:v29 heightDimension:v8];
      id v32 = [v25 itemWithLayoutSize:v31];

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      double v27 = v27 + v28;
      ++v26;
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      id v8 = v30;
    }
    while (v23 != v26);
    swift_bridgeObjectRelease();
    uint64_t v22 = (SEL *)&selRef_estimatedDimension_;
  }
  else
  {
    double v27 = 0.0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v35 = v40 - 1;
    if (!__OFSUB__(v40, 1)) {
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v34 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v35 = v34 - 1;
    if (!__OFSUB__(v34, 1))
    {
LABEL_19:
      id v15 = [v21 absoluteDimension:v27 + (double)v35 * 8.0];
      id v17 = [v21 *v22:46.0];
      id v36 = [self sizeWithWidthDimension:v15 heightDimension:v17];
      uint64_t v37 = self;
      sub_100031418(0, (unint64_t *)&qword_1006A4CB8);
      Class v38 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v12 = [v37 horizontalGroupWithLayoutSize:v36 subitems:v38];

      id v39 = [self fixedSpacing:8.0];
      [v12 setInterItemSpacing:v39];

      id v19 = [self sectionWithGroup:v12];
      [v19 setContentInsets:6.0, 20.0, 6.0, 20.0];
      [v19 setOrthogonalScrollingBehavior:1];
      id v20 = [objc_allocWithZone((Class)UICollectionViewCompositionalLayout) initWithSection:v19];

LABEL_20:
      return (uint64_t)v20;
    }
  }
  __break(1u);
  return result;
}

void sub_10039EFEC()
{
  int64_t v1 = v0;
  v16.receiver = v0;
  v16.super_class = (Class)swift_getObjectType();
  if ((objc_msgSendSuper2(&v16, "isEditing") & 1) == 0)
  {
    uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagDataSource];
    if (v2)
    {
      id v3 = [v2 collectionViewDiffableDataSource];
      if (v3)
      {
        uint64_t v4 = v3;
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        id v6 = [v4 itemIdentifierForIndexPath:isa];

        if (v6)
        {
          _bridgeAnyObjectToAny(_:)();
          swift_unknownObjectRelease();
        }
        else
        {
          memset(v13, 0, sizeof(v13));
        }
        sub_10002F1B0((uint64_t)v13, (uint64_t)v14, &qword_10069B4D0);
        if (v15)
        {
          sub_100031418(0, (unint64_t *)&qword_1006A0020);
          if (swift_dynamicCast())
          {
            self;
            if (swift_dynamicCastObjCClass())
            {
              sub_100391324();
            }
            else
            {
              self;
              if (swift_dynamicCastObjCClass())
              {
                [*(id *)&v1[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelection] setMode:1];
              }
              else
              {
                self;
                uint64_t v7 = swift_dynamicCastObjCClass();
                if (v7)
                {
                  uint64_t v8 = v7;
                  uint64_t v9 = OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelection;
                  id v10 = *(void **)&v1[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelection];
                  id v11 = v12;
                  [v10 setMode:0];
                  [*(id *)&v1[v9] addObjectID:v8 toExcluded:0];
                }
              }
            }
            sub_10038C968(0, 0, 1);
          }
          else
          {
          }
        }
        else
        {

          sub_10002B754((uint64_t)v14, &qword_10069B4D0);
        }
      }
    }
  }
}

uint64_t sub_10039F22C()
{
  uint64_t v1 = type metadata accessor for UICellConfigurationState();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = (void *)(v0 + OBJC_IVAR____TtC11MobileNotes17TagCollectionView_accessibilityProvider);
  swift_beginAccess();
  uint64_t v6 = v5[3];
  if (v6)
  {
    id v7 = [*sub_10015E154(v5, v6) _bridgedConfigurationState];
    static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

    char v8 = UICellConfigurationState.isEditing.getter();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    char v8 = 0;
  }
  return v8 & 1;
}

void sub_10039F360(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a1 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10039F3B8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10039F3F0()
{
}

uint64_t sub_10039F3FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_10039F444(uint64_t a1)
{
  return sub_1003906D0(a1, v1);
}

uint64_t sub_10039F44C()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10039F518(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  type metadata accessor for IndexPath();

  return sub_100390A0C(a1, a2, a3);
}

uint64_t sub_10039F5B4()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10039F5EC()
{
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10039F62C()
{
  return sub_1003905AC(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_10039F638()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10039F64C()
{
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 72)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_10039F6B4()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10039F6EC(uint64_t a1, void *a2)
{
  sub_10039150C(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_10039F6F4()
{
  uint64_t v1 = v0;
  v28.receiver = v0;
  v28.super_class = (Class)swift_getObjectType();
  if (objc_msgSendSuper2(&v28, "isEditing")) {
    return 0;
  }
  uint64_t v3 = &v0[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_configuration];
  if (v0[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_configuration + 4] == 1)
  {
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v5 = [v0 cellForItemAtIndexPath:isa];

    if (v5)
    {
      type metadata accessor for TagCell();
      uint64_t v6 = swift_dynamicCastClass();
      if (v6
        && (uint64_t v7 = v6, (v8 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagDataSource]) != 0)
        && (id v9 = [v8 collectionViewDiffableDataSource]) != 0)
      {
        uint64_t v10 = v9;
        Class v11 = IndexPath._bridgeToObjectiveC()().super.isa;
        id v12 = [v10 itemIdentifierForIndexPath:v11];

        if (v12)
        {
          _bridgeAnyObjectToAny(_:)();
          swift_unknownObjectRelease();
        }
        else
        {
          memset(v25, 0, sizeof(v25));
        }
        sub_10002F1B0((uint64_t)v25, (uint64_t)v26, &qword_10069B4D0);
        if (v27)
        {
          sub_100031418(0, (unint64_t *)&qword_1006A0020);
          if (swift_dynamicCast())
          {
            id v14 = [self sharedItemIdentifier];
            char v15 = static NSObject.== infix(_:_:)();

            if (v15)
            {
              if (*(unsigned char *)(v7 + OBJC_IVAR___ICTagCell_isExcluded) != 1)
              {
                [*(id *)&v1[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelection] setMode:2];
                goto LABEL_31;
              }
              if (*v3 == 1)
              {
                [*(id *)&v1[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelection] setMode:1];
LABEL_31:
                sub_10038C968(0, 0, 1);

LABEL_34:
                return 0;
              }
            }
            self;
            uint64_t v16 = swift_dynamicCastObjCClass();
            if (v16)
            {
              uint64_t v17 = v16;
              char v18 = *(unsigned char *)(v7 + OBJC_IVAR___ICTagCell_isExcluded);
              uint64_t v19 = OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelection;
              id v20 = *(void **)&v1[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelection];
              id v21 = v24;
              if ((v18 & 1) == 0)
              {
                [v20 addObjectID:v17 toExcluded:1];
                sub_10038C968(0, 0, 1);

                goto LABEL_34;
              }
              [v20 removeObjectID:v17 fromExcluded:1];
              if (*v3 == 1
                && (([*(id *)&v1[v19] isEmpty] & 1) != 0
                 || [*(id *)&v1[v19] mode] == (id)2))
              {
                id v22 = *(id *)&v1[v19];
                uint64_t v2 = 1;
                [v22 setMode:1];

                return v2;
              }
            }
            else
            {
            }
            return 1;
          }
        }
        else
        {

          sub_10002B754((uint64_t)v26, &qword_10069B4D0);
        }
      }
      else
      {
      }
    }
  }
  if (*v3 != 1) {
    return 1;
  }
  uint64_t v13 = OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelection;
  if ([*(id *)&v1[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelection] mode] != (id)1)
  {
    if ([*(id *)&v1[v13] selectedTagCount] == (id)1)
    {
      [*(id *)&v1[v13] setMode:1];
      sub_10038C968(0, 0, 1);
      return 1;
    }
    return 1;
  }
  return 0;
}

void sub_10039FB3C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagDataSource);
  if (!v2)
  {
    long long v9 = 0u;
    long long v10 = 0u;
LABEL_10:
    sub_10002B754((uint64_t)&v9, &qword_10069B4D0);
    return;
  }
  id v3 = [v2 collectionViewDiffableDataSource];
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v5 = [v3 itemIdentifierForIndexPath:isa];

  if (v5)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  sub_10002F1B0((uint64_t)v8, (uint64_t)&v9, &qword_10069B4D0);
  if (!*((void *)&v10 + 1)) {
    goto LABEL_10;
  }
  sub_100031418(0, (unint64_t *)&qword_1006A0020);
  if (swift_dynamicCast())
  {
    uint64_t v6 = *(void **)&v8[0];
    self;
    if (swift_dynamicCastObjCClass())
    {
      [*(id *)(v1 + OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelection) setMode:0];
    }
    else
    {
      self;
      uint64_t v7 = swift_dynamicCastObjCClass();
      if (v7) {
        [*(id *)(v1 + OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelection) removeObjectID:v7 fromExcluded:0];
      }
    }
    sub_10038C968(0, 0, 1);
  }
}

id sub_10039FCF8(void *a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  id v9 = 0;
  if (v3[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_allowsContextualMenu] == 1)
  {
    long long v10 = *(void **)&v3[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagDataSource];
    if (v10)
    {
      id v11 = [v10 collectionViewDiffableDataSource];
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      id v13 = [v11 itemIdentifierForIndexPath:isa];

      if (v13)
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v33, 0, sizeof(v33));
      }
      sub_10002F1B0((uint64_t)v33, (uint64_t)&aBlock, &qword_10069B4D0);
      if (*((void *)&v30 + 1))
      {
        sub_100031418(0, (unint64_t *)&qword_10069E810);
        if (swift_dynamicCast())
        {
          id v14 = *(void **)&v33[0];
          char v15 = *(void **)&v3[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_workerContext];
          if (v15)
          {
            uint64_t v16 = *(void **)&v3[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagObjectID];
            *(void *)&v3[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagObjectID] = *(void *)&v33[0];
            id v17 = v15;
            id v18 = v14;

            (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v6);
            unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
            id v20 = (char *)swift_allocObject();
            *((void *)v20 + 2) = v17;
            *((void *)v20 + 3) = v18;
            *((void *)v20 + 4) = v3;
            *((void *)v20 + 5) = a1;
            (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v20[v19], (char *)&aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
            id v21 = self;
            id v31 = sub_1003A1494;
            id v32 = v20;
            *(void *)&long long aBlock = _NSConcreteStackBlock;
            *((void *)&aBlock + 1) = 1107296256;
            *(void *)&long long v30 = sub_100393B20;
            *((void *)&v30 + 1) = &unk_100638C50;
            id v22 = _Block_copy(&aBlock);
            id v23 = v18;
            swift_retain_n();
            id v24 = v17;
            id v25 = v23;
            uint64_t v26 = v3;
            id v27 = a1;
            swift_release();
            id v9 = [v21 configurationWithIdentifier:v25 previewProvider:0 actionProvider:v22];

            swift_release();
            _Block_release(v22);

            swift_release();
            return v9;
          }
        }
        return 0;
      }
    }
    else
    {
      long long aBlock = 0u;
      long long v30 = 0u;
    }
    sub_10002B754((uint64_t)&aBlock, &qword_10069B4D0);
    return 0;
  }
  return v9;
}

id sub_1003A0074(void *a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v6 = sub_10002F214((uint64_t *)&unk_1006A2670);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  id v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v11 = (char *)&v64 - v10;
  uint64_t v12 = type metadata accessor for IndexPath();
  uint64_t v78 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  char v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v17 = (char *)&v64 - v16;
  uint64_t v18 = OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelectionBeforeDrag;
  if (!*(void *)((char *)v3 + OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelectionBeforeDrag))
  {
    [*(id *)((char *)v3 + OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelection) copy];
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_100031418(0, &qword_1006A2AF0);
    int v19 = swift_dynamicCast();
    uint64_t v20 = v79;
    if (!v19) {
      uint64_t v20 = 0;
    }
    id v21 = *(void **)((char *)v3 + v18);
    *(void *)((char *)v3 + v18) = v20;
  }
  id v22 = [a1 localDragSession];
  if (!v22)
  {
    long long v81 = 0u;
    long long v82 = 0u;
LABEL_15:
    id v27 = &qword_10069B4D0;
    objc_super v28 = &v81;
    goto LABEL_16;
  }
  id v23 = [v22 localContext];
  swift_unknownObjectRelease();
  if (v23)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v79 = 0u;
    long long v80 = 0u;
  }
  sub_10002F1B0((uint64_t)&v79, (uint64_t)&v81, &qword_10069B4D0);
  if (!*((void *)&v82 + 1)) {
    goto LABEL_15;
  }
  sub_100031418(0, (unint64_t *)&unk_1006A4D18);
  if ((swift_dynamicCast() & 1) == 0) {
    return [objc_allocWithZone((Class)UICollectionViewDropProposal) initWithDropOperation:1];
  }
  uint64_t v24 = v79;
  if ([(id)v79 dragSessionType] != (id)1)
  {

    return [objc_allocWithZone((Class)UICollectionViewDropProposal) initWithDropOperation:1];
  }
  sub_10002F034(a2, (uint64_t)v11, (uint64_t *)&unk_1006A2670);
  uint64_t v25 = v78;
  uint64_t v26 = v78 + 48;
  uint64_t v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48);
  if (v76(v11, 1, v12) == 1)
  {

    id v27 = (uint64_t *)&unk_1006A2670;
    objc_super v28 = (long long *)v11;
LABEL_16:
    sub_10002B754((uint64_t)v28, v27);
    return [objc_allocWithZone((Class)UICollectionViewDropProposal) initWithDropOperation:1];
  }
  unint64_t v72 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
  uint64_t v73 = v25 + 32;
  v72(v17, v11, v12);
  id v31 = *(void **)((char *)v3 + OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagDataSource);
  if (!v31)
  {
    long long v81 = 0u;
    long long v82 = 0u;
LABEL_42:

    sub_10002B754((uint64_t)&v81, &qword_10069B4D0);
LABEL_44:
    (*(void (**)(char *, uint64_t))(v25 + 8))(v17, v12);
    return [objc_allocWithZone((Class)UICollectionViewDropProposal) initWithDropOperation:1];
  }
  uint64_t v71 = v26;
  id v32 = [v31 collectionViewDiffableDataSource];
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v34 = [v32 itemIdentifierForIndexPath:isa];

  if (v34)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v79 = 0u;
    long long v80 = 0u;
  }
  sub_10002F1B0((uint64_t)&v79, (uint64_t)&v81, &qword_10069B4D0);
  uint64_t v25 = v78;
  if (!*((void *)&v82 + 1)) {
    goto LABEL_42;
  }
  sub_100031418(0, (unint64_t *)&qword_10069E810);
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_44;
  }
  uint64_t v35 = (void *)v79;
  if ((objc_msgSend((id)v79, "ic_isHashtagType") & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v78 + 8))(v17, v12);

    return [objc_allocWithZone((Class)UICollectionViewDropProposal) initWithDropOperation:1];
  }
  id v66 = v35;
  id v36 = [(id)v24 currentSourceObjectIDs];
  unint64_t v37 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v38 = v37 >> 62;
  if (v37 >> 62) {
    goto LABEL_77;
  }
  uint64_t v39 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v40 = v3;
  swift_bridgeObjectRetain();
  while (1)
  {
    id v67 = (id)v24;
    uint64_t v77 = (void (*)(char *, unint64_t, uint64_t))v37;
    if (v39)
    {
      unint64_t v65 = v38;
      uint64_t v38 = 0;
      uint64_t v74 = v39;
      unint64_t v75 = v37 & 0xC000000000000001;
      int64_t v68 = (char *)OBJC_IVAR____TtC11MobileNotes17TagCollectionView_workerContext;
      uint64_t v24 = 4;
      do
      {
        if (v75) {
          id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v41 = *(id *)(v37 + 8 * v24);
        }
        unint64_t v37 = (unint64_t)v41;
        uint64_t v42 = v24 - 3;
        if (__OFADD__(v24 - 4, 1))
        {
          __break(1u);
          goto LABEL_76;
        }
        id v43 = [v41 ic_isModernNoteType];
        if (v43 && *(void *)&v68[(void)v3])
        {
          int64_t v70 = &v64;
          __chkstk_darwin(v43);
          *(&v64 - 2) = (uint64_t)v44;
          *(&v64 - 1) = v37;
          v69 = v44;
          NSManagedObjectContext.performAndWait<A>(_:)();

          if (v81 == 1)
          {

            unint64_t v37 = (unint64_t)v77;
            swift_bridgeObjectRelease();
            LODWORD(v74) = 1;
            goto LABEL_47;
          }
        }
        else
        {
        }
        ++v24;
        unint64_t v37 = (unint64_t)v77;
      }
      while (v42 != v74);

      swift_bridgeObjectRelease();
      LODWORD(v74) = 0;
LABEL_47:
      if (v65) {
        goto LABEL_50;
      }
LABEL_48:
      uint64_t v45 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      goto LABEL_51;
    }

    swift_bridgeObjectRelease();
    LODWORD(v74) = 0;
    if (!v38) {
      goto LABEL_48;
    }
LABEL_50:
    swift_bridgeObjectRetain();
    uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
LABEL_51:
    if (!v45) {
      break;
    }
    unint64_t v75 = v37 & 0xC000000000000001;
    uint64_t v24 = 4;
    while (1)
    {
      uint64_t v38 = v24 - 4;
      id v46 = v75 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v37 + 8 * v24);
      unint64_t v37 = (unint64_t)v46;
      uint64_t v47 = v24 - 3;
      if (__OFADD__(v38, 1)) {
        break;
      }
      unsigned int v48 = [v46 ic_isLegacyType];

      if (v48)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_70;
      }
      ++v24;
      unint64_t v37 = (unint64_t)v77;
      if (v47 == v45) {
        goto LABEL_59;
      }
    }
LABEL_76:
    __break(1u);
LABEL_77:
    v63 = v3;
    swift_bridgeObjectRetain();
    uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
  }
LABEL_59:
  swift_bridgeObjectRelease_n();
  if (v74)
  {
LABEL_70:
    id v29 = [objc_allocWithZone((Class)UICollectionViewDropProposal) initWithDropOperation:1];
    v62 = v66;
  }
  else
  {
    sub_10002F214(&qword_10069BA00);
    uint64_t v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = xmmword_100529F20;
    int64_t v50 = v66;
    *(void *)(v49 + 32) = v66;
    *(void *)&long long v81 = v49;
    specialized Array._endMutation()();
    int64_t v68 = v50;
    sub_10002F214(&qword_1006A33A0);
    Class v51 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v67 setCurrentDropTargetItemIDs:v51];

    id v52 = [v3 indexPathsForVisibleItems];
    uint64_t v53 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v54 = *(void *)(v53 + 16);
    id v66 = (id)v53;
    if (v54)
    {
      uint64_t v77 = *(void (**)(char *, unint64_t, uint64_t))(v78 + 16);
      unint64_t v55 = v53 + ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80));
      uint64_t v56 = *(uint64_t **)(v78 + 72);
      uint64_t v74 = v78 + 56;
      unint64_t v75 = v78 + 16;
      v69 = (void (**)(char *, uint64_t))(v78 + 8);
      int64_t v70 = v56;
      unint64_t v65 = (v78 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      v77(v9, v55, v12);
      while (1)
      {
        uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v74;
        (*(void (**)(char *, void, uint64_t, uint64_t))v74)(v9, 0, 1, v12);
        if (v76(v9, 1, v12) == 1) {
          break;
        }
        v72(v15, v9, v12);
        Class v58 = IndexPath._bridgeToObjectiveC()().super.isa;
        [v3 deselectItemAtIndexPath:v58 animated:0];

        Class v59 = IndexPath._bridgeToObjectiveC()().super.isa;
        id v60 = [v3 cellForItemAtIndexPath:v59];

        if (v60)
        {
          type metadata accessor for TagCell();
          uint64_t v61 = swift_dynamicCastClass();
          if (v61)
          {
            *(unsigned char *)(v61 + OBJC_IVAR___ICTagCell_isExcluded) = 0;
            sub_100474ED8();
          }
        }
        (*v69)(v15, v12);
        v55 += (unint64_t)v70;
        if (!--v54)
        {
          v57(v9, 1, 1, v12);
          break;
        }
        v77(v9, v55, v12);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v78 + 56))(v9, 1, 1, v12);
    }
    swift_bridgeObjectRelease();
    [*(id *)((char *)v3 + OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelection) clear];
    id v29 = [objc_allocWithZone((Class)UICollectionViewDropProposal) initWithDropOperation:3 intent:2];
    v62 = v68;
  }

  (*(void (**)(char *, uint64_t))(v78 + 8))(v17, v12);
  return v29;
}

void sub_1003A0B24(void *a1)
{
  id v4 = objc_msgSend(objc_msgSend(a1, "session"), "localDragSession");
  swift_unknownObjectRelease();
  if (!v4) {
    return;
  }
  if ([v4 localContext])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v32 = 0u;
    long long v33 = 0u;
  }
  sub_10002F1B0((uint64_t)&v32, (uint64_t)aBlock, &qword_10069B4D0);
  if (!v27)
  {
    swift_unknownObjectRelease();
    sub_10002B754((uint64_t)aBlock, &qword_10069B4D0);
    return;
  }
  sub_100031418(0, (unint64_t *)&unk_1006A4D18);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_unknownObjectRelease();
    return;
  }
  id v25 = v31;
  id v5 = [v31 currentDropTargetItemIDs];
  sub_10002F214(&qword_1006A33A0);
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  aBlock[0] = _swiftEmptyArrayStorage;
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    if (v7) {
      goto LABEL_9;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    id v9 = _swiftEmptyArrayStorage;
    goto LABEL_25;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v7) {
    goto LABEL_24;
  }
LABEL_9:
  if (v7 < 1)
  {
    __break(1u);
    goto LABEL_49;
  }
  for (uint64_t i = 0; i != v7; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_unknownObjectRetain();
    }
    self;
    if (swift_dynamicCastObjCClass())
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  id v9 = (void *)aBlock[0];
LABEL_25:
  swift_bridgeObjectRelease();
  uint64_t isEscapingClosureAtFileLocation = (uint64_t)sub_10038AC84((unint64_t)v9);
  swift_bridgeObjectRelease();
  if (!isEscapingClosureAtFileLocation)
  {
    swift_unknownObjectRelease();

    return;
  }
  id v10 = [v4 items];
  sub_100031418(0, &qword_1006A4D28);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v31 = _swiftEmptyArrayStorage;
  if (v3 >> 62)
  {
LABEL_49:
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    if (v11) {
      goto LABEL_28;
    }
    goto LABEL_50;
  }
  uint64_t v11 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v11)
  {
LABEL_28:
    uint64_t v24 = v1;
    if (v11 >= 1)
    {
      uint64_t v12 = 0;
      while (1)
      {
        if ((v3 & 0xC000000000000001) != 0) {
          id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v13 = *(id *)(v3 + 8 * v12 + 32);
        }
        uint64_t v14 = v13;
        if ([v13 localObject])
        {
          _bridgeAnyObjectToAny(_:)();
          swift_unknownObjectRelease();
        }
        else
        {
          long long v32 = 0u;
          long long v33 = 0u;
        }
        sub_10002F1B0((uint64_t)&v32, (uint64_t)aBlock, &qword_10069B4D0);
        if (v27)
        {
          sub_100031418(0, (unint64_t *)&qword_10069E810);
          if (swift_dynamicCast()) {
            goto LABEL_43;
          }
        }
        else
        {
          sub_10002B754((uint64_t)aBlock, &qword_10069B4D0);
        }
        uint64_t v30 = 0;
LABEL_43:

        if (v30)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v31 & 0xFFFFFFFFFFFFFF8)
                                                                                              + 0x18) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        if (v11 == ++v12)
        {
          swift_bridgeObjectRelease();
          char v15 = v31;
          uint64_t v1 = v24;
          goto LABEL_51;
        }
      }
    }
    __break(1u);
    return;
  }
LABEL_50:
  swift_bridgeObjectRelease();
  char v15 = _swiftEmptyArrayStorage;
LABEL_51:
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void **)&v1[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_workerContext];
  if (v16)
  {
    id v17 = (void *)swift_allocObject();
    v17[2] = v15;
    v17[3] = v16;
    v17[4] = isEscapingClosureAtFileLocation;
    v17[5] = v1;
    uint64_t v18 = swift_allocObject();
    int v19 = (void *)isEscapingClosureAtFileLocation;
    *(void *)(v18 + 16) = sub_1003A1378;
    *(void *)(v18 + 24) = v17;
    objc_super v28 = sub_100031D58;
    uint64_t v29 = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100031D30;
    id v27 = &unk_100638C00;
    uint64_t v20 = _Block_copy(aBlock);
    id v21 = v16;
    swift_bridgeObjectRetain();
    id v22 = v19;
    id v23 = v1;
    swift_retain();
    swift_release();
    [v21 performBlockAndWait:v20];

    _Block_release(v20);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_unknownObjectRelease();

    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return;
    }
    __break(1u);
  }
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
}

void sub_1003A11C4()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelectionBeforeDrag;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelectionBeforeDrag);
  if (v2)
  {
    unint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelection);
    *(void *)(v0 + OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagSelection) = v2;
    id v4 = v2;

    sub_10038C968(0, 0, 0);
    id v5 = *(void **)(v0 + v1);
  }
  else
  {
    id v5 = 0;
  }
  *(void *)(v0 + v1) = 0;
}

uint64_t sub_1003A124C(uint64_t a1)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC11MobileNotes17TagCollectionView_workerContext)
    && (__chkstk_darwin(a1),
        id v3 = v2,
        sub_10002F214((uint64_t *)&unk_1006A4D08),
        NSManagedObjectContext.performAndWait<A>(_:)(),
        v3,
        v6 != 1))
  {
    return v5;
  }
  else
  {
    return 0;
  }
}

void sub_1003A130C(uint64_t a1@<X8>)
{
  sub_100393470(*(void *)(v1 + 16), a1);
}

uint64_t sub_1003A1328()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1003A1378()
{
  sub_100391084(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1003A1384()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1003A1394(unsigned __int8 *a1@<X8>)
{
  sub_10039318C(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1003A13B0()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

Class sub_1003A1494(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v4 = (void *)v1[2];
  uint64_t v5 = (void *)v1[3];
  uint64_t v6 = (void *)v1[4];
  uint64_t v7 = (void *)v1[5];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100391B9C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1003A150C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003A154C(uint64_t a1)
{
  return sub_1003923C0(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1003A1554()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_1003A1630(int a1)
{
  type metadata accessor for IndexPath();
  uint64_t v3 = (char *)v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = (void *)v1[4];

  sub_1003925B0(a1, v3, v4, v5);
}

void sub_1003A16A8(int a1)
{
  sub_100392938(a1, *(char **)(v1 + 16));
}

void sub_1003A16B0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagRenameViewController);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC11MobileNotes32TagCreateOrRenameAlertController_alertTextField);
    if (v2) {
      [v2 selectAll:0];
    }
  }
}

void sub_1003A16EC()
{
  sub_100392520(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1003A16F4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003A1704()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

void sub_1003A1714(char a1)
{
}

uint64_t sub_1003A171C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003A1784(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003A17EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for TagCollectionViewConfiguration.ViewMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003A1918);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TagCollectionViewConfiguration.ViewMode()
{
  return &type metadata for TagCollectionViewConfiguration.ViewMode;
}

unint64_t sub_1003A1954()
{
  unint64_t result = qword_1006A4E00;
  if (!qword_1006A4E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A4E00);
  }
  return result;
}

uint64_t VisibleChecklistItemsQuery.entities(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = type metadata accessor for ChecklistItemEntity();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  v4[10] = swift_task_alloc();
  v4[11] = sub_10002F214(&qword_10069B4D8);
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for ChecklistItemID();
  v4[14] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v4[15] = v7;
  v4[16] = *(void *)(v7 + 64);
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  sub_10002F214(&qword_1006A4E90);
  v4[19] = swift_task_alloc();
  return _swift_task_switch(sub_1003A1BCC, 0, 0);
}

uint64_t sub_1003A1BCC()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 160) = v2;
  uint64_t v3 = *(void *)(v0 + 120);
  if (v2)
  {
    int v4 = *(_DWORD *)(v3 + 80);
    *(_DWORD *)(v0 + 224) = v4;
    uint64_t v5 = *(void *)(v3 + 72);
    *(void *)(v0 + 176) = 0;
    *(void *)(v0 + 184) = _swiftEmptyArrayStorage;
    *(void *)(v0 + 168) = v5;
    uint64_t v6 = *(void *)(v0 + 152);
    uint64_t v7 = *(void *)(v0 + 112);
    uint64_t v8 = v1 + ((v4 + 32) & ~(unint64_t)v4);
    swift_bridgeObjectRetain();
    sub_1003A4C6C(v8, v6, (uint64_t (*)(void))type metadata accessor for ChecklistItemID);
    uint64_t v9 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56);
    *(void *)(v0 + 192) = v9;
    v9(v6, 0, 1, v7);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v6, 1, v7) != 1)
    {
      uint64_t v10 = *(void *)(v0 + 144);
      uint64_t v11 = *(void *)(v0 + 136);
      uint64_t v12 = *(void *)(v0 + 40);
      uint64_t v13 = *(void *)(v0 + 32);
      unint64_t v14 = (*(unsigned __int8 *)(v0 + 224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 224);
      unint64_t v15 = (*(void *)(v0 + 128) + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v27 = *(void *)(v0 + 48);
      sub_1003A4C04(*(void *)(v0 + 152), v10, (uint64_t (*)(void))type metadata accessor for ChecklistItemID);
      AppDependency.wrappedValue.getter();
      uint64_t v16 = *(void **)(v0 + 16);
      *(void *)(v0 + 200) = [v16 modernManagedObjectContext];

      sub_1003A4C6C(v10, v11, (uint64_t (*)(void))type metadata accessor for ChecklistItemID);
      uint64_t v17 = swift_allocObject();
      *(void *)(v0 + 208) = v17;
      sub_1003A4C04(v11, v17 + v14, (uint64_t (*)(void))type metadata accessor for ChecklistItemID);
      uint64_t v18 = (void *)(v17 + v15);
      *uint64_t v18 = v13;
      v18[1] = v12;
      v18[2] = v27;
      swift_retain();
      swift_retain();
      swift_retain();
      int v19 = (void *)swift_task_alloc();
      *(void *)(v0 + 216) = v19;
      *int v19 = v0;
      v19[1] = sub_1003A1F14;
      uint64_t v20 = *(void *)(v0 + 104);
      uint64_t v21 = *(void *)(v0 + 88);
      return NSManagedObjectContext.perform<A>(_:)(v20, sub_1003A4B64, v17, v21);
    }
  }
  else
  {
    id v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
    uint64_t v23 = *(void *)(v0 + 152);
    uint64_t v24 = *(void *)(v0 + 112);
    swift_bridgeObjectRetain();
    v22(v23, 1, 1, v24);
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v25 = *(uint64_t (**)(void *))(v0 + 8);
  return v25(_swiftEmptyArrayStorage);
}

uint64_t sub_1003A1F14()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 200);
  swift_task_dealloc();
  swift_release();

  return _swift_task_switch(sub_1003A2044, 0, 0);
}

uint64_t sub_1003A2044()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);
  sub_10002F034(*(void *)(v0 + 104), v1, &qword_10069B4D8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = *(void *)(v0 + 144);
    uint64_t v5 = *(void *)(v0 + 96);
    sub_10002B754(*(void *)(v0 + 104), &qword_10069B4D8);
    sub_1003A7268(v4, (uint64_t (*)(void))type metadata accessor for ChecklistItemID);
    sub_10002B754(v5, &qword_10069B4D8);
    unint64_t v6 = *(void *)(v0 + 184);
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 72);
    uint64_t v7 = *(void *)(v0 + 80);
    sub_1003A4C04(*(void *)(v0 + 96), v7, (uint64_t (*)(void))type metadata accessor for ChecklistItemEntity);
    sub_1003A4C6C(v7, v8, (uint64_t (*)(void))type metadata accessor for ChecklistItemEntity);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v6 = *(void *)(v0 + 184);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v6 = sub_1001A92CC(0, *(void *)(v6 + 16) + 1, 1, *(void *)(v0 + 184));
    }
    unint64_t v11 = *(void *)(v6 + 16);
    unint64_t v10 = *(void *)(v6 + 24);
    if (v11 >= v10 >> 1) {
      unint64_t v6 = sub_1001A92CC(v10 > 1, v11 + 1, 1, v6);
    }
    uint64_t v12 = *(void *)(v0 + 144);
    uint64_t v13 = *(void *)(v0 + 104);
    uint64_t v14 = *(void *)(v0 + 72);
    uint64_t v15 = *(void *)(v0 + 80);
    uint64_t v16 = *(void *)(v0 + 64);
    *(void *)(v6 + 16) = v11 + 1;
    sub_1003A4C04(v14, v6+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v11, (uint64_t (*)(void))type metadata accessor for ChecklistItemEntity);
    sub_1003A7268(v15, (uint64_t (*)(void))type metadata accessor for ChecklistItemEntity);
    sub_10002B754(v13, &qword_10069B4D8);
    sub_1003A7268(v12, (uint64_t (*)(void))type metadata accessor for ChecklistItemID);
  }
  uint64_t v17 = *(void *)(v0 + 176) + 1;
  if (v17 == *(void *)(v0 + 160))
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 192))(*(void *)(v0 + 152), 1, 1, *(void *)(v0 + 112));
LABEL_11:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v22 = *(uint64_t (**)(unint64_t))(v0 + 8);
    return v22(v6);
  }
  *(void *)(v0 + 176) = v17;
  *(void *)(v0 + 184) = v6;
  uint64_t v18 = *(void *)(v0 + 152);
  uint64_t v19 = *(void *)(v0 + 112);
  uint64_t v20 = *(void *)(v0 + 120);
  sub_1003A4C6C(*(void *)(v0 + 24)+ ((*(unsigned __int8 *)(v0 + 224) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 224))+ *(void *)(v0 + 168) * v17, v18, (uint64_t (*)(void))type metadata accessor for ChecklistItemID);
  uint64_t v21 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56);
  *(void *)(v0 + 192) = v21;
  v21(v18, 0, 1, v19);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1) {
    goto LABEL_11;
  }
  uint64_t v24 = *(void *)(v0 + 144);
  uint64_t v25 = *(void *)(v0 + 136);
  uint64_t v26 = *(void *)(v0 + 40);
  uint64_t v27 = *(void *)(v0 + 32);
  unint64_t v28 = (*(unsigned __int8 *)(v0 + 224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 224);
  unint64_t v29 = (*(void *)(v0 + 128) + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = *(void *)(v0 + 48);
  sub_1003A4C04(*(void *)(v0 + 152), v24, (uint64_t (*)(void))type metadata accessor for ChecklistItemID);
  AppDependency.wrappedValue.getter();
  uint64_t v30 = *(void **)(v0 + 16);
  *(void *)(v0 + 200) = [v30 modernManagedObjectContext];

  sub_1003A4C6C(v24, v25, (uint64_t (*)(void))type metadata accessor for ChecklistItemID);
  uint64_t v31 = swift_allocObject();
  *(void *)(v0 + 208) = v31;
  sub_1003A4C04(v25, v31 + v28, (uint64_t (*)(void))type metadata accessor for ChecklistItemID);
  long long v32 = (void *)(v31 + v29);
  *long long v32 = v27;
  v32[1] = v26;
  v32[2] = v36;
  swift_retain();
  swift_retain();
  swift_retain();
  long long v33 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v33;
  void *v33 = v0;
  v33[1] = sub_1003A1F14;
  uint64_t v34 = *(void *)(v0 + 104);
  uint64_t v35 = *(void *)(v0 + 88);
  return NSManagedObjectContext.perform<A>(_:)(v34, sub_1003A4B64, v31, v35);
}

uint64_t sub_1003A251C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for ChecklistItemID();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  AppDependency.wrappedValue.getter();
  uint64_t v9 = aBlock[0];
  unint64_t v11 = (void *)ChecklistItemID.note(in:)(aBlock[0], v10);

  if (!v11) {
    goto LABEL_9;
  }
  self;
  uint64_t v12 = (void *)swift_dynamicCastObjCClass();
  if (!v12 || (uint64_t v13 = v12, (v14 = [v12 textStorage]) == 0))
  {

LABEL_9:
    unint64_t v28 = 0;
    goto LABEL_10;
  }
  uint64_t v15 = v14;
  id v36 = v13;
  uint64_t v38 = a2;
  uint64_t v39 = v2;
  uint64_t v44 = 0;
  uint64_t v45 = 0;
  char v46 = 2;
  id v42 = ICTTAttributeNameParagraphStyle;
  id v16 = [v15 ic_range];
  uint64_t v40 = v17;
  id v41 = v16;
  uint64_t v37 = a1;
  sub_1003A4C6C(a1, (uint64_t)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ChecklistItemID);
  unint64_t v18 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v19 = (v7 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = swift_allocObject();
  sub_1003A4C04((uint64_t)v8, v21 + v18, (uint64_t (*)(void))type metadata accessor for ChecklistItemID);
  *(void *)(v21 + v19) = v15;
  *(void *)(v21 + v20) = &v44;
  *(void *)(v21 + ((v20 + 15) & 0xFFFFFFFFFFFFFFF8)) = &v46;
  id v22 = (void *)swift_allocObject();
  v22[2] = sub_1003A7410;
  v22[3] = v21;
  aBlock[4] = sub_1003A7548;
  aBlock[5] = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (void *)1107296256;
  aBlock[2] = sub_1004A06C8;
  void aBlock[3] = &unk_1006390A0;
  uint64_t v23 = _Block_copy(aBlock);
  swift_retain();
  id v24 = v15;
  swift_release();
  uint64_t v25 = v42;
  [v24 enumerateAttribute:v42 inRange:v41 options:v40 usingBlock:v23];

  _Block_release(v23);
  LOBYTE(v25) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v25)
  {
    __break(1u);
  }
  else
  {
    uint64_t v27 = v45;
    if (!v45 || v46 == 2)
    {

      swift_bridgeObjectRelease();
      unint64_t v28 = sub_1003A7410;
      a2 = v38;
LABEL_10:
      uint64_t v29 = type metadata accessor for ChecklistItemEntity();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(a2, 1, 1, v29);
      return sub_10002E70C((uint64_t)v28);
    }
    uint64_t v30 = v44;
    int v31 = v46 & 1;
    sub_1003A4C6C(v37, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ChecklistItemID);
    swift_bridgeObjectRetain();
    id v32 = [v36 objectID];
    uint64_t v33 = v38;
    ChecklistItemEntity.init(id:managedObjectID:text:checked:)((uint64_t)v8, v32, v30, v27, v31, v38);

    uint64_t v34 = type metadata accessor for ChecklistItemEntity();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 0, 1, v34);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1003A2980(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4, char *a5, void *a6, uint64_t *a7, unsigned __int8 *a8)
{
  v85 = a7;
  id v91 = a6;
  v92 = a5;
  uint64_t v89 = a2;
  uint64_t v90 = a3;
  uint64_t v84 = type metadata accessor for AttributedString.CharacterView();
  __chkstk_darwin(v84);
  v83 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UTType();
  uint64_t v81 = *(void *)(v12 - 8);
  uint64_t v82 = v12;
  __chkstk_darwin(v12);
  uint64_t v78 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for AttributedString();
  uint64_t v79 = *(void *)(v14 - 8);
  uint64_t v80 = v14;
  __chkstk_darwin(v14);
  uint64_t v77 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CharacterSet();
  uint64_t v87 = *(void *)(v16 - 8);
  uint64_t v88 = v16;
  __chkstk_darwin(v16);
  v86 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v93 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  unint64_t v20 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10002F214((uint64_t *)&unk_1006A4F60);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10002F214((uint64_t *)&unk_10069C990);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v27 = (char *)&v73 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v25);
  uint64_t v30 = (char *)&v73 - v29;
  __chkstk_darwin(v28);
  id v32 = (char *)&v73 - v31;
  sub_10002F034(a1, (uint64_t)v96, &qword_10069B4D0);
  if (!v96[3])
  {
    sub_10002B754((uint64_t)v96, &qword_10069B4D0);
    return;
  }
  sub_100031418(0, (unint64_t *)&qword_10069C9A0);
  if ((swift_dynamicCast() & 1) == 0) {
    return;
  }
  id v33 = v94;
  if ([v94 style] != 103)
  {

    return;
  }
  unint64_t v75 = a4;
  uint64_t v74 = a8;
  uint64_t v34 = type metadata accessor for ChecklistItemID();
  uint64_t v35 = v93;
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v32, &v92[*(int *)(v34 + 20)], v18);
  id v36 = v33;
  uint64_t v37 = 1;
  v92 = *(char **)(v35 + 56);
  ((void (*)(char *, void, uint64_t, uint64_t))v92)(v32, 0, 1, v18);
  uint64_t v76 = v36;
  id v38 = [v36 uuid];
  if (v38)
  {
    uint64_t v39 = v38;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v37 = 0;
  }
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v92)(v30, v37, 1, v18);
  uint64_t v40 = (uint64_t)&v23[*(int *)(v21 + 48)];
  sub_10002F034((uint64_t)v32, (uint64_t)v23, (uint64_t *)&unk_10069C990);
  sub_10002F034((uint64_t)v30, v40, (uint64_t *)&unk_10069C990);
  uint64_t v41 = v93;
  id v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v93 + 48);
  if (v42((uint64_t)v23, 1, v18) == 1)
  {
    sub_10002B754((uint64_t)v30, (uint64_t *)&unk_10069C990);
    sub_10002B754((uint64_t)v32, (uint64_t *)&unk_10069C990);
    int v43 = v42(v40, 1, v18);
    uint64_t v44 = v76;
    if (v43 == 1)
    {
      sub_10002B754((uint64_t)v23, (uint64_t *)&unk_10069C990);
LABEL_15:
      id v47 = v91;
      id v48 = [v91 mutableString];
      [v48 paragraphRangeForRange:v89, v90];

      uint64_t v49 = v86;
      static CharacterSet.newlines.getter();
      NSAttributedString.range(byTrimmingCharactersIn:in:)();
      (*(void (**)(char *, uint64_t))(v87 + 8))(v49, v88);
      NSNotFound.getter();
      id v50 = [v47 string];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v51 = Range<>.init(_:in:)();
      uint64_t v53 = v52;
      LOBYTE(v50) = v54;
      swift_bridgeObjectRelease();
      unint64_t v55 = v75;
      if ((v50 & 1) == 0)
      {
        uint64_t v56 = v78;
        static UTType.rtf.getter();
        v96[0] = v51;
        v96[1] = v53;
        id v57 = [v47 string];
        Class v58 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v60 = v59;

        id v94 = v58;
        uint64_t v95 = v60;
        sub_10002F214(&qword_1006A3E30);
        sub_1003A71E4();
        sub_10017B588();
        uint64_t v61 = _NSRange.init<A, B>(_:in:)();
        uint64_t v63 = v62;
        UTType.identifier.getter();
        NSString v64 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v65 = [v47 filteredAttributedStringForUTI:v64 range:v61];

        id v66 = v77;
        AttributedString.init(_:)();
        (*(void (**)(char *, uint64_t))(v81 + 8))(v56, v82);
        AttributedString.characters.getter();
        (*(void (**)(char *, uint64_t))(v79 + 8))(v66, v80);
        sub_1003A74FC(&qword_1006A01B0, (void (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView);
        uint64_t v67 = String.init<A>(_:)();
        int64_t v68 = v85;
        uint64_t *v85 = v67;
        v68[1] = v69;
        swift_bridgeObjectRelease();
        id v70 = [v44 todo];
        if (v70)
        {
          uint64_t v71 = v70;
          unsigned __int8 v72 = [v70 done];
        }
        else
        {
          unsigned __int8 v72 = 0;
        }
        *uint64_t v74 = v72;
      }
      *unint64_t v55 = 1;
      goto LABEL_21;
    }
    goto LABEL_13;
  }
  sub_10002F034((uint64_t)v23, (uint64_t)v27, (uint64_t *)&unk_10069C990);
  if (v42(v40, 1, v18) == 1)
  {
    sub_10002B754((uint64_t)v30, (uint64_t *)&unk_10069C990);
    sub_10002B754((uint64_t)v32, (uint64_t *)&unk_10069C990);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v27, v18);
    uint64_t v44 = v76;
LABEL_13:
    sub_10002B754((uint64_t)v23, (uint64_t *)&unk_1006A4F60);
    goto LABEL_21;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v20, v40, v18);
  sub_1003A74FC(&qword_10069DE60, (void (*)(uint64_t))&type metadata accessor for UUID);
  char v45 = dispatch thunk of static Equatable.== infix(_:_:)();
  char v46 = *(void (**)(char *, uint64_t))(v41 + 8);
  v46(v20, v18);
  sub_10002B754((uint64_t)v30, (uint64_t *)&unk_10069C990);
  sub_10002B754((uint64_t)v32, (uint64_t *)&unk_10069C990);
  v46(v27, v18);
  sub_10002B754((uint64_t)v23, (uint64_t *)&unk_10069C990);
  uint64_t v44 = v76;
  if (v45) {
    goto LABEL_15;
  }
LABEL_21:
}

uint64_t VisibleChecklistItemsQuery.suggestedEntities()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1006A4EA0 + dword_1006A4EA0);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1003A754C;
  return v8(a2, a3);
}

uint64_t sub_1003A33C4(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069B1D0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_10002F034(a1, (uint64_t)&v9 - v6, &qword_10069B1D0);
  sub_10002F034((uint64_t)v7, (uint64_t)v5, &qword_10069B1D0);
  IntentParameter.wrappedValue.setter();
  return sub_10002B754((uint64_t)v7, &qword_10069B1D0);
}

uint64_t VisibleChecklistItemsQuery.entities(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (char *)&dword_1006A4EB0 + dword_1006A4EB0;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1003A754C;
  return ((uint64_t (*)(uint64_t, void, void, uint64_t))v8)(a1, 0, 0, a3);
}

uint64_t VisibleChecklistItemsQuery.entities(for:matching:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1006A4EB0 + dword_1006A4EB0);
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *unint64_t v10 = v5;
  v10[1] = sub_1003A754C;
  return v12(a1, a2, a3, a5);
}

uint64_t sub_1003A3628@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v9 = _swiftEmptyArrayStorage;
  uint64_t v35 = _swiftEmptyArrayStorage;
  unint64_t v10 = (void (*)(uint64_t, uint64_t, char *, uint64_t))[a1 ic_existingObjectWithID:a2];
  if (!v10) {
    goto LABEL_13;
  }
  uint64_t v11 = v10;
  self;
  uint64_t v12 = (void *)swift_dynamicCastObjCClass();
  if (!v12)
  {

    unint64_t v10 = 0;
    goto LABEL_13;
  }
  uint64_t v13 = v12;
  uint64_t v32 = a4;
  id v14 = [v12 hasChecklist];
  sub_100031418(0, (unint64_t *)&unk_1006A4F50);
  v15.super.super.Class isa = NSNumber.init(BOOLeanLiteral:)(1).super.super.isa;
  if (!v14)
  {

    goto LABEL_12;
  }
  id v16 = v14;
  char v17 = static NSObject.== infix(_:_:)();

  if ((v17 & 1) == 0 || (id v18 = [v13 textStorage]) == 0)
  {

LABEL_12:
    unint64_t v10 = 0;
    uint64_t v9 = _swiftEmptyArrayStorage;
    goto LABEL_13;
  }
  uint64_t v19 = v18;
  v34[0] = 0;
  v34[1] = 0;
  id v31 = ICTTAttributeNameParagraphStyle;
  id v20 = [v19 ic_range];
  uint64_t v29 = v21;
  id v30 = v20;
  uint64_t v22 = (void *)swift_allocObject();
  v22[2] = v34;
  v22[3] = a2;
  v22[4] = v19;
  v22[5] = a3;
  v22[6] = v32;
  v22[7] = &v35;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = sub_1003A71A4;
  *(void *)(v23 + 24) = v22;
  aBlock[4] = sub_10017EBEC;
  aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004A06C8;
  void aBlock[3] = &unk_100639010;
  uint64_t v28 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  id v24 = a2;
  id v25 = v19;
  swift_release();
  [v25 enumerateAttribute:v31 inRange:v30 options:v29 usingBlock:0 v28];

  _Block_release(v28);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    unint64_t v10 = sub_1003A71A4;
    uint64_t v9 = v35;
LABEL_13:
    uint64_t result = sub_10002E70C((uint64_t)v10);
    *a5 = v9;
    return result;
  }
  __break(1u);
  return result;
}

void sub_1003A393C(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t *a5, void *a6, void *a7, void *a8, uint64_t a9, uint64_t *a10)
{
  v108 = a8;
  id v122 = a6;
  id v123 = a7;
  uint64_t v14 = type metadata accessor for ChecklistItemEntity();
  uint64_t v111 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v110 = (uint64_t)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v113 = (uint64_t *)((char *)&v102 - v17);
  uint64_t v120 = type metadata accessor for AttributedString.CharacterView();
  __chkstk_darwin(v120);
  v119 = (char *)&v102 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for UTType();
  uint64_t v117 = *(void *)(v19 - 8);
  uint64_t v118 = v19;
  __chkstk_darwin(v19);
  v114 = (char *)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for AttributedString();
  uint64_t v115 = *(void *)(v21 - 8);
  uint64_t v116 = v21;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v102 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for CharacterSet();
  uint64_t v121 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v102 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for ChecklistItemID();
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v109 = (uint64_t)&v102 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v124 = (char *)&v102 - v30;
  uint64_t v31 = sub_10002F214((uint64_t *)&unk_10069C990);
  __chkstk_darwin(v31 - 8);
  id v33 = (char *)&v102 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for UUID();
  uint64_t v35 = __chkstk_darwin(v34);
  uint64_t v37 = (uint64_t *)((char *)&v102 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v38 = __chkstk_darwin(v35);
  uint64_t v41 = (char *)&v102 - v40;
  uint64_t v43 = *a5;
  uint64_t v42 = a5[1];
  v112 = a5;
  BOOL v44 = __OFADD__(v43, v42);
  uint64_t v45 = v43 + v42;
  if (v44)
  {
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v46 = (uint64_t)&a3[a2];
  if (__OFADD__(a2, a3))
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  if (v45 >= v46) {
    uint64_t v47 = (uint64_t)&a3[a2];
  }
  else {
    uint64_t v47 = v45;
  }
  if (v43 >= a2 && v43 < v46)
  {
    uint64_t v45 = v47 - v43;
    if (!__OFSUB__(v47, v43)) {
      goto LABEL_14;
    }
    __break(1u);
  }
  if (v43 > a2 || v45 <= a2) {
    goto LABEL_15;
  }
  uint64_t v45 = v47 - a2;
  if (__OFSUB__(v47, a2))
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
LABEL_14:
  if (v45 > 0) {
    return;
  }
LABEL_15:
  v105 = v41;
  uint64_t v107 = v39;
  uint64_t v106 = v38;
  sub_10002F034(a1, (uint64_t)&v127, &qword_10069B4D0);
  if (!v129)
  {
    sub_10002B754((uint64_t)&v127, &qword_10069B4D0);
    return;
  }
  sub_100031418(0, (unint64_t *)&qword_10069C9A0);
  if (swift_dynamicCast())
  {
    id v48 = v125;
    if ([v125 style] != 103)
    {

      return;
    }
    id v104 = v48;
    id v49 = [v48 uuid];
    if (v49)
    {
      id v50 = v49;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v51 = v107;
      uint64_t v52 = v37;
      uint64_t v53 = v106;
      v103 = *(char **)(v107 + 32);
      ((void (*)(char *, uint64_t *, uint64_t))v103)(v33, v52, v106);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v33, 0, 1, v53);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v33, 1, v53) != 1)
      {
        char v54 = v105;
        ((void (*)(char *, char *, uint64_t))v103)(v105, v33, v53);
        uint64_t v55 = (uint64_t)v124;
        (*(void (**)(char *, char *, uint64_t))(v107 + 16))(&v124[*(int *)(v27 + 20)], v54, v53);
        id v56 = v122;
        id v57 = [v56 URIRepresentation];
        uint64_t v58 = v55;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        id v122 = v56;
        id v59 = v123;
        id v60 = [v123 mutableString];
        [v60 paragraphRangeForRange:a2, a3];

        static CharacterSet.newlines.getter();
        uint64_t v61 = NSAttributedString.range(byTrimmingCharactersIn:in:)();
        uint64_t v63 = v62;
        NSString v64 = v26;
        id v65 = v59;
        (*(void (**)(char *, uint64_t))(v121 + 8))(v64, v24);
        if (v61 == NSNotFound.getter())
        {
          id v66 = a3;
        }
        else
        {
          a2 = v61;
          id v66 = v63;
        }
        id v67 = [v59 string];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v68 = Range<>.init(_:in:)();
        uint64_t v70 = v69;
        char v72 = v71;
        swift_bridgeObjectRelease();
        if (v72)
        {

          uint64_t v92 = v58;
        }
        else
        {
          v103 = v66;
          uint64_t v73 = v65;
          uint64_t v121 = a9;
          uint64_t v74 = v114;
          static UTType.rtf.getter();
          uint64_t v127 = v68;
          uint64_t v128 = v70;
          id v75 = [v73 string];
          uint64_t v76 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v78 = v77;

          id v125 = v76;
          uint64_t v126 = v78;
          sub_10002F214(&qword_1006A3E30);
          sub_1003A71E4();
          sub_10017B588();
          uint64_t v79 = _NSRange.init<A, B>(_:in:)();
          uint64_t v81 = v80;
          UTType.identifier.getter();
          NSString v82 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v83 = [v73 filteredAttributedStringForUTI:v82 range:v79];

          AttributedString.init(_:)();
          (*(void (**)(char *, uint64_t))(v117 + 8))(v74, v118);
          AttributedString.characters.getter();
          (*(void (**)(char *, uint64_t))(v115 + 8))(v23, v116);
          sub_1003A74FC(&qword_1006A01B0, (void (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView);
          uint64_t v84 = String.init<A>(_:)();
          uint64_t v86 = v84;
          uint64_t v87 = v85;
          if (!v121
            || (uint64_t v127 = v84,
                uint64_t v128 = v85,
                id v125 = v108,
                uint64_t v126 = v121,
                (StringProtocol.localizedStandardContains<A>(_:)() & 1) != 0))
          {
            uint64_t v37 = a10;
            uint64_t v23 = v124;
            uint64_t v88 = v109;
            sub_1003A4C6C((uint64_t)v124, v109, (uint64_t (*)(void))type metadata accessor for ChecklistItemID);
            id v89 = [v104 todo];
            if (v89)
            {
              uint64_t v90 = v89;
              int v91 = [v89 done];
            }
            else
            {
              int v91 = 0;
            }
            a5 = v113;
            ChecklistItemEntity.init(id:managedObjectID:text:checked:)(v88, v122, v86, v87, v91, (uint64_t)v113);
            uint64_t v24 = v110;
            sub_1003A4C6C((uint64_t)a5, v110, (uint64_t (*)(void))type metadata accessor for ChecklistItemEntity);
            a1 = *a10;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *a10 = a1;
            if (isUniquelyReferenced_nonNull_native)
            {
LABEL_37:
              unint64_t v95 = *(void *)(a1 + 16);
              unint64_t v94 = *(void *)(a1 + 24);
              if (v95 >= v94 >> 1)
              {
                a1 = sub_1001A92CC(v94 > 1, v95 + 1, 1, a1);
                *uint64_t v37 = a1;
              }
              v96 = v103;
              *(void *)(a1 + 16) = v95 + 1;
              sub_1003A4C04(v24, a1+ ((*(unsigned __int8 *)(v111 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80))+ *(void *)(v111 + 72) * v95, (uint64_t (*)(void))type metadata accessor for ChecklistItemEntity);
              v97 = v112;
              uint64_t v98 = *v112;
              uint64_t v99 = v112[1];

              v100 = (char *)(v98 + v99);
              if (__OFADD__(v98, v99))
              {
                __break(1u);
              }
              else if (!__OFADD__(a2, v96))
              {
                if ((uint64_t)v100 <= (uint64_t)&v96[a2]) {
                  v100 = &v96[a2];
                }
                if (v98 >= a2) {
                  uint64_t v98 = a2;
                }
                v101 = &v100[-v98];
                if (!__OFSUB__(v100, v98))
                {
                  sub_1003A7268((uint64_t)a5, (uint64_t (*)(void))type metadata accessor for ChecklistItemEntity);
                  sub_1003A7268((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for ChecklistItemID);
                  (*(void (**)(char *, uint64_t))(v107 + 8))(v105, v106);
                  uint64_t *v97 = v98;
                  v97[1] = (uint64_t)v101;
                  return;
                }
LABEL_54:
                __break(1u);
                return;
              }
              __break(1u);
              goto LABEL_54;
            }
LABEL_51:
            a1 = sub_1001A92CC(0, *(void *)(a1 + 16) + 1, 1, a1);
            *uint64_t v37 = a1;
            goto LABEL_37;
          }
          swift_bridgeObjectRelease();

          uint64_t v92 = (uint64_t)v124;
        }
        sub_1003A7268(v92, (uint64_t (*)(void))type metadata accessor for ChecklistItemID);
        (*(void (**)(char *, uint64_t))(v107 + 8))(v105, v106);
        return;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v107 + 56))(v33, 1, 1, v106);
    }

    sub_10002B754((uint64_t)v33, (uint64_t *)&unk_10069C990);
  }
}

uint64_t sub_1003A4518@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s11MobileNotes26VisibleChecklistItemsQueryVACycfC_0();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_1003A4544(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v6 = v1[2];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10017733C;
  return VisibleChecklistItemsQuery.entities(for:)(a1, v4, v5, v6);
}

uint64_t sub_1003A45F4(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1006A4EA0 + dword_1006A4EA0);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10016F18C;
  return v7(v3, v4);
}

uint64_t sub_1003A46A8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100389BB4();
  *uint64_t v5 = v2;
  v5[1] = sub_100161724;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t VisibleChecklistItemsQuery.entities(matching:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1006A4EC8 + dword_1006A4EC8);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_1003A754C;
  return v10(a1, a2, a4);
}

uint64_t sub_1003A481C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v7 = *(void *)(v3 + 8);
  unint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1006A4EC8 + dword_1006A4EC8);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_10016997C;
  return v10(a2, a3, v7);
}

uint64_t _s11MobileNotes26VisibleChecklistItemsQueryVACycfC_0()
{
  sub_10002F214((uint64_t *)&unk_10069B130);
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v0 = AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_1006A4F70);
  swift_getKeyPath();
  IntentParameterDependency.__allocating_init<A, B>(_:)();
  return v0;
}

uint64_t sub_1003A4A18()
{
  uint64_t v1 = (int *)(type metadata accessor for ChecklistItemID() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v6 + v1[7];
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v5, v4);
}

uint64_t sub_1003A4B64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for ChecklistItemID() - 8);
  return sub_1003A251C(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t sub_1003A4C04(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003A4C6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003A4CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  return _swift_task_switch(sub_1003A4CF8, 0, 0);
}

uint64_t sub_1003A4CF8()
{
  v0[2] = _swiftEmptyArrayStorage;
  unint64_t v1 = v0[5];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v2 = v3;
    v0[9] = v3;
    if (v3) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v13 = _swiftEmptyArrayStorage;
LABEL_16:
    uint64_t v19 = (uint64_t (*)(void *))v0[1];
    return v19(v13);
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v3 = swift_bridgeObjectRetain();
  v0[9] = v2;
  if (!v2) {
    goto LABEL_15;
  }
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = 0;
    while (1)
    {
      v0[10] = v7;
      uint64_t v8 = v0[5];
      id v9 = (v8 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(v8 + 8 * v7 + 32);
      unint64_t v10 = v9;
      v0[11] = v9;
      AppDependency.wrappedValue.getter();
      uint64_t v11 = (void *)v0[3];
      id v12 = [v11 managedObjectContextForObjectID:v10];
      v0[12] = v12;

      if (v12) {
        break;
      }

      uint64_t v7 = v0[10] + 1;
      if (v7 == v0[9])
      {
        swift_bridgeObjectRelease();
        uint64_t v13 = (void *)v0[2];
        goto LABEL_16;
      }
    }
    uint64_t v15 = v0[6];
    uint64_t v14 = v0[7];
    uint64_t v16 = (void *)swift_allocObject();
    v0[13] = v16;
    v16[2] = v12;
    v16[3] = v10;
    v16[4] = v15;
    v16[5] = v14;
    v12;
    id v17 = v10;
    swift_bridgeObjectRetain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[14] = v18;
    uint64_t v6 = sub_10002F214(qword_1006A4F10);
    *uint64_t v18 = v0;
    v18[1] = sub_1003A4F50;
    uint64_t v4 = sub_1003A713C;
    uint64_t v3 = (uint64_t)(v0 + 4);
    uint64_t v5 = v16;
  }
  return NSManagedObjectContext.perform<A>(_:)(v3, v4, v5, v6);
}

uint64_t sub_1003A4F50()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1003A5068, 0, 0);
}

uint64_t sub_1003A5068()
{
  uint64_t v2 = (void *)v0[11];
  uint64_t v1 = (void *)v0[12];
  sub_10022C31C(v0[4]);

  uint64_t v3 = v0[10] + 1;
  if (v3 == v0[9])
  {
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t v9 = v0[2];
    unint64_t v10 = (uint64_t (*)(uint64_t))v0[1];
    return v10(v9);
  }
  else
  {
    while (1)
    {
      v0[10] = v3;
      uint64_t v4 = v0[5];
      id v5 = (v4 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(v4 + 8 * v3 + 32);
      uint64_t v6 = v5;
      v0[11] = v5;
      AppDependency.wrappedValue.getter();
      uint64_t v7 = (void *)v0[3];
      id v8 = [v7 managedObjectContextForObjectID:v6];
      v0[12] = v8;

      if (v8) {
        break;
      }

      uint64_t v3 = v0[10] + 1;
      if (v3 == v0[9]) {
        goto LABEL_7;
      }
    }
    uint64_t v13 = v0[6];
    uint64_t v12 = v0[7];
    uint64_t v14 = (void *)swift_allocObject();
    v0[13] = v14;
    v14[2] = v8;
    v14[3] = v6;
    v14[4] = v13;
    v14[5] = v12;
    v8;
    id v15 = v6;
    swift_bridgeObjectRetain();
    uint64_t v16 = (void *)swift_task_alloc();
    v0[14] = v16;
    uint64_t v17 = sub_10002F214(qword_1006A4F10);
    *uint64_t v16 = v0;
    v16[1] = sub_1003A4F50;
    return NSManagedObjectContext.perform<A>(_:)(v0 + 4, sub_1003A713C, v14, v17);
  }
}

uint64_t sub_1003A526C(uint64_t a1, uint64_t a2)
{
  v2[27] = a1;
  v2[28] = a2;
  uint64_t v3 = type metadata accessor for NoteID();
  v2[29] = v3;
  v2[30] = *(void *)(v3 - 8);
  v2[31] = swift_task_alloc();
  type metadata accessor for NoteEntity(0);
  v2[32] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for ManagedEntityContextType();
  v2[33] = v4;
  v2[34] = *(void *)(v4 - 8);
  v2[35] = swift_task_alloc();
  return _swift_task_switch(sub_1003A53B4, 0, 0);
}

uint64_t sub_1003A53B4()
{
  uint64_t v2 = v0[34];
  uint64_t v1 = v0[35];
  uint64_t v3 = v0[33];
  AppDependency.wrappedValue.getter();
  uint64_t v4 = (void *)v0[23];
  id v5 = [v4 modernManagedObjectContext];
  v0[36] = v5;

  AppDependency.wrappedValue.getter();
  uint64_t v6 = (void *)v0[24];
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for ManagedEntityContextType.html(_:), v3);
  uint64_t v7 = ICUnifiedNoteContext.managedObjectContext(for:)();
  v0[37] = v7;
  (*(void (**)(void, void))(v0[34] + 8))(v0[35], v0[33]);

  uint64_t v8 = IntentParameterDependency.wrappedValue.getter();
  v0[38] = v8;
  if (v8)
  {
    uint64_t v10 = v0[31];
    uint64_t v9 = v0[32];
    uint64_t v11 = v0[29];
    uint64_t v12 = v0[30];
    swift_getKeyPath();
    sub_1001FE33C();
    IntentProjection.subscript.getter();
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v10, v9, v11);
    sub_1003A7268(v9, type metadata accessor for NoteEntity);
    AppDependency.wrappedValue.getter();
    uint64_t v13 = v0[26];
    v0[39] = v13;
    uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1006A3B80 + dword_1006A3B80);
    uint64_t v14 = (void *)swift_task_alloc();
    v0[40] = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_1003A5758;
    uint64_t v15 = v0[31];
    return v19(v15, v13);
  }
  else
  {
    id v17 = [objc_allocWithZone((Class)ICRecentNotesCoreDataIndexer) initWithLegacyManagedObjectContext:v7 modernManagedObjectContext:v5];
    v0[42] = v17;
    [v17 setMaximumNumberOfNotesPerAccount:10];
    [v17 setChecklistsOnly:1];
    v0[2] = v0;
    v0[3] = sub_1003A59EC;
    uint64_t v18 = swift_continuation_init();
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000;
    v0[12] = sub_10022AB14;
    v0[13] = &unk_100639038;
    v0[14] = v18;
    [v17 reloadData:v0 + 10];
    return _swift_continuation_await(v0 + 2);
  }
}

uint64_t sub_1003A5758(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)v1 + 312);
  uint64_t v3 = *(void *)(*(void *)v1 + 248);
  uint64_t v4 = *(void *)(*(void *)v1 + 240);
  uint64_t v5 = *(void *)(*(void *)v1 + 232);
  *(void *)(*(void *)v1 + 328) = a1;
  swift_task_dealloc();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  return _swift_task_switch(sub_1003A58D0, 0, 0);
}

uint64_t sub_1003A58D0()
{
  uint64_t v1 = v0[41];
  if (v1)
  {
    sub_10002F214(&qword_10069BA00);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_100529F20;
    *(void *)(v2 + 32) = v1;
    uint64_t v8 = (void *)v2;
    specialized Array._endMutation()();
    uint64_t v3 = v8;
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  v0[43] = v3;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1006A4EB0 + dword_1006A4EB0);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[44] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1003A5D64;
  uint64_t v5 = v0[27];
  return v7((uint64_t)v3, 0, 0, v5);
}

uint64_t sub_1003A59EC()
{
  return _swift_task_switch(sub_1003A5ACC, 0, 0);
}

uint64_t sub_1003A5ACC()
{
  uint64_t v1 = (void *)v0;
  id v2 = [*(id *)(v0 + 336) newSnapshotFromIndex];
  id v3 = [v2 itemIdentifiers];
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    id v18 = v2;
    uint64_t v19 = (void *)v0;
    uint64_t v6 = v0 + 120;
    uint64_t v7 = v0 + 152;
    uint64_t v20 = (id *)(v0 + 200);
    uint64_t v8 = v4 + 32;
    swift_bridgeObjectRetain();
    uint64_t v9 = &selRef_estimatedDimension_;
    uint64_t v10 = &selRef_estimatedDimension_;
    uint64_t v11 = NSManagedObjectID_ptr;
    while (1)
    {
      sub_100032E28(v8, v6);
      sub_100032E28(v6, v7);
      sub_100031418(0, (unint64_t *)&qword_10069E810);
      if (swift_dynamicCast())
      {
        uint64_t v12 = v11;
        id v13 = *v20;
        if (([*v20 v9[394]] & 1) != 0
          && ([v13 v10[392]] & 1) != 0)
        {
          sub_100018FE8(v6);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          uint64_t v9 = &selRef_estimatedDimension_;
          uint64_t v10 = &selRef_estimatedDimension_;
          uint64_t v11 = v12;
          goto LABEL_5;
        }

        uint64_t v11 = v12;
      }
      sub_100018FE8(v6);
LABEL_5:
      v8 += 32;
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        id v2 = v18;
        uint64_t v1 = v19;
        break;
      }
    }
  }
  uint64_t v14 = (void *)v1[42];

  swift_bridgeObjectRelease();
  v1[43] = _swiftEmptyArrayStorage;
  uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1006A4EB0 + dword_1006A4EB0);
  uint64_t v15 = (void *)swift_task_alloc();
  v1[44] = v15;
  *uint64_t v15 = v1;
  v15[1] = sub_1003A5D64;
  uint64_t v16 = v1[27];
  return v21((uint64_t)_swiftEmptyArrayStorage, 0, 0, v16);
}

uint64_t sub_1003A5D64(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 360) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1003A5F28;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v4 + 368) = a1;
    uint64_t v5 = sub_1003A5E94;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003A5E94()
{
  uint64_t v1 = *(void **)(v0 + 288);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 368);
  return v2(v3);
}

uint64_t sub_1003A5F28()
{
  uint64_t v1 = *(void **)(v0 + 288);

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1003A5FC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  uint64_t v4 = sub_10002F214(&qword_10069FC58);
  v3[11] = v4;
  v3[12] = *(void *)(v4 - 8);
  v3[13] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for ManagedEntityContextType();
  v3[14] = v5;
  v3[15] = *(void *)(v5 - 8);
  v3[16] = swift_task_alloc();
  return _swift_task_switch(sub_1003A60E4, 0, 0);
}

uint64_t sub_1003A60E4()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[14];
  AppDependency.wrappedValue.getter();
  uint64_t v4 = (void *)v0[2];
  v0[17] = [v4 modernManagedObjectContext];

  AppDependency.wrappedValue.getter();
  uint64_t v5 = (void *)v0[3];
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for ManagedEntityContextType.html(_:), v3);
  v0[18] = ICUnifiedNoteContext.managedObjectContext(for:)();
  (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);

  uint64_t v6 = self;
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [v6 prefixMatchingQueryStringForSearchString:v7];

  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  v0[19] = v11;
  sub_100031418(0, (unint64_t *)&unk_1006A4F40);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[20] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_1003A6324;
  return static ICSearchQueryOperation.searchResults(queryString:rankingQueries:)(v9, v11, _swiftEmptyArrayStorage);
}

uint64_t sub_1003A6324(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 168) = a1;
  *(void *)(v3 + 176) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1003A6E20;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1003A6440;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1003A6440()
{
  unint64_t v1 = v0[21];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    type metadata accessor for MainActor();
    v0[23] = static MainActor.shared.getter();
    uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1003A657C, v3, v2);
  }
  uint64_t v5 = (void *)v0[17];
  uint64_t v6 = (void *)v0[18];
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  NSString v7 = (uint64_t (*)(void *))v0[1];
  return v7(_swiftEmptyArrayStorage);
}

uint64_t sub_1003A657C()
{
  uint64_t v2 = *(void **)(v0 + 136);
  unint64_t v1 = *(void **)(v0 + 144);
  swift_release();
  id v3 = [self sharedIndexer];
  sub_100031418(0, (unint64_t *)&unk_10069FCE0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  sub_10002F214(&qword_10069BA00);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100524CE0;
  *(void *)(v5 + 32) = v2;
  *(void *)(v5 + 40) = v1;
  specialized Array._endMutation()();
  sub_100031418(0, (unint64_t *)&unk_10069FCF0);
  id v6 = v2;
  id v7 = v1;
  Class v8 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v9 = [v3 objectsForSearchableItems:isa inContexts:v8];

  sub_10002F214((uint64_t *)&unk_10069FD00);
  unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  *(void *)(v0 + 32) = _swiftEmptyArrayStorage;
  uint64_t v11 = v0 + 32;
  if (v10 >> 62)
  {
LABEL_37:
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    if (v12) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v12)
    {
LABEL_3:
      uint64_t v13 = 0;
      uint64_t v41 = (id *)(v11 + 24);
      uint64_t v37 = (void **)v11;
      unint64_t v38 = v10;
      uint64_t v14 = (void *)(v11 + 8);
      uint64_t v15 = *(void *)(v0 + 96);
      uint64_t v42 = v12;
      unint64_t v43 = v10 & 0xC000000000000001;
      uint64_t v39 = (void (**)(void, void))(v15 + 8);
      uint64_t v40 = (void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
      uint64_t v11 = *(void *)(v0 + 176);
      while (1)
      {
        if (v43)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v16 = v13 + 1;
          if (__OFADD__(v13, 1)) {
            goto LABEL_36;
          }
        }
        else
        {
          swift_unknownObjectRetain();
          uint64_t v16 = v13 + 1;
          if (__OFADD__(v13, 1))
          {
LABEL_36:
            __break(1u);
            goto LABEL_37;
          }
        }
        *uint64_t v14 = &OBJC_PROTOCOL___ICSearchIndexableNote;
        uint64_t v17 = swift_dynamicCastObjCProtocolConditional();
        if (v17)
        {
          uint64_t v18 = v17;
          swift_getObjectType();
          sub_100031418(0, (unint64_t *)&qword_10069FD10);
          uint64_t v19 = swift_dynamicCastMetatype() ? (void *)v18 : 0;
          if (v19) {
            break;
          }
        }
        swift_unknownObjectRelease();
LABEL_5:
        ++v13;
        if (v16 == v12)
        {
          swift_bridgeObjectRelease();
          uint64_t v31 = *v37;
          goto LABEL_39;
        }
      }
      uint64_t v20 = qword_10069AD60;
      swift_unknownObjectRetain();
      if (v20 != -1) {
        swift_once();
      }
      uint64_t v21 = *(void *)(v0 + 104);
      uint64_t v22 = *(void *)(v0 + 88);
      uint64_t v23 = sub_10003293C(v22, (uint64_t)static ICNote.hasValidEntityIdentifier);
      (*v40)(v21, v23, v22);
      *(void *)(v0 + 48) = v41;
      *(void *)(v0 + 56) = v19;
      swift_unknownObjectRetain();
      char v24 = Predicate.evaluate(_:)();
      *(void *)(v0 + 224) = v11;
      (*v39)(*(void *)(v0 + 104), *(void *)(v0 + 88));
      if (v11)
      {
        swift_unknownObjectRelease();

        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return _swift_task_switch(sub_1003A6D9C, 0, 0);
      }

      if (v24)
      {
        uint64_t v12 = v42;
        if (([v19 isHiddenFromSearch] & 1) != 0
          || [v19 isDeletedOrInTrash])
        {
          swift_unknownObjectRelease_n();
LABEL_23:
          uint64_t v11 = 0;
LABEL_31:
          unint64_t v10 = v38;
          goto LABEL_5;
        }
        id v25 = [v19 hasChecklist];
        sub_100031418(0, (unint64_t *)&unk_1006A4F50);
        v26.super.super.Class isa = NSNumber.init(BOOLeanLiteral:)(1).super.super.isa;
        Class v27 = v26.super.super.isa;
        if (v25)
        {
          id v28 = v25;
          char v29 = static NSObject.== infix(_:_:)();

          if (v29)
          {
            id v30 = [v19 objectID];
            swift_unknownObjectRelease_n();
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            uint64_t v12 = v42;
            if (*(void *)(((unint64_t)*v37 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)*v37 & 0xFFFFFFFFFFFFFF8)
                                                                                                 + 0x18) >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            goto LABEL_23;
          }
        }
        else
        {
        }
      }
      swift_unknownObjectRelease_n();
      uint64_t v11 = 0;
      uint64_t v12 = v42;
      goto LABEL_31;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v31 = _swiftEmptyArrayStorage;
LABEL_39:
  *(void *)(v0 + 192) = v31;
  uint64_t v32 = *(void *)(v0 + 72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  BOOL v44 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1006A4EB0 + dword_1006A4EB0);
  id v33 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v33;
  void *v33 = v0;
  v33[1] = sub_1003A6B64;
  uint64_t v34 = *(void *)(v0 + 80);
  uint64_t v35 = *(void *)(v0 + 64);
  return v44((uint64_t)v31, v35, v32, v34);
}

uint64_t sub_1003A6B64(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 208) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1003A6D18;
  }
  else
  {
    *(void *)(v4 + 216) = a1;
    uint64_t v5 = sub_1003A6C8C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003A6C8C()
{
  uint64_t v1 = (void *)v0[17];
  uint64_t v2 = (void *)v0[18];
  swift_bridgeObjectRelease();

  uint64_t v3 = v0[27];
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
  return v4(v3);
}

uint64_t sub_1003A6D18()
{
  uint64_t v1 = (void *)v0[17];
  uint64_t v2 = (void *)v0[18];
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1003A6D9C()
{
  uint64_t v1 = (void *)v0[17];
  uint64_t v2 = (void *)v0[18];
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1003A6E20()
{
  uint64_t v1 = (void *)v0[18];
  uint64_t v2 = (void *)v0[17];
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

unint64_t sub_1003A6EA8()
{
  unint64_t result = qword_1006A4ED0;
  if (!qword_1006A4ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A4ED0);
  }
  return result;
}

unint64_t sub_1003A6F00()
{
  unint64_t result = qword_1006A4ED8;
  if (!qword_1006A4ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A4ED8);
  }
  return result;
}

uint64_t sub_1003A6F54()
{
  return sub_1003A74FC(qword_1006A4EE0, (void (*)(uint64_t))type metadata accessor for ChecklistItemEntity);
}

unint64_t sub_1003A6FA0()
{
  unint64_t result = qword_1006A4EF8;
  if (!qword_1006A4EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A4EF8);
  }
  return result;
}

uint64_t sub_1003A6FF4()
{
  return sub_1003A74FC(&qword_1006A4F00, (void (*)(uint64_t))type metadata accessor for ChecklistItemEntity);
}

unint64_t sub_1003A7040()
{
  unint64_t result = qword_1006A4F08;
  if (!qword_1006A4F08)
  {
    sub_10001DFF4(qword_1006A4F10);
    sub_1003A74FC(&qword_1006A4F00, (void (*)(uint64_t))type metadata accessor for ChecklistItemEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A4F08);
  }
  return result;
}

ValueMetadata *type metadata accessor for VisibleChecklistItemsQuery()
{
  return &type metadata for VisibleChecklistItemsQuery;
}

uint64_t sub_1003A70F4()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003A713C@<X0>(void *a1@<X8>)
{
  return sub_1003A3628(*(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_1003A715C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_1003A71A4(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  sub_1003A393C(a1, a2, a3, a4, *(uint64_t **)(v4 + 16), *(void **)(v4 + 24), *(void **)(v4 + 32), *(void **)(v4 + 40), *(void *)(v4 + 48), *(uint64_t **)(v4 + 56));
}

uint64_t sub_1003A71D4()
{
  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1003A71E4()
{
  unint64_t result = qword_1006A3E38;
  if (!qword_1006A3E38)
  {
    sub_10001DFF4(&qword_1006A3E30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1006A3E38);
  }
  return result;
}

uint64_t sub_1003A7240()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_1003A7268(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1003A72C8()
{
  uint64_t v1 = (int *)(type metadata accessor for ChecklistItemID() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v6 + v1[7];
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  return _swift_deallocObject(v0, ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v4);
}

void sub_1003A7410(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for ChecklistItemID() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = *(void **)(v4 + v11);
  uint64_t v14 = *(uint64_t **)(v4 + v12);
  uint64_t v15 = *(unsigned __int8 **)(v4 + ((v12 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_1003A2980(a1, a2, a3, a4, (char *)(v4 + v10), v13, v14, v15);
}

uint64_t sub_1003A74EC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003A74FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003A7558(unint64_t a1)
{
  uint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    uint64_t v3 = sub_1002E082C(v3);
    uint64_t *v1 = v3;
  }
  uint64_t v5 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      uint64_t v9 = v5 + 8 * a1;
      uint64_t v10 = *(void *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(void *)(v5 + 16) = v7;
      specialized Array._endMutation()();
      return v10;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003A763C()
{
  sub_10002F214(&qword_10069BA00);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1005352B0;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___ICSystemPaperViewController_doneButton);
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  *(void *)(result + 32) = v2;
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR___ICSystemPaperViewController_newNoteButton);
  if (!v3)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  *(void *)(result + 40) = v3;
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR___ICSystemPaperViewController_moreButton);
  if (!v4)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  *(void *)(result + 48) = v4;
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR___ICSystemPaperViewController_backToNotesButton);
  if (!v5)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  *(void *)(result + 56) = v5;
  unint64_t v6 = *(void **)(v0 + OBJC_IVAR___ICSystemPaperViewController_paletteButton);
  if (v6)
  {
    *(void *)(result + 64) = v6;
    uint64_t v12 = result;
    specialized Array._endMutation()();
    id v7 = v2;
    id v8 = v3;
    id v9 = v4;
    id v10 = v5;
    id v11 = v6;
    return v12;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1003A773C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100032974(v0, qword_1006A4F80);
  sub_10003293C(v0, (uint64_t)qword_1006A4F80);
  return static Logger.systemPaper.getter();
}

id sub_1003A7788(uint64_t a1, uint64_t a2, void *a3)
{
  Class v27 = a3;
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v30 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v4 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  unint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v7);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v8 - 8);
  swift_unknownObjectWeakInit();
  *(void *)&v3[OBJC_IVAR___ICSystemPaperViewController_pageControlFadeOutTimer] = 0;
  v3[OBJC_IVAR___ICSystemPaperViewController_didCreateInitialEditorController] = 0;
  v3[OBJC_IVAR___ICSystemPaperViewController_hasFinishedInitialViewRefresh] = 0;
  v3[OBJC_IVAR___ICSystemPaperViewController_viewDidAppearAtLeastOnce] = 0;
  uint64_t v29 = OBJC_IVAR___ICSystemPaperViewController_editorViewControllerUpdateDispatchQueue;
  uint64_t v28 = sub_100031418(0, (unint64_t *)&qword_10069D2D0);
  id v9 = v3;
  static DispatchQoS.unspecified.getter();
  uint64_t v32 = _swiftEmptyArrayStorage;
  sub_1003B9E8C((unint64_t *)&qword_10069B280, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10002F214((uint64_t *)&unk_10069E6B0);
  sub_1003B9ED4((unint64_t *)&qword_10069B290, (uint64_t *)&unk_10069E6B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v30);
  *(void *)&v3[v29] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v10 = OBJC_IVAR___ICSystemPaperViewController_editorViewControllerUpdateSemaphore;
  *(void *)&v9[v10] = dispatch_semaphore_create(0);
  *(void *)&v9[OBJC_IVAR___ICSystemPaperViewController_emptyNoteIds] = _swiftEmptyArrayStorage;
  *(void *)&v9[OBJC_IVAR___ICSystemPaperViewController_incomingLink] = 0;
  *(void *)&v9[OBJC_IVAR___ICSystemPaperViewController_incomingImageData] = _swiftEmptyArrayStorage;
  id v11 = &v9[OBJC_IVAR___ICSystemPaperViewController_launchPreview];
  uint64_t v12 = type metadata accessor for NotePreview();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(void *)&v9[OBJC_IVAR___ICSystemPaperViewController_targetCachePoolSize] = 2;
  *(void *)&v9[OBJC_IVAR___ICSystemPaperViewController_editorCachePool] = _swiftEmptyArrayStorage;
  uint64_t v13 = OBJC_IVAR___ICSystemPaperViewController_noteCache;
  id v14 = objc_allocWithZone((Class)NSCache);
  *(void *)&v9[v13] = [v14 init:v24];
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    uint64_t v15 = (void *)sub_1001591B4((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v15 = &_swiftEmptySetSingleton;
  }
  uint64_t v17 = (objc_class *)ObjectType;
  uint64_t v16 = v27;
  uint64_t v18 = v25;
  *(void *)&v9[OBJC_IVAR___ICSystemPaperViewController_subscriptions] = v15;
  *(void *)&v9[OBJC_IVAR___ICSystemPaperViewController____lazy_storage___indexer] = 0;
  v9[OBJC_IVAR___ICSystemPaperViewController_shouldShowModernAccountAlert] = 0;
  v9[OBJC_IVAR___ICSystemPaperViewController_isSettingCurrentNote] = 0;
  *(void *)&v9[OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v9[OBJC_IVAR___ICSystemPaperViewController_pageViewController] = 0;
  *(void *)&v9[OBJC_IVAR___ICSystemPaperViewController_launchImageView] = 0;
  *(void *)&v9[OBJC_IVAR___ICSystemPaperViewController_doneButton] = 0;
  *(void *)&v9[OBJC_IVAR___ICSystemPaperViewController_newNoteButton] = 0;
  *(void *)&v9[OBJC_IVAR___ICSystemPaperViewController_moreButton] = 0;
  *(void *)&v9[OBJC_IVAR___ICSystemPaperViewController_backToNotesButton] = 0;
  *(void *)&v9[OBJC_IVAR___ICSystemPaperViewController_pageContainerView] = 0;
  *(void *)&v9[OBJC_IVAR___ICSystemPaperViewController_pageControl] = 0;
  *(void *)&v9[OBJC_IVAR___ICSystemPaperViewController_paletteButton] = 0;
  *(void *)&v9[OBJC_IVAR___ICSystemPaperViewController_toolPickerBackgroundView] = 0;
  *(void *)&v9[OBJC_IVAR___ICSystemPaperViewController_toolPickerBackgroundViewBottomConstraint] = 0;
  *(void *)&v9[OBJC_IVAR___ICSystemPaperViewController_toolPickerBackgroundViewHeight] = 0x4054000000000000;
  *(void *)&v9[OBJC_IVAR___ICSystemPaperViewController_toolPickerBackgroundViewOnscreenBottomConstraintConstant] = 0;
  uint64_t v19 = &v9[OBJC_IVAR___ICSystemPaperViewController____lazy_storage___toolPickerBackgroundViewOffscreenBottomConstraintConstant];
  *(void *)uint64_t v19 = 0;
  v19[8] = 1;
  *(void *)&v9[OBJC_IVAR___ICSystemPaperViewController_toolPickerSpringAnimationDampingRatio] = 0x3FEB0A3D70A3D70ALL;
  *(void *)&v9[OBJC_IVAR___ICSystemPaperViewController_toolPickerSpringAnimationResponse] = 0x3FE0FDF3B645A1CBLL;

  if (v18)
  {
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v20 = 0;
  }
  v31.receiver = v9;
  v31.super_class = v17;
  id v21 = [super initWithNibName:v20 bundle:v16];

  sub_100031418(0, (unint64_t *)&qword_10069C280);
  id v22 = v21;
  static UITraitCollection.systemTraitsAffectingColorAppearance.getter();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  UIViewController.registerForTraitChanges<A>(_:handler:)();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v22;
}

id sub_1003A7DE0(void *a1)
{
  NSString v20 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v23 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v2 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v4 = (char *)&ObjectType - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v5);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v6 - 8);
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR___ICSystemPaperViewController_pageControlFadeOutTimer] = 0;
  v1[OBJC_IVAR___ICSystemPaperViewController_didCreateInitialEditorController] = 0;
  v1[OBJC_IVAR___ICSystemPaperViewController_hasFinishedInitialViewRefresh] = 0;
  v1[OBJC_IVAR___ICSystemPaperViewController_viewDidAppearAtLeastOnce] = 0;
  uint64_t v22 = OBJC_IVAR___ICSystemPaperViewController_editorViewControllerUpdateDispatchQueue;
  uint64_t v21 = sub_100031418(0, (unint64_t *)&qword_10069D2D0);
  uint64_t v7 = v1;
  static DispatchQoS.unspecified.getter();
  uint64_t v25 = _swiftEmptyArrayStorage;
  sub_1003B9E8C((unint64_t *)&qword_10069B280, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10002F214((uint64_t *)&unk_10069E6B0);
  sub_1003B9ED4((unint64_t *)&qword_10069B290, (uint64_t *)&unk_10069E6B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v23);
  *(void *)&v1[v22] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v8 = OBJC_IVAR___ICSystemPaperViewController_editorViewControllerUpdateSemaphore;
  *(void *)&v7[v8] = dispatch_semaphore_create(0);
  *(void *)&v7[OBJC_IVAR___ICSystemPaperViewController_emptyNoteIds] = _swiftEmptyArrayStorage;
  *(void *)&v7[OBJC_IVAR___ICSystemPaperViewController_incomingLink] = 0;
  *(void *)&v7[OBJC_IVAR___ICSystemPaperViewController_incomingImageData] = _swiftEmptyArrayStorage;
  id v9 = &v7[OBJC_IVAR___ICSystemPaperViewController_launchPreview];
  uint64_t v10 = type metadata accessor for NotePreview();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(void *)&v7[OBJC_IVAR___ICSystemPaperViewController_targetCachePoolSize] = 2;
  *(void *)&v7[OBJC_IVAR___ICSystemPaperViewController_editorCachePool] = _swiftEmptyArrayStorage;
  uint64_t v11 = OBJC_IVAR___ICSystemPaperViewController_noteCache;
  *(void *)&v7[v11] = [objc_allocWithZone((Class)NSCache) init];
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    uint64_t v12 = (void *)sub_1001591B4((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v12 = &_swiftEmptySetSingleton;
  }
  id v14 = (objc_class *)ObjectType;
  uint64_t v13 = v20;
  *(void *)&v7[OBJC_IVAR___ICSystemPaperViewController_subscriptions] = v12;
  *(void *)&v7[OBJC_IVAR___ICSystemPaperViewController____lazy_storage___indexer] = 0;
  v7[OBJC_IVAR___ICSystemPaperViewController_shouldShowModernAccountAlert] = 0;
  v7[OBJC_IVAR___ICSystemPaperViewController_isSettingCurrentNote] = 0;
  *(void *)&v7[OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v7[OBJC_IVAR___ICSystemPaperViewController_pageViewController] = 0;
  *(void *)&v7[OBJC_IVAR___ICSystemPaperViewController_launchImageView] = 0;
  *(void *)&v7[OBJC_IVAR___ICSystemPaperViewController_doneButton] = 0;
  *(void *)&v7[OBJC_IVAR___ICSystemPaperViewController_newNoteButton] = 0;
  *(void *)&v7[OBJC_IVAR___ICSystemPaperViewController_moreButton] = 0;
  *(void *)&v7[OBJC_IVAR___ICSystemPaperViewController_backToNotesButton] = 0;
  *(void *)&v7[OBJC_IVAR___ICSystemPaperViewController_pageContainerView] = 0;
  *(void *)&v7[OBJC_IVAR___ICSystemPaperViewController_pageControl] = 0;
  *(void *)&v7[OBJC_IVAR___ICSystemPaperViewController_paletteButton] = 0;
  *(void *)&v7[OBJC_IVAR___ICSystemPaperViewController_toolPickerBackgroundView] = 0;
  *(void *)&v7[OBJC_IVAR___ICSystemPaperViewController_toolPickerBackgroundViewBottomConstraint] = 0;
  *(void *)&v7[OBJC_IVAR___ICSystemPaperViewController_toolPickerBackgroundViewHeight] = 0x4054000000000000;
  *(void *)&v7[OBJC_IVAR___ICSystemPaperViewController_toolPickerBackgroundViewOnscreenBottomConstraintConstant] = 0;
  uint64_t v15 = &v7[OBJC_IVAR___ICSystemPaperViewController____lazy_storage___toolPickerBackgroundViewOffscreenBottomConstraintConstant];
  *(void *)uint64_t v15 = 0;
  v15[8] = 1;
  *(void *)&v7[OBJC_IVAR___ICSystemPaperViewController_toolPickerSpringAnimationDampingRatio] = 0x3FEB0A3D70A3D70ALL;
  *(void *)&v7[OBJC_IVAR___ICSystemPaperViewController_toolPickerSpringAnimationResponse] = 0x3FE0FDF3B645A1CBLL;

  v24.receiver = v7;
  v24.super_class = v14;
  [super initWithCoder:v13];
  if (v16)
  {
    sub_100031418(0, (unint64_t *)&qword_10069C280);
    id v17 = v16;
    static UITraitCollection.systemTraitsAffectingColorAppearance.getter();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    UIViewController.registerForTraitChanges<A>(_:handler:)();

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
  }
  return v16;
}

id sub_1003A8448()
{
  uint64_t v1 = OBJC_IVAR___ICSystemPaperViewController____lazy_storage___indexer;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___ICSystemPaperViewController____lazy_storage___indexer);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___ICSystemPaperViewController____lazy_storage___indexer);
  }
  else
  {
    uint64_t v4 = (void *)sub_1003A84AC(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1003A84AC(uint64_t a1)
{
  id v2 = [self sharedContext];
  if (v2
    && (id v3 = v2,
        id v4 = [v2 workerManagedObjectContext],
        v3,
        v4))
  {
    id v5 = [objc_allocWithZone((Class)ICNoteCoreDataIndexer) initWithLegacyManagedObjectContext:0 modernManagedObjectContext:v4];
    id v6 = [self folderNoteSortTypeWithOrder:2 direction:1];
    [v5 setSortType:v6];

    [v5 setDateHeadersType:1];
    [v5 setDelegate:a1];
    id v7 = [self queryForSystemPaperNotesAllowsRecentlyDeleted:0];
    [v5 setNoteQuery:v7];

    return (uint64_t)v5;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

void sub_1003A8648()
{
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    id v2 = [Strong viewIfLoaded];

    if (v2) {
      sub_1003A86BC();
    }
  }
}

void sub_1003A86BC()
{
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = self;
  id v3 = [v2 colorNamed:v1];

  if (!v3)
  {
    if (qword_10069AF68 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_10003293C(v19, (uint64_t)qword_1006A4F80);
    Class v27 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v20, "Couldn't find paper_palette_shadow from the color xcassets.", v21, 2u);
      swift_slowDealloc();
    }
    goto LABEL_20;
  }
  NSString v4 = String._bridgeToObjectiveC()();
  Class v27 = [v2 colorNamed:v4];

  if (!v27)
  {
    if (qword_10069AF68 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_10003293C(v22, (uint64_t)qword_1006A4F80);
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Couldn't find paper_palette_background from the color xcassets.", v25, 2u);
      swift_slowDealloc();
    }

    NSNumber v26 = v3;
    goto LABEL_21;
  }
  uint64_t v5 = OBJC_IVAR___ICSystemPaperViewController_paletteButton;
  id v6 = *(void **)&v0[OBJC_IVAR___ICSystemPaperViewController_paletteButton];
  if (!v6)
  {
    __break(1u);
    goto LABEL_25;
  }
  id v7 = [v6 layer];
  id v8 = [v27 CGColor];
  [v7 setBackgroundColor:v8];

  id v9 = *(void **)&v0[v5];
  if (!v9)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  id v10 = [v9 layer];
  id v11 = [v3 CGColor];
  [v10 setShadowColor:v11];

  id v12 = [v0 traitCollection];
  id v13 = [v12 userInterfaceStyle];

  id v14 = *(void **)&v0[v5];
  if (v13 != (id)2)
  {
    if (v14)
    {
      id v15 = [v14 layer];
      id v17 = v15;
      int v18 = 1061997773;
      goto LABEL_19;
    }
LABEL_27:
    __break(1u);
    return;
  }
  if (!v14)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  id v15 = [v14 layer];
  id v17 = v15;
  int v18 = 1058642330;
LABEL_19:
  LODWORD(v16) = v18;
  [v15 setShadowOpacity:v16];

LABEL_20:
  NSNumber v26 = v27;
LABEL_21:
}

uint64_t sub_1003A8A7C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100031418(0, (unint64_t *)&qword_10069D2D0);
  id v10 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v1;
  aBlock[4] = sub_1003B998C;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100262E2C;
  void aBlock[3] = &unk_100639578;
  id v12 = _Block_copy(aBlock);
  id v13 = v1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1003B9E8C((unint64_t *)&qword_1006A26A0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10002F214((uint64_t *)&unk_1006A4830);
  sub_1003B9ED4((unint64_t *)&qword_1006A26B0, (uint64_t *)&unk_1006A4830);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v16);
}

uint64_t sub_1003A8D4C(uint64_t result, uint64_t a2)
{
  if (result < 1)
  {
LABEL_10:
    __break(1u);
  }
  else
  {
    uint64_t v2 = result;
    uint64_t v3 = (void *)(a2 + OBJC_IVAR___ICSystemPaperViewController_editorCachePool);
    uint64_t v4 = 1;
    while (1)
    {
      sub_1003A8E40(0);
      swift_beginAccess();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      uint64_t result = swift_endAccess();
      if (v2 == v4) {
        break;
      }
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
        goto LABEL_10;
      }
    }
  }
  return result;
}

id sub_1003A8E40(uint64_t a1)
{
  int IsTextKit2Enabled = ICInternalSettingsIsTextKit2Enabled();
  uint64_t v3 = (Class *)ICTK2NoteEditorViewController_ptr;
  if (!IsTextKit2Enabled) {
    uint64_t v3 = (Class *)ICNoteEditorViewController_ptr;
  }
  id v4 = [objc_allocWithZone(*v3) initWithIdentifier:-1 options:3];
  [v4 setAdditionalSafeAreaInsets:0.0, 0.0, 0.0, 0.0];
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  [v4 setViewControllerManager:Strong];

  id v6 = (void *)swift_unknownObjectWeakLoadStrong();
  [v4 setDelegate:v6];

  id result = [v4 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v8 = result;
  id v9 = self;
  id v10 = [v9 systemBackgroundColor];
  [v8 setBackgroundColor:v10];

  id result = [v4 view];
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v11 = result;
  id v12 = [result layer];

  [v12 setCornerRadius:4.0];
  id result = [v4 view];
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  id v13 = result;
  id v14 = [result layer];

  [v14 setCornerCurve:kCACornerCurveContinuous];
  id result = [v4 view];
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v15 = result;
  id v16 = [result layer];

  [v16 setMasksToBounds:1];
  id result = [v4 view];
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  id v17 = result;
  id v18 = [result layer];

  id v19 = [v9 separatorColor];
  id v20 = [v19 CGColor];

  [v18 setShadowColor:v20];
  id result = [v4 view];
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v21 = result;
  id v22 = [result layer];

  [v22 setShadowOffset:0.0, 0.0];
  id result = [v4 view];
  if (!result)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  uint64_t v23 = result;
  id v24 = [result layer];

  [v24 setShadowRadius:0.0];
  if (a1) {
    [v4 setNote:a1];
  }
  id v25 = [v4 textView];
  if (v25)
  {
    NSNumber v26 = v25;
    [v25 _setCropDrawingAttachmentsWhenViewIsSmaller:1];
  }
  return v4;
}

uint64_t sub_1003A9208()
{
  NSString v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v90 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96.receiver = v1;
  v96.super_class = ObjectType;
  [super viewDidLoad];
  sub_1003A8A7C(2);
  uint64_t v6 = OBJC_IVAR___ICSystemPaperViewController_moreButton;
  uint64_t v7 = *(void **)&v1[OBJC_IVAR___ICSystemPaperViewController_moreButton];
  if (!v7)
  {
    __break(1u);
    goto LABEL_24;
  }
  [v7 setShowsMenuAsPrimaryAction:1];
  uint64_t v8 = *(void **)&v1[v6];
  if (!v8)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  id v9 = self;
  UIMenuElementSize v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = (UIMenuElementSize)sub_1003B9E0C;
  aBlock[5] = v10;
  aBlock[0] = (UIMenuElementSize)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (UIMenuElementSize)sub_1003B37C4;
  void aBlock[3] = (UIMenuElementSize)&unk_100639A78;
  uint64_t v11 = _Block_copy(aBlock);
  id v12 = v8;
  swift_release();
  id v13 = [v9 elementWithUncachedProvider:v11];
  _Block_release(v11);
  sub_100031418(0, (unint64_t *)&unk_1006A4D40);
  sub_10002F214(&qword_10069BA00);
  UIMenuElementSize v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_100529F20;
  *(void *)(v14 + 32) = v13;
  aBlock[0] = v14;
  specialized Array._endMutation()();
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v97.value.super.Class isa = 0;
  v97.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v15, (Swift::String_optional)0, v97, 0, 0xFFFFFFFFFFFFFFFFLL, aBlock[0], v83).super.super.isa;
  [v12 setMenu:isa];

  uint64_t v94 = v6;
  id v17 = *(void **)&v1[v6];
  if (!v17)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  id v18 = self;
  id v19 = v17;
  id v93 = v18;
  id v20 = [v18 mainBundle];
  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = [v20 localizedStringForKey:v21 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v19 setAccessibilityLabel:v23];

  id v24 = [self preferredFontForTextStyle:UIFontTextStyleTitle3];
  [v24 pointSize];
  id v26 = [self configurationWithPointSize:5 weight:2 scale:v25];
  NSString v27 = String._bridgeToObjectiveC()();
  id v28 = [self systemImageNamed:v27 withConfiguration:v26];

  uint64_t v29 = OBJC_IVAR___ICSystemPaperViewController_paletteButton;
  uint64_t v30 = *(void **)&v1[OBJC_IVAR___ICSystemPaperViewController_paletteButton];
  if (!v30)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  [v30 setImage:v28 forState:0];
  sub_1003A86BC();
  objc_super v31 = *(void **)&v1[v29];
  if (!v31)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  id v32 = [v31 layer];
  id v33 = *(void **)&v1[v29];
  if (!v33)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  [v33 bounds];
  [v32 setCornerRadius:v34 * 0.5];

  uint64_t v35 = *(void **)&v1[v29];
  if (!v35)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  id v87 = v28;
  id v88 = v26;
  uint64_t v89 = v4;
  id v36 = [v35 layer];
  [v36 setShadowRadius:10.0];

  uint64_t v37 = *(void **)&v1[v29];
  if (!v37)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v86 = v3;
  unint64_t v38 = self;
  id v39 = v37;
  id v40 = [v38 secondaryLabelColor];
  [v39 setTintColor:v40];

  uint64_t v41 = *(void **)&v1[v29];
  if (!v41)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  id v42 = [v41 layer];
  [v42 setMasksToBounds:0];

  uint64_t v43 = OBJC_IVAR___ICSystemPaperViewController_newNoteButton;
  BOOL v44 = *(void **)&v1[OBJC_IVAR___ICSystemPaperViewController_newNoteButton];
  if (!v44)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  id v45 = [v44 imageForState:0];
  if (!v45) {
    goto LABEL_41;
  }
  uint64_t v46 = v45;
  uint64_t v47 = *(void **)&v1[v94];
  if (!v47) {
    goto LABEL_33;
  }
  id v92 = [v47 imageForState:0];
  if (!v92) {
    goto LABEL_41;
  }
  uint64_t v48 = OBJC_IVAR___ICSystemPaperViewController_backToNotesButton;
  id v49 = *(void **)&v1[OBJC_IVAR___ICSystemPaperViewController_backToNotesButton];
  if (!v49)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  id v91 = [v49 imageForState:0];
  if (v91)
  {
    id v85 = v24;
    id v50 = *(void **)&v1[v43];
    if (v50)
    {
      id v51 = v50;
      id v52 = [v38 tertiaryLabelColor];
      id v84 = v46;
      id v53 = [v46 imageWithTintColor:v52 renderingMode:1];

      [v51 setImage:v53 forStates:1];
      char v54 = *(void **)&v1[v43];
      if (v54)
      {
        id v55 = v54;
        id v56 = [v93 mainBundle];
        NSString v57 = String._bridgeToObjectiveC()();
        id v58 = [v56 localizedStringForKey:v57 value:0 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v59 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v55 setAccessibilityLabel:v59];

        id v60 = *(void **)&v1[v94];
        if (v60)
        {
          id v61 = v60;
          id v62 = [v38 tertiaryLabelColor];
          id v63 = [v92 imageWithTintColor:v62 renderingMode:1];

          [v61 setImage:v63 forStates:1];
          NSString v64 = *(void **)&v1[v48];
          if (v64)
          {
            id v65 = v64;
            id v66 = [v38 tertiaryLabelColor];
            id v67 = [v91 imageWithTintColor:v66 renderingMode:1];

            [v65 setImage:v67 forStates:1];
            uint64_t v68 = *(void **)&v1[v48];
            if (v68)
            {
              id v69 = v68;
              id v70 = [v93 mainBundle];
              NSString v71 = String._bridgeToObjectiveC()();
              id v72 = [v70 localizedStringForKey:v71 value:0 table:0];

              static String._unconditionallyBridgeFromObjectiveC(_:)();
              NSString v73 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              [v69 setAccessibilityLabel:v73];

              uint64_t v74 = *(void **)&v1[OBJC_IVAR___ICSystemPaperViewController_pageControl];
              if (v74)
              {
                [v74 setAlpha:0.0];
                id v75 = self;
                id v76 = [v75 defaultCenter];
                uint64_t v77 = v90;
                NSNotificationCenter.publisher(for:object:)();

                swift_allocObject();
                swift_unknownObjectWeakInit();
                sub_1003B9E8C((unint64_t *)&qword_1006A52C0, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
                uint64_t v78 = v86;
                Publisher<>.sink(receiveValue:)();
                swift_release();
                uint64_t v79 = *(void (**)(char *, uint64_t))(v89 + 8);
                v79(v77, v78);
                swift_beginAccess();
                AnyCancellable.store(in:)();
                swift_endAccess();
                swift_release();
                id v80 = [v75 defaultCenter];
                NSNotificationCenter.publisher(for:object:)();

                swift_allocObject();
                swift_unknownObjectWeakInit();
                Publisher<>.sink(receiveValue:)();
                swift_release();
                v79(v77, v78);
                swift_beginAccess();
                AnyCancellable.store(in:)();
                swift_endAccess();
                swift_release();
                id v81 = [v75 defaultCenter];
                NSNotificationCenter.publisher(for:object:)();

                swift_allocObject();
                swift_unknownObjectWeakInit();
                Publisher<>.sink(receiveValue:)();
                swift_release();
                v79(v77, v78);
                swift_beginAccess();
                AnyCancellable.store(in:)();
                swift_endAccess();

                return swift_release();
              }
              goto LABEL_40;
            }
LABEL_39:
            __break(1u);
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
LABEL_41:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_1003A9EF8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v1 = (void *)Strong;
    uint64_t v2 = *(void **)(Strong + OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController);
    if (v2) {
      [v2 doneEditing];
    }
    sub_1003ABDE8();
    uint64_t v3 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v3)
    {
      uint64_t v4 = v3;
      [v3 closeAuxiliaryWindowAnimated:1];

      NSString v1 = v4;
    }
  }
}

void sub_1003A9F98()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v1 = (void *)Strong;
    sub_1003A9FF4();
  }
}

void sub_1003A9FF4()
{
  uint64_t v1 = v0;
  if (qword_10069AF68 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10003293C(v2, (uint64_t)qword_1006A4F80);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Received noteEditorDidChangeNote.", v5, 2u);
    swift_slowDealloc();
  }

  if ((*(unsigned char *)(v1 + OBJC_IVAR___ICSystemPaperViewController_isSettingCurrentNote) & 1) == 0)
  {
    Notification.object.getter();
    if (v15[3])
    {
      sub_100031418(0, (unint64_t *)&qword_1006A4DB0);
      if (swift_dynamicCast())
      {
        uint64_t v6 = (id *)(v1 + OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController);
        uint64_t v7 = *(void *)(v1 + OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController);
        if ((void)v16)
        {
          swift_unknownObjectRelease();
          if (!v7 || (void)v16 != v7) {
            return;
          }
        }
        else if (v7)
        {
          return;
        }
LABEL_14:
        uint64_t v8 = Notification.userInfo.getter();
        if (v8)
        {
          uint64_t v9 = v8;
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          AnyHashable.init<A>(_:)();
          if (*(void *)(v9 + 16) && (unint64_t v10 = sub_100033028((uint64_t)v15), (v11 & 1) != 0))
          {
            sub_100032E28(*(void *)(v9 + 56) + 32 * v10, (uint64_t)&v16);
          }
          else
          {
            long long v16 = 0u;
            long long v17 = 0u;
          }
          swift_bridgeObjectRelease();
          sub_100033134((uint64_t)v15);
          if (*((void *)&v17 + 1))
          {
            sub_100031418(0, (unint64_t *)&qword_10069FD10);
            if (swift_dynamicCast())
            {
              id v12 = (void *)v15[0];
              if (*v6 && (id v13 = [*v6 note], v13, v13))
              {
              }
              else
              {
                id v14 = v12;
                sub_1003ADBE8(v12, 0, 0, 0, 0);
              }
            }
            return;
          }
        }
        else
        {
          long long v16 = 0u;
          long long v17 = 0u;
        }
        sub_10002B754((uint64_t)&v16, &qword_10069B4D0);
        return;
      }
    }
    else
    {
      sub_10002B754((uint64_t)v15, &qword_10069B4D0);
    }
    uint64_t v6 = (id *)(v1 + OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController);
    if (*(void *)(v1 + OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController)) {
      return;
    }
    goto LABEL_14;
  }
}

uint64_t sub_1003AA2E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100031418(0, (unint64_t *)&qword_10069D2D0);
  unint64_t v10 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = sub_1003B9E2C;
  aBlock[5] = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100262E2C;
  void aBlock[3] = &unk_100639AA0;
  char v11 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1003B9E8C((unint64_t *)&qword_1006A26A0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10002F214((uint64_t *)&unk_1006A4830);
  sub_1003B9ED4((unint64_t *)&qword_1006A26B0, (uint64_t *)&unk_1006A4830);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v14);
}

void sub_1003AA598()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_1003AA5EC();
  }
}

void sub_1003AA5EC()
{
  uint64_t v1 = v0;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t v3 = &selRef_unsupportedFolderButton;
  if (Strong && (uint64_t v4 = Strong, v5 = [Strong isVisible], v4, v5))
  {
    id v6 = [v1 view];
    if (!v6)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    uint64_t v7 = v6;
    uint64_t v8 = self;
    id v9 = [v7 window];

    id v10 = [v9 windowScene];
    id v11 = [v8 _existingInteractionForWindowScene:v10];

    if (v11)
    {
      unsigned int v12 = [v11 _paletteViewVisible];

      LODWORD(v13) = v12 ^ 1;
    }
    else
    {
      LODWORD(v13) = 1;
    }
  }
  else
  {
    LODWORD(v13) = 0;
  }
  uint64_t v14 = OBJC_IVAR___ICSystemPaperViewController_toolPickerBackgroundView;
  Swift::String v15 = *(void **)&v1[OBJC_IVAR___ICSystemPaperViewController_toolPickerBackgroundView];
  if (v15)
  {
    id v16 = [v15 superview];
    if (v16)
    {

      if ((v13 & 1) == 0) {
        goto LABEL_19;
      }
LABEL_18:
      double v43 = *(double *)&v1[OBJC_IVAR___ICSystemPaperViewController_toolPickerBackgroundViewOnscreenBottomConstraintConstant];
LABEL_20:
      id v44 = [v1 v3[220]];
      if (v44)
      {
        id v45 = v44;
        [v44 layoutIfNeeded];

        uint64_t v46 = self;
        uint64_t v47 = swift_allocObject();
        *(void *)(v47 + 16) = v1;
        *(double *)(v47 + 24) = v43;
        id v58 = sub_1003B99F8;
        uint64_t v59 = v47;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v55 = 1107296256;
        id v56 = sub_100262E2C;
        NSString v57 = &unk_1006396B8;
        uint64_t v48 = _Block_copy(&aBlock);
        id v49 = v1;
        swift_release();
        uint64_t v50 = swift_allocObject();
        *(unsigned char *)(v50 + 16) = (_BYTE)v13;
        *(void *)(v50 + 24) = v49;
        id v58 = sub_1003B9A3C;
        uint64_t v59 = v50;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v55 = 1107296256;
        id v56 = sub_1003B5DEC;
        NSString v57 = &unk_100639708;
        id v51 = _Block_copy(&aBlock);
        id v52 = v49;
        swift_release();
        [v46 ic_animateUsingSpringWithDampingRatio:v48 response:v51 animations:0.845, 0.531];
        _Block_release(v51);
        _Block_release(v48);
        return;
      }
      __break(1u);
      goto LABEL_24;
    }
  }
  if (!v13)
  {
LABEL_19:
    double v43 = sub_1003B5CCC();
    goto LABEL_20;
  }
  id v17 = [self effectWithStyle:8];
  id v18 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v17];

  [v18 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v19 = [v1 view];
  if (!v19)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (!*(void *)&v1[OBJC_IVAR___ICSystemPaperViewController_paletteButton])
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  id v20 = v19;
  [v19 insertSubview:v18 belowSubview:v18];

  id v21 = [v18 bottomAnchor];
  id v22 = [v1 view];
  if (!v22)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  NSString v23 = v22;
  char v53 = (char)v13;
  id v24 = [v22 bottomAnchor];

  id v25 = [v21 constraintEqualToAnchor:v24 constant:sub_1003B5CCC()];
  sub_10002F214(&qword_10069BA00);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_100524CD0;
  id v27 = [v18 leadingAnchor];
  id v28 = [v1 view];
  if (!v28)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v29 = v28;
  id v30 = [v28 leadingAnchor];

  id v31 = [v27 constraintEqualToAnchor:v30];
  *(void *)(v26 + 32) = v31;
  *(void *)(v26 + 40) = v25;
  id v32 = v25;
  id v33 = [v18 trailingAnchor];
  id v34 = [v1 view];
  if (v34)
  {
    uint64_t v35 = v34;
    id v36 = self;
    id v37 = [v35 trailingAnchor];

    id v38 = [v33 constraintEqualToAnchor:v37];
    *(void *)(v26 + 48) = v38;
    id v13 = [v18 heightAnchor];
    id v39 = [v13 constraintEqualToConstant:*(double *)&v1[OBJC_IVAR___ICSystemPaperViewController_toolPickerBackgroundViewHeight]];

    *(void *)(v26 + 56) = v39;
    long long aBlock = (void **)v26;
    specialized Array._endMutation()();
    sub_100031418(0, (unint64_t *)&qword_1006A5260);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v36 activateConstraints:isa];

    uint64_t v41 = *(void **)&v1[v14];
    *(void *)&v1[v14] = v18;

    id v42 = *(void **)&v1[OBJC_IVAR___ICSystemPaperViewController_toolPickerBackgroundViewBottomConstraint];
    *(void *)&v1[OBJC_IVAR___ICSystemPaperViewController_toolPickerBackgroundViewBottomConstraint] = v32;

    uint64_t v3 = &selRef_unsupportedFolderButton;
    LOBYTE(v13) = v53;
    goto LABEL_18;
  }
LABEL_29:
  __break(1u);
}

void sub_1003AAC98(char a1)
{
  v9.receiver = v1;
  v9.super_class = (Class)swift_getObjectType();
  [super viewWillAppear:a1 & 1];
  uint64_t v3 = *(void **)&v1[OBJC_IVAR___ICSystemPaperViewController_launchImageView];
  if (v3)
  {
    uint64_t v4 = &v1[OBJC_IVAR___ICSystemPaperViewController_launchPreview];
    swift_beginAccess();
    uint64_t v5 = type metadata accessor for NotePreview();
    int v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
    id v7 = v3;
    uint64_t v8 = 0;
    if (!v6) {
      uint64_t v8 = (void *)NotePreview.chrome.getter();
    }
    swift_endAccess();
    [v7 setImage:v8];
  }
  else
  {
    __break(1u);
  }
}

void sub_1003AADEC(char a1)
{
  uint64_t v2 = v1;
  v33.receiver = v2;
  v33.super_class = (Class)swift_getObjectType();
  [super viewDidAppear:a1 & 1];
  if (qword_10069AF68 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10003293C(v4, (uint64_t)qword_1006A4F80);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    id v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "SPVC view did appear.", v7, 2u);
    swift_slowDealloc();
  }

  *((unsigned char *)v2 + OBJC_IVAR___ICSystemPaperViewController_viewDidAppearAtLeastOnce) = 1;
  id v8 = [v2 view];
  if (!v8)
  {
    __break(1u);
    return;
  }
  objc_super v9 = v8;
  id v10 = [v8 window];

  if (v10)
  {
    id v11 = [self sharedToolPickerForWindow:v10];
    if (v11)
    {
      id v12 = v11;
      [v11 addObserver:v2];

      swift_unknownObjectWeakAssign();
      id v10 = v12;
    }
  }
  sub_1003AB350(1);
  if (*((unsigned char *)v2 + OBJC_IVAR___ICSystemPaperViewController_shouldShowModernAccountAlert) == 1)
  {
    *((unsigned char *)v2 + OBJC_IVAR___ICSystemPaperViewController_shouldShowModernAccountAlert) = 0;
    id v13 = self;
    id v14 = [v13 mainBundle];
    NSString v15 = String._bridgeToObjectiveC()();
    id v16 = [v14 localizedStringForKey:v15 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    ICInternalSettingsIsAppleAccountBrandingEnabled();
    id v17 = [v13 mainBundle];
    NSString v19 = String._bridgeToObjectiveC()();
    id v20 = [v17 localizedStringForKey:v19 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v21 = [v13 mainBundle];
    NSString v22 = String._bridgeToObjectiveC()();
    id v23 = [v21 localizedStringForKey:v22 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v24 = String._bridgeToObjectiveC()();
    id v25 = [self _systemImageNamed:v24];

    id v26 = objc_allocWithZone((Class)OBWelcomeController);
    NSString v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v29 = [v26 initWithTitle:v27 detailText:v28 icon:v25 contentLayout:2];

    id v30 = [self boldButton];
    [v30 addTarget:v2 action:"openNotesSettings:" forControlEvents:64];
    NSString v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v30 setTitle:v31 forState:0];

    id v32 = [v29 buttonTray];
    [v32 addButton:v30];

    [v29 setModalInPresentation:1];
    [v2 presentViewController:v29 animated:0 completion:0];
  }
  else
  {
    id v18 = sub_1003FE0B8();
    if (!v18) {
      return;
    }
    id v30 = v18;
    [v2 presentViewController:v18 animated:0 completion:0];
  }
}

void sub_1003AB350(char a1)
{
  uint64_t v2 = v1;
  if (qword_10069AF68 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10003293C(v4, (uint64_t)qword_1006A4F80);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    id v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Starting UI state refresh.", v7, 2u);
    swift_slowDealloc();
  }

  id v8 = [v1 view];
  if (!v8) {
    goto LABEL_14;
  }
  id v23 = v8;
  id v9 = [v8 window];

  if (!v9)
  {

LABEL_14:
    id v23 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v23, v18))
    {
      NSString v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSString v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v18, "View wasn't ready in refreshUIStateIfPossible.", v19, 2u);
      swift_slowDealloc();
    }
    goto LABEL_19;
  }
  id v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    id v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Refreshing system paper UI...", v12, 2u);
    swift_slowDealloc();
  }

  id v13 = *(void **)&v1[OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController];
  if (v13)
  {
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v1;
    int v15 = a1 & 1;
    *(unsigned char *)(v14 + 24) = a1 & 1;
    *(void *)(v14 + 32) = v13;
    id v16 = v13;
    id v17 = v2;
    sub_1003AE580(v13, 0, v15, 0, (uint64_t)sub_1003B9DFC, v14);

    swift_release();
    return;
  }
  id v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v20, v21))
  {
    NSString v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)NSString v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Expected non-nil currentNoteEditorViewController", v22, 2u);
    swift_slowDealloc();
  }

LABEL_19:
}

void sub_1003AB6F0(char a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v35 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  id v34 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  id v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39.receiver = v2;
  v39.super_class = ObjectType;
  [super viewWillDisappear:a1 & 1];
  id v10 = &v2[OBJC_IVAR___ICSystemPaperViewController_emptyNoteIds];
  swift_beginAccess();
  uint64_t v11 = *(void *)v10;
  if (*(void *)v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    if (!v12) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v12) {
      goto LABEL_10;
    }
  }
  uint64_t v32 = sub_100031418(0, (unint64_t *)&qword_10069D2D0);
  if (v12 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v13 = 0;
  unint64_t v29 = v11 & 0xC000000000000001;
  v28[1] = v38;
  v28[0] = v5 + 8;
  uint64_t v14 = (void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v30 = v12;
  uint64_t v31 = v11;
  uint64_t v15 = v35;
  do
  {
    if (v29) {
      id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v16 = *(id *)(v11 + 8 * v13 + 32);
    }
    id v17 = v16;
    ++v13;
    os_log_type_t v18 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v19 = swift_allocObject();
    id v20 = v36;
    *(void *)(v19 + 16) = v36;
    *(void *)(v19 + 24) = v17;
    v38[2] = sub_1003B9DB4;
    v38[3] = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    v38[0] = sub_100262E2C;
    v38[1] = &unk_100639A28;
    os_log_type_t v21 = _Block_copy(aBlock);
    id v22 = v20;
    id v23 = v17;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1003B9E8C((unint64_t *)&qword_1006A26A0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10002F214((uint64_t *)&unk_1006A4830);
    sub_1003B9ED4((unint64_t *)&qword_1006A26B0, (uint64_t *)&unk_1006A4830);
    NSString v24 = v34;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))v28[0])(v24, v15);
    (*v14)(v9, v33);
    uint64_t v11 = v31;
  }
  while (v30 != v13);
LABEL_10:
  swift_bridgeObjectRelease();
  id v25 = v36;
  sub_1003ABDE8();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v27 = Strong;
    [Strong removeObserver:v25];
  }
}

void sub_1003ABB34(uint64_t a1, void *a2)
{
  uint64_t v2 = (void *)sub_1003ABBB0(a2);
  if (v2)
  {
    id v3 = v2;
    if ([v2 isEmpty]) {
      [v3 markForDeletion];
    }
  }
}

uint64_t sub_1003ABBB0(void *a1)
{
  id v3 = [*(id *)(v1 + OBJC_IVAR___ICSystemPaperViewController_noteCache) objectForKey:a1];
  if (v3) {
    return (uint64_t)v3;
  }
  id v5 = [self sharedContext];
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = [v5 managedObjectContext];

    if (v7)
    {
      uint64_t v16 = 0;
      uint64_t v8 = (void *)swift_allocObject();
      _OWORD v8[2] = v7;
      v8[3] = a1;
      v8[4] = &v16;
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = sub_1003B9994;
      *(void *)(v9 + 24) = v8;
      aBlock[4] = sub_100031D5C;
      aBlock[5] = v9;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      void aBlock[2] = sub_100031D30;
      void aBlock[3] = &unk_1006395F0;
      id v10 = _Block_copy(aBlock);
      id v11 = v7;
      id v12 = a1;
      swift_retain();
      swift_release();
      [v11 performBlockAndWait:v10];

      _Block_release(v10);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0)
      {
        uint64_t v4 = v16;
        swift_release();
        return v4;
      }
      __break(1u);
    }
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_1003ABDE8()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR___ICSystemPaperViewController_pageControlFadeOutTimer;
  id v3 = *(void **)(v0 + OBJC_IVAR___ICSystemPaperViewController_pageControlFadeOutTimer);
  if (v3)
  {
    uint64_t v4 = qword_10069AF68;
    id v5 = v3;
    if (v4 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10003293C(v6, (uint64_t)qword_1006A4F80);
    id v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Invalidating pageControlFadeOutTimer...", v9, 2u);
      swift_slowDealloc();
    }

    [v5 invalidate];
    id v10 = *(void **)(v1 + v2);
  }
  else
  {
    id v10 = 0;
  }
  *(void *)(v1 + v2) = 0;
}

void sub_1003ABF6C()
{
  uint64_t v1 = OBJC_IVAR___ICSystemPaperViewController_pageViewController;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___ICSystemPaperViewController_pageViewController);
  if (!v2)
  {
    __break(1u);
    goto LABEL_12;
  }
  id v3 = *(void **)(v0 + OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController);
  id v17 = *(id *)(v0 + OBJC_IVAR___ICSystemPaperViewController_pageViewController);
  if (!v3)
  {
    id v16 = v2;
    double v5 = 0.0;
    double v6 = 0.0;
    double v7 = 0.0;
    double v8 = 0.0;
    goto LABEL_8;
  }
  id v4 = v2;
  double v5 = 0.0;
  double v6 = 0.0;
  double v7 = 0.0;
  double v8 = 0.0;
  if ([v3 isInkPickerShowing])
  {
    uint64_t v9 = *(void **)(v0 + v1);
    if (v9)
    {
      id v10 = [v9 view];
      if (v10)
      {
        id v11 = v10;
        [v10 bounds];
        double v5 = v12;
        double v6 = v13;
        double v7 = v14;
        double v8 = v15;

        goto LABEL_8;
      }
LABEL_13:
      __break(1u);
      return;
    }
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
LABEL_8:
  [v17 _setDisabledScrollingRegion:v5, v6, v7, v8];
}

void sub_1003AC090(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  if (qword_10069AF68 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10003293C(v6, (uint64_t)qword_1006A4F80);
  double v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Starting asyncNoteIdentifiersWithFreshSnapshot...", v9, 2u);
    swift_slowDealloc();
  }

  id v10 = sub_1003A8448();
  id v11 = (void *)swift_allocObject();
  v11[2] = v3;
  v11[3] = a1;
  v11[4] = a2;
  v14[4] = sub_1003B9674;
  v14[5] = v11;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_100262E2C;
  v14[3] = &unk_100639118;
  double v12 = _Block_copy(v14);
  id v13 = v3;
  swift_retain();
  swift_release();
  [v10 reloadData:v12];
  _Block_release(v12);
}

uint64_t sub_1003AC248(uint64_t a1, void (*a2)(void *))
{
  if (qword_10069AF68 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10003293C(v3, (uint64_t)qword_1006A4F80);
  id v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "asyncNoteIdentifiersWithFreshSnapshot indexer reloadData finished.", v6, 2u);
    swift_slowDealloc();
  }

  id v7 = sub_1003A8448();
  id v8 = [v7 newSnapshotFromIndex];

  id v9 = [v8 itemIdentifiers];
  uint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v11 = sub_1003AC3D8(v10);
  swift_bridgeObjectRelease();
  if (v11) {
    double v12 = v11;
  }
  else {
    double v12 = _swiftEmptyArrayStorage;
  }
  a2(v12);

  return swift_bridgeObjectRelease();
}

void *sub_1003AC3D8(uint64_t a1)
{
  uint64_t v6 = _swiftEmptyArrayStorage;
  uint64_t v2 = *(void *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)();
  if (!v2) {
    return v6;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_100032E28(i, (uint64_t)v5);
    sub_100031418(0, (unint64_t *)&qword_10069E810);
    if (!swift_dynamicCast()) {
      break;
    }
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    if (!--v2) {
      return v6;
    }
  }
  swift_release();

  return 0;
}

void *sub_1003AC4F4()
{
  id v0 = sub_1003A8448();
  id v1 = [v0 firstRelevantItemIdentifier];
  swift_unknownObjectRelease();

  if (!v1)
  {
    if (qword_10069AF68 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10003293C(v2, (uint64_t)qword_1006A4F80);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v3, v4))
    {
      os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Performing initial note identifier fetch.", v5, 2u);
      swift_slowDealloc();
    }

    id v6 = sub_1003A8448();
    [v6 reloadDataAndWait];

    id v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v7, v8))
    {
      id v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Finished initial note identifier fetch.", v9, 2u);
      swift_slowDealloc();
    }
  }
  id v10 = sub_1003A8448();
  id v11 = [v10 newSnapshotFromIndex];

  id v12 = [v11 itemIdentifiers];
  uint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  double v14 = sub_1003AC3D8(v13);
  swift_bridgeObjectRelease();
  if (!v14)
  {
    if (qword_10069AF68 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_10003293C(v15, (uint64_t)qword_1006A4F80);
    id v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      os_log_type_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "[sync] Didn't get NSManagedObjectIDs from the note indexer snapshot.", v18, 2u);
      swift_slowDealloc();
    }

    return _swiftEmptyArrayStorage;
  }
  return v14;
}

void sub_1003AC7C8(void *a1, void *a2, void **a3)
{
  id v5 = [a1 ic_existingObjectWithID:a2];
  if (v5)
  {
    id v6 = v5;
    self;
    uint64_t v7 = swift_dynamicCastObjCClass();
    if (v7)
    {
      os_log_type_t v8 = *a3;
      *a3 = (void *)v7;

      return;
    }
  }
  if (qword_10069AF68 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_10003293C(v9, (uint64_t)qword_1006A4F80);
  id v15 = a2;
  id v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v10, v11))
  {
    id v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = (void *)swift_slowAlloc();
    *(_DWORD *)id v12 = 138412290;
    id v14 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v13 = v15;

    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Note with either didn't exist or was malformed {identifier: %@}", v12, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_1003ACA0C()
{
  id v1 = *(void **)&v0[OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController];
  if (!v1 || (uint64_t v2 = v0, (v3 = [v1 note]) == 0))
  {
    if (qword_10069AF68 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_10003293C(v20, (uint64_t)qword_1006A4F80);
    id v37 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v37, v21))
    {
      id v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v37, v21, "Couldn't find a note to delete.", v22, 2u);
      swift_slowDealloc();
    }
    goto LABEL_19;
  }
  id v37 = v3;
  uint64_t v4 = swift_allocObject();
  id v5 = sub_1003AC4F4();
  *(void *)(v4 + 16) = v5;
  swift_bridgeObjectRetain();
  id v6 = [v37 objectID];
  sub_1004A075C((uint64_t)v6, (unint64_t)v5);
  uint64_t v8 = v7;
  char v10 = v9;
  swift_bridgeObjectRelease();

  if ((v10 & 1) == 0)
  {
    if (qword_10069AF68 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_10003293C(v11, (uint64_t)qword_1006A4F80);
    id v12 = v37;
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v13, v14))
    {
      id v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)id v15 = 136315138;
      id v16 = [v12 ic_loggingIdentifier];
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v19 = v18;

      sub_10045DA1C(v17, v19, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Deleting note %s", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    sub_10002F214((uint64_t *)&unk_1006A1940);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_100524D10;
    *(void *)(v27 + 56) = sub_100031418(0, (unint64_t *)&qword_10069FD10);
    *(void *)(v27 + 32) = v12;
    NSString v28 = v12;
    id v29 = [v2 view];
    id v30 = [v29 window];

    id v31 = objc_allocWithZone((Class)ICDeleteDecisionController);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v33 = [v31 initWithSourceObjects:isa window:v30];

    id v34 = (void *)swift_allocObject();
    void v34[2] = v4;
    v34[3] = v2;
    v34[4] = v8;
    sub_100031418(0, (unint64_t *)&unk_1006A52B0);
    swift_retain();
    id v35 = v2;
    ICDeleteDecisionControlling.performDecision(completion:)();

    swift_release();
    swift_release();
    return;
  }
  if (qword_10069AF68 != -1) {
    swift_once();
  }
  uint64_t v23 = type metadata accessor for Logger();
  sub_10003293C(v23, (uint64_t)qword_1006A4F80);
  os_log_t oslog = (os_log_t)Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(oslog, v24))
  {
    swift_release();

LABEL_19:
    id v26 = v37;
    goto LABEL_20;
  }
  id v25 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)id v25 = 0;
  _os_log_impl((void *)&_mh_execute_header, oslog, v24, "Couldn't find index of the note we're about to delete.", v25, 2u);
  swift_slowDealloc();
  swift_release();

  id v26 = oslog;
LABEL_20:
}

void sub_1003ACF94(char a1, uint64_t isEscapingClosureAtFileLocation, char *a3, uint64_t a4)
{
  LOBYTE(v6) = a1;
  if (qword_10069AF68 != -1) {
    goto LABEL_39;
  }
  while (1)
  {
    uint64_t v7 = type metadata accessor for Logger();
    sub_10003293C(v7, (uint64_t)qword_1006A4F80);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v8, v9))
    {
      char v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Entering completion handler.", v10, 2u);
      swift_slowDealloc();
    }

    os_log_t oslog = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.info.getter();
    BOOL v12 = os_log_type_enabled(oslog, v11);
    if ((v6 & 1) == 0) {
      break;
    }
    isEscapingClosureAtFileLocation += 16;
    if (v12)
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v11, "Finished note delete.", v13, 2u);
      swift_slowDealloc();
    }

    os_log_type_t v14 = sub_1003AC4F4();
    swift_beginAccess();
    *(void *)char isEscapingClosureAtFileLocation = v14;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v15 = *(void *)isEscapingClosureAtFileLocation;
    id v49 = (void *)isEscapingClosureAtFileLocation;
    if (*(void *)isEscapingClosureAtFileLocation >> 62)
    {
      swift_bridgeObjectRetain_n();
      id v44 = a3;
      id v16 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v16)
      {
LABEL_41:
        swift_bridgeObjectRelease_n();

        id v45 = Logger.logObject.getter();
        os_log_type_t v46 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v45, v46))
        {
          uint64_t v47 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v47 = 0;
          _os_log_impl((void *)&_mh_execute_header, v45, v46, "Adding note because we'd have no notes left to show.", v47, 2u);
          swift_slowDealloc();
        }

        sub_1003AD88C(0);
        return;
      }
    }
    else
    {
      id v16 = *(NSObject **)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      uint64_t v17 = a3;
      if (!v16) {
        goto LABEL_41;
      }
    }
    uint64_t v18 = OBJC_IVAR___ICSystemPaperViewController_noteCache;
    os_log_t osloga = (os_log_t)(v15 & 0xC000000000000001);
    uint64_t v19 = 4;
    id v52 = v16;
    uint64_t v53 = v15;
    uint64_t v51 = OBJC_IVAR___ICSystemPaperViewController_noteCache;
    while (1)
    {
      id v21 = osloga ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v15 + 8 * v19);
      id v22 = v21;
      uint64_t v6 = v19 - 3;
      if (__OFADD__(v19 - 4, 1)) {
        break;
      }
      id v23 = [*(id *)&a3[v18] objectForKey:v21];
      if (v23)
      {
        uint64_t v20 = v23;
      }
      else
      {
        os_log_type_t v24 = a3;
        id v25 = [self sharedContext];
        if (!v25) {
          goto LABEL_46;
        }
        id v26 = v25;
        id v27 = [v25 managedObjectContext];

        if (!v27) {
          goto LABEL_46;
        }
        id v56 = 0;
        NSString v28 = (void *)swift_allocObject();
        void v28[2] = v27;
        v28[3] = v22;
        v28[4] = &v56;
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_1003BA02C;
        *(void *)(v29 + 24) = v28;
        id v62 = sub_100031D58;
        uint64_t v63 = v29;
        long long aBlock = _NSConcreteStackBlock;
        unint64_t v59 = 1107296256;
        id v60 = sub_100031D30;
        id v61 = &unk_1006399D8;
        id v30 = _Block_copy(&aBlock);
        id v31 = v27;
        a3 = v22;
        swift_retain();
        swift_release();
        [v31 performBlockAndWait:v30];

        _Block_release(v30);
        char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if (isEscapingClosureAtFileLocation) {
          goto LABEL_38;
        }
        uint64_t v20 = v56;

        swift_release();
        a3 = v24;
        id v16 = v52;
        uint64_t v15 = v53;
        uint64_t v18 = v51;
        if (!v20) {
          goto LABEL_12;
        }
      }
      char isEscapingClosureAtFileLocation = (uint64_t)[v20 isDeletedOrInTrash];

      if (!isEscapingClosureAtFileLocation)
      {

        swift_bridgeObjectRelease_n();
        if (__OFSUB__(a4, 1))
        {
          __break(1u);
        }
        else
        {
          uint64_t v6 = (a4 - 1) & ~((a4 - 1) >> 63);
          NSString v57 = (void **)v6;
          sub_1003AC4F4();
          sub_100031418(0, (unint64_t *)&qword_10069E810);
          Array.subscript.getter();
          swift_bridgeObjectRelease();
          id v33 = aBlock;
          if (!aBlock
            || (id v34 = a3,
                id v35 = v33,
                id v36 = (void *)sub_1003ABBB0(v35),
                v34,
                v35,
                v35,
                !v36))
          {
            while (1)
            {
              long long aBlock = 0;
              unint64_t v59 = 0xE000000000000000;
              _StringGuts.grow(_:)(31);
              swift_bridgeObjectRelease();
              long long aBlock = (void **)0xD00000000000001DLL;
              unint64_t v59 = 0x800000010055B0B0;
              id v56 = (void *)v6;
              v48._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
              String.append(_:)(v48);
              swift_bridgeObjectRelease();
LABEL_46:
              _assertionFailure(_:_:file:line:flags:)();
              __break(1u);
            }
          }
          id v37 = v36;
          uint64_t v38 = Logger.logObject.getter();
          os_log_type_t v39 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v38, v39))
          {
            uint64_t v40 = swift_slowAlloc();
            uint64_t v41 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v40 = 138412546;
            long long aBlock = (void **)&v37->isa;
            id v42 = v37;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            void *v41 = v36;

            *(_WORD *)(v40 + 12) = 2048;
            swift_beginAccess();
            long long aBlock = v57;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v38, v39, "Setting current note after delete: %@ at index: %ld", (uint8_t *)v40, 0x16u);
            sub_10002F214(&qword_10069FD50);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            uint64_t v38 = v37;
          }

          id v16 = v37;
          sub_1003ADBE8(v36, 1, 1, 0, 0);

          swift_beginAccess();
          uint64_t v15 = (uint64_t)v57;
          swift_beginAccess();
          if (!(*v49 >> 62))
          {
            uint64_t v43 = *(void *)((*v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_36:
            sub_1003AE2A4(v15, v43, 1);

            return;
          }
        }
        swift_bridgeObjectRetain();
        uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        goto LABEL_36;
      }
LABEL_12:
      ++v19;
      if (v6 == v16) {
        goto LABEL_41;
      }
    }
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    swift_once();
  }
  if (v12)
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v11, "Cancelled note delete.", v32, 2u);
    swift_slowDealloc();
  }
}

void sub_1003AD88C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = (void *)Strong;
    id v6 = a1;
    if (!a1) {
      id v6 = v2;
    }
    id v7 = a1;
    id v8 = [v5 showNewNoteWithApproach:18 sender:v6 animated:1];

    if (v8)
    {
      *((void *)&v32 + 1) = swift_getObjectType();
      *(void *)&long long v31 = v8;
    }
    else
    {
      long long v31 = 0u;
      long long v32 = 0u;
    }
    v30[3] = sub_10002F214(&qword_10069B4D0);
    v30[0] = swift_allocObject();
    sub_10002F034((uint64_t)&v31, v30[0] + 16, &qword_10069B4D0);
    os_log_type_t v9 = (void *)sub_1001A71F8((uint64_t)v30);
    sub_100018FE8((uint64_t)v30);
    sub_10002B754((uint64_t)&v31, &qword_10069B4D0);
    if (qword_10069AF68 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_10003293C(v10, (uint64_t)qword_1006A4F80);
    id v11 = v9;
    BOOL v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v12, v13))
    {
      os_log_type_t v14 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v31 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v14 = 136315138;
      id v15 = [v11 ic_loggingIdentifier];
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v18 = v17;

      v30[0] = sub_10045DA1C(v16, v18, (uint64_t *)&v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Created new note {note: %s}", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    id v19 = v11;
    unint64_t v20 = (unint64_t)sub_1003AC4F4();
    unint64_t v21 = v20;
    if (v20 >> 62) {
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    }
    else {
      uint64_t v22 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    id v23 = v19;
    id v24 = [v23 objectID];
    sub_1004A075C((uint64_t)v24, v21);
    uint64_t v26 = v25;
    char v28 = v27;
    swift_bridgeObjectRelease();

    if (v28) {
      uint64_t v29 = 0;
    }
    else {
      uint64_t v29 = v26;
    }
    sub_1003AE2A4(v29, v22, 1);
  }
}

void sub_1003ADBE8(void *a1, int a2, uint64_t a3, int a4, char a5)
{
  id v6 = v5;
  int v57 = a4;
  uint64_t v11 = sub_10002F214((uint64_t *)&unk_1006A52A0);
  __chkstk_darwin(v11 - 8);
  uint64_t v53 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10069AF68 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = sub_10003293C(v13, (uint64_t)qword_1006A4F80);
  id v15 = a1;
  uint64_t v52 = v14;
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  BOOL v18 = os_log_type_enabled(v16, v17);
  int v56 = a2;
  if (v18)
  {
    uint64_t v54 = a3;
    char v19 = a5;
    uint64_t v20 = swift_slowAlloc();
    v59[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136315650;
    uint64_t v55 = a1;
    if (a1)
    {
      id v21 = [v15 loggingDescription];
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v24 = v23;
    }
    else
    {
      unint64_t v24 = 0xA300000000000000;
      uint64_t v22 = 9732322;
    }
    unint64_t v58 = sub_10045DA1C(v22, v24, v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 1024;
    LODWORD(v58) = v57 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 18) = 1024;
    a5 = v19;
    LODWORD(v58) = v19 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Setting note {note: %s} (setEditing: %{BOOL}d, showInkPicker: %{BOOL}d)", (uint8_t *)v20, 0x18u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a3 = v54;
    a1 = v55;
  }
  else
  {
  }
  uint64_t v25 = OBJC_IVAR___ICSystemPaperViewController_isSettingCurrentNote;
  v6[OBJC_IVAR___ICSystemPaperViewController_isSettingCurrentNote] = 1;
  if (*(void *)&v6[OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController]) {
    goto LABEL_24;
  }
  type metadata accessor for NotePreviewProvider();
  uint64_t v26 = (void *)static NotePreviewProvider.shared.getter();
  uint64_t v55 = a1;
  uint64_t v51 = v25;
  if (a1)
  {
    id v27 = [v15 account];
    char v28 = v27;
    uint64_t v54 = a3;
    if (v27)
    {
      id v29 = [v27 identifier];

      char v30 = a5;
      if (v29)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();
      }
    }
    else
    {
      char v30 = a5;
    }
    id v31 = [v15 identifier];
    if (v31)
    {
      long long v32 = v31;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    a5 = v30;
    a3 = v54;
  }
  uint64_t v33 = (uint64_t)v53;
  NotePreviewProvider.preview(accountId:noteId:prefersDefaultFallback:)();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v34 = type metadata accessor for NotePreview();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 0, 1, v34);
  a1 = v55;
  uint64_t v35 = (uint64_t)&v6[OBJC_IVAR___ICSystemPaperViewController_launchPreview];
  swift_beginAccess();
  sub_1003B9BB4(v33, v35);
  swift_endAccess();
  id v36 = [v6 viewIfLoaded];

  uint64_t v25 = v51;
  if (!v36)
  {
LABEL_24:
    if (v56)
    {
      int v43 = ICInternalSettingsIsPageViewControllerCrashWorkaroundDisabled() ^ 1;
      if (a1)
      {
LABEL_26:
        uint64_t v44 = swift_allocObject();
        *(void *)(v44 + 16) = v15;
        *(void *)(v44 + 24) = v6;
        *(void *)(v44 + 32) = a3;
        *(unsigned char *)(v44 + 40) = v43;
        *(unsigned char *)(v44 + 41) = a5 & 1;
        *(unsigned char *)(v44 + 42) = v57 & 1;
        id v45 = v15;
        os_log_type_t v46 = v6;
        sub_1003AC090((uint64_t)sub_1003B9B9C, v44);

        swift_release();
LABEL_33:
        v6[v25] = 0;
        return;
      }
    }
    else
    {
      int v43 = 0;
      if (a1) {
        goto LABEL_26;
      }
    }
    if (*(void *)&v6[OBJC_IVAR___ICSystemPaperViewController_pageViewController])
    {
      sub_1003AE580(0, 0, v43, 0, 0, 0);
    }
    else
    {
      uint64_t v47 = Logger.logObject.getter();
      os_log_type_t v48 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v47, v48))
      {
        id v49 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v49 = 0;
        _os_log_impl((void *)&_mh_execute_header, v47, v48, "pageViewController wasn't available in setCurrentNote. Will pick it up later in refreshUIStateIfPossible.", v49, 2u);
        swift_slowDealloc();
      }
    }
    goto LABEL_33;
  }
  id v37 = *(void **)&v6[OBJC_IVAR___ICSystemPaperViewController_launchImageView];
  if (v37)
  {
    uint64_t v38 = a1;
    swift_beginAccess();
    uint64_t v39 = type metadata accessor for NotePreview();
    int v40 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v35, 1, v39);
    id v41 = v37;
    id v42 = 0;
    if (!v40) {
      id v42 = (void *)NotePreview.chrome.getter();
    }
    swift_endAccess();
    [v41 setImage:v42];

    a1 = v38;
    goto LABEL_24;
  }
  __break(1u);
}

id sub_1003AE2A4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = OBJC_IVAR___ICSystemPaperViewController_pageControl;
  id result = *(id *)&v3[OBJC_IVAR___ICSystemPaperViewController_pageControl];
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  [result setNumberOfPages:a2];
  id result = *(id *)&v3[v5];
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v8 = [result currentPage];
  id result = *(id *)&v3[v5];
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id result = [result setCurrentPage:a1];
  if ((a3 & 1) == 0) {
    return result;
  }
  id result = *(id *)&v3[v5];
  if (!result)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  id result = [result currentPage];
  if (result != v8)
  {
    double v9 = 0.0;
    if ((v3[OBJC_IVAR___ICSystemPaperViewController_hasFinishedInitialViewRefresh] & 1) == 0)
    {
      [self delayBeforePageControlFadesInInitially];
      double v9 = v10;
    }
    uint64_t v11 = self;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v3;
    v15[4] = sub_1003B989C;
    void v15[5] = v12;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    v15[2] = sub_100262E2C;
    v15[3] = &unk_100639320;
    uint64_t v13 = _Block_copy(v15);
    uint64_t v14 = v3;
    swift_release();
    [v11 animateWithDuration:0 delay:v13 options:0 animations:0.25 completion:v9];
    _Block_release(v13);
    return (id)sub_1003B6D5C();
  }
  return result;
}

uint64_t sub_1003AE580(void *a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v49 = a5;
  uint64_t v50 = a6;
  int v46 = a4;
  int v47 = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  double v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for DispatchQoS();
  uint64_t v52 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v51 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()();
  uint64_t v16 = UUID.uuidString.getter();
  unint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (qword_10069AF68 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_10003293C(v19, (uint64_t)qword_1006A4F80);
  id v20 = a1;
  swift_bridgeObjectRetain_n();
  id v53 = v20;
  id v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v41 = a2;
    uint64_t v24 = v23;
    uint64_t v40 = swift_slowAlloc();
    aBlock[0] = v40;
    *(_DWORD *)uint64_t v24 = 136315394;
    id v42 = a1;
    swift_bridgeObjectRetain();
    uint64_t v54 = (void *)sub_10045DA1C(v16, v18, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v24 + 12) = 2080;
    uint64_t v54 = v42;
    id v25 = v53;
    sub_10002F214(&qword_1006A5240);
    uint64_t v26 = String.init<A>(describing:)();
    uint64_t v54 = (void *)sub_10045DA1C(v26, v27, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    a1 = v42;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "[sCEVC:%s] setCurrentEditorViewController invoked to set: %s. About to enter serial dispatch queue.", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a2 = v41;
    swift_slowDealloc();
  }
  else
  {

    id v28 = v53;
    swift_bridgeObjectRelease_n();
  }
  id v29 = v48;
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v16;
  *(void *)(v30 + 24) = v18;
  *(void *)(v30 + 32) = a1;
  *(void *)(v30 + 40) = v29;
  *(unsigned char *)(v30 + 48) = v46 & 1;
  *(unsigned char *)(v30 + 49) = v47 & 1;
  uint64_t v31 = v49;
  uint64_t v32 = v50;
  *(void *)(v30 + 56) = a2;
  *(void *)(v30 + 64) = v31;
  uint64_t v33 = ObjectType;
  *(void *)(v30 + 72) = v32;
  *(void *)(v30 + 80) = v33;
  aBlock[4] = (uint64_t)sub_1003B9784;
  aBlock[5] = v30;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = (uint64_t)sub_100262E2C;
  void aBlock[3] = (uint64_t)&unk_1006391E0;
  uint64_t v34 = _Block_copy(aBlock);
  id v35 = v53;
  id v36 = v29;
  sub_10002E71C(v31);
  id v37 = v51;
  static DispatchQoS.unspecified.getter();
  uint64_t v54 = _swiftEmptyArrayStorage;
  sub_1003B9E8C((unint64_t *)&qword_1006A26A0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10002F214((uint64_t *)&unk_1006A4830);
  sub_1003B9ED4((unint64_t *)&qword_1006A26B0, (uint64_t *)&unk_1006A4830);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v34);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v37, v44);
  return swift_release();
}

uint64_t sub_1003AEB4C(uint64_t a1, void *a2, void *a3, uint64_t a4, int a5, int a6, int a7)
{
  int v25 = a6;
  int v26 = a7;
  int v24 = a5;
  uint64_t v11 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v28 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = &v23[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v27 = type metadata accessor for DispatchQoS();
  uint64_t v14 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v16 = &v23[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100031418(0, (unint64_t *)&qword_10069D2D0);
  unint64_t v17 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  *(void *)(v18 + 32) = a3;
  *(void *)(v18 + 40) = a4;
  *(unsigned char *)(v18 + 48) = v24;
  *(unsigned char *)(v18 + 49) = v25;
  *(unsigned char *)(v18 + 50) = v26;
  aBlock[4] = sub_1003B9C64;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100262E2C;
  void aBlock[3] = &unk_100639898;
  uint64_t v19 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v20 = a2;
  id v21 = a3;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1003B9E8C((unint64_t *)&qword_1006A26A0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10002F214((uint64_t *)&unk_1006A4830);
  sub_1003B9ED4((unint64_t *)&qword_1006A26B0, (uint64_t *)&unk_1006A4830);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v19);

  (*(void (**)(unsigned char *, uint64_t))(v28 + 8))(v13, v11);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v27);
}

void sub_1003AEE58(unint64_t a1, id a2, unsigned char *a3, uint64_t a4, char a5, char a6, char a7)
{
  id v14 = [a2 objectID];
  LOBYTE(a1) = sub_1002D64C4((uint64_t)v14, a1);

  uint64_t v15 = &off_10069A000;
  if ((a1 & 1) == 0)
  {
    if (qword_10069AF68 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10003293C(v16, (uint64_t)qword_1006A4F80);
    id v17 = a2;
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v18, v19))
    {
      log = v18;
      os_log_type_t type = v19;
      id v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)id v20 = 136315138;
      buf = v20;
      LOBYTE(v20) = a6;
      char v21 = a5;
      id v22 = [v17 ic_loggingDescription];
      uint64_t v23 = a4;
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v26 = v25;

      a5 = v21;
      a6 = (char)v20;
      uint64_t v27 = v24;
      a4 = v23;
      uint64_t v15 = &off_10069A000;
      sub_10045DA1C(v27, v26, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, log, type, "Snapshot didn't contain new note {note: %s}", buf, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
  if ([a2 isDeletedOrInTrash])
  {
    if (v15[493] != (char **)-1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    sub_10003293C(v28, (uint64_t)qword_1006A4F80);
    id v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Note is deleted or in the trash. This shouldn't happen.", v31, 2u);
      swift_slowDealloc();
    }
  }
  id v32 = sub_1003AF308((uint64_t)a2, 1);
  uint64_t v33 = OBJC_IVAR___ICSystemPaperViewController_didCreateInitialEditorController;
  [v32 setNeedsToPerformInitialPaperAnimations:(a3[OBJC_IVAR___ICSystemPaperViewController_didCreateInitialEditorController] & 1) == 0];
  char v34 = a3[v33];
  a3[v33] = 1;
  if (*(void *)&a3[OBJC_IVAR___ICSystemPaperViewController_pageViewController])
  {
    char v35 = v34 ^ 1;
    uint64_t v36 = swift_allocObject();
    *(unsigned char *)(v36 + 16) = a6 & 1;
    *(void *)(v36 + 24) = a3;
    *(void *)(v36 + 32) = v32;
    *(unsigned char *)(v36 + 40) = a7 & 1;
    *(unsigned char *)(v36 + 41) = v35;
    id v37 = v32;
    uint64_t v38 = a3;
    sub_1003AE580(v32, a4, a5 & 1, 0, (uint64_t)sub_1003B9CBC, v36);

    swift_release();
  }
  else
  {
    if (v15[493] != (char **)-1) {
      swift_once();
    }
    uint64_t v39 = type metadata accessor for Logger();
    sub_10003293C(v39, (uint64_t)qword_1006A4F80);
    uint64_t v40 = Logger.logObject.getter();
    os_log_type_t v41 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v40, v41))
    {
      id v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v42 = 0;
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "pageViewController wasn't available in setCurrentNote. Will pick it up later in refreshUIStateIfPossible.", v42, 2u);
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

id sub_1003AF308(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return sub_1003A8E40(a1);
  }
  uint64_t v4 = (unint64_t *)(v2 + OBJC_IVAR___ICSystemPaperViewController_editorCachePool);
  swift_beginAccess();
  if (*v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v6)
    {
LABEL_7:
      unint64_t v7 = *v4;
      if (v7 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v13) {
          goto LABEL_9;
        }
      }
      else if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_9:
        if (qword_10069AF68 != -1) {
          swift_once();
        }
        uint64_t v8 = type metadata accessor for Logger();
        sub_10003293C(v8, (uint64_t)qword_1006A4F80);
        uint64_t v9 = Logger.logObject.getter();
        os_log_type_t v10 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v9, v10))
        {
          uint64_t v11 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v11 = 0;
          _os_log_impl((void *)&_mh_execute_header, v9, v10, "Tried to use an editor from the pool, but the pool didn't have any editors available.", v11, 2u);
          swift_slowDealloc();
        }
      }
      return sub_1003A8E40(a1);
    }
  }
  else if (!*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_7;
  }
  swift_beginAccess();
  uint64_t v5 = (void *)sub_1003B1A20();
  swift_endAccess();
  if (!v5) {
    goto LABEL_7;
  }
  [v5 setNote:a1];
  sub_1003A8A7C(1);
  return v5;
}

void sub_1003AF508(char a1, void *a2, NSObject *a3, int a4, char a5)
{
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchQoS();
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v35 = v16;
    uint64_t v36 = v15;
    sub_100031418(0, (unint64_t *)&qword_10069D2D0);
    uint64_t v34 = static OS_dispatch_queue.main.getter();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = a2;
    aBlock[4] = sub_1003B9CD0;
    aBlock[5] = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100262E2C;
    void aBlock[3] = &unk_100639910;
    uint64_t v33 = _Block_copy(aBlock);
    id v20 = a2;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1003B9E8C((unint64_t *)&qword_1006A26A0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    int v37 = a4;
    sub_10002F214((uint64_t *)&unk_1006A4830);
    sub_1003B9ED4((unint64_t *)&qword_1006A26B0, (uint64_t *)&unk_1006A4830);
    char v21 = v37;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v23 = v33;
    id v22 = (void *)v34;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v23);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v18, v36);
    if ((v21 & 1) == 0) {
      goto LABEL_7;
    }
  }
  else
  {
    [a3 createInkPickerControllerIfNecessary];
    if ((a4 & 1) == 0) {
      goto LABEL_7;
    }
  }
  id v24 = [a3 textView];
  if (v24)
  {
    id v25 = v24;
    id v26 = [v25 textStorage];
    id v27 = [v26 length];

    [v25 setSelectedRange:v27];
    [a3 startEditing];
  }
LABEL_7:
  if (qword_10069AF68 != -1) {
    swift_once();
  }
  uint64_t v28 = type metadata accessor for Logger();
  sub_10003293C(v28, (uint64_t)qword_1006A4F80);
  id v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v31 = 0;
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "Finished setting note.", v31, 2u);
    swift_slowDealloc();
  }

  if (a5) {
    sub_1003AF9FC(a3);
  }
}

void sub_1003AF970(uint64_t a1)
{
  id v2 = *(id *)(a1 + OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController);
  [v2 createInkPickerControllerIfNecessary];
  id v1 = [v2 inkPaletteController];
  [v1 showInkPalette:1 animated:1];
}

void sub_1003AF9FC(os_log_t a1)
{
  id v2 = v1;
  uint64_t v4 = OBJC_IVAR___ICSystemPaperViewController_incomingLink;
  if (*(void *)&v1[OBJC_IVAR___ICSystemPaperViewController_incomingLink]
    || *(void *)(*(void *)&v1[OBJC_IVAR___ICSystemPaperViewController_incomingImageData] + 16))
  {
    uint64_t v5 = OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController;
    uint64_t v6 = *(void **)&v1[OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController];
    if (!v6
      || (sub_100031418(0, (unint64_t *)&qword_1006A4DB0),
          unint64_t v7 = a1,
          id v8 = v6,
          char v9 = static NSObject.== infix(_:_:)(),
          v7,
          v8,
          (v9 & 1) == 0))
    {
      if (qword_10069AF68 != -1) {
        swift_once();
      }
      uint64_t v10 = type metadata accessor for Logger();
      sub_10003293C(v10, (uint64_t)qword_1006A4F80);
      uint64_t v11 = a1;
      uint64_t v12 = v2;
      uint64_t v13 = v11;
      uint64_t v14 = v12;
      uint64_t v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v15, v16))
      {
        os_log_t oslog = a1;
        uint64_t v17 = swift_slowAlloc();
        uint64_t v18 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v17 = 138412546;
        uint64_t v19 = *(void **)&v2[v5];
        if (v19) {
          id v20 = v19;
        }
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v18 = v19;

        *(_WORD *)(v17 + 12) = 2112;
        id v24 = v13;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v18[1] = v13;

        _os_log_impl((void *)&_mh_execute_header, v15, v16, "unexpected current note editor: %@, expected: %@", (uint8_t *)v17, 0x16u);
        sub_10002F214(&qword_10069FD50);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        a1 = oslog;
      }
      else
      {
      }
    }
    if (v2[OBJC_IVAR___ICSystemPaperViewController_viewDidAppearAtLeastOnce] == 1)
    {
      uint64_t v25 = *(void *)&v2[v4];
      if (v25)
      {
        [a1 addSystemPaperLink:v25 updateFirstResponder:0];
        id v26 = *(void **)&v2[v4];
        *(void *)&v2[v4] = 0;
      }
      uint64_t v27 = OBJC_IVAR___ICSystemPaperViewController_incomingImageData;
      if (*(void *)(*(void *)&v2[OBJC_IVAR___ICSystemPaperViewController_incomingImageData] + 16))
      {
        swift_bridgeObjectRetain();
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [a1 addSystemPaperImageData:isa updateFirstResponder:0];

        *(void *)&v2[v27] = _swiftEmptyArrayStorage;
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      if (qword_10069AF68 != -1) {
        swift_once();
      }
      uint64_t v29 = type metadata accessor for Logger();
      sub_10003293C(v29, (uint64_t)qword_1006A4F80);
      os_log_type_t v30 = Logger.logObject.getter();
      os_log_type_t v31 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v32 = 0;
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "view hasn't appeared yet; deferring adding links or images until -viewDidAppear:",
          v32,
          2u);
        swift_slowDealloc();
      }
    }
  }
  else
  {
    if (qword_10069AF68 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_10003293C(v21, (uint64_t)qword_1006A4F80);
    os_log_t osloga = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(osloga, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, osloga, v22, "No links or images to add", v23, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_1003B0014(uint64_t a1, unint64_t a2, void *a3, void *a4, int a5, int a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v68 = a8;
  id v62 = a7;
  LODWORD(v61) = a6;
  LODWORD(v60) = a5;
  uint64_t v67 = type metadata accessor for DispatchTime();
  uint64_t v65 = *(void *)(v67 - 8);
  uint64_t v13 = __chkstk_darwin(v67);
  uint64_t v63 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  NSString v64 = (char *)&v56 - v15;
  uint64_t v16 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v66 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for DispatchQoS();
  uint64_t v19 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  id v69 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10069AF68 != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for Logger();
  uint64_t v22 = sub_10003293C(v21, (uint64_t)qword_1006A4F80);
  swift_bridgeObjectRetain_n();
  uint64_t v72 = v22;
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.debug.getter();
  BOOL v25 = os_log_type_enabled(v23, v24);
  uint64_t v73 = a1;
  if (v25)
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v70 = v19;
    uint64_t v59 = (uint64_t)v18;
    uint64_t v27 = a3;
    uint64_t v28 = (uint8_t *)v26;
    long long aBlock = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 136315138;
    swift_bridgeObjectRetain();
    unint64_t v74 = sub_10045DA1C(v73, a2, (uint64_t *)&aBlock);
    a1 = v73;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "[sCEVC:%s] entered editorViewControllerUpdateDispatchQueue.", v28, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a3 = v27;
    uint64_t v18 = (char *)v59;
    uint64_t v19 = v70;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v59 = sub_100031418(0, (unint64_t *)&qword_10069D2D0);
  uint64_t v29 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = a1;
  *(void *)(v30 + 24) = a2;
  *(void *)(v30 + 32) = a3;
  *(void *)(v30 + 40) = a4;
  *(unsigned char *)(v30 + 48) = v60 & 1;
  *(unsigned char *)(v30 + 49) = v61 & 1;
  *(void *)(v30 + 56) = v62;
  uint64_t v79 = sub_1003B9808;
  id v80 = (void *)v30;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v76 = 1107296256;
  uint64_t v77 = sub_100262E2C;
  uint64_t v78 = &unk_100639230;
  os_log_type_t v31 = _Block_copy(&aBlock);
  id v32 = a3;
  id v62 = a4;
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v33 = v69;
  static DispatchQoS.unspecified.getter();
  long long aBlock = _swiftEmptyArrayStorage;
  uint64_t v34 = sub_1003B9E8C((unint64_t *)&qword_1006A26A0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  uint64_t v35 = sub_10002F214((uint64_t *)&unk_1006A4830);
  uint64_t v36 = sub_1003B9ED4((unint64_t *)&qword_1006A26B0, (uint64_t *)&unk_1006A4830);
  uint64_t v60 = v35;
  uint64_t v58 = v36;
  uint64_t v61 = v34;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v31);

  uint64_t v66 = *(void *)(v66 + 8);
  ((void (*)(char *, uint64_t))v66)(v18, v16);
  int v57 = *(void (**)(char *, uint64_t))(v19 + 8);
  v57(v33, v71);
  swift_bridgeObjectRetain_n();
  int v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.debug.getter();
  BOOL v39 = os_log_type_enabled(v37, v38);
  uint64_t v70 = v19 + 8;
  if (v39)
  {
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    long long aBlock = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v40 = 136315138;
    swift_bridgeObjectRetain();
    unint64_t v74 = sub_10045DA1C(v73, a2, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "[sCEVC:%s] waiting to get picked up in editorViewControllerUpdateDispatchQueue.", v40, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  os_log_type_t v41 = v63;
  static DispatchTime.now()();
  id v42 = v64;
  + infix(_:_:)();
  uint64_t v43 = *(void (**)(char *, uint64_t))(v65 + 8);
  uint64_t v44 = v41;
  uint64_t v45 = v67;
  v43(v44, v67);
  char v46 = OS_dispatch_semaphore.wait(timeout:)();
  v43(v42, v45);
  swift_bridgeObjectRetain_n();
  int v47 = Logger.logObject.getter();
  if ((v46 & 1) == 0)
  {
    os_log_type_t v48 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      long long aBlock = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v49 = 136315138;
      swift_bridgeObjectRetain();
      unint64_t v74 = sub_10045DA1C(v73, a2, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      uint64_t v50 = "[sCEVC:%s] Received UIPVC callback.";
      goto LABEL_14;
    }
LABEL_16:

    swift_bridgeObjectRelease_n();
    uint64_t v51 = v68;
    if (!v68) {
      return;
    }
    goto LABEL_17;
  }
  os_log_type_t v48 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(v47, v48)) {
    goto LABEL_16;
  }
  uint64_t v49 = (uint8_t *)swift_slowAlloc();
  long long aBlock = (void *)swift_slowAlloc();
  *(_DWORD *)uint64_t v49 = 136315138;
  swift_bridgeObjectRetain();
  unint64_t v74 = sub_10045DA1C(v73, a2, (uint64_t *)&aBlock);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease_n();
  uint64_t v50 = "[sCEVC:%s] Timed out waiting for UIPVC callback.";
LABEL_14:
  _os_log_impl((void *)&_mh_execute_header, v47, v48, v50, v49, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  uint64_t v51 = v68;
  if (v68)
  {
LABEL_17:
    swift_retain();
    uint64_t v52 = (void *)static OS_dispatch_queue.main.getter();
    id v53 = (void *)swift_allocObject();
    v53[2] = v73;
    v53[3] = a2;
    v53[4] = v51;
    v53[5] = a9;
    uint64_t v79 = sub_1003B9860;
    id v80 = v53;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v76 = 1107296256;
    uint64_t v77 = sub_100262E2C;
    uint64_t v78 = &unk_100639280;
    uint64_t v54 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    sub_10002E71C(v51);
    swift_release();
    uint64_t v55 = v69;
    static DispatchQoS.unspecified.getter();
    long long aBlock = _swiftEmptyArrayStorage;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v54);

    sub_10002E70C(v51);
    ((void (*)(char *, uint64_t))v66)(v18, v16);
    v57(v55, v71);
  }
}

void sub_1003B0AA8(uint64_t a1, unint64_t a2, void *a3, char *a4, char a5, char a6, uint64_t a7)
{
  if (qword_10069AF68 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_10003293C(v10, (uint64_t)qword_1006A4F80);
  swift_bridgeObjectRetain_n();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  uint64_t v47 = a7;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    swift_bridgeObjectRetain();
    sub_10045DA1C(a1, a2, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "[sCEVC:%s] entered MT.", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (a3)
  {
    sub_10002F214(&qword_10069BA00);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_100529F20;
    *(void *)(v14 + 32) = a3;
    aBlock[0] = v14;
    specialized Array._endMutation()();
    uint64_t v15 = *(void **)&a4[OBJC_IVAR___ICSystemPaperViewController_pageViewController];
    if (!v15)
    {
      __break(1u);
      goto LABEL_32;
    }
    id v16 = a3;
    id v17 = [v15 viewControllers];
    if (v17)
    {
      uint64_t v18 = v17;
      sub_100031418(0, &qword_1006A0070);
      unint64_t v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      char v20 = sub_1002D653C((uint64_t)v16, v19);
      swift_bridgeObjectRelease();
    }
    else
    {

      char v20 = 0;
    }
    a6 &= v20 ^ 1;
  }
  else
  {
    char v20 = 0;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 136315394;
    os_log_type_t type = v22;
    swift_bridgeObjectRetain();
    sub_10045DA1C(a1, a2, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v23 + 12) = 2080;
    sub_100031418(0, &qword_1006A0070);
    swift_bridgeObjectRetain();
    uint64_t v24 = Array.description.getter();
    unint64_t v26 = v25;
    swift_bridgeObjectRelease();
    sub_10045DA1C(v24, v26, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v21, type, "[sCEVC:%s] viewControllers: %s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  uint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 136315394;
    swift_bridgeObjectRetain();
    sub_10045DA1C(a1, a2, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    unint64_t v30 = a2;
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v29 + 12) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "[sCEVC:%s] alreadyPresent: %{BOOL}d", (uint8_t *)v29, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if ((v20 & 1) == 0)
    {
LABEL_23:
      swift_bridgeObjectRetain_n();
      uint64_t v34 = Logger.logObject.getter();
      os_log_type_t v35 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = (uint8_t *)swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v36 = 136315138;
        swift_bridgeObjectRetain();
        sub_10045DA1C(a1, v30, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "[sCEVC:%s] Setting VCs...", v36, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      int v37 = *(void **)&a4[OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController];
      *(void *)&a4[OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController] = a3;
      id v38 = a3;

      BOOL v39 = *(void **)&a4[OBJC_IVAR___ICSystemPaperViewController_launchImageView];
      if (v39)
      {
        [v39 setHidden:1];
        uint64_t v40 = *(void **)&a4[OBJC_IVAR___ICSystemPaperViewController_pageViewController];
        if (v40)
        {
          sub_100031418(0, &qword_1006A0070);
          id v41 = v40;
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          uint64_t v43 = swift_allocObject();
          *(void *)(v43 + 16) = a4;
          aBlock[4] = (uint64_t)sub_1003B986C;
          aBlock[5] = v43;
          aBlock[0] = (uint64_t)_NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          void aBlock[2] = (uint64_t)sub_100404EF8;
          void aBlock[3] = (uint64_t)&unk_1006392D0;
          uint64_t v44 = _Block_copy(aBlock);
          uint64_t v45 = a4;
          swift_release();
          [v41 setViewControllers:isa direction:v47 animated:a6 & 1 completion:v44];
          _Block_release(v44);

          return;
        }
        goto LABEL_33;
      }
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      return;
    }
  }
  else
  {

    unint64_t v30 = a2;
    swift_bridgeObjectRelease_n();
    if ((v20 & 1) == 0) {
      goto LABEL_23;
    }
  }
  if (a5) {
    goto LABEL_23;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  os_log_type_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 136315138;
    swift_bridgeObjectRetain();
    sub_10045DA1C(a1, v30, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "[sCEVC:%s] Signaling because already present.", v33, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  OS_dispatch_semaphore.signal()();
}

uint64_t sub_1003B1460(uint64_t a1, unint64_t a2, uint64_t (*a3)(uint64_t))
{
  if (qword_10069AF68 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10003293C(v6, (uint64_t)qword_1006A4F80);
  swift_bridgeObjectRetain_n();
  unint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    char v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)char v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_10045DA1C(a1, a2, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "[sCEVC:%s] calling completion handler...", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v10 = swift_bridgeObjectRelease_n();
  }
  return a3(v10);
}

void sub_1003B1624(uint64_t a1, uint64_t a2, NSObject *a3)
{
  sub_1003B8334();
  sub_1003ABF6C();
  sub_1003AA5EC();
  sub_1003AF9FC(a3);
  *(unsigned char *)(a1 + OBJC_IVAR___ICSystemPaperViewController_hasFinishedInitialViewRefresh) = 1;
  if (qword_10069AF68 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10003293C(v5, (uint64_t)qword_1006A4F80);
  os_log_t oslog = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(oslog, v6))
  {
    unint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v6, "Refresh finished.", v7, 2u);
    swift_slowDealloc();
  }
}

void sub_1003B1738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_10002F034(a1, (uint64_t)v26, &qword_10069B4D0);
  if (!v27)
  {
    sub_10002B754((uint64_t)v26, &qword_10069B4D0);
    return;
  }
  sub_100031418(0, (unint64_t *)&unk_1006A5250);
  if ((swift_dynamicCast() & 1) == 0) {
    return;
  }
  id v7 = [v25 fileType];
  if (v7)
  {
    os_log_type_t v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    if (v9 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v11 != v12)
    {
      char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v14)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      if (v9 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v11 != v15)
      {
        char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v23 & 1) == 0) {
          goto LABEL_23;
        }
LABEL_13:
        if (ICInternalSettingsIsTextKit2Enabled())
        {
          id v16 = [a5 textLayoutManager];
          if (v16)
          {
            id v17 = v16;
            id v18 = [v16 documentRange];
            id v19 = [v18 location];

            id v20 = [v17 locationFromLocation:v19 withOffset:a2];
            swift_unknownObjectRelease();
            if (v20)
            {
              id v21 = [a5 textContainer];
              id v22 = [v25 viewProviderForParentView:a5 location:v20 textContainer:v21];

              swift_unknownObjectRelease();
LABEL_22:

              id v24 = v22;
              goto LABEL_23;
            }
          }
        }
        id v17 = [a5 layoutManager];
        id v22 = [v25 viewProviderForParentView:a5 characterIndex:a2 layoutManager:v17];
        goto LABEL_22;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
LABEL_23:
}

unint64_t sub_1003B1A20()
{
  if (!(*v0 >> 62))
  {
    if (*(void *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v3) {
    return 0;
  }
LABEL_3:
  unint64_t result = sub_1003B8124();
  if (!result)
  {
    if (*v0 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      unint64_t result = v4 - 1;
      if (!__OFSUB__(v4, 1)) {
        return sub_1003A7558(result);
      }
    }
    else
    {
      uint64_t v2 = *(void *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t result = v2 - 1;
      if (!__OFSUB__(v2, 1)) {
        return sub_1003A7558(result);
      }
    }
    __break(1u);
  }
  return result;
}

id sub_1003B1AEC(void *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v54 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v53 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1003AC4F4();
  id v12 = [a1 note];
  if (!v12
    || (uint64_t v13 = v12, v14 = [v12 objectID], v13, !v14))
  {
    swift_bridgeObjectRelease();
    if (qword_10069AF68 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_10003293C(v20, (uint64_t)qword_1006A4F80);
    id v21 = a1;
    id v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      id v24 = (uint8_t *)swift_slowAlloc();
      id v25 = (void *)swift_slowAlloc();
      *(_DWORD *)id v24 = 138412290;
      aBlock[0] = v21;
      id v26 = v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v25 = v21;

      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Couldn't get current note identifier {editorViewController: %@}", v24, 0xCu);
      sub_10002F214(&qword_10069FD50);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return 0;
  }
  sub_1004A075C((uint64_t)v14, (unint64_t)v11);
  if (v16)
  {
    swift_bridgeObjectRelease();
    if (qword_10069AF68 == -1) {
      goto LABEL_17;
    }
    goto LABEL_32;
  }
  if (__OFADD__(v15, a2))
  {
    __break(1u);
LABEL_32:
    swift_once();
LABEL_17:
    uint64_t v27 = type metadata accessor for Logger();
    sub_10003293C(v27, (uint64_t)qword_1006A4F80);
    id v28 = v14;
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v29, v30))
    {
      os_log_type_t v31 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v32 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v31 = 138412290;
      aBlock[0] = v28;
      id v33 = v28;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *os_log_type_t v32 = v14;

      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Couldn't get index of note identifier fetchedNoteIdentifiers {currentNoteIdentifier: %@}", v31, 0xCu);
      sub_10002F214(&qword_10069FD50);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return 0;
  }
  if (((v15 + a2) & 0x8000000000000000) == 0)
  {
    uint64_t v52 = v15 + a2;
    unint64_t v17 = (unint64_t)sub_1003AC4F4();
    unint64_t v18 = v17;
    if (v17 >> 62) {
      uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    }
    else {
      uint64_t v19 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (__OFSUB__(v19, 1))
    {
      __break(1u);
    }
    else
    {
      unint64_t v18 = v52;
      if (v19 - 1 < v52) {
        goto LABEL_10;
      }
      sub_1003AC4F4();
      sub_100031418(0, (unint64_t *)&qword_10069E810);
      Array.subscript.getter();
      swift_bridgeObjectRelease();
      uint64_t v36 = (void *)aBlock[0];
      if (aBlock[0])
      {
        id v37 = v2;
        id v38 = v36;
        BOOL v39 = (void *)sub_1003ABBB0(v38);

        if (v39)
        {
          sub_100031418(0, (unint64_t *)&qword_10069D2D0);
          id v51 = v39;
          uint64_t v50 = static OS_dispatch_queue.main.getter();
          uint64_t v40 = (void *)swift_allocObject();
          v40[2] = v52;
          v40[3] = a2;
          v40[4] = v11;
          v40[5] = v37;
          aBlock[4] = sub_1003B9980;
          aBlock[5] = v40;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          void aBlock[2] = sub_100262E2C;
          void aBlock[3] = &unk_100639528;
          id v41 = _Block_copy(aBlock);
          v37;
          swift_release();
          static DispatchQoS.unspecified.getter();
          aBlock[0] = _swiftEmptyArrayStorage;
          sub_1003B9E8C((unint64_t *)&qword_1006A26A0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          sub_10002F214((uint64_t *)&unk_1006A4830);
          sub_1003B9ED4((unint64_t *)&qword_1006A26B0, (uint64_t *)&unk_1006A4830);
          dispatch thunk of SetAlgebra.init<A>(_:)();
          id v42 = (void *)v50;
          OS_dispatch_queue.async(group:qos:flags:execute:)();
          _Block_release(v41);

          (*(void (**)(char *, uint64_t))(v54 + 8))(v7, v5);
          (*(void (**)(char *, uint64_t))(v53 + 8))(v10, v8);
          uint64_t v43 = (uint64_t)v51;
          id v44 = v51;
          id v34 = sub_1003AF308(v43, 1);

          return v34;
        }
        swift_bridgeObjectRelease();
        unint64_t v18 = v52;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      if (qword_10069AF68 == -1)
      {
LABEL_28:
        uint64_t v45 = type metadata accessor for Logger();
        sub_10003293C(v45, (uint64_t)qword_1006A4F80);
        char v46 = Logger.logObject.getter();
        os_log_type_t v47 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v46, v47))
        {
          os_log_type_t v48 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)os_log_type_t v48 = 134217984;
          aBlock[0] = v18;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v46, v47, "Couldn't fetch a note {index: %ld}", v48, 0xCu);
          swift_slowDealloc();
        }
        else
        {
        }
        return 0;
      }
    }
    swift_once();
    goto LABEL_28;
  }
LABEL_10:

  swift_bridgeObjectRelease();
  return 0;
}

void sub_1003B2314(uint64_t a1, uint64_t a2, unint64_t a3, void *a4)
{
  uint64_t v5 = a1 + a2;
  if (__OFADD__(a1, a2))
  {
    __break(1u);
  }
  else
  {
    if (v5 < 1) {
      return;
    }
    uint64_t v4 = a4;
    if (!(a3 >> 62))
    {
      uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v7 = v6 - 1;
      if (!__OFSUB__(v6, 1)) {
        goto LABEL_5;
      }
LABEL_17:
      __break(1u);
LABEL_18:
      swift_once();
LABEL_10:
      uint64_t v13 = type metadata accessor for Logger();
      sub_10003293C(v13, (uint64_t)qword_1006A4F80);
      id v12 = Logger.logObject.getter();
      os_log_type_t v14 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v12, v14))
      {
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v15 = 134217984;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v12, v14, "Couldn't cache note for index: %ld", v15, 0xCu);
        swift_slowDealloc();
      }
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v7 = v16 - 1;
  if (__OFSUB__(v16, 1)) {
    goto LABEL_17;
  }
LABEL_5:
  if (v5 >= v7) {
    return;
  }
  sub_1003AC4F4();
  sub_100031418(0, (unint64_t *)&qword_10069E810);
  Array.subscript.getter();
  swift_bridgeObjectRelease();
  if (!v17
    || (uint64_t v8 = v4,
        id v9 = v17,
        uint64_t v10 = (void *)sub_1003ABBB0(v9),
        v8,
        v9,
        v9,
        !v10))
  {
    if (qword_10069AF68 == -1) {
      goto LABEL_10;
    }
    goto LABEL_18;
  }
  id v11 = *(id *)&v8[OBJC_IVAR___ICSystemPaperViewController_noteCache];
  id v12 = [v10 objectID];
  [v11 setObject:v10 forKey:v12];

LABEL_12:
}

void sub_1003B285C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (char *)Strong;
    if (qword_10069AF68 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10003293C(v2, (uint64_t)qword_1006A4F80);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "More Menu: Tapped share", v5, 2u);
      swift_slowDealloc();
    }

    uint64_t v6 = OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController;
    uint64_t v7 = *(void **)&v1[OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController];
    if (v7 && (id v8 = [v7 note]) != 0)
    {
      id v9 = v8;
      uint64_t v10 = *(void **)&v1[v6];
      if (v10)
      {
        id v11 = v10;
        if ([v11 isInkPickerShowing]) {
          [v11 showInkPicker:0 animated:1];
        }
        id v12 = [v11 inkPaletteController];
        if (v12)
        {
          uint64_t v13 = v12;
          [v12 showInkPalette:0 animated:1];
        }
        double y = CGRectNull.origin.y;
        double width = CGRectNull.size.width;
        double height = CGRectNull.size.height;
        id v17 = *(id *)&v1[OBJC_IVAR___ICSystemPaperViewController_moreButton];
        id v18 = [v11 eventReporter];
        id v19 = objc_allocWithZone((Class)ICSendNoteActivity);
        id v20 = v9;
        id v21 = v1;
        Class isa = [v19 initWithNote:v20 presentingViewController:v21 presentingBarButtonItem:0 presentingSourceView:v17 presentingSourceRect:CGRectMake(v18.origin.x, y, width, height)];

        sub_10002F214((uint64_t *)&unk_1006A52C8);
        uint64_t v23 = swift_allocObject();
        *(_OWORD *)(v23 + 16) = xmmword_100527F30;
        *(void *)(v23 + 32) = UIActivityTypeMarkupAsPDF;
        *(void *)(v23 + 40) = UIActivityTypeAssignToContact;
        type metadata accessor for ActivityType(0);
        id v24 = UIActivityTypeMarkupAsPDF;
        id v25 = UIActivityTypeAssignToContact;
        v26.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [(objc_class *)isa performActivityWithExcludedTypes:v26.super.isa completion:0];
      }
      else
      {
        v26.super.Class isa = (Class)Logger.logObject.getter();
        os_log_type_t v29 = static os_log_type_t.error.getter();
        if (os_log_type_enabled((os_log_t)v26.super.isa, v29))
        {
          os_log_type_t v30 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v30 = 0;
          _os_log_impl((void *)&_mh_execute_header, (os_log_t)v26.super.isa, v29, "Couldn't get currentNoteEditorViewController.", v30, 2u);
          swift_slowDealloc();

          Class isa = (Class)v9;
        }
        else
        {

          Class isa = (Class)v1;
          v26.super.Class isa = (Class)v9;
        }
      }
    }
    else
    {
      v26.super.Class isa = (Class)Logger.logObject.getter();
      os_log_type_t v27 = static os_log_type_t.error.getter();
      if (os_log_type_enabled((os_log_t)v26.super.isa, v27))
      {
        id v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v28 = 0;
        _os_log_impl((void *)&_mh_execute_header, (os_log_t)v26.super.isa, v27, "Couldn't find a note to use for sharing.", v28, 2u);
        swift_slowDealloc();
        Class isa = (Class)v1;
      }
      else
      {
        Class isa = v26.super.isa;
        v26.super.Class isa = (Class)v1;
      }
    }
  }
}

void sub_1003B2C68()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    if (qword_10069AF68 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10003293C(v2, (uint64_t)qword_1006A4F80);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "More Menu: Tapped delete", v5, 2u);
      swift_slowDealloc();
    }

    sub_1003ACA0C();
  }
}

id sub_1003B2D7C(void (*a1)(void *))
{
  unint64_t v32 = (unint64_t)_swiftEmptyArrayStorage;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    a1(_swiftEmptyArrayStorage);
    return (id)swift_bridgeObjectRelease();
  }
  uint64_t v3 = (char *)Strong;
  os_log_type_t v30 = &type metadata for PencilAndPaperFeature;
  unint64_t v31 = sub_1001745B4();
  v28[0] = "ScreenshotsInQuickNote";
  v28[1] = 22;
  char v29 = 2;
  char v4 = isFeatureEnabled(_:)();
  sub_100018FE8((uint64_t)v28);
  if (v4)
  {
    id result = [self sharedConnection];
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v6 = result;
    unsigned int v7 = [result isScreenShotAllowed];

    if (v7)
    {
      sub_100031418(0, (unint64_t *)&unk_10069B9F0);
      id v8 = [self mainBundle];
      NSString v9 = String._bridgeToObjectiveC()();
      id v10 = [v8 localizedStringForKey:v9 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v11 = String._bridgeToObjectiveC()();
      id v12 = [self systemImageNamed:v11];

      swift_allocObject();
      swift_unknownObjectWeakInit();
      id v13 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  os_log_type_t v14 = *(void **)&v3[OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController];
  if (v14)
  {
    id v15 = [v14 note];
    if (v15)
    {
      uint64_t v16 = v15;
      if (([v15 isEmpty] & 1) == 0)
      {
        swift_allocObject();
        swift_unknownObjectWeakInit();
        sub_100031418(0, (unint64_t *)&unk_10069B9F0);
        id v17 = [self mainBundle];
        NSString v18 = String._bridgeToObjectiveC()();
        id v19 = [v17 localizedStringForKey:v18 value:0 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v20 = String._bridgeToObjectiveC()();
        id v21 = [self systemImageNamed:v20];

        UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
  }
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100031418(0, (unint64_t *)&unk_10069B9F0);
  id v22 = [self mainBundle];
  NSString v23 = String._bridgeToObjectiveC()();
  id v24 = [v22 localizedStringForKey:v23 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v25 = String._bridgeToObjectiveC()();
  id v26 = [self systemImageNamed:v25];

  UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  uint64_t v27 = swift_bridgeObjectRetain();
  a1((void *)v27);
  return (id)swift_bridgeObjectRelease_n();
}

uint64_t sub_1003B33F0(void *a1)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = (void *)result;
    v5[3] = sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    v5[0] = a1;
    id v4 = a1;
    sub_1003B3478();

    return sub_100018FE8((uint64_t)v5);
  }
  return result;
}

void sub_1003B3478()
{
  id v1 = v0;
  NSString v25 = &type metadata for PencilAndPaperFeature;
  unint64_t v26 = sub_1001745B4();
  id v22 = (void **)"ScreenshotsInQuickNote";
  uint64_t v23 = 22;
  LOBYTE(v24) = 2;
  char v2 = isFeatureEnabled(_:)();
  sub_100018FE8((uint64_t)&v22);
  if ((v2 & 1) == 0) {
    return;
  }
  id v3 = [self sharedConnection:v22 v23:v23 v24:v24 v25:v25 v26:v26];
  if (!v3)
  {
    __break(1u);
    goto LABEL_16;
  }
  id v4 = v3;
  unsigned int v5 = [v3 isScreenShotAllowed];

  if (v5)
  {
    if (qword_10069AF68 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10003293C(v6, (uint64_t)qword_1006A4F80);
    unsigned int v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v7, v8))
    {
      NSString v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSString v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Tapped screenshot button", v9, 2u);
      swift_slowDealloc();
    }

    id v10 = *(void **)&v1[OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController];
    if (v10)
    {
      id v11 = v10;
      id v12 = [v1 view];
      if (v12)
      {
        id v13 = v12;
        id v14 = [v12 window];

        if (v14 && (id v15 = [v14 windowScene], v14, v15))
        {
          uint64_t v16 = sub_1003B38D4(v15);
          uint64_t v17 = swift_allocObject();
          *(void *)(v17 + 16) = sub_100169060((uint64_t)_swiftEmptyArrayStorage);
          NSString v18 = self;
          [v18 begin];
          sub_1003B3CC4((unint64_t)v16, v17 + 16);
          [v18 commit];
          swift_bridgeObjectRelease();
          uint64_t v19 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v20 = swift_allocObject();
          *(void *)(v20 + 16) = v17;
          *(void *)(v20 + 24) = v19;
          unint64_t v26 = (unint64_t)sub_1003B9AF8;
          uint64_t v27 = v20;
          id v22 = _NSConcreteStackBlock;
          uint64_t v23 = 1107296256;
          id v24 = sub_1003B46A4;
          NSString v25 = (ValueMetadata *)&unk_1006397D0;
          id v21 = _Block_copy(&v22);
          swift_retain();
          swift_release();
          sub_100128B80(v15, v21);
          _Block_release(v21);

          swift_release();
        }
        else
        {
        }
        return;
      }
LABEL_16:
      __break(1u);
    }
  }
}

uint64_t sub_1003B37C4(uint64_t a1, void *aBlock)
{
  char v2 = *(void (**)(void (*)(uint64_t), uint64_t))(a1 + 32);
  id v3 = _Block_copy(aBlock);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  swift_retain();
  v2(sub_1003B9E6C, v4);
  swift_release();

  return swift_release();
}

void sub_1003B3858(uint64_t a1, uint64_t a2)
{
  sub_100031418(0, (unint64_t *)&qword_1006A4D30);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, objc_class *))(a2 + 16))(a2, isa);
}

void *sub_1003B38D4(void *a1)
{
  char v2 = self;
  uint64_t result = [v2 _applicationKeyWindow];
  if (!result)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  uint64_t v4 = result;
  id v5 = [result windowScene];

  if (!v5) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v6 = sub_100031418(0, &qword_1006A5298);
  id v7 = a1;
  id v8 = v5;
  uint64_t v35 = v6;
  char v9 = static NSObject.== infix(_:_:)();

  uint64_t v36 = v7;
  if ((v9 & 1) == 0) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t result = [v2 allWindowsIncludingInternalWindows:1 onlyVisibleWindows:1];
  if (result)
  {
    id v10 = result;
    uint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v12 = (unint64_t)sub_1003310E8(v11);
    swift_bridgeObjectRelease();
    id v13 = (NSString *)String._bridgeToObjectiveC()();
    Class v14 = NSClassFromString(v13);

    if (v12 >> 62) {
      goto LABEL_35;
    }
    uint64_t v15 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v16 = v7;
LABEL_7:
    if (v15)
    {
      unint64_t v17 = 0;
      unint64_t v37 = v12 & 0xC000000000000001;
      uint64_t v18 = v12 & 0xFFFFFFFFFFFFFF8;
      do
      {
        if (v37)
        {
          id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v17 >= *(void *)(v18 + 16))
          {
            __break(1u);
LABEL_34:
            __break(1u);
LABEL_35:
            id v34 = v36;
            uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
            goto LABEL_7;
          }
          id v19 = *(id *)(v12 + 8 * v17 + 32);
        }
        uint64_t v20 = v19;
        unint64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1)) {
          goto LABEL_34;
        }
        id v22 = [v19 windowScene];
        if (v22)
        {
          uint64_t v23 = v22;
          id v24 = v36;
          NSString v25 = v14;
          unint64_t v26 = (void *)v12;
          id v27 = v23;
          LOBYTE(v23) = static NSObject.== infix(_:_:)();

          unint64_t v12 = (unint64_t)v26;
          Class v14 = v25;

          if (v23) {
            goto LABEL_9;
          }
        }
        if (v14 && (uint64_t ObjectType = swift_getObjectType(), ObjectType == swift_getObjCClassMetadata()))
        {
LABEL_9:
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
        }
        ++v17;
      }
      while (v21 != v15);
    }
    swift_bridgeObjectRelease();

    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0
      || ((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) != 0)
    {
      uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
      if (v29) {
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v29 = _swiftEmptyArrayStorage[2];
      if (v29)
      {
LABEL_25:
        uint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
        if ((v29 & 0x8000000000000000) == 0)
        {
          uint64_t v30 = 0;
          do
          {
            if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0) {
              id v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v31 = (id)_swiftEmptyArrayStorage[v30 + 4];
            }
            unint64_t v32 = v31;
            ++v30;
            id v33 = [v31 layer:v35];

            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
          }
          while (v29 != v30);
          goto LABEL_31;
        }
        __break(1u);
        goto LABEL_39;
      }
    }
LABEL_31:
    swift_release();
    return _swiftEmptyArrayStorage;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1003B3CC4(unint64_t a1, unint64_t a2)
{
  uint64_t v3 = a1;
  if (a1 >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      uint64_t v30 = v3;
      unint64_t v31 = v3 & 0xC000000000000001;
      uint64_t v5 = 4;
      uint64_t v6 = &selRef_setSymbolConfiguration_;
      do
      {
        uint64_t v8 = v5 - 4;
        if (v31)
        {
          id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v10 = v5 - 3;
          if (__OFADD__(v8, 1)) {
            goto LABEL_22;
          }
        }
        else
        {
          id v9 = *(id *)(v3 + 8 * v5);
          uint64_t v10 = v5 - 3;
          if (__OFADD__(v8, 1))
          {
LABEL_22:
            __break(1u);
LABEL_23:
            __break(1u);
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
        }
        uint64_t v32 = v10;
        uint64_t v3 = v4;
        id v11 = v9;
        unint64_t v12 = v6;
        unsigned int v13 = [v11 v6[511]];
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v15 = *(void **)a2;
        id v33 = *(void **)a2;
        id v16 = (void *)a2;
        *(void *)a2 = 0x8000000000000000;
        a2 = sub_1002B6F10((uint64_t)v11);
        uint64_t v18 = v15[2];
        BOOL v19 = (v17 & 1) == 0;
        uint64_t v20 = v18 + v19;
        if (__OFADD__(v18, v19)) {
          goto LABEL_23;
        }
        char v21 = v17;
        if (v15[3] >= v20)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            id v24 = v33;
            if (v17) {
              goto LABEL_4;
            }
          }
          else
          {
            sub_1002BF300();
            id v24 = v33;
            if (v21) {
              goto LABEL_4;
            }
          }
        }
        else
        {
          sub_1002BB86C(v20, isUniquelyReferenced_nonNull_native);
          unint64_t v22 = sub_1002B6F10((uint64_t)v11);
          if ((v21 & 1) != (v23 & 1))
          {
            sub_100031418(0, &qword_1006A5290);
            uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
            __break(1u);
            return result;
          }
          a2 = v22;
          id v24 = v33;
          if (v21)
          {
LABEL_4:
            *(_DWORD *)(v24[7] + 4 * a2) = v13;
            goto LABEL_5;
          }
        }
        v24[(a2 >> 6) + 8] |= 1 << a2;
        *(void *)(v24[6] + 8 * a2) = v11;
        *(_DWORD *)(v24[7] + 4 * a2) = v13;
        uint64_t v25 = v24[2];
        BOOL v26 = __OFADD__(v25, 1);
        uint64_t v27 = v25 + 1;
        if (v26) {
          goto LABEL_24;
        }
        v24[2] = v27;
        id v28 = v11;
LABEL_5:
        a2 = (unint64_t)v16;
        *id v16 = v24;

        swift_bridgeObjectRelease();
        uint64_t v6 = v12;
        [v11 setDisableUpdateMask:[v11 disableUpdateMask] | 2];

        ++v5;
        uint64_t v4 = v3;
        BOOL v7 = v32 == v3;
        uint64_t v3 = v30;
      }
      while (!v7);
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1003B3F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v21 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  unsigned int v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100031418(0, (unint64_t *)&qword_10069D2D0);
  uint64_t v19 = static OS_dispatch_queue.main.getter();
  Class v14 = (void *)swift_allocObject();
  v14[2] = a3;
  v14[3] = a1;
  v14[4] = a2;
  v14[5] = a4;
  aBlock[4] = sub_1003B9B50;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100262E2C;
  void aBlock[3] = &unk_100639820;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1003B9E8C((unint64_t *)&qword_1006A26A0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10002F214((uint64_t *)&unk_1006A4830);
  sub_1003B9ED4((unint64_t *)&qword_1006A26B0, (uint64_t *)&unk_1006A4830);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  id v16 = (void *)v19;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v20);
}

void sub_1003B4240(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = self;
  [v6 begin];
  swift_beginAccess();
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = v7 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v7 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v13 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v16 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v16 >= v12) {
      goto LABEL_21;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v16);
    ++v13;
    if (!v17)
    {
      int64_t v13 = v16 + 1;
      if (v16 + 1 >= v12) {
        goto LABEL_21;
      }
      unint64_t v17 = *(void *)(v8 + 8 * v13);
      if (!v17)
      {
        int64_t v13 = v16 + 2;
        if (v16 + 2 >= v12) {
          goto LABEL_21;
        }
        unint64_t v17 = *(void *)(v8 + 8 * v13);
        if (!v17) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
LABEL_5:
    [*(id *)(*(void *)(v7 + 48) + 8 * v15) setDisableUpdateMask:*(unsigned int *)(*(void *)(v7 + 56) + 4 * v15)];
  }
  int64_t v18 = v16 + 3;
  if (v18 < v12)
  {
    unint64_t v17 = *(void *)(v8 + 8 * v18);
    if (!v17)
    {
      while (1)
      {
        int64_t v13 = v18 + 1;
        if (__OFADD__(v18, 1)) {
          break;
        }
        if (v13 >= v12) {
          goto LABEL_21;
        }
        unint64_t v17 = *(void *)(v8 + 8 * v13);
        ++v18;
        if (v17) {
          goto LABEL_20;
        }
      }
LABEL_35:
      __break(1u);
LABEL_36:
      swift_once();
LABEL_25:
      uint64_t v23 = type metadata accessor for Logger();
      sub_10003293C(v23, (uint64_t)qword_1006A4F80);
      swift_errorRetain();
      swift_errorRetain();
      v22.super.Class isa = (Class)Logger.logObject.getter();
      os_log_type_t v24 = static os_log_type_t.error.getter();
      if (os_log_type_enabled((os_log_t)v22.super.isa, v24))
      {
        uint64_t v25 = (uint8_t *)swift_slowAlloc();
        v32[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v25 = 136315138;
        unint64_t v33 = a3;
        swift_errorRetain();
        sub_10002F214(&qword_1006A5288);
        uint64_t v26 = String.init<A>(describing:)();
        unint64_t v33 = sub_10045DA1C(v26, v27, v32);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, (os_log_t)v22.super.isa, v24, "failed to capture screenshot from system paper: {error: %s}", v25, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }
LABEL_33:

      return;
    }
    int64_t v13 = v18;
    goto LABEL_20;
  }
LABEL_21:
  swift_release();
  [v6 commit];
  if (!a2)
  {
    if (qword_10069AF68 != -1) {
      goto LABEL_36;
    }
    goto LABEL_25;
  }
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v20 = Strong;
    id v21 = [Strong ic_isTextInputSourcePencil];
    v22.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v20 addSystemPaperImageData:v22.super.isa updateFirstResponder:0 forceAddToPaper:v21];

    goto LABEL_33;
  }
  if (qword_10069AF68 != -1) {
    swift_once();
  }
  uint64_t v28 = type metadata accessor for Logger();
  sub_10003293C(v28, (uint64_t)qword_1006A4F80);
  uint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, v30))
  {
    unint64_t v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v31 = 0;
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "editor destroyed while waiting for screenshot; ignoring image data",
      v31,
      2u);
    swift_slowDealloc();
  }
}

uint64_t sub_1003B46A4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2) {
    uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1003B4814()
{
  uint64_t v1 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v58 - v9;
  [self logDismissEvent:SYSystemPaperDismissMethodReturnToApp];
  id v11 = [v0 view];
  if (v11)
  {
    int64_t v12 = v11;
    id v13 = [v11 window];

    id v60 = [v13 _windowHostingScene];
    uint64_t v14 = OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController;
    unint64_t v15 = *(void **)&v0[OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController];
    if (v15 && (id v16 = [v15 note]) != 0)
    {
      unint64_t v17 = v16;
      id v18 = [self appURLForContainingFolderWithNoteFocused:v16];
      if (v18)
      {
        uint64_t v19 = v18;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
        v20(v3, v8, v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
        {
          v20(v10, v3, v4);
          if (v60)
          {
            id v21 = [v60 _sceneIdentifier];
            uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v59 = v22;

            sub_10002F214((uint64_t *)&unk_1006A49E0);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_100527F30;
            uint64_t aBlock = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v63 = v24;
            AnyHashable.init<A>(_:)();
            *(void *)(inited + 96) = v4;
            uint64_t v25 = sub_10015E0F0((uint64_t *)(inited + 72));
            (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 16))(v25, v10, v4);
            uint64_t aBlock = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v63 = v26;
            AnyHashable.init<A>(_:)();
            *(void *)(inited + 168) = &type metadata for String;
            uint64_t v27 = v59;
            *(void *)(inited + 144) = v61;
            *(void *)(inited + 152) = v27;
            sub_100168CCC(inited);
            Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            id v29 = [self optionsWithDictionary:isa];

            id v30 = (id)SBSCreateOpenApplicationService();
            if (!v30)
            {
              if (qword_10069AF68 != -1) {
                swift_once();
              }
              uint64_t v54 = type metadata accessor for Logger();
              sub_10003293C(v54, (uint64_t)qword_1006A4F80);
              uint64_t v55 = Logger.logObject.getter();
              os_log_type_t v56 = static os_log_type_t.error.getter();
              if (os_log_type_enabled(v55, v56))
              {
                int v57 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)int v57 = 0;
                _os_log_impl((void *)&_mh_execute_header, v55, v56, "Couldn't acquire SBSCreateOpenApplicationService endpoint.", v57, 2u);
                swift_slowDealloc();
              }

              goto LABEL_38;
            }
            unint64_t v31 = v30;
            uint64_t v32 = *(void **)&v0[v14];
            if (v32) {
              [v32 doneEditing];
            }
            unint64_t v33 = (id)ICNotesAppBundleIdentifier();
            if (!v33)
            {
              static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v33 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
            }
            uint64_t v66 = sub_1003B54C4;
            uint64_t v67 = 0;
            uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
            uint64_t v63 = 1107296256;
            NSString v64 = sub_1003779B0;
            uint64_t v65 = &unk_100639730;
            id v34 = _Block_copy(&aBlock);
            [v31 openApplication:v33 withOptions:v29 completion:v34];
            _Block_release(v34);
          }
          else
          {
            if (qword_10069AF68 != -1) {
              swift_once();
            }
            uint64_t v49 = type metadata accessor for Logger();
            sub_10003293C(v49, (uint64_t)qword_1006A4F80);
            unint64_t v33 = Logger.logObject.getter();
            os_log_type_t v50 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v33, v50))
            {
              id v51 = (uint8_t *)swift_slowAlloc();
              uint64_t aBlock = swift_slowAlloc();
              *(_DWORD *)id v51 = 136315138;
              id v60 = v51 + 4;
              unint64_t v68 = 0;
              sub_10002F214((uint64_t *)&unk_1006A5270);
              uint64_t v52 = String.init<A>(describing:)();
              uint64_t v61 = v10;
              unint64_t v68 = sub_10045DA1C(v52, v53, &aBlock);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v33, v50, "Couldn't extract scene identifier from scene {scene: %s}", v51, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              (*(void (**)(NSObject *, uint64_t))(v5 + 8))(v61, v4);
              return;
            }
          }
LABEL_38:
          (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
          return;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
      }
      sub_10002B754((uint64_t)v3, &qword_10069B310);
      if (qword_10069AF68 != -1) {
        swift_once();
      }
      uint64_t v40 = type metadata accessor for Logger();
      sub_10003293C(v40, (uint64_t)qword_1006A4F80);
      id v41 = v17;
      id v42 = Logger.logObject.getter();
      os_log_type_t v43 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v42, v43))
      {
        id v44 = (uint8_t *)swift_slowAlloc();
        uint64_t aBlock = swift_slowAlloc();
        *(_DWORD *)id v44 = 136315138;
        id v45 = [v41 ic_loggingIdentifier];
        uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v48 = v47;

        unint64_t v68 = sub_10045DA1C(v46, v48, &aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v42, v43, "Couldn't get URL for note {note: %s}", v44, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
    }
    else
    {
      if (qword_10069AF68 != -1) {
        swift_once();
      }
      uint64_t v35 = type metadata accessor for Logger();
      sub_10003293C(v35, (uint64_t)qword_1006A4F80);
      uint64_t v61 = Logger.logObject.getter();
      os_log_type_t v36 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v61, v36))
      {
        unint64_t v37 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v37 = 0;
        _os_log_impl((void *)&_mh_execute_header, v61, v36, "No note was marked as currentNote.", v37, 2u);
        swift_slowDealloc();

        id v38 = &v70;
      }
      else
      {

        id v38 = &v69;
      }
      BOOL v39 = (void *)*(v38 - 32);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1003B54C4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_errorRetain();
    if (qword_10069AF68 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10003293C(v2, (uint64_t)qword_1006A4F80);
    swift_errorRetain();
    swift_errorRetain();
    os_log_t oslog = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 136315138;
      swift_getErrorValue();
      uint64_t v5 = Error.localizedDescription.getter();
      sub_10045DA1C(v5, v6, &v11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v3, "Encountered error trying to jump back to Note {error: %s}", v4, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      return;
    }
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    if (qword_10069AF68 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10003293C(v7, (uint64_t)qword_1006A4F80);
    os_log_t oslog = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v8, "Successfully transitioned back to Notes.", v9, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_1003B58B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [self defaultWorkspace];
  if (v6)
  {
    uint64_t v7 = v6;
    URL.init(stringLiteral:)();
    URL._bridgeToObjectiveC()(v8);
    uint64_t v10 = v9;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_100167B58((uint64_t)_swiftEmptyArrayStorage);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v7 openSensitiveURL:v10 withOptions:isa];

    int64_t v12 = *(void **)(v1 + OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController);
    if (v12) {
      [v12 doneEditing];
    }
    sub_1003ABDE8();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v14 = Strong;
      [Strong closeAuxiliaryWindowAnimated:1];
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1003B5A90(void *a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  swift_unknownObjectRetain();
  id v6 = a1;
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  a4(v8);

  return sub_100018FE8((uint64_t)v8);
}

id sub_1003B5B08(void *a1)
{
  id v2 = [a1 destinationViewController];
  self;
  uint64_t v3 = swift_dynamicCastObjCClass();
  if (!v3)
  {

    uint64_t v3 = 0;
  }
  uint64_t v4 = OBJC_IVAR___ICSystemPaperViewController_pageViewController;
  uint64_t v5 = *(void **)(v1 + OBJC_IVAR___ICSystemPaperViewController_pageViewController);
  *(void *)(v1 + OBJC_IVAR___ICSystemPaperViewController_pageViewController) = v3;

  id result = *(id *)(v1 + v4);
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  [result setDataSource:v1];
  id result = *(id *)(v1 + v4);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  [result setDelegate:v1];
  id result = *(id *)(v1 + v4);
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }

  return [result ic_setAutoscrollEnabled:0];
}

double sub_1003B5CCC()
{
  uint64_t v1 = (unsigned char *)(v0
               + OBJC_IVAR___ICSystemPaperViewController____lazy_storage___toolPickerBackgroundViewOffscreenBottomConstraintConstant);
  if ((*(unsigned char *)(v0
                 + OBJC_IVAR___ICSystemPaperViewController____lazy_storage___toolPickerBackgroundViewOffscreenBottomConstraintConstant
                 + 8) & 1) == 0)
    return *(double *)v1;
  double result = *(double *)(v0 + OBJC_IVAR___ICSystemPaperViewController_toolPickerBackgroundViewHeight)
         + *(double *)(v0 + OBJC_IVAR___ICSystemPaperViewController_toolPickerBackgroundViewHeight);
  *(double *)uint64_t v1 = result;
  v1[8] = 0;
  return result;
}

void sub_1003B5D04(char *a1)
{
  id v2 = *(void **)&a1[OBJC_IVAR___ICSystemPaperViewController_toolPickerBackgroundViewBottomConstraint];
  if (v2) {
    [v2 setConstant:];
  }
  id v3 = [a1 view];
  if (v3)
  {
    id v4 = v3;
    [v3 layoutIfNeeded];
  }
  else
  {
    __break(1u);
  }
}

void sub_1003B5D8C(char a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a3 & 1) == 0 && (a1)
  {
    uint64_t v5 = OBJC_IVAR___ICSystemPaperViewController_toolPickerBackgroundView;
    id v6 = *(void **)(a4 + OBJC_IVAR___ICSystemPaperViewController_toolPickerBackgroundView);
    if (v6)
    {
      [v6 removeFromSuperview];
      id v6 = *(void **)(a4 + v5);
    }
    *(void *)(a4 + v5) = 0;
  }
}

uint64_t sub_1003B5DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(a2, a3);

  return swift_release();
}

BOOL sub_1003B5E5C(uint64_t a1)
{
  id v3 = *(void **)(v1 + OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController);
  if (!v3 || (id v4 = [v3 note]) == 0)
  {
    if (qword_10069AF68 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_10003293C(v15, (uint64_t)qword_1006A4F80);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v5, v16))
    {
      unint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v16, "No current note, can't determine whether or not a swipe is possible.", v17, 2u);
      swift_slowDealloc();
    }
    goto LABEL_24;
  }
  uint64_t v5 = v4;
  id v6 = sub_1003AC4F4();
  id v7 = [v5 objectID];
  sub_1004A075C((uint64_t)v7, (unint64_t)v6);
  uint64_t v9 = v8;
  char v11 = v10;
  swift_bridgeObjectRelease();

  if (v11)
  {
    if (qword_10069AF68 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_10003293C(v18, (uint64_t)qword_1006A4F80);
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v19, v20)) {
      goto LABEL_23;
    }
    id v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v21 = 0;
    uint64_t v22 = "Can't find index of current note to determine whether or not a swipe is possible.";
    goto LABEL_22;
  }
  if (a1 == 1)
  {

    return v9 > 0;
  }
  if (a1)
  {
    if (qword_10069AF68 == -1) {
      goto LABEL_20;
    }
  }
  else
  {
    unint64_t v12 = (unint64_t)sub_1003AC4F4();
    if (v12 >> 62) {
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    }
    else {
      uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();

    if (!__OFSUB__(v13, 1)) {
      return v9 < v13 - 1;
    }
    __break(1u);
  }
  swift_once();
LABEL_20:
  uint64_t v23 = type metadata accessor for Logger();
  sub_10003293C(v23, (uint64_t)qword_1006A4F80);
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v19, v20))
  {
    id v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v21 = 0;
    uint64_t v22 = "Unsupported swipe direction.";
LABEL_22:
    _os_log_impl((void *)&_mh_execute_header, v19, v20, v22, v21, 2u);
    swift_slowDealloc();
  }
LABEL_23:

LABEL_24:
  return 0;
}

void sub_1003B61B0(uint64_t a1)
{
  id v3 = *(void **)(v1 + OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController);
  if (v3)
  {
    id v42 = *(NSObject **)(v1 + OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController);
    if (a1 == 1)
    {
      char v10 = v42;
      uint64_t v5 = v42;
      uint64_t v6 = -1;
    }
    else if (a1)
    {
      uint64_t v11 = qword_10069AF68;
      id v12 = v3;
      if (v11 != -1) {
        swift_once();
      }
      uint64_t v13 = type metadata accessor for Logger();
      sub_10003293C(v13, (uint64_t)qword_1006A4F80);
      uint64_t v14 = Logger.logObject.getter();
      os_log_type_t v15 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v14, v15))
      {
        os_log_type_t v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v16 = 0;
        _os_log_impl((void *)&_mh_execute_header, v14, v15, "Unsupported swipe direction.", v16, 2u);
        swift_slowDealloc();
      }

      uint64_t v6 = 0;
      uint64_t v5 = v42;
    }
    else
    {
      id v4 = v42;
      uint64_t v5 = v42;
      uint64_t v6 = 1;
    }
    id v17 = sub_1003B1AEC(v5, v6);
    if (v17)
    {
      uint64_t v18 = v17;
      if (qword_10069AF68 != -1) {
        swift_once();
      }
      uint64_t v19 = type metadata accessor for Logger();
      sub_10003293C(v19, (uint64_t)qword_1006A4F80);
      id v20 = v18;
      id v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = swift_slowAlloc();
        id v41 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v23 = 134218242;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v23 + 12) = 2112;
        id v24 = v20;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v41 = v18;

        _os_log_impl((void *)&_mh_execute_header, v21, v22, "Synthesizing swipe with offset %ld to set new note editor view controller: %@", (uint8_t *)v23, 0x16u);
        sub_10002F214(&qword_10069FD50);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      id v29 = v20;
      sub_1003AE580(v18, a1, 1, 0, 0, 0);
      id v30 = [v29 note];

      unint64_t v31 = (unint64_t)sub_1003AC4F4();
      unint64_t v32 = v31;
      if (v31 >> 62)
      {
        uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
        if (v30)
        {
LABEL_27:
          id v34 = v30;
          id v35 = [v34 objectID];
          sub_1004A075C((uint64_t)v35, v32);
          uint64_t v37 = v36;
          char v39 = v38;
          swift_bridgeObjectRelease();

          if (v39) {
            uint64_t v40 = 0;
          }
          else {
            uint64_t v40 = v37;
          }
          goto LABEL_36;
        }
      }
      else
      {
        uint64_t v33 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v30) {
          goto LABEL_27;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v40 = 0;
LABEL_36:
      sub_1003AE2A4(v40, v33, 1);

      goto LABEL_33;
    }
    if (qword_10069AF68 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_10003293C(v25, (uint64_t)qword_1006A4F80);
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 134217984;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Couldn't find a note editor view controller for offset %ld. Maybe we're at the end of the list?", v28, 0xCu);
      swift_slowDealloc();

      goto LABEL_33;
    }
  }
  else
  {
    if (qword_10069AF68 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10003293C(v7, (uint64_t)qword_1006A4F80);
    id v42 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v42, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v42, v8, "No current note editor VC, can't synthesize swipe.", v9, 2u);
      swift_slowDealloc();
    }
  }

LABEL_33:
}

uint64_t sub_1003B6974()
{
  return type metadata accessor for SystemPaperViewController();
}

uint64_t type metadata accessor for SystemPaperViewController()
{
  uint64_t result = qword_1006A50F8;
  if (!qword_1006A50F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1003B69C8()
{
  sub_1003B6AF4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1003B6AF4()
{
  if (!qword_1006A5108)
  {
    type metadata accessor for NotePreview();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1006A5108);
    }
  }
}

uint64_t sub_1003B6D5C()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100031418(0, (unint64_t *)&qword_10069D2D0);
  os_log_type_t v8 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v0;
  aBlock[4] = sub_1003B98A4;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100262E2C;
  void aBlock[3] = &unk_100639370;
  char v10 = _Block_copy(aBlock);
  id v11 = v0;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1003B9E8C((unint64_t *)&qword_1006A26A0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10002F214((uint64_t *)&unk_1006A4830);
  sub_1003B9ED4((unint64_t *)&qword_1006A26B0, (uint64_t *)&unk_1006A4830);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v14);
}

void sub_1003B7028(uint64_t a1)
{
  sub_1003ABDE8();
  uint64_t v2 = self;
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v13[4] = sub_1003B98AC;
  v13[5] = v3;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  _OWORD v13[2] = sub_1002B6294;
  v13[3] = &unk_1006393C0;
  id v4 = _Block_copy(v13);
  swift_release();
  id v5 = [v2 scheduledTimerWithTimeInterval:0 repeats:v4 block:1.0];
  _Block_release(v4);
  uint64_t v6 = OBJC_IVAR___ICSystemPaperViewController_pageControlFadeOutTimer;
  uint64_t v7 = *(void **)(a1 + OBJC_IVAR___ICSystemPaperViewController_pageControlFadeOutTimer);
  *(void *)(a1 + OBJC_IVAR___ICSystemPaperViewController_pageControlFadeOutTimer) = v5;

  os_log_type_t v8 = *(void **)(a1 + v6);
  if (v8) {
    [v8 setTolerance:0.1];
  }
  if (qword_10069AF68 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_10003293C(v9, (uint64_t)qword_1006A4F80);
  char v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    id v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "pageControlFadeOutTimer scheduled.", v12, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_1003B7210(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100031418(0, (unint64_t *)&qword_10069D2D0);
  char v10 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = sub_1003B98B4;
  aBlock[5] = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100262E2C;
  void aBlock[3] = &unk_1006393E8;
  os_log_type_t v11 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1003B9E8C((unint64_t *)&qword_1006A26A0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10002F214((uint64_t *)&unk_1006A4830);
  sub_1003B9ED4((unint64_t *)&qword_1006A26B0, (uint64_t *)&unk_1006A4830);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v14);
}

void sub_1003B74C8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    if (qword_10069AF68 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10003293C(v2, (uint64_t)qword_1006A4F80);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Finished pageControlFadeOutTimer. Fading out control...", v5, 2u);
      swift_slowDealloc();
    }

    sub_1003ABDE8();
    uint64_t v6 = self;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v1;
    aBlock[4] = sub_1003B98BC;
    aBlock[5] = v7;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100262E2C;
    void aBlock[3] = &unk_100639438;
    uint64_t v8 = _Block_copy(aBlock);
    id v9 = v1;
    swift_release();
    [v6 animateWithDuration:0 delay:v8 options:0 animations:0.75 completion:0.0];
    _Block_release(v8);
  }
}

uint64_t sub_1003B76A8(unint64_t a1, char *a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  char v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10069AF68 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_10003293C(v11, (uint64_t)qword_1006A4F80);
  id v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Indexer did finish reloading data, then will refresh UI on MT.", v14, 2u);
    swift_slowDealloc();
  }

  os_log_type_t v15 = *(void **)&a2[OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController];
  if (v15 && (id v16 = [v15 note]) != 0)
  {
    id v17 = v16;
    id v18 = [v16 objectID];
    sub_1004A075C((uint64_t)v18, a1);
    uint64_t v20 = v19;
    char v22 = v21;

    if (v22) {
      uint64_t v23 = 0;
    }
    else {
      uint64_t v23 = v20;
    }
  }
  else
  {
    uint64_t v23 = 0;
  }
  sub_100031418(0, (unint64_t *)&qword_10069D2D0);
  id v24 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a2;
  *(void *)(v25 + 24) = v23;
  aBlock[4] = sub_1003B9680;
  aBlock[5] = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100262E2C;
  void aBlock[3] = &unk_100639168;
  uint64_t v26 = _Block_copy(aBlock);
  os_log_type_t v27 = a2;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1003B9E8C((unint64_t *)&qword_1006A26A0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10002F214((uint64_t *)&unk_1006A4830);
  sub_1003B9ED4((unint64_t *)&qword_1006A26B0, (uint64_t *)&unk_1006A4830);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v30);
}

void sub_1003B7A98(uint64_t a1, uint64_t a2)
{
  if (qword_10069AF68 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10003293C(v4, (uint64_t)qword_1006A4F80);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Starting UI refresh for indexer didChangeContentWith:controller:", v7, 2u);
    swift_slowDealloc();
  }

  uint64_t v8 = *(void **)(a1 + OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController);
  if (!v8)
  {
    os_log_t oslog = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v18, "Bailing out since we have a nil eVC.", v19, 2u);
      swift_slowDealloc();
    }
    goto LABEL_27;
  }
  os_log_t oslog = v8;
  id v9 = [oslog note];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v11, v12))
    {
      os_log_type_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v13 = 136315138;
      id v14 = [v10 ic_loggingIdentifier];
      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v17 = v16;

      sub_10045DA1C(v15, v17, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "About to set note again: %s", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    unint64_t v23 = (unint64_t)sub_1003AC4F4();
    id v24 = [v10 objectID];
    sub_1004A075C((uint64_t)v24, v23);
    uint64_t v26 = v25;
    char v28 = v27;

    if (v28)
    {
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
    if (v23 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v29 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v30 = OBJC_IVAR___ICSystemPaperViewController_pageControl;
    unint64_t v31 = *(void **)(a1 + OBJC_IVAR___ICSystemPaperViewController_pageControl);
    if (v31)
    {
      [v31 setNumberOfPages:v29];
      unint64_t v32 = *(void **)(a1 + v30);
      if (v32)
      {
        [v32 currentPage];
        uint64_t v33 = *(void **)(a1 + v30);
        if (v33)
        {
          [v33 setCurrentPage:v26];
          if (v26 != a2)
          {
            id v34 = [oslog textView];
            if (v34)
            {
              id v35 = v34;
              unsigned __int8 v36 = [oslog isEditing];
              id v37 = [v35 selectedRange];
              uint64_t v39 = v38;
              uint64_t v40 = swift_allocObject();
              *(void *)(v40 + 16) = oslog;
              *(unsigned char *)(v40 + 24) = v36;
              *(void *)(v40 + 32) = v35;
              *(void *)(v40 + 40) = v37;
              *(void *)(v40 + 48) = v39;
              id v41 = oslog;
              id v42 = v35;
              sub_1003AE580(v8, 0, 0, 1, (uint64_t)sub_1003B96C8, v40);

              swift_release();
LABEL_25:

              return;
            }
          }
LABEL_24:

          goto LABEL_25;
        }
        goto LABEL_34;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_34:
    __break(1u);
    return;
  }
  os_log_t log = (os_log_t)Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.debug.getter();
  if (!os_log_type_enabled(log, v20))
  {

LABEL_27:
    char v22 = oslog;
    goto LABEL_28;
  }
  char v21 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)char v21 = 0;
  _os_log_impl((void *)&_mh_execute_header, log, v20, "Bailing out since we have a nil currentNote.", v21, 2u);
  swift_slowDealloc();

  char v22 = log;
LABEL_28:
}

uint64_t sub_1003B8124()
{
  uint64_t v1 = *v0;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v0 = v1;
  if (!result || v1 < 0 || (v1 & 0x4000000000000000) != 0)
  {
    uint64_t result = sub_1002E082C(v1);
    uint64_t v1 = result;
    uint64_t *v0 = result;
  }
  uint64_t v3 = v1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    uint64_t v5 = v4 - 1;
    uint64_t v6 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 8 * v5 + 0x20);
    *(void *)(v3 + 16) = v5;
    specialized Array._endMutation()();
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003B8194(void *a1, uint64_t a2)
{
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [self storyboardWithName:v4 bundle:0];

  id v6 = [v5 instantiateInitialViewController];
  if (v6)
  {
    *((void *)&v14 + 1) = sub_100031418(0, &qword_1006A0070);
    *(void *)&long long v13 = v6;
  }
  else
  {
    long long v13 = 0u;
    long long v14 = 0u;
  }
  v12[3] = sub_10002F214(&qword_10069B4D0);
  v12[0] = swift_allocObject();
  sub_10002F034((uint64_t)&v13, v12[0] + 16, &qword_10069B4D0);
  id v7 = v6;
  uint64_t v8 = sub_1001A746C((uint64_t)v12);
  sub_100018FE8((uint64_t)v12);
  sub_10002B754((uint64_t)&v13, &qword_10069B4D0);
  id v9 = *(void **)(v8 + OBJC_IVAR___ICSystemPaperViewController_incomingLink);
  *(void *)(v8 + OBJC_IVAR___ICSystemPaperViewController_incomingLink) = a1;
  id v10 = a1;

  *(void *)(v8 + OBJC_IVAR___ICSystemPaperViewController_incomingImageData) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  [*(id *)(v8 + OBJC_IVAR___ICSystemPaperViewController_noteCache) setCountLimit:2 v12[0]];

  return v8;
}

void sub_1003B8334()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController);
  if (v1) {
    id v2 = [v1 note];
  }
  else {
    id v2 = 0;
  }
  unint64_t v3 = (unint64_t)sub_1003AC4F4();
  unint64_t v4 = v3;
  if (!(v3 >> 62))
  {
    uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2) {
      goto LABEL_6;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    id v12 = 0;
    uint64_t v11 = 0;
    goto LABEL_11;
  }
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  if (!v2) {
    goto LABEL_10;
  }
LABEL_6:
  id v12 = v2;
  id v6 = [v12 objectID];
  sub_1004A075C((uint64_t)v6, v4);
  uint64_t v8 = v7;
  char v10 = v9;
  swift_bridgeObjectRelease();

  if (v10) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = v8;
  }
LABEL_11:
  sub_1003AE2A4(v11, v5, 1);
}

void sub_1003B844C()
{
  uint64_t v1 = v0;
  if (qword_10069AF68 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10003293C(v2, (uint64_t)qword_1006A4F80);
  unint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Tapped done button", v5, 2u);
    swift_slowDealloc();
  }

  [self logDismissEvent:SYSystemPaperDismissMethodDone];
  id v6 = *(void **)(v1 + OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController);
  if (v6) {
    [v6 doneEditing];
  }
  sub_1003ABDE8();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v8 = Strong;
    [Strong closeAuxiliaryWindowAnimated:1];
  }
}

void sub_1003B85C8()
{
  uint64_t v1 = v0;
  if (qword_10069AF68 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10003293C(v2, (uint64_t)qword_1006A4F80);
  unint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Tapped palette button", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController;
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController);
  if (v7)
  {
    unsigned int v8 = [v7 isInkPickerShowing];
    char v9 = *(void **)(v1 + v6);
    if (v9)
    {
      unsigned int v10 = v8;
      id v13 = v9;
      [v13 createInkPickerControllerIfNecessary];
      id v11 = [v13 inkPaletteController];
      if (v11)
      {
        id v12 = v11;
        [v11 showInkPalette:v10 ^ 1 animated:1];
      }
    }
  }
}

id sub_1003B8748(void *a1)
{
  unint64_t v16 = (void *)sub_100031418(0, &qword_1006A0070);
  v15[0] = a1;
  id v2 = a1;
  unint64_t v3 = (void *)sub_1001A7964((uint64_t)v15);
  sub_100018FE8((uint64_t)v15);
  id v4 = sub_1003B1AEC(v3, -1);

  if (v4)
  {
    id v5 = v4;
    id v6 = [v5 textView];
    if (!v6)
    {
LABEL_5:

      return v4;
    }
    uint64_t v7 = v6;
    id v8 = [v6 textStorage];
    id v9 = [v8 length];
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v7;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = sub_1003B9F2C;
    *(void *)(v11 + 24) = v10;
    unint64_t v17 = sub_1003A7548;
    uint64_t v18 = v11;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    v15[2] = sub_1004A06C8;
    unint64_t v16 = &unk_100639668;
    id v12 = _Block_copy(v15);
    id v13 = v7;
    swift_retain();
    swift_release();
    [v8 enumerateAttribute:NSAttachmentAttributeName inRange:0 options:v9 usingBlock:v12];

    _Block_release(v12);
    LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();

    swift_release();
    swift_release();
    if (v8)
    {
      __break(1u);
      goto LABEL_5;
    }
  }
  return v4;
}

id sub_1003B897C(void *a1)
{
  unint64_t v16 = (void *)sub_100031418(0, &qword_1006A0070);
  v15[0] = a1;
  id v2 = a1;
  unint64_t v3 = (void *)sub_1001A7964((uint64_t)v15);
  sub_100018FE8((uint64_t)v15);
  id v4 = sub_1003B1AEC(v3, 1);

  if (v4)
  {
    id v5 = v4;
    id v6 = [v5 textView];
    if (!v6)
    {
LABEL_5:

      return v4;
    }
    uint64_t v7 = v6;
    id v8 = [v6 textStorage];
    id v9 = [v8 length];
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v7;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = sub_1003B9928;
    *(void *)(v11 + 24) = v10;
    unint64_t v17 = sub_10017EBEC;
    uint64_t v18 = v11;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    v15[2] = sub_1004A06C8;
    unint64_t v16 = &unk_1006394D8;
    id v12 = _Block_copy(v15);
    id v13 = v7;
    swift_retain();
    swift_release();
    [v8 enumerateAttribute:NSAttachmentAttributeName inRange:0 options:v9 usingBlock:v12];

    _Block_release(v12);
    LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();

    swift_release();
    swift_release();
    if (v8)
    {
      __break(1u);
      goto LABEL_5;
    }
  }
  return v4;
}

void sub_1003B8BB0(unint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController;
  id v6 = *(void **)(v1 + OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController);
  if (!v6) {
    goto LABEL_7;
  }
  id v7 = [v6 note];
  if (!v7) {
    goto LABEL_7;
  }
  id v2 = v7;
  if (![v7 isEmpty]) {
    goto LABEL_6;
  }
  id v8 = [v2 objectID];
  id v9 = (void *)(v1 + OBJC_IVAR___ICSystemPaperViewController_emptyNoteIds);
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_25;
  }
  while (1)
  {
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
LABEL_6:

LABEL_7:
    if (a1 >> 62) {
      break;
    }
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v10) {
      goto LABEL_14;
    }
LABEL_9:
    if ((a1 & 0xC000000000000001) != 0)
    {
      id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_12;
    }
    if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v11 = *(id *)(a1 + 32);
LABEL_12:
      id v12 = v11;
      swift_bridgeObjectRelease();
      *((void *)&v30 + 1) = sub_100031418(0, &qword_1006A0070);
      *(void *)&long long v29 = v12;
      goto LABEL_15;
    }
    __break(1u);
LABEL_25:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  swift_bridgeObjectRetain();
  if (_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_9;
  }
LABEL_14:
  swift_bridgeObjectRelease();
  long long v29 = 0u;
  long long v30 = 0u;
LABEL_15:
  v28[3] = sub_10002F214(&qword_10069B4D0);
  v28[0] = swift_allocObject();
  sub_10002F034((uint64_t)&v29, v28[0] + 16, &qword_10069B4D0);
  id v13 = (void *)sub_1001A7964((uint64_t)v28);
  sub_100018FE8((uint64_t)v28);
  sub_10002B754((uint64_t)&v29, &qword_10069B4D0);
  [v13 note:v28[0]];
  unint64_t v15 = (unint64_t)sub_1003AC4F4();
  unint64_t v16 = v15;
  if (v15 >> 62)
  {
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    if (v14) {
      goto LABEL_17;
    }
    goto LABEL_21;
  }
  uint64_t v17 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v14)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    uint64_t v24 = 0;
    goto LABEL_22;
  }
LABEL_17:
  id v18 = v14;
  id v19 = [v18 objectID];
  sub_1004A075C((uint64_t)v19, v16);
  uint64_t v21 = v20;
  char v23 = v22;
  swift_bridgeObjectRelease();

  if (v23) {
    uint64_t v24 = 0;
  }
  else {
    uint64_t v24 = v21;
  }
LABEL_22:
  sub_1003AE2A4(v24, v17, 1);

  id v25 = *(id *)(v3 + v5);
  [v25 createInkPickerControllerIfNecessary];
  id v26 = [v25 inkPaletteController];
  [v26 showInkPalette:0 animated:1];

  char v27 = *(void **)(v3 + v5);
  *(void *)(v3 + v5) = v13;
}

void sub_1003B8EEC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  if (qword_10069AF68 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10003293C(v7, (uint64_t)qword_1006A4F80);
  id v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 67109376;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 8) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "pageViewController didFinishAnimating: %{BOOL}d, transitionCompleted: %{BOOL}d", (uint8_t *)v10, 0xEu);
    swift_slowDealloc();
  }

  if (a3) {
    goto LABEL_15;
  }
  if (!(a2 >> 62))
  {
    if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) == 1)
    {
      swift_bridgeObjectRetain();
      goto LABEL_9;
    }
LABEL_15:
    sub_1003ABF6C();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v15 != 1) {
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter())
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
LABEL_9:
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_12:
    id v12 = v11;
    swift_bridgeObjectRelease();
    self;
    uint64_t v13 = swift_dynamicCastObjCClass();
    if (v13)
    {
      id v14 = *(void **)(v4 + OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController);
      *(void *)(v4 + OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController) = v13;
    }
    else
    {
    }
    goto LABEL_15;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v11 = *(id *)(a2 + 32);
    goto LABEL_12;
  }
  __break(1u);
}

uint64_t sub_1003B912C()
{
  sub_10002F214((uint64_t *)&unk_1006A5230);
  uint64_t v0 = CollectionDifference.removals.getter();
  uint64_t v1 = CollectionDifference.insertions.getter();
  uint64_t v2 = v1;
  if (*(void *)(v0 + 16) == 1 && *(void *)(v1 + 16) == 1)
  {
    sub_10002F034(v0 + 32, (uint64_t)&v12, &qword_1006A5248);
    swift_bridgeObjectRelease();
    if (HIBYTE(v15) != 255)
    {
      sub_10002F214(&qword_1006A5248);
      v3.super.Class isa = CollectionDifference.Change._bridgeToObjectiveC()().super.isa;
      sub_10002B754((uint64_t)&v12, &qword_1006A5248);
      if (*(void *)(v2 + 16))
      {
        sub_10002F034(v2 + 32, (uint64_t)&v12, &qword_1006A5248);
      }
      else
      {
        long long v13 = 0u;
        long long v14 = 0u;
        long long v12 = 0u;
        __int16 v15 = -256;
      }
      swift_bridgeObjectRelease();
      if (HIBYTE(v15) == 255)
      {

        goto LABEL_8;
      }
      v6.super.Class isa = CollectionDifference.Change._bridgeToObjectiveC()().super.isa;
      sub_10002B754((uint64_t)&v12, &qword_1006A5248);
      if ([(objc_class *)v3.super.isa object])
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v10 = 0u;
        long long v11 = 0u;
      }
      sub_1001BC02C((uint64_t)&v10, (uint64_t)&v12);
      if (*((void *)&v13 + 1))
      {
        sub_100031418(0, (unint64_t *)&qword_1006A0020);
        if ((swift_dynamicCast() & 1) == 0)
        {
LABEL_29:

          goto LABEL_8;
        }
        if ([(objc_class *)v6.super.isa object])
        {
          _bridgeAnyObjectToAny(_:)();
          swift_unknownObjectRelease();
        }
        else
        {
          long long v10 = 0u;
          long long v11 = 0u;
        }
        sub_1001BC02C((uint64_t)&v10, (uint64_t)&v12);
        if (*((void *)&v13 + 1))
        {
          if (swift_dynamicCast())
          {
            id v7 = [(objc_class *)v3.super.isa index];
            if (v7 == [(objc_class *)v6.super.isa index])
            {
              char v8 = static NSObject.== infix(_:_:)();

              char v4 = v8 ^ 1;
              return v4 & 1;
            }
          }
          else
          {
          }
          goto LABEL_29;
        }
      }
      sub_10002B754((uint64_t)&v12, &qword_10069B4D0);
      goto LABEL_8;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_8:
  char v4 = 1;
  return v4 & 1;
}

void sub_1003B9410()
{
  if (qword_10069AF68 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10003293C(v1, (uint64_t)qword_1006A4F80);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    char v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Indexer did change content notification triggered.", v4, 2u);
    swift_slowDealloc();
  }

  if (sub_1003B912C())
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v0;
    id v6 = v0;
    sub_1003AC090((uint64_t)sub_1003B962C, v5);
    swift_release();
  }
  else
  {
    os_log_t oslog = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v7))
    {
      char v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v7, "Skipping resnapshotting because difference wasn't interesting.", v8, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_1003B95F4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003B962C(unint64_t a1)
{
  return sub_1003B76A8(a1, *(char **)(v1 + 16));
}

uint64_t sub_1003B9634()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003B9674()
{
  return sub_1003AC248(*(void *)(v0 + 16), *(void (**)(void *))(v0 + 24));
}

void sub_1003B9680()
{
  sub_1003B7A98(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1003B9688()
{
  return _swift_deallocObject(v0, 56, 7);
}

id sub_1003B96C8()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 24);
  os_log_type_t v3 = *(void **)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 48);
  [v1 setEditing:v2];

  return [v3 setSelectedRange:v4, v5];
}

uint64_t sub_1003B972C()
{
  swift_bridgeObjectRelease();

  if (*(void *)(v0 + 64)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 88, 7);
}

void sub_1003B9784()
{
  sub_1003B0014(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(unsigned __int8 *)(v0 + 49), *(void **)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72));
}

uint64_t sub_1003B97C0()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_1003B9808()
{
  sub_1003B0AA8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(char **)(v0 + 40), *(unsigned char *)(v0 + 48), *(unsigned char *)(v0 + 49), *(void *)(v0 + 56));
}

uint64_t sub_1003B9820()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003B9860()
{
  return sub_1003B1460(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32));
}

Swift::Int sub_1003B986C()
{
  return OS_dispatch_semaphore.signal()();
}

id sub_1003B989C()
{
  return sub_1003B98C4();
}

void sub_1003B98A4()
{
  sub_1003B7028(*(void *)(v0 + 16));
}

uint64_t sub_1003B98AC(uint64_t a1)
{
  return sub_1003B7210(a1, v1);
}

void sub_1003B98B4()
{
}

id sub_1003B98BC()
{
  return sub_1003B98C4();
}

id sub_1003B98C4()
{
  id result = *(id *)(*(void *)(v0 + 16) + OBJC_IVAR___ICSystemPaperViewController_pageControl);
  if (result) {
    return [result setAlpha:];
  }
  __break(1u);
  return result;
}

uint64_t sub_1003B98E8()
{
  if (*(void *)(v0 + 40)) {
    sub_100018FE8(v0 + 16);
  }

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1003B9928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1003B1738(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_1003B9930()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003B9940()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1003B9980()
{
  sub_1003B2314(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1003B998C()
{
  return sub_1003A8D4C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1003B9994()
{
  sub_1003AC7C8(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void ***)(v0 + 32));
}

uint64_t sub_1003B99A0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003B99B0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003B99C0()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1003B99F8()
{
  sub_1003B5D04(*(char **)(v0 + 16));
}

uint64_t sub_1003B9A04()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1003B9A3C(char a1, uint64_t a2)
{
  sub_1003B5D8C(a1, a2, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1003B9A48()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003B9A80()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003B9AB8()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003B9AF8(uint64_t a1, uint64_t a2)
{
  return sub_1003B3F44(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1003B9B00()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1003B9B50()
{
  sub_1003B4240(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1003B9B5C()
{
  return _swift_deallocObject(v0, 43, 7);
}

uint64_t sub_1003B9B9C(uint64_t a1)
{
  return sub_1003AEB4C(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(unsigned __int8 *)(v1 + 41), *(unsigned __int8 *)(v1 + 42));
}

uint64_t sub_1003B9BB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_1006A52A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003B9C1C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 51, 7);
}

void sub_1003B9C64()
{
  sub_1003AEE58(*(void *)(v0 + 16), *(id *)(v0 + 24), *(unsigned char **)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48), *(unsigned char *)(v0 + 49), *(unsigned char *)(v0 + 50));
}

uint64_t sub_1003B9C7C()
{
  return _swift_deallocObject(v0, 42, 7);
}

void sub_1003B9CBC()
{
  sub_1003AF508(*(unsigned char *)(v0 + 16), *(void **)(v0 + 24), *(NSObject **)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(unsigned char *)(v0 + 41));
}

void sub_1003B9CD0()
{
  sub_1003AF970(*(void *)(v0 + 16));
}

uint64_t sub_1003B9CD8()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1003B9D18(char a1)
{
  sub_1003ACF94(a1, *(void *)(v1 + 16), *(char **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1003B9D24()
{
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003B9D64()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003B9D74()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1003B9DB4()
{
  sub_1003ABB34(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1003B9DBC()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_1003B9DFC()
{
  sub_1003B1624(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(NSObject **)(v0 + 32));
}

id sub_1003B9E0C(void (*a1)(void *))
{
  return sub_1003B2D7C(a1);
}

void sub_1003B9E14()
{
}

void sub_1003B9E1C()
{
}

uint64_t sub_1003B9E24(uint64_t a1)
{
  return sub_1003AA2E0(a1, v1);
}

void sub_1003B9E2C()
{
}

uint64_t sub_1003B9E34()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1003B9E6C(uint64_t a1)
{
  sub_1003B3858(a1, *(void *)(v1 + 16));
}

void sub_1003B9E74()
{
}

void sub_1003B9E7C()
{
}

uint64_t sub_1003B9E84(void *a1)
{
  return sub_1003B33F0(a1);
}

uint64_t sub_1003B9E8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003B9ED4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001DFF4(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1003B9F24()
{
}

void *DeleteFoldersIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static DeleteFoldersIntent.persistentIdentifier;
}

unint64_t static DeleteFoldersIntent.persistentIdentifier.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_1003BA060()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  os_log_type_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100032974(v6, static DeleteFoldersIntent.title);
  sub_10003293C(v6, (uint64_t)static DeleteFoldersIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t DeleteFoldersIntent.title.unsafeMutableAddressor()
{
  if (qword_10069AF70 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();

  return sub_10003293C(v0, (uint64_t)static DeleteFoldersIntent.title);
}

uint64_t static DeleteFoldersIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069AF70 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static DeleteFoldersIntent.title);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t static DeleteFoldersIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t static DeleteFoldersIntent.parameterSummary.getter()
{
  uint64_t v0 = sub_10002F214(&qword_1006A52D8);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214((uint64_t *)&unk_1006A52E0);
  __chkstk_darwin(v1);
  sub_1001FD6C0();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._countAndFlagsBits = 0x74206574656C6544;
  v2._object = (void *)0xEB00000000206568;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_1006A52F0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0x737265646C6F6620;
  v3._object = (void *)0xE800000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_1003BA7EC()
{
  uint64_t v0 = sub_10002F214(&qword_1006A52D8);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214((uint64_t *)&unk_1006A52E0);
  __chkstk_darwin(v1);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._countAndFlagsBits = 0x74206574656C6544;
  v2._object = (void *)0xEB00000000206568;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_1006A52F0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0x737265646C6F6620;
  v3._object = (void *)0xE800000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_1003BA988(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100161724;
  return DeleteFoldersIntent.perform()(a1, v5, v4);
}

uint64_t DeleteFoldersIntent.perform()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  type metadata accessor for MainActor();
  v3[8] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[9] = v5;
  v3[10] = v4;
  return _swift_task_switch(sub_1003BAAD0, v5, v4);
}

uint64_t sub_1003BAAD0()
{
  v0[2] = &type metadata for DeleteNotesIntent;
  sub_10002F214((uint64_t *)&unk_1006A5300);
  String.init<A>(describing:)();
  id v1 = objc_allocWithZone((Class)ICNAEventReporter);
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v3 = [v1 initWithSubTrackerName:v2];
  v0[11] = v3;

  IntentParameter.wrappedValue.getter();
  uint64_t v4 = v0[3];
  swift_retain();
  swift_retain();
  sub_1003BD100(v4);
  unint64_t v6 = v5;
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (v6 >> 62)
  {
    sub_100031418(0, (unint64_t *)&qword_1006A2780);
    swift_bridgeObjectRetain();
    uint64_t v16 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease_n();
    unint64_t v6 = v16;
  }
  else
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_100031418(0, (unint64_t *)&qword_1006A2780);
    if (swift_dynamicCastMetatype() || (uint64_t v14 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_3:
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = v7 + 32;
      while (1)
      {
        self;
        if (!swift_dynamicCastObjCClass()) {
          break;
        }
        v15 += 8;
        if (!--v14) {
          goto LABEL_3;
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v6 = v7 | 1;
    }
  }
  v0[12] = v6;
  uint64_t v9 = v0[6];
  uint64_t v8 = v0[7];
  uint64_t v10 = (void *)swift_task_alloc();
  v0[13] = v10;
  v10[2] = v9;
  v10[3] = v8;
  v10[4] = v3;
  uint64_t v11 = swift_task_alloc();
  v0[14] = v11;
  *(void *)(v11 + 16) = v9;
  *(void *)(v11 + 24) = v8;
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1006A5330 + dword_1006A5330);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[15] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_1003BADB8;
  return v17((uint64_t)&unk_1006A5318, (uint64_t)v10, (uint64_t)&unk_1006A5328, v11, v6);
}

uint64_t sub_1003BADB8(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 128) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 72);
    uint64_t v6 = *(void *)(v4 + 80);
    uint64_t v7 = sub_1003BAFC4;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(unsigned char *)(v4 + 136) = a1 & 1;
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(void *)(v4 + 72);
    uint64_t v6 = *(void *)(v4 + 80);
    uint64_t v7 = sub_1003BAEFC;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_1003BAEFC()
{
  int v1 = *(unsigned __int8 *)(v0 + 136);
  swift_release();
  NSString v2 = *(void **)(v0 + 88);
  if (v1 == 1)
  {
    static IntentResult.result<>()();
  }
  else
  {
    sub_100173F8C();
    swift_allocError();
    *uint64_t v4 = 8;
    swift_willThrow();
  }

  id v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1003BAFC4()
{
  int v1 = *(void **)(v0 + 88);
  swift_release();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  NSString v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1003BB054@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s11MobileNotes19DeleteFoldersIntentVACycfC_0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1003BB07C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[16] = a2;
  v5[17] = a5;
  v5[15] = a1;
  v5[18] = type metadata accessor for MainActor();
  v5[19] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[20] = v7;
  v5[21] = v6;
  return _swift_task_switch(sub_1003BB11C, v7, v6);
}

uint64_t sub_1003BB11C()
{
  uint64_t v1 = v0[17];
  NSString v2 = self;
  v0[22] = v2;
  sub_10002F214(&qword_1006A5398);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [v2 deleteHTMLFoldersIfNeeded:isa eventReporter:v1];

  v0[23] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[24] = v5;
  v0[25] = v4;
  return _swift_task_switch(sub_1003BB200, v5, v4);
}

uint64_t sub_1003BB200()
{
  uint64_t v1 = (void *)v0[22];
  uint64_t v2 = v0[17];
  sub_100031418(0, (unint64_t *)&unk_1006A53A0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  v0[26] = isa;
  v0[2] = v0;
  v0[3] = sub_1003BB33C;
  uint64_t v4 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10022AB14;
  v0[13] = &unk_100639B80;
  v0[14] = v4;
  [v1 deleteModernFoldersIfNeeded:isa eventReporter:v2 completion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1003BB33C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 200);
  uint64_t v2 = *(void *)(*(void *)v0 + 192);
  return _swift_task_switch(sub_1003BB444, v2, v1);
}

uint64_t sub_1003BB444()
{
  uint64_t v1 = (void *)v0[26];
  swift_release();

  uint64_t v2 = v0[20];
  uint64_t v3 = v0[21];
  return _swift_task_switch(sub_1003BB4B0, v2, v3);
}

uint64_t sub_1003BB4B0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003BB514(uint64_t a1, uint64_t a2)
{
  v2[4] = a1;
  v2[5] = a2;
  uint64_t v3 = type metadata accessor for ConfirmationActionName();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for LocalizedStringResource.BundleDescription();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  type metadata accessor for Locale();
  v2[12] = swift_task_alloc();
  type metadata accessor for String.LocalizationValue();
  v2[13] = swift_task_alloc();
  type metadata accessor for LocalizedStringResource();
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for IntentDialog();
  v2[16] = v5;
  v2[17] = *(void *)(v5 - 8);
  v2[18] = swift_task_alloc();
  uint64_t v6 = sub_10002F214((uint64_t *)&unk_1006A6970);
  v2[19] = v6;
  v2[20] = *(void *)(v6 - 8);
  v2[21] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[22] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[23] = v8;
  v2[24] = v7;
  return _swift_task_switch(sub_1003BB7B4, v8, v7);
}

uint64_t sub_1003BB7B4()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v14 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v15 = *(void *)(v0 + 128);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 32);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v5 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 104);
  v6(v2, enum case for LocalizedStringResource.BundleDescription.main(_:), v4);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v6(v2, v5, v4);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  IntentDialog.init(full:supporting:)();
  static IntentResult.result<>(dialog:)();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v1, v15);
  static ConfirmationActionName.continue.getter();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v7;
  unint64_t v8 = sub_1001FD6C0();
  uint64_t v9 = sub_10001DFB0(&qword_1006A5390, (uint64_t *)&unk_1006A6970);
  *uint64_t v7 = v0;
  v7[1] = sub_1003BBA24;
  uint64_t v10 = *(void *)(v0 + 168);
  uint64_t v11 = *(void *)(v0 + 152);
  uint64_t v12 = *(void *)(v0 + 64);
  return AppIntent.requestConfirmation<A>(result:confirmationActionName:showPrompt:)(v10, v12, 1, &type metadata for DeleteFoldersIntent, v11, v8, v9);
}

uint64_t sub_1003BBA24()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 168);
  uint64_t v4 = *(void *)(*v1 + 160);
  uint64_t v5 = *(void *)(*v1 + 152);
  uint64_t v6 = *(void *)(*v1 + 64);
  uint64_t v7 = *(void *)(*v1 + 56);
  uint64_t v8 = *(void *)(*v1 + 48);
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v9 = *(void *)(v2 + 184);
  uint64_t v10 = *(void *)(v2 + 192);
  if (v0) {
    uint64_t v11 = sub_1003BBCD4;
  }
  else {
    uint64_t v11 = sub_1003BBC04;
  }
  return _swift_task_switch(v11, v9, v10);
}

uint64_t sub_1003BBC04()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003BBCD4()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003BBDA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  void v5[4] = a3;
  v5[2] = a1;
  type metadata accessor for MainActor();
  v5[7] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[8] = v7;
  v5[9] = v6;
  return _swift_task_switch(sub_1003BBE44, v7, v6);
}

uint64_t sub_1003BBE44()
{
  sub_100330E84(v0[6]);
  id v1 = objc_allocWithZone((Class)ICDeleteDecision);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v3 = [v1 initWithSourceObjects:isa allowsRecentlyDeletedFolderAlert:0];
  v0[10] = v3;

  id v4 = [v3 type];
  unint64_t v5 = (unint64_t)[v3 additionalStep];
  if (!v4)
  {
LABEL_7:
    uint64_t v7 = (int *)v0[2];
    uint64_t v8 = sub_1003BE24C(v3, 0);
    uint64_t v10 = v9;
    v0[11] = v8;
    v0[12] = v9;
    uint64_t v20 = (int *)((char *)v7 + *v7);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[13] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_1003BC1D4;
    return ((uint64_t (*)(void *, uint64_t))v20)(v8, v10);
  }
  if (v4 == (id)1)
  {
    if (v5 <= 0xC && ((1 << v5) & 0x1B80) != 0) {
      goto LABEL_7;
    }
    id v13 = [v3 guiltyObjects];
    sub_100031418(0, (unint64_t *)&qword_1006A2780);
    unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    unint64_t v16 = v0[6];
    swift_bridgeObjectRelease();
    if (v16 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v15 < v18) {
        goto LABEL_14;
      }
    }
    else if (v15 < *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_14:
      uint64_t v21 = (uint64_t (*)(void))(v0[4] + *(int *)v0[4]);
      uint64_t v17 = (void *)swift_task_alloc();
      v0[15] = v17;
      *uint64_t v17 = v0;
      v17[1] = sub_1003BC2F8;
      return v21();
    }
  }

  swift_release();
  id v19 = (uint64_t (*)(void))v0[1];
  return v19(0);
}

uint64_t sub_1003BC1D4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    unint64_t v5 = sub_1003BE734;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    unint64_t v5 = sub_1003BE73C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1003BC2F8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 72);
  uint64_t v4 = *(void *)(v2 + 64);
  if (v0) {
    unint64_t v5 = sub_1003BE740;
  }
  else {
    unint64_t v5 = sub_1003BC434;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1003BC434()
{
  id v1 = *(int **)(v0 + 16);
  uint64_t v2 = sub_1003BE24C(*(void **)(v0 + 80), 1);
  uint64_t v4 = v3;
  *(void *)(v0 + 136) = v2;
  *(void *)(v0 + 144) = v3;
  uint64_t v7 = (int *)((char *)v1 + *v1);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v5;
  *unint64_t v5 = v0;
  v5[1] = sub_1003BC53C;
  return ((uint64_t (*)(void *, uint64_t))v7)(v2, v4);
}

uint64_t sub_1003BC53C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    unint64_t v5 = sub_1003BE738;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    unint64_t v5 = sub_1003BE73C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1003BC660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  void v5[4] = a3;
  v5[2] = a1;
  type metadata accessor for MainActor();
  v5[7] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[8] = v7;
  v5[9] = v6;
  return _swift_task_switch(sub_1003BC700, v7, v6);
}

uint64_t sub_1003BC700()
{
  sub_100330E84(v0[6]);
  id v1 = objc_allocWithZone((Class)ICDeleteDecision);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v3 = [v1 initWithSourceObjects:isa allowsRecentlyDeletedFolderAlert:0];
  v0[10] = v3;

  id v4 = [v3 type];
  unint64_t v5 = (unint64_t)[v3 additionalStep];
  if (!v4)
  {
LABEL_7:
    uint64_t v7 = (int *)v0[2];
    uint64_t v8 = sub_1003BE24C(v3, 0);
    uint64_t v10 = v9;
    v0[11] = v8;
    v0[12] = v9;
    uint64_t v20 = (int *)((char *)v7 + *v7);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[13] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_1003BCA90;
    return ((uint64_t (*)(void *, uint64_t))v20)(v8, v10);
  }
  if (v4 == (id)1)
  {
    if (v5 <= 0xC && ((1 << v5) & 0x1B80) != 0) {
      goto LABEL_7;
    }
    id v13 = [v3 guiltyObjects];
    sub_100031418(0, (unint64_t *)&qword_1006A2780);
    unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    unint64_t v16 = v0[6];
    swift_bridgeObjectRelease();
    if (v16 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v15 < v18) {
        goto LABEL_14;
      }
    }
    else if (v15 < *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_14:
      uint64_t v21 = (uint64_t (*)(void))(v0[4] + *(int *)v0[4]);
      uint64_t v17 = (void *)swift_task_alloc();
      v0[15] = v17;
      *uint64_t v17 = v0;
      v17[1] = sub_1003BCCA8;
      return v21();
    }
  }

  swift_release();
  id v19 = (uint64_t (*)(void))v0[1];
  return v19(0);
}

uint64_t sub_1003BCA90()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    unint64_t v5 = sub_1003BCC28;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    unint64_t v5 = sub_1003BCBB4;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1003BCBB4()
{
  swift_release();
  id v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v1(1);
}

uint64_t sub_1003BCC28()
{
  id v1 = *(void **)(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2(0);
}

uint64_t sub_1003BCCA8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 72);
  uint64_t v4 = *(void *)(v2 + 64);
  if (v0) {
    unint64_t v5 = sub_1003BD010;
  }
  else {
    unint64_t v5 = sub_1003BCDE4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1003BCDE4()
{
  id v1 = *(int **)(v0 + 16);
  uint64_t v2 = sub_1003BE24C(*(void **)(v0 + 80), 1);
  uint64_t v4 = v3;
  *(void *)(v0 + 136) = v2;
  *(void *)(v0 + 144) = v3;
  uint64_t v7 = (int *)((char *)v1 + *v1);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v5;
  *unint64_t v5 = v0;
  v5[1] = sub_1003BCEEC;
  return ((uint64_t (*)(void *, uint64_t))v7)(v2, v4);
}

uint64_t sub_1003BCEEC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    unint64_t v5 = sub_1003BD080;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    unint64_t v5 = sub_1003BE73C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1003BD010()
{
  swift_release();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_1003BD080()
{
  id v1 = *(void **)(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2(0);
}

void sub_1003BD100(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v3 = type metadata accessor for FolderEntity();
    uint64_t v4 = a1
       + ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));
    uint64_t v5 = *(void *)(*(void *)(v3 - 8) + 72);
    while (1)
    {
      AppDependency.wrappedValue.getter();
      URL._bridgeToObjectiveC()((NSURL *)*(int *)(v3 + 20));
      uint64_t v7 = v6;
      id v8 = [v12 managedObjectIDForURIRepresentation:v6];

      if (!v8) {
        break;
      }
      id v9 = [v12 managedObjectContextForObjectID:v8];
      if (!v9) {
        goto LABEL_8;
      }
      uint64_t v10 = v9;
      id v11 = [v9 objectWithID:v8];

      swift_dynamicCastObjCProtocolUnconditional();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v4 += v5;
      if (!--v2) {
        return;
      }
    }
    __break(1u);
LABEL_8:
    __break(1u);
  }
}

uint64_t _s11MobileNotes19DeleteFoldersIntentVACycfC_0()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v28 = *(void *)(v0 - 8);
  uint64_t v29 = v0;
  __chkstk_darwin(v0);
  char v27 = (char *)v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  id v26 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  id v25 = (char *)v23 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  uint64_t v24 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  v23[1] = sub_10002F214((uint64_t *)&unk_10069B4A0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v24;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v32 = 0;
  uint64_t v19 = type metadata accessor for IntentDialog();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v25, 1, 1, v19);
  v20(v26, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, enum case for InputConnectionBehavior.default(_:), v29);
  sub_1003BD9FC();
  uint64_t v21 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  unint64_t v30 = 0xD000000000000021;
  unint64_t v31 = 0x8000000100549290;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  return v21;
}

uint64_t sub_1003BD81C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003BD848(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_100161724;
  return sub_1003BB07C(a1, a2, v6, v7, v8);
}

uint64_t sub_1003BD908()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_10017B61C;
  return sub_1003BB514(v2, v3);
}

unint64_t sub_1003BD9A4()
{
  unint64_t result = qword_1006A5340;
  if (!qword_1006A5340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5340);
  }
  return result;
}

unint64_t sub_1003BD9FC()
{
  unint64_t result = qword_1006A3B50;
  if (!qword_1006A3B50)
  {
    type metadata accessor for FolderEntity();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A3B50);
  }
  return result;
}

unint64_t sub_1003BDA5C()
{
  unint64_t result = qword_1006A5350;
  if (!qword_1006A5350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5350);
  }
  return result;
}

unint64_t sub_1003BDAB4()
{
  unint64_t result = qword_1006A5358;
  if (!qword_1006A5358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5358);
  }
  return result;
}

uint64_t sub_1003BDB08()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1003BDB24()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for DeleteFoldersIntent()
{
  return &type metadata for DeleteFoldersIntent;
}

uint64_t sub_1003BDB50()
{
  return sub_10001DFB0(&qword_1006A5368, &qword_1006A5370);
}

uint64_t sub_1003BDB8C()
{
  return sub_10001DFB0((unint64_t *)&qword_10069DE30, (uint64_t *)&unk_10069C980);
}

uint64_t sub_1003BDBC8(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62)
  {
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4)
    {
LABEL_3:
      uint64_t v5 = 0;
      unint64_t v6 = v3 & 0xC000000000000001;
      unint64_t v7 = a2 & 0xC000000000000001;
      unint64_t v24 = v3;
      unint64_t v25 = v3 + 32;
      uint64_t v8 = a2 + 56;
      unint64_t v22 = v3 & 0xC000000000000001;
      uint64_t v23 = v4;
      while (1)
      {
        if (v6)
        {
          id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          if (v7) {
            goto LABEL_6;
          }
        }
        else
        {
          id v9 = *(id *)(v25 + 8 * v5);
          if (v7)
          {
LABEL_6:
            id v10 = v9;
            char v11 = __CocoaSet.contains(_:)();

            if (v11) {
              return v5;
            }
            BOOL v12 = __OFADD__(v5++, 1);
            if (v12) {
              goto LABEL_23;
            }
            goto LABEL_19;
          }
        }
        if (*(void *)(a2 + 16))
        {
          Swift::Int v13 = NSObject._rawHashValue(seed:)(*(void *)(a2 + 40));
          uint64_t v14 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v15 = v13 & ~v14;
          if ((*(void *)(v8 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
          {
            sub_100031418(0, (unint64_t *)&qword_1006A2780);
            id v16 = *(id *)(*(void *)(a2 + 48) + 8 * v15);
            char v17 = static NSObject.== infix(_:_:)();

            if (v17)
            {
LABEL_21:

              return v5;
            }
            uint64_t v18 = ~v14;
            while (1)
            {
              unint64_t v15 = (v15 + 1) & v18;
              if (((*(void *)(v8 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
                break;
              }
              id v19 = *(id *)(*(void *)(a2 + 48) + 8 * v15);
              char v20 = static NSObject.== infix(_:_:)();

              if (v20) {
                goto LABEL_21;
              }
            }
          }
        }

        uint64_t v4 = v23;
        unint64_t v3 = v24;
        unint64_t v7 = a2 & 0xC000000000000001;
        unint64_t v6 = v22;
        BOOL v12 = __OFADD__(v5++, 1);
        if (v12)
        {
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
LABEL_19:
        if (v5 == v4) {
          return 0;
        }
      }
    }
  }
  return 0;
}

uint64_t sub_1003BDDF0(uint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  unint64_t v6 = swift_bridgeObjectRetain();
  unint64_t v7 = sub_1003BDBC8(v6, a2);
  char v9 = v8;
  swift_bridgeObjectRelease();
  if (v3) {
    return v7;
  }
  if ((v9 & 1) == 0)
  {
    unint64_t v10 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_63;
    }
    if ((unint64_t)*a1 >> 62)
    {
LABEL_64:
      swift_bridgeObjectRetain();
      uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v10 != v37) {
        goto LABEL_6;
      }
    }
    else if (v10 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      unint64_t v11 = a2 & 0xC000000000000001;
      uint64_t v42 = a2 + 56;
      unint64_t v39 = a2 & 0xC000000000000001;
      uint64_t v40 = a1;
      while (1)
      {
        uint64_t v12 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          if (v11) {
            goto LABEL_11;
          }
        }
        else
        {
          if ((v10 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
LABEL_61:
            __break(1u);
LABEL_62:
            __break(1u);
LABEL_63:
            __break(1u);
            goto LABEL_64;
          }
          if (v10 >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_54;
          }
          id v13 = *(id *)(v12 + 8 * v10 + 32);
          if (v11)
          {
LABEL_11:
            id v14 = v13;
            char v15 = __CocoaSet.contains(_:)();

            if (v15) {
              goto LABEL_42;
            }
            if (v7 == v10) {
              goto LABEL_41;
            }
LABEL_23:
            uint64_t v25 = *a1;
            if ((*a1 & 0xC000000000000001) != 0)
            {
              id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              uint64_t v25 = *a1;
              if ((*a1 & 0xC000000000000001) == 0) {
                goto LABEL_27;
              }
            }
            else
            {
              if ((v7 & 0x8000000000000000) != 0) {
                goto LABEL_57;
              }
              if (v7 >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_58;
              }
              id v26 = *(id *)(v25 + 8 * v7 + 32);
              if ((v25 & 0xC000000000000001) == 0)
              {
LABEL_27:
                if ((v10 & 0x8000000000000000) != 0) {
                  goto LABEL_59;
                }
                if (v10 >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_60;
                }
                id v27 = *(id *)(v25 + 8 * v10 + 32);
                goto LABEL_30;
              }
            }
            id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            uint64_t v25 = *a1;
LABEL_30:
            int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
            *a1 = v25;
            if (!isUniquelyReferenced_nonNull_bridgeObject || v25 < 0 || (v25 & 0x4000000000000000) != 0)
            {
              uint64_t v25 = a3(v25);
              *a1 = v25;
            }
            uint64_t v29 = *(void **)((v25 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20);
            *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20) = v27;

            specialized Array._endMutation()();
            uint64_t v30 = *a1;
            int v31 = swift_isUniquelyReferenced_nonNull_bridgeObject();
            *a1 = v30;
            if (!v31 || v30 < 0 || (v30 & 0x4000000000000000) != 0)
            {
              uint64_t v30 = a3(v30);
              *a1 = v30;
            }
            if ((v10 & 0x8000000000000000) != 0) {
              goto LABEL_61;
            }
            if (v10 >= *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_62;
            }
            uint64_t v32 = *(void **)((v30 & 0xFFFFFFFFFFFFFF8) + 8 * v10 + 0x20);
            *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 8 * v10 + 0x20) = v26;

            specialized Array._endMutation()();
            goto LABEL_41;
          }
        }
        if (*(void *)(a2 + 16))
        {
          Swift::Int v16 = NSObject._rawHashValue(seed:)(*(void *)(a2 + 40));
          uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v18 = v16 & ~v17;
          if ((*(void *)(v42 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18))
          {
            sub_100031418(0, (unint64_t *)&qword_1006A2780);
            uint64_t v19 = a2;
            id v20 = *(id *)(*(void *)(a2 + 48) + 8 * v18);
            char v21 = static NSObject.== infix(_:_:)();

            if (v21)
            {
LABEL_21:

              a2 = v19;
              unint64_t v11 = v39;
              a1 = v40;
              goto LABEL_42;
            }
            uint64_t v22 = ~v17;
            while (1)
            {
              unint64_t v18 = (v18 + 1) & v22;
              a2 = v19;
              if (((*(void *)(v42 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
                break;
              }
              id v23 = *(id *)(*(void *)(v19 + 48) + 8 * v18);
              char v24 = static NSObject.== infix(_:_:)();

              if (v24) {
                goto LABEL_21;
              }
            }
          }
        }

        unint64_t v11 = v39;
        a1 = v40;
        if (v7 != v10) {
          goto LABEL_23;
        }
LABEL_41:
        BOOL v33 = __OFADD__(v7++, 1);
        if (v33) {
          goto LABEL_56;
        }
LABEL_42:
        BOOL v33 = __OFADD__(v10++, 1);
        if (v33) {
          goto LABEL_55;
        }
        if ((unint64_t)*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v34 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (v10 == v34) {
          return v7;
        }
      }
    }
    return v7;
  }
  unint64_t v35 = *a1;
  if (!(v35 >> 62)) {
    return *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  return v38;
}

void *sub_1003BE24C(void *a1, char a2)
{
  id v4 = [a1 modernSourceObjects];
  sub_100031418(0, (unint64_t *)&qword_1006A5380);
  uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v21 = v5;
  id v6 = [a1 htmlSourceObjects];
  uint64_t v7 = sub_100031418(0, (unint64_t *)&qword_1006A2780);
  uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v20 = v8;
  if ((a2 & 1) == 0) {
    goto LABEL_7;
  }
  id v9 = [a1 guiltyObjects];
  unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v11 = sub_10026A2F8(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  uint64_t v7 = sub_1003BDDF0((uint64_t *)&v21, v11, sub_1002E082C);
  swift_bridgeObjectRelease();
  if (v21 >> 62) {
    goto LABEL_40;
  }
  uint64_t v12 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v12 < v7) {
    goto LABEL_41;
  }
LABEL_4:
  sub_1002E3EAC(v7, v12);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1003BDDF0((uint64_t *)&v20, v11, sub_1002E082C);
  unint64_t result = (void *)swift_bridgeObjectRelease();
  if (v20 >> 62)
  {
    while (1)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
      unint64_t result = (void *)swift_bridgeObjectRelease();
      if (v7 < v5) {
        goto LABEL_43;
      }
LABEL_6:
      sub_1002E41E4(v5, v7);
      swift_bridgeObjectRelease();
      uint64_t v5 = v21;
LABEL_7:
      if ((unint64_t)v5 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
        if (!v11) {
          goto LABEL_22;
        }
      }
      else
      {
        uint64_t v11 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        if (!v11) {
          goto LABEL_22;
        }
      }
      if (v11 < 1)
      {
        __break(1u);
        goto LABEL_39;
      }
      for (uint64_t i = 0; i != v11; ++i)
      {
        if ((v5 & 0xC000000000000001) != 0) {
          id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v15 = *(id *)(v5 + 8 * i + 32);
        }
        Swift::Int v16 = v15;
        self;
        if (swift_dynamicCastObjCClass())
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        else
        {
        }
      }
LABEL_22:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v11 = v20;
      if (v20 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
        if (!v7) {
          goto LABEL_37;
        }
      }
      else
      {
        uint64_t v7 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        if (!v7) {
          goto LABEL_37;
        }
      }
      if (v7 >= 1)
      {
        for (uint64_t j = 0; j != v7; ++j)
        {
          if ((v11 & 0xC000000000000001) != 0) {
            id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v18 = *(id *)(v11 + 8 * j + 32);
          }
          uint64_t v19 = v18;
          if (swift_dynamicCastObjCProtocolConditional())
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
          else
          {
          }
        }
LABEL_37:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return _swiftEmptyArrayStorage;
      }
LABEL_39:
      __break(1u);
LABEL_40:
      swift_bridgeObjectRetain();
      uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v12 >= v7) {
        goto LABEL_4;
      }
LABEL_41:
      __break(1u);
    }
  }
  uint64_t v7 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7 >= v5) {
    goto LABEL_6;
  }
LABEL_43:
  __break(1u);
  return result;
}

void sub_1003BE744()
{
}

uint64_t sub_1003BE758()
{
  sub_10002F214(&qword_1006A5498);
  swift_allocObject();
  uint64_t result = TaskLocal.init(wrappedValue:)();
  qword_1006A53B0 = result;
  return result;
}

uint64_t sub_1003BE7AC()
{
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MobileNotes35ProvisionalBackgroundTaskController_timeoutInterval;
  uint64_t v2 = type metadata accessor for DispatchTimeInterval();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1003BE85C()
{
  return type metadata accessor for ProvisionalBackgroundTaskController();
}

uint64_t type metadata accessor for ProvisionalBackgroundTaskController()
{
  uint64_t result = qword_1006A53E8;
  if (!qword_1006A53E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1003BE8B0()
{
  uint64_t result = type metadata accessor for DispatchTimeInterval();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1003BE964(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v33 = a1;
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v34 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchTimeInterval();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  static Duration.zero.getter();
  uint64_t result = static Duration.< infix(_:_:)();
  if ((result & 1) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t result = static Duration.< infix(_:_:)();
  if (result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v31 = v6;
  uint64_t v32 = v5;
  uint64_t result = Duration.components.getter();
  uint64_t v13 = 1000000000 * result;
  if ((unsigned __int128)(result * (__int128)1000000000) >> 64 != (1000000000 * result) >> 63)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t result = Duration.components.getter();
  if (__OFADD__(v13, v14 / 1000000000))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  *uint64_t v11 = v13 + v14 / 1000000000;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchTimeInterval.nanoseconds(_:), v8);
  uint64_t v15 = v2 + OBJC_IVAR____TtC11MobileNotes35ProvisionalBackgroundTaskController_timeoutInterval;
  swift_beginAccess();
  (*(void (**)(uint64_t, void *, uint64_t))(v9 + 40))(v15, v11, v8);
  swift_endAccess();
  if (*(unsigned char *)(v2 + 32) != 1) {
    return sub_1003BEEA8();
  }
  id v16 = [self sharedApplication];
  uint64_t v17 = v33;
  NSString v18 = String._bridgeToObjectiveC()();
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = v17;
  v19[3] = a2;
  v19[4] = v2;
  aBlock[4] = (uint64_t)sub_1003BFCB0;
  aBlock[5] = (uint64_t)v19;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = (uint64_t)sub_100262E2C;
  void aBlock[3] = (uint64_t)&unk_100639BD0;
  unint64_t v20 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  id v21 = [v16 beginBackgroundTaskWithName:v18 expirationHandler:v20];
  _Block_release(v20);

  *(void *)(v2 + 24) = v21;
  *(unsigned char *)(v2 + 32) = 0;
  uint64_t v22 = v34;
  static Logger.ui.getter();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  id v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v23, v24))
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v22, v32);
    return sub_1003BEEA8();
  }
  uint64_t v25 = swift_slowAlloc();
  aBlock[0] = swift_slowAlloc();
  *(_DWORD *)uint64_t v25 = 136315650;
  swift_bridgeObjectRetain();
  unint64_t v35 = sub_10045DA1C(v17, a2, aBlock);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v25 + 12) = 2048;
  unint64_t v26 = *(void *)(v3 + 24);
  char v27 = *(unsigned char *)(v3 + 32);
  uint64_t result = swift_release();
  if ((v27 & 1) == 0)
  {
    unint64_t v35 = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    *(_WORD *)(v25 + 22) = 2080;
    uint64_t v28 = Duration.description.getter();
    unint64_t v35 = sub_10045DA1C(v28, v29, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Started provisional background task '%s' (id=%ld) with timeout of %s.", (uint8_t *)v25, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v31 + 8))(v34, v32);
    return sub_1003BEEA8();
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_1003BEEA8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchTimeInterval();
  uint64_t v28 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchTime();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v24 - v10;
  uint64_t v12 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t result = __chkstk_darwin(v12);
  if ((*(unsigned char *)(v1 + 32) & 1) == 0)
  {
    uint64_t v14 = *(void **)(v1 + 24);
    uint64_t result = swift_beginAccess();
    if (!*(void *)(*(void *)(v1 + 16) + 16))
    {
      uint64_t v25 = v5;
      unint64_t v26 = v14;
      uint64_t v27 = v6;
      if (*(void *)(v1 + 40))
      {
        swift_retain();
        dispatch thunk of DispatchWorkItem.cancel()();
        swift_release();
        *(void *)(v1 + 40) = 0;
        swift_release();
      }
      uint64_t v15 = swift_allocObject();
      swift_weakInit();
      uint64_t v16 = swift_allocObject();
      swift_weakInit();
      uint64_t v17 = (void *)swift_allocObject();
      v17[2] = v15;
      v17[3] = v16;
      v24[1] = v16;
      v17[4] = v26;
      aBlock[4] = sub_1003BFD34;
      aBlock[5] = v17;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      void aBlock[2] = sub_100262E2C;
      void aBlock[3] = &unk_100639C70;
      unint64_t v26 = _Block_copy(aBlock);
      unint64_t v29 = _swiftEmptyArrayStorage;
      sub_10028A36C();
      swift_retain();
      swift_retain();
      sub_10002F214((uint64_t *)&unk_1006A4830);
      sub_10036BAB4();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      type metadata accessor for DispatchWorkItem();
      swift_allocObject();
      uint64_t v18 = DispatchWorkItem.init(flags:block:)();
      swift_release();
      swift_release();
      swift_release();
      *(void *)(v1 + 40) = v18;
      swift_retain_n();
      swift_release();
      sub_100190F20();
      uint64_t v19 = (void *)static OS_dispatch_queue.main.getter();
      static DispatchTime.now()();
      uint64_t v20 = v1 + OBJC_IVAR____TtC11MobileNotes35ProvisionalBackgroundTaskController_timeoutInterval;
      swift_beginAccess();
      uint64_t v21 = v28;
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v4, v20, v2);
      + infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v2);
      uint64_t v22 = *(void (**)(char *, uint64_t))(v27 + 8);
      uint64_t v23 = v25;
      v22(v9, v25);
      OS_dispatch_queue.asyncAfter(deadline:execute:)();

      swift_release_n();
      return ((uint64_t (*)(char *, uint64_t))v22)(v11, v23);
    }
  }
  return result;
}

id sub_1003BF30C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10002F214(&qword_1006A5488);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v47 - v10;
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.ui.getter();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v16 = Logger.logObject.getter();
  int v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, (os_log_type_t)v17))
  {
    LODWORD(v48) = v17;
    uint64_t v49 = v12;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    v50[0] = v47;
    *(_DWORD *)uint64_t v18 = 136315650;
    swift_bridgeObjectRetain();
    unint64_t v53 = sub_10045DA1C(a1, a2, v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 12) = 2080;
    if (*(unsigned char *)(a3 + 32))
    {
      unint64_t v19 = 0xE300000000000000;
      uint64_t v20 = 7104878;
    }
    else
    {
      unint64_t v53 = *(void *)(a3 + 24);
      sub_100190AB4();
      uint64_t v20 = BinaryInteger.description.getter();
      unint64_t v19 = v21;
    }
    unint64_t v53 = sub_10045DA1C(v20, v19, v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 22) = 2048;
    swift_beginAccess();
    unint64_t v22 = *(void *)(*(void *)(a3 + 16) + 16);
    swift_release();
    unint64_t v53 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v16, (os_log_type_t)v48, "Provisional background task '%s' (id=%s) expiring; cancelling %ld subtask(s).",
      (uint8_t *)v18,
      0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v49);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  swift_beginAccess();
  uint64_t v23 = *(void *)(a3 + 16);
  uint64_t v24 = *(void *)(v23 + 64);
  uint64_t v48 = a3;
  uint64_t v49 = v23 + 64;
  uint64_t v25 = 1 << *(unsigned char *)(v23 + 32);
  uint64_t v26 = -1;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  unint64_t v27 = v26 & v24;
  int64_t v28 = (unint64_t)(v25 + 63) >> 6;
  uint64_t v47 = v28 - 1;
  id result = (id)swift_bridgeObjectRetain();
  uint64_t v30 = 0;
  if (!v27) {
    goto LABEL_14;
  }
LABEL_12:
  unint64_t v34 = __clz(__rbit64(v27));
  v27 &= v27 - 1;
  unint64_t v35 = v34 | (v30 << 6);
  while (2)
  {
    uint64_t v36 = *(void *)(v23 + 48);
    uint64_t v37 = type metadata accessor for UUID();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v9, v36 + *(void *)(*(void *)(v37 - 8) + 72) * v35, v37);
    uint64_t v38 = *(void *)(v23 + 56) + 40 * v35;
    uint64_t v39 = sub_10002F214(&qword_1006A5490);
    sub_10015E08C(v38, (uint64_t)&v9[*(int *)(v39 + 48)]);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v9, 0, 1, v39);
    while (1)
    {
      sub_1003BFD40((uint64_t)v9, (uint64_t)v11);
      uint64_t v44 = sub_10002F214(&qword_1006A5490);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 48))(v11, 1, v44) == 1)
      {
        swift_release();
        id result = [self sharedApplication];
        uint64_t v45 = v48;
        if (*(unsigned char *)(v48 + 32)) {
          goto LABEL_37;
        }
        uint64_t v46 = result;
        [result endBackgroundTask:*(void *)(v48 + 24)];

        *(unsigned char *)(v45 + 32) = 1;
        *(void *)(v45 + 16) = &_swiftEmptyDictionarySingleton;
        *(void *)(v45 + 24) = 0;
        return (id)swift_bridgeObjectRelease();
      }
      sub_10016EFCC((long long *)&v11[*(int *)(v44 + 48)], (uint64_t)v50);
      uint64_t v31 = v51;
      uint64_t v32 = v52;
      sub_10015E154(v50, v51);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v32);
      uint64_t v33 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t))(*(void *)(v33 - 8) + 8))(v11, v33);
      id result = (id)sub_100018FE8((uint64_t)v50);
      if (v27) {
        goto LABEL_12;
      }
LABEL_14:
      int64_t v40 = v30 + 1;
      if (__OFADD__(v30, 1))
      {
        __break(1u);
        goto LABEL_36;
      }
      if (v40 < v28)
      {
        unint64_t v41 = *(void *)(v49 + 8 * v40);
        if (v41) {
          goto LABEL_17;
        }
        int64_t v42 = v30 + 2;
        ++v30;
        if (v40 + 1 < v28)
        {
          unint64_t v41 = *(void *)(v49 + 8 * v42);
          if (v41) {
            goto LABEL_20;
          }
          uint64_t v30 = v40 + 1;
          if (v40 + 2 < v28)
          {
            unint64_t v41 = *(void *)(v49 + 8 * (v40 + 2));
            if (v41)
            {
              v40 += 2;
              goto LABEL_17;
            }
            int64_t v42 = v40 + 3;
            uint64_t v30 = v40 + 2;
            if (v40 + 3 < v28) {
              break;
            }
          }
        }
      }
LABEL_31:
      uint64_t v43 = sub_10002F214(&qword_1006A5490);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v9, 1, 1, v43);
      unint64_t v27 = 0;
    }
    unint64_t v41 = *(void *)(v49 + 8 * v42);
    if (v41)
    {
LABEL_20:
      int64_t v40 = v42;
LABEL_17:
      unint64_t v27 = (v41 - 1) & v41;
      unint64_t v35 = __clz(__rbit64(v41)) + (v40 << 6);
      uint64_t v30 = v40;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v40 = v42 + 1;
    if (__OFADD__(v42, 1)) {
      break;
    }
    if (v40 >= v28)
    {
      uint64_t v30 = v47;
      goto LABEL_31;
    }
    unint64_t v41 = *(void *)(v49 + 8 * v40);
    ++v42;
    if (v41) {
      goto LABEL_17;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1003BF9FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v9 = result;
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      if ((dispatch thunk of DispatchWorkItem.isCancelled.getter() & 1) != 0
        || (*(unsigned char *)(v9 + 32) & 1) != 0
        || *(void *)(v9 + 24) != a3
        || (swift_beginAccess(), *(void *)(*(void *)(v9 + 16) + 16)))
      {
        swift_release();
      }
      else
      {
        static Logger.ui.getter();
        uint64_t v10 = Logger.logObject.getter();
        os_log_type_t v11 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v10, v11))
        {
          uint64_t v12 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v12 = 134217984;
          uint64_t v14 = a3;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v10, v11, "Provisional background task (id=%ld) finished normally with no more subtasks.", v12, 0xCu);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        id v13 = [self sharedApplication];
        [v13 endBackgroundTask:a3];

        swift_release();
        *(void *)(v9 + 24) = 0;
        *(unsigned char *)(v9 + 32) = 1;
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1003BFC70()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

id sub_1003BFCB0()
{
  return sub_1003BF30C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1003BFCBC()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003BFCF4()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003BFD34()
{
  return sub_1003BF9FC(v0[2], v0[3], v0[4]);
}

uint64_t sub_1003BFD40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_1006A5488);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SimulateQuotaExceededActivity()
{
  return self;
}

void sub_1003C0090()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR___ICSimulateQuotaExceededActivity_note];
  id v2 = [v1 recordID];
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = [v1 account];
    if (v4 && (uint64_t v5 = v4, v6 = [v4 identifier], v5, v6))
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      id v7 = [self sharedInstance];
      if (!v7)
      {
        __break(1u);
        return;
      }
      uint64_t v8 = v7;
      id v11 = [v7 cloudContextDelegate];

      if (v11)
      {
        id v9 = [self sharedContext];
        NSString v10 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v11 cloudContext:v9 didExceedQuotaForRecordID:v3 accountID:v10];

        [v0 activityDidFinish:1];

        return;
      }

      swift_bridgeObjectRelease();
    }
    else
    {
    }
  }

  [v0 activityDidFinish:0];
}

uint64_t sub_1003C026C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1003C0310()
{
  v6.receiver = v0;
  v6.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  id v1 = [v0 navigationItem];
  id v2 = [self mainBundle];
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 localizedStringForKey:v3 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setTitle:v5];

  sub_1003C0448(0);
}

void sub_1003C0448(int a1)
{
  id v2 = v1;
  int v20 = a1;
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  objc_super v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10002F214(&qword_1006A5540);
  uint64_t v19 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = (unint64_t)sub_1003C272C();
  if (v10 >> 62)
  {
    sub_100031418(0, (unint64_t *)&qword_1006A0020);
    uint64_t v11 = _bridgeCocoaArray<A>(_:)();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_100031418(0, (unint64_t *)&qword_1006A0020);
    uint64_t v11 = v10;
  }
  swift_bridgeObjectRelease();
  id v12 = [*(id *)&v1[OBJC_IVAR____TtC11MobileNotes39FolderComposerParticipantViewController_participantSelection] unresolvedParticipants];
  sub_100031418(0, &qword_1006A5510);
  unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v13 >> 62)
  {
    sub_100031418(0, (unint64_t *)&qword_1006A0020);
    swift_bridgeObjectRetain();
    unint64_t v14 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_100031418(0, (unint64_t *)&qword_1006A0020);
    unint64_t v14 = v13;
  }
  swift_bridgeObjectRelease();
  unint64_t v23 = v11;
  sub_10022C348(v14);
  unint64_t v15 = v23;
  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_7;
    }
  }
  else if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_7:
    [v2 _setContentUnavailableConfiguration:0];
    sub_1003C3C5C();
    NSDiffableDataSourceSnapshot.init()();
    NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_10062C9A8);
    sub_10002F214((uint64_t *)&unk_10069E4E0);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_100524D10;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, (uint64_t)v2 + OBJC_IVAR____TtC11MobileNotes37FolderComposerSelectionViewController_joinSummaryIdentifier, v3);
    sub_1003C3C04();
    AnyHashable.init<A>(_:)();
    char v22 = 0;
    NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
    swift_bridgeObjectRelease();
    NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_10062C9D0);
    sub_1003311E4(v15);
    swift_bridgeObjectRelease();
    char v21 = 1;
    NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
    swift_bridgeObjectRelease();
    id v16 = sub_1003C09E8();
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

    (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v7);
    return;
  }
  swift_bridgeObjectRelease();

  sub_1003C2A3C();
}

BOOL sub_1003C0914(uint64_t a1)
{
  return a1 == 1;
}

BOOL sub_1003C0920(uint64_t a1)
{
  if (a1 != 1) {
    return 0;
  }
  id v2 = [*(id *)(v1 + OBJC_IVAR____TtC11MobileNotes39FolderComposerParticipantViewController_participantSelection) unresolvedParticipants];
  sub_100031418(0, &qword_1006A5510);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  return v4 > 0;
}

id sub_1003C09E8()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes39FolderComposerParticipantViewController____lazy_storage___diffableDataSource;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC11MobileNotes39FolderComposerParticipantViewController____lazy_storage___diffableDataSource);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC11MobileNotes39FolderComposerParticipantViewController____lazy_storage___diffableDataSource);
  }
  else
  {
    uint64_t v4 = (void *)sub_1003C0C4C(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1003C0C4C(uint64_t a1)
{
  uint64_t v68 = sub_10002F214(&qword_1006A5518);
  uint64_t v66 = *(void *)(v68 - 8);
  uint64_t v67 = *(void *)(v66 + 64);
  uint64_t v2 = __chkstk_darwin(v68);
  uint64_t v65 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v61 = (char *)&v53 - v4;
  uint64_t v5 = sub_10002F214(&qword_1006A26C0);
  uint64_t v62 = *(void *)(v5 - 8);
  uint64_t v63 = v5;
  uint64_t v64 = *(void *)(v62 + 64);
  uint64_t v6 = __chkstk_darwin(v5);
  id v60 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v79 = (char *)&v53 - v8;
  uint64_t v77 = sub_10002F214(&qword_1006A5520);
  uint64_t v75 = *(void *)(v77 - 8);
  uint64_t v57 = *(void *)(v75 + 64);
  uint64_t v9 = __chkstk_darwin(v77);
  uint64_t v76 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v78 = (char *)&v53 - v11;
  uint64_t v70 = sub_10002F214(&qword_1006A5528);
  uint64_t v72 = *(void *)(v70 - 8);
  uint64_t v12 = *(void *)(v72 + 64);
  uint64_t v13 = __chkstk_darwin(v70);
  uint64_t v71 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  unint64_t v15 = (char *)&v53 - v14;
  uint64_t v16 = sub_10002F214(&qword_1006A5530);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v73 = v16;
  uint64_t v74 = v17;
  uint64_t v18 = *(void *)(v17 + 64);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v54 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  char v21 = (char *)&v53 - v20;
  swift_allocObject();
  swift_unknownObjectUnownedInit();
  type metadata accessor for FolderComposerParticipantJoinCell();
  type metadata accessor for UUID();
  uint64_t v59 = v21;
  UICollectionView.CellRegistration.init(handler:)();
  swift_allocObject();
  swift_unknownObjectUnownedInit();
  type metadata accessor for FolderComposerParticipantCell();
  sub_100031418(0, &qword_1006A4840);
  uint64_t v58 = v15;
  UICollectionView.CellRegistration.init(handler:)();
  swift_allocObject();
  uint64_t v69 = a1;
  swift_unknownObjectUnownedInit();
  sub_100031418(0, &qword_1006A5510);
  char v22 = v78;
  UICollectionView.CellRegistration.init(handler:)();
  id v56 = sub_1003C84D4();
  uint64_t v55 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  uint64_t v23 = v73;
  uint64_t v24 = v74;
  (*(void (**)(char *, char *, uint64_t))(v74 + 16))((char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v21, v73);
  uint64_t v25 = v72;
  uint64_t v26 = v70;
  (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v71, v15, v70);
  uint64_t v27 = v75;
  int64_t v28 = v22;
  uint64_t v29 = v77;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v76, v28, v77);
  unint64_t v30 = (*(unsigned __int8 *)(v24 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  unint64_t v31 = (v18 + *(unsigned __int8 *)(v25 + 80) + v30) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  unint64_t v32 = (v12 + *(unsigned __int8 *)(v27 + 80) + v31) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v55;
  (*(void (**)(unint64_t, char *, uint64_t))(v24 + 32))(v33 + v30, v54, v23);
  (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))(v33 + v31, v71, v26);
  (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v33 + v32, v76, v29);
  id v34 = objc_allocWithZone((Class)sub_10002F214(&qword_1006A5538));
  uint64_t v35 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
  uint64_t v36 = *(void **)(v69
                 + OBJC_IVAR____TtC11MobileNotes39FolderComposerParticipantViewController____lazy_storage___diffableDataSource);
  *(void *)(v69
            + OBJC_IVAR____TtC11MobileNotes39FolderComposerParticipantViewController____lazy_storage___diffableDataSource) = v35;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  type metadata accessor for FolderComposerFilterHeader();
  uint64_t v37 = v79;
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  type metadata accessor for FolderComposerFilterFooter();
  uint64_t v38 = v61;
  uint64_t v39 = UICollectionView.SupplementaryRegistration.init(elementKind:handler:)();
  uint64_t v76 = (char *)sub_1003C09E8(v39);
  uint64_t v40 = v62;
  uint64_t v41 = v63;
  int64_t v42 = v60;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v60, v37, v63);
  uint64_t v43 = v65;
  uint64_t v44 = v66;
  uint64_t v45 = v68;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v65, v38, v68);
  unint64_t v46 = (*(unsigned __int8 *)(v40 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  unint64_t v47 = (v64 + *(unsigned __int8 *)(v44 + 80) + v46) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  uint64_t v48 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v40 + 32))(v48 + v46, v42, v41);
  (*(void (**)(unint64_t, char *, uint64_t))(v44 + 32))(v48 + v47, v43, v45);
  uint64_t v49 = v76;
  dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter();

  uint64_t v51 = sub_1003C09E8(v50);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v38, v45);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v79, v41);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v78, v77);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v58, v70);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v59, v73);
  return v51;
}

uint64_t sub_1003C14EC(char *a1)
{
  uint64_t Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  id v3 = *(id *)&Strong[OBJC_IVAR____TtC11MobileNotes39FolderComposerParticipantViewController_participantSelection];

  uint64_t v4 = *(void **)&a1[OBJC_IVAR____TtC11MobileNotes33FolderComposerParticipantJoinCell_participantSelection];
  *(void *)&a1[OBJC_IVAR____TtC11MobileNotes33FolderComposerParticipantJoinCell_participantSelection] = v3;
  id v5 = v3;

  sub_1003C3D0C();
  [a1 setNeedsUpdateConfiguration];

  uint64_t v6 = swift_unknownObjectUnownedLoadStrong();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  uint64_t v8 = (uint64_t (**)(uint64_t))&a1[OBJC_IVAR____TtC11MobileNotes33FolderComposerParticipantJoinCell_joinOperatorChanged];
  uint64_t v9 = *(void *)&a1[OBJC_IVAR____TtC11MobileNotes33FolderComposerParticipantJoinCell_joinOperatorChanged];
  *uint64_t v8 = sub_1003C3BFC;
  v8[1] = (uint64_t (*)(uint64_t))v7;

  return sub_10002E70C(v9);
}

uint64_t sub_1003C15DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10002F214(&qword_1006A5540);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)sub_1003C09E8(v9);
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  sub_10002F214((uint64_t *)&unk_10069E4E0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_100524D10;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2 + OBJC_IVAR____TtC11MobileNotes37FolderComposerSelectionViewController_joinSummaryIdentifier, v3);
  sub_1003C3C04();
  AnyHashable.init<A>(_:)();
  NSDiffableDataSourceSnapshot.reconfigureItems(_:)((Swift::OpaquePointer)v13);
  uint64_t v14 = swift_bridgeObjectRelease();
  unint64_t v15 = (void *)sub_1003C09E8(v14);
  dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

void sub_1003C17EC(char *a1, uint64_t a2, void **a3)
{
  uint64_t v5 = sub_10002F214(&qword_10069C1A0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UICellAccessory.CheckmarkOptions();
  uint64_t v30 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UICellAccessory.DisplayedState();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v15 = *a3;
  uint64_t v16 = *(void **)&a1[OBJC_IVAR____TtC11MobileNotes29FolderComposerParticipantCell_participant];
  *(void *)&a1[OBJC_IVAR____TtC11MobileNotes29FolderComposerParticipantCell_participant] = *a3;
  id v17 = v15;

  [a1 setNeedsUpdateConfiguration];
  id v18 = [v17 userIdentity];
  id v19 = [v18 userRecordID];

  if (v19)
  {
    uint64_t v29 = v8;
    id v20 = [v19 recordName];

    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;

    uint64_t Strong = (char *)swift_unknownObjectUnownedLoadStrong();
    id v25 = *(id *)&Strong[OBJC_IVAR____TtC11MobileNotes39FolderComposerParticipantViewController_participantSelection];

    id v26 = [v25 participantUserIDs];
    uint64_t v27 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v21) = sub_1004284A8(v21, v23, v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1[OBJC_IVAR____TtC11MobileNotes29FolderComposerParticipantCell_showCheckmark] = v21 & 1;
    if (v21)
    {
      sub_10002F214(&qword_10069C1B0);
      type metadata accessor for UICellAccessory();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_100524D10;
      (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for UICellAccessory.DisplayedState.always(_:), v11);
      uint64_t v28 = type metadata accessor for UICellAccessory.LayoutDimension();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v7, 1, 1, v28);
      UICellAccessory.CheckmarkOptions.init(isHidden:reservedLayoutWidth:tintColor:)();
      static UICellAccessory.checkmark(displayed:options:)();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v29);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    }
    UICollectionViewListCell.accessories.setter();
  }
}

uint64_t sub_1003C1C20(char *a1, uint64_t a2, void **a3)
{
  uint64_t v5 = sub_10002F214(&qword_10069C1A0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UICellAccessory.CheckmarkOptions();
  uint64_t v28 = *(void *)(v8 - 8);
  uint64_t v29 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UICellAccessory.DisplayedState();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v15 = *a3;
  uint64_t v16 = *(void **)&a1[OBJC_IVAR____TtC11MobileNotes29FolderComposerParticipantCell_unknownParticipant];
  *(void *)&a1[OBJC_IVAR____TtC11MobileNotes29FolderComposerParticipantCell_unknownParticipant] = *a3;
  id v17 = v15;

  [a1 setNeedsUpdateConfiguration];
  uint64_t Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  id v19 = *(id *)&Strong[OBJC_IVAR____TtC11MobileNotes39FolderComposerParticipantViewController_participantSelection];

  id v20 = [v19 participantUserIDs];
  uint64_t v21 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  id v22 = [v17 participantUserID];
  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v24;

  LOBYTE(v22) = sub_1004284A8(v23, v25, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[OBJC_IVAR____TtC11MobileNotes29FolderComposerParticipantCell_showCheckmark] = v22 & 1;
  if (v22)
  {
    sub_10002F214(&qword_10069C1B0);
    type metadata accessor for UICellAccessory();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_100524D10;
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for UICellAccessory.DisplayedState.always(_:), v11);
    uint64_t v26 = type metadata accessor for UICellAccessory.LayoutDimension();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v7, 1, 1, v26);
    UICellAccessory.CheckmarkOptions.init(isHidden:reservedLayoutWidth:tintColor:)();
    static UICellAccessory.checkmark(displayed:options:)();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v29);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return UICollectionViewListCell.accessories.setter();
}

uint64_t sub_1003C2008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v37 = a7;
  uint64_t v38 = a6;
  uint64_t v36 = a5;
  uint64_t v39 = a2;
  uint64_t v40 = a1;
  uint64_t v8 = sub_10002F214((uint64_t *)&unk_10069C990);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v34 - v12;
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  id v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  id v20 = (char *)&v34 - v19;
  sub_100033188(a3, (uint64_t)v41);
  int v21 = swift_dynamicCast();
  id v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  if (!v21)
  {
    v22(v13, 1, 1, v14);
    goto LABEL_6;
  }
  uint64_t v35 = v11;
  v22(v13, 0, 1, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
LABEL_6:
    sub_10002B754((uint64_t)v13, (uint64_t *)&unk_10069C990);
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v20, v13, v14);
  uint64_t Strong = swift_unknownObjectUnownedLoadStrong();
  id v34 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v34(v18, Strong + OBJC_IVAR____TtC11MobileNotes37FolderComposerSelectionViewController_joinSummaryIdentifier, v14);

  LOBYTE(Strong) = static UUID.== infix(_:_:)();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v15 + 8);
  v24(v18, v14);
  if (Strong)
  {
    uint64_t v25 = (uint64_t)v35;
    v34(v35, (uint64_t)v20, v14);
    v22((char *)v25, 0, 1, v14);
    type metadata accessor for FolderComposerParticipantJoinCell();
    uint64_t v26 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
    sub_10002B754(v25, (uint64_t *)&unk_10069C990);
    v24(v20, v14);
    return v26;
  }
  v24(v20, v14);
LABEL_7:
  v27.Class isa = AnyHashable._bridgeToObjectiveC()().isa;
  self;
  uint64_t v28 = swift_dynamicCastObjCClass();
  if (v28)
  {
    v41[0] = v28;
    type metadata accessor for FolderComposerParticipantCell();
    sub_100031418(0, &qword_1006A4840);
    uint64_t v29 = v27.isa;
    uint64_t v26 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
  }
  else
  {

    v30.Class isa = AnyHashable._bridgeToObjectiveC()().isa;
    self;
    uint64_t v31 = swift_dynamicCastObjCClass();
    if (v31)
    {
      v41[0] = v31;
      type metadata accessor for FolderComposerParticipantCell();
      sub_100031418(0, &qword_1006A5510);
      unint64_t v32 = v30.isa;
      uint64_t v26 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
    }
    else
    {

      return 0;
    }
  }
  return v26;
}

id sub_1003C2444(char *a1)
{
  id v2 = [self mainBundle];
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 localizedStringForKey:v3 value:0 table:0];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  uint64_t v8 = (uint64_t *)&a1[OBJC_IVAR____TtC11MobileNotes26FolderComposerFilterHeader_text];
  *uint64_t v8 = v5;
  v8[1] = v7;
  swift_bridgeObjectRelease();

  return [a1 setNeedsUpdateConfiguration];
}

id sub_1003C2534(char *a1)
{
  id v2 = [self mainBundle];
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 localizedStringForKey:v3 value:0 table:0];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  uint64_t v8 = (uint64_t *)&a1[OBJC_IVAR____TtC11MobileNotes26FolderComposerFilterFooter_text];
  *uint64_t v8 = v5;
  v8[1] = v7;
  swift_bridgeObjectRelease();

  return [a1 setNeedsUpdateConfiguration];
}

uint64_t sub_1003C261C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == a2 && v5 == a3)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v7)
  {
LABEL_13:
    type metadata accessor for FolderComposerFilterHeader();
    return UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)();
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == a2 && v8 == a3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0) {
      return 0;
    }
  }
  type metadata accessor for FolderComposerFilterFooter();
  return UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)();
}

void *sub_1003C272C()
{
  id v1 = [self sharedContext];
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  id v2 = v1;
  id v3 = [v1 managedObjectContext];

  id v4 = _swiftEmptyArrayStorage;
  if (!v3) {
    return v4;
  }
  id v5 = [*(id *)(v0 + OBJC_IVAR____TtC11MobileNotes39FolderComposerParticipantViewController_participantSelection) accountObjectID];
  if (!v5)
  {

    return v4;
  }
  uint64_t v6 = v5;
  uint64_t v14 = _swiftEmptyArrayStorage;
  char v7 = (void *)swift_allocObject();
  v7[2] = v3;
  v7[3] = v6;
  v7[4] = &v14;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1003C3CF0;
  *(void *)(v8 + 24) = v7;
  aBlock[4] = sub_100031D5C;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100031D30;
  void aBlock[3] = &unk_100639DB0;
  uint64_t v9 = _Block_copy(aBlock);
  id v10 = v3;
  id v11 = v6;
  swift_retain();
  swift_release();
  [v10 performBlockAndWait:v9];

  _Block_release(v9);
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = (void *)swift_release();
  if ((v9 & 1) == 0)
  {
    id v4 = v14;
    swift_release();
    return v4;
  }
  __break(1u);
  return result;
}

void sub_1003C2930(void *a1, uint64_t a2, uint64_t *a3)
{
  id v7 = [a1 ic_existingObjectWithID:a2];
  if (v7)
  {
    self;
    id v4 = (void *)swift_dynamicCastObjCClass();
    if (v4)
    {
      id v5 = [v4 uniqueUserParticipants];
      sub_100031418(0, &qword_1006A4840);
      uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      *a3 = v6;
      swift_bridgeObjectRelease();
    }
    else
    {
    }
  }
}

void sub_1003C2A3C()
{
  id v13 = [self emptyProminentConfiguration];
  id v1 = self;
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v1 ic_systemImageNamed:v2];

  [v13 setImage:v3];
  id v4 = self;
  id v5 = [v4 mainBundle];
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v13 setText:v8];

  id v9 = [v4 mainBundle];
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v9 localizedStringForKey:v10 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v13 setSecondaryText:v12];

  [v0 _setContentUnavailableConfiguration:v13];
}

void sub_1003C2CD0()
{
  id v1 = *(void **)(v0
                + OBJC_IVAR____TtC11MobileNotes39FolderComposerParticipantViewController____lazy_storage___diffableDataSource);
}

uint64_t sub_1003C2D5C()
{
  return type metadata accessor for FolderComposerParticipantViewController();
}

uint64_t type metadata accessor for FolderComposerParticipantViewController()
{
  uint64_t result = qword_1006A5500;
  if (!qword_1006A5500) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1003C2DB0()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1003C2E00()
{
  id v0 = sub_1003C09E8();
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

  sub_1003C3564((uint64_t)v11, (uint64_t)v9);
  if (v10)
  {
    v1.Class isa = AnyHashable._bridgeToObjectiveC()().isa;
    sub_100033134((uint64_t)v9);
    self;
    uint64_t v2 = swift_dynamicCastObjCClass();
    if (v2)
    {
      id v3 = (void *)v2;
      sub_1003C3564((uint64_t)v11, (uint64_t)v9);

      sub_10002B754((uint64_t)v9, &qword_1006A1358);
      sub_10002B754((uint64_t)v11, &qword_1006A1358);
      return 1;
    }
  }
  else
  {
    sub_10002B754((uint64_t)v9, &qword_1006A1358);
  }
  sub_1003C3564((uint64_t)v11, (uint64_t)v9);
  sub_1003C3564((uint64_t)v9, (uint64_t)v7);
  if (v8)
  {
    Class isa = AnyHashable._bridgeToObjectiveC()().isa;
    sub_10002B754((uint64_t)v9, &qword_1006A1358);
    sub_10002B754((uint64_t)v11, &qword_1006A1358);
    sub_100033134((uint64_t)v7);
    self;
    BOOL v4 = swift_dynamicCastObjCClass() != 0;
  }
  else
  {
    sub_10002B754((uint64_t)v9, &qword_1006A1358);
    sub_10002B754((uint64_t)v11, &qword_1006A1358);
    sub_10002B754((uint64_t)v7, &qword_1006A1358);
    return 0;
  }
  return v4;
}

void sub_1003C2F88(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10002F214(&qword_10069C1A0);
  __chkstk_darwin(v4 - 8);
  NSString v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UICellAccessory.CheckmarkOptions();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UICellAccessory.DisplayedState();
  uint64_t v50 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = sub_1003C84D4();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v51 = [v14 cellForItemAtIndexPath:isa];

  if (!v51) {
    return;
  }
  type metadata accessor for FolderComposerParticipantCell();
  uint64_t v16 = swift_dynamicCastClass();
  if (!v16) {
    goto LABEL_17;
  }
  uint64_t v17 = v16;
  uint64_t v45 = v11;
  id v18 = *(void **)(v16 + OBJC_IVAR____TtC11MobileNotes29FolderComposerParticipantCell_participant);
  uint64_t v47 = v8;
  uint64_t v48 = v7;
  unint64_t v46 = v6;
  if (v18
    && (id v19 = [v18 userIdentity],
        id v20 = [v19 userRecordID],
        v19,
        v20))
  {
    id v21 = [v20 recordName];

    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v24 = v23;
  }
  else
  {
    uint64_t v22 = 0;
    uint64_t v24 = 0;
  }
  uint64_t v25 = *(void **)(v17 + OBJC_IVAR____TtC11MobileNotes29FolderComposerParticipantCell_unknownParticipant);
  if (!v25)
  {
    if (!v24) {
      goto LABEL_17;
    }
LABEL_12:
    uint64_t v49 = a1;
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  id v26 = [v25 participantUserID];
  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v29 = v28;

  if (v24) {
    goto LABEL_12;
  }
  if (v29)
  {
    uint64_t v49 = a1;
    uint64_t v22 = v27;
    uint64_t v24 = v29;
LABEL_13:
    uint64_t v30 = OBJC_IVAR____TtC11MobileNotes39FolderComposerParticipantViewController_participantSelection;
    id v31 = [*(id *)(v2 + OBJC_IVAR____TtC11MobileNotes39FolderComposerParticipantViewController_participantSelection) participantUserIDs];
    uint64_t v32 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v31) = sub_1004284A8(v22, v24, v32);
    swift_bridgeObjectRelease();
    id v33 = *(id *)(v2 + v30);
    NSString v34 = String._bridgeToObjectiveC()();
    uint64_t v35 = &selRef_removeParticipantUserID_;
    if ((v31 & 1) == 0) {
      uint64_t v35 = &selRef_addParticipantUserID_;
    }
    [v33 *v35 v34];

    id v36 = [*(id *)(v2 + v30) participantUserIDs];
    uint64_t v37 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v36) = sub_1004284A8(v22, v24, v37);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v17 + OBJC_IVAR____TtC11MobileNotes29FolderComposerParticipantCell_showCheckmark) = v36 & 1;
    if (v36)
    {
      sub_10002F214(&qword_10069C1B0);
      type metadata accessor for UICellAccessory();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_100524D10;
      uint64_t v38 = v50;
      uint64_t v39 = v45;
      (*(void (**)(char *, void, uint64_t))(v50 + 104))(v13, enum case for UICellAccessory.DisplayedState.always(_:), v45);
      uint64_t v40 = type metadata accessor for UICellAccessory.LayoutDimension();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v46, 1, 1, v40);
      UICellAccessory.CheckmarkOptions.init(isHidden:reservedLayoutWidth:tintColor:)();
      static UICellAccessory.checkmark(displayed:options:)();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v10, v48);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v39);
    }
    UICollectionViewListCell.accessories.setter();
    id v42 = sub_1003C84D4();
    Class v43 = IndexPath._bridgeToObjectiveC()().super.isa;
    [v42 deselectItemAtIndexPath:v43 animated:0];

    return;
  }
LABEL_17:
  id v41 = v51;
}

uint64_t sub_1003C3564(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_1006A1358);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003C35CC()
{
  swift_unknownObjectUnownedDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003C3604(char *a1)
{
  return sub_1003C14EC(a1);
}

void sub_1003C360C(char *a1, uint64_t a2, void **a3)
{
}

uint64_t sub_1003C3614(char *a1, uint64_t a2, void **a3)
{
  return sub_1003C1C20(a1, a2, a3);
}

uint64_t sub_1003C361C()
{
  uint64_t v17 = sub_10002F214(&qword_1006A5530);
  uint64_t v1 = *(void *)(v17 - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v16 = sub_10002F214(&qword_1006A5528);
  uint64_t v5 = *(void *)(v16 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v3 + v4 + v6) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = sub_10002F214(&qword_1006A5520);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (v7 + v8 + v11) & ~v11;
  uint64_t v15 = v12 + *(void *)(v10 + 64);
  uint64_t v13 = v2 | v6 | v11 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v3, v17);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v16);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v12, v9);

  return _swift_deallocObject(v0, v15, v13);
}

uint64_t sub_1003C3808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(sub_10002F214(&qword_1006A5530) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(sub_10002F214(&qword_1006A5528) - 8);
  unint64_t v11 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = *(void *)(v10 + 64);
  uint64_t v13 = *(void *)(sub_10002F214(&qword_1006A5520) - 8);
  uint64_t v14 = *(void *)(v3 + 16);
  uint64_t v15 = v3 + ((v11 + v12 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));

  return sub_1003C2008(a1, a2, a3, v14, v3 + v8, v3 + v11, v15);
}

uint64_t sub_1003C3968()
{
  uint64_t v1 = sub_10002F214(&qword_1006A26C0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_10002F214(&qword_1006A5518);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1003C3AC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10002F214(&qword_1006A26C0);
  sub_10002F214(&qword_1006A5518);

  return sub_1003C261C(a1, a2, a3);
}

uint64_t sub_1003C3BC4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003C3BFC(uint64_t a1)
{
  return sub_1003C15DC(a1, *(void *)(v1 + 16));
}

unint64_t sub_1003C3C04()
{
  unint64_t result = qword_1006A4DD0;
  if (!qword_1006A4DD0)
  {
    type metadata accessor for UUID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A4DD0);
  }
  return result;
}

unint64_t sub_1003C3C5C()
{
  unint64_t result = qword_1006A5548;
  if (!qword_1006A5548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5548);
  }
  return result;
}

uint64_t sub_1003C3CB0()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_1003C3CF0()
{
  sub_1003C2930(*(void **)(v0 + 16), *(void *)(v0 + 24), *(uint64_t **)(v0 + 32));
}

uint64_t sub_1003C3CFC()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1003C3D0C()
{
  id v1 = sub_1003C3FA4(&OBJC_IVAR____TtC11MobileNotes33FolderComposerParticipantJoinCell____lazy_storage___allAction);
  uint64_t v2 = OBJC_IVAR____TtC11MobileNotes33FolderComposerParticipantJoinCell_participantSelection;
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes33FolderComposerParticipantJoinCell_participantSelection);
  BOOL v4 = v3 && [v3 joinOperator] == (id)1;
  [v1 setState:v4];

  id v7 = sub_1003C3FA4(&OBJC_IVAR____TtC11MobileNotes33FolderComposerParticipantJoinCell____lazy_storage___anyAction);
  uint64_t v5 = *(void **)(v0 + v2);
  BOOL v6 = v5 && [v5 joinOperator] == (id)2;
  [v7 setState:v6];
}

uint64_t sub_1003C3E28()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes33FolderComposerParticipantJoinCell_participantSelection);
  if (!v1) {
    return 0;
  }
  id v2 = [v1 summaryWithJoinOperatorMenu];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

UIMenu sub_1003C3E98()
{
  sub_100031418(0, (unint64_t *)&unk_1006A4D40);
  sub_10002F214(&qword_10069BA00);
  uint64_t preferredElementSize = swift_allocObject();
  *(_OWORD *)(preferredElementSize + 16) = xmmword_100524CE0;
  *(void *)(preferredElementSize + 32) = sub_1003C3FA4(&OBJC_IVAR____TtC11MobileNotes33FolderComposerParticipantJoinCell____lazy_storage___allAction);
  *(void *)(preferredElementSize + 40) = sub_1003C3FA4(&OBJC_IVAR____TtC11MobileNotes33FolderComposerParticipantJoinCell____lazy_storage___anyAction);
  specialized Array._endMutation()();
  v1._countAndFlagsBits = 0;
  v1._object = (void *)0xE000000000000000;
  v3.value.super.Class isa = 0;
  v3.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v1, (Swift::String_optional)0, v3, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, (Swift::OpaquePointer)preferredElementSize);
}

id sub_1003C3FA4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  UIImage_optional v3 = *(void **)&v1[*a1];
  if (v3)
  {
    id v4 = *(id *)&v1[*a1];
  }
  else
  {
    uint64_t v5 = v1;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v6 = (id)ICLocalizedStringFromICParticipantsFilterJoinOperator();
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    *(void *)(swift_allocObject() + 16) = v1;
    id v7 = v1;
    uint64_t v8 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    uint64_t v9 = *(void **)&v1[v2];
    *(void *)&v5[v2] = v8;
    id v4 = v8;

    UIImage_optional v3 = 0;
  }
  id v10 = v3;
  return v4;
}

id sub_1003C40B0(uint64_t a1, char *a2)
{
  id v3 = *(id *)&a2[OBJC_IVAR____TtC11MobileNotes33FolderComposerParticipantJoinCell_participantSelection];
  if (v3) {
    id v3 = [v3 setJoinOperator:1];
  }
  sub_1003C3D0C(v3);
  id result = [a2 setNeedsUpdateConfiguration];
  uint64_t v5 = *(void (**)(uint64_t))&a2[OBJC_IVAR____TtC11MobileNotes33FolderComposerParticipantJoinCell_joinOperatorChanged];
  if (v5)
  {
    swift_retain();
    v5(1);
    return (id)sub_10002E70C((uint64_t)v5);
  }
  return result;
}

id sub_1003C4154(uint64_t a1, char *a2)
{
  id v3 = *(id *)&a2[OBJC_IVAR____TtC11MobileNotes33FolderComposerParticipantJoinCell_participantSelection];
  if (v3) {
    id v3 = [v3 setJoinOperator:2];
  }
  sub_1003C3D0C(v3);
  id result = [a2 setNeedsUpdateConfiguration];
  uint64_t v5 = *(void (**)(uint64_t))&a2[OBJC_IVAR____TtC11MobileNotes33FolderComposerParticipantJoinCell_joinOperatorChanged];
  if (v5)
  {
    swift_retain();
    v5(2);
    return (id)sub_10002E70C((uint64_t)v5);
  }
  return result;
}

id sub_1003C429C(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v4 = &v1[OBJC_IVAR____TtC11MobileNotes33FolderComposerParticipantJoinCell_joinOperatorChanged];
  *(void *)id v4 = 0;
  *((void *)v4 + 1) = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes33FolderComposerParticipantJoinCell_participantSelection] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes33FolderComposerParticipantJoinCell____lazy_storage___allAction] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes33FolderComposerParticipantJoinCell____lazy_storage___anyAction] = 0;
  v7.receiver = v1;
  v7.super_class = ObjectType;
  id v5 = [super initWithCoder:a1];

  return v5;
}

void sub_1003C434C()
{
  sub_10002E70C(*(void *)(v0 + OBJC_IVAR____TtC11MobileNotes33FolderComposerParticipantJoinCell_joinOperatorChanged));

  Swift::String v1 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes33FolderComposerParticipantJoinCell____lazy_storage___anyAction);
}

uint64_t type metadata accessor for FolderComposerParticipantJoinCell()
{
  return self;
}

uint64_t sub_1003C4444()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1003C447C(uint64_t a1)
{
  return sub_1003C4154(a1, *(char **)(v1 + 16));
}

id sub_1003C4484(uint64_t a1)
{
  return sub_1003C40B0(a1, *(char **)(v1 + 16));
}

uint64_t SetAttachmentSizeIntent.target.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AttachmentEntity();
  __chkstk_darwin(v2 - 8);
  sub_1002E60E8(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  IntentParameter.wrappedValue.setter();
  return sub_1002E614C(a1);
}

void *SetAttachmentSizeIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static SetAttachmentSizeIntent.persistentIdentifier;
}

unint64_t static SetAttachmentSizeIntent.persistentIdentifier.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1003C454C()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100032974(v6, static SetAttachmentSizeIntent.title);
  sub_10003293C(v6, (uint64_t)static SetAttachmentSizeIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t SetAttachmentSizeIntent.title.unsafeMutableAddressor()
{
  return sub_1001B0DD8(&qword_10069AF80, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)static SetAttachmentSizeIntent.title);
}

uint64_t static SetAttachmentSizeIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B0E6C(&qword_10069AF80, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)static SetAttachmentSizeIntent.title, a1);
}

uint64_t static SetAttachmentSizeIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t static SetAttachmentSizeIntent.parameterSummary.getter()
{
  uint64_t v0 = sub_10002F214(&qword_1006A5598);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214((uint64_t *)&unk_1006A55A0);
  __chkstk_darwin(v1);
  sub_1001FD90C();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._object = (void *)0x800000010055B7F0;
  v2._countAndFlagsBits = 0xD000000000000010;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_1006A55B0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 544175136;
  v3._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  sub_10002F214(&qword_1006A55B8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t SetAttachmentSizeIntent.perform()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  void v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  return _swift_task_switch(sub_1003C4C94, 0, 0);
}

uint64_t sub_1003C4C94()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v4 = v0[4];
  uint64_t v3 = v0[5];
  AppDependency.wrappedValue.getter();
  uint64_t v5 = (void *)v0[2];
  v0[8] = [v5 modernManagedObjectContext];

  uint64_t v6 = (void *)swift_allocObject();
  v0[9] = v6;
  v6[2] = v4;
  v6[3] = v3;
  v6[4] = v2;
  v6[5] = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[10] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1003C4DE4;
  return NSManagedObjectContext.perform<A>(_:)(v7, sub_1003C6E08, v6, (char *)&type metadata for () + 8);
}

uint64_t sub_1003C4DE4()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1003C4F6C;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1003C4F00;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003C4F00()
{
  uint64_t v1 = *(void **)(v0 + 64);
  static IntentResult.result<>()();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1003C4F6C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1003C4FD8()
{
  uint64_t v0 = type metadata accessor for AttachmentEntity();
  uint64_t v1 = v0 - 8;
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  IntentParameter.wrappedValue.getter();
  AppDependency.wrappedValue.getter();
  uint64_t v4 = v18;
  URL._bridgeToObjectiveC()((NSURL *)*(int *)(v1 + 28));
  uint64_t v6 = v5;
  id v7 = [v4 managedObjectIDForURIRepresentation:v5];

  if (!v7)
  {
    __break(1u);
    goto LABEL_12;
  }
  id v8 = [v4 managedObjectContextForObjectID:v7];
  if (!v8)
  {
LABEL_12:
    __break(1u);
    JUMPOUT(0x1003C5240);
  }
  uint64_t v9 = v8;
  id v10 = [v8 objectWithID:v7];

  v17[1] = &OBJC_PROTOCOL___ICAttachmentObject;
  swift_dynamicCastObjCProtocolUnconditional();
  sub_1002E614C((uint64_t)v3);
  self;
  uint64_t v11 = swift_dynamicCastObjCClass();
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    id v13 = v10;
    IntentParameter.wrappedValue.getter();
    uint64_t v14 = 1;
    switch((char)v18)
    {
      case 1:
        goto LABEL_9;
      case 2:
        uint64_t v14 = 2;
        goto LABEL_9;
      case 3:
        uint64_t v14 = 0;
LABEL_9:
        [v12 setPreferredViewSize:v14];
        break;
      default:
        [v12 resetPreferredViewSizeIfNecessary:1];
        break;
    }
    id v16 = [v12 managedObjectContext];
    [v16 ic_save];
  }
  else
  {
    sub_100173F8C();
    swift_allocError();
    *uint64_t v15 = 16;
    swift_willThrow();
  }
}

uint64_t AttachmentViewSize.attachmentViewSize.getter(unsigned __int8 a1)
{
  int v1 = a1;
  int v2 = 1;
  switch(a1)
  {
    case 1u:
      int v2 = 0;
      int v1 = 1;
      break;
    case 2u:
      int v2 = 0;
      int v1 = 2;
      break;
    case 3u:
      int v1 = 0;
      int v2 = 0;
      break;
    default:
      return v1 | (v2 << 16);
  }
  return v1 | (v2 << 16);
}

uint64_t sub_1003C52BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1002288F0(&qword_10069AF80, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)static SetAttachmentSizeIntent.title, a1);
}

uint64_t sub_1003C52FC(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100161724;
  long long v5 = v1[1];
  *(_OWORD *)(v4 + 32) = *v1;
  *(_OWORD *)(v4 + 48) = v5;
  *(void *)(v4 + 24) = a1;
  return _swift_task_switch(sub_1003C4C94, 0, 0);
}

unsigned char *sub_1003C53B0@<X0>(void *a1@<X8>)
{
  id result = _s11MobileNotes23SetAttachmentSizeIntentVACycfC_0();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

uint64_t sub_1003C53DC()
{
  uint64_t v0 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = type metadata accessor for TypeDisplayRepresentation();
  sub_100032974(v10, static AttachmentViewSize.typeDisplayRepresentation);
  sub_10003293C(v10, (uint64_t)static AttachmentViewSize.typeDisplayRepresentation);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t AttachmentViewSize.typeDisplayRepresentation.unsafeMutableAddressor()
{
  return sub_1001B0DD8(&qword_10069AF88, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static AttachmentViewSize.typeDisplayRepresentation);
}

uint64_t static AttachmentViewSize.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B0E6C(&qword_10069AF88, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static AttachmentViewSize.typeDisplayRepresentation, a1);
}

unint64_t sub_1003C572C()
{
  uint64_t v0 = sub_10002F214((uint64_t *)&unk_10069D360);
  __chkstk_darwin(v0 - 8);
  uint64_t v52 = (char *)v35 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v37 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v4 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v6 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Locale();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for LocalizedStringResource();
  uint64_t v11 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  id v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002F214(&qword_1006A5668);
  uint64_t v14 = sub_10002F214(&qword_1006A5670);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v45 = *(void *)(v15 + 72);
  uint64_t v16 = v14 - 8;
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = swift_allocObject();
  uint64_t v38 = v18;
  *(_OWORD *)(v18 + 16) = xmmword_10052AC50;
  unint64_t v44 = v18 + v17;
  uint64_t v19 = v16;
  uint64_t v50 = (unsigned char *)v16;
  *(unsigned char *)(v18 + v17) = 0;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  unsigned int v41 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  id v42 = *(void (**)(char *))(v4 + 104);
  uint64_t v43 = v4 + 104;
  uint64_t v39 = v6;
  uint64_t v20 = v51;
  v42(v6);
  v35[1] = v13;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  uint64_t v46 = v11 + 56;
  id v21 = v37;
  v40(v37, 1, 1, v53);
  uint64_t v47 = type metadata accessor for DisplayRepresentation.Image();
  uint64_t v22 = *(void *)(v47 - 8);
  uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  uint64_t v49 = v22 + 56;
  v48(v52, 1, 1, v47);
  DisplayRepresentation.init(title:subtitle:image:)();
  unint64_t v24 = v44;
  uint64_t v23 = v45;
  uint64_t v36 = v44 + v45 + *(int *)(v19 + 56);
  *(unsigned char *)(v44 + v45) = 1;
  v35[2] = v10;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v25 = v41;
  id v26 = (void (*)(char *, uint64_t, uint64_t))v42;
  ((void (*)(char *, void, uint64_t))v42)(v39, v41, v20);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v27 = v40;
  v40(v21, 1, 1, v53);
  v48(v52, 1, 1, v47);
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v36 = 2 * v23;
  uint64_t v28 = (unsigned char *)(v24 + 2 * v23);
  v35[3] = &v28[*((int *)v50 + 14)];
  *uint64_t v28 = 2;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v29 = v39;
  v26(v39, v25, v51);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v27(v21, 1, 1, v53);
  uint64_t v30 = v52;
  uint64_t v31 = v47;
  uint64_t v32 = v48;
  v48(v52, 1, 1, v47);
  DisplayRepresentation.init(title:subtitle:image:)();
  id v33 = (unsigned char *)(v44 + v36 + v45);
  uint64_t v50 = &v33[*((int *)v50 + 14)];
  unsigned char *v33 = 3;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  ((void (*)(char *, void, uint64_t))v42)(v29, v41, v51);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v40(v21, 1, 1, v53);
  v32(v30, 1, 1, v31);
  DisplayRepresentation.init(title:subtitle:image:)();
  unint64_t result = sub_100169360(v38);
  static AttachmentViewSize.caseDisplayRepresentations = result;
  return result;
}

uint64_t *AttachmentViewSize.caseDisplayRepresentations.unsafeMutableAddressor()
{
  if (qword_10069AF90 != -1) {
    swift_once();
  }
  return &static AttachmentViewSize.caseDisplayRepresentations;
}

uint64_t static AttachmentViewSize.caseDisplayRepresentations.getter()
{
  if (qword_10069AF90 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static AttachmentViewSize.caseDisplayRepresentations.setter(uint64_t a1)
{
  if (qword_10069AF90 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static AttachmentViewSize.caseDisplayRepresentations = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static AttachmentViewSize.caseDisplayRepresentations.modify())()
{
  if (qword_10069AF90 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t AttachmentViewSize.init(attachmentViewSize:)(unsigned __int16 a1)
{
  if (a1 >= 3u) {
    return 0;
  }
  else {
    return 0x20103u >> (8 * a1);
  }
}

_UNKNOWN **static AttachmentViewSize.allCases.getter()
{
  return &off_10062CAA0;
}

uint64_t AttachmentViewSize.rawValue.getter(char a1)
{
  uint64_t result = 0x53746C7561666564;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6C6C616D73;
      break;
    case 2:
      uint64_t result = 0x6D756964656DLL;
      break;
    case 3:
      uint64_t result = 0x656772616CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1003C60C8(unsigned __int8 *a1, char *a2)
{
  return sub_100275F40(*a1, *a2);
}

unint64_t sub_1003C60D4@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s11MobileNotes18AttachmentViewSizeO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_1003C6104(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEB00000000657A69;
  uint64_t v3 = 0x53746C7561666564;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x6C6C616D73;
      goto LABEL_3;
    case 2:
      *a1 = 0x6D756964656DLL;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x656772616CLL;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

Swift::Int sub_1003C619C()
{
  return Hasher._finalize()();
}

uint64_t sub_1003C6274()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1003C6334()
{
  return Hasher._finalize()();
}

uint64_t sub_1003C6408@<X0>(uint64_t a1@<X8>)
{
  return sub_1002288F0(&qword_10069AF88, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static AttachmentViewSize.typeDisplayRepresentation, a1);
}

uint64_t sub_1003C6440(uint64_t a1)
{
  unint64_t v2 = sub_100158158();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_1003C648C(uint64_t a1)
{
  unint64_t v2 = sub_1003C7174();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

void sub_1003C64D8(void *a1@<X8>)
{
  *a1 = &off_10062B3E8;
}

unsigned char *_s11MobileNotes23SetAttachmentSizeIntentVACycfC_0()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v55 = v0;
  uint64_t v56 = v1;
  __chkstk_darwin(v0);
  uint64_t v54 = &v36[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v53 = &v36[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v52 = &v36[-v6];
  uint64_t v7 = sub_10002F214(&qword_10069B448);
  __chkstk_darwin(v7 - 8);
  uint64_t v51 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v9 - 8);
  uint64_t v46 = &v36[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = &v36[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = type metadata accessor for Locale();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v16 - 8);
  uint64_t v17 = type metadata accessor for LocalizedStringResource();
  uint64_t v48 = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v45 = &v36[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v50 = sub_10002F214((uint64_t *)&unk_10069B450);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v20 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  id v21 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 104);
  unsigned int v41 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v42 = v11;
  v21(v14, enum case for LocalizedStringResource.BundleDescription.main(_:), v11);
  uint64_t v43 = v21;
  uint64_t v44 = v12 + 104;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v21(v14, v20, v11);
  uint64_t v22 = v46;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v23 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56);
  uint64_t v47 = v18 + 56;
  uint64_t v49 = v23;
  v23(v22, 0, 1, v17);
  uint64_t v24 = type metadata accessor for AttachmentEntity();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v51, 1, 1, v24);
  uint64_t v25 = type metadata accessor for IntentDialog();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  uint64_t v39 = v27;
  uint64_t v40 = v26 + 56;
  v27(v52, 1, 1, v25);
  v27(v53, 1, 1, v25);
  uint64_t v59 = VisibleAccountsQuery.init(requireFolderCreationSupport:)();
  uint64_t v60 = v28;
  char v61 = v29 & 1;
  unsigned int v37 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v30 = *(void (**)(void))(v56 + 104);
  v56 += 104;
  uint64_t v38 = (void (*)(unsigned char *, void, uint64_t))v30;
  v30(v54);
  sub_100158104();
  uint64_t v51 = (unsigned char *)IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)();
  uint64_t v50 = sub_10002F214((uint64_t *)&unk_10069B4B0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v31 = v41;
  uint64_t v32 = v42;
  id v33 = v43;
  v43(v14, v41, v42);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v33(v14, v31, v32);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v49(v22, 0, 1, v48);
  LOBYTE(v59) = 4;
  NSString v34 = v39;
  v39(v52, 1, 1, v25);
  v34(v53, 1, 1, v25);
  v38(v54, v37, v55);
  sub_100158158();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  sub_10002F214((uint64_t *)&unk_10069B130);
  unint64_t v57 = 0xD000000000000024;
  unint64_t v58 = 0x8000000100549260;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  unint64_t v57 = 0xD000000000000021;
  unint64_t v58 = 0x8000000100549290;
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  return v51;
}

uint64_t sub_1003C6D60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003C6D8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003C6DB8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1003C6E08()
{
}

unint64_t _s11MobileNotes18AttachmentViewSizeO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10062CA20, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

unint64_t sub_1003C6E78()
{
  unint64_t result = qword_1006A55C8;
  if (!qword_1006A55C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A55C8);
  }
  return result;
}

unint64_t sub_1003C6ED0()
{
  unint64_t result = qword_1006A55D0;
  if (!qword_1006A55D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A55D0);
  }
  return result;
}

uint64_t sub_1003C6F24()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1003C6F40()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1003C6F60()
{
  unint64_t result = qword_1006A55E0;
  if (!qword_1006A55E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A55E0);
  }
  return result;
}

unint64_t sub_1003C6FB8()
{
  unint64_t result = qword_1006A55E8;
  if (!qword_1006A55E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A55E8);
  }
  return result;
}

unint64_t sub_1003C7010()
{
  unint64_t result = qword_1006A55F0;
  if (!qword_1006A55F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A55F0);
  }
  return result;
}

unint64_t sub_1003C7068()
{
  unint64_t result = qword_1006A55F8;
  if (!qword_1006A55F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A55F8);
  }
  return result;
}

unint64_t sub_1003C70C0()
{
  unint64_t result = qword_1006A5600;
  if (!qword_1006A5600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5600);
  }
  return result;
}

unint64_t sub_1003C7118()
{
  unint64_t result = qword_1006A5608;
  if (!qword_1006A5608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5608);
  }
  return result;
}

unint64_t sub_1003C7174()
{
  unint64_t result = qword_1006A5618;
  if (!qword_1006A5618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5618);
  }
  return result;
}

uint64_t sub_1003C71C8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1003C721C()
{
  unint64_t result = qword_1006A5628;
  if (!qword_1006A5628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5628);
  }
  return result;
}

unint64_t sub_1003C7274()
{
  unint64_t result = qword_1006A5630;
  if (!qword_1006A5630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5630);
  }
  return result;
}

unint64_t sub_1003C72CC()
{
  unint64_t result = qword_1006A5638;
  if (!qword_1006A5638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5638);
  }
  return result;
}

uint64_t sub_1003C7320()
{
  return sub_10001DFB0(&qword_1006A5640, &qword_1006A5648);
}

ValueMetadata *type metadata accessor for SetAttachmentSizeIntent()
{
  return &type metadata for SetAttachmentSizeIntent;
}

unsigned char *storeEnumTagSinglePayload for AttachmentViewSize(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003C7438);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AttachmentViewSize()
{
  return &type metadata for AttachmentViewSize;
}

uint64_t sub_1003C7470()
{
  return sub_10001DFB0(&qword_1006A5650, (uint64_t *)&unk_1006A5658);
}

uint64_t ReplaceSelectionIntent.text.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AttributedString();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  IntentParameter.wrappedValue.setter();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void *ReplaceSelectionIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static ReplaceSelectionIntent.persistentIdentifier;
}

uint64_t sub_1003C769C()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100032974(v6, static ReplaceSelectionIntent.title);
  sub_10003293C(v6, (uint64_t)static ReplaceSelectionIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t ReplaceSelectionIntent.title.unsafeMutableAddressor()
{
  if (qword_10069AF98 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();

  return sub_10003293C(v0, (uint64_t)static ReplaceSelectionIntent.title);
}

uint64_t static ReplaceSelectionIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069AF98 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static ReplaceSelectionIntent.title);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

void *ReplaceSelectionIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static ReplaceSelectionIntent.openAppWhenRun;
}

uint64_t static ReplaceSelectionIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t static ReplaceSelectionIntent.parameterSummary.getter()
{
  uint64_t v0 = sub_10002F214(&qword_1006A5678);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214(&qword_1006A5680);
  __chkstk_darwin(v1);
  sub_1000344C0();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._object = (void *)0x800000010055B8E0;
  v2._countAndFlagsBits = 0xD000000000000017;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_1006A5688);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_1003C7E24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s11MobileNotes22ReplaceSelectionIntentVACycfC_0();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t _s11MobileNotes22ReplaceSelectionIntentVACycfC_0()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v28 = *(void *)(v0 - 8);
  uint64_t v29 = v0;
  __chkstk_darwin(v0);
  uint64_t v27 = (char *)v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v26 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_10069CE50);
  __chkstk_darwin(v4 - 8);
  uint64_t v25 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  uint64_t v24 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  v23[1] = sub_10002F214((uint64_t *)&unk_10069B1F0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  uint64_t v18 = v24;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  uint64_t v19 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v25, 1, 1, v19);
  uint64_t v20 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v26, 1, 1, v20);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, enum case for InputConnectionBehavior.default(_:), v29);
  uint64_t v21 = IntentParameter<>.init(title:description:default:requestValueDialog:inputConnectionBehavior:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  unint64_t v30 = 0xD000000000000021;
  unint64_t v31 = 0x8000000100549290;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069B130);
  unint64_t v30 = 0xD000000000000024;
  unint64_t v31 = 0x8000000100549260;
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  return v21;
}

uint64_t sub_1003C8424@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003C8450()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1003C846C()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for ReplaceSelectionIntent()
{
  return &type metadata for ReplaceSelectionIntent;
}

uint64_t sub_1003C8498()
{
  return sub_10001DFB0(&qword_1006A56B0, &qword_1006A56B8);
}

id sub_1003C84D4()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes37FolderComposerSelectionViewController____lazy_storage___collectionView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC11MobileNotes37FolderComposerSelectionViewController____lazy_storage___collectionView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC11MobileNotes37FolderComposerSelectionViewController____lazy_storage___collectionView);
  }
  else
  {
    id v4 = sub_1003C8548(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1003C8538(void *a1@<X8>)
{
  *a1 = &off_10062B6E0;
}

id sub_1003C8548(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v3 = [objc_allocWithZone((Class)UICollectionViewCompositionalLayoutConfiguration) init];
  id v4 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  v9[4] = sub_1003C9774;
  v9[5] = v2;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_10028D8FC;
  v9[3] = &unk_10063A0F0;
  uint64_t v5 = _Block_copy(v9);
  id v6 = [v4 initWithSectionProvider:v5 configuration:v3];

  _Block_release(v5);
  swift_release();
  id v7 = [objc_allocWithZone((Class)UICollectionView) initWithFrame:v6 collectionViewLayout:0.0, 0.0, 0.0, 0.0];

  [v7 setDelegate:a1];
  return v7;
}

void sub_1003C86A8()
{
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for FolderComposerSelectionViewController();
  [super viewDidLoad];
  id v1 = [v0 view];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = sub_1003C84D4();
    [v2 addSubview:v3];

    id v4 = sub_1003C84D4();
    [v4 ic_addAnchorsToFillSuperview];

    id v5 = [v0 navigationController];
    if (!v5)
    {
      [v0 setPreferredContentSize:*(double *)&v0[OBJC_IVAR____TtC11MobileNotes37FolderComposerSelectionViewController_preferredPopoverWidth], *(double *)&v0[OBJC_IVAR____TtC11MobileNotes37FolderComposerSelectionViewController_estimatedPopoverHeight]];
      id v9 = sub_1003C84D4();
      swift_getKeyPath();
      *(void *)(swift_allocObject() + 16) = v0;
      id v6 = v0;
      uint64_t v7 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
      swift_release();
      swift_release();

      uint64_t v8 = *(void **)&v6[OBJC_IVAR____TtC11MobileNotes37FolderComposerSelectionViewController_contentSizeObservation];
      *(void *)&v6[OBJC_IVAR____TtC11MobileNotes37FolderComposerSelectionViewController_contentSizeObservation] = v7;
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1003C8838(uint64_t a1, uint64_t a2, char *a3)
{
  double v4 = *(double *)&a3[OBJC_IVAR____TtC11MobileNotes37FolderComposerSelectionViewController_preferredPopoverWidth];
  id v5 = sub_1003C84D4();
  [v5 contentSize];
  double v7 = v6;

  id v8 = sub_1003C84D4();
  [v8 contentSize];
  double v10 = v9;

  if (v10 > 0.0)
  {
    id v11 = [a3 navigationController];

    if (!v11)
    {
      [a3 preferredContentSize];
      if (v13 != v4 || v12 != v7)
      {
        [a3 setPreferredContentSize:v4, v7];
      }
    }
  }
}

void *sub_1003C897C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UICollectionLayoutListConfiguration();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  double v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  id v11 = (void *)Strong;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v2);
  UICollectionLayoutListConfiguration.init(appearance:)();
  sub_100031418(0, (unint64_t *)&qword_1006A1408);
  double v12 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
  double v13 = v12;
  if (a1)
  {
    [v12 contentInsets];
    [v13 setContentInsets:0.0];
  }
  else
  {
    id v14 = [v11 parentViewController];
    if (v14)
    {
      uint64_t v15 = v14;
      self;
      uint64_t v16 = swift_dynamicCastObjCClass();

      if (v16) {
        double v17 = 0.0;
      }
      else {
        double v17 = 16.0;
      }
    }
    else
    {
      double v17 = 16.0;
    }
    [v13 contentInsets];
    [v13 setContentInsets:v17];
  }
  if ((*(uint64_t (**)(uint64_t))((swift_isaMask & *v11) + 0xA8))(a1))
  {
    uint64_t v18 = self;
    id v19 = [v18 fractionalWidthDimension:1.0];
    id v20 = [v18 estimatedDimension:*(double *)((char *)v11+ OBJC_IVAR____TtC11MobileNotes37FolderComposerSelectionViewController_estimatedHeaderHeight)];
    id v21 = [self sizeWithWidthDimension:v19 heightDimension:v20];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v22 = v6;
    id v23 = v21;
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v25 = [self boundarySupplementaryItemWithLayoutSize:v23 elementKind:v24 alignment:1];

    id v26 = v25;
    [v26 contentInsets];
    [v26 setContentInsets:16.0];

    sub_10002F214(&qword_10069BA00);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_100529F20;
    *(void *)(v27 + 32) = v26;
    uint64_t v44 = v27;
    specialized Array._endMutation()();
    sub_100031418(0, &qword_1006A5750);
    id v28 = v26;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v13 setBoundarySupplementaryItems:isa];

    uint64_t v6 = v22;
  }
  if ((*(uint64_t (**)(uint64_t))((swift_isaMask & *v11) + 0xB0))(a1))
  {
    unint64_t v30 = self;
    id v31 = [v30 fractionalWidthDimension:1.0];
    id v32 = [v30 estimatedDimension:*(double *)((char *)v11+ OBJC_IVAR____TtC11MobileNotes37FolderComposerSelectionViewController_estimatedFooterHeight)];
    id v33 = [self sizeWithWidthDimension:v31 heightDimension:v32];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v34 = v33;
    NSString v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v36 = [self boundarySupplementaryItemWithLayoutSize:v34 elementKind:v35 alignment:5];

    id v37 = v36;
    [v37 contentInsets];
    [v37 setContentInsets:0.0];

    id v38 = v37;
    id v39 = [v13 boundarySupplementaryItems];
    sub_100031418(0, &qword_1006A5750);
    uint64_t v40 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v44 = v40;
    id v41 = v38;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    Class v42 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v13 setBoundarySupplementaryItems:v42];

    [v13 contentInsets];
    [v13 setContentInsets:];

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v13;
}

id sub_1003C909C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = v3;
  UUID.init()();
  *(void *)&v6[OBJC_IVAR____TtC11MobileNotes37FolderComposerSelectionViewController____lazy_storage___collectionView] = 0;
  *(void *)&v6[OBJC_IVAR____TtC11MobileNotes37FolderComposerSelectionViewController_verticalInset] = 0x4030000000000000;
  *(void *)&v6[OBJC_IVAR____TtC11MobileNotes37FolderComposerSelectionViewController_estimatedHeaderHeight] = 0x4046000000000000;
  *(void *)&v6[OBJC_IVAR____TtC11MobileNotes37FolderComposerSelectionViewController_estimatedFooterHeight] = 0x4046000000000000;
  *(void *)&v6[OBJC_IVAR____TtC11MobileNotes37FolderComposerSelectionViewController_preferredPopoverWidth] = 0x4079000000000000;
  *(void *)&v6[OBJC_IVAR____TtC11MobileNotes37FolderComposerSelectionViewController_estimatedPopoverHeight] = 0x4069000000000000;
  *(void *)&v6[OBJC_IVAR____TtC11MobileNotes37FolderComposerSelectionViewController_contentSizeObservation] = 0;

  if (a2)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  v10.receiver = v6;
  v10.super_class = (Class)type metadata accessor for FolderComposerSelectionViewController();
  id v8 = [super initWithNibName:v7 bundle:a3];

  return v8;
}

id sub_1003C9218(void *a1)
{
  uint64_t v3 = v1;
  UUID.init()();
  *(void *)&v3[OBJC_IVAR____TtC11MobileNotes37FolderComposerSelectionViewController____lazy_storage___collectionView] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11MobileNotes37FolderComposerSelectionViewController_verticalInset] = 0x4030000000000000;
  *(void *)&v3[OBJC_IVAR____TtC11MobileNotes37FolderComposerSelectionViewController_estimatedHeaderHeight] = 0x4046000000000000;
  *(void *)&v3[OBJC_IVAR____TtC11MobileNotes37FolderComposerSelectionViewController_estimatedFooterHeight] = 0x4046000000000000;
  *(void *)&v3[OBJC_IVAR____TtC11MobileNotes37FolderComposerSelectionViewController_preferredPopoverWidth] = 0x4079000000000000;
  *(void *)&v3[OBJC_IVAR____TtC11MobileNotes37FolderComposerSelectionViewController_estimatedPopoverHeight] = 0x4069000000000000;
  *(void *)&v3[OBJC_IVAR____TtC11MobileNotes37FolderComposerSelectionViewController_contentSizeObservation] = 0;

  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for FolderComposerSelectionViewController();
  id v4 = [super initWithCoder:a1];

  return v4;
}

id sub_1003C9320()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FolderComposerSelectionViewController();
  return [super dealloc];
}

uint64_t sub_1003C93E8()
{
  return type metadata accessor for FolderComposerSelectionViewController();
}

uint64_t type metadata accessor for FolderComposerSelectionViewController()
{
  uint64_t result = qword_1006A5720;
  if (!qword_1006A5720) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1003C943C()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FolderComposerSelectionViewController.Section(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003C95B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FolderComposerSelectionViewController.Section()
{
  return &type metadata for FolderComposerSelectionViewController.Section;
}

unint64_t sub_1003C95F4()
{
  unint64_t result = qword_1006A5730;
  if (!qword_1006A5730)
  {
    sub_10001DFF4(&qword_1006A5738);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5730);
  }
  return result;
}

unint64_t sub_1003C9654()
{
  unint64_t result = qword_1006A5740;
  if (!qword_1006A5740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5740);
  }
  return result;
}

const char *sub_1003C96A8()
{
  return "contentSize";
}

id sub_1003C96B4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 contentSize];
  *a2 = v4;
  a2[1] = v5;
  return result;
}

id sub_1003C96E8(double *a1, id *a2)
{
  return [*a2 setContentSize:*a1, a1[1]];
}

uint64_t sub_1003C96FC()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1003C9734(uint64_t a1, uint64_t a2)
{
  sub_1003C8838(a1, a2, *(char **)(v2 + 16));
}

uint64_t sub_1003C973C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void *sub_1003C9774(uint64_t a1)
{
  return sub_1003C897C(a1);
}

id sub_1003C9780()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v2 = [objc_allocWithZone((Class)UICollectionViewCompositionalLayoutConfiguration) init];
  id v3 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  aBlock[4] = sub_1003C998C;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10028D8FC;
  void aBlock[3] = &unk_10063A118;
  uint64_t v4 = _Block_copy(aBlock);
  id v5 = [v3 initWithSectionProvider:v4 configuration:v2];

  _Block_release(v4);
  swift_release();
  v8.receiver = v0;
  v8.super_class = ObjectType;
  [super initWithFrame:v5 collectionViewLayout:0.0, 0.0, 0.0, 0.0];

  return v6;
}

uint64_t type metadata accessor for FolderComposerCollectionView()
{
  return self;
}

void *sub_1003C998C()
{
  uint64_t v0 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UICollectionLayoutListConfiguration();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  NSString v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v0);
  UICollectionLayoutListConfiguration.init(appearance:)();
  sub_1003C9B60();
  objc_super v8 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
  [v8 contentInsets];
  [v8 setContentInsets:8.0];
  [v8 contentInsets];
  [v8 setContentInsets:];
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

unint64_t sub_1003C9B60()
{
  unint64_t result = qword_1006A1408;
  if (!qword_1006A1408)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1006A1408);
  }
  return result;
}

uint64_t sub_1003C9BA0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100032974(v0, qword_1006A5780);
  sub_10003293C(v0, (uint64_t)qword_1006A5780);
  return static Logger.ui.getter();
}

id sub_1003C9CA4()
{
  swift_bridgeObjectRetain();
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v0;
}

id sub_1003C9D00(void *a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  id v8 = sub_1003CAF38(a1, a2, a3);

  return v8;
}

id sub_1003C9DC0()
{
  id result = [*(id *)&v0[OBJC_IVAR___ICRecoverNoteAlertController_note] managedObjectContext];
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v0;
    *(void *)(v3 + 24) = v2;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = sub_1003CAF20;
    *(void *)(v4 + 24) = v3;
    v8[4] = sub_100031D5C;
    v8[5] = v4;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    _OWORD v8[2] = sub_100031D30;
    v8[3] = &unk_10063A220;
    uint64_t v5 = _Block_copy(v8);
    uint64_t v6 = v0;
    id v7 = v2;
    swift_retain();
    swift_release();
    [v7 performBlockAndWait:v5];

    _Block_release(v5);
    LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    id result = (id)swift_release();
    if (v7) {
      __break(1u);
    }
  }
  return result;
}

void sub_1003C9F44(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + OBJC_IVAR___ICRecoverNoteAlertController_note);
  id v4 = [v3 account];
  if (v4)
  {
    id v11 = v4;
    id v5 = [v4 defaultFolder];
    [v3 undoablySetFolder:v5];

    id v6 = [self shared];
    id v7 = [self mainBundle];
    NSString v8 = String._bridgeToObjectiveC()();
    id v9 = [v7 localizedStringForKey:v8 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v6 setActionName:v10];

    [a2 ic_save];
  }
}

uint64_t sub_1003CA1E4(void *a1)
{
  unsigned int v3 = [*(id *)(v1 + OBJC_IVAR___ICRecoverNoteAlertController_note) isSharedReadOnly];
  if (v3)
  {
    if (qword_10069AFA0 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10003293C(v4, (uint64_t)qword_1006A5780);
    id v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Cannot show RecoverNoteAlertController for read-only shared note", v7, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    id v5 = sub_1003CA35C();
    [a1 presentViewController:v5 animated:1 completion:0];
  }

  return v3 ^ 1;
}

id sub_1003CA35C()
{
  uint64_t v12 = *(void *)(v0 + OBJC_IVAR___ICRecoverNoteAlertController_message);
  uint64_t v13 = *(void *)(v0 + OBJC_IVAR___ICRecoverNoteAlertController_message + 8);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 32;
  v1._object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR___ICRecoverNoteAlertController_detail);
  unsigned int v3 = *(void **)(v0 + OBJC_IVAR___ICRecoverNoteAlertController_detail + 8);
  swift_bridgeObjectRetain();
  v4._countAndFlagsBits = v2;
  v4._object = v3;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v7 = [self alertControllerWithTitle:v5 message:v6 preferredStyle:1 v12, v13];

  swift_bridgeObjectRetain();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [self actionWithTitle:v8 style:1 handler:0];

  [v7 addAction:v9];
  id v10 = sub_1003CA510();
  [v7 addAction:v10];

  return v7;
}

id sub_1003CA510()
{
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = v0;
  swift_bridgeObjectRetain();
  id v2 = v0;
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v7[4] = sub_1003CAED8;
  v7[5] = v1;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_1002B6294;
  v7[3] = &unk_10063A1A8;
  Swift::String v4 = _Block_copy(v7);
  swift_release();
  id v5 = [self actionWithTitle:v3 style:0 handler:v4];
  _Block_release(v4);

  return v5;
}

void sub_1003CA638(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)(a2 + OBJC_IVAR___ICRecoverNoteAlertController_notificationCenter);
  NSString v4 = String._bridgeToObjectiveC()();
  [v3 postNotificationName:v4 object:a2];

  sub_1003C9DC0();
  sub_1003CA6C8();
}

void *NSNotification.RecoverNoteAlertControllerWillRecoverNoteNotification.unsafeMutableAddressor()
{
  return &static NSNotification.RecoverNoteAlertControllerWillRecoverNoteNotification;
}

void sub_1003CA6C8()
{
  id v1 = [self valueWithRange:*(void *)(v0 + OBJC_IVAR___ICRecoverNoteAlertController_selectedRange), *(void *)(v0 + OBJC_IVAR___ICRecoverNoteAlertController_selectedRange + 8)];
  sub_10002F214(&qword_1006A5800);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100527F30;
  *(void *)(inited + 32) = 0xD00000000000003BLL;
  *(void *)(inited + 40) = 0x800000010055BB40;
  id v3 = *(void **)(v0 + OBJC_IVAR___ICRecoverNoteAlertController_note);
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = 0xD000000000000041;
  *(void *)(inited + 64) = 0x800000010055BB80;
  *(void *)(inited + 72) = v1;
  id v4 = v3;
  id v5 = v1;
  unint64_t v6 = sub_100169388(inited);
  id v7 = *(id *)(v0 + OBJC_IVAR___ICRecoverNoteAlertController_notificationCenter);
  NSString v8 = String._bridgeToObjectiveC()();
  sub_1003CA884(v6);
  swift_bridgeObjectRelease();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v7 postNotificationName:v8 object:v0 userInfo:isa];
}

void *NSNotification.RecoverNoteAlertControllerDidRecoverNoteNotification.unsafeMutableAddressor()
{
  return &static NSNotification.RecoverNoteAlertControllerDidRecoverNoteNotification;
}

void *NSNotification.RecoverNoteAlertControllerDidRecoverNoteNotificationNoteKey.unsafeMutableAddressor()
{
  return &static NSNotification.RecoverNoteAlertControllerDidRecoverNoteNotificationNoteKey;
}

void *NSNotification.RecoverNoteAlertControllerDidRecoverNoteNotificationRangeValueKey.unsafeMutableAddressor()
{
  return &static NSNotification.RecoverNoteAlertControllerDidRecoverNoteNotificationRangeValueKey;
}

uint64_t sub_1003CA884(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_10002F214(&qword_10069C4A0);
    id v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    id v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  unint64_t v6 = (char *)(v2 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    double v17 = (void *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v18 = v17[1];
    id v19 = *(void **)(*(void *)(a1 + 56) + 8 * v12);
    *(void *)&v37[0] = *v17;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    v19;
    swift_dynamicCast();
    sub_1003CAE60();
    swift_dynamicCast();
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_100032E84(&v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_100032E84(v36, v37);
    sub_100032E84(v37, &v33);
    uint64_t result = AnyHashable._rawHashValue(seed:)(v2[5]);
    uint64_t v20 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)])) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)&v6[8 * v22];
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)&v6[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    uint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_100032E84(&v33, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_10017B518();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

id sub_1003CAC68()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RecoverNoteAlertController();
  return [super dealloc];
}

unint64_t static NSNotification.RecoverNoteAlertControllerWillRecoverNoteNotification.getter()
{
  return 0xD000000000000035;
}

unint64_t static NSNotification.RecoverNoteAlertControllerDidRecoverNoteNotification.getter()
{
  return 0xD000000000000034;
}

unint64_t static NSNotification.RecoverNoteAlertControllerDidRecoverNoteNotificationNoteKey.getter()
{
  return 0xD00000000000003BLL;
}

unint64_t static NSNotification.RecoverNoteAlertControllerDidRecoverNoteNotificationRangeValueKey.getter()
{
  return 0xD000000000000041;
}

uint64_t type metadata accessor for RecoverNoteAlertController()
{
  return self;
}

unint64_t sub_1003CAE60()
{
  unint64_t result = qword_1006A0020;
  if (!qword_1006A0020)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1006A0020);
  }
  return result;
}

uint64_t sub_1003CAEA0()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1003CAED8(uint64_t a1)
{
  sub_1003CA638(a1, *(void *)(v1 + 16));
}

uint64_t sub_1003CAEE0()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1003CAF20()
{
  sub_1003C9F44(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1003CAF28()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_1003CAF38(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = OBJC_IVAR___ICRecoverNoteAlertController_notificationCenter;
  unint64_t v6 = self;
  id v7 = v3;
  *(void *)&v3[v5] = [v6 defaultCenter];
  int64_t v8 = (uint64_t *)&v7[OBJC_IVAR___ICRecoverNoteAlertController_title];
  unint64_t v9 = self;
  id v10 = [v9 mainBundle];
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v10 localizedStringForKey:v11 value:0 table:0];

  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  *int64_t v8 = v13;
  v8[1] = v15;
  int64_t v16 = (uint64_t *)&v7[OBJC_IVAR___ICRecoverNoteAlertController_message];
  id v17 = [v9 mainBundle];
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v17 localizedStringForKey:v18 value:0 table:0];

  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;

  *int64_t v16 = v20;
  v16[1] = v22;
  char v23 = (uint64_t *)&v7[OBJC_IVAR___ICRecoverNoteAlertController_detail];
  id v24 = [v9 mainBundle];
  NSString v25 = String._bridgeToObjectiveC()();
  id v26 = [v24 localizedStringForKey:v25 value:0 table:0];

  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v29 = v28;

  *char v23 = v27;
  v23[1] = v29;
  long long v30 = (uint64_t *)&v7[OBJC_IVAR___ICRecoverNoteAlertController_cancelButtonTitle];
  id v31 = [v9 mainBundle];
  NSString v32 = String._bridgeToObjectiveC()();
  id v33 = [v31 localizedStringForKey:v32 value:0 table:0];

  uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v36 = v35;

  *long long v30 = v34;
  v30[1] = v36;
  id v37 = (uint64_t *)&v7[OBJC_IVAR___ICRecoverNoteAlertController_recoverButtonTitle];
  id v38 = [v9 mainBundle];
  NSString v39 = String._bridgeToObjectiveC()();
  id v40 = [v38 localizedStringForKey:v39 value:0 table:0];

  uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v43 = v42;

  *id v37 = v41;
  v37[1] = v43;
  *(void *)&v7[OBJC_IVAR___ICRecoverNoteAlertController_note] = a1;
  uint64_t v44 = &v7[OBJC_IVAR___ICRecoverNoteAlertController_selectedRange];
  *(void *)uint64_t v44 = a2;
  *((void *)v44 + 1) = a3;
  id v45 = a1;

  v49.receiver = v7;
  v49.super_class = (Class)type metadata accessor for RecoverNoteAlertController();
  return [super init];
}

double InsertNoteLinkIntent.init()@<D0>(uint64_t a1@<X8>)
{
  sub_1003CD2A4((uint64_t *)v4);
  long long v2 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v2;
  double result = *(double *)&v5;
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = v6;
  return result;
}

uint64_t InsertNoteLinkIntent.linkedNote.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NoteEntity(0);
  __chkstk_darwin(v2 - 8);
  sub_10018991C(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  IntentParameter.wrappedValue.setter();
  return sub_100189980(a1);
}

uint64_t InsertNoteLinkIntent.target.setter(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_10069B1D0);
  __chkstk_darwin(v2 - 8);
  sub_1002AF970(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  IntentParameter.wrappedValue.setter();
  return sub_10002B754(a1, &qword_10069B1D0);
}

void *InsertNoteLinkIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static InsertNoteLinkIntent.persistentIdentifier;
}

uint64_t sub_1003CB444()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100032974(v6, static InsertNoteLinkIntent.title);
  sub_10003293C(v6, (uint64_t)static InsertNoteLinkIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t InsertNoteLinkIntent.title.unsafeMutableAddressor()
{
  if (qword_10069AFA8 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();

  return sub_10003293C(v0, (uint64_t)static InsertNoteLinkIntent.title);
}

uint64_t static InsertNoteLinkIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069AFA8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static InsertNoteLinkIntent.title);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t static InsertNoteLinkIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t static InsertNoteLinkIntent.parameterSummary.getter()
{
  uint64_t v0 = sub_10002F214(&qword_1006A5808);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214(&qword_1006A5810);
  __chkstk_darwin(v1);
  sub_1000349B0();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._countAndFlagsBits = 0x6C20747265736E49;
  v2._object = (void *)0xEF206F74206B6E69;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_1006A5818);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 544106784;
  v3._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  sub_10002F214(&qword_1006A5820);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:_:)();
}

uint64_t sub_1003CBC20()
{
  swift_getKeyPath();
  sub_1000349B0();
  uint64_t v0 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)();
  swift_release();
  sub_10002F214(&qword_10069BA00);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100529F20;
  *(void *)(v1 + 32) = v0;
  specialized Array._endMutation()();
  swift_retain();
  uint64_t v2 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  swift_release();
  return v2;
}

uint64_t InsertNoteLinkIntent.$useNoteTitleAsName.getter()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t InsertNoteLinkIntent.useNoteTitleAsName.getter()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t InsertNoteLinkIntent.useNoteTitleAsName.setter()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t (*InsertNoteLinkIntent.useNoteTitleAsName.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_10015ACE0;
}

uint64_t InsertNoteLinkIntent.perform()(uint64_t a1)
{
  v2[18] = a1;
  v2[19] = v1;
  sub_10002F214((uint64_t *)&unk_10069C9B0);
  v2[20] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for NoteEntity(0);
  v2[21] = v3;
  v2[22] = *(void *)(v3 - 8);
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  sub_10002F214(&qword_10069B1D0);
  v2[26] = swift_task_alloc();
  v2[27] = swift_task_alloc();
  return _swift_task_switch(sub_1003CBF1C, 0, 0);
}

uint64_t sub_1003CBF1C()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[22];
  uint64_t v4 = v0[19];
  v0[28] = *(void *)(v4 + 48);
  AppDependency.wrappedValue.getter();
  uint64_t v5 = (void *)v0[13];
  id v6 = [v5 modernManagedObjectContext];
  v0[29] = v6;

  uint64_t v7 = swift_allocObject();
  v0[30] = v7;
  *(void *)(v7 + 16) = 0;
  uint64_t v8 = swift_allocObject();
  v0[31] = v8;
  *(void *)(v8 + 16) = 0;
  v0[32] = *(void *)(v4 + 8);
  IntentParameter.wrappedValue.getter();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  LODWORD(v2) = v9(v1, 1, v2);
  sub_10002B754(v1, &qword_10069B1D0);
  if (v2 == 1)
  {
    uint64_t v10 = v0[20];
    IntentParameter.projectedValue.getter();
    uint64_t v11 = type metadata accessor for IntentDialog();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
    type metadata accessor for AppIntentError();
    sub_1003CEB18((unint64_t *)&unk_1006A2DB0, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
    swift_allocError();
    IntentParameter.needsValueError(_:)();
    swift_release();
    sub_10002B754(v10, (uint64_t *)&unk_10069C9B0);
    swift_willThrow();
    swift_release();
    swift_release();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
  else
  {
    uint64_t v14 = v0[26];
    uint64_t v15 = v0[21];
    IntentParameter.wrappedValue.getter();
    int v16 = v9(v14, 1, v15);
    uint64_t v17 = v0[26];
    if (v16)
    {
      sub_10002B754(v0[26], &qword_10069B1D0);
      v0[36] = *(void *)v0[19];
      IntentParameter.wrappedValue.getter();
      AppDependency.wrappedValue.getter();
      uint64_t v18 = v0[16];
      v0[37] = v18;
      id v24 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10069CE40 + dword_10069CE40);
      swift_retain();
      id v19 = (void *)swift_task_alloc();
      v0[38] = v19;
      *id v19 = v0;
      v19[1] = sub_1003CC5E4;
      uint64_t v20 = v0[31];
      uint64_t v21 = v18;
    }
    else
    {
      sub_10018991C(v0[26], v0[25]);
      sub_10002B754(v17, &qword_10069B1D0);
      AppDependency.wrappedValue.getter();
      uint64_t v22 = v0[17];
      v0[33] = v22;
      id v24 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10069CE40 + dword_10069CE40);
      swift_retain();
      char v23 = (void *)swift_task_alloc();
      v0[34] = v23;
      *char v23 = v0;
      v23[1] = sub_1003CC368;
      uint64_t v21 = v22;
      uint64_t v20 = v7;
    }
    return v24((uint64_t)v24, v21, (uint64_t)sub_1001B5934, v20);
  }
}

uint64_t sub_1003CC368()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 280) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void **)(v2 + 264);
  sub_100189980(*(void *)(v2 + 200));
  swift_release();

  if (v0) {
    uint64_t v4 = sub_1003CCE60;
  }
  else {
    uint64_t v4 = sub_1003CC4D8;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1003CC4D8()
{
  *(void *)(v0 + 288) = **(void **)(v0 + 152);
  IntentParameter.wrappedValue.getter();
  AppDependency.wrappedValue.getter();
  *(void *)(v0 + 296) = *(void *)(v0 + 128);
  uint64_t v3 = (uint64_t (*)(void))((char *)&dword_10069CE40 + dword_10069CE40);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 304) = v1;
  void *v1 = v0;
  v1[1] = sub_1003CC5E4;
  return v3();
}

uint64_t sub_1003CC5E4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 312) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void **)(v2 + 296);
  sub_100189980(*(void *)(v2 + 192));
  swift_release();

  if (v0) {
    uint64_t v4 = sub_1003CCF24;
  }
  else {
    uint64_t v4 = sub_1003CC754;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1003CC754()
{
  *(void *)(v0 + 88) = 0;
  uint64_t v1 = *(void *)(v0 + 240);
  *(void *)(v0 + 96) = 0;
  swift_beginAccess();
  uint64_t v2 = *(void **)(v1 + 16);
  if (!v2)
  {
LABEL_7:
    uint64_t v11 = *(void **)(v0 + 232);
    uint64_t v12 = *(void *)(v0 + 160);
    IntentParameter.projectedValue.getter();
    uint64_t v13 = type metadata accessor for IntentDialog();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    type metadata accessor for AppIntentError();
    sub_1003CEB18((unint64_t *)&unk_1006A2DB0, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
    swift_allocError();
    IntentParameter.needsValueError(_:)();
    swift_release();
    sub_10002B754(v12, (uint64_t *)&unk_10069C9B0);
    swift_willThrow();

    sub_1003CDEF8(*(void **)(v0 + 88), *(void **)(v0 + 96));
    swift_release();
    goto LABEL_16;
  }
  uint64_t v3 = *(void *)(v0 + 248);
  swift_beginAccess();
  uint64_t v4 = *(void **)(v3 + 16);
  if (!v4) {
    goto LABEL_22;
  }
  id v5 = v2;
  id v6 = v4;
  if (!objc_msgSend(v5, "ic_isModernNoteType") || !objc_msgSend(v6, "ic_isModernNoteType"))
  {
    uint64_t v14 = *(void **)(v0 + 232);
    sub_100173F8C();
    swift_allocError();
    *uint64_t v15 = 2;
    swift_willThrow();

    sub_1003CDEF8(*(void **)(v0 + 88), *(void **)(v0 + 96));
    swift_release();
    goto LABEL_16;
  }
  uint64_t v7 = *(void *)(v0 + 312);
  uint64_t v8 = *(void *)(v0 + 232);
  uint64_t v9 = *(void *)(v0 + 152);
  uint64_t v10 = (void *)swift_task_alloc();
  v10[2] = v8;
  v10[3] = v5;
  v10[4] = v6;
  v10[5] = v0 + 88;
  v10[6] = v9;
  NSManagedObjectContext.performAndWait<A>(_:)();
  if (v7)
  {

    swift_task_dealloc();
    sub_1003CDEF8(*(void **)(v0 + 88), *(void **)(v0 + 96));
    swift_release();
LABEL_16:
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
    return v25();
  }

  swift_task_dealloc();
  int v16 = *(void **)(v0 + 88);
  *(void *)(v0 + 320) = v16;
  if (!v16)
  {
LABEL_22:
    if (*(void *)(*(void *)(v0 + 240) + 16))
    {
      uint64_t v23 = *(void *)(v0 + 248);
      swift_beginAccess();
      if (*(void *)(v23 + 16))
      {
        id v24 = *(void **)(v0 + 232);
        type metadata accessor for ICError(0);
        *(void *)(v0 + 120) = 227;
        sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
        sub_1003CEB18((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
        _BridgedStoredNSError.init(_:userInfo:)();
        swift_willThrow();

        swift_release();
        goto LABEL_16;
      }
    }
    goto LABEL_7;
  }
  uint64_t v17 = *(void **)(v0 + 96);
  *(void *)(v0 + 328) = v17;
  sub_1003CDF38(v16, v17);
  id v18 = v16;
  id v19 = v17;
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 336) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_1003CCC04;
  uint64_t v21 = *(void *)(v0 + 184);
  return NoteEntity.init(for:in:)(v21, (uint64_t)v18, (uint64_t)v19);
}

uint64_t sub_1003CCC04()
{
  *(void *)(*(void *)v1 + 344) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1003CCFE8;
  }
  else {
    uint64_t v2 = sub_1003CCD18;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003CCD18()
{
  uint64_t v2 = *(void **)(v0 + 320);
  uint64_t v1 = *(void **)(v0 + 328);
  uint64_t v3 = *(void **)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 184);
  sub_1003CEB18((unint64_t *)&qword_10069CD70, (void (*)(uint64_t))type metadata accessor for NoteEntity);
  static IntentResult.result<A>(value:)();

  sub_100189980(v4);
  sub_1003CDEF8(*(void **)(v0 + 88), *(void **)(v0 + 96));
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1003CCE60()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003CCF24()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003CCFE8()
{
  uint64_t v2 = *(void **)(v0 + 320);
  uint64_t v1 = *(void **)(v0 + 328);

  sub_1003CDEF8(*(void **)(v0 + 88), *(void **)(v0 + 96));
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void sub_1003CD0C0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v10 = [a1 ic_existingObjectWithID:a2];
  if (v10)
  {
    uint64_t v11 = v10;
    self;
    uint64_t v12 = swift_dynamicCastObjCClass();
    if (v12)
    {
      uint64_t v13 = (void *)v12;
      id v14 = [a1 ic_existingObjectWithID:a3];
      if (v14)
      {
        uint64_t v15 = v14;
        self;
        int v16 = (void *)swift_dynamicCastObjCClass();
        if (v16)
        {
          id v17 = sub_1003CE2E0(v13, v16, *(id *)(a5 + 40));
          if (v5)
          {
          }
          else
          {
            id v19 = v17;
            uint64_t v20 = v18;

            uint64_t v21 = *(void **)a4;
            uint64_t v22 = *(void **)(a4 + 8);
            *(void *)a4 = v19;
            *(void *)(a4 + 8) = v20;
            sub_1003CDEF8(v21, v22);
          }
          return;
        }
      }
    }
  }
}

uint64_t sub_1003CD1E4(uint64_t a1)
{
  long long v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(v1 + 32);
  *(void *)(v2 + 64) = *(void *)(v1 + 48);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 72) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1002232D4;
  return InsertNoteLinkIntent.perform()(a1);
}

uint64_t sub_1003CD2A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v69 = a1;
  uint64_t v1 = sub_10002F214(&qword_10069B4C0);
  __chkstk_darwin(v1 - 8);
  uint64_t v68 = (char *)v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for InputConnectionBehavior();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v86 = v3;
  uint64_t v87 = v4;
  __chkstk_darwin(v3);
  id v85 = (char *)v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v66 = (char *)v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v84 = (char *)v59 - v9;
  uint64_t v10 = sub_10002F214(&qword_10069B1D0);
  __chkstk_darwin(v10 - 8);
  uint64_t v78 = (char *)v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v12 - 8);
  uint64_t v70 = (char *)v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  id v17 = (char *)v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Locale();
  __chkstk_darwin(v18 - 8);
  uint64_t v19 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v19 - 8);
  uint64_t v20 = type metadata accessor for LocalizedStringResource();
  uint64_t v81 = v20;
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  Swift::OpaquePointer v83 = (char *)v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_10002F214(&qword_10069B1D8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v23 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  id v24 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 104);
  unsigned int v72 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v74 = v14;
  v24(v17, enum case for LocalizedStringResource.BundleDescription.main(_:), v14);
  uint64_t v73 = v24;
  uint64_t v75 = v15 + 104;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v24(v17, v23, v14);
  uint64_t v25 = v70;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v26 = *(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56);
  uint64_t v80 = v21 + 56;
  NSString v82 = v26;
  v26(v25, 0, 1, v20);
  uint64_t v64 = type metadata accessor for NoteEntity(0);
  uint64_t v27 = *(void *)(v64 - 8);
  uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
  uint64_t v65 = v27 + 56;
  v63(v78, 1, 1, v64);
  uint64_t v28 = type metadata accessor for IntentDialog();
  uint64_t v29 = *(void *)(v28 - 8);
  long long v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
  uint64_t v76 = v30;
  uint64_t v77 = v29 + 56;
  v30(v84, 1, 1, v28);
  id v31 = v66;
  v30(v66, 1, 1, v28);
  uint64_t v90 = sub_10023ED64();
  uint64_t v91 = v32;
  uint64_t v92 = v33;
  uint64x2_t v35 = (uint64x2_t)vdupq_n_s64(v34);
  char v93 = v34 & 1;
  uint64x2_t v62 = (uint64x2_t)xmmword_100524CF0;
  uint64x2_t v61 = (uint64x2_t)xmmword_100524D00;
  int16x8_t v36 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v35, (uint64x2_t)xmmword_100524D00), (int32x4_t)vshlq_u64(v35, (uint64x2_t)xmmword_100524CF0));
  *(int8x8_t *)v36.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v36), (int8x8_t)0x1000100010001);
  unsigned __int32 v94 = vmovn_s16(v36).u32[0];
  unsigned int v79 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v71 = *(void (**)(char *))(v87 + 104);
  v87 += 104;
  v71(v85);
  v59[2] = sub_1001579C0();
  uint64_t v67 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)();
  v59[1] = sub_10002F214(&qword_10069B210);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v37 = v72;
  uint64_t v38 = v74;
  NSString v39 = v73;
  v73(v17, v72, v74);
  v59[0] = v17;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v39(v17, v37, v38);
  id v40 = v70;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v41 = v40;
  v82(v40, 0, 1, v81);
  v63(v78, 1, 1, v64);
  uint64_t v42 = v28;
  uint64_t v60 = v28;
  uint64_t v43 = v28;
  uint64_t v44 = v76;
  v76(v84, 1, 1, v43);
  v44(v31, 1, 1, v42);
  uint64_t v90 = sub_10023ED64();
  uint64_t v91 = v45;
  uint64_t v92 = v46;
  char v93 = v47 & 1;
  uint64x2_t v48 = (uint64x2_t)vdupq_n_s64(v47);
  int16x8_t v49 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v48, v61), (int32x4_t)vshlq_u64(v48, v62));
  *(int8x8_t *)v49.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v49), (int8x8_t)0x1000100010001);
  unsigned __int32 v94 = vmovn_s16(v49).u32[0];
  ((void (*)(char *, void, uint64_t))v71)(v85, v79, v86);
  uint64_t v78 = (char *)IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)();
  uint64_t v66 = (char *)sub_10002F214(&qword_10069B4C8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v50 = v59[0];
  uint64_t v51 = v72;
  uint64_t v52 = v74;
  uint64_t v53 = (void (*)(uint64_t, uint64_t, uint64_t))v73;
  v73((char *)v59[0], v72, v74);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v53(v50, v51, v52);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v82(v41, 0, 1, v81);
  LOBYTE(v90) = 1;
  uint64_t v54 = type metadata accessor for Bool.IntentDisplayName();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v68, 1, 1, v54);
  v76(v84, 1, 1, v60);
  ((void (*)(char *, void, uint64_t))v71)(v85, v79, v86);
  uint64_t v55 = IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  unint64_t v88 = 0xD000000000000021;
  unint64_t v89 = 0x8000000100549290;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t result = AppDependency.__allocating_init(key:manager:)();
  unint64_t v57 = v69;
  unint64_t v58 = v78;
  uint64_t *v69 = v67;
  v57[1] = (uint64_t)v58;
  v57[2] = 0;
  v57[3] = 0;
  *((unsigned char *)v57 + 32) = 1;
  v57[5] = v55;
  v57[6] = result;
  return result;
}

uint64_t sub_1003CDE68@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003CDE94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003CDEC0()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1003CDEF8(void *a1, void *a2)
{
  if (a1)
  {
  }
}

id sub_1003CDF38(id result, void *a2)
{
  if (result)
  {
    id v2 = result;
    return a2;
  }
  return result;
}

void sub_1003CDF78()
{
  sub_1003CD0C0(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1003CDF9C()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1003CDFD0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for InsertNoteLinkIntent()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for InsertNoteLinkIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for InsertNoteLinkIntent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  long long v4 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for InsertNoteLinkIntent(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for InsertNoteLinkIntent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for InsertNoteLinkIntent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InsertNoteLinkIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InsertNoteLinkIntent()
{
  return &type metadata for InsertNoteLinkIntent;
}

uint64_t sub_1003CE268()
{
  return sub_10001DFB0(&qword_1006A5848, &qword_1006A5850);
}

uint64_t sub_1003CE2A4()
{
  return sub_10001DFB0((unint64_t *)&qword_10069CDA0, (uint64_t *)&unk_10069E270);
}

id sub_1003CE2E0(void *a1, void *a2, id a3)
{
  uint64_t v6 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v59 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v55 - v13;
  id v15 = [a1 managedObjectContext];
  if (v15)
  {
    uint64_t v16 = v15;
    if ([a1 isPasswordProtectedAndLocked])
    {
      sub_100173F8C();
      swift_allocError();
      char v18 = 11;
LABEL_12:
      *id v17 = v18;
LABEL_13:
      swift_willThrow();
LABEL_14:

      return a3;
    }
    if (![a1 isEditable])
    {
      sub_100173F8C();
      swift_allocError();
      char v18 = 12;
      goto LABEL_12;
    }
    id v20 = [a1 textStorage];
    if (!v20)
    {
      type metadata accessor for ICError(0);
      a3 = v26;
      uint64_t v60 = 227;
      sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
      sub_1003CEB18((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
      _BridgedStoredNSError.init(_:userInfo:)();
      goto LABEL_13;
    }
    id v58 = v20;
    id v57 = [v20 length];
    IntentParameter.wrappedValue.getter();
    if (v61 == 1)
    {
      id v21 = [objc_allocWithZone((Class)ICAttachmentInsertionController) initWithNote:a1];
      id v22 = [self newLinkAttachmentToNote:a2 fromNote:a1 parentAttachment:0];
      if (v22)
      {
        uint64_t v23 = v22;

        NSString v24 = String._bridgeToObjectiveC()();
        [v23 updateChangeCountWithReason:v24];
      }
    }
    else
    {
      id v27 = [self appURLForNote:a2];
      if (v27)
      {
        uint64_t v28 = v27;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v29 = v59;
        uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
        v56(v8, v12, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v8, 0, 1, v9);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v8, 1, v9) != 1)
        {
          v56(v14, v8, v9);
          id v30 = [v58 attributesAtIndex:v57 effectiveRange:0];
          type metadata accessor for Key(0);
          uint64_t v32 = v31;
          v55[2] = sub_1003CEB18((unint64_t *)&qword_10069BE28, type metadata accessor for Key);
          uint64_t v56 = v32;
          v55[1] = (char *)&type metadata for Any + 8;
          static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          id v33 = [a2 title];
          if (!v33)
          {
            id v34 = [self mainBundle];
            NSString v35 = String._bridgeToObjectiveC()();
            id v33 = [v34 localizedStringForKey:v35 value:0 table:0];
          }
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          id v36 = objc_allocWithZone((Class)NSMutableAttributedString);
          NSString v37 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v38 = [v36 initWithString:v37];

          id v39 = v38;
          Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          id v41 = [v39 ic_range];
          [v39 addAttributes:isa range:v41];

          URL._bridgeToObjectiveC()((NSURL *)&NSLinkAttributeName);
          uint64_t v44 = v43;
          id v45 = [v39 ic_range];
          [v39 addAttribute:NSLinkAttributeName value:v44 range:v45];

          NSString v47 = String._bridgeToObjectiveC()();
          id v48 = [v39 ic_range];
          [v39 removeAttribute:v47 range:v48];

          id v50 = [v39 ic_range];
          [v58 ic_replaceCharactersInRange:v57 withAttributedSubstring:v39 fromRange:v50];

          (*(void (**)(char *, uint64_t))(v59 + 8))(v14, v9);
          goto LABEL_24;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56))(v8, 1, 1, v9);
      }
      sub_10002B754((uint64_t)v8, &qword_10069B310);
    }
LABEL_24:
    [a1 updateModificationDateAndChangeCount];
    id v61 = 0;
    unsigned __int8 v52 = [v16 save:&v61];
    a3 = v61;
    if (v52)
    {
      id v53 = v61;
      a3 = [a1 objectID];

      return a3;
    }
    id v54 = v61;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    goto LABEL_14;
  }
  type metadata accessor for ICError(0);
  a3 = v19;
  uint64_t v60 = 225;
  sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
  sub_1003CEB18((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
  _BridgedStoredNSError.init(_:userInfo:)();
  swift_willThrow();
  return a3;
}

uint64_t sub_1003CEB18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003CEB60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

const char *ICArchive.packageExtension.unsafeMutableAddressor()
{
  return "notesarchive";
}

uint64_t static ICArchive.packageExtension.getter()
{
  return 0x6372617365746F6ELL;
}

uint64_t static ICArchive.archiveTitle<A>(for:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ICObjectReferences();
  uint64_t v3 = type metadata accessor for Optional();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v20 - v5;
  if (Array.count.getter() != 1) {
    goto LABEL_9;
  }
  v20[1] = a1;
  type metadata accessor for Array();
  swift_getWitnessTable();
  Collection.first.getter();
  uint64_t v7 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
LABEL_9:
    id v16 = [self mainBundle];
    NSString v17 = String._bridgeToObjectiveC()();
    id v18 = [v16 localizedStringForKey:v17 value:0 table:0];

    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    return v12;
  }
  ICObjectReferences.title.getter();
  uint64_t v9 = v8;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v6, v2);
  if (!v9) {
    goto LABEL_9;
  }
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = [v10 ic_sanitizedFilenameString];

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v14 = v13;

  uint64_t v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0) {
    uint64_t v15 = v12 & 0xFFFFFFFFFFFFLL;
  }
  if (!v15)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  return v12;
}

uint64_t static ICArchive.archiveFilename(forTitle:)()
{
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = [v0 ic_sanitizedFilenameString];

  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v3._countAndFlagsBits = 46;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  v4._countAndFlagsBits = 0x6372617365746F6ELL;
  v4._object = (void *)0xEC00000065766968;
  String.append(_:)(v4);
  return v2;
}

uint64_t sub_1003CEF44(uint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000) == 0) {
    return a2;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003CEF84()
{
  uint64_t v0 = type metadata accessor for JSONEncoder.DateEncodingStrategy();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  Swift::String v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  uint64_t v4 = JSONEncoder.init()();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for JSONEncoder.DateEncodingStrategy.iso8601(_:), v0);
  uint64_t result = dispatch thunk of JSONEncoder.dateEncodingStrategy.setter();
  qword_1006CE0C8 = v4;
  return result;
}

uint64_t sub_1003CF078()
{
  uint64_t v0 = type metadata accessor for JSONDecoder.DateDecodingStrategy();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  Swift::String v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  uint64_t v4 = JSONDecoder.init()();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for JSONDecoder.DateDecodingStrategy.iso8601(_:), v0);
  uint64_t result = dispatch thunk of JSONDecoder.dateDecodingStrategy.setter();
  qword_1006CE0D0 = v4;
  return result;
}

uint64_t sub_1003CF16C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
  uint64_t v6 = v4;
  if (v5)
  {
    char v7 = sub_1002D62A4(v4, v5, &off_10062CEE0);
    swift_arrayDestroy();
    if (v7)
    {
      sub_10017B588();
      uint64_t v8 = StringProtocol.components<A>(separatedBy:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_10002F214(&qword_1006A04B8);
      sub_1003CF320();
      uint64_t v9 = BidirectionalCollection<>.joined(separator:)();
      swift_unknownObjectRelease();
      uint64_t v10 = *(void *)(v8 + 16);
      if (v10)
      {
        uint64_t v11 = v8 + 32 + 16 * v10;
        uint64_t v12 = *(void *)(v11 - 16);
        unint64_t v13 = *(void **)(v11 - 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v18 = v9;
        v14._countAndFlagsBits = 3027488;
        v14._object = (void *)0xE300000000000000;
        String.append(_:)(v14);
        v15._countAndFlagsBits = v12;
        v15._object = v13;
        String.append(_:)(v15);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = v9;
        v16._countAndFlagsBits = 12832;
        v16._object = (void *)0xE200000000000000;
        String.append(_:)(v16);
      }
      return v18;
    }
  }
  return v6;
}

unint64_t sub_1003CF320()
{
  unint64_t result = qword_1006A04C0;
  if (!qword_1006A04C0)
  {
    sub_10001DFF4(&qword_1006A04B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A04C0);
  }
  return result;
}

void sub_1003CF37C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100169DEC(0, v1, 0);
    uint64_t v4 = sub_1003D09E4(a1);
    uint64_t v5 = 0;
    uint64_t v6 = a1 + 64;
    int64_t v19 = v1;
    int v20 = v3;
    uint64_t v21 = a1 + 64;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(unsigned char *)(a1 + 32))
    {
      unint64_t v9 = (unint64_t)v4 >> 6;
      if ((*(void *)(v6 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0) {
        goto LABEL_23;
      }
      if (*(_DWORD *)(a1 + 36) != v3) {
        goto LABEL_24;
      }
      id v10 = *(id *)(*(void *)(a1 + 48) + 8 * v4);
      uint64_t v11 = UInt.init(truncating:)();

      unint64_t v13 = _swiftEmptyArrayStorage[2];
      unint64_t v12 = _swiftEmptyArrayStorage[3];
      if (v13 >= v12 >> 1) {
        sub_100169DEC(v12 > 1, v13 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v13 + 1;
      _swiftEmptyArrayStorage[v13 + 4] = v11;
      int64_t v7 = 1 << *(unsigned char *)(a1 + 32);
      if (v4 >= v7) {
        goto LABEL_25;
      }
      uint64_t v6 = a1 + 64;
      uint64_t v14 = *(void *)(v21 + 8 * v9);
      if ((v14 & (1 << v4)) == 0) {
        goto LABEL_26;
      }
      int v3 = v20;
      if (*(_DWORD *)(a1 + 36) != v20) {
        goto LABEL_27;
      }
      unint64_t v15 = v14 & (-2 << (v4 & 0x3F));
      if (v15)
      {
        int64_t v7 = __clz(__rbit64(v15)) | v4 & 0xFFFFFFFFFFFFFFC0;
        int64_t v8 = v19;
      }
      else
      {
        unint64_t v16 = v9 + 1;
        unint64_t v17 = (unint64_t)(v7 + 63) >> 6;
        int64_t v8 = v19;
        if (v9 + 1 < v17)
        {
          unint64_t v18 = *(void *)(v21 + 8 * v16);
          if (v18)
          {
LABEL_20:
            int64_t v7 = __clz(__rbit64(v18)) + (v16 << 6);
          }
          else
          {
            while (v17 - 2 != v9)
            {
              unint64_t v18 = *(void *)(a1 + 80 + 8 * v9++);
              if (v18)
              {
                unint64_t v16 = v9 + 1;
                goto LABEL_20;
              }
            }
          }
        }
      }
      ++v5;
      uint64_t v4 = v7;
      if (v5 == v8) {
        return;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
}

void sub_1003CF588()
{
  int64_t v1 = &v0[OBJC_IVAR____TtC11MobileNotes39FolderComposerFilterCellDateRangePicker_amount];
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC11MobileNotes39FolderComposerFilterCellDateRangePicker_amount];
  char v3 = v0[OBJC_IVAR____TtC11MobileNotes39FolderComposerFilterCellDateRangePicker_amount + 8];
  uint64_t v4 = *(void *)&v0[OBJC_IVAR____TtC11MobileNotes39FolderComposerFilterCellDateRangePicker_rangeType];
  int v5 = v0[OBJC_IVAR____TtC11MobileNotes39FolderComposerFilterCellDateRangePicker_rangeType + 8];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v0;
  id v7 = objc_allocWithZone((Class)ICDateFilterTypeSelection);
  v0;
  swift_retain();
  id v8 = [v7 initWithSelectionType:7];
  if (v5) {
    uint64_t v9 = 1;
  }
  else {
    uint64_t v9 = v4;
  }
  id v26 = v8;
  [v8 setRelativeRangeSelectionType:v9];
  Class isa = 0;
  if ((v1[8] & 1) == 0) {
    Class isa = Int._bridgeToObjectiveC()().super.super.isa;
  }
  [v26 setRelativeRangeAmount:isa];

  id v11 = [v26 relativeRangeLabel];
  if (v11)
  {
    unint64_t v12 = v11;
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v15 = v14;
  }
  else
  {
    uint64_t v13 = 0;
    unint64_t v15 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  id v16 = [v26 relativeRangeTimeIntervalOptions];
  if (v16)
  {
    sub_100031418(0, (unint64_t *)&unk_1006A4F50);
    uint64_t v25 = v6;
    uint64_t v17 = v13;
    uint64_t v18 = v4;
    uint64_t v19 = v2;
    sub_1002E3068();
    uint64_t v20 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v21 = swift_bridgeObjectRetain();
    sub_1003CF37C(v21);
    char v22 = v3;
    uint64_t v24 = v23;
    swift_bridgeObjectRelease();
    id v16 = sub_1003D0E80(v24, v20);
    uint64_t v2 = v19;
    uint64_t v4 = v18;
    uint64_t v13 = v17;
    uint64_t v6 = v25;
    swift_bridgeObjectRelease();
    char v3 = v22;
    swift_bridgeObjectRelease();
  }
  sub_1003D15D0();
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v2;
  *(unsigned char *)(v27 + 24) = v3;
  *(void *)(v27 + 32) = v4;
  *(unsigned char *)(v27 + 40) = v5;
  *(void *)(v27 + 48) = v13;
  *(void *)(v27 + 56) = v15;
  *(void *)(v27 + 64) = v16;
  *(void *)(v27 + 72) = sub_1003D15C8;
  *(void *)(v27 + 80) = v6;
  swift_bridgeObjectRetain();
  UICollectionViewCell.contentConfiguration.setter();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

id sub_1003CF830(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v6 = &a3[OBJC_IVAR____TtC11MobileNotes39FolderComposerFilterCellDateRangePicker_amount];
  *(void *)uint64_t v6 = a1;
  v6[8] = 0;
  [a3 setNeedsUpdateConfiguration];
  id v7 = &a3[OBJC_IVAR____TtC11MobileNotes39FolderComposerFilterCellDateRangePicker_rangeType];
  *(void *)id v7 = a2;
  v7[8] = 0;
  id result = [a3 setNeedsUpdateConfiguration];
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))&a3[OBJC_IVAR____TtC11MobileNotes39FolderComposerFilterCellDateRangePicker_rangeSelectionChanged];
  if (v9)
  {
    swift_retain();
    v9(a1, a2);
    return (id)sub_10002E70C((uint64_t)v9);
  }
  return result;
}

id sub_1003CFB1C()
{
  return sub_1003D0038(type metadata accessor for FolderComposerFilterCellDateRangePicker);
}

uint64_t type metadata accessor for FolderComposerFilterCellDateRangePicker()
{
  return self;
}

id sub_1003CFDA4()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes26DateRangePickerContentView____lazy_storage___dateRangePicker;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes26DateRangePickerContentView____lazy_storage___dateRangePicker);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC11MobileNotes26DateRangePickerContentView____lazy_storage___dateRangePicker);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIPickerView) initWithFrame:0.0, 0.0, 0.0, 0.0];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v4 setDataSource:v0];
    [v4 setDelegate:v0];
    [v4 _setSelectionBarIgnoresInset:1];
    int v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1003CFE78()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MobileNotes26DateRangePickerContentView_configuration;
  swift_beginAccess();
  sub_10015E08C(v1, (uint64_t)v10);
  sub_10002F214(&qword_1006A0A18);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    if ((v6 & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1003CFDA4();
      if (__OFSUB__(v5, 1))
      {
        __break(1u);
        goto LABEL_12;
      }
      id v3 = (void *)result;
      [result selectRow:v5 - 1 inComponent:[self isArabic] animated:0];
    }
    if (v8)
    {
LABEL_9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_10002E70C(v9);
    }
    uint64_t result = (uint64_t)sub_1003CFDA4();
    if (v7)
    {
      if (((v7 - 1) & 0x8000000000000000) == 0)
      {
        id v4 = (void *)result;
        [result selectRow:v7 - 1 inComponent:[self isArabic] ^ 1 animated:0];

        goto LABEL_9;
      }
LABEL_13:
      __break(1u);
      return result;
    }
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  return result;
}

id sub_1003D0020()
{
  return sub_1003D0038(type metadata accessor for DateRangePickerContentView);
}

id sub_1003D0038(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for DateRangePickerContentView()
{
  return self;
}

uint64_t sub_1003D00E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11MobileNotes26DateRangePickerContentView_configuration;
  swift_beginAccess();
  return sub_10015E08C(v3, a1);
}

uint64_t sub_1003D0134(uint64_t *a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MobileNotes26DateRangePickerContentView_configuration);
  swift_beginAccess();
  sub_1003D023C(v3, a1);
  swift_endAccess();
  sub_1003CFE78();
  return sub_100018FE8((uint64_t)a1);
}

uint64_t (*sub_1003D01A4(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1003D0204;
}

uint64_t sub_1003D0204(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1003CFE78();
  }
  return result;
}

uint64_t *sub_1003D023C(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        id v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

id sub_1003D046C()
{
  long long v1 = *(_OWORD *)(v0 + 48);
  long long v9 = *(_OWORD *)(v0 + 32);
  long long v10 = v1;
  uint64_t v11 = *(void *)(v0 + 64);
  long long v2 = *(_OWORD *)(v0 + 16);
  v8[0] = *(_OWORD *)v0;
  v8[1] = v2;
  sub_10002F1B0((uint64_t)&v9, (uint64_t)v12, &qword_10069EC88);
  sub_10002F1B0((uint64_t)&v10, (uint64_t)v13, &qword_1006A5998);
  uint64_t v3 = *((void *)&v10 + 1);
  uint64_t v4 = (char *)objc_allocWithZone((Class)type metadata accessor for DateRangePickerContentView());
  sub_100183644((uint64_t)v12);
  sub_100282AD4((uint64_t)v13);
  sub_10002E71C(v3);
  id v5 = sub_1003D0D58((uint64_t)v8, v4);
  sub_1003D19D4(&qword_1006A59A0, v6, (void (*)(uint64_t))type metadata accessor for DateRangePickerContentView);
  return v5;
}

uint64_t sub_1003D0558@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *v1;
  char v3 = *((unsigned char *)v1 + 8);
  uint64_t v4 = v1[2];
  char v5 = *((unsigned char *)v1 + 24);
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return sub_10002E71C(v9);
}

uint64_t sub_1003D05D8(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1003D0BA4();
  if (!v8) {
    goto LABEL_21;
  }
  uint64_t v9 = v6;
  uint64_t v10 = v8;
  uint64_t v48 = v7;
  uint64_t v11 = (void *)*a4;
  unint64_t v13 = sub_1002B6E5C(v6);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  char v17 = v12;
  if (v11[3] >= v16)
  {
    if (a3)
    {
      if ((v12 & 1) == 0) {
        goto LABEL_12;
      }
    }
    else
    {
      sub_1002BF4A8();
      if ((v17 & 1) == 0) {
        goto LABEL_12;
      }
    }
    goto LABEL_9;
  }
  sub_1002BBB34(v16, a3 & 1);
  uint64_t v18 = sub_1002B6E5C(v9);
  if ((v17 & 1) == (v19 & 1))
  {
    unint64_t v13 = v18;
    if ((v17 & 1) == 0)
    {
LABEL_12:
      uint64_t v21 = (void *)*a4;
      *(void *)(*a4 + 8 * (v13 >> 6) + 64) |= 1 << v13;
      *(void *)(v21[6] + 8 * v13) = v9;
      char v22 = (void *)(v21[7] + 16 * v13);
      *char v22 = v48;
      v22[1] = v10;
      uint64_t v23 = v21[2];
      BOOL v24 = __OFADD__(v23, 1);
      uint64_t v25 = v23 + 1;
      if (v24)
      {
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      v21[2] = v25;
      uint64_t v26 = sub_1003D0BA4();
      if (v28)
      {
        uint64_t v29 = v26;
        uint64_t v30 = v27;
        uint64_t v31 = v28;
        do
        {
          uint64_t v32 = (void *)*a4;
          unint64_t v33 = sub_1002B6E5C(v29);
          uint64_t v35 = v32[2];
          BOOL v36 = (v34 & 1) == 0;
          BOOL v24 = __OFADD__(v35, v36);
          uint64_t v37 = v35 + v36;
          if (v24) {
            goto LABEL_22;
          }
          char v38 = v34;
          if (v32[3] < v37)
          {
            sub_1002BBB34(v37, 1);
            unint64_t v33 = sub_1002B6E5C(v29);
            if ((v38 & 1) != (v39 & 1)) {
              goto LABEL_24;
            }
          }
          if (v38) {
            goto LABEL_9;
          }
          id v40 = (void *)*a4;
          *(void *)(*a4 + 8 * (v33 >> 6) + 64) |= 1 << v33;
          *(void *)(v40[6] + 8 * v33) = v29;
          id v41 = (void *)(v40[7] + 16 * v33);
          void *v41 = v30;
          v41[1] = v31;
          uint64_t v42 = v40[2];
          BOOL v24 = __OFADD__(v42, 1);
          uint64_t v43 = v42 + 1;
          if (v24) {
            goto LABEL_23;
          }
          v40[2] = v43;
          uint64_t v29 = sub_1003D0BA4();
          uint64_t v30 = v44;
          uint64_t v31 = v45;
        }
        while (v45);
      }
LABEL_21:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_10017B518();
    }
LABEL_9:
    swift_allocError();
    swift_willThrow();
    swift_errorRetain();
    sub_10002F214(&qword_1006A3D90);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10017B518();
      return swift_errorRelease();
    }
    goto LABEL_25;
  }
LABEL_24:
  type metadata accessor for DateFilterRelativeRangeSelectionType(0);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
LABEL_25:
  _StringGuts.grow(_:)(30);
  v46._object = (void *)0x8000000100556F90;
  v46._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v46);
  type metadata accessor for DateFilterRelativeRangeSelectionType(0);
  _print_unlocked<A, B>(_:_:)();
  v47._countAndFlagsBits = 39;
  v47._object = (void *)0xE100000000000000;
  String.append(_:)(v47);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003D09E4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4;
  }
  unint64_t v8 = v7 - 4;
  uint64_t v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

unint64_t sub_1003D0A94()
{
  void (*v6)(uint64_t *__return_ptr, uint64_t);
  uint64_t v7;
  char v8;

  if (*((unsigned char *)v0 + 49)) {
    return 0;
  }
  uint64_t v2 = v0[1];
  if (!v2)
  {
LABEL_13:
    unint64_t v1 = 0;
    *((unsigned char *)v0 + 49) = 1;
    return (unint64_t)v1;
  }
  unint64_t result = v2 - 1;
  if (__OFSUB__(v2, 1))
  {
    __break(1u);
    goto LABEL_16;
  }
  v0[1] = result;
  uint64_t v4 = *v0;
  if ((*v0 & 0xC000000000000001) != 0)
  {
LABEL_16:
    id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
    unint64_t v1 = v5;
    if (v0[6])
    {
    }
    else
    {
      unsigned int v6 = (void (*)(uint64_t *__return_ptr, uint64_t))v0[4];
      swift_retain();
      v6(&v7, (uint64_t)(v0 + 2));
      swift_release();
      if ((v8 & 1) == 0) {
        return (unint64_t)v1;
      }

      *((unsigned char *)v0 + 48) = 1;
    }
    goto LABEL_13;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v5 = *(id *)(v4 + 8 * result + 32);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003D0BA4()
{
  if ((*(unsigned char *)(v2 + 56) & 1) == 0)
  {
    unint64_t v4 = *(void *)(v2 + 8);
    unint64_t v5 = *(void *)(*(void *)v2 + 16);
    if (v4 == v5)
    {
LABEL_4:
      uint64_t v3 = 0;
      *(unsigned char *)(v2 + 56) = 1;
      return v3;
    }
    if (v4 >= v5)
    {
      __break(1u);
    }
    else
    {
      uint64_t v3 = *(void *)(*(void *)v2 + 8 * v4 + 32);
      *(void *)(v2 + 8) = v4 + 1;
      int64_t v6 = *(void *)(v2 + 40);
      uint64_t v7 = *(void *)(v2 + 48);
      if (v7)
      {
        uint64_t v8 = (v7 - 1) & v7;
LABEL_8:
        *(void *)(v2 + 40) = v6;
        *(void *)(v2 + 48) = v8;
        swift_bridgeObjectRetain();
        return v3;
      }
      int64_t v10 = v6 + 1;
      if (!__OFADD__(v6, 1))
      {
        int64_t v11 = (unint64_t)(*(void *)(v2 + 32) + 64) >> 6;
        int64_t v0 = *(void *)(v2 + 40);
        if (v10 >= v11) {
          goto LABEL_31;
        }
        uint64_t v12 = *(void *)(v2 + 24);
        uint64_t v13 = *(void *)(v12 + 8 * v10);
        if (v13)
        {
LABEL_13:
          uint64_t v8 = (v13 - 1) & v13;
          int64_t v6 = v10;
          goto LABEL_8;
        }
        int64_t v14 = v6 + 2;
        int64_t v0 = v6 + 1;
        if (v6 + 2 >= v11) {
          goto LABEL_31;
        }
        uint64_t v13 = *(void *)(v12 + 8 * v14);
        if (v13)
        {
LABEL_16:
          int64_t v10 = v14;
          goto LABEL_13;
        }
        int64_t v0 = v6 + 2;
        if (v6 + 3 >= v11) {
          goto LABEL_31;
        }
        uint64_t v13 = *(void *)(v12 + 8 * (v6 + 3));
        if (v13)
        {
          int64_t v10 = v6 + 3;
          goto LABEL_13;
        }
        int64_t v14 = v6 + 4;
        int64_t v0 = v6 + 3;
        if (v6 + 4 >= v11) {
          goto LABEL_31;
        }
        uint64_t v13 = *(void *)(v12 + 8 * v14);
        if (v13) {
          goto LABEL_16;
        }
        int64_t v10 = v6 + 5;
        int64_t v0 = v6 + 4;
        if (v6 + 5 >= v11)
        {
LABEL_31:
          *(void *)(v2 + 40) = v0;
          *(void *)(v2 + 48) = 0;
          goto LABEL_4;
        }
        uint64_t v13 = *(void *)(v12 + 8 * v10);
        if (v13) {
          goto LABEL_13;
        }
        uint64_t v1 = v2;
        int64_t v0 = v11 - 1;
        int64_t v15 = v6 + 6;
        while (v11 != v15)
        {
          uint64_t v13 = *(void *)(v12 + 8 * v15++);
          if (v13)
          {
            int64_t v10 = v15 - 1;
            goto LABEL_13;
          }
        }
LABEL_30:
        uint64_t v2 = v1;
        goto LABEL_31;
      }
    }
    __break(1u);
    goto LABEL_30;
  }
  return 0;
}

id sub_1003D0D58(uint64_t a1, char *a2)
{
  v13[3] = &type metadata for DateRangePickerContentConfiguration;
  v13[4] = sub_1003D15D0();
  uint64_t v4 = swift_allocObject();
  v13[0] = v4;
  long long v5 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v4 + 64) = v5;
  *(void *)(v4 + 80) = *(void *)(a1 + 64);
  long long v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 32) = v6;
  *(void *)&a2[OBJC_IVAR____TtC11MobileNotes26DateRangePickerContentView____lazy_storage___dateRangePicker] = 0;
  sub_10015E08C((uint64_t)v13, (uint64_t)&a2[OBJC_IVAR____TtC11MobileNotes26DateRangePickerContentView_configuration]);
  v12.receiver = a2;
  v12.super_class = (Class)type metadata accessor for DateRangePickerContentView();
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v7 setPreservesSuperviewLayoutMargins:1];
  id v8 = v7;
  id v9 = sub_1003CFDA4();
  [v8 addSubview:v9];

  id v10 = sub_1003CFDA4();
  [v10 ic_addAnchorsToFillSuperviewLayoutMargins];

  sub_1003CFE78();
  sub_100018FE8((uint64_t)v13);
  return v8;
}

void *sub_1003D0E80(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) >= *(void *)(a1 + 16)) {
    uint64_t v4 = *(void *)(a1 + 16);
  }
  else {
    uint64_t v4 = *(void *)(a2 + 16);
  }
  if (v4)
  {
    sub_10002F214(&qword_1006A1F40);
    long long v5 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    long long v5 = &_swiftEmptyDictionarySingleton;
  }
  id v7 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1003D05D8(a1, a2, 1, &v7);
  return v7;
}

uint64_t sub_1003D0F44(uint64_t a1, uint64_t a2)
{
  if (a2 == 1)
  {
    if (![self isArabic]) {
      goto LABEL_4;
    }
LABEL_12:
    if (!__OFADD__(a1, 1)) {
      return dispatch thunk of CustomStringConvertible.description.getter();
    }
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (a2) {
    return 0;
  }
  if (([self isArabic] & 1) == 0) {
    goto LABEL_12;
  }
LABEL_4:
  uint64_t v4 = v2 + OBJC_IVAR____TtC11MobileNotes26DateRangePickerContentView_configuration;
  swift_beginAccess();
  sub_10015E08C(v4, (uint64_t)v12);
  sub_10002F214(&qword_1006A0A18);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (!v10)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    sub_10002E70C(v11);
    return 0;
  }
  uint64_t v5 = a1 + 1;
  if (__OFADD__(a1, 1)) {
    goto LABEL_19;
  }
  if ((v5 & 0x8000000000000000) == 0)
  {
    if (*(void *)(v10 + 16))
    {
      uint64_t v6 = sub_1002B6E5C(v5);
      if (v7)
      {
        uint64_t v8 = *(void *)(*(void *)(v10 + 56) + 16 * v6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10002E70C(v11);
        return v8;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
LABEL_20:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003D1120(void *a1, uint64_t a2)
{
  uint64_t v26 = a1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v27 = *(void *)(v8 - 8);
  uint64_t v28 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v2 + OBJC_IVAR____TtC11MobileNotes26DateRangePickerContentView_configuration;
  swift_beginAccess();
  sub_10015E08C(v11, (uint64_t)v31);
  sub_10002F214(&qword_1006A0A18);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t v13 = v30;
  sub_10002E71C((uint64_t)v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = sub_10002E70C((uint64_t)v13);
  if (!v13) {
    goto LABEL_7;
  }
  uint64_t v25 = v5;
  id v14 = sub_1003CFDA4();
  int64_t v15 = self;
  uint64_t v16 = (char *)[v14 selectedRowInComponent:[v15 isArabic]];

  char v17 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
    goto LABEL_11;
  }
  id v18 = sub_1003CFDA4();
  id v19 = [v18 selectedRowInComponent:[v15 isArabic] ^ 1];

  if (__OFADD__(v19, 1))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((((unint64_t)v19 + 1) & 0x8000000000000000) != 0)
  {
LABEL_12:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  v13(v17);
  uint64_t result = sub_10002E70C((uint64_t)v13);
  uint64_t v5 = v25;
LABEL_7:
  if (!a2)
  {
    sub_100031418(0, (unint64_t *)&qword_10069D2D0);
    uint64_t v20 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v21 = swift_allocObject();
    char v22 = v26;
    *(void *)(v21 + 16) = v26;
    aBlock[4] = sub_1003D15B4;
    aBlock[5] = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100262E2C;
    void aBlock[3] = &unk_10063A338;
    uint64_t v23 = _Block_copy(aBlock);
    id v24 = v22;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1003D19D4((unint64_t *)&qword_1006A26A0, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10002F214((uint64_t *)&unk_1006A4830);
    sub_10036BAB4();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v23);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v10, v28);
  }
  return result;
}

uint64_t sub_1003D157C()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1003D15B4()
{
  return [*(id *)(v0 + 16) reloadComponent:1];
}

id sub_1003D15C8(uint64_t a1, uint64_t a2)
{
  return sub_1003CF830(a1, a2, *(char **)(v2 + 16));
}

unint64_t sub_1003D15D0()
{
  unint64_t result = qword_1006A5990;
  if (!qword_1006A5990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5990);
  }
  return result;
}

uint64_t sub_1003D1624()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 72)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t destroy for DateRangePickerContentConfiguration(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for DateRangePickerContentConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v6 = (_OWORD *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v5;
    *(void *)(a1 + 64) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *v6;
  }
  return a1;
}

uint64_t assignWithCopy for DateRangePickerContentConfiguration(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  uint64_t v5 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[7];
  if (!*(void *)(a1 + 56))
  {
    if (v6)
    {
      uint64_t v8 = a2[8];
      *(void *)(a1 + 56) = v6;
      *(void *)(a1 + 64) = v8;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    return a1;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = a2[8];
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for DateRangePickerContentConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 56);
  if (!*(void *)(a1 + 56))
  {
    if (v4)
    {
      uint64_t v6 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = v4;
      *(void *)(a1 + 64) = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = v4;
  *(void *)(a1 + 64) = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DateRangePickerContentConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 72)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DateRangePickerContentConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 72) = 0;
    }
    if (a2) {
      *(void *)(result + 40) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DateRangePickerContentConfiguration()
{
  return &type metadata for DateRangePickerContentConfiguration;
}

uint64_t sub_1003D19D4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1003D1A20(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v62 = v2;
  uint64_t v6 = *(void *)(v2 + 40);
  swift_bridgeObjectRetain();
  unint64_t v7 = (unint64_t)sub_1003D21E8(v6, v5);
  unint64_t v8 = v7;
  uint64_t v53 = a1;
  uint64_t v54 = a2;
  uint64_t v55 = v6;
  if ((v7 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    sub_100031418(0, (unint64_t *)&qword_1006A49F0);
    sub_10002C8EC(&qword_1006A0480, (unint64_t *)&qword_1006A49F0);
    Set.Iterator.init(_cocoa:)();
    unint64_t v8 = aBlock[9];
    id v58 = (char *)aBlock[10];
    uint64_t v9 = aBlock[11];
    uint64_t v10 = aBlock[12];
    unint64_t v11 = aBlock[13];
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v12 = -1 << *(unsigned char *)(v7 + 32);
    id v58 = (char *)(v7 + 56);
    uint64_t v9 = ~v12;
    uint64_t v13 = -v12;
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v11 = v14 & *(void *)(v7 + 56);
  }
  int64_t v56 = (unint64_t)(v9 + 64) >> 6;
  unint64_t v60 = v8;
  while ((v8 & 0x8000000000000000) != 0)
  {
    uint64_t v18 = __CocoaSet.Iterator.next()();
    if (!v18) {
      goto LABEL_40;
    }
    unint64_t v64 = v18;
    sub_100031418(0, (unint64_t *)&qword_1006A49F0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v19 = (id)aBlock[0];
    swift_unknownObjectRelease();
    uint64_t v17 = v10;
    uint64_t v15 = v11;
    if (!aBlock[0]) {
      goto LABEL_40;
    }
LABEL_30:
    unint64_t v23 = *(void *)(v62 + 24);
    if (v23 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
      if (!v24) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v24) {
        goto LABEL_8;
      }
    }
    if (v24 < 1)
    {
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      return;
    }
    uint64_t v25 = 0;
    do
    {
      if ((v23 & 0xC000000000000001) != 0) {
        id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v26 = *(id *)(v23 + 8 * v25 + 32);
      }
      uint64_t v27 = v26;
      ++v25;
      id v28 = [v26 addHashtagToNoteBodyIfMissing:v19, v53, v54];
    }
    while (v24 != v25);
LABEL_8:

    swift_bridgeObjectRelease();
    uint64_t v10 = v17;
    unint64_t v11 = v15;
    unint64_t v8 = v60;
  }
  if (v11)
  {
    uint64_t v15 = (v11 - 1) & v11;
    unint64_t v16 = __clz(__rbit64(v11)) | (v10 << 6);
    uint64_t v17 = v10;
    goto LABEL_29;
  }
  int64_t v20 = v10 + 1;
  if (__OFADD__(v10, 1)) {
    goto LABEL_82;
  }
  if (v20 < v56)
  {
    unint64_t v21 = *(void *)&v58[8 * v20];
    uint64_t v17 = v10 + 1;
    if (!v21)
    {
      uint64_t v17 = v10 + 2;
      if (v10 + 2 >= v56) {
        goto LABEL_40;
      }
      unint64_t v21 = *(void *)&v58[8 * v17];
      if (!v21)
      {
        uint64_t v17 = v10 + 3;
        if (v10 + 3 >= v56) {
          goto LABEL_40;
        }
        unint64_t v21 = *(void *)&v58[8 * v17];
        if (!v21)
        {
          uint64_t v17 = v10 + 4;
          if (v10 + 4 >= v56) {
            goto LABEL_40;
          }
          unint64_t v21 = *(void *)&v58[8 * v17];
          if (!v21)
          {
            uint64_t v22 = v10 + 5;
            do
            {
              if (v56 == v22) {
                goto LABEL_40;
              }
              unint64_t v21 = *(void *)&v58[8 * v22++];
            }
            while (!v21);
            uint64_t v17 = v22 - 1;
          }
        }
      }
    }
    uint64_t v15 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v17 << 6);
LABEL_29:
    id v19 = *(id *)(*(void *)(v8 + 48) + 8 * v16);
    if (!v19) {
      goto LABEL_40;
    }
    goto LABEL_30;
  }
LABEL_40:
  sub_10017B518();
  swift_bridgeObjectRetain();
  uint64_t v29 = swift_bridgeObjectRetain();
  unint64_t v30 = (unint64_t)sub_1003D21E8(v29, v55);
  swift_bridgeObjectRelease();
  if ((v30 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    sub_100031418(0, (unint64_t *)&qword_1006A49F0);
    sub_10002C8EC(&qword_1006A0480, (unint64_t *)&qword_1006A49F0);
    Set.Iterator.init(_cocoa:)();
    unint64_t v30 = v64;
    uint64_t v59 = v65;
    uint64_t v31 = v66;
    uint64_t v32 = v67;
    unint64_t v33 = v68;
  }
  else
  {
    uint64_t v32 = 0;
    uint64_t v34 = -1 << *(unsigned char *)(v30 + 32);
    uint64_t v59 = (char *)(v30 + 56);
    uint64_t v31 = ~v34;
    uint64_t v35 = -v34;
    if (v35 < 64) {
      uint64_t v36 = ~(-1 << v35);
    }
    else {
      uint64_t v36 = -1;
    }
    unint64_t v33 = v36 & *(void *)(v30 + 56);
  }
  int64_t v57 = (unint64_t)(v31 + 64) >> 6;
  unint64_t v61 = v30;
  while (2)
  {
    if ((v30 & 0x8000000000000000) != 0)
    {
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_79;
      }
      sub_100031418(0, (unint64_t *)&qword_1006A49F0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v40 = (id)aBlock[0];
      swift_unknownObjectRelease();
      uint64_t v39 = v32;
      uint64_t v37 = v33;
      if (!aBlock[0]) {
        goto LABEL_79;
      }
      goto LABEL_69;
    }
    if (v33)
    {
      uint64_t v37 = (v33 - 1) & v33;
      unint64_t v38 = __clz(__rbit64(v33)) | (v32 << 6);
      uint64_t v39 = v32;
LABEL_68:
      id v40 = *(id *)(*(void *)(v30 + 48) + 8 * v38);
      if (!v40) {
        goto LABEL_79;
      }
LABEL_69:
      unint64_t v44 = *(void *)(v62 + 24);
      if (v44 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
        if (v45)
        {
LABEL_71:
          if (v45 < 1) {
            goto LABEL_81;
          }
          for (uint64_t i = 0; i != v45; ++i)
          {
            if ((v44 & 0xC000000000000001) != 0) {
              id v47 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v47 = *(id *)(v44 + 8 * i + 32);
            }
            uint64_t v48 = v47;
            [v47 removeHashtag:v40, v53, v54];
          }
        }
      }
      else
      {
        uint64_t v45 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v45) {
          goto LABEL_71;
        }
      }

      swift_bridgeObjectRelease();
      uint64_t v32 = v39;
      unint64_t v33 = v37;
      unint64_t v30 = v61;
      continue;
    }
    break;
  }
  int64_t v41 = v32 + 1;
  if (__OFADD__(v32, 1)) {
    goto LABEL_83;
  }
  if (v41 >= v57) {
    goto LABEL_79;
  }
  unint64_t v42 = *(void *)&v59[8 * v41];
  uint64_t v39 = v32 + 1;
  if (v42) {
    goto LABEL_67;
  }
  uint64_t v39 = v32 + 2;
  if (v32 + 2 >= v57) {
    goto LABEL_79;
  }
  unint64_t v42 = *(void *)&v59[8 * v39];
  if (v42) {
    goto LABEL_67;
  }
  uint64_t v39 = v32 + 3;
  if (v32 + 3 >= v57) {
    goto LABEL_79;
  }
  unint64_t v42 = *(void *)&v59[8 * v39];
  if (v42) {
    goto LABEL_67;
  }
  uint64_t v39 = v32 + 4;
  if (v32 + 4 >= v57) {
    goto LABEL_79;
  }
  unint64_t v42 = *(void *)&v59[8 * v39];
  if (v42)
  {
LABEL_67:
    uint64_t v37 = (v42 - 1) & v42;
    unint64_t v38 = __clz(__rbit64(v42)) + (v39 << 6);
    goto LABEL_68;
  }
  uint64_t v43 = v32 + 5;
  while (v57 != v43)
  {
    unint64_t v42 = *(void *)&v59[8 * v43++];
    if (v42)
    {
      uint64_t v39 = v43 - 1;
      goto LABEL_67;
    }
  }
LABEL_79:
  sub_10017B518();
  uint64_t v49 = *(void **)(v62 + 32);
  uint64_t v50 = swift_allocObject();
  swift_weakInit();
  uint64_t v51 = (void *)swift_allocObject();
  v51[2] = v50;
  v51[3] = v53;
  v51[4] = v54;
  aBlock[4] = sub_1003D2868;
  aBlock[5] = v51;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100262E2C;
  void aBlock[3] = &unk_10063A490;
  unsigned __int8 v52 = _Block_copy(aBlock);
  sub_10002E71C(v53);
  swift_release();
  [v49 performBlock:v52];
  _Block_release(v52);
}

void *sub_1003D21E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = __CocoaSet.count.getter();
    if ((v2 & 0xC000000000000001) != 0) {
      goto LABEL_3;
    }
LABEL_9:
    if (v4 > *(void *)(v2 + 16) >> 3) {
      goto LABEL_10;
    }
LABEL_13:
    sub_10048DA00(a1);
    return (void *)v2;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if ((a2 & 0xC000000000000001) == 0) {
    goto LABEL_9;
  }
LABEL_3:
  if (v2 < 0) {
    uint64_t v5 = v2;
  }
  else {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFFF8;
  }
  if (v4 <= __CocoaSet.count.getter() / 8) {
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = __CocoaSet.count.getter();
  Swift::Int v7 = sub_100395618(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v2 = v7;
LABEL_10:

  return sub_10048E004(a1, v2);
}

void sub_1003D22F0(void *a1, uint64_t a2, void (*a3)(uint64_t))
{
  id v4 = [a1 includedObjectIDs];
  sub_100031418(0, (unint64_t *)&qword_10069E810);
  sub_10002C8EC((unint64_t *)&qword_10069FFE0, (unint64_t *)&qword_10069E810);
  uint64_t v5 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v5 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    Set.Iterator.init(_cocoa:)();
    uint64_t v5 = (uint64_t)v30[4];
    uint64_t v6 = v30[5];
    uint64_t v7 = (uint64_t)v30[6];
    id v8 = v30[7];
    unint64_t v9 = (unint64_t)v30[8];
  }
  else
  {
    id v8 = 0;
    uint64_t v10 = -1 << *(unsigned char *)(v5 + 32);
    uint64_t v6 = (void *)(v5 + 56);
    uint64_t v7 = ~v10;
    uint64_t v11 = -v10;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v9 = v12 & *(void *)(v5 + 56);
  }
  int64_t v28 = (unint64_t)(v7 + 64) >> 6;
  if ((v5 & 0x8000000000000000) == 0) {
    goto LABEL_13;
  }
LABEL_10:
  uint64_t v13 = (void *)__CocoaSet.Iterator.next()();
  if (!v13) {
    goto LABEL_39;
  }
  v30[0] = v13;
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v14 = v29;
  swift_unknownObjectRelease();
  uint64_t v15 = (char *)v8;
  uint64_t v16 = v9;
  if (!v29) {
    goto LABEL_39;
  }
  while (1)
  {
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (!Strong)
    {

      id v8 = v15;
      unint64_t v9 = v16;
      if (v5 < 0) {
        goto LABEL_10;
      }
      goto LABEL_13;
    }
    id v22 = *(id *)(Strong + 32);
    swift_release();
    id v23 = [v22 objectWithID:v14];

    if (v23)
    {
      self;
      uint64_t v24 = swift_dynamicCastObjCClass();
      if (v24)
      {
        uint64_t v25 = (void *)v24;
        swift_beginAccess();
        if (swift_weakLoadStrong())
        {
          swift_beginAccess();
          id v26 = v23;
          sub_100393D7C(v30, v25);
          swift_endAccess();
          swift_release();

          goto LABEL_37;
        }
      }
    }
LABEL_37:
    id v8 = v15;
    unint64_t v9 = v16;
    if (v5 < 0) {
      goto LABEL_10;
    }
LABEL_13:
    if (!v9) {
      break;
    }
    uint64_t v16 = (v9 - 1) & v9;
    unint64_t v17 = __clz(__rbit64(v9)) | ((void)v8 << 6);
    uint64_t v15 = (char *)v8;
LABEL_29:
    id v14 = *(id *)(*(void *)(v5 + 48) + 8 * v17);
    if (!v14) {
      goto LABEL_39;
    }
  }
  uint64_t v18 = (uint64_t)v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    return;
  }
  if (v18 >= v28) {
    goto LABEL_39;
  }
  unint64_t v19 = v6[v18];
  uint64_t v15 = (char *)v8 + 1;
  if (v19) {
    goto LABEL_28;
  }
  uint64_t v15 = (char *)v8 + 2;
  if ((uint64_t)v8 + 2 >= v28) {
    goto LABEL_39;
  }
  unint64_t v19 = v6[(void)v15];
  if (v19) {
    goto LABEL_28;
  }
  uint64_t v15 = (char *)v8 + 3;
  if ((uint64_t)v8 + 3 >= v28) {
    goto LABEL_39;
  }
  unint64_t v19 = v6[(void)v15];
  if (v19) {
    goto LABEL_28;
  }
  uint64_t v15 = (char *)v8 + 4;
  if ((uint64_t)v8 + 4 >= v28) {
    goto LABEL_39;
  }
  unint64_t v19 = v6[(void)v15];
  if (v19)
  {
LABEL_28:
    uint64_t v16 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + ((void)v15 << 6);
    goto LABEL_29;
  }
  int64_t v20 = (char *)v8 + 5;
  while ((char *)v28 != v20)
  {
    unint64_t v19 = v6[(void)v20++];
    if (v19)
    {
      uint64_t v15 = v20 - 1;
      goto LABEL_28;
    }
  }
LABEL_39:
  uint64_t v27 = sub_10017B518();
  if (a3) {
    a3(v27);
  }
}

void sub_1003D26E4(uint64_t a1, void (*a2)(void))
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    id v4 = *(id *)(Strong + 32);
    swift_release();
    [v4 ic_save];
  }
  if (a2) {
    a2();
  }
}

uint64_t sub_1003D2774()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TagAssignmentModel()
{
  return self;
}

uint64_t sub_1003D27E8()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003D2820()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1003D2868()
{
  sub_1003D26E4(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t sub_1003D2874(void *a1, char a2, void *a3)
{
  if (!a1[2]) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v44 = a1[2];
  uint64_t v7 = a1[4];
  uint64_t v6 = a1[5];
  id v8 = (void *)a1[6];
  swift_bridgeObjectRetain();
  unint64_t v9 = (void *)*a3;
  swift_bridgeObjectRetain();
  id v10 = v8;
  unint64_t v12 = sub_1002B6A58(v7, v6);
  uint64_t v13 = v9[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14)) {
    goto LABEL_23;
  }
  char v16 = v11;
  if (v9[3] >= v15)
  {
    if (a2)
    {
      if (v11) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_1002BE0D0();
      if (v16) {
        goto LABEL_10;
      }
    }
LABEL_13:
    int64_t v20 = (void *)*a3;
    *(void *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    unint64_t v21 = (uint64_t *)(v20[6] + 16 * v12);
    *unint64_t v21 = v7;
    v21[1] = v6;
    *(void *)(v20[7] + 8 * v12) = v10;
    uint64_t v22 = v20[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    void v20[2] = v24;
    uint64_t v25 = v44 - 1;
    if (v44 == 1) {
      return swift_bridgeObjectRelease_n();
    }
    for (uint64_t i = (void **)(a1 + 9); ; i += 3)
    {
      uint64_t v28 = (uint64_t)*(i - 2);
      uint64_t v27 = (uint64_t)*(i - 1);
      uint64_t v29 = *i;
      unint64_t v30 = (void *)*a3;
      swift_bridgeObjectRetain();
      id v10 = v29;
      unint64_t v31 = sub_1002B6A58(v28, v27);
      uint64_t v33 = v30[2];
      BOOL v34 = (v32 & 1) == 0;
      BOOL v23 = __OFADD__(v33, v34);
      uint64_t v35 = v33 + v34;
      if (v23) {
        break;
      }
      char v36 = v32;
      if (v30[3] < v35)
      {
        sub_1002B99FC(v35, 1);
        unint64_t v31 = sub_1002B6A58(v28, v27);
        if ((v36 & 1) != (v37 & 1)) {
          goto LABEL_25;
        }
      }
      if (v36) {
        goto LABEL_10;
      }
      unint64_t v38 = (void *)*a3;
      *(void *)(*a3 + 8 * (v31 >> 6) + 64) |= 1 << v31;
      uint64_t v39 = (uint64_t *)(v38[6] + 16 * v31);
      *uint64_t v39 = v28;
      v39[1] = v27;
      *(void *)(v38[7] + 8 * v31) = v10;
      uint64_t v40 = v38[2];
      BOOL v23 = __OFADD__(v40, 1);
      uint64_t v41 = v40 + 1;
      if (v23) {
        goto LABEL_24;
      }
      v38[2] = v41;
      if (!--v25) {
        return swift_bridgeObjectRelease_n();
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1002B99FC(v15, a2 & 1);
  unint64_t v17 = sub_1002B6A58(v7, v6);
  if ((v16 & 1) == (v18 & 1))
  {
    unint64_t v12 = v17;
    if ((v16 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    swift_allocError();
    swift_willThrow();
    swift_errorRetain();
    sub_10002F214(&qword_1006A3D90);
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      return swift_errorRelease();
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_10002F214(&qword_10069EC88);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
LABEL_26:
  _StringGuts.grow(_:)(30);
  v42._object = (void *)0x8000000100556F90;
  v42._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v42);
  sub_10002F214(&qword_10069EC88);
  _print_unlocked<A, B>(_:_:)();
  v43._countAndFlagsBits = 39;
  v43._object = (void *)0xE100000000000000;
  String.append(_:)(v43);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003D2C10(uint64_t isStackAllocationSafe, uint64_t a2)
{
  unint64_t v3 = isStackAllocationSafe;
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_1003D2D98((unint64_t *)((char *)&v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    swift_release();
  }
  else
  {
    id v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_1003D2D98((unint64_t *)v8, v5, v3, a2);
    swift_release();
    swift_slowDealloc();
  }
  return v7;
}

uint64_t sub_1003D2D98(unint64_t *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a3;
  if (a3 >> 62) {
    goto LABEL_38;
  }
  uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v5)
  {
    while (1)
    {
      uint64_t v47 = a4 + 56;
      if ((v4 & 0xC000000000000001) != 0) {
        break;
      }
      uint64_t v23 = 0;
      uint64_t v43 = v4 + 32;
      uint64_t v44 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v45 = 0;
      while (v23 != v44)
      {
        Swift::Int v25 = *(void *)(a4 + 40);
        id v26 = *(id *)(v43 + 8 * v23);
        Swift::Int v27 = v25;
        uint64_t v4 = (uint64_t)v26;
        Swift::Int v28 = NSObject._rawHashValue(seed:)(v27);
        uint64_t v29 = -1 << *(unsigned char *)(a4 + 32);
        unint64_t v30 = v28 & ~v29;
        unint64_t v31 = v30 >> 6;
        uint64_t v32 = 1 << v30;
        if (((1 << v30) & *(void *)(v47 + 8 * (v30 >> 6))) != 0)
        {
          uint64_t v4 = sub_100031418(0, (unint64_t *)&qword_1006A49F0);
          id v33 = *(id *)(*(void *)(a4 + 48) + 8 * v30);
          char v34 = static NSObject.== infix(_:_:)();

          if (v34)
          {
          }
          else
          {
            uint64_t v35 = ~v29;
            for (unint64_t i = v30 + 1; ; unint64_t i = v37 + 1)
            {
              unint64_t v37 = i & v35;
              if (((*(void *)(v47 + (((i & v35) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v35)) & 1) == 0) {
                goto LABEL_20;
              }
              id v38 = *(id *)(*(void *)(a4 + 48) + 8 * v37);
              char v39 = static NSObject.== infix(_:_:)();

              if (v39) {
                break;
              }
            }

            unint64_t v31 = v37 >> 6;
            uint64_t v32 = 1 << v37;
          }
          unint64_t v40 = a1[v31];
          a1[v31] = v32 | v40;
          uint64_t v24 = v5;
          if ((v32 & v40) == 0)
          {
            BOOL v9 = __OFADD__(v45++, 1);
            if (v9)
            {
              __break(1u);
LABEL_35:
              __break(1u);
              break;
            }
          }
        }
        else
        {
LABEL_20:

          uint64_t v24 = v5;
        }
        if (++v23 == v24) {
          goto LABEL_40;
        }
      }
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      if (!v5) {
        goto LABEL_39;
      }
    }
    uint64_t v45 = 0;
    uint64_t v6 = 0;
    while (1)
    {
      uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v9 = __OFADD__(v6++, 1);
      if (v9) {
        goto LABEL_35;
      }
      uint64_t v4 = v8;
      Swift::Int v10 = NSObject._rawHashValue(seed:)(*(void *)(a4 + 40));
      uint64_t v11 = -1 << *(unsigned char *)(a4 + 32);
      unint64_t v12 = v10 & ~v11;
      unint64_t v13 = v12 >> 6;
      uint64_t v14 = 1 << v12;
      if (((1 << v12) & *(void *)(v47 + 8 * (v12 >> 6))) == 0) {
        goto LABEL_5;
      }
      uint64_t v4 = sub_100031418(0, (unint64_t *)&qword_1006A49F0);
      id v15 = *(id *)(*(void *)(a4 + 48) + 8 * v12);
      char v16 = static NSObject.== infix(_:_:)();

      if ((v16 & 1) == 0) {
        break;
      }
      swift_unknownObjectRelease();
LABEL_16:
      unint64_t v22 = a1[v13];
      a1[v13] = v14 | v22;
      uint64_t v7 = v5;
      if ((v14 & v22) == 0)
      {
        if (__OFADD__(v45, 1)) {
          goto LABEL_37;
        }
        ++v45;
      }
LABEL_6:
      if (v6 == v7) {
        goto LABEL_40;
      }
    }
    uint64_t v17 = ~v11;
    for (unint64_t j = v12 + 1; ; unint64_t j = v19 + 1)
    {
      unint64_t v19 = j & v17;
      if (((*(void *)(v47 + (((j & v17) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v17)) & 1) == 0) {
        break;
      }
      id v20 = *(id *)(*(void *)(a4 + 48) + 8 * v19);
      char v21 = static NSObject.== infix(_:_:)();

      if (v21)
      {
        swift_unknownObjectRelease();
        unint64_t v13 = v19 >> 6;
        uint64_t v14 = 1 << v19;
        goto LABEL_16;
      }
    }
LABEL_5:
    swift_unknownObjectRelease();
    uint64_t v7 = v5;
    goto LABEL_6;
  }
LABEL_39:
  uint64_t v45 = 0;
LABEL_40:
  swift_bridgeObjectRelease();
  swift_retain();
  return sub_10039D0F0(a1, a2, v45, a4);
}

void sub_1003D3154(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_100031418(0, &qword_10069BE00);
    sub_10002C8EC((unint64_t *)&qword_1006A0F38, &qword_10069BE00);
    Set.Iterator.init(_cocoa:)();
    uint64_t v3 = v28;
    uint64_t v26 = v29;
    uint64_t v4 = v30;
    uint64_t v5 = v31;
    unint64_t v6 = v32;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v26 = a1 + 56;
    uint64_t v4 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v6 = v9 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
  }
  int64_t v25 = (unint64_t)(v4 + 64) >> 6;
  while (v3 < 0)
  {
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_41;
    }
    sub_100031418(0, &qword_10069BE00);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v13 = v27;
    swift_unknownObjectRelease();
    uint64_t v12 = v5;
    uint64_t v10 = v6;
    if (!v27) {
      goto LABEL_41;
    }
LABEL_33:
    if ([v13 isHashtagAttachment]
      && (id v17 = [v13 tokenContentIdentifier]) != 0)
    {
      char v18 = v17;
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v21 = v20;

      if (*(void *)(a2 + 16) && (unint64_t v22 = sub_1002B6A58(v19, v21), (v23 & 1) != 0))
      {
        id v24 = *(id *)(*(void *)(a2 + 56) + 8 * v22);

        swift_bridgeObjectRelease();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {

        swift_bridgeObjectRelease();
      }
    }
    else
    {
    }
    uint64_t v5 = v12;
    unint64_t v6 = v10;
  }
  if (v6)
  {
    uint64_t v10 = (v6 - 1) & v6;
    unint64_t v11 = __clz(__rbit64(v6)) | (v5 << 6);
    uint64_t v12 = v5;
LABEL_32:
    id v13 = *(id *)(*(void *)(v3 + 48) + 8 * v11);
    if (!v13) {
      goto LABEL_41;
    }
    goto LABEL_33;
  }
  int64_t v14 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v14 >= v25) {
      goto LABEL_41;
    }
    unint64_t v15 = *(void *)(v26 + 8 * v14);
    uint64_t v12 = v5 + 1;
    if (!v15)
    {
      uint64_t v12 = v5 + 2;
      if (v5 + 2 >= v25) {
        goto LABEL_41;
      }
      unint64_t v15 = *(void *)(v26 + 8 * v12);
      if (!v15)
      {
        uint64_t v12 = v5 + 3;
        if (v5 + 3 >= v25) {
          goto LABEL_41;
        }
        unint64_t v15 = *(void *)(v26 + 8 * v12);
        if (!v15)
        {
          uint64_t v12 = v5 + 4;
          if (v5 + 4 >= v25) {
            goto LABEL_41;
          }
          unint64_t v15 = *(void *)(v26 + 8 * v12);
          if (!v15)
          {
            uint64_t v12 = v5 + 5;
            if (v5 + 5 >= v25) {
              goto LABEL_41;
            }
            unint64_t v15 = *(void *)(v26 + 8 * v12);
            if (!v15)
            {
              uint64_t v16 = v5 + 6;
              while (v25 != v16)
              {
                unint64_t v15 = *(void *)(v26 + 8 * v16++);
                if (v15)
                {
                  uint64_t v12 = v16 - 1;
                  goto LABEL_31;
                }
              }
LABEL_41:
              sub_10017B518();
              return;
            }
          }
        }
      }
    }
LABEL_31:
    uint64_t v10 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

uint64_t sub_1003D3514(unint64_t a1, uint64_t a2)
{
  id v3 = [self canonicalHashtagsInContext:a2];
  sub_100031418(0, (unint64_t *)&qword_1006A49F0);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    unint64_t v36 = v4;
    unint64_t v38 = a1;
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t v36 = v4;
    unint64_t v38 = a1;
    if (v5)
    {
LABEL_3:
      char v39 = _swiftEmptyArrayStorage;
      sub_100169BEC(0, v5 & ~(v5 >> 63), 0);
      if (v5 < 0)
      {
        __break(1u);
        goto LABEL_35;
      }
      uint64_t v6 = 0;
      uint64_t v7 = v39;
      unint64_t v8 = v36;
      unint64_t v9 = v36 & 0xC000000000000001;
      do
      {
        if (v9) {
          id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v10 = *(id *)(v8 + 8 * v6 + 32);
        }
        id v11 = v10;
        id v12 = [v10 standardizedContent:v36];
        if (v12)
        {
          id v13 = v12;
          uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v16 = v15;
        }
        else
        {
          uint64_t v14 = 0;
          uint64_t v16 = 0;
        }
        char v39 = v7;
        unint64_t v18 = v7[2];
        unint64_t v17 = v7[3];
        if (v18 >= v17 >> 1)
        {
          sub_100169BEC(v17 > 1, v18 + 1, 1);
          unint64_t v8 = v36;
          uint64_t v7 = v39;
        }
        ++v6;
        v7[2] = v18 + 1;
        uint64_t v19 = &v7[3 * v18];
        v19[4] = v14;
        v19[5] = v16;
        v19[6] = v11;
      }
      while (v5 != v6);
      a1 = v38;
      goto LABEL_17;
    }
  }
  if (_swiftEmptyArrayStorage[2])
  {
LABEL_17:
    sub_10002F214(&qword_1006A1F48);
    uint64_t v20 = (void *)static _DictionaryStorage.allocate(capacity:)();
    goto LABEL_18;
  }
  uint64_t v20 = &_swiftEmptyDictionarySingleton;
LABEL_18:
  char v39 = v20;
  uint64_t v21 = (void *)swift_bridgeObjectRetain();
  sub_1003D2874(v21, 1, &v39);
  swift_bridgeObjectRelease();
  uint64_t v22 = (uint64_t)v39;
  uint64_t v23 = sub_1002696CC(v36);
  swift_bridgeObjectRelease();
  if (!(a1 >> 62))
  {
    uint64_t v24 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v24) {
      goto LABEL_20;
    }
LABEL_33:
    swift_release();
    swift_bridgeObjectRelease();
    return v23;
  }
  swift_bridgeObjectRetain();
  uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
  if (!v24) {
    goto LABEL_33;
  }
LABEL_20:
  if (v24 >= 1)
  {
    uint64_t v25 = 0;
    unint64_t v37 = a1 & 0xC000000000000001;
    do
    {
      if (v37) {
        id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v26 = *(id *)(a1 + 8 * v25 + 32);
      }
      Swift::Int v27 = v26;
      id v28 = [v26 visibleInlineAttachments:v37];
      sub_100031418(0, &qword_10069BE00);
      sub_10002C8EC((unint64_t *)&qword_1006A0F38, &qword_10069BE00);
      uint64_t v29 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      swift_retain();
      sub_1003D3154(v29, v22);
      uint64_t v31 = v30;
      swift_bridgeObjectRelease();
      swift_release();
      if ((v23 & 0xC000000000000001) != 0)
      {
        if (v23 < 0) {
          uint64_t v32 = v23;
        }
        else {
          uint64_t v32 = v23 & 0xFFFFFFFFFFFFFF8;
        }
        swift_bridgeObjectRetain();
        uint64_t v33 = __CocoaSet.count.getter();
        Swift::Int v34 = sub_100395618(v32, v33);
        swift_bridgeObjectRelease();
        uint64_t v23 = v34;
      }
      ++v25;
      uint64_t v23 = sub_1003D2C10(v31, v23);
      swift_bridgeObjectRelease();

      a1 = v38;
    }
    while (v24 != v25);
    goto LABEL_33;
  }
LABEL_35:
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

void sub_1003D3C08()
{
  uint64_t v1 = v0;
  v14.receiver = v0;
  v14.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  id v2 = [v0 navigationItem];
  id v3 = [self mainBundle];
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v3 localizedStringForKey:v4 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v2 setTitle:v6];

  id v7 = [v1 navigationItem];
  sub_100031418(0, &qword_1006A5B98);
  v15.value.super.super.Class isa = (Class)sub_1003D3E88();
  v15.is_nil = 0;
  Class isa = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemCancel, v15, v16).super.super.isa;
  [v7 setLeftBarButtonItem:isa];

  id v9 = sub_1003D5020(&OBJC_IVAR___ICMoveViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1003D4544);
  id v10 = sub_1003D4408();
  id v11 = [v10 collectionViewDiffableDataSource];

  [v9 setDiffableDataSource:v11];
  id v12 = sub_1003D5020(&OBJC_IVAR___ICMoveViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1003D4544);
  [v12 setDelegate:v1];

  if ((objc_msgSend(self, "ic_isVision") & 1) == 0) {
    sub_1003D3F70();
  }
  id v13 = sub_1003D4408();
  [v13 reloadDataAnimated:0];
}

id sub_1003D3E88()
{
  uint64_t v1 = OBJC_IVAR___ICMoveViewController____lazy_storage___dismissAction;
  id v2 = *(void **)(v0 + OBJC_IVAR___ICMoveViewController____lazy_storage___dismissAction);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___ICMoveViewController____lazy_storage___dismissAction);
  }
  else
  {
    uint64_t v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    id v5 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    NSString v6 = *(void **)(v0 + v1);
    *(void *)(v4 + v1) = v5;
    id v3 = v5;

    id v2 = 0;
  }
  id v7 = v2;
  return v3;
}

void sub_1003D3F70()
{
  if (qword_10069AF18 != -1) {
    swift_once();
  }
  double v1 = *(double *)&qword_1006CDF80;
  id v2 = [v0 navigationController];
  if (v2)
  {
    id v3 = v2;
    id v4 = [v2 paletteForEdge:2 size:0.0 v1];

    if (v4)
    {
      id v5 = sub_1003D5020(&OBJC_IVAR___ICMoveViewController____lazy_storage___headerView, (uint64_t (*)(uint64_t))sub_1003D5084);
      [v4 addSubview:v5];

      id v6 = [v0 navigationController];
      if (v6)
      {
        id v7 = v6;
        [v6 attachPalette:v4 isPinned:0];
      }
      Swift::Int v27 = self;
      sub_10002F214(&qword_10069BA00);
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_100524CD0;
      id v9 = sub_1003D5020(&OBJC_IVAR___ICMoveViewController____lazy_storage___headerView, (uint64_t (*)(uint64_t))sub_1003D5084);
      id v10 = [v9 leadingAnchor];

      id v11 = [v4 layoutMarginsGuide];
      id v12 = [v11 leadingAnchor];

      id v13 = [v10 constraintEqualToAnchor:v12];
      *(void *)(v8 + 32) = v13;
      id v14 = sub_1003D5020(&OBJC_IVAR___ICMoveViewController____lazy_storage___headerView, (uint64_t (*)(uint64_t))sub_1003D5084);
      id v15 = [v14 trailingAnchor];

      id v16 = [v4 layoutMarginsGuide];
      id v17 = [v16 trailingAnchor];

      id v18 = [v15 constraintEqualToAnchor:v17];
      *(void *)(v8 + 40) = v18;
      id v19 = sub_1003D5020(&OBJC_IVAR___ICMoveViewController____lazy_storage___headerView, (uint64_t (*)(uint64_t))sub_1003D5084);
      id v20 = [v19 topAnchor];

      id v21 = [v4 topAnchor];
      id v22 = [v20 constraintEqualToAnchor:v21];

      *(void *)(v8 + 48) = v22;
      id v23 = sub_1003D5020(&OBJC_IVAR___ICMoveViewController____lazy_storage___headerView, (uint64_t (*)(uint64_t))sub_1003D5084);
      id v24 = [v23 bottomAnchor];

      id v25 = [v4 bottomAnchor];
      id v26 = [v24 constraintEqualToAnchor:v25];

      *(void *)(v8 + 56) = v26;
      specialized Array._endMutation()();
      sub_100031418(0, (unint64_t *)&qword_1006A5260);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v27 activateConstraints:isa];
    }
  }
}

char *sub_1003D4408()
{
  uint64_t v1 = OBJC_IVAR___ICMoveViewController____lazy_storage___moveDataSource;
  id v2 = *(void **)(v0 + OBJC_IVAR___ICMoveViewController____lazy_storage___moveDataSource);
  if (v2)
  {
    id v3 = *(char **)(v0 + OBJC_IVAR___ICMoveViewController____lazy_storage___moveDataSource);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = sub_1003D5020(&OBJC_IVAR___ICMoveViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1003D4544);
    unint64_t v6 = *(void *)(v4 + OBJC_IVAR___ICMoveViewController_sourceObjectIds);
    objc_allocWithZone((Class)type metadata accessor for MoveDataSource());
    swift_bridgeObjectRetain();
    id v7 = sub_100380BD8(v5, v6);
    uint64_t v8 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v7;
    id v3 = v7;

    id v2 = 0;
  }
  id v9 = v2;
  return v3;
}

id sub_1003D44C8()
{
  uint64_t v1 = OBJC_IVAR___ICMoveViewController____lazy_storage___folderCreationController;
  id v2 = *(void **)(v0 + OBJC_IVAR___ICMoveViewController____lazy_storage___folderCreationController);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___ICMoveViewController____lazy_storage___folderCreationController);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)ICFolderCreationController) initWithViewController:v0 creationApproach:1];
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1003D4544(void *a1)
{
  id v2 = [a1 legacyViewContext];
  id v3 = [a1 modernViewContext];
  id v4 = [a1 viewControllerManager];
  if (v4)
  {
    id v5 = v4;
    *((void *)&v13 + 1) = sub_100031418(0, &qword_10069DC18);
    *(void *)&long long v12 = v5;
  }
  else
  {
    long long v12 = 0u;
    long long v13 = 0u;
  }
  v11[3] = sub_10002F214(&qword_10069B4D0);
  v11[0] = swift_allocObject();
  sub_1002510BC((uint64_t)&v12, v11[0] + 16);
  id v6 = (void *)sub_1001A7980((uint64_t)v11);
  sub_100018FE8((uint64_t)v11);
  sub_100015BE0((uint64_t)&v12);
  id v7 = objc_allocWithZone((Class)ICFolderListCollectionView);
  id v8 = a1;
  id v9 = [v7 initWithPresentingViewController:v8 legacyManagedObjectContext:v2 modernManagedObjectContext:v3 viewControllerManager:v6[0]];

  [v9 setHasGroupInset:1];
  [v9 setHasSwipeActions:0];
  [v9 setShouldShowMoveHeader:[self ic_isVision]];
  [v9 setDragDelegate:0];
  [v9 setDragInteractionEnabled:0];
  [v9 setSpringLoaded:0];
  return v9;
}

uint64_t sub_1003D48AC(void *a1)
{
  uint64_t v2 = v1;
  id v4 = sub_1003D4408();
  id v5 = [v4 collectionViewDiffableDataSource];

  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v7 = [v5 itemIdentifierForIndexPath:isa];

  if (v7)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v13, 0, sizeof(v13));
  }
  sub_1001BC02C((uint64_t)v13, (uint64_t)v14);
  if (v15)
  {
    sub_1002510BC((uint64_t)v14, (uint64_t)v13);
    sub_100031418(0, &qword_1006A5B90);
    if (swift_dynamicCast())
    {
      if (![v12 type])
      {
        [a1 ic_deselectAllItemsAnimated:1];
        if ([v12 parentIdentifier])
        {
          self;
          id v8 = (void *)swift_dynamicCastObjCClass();
          if (!v8) {
            swift_unknownObjectRelease();
          }
        }
        else
        {
          id v8 = 0;
        }
        sub_1003D4B7C(v8);

        goto LABEL_21;
      }
      if ([v12 type] == (id)1)
      {
        [a1 ic_deselectAllItemsAnimated:1];
        sub_1003D4D54();

LABEL_22:
        sub_100018FE8((uint64_t)v13);
        return sub_100015BE0((uint64_t)v14);
      }
    }
    sub_100031418(0, &qword_10069D940);
    if (swift_dynamicCast()
      || (sub_100031418(0, (unint64_t *)&qword_10069E810), swift_dynamicCast()))
    {
      id v8 = v12;
      id v9 = *(void (**)())(v2 + OBJC_IVAR___ICMoveViewController_completionHandler);
      if (v9)
      {
        sub_10002E71C((uint64_t)v9);
        id v10 = v12;
        v9();

        sub_10002E70C((uint64_t)v9);
      }
LABEL_21:

      goto LABEL_22;
    }
    sub_100018FE8((uint64_t)v13);
  }
  [a1 ic_deselectAllItemsAnimated:1];
  return sub_100015BE0((uint64_t)v14);
}

void sub_1003D4B7C(id a1)
{
  id v2 = sub_1003D44C8();
  if (a1)
  {
    a1 = [a1 accountObjectID];
    id v3 = sub_1003D5020(&OBJC_IVAR___ICMoveViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1003D4544);
    id v4 = [v3 modernManagedObjectContext];

    if (a1)
    {
      id v5 = [v4 objectWithID:a1];

      a1 = (id)swift_dynamicCastObjCProtocolConditional();
      if (!a1) {
    }
      }
    else
    {
    }
  }
  [v2 setNoteContainer:a1];

  swift_unknownObjectRelease();
  id v6 = sub_1003D44C8();
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1003D5654;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100289EA0;
  void aBlock[3] = &unk_10063A4E0;
  id v8 = _Block_copy(aBlock);
  swift_release();
  [v6 promptToAddFolderAllowingSmartFolder:0 withCompletionHandler:v8];
  _Block_release(v8);
}

void sub_1003D4D54()
{
  uint64_t v1 = self;
  [v1 enableLocalAccount];
  id v2 = [v1 sharedContext];
  [v2 addOrDeleteLocalAccountIfNecessary];

  id v3 = [v1 sharedContext];
  [v3 save];

  id v4 = self;
  id v5 = sub_1003D5020(&OBJC_IVAR___ICMoveViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1003D4544);
  id v6 = [v5 modernManagedObjectContext];

  id v10 = [v4 localAccountInContext:v6];
  uint64_t v7 = *(void (**)(id))(v0 + OBJC_IVAR___ICMoveViewController_completionHandler);
  if (v7)
  {
    swift_retain();
    if (v10)
    {
      id v8 = [v10 defaultFolder];
      id v9 = [v8 objectID];
    }
    else
    {
      id v9 = 0;
    }
    v7(v9);

    sub_10002E70C((uint64_t)v7);
    swift_unknownObjectRelease();
  }
  else
  {
  }
}

id sub_1003D5020(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2(v2);
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

char *sub_1003D5084(uint64_t a1)
{
  type metadata accessor for MoveHeaderView();
  uint64_t v2 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v2 setPreservesSuperviewLayoutMargins:1];
  id v3 = sub_1003D5020(&OBJC_IVAR___ICMoveViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1003D4544);
  id v4 = [v3 modernManagedObjectContext];

  uint64_t v5 = OBJC_IVAR___ICMoveHeaderView_modernContext;
  id v6 = *(void **)&v2[OBJC_IVAR___ICMoveHeaderView_modernContext];
  *(void *)&v2[OBJC_IVAR___ICMoveHeaderView_modernContext] = v4;
  id v7 = v4;

  id v8 = (char *)sub_10037203C();
  id v9 = *(void **)&v2[v5];
  id v10 = *(void **)&v8[OBJC_IVAR___ICMovePreviewView_modernContext];
  *(void *)&v8[OBJC_IVAR___ICMovePreviewView_modernContext] = v9;
  id v11 = v9;

  id v12 = sub_1003D5020(&OBJC_IVAR___ICMoveViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1003D4544);
  id v13 = [v12 legacyManagedObjectContext];

  uint64_t v14 = OBJC_IVAR___ICMoveHeaderView_htmlContext;
  uint64_t v15 = *(void **)&v2[OBJC_IVAR___ICMoveHeaderView_htmlContext];
  *(void *)&v2[OBJC_IVAR___ICMoveHeaderView_htmlContext] = v13;
  id v16 = v13;

  id v17 = (char *)sub_10037203C();
  id v18 = *(void **)&v2[v14];
  id v19 = *(void **)&v17[OBJC_IVAR___ICMovePreviewView_htmlContext];
  *(void *)&v17[OBJC_IVAR___ICMovePreviewView_htmlContext] = v18;
  id v20 = v18;

  *(void *)&v2[OBJC_IVAR___ICMoveHeaderView_objectIds] = *(void *)(a1
                                                                     + OBJC_IVAR___ICMoveViewController_sourceObjectIds);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_100372B7C();
  return v2;
}

void sub_1003D525C()
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    uint64_t v2 = *(void (**)(void))&Strong[OBJC_IVAR___ICMoveViewController_completionHandler];
    if (v2)
    {
      sub_10002E71C(*(void *)&Strong[OBJC_IVAR___ICMoveViewController_completionHandler]);

      v2(0);
      sub_10002E70C((uint64_t)v2);
    }
    else
    {
    }
  }
}

void sub_1003D52F8(void *a1)
{
  if (a1)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v3 = (void *)Strong;
      id v4 = *(void (**)(void))(Strong + OBJC_IVAR___ICMoveViewController_completionHandler);
      if (v4)
      {
        id v5 = a1;
        sub_10002E71C((uint64_t)v4);

        id v6 = [v5 objectID];
        v4();
        sub_10002E70C((uint64_t)v4);

        id v3 = v5;
      }
    }
  }
}

uint64_t type metadata accessor for MoveViewController()
{
  return self;
}

id sub_1003D5568(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v6 = &v2[OBJC_IVAR___ICMoveViewController_completionHandler];
  *(void *)id v6 = 0;
  *((void *)v6 + 1) = 0;
  *(void *)&v2[OBJC_IVAR___ICMoveViewController____lazy_storage___moveDataSource] = 0;
  *(void *)&v2[OBJC_IVAR___ICMoveViewController____lazy_storage___folderCreationController] = 0;
  *(void *)&v2[OBJC_IVAR___ICMoveViewController____lazy_storage___collectionView] = 0;
  *(void *)&v2[OBJC_IVAR___ICMoveViewController____lazy_storage___headerView] = 0;
  *(void *)&v2[OBJC_IVAR___ICMoveViewController____lazy_storage___dismissAction] = 0;
  *(void *)&v2[OBJC_IVAR___ICMoveViewController_sourceObjectIds] = a2;
  v8.receiver = v2;
  v8.super_class = ObjectType;
  return [super initWithViewMode:0 viewControllerManager:a1 viewControllerType:1];
}

uint64_t sub_1003D561C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1003D5654(void *a1)
{
}

uint64_t sub_1003D565C()
{
  if (*(void *)(v0 + 40)) {
    sub_100018FE8(v0 + 16);
  }

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1003D569C()
{
}

void sub_1003D56A4()
{
  uint64_t v1 = &v0[OBJC_IVAR___ICMoveViewController_completionHandler];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  *(void *)&v0[OBJC_IVAR___ICMoveViewController____lazy_storage___moveDataSource] = 0;
  *(void *)&v0[OBJC_IVAR___ICMoveViewController____lazy_storage___folderCreationController] = 0;
  *(void *)&v0[OBJC_IVAR___ICMoveViewController____lazy_storage___collectionView] = 0;
  *(void *)&v0[OBJC_IVAR___ICMoveViewController____lazy_storage___headerView] = 0;
  *(void *)&v0[OBJC_IVAR___ICMoveViewController____lazy_storage___dismissAction] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1003D5750()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003D5790()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

id sub_1003D5804()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for NoteDebugStatusController()) init];
  qword_1006CE0D8 = (uint64_t)result;
  return result;
}

uint64_t sub_1003D5998@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1003D5A18(void **a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v2;
  id v5 = v3;
  return static Published.subscript.setter();
}

id sub_1003D5A8C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_10002F214(&qword_1006A5C48);
  uint64_t v27 = *(void *)(v3 - 8);
  uint64_t v28 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  id v26 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v7 = (char *)&v26 - v6;
  uint64_t v8 = sub_10002F214(&qword_1006A5C50);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10002F214(&qword_1006A5C58);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = &v1[OBJC_IVAR____TtC11MobileNotes25NoteDebugStatusController__currentNote];
  uint64_t v29 = 0;
  id v17 = v1;
  sub_10002F214(&qword_10069DE88);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v15, v12);

  v30.receiver = v17;
  v30.super_class = ObjectType;
  id v18 = [super init];
  id v19 = self;
  id v20 = v18;
  id v21 = [v19 sharedContext];
  if (v21)
  {
    id v22 = v21;
    swift_getKeyPath();
    _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)();

    swift_release();
    swift_beginAccess();
    Published.projectedValue.getter();
    swift_endAccess();
    sub_1003D604C();
    Publisher<>.assign(to:)();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v23 = v27;
    uint64_t v24 = v28;
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v26, v7, v28);
    swift_beginAccess();
    Published.projectedValue.setter();
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v24);
  }

  return v20;
}

uint64_t sub_1003D5EB0()
{
  return type metadata accessor for NoteDebugStatusController();
}

uint64_t type metadata accessor for NoteDebugStatusController()
{
  uint64_t result = qword_1006A5C30;
  if (!qword_1006A5C30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1003D5F04()
{
  sub_1003D5F94();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1003D5F94()
{
  if (!qword_1006A5C40)
  {
    sub_10001DFF4(&qword_10069DE88);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1006A5C40);
    }
  }
}

const char *sub_1003D5FF0()
{
  return "currentNote";
}

id sub_1003D5FFC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 currentNote];
  *a2 = result;
  return result;
}

id sub_1003D6038(void *a1, id *a2)
{
  return [*a2 setCurrentNote:*a1];
}

unint64_t sub_1003D604C()
{
  unint64_t result = qword_1006A5C60;
  if (!qword_1006A5C60)
  {
    sub_10001DFF4(&qword_1006A5C50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5C60);
  }
  return result;
}

unint64_t sub_1003D60B4()
{
  unint64_t result = qword_1006A5C80;
  if (!qword_1006A5C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5C80);
  }
  return result;
}

void *sub_1003D6108(double a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5, uint64_t a6)
{
  uint64_t v35 = a6;
  uint64_t v7 = v6;
  uint64_t v34 = a5;
  uint64_t v11 = type metadata accessor for ICQueryType();
  uint64_t v32 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ICQueryEntity();
  uint64_t v33 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  id v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10002F214(&qword_1006A5D08);
  __chkstk_darwin(v17 - 8);
  id v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v21 = v36;
  id v22 = (void *)(*(uint64_t (**)(void, void, void, uint64_t, uint64_t, uint64_t, uint64_t, double))(a3 + 24))(*(void *)(v7 + 8), *(void *)(v7 + 16), a4 & 0x101, v34, v35, ObjectType, a3, a1);
  if (!v21)
  {
    uint64_t v23 = v33;
    uint64_t v35 = v14;
    uint64_t v36 = type metadata accessor for ICFolderArchiveModel(0);
    sub_1003DB4D8(v7 + *(int *)(v36 + 44), (uint64_t)v19);
    uint64_t v24 = type metadata accessor for ICFolderArchiveModel.Query(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v19, 1, v24) == 1)
    {
      sub_10002B754((uint64_t)v19, &qword_1006A5D08);
      id v25 = 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v16, v19, v35);
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v13, &v19[*(int *)(v24 + 20)], v11);
      id v26 = objc_allocWithZone((Class)type metadata accessor for ICQuery());
      id v25 = (void *)ICQuery.init(entity:type:)();
      sub_1003DB478((uint64_t)v19, type metadata accessor for ICFolderArchiveModel.Query);
    }
    [v22 setSmartFolderQueryObjC:v25];

    if ([v22 isRenamable])
    {
      swift_bridgeObjectRetain();
      NSString v27 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v22 setTitle:v27];
    }
    if ([v22 supportsCustomNoteSortType])
    {
      unint64_t v28 = *(unsigned __int16 *)(v7 + *(int *)(v36 + 48));
      if ((v28 & 0xFF00) == 0x200) {
        id v29 = 0;
      }
      else {
        id v29 = [self folderNoteSortTypeWithOrder:qword_100536AD8[(char)v28] direction:(v28 >> 8) & 1];
      }
      [v22 setCustomNoteSortType:v29];
    }
  }
  return v22;
}

id sub_1003D6500(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + *(int *)(type metadata accessor for ICFolderArchiveModel(0) + 52));
  if (!v5) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = (unint64_t)sub_100259FD8(v5, a2);
  swift_bridgeObjectRelease();
  id v7 = [a1 subFolderIdentifiersOrderedSet];
  [v7 removeAllObjects];

  id v8 = [a1 subFolderIdentifiersOrderedSet];
  uint64_t v9 = v8;
  if (!(v6 >> 62))
  {
    uint64_t v10 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v11 = v8;
    id result = (id)swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_4;
    }
LABEL_12:

    swift_bridgeObjectRelease_n();
    [a1 setSubFolderOrderMergeableDataDirty:1];
    [a1 saveSubFolderMergeableDataIfNeeded];
    return [a1 subFolderIdentifiersOrderedSetDocument];
  }
  id v16 = v8;
  swift_bridgeObjectRetain();
  id result = (id)_CocoaArrayWrapper.endIndex.getter();
  uint64_t v10 = (uint64_t)result;
  if (!result) {
    goto LABEL_12;
  }
LABEL_4:
  if (v10 >= 1)
  {
    for (uint64_t i = 0; i != v10; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0) {
        id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v14 = *(id *)(v6 + 8 * i + 32);
      }
      uint64_t v15 = v14;
      [v9 addObject:v14];
    }
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003D66CC(uint64_t a1)
{
  uint64_t v4 = sub_10002F214(&qword_1006A1110);
  __chkstk_darwin(v4 - 8);
  uint64_t v35 = (uint64_t)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_1006A1118);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PersistedActivityEvent();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v31 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = _s8ActivityVMa();
  uint64_t v12 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  id v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v1 + *(int *)(type metadata accessor for ICFolderArchiveModel(0) + 56));
  if (!v15) {
    return 0;
  }
  v27[2] = a1;
  unint64_t v37 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v16 = *(void *)(v15 + 16);
  if (!v16) {
    goto LABEL_13;
  }
  v27[0] = v15;
  v27[1] = v2;
  uint64_t v17 = v15 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v18 = *(void *)(v12 + 72);
  uint64_t v33 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v34 = v18;
  unint64_t v28 = (void (**)(char *, uint64_t))(v10 + 8);
  id v29 = (void (**)(char *, char *, uint64_t))(v10 + 32);
  swift_bridgeObjectRetain();
  uint64_t v36 = v14;
  do
  {
    sub_1003DB410(v17, (uint64_t)v14, (uint64_t (*)(void))_s8ActivityVMa);
    ICInternalSettingsIsAlexandriaDemoModeEnabled();
    ICInternalSettingsIsAlexandriaDemoModeEnabled();
    sub_100283E8C((uint64_t)v8);
    if ((*v33)(v8, 1, v9) == 1)
    {
      sub_10002B754((uint64_t)v8, &qword_1006A1118);
      uint64_t v32 = sub_100031418(0, (unint64_t *)&qword_1006A5380);
      id v19 = v8;
      uint64_t v20 = v35;
      sub_100284660(v35);
      id v14 = v36;
      static ICCloudSyncingObject.cloudSyncingObjectActivityEvent(forData:fallback:)();
      uint64_t v21 = v20;
      id v8 = v19;
      sub_10002B754(v21, &qword_1006A1110);
      sub_1003DB478((uint64_t)v14, (uint64_t (*)(void))_s8ActivityVMa);
    }
    else
    {
      id v22 = v31;
      (*v29)(v31, v8, v9);
      sub_100031418(0, (unint64_t *)&qword_1006A5380);
      uint64_t v23 = v35;
      sub_100284660(v35);
      uint64_t v24 = static ICCloudSyncingObject.cloudSyncingObjectActivityEvent(for:fallback:)();
      uint64_t v25 = v23;
      id v14 = v36;
      sub_10002B754(v25, &qword_1006A1110);
      (*v28)(v22, v9);
      sub_1003DB478((uint64_t)v14, (uint64_t (*)(void))_s8ActivityVMa);
      if (!v24) {
        goto LABEL_8;
      }
    }
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
LABEL_8:
    v17 += v34;
    --v16;
  }
  while (v16);
  swift_bridgeObjectRelease();
LABEL_13:
  ICCloudSyncingObject.cloudSyncingObjectActivityEvents.setter();
  return ICCloudSyncingObject.cloudSyncingObjectActivityEvents.getter();
}

void sub_1003D6B78(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  id v85 = a2;
  uint64_t v5 = _s8ActivityVMa();
  uint64_t v88 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_1006A5D08);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)a3 = 2;
  *(_OWORD *)(a3 + 24) = 0u;
  *(_OWORD *)(a3 + 40) = 0u;
  *(unsigned char *)(a3 + 56) = 2;
  *(unsigned char *)(a3 + 80) = 3;
  uint64_t v11 = (int *)type metadata accessor for ICFolderArchiveModel(0);
  uint64_t v12 = a3 + v11[11];
  uint64_t v13 = type metadata accessor for ICFolderArchiveModel.Query(0);
  id v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  uint64_t v84 = v12;
  v14(v12, 1, 1, v13);
  uint64_t v15 = v11[12];
  *(_WORD *)(a3 + v15) = 512;
  uint64_t v82 = v11[13];
  uint64_t v83 = v15;
  *(void *)(a3 + v82) = 0;
  uint64_t v16 = v11[14];
  id v86 = a1;
  uint64_t v87 = (void *)a3;
  uint64_t v81 = v16;
  *(void *)(a3 + v16) = 0;
  id v17 = [a1 identifier];
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v21 = v20;
  }
  else
  {
    uint64_t v19 = 0;
    unint64_t v21 = 0xE000000000000000;
  }
  id v22 = v86;
  uint64_t v23 = v87;
  v87[1] = v19;
  void v23[2] = v21;
  id v24 = [v22 title];
  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v27 = v26;

  v23[8] = v25;
  v23[9] = v27;
  id v28 = [v22 smartFolderQueryObjC];
  if (v28)
  {
    id v29 = v28;
    dispatch thunk of ICQuery.entity.getter();
    dispatch thunk of ICQuery.type.getter();

    v14((uint64_t)v10, 0, 1, v13);
  }
  else
  {
    v14((uint64_t)v10, 1, 1, v13);
  }
  sub_1003DB344((uint64_t)v10, v84);
  id v30 = v86;
  id v31 = [v86 customNoteSortType];
  if (!v31) {
    goto LABEL_11;
  }
  uint64_t v32 = v31;
  if ([v31 isDefault]
    || (unsigned __int8 v33 = sub_1003D9EDC((uint64_t)[v32 order]), v33 == 3))
  {

LABEL_11:
    __int16 v34 = 512;
    goto LABEL_12;
  }
  unsigned __int8 v49 = v33;
  char v50 = sub_1003DA098((uint64_t)[v32 direction]);

  if (v50 == 2) {
    goto LABEL_11;
  }
  __int16 v34 = v49 | ((v50 & 1) << 8);
LABEL_12:
  *(_WORD *)((char *)v87 + v83) = v34;
  id v35 = [v30 subFolderIdentifiersOrderedSet];
  id v36 = [v35 allObjects];

  sub_100031418(0, (unint64_t *)&qword_10069C1B8);
  unint64_t v37 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v37 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v38) {
      goto LABEL_14;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    unint64_t v40 = _swiftEmptyArrayStorage;
    goto LABEL_27;
  }
  uint64_t v38 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v38) {
    goto LABEL_26;
  }
LABEL_14:
  unint64_t v89 = _swiftEmptyArrayStorage;
  sub_100169AAC(0, v38 & ~(v38 >> 63), 0);
  if (v38 < 0)
  {
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v39 = 0;
  unint64_t v40 = v89;
  do
  {
    if ((v37 & 0xC000000000000001) != 0) {
      id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v41 = *(id *)(v37 + 8 * v39 + 32);
    }
    Swift::String v42 = v41;
    uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v45 = v44;

    unint64_t v89 = v40;
    unint64_t v47 = v40[2];
    unint64_t v46 = v40[3];
    if (v47 >= v46 >> 1)
    {
      sub_100169AAC(v46 > 1, v47 + 1, 1);
      unint64_t v40 = v89;
    }
    ++v39;
    v40[2] = v47 + 1;
    uint64_t v48 = &v40[2 * v47];
    v48[4] = v43;
    v48[5] = v45;
  }
  while (v38 != v39);
  swift_bridgeObjectRelease();
  id v30 = v86;
LABEL_27:
  uint64_t v51 = v87;
  uint64_t v52 = v82;
  swift_bridgeObjectRelease();
  *(void *)((char *)v51 + v52) = v40;
  uint64_t v53 = v85;
  if ((v85[6] & 1) == 0)
  {
    sub_10025AC00(v85);
    if ((*((unsigned char *)v53 + 51) & 1) == 0)
    {
LABEL_29:

      return;
    }
    goto LABEL_45;
  }
  id v54 = v30;
  unint64_t v37 = ICCloudSyncingObject.cloudSyncingObjectActivityEvents.getter();

  if (v37 >> 62)
  {
LABEL_42:
    swift_bridgeObjectRetain();
    uint64_t v55 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v55) {
      goto LABEL_32;
    }
    goto LABEL_43;
  }
  uint64_t v55 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v55)
  {
LABEL_32:
    unint64_t v89 = _swiftEmptyArrayStorage;
    sub_100169DCC(0, v55 & ~(v55 >> 63), 0);
    if (v55 < 0)
    {
      __break(1u);
      return;
    }
    uint64_t v56 = 0;
    int64_t v57 = v89;
    do
    {
      if ((v37 & 0xC000000000000001) != 0) {
        id v58 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v58 = *(id *)(v37 + 8 * v56 + 32);
      }
      sub_100282C28(v58, (uint64_t)v7);
      unint64_t v89 = v57;
      unint64_t v60 = v57[2];
      unint64_t v59 = v57[3];
      if (v60 >= v59 >> 1)
      {
        sub_100169DCC(v59 > 1, v60 + 1, 1);
        int64_t v57 = v89;
      }
      ++v56;
      v57[2] = v60 + 1;
      sub_1003DB3AC((uint64_t)v7, (uint64_t)v57+ ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80))+ *(void *)(v88 + 72) * v60);
    }
    while (v55 != v56);
    swift_bridgeObjectRelease();
    id v30 = v86;
    goto LABEL_44;
  }
LABEL_43:
  swift_bridgeObjectRelease();
  int64_t v57 = _swiftEmptyArrayStorage;
LABEL_44:
  unint64_t v61 = v87;
  uint64_t v62 = v81;
  swift_bridgeObjectRelease();
  uint64_t v63 = v85;
  sub_10025AC00(v85);
  *(void *)((char *)v61 + v62) = v57;
  if ((*((unsigned char *)v63 + 51) & 1) == 0) {
    goto LABEL_29;
  }
LABEL_45:
  id v64 = [v30 parent];
  if (v64
    && (uint64_t v65 = v64, v66 = [v64 identifier], v65, v66)
    || (id v67 = [v30 account],
        id v66 = [v67 identifier],
        v67,
        v66))
  {
    uint64_t v68 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v70 = v69;
  }
  else
  {
    uint64_t v68 = 0;
    uint64_t v70 = 0;
  }
  uint64_t v71 = v87;
  swift_bridgeObjectRelease();
  v71[3] = v68;
  v71[4] = v70;
  id v72 = [v30 parent];
  if (v72)
  {
    id v73 = v72;
    id v74 = [v72 title];
  }
  else
  {
    id v73 = [v30 account];
    id v74 = [v73 localizedName];
  }
  id v75 = v74;

  uint64_t v76 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v78 = v77;

  unsigned int v79 = v87;
  swift_bridgeObjectRelease();
  v79[5] = v76;
  v79[6] = v78;
  *((unsigned char *)v79 + 56) = [v30 markedForDeletion];
  LOBYTE(v75) = sub_1003DA1A0((unsigned __int16)[v30 folderType]);

  *((unsigned char *)v79 + 80) = (_BYTE)v75;
}

uint64_t sub_1003D7340()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100032974(v0, qword_1006A5C68);
  sub_10003293C(v0, (uint64_t)qword_1006A5C68);
  return static Logger.archiving.getter();
}

unint64_t sub_1003D738C(char a1)
{
  unint64_t result = 0x6E65644965707974;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696669746E656469;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x6954746E65726170;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0x656C746974;
      break;
    case 6:
      unint64_t result = 1701869940;
      break;
    case 7:
      unint64_t result = 0x7972657571;
      break;
    case 8:
      unint64_t result = 0x74726F5365746F6ELL;
      break;
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    case 10:
      unint64_t result = 0x6974697669746361;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1003D7508(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10002F214(&qword_1006A5EF8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10015E154(a1, a1[3]);
  sub_1003DD394();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v11) = *v3;
  char v12 = 0;
  sub_10024EA04();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v11) = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v11) = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v11) = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v11) = 5;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v11) = v3[80];
    char v12 = 6;
    sub_1003DD3E8();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    uint64_t v9 = (int *)type metadata accessor for ICFolderArchiveModel(0);
    LOBYTE(v11) = 7;
    type metadata accessor for ICFolderArchiveModel.Query(0);
    sub_1003D9E94(&qword_1006A5F10, (void (*)(uint64_t))type metadata accessor for ICFolderArchiveModel.Query);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOWORD(v11) = *(_WORD *)&v3[v9[12]];
    char v12 = 8;
    sub_1003DD43C();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    uint64_t v11 = *(void *)&v3[v9[13]];
    char v12 = 9;
    sub_10002F214(&qword_10069FCC8);
    sub_10024EF80(&qword_1006A0670);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    uint64_t v11 = *(void *)&v3[v9[14]];
    char v12 = 10;
    sub_10002F214(&qword_1006A5F20);
    sub_1003DD4E4(&qword_1006A5F28, &qword_1006A5F30);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1003D7924@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = sub_10002F214(&qword_1006A5D08);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_1006A5F38);
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v34 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ICFolderArchiveModel(0);
  uint64_t v10 = (int *)(v9 - 8);
  __chkstk_darwin(v9);
  char v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *char v12 = 2;
  *(_OWORD *)(v12 + 40) = 0u;
  *(_OWORD *)(v12 + 24) = 0u;
  v12[56] = 2;
  *((void *)v12 + 8) = 0;
  *((void *)v12 + 9) = 0;
  v12[80] = 3;
  uint64_t v13 = (uint64_t)&v12[v10[13]];
  uint64_t v14 = type metadata accessor for ICFolderArchiveModel.Query(0);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v39 = v13;
  v15(v13, 1, 1, v14);
  uint64_t v16 = v10[14];
  *(_WORD *)&v12[v16] = 512;
  uint64_t v38 = v10[15];
  *(void *)&v12[v38] = 0;
  uint64_t v17 = v10[16];
  id v35 = a1;
  uint64_t v36 = v17;
  *(void *)&v12[v17] = 0;
  sub_10015E154(a1, a1[3]);
  sub_1003DD394();
  uint64_t v18 = v37;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v18)
  {
    sub_100018FE8((uint64_t)v35);
    uint64_t v20 = v39;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10002B754(v20, &qword_1006A5D08);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v37 = v16;
    uint64_t v19 = v33;
    char v41 = 0;
    sub_10024ED4C();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *char v12 = v40;
    LOBYTE(v40) = 1;
    *((void *)v12 + 1) = KeyedDecodingContainer.decode(_:forKey:)();
    *((void *)v12 + 2) = v21;
    LOBYTE(v40) = 2;
    *((void *)v12 + 3) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    *((void *)v12 + 4) = v22;
    LOBYTE(v40) = 3;
    *((void *)v12 + 5) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    *((void *)v12 + 6) = v23;
    LOBYTE(v40) = 4;
    v12[56] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    LOBYTE(v40) = 5;
    *((void *)v12 + 8) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    *((void *)v12 + 9) = v24;
    char v41 = 6;
    sub_1003DD490();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    v12[80] = v40;
    LOBYTE(v40) = 7;
    sub_1003D9E94(&qword_1006A5C88, (void (*)(uint64_t))type metadata accessor for ICFolderArchiveModel.Query);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_1003DB344((uint64_t)v5, v39);
    char v41 = 8;
    sub_1003D60B4();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    *(_WORD *)&v12[v37] = v40;
    sub_10002F214(&qword_10069FCC8);
    char v41 = 9;
    sub_10024EF80(&qword_1006A06D8);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v25 = v40;
    uint64_t v26 = v38;
    swift_bridgeObjectRelease();
    *(void *)&v12[v26] = v25;
    sub_10002F214(&qword_1006A5F20);
    char v41 = 10;
    sub_1003DD4E4(&qword_1006A5F48, &qword_1006A5F50);
    uint64_t v27 = v34;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v27);
    uint64_t v28 = v40;
    uint64_t v29 = v36;
    swift_bridgeObjectRelease();
    *(void *)&v12[v29] = v28;
    sub_1003DB410((uint64_t)v12, v32, type metadata accessor for ICFolderArchiveModel);
    sub_100018FE8((uint64_t)v35);
    return sub_1003DB478((uint64_t)v12, type metadata accessor for ICFolderArchiveModel);
  }
}

unint64_t sub_1003D7FD8()
{
  return sub_1003D738C(*v0);
}

uint64_t sub_1003D7FE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1003DA364(a1, a2);
  *a3 = result;
  return result;
}

void sub_1003D8008(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_1003D8014(uint64_t a1)
{
  unint64_t v2 = sub_1003DD394();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003D8050(uint64_t a1)
{
  unint64_t v2 = sub_1003DD394();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1003D808C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1003D7924(a1, a2);
}

uint64_t sub_1003D80A4(void *a1)
{
  return sub_1003D7508(a1);
}

uint64_t sub_1003D80BC(char *a1, unsigned __int8 *a2)
{
  return sub_1002757E4(*a1, *a2);
}

Swift::Int sub_1003D80C8()
{
  return Hasher._finalize()();
}

uint64_t sub_1003D8160()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1003D81E4()
{
  return Hasher._finalize()();
}

unint64_t sub_1003D8278@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_10062CAC8;
  unint64_t result = sub_1003DAB1C(*a1, v3);
  *a2 = result;
  return result;
}

void sub_1003D82B0(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = 0x4853415254;
  if (v2 != 1) {
    uint64_t v4 = 0x5452414D53;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0x4C414D524F4ELL;
  }
  if (!v5) {
    unint64_t v3 = 0xE500000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

void sub_1003D8304(void *a1@<X8>)
{
  *a1 = &off_10062B4D8;
}

uint64_t sub_1003D8314()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1003D8374()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1003D83C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1003D99FC(a1, a2, a3, a4, (void (*)(void))sub_1003DDA98, (void (*)(void))sub_1003DDA44);
}

uint64_t sub_1003D83F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1003D9ABC(a1, a2, a3, a4, (void (*)(void))sub_1003DDA98, (void (*)(void))sub_1003DDA44);
}

uint64_t sub_1003D841C(void *a1)
{
  uint64_t v3 = sub_10002F214(&qword_1006A5F58);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10015E154(a1, a1[3]);
  sub_1003D9E40();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  type metadata accessor for ICQueryEntity();
  sub_1003D9E94(&qword_1006A5F60, (void (*)(uint64_t))&type metadata accessor for ICQueryEntity);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for ICFolderArchiveModel.Query(0);
    v8[14] = 1;
    type metadata accessor for ICQueryType();
    sub_1003D9E94(&qword_1006A5F68, (void (*)(uint64_t))&type metadata accessor for ICQueryType);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1003D861C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v24 = type metadata accessor for ICQueryType();
  uint64_t v21 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for ICQueryEntity();
  uint64_t v23 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v25 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10002F214(&qword_1006A5C90);
  uint64_t v26 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ICFolderArchiveModel.Query(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10015E154(a1, a1[3]);
  sub_1003D9E40();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_100018FE8((uint64_t)a1);
  }
  uint64_t v20 = v9;
  char v12 = v11;
  uint64_t v14 = v23;
  uint64_t v13 = v24;
  char v30 = 0;
  sub_1003D9E94(&qword_1006A5CA0, (void (*)(uint64_t))&type metadata accessor for ICQueryEntity);
  uint64_t v15 = v25;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v19 = (uint64_t)v12;
  v16(v12, v15, v27);
  char v29 = 1;
  sub_1003D9E94(&qword_1006A5CA8, (void (*)(uint64_t))&type metadata accessor for ICQueryType);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v28);
  uint64_t v17 = v19;
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v19 + *(int *)(v20 + 20), v5, v13);
  sub_1003DB410(v17, v22, type metadata accessor for ICFolderArchiveModel.Query);
  sub_100018FE8((uint64_t)a1);
  return sub_1003DB478(v17, type metadata accessor for ICFolderArchiveModel.Query);
}

uint64_t sub_1003D8A54()
{
  if (*v0) {
    return 1701869940;
  }
  else {
    return 0x797469746E65;
  }
}

uint64_t sub_1003D8A84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1003DA800(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1003D8AAC(uint64_t a1)
{
  unint64_t v2 = sub_1003D9E40();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003D8AE8(uint64_t a1)
{
  unint64_t v2 = sub_1003D9E40();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1003D8B24@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1003D861C(a1, a2);
}

uint64_t sub_1003D8B3C(void *a1)
{
  return sub_1003D841C(a1);
}

void sub_1003D8B54()
{
  uint64_t v0 = type metadata accessor for ICQueryType();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = v1;
  __chkstk_darwin(v0);
  uint64_t v4 = (void *)((char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for ICQueryEntity();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[1] = v8;
  uint64_t v9 = type metadata accessor for ICFolderArchiveModel.Query(0);
  v22[3] = v9;
  sub_100032974(v9, qword_1006CE0E0);
  v22[2] = sub_10003293C(v9, (uint64_t)qword_1006CE0E0);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for ICQueryEntity.note(_:), v5);
  uint64_t v10 = swift_allocObject();
  sub_10002F214(&qword_10069DC90);
  uint64_t v11 = *(void *)(v1 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_100527F30;
  uint64_t v14 = (uint64_t *)(v13 + v12);
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = 1;
  *uint64_t v14 = v15;
  uint64_t v16 = enum case for ICQueryType.deleted(_:);
  uint64_t v17 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v2 + 104);
  v17(v14, enum case for ICQueryType.deleted(_:), v0);
  uint64_t v18 = (uint64_t *)((char *)v14 + v11);
  uint64_t v19 = swift_allocObject();
  *(unsigned char *)(v19 + 16) = 0;
  *uint64_t v18 = v19;
  v17(v18, v16, v0);
  *(void *)(v10 + 16) = v13;
  *uint64_t v4 = v10;
  v17(v4, enum case for ICQueryType.or(_:), v0);
  id v20 = objc_allocWithZone((Class)type metadata accessor for ICQuery());
  uint64_t v21 = (void *)ICQuery.init(entity:type:)();
  dispatch thunk of ICQuery.entity.getter();
  dispatch thunk of ICQuery.type.getter();
}

uint64_t sub_1003D8E2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for String.Encoding();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static String.Encoding.utf8.getter();
  uint64_t v6 = String.data(using:allowLossyConversion:)();
  unint64_t v8 = v7;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v8 >> 60 == 15)
  {
    uint64_t v9 = type metadata accessor for ICFolderArchiveModel.Query(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
  else
  {
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    type metadata accessor for ICQuery();
    sub_1003D9E94(&qword_1006A5CE0, (void (*)(uint64_t))&type metadata accessor for ICQuery);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    swift_release();
    uint64_t v10 = (void *)v13[1];
    dispatch thunk of ICQuery.entity.getter();
    uint64_t v11 = type metadata accessor for ICFolderArchiveModel.Query(0);
    dispatch thunk of ICQuery.type.getter();

    sub_1001A3F54(v6, v8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 0, 1, v11);
  }
}

uint64_t sub_1003D9088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_10069AFD0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_10003293C(a1, (uint64_t)qword_1006CE0E0);
  return sub_1003DB410(v4, a2, type metadata accessor for ICFolderArchiveModel.Query);
}

uint64_t sub_1003D910C(uint64_t a1)
{
  return sub_1003DB0A4(a1);
}

uint64_t sub_1003D9124(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100275998(*a1, *a2);
}

Swift::Int sub_1003D9130()
{
  return Hasher._finalize()();
}

uint64_t sub_1003D91DC()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1003D9274()
{
  return Hasher._finalize()();
}

unint64_t sub_1003D931C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_10062CB30;
  unint64_t result = sub_1003DAB1C(*a1, v3);
  *a2 = result;
  return result;
}

void sub_1003D9354(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEA00000000005441;
  unint64_t v4 = 0xEB0000000054415FLL;
  uint64_t v5 = 0x4445494649444F4DLL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x454C544954;
    unint64_t v4 = 0xE500000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x5F44455441455243;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

void sub_1003D93BC(void *a1@<X8>)
{
  *a1 = &off_10062B488;
}

uint64_t sub_1003D93CC()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1003D942C()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1003D947C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1003D99FC(a1, a2, a3, a4, (void (*)(void))sub_1003DA930, (void (*)(void))sub_1003DA984);
}

uint64_t sub_1003D94A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1003D9ABC(a1, a2, a3, a4, (void (*)(void))sub_1003DA930, (void (*)(void))sub_1003DA984);
}

uint64_t sub_1003D94D4(char *a1, char *a2)
{
  return sub_1002758E8(*a1, *a2);
}

Swift::Int sub_1003D94E0()
{
  return Hasher._finalize()();
}

uint64_t sub_1003D956C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1003D95E4()
{
  return Hasher._finalize()();
}

uint64_t sub_1003D966C@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10062CB98, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_1003D96CC(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x4E49444E45435341;
  if (*v1) {
    uint64_t v2 = 0x49444E4543534544;
  }
  unint64_t v3 = 0xE900000000000047;
  if (*v1) {
    unint64_t v3 = 0xEA0000000000474ELL;
  }
  *a1 = v2;
  a1[1] = v3;
}

void sub_1003D9714(void *a1@<X8>)
{
  *a1 = &off_10062B4B0;
}

uint64_t sub_1003D9724()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1003D9784()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1003D97D4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1003DAA2C();
  unint64_t v5 = sub_1003DAA80();

  return static ArgumentDecodable<>.defaultArgument.getter(a1, a2, v4, v5, &protocol witness table for String);
}

uint64_t sub_1003D9844(void *a1, __int16 a2)
{
  uint64_t v5 = sub_10002F214(&qword_1006A5F70);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10015E154(a1, a1[3]);
  sub_1003DAE38();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v10[15] = a2;
  v10[14] = 0;
  sub_1003DD578();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    v10[13] = HIBYTE(a2) & 1;
    v10[12] = 1;
    sub_1003DD5CC();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1003D99D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1003D99FC(a1, a2, a3, a4, (void (*)(void))sub_1003DAA2C, (void (*)(void))sub_1003DAA80);
}

uint64_t sub_1003D99FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), void (*a6)(void))
{
  a5();
  a6();

  return ArgumentDecodable<>.init(fromArgument:)();
}

uint64_t sub_1003D9A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1003D9ABC(a1, a2, a3, a4, (void (*)(void))sub_1003DAA2C, (void (*)(void))sub_1003DAA80);
}

uint64_t sub_1003D9ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), void (*a6)(void))
{
  a5();
  a6();

  return static ArgumentDecodable<>.typeSummary(forName:)();
}

uint64_t sub_1003D9B48()
{
  if (*v0) {
    return 0x6F69746365726964;
  }
  else {
    return 0x726564726FLL;
  }
}

uint64_t sub_1003D9B84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1003DAB64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1003D9BAC(uint64_t a1)
{
  unint64_t v2 = sub_1003DAE38();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003D9BE8(uint64_t a1)
{
  unint64_t v2 = sub_1003DAE38();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1003D9C24@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1003DAC5C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = BYTE1(result) & 1;
  }
  return result;
}

uint64_t sub_1003D9C58(void *a1)
{
  if (v1[1]) {
    __int16 v2 = 256;
  }
  else {
    __int16 v2 = 0;
  }
  return sub_1003D9844(a1, v2 | *v1);
}

void sub_1003D9C88()
{
  id v0 = [objc_allocWithZone((Class)ICFolderCustomNoteSortType) init];
  if ([v0 isDefault] || (char v1 = sub_1003D9EDC((uint64_t)objc_msgSend(v0, "order")), v1 == 3))
  {
  }
  else
  {
    char v2 = v1;
    char v4 = sub_1003DA098((uint64_t)[v0 direction]);

    if (v4 != 2)
    {
      char v3 = v4 & 1;
      goto LABEL_5;
    }
  }
  char v2 = 0;
  char v3 = 0;
LABEL_5:
  byte_1006CE0F8 = v2;
  byte_1006CE0F9 = v3;
}

uint64_t sub_1003D9D48@<X0>(unsigned char *a1@<X8>)
{
  if (qword_10069AFD8 != -1) {
    uint64_t result = swift_once();
  }
  char v2 = byte_1006CE0F9;
  *a1 = byte_1006CE0F8;
  a1[1] = v2;
  return result;
}

uint64_t sub_1003D9DB0@<X0>(unsigned __int8 a1@<W0>, _WORD *a2@<X8>)
{
  uint64_t result = sub_1003DAF34(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1003D9DD8()
{
  return sub_1003D9E94(&qword_1006A5C88, (void (*)(uint64_t))type metadata accessor for ICFolderArchiveModel.Query);
}

uint64_t type metadata accessor for ICFolderArchiveModel.Query(uint64_t a1)
{
  return sub_10002EFBC(a1, qword_1006A5E28);
}

unint64_t sub_1003D9E40()
{
  unint64_t result = qword_1006A5C98;
  if (!qword_1006A5C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5C98);
  }
  return result;
}

uint64_t sub_1003D9E94(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003D9EDC(uint64_t a1)
{
  uint64_t result = 1;
  switch(a1)
  {
    case 0:
      if (qword_10069AFC8 != -1) {
        swift_once();
      }
      uint64_t v3 = type metadata accessor for Logger();
      sub_10003293C(v3, (uint64_t)qword_1006A5C68);
      char v4 = Logger.logObject.getter();
      os_log_type_t v5 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v4, v5)) {
        goto LABEL_11;
      }
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      uint64_t v7 = "Cannot serialize default note sort order — returning nil";
      goto LABEL_10;
    case 1:
      return result;
    case 2:
      uint64_t result = 0;
      break;
    case 3:
      uint64_t result = 2;
      break;
    default:
      if (qword_10069AFC8 != -1) {
        swift_once();
      }
      uint64_t v8 = type metadata accessor for Logger();
      sub_10003293C(v8, (uint64_t)qword_1006A5C68);
      char v4 = Logger.logObject.getter();
      os_log_type_t v5 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v6 = 0;
        uint64_t v7 = "Unknown note sort order — returning nil";
LABEL_10:
        _os_log_impl((void *)&_mh_execute_header, v4, v5, v7, v6, 2u);
        swift_slowDealloc();
      }
LABEL_11:

      uint64_t result = 3;
      break;
  }
  return result;
}

uint64_t sub_1003DA098(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  if (a1 == 1) {
    return 1;
  }
  if (qword_10069AFC8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10003293C(v2, (uint64_t)qword_1006A5C68);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v1 = 2;
    os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Unknown note sort direction — returning nil", v5, 2u);
    swift_slowDealloc();
  }
  else
  {

    return 2;
  }
  return v1;
}

uint64_t sub_1003DA1A0(unsigned __int16 a1)
{
  int v1 = a1;
  uint64_t result = 0;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 1;
      break;
    case 2:
      uint64_t result = 2;
      break;
    case 3:
      if (qword_10069AFC8 != -1) {
        swift_once();
      }
      uint64_t v8 = type metadata accessor for Logger();
      sub_10003293C(v8, (uint64_t)qword_1006A5C68);
      os_log_type_t v4 = Logger.logObject.getter();
      os_log_type_t v5 = static os_log_type_t.fault.getter();
      if (!os_log_type_enabled(v4, v5)) {
        goto LABEL_13;
      }
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      uint64_t v7 = "Deprecated folder type — returning nil";
      goto LABEL_12;
    default:
      if (qword_10069AFC8 != -1) {
        swift_once();
      }
      uint64_t v3 = type metadata accessor for Logger();
      sub_10003293C(v3, (uint64_t)qword_1006A5C68);
      os_log_type_t v4 = Logger.logObject.getter();
      os_log_type_t v5 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v6 = 0;
        uint64_t v7 = "Unknown folder type — returning nil";
LABEL_12:
        _os_log_impl((void *)&_mh_execute_header, v4, v5, v7, v6, 2u);
        swift_slowDealloc();
      }
LABEL_13:

      uint64_t result = 3;
      break;
  }
  return result;
}

uint64_t sub_1003DA364(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E65644965707974 && a2 == 0xEE00726569666974;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000100554FB0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6954746E65726170 && a2 == 0xEB00000000656C74 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000100554FD0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7972657571 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x74726F5365746F6ELL && a2 == 0xEB00000000676E69 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000010055C510 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6974697669746361 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t sub_1003DA800(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x797469746E65 && a2 == 0xE600000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1003DA8DC()
{
  unint64_t result = qword_1006A5CB0;
  if (!qword_1006A5CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5CB0);
  }
  return result;
}

unint64_t sub_1003DA930()
{
  unint64_t result = qword_1006A5CB8;
  if (!qword_1006A5CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5CB8);
  }
  return result;
}

unint64_t sub_1003DA984()
{
  unint64_t result = qword_1006A5CC0;
  if (!qword_1006A5CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5CC0);
  }
  return result;
}

unint64_t sub_1003DA9D8()
{
  unint64_t result = qword_1006A5CC8;
  if (!qword_1006A5CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5CC8);
  }
  return result;
}

unint64_t sub_1003DAA2C()
{
  unint64_t result = qword_1006A5CD0;
  if (!qword_1006A5CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5CD0);
  }
  return result;
}

unint64_t sub_1003DAA80()
{
  unint64_t result = qword_1006A5CD8;
  if (!qword_1006A5CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5CD8);
  }
  return result;
}

uint64_t sub_1003DAAD4()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003DAB0C()
{
  return _swift_deallocObject(v0, 17, 7);
}

unint64_t sub_1003DAB1C(Swift::String string, Swift::OpaquePointer cases)
{
  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  unint64_t v5 = _findStringSwitchCase(cases:string:)(cases, v3);
  swift_bridgeObjectRelease();
  if (v5 >= 3) {
    return 3;
  }
  else {
    return v5;
  }
}

uint64_t sub_1003DAB64(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726564726FLL && a2 == 0xE500000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F69746365726964 && a2 == 0xE90000000000006ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1003DAC5C(void *a1)
{
  uint64_t v3 = sub_10002F214(&qword_1006A5CE8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10015E154(a1, a1[3]);
  sub_1003DAE38();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1) {
    return sub_100018FE8((uint64_t)a1);
  }
  v11[14] = 0;
  sub_1003DAE8C();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  unsigned int v7 = v11[15];
  v11[12] = 1;
  sub_1003DAEE0();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  int v9 = v11[13];
  sub_100018FE8((uint64_t)a1);
  if (v9) {
    int v10 = 256;
  }
  else {
    int v10 = 0;
  }
  return v10 | v7;
}

unint64_t sub_1003DAE38()
{
  unint64_t result = qword_1006A5CF0;
  if (!qword_1006A5CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5CF0);
  }
  return result;
}

unint64_t sub_1003DAE8C()
{
  unint64_t result = qword_1006A5CF8;
  if (!qword_1006A5CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5CF8);
  }
  return result;
}

unint64_t sub_1003DAEE0()
{
  unint64_t result = qword_1006A5D00;
  if (!qword_1006A5D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5D00);
  }
  return result;
}

uint64_t sub_1003DAF34(unsigned __int8 a1)
{
  sub_10017B588();
  uint64_t v1 = StringProtocol.components<A>(separatedBy:)();
  swift_bridgeObjectRelease();
  if (*(void *)(v1 + 16) != 2
    || (sub_1003DA8DC(),
        sub_1003DA930(),
        sub_1003DA984(),
        swift_bridgeObjectRetain(),
        uint64_t result = ArgumentDecodable<>.init(fromArgument:)(),
        a1 == 3))
  {
    swift_bridgeObjectRelease();
    return 512;
  }
  if (*(void *)(v1 + 16) >= 2uLL)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1003DA9D8();
    sub_1003DAA2C();
    sub_1003DAA80();
    ArgumentDecodable<>.init(fromArgument:)();
    if (a1 != 2) {
      return a1 | ((a1 & 1) << 8);
    }
    return 512;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003DB0A4(uint64_t a1)
{
  uint64_t v12 = a1;
  uint64_t v1 = type metadata accessor for AnsiStylings();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = 0;
  unint64_t v15 = 0xE000000000000000;
  unsigned int v13 = enum case for AnsiStylings.cyan(_:);
  uint64_t v5 = *(void (**)(char *))(v2 + 104);
  v5(v4);
  DefaultStringInterpolation.appendInterpolation(ansi:)();
  char v6 = *(void (**)(char *, uint64_t))(v2 + 8);
  v6(v4, v1);
  sub_1003DA8DC();
  sub_1003DA930();
  sub_1003DA984();
  v7._countAndFlagsBits = static ArgumentDecodable<>.typeSummary(forName:)();
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = enum case for AnsiStylings.reset(_:);
  ((void (*)(char *, void, uint64_t))v5)(v4, enum case for AnsiStylings.reset(_:), v1);
  DefaultStringInterpolation.appendInterpolation(ansi:)();
  v6(v4, v1);
  v9._countAndFlagsBits = 44;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  ((void (*)(char *, void, uint64_t))v5)(v4, v13, v1);
  DefaultStringInterpolation.appendInterpolation(ansi:)();
  v6(v4, v1);
  sub_1003DA9D8();
  sub_1003DAA2C();
  sub_1003DAA80();
  v10._countAndFlagsBits = static ArgumentDecodable<>.typeSummary(forName:)();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  ((void (*)(char *, uint64_t, uint64_t))v5)(v4, v8, v1);
  DefaultStringInterpolation.appendInterpolation(ansi:)();
  v6(v4, v1);
  return v14;
}

uint64_t type metadata accessor for ICFolderArchiveModel(uint64_t a1)
{
  return sub_10002EFBC(a1, (uint64_t *)&unk_1006A5D68);
}

uint64_t sub_1003DB344(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_1006A5D08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003DB3AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s8ActivityVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003DB410(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003DB478(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1003DB4D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_1006A5D08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for ICFolderArchiveModel.Sorting.CodingKeys()
{
  return &type metadata for ICFolderArchiveModel.Sorting.CodingKeys;
}

ValueMetadata *type metadata accessor for ICFolderArchiveModel.SortingDirections()
{
  return &type metadata for ICFolderArchiveModel.SortingDirections;
}

ValueMetadata *type metadata accessor for ICFolderArchiveModel.SortingOrders()
{
  return &type metadata for ICFolderArchiveModel.SortingOrders;
}

void *sub_1003DB578(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v7;
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    uint64_t v10 = a2[8];
    uint64_t v11 = a2[9];
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    uint64_t v12 = a3[11];
    __dst = (char *)(a1 + v12);
    unsigned int v13 = (char *)a2 + v12;
    *(void *)(a1 + 64) = v10;
    *(void *)(a1 + 72) = v11;
    uint64_t v14 = type metadata accessor for ICFolderArchiveModel.Query(0);
    uint64_t v24 = *(void *)(v14 - 8);
    uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v25(v13, 1, v14))
    {
      uint64_t v15 = sub_10002F214(&qword_1006A5D08);
      memcpy(__dst, v13, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      uint64_t v17 = type metadata accessor for ICQueryEntity();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(__dst, v13, v17);
      uint64_t v18 = *(int *)(v14 + 20);
      uint64_t v19 = &__dst[v18];
      id v20 = &v13[v18];
      uint64_t v21 = type metadata accessor for ICQueryType();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v14);
    }
    uint64_t v22 = a3[13];
    *(_WORD *)((char *)v4 + a3[12]) = *(_WORD *)((char *)a2 + a3[12]);
    *(void *)((char *)v4 + v22) = *(uint64_t *)((char *)a2 + v22);
    *(void *)((char *)v4 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1003DB7EC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  uint64_t v5 = type metadata accessor for ICFolderArchiveModel.Query(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    uint64_t v6 = type metadata accessor for ICQueryEntity();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
    uint64_t v7 = v4 + *(int *)(v5 + 20);
    uint64_t v8 = type metadata accessor for ICQueryType();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1003DB920(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v8 = *(void *)(a2 + 64);
  uint64_t v9 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v10 = a3[11];
  __dst = (char *)(a1 + v10);
  uint64_t v11 = (char *)(a2 + v10);
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v9;
  uint64_t v12 = type metadata accessor for ICFolderArchiveModel.Query(0);
  uint64_t v22 = *(void *)(v12 - 8);
  unsigned int v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v11, 1, v12))
  {
    uint64_t v14 = sub_10002F214(&qword_1006A5D08);
    memcpy(__dst, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v15 = type metadata accessor for ICQueryEntity();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(__dst, v11, v15);
    uint64_t v16 = *(int *)(v12 + 20);
    uint64_t v17 = &__dst[v16];
    uint64_t v18 = &v11[v16];
    uint64_t v19 = type metadata accessor for ICQueryType();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v12);
  }
  uint64_t v20 = a3[13];
  *(_WORD *)(a1 + a3[12]) = *(_WORD *)(a2 + a3[12]);
  *(void *)(a1 + v20) = *(void *)(a2 + v20);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1003DBB40(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v6 = a3[11];
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for ICFolderArchiveModel.Query(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      uint64_t v21 = type metadata accessor for ICQueryEntity();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 24))(v7, v8, v21);
      uint64_t v22 = *(int *)(v9 + 20);
      uint64_t v23 = &v7[v22];
      uint64_t v24 = &v8[v22];
      uint64_t v25 = type metadata accessor for ICQueryType();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
      goto LABEL_7;
    }
    sub_1003DB478((uint64_t)v7, type metadata accessor for ICFolderArchiveModel.Query);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v19 = sub_10002F214(&qword_1006A5D08);
    memcpy(v7, v8, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v14 = type metadata accessor for ICQueryEntity();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
  uint64_t v15 = *(int *)(v9 + 20);
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  uint64_t v18 = type metadata accessor for ICQueryType();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(_WORD *)(a1 + a3[12]) = *(_WORD *)(a2 + a3[12]);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1003DBE6C(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  long long v6 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v7 = a3[11];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  *(_OWORD *)(a1 + 64) = v6;
  uint64_t v10 = type metadata accessor for ICFolderArchiveModel.Query(0);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_10002F214(&qword_1006A5D08);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = type metadata accessor for ICQueryEntity();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
    uint64_t v14 = *(int *)(v10 + 20);
    uint64_t v15 = &v8[v14];
    uint64_t v16 = &v9[v14];
    uint64_t v17 = type metadata accessor for ICQueryType();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v18 = a3[13];
  *(_WORD *)(a1 + a3[12]) = *(_WORD *)(a2 + a3[12]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_1003DC044(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v10 = a3[11];
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  uint64_t v13 = type metadata accessor for ICFolderArchiveModel.Query(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      uint64_t v26 = type metadata accessor for ICQueryEntity();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 40))(v11, v12, v26);
      uint64_t v27 = *(int *)(v13 + 20);
      uint64_t v28 = &v11[v27];
      char v29 = &v12[v27];
      uint64_t v30 = type metadata accessor for ICQueryType();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
      goto LABEL_7;
    }
    sub_1003DB478((uint64_t)v11, type metadata accessor for ICFolderArchiveModel.Query);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v23 = sub_10002F214(&qword_1006A5D08);
    memcpy(v11, v12, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v18 = type metadata accessor for ICQueryEntity();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v11, v12, v18);
  uint64_t v19 = *(int *)(v13 + 20);
  uint64_t v20 = &v11[v19];
  uint64_t v21 = &v12[v19];
  uint64_t v22 = type metadata accessor for ICQueryType();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  uint64_t v24 = a3[13];
  *(_WORD *)(a1 + a3[12]) = *(_WORD *)(a2 + a3[12]);
  *(void *)(a1 + v24) = *(void *)(a2 + v24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1003DC31C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003DC330);
}

uint64_t sub_1003DC330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10002F214(&qword_1006A5D08);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1003DC3E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003DC3F8);
}

uint64_t sub_1003DC3F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10002F214(&qword_1006A5D08);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 44);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1003DC4A4()
{
  sub_1003DC57C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1003DC57C()
{
  if (!qword_1006A5D78)
  {
    type metadata accessor for ICFolderArchiveModel.Query(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1006A5D78);
    }
  }
}

unsigned char *_s11MobileNotes20ICFolderArchiveModelV17SortingDirectionsOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003DC6A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICFolderArchiveModel.Query.CodingKeys()
{
  return &type metadata for ICFolderArchiveModel.Query.CodingKeys;
}

uint64_t *sub_1003DC6D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for ICQueryEntity();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for ICQueryType();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_1003DC7E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ICQueryEntity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for ICQueryType();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_1003DC888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ICQueryEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for ICQueryType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_1003DC940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ICQueryEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for ICQueryType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_1003DC9F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ICQueryEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for ICQueryType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_1003DCAB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ICQueryEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for ICQueryType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1003DCB68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003DCB7C);
}

uint64_t sub_1003DCB7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ICQueryEntity();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for ICQueryType();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1003DCC74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003DCC88);
}

uint64_t sub_1003DCC88(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for ICQueryEntity();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for ICQueryType();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_1003DCD8C()
{
  uint64_t result = type metadata accessor for ICQueryEntity();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ICQueryType();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

_WORD *initializeBufferWithCopyOfBuffer for ICFolderArchiveModel.Sorting(_WORD *result, _WORD *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ICFolderArchiveModel.Sorting(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *((unsigned __int8 *)a1 + 1);
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ICFolderArchiveModel.Sorting(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003DCFC0);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)(result + 1) = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICFolderArchiveModel.Sorting()
{
  return &type metadata for ICFolderArchiveModel.Sorting;
}

unint64_t sub_1003DCFFC()
{
  unint64_t result = qword_1006A5E60;
  if (!qword_1006A5E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5E60);
  }
  return result;
}

uint64_t sub_1003DD050(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1003D9E94(&qword_1006A10F0, (void (*)(uint64_t))type metadata accessor for ICFolderArchiveModel);
  uint64_t result = sub_1003D9E94(&qword_1006A39A8, (void (*)(uint64_t))type metadata accessor for ICFolderArchiveModel);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1003DD0D8()
{
  unint64_t result = qword_1006A5EA0;
  if (!qword_1006A5EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5EA0);
  }
  return result;
}

unint64_t sub_1003DD130()
{
  unint64_t result = qword_1006A5EA8;
  if (!qword_1006A5EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5EA8);
  }
  return result;
}

unint64_t sub_1003DD188()
{
  unint64_t result = qword_1006A5EB0;
  if (!qword_1006A5EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5EB0);
  }
  return result;
}

unint64_t sub_1003DD1E0()
{
  unint64_t result = qword_1006A5EB8;
  if (!qword_1006A5EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5EB8);
  }
  return result;
}

unint64_t sub_1003DD238()
{
  unint64_t result = qword_1006A5EC0;
  if (!qword_1006A5EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5EC0);
  }
  return result;
}

uint64_t sub_1003DD28C()
{
  return sub_10015D724(&qword_1006A5EC8, &qword_1006A5ED0);
}

uint64_t sub_1003DD2B8()
{
  return sub_10015D724(&qword_1006A5ED8, &qword_1006A5EE0);
}

unint64_t sub_1003DD2E8()
{
  unint64_t result = qword_1006A5EE8;
  if (!qword_1006A5EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5EE8);
  }
  return result;
}

unint64_t sub_1003DD340()
{
  unint64_t result = qword_1006A5EF0;
  if (!qword_1006A5EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5EF0);
  }
  return result;
}

unint64_t sub_1003DD394()
{
  unint64_t result = qword_1006A5F00;
  if (!qword_1006A5F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5F00);
  }
  return result;
}

unint64_t sub_1003DD3E8()
{
  unint64_t result = qword_1006A5F08;
  if (!qword_1006A5F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5F08);
  }
  return result;
}

unint64_t sub_1003DD43C()
{
  unint64_t result = qword_1006A5F18;
  if (!qword_1006A5F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5F18);
  }
  return result;
}

unint64_t sub_1003DD490()
{
  unint64_t result = qword_1006A5F40;
  if (!qword_1006A5F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5F40);
  }
  return result;
}

uint64_t sub_1003DD4E4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001DFF4(&qword_1006A5F20);
    sub_1003D9E94(a2, (void (*)(uint64_t))_s8ActivityVMa);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1003DD578()
{
  unint64_t result = qword_1006A5F78;
  if (!qword_1006A5F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5F78);
  }
  return result;
}

unint64_t sub_1003DD5CC()
{
  unint64_t result = qword_1006A5F80;
  if (!qword_1006A5F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5F80);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ICFolderArchiveModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ICFolderArchiveModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003DD77CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICFolderArchiveModel.CodingKeys()
{
  return &type metadata for ICFolderArchiveModel.CodingKeys;
}

unsigned char *_s11MobileNotes20ICFolderArchiveModelV5TypesOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003DD880);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICFolderArchiveModel.Types()
{
  return &type metadata for ICFolderArchiveModel.Types;
}

uint64_t sub_1003DD8BC()
{
  return sub_10015D724(&qword_1006A5F88, &qword_1006A5F90);
}

unint64_t sub_1003DD8E8()
{
  unint64_t result = qword_1006A5F98;
  if (!qword_1006A5F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5F98);
  }
  return result;
}

unint64_t sub_1003DD940()
{
  unint64_t result = qword_1006A5FA0;
  if (!qword_1006A5FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5FA0);
  }
  return result;
}

unint64_t sub_1003DD998()
{
  unint64_t result = qword_1006A5FA8;
  if (!qword_1006A5FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5FA8);
  }
  return result;
}

unint64_t sub_1003DD9F0()
{
  unint64_t result = qword_1006A5FB0;
  if (!qword_1006A5FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5FB0);
  }
  return result;
}

unint64_t sub_1003DDA44()
{
  unint64_t result = qword_1006A5FB8;
  if (!qword_1006A5FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5FB8);
  }
  return result;
}

unint64_t sub_1003DDA98()
{
  unint64_t result = qword_1006A5FC0;
  if (!qword_1006A5FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A5FC0);
  }
  return result;
}

uint64_t sub_1003DDC34()
{
  self;
  if (swift_dynamicCastObjCClass()) {
    goto LABEL_5;
  }
  self;
  if (swift_dynamicCastObjCClass())
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      unint64_t v1 = Strong;
      [Strong showsActivityStream];
    }
LABEL_5:
    id v2 = [self mainBundle];
    NSString v3 = String._bridgeToObjectiveC()();
    id v4 = [v2 localizedStringForKey:v3 value:0 table:0];

    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    return v5;
  }
  _StringGuts.grow(_:)(45);
  swift_getObjectType();
  _typeName(_:qualified:)();
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 0xD00000000000002BLL;
  v7._object = (void *)0x800000010055C610;
  String.append(_:)(v7);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_1003DDF58(void (*a1)(uint64_t, uint64_t, uint64_t), uint64_t a2)
{
  NSString v5 = String._bridgeToObjectiveC()();
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong && (uint64_t v10 = Strong, v11 = [Strong showsActivityStream], v10, v11))
  {
    uint64_t v12 = swift_unknownObjectWeakLoadStrong();
    if (v12)
    {
      uint64_t v13 = (void *)v12;
      uint64_t v14 = (void *)swift_allocObject();
      v14[2] = a1;
      v14[3] = a2;
      v14[4] = v6;
      v14[5] = v8;
      v19[4] = sub_1003DE378;
      v19[5] = v14;
      v19[0] = _NSConcreteStackBlock;
      v19[1] = 1107296256;
      v19[2] = sub_100262E2C;
      v19[3] = &unk_10063AA00;
      uint64_t v15 = _Block_copy(v19);
      sub_10002E71C((uint64_t)a1);
      swift_release();
      [v13 hideActivityStreamWithCompletion:v15];
      _Block_release(v15);

      return;
    }
  }
  else
  {
    uint64_t v16 = swift_unknownObjectWeakLoadStrong();
    if (v16)
    {
      int v17 = (void *)v16;
      id v18 = [*(id *)(v2 + OBJC_IVAR___ICShowActivityStreamActivity_object) objectID];
      [v17 showActivityStreamForObjectWithObjectID:v18 collabActivityContextPath:2];
    }
    if (a1) {
      a1(1, v6, v8);
    }
  }

  swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for ShowActivityStreamActivity()
{
  return self;
}

uint64_t sub_1003DE2F8()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003DE330()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003DE378()
{
  unint64_t v1 = (uint64_t (*)(uint64_t, void, void))v0[2];
  if (v1) {
    return v1(1, v0[4], v0[5]);
  }
  return result;
}

objc_class *sub_1003DE3B0()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterCellShared____lazy_storage___menu;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterCellShared____lazy_storage___menu);
  if (v2)
  {
    NSString v3 = *(objc_class **)(v0 + OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterCellShared____lazy_storage___menu);
  }
  else
  {
    uint64_t v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_1006A4D40);
    sub_10002F214(&qword_10069BA00);
    uint64_t preferredElementSize = swift_allocObject();
    *(_OWORD *)(preferredElementSize + 16) = xmmword_100527150;
    *(void *)(preferredElementSize + 32) = sub_1003DE8D0();
    *(void *)(preferredElementSize + 40) = sub_1003DEA48();
    *(void *)(preferredElementSize + 48) = sub_1003DEBBC();
    specialized Array._endMutation()();
    v6._countAndFlagsBits = 0;
    v6._object = (void *)0xE000000000000000;
    v14.value.super.Class isa = 0;
    v14.is_nil = 0;
    Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v6, (Swift::String_optional)0, v14, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, (Swift::OpaquePointer)preferredElementSize).super.super.isa;
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_100524CE0;
    *(void *)(v8 + 32) = sub_1003DE6CC();
    *(void *)(v8 + 40) = isa;
    specialized Array._endMutation()();
    v9._countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    v15.value.super.Class isa = 0;
    v15.is_nil = 0;
    v10.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v9, (Swift::String_optional)0, v15, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v8, (Swift::OpaquePointer)v8).super.super.isa;
    unsigned int v11 = *(void **)(v0 + v1);
    *(UIMenu *)(v4 + v1) = v10;
    NSString v3 = v10.super.super.isa;

    uint64_t v2 = 0;
  }
  id v12 = v2;
  return v3;
}

void sub_1003DE528()
{
  uint64_t v1 = (void *)sub_1003DE6CC();
  uint64_t v2 = OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection;
  BOOL v3 = 1;
  if (*(void *)(v0 + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection))
  {
    self;
    if (swift_dynamicCastObjCClass()) {
      BOOL v3 = 0;
    }
  }
  [v1 setState:v3];

  id v4 = sub_1003DE8D0();
  BOOL v6 = 0;
  if (*(void *)(v0 + v2))
  {
    self;
    NSString v5 = (void *)swift_dynamicCastObjCClass();
    if (v5)
    {
      if ([v5 selectionType] == (id)1) {
        BOOL v6 = 1;
      }
    }
  }
  [v4 setState:v6];

  id v7 = sub_1003DEA48();
  BOOL v9 = 0;
  if (*(void *)(v0 + v2))
  {
    self;
    uint64_t v8 = (void *)swift_dynamicCastObjCClass();
    if (v8)
    {
      if ([v8 selectionType] == (id)2) {
        BOOL v9 = 1;
      }
    }
  }
  [v7 setState:v9];

  id v12 = sub_1003DEBBC();
  BOOL v11 = 0;
  if (*(void *)(v0 + v2))
  {
    self;
    UIMenu v10 = (void *)swift_dynamicCastObjCClass();
    if (v10)
    {
      if ([v10 selectionType] == (id)3) {
        BOOL v11 = 1;
      }
    }
  }
  [v12 setState:v11];
}

id sub_1003DE6CC()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterCellShared____lazy_storage___menuActionOff;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterCellShared____lazy_storage___menuActionOff];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterCellShared____lazy_storage___menuActionOff];
  }
  else
  {
    id v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(swift_allocObject() + 16) = v0;
    uint64_t v8 = v0;
    BOOL v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    UIMenu v10 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

void sub_1003DE834(uint64_t a1, char *a2)
{
  id v3 = *(void **)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection];
  *(void *)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection] = 0;

  [a2 setNeedsUpdateConfiguration];
  sub_1003DE528();
  id v4 = *(void (**)(uint64_t))&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange];
  if (v4)
  {
    uint64_t v5 = swift_retain();
    v4(v5);
    sub_10002E70C((uint64_t)v4);
  }
}

id sub_1003DE8D0()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterCellShared____lazy_storage___menuActionAnyone;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterCellShared____lazy_storage___menuActionAnyone];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterCellShared____lazy_storage___menuActionAnyone];
  }
  else
  {
    id v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(swift_allocObject() + 16) = v0;
    uint64_t v8 = v0;
    BOOL v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    UIMenu v10 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id sub_1003DEA48()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterCellShared____lazy_storage___menuActionSpecificUsers;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterCellShared____lazy_storage___menuActionSpecificUsers];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterCellShared____lazy_storage___menuActionSpecificUsers];
  }
  else
  {
    id v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(swift_allocObject() + 16) = v0;
    uint64_t v8 = v0;
    BOOL v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    UIMenu v10 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id sub_1003DEBBC()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterCellShared____lazy_storage___menuActionNotShared;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterCellShared____lazy_storage___menuActionNotShared];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterCellShared____lazy_storage___menuActionNotShared];
  }
  else
  {
    id v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(swift_allocObject() + 16) = v0;
    uint64_t v8 = v0;
    BOOL v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    UIMenu v10 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

uint64_t sub_1003DED30(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
  {
    id v4 = [self sharedContext];
    if (v4)
    {
      id v5 = v4;
      id v6 = [v4 managedObjectContext];

      if (v6)
      {
        id v7 = *(void **)&v2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_accountObjectID];
        if (v7)
        {
          id v8 = objc_allocWithZone((Class)ICSharedFilterTypeSelection);
          id v9 = v7;
          id v10 = [v8 initWithManagedObjectContext:v6 accountObjectID:v9 selectionType:a1 joinOperator:a1 == 2];
          id v11 = *(void **)&v2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection];
          *(void *)&v2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection] = v10;
          id v12 = v10;

          [v2 setNeedsUpdateConfiguration];
          goto LABEL_8;
        }
      }
    }
  }
  UIImage_optional v14 = *(void **)&v2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection];
  *(void *)&v2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection] = 0;

  id v13 = [v2 setNeedsUpdateConfiguration];
LABEL_8:
  uint64_t result = sub_1003DE528(v13);
  uint64_t v16 = *(void (**)(uint64_t))&v2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange];
  if (v16)
  {
    uint64_t v17 = swift_retain();
    v16(v17);
    return sub_10002E70C((uint64_t)v16);
  }
  return result;
}

id sub_1003DEF74(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterCellShared____lazy_storage___menu] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterCellShared____lazy_storage___menuActionOff] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterCellShared____lazy_storage___menuActionAnyone] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterCellShared____lazy_storage___menuActionSpecificUsers] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterCellShared____lazy_storage___menuActionNotShared] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for FolderComposerFilterCellShared();
  id v3 = [super initWithCoder:a1];

  return v3;
}

void sub_1003DF028()
{
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterCellShared____lazy_storage___menuActionAnyone));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterCellShared____lazy_storage___menuActionSpecificUsers));
  uint64_t v1 = *(void **)(v0
                + OBJC_IVAR____TtC11MobileNotes30FolderComposerFilterCellShared____lazy_storage___menuActionNotShared);
}

id sub_1003DF098()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FolderComposerFilterCellShared();
  [super dealloc];
}

uint64_t type metadata accessor for FolderComposerFilterCellShared()
{
  return self;
}

objc_class *sub_1003DF16C()
{
  return sub_1003DE3B0();
}

void sub_1003DF190()
{
}

uint64_t sub_1003DF1B4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003DF1EC()
{
  return sub_1003DED30(3, 0);
}

uint64_t sub_1003DF218()
{
  return sub_1003DED30(2, 0);
}

uint64_t sub_1003DF244()
{
  return sub_1003DED30(1, 0);
}

void sub_1003DF270(uint64_t a1)
{
  sub_1003DE834(a1, *(char **)(v1 + 16));
}

id ICAppIntentsManager.__allocating_init(dependencyManager:loggingConfiguration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v11 = (char *)objc_allocWithZone(v5);
  *(void *)&v11[OBJC_IVAR____TtC11MobileNotes19ICAppIntentsManager_dependencyManager] = a1;
  id v12 = &v11[OBJC_IVAR____TtC11MobileNotes19ICAppIntentsManager_loggingConfiguration];
  *(void *)id v12 = a2;
  *((void *)v12 + 1) = a3;
  *((void *)v12 + 2) = a4;
  *((void *)v12 + 3) = a5;
  v14.receiver = v11;
  v14.super_class = v5;
  return [super init];
}

id ICAppIntentsManager.init(dependencyManager:loggingConfiguration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v5[OBJC_IVAR____TtC11MobileNotes19ICAppIntentsManager_dependencyManager] = a1;
  id v12 = &v5[OBJC_IVAR____TtC11MobileNotes19ICAppIntentsManager_loggingConfiguration];
  *(void *)id v12 = a2;
  *((void *)v12 + 1) = a3;
  *((void *)v12 + 2) = a4;
  *((void *)v12 + 3) = a5;
  v14.receiver = v5;
  v14.super_class = ObjectType;
  return [super init];
}

uint64_t sub_1003DF38C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1003DF3AC, 0, 0);
}

uint64_t sub_1003DF3AC()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 24) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1003DF440, v2, v1);
}

uint64_t sub_1003DF440()
{
  swift_release();
  id v1 = objc_allocWithZone((Class)ICUnifiedNoteContext);
  sub_100031418(0, (unint64_t *)&qword_1006A2C30);
  id v2 = sub_100300528();
  id v3 = (void *)sub_100300628();
  *(void *)(v0 + 32) = [v1 initWithModernNoteContext:v2 htmlNoteContext:v3 options:0];

  return _swift_task_switch(sub_10017609C, 0, 0);
}

uint64_t sub_1003DF574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  void v5[4] = a3;
  v5[2] = a1;
  return _swift_task_switch(sub_1003DF59C, 0, 0);
}

uint64_t sub_1003DF59C()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[4];
  uint64_t v4 = (void *)v0[2];
  *uint64_t v4 = v0[3];
  v4[1] = v3;
  _OWORD v4[2] = v1;
  v4[3] = v2;
  id v6 = (uint64_t (*)(void))v0[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v6();
}

uint64_t sub_1003DF620()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003DF660(uint64_t a1)
{
  long long v8 = *(_OWORD *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *(void *)uint64_t v6 = v2;
  *(void *)(v6 + 40) = v5;
  *(void *)(v6 + 48) = v4;
  *(_OWORD *)(v6 + 24) = v8;
  *(void *)(v6 + 8) = sub_100161724;
  *(void *)(v6 + 16) = a1;
  return _swift_task_switch(sub_1003DF59C, 0, 0);
}

void ICAppIntentsManager.init()()
{
}

void static ICAppIntentsManager.registerDependencies()()
{
  uint64_t v1 = v0;
  type metadata accessor for AppDependencyManager();
  uint64_t v2 = static AppDependencyManager.shared.getter();
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR____TtC11MobileNotes19ICAppIntentsManager_dependencyManager] = v2;
  uint64_t v4 = &v3[OBJC_IVAR____TtC11MobileNotes19ICAppIntentsManager_loggingConfiguration];
  *(void *)uint64_t v4 = 0x6C7070612E6D6F63;
  *((void *)v4 + 1) = 0xEF7365746F6E2E65;
  *((void *)v4 + 2) = 1802398028;
  *((void *)v4 + 3) = 0xE400000000000000;
  v6.receiver = v3;
  v6.super_class = v1;
  [super init];
  ICAppIntentsManager.registerDependencies()();
}

uint64_t _s11MobileNotes19ICAppIntentsManagerC27updateAppShortcutParametersyyFZ_0()
{
  type metadata accessor for ProvisionalBackgroundTaskController();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = sub_100169160((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 32) = 1;
  *(void *)(v0 + 40) = 0;
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MobileNotes35ProvisionalBackgroundTaskController_timeoutInterval;
  *(void *)(v0 + OBJC_IVAR____TtC11MobileNotes35ProvisionalBackgroundTaskController_timeoutInterval) = 1;
  uint64_t v2 = enum case for DispatchTimeInterval.seconds(_:);
  uint64_t v3 = type metadata accessor for DispatchTimeInterval();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(v1, v2, v3);
  sub_1003BE964(0xD00000000000001ELL, 0x800000010055C7B0);
  if (qword_10069AF78 != -1) {
    swift_once();
  }
  swift_retain();
  sub_10002F214(&qword_1006A60A0);
  swift_task_localValuePush();
  sub_100031418(0, &qword_10069C808);
  static ICUnifiedNoteContext.$prefersViewContext.getter();
  swift_task_localValuePush();
  sub_1003DFA5C();
  static AppShortcutsProvider.updateAppShortcutParameters()();
  swift_task_localValuePop();
  swift_release();
  swift_task_localValuePop();
  return swift_release();
}

uint64_t type metadata accessor for ICAppIntentsManager()
{
  return self;
}

unint64_t sub_1003DFA5C()
{
  unint64_t result = qword_1006A60A8;
  if (!qword_1006A60A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A60A8);
  }
  return result;
}

void sub_1003DFAB0()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  id v11 = Strong;
  id v2 = [Strong noteContainerViewMode];
  uint64_t v3 = swift_unknownObjectWeakLoadStrong();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    self;
    id v5 = (void *)swift_dynamicCastObjCClass();
    if (!v5)
    {
      id v6 = v4;
LABEL_12:

      id v10 = v6;
      goto LABEL_13;
    }
    id v6 = [v5 eventReporter];

    if (v6)
    {
      uint64_t v7 = sub_10008A418((uint64_t)v2);
      long long v8 = *(void **)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_noteContainer);
      if (v8) {
        id v9 = [v8 isShowingDateHeaders];
      }
      else {
        id v9 = 0;
      }
      [v6 submitNoteActionMenuEventForNoteBrowserWithUsageType:1 layout:v7 activityType:0 isTimelineView:v9];
      goto LABEL_12;
    }
  }
  id v10 = v11;
LABEL_13:
}

void *sub_1003DFC3C()
{
  uint64_t v1 = v0;
  id v2 = sub_10036BB18();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    id v5 = *(void **)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_noteContainer);
    if (v5)
    {
      self;
      if (swift_dynamicCastObjCClass())
      {
        swift_bridgeObjectRetain();
        id v6 = sub_1002A3938(v4);
        swift_bridgeObjectRelease();
        sub_10002F214(&qword_1006A1BA0);
        Array.insertOptional(_:at:)();
      }
      self;
      uint64_t v7 = swift_dynamicCastObjCClass();
      if (v7)
      {
        long long v8 = (void *)v7;
        id v9 = v5;
        if ([v8 enforcedNoteContainerViewMode] == (id)-1)
        {
          id v13 = sub_1002A3938(v4);
          sub_10002F214(&qword_1006A1BA0);
          Array.insertOptional(_:at:)();
        }
      }
    }
    id v10 = *(void **)(v1 + OBJC_IVAR___ICNoteContainerActionMenu_virtualSmartFolder);
    if (v10)
    {
      id v11 = v10;
      if ([v11 enforcedNoteContainerViewMode] == (id)-1
        && ([v11 isTrashFolder] & 1) == 0)
      {
        id v14 = sub_1002A3938(v4);
        sub_10002F214(&qword_1006A1BA0);
        Array.insertOptional(_:at:)();
      }
    }
    id v15 = sub_1002A3330(v4);
    sub_10002F214(&qword_1006A1BA0);
    Array.insertOptional(_:at:)();
  }
  return v2;
}

id sub_1003DFEBC()
{
  id v0 = sub_10036BE04();
  id v1 = [v0 children];
  sub_1003E03EC();
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v6 = sub_1003DFFEC();
  sub_10002F214(&qword_1006A1BA0);
  Array.appendNonNil(_:)();

  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v4 = [v0 menuByReplacingChildren:isa v6 v2];

  return v4;
}

id sub_1003DFFEC()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    id v3 = [Strong behavior];

    if (v3 == (id)1) {
      return 0;
    }
  }
  id v5 = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t v6 = swift_unknownObjectWeakLoadStrong();
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    self;
    long long v8 = (void *)swift_dynamicCastObjCClass();
    if (v8) {
      id v9 = [v8 eventReporter];
    }
    else {
      id v9 = 0;
    }
  }
  else
  {
    id v9 = 0;
  }
  id v10 = [objc_allocWithZone((Class)ICViewAttachmentsActivity) initWithPresentingViewController:v5 eventReporter:v9];

  uint64_t v11 = *(void *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion);
  if (v11)
  {
    uint64_t v12 = *(void *)(v0 + OBJC_IVAR___ICNoteContainerActionMenu_completion + 8);
    v15[4] = v11;
    void v15[5] = v12;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    v15[2] = sub_1002A43E4;
    void v15[3] = &unk_10063AB08;
    id v13 = _Block_copy(v15);
    swift_retain();
    swift_release();
  }
  else
  {
    id v13 = 0;
  }
  id v4 = [v10 actionWithCompletion:v13];
  _Block_release(v13);

  return v4;
}

id sub_1003E0394()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NoteBrowseActionMenu();
  return [super dealloc];
}

uint64_t type metadata accessor for NoteBrowseActionMenu()
{
  return self;
}

unint64_t sub_1003E03EC()
{
  unint64_t result = qword_1006A4D30;
  if (!qword_1006A4D30)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1006A4D30);
  }
  return result;
}

uint64_t sub_1003E042C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003E0658(const void *a1, void *a2)
{
  v2[2] = a2;
  type metadata accessor for AppIntentsVocabularyManager();
  v2[3] = swift_task_alloc();
  v2[4] = _Block_copy(a1);
  id v5 = a2;
  return _swift_task_switch(sub_1003E0704, 0, 0);
}

uint64_t sub_1003E0704()
{
  static Logger.link.getter();
  id v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  void *v1 = v0;
  v1[1] = sub_1003E079C;
  return sub_10046B1D8();
}

uint64_t sub_1003E079C()
{
  uint64_t v2 = *(void *)(*v1 + 24);
  uint64_t v3 = *v1;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  sub_1003E0FB8(v2);
  if (v0)
  {
    return _swift_task_switch(sub_1003E0928, 0, 0);
  }
  else
  {
    uint64_t v4 = *(void *)(v3 + 32);

    (*(void (**)(uint64_t, void))(v4 + 16))(v4, 0);
    _Block_release(*(const void **)(v3 + 32));
    swift_task_dealloc();
    id v5 = *(uint64_t (**)(void))(v3 + 8);
    return v5();
  }
}

uint64_t sub_1003E0928()
{
  uint64_t v1 = *(void *)(v0 + 32);

  uint64_t v2 = (void *)_convertErrorToNSError(_:)();
  swift_errorRelease();
  (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v2);

  _Block_release(*(const void **)(v0 + 32));
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t type metadata accessor for DonateDynamicAppVocabularyLaunchTask()
{
  return self;
}

uint64_t sub_1003E0A38()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003E0A78()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100161724;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1006A6110 + dword_1006A6110);
  return v5(v2, v3);
}

uint64_t sub_1003E0B24(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_10017B61C;
  return v6();
}

uint64_t sub_1003E0BF4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_10017B61C;
  return v7();
}

uint64_t sub_1003E0CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1003E0E68(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1003E0E68(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_1006A09A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003E0EC8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003E0F00(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100161724;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1006A6140 + dword_1006A6140);
  return v6(a1, v4);
}

uint64_t sub_1003E0FB8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppIntentsVocabularyManager();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003E10DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

id sub_1003E12A8()
{
  uint64_t v1 = OBJC_IVAR___ICTagDetailCell_attributedText;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR___ICTagDetailCell_attributedText];
  if (v2)
  {
    uint64_t v3 = &v0[OBJC_IVAR___ICTagDetailCell_text];
    if (*(void *)&v0[OBJC_IVAR___ICTagDetailCell_text + 8])
    {
      *(void *)&v0[OBJC_IVAR___ICTagDetailCell_attributedText] = 0;

      if (*(void *)&v0[v1] && *((void *)v3 + 1))
      {
        *(void *)uint64_t v3 = 0;
        *((void *)v3 + 1) = 0;
        uint64_t v4 = swift_bridgeObjectRelease();
        sub_1003E12A8(v4);
      }
      [v0 setNeedsUpdateConfiguration];
    }
  }

  return [v0 setNeedsUpdateConfiguration];
}

void sub_1003E1458()
{
  id v1 = sub_1003E2A78(&OBJC_IVAR___ICTagDetailCell____lazy_storage___allAction);
  uint64_t v2 = OBJC_IVAR___ICTagDetailCell_tagSelection;
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR___ICTagDetailCell_tagSelection);
  BOOL v4 = v3 && [v3 tagOperator] == (id)1;
  [v1 setState:v4];

  id v7 = sub_1003E2A78(&OBJC_IVAR___ICTagDetailCell____lazy_storage___anyAction);
  uint64_t v5 = *(void **)(v0 + v2);
  BOOL v6 = v5 && [v5 tagOperator] == (id)2;
  [v7 setState:v6];
}

void sub_1003E1574()
{
  id v1 = *(void **)&v0[OBJC_IVAR___ICTagDetailCell_tagSelection];
  if (v1)
  {
    uint64_t v2 = v0[OBJC_IVAR___ICTagDetailCell_showOperatorMenuButton];
    uint64_t v3 = self;
    id v4 = v1;
    id v5 = [v3 secondaryLabelColor];
    id v6 = [v4 summaryWithJoinOperatorMenu:v2 usingTextStyle:UIFontTextStyleFootnote foregroundColor:v5];

    uint64_t v7 = OBJC_IVAR___ICTagDetailCell_attributedText;
    uint64_t v8 = *(void **)&v0[OBJC_IVAR___ICTagDetailCell_attributedText];
    *(void *)&v0[OBJC_IVAR___ICTagDetailCell_attributedText] = v6;
    id v13 = v6;

    if (*(void *)&v0[v7])
    {
      id v9 = &v0[OBJC_IVAR___ICTagDetailCell_text];
      if (*(void *)&v0[OBJC_IVAR___ICTagDetailCell_text + 8])
      {
        *(void *)id v9 = 0;
        *((void *)v9 + 1) = 0;
        swift_bridgeObjectRelease();
        sub_1003E12A8();
      }
    }
    [v0 setNeedsUpdateConfiguration];
  }
  else
  {
    uint64_t v10 = OBJC_IVAR___ICTagDetailCell_attributedText;
    uint64_t v11 = *(void **)&v0[OBJC_IVAR___ICTagDetailCell_attributedText];
    *(void *)&v0[OBJC_IVAR___ICTagDetailCell_attributedText] = 0;

    if (*(void *)&v0[v10])
    {
      uint64_t v12 = &v0[OBJC_IVAR___ICTagDetailCell_text];
      if (*(void *)&v0[OBJC_IVAR___ICTagDetailCell_text + 8])
      {
        *(void *)uint64_t v12 = 0;
        *((void *)v12 + 1) = 0;
        swift_bridgeObjectRelease();
        sub_1003E12A8();
      }
    }
    [v0 setNeedsUpdateConfiguration];
  }
}

id sub_1003E17AC()
{
  uint64_t v1 = OBJC_IVAR___ICTagDetailCell____lazy_storage___textView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___ICTagDetailCell____lazy_storage___textView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___ICTagDetailCell____lazy_storage___textView);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = sub_1003E2C40();
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
    id v9 = self;
    uint64_t v10 = UIFontTextStyleFootnote;
    id v11 = [v9 secondaryLabelColor];
    id v12 = objc_allocWithZone((Class)type metadata accessor for InlineMenuButtonTextView());
    id v13 = sub_1004A0D84(v5, v6, v8, v10, 2, v11);
    id v14 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v13;
    id v3 = v13;

    uint64_t v2 = 0;
  }
  id v15 = v2;
  return v3;
}

void sub_1003E18C0(void *a1, char a2)
{
  if (a2)
  {
    id v4 = [objc_allocWithZone((Class)CATransition) init];
    id v5 = self;
    id v6 = v4;
    id v7 = [v5 functionWithName:kCAMediaTimingFunctionEaseInEaseOut];
    [v6 setTimingFunction:v7];

    [v6 setType:kCATransitionFade];
    [v6 setDuration:0.25];
    id v8 = [v2 layer];
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v8 addAnimation:v6 forKey:v9];
  }
  uint64_t v10 = *(void **)&v2[OBJC_IVAR___ICTagDetailCell_tagSelection];
  *(void *)&v2[OBJC_IVAR___ICTagDetailCell_tagSelection] = a1;
  id v11 = a1;

  sub_1003E1458();
  sub_1003E1574();
}

id sub_1003E1AB4(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = &v4[OBJC_IVAR___ICTagDetailCell_selectionOperatorChangeHandler];
  *uint64_t v10 = 0;
  v10[1] = 0;
  id v11 = &v4[OBJC_IVAR___ICTagDetailCell_text];
  *id v11 = 0;
  v11[1] = 0;
  *(void *)&v4[OBJC_IVAR___ICTagDetailCell_attributedText] = 0;
  *(void *)&v4[OBJC_IVAR___ICTagDetailCell_maxNumberOfLines] = 0;
  *(void *)&v4[OBJC_IVAR___ICTagDetailCell_tagSelection] = 0;
  v4[OBJC_IVAR___ICTagDetailCell_showOperatorMenuButton] = 0;
  *(void *)&v4[OBJC_IVAR___ICTagDetailCell____lazy_storage___allAction] = 0;
  *(void *)&v4[OBJC_IVAR___ICTagDetailCell____lazy_storage___anyAction] = 0;
  *(void *)&v4[OBJC_IVAR___ICTagDetailCell____lazy_storage___menu] = 0;
  *(void *)&v4[OBJC_IVAR___ICTagDetailCell____lazy_storage___listContentView] = 0;
  *(void *)&v4[OBJC_IVAR___ICTagDetailCell____lazy_storage___textView] = 0;
  v15.receiver = v4;
  v15.super_class = ObjectType;
  id v12 = [super initWithFrame:a1, a2, a3, a4];
  sub_100031418(0, (unint64_t *)&qword_10069C280);
  id v13 = v12;
  static UITraitCollection.traitsAffectingSizeAndColor.getter();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  UIView.registerForTraitChanges<A>(_:handler:)();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v13;
}

id sub_1003E1C8C(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v4 = &v1[OBJC_IVAR___ICTagDetailCell_selectionOperatorChangeHandler];
  *id v4 = 0;
  v4[1] = 0;
  id v5 = &v1[OBJC_IVAR___ICTagDetailCell_text];
  *id v5 = 0;
  v5[1] = 0;
  *(void *)&v1[OBJC_IVAR___ICTagDetailCell_attributedText] = 0;
  *(void *)&v1[OBJC_IVAR___ICTagDetailCell_maxNumberOfLines] = 0;
  *(void *)&v1[OBJC_IVAR___ICTagDetailCell_tagSelection] = 0;
  v1[OBJC_IVAR___ICTagDetailCell_showOperatorMenuButton] = 0;
  *(void *)&v1[OBJC_IVAR___ICTagDetailCell____lazy_storage___allAction] = 0;
  *(void *)&v1[OBJC_IVAR___ICTagDetailCell____lazy_storage___anyAction] = 0;
  *(void *)&v1[OBJC_IVAR___ICTagDetailCell____lazy_storage___menu] = 0;
  *(void *)&v1[OBJC_IVAR___ICTagDetailCell____lazy_storage___listContentView] = 0;
  *(void *)&v1[OBJC_IVAR___ICTagDetailCell____lazy_storage___textView] = 0;
  v9.receiver = v1;
  v9.super_class = ObjectType;
  [super initWithCoder:a1];
  if (v6)
  {
    sub_100031418(0, (unint64_t *)&qword_10069C280);
    id v7 = v6;
    static UITraitCollection.traitsAffectingSizeAndColor.getter();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    UIView.registerForTraitChanges<A>(_:handler:)();

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
  }
  return v6;
}

void sub_1003E1E54(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UIListContentConfiguration();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  id v8 = (char *)&v32[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v32[-1] - v9;
  uint64_t v11 = sub_10002F214(&qword_1006A38E0);
  __chkstk_darwin(v11 - 8);
  id v13 = (char *)&v32[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003E21DC();
  static UIBackgroundConfiguration.listGroupedHeaderFooter()();
  uint64_t v14 = type metadata accessor for UIBackgroundConfiguration();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 0, 1, v14);
  UICollectionViewCell.backgroundConfiguration.setter();
  uint64_t v15 = v1 + OBJC_IVAR___ICTagDetailCell_text;
  if (*(void *)(v1 + OBJC_IVAR___ICTagDetailCell_text + 8)) {
    goto LABEL_2;
  }
  uint64_t v19 = *(void **)(v1 + OBJC_IVAR___ICTagDetailCell_attributedText);
  if (!v19) {
    return;
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR___ICTagDetailCell_showOperatorMenuButton) & 1) == 0)
  {
LABEL_2:
    static UIListContentConfiguration.groupedFooter()();
    uint64_t v16 = type metadata accessor for UICellConfigurationState();
    uint64_t v33 = v16;
    uint64_t v34 = &protocol witness table for UICellConfigurationState;
    uint64_t v17 = sub_10015E0F0(v32);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v17, a1, v16);
    UIListContentConfiguration.updated(for:)();
    id v18 = *(void (**)(char *, uint64_t))(v5 + 8);
    v18(v8, v4);
    sub_100018FE8((uint64_t)v32);
    if (*(void *)(v15 + 8))
    {
      swift_bridgeObjectRetain();
      UIListContentConfiguration.text.setter();
    }
    else
    {
      uint64_t v25 = *(void **)(v2 + OBJC_IVAR___ICTagDetailCell_attributedText);
      if (v25)
      {
        id v26 = v25;
        UIListContentConfiguration.attributedText.setter();
      }
    }
    id v27 = sub_1003E2834();
    uint64_t v33 = v4;
    uint64_t v34 = &protocol witness table for UIListContentConfiguration;
    uint64_t v28 = sub_10015E0F0(v32);
    (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 16))(v28, v10, v4);
    UIListContentView.configuration.setter();

    id v29 = sub_1003E2834();
    [v29 setHidden:0];

    id v30 = sub_1003E17AC();
    [v30 setHidden:1];

    v18(v10, v4);
  }
  else
  {
    id v20 = v19;
    id v21 = sub_1003E17AC();
    id v22 = v20;
    sub_1004A0984(v19);

    id v23 = sub_1003E17AC();
    [v23 setHidden:0];

    id v24 = sub_1003E2834();
    [v24 setHidden:1];
  }
}

void sub_1003E21DC()
{
  id v1 = sub_1003E17AC();
  id v2 = [v1 superview];

  if (!v2)
  {
    id v3 = sub_1003E2834();
    [v3 setTranslatesAutoresizingMaskIntoConstraints:0];

    id v4 = sub_1003E17AC();
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];

    id v5 = [v0 contentView];
    id v6 = sub_1003E2834();
    [v5 addSubview:v6];

    id v7 = [v0 contentView];
    id v8 = sub_1003E17AC();
    [v7 addSubview:v8];

    uint64_t v51 = self;
    sub_10002F214(&qword_10069BA00);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_100536BD0;
    id v10 = sub_1003E17AC();
    id v11 = [v10 topAnchor];

    id v12 = [v0 contentView];
    id v13 = [v12 topAnchor];

    if (qword_10069AFE8 != -1) {
      swift_once();
    }
    id v14 = [v11 constraintEqualToAnchor:v13 constant:*(double *)&qword_1006A6158];

    *(void *)(v9 + 32) = v14;
    id v15 = sub_1003E17AC();
    id v16 = [v15 leadingAnchor];

    id v17 = [v0 contentView];
    id v18 = [v17 safeAreaLayoutGuide];

    id v19 = [v18 leadingAnchor];
    if (qword_10069AFE0 != -1) {
      swift_once();
    }
    id v20 = [v16 constraintEqualToAnchor:v19 constant:*(double *)&qword_1006A6150];

    *(void *)(v9 + 40) = v20;
    id v21 = sub_1003E17AC();
    id v22 = [v21 trailingAnchor];

    id v23 = [v0 contentView];
    id v24 = [v23 trailingAnchor];

    id v25 = [v22 constraintEqualToAnchor:v24 constant:-*(double *)&qword_1006A6150];
    *(void *)(v9 + 48) = v25;
    id v26 = sub_1003E17AC();
    id v27 = [v26 bottomAnchor];

    id v28 = [v0 contentView];
    id v29 = [v28 bottomAnchor];

    id v30 = [v27 constraintEqualToAnchor:v29 constant:-*(double *)&qword_1006A6158];
    *(void *)(v9 + 56) = v30;
    id v31 = sub_1003E2834();
    id v32 = [v31 topAnchor];

    id v33 = [v0 contentView];
    id v34 = [v33 topAnchor];

    id v35 = [v32 constraintEqualToAnchor:v34];
    *(void *)(v9 + 64) = v35;
    id v36 = sub_1003E2834();
    id v37 = [v36 leadingAnchor];

    id v38 = [v0 contentView];
    id v39 = [v38 leadingAnchor];

    id v40 = [v37 constraintEqualToAnchor:v39];
    *(void *)(v9 + 72) = v40;
    id v41 = sub_1003E2834();
    id v42 = [v41 trailingAnchor];

    id v43 = [v0 contentView];
    id v44 = [v43 trailingAnchor];

    id v45 = [v42 constraintEqualToAnchor:v44];
    *(void *)(v9 + 80) = v45;
    id v46 = sub_1003E2834();
    id v47 = [v46 bottomAnchor];

    id v48 = [v0 contentView];
    id v49 = [v48 bottomAnchor];

    id v50 = [v47 constraintEqualToAnchor:v49];
    *(void *)(v9 + 88) = v50;
    specialized Array._endMutation()();
    sub_100031418(0, (unint64_t *)&qword_1006A5260);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v51 activateConstraints:isa];
  }
}

id sub_1003E2834()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UIListContentConfiguration();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = OBJC_IVAR___ICTagDetailCell____lazy_storage___listContentView;
  id v4 = *(void **)(v0 + OBJC_IVAR___ICTagDetailCell____lazy_storage___listContentView);
  if (v4)
  {
    id v5 = *(id *)(v0 + OBJC_IVAR___ICTagDetailCell____lazy_storage___listContentView);
  }
  else
  {
    sub_100031418(0, (unint64_t *)&qword_1006A38E8);
    static UIListContentConfiguration.groupedFooter()();
    id v6 = (void *)UIListContentView.init(configuration:)();
    id v7 = *(void **)(v0 + v3);
    *(void *)(v1 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

void sub_1003E29F4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_1003E1574();
    [v1 setNeedsUpdateConfiguration];
  }
}

void sub_1003E2A58()
{
  qword_1006A6150 = 0x4034000000000000;
}

void sub_1003E2A68()
{
  qword_1006A6158 = 0x4020000000000000;
}

id sub_1003E2A78(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void **)&v1[*a1];
  if (v3)
  {
    id v4 = *(id *)&v1[*a1];
  }
  else
  {
    id v5 = v1;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v6 = (id)ICLocalizedStringFromICTagSelectionOperator();
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    String.lowercased()();
    swift_bridgeObjectRelease();
    *(void *)(swift_allocObject() + 16) = v1;
    id v7 = v1;
    id v8 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    uint64_t v9 = *(void **)&v1[v2];
    *(void *)&v5[v2] = v8;
    id v4 = v8;

    uint64_t v3 = 0;
  }
  id v10 = v3;
  return v4;
}

id sub_1003E2BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id result = *(id *)(a2 + OBJC_IVAR___ICTagDetailCell_tagSelection);
  if (result) {
    id result = [result setTagOperator:a3];
  }
  id v6 = *(void (**)(uint64_t))(a2 + OBJC_IVAR___ICTagDetailCell_selectionOperatorChangeHandler);
  if (v6)
  {
    swift_retain();
    v6(a3);
    return (id)sub_10002E70C((uint64_t)v6);
  }
  return result;
}

objc_class *sub_1003E2C40()
{
  uint64_t v1 = OBJC_IVAR___ICTagDetailCell____lazy_storage___menu;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___ICTagDetailCell____lazy_storage___menu);
  if (v2)
  {
    uint64_t v3 = *(objc_class **)(v0 + OBJC_IVAR___ICTagDetailCell____lazy_storage___menu);
  }
  else
  {
    uint64_t v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_1006A4D40);
    sub_10002F214(&qword_10069BA00);
    uint64_t preferredElementSize = swift_allocObject();
    *(_OWORD *)(preferredElementSize + 16) = xmmword_100524CE0;
    *(void *)(preferredElementSize + 32) = sub_1003E2A78(&OBJC_IVAR___ICTagDetailCell____lazy_storage___allAction);
    *(void *)(preferredElementSize + 40) = sub_1003E2A78(&OBJC_IVAR___ICTagDetailCell____lazy_storage___anyAction);
    specialized Array._endMutation()();
    v6._countAndFlagsBits = 0;
    v6._object = (void *)0xE000000000000000;
    v11.value.super.Class isa = 0;
    v11.is_nil = 0;
    v7.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v6, (Swift::String_optional)0, v11, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, (Swift::OpaquePointer)preferredElementSize).super.super.isa;
    id v8 = *(void **)(v0 + v1);
    *(UIMenu *)(v4 + v1) = v7;
    uint64_t v3 = v7.super.super.isa;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

uint64_t type metadata accessor for TagDetailCell()
{
  return self;
}

uint64_t sub_1003E2E78()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1003E2EB0(uint64_t a1)
{
  return sub_1003E2BA0(a1, *(void *)(v1 + 16), 2);
}

id sub_1003E2ED0(uint64_t a1)
{
  return sub_1003E2BA0(a1, *(void *)(v1 + 16), 1);
}

uint64_t sub_1003E2EF0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1003E2F28()
{
}

id sub_1003E2F30(void *a1)
{
  uint64_t v2 = OBJC_IVAR___ICTagDetailCell_attributedText;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR___ICTagDetailCell_attributedText];
  *(void *)&v1[OBJC_IVAR___ICTagDetailCell_attributedText] = a1;
  id v4 = a1;

  if (*(void *)&v1[v2])
  {
    id v5 = &v1[OBJC_IVAR___ICTagDetailCell_text];
    if (*(void *)&v1[OBJC_IVAR___ICTagDetailCell_text + 8])
    {
      *(void *)id v5 = 0;
      *((void *)v5 + 1) = 0;
      swift_bridgeObjectRelease();
      sub_1003E12A8();
    }
  }

  return [v1 setNeedsUpdateConfiguration];
}

uint64_t sub_1003E2FB0()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

id sub_1003E2FFC(void *a1, uint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v2[OBJC_IVAR___ICMoveNavigationController_canAppearAbovePasswordEntryView] = 1;
  objc_allocWithZone((Class)type metadata accessor for MoveViewController());
  Swift::String v6 = v2;
  id v7 = sub_1003D5568((uint64_t)a1, a2);
  uint64_t v8 = OBJC_IVAR___ICMoveNavigationController_moveViewController;
  *(void *)&v6[OBJC_IVAR___ICMoveNavigationController_moveViewController] = v7;

  uint64_t v9 = *(void *)&v6[v8];
  v18.receiver = v6;
  v18.super_class = ObjectType;
  id v10 = [super initWithRootViewController:v9];
  UIImage_optional v11 = self;
  id v12 = v10;
  if (objc_msgSend(v11, "ic_isVision")) {
    uint64_t v13 = 1;
  }
  else {
    uint64_t v13 = 2;
  }
  [v12 setModalPresentationStyle:v13];

  id v14 = [v12 presentationController];
  if (v14)
  {
    id v15 = v14;
    id v16 = v12;
    [v15 setDelegate:v16];
  }
  return v12;
}

uint64_t type metadata accessor for MoveNavigationController()
{
  return self;
}

uint64_t sub_1003E33AC()
{
  unsigned __int8 v0 = [self isRunningUnitTests];
  id v1 = [self standardUserDefaults];
  type metadata accessor for Cohort();
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = v0;
  *(void *)(result + 24) = v1;
  qword_1006CE100 = result;
  return result;
}

unint64_t sub_1003E3428()
{
  id v1 = *(void **)(v0 + 24);
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v1 objectForKey:v2];

  if (v3)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  sub_1001BC02C((uint64_t)v8, (uint64_t)v9);
  if (!v10)
  {
    sub_100015BE0((uint64_t)v9);
    goto LABEL_8;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    unint64_t v4 = sub_1003E35BC(0x63uLL) + 1;
    NSString v5 = String._bridgeToObjectiveC()();
    [v1 setInteger:v4 forKey:v5];

    return v4;
  }
  return v7;
}

uint64_t sub_1003E3560()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Cohort()
{
  return self;
}

unint64_t sub_1003E35BC(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    swift_stdlib_random();
    uint64_t result = (0 * (unsigned __int128)v1) >> 64;
    if (-(uint64_t)v1 % v1)
    {
      while (1)
        swift_stdlib_random();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t ICArchiveCreator.softwareIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *NSString v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t ICArchiveCreator.softwareVersionName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ICArchiveCreator.softwareVersionName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t ICArchiveCreator.softwareVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ICArchiveCreator.softwareVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*CreateAttachmentIntent.insertionRange.modify())()
{
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

double sub_1003E3770()
{
  sub_1003E3BE0((uint64_t *)v1);
  static ICArchiveCreator.default = v1[0];
  *(_OWORD *)&qword_1006CE118 = v1[1];
  double result = *(double *)&v2;
  *(_OWORD *)&qword_1006CE128 = v2;
  return result;
}

long long *ICArchiveCreator.default.unsafeMutableAddressor()
{
  if (qword_10069AFF8 != -1) {
    swift_once();
  }
  return &static ICArchiveCreator.default;
}

uint64_t static ICArchiveCreator.default.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069AFF8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1006CE130;
  *(void *)a1 = static ICArchiveCreator.default;
  *(_OWORD *)(a1 + 8) = *(long long *)((char *)&static ICArchiveCreator.default + 8);
  *(_OWORD *)(a1 + 24) = unk_1006CE120;
  *(void *)(a1 + 40) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

unint64_t sub_1003E38A0()
{
  unint64_t v1 = 0x6572617774666F73;
  if (*v0 == 1) {
    unint64_t v1 = 0xD000000000000013;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000012;
  }
}

uint64_t sub_1003E3908@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1003E3EB8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1003E3930(uint64_t a1)
{
  unint64_t v2 = sub_1003E3B30();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003E396C(uint64_t a1)
{
  unint64_t v2 = sub_1003E3B30();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ICArchiveCreator.encode(to:)(void *a1)
{
  uint64_t v3 = sub_10002F214(&qword_1006A62C0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::String v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10015E154(a1, a1[3]);
  sub_1003E3B30();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (!v1)
  {
    v8[14] = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v8[13] = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1003E3B30()
{
  unint64_t result = qword_1006A62C8;
  if (!qword_1006A62C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A62C8);
  }
  return result;
}

double ICArchiveCreator.init(from:)@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1003E402C(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1003E3BC8(void *a1)
{
  return ICArchiveCreator.encode(to:)(a1);
}

uint64_t sub_1003E3BE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = self;
  id v3 = [v2 mainBundle];
  id v4 = [v3 bundleIdentifier];

  if (v4)
  {
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  id v8 = [v2 mainBundle];
  id v9 = [v8 infoDictionary];

  if (!v9)
  {
    long long v28 = 0u;
    long long v29 = 0u;
    goto LABEL_16;
  }
  uint64_t v10 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v10 + 16) || (unint64_t v11 = sub_1002B63D4(0xD00000000000001ALL, 0x800000010054AD30), (v12 & 1) == 0))
  {
    long long v28 = 0u;
    long long v29 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  sub_100032E28(*(void *)(v10 + 56) + 32 * v11, (uint64_t)&v28);
  swift_bridgeObjectRelease();
  if (!*((void *)&v29 + 1))
  {
LABEL_16:
    sub_100015BE0((uint64_t)&v28);
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    goto LABEL_17;
  }
  int v13 = swift_dynamicCast();
  if (v13) {
    uint64_t v14 = v26;
  }
  else {
    uint64_t v14 = 0;
  }
  if (v13) {
    uint64_t v15 = v27;
  }
  else {
    uint64_t v15 = 0;
  }
LABEL_17:
  id v16 = [v2 mainBundle];
  id v17 = [v16 infoDictionary];

  if (!v17)
  {
    long long v28 = 0u;
    long long v29 = 0u;
    goto LABEL_27;
  }
  uint64_t v18 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (kCFBundleVersionKey)
  {
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    if (*(void *)(v18 + 16) && (unint64_t v21 = sub_1002B63D4(v19, v20), (v22 & 1) != 0))
    {
      sub_100032E28(*(void *)(v18 + 56) + 32 * v21, (uint64_t)&v28);
    }
    else
    {
      long long v28 = 0u;
      long long v29 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v29 + 1))
    {
      uint64_t result = swift_dynamicCast();
      uint64_t v24 = v26;
      uint64_t v25 = v27;
      if (!result)
      {
        uint64_t v24 = 0;
        uint64_t v25 = 0;
      }
      goto LABEL_28;
    }
LABEL_27:
    uint64_t result = sub_100015BE0((uint64_t)&v28);
    uint64_t v24 = 0;
    uint64_t v25 = 0;
LABEL_28:
    *a1 = v5;
    a1[1] = v7;
    a1[2] = v14;
    a1[3] = v15;
    a1[4] = v24;
    a1[5] = v25;
    return result;
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1003E3EB8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x800000010055CB70
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000010055CB90 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6572617774666F73 && a2 == 0xEF6E6F6973726556)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1003E402C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_10002F214(&qword_1006A62E8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = self;
  id v9 = [v8 mainBundle];
  id v10 = [v9 bundleIdentifier];

  uint64_t v38 = v5;
  if (v10)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v43 = v11;
  }
  else
  {
    uint64_t v43 = 0;
  }
  uint64_t v39 = v4;
  id v12 = [v8 mainBundle];
  id v13 = [v12 infoDictionary];

  id v37 = a2;
  if (v13)
  {
    uint64_t v14 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    if (*(void *)(v14 + 16) && (unint64_t v15 = sub_1002B63D4(0xD00000000000001ALL, 0x800000010054AD30), (v16 & 1) != 0))
    {
      sub_100032E28(*(void *)(v14 + 56) + 32 * v15, (uint64_t)&v41);
      swift_bridgeObjectRelease();
      if (*((void *)&v42 + 1))
      {
        swift_dynamicCast();
        goto LABEL_12;
      }
    }
    else
    {
      long long v41 = 0u;
      long long v42 = 0u;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    long long v41 = 0u;
    long long v42 = 0u;
  }
  sub_100015BE0((uint64_t)&v41);
LABEL_12:
  id v17 = [v8 mainBundle];
  id v18 = [v17 infoDictionary];

  if (v18)
  {
    uint64_t v19 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    if (!kCFBundleVersionKey)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      __break(1u);
      return result;
    }
    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    if (*(void *)(v19 + 16) && (unint64_t v22 = sub_1002B63D4(v20, v21), (v23 & 1) != 0))
    {
      sub_100032E28(*(void *)(v19 + 56) + 32 * v22, (uint64_t)&v41);
    }
    else
    {
      long long v41 = 0u;
      long long v42 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v42 + 1))
    {
      swift_dynamicCast();
      goto LABEL_22;
    }
  }
  else
  {
    long long v41 = 0u;
    long long v42 = 0u;
  }
  sub_100015BE0((uint64_t)&v41);
LABEL_22:
  uint64_t v24 = v39;
  sub_10015E154(a1, a1[3]);
  sub_1003E3B30();
  uint64_t v25 = v40;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v25)
  {
    sub_100018FE8((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v41) = 0;
    uint64_t v26 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v28 = v27;
    uint64_t v40 = v26;
    swift_bridgeObjectRelease();
    LOBYTE(v41) = 1;
    uint64_t v29 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v31 = v30;
    uint64_t v43 = v29;
    swift_bridgeObjectRelease();
    LOBYTE(v41) = 2;
    uint64_t v32 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v34 = v33;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v7, v24);
    uint64_t result = sub_100018FE8((uint64_t)a1);
    id v36 = v37;
    *id v37 = v40;
    v36[1] = v28;
    _OWORD v36[2] = v43;
    v36[3] = v31;
    v36[4] = v32;
    v36[5] = v34;
  }
  return result;
}

uint64_t destroy for ICArchiveCreator()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ICArchiveCreator(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ICArchiveCreator(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ICArchiveCreator(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ICArchiveCreator(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ICArchiveCreator(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICArchiveCreator()
{
  return &type metadata for ICArchiveCreator;
}

unsigned char *storeEnumTagSinglePayload for ICArchiveCreator.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003E4844);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICArchiveCreator.CodingKeys()
{
  return &type metadata for ICArchiveCreator.CodingKeys;
}

unint64_t sub_1003E4880()
{
  unint64_t result = qword_1006A62D0;
  if (!qword_1006A62D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A62D0);
  }
  return result;
}

unint64_t sub_1003E48D8()
{
  unint64_t result = qword_1006A62D8;
  if (!qword_1006A62D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A62D8);
  }
  return result;
}

unint64_t sub_1003E4930()
{
  unint64_t result = qword_1006A62E0;
  if (!qword_1006A62E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A62E0);
  }
  return result;
}

uint64_t type metadata accessor for SmartFolderComposerDataSource()
{
  uint64_t result = qword_1006A6318;
  if (!qword_1006A6318) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1003E49D0()
{
  return swift_initClassMetadata2();
}

unint64_t sub_1003E4A40@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1003E6114(*a1);
  *a2 = result;
  return result;
}

void sub_1003E4A6C(void *a1@<X8>)
{
  *a1 = &off_10062B550;
}

unint64_t sub_1003E4A7C@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1003E6124(*a1);
  *a2 = result;
  return result;
}

void sub_1003E4AA8(void *a1@<X8>)
{
  *a1 = &off_10062B618;
}

uint64_t sub_1003E4AB8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10002F214(&qword_1006A63C8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1003E7780();
  sub_1003E77D4();
  NSDiffableDataSourceSnapshot.init()();
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_10062CBE8);
  v14[15] = 0;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
  v14[14] = 1;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
  unsigned int v6 = *(void **)(v0 + qword_1006A6300);
  if (v6)
  {
    uint64_t v7 = self;
    id v8 = v6;
    id v9 = [v7 allVisibleHashtagsInContext:v8];
    sub_100327310();
    unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v10 >> 62))
    {
      uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();

      if (!v11) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();

    swift_bridgeObjectRelease_n();
    if (v13)
    {
LABEL_4:
      v14[11] = 2;
      NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
    }
  }
LABEL_5:
  v14[13] = 2;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
  if (*(unsigned char *)(v1 + qword_1006A62F0) == 1)
  {
    v14[12] = 3;
    NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
  }
  dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1003E4D4C()
{
  return sub_1003E5734(1, (void (*)(void))type metadata accessor for SmartFolderComposerTextFieldCell);
}

id sub_1003E4D68(uint64_t a1)
{
  id v2 = [self mainBundle];
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 localizedStringForKey:v3 value:0 table:0];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  id v8 = (uint64_t *)(a1 + OBJC_IVAR___ICTagDetailCell_text);
  *id v8 = v5;
  v8[1] = v7;
  swift_bridgeObjectRelease();
  return sub_1003E12A8();
}

void sub_1003E4E38(uint64_t a1, int a2, int a3, id a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a4)
  {
    id v11 = [a4 title];
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;
  }
  else
  {
    uint64_t v13 = a6;
    swift_bridgeObjectRetain();
  }
  id v14 = sub_10042419C();
  if (v13)
  {
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v15 = 0;
  }
  [v14 setText:v15];

  char v16 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerTextFieldCell_textDidChange);
  uint64_t v17 = *(void *)(a1 + OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerTextFieldCell_textDidChange);
  *char v16 = a7;
  v16[1] = a8;
  sub_10002E71C(a7);
  sub_10002E70C(v17);
  id v18 = sub_10042419C();
  id v19 = [self mainBundle];
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [v19 localizedStringForKey:v20 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v18 setAccessibilityLabel:v22];
}

uint64_t sub_1003E5008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v12 = [self mainBundle];
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v12 localizedStringForKey:v13 value:0 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v15 = sub_10042419C();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v15 setPlaceholder:v16];

  uint64_t v17 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerCreateTagCell_tagDidChange);
  uint64_t v18 = *(void *)(a1 + OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerCreateTagCell_tagDidChange);
  *uint64_t v17 = a4;
  v17[1] = a5;
  sub_10002E71C(a4);
  sub_10002E70C(v18);
  id v19 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerCreateTagCell_tagDidEnter);
  uint64_t v20 = *(void *)(a1 + OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerCreateTagCell_tagDidEnter);
  *id v19 = a6;
  v19[1] = a7;
  sub_10002E71C(a6);

  return sub_10002E70C(v20);
}

uint64_t sub_1003E5180(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v8 = [self mainBundle];
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v8 localizedStringForKey:v9 value:0 table:0];

  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  id v14 = (uint64_t *)&a1[OBJC_IVAR____TtC11MobileNotes29SmartFolderComposerSwitchCell_text];
  *id v14 = v11;
  v14[1] = v13;
  swift_bridgeObjectRelease();
  [a1 setNeedsUpdateConfiguration];
  id v15 = (uint64_t *)&a1[OBJC_IVAR____TtC11MobileNotes29SmartFolderComposerSwitchCell_onDidChange];
  uint64_t v16 = *(void *)&a1[OBJC_IVAR____TtC11MobileNotes29SmartFolderComposerSwitchCell_onDidChange];
  *id v15 = a4;
  v15[1] = a5;
  sub_10002E71C(a4);

  return sub_10002E70C(v16);
}

uint64_t sub_1003E52A8(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  switch(*a3)
  {
    case 1:
      type metadata accessor for SmartFolderComposerTextFieldCell();
      return UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
    case 2:
      type metadata accessor for TagContainerCell();
      uint64_t v3 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
      uint64_t v4 = OBJC_IVAR___ICTagContainerCell_allowsContextualMenu;
      *(unsigned char *)(v3 + OBJC_IVAR___ICTagContainerCell_allowsContextualMenu) = 0;
      uint64_t v5 = sub_10028DF24();
      v5[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_allowsContextualMenu] = *(unsigned char *)(v3 + v4);

      return v3;
    case 3:
      type metadata accessor for SmartFolderComposerCreateTagCell();
      return UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
    case 4:
      type metadata accessor for SmartFolderComposerSwitchCell();
      return UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
    default:
      type metadata accessor for TagDetailCell();
      return UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
  }
}

id sub_1003E5440(char *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    uint64_t v5 = *(void *)(Strong + qword_1006A6310);
    uint64_t v4 = *(void *)(Strong + qword_1006A6310 + 8);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v4 = 0;
  }
  uint64_t v6 = &a1[OBJC_IVAR____TtC11MobileNotes13TagHeaderCell_text];
  *(void *)uint64_t v6 = v5;
  *((void *)v6 + 1) = v4;
  swift_bridgeObjectRelease();
  return [a1 setNeedsUpdateConfiguration];
}

id sub_1003E54EC(uint64_t a1)
{
  id result = (id)IndexPath.section.getter();
  if (result == (id)3)
  {
    id v3 = [self mainBundle];
    NSString v4 = String._bridgeToObjectiveC()();
    id v5 = [v3 localizedStringForKey:v4 value:0 table:0];

    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    NSString v9 = (uint64_t *)(a1 + OBJC_IVAR___ICTagDetailCell_text);
    *NSString v9 = v6;
    v9[1] = v8;
    swift_bridgeObjectRelease();
    return sub_1003E12A8();
  }
  return result;
}

uint64_t sub_1003E55D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == a2 && v5 == a3)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v7)
  {
LABEL_13:
    type metadata accessor for TagHeaderCell();
    return UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)();
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == a2 && v8 == a3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0) {
      return 0;
    }
  }
  type metadata accessor for TagDetailCell();
  return UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)();
}

uint64_t sub_1003E56E0()
{
  return sub_1003E5734(3, (void (*)(void))type metadata accessor for SmartFolderComposerTextFieldCell);
}

uint64_t sub_1003E56FC()
{
  return sub_1003E5734(2, (void (*)(void))type metadata accessor for TagContainerCell);
}

uint64_t sub_1003E5718()
{
  return sub_1003E5734(4, (void (*)(void))type metadata accessor for SmartFolderComposerSwitchCell);
}

uint64_t sub_1003E5734(char a1, void (*a2)(void))
{
  uint64_t v5 = sub_10002F214((uint64_t *)&unk_1006A2670);
  __chkstk_darwin(v5 - 8);
  char v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16[15] = a1;
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_10015E208((uint64_t)v7);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 32))(v11, v7, v8);
    uint64_t v12 = *(void **)(v2 + qword_1006A62F8);
    if (*(unsigned char *)(v2 + qword_1006A6308) == 1)
    {
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      id v14 = [v12 cellForItemAtIndexPath:isa];

      (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
      if (!v14) {
        return 0;
      }
    }
    else
    {
      id v14 = (id)dispatch thunk of UICollectionViewDiffableDataSource.collectionView(_:cellForItemAt:)();
      (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
    }
    a2(0);
    uint64_t result = swift_dynamicCastClass();
    if (result) {
      return result;
    }
  }
  return 0;
}

uint64_t sub_1003E5958(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10002F214(&qword_1006A63C8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v30[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  IndexPath.init(item:section:)();
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();
  v30[15] = 2;
  uint64_t v12 = NSDiffableDataSourceSnapshot.numberOfItems(inSection:)();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  if (v12 >= 2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = *(void **)(v2 + qword_1006A62F8);
    if (*(unsigned char *)(v2 + qword_1006A6308) == 1)
    {
      NSString v14 = String._bridgeToObjectiveC()();
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      id v16 = [v13 supplementaryViewForElementKind:v14 atIndexPath:isa];
      swift_bridgeObjectRelease();

      if (!v16) {
        return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
      }
    }
    else
    {
      id v16 = (id)dispatch thunk of UICollectionViewDiffableDataSource.collectionView(_:viewForSupplementaryElementOfKind:at:)();
      swift_bridgeObjectRelease();
    }
    type metadata accessor for TagHeaderCell();
    uint64_t v17 = swift_dynamicCastClass();
    if (v17)
    {
      uint64_t v18 = (char *)v17;
      id v19 = [self mainBundle];
      NSString v20 = String._bridgeToObjectiveC()();
      id v21 = [v19 localizedStringForKey:v20 value:0 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_10002F214((uint64_t *)&unk_1006A1950);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_100524D10;
      *(void *)(v22 + 56) = &type metadata for Int;
      *(void *)(v22 + 64) = &protocol witness table for Int;
      *(void *)(v22 + 32) = a1;
      uint64_t v23 = static String.localizedStringWithFormat(_:_:)();
      uint64_t v25 = v24;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v26 = (uint64_t *)(v2 + qword_1006A6310);
      *uint64_t v26 = v23;
      v26[1] = v25;
      swift_bridgeObjectRelease();
      uint64_t v27 = v26[1];
      uint64_t v28 = (uint64_t *)&v18[OBJC_IVAR____TtC11MobileNotes13TagHeaderCell_text];
      *uint64_t v28 = *v26;
      v28[1] = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      [v18 setNeedsUpdateConfiguration];
    }
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1003E5D18()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003E5D6C(uint64_t a1)
{
  return swift_bridgeObjectRelease();
}

void sub_1003E5DCC()
{
}

uint64_t sub_1003E5E04()
{
  return type metadata accessor for SmartFolderComposerDataSource();
}

unsigned char *storeEnumTagSinglePayload for SmartFolderComposerItem(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003E5ED8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SmartFolderComposerItem()
{
  return &type metadata for SmartFolderComposerItem;
}

unsigned char *storeEnumTagSinglePayload for SmartFolderComposerSection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003E5FDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SmartFolderComposerSection()
{
  return &type metadata for SmartFolderComposerSection;
}

uint64_t sub_1003E6014()
{
  return sub_10015D724(&qword_1006A6368, &qword_1006A6370);
}

unint64_t sub_1003E6040()
{
  unint64_t result = qword_1006A6378;
  if (!qword_1006A6378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A6378);
  }
  return result;
}

uint64_t sub_1003E6094()
{
  return sub_10015D724(&qword_1006A6380, &qword_1006A6388);
}

unint64_t sub_1003E60C0()
{
  unint64_t result = qword_1006A6390;
  if (!qword_1006A6390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A6390);
  }
  return result;
}

unint64_t sub_1003E6114(unint64_t result)
{
  if (result >= 5) {
    return 5;
  }
  return result;
}

unint64_t sub_1003E6124(unint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  return result;
}

char *sub_1003E6134(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v127 = a8;
  uint64_t v116 = a7;
  uint64_t v115 = a6;
  uint64_t v114 = a5;
  uint64_t v112 = a4;
  uint64_t v110 = a3;
  uint64_t v111 = a2;
  id v107 = a1;
  uint64_t v123 = a15;
  uint64_t v122 = a14;
  uint64_t v121 = a13;
  uint64_t v120 = a12;
  uint64_t v118 = a11;
  uint64_t v125 = a9;
  uint64_t v117 = a10;
  uint64_t v136 = sub_10002F214(&qword_1006A32A0);
  uint64_t v134 = *(void *)(v136 - 8);
  uint64_t v135 = *(void *)(v134 + 64);
  uint64_t v16 = __chkstk_darwin(v136);
  v133 = (char *)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v130 = (char *)&v104 - v18;
  uint64_t v131 = sub_10002F214(&qword_1006A6398);
  uint64_t v129 = *(void *)(v131 - 8);
  uint64_t v132 = *(void *)(v129 + 64);
  uint64_t v19 = __chkstk_darwin(v131);
  v148 = (char *)&v104 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v128 = (char *)&v104 - v21;
  uint64_t v22 = sub_10002F214(&qword_1006A63A0);
  uint64_t v153 = *(void *)(v22 - 8);
  uint64_t v154 = v22;
  uint64_t v126 = *(void *)(v153 + 64);
  uint64_t v23 = __chkstk_darwin(v22);
  v147 = (char *)&v104 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v143 = (char *)&v104 - v25;
  uint64_t v26 = sub_10002F214(&qword_1006A63A8);
  uint64_t v151 = *(void *)(v26 - 8);
  uint64_t v152 = v26;
  uint64_t v124 = *(void *)(v151 + 64);
  uint64_t v27 = __chkstk_darwin(v26);
  v146 = (char *)&v104 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v139 = (char *)&v104 - v29;
  uint64_t v150 = sub_10002F214(&qword_1006A63B0);
  uint64_t v142 = *(void *)(v150 - 8);
  uint64_t v119 = *(void *)(v142 + 64);
  uint64_t v30 = __chkstk_darwin(v150);
  v145 = (char *)&v104 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v138 = (char *)&v104 - v32;
  uint64_t v33 = sub_10002F214(&qword_1006A63B8);
  uint64_t v140 = *(void *)(v33 - 8);
  uint64_t v141 = v33;
  uint64_t v113 = *(void *)(v140 + 64);
  uint64_t v34 = __chkstk_darwin(v33);
  v144 = (char *)&v104 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  id v37 = (char *)&v104 - v36;
  uint64_t v149 = sub_10002F214(&qword_1006A63C0);
  uint64_t v137 = *(void *)(v149 - 8);
  uint64_t v38 = *(void *)(v137 + 64);
  uint64_t v39 = __chkstk_darwin(v149);
  v105 = (char *)&v104 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  long long v41 = (char *)&v104 - v40;
  uint64_t v42 = qword_1006A62F0;
  uint64_t v43 = v15;
  *((unsigned char *)v15 + v42) = ICInternalSettingsSmartFoldersCanIncludeRecentlyDeletedNotes();
  uint64_t v44 = qword_1006A6300;
  *(void *)&v43[qword_1006A6300] = 0;
  v43[qword_1006A6308] = 1;
  id v45 = (uint64_t *)&v43[qword_1006A6310];
  id v46 = [self mainBundle];
  NSString v47 = String._bridgeToObjectiveC()();
  id v48 = [v46 localizedStringForKey:v47 value:0 table:0];

  uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v51 = v50;

  uint64_t *v45 = v49;
  v45[1] = v51;
  id v52 = v107;
  *(void *)&v43[qword_1006A62F8] = v107;
  uint64_t v53 = *(void **)&v43[v44];
  id v54 = (void *)v110;
  *(void *)&v43[v44] = v110;
  uint64_t v106 = v43;
  id v107 = v52;
  id v55 = v54;

  uint64_t v110 = type metadata accessor for TagDetailCell();
  uint64_t v56 = v41;
  uint64_t v109 = v41;
  UICollectionView.CellRegistration.init(handler:)();
  int64_t v57 = (void *)swift_allocObject();
  id v58 = v111;
  uint64_t v59 = v112;
  v57[2] = v111;
  v57[3] = v59;
  uint64_t v60 = v115;
  v57[4] = v114;
  v57[5] = v60;
  v57[6] = v116;
  id v61 = v58;
  sub_10002E71C(v60);
  type metadata accessor for SmartFolderComposerTextFieldCell();
  v108 = v37;
  UICollectionView.CellRegistration.init(handler:)();
  uint64_t v62 = swift_allocObject();
  uint64_t v63 = v117;
  uint64_t v64 = v118;
  *(void *)(v62 + 16) = v117;
  *(void *)(v62 + 24) = v64;
  sub_10002E71C(v63);
  type metadata accessor for TagContainerCell();
  uint64_t v65 = v138;
  UICollectionView.CellRegistration.init(handler:)();
  id v66 = (void *)swift_allocObject();
  uint64_t v67 = v120;
  uint64_t v68 = v121;
  v66[2] = v120;
  v66[3] = v68;
  uint64_t v69 = v122;
  uint64_t v70 = v123;
  v66[4] = v122;
  v66[5] = v70;
  sub_10002E71C(v67);
  sub_10002E71C(v69);
  type metadata accessor for SmartFolderComposerCreateTagCell();
  uint64_t v71 = v139;
  UICollectionView.CellRegistration.init(handler:)();
  uint64_t v72 = swift_allocObject();
  uint64_t v73 = v127;
  uint64_t v74 = v125;
  *(void *)(v72 + 16) = v127;
  *(void *)(v72 + 24) = v74;
  sub_10002E71C(v73);
  type metadata accessor for SmartFolderComposerSwitchCell();
  id v75 = v143;
  UICollectionView.CellRegistration.init(handler:)();
  uint64_t v76 = v137;
  (*(void (**)(char *, char *, uint64_t))(v137 + 16))((char *)&v104 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0), v56, v149);
  uint64_t v78 = v140;
  uint64_t v77 = v141;
  (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v144, v37, v141);
  uint64_t v79 = v142;
  (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v145, v65, v150);
  uint64_t v80 = v151;
  (*(void (**)(char *, char *, uint64_t))(v151 + 16))(v146, v71, v152);
  uint64_t v81 = v153;
  (*(void (**)(char *, char *, uint64_t))(v153 + 16))(v147, v75, v154);
  uint64_t v82 = v76;
  unint64_t v83 = (*(unsigned __int8 *)(v76 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
  unint64_t v84 = (v38 + *(unsigned __int8 *)(v78 + 80) + v83) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
  uint64_t v85 = v79;
  unint64_t v86 = (v113 + *(unsigned __int8 *)(v79 + 80) + v84) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
  unint64_t v87 = (v119 + *(unsigned __int8 *)(v80 + 80) + v86) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
  unint64_t v88 = (v124 + *(unsigned __int8 *)(v81 + 80) + v87) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
  uint64_t v89 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v82 + 32))(v89 + v83, v105, v149);
  (*(void (**)(unint64_t, char *, uint64_t))(v78 + 32))(v89 + v84, v144, v77);
  (*(void (**)(unint64_t, char *, uint64_t))(v85 + 32))(v89 + v86, v145, v150);
  (*(void (**)(unint64_t, char *, uint64_t))(v151 + 32))(v89 + v87, v146, v152);
  (*(void (**)(unint64_t, char *, uint64_t))(v153 + 32))(v89 + v88, v147, v154);
  id v90 = v107;
  uint64_t v91 = (void *)UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for TagHeaderCell();
  v147 = v91;
  uint64_t v92 = v128;
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  char v93 = v130;
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)();
  uint64_t v94 = v129;
  uint64_t v95 = v131;
  (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v148, v92, v131);
  uint64_t v96 = v134;
  UIImage_optional v97 = v133;
  uint64_t v98 = v136;
  (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v133, v93, v136);
  unint64_t v99 = (*(unsigned __int8 *)(v94 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80);
  unint64_t v100 = (v132 + *(unsigned __int8 *)(v96 + 80) + v99) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
  uint64_t v101 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v94 + 32))(v101 + v99, v148, v95);
  (*(void (**)(unint64_t, char *, uint64_t))(v96 + 32))(v101 + v100, v97, v98);
  uint64_t v102 = v147;
  dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter();

  sub_1003E4AB8();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v93, v98);
  (*(void (**)(char *, uint64_t))(v94 + 8))(v92, v95);
  (*(void (**)(char *, uint64_t))(v153 + 8))(v143, v154);
  (*(void (**)(char *, uint64_t))(v151 + 8))(v139, v152);
  (*(void (**)(char *, uint64_t))(v142 + 8))(v138, v150);
  (*(void (**)(char *, uint64_t))(v140 + 8))(v108, v141);
  (*(void (**)(char *, uint64_t))(v137 + 8))(v109, v149);
  return v102;
}

uint64_t sub_1003E6EA8()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 56, 7);
}

void sub_1003E6EF8(uint64_t a1, int a2, int a3)
{
  sub_1003E4E38(a1, a2, a3, *(id *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48));
}

uint64_t sub_1003E6F0C()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003E6F5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003E5008(a1, a2, a3, v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_1003E6F6C()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003E6FAC(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_1003E5180(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_1003E6FB4()
{
  uint64_t v27 = sub_10002F214(&qword_1006A63C0);
  uint64_t v20 = *(void *)(v27 - 8);
  uint64_t v25 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v1 = *(void *)(v20 + 64);
  uint64_t v26 = sub_10002F214(&qword_1006A63B8);
  uint64_t v2 = *(void *)(v26 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v21 = (((v25 + 16) & ~v25) + v1 + v3) & ~v3;
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v24 = sub_10002F214(&qword_1006A63B0);
  uint64_t v5 = *(void *)(v24 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v21 + v4 + v6) & ~v6;
  uint64_t v18 = v7;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v23 = sub_10002F214(&qword_1006A63A8);
  uint64_t v9 = *(void *)(v23 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = (v7 + v8 + v10) & ~v10;
  uint64_t v12 = *(void *)(v9 + 64);
  uint64_t v22 = sub_10002F214(&qword_1006A63A0);
  uint64_t v13 = *(void *)(v22 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = (v11 + v12 + v14) & ~v14;
  uint64_t v19 = v15 + *(void *)(v13 + 64);
  uint64_t v16 = v25 | v3 | v6 | v10 | v14 | 7;
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v0 + ((v25 + 16) & ~v25), v27);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v21, v26);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v18, v24);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v11, v23);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v0 + v15, v22);

  return _swift_deallocObject(v0, v19, v16);
}

uint64_t sub_1003E72C0(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  sub_10002F214(&qword_1006A63C0);
  sub_10002F214(&qword_1006A63B8);
  sub_10002F214(&qword_1006A63B0);
  sub_10002F214(&qword_1006A63A8);
  sub_10002F214(&qword_1006A63A0);

  return sub_1003E52A8(a1, a2, a3);
}

uint64_t sub_1003E74E4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

id sub_1003E751C(char *a1)
{
  return sub_1003E5440(a1);
}

uint64_t sub_1003E7524()
{
  uint64_t v1 = sub_10002F214(&qword_1006A6398);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_10002F214(&qword_1006A32A0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1003E767C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10002F214(&qword_1006A6398);
  sub_10002F214(&qword_1006A32A0);

  return sub_1003E55D0(a1, a2, a3);
}

unint64_t sub_1003E7780()
{
  unint64_t result = qword_1006A63D0;
  if (!qword_1006A63D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A63D0);
  }
  return result;
}

unint64_t sub_1003E77D4()
{
  unint64_t result = qword_1006A63D8;
  if (!qword_1006A63D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A63D8);
  }
  return result;
}

uint64_t sub_1003E7828(unint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for TableID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    if (!v8) {
      return (uint64_t)v9;
    }
    uint64_t v18 = _swiftEmptyArrayStorage;
    uint64_t result = sub_100169E0C(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0) {
      break;
    }
    uint64_t v11 = 0;
    uint64_t v9 = v18;
    unint64_t v16 = a1 & 0xC000000000000001;
    unint64_t v17 = a1;
    v15[0] = v2;
    v15[1] = v5 + 32;
    while (v8 != v11)
    {
      if (v16) {
        id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v12 = *(id *)(a1 + 8 * v11 + 32);
      }
      uint64_t v13 = v12;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, (uint64_t)v12 + OBJC_IVAR____TtC11MobileNotesP33_3A26B74EEED685164DF9267FE58E345F17TableSearchResult_id, v4);

      uint64_t v18 = v9;
      unint64_t v2 = v9[2];
      unint64_t v14 = v9[3];
      if (v2 >= v14 >> 1)
      {
        sub_100169E0C(v14 > 1, v2 + 1, 1);
        uint64_t v9 = v18;
      }
      ++v11;
      v9[2] = v2 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v2, v7, v4);
      a1 = v17;
      if (v8 == v11) {
        return (uint64_t)v9;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1003E7A58@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for TableEntity();
  uint64_t result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

void *sub_1003E7AA0(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_1003E7AF8(a1, a2, a3, type metadata accessor for VisibleNotesQuery.Comparator);
}

void *sub_1003E7ACC(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_1003E7AF8(a1, a2, a3, type metadata accessor for VisibleAttachmentsQuery.Comparator);
}

void *sub_1003E7AF8(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  unint64_t v13 = (unint64_t)_swiftEmptyArrayStorage;
  if (v6)
  {
    uint64_t v9 = *(void *)(a4(0) - 8);
    uint64_t v10 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    do
    {
      a1(&v12, v10);
      if (v4)
      {
        swift_bridgeObjectRelease();
        return (void *)swift_bridgeObjectRelease();
      }
      if (v12)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v10 += v11;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return (void *)v13;
  }
  return result;
}

void sub_1003E7C74(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = a3;
  unint64_t v26 = (unint64_t)_swiftEmptyArrayStorage;
  if ((a3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_100031418(0, (unint64_t *)&qword_10069E810);
    sub_1001A3EEC();
    Set.Iterator.init(_cocoa:)();
    uint64_t v5 = v25[1];
    uint64_t v23 = v25[2];
    uint64_t v7 = v25[3];
    int64_t v8 = v25[4];
    unint64_t v9 = v25[5];
  }
  else
  {
    uint64_t v10 = -1 << *(unsigned char *)(a3 + 32);
    uint64_t v23 = a3 + 56;
    uint64_t v11 = ~v10;
    uint64_t v12 = -v10;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v9 = v13 & *(void *)(a3 + 56);
    swift_bridgeObjectRetain();
    uint64_t v7 = v11;
    int64_t v8 = 0;
  }
  int64_t v22 = (unint64_t)(v7 + 64) >> 6;
  while (v5 < 0)
  {
    uint64_t v17 = __CocoaSet.Iterator.next()();
    if (!v17) {
      goto LABEL_39;
    }
    uint64_t v24 = v17;
    sub_100031418(0, (unint64_t *)&qword_10069E810);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v18 = (id)v25[0];
    swift_unknownObjectRelease();
    int64_t v16 = v8;
    uint64_t v14 = v9;
    if (!v18) {
      goto LABEL_39;
    }
LABEL_28:
    v25[0] = v18;
    a1(&v24, v25);

    if (v4)
    {
      sub_10017B518();
      swift_bridgeObjectRelease();
      return;
    }
    if (v24)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    int64_t v8 = v16;
    unint64_t v9 = v14;
  }
  if (v9)
  {
    uint64_t v14 = (v9 - 1) & v9;
    unint64_t v15 = __clz(__rbit64(v9)) | (v8 << 6);
    int64_t v16 = v8;
LABEL_27:
    id v18 = *(id *)(*(void *)(v5 + 48) + 8 * v15);
    if (!v18) {
      goto LABEL_39;
    }
    goto LABEL_28;
  }
  int64_t v16 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v16 >= v22) {
      goto LABEL_39;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v16);
    if (!v19)
    {
      int64_t v20 = v8 + 2;
      if (v8 + 2 >= v22) {
        goto LABEL_39;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v20);
      if (v19) {
        goto LABEL_25;
      }
      int64_t v20 = v8 + 3;
      if (v8 + 3 >= v22) {
        goto LABEL_39;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v20);
      if (v19) {
        goto LABEL_25;
      }
      int64_t v20 = v8 + 4;
      if (v8 + 4 >= v22) {
        goto LABEL_39;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v20);
      if (v19)
      {
LABEL_25:
        int64_t v16 = v20;
      }
      else
      {
        int64_t v16 = v8 + 5;
        if (v8 + 5 >= v22) {
          goto LABEL_39;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v16);
        if (!v19)
        {
          int64_t v21 = v8 + 6;
          while (v22 != v21)
          {
            unint64_t v19 = *(void *)(v23 + 8 * v21++);
            if (v19)
            {
              int64_t v16 = v21 - 1;
              goto LABEL_26;
            }
          }
LABEL_39:
          sub_10017B518();
          return;
        }
      }
    }
LABEL_26:
    uint64_t v14 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v16 << 6);
    goto LABEL_27;
  }
  __break(1u);
}

void *sub_1003E7FE8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for VisibleTablesQuery.Comparator(0);
  __chkstk_darwin(v3);
  uint64_t v6 = (void *)((char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7) {
    return _swiftEmptyArrayStorage;
  }
  v23[0] = a1;
  v23[1] = v1;
  uint64_t v8 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = *(void *)(v4 + 72);
  swift_bridgeObjectRetain();
  uint64_t v10 = _swiftEmptyArrayStorage;
  v23[3] = v3;
  do
  {
    sub_1003F1EE0(v8, (uint64_t)v6, type metadata accessor for VisibleTablesQuery.Comparator);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      unint64_t v11 = v6[1];
      uint64_t v12 = HIBYTE(v11) & 0xF;
      if ((v11 & 0x2000000000000000) == 0) {
        uint64_t v12 = *v6 & 0xFFFFFFFFFFFFLL;
      }
      if (v12)
      {
        uint64_t v13 = self;
        NSString v14 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v15 = [v13 prefixMatchingQueryStringForSearchString:v14];

        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v18 = v17;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v10 = sub_1001A847C(0, v10[2] + 1, 1, v10);
        }
        unint64_t v20 = v10[2];
        unint64_t v19 = v10[3];
        if (v20 >= v19 >> 1) {
          uint64_t v10 = sub_1001A847C((void *)(v19 > 1), v20 + 1, 1, v10);
        }
        v10[2] = v20 + 1;
        int64_t v21 = &v10[2 * v20];
        v21[4] = v16;
        v21[5] = v18;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_1003F3B54((uint64_t)v6, type metadata accessor for VisibleTablesQuery.Comparator);
    }
    v8 += v9;
    --v7;
  }
  while (v7);
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_1003E8254(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1003E8288(a1, a2, a3, a4, &qword_10069D160, (void (*)(BOOL, unint64_t, uint64_t))sub_100169EEC);
}

void *sub_1003E8288(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(BOOL, unint64_t, uint64_t))
{
  uint64_t v8 = v6;
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  uint64_t v23 = sub_10002F214(a5);
  uint64_t v10 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v13 = *(void *)(a3 + 16);
  uint64_t v27 = _swiftEmptyArrayStorage;
  a6(0, v13, 0);
  NSString v14 = v27;
  unint64_t v22 = v13;
  if (v13)
  {
    unint64_t v20 = a6;
    uint64_t v21 = v10 + 32;
    swift_bridgeObjectRetain();
    uint64_t v15 = 0;
    while (1)
    {
      char v26 = *(unsigned char *)(a3 + v15 + 32);
      v24(&v26);
      if (v8) {
        break;
      }
      uint64_t v8 = 0;
      uint64_t v27 = v14;
      unint64_t v17 = v14[2];
      unint64_t v16 = v14[3];
      if (v17 >= v16 >> 1)
      {
        v20(v16 > 1, v17 + 1, 1);
        NSString v14 = v27;
      }
      ++v15;
      v14[2] = v17 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))((unint64_t)v14+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v17, v12, v23);
      if (v22 == v15) {
        goto LABEL_9;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_9:
    swift_bridgeObjectRelease();
  }
  return v14;
}

uint64_t sub_1003E8488()
{
  uint64_t v0 = sub_10002F214((uint64_t *)&unk_1006A63F0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    uint64_t v6 = qword_10069AE08;
    swift_unknownObjectRetain();
    if (v6 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_10003293C(v0, (uint64_t)static ICAttachment.hasValidEntityIdentifier);
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v7, v0);
    v11[0] = v5;
    v11[1] = v11;
    swift_unknownObjectRetain();
    char v8 = Predicate.evaluate(_:)();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    swift_unknownObjectRelease();
  }
  else
  {
    char v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_1003E87B4(uint64_t a1)
{
  swift_getObjectType();
  sub_10002F034(a1, (uint64_t)v7, &qword_10069B4D0);
  if (!v8)
  {
    sub_10002B754((uint64_t)v7, &qword_10069B4D0);
    goto LABEL_11;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    char v4 = 0;
    return v4 & 1;
  }
  if ((static TableID.== infix(_:_:)() & 1) == 0)
  {

    goto LABEL_11;
  }
  if (*(void *)&v6[OBJC_IVAR____TtC11MobileNotesP33_3A26B74EEED685164DF9267FE58E345F17TableSearchResult_title] == *(void *)(v1 + OBJC_IVAR____TtC11MobileNotesP33_3A26B74EEED685164DF9267FE58E345F17TableSearchResult_title)
    && *(void *)&v6[OBJC_IVAR____TtC11MobileNotesP33_3A26B74EEED685164DF9267FE58E345F17TableSearchResult_title + 8] == *(void *)(v1 + OBJC_IVAR____TtC11MobileNotesP33_3A26B74EEED685164DF9267FE58E345F17TableSearchResult_title + 8))
  {

    char v4 = 1;
  }
  else
  {
    char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  return v4 & 1;
}

void *sub_1003E89E4(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v18 = a4;
  sub_1003E8288((void (*)(char *))sub_1003E8E4C, 0, a1, (uint64_t)v17, &qword_10069D138, (void (*)(BOOL, unint64_t, uint64_t))sub_100169F0C);
  sub_10002F214(&qword_1006A00B0);
  sub_10002F214(&qword_1006A6740);
  sub_10002F214(&qword_10069D138);
  sub_10001DFB0(&qword_1006A6768, &qword_1006A00B0);
  sub_10001DFB0(&qword_1006A6748, &qword_1006A6740);
  sub_10001DFB0((unint64_t *)&unk_1006A6750, &qword_10069D138);
  uint64_t v6 = (void *)Sequence.sorted<A, B>(using:)();
  swift_bridgeObjectRelease();
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = sub_10041AB58(a2, (unint64_t)v6);
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    if (v13)
    {
      type metadata accessor for __ContiguousArrayStorageBase();
      swift_unknownObjectRetain_n();
      NSString v14 = (void *)swift_dynamicCastClass();
      if (!v14)
      {
        swift_unknownObjectRelease();
        NSString v14 = _swiftEmptyArrayStorage;
      }
      uint64_t v15 = v14[2];
      swift_release();
      if (__OFSUB__(v13 >> 1, v11))
      {
        __break(1u);
      }
      else if (v15 == (v13 >> 1) - v11)
      {
        uint64_t v6 = (void *)swift_dynamicCastClass();
        if (!v6)
        {
          swift_unknownObjectRelease();
          uint64_t v6 = _swiftEmptyArrayStorage;
        }
        goto LABEL_10;
      }
      swift_unknownObjectRelease();
    }
    uint64_t v6 = sub_1001A9C8C(v7, v9, v11, v13);
LABEL_10:
    swift_unknownObjectRelease();
  }
  return v6;
}

void *sub_1003E8C24(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = (char *)sub_10002F214(&qword_10069D138);
  sub_10022F274((void (*)(char *, char *))sub_1003E8E4C, 0, a5, v11, (uint64_t)&type metadata for Never, a7, (uint64_t)&protocol witness table for Never, v12);
  sub_10002F214(&qword_1006A6740);
  sub_10001DFB0(&qword_1006A6748, &qword_1006A6740);
  sub_10001DFB0((unint64_t *)&unk_1006A6750, &qword_10069D138);
  unint64_t v13 = (void *)Sequence.sorted<A, B>(using:)();
  swift_bridgeObjectRelease();
  if (a3) {
    return v13;
  }
  uint64_t v14 = sub_10041AB58(a2, (unint64_t)v13);
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  unint64_t v20 = v19;
  swift_bridgeObjectRelease();
  if ((v20 & 1) == 0)
  {
LABEL_3:
    unint64_t v13 = sub_1001A9C8C(v14, v16, v18, v20);
LABEL_10:
    swift_unknownObjectRelease();
    return v13;
  }
  type metadata accessor for __ContiguousArrayStorageBase();
  swift_unknownObjectRetain_n();
  uint64_t v21 = (void *)swift_dynamicCastClass();
  if (!v21)
  {
    swift_unknownObjectRelease();
    uint64_t v21 = _swiftEmptyArrayStorage;
  }
  uint64_t v22 = v21[2];
  swift_release();
  if (__OFSUB__(v20 >> 1, v18))
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v22 != (v20 >> 1) - v18)
  {
LABEL_13:
    swift_unknownObjectRelease();
    goto LABEL_3;
  }
  unint64_t v13 = (void *)swift_dynamicCastClass();
  swift_unknownObjectRelease();
  if (!v13)
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_10;
  }
  return v13;
}

uint64_t sub_1003E8E4C()
{
  uint64_t v0 = type metadata accessor for String.StandardComparator();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  char v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v8 - v5;
  swift_getKeyPath();
  static String.StandardComparator.localizedStandard.getter();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  SortDescriptor.init<A>(_:comparator:order:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v6, v0);
}

uint64_t VisibleTablesQuery.entities(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 24) = a1;
  *(void *)(v3 + 32) = a3;
  return _swift_task_switch(sub_1003E8FB4, 0, 0);
}

uint64_t sub_1003E8FB4()
{
  AppDependency.wrappedValue.getter();
  uint64_t v1 = v0[2];
  v0[5] = v1;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10069C4F8 + dword_10069C4F8);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[6] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100163BE4;
  uint64_t v3 = v0[3];
  return v5(v3, v1);
}

uint64_t VisibleTablesQuery.suggestedEntities()(uint64_t a1, uint64_t a2)
{
  v2[126] = a2;
  v2[125] = a1;
  uint64_t v3 = type metadata accessor for Logger();
  v2[127] = v3;
  v2[128] = *(void *)(v3 - 8);
  v2[129] = swift_task_alloc();
  v2[130] = swift_task_alloc();
  v2[131] = swift_task_alloc();
  v2[132] = swift_task_alloc();
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_1006A63F0);
  v2[133] = v4;
  v2[134] = *(void *)(v4 - 8);
  v2[135] = swift_task_alloc();
  return _swift_task_switch(sub_1003E91C0, 0, 0);
}

uint64_t sub_1003E91C0()
{
  AppDependency.wrappedValue.getter();
  uint64_t v1 = (void *)v0[122];
  id v2 = [v1 modernManagedObjectContext];
  v0[136] = v2;

  sub_100031418(0, &qword_10069BDF0);
  uint64_t v3 = (void *)static NSObject<>.ic_fetchRequest()();
  v0[137] = v3;
  sub_10002F214(&qword_10069BA00);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100527150;
  *(void *)(v4 + 32) = [(id)swift_getObjCClassFromMetadata() predicateForVisibleAttachmentsInContext:v2];
  sub_100031418(0, &qword_1006A1560);
  sub_10002F214((uint64_t *)&unk_1006A1950);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100524D10;
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;
  *(void *)(v5 + 56) = &type metadata for String;
  *(void *)(v5 + 64) = sub_1001BBFD8();
  *(void *)(v5 + 32) = v6;
  *(void *)(v5 + 40) = v8;
  *(void *)(v4 + 40) = NSPredicate.init(format:_:)();
  if (qword_10069AE08 != -1) {
    swift_once();
  }
  uint64_t v9 = v0[135];
  uint64_t v10 = v0[134];
  uint64_t v11 = v0[133];
  uint64_t v12 = sub_10003293C(v11, (uint64_t)static ICAttachment.hasValidEntityIdentifier);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v12, v11);
  uint64_t v13 = NSPredicate.init<A>(_:)();
  if (v13)
  {
    *(void *)(v4 + 48) = v13;
    uint64_t v30 = v4;
    specialized Array._endMutation()();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v18 = [self andPredicateWithSubpredicates:isa, v30];

    [v3 setPredicate:v18];
    [v3 setFetchLimit:25];
    swift_retain();
    swift_retain();
    AppDependency.wrappedValue.getter();
    Logger.init(subsystem:category:)();
    swift_release();
    swift_release();
    unint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "VisibleTablesQuery: suggested entities", v21, 2u);
      swift_slowDealloc();
    }
    uint64_t v22 = v0[132];
    uint64_t v23 = v0[128];
    uint64_t v24 = v0[127];

    uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v0[138] = v25;
    v0[139] = (v23 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v25(v22, v24);
    uint64_t v26 = swift_allocObject();
    v0[140] = v26;
    *(void *)(v26 + 16) = v2;
    *(void *)(v26 + 24) = v3;
    id v27 = v2;
    id v28 = v3;
    swift_retain();
    sub_10001DFF4(&qword_1006A00B0);
    swift_asyncLet_begin();
    uint64_t v15 = sub_1003E9604;
    uint64_t v13 = (uint64_t)(v0 + 2);
    uint64_t v14 = v0 + 121;
    uint64_t v16 = v0 + 82;
  }
  else
  {
    __break(1u);
  }
  return _swift_asyncLet_get_throwing(v13, v14, v15, v16);
}

uint64_t sub_1003E9604()
{
  *(void *)(v1 + 1128) = v0;
  if (v0) {
    return _swift_asyncLet_finish(v1 + 16, v1 + 968, sub_1003E9FE4, v1 + 928);
  }
  else {
    return _swift_task_switch(sub_1003E9648, 0, 0);
  }
}

uint64_t sub_1003E9648()
{
  uint64_t v23 = v0;
  uint64_t v1 = sub_1003E89E4((uint64_t)&off_10062CCD8, 25, 0, *(void *)(v0 + 968));
  uint64_t v2 = sub_1003E7828((unint64_t)v1);
  *(void *)(v0 + 1136) = v2;
  swift_bridgeObjectRelease();
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 134217984;
    *(void *)(v0 + 992) = *(void *)(v2 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "VisibleTablesQuery: found %ld suggested attachment(s)", v5, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  (*(void (**)(void, void))(v0 + 1104))(*(void *)(v0 + 1048), *(void *)(v0 + 1016));
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain_n();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v0 + 1104);
  uint64_t v10 = *(void *)(v0 + 1040);
  uint64_t v11 = *(void *)(v0 + 1016);
  if (v8)
  {
    uint64_t v20 = *(void *)(v0 + 1040);
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    type metadata accessor for TableID();
    swift_bridgeObjectRetain();
    uint64_t v13 = Array.description.getter();
    unint64_t v19 = v9;
    unint64_t v15 = v14;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 984) = sub_10045DA1C(v13, v15, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "VisibleTablesQuery: matching attachment IDs: %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v19(v20, v11);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    v9(v10, v11);
  }
  AppDependency.wrappedValue.getter();
  uint64_t v16 = *(void *)(v0 + 920);
  *(void *)(v0 + 1144) = v16;
  uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10069C4F8 + dword_10069C4F8);
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 1152) = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_1003E9A60;
  return v21(v2, v16);
}

uint64_t sub_1003E9A60(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 1160) = v1;
  swift_task_dealloc();
  if (v1)
  {

    return _swift_task_switch(sub_1003E9CE0, 0, 0);
  }
  else
  {

    swift_bridgeObjectRelease();
    *(void *)(v4 + 1168) = a1;
    return _swift_asyncLet_finish(v4 + 16, v4 + 968, sub_1003E9BF0, v4 + 880);
  }
}

uint64_t sub_1003E9BF0()
{
  return _swift_task_switch(sub_1003E9C0C, 0, 0);
}

uint64_t sub_1003E9C0C()
{
  uint64_t v1 = *(void **)(v0 + 1096);

  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 1168);
  return v2(v3);
}

uint64_t sub_1003E9CE0()
{
  swift_bridgeObjectRelease();
  return _swift_asyncLet_finish(v0 + 16, v0 + 968, sub_1003E9D60, v0 + 832);
}

uint64_t sub_1003E9D60()
{
  return _swift_task_switch(sub_1003E9D7C, 0, 0);
}

uint64_t sub_1003E9D7C()
{
  swift_release();
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    uint64_t v5 = _convertErrorToNSError(_:)();
    v0[109] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "VisibleTablesQuery: error fetching notes: %@", v3, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
  }
  uint64_t v6 = v1;
  os_log_type_t v7 = (void (*)(uint64_t, uint64_t))v0[138];
  BOOL v8 = (void *)v0[137];
  uint64_t v9 = (void *)v0[136];
  uint64_t v10 = v0[129];
  uint64_t v11 = v0[127];

  v7(v10, v11);
  swift_willThrow();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1003E9FE4()
{
  return _swift_task_switch(sub_1003EA000, 0, 0);
}

uint64_t sub_1003EA000()
{
  swift_release();
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    uint64_t v5 = _convertErrorToNSError(_:)();
    v0[109] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "VisibleTablesQuery: error fetching notes: %@", v3, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
  }
  uint64_t v6 = v1;
  os_log_type_t v7 = (void (*)(uint64_t, uint64_t))v0[138];
  BOOL v8 = (void *)v0[137];
  uint64_t v9 = (void *)v0[136];
  uint64_t v10 = v0[129];
  uint64_t v11 = v0[127];

  v7(v10, v11);
  swift_willThrow();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1003EA268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return _swift_task_switch(sub_1003EA28C, 0, 0);
}

uint64_t sub_1003EA28C()
{
  os_log_type_t v2 = (void *)v0[3];
  uint64_t v1 = (void *)v0[4];
  uint64_t v3 = swift_allocObject();
  v0[5] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  id v4 = v2;
  id v5 = v1;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[6] = v6;
  uint64_t v7 = sub_10002F214(&qword_1006A00B0);
  void *v6 = v0;
  v6[1] = sub_1002397FC;
  uint64_t v8 = v0[2];
  return NSManagedObjectContext.perform<A>(_:)(v8, sub_1003F4030, v3, v7);
}

unint64_t sub_1003EA384@<X0>(void *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for TableID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100031418(0, &qword_10069BDF0);
  unint64_t result = NSManagedObjectContext.fetch<A>(_:)();
  if (!v1)
  {
    unint64_t v9 = result;
    unint64_t v36 = (unint64_t)_swiftEmptyArrayStorage;
    if (result >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v10 = result;
      if (result) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v10 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t result = swift_bridgeObjectRetain();
      if (v10)
      {
LABEL_4:
        if (v10 < 1)
        {
          __break(1u);
          return result;
        }
        v28[1] = 0;
        uint64_t v29 = a1;
        uint64_t v11 = 0;
        unint64_t v12 = v9 & 0xC000000000000001;
        uint64_t v30 = (void (**)(char *, char *, uint64_t))(v4 + 32);
        unint64_t v31 = v9 & 0xC000000000000001;
        uint64_t v13 = &selRef__applicationKeyWindow;
        uint64_t v33 = v7;
        unint64_t v34 = v9;
        uint64_t v32 = v10;
        do
        {
          if (v12) {
            id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v14 = *(id *)(v9 + 8 * v11 + 32);
          }
          unint64_t v15 = v14;
          if ([v14 v13[50]])
          {
            uint64_t v16 = (objc_class *)type metadata accessor for TableSearchResult(0);
            uint64_t v17 = (char *)objc_allocWithZone(v16);
            ICTableObject<>.tableEntityIdentifier.getter();
            id v18 = v6;
            unint64_t v19 = v6;
            uint64_t v20 = v3;
            (*v30)(&v17[OBJC_IVAR____TtC11MobileNotesP33_3A26B74EEED685164DF9267FE58E345F17TableSearchResult_id], v19, v3);
            id v21 = [v15 title];
            if (v21)
            {
              uint64_t v22 = v21;
              uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v25 = v24;
            }
            else
            {
              uint64_t v23 = 0;
              unint64_t v25 = 0xE000000000000000;
            }
            uint64_t v26 = (uint64_t *)&v17[OBJC_IVAR____TtC11MobileNotesP33_3A26B74EEED685164DF9267FE58E345F17TableSearchResult_title];
            *uint64_t v26 = v23;
            v26[1] = v25;

            v35.receiver = v17;
            v35.super_class = v16;
            [super init];

            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            unint64_t v12 = v31;
            if (*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            uint64_t v3 = v20;
            uint64_t v6 = v18;
            unint64_t v9 = v34;
            uint64_t v10 = v32;
            uint64_t v13 = &selRef__applicationKeyWindow;
          }
          else
          {
          }
          ++v11;
        }
        while (v10 != v11);
        swift_bridgeObjectRelease();
        id v27 = (void *)v36;
        a1 = v29;
        goto LABEL_21;
      }
    }
    swift_bridgeObjectRelease();
    id v27 = _swiftEmptyArrayStorage;
LABEL_21:
    unint64_t result = swift_bridgeObjectRelease();
    *a1 = v27;
  }
  return result;
}

uint64_t sub_1003EA69C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return _swift_task_switch(sub_1003E8FB4, 0, 0);
}

uint64_t sub_1003EA6C0(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10016F18C;
  return VisibleTablesQuery.suggestedEntities()(v3, v4);
}

uint64_t sub_1003EA75C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10019552C();
  *uint64_t v5 = v2;
  v5[1] = sub_100161724;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t VisibleTablesQuery.entities(matching:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  _OWORD v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(sub_1003EA834, 0, 0);
}

uint64_t sub_1003EA834()
{
  uint64_t v2 = v0[2];
  uint64_t v1 = v0[3];
  sub_10002F214(&qword_1006A6418);
  uint64_t v3 = *(void *)(type metadata accessor for VisibleTablesQuery.Comparator(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  v0[6] = v5;
  *(_OWORD *)(v5 + 16) = xmmword_100524D10;
  unint64_t v6 = (uint64_t *)(v5 + v4);
  uint64_t *v6 = swift_getKeyPath();
  v6[1] = v2;
  _OWORD v6[2] = v1;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[7] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1002946A4;
  uint64_t v8 = v0[4];
  uint64_t v9 = v0[5];
  return VisibleTablesQuery.entities(matching:mode:sortedBy:limit:)(v5, 0, (uint64_t)_swiftEmptyArrayStorage, 0, 1, v8, v9);
}

uint64_t static VisibleTablesQuery.ComparatorKeyPath.title.getter()
{
  return swift_getKeyPath();
}

uint64_t VisibleTablesQuery.entities(matching:mode:sortedBy:limit:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 1216) = a7;
  *(void *)(v7 + 1208) = a6;
  *(unsigned char *)(v7 + 1545) = a5;
  *(void *)(v7 + 1200) = a4;
  *(void *)(v7 + 1192) = a3;
  *(unsigned char *)(v7 + 1544) = a2;
  *(void *)(v7 + 1184) = a1;
  uint64_t v8 = type metadata accessor for Logger();
  *(void *)(v7 + 1224) = v8;
  *(void *)(v7 + 1232) = *(void *)(v8 - 8);
  *(void *)(v7 + 1240) = swift_task_alloc();
  *(void *)(v7 + 1248) = swift_task_alloc();
  *(void *)(v7 + 1256) = swift_task_alloc();
  *(void *)(v7 + 1264) = swift_task_alloc();
  uint64_t v9 = sub_10002F214((uint64_t *)&unk_1006A63F0);
  *(void *)(v7 + 1272) = v9;
  *(void *)(v7 + 1280) = *(void *)(v9 - 8);
  *(void *)(v7 + 1288) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for TableID();
  *(void *)(v7 + 1296) = v10;
  *(void *)(v7 + 1304) = *(void *)(v10 - 8);
  *(void *)(v7 + 1312) = swift_task_alloc();
  sub_10002F214(&qword_10069D370);
  *(void *)(v7 + 1320) = swift_task_alloc();
  *(void *)(v7 + 1328) = swift_task_alloc();
  return _swift_task_switch(sub_1003EABBC, 0, 0);
}

uint64_t sub_1003EABBC()
{
  uint64_t v89 = v0;
  uint64_t v1 = *(void *)(v0 + 1328);
  uint64_t v2 = *(void *)(v0 + 1320);
  uint64_t v83 = *(void *)(v0 + 1192);
  int v3 = *(unsigned char *)(v0 + 1544) & 1;
  AppDependency.wrappedValue.getter();
  unint64_t v4 = *(void **)(v0 + 1096);
  *(void *)(v0 + 1336) = [v4 modernManagedObjectContext];

  uint64_t v5 = enum case for ManagedEntityContextType.modern(_:);
  unsigned int v81 = enum case for ManagedEntityContextType.modern(_:);
  uint64_t v6 = type metadata accessor for ManagedEntityContextType();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 104);
  v8(v1, v5, v6);
  uint64_t v9 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);
  v9(v1, 0, 1, v6);
  sub_10002F034(v1, v2, &qword_10069D370);
  uint64_t v10 = swift_bridgeObjectRetain();
  *(void *)(v0 + 1344) = sub_1003F03C4(v10, v3, v2, 0);
  sub_10002B754(v1, &qword_10069D370);
  v8(v1, v81, v6);
  uint64_t v11 = v0;
  v9(v1, 0, 1, v6);
  sub_10002F034(v1, v2, &qword_10069D370);
  uint64_t v12 = swift_bridgeObjectRetain();
  *(void *)(v0 + 1352) = sub_1003F03C4(v12, v3, v2, 1);
  sub_10002B754(v1, &qword_10069D370);
  if (*(void *)(v83 + 16))
  {
    uint64_t v13 = *(void **)(v0 + 1192);
    uint64_t v14 = sub_10002F214(&qword_1006A6490);
    uint64_t v15 = sub_10001DFB0(&qword_1006A6498, &qword_1006A6490);
    uint64_t v16 = (_UNKNOWN **)swift_allocObject();
    v16[2] = v13;
    v16[3] = sub_100194AC4;
    v16[4] = 0;
    v16[5] = sub_10029C698;
    v16[6] = 0;
    v16[7] = sub_10029C6A8;
    v16[8] = 0;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v14 = sub_10002F214(&qword_1006A64B8);
    uint64_t v15 = sub_10001DFB0(&qword_1006A64C0, &qword_1006A64B8);
    uint64_t v16 = &off_10062CD00;
  }
  uint64_t v17 = *(void *)(v0 + 1184);
  *(void *)(v0 + 720) = v14;
  *(void *)(v0 + 728) = v15;
  *(void *)(v0 + 696) = v16;
  sub_10015E154((void *)(v0 + 696), v14);
  id v18 = (char *)sub_100031418(0, &qword_10069FCC0);
  *(void *)(v0 + 1360) = v18;
  *(void *)(v0 + 1368) = sub_10022F274((void (*)(char *, char *))sub_1003EEB0C, 0, v14, v18, (uint64_t)&type metadata for Never, v15, (uint64_t)&protocol witness table for Never, v19);
  uint64_t v20 = sub_1003E7FE8(v17);
  int64_t v21 = v20[2];
  if (v21)
  {
    uint64_t v85 = v11;
    sub_100169AAC(0, v21, 0);
    uint64_t v22 = (void **)(v20 + 5);
    do
    {
      uint64_t v23 = (uint64_t)*(v22 - 1);
      unint64_t v24 = *v22;
      uint64_t v87 = 40;
      unint64_t v88 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v25._countAndFlagsBits = v23;
      v25._object = v24;
      String.append(_:)(v25);
      v26._countAndFlagsBits = 41;
      v26._object = (void *)0xE100000000000000;
      String.append(_:)(v26);
      swift_bridgeObjectRelease();
      unint64_t v28 = _swiftEmptyArrayStorage[2];
      unint64_t v27 = _swiftEmptyArrayStorage[3];
      if (v28 >= v27 >> 1) {
        sub_100169AAC(v27 > 1, v28 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v28 + 1;
      uint64_t v29 = &_swiftEmptyArrayStorage[2 * v28];
      v29[4] = 40;
      v29[5] = 0xE100000000000000;
      v22 += 2;
      --v21;
    }
    while (v21);
    char v30 = *(unsigned char *)(v85 + 1544);
    swift_bridgeObjectRelease();
    *(void *)(v85 + 1160) = _swiftEmptyArrayStorage;
    uint64_t v87 = 32;
    unint64_t v88 = 0xE100000000000000;
    if (v30) {
      uint64_t v31 = 31868;
    }
    else {
      uint64_t v31 = 9766;
    }
    unint64_t v32 = 0xE200000000000000;
    String.append(_:)(*(Swift::String *)&v31);
    swift_bridgeObjectRelease();
    v33._countAndFlagsBits = 32;
    v33._object = (void *)0xE100000000000000;
    String.append(_:)(v33);
    sub_10002F214(&qword_10069FCC8);
    sub_10001DFB0((unint64_t *)&qword_10069FCD0, &qword_10069FCC8);
    uint64_t v34 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v36 = v35;
    swift_bridgeObjectRelease();
    swift_release();
    *(void *)(v85 + 1376) = v36;
    sub_100031418(0, (unint64_t *)&unk_1006A4F40);
    id v37 = (void *)swift_task_alloc();
    *(void *)(v85 + 1384) = v37;
    *id v37 = v85;
    v37[1] = sub_1003EB6A0;
    uint64_t v38 = _swiftEmptyArrayStorage;
    uint64_t v39 = v34;
    uint64_t v40 = v36;
    return static ICSearchQueryOperation.searchResults(queryString:rankingQueries:)(v39, v40, v38);
  }
  swift_bridgeObjectRelease();
  *(void *)(v11 + 1472) = 0;
  uint64_t v41 = *(void *)(v11 + 1184);
  unint64_t v42 = *(void *)(v41 + 16);
  if (v42)
  {
    unint64_t v43 = sub_1003E7FE8(v41)[2];
    swift_bridgeObjectRelease();
    BOOL v44 = v43 < v42;
  }
  else
  {
    BOOL v44 = 1;
  }
  *(unsigned char *)(v11 + 1546) = v44;
  uint64_t v45 = *(void *)(v11 + 1336);
  sub_100031418(0, &qword_10069BDF0);
  id v46 = (void *)static NSObject<>.ic_fetchRequest()();
  *(void *)(v11 + 1480) = v46;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v46 setSortDescriptors:isa];

  sub_10002F214(&qword_10069BA00);
  uint64_t v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_100524CD0;
  *(void *)(v48 + 32) = [(id)swift_getObjCClassFromMetadata() predicateForVisibleAttachmentsInContext:v45];
  sub_100031418(0, &qword_1006A1560);
  sub_10002F214((uint64_t *)&unk_1006A1950);
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_100524D10;
  uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v52 = v51;
  *(void *)(v49 + 56) = &type metadata for String;
  *(void *)(v49 + 64) = sub_1001BBFD8();
  *(void *)(v49 + 32) = v50;
  *(void *)(v49 + 40) = v52;
  *(void *)(v48 + 40) = NSPredicate.init(format:_:)();
  if (qword_10069AE08 != -1) {
    swift_once();
  }
  uint64_t v53 = *(void *)(v11 + 1288);
  uint64_t v54 = *(void *)(v11 + 1280);
  uint64_t v55 = *(void *)(v11 + 1272);
  uint64_t v56 = sub_10003293C(v55, (uint64_t)static ICAttachment.hasValidEntityIdentifier);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v53, v56, v55);
  uint64_t v57 = NSPredicate.init<A>(_:)();
  if (!v57)
  {
    uint64_t v39 = swift_bridgeObjectRelease();
    __break(1u);
    return static ICSearchQueryOperation.searchResults(queryString:rankingQueries:)(v39, v40, v38);
  }
  id v58 = *(void **)(v11 + 1344);
  char v59 = *(unsigned char *)(v11 + 1545);
  *(void *)(v48 + 48) = v57;
  *(void *)(v48 + 56) = v58;
  uint64_t v87 = v48;
  specialized Array._endMutation()();
  id v60 = v58;
  Class v61 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v62 = [self andPredicateWithSubpredicates:v61];

  [v46 setPredicate:v62];
  if ((v59 & 1) == 0) {
    [v46 setFetchLimit:*(void *)(v11 + 1200)];
  }
  unint64_t v86 = v46;
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain_n();
  uint64_t v63 = Logger.logObject.getter();
  os_log_type_t v64 = static os_log_type_t.info.getter();
  BOOL v65 = os_log_type_enabled(v63, v64);
  uint64_t v66 = *(void *)(v11 + 1264);
  uint64_t v67 = *(void *)(v11 + 1232);
  uint64_t v68 = *(void *)(v11 + 1224);
  if (v65)
  {
    uint64_t v84 = *(void *)(v11 + 1264);
    uint64_t v82 = *(void *)(v11 + 1224);
    uint64_t v69 = (uint8_t *)swift_slowAlloc();
    uint64_t v87 = swift_slowAlloc();
    *(_DWORD *)uint64_t v69 = 136315138;
    type metadata accessor for VisibleTablesQuery.Comparator(0);
    swift_bridgeObjectRetain();
    uint64_t v70 = Array.description.getter();
    unint64_t v72 = v71;
    swift_bridgeObjectRelease();
    *(void *)(v11 + 1144) = sub_10045DA1C(v70, v72, &v87);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v63, v64, "VisibleTablesQuery: performing with filters %s", v69, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v73 = *(void (**)(uint64_t, uint64_t))(v67 + 8);
    v73(v84, v82);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    uint64_t v73 = *(void (**)(uint64_t, uint64_t))(v67 + 8);
    v73(v66, v68);
  }
  *(void *)(v11 + 1488) = v73;
  uint64_t v74 = *(void **)(v11 + 1344);
  id v75 = *(void **)(v11 + 1336);
  uint64_t v76 = (void *)swift_allocObject();
  *(void *)(v11 + 1496) = v76;
  v76[2] = v75;
  v76[3] = v86;
  v76[4] = v74;
  id v77 = v75;
  id v78 = v74;
  id v79 = v86;
  swift_retain();
  sub_10001DFF4(&qword_1006A00B0);
  swift_asyncLet_begin();
  return _swift_asyncLet_get_throwing(v11 + 16, v11 + 1120, sub_1003ED18C, v11 + 992);
}

uint64_t sub_1003EB6A0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 1392) = a1;
  *(void *)(v3 + 1400) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    unint64_t v4 = sub_1003EDCFC;
  }
  else
  {
    unint64_t v4 = sub_1003EB7F0;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1003EB7F0()
{
  uint64_t v52 = v0;
  unint64_t v1 = *(void *)(v0 + 1392);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    *(void *)(v0 + 1408) = type metadata accessor for MainActor();
    *(void *)(v0 + 1416) = static MainActor.shared.getter();
    uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1003EBE4C, v3, v2);
  }
  swift_bridgeObjectRelease();
  *(void *)(v0 + 1472) = 0;
  uint64_t v5 = *(void *)(v0 + 1184);
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    unint64_t v7 = sub_1003E7FE8(v5)[2];
    swift_bridgeObjectRelease();
    BOOL v8 = v7 < v6;
  }
  else
  {
    BOOL v8 = 1;
  }
  *(unsigned char *)(v0 + 1546) = v8;
  uint64_t v9 = *(void *)(v0 + 1336);
  sub_100031418(0, &qword_10069BDF0);
  uint64_t v10 = (void *)static NSObject<>.ic_fetchRequest()();
  *(void *)(v0 + 1480) = v10;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v10 setSortDescriptors:isa];

  sub_10002F214(&qword_10069BA00);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_100524CD0;
  *(void *)(v12 + 32) = [(id)swift_getObjCClassFromMetadata() predicateForVisibleAttachmentsInContext:v9];
  sub_100031418(0, &qword_1006A1560);
  sub_10002F214((uint64_t *)&unk_1006A1950);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_100524D10;
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;
  *(void *)(v13 + 56) = &type metadata for String;
  *(void *)(v13 + 64) = sub_1001BBFD8();
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 40) = v16;
  *(void *)(v12 + 40) = NSPredicate.init(format:_:)();
  if (qword_10069AE08 != -1) {
    swift_once();
  }
  uint64_t v17 = *(void *)(v0 + 1288);
  uint64_t v18 = *(void *)(v0 + 1280);
  uint64_t v19 = *(void *)(v0 + 1272);
  uint64_t v20 = sub_10003293C(v19, (uint64_t)static ICAttachment.hasValidEntityIdentifier);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v17, v20, v19);
  uint64_t v21 = NSPredicate.init<A>(_:)();
  if (v21)
  {
    uint64_t v22 = *(void **)(v0 + 1344);
    char v23 = *(unsigned char *)(v0 + 1545);
    *(void *)(v12 + 48) = v21;
    *(void *)(v12 + 56) = v22;
    uint64_t v51 = v12;
    specialized Array._endMutation()();
    id v24 = v22;
    Class v25 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v26 = [self andPredicateWithSubpredicates:v25];

    [v10 setPredicate:v26];
    if ((v23 & 1) == 0) {
      [v10 setFetchLimit:*(void *)(v0 + 1200)];
    }
    swift_retain();
    swift_retain();
    AppDependency.wrappedValue.getter();
    Logger.init(subsystem:category:)();
    swift_release();
    swift_release();
    swift_bridgeObjectRetain_n();
    unint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.info.getter();
    BOOL v29 = os_log_type_enabled(v27, v28);
    uint64_t v30 = *(void *)(v0 + 1264);
    uint64_t v31 = *(void *)(v0 + 1232);
    uint64_t v32 = *(void *)(v0 + 1224);
    if (v29)
    {
      uint64_t v50 = *(void *)(v0 + 1264);
      Swift::String v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      *(_DWORD *)Swift::String v33 = 136315138;
      type metadata accessor for VisibleTablesQuery.Comparator(0);
      uint64_t v49 = v32;
      swift_bridgeObjectRetain();
      uint64_t v34 = Array.description.getter();
      unint64_t v36 = v35;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 1144) = sub_10045DA1C(v34, v36, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "VisibleTablesQuery: performing with filters %s", v33, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      id v37 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
      v37(v50, v49);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      id v37 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
      v37(v30, v32);
    }
    *(void *)(v0 + 1488) = v37;
    uint64_t v38 = *(void **)(v0 + 1344);
    uint64_t v39 = *(void **)(v0 + 1336);
    uint64_t v40 = (void *)swift_allocObject();
    *(void *)(v0 + 1496) = v40;
    v40[2] = v39;
    v40[3] = v10;
    v40[4] = v38;
    id v41 = v39;
    id v42 = v38;
    id v43 = v10;
    swift_retain();
    sub_10001DFF4(&qword_1006A00B0);
    swift_asyncLet_begin();
    BOOL v44 = sub_1003ED18C;
    uint64_t v45 = v0 + 16;
    uint64_t v46 = v0 + 1120;
    uint64_t v47 = v0 + 992;
  }
  else
  {
    uint64_t v45 = swift_bridgeObjectRelease();
    __break(1u);
  }
  return _swift_asyncLet_get_throwing(v45, v46, v44, v47);
}

uint64_t sub_1003EBE4C()
{
  unint64_t v1 = (void *)v0[167];
  swift_release();
  id v2 = [self sharedIndexer];
  sub_100031418(0, (unint64_t *)&unk_10069FCE0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  sub_10002F214(&qword_10069BA00);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100529F20;
  *(void *)(v4 + 32) = v1;
  specialized Array._endMutation()();
  sub_100031418(0, (unint64_t *)&unk_10069FCF0);
  id v5 = v1;
  Class v6 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v7 = [v2 objectsForSearchableItems:isa inContexts:v6];

  sub_10002F214((uint64_t *)&unk_10069FD00);
  unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v9 = v10;
    if (!v10) {
      goto LABEL_24;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v10 = swift_bridgeObjectRetain();
    if (!v9) {
      goto LABEL_24;
    }
  }
  if (v9 < 1)
  {
    __break(1u);
    return _swift_task_switch(v10, v11, v12);
  }
  for (uint64_t i = 0; i != v9; ++i)
  {
    if ((v8 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_unknownObjectRetain();
    }
    v0[144] = &OBJC_PROTOCOL___ICTableObject;
    uint64_t v14 = swift_dynamicCastObjCProtocolConditional();
    if (!v14) {
      goto LABEL_5;
    }
    uint64_t v15 = (void *)v14;
    swift_getObjectType();
    sub_100031418(0, (unint64_t *)&qword_1006A2780);
    if (!swift_dynamicCastMetatype()) {
      uint64_t v15 = 0;
    }
    if (v15)
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      if ((sub_1003E8488() & 1) != 0
        && (self, (uint64_t v16 = (void *)swift_dynamicCastObjCClass()) != 0)
        && ([v16 isVisibleTable] & 1) != 0
        && ![v15 isDeletedOrInTrash])
      {
        id v17 = objc_allocWithZone((Class)type metadata accessor for TableSearchResult(0));
        sub_1003F1D74(v15, v17);
        swift_unknownObjectRelease_n();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
        swift_unknownObjectRelease_n();
      }
    }
    else
    {
LABEL_5:
      swift_unknownObjectRelease();
    }
  }
LABEL_24:
  swift_bridgeObjectRelease();
  v0[178] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = (uint64_t)sub_1003EC21C;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  return _swift_task_switch(v10, v11, v12);
}

uint64_t sub_1003EC21C()
{
  uint64_t v51 = v0;
  if (static EntityQueryComparatorMode.== infix(_:_:)())
  {
    swift_bridgeObjectRelease();
    *(void *)(v0 + 1432) = static MainActor.shared.getter();
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1003EC848, v2, v1);
  }
  else
  {
    *(void *)(v0 + 1472) = *(void *)(v0 + 1424);
    uint64_t v3 = *(void *)(v0 + 1184);
    unint64_t v4 = *(void *)(v3 + 16);
    if (v4)
    {
      unint64_t v5 = sub_1003E7FE8(v3)[2];
      swift_bridgeObjectRelease();
      BOOL v6 = v5 < v4;
    }
    else
    {
      BOOL v6 = 1;
    }
    *(unsigned char *)(v0 + 1546) = v6;
    uint64_t v7 = *(void *)(v0 + 1336);
    sub_100031418(0, &qword_10069BDF0);
    unint64_t v8 = (void *)static NSObject<>.ic_fetchRequest()();
    *(void *)(v0 + 1480) = v8;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v8 setSortDescriptors:isa];

    sub_10002F214(&qword_10069BA00);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_100524CD0;
    *(void *)(v10 + 32) = [(id)swift_getObjCClassFromMetadata() predicateForVisibleAttachmentsInContext:v7];
    sub_100031418(0, &qword_1006A1560);
    sub_10002F214((uint64_t *)&unk_1006A1950);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100524D10;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;
    *(void *)(v11 + 56) = &type metadata for String;
    *(void *)(v11 + 64) = sub_1001BBFD8();
    *(void *)(v11 + 32) = v12;
    *(void *)(v11 + 40) = v14;
    *(void *)(v10 + 40) = NSPredicate.init(format:_:)();
    if (qword_10069AE08 != -1) {
      swift_once();
    }
    uint64_t v15 = *(void *)(v0 + 1288);
    uint64_t v16 = *(void *)(v0 + 1280);
    uint64_t v17 = *(void *)(v0 + 1272);
    uint64_t v18 = sub_10003293C(v17, (uint64_t)static ICAttachment.hasValidEntityIdentifier);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v15, v18, v17);
    uint64_t v19 = NSPredicate.init<A>(_:)();
    if (v19)
    {
      uint64_t v20 = *(void **)(v0 + 1344);
      char v21 = *(unsigned char *)(v0 + 1545);
      *(void *)(v10 + 48) = v19;
      *(void *)(v10 + 56) = v20;
      uint64_t v50 = v10;
      specialized Array._endMutation()();
      id v22 = v20;
      Class v23 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v24 = [self andPredicateWithSubpredicates:v23];

      [v8 setPredicate:v24];
      if ((v21 & 1) == 0) {
        [v8 setFetchLimit:*(void *)(v0 + 1200)];
      }
      uint64_t v49 = v8;
      swift_retain();
      swift_retain();
      AppDependency.wrappedValue.getter();
      Logger.init(subsystem:category:)();
      swift_release();
      swift_release();
      swift_bridgeObjectRetain_n();
      Class v25 = Logger.logObject.getter();
      os_log_type_t v26 = static os_log_type_t.info.getter();
      BOOL v27 = os_log_type_enabled(v25, v26);
      uint64_t v28 = *(void *)(v0 + 1264);
      uint64_t v29 = *(void *)(v0 + 1232);
      uint64_t v30 = *(void *)(v0 + 1224);
      if (v27)
      {
        uint64_t v48 = *(void *)(v0 + 1264);
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        uint64_t v50 = swift_slowAlloc();
        *(_DWORD *)uint64_t v31 = 136315138;
        type metadata accessor for VisibleTablesQuery.Comparator(0);
        uint64_t v47 = v30;
        swift_bridgeObjectRetain();
        uint64_t v32 = Array.description.getter();
        unint64_t v34 = v33;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 1144) = sub_10045DA1C(v32, v34, &v50);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "VisibleTablesQuery: performing with filters %s", v31, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        unint64_t v35 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
        v35(v48, v47);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        unint64_t v35 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
        v35(v28, v30);
      }
      *(void *)(v0 + 1488) = v35;
      unint64_t v36 = *(void **)(v0 + 1344);
      id v37 = *(void **)(v0 + 1336);
      uint64_t v38 = (void *)swift_allocObject();
      *(void *)(v0 + 1496) = v38;
      v38[2] = v37;
      v38[3] = v49;
      void v38[4] = v36;
      id v39 = v37;
      id v40 = v36;
      id v41 = v49;
      swift_retain();
      sub_10001DFF4(&qword_1006A00B0);
      swift_asyncLet_begin();
      id v42 = sub_1003ED18C;
      uint64_t v43 = v0 + 16;
      uint64_t v44 = v0 + 1120;
      uint64_t v45 = v0 + 992;
    }
    else
    {
      uint64_t v43 = swift_bridgeObjectRelease();
      __break(1u);
    }
    return _swift_asyncLet_get_throwing(v43, v44, v42, v45);
  }
}

uint64_t sub_1003EC848()
{
  unint64_t v1 = *(void *)(v0 + 1424);
  swift_release();
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v2 = v3;
    if (!v3) {
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v3 = swift_bridgeObjectRetain();
    if (!v2) {
      goto LABEL_17;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v6 = 0;
  uint64_t v7 = v0 + 840;
  unint64_t v8 = (void *)(v0 + 904);
  uint64_t v43 = *(void *)(v0 + 1424) + 32;
  unint64_t v44 = v1 & 0xC000000000000001;
  uint64_t v9 = &qword_10069B4D0;
  uint64_t v42 = v0;
  do
  {
    if (v44) {
      id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v10 = *(id *)(v43 + 8 * v6);
    }
    uint64_t v11 = v10;
    *(void *)(v0 + 864) = type metadata accessor for TableSearchResult(0);
    *(void *)(v0 + 840) = v11;
    sub_10002F034(v7, (uint64_t)v8, v9);
    uint64_t v12 = *(void *)(v0 + 928);
    if (v12)
    {
      uint64_t v13 = sub_10015E154(v8, *(void *)(v0 + 928));
      uint64_t v14 = v8;
      uint64_t v15 = v7;
      uint64_t v16 = v9;
      uint64_t v17 = *(void *)(v12 - 8);
      uint64_t v18 = swift_task_alloc();
      (*(void (**)(uint64_t, void *, uint64_t))(v17 + 16))(v18, v13, v12);
      id v19 = v11;
      uint64_t v20 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v12);
      uint64_t v9 = v16;
      uint64_t v7 = v15;
      unint64_t v8 = v14;
      uint64_t v0 = v42;
      swift_task_dealloc();
      sub_100018FE8((uint64_t)v8);
    }
    else
    {
      id v21 = v11;
      uint64_t v20 = 0;
    }
    unsigned int v22 = [*(id *)(v0 + 1352) evaluateWithObject:v20];
    swift_unknownObjectRelease();
    sub_10002B754(v7, v9);
    if (v22)
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    else
    {
    }
    ++v6;
  }
  while (v2 != v6);
LABEL_17:
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(v0 + 1200);
  char v24 = *(unsigned char *)(v0 + 1545) & 1;
  uint64_t v25 = *(void *)(v0 + 720);
  uint64_t v26 = *(void *)(v0 + 728);
  BOOL v27 = sub_10015E154((void *)(v0 + 696), v25);
  *(void *)(v0 + 1168) = _swiftEmptyArrayStorage;
  uint64_t v28 = sub_10002F214(&qword_1006A00B0);
  uint64_t v29 = sub_10001DFB0((unint64_t *)&unk_1006A00B8, &qword_1006A00B0);
  unint64_t v30 = (unint64_t)sub_1003E8C24((uint64_t)v27, v23, v24, v28, v25, v29, v26);
  swift_release();
  if (v30 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v31)
    {
LABEL_19:
      uint64_t v3 = sub_100169E0C(0, v31 & ~(v31 >> 63), 0);
      if ((v31 & 0x8000000000000000) == 0)
      {
        uint64_t v32 = 0;
        uint64_t v33 = *(void *)(v0 + 1304);
        unint64_t v45 = v30 & 0xC000000000000001;
        unint64_t v34 = (void *)v30;
        do
        {
          if (v45) {
            id v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v35 = *(id *)(v30 + 8 * v32 + 32);
          }
          unint64_t v36 = v35;
          (*(void (**)(void, uint64_t, void))(v33 + 16))(*(void *)(v0 + 1312), (uint64_t)v35 + OBJC_IVAR____TtC11MobileNotesP33_3A26B74EEED685164DF9267FE58E345F17TableSearchResult_id, *(void *)(v0 + 1296));

          unint64_t v38 = _swiftEmptyArrayStorage[2];
          unint64_t v37 = _swiftEmptyArrayStorage[3];
          if (v38 >= v37 >> 1) {
            sub_100169E0C(v37 > 1, v38 + 1, 1);
          }
          uint64_t v39 = *(void *)(v0 + 1312);
          uint64_t v40 = *(void *)(v0 + 1296);
          ++v32;
          _swiftEmptyArrayStorage[2] = v38 + 1;
          (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))((char *)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(void *)(v33 + 72) * v38, v39, v40);
          unint64_t v30 = (unint64_t)v34;
        }
        while (v31 != v32);
        goto LABEL_29;
      }
LABEL_33:
      __break(1u);
      return _swift_task_switch(v3, v4, v5);
    }
  }
  else
  {
    uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v31) {
      goto LABEL_19;
    }
  }
LABEL_29:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 1440) = _swiftEmptyArrayStorage;
  uint64_t v3 = (uint64_t)sub_1003ECD44;
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_1003ECD44()
{
  AppDependency.wrappedValue.getter();
  uint64_t v1 = v0[147];
  v0[181] = v1;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10069C4F8 + dword_10069C4F8);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[182] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1003ECE04;
  uint64_t v3 = v0[180];
  return v5(v3, v1);
}

uint64_t sub_1003ECE04(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[121] = v2;
  v4[122] = a1;
  v4[123] = v1;
  v4[183] = v1;
  swift_task_dealloc();

  if (v1)
  {
    uint64_t v5 = sub_1003ED06C;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_1003ECF54;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003ECF54()
{
  uint64_t v1 = *(void **)(v0 + 1352);
  uint64_t v2 = *(void **)(v0 + 1344);

  uint64_t v5 = *(void *)(v0 + 976);
  sub_100018FE8(v0 + 696);
  sub_10002E70C(0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v5);
}

uint64_t sub_1003ED06C()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + 1352);
  uint64_t v2 = *(void **)(v0 + 1344);

  sub_100018FE8(v0 + 696);
  sub_10002E70C(0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1003ED18C()
{
  *(void *)(v1 + 1504) = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    return _swift_asyncLet_finish(v1 + 16, v1 + 1120, sub_1003EDE14, v1 + 736);
  }
  else
  {
    return _swift_task_switch(sub_1003ED250, 0, 0);
  }
}

uint64_t sub_1003ED250()
{
  uint64_t v28 = v0;
  char v1 = *(unsigned char *)(v0 + 1546);
  unint64_t v2 = *(void *)(v0 + 1472);
  uint64_t v3 = *(void *)(v0 + 1200);
  uint64_t v4 = *(unsigned char *)(v0 + 1544) & 1;
  char v5 = *(unsigned char *)(v0 + 1545) & 1;
  unint64_t v6 = *(void *)(v0 + 1120);
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1003EEEC8(v1, v6, v4, v2, (void *)(v0 + 696), v3, v5);
  *(void *)(v0 + 1512) = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  unint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v8, v9))
  {
    id v10 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v10 = 134217984;
    *(void *)(v0 + 1136) = *(void *)(v7 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "VisibleTablesQuery: found %ld matching tables(s)", v10, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  (*(void (**)(void, void))(v0 + 1488))(*(void *)(v0 + 1256), *(void *)(v0 + 1224));
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain_n();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  BOOL v13 = os_log_type_enabled(v11, v12);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v0 + 1488);
  if (v13)
  {
    uint64_t v24 = *(void *)(v0 + 1224);
    uint64_t v25 = *(void *)(v0 + 1248);
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v16 = Array.description.getter();
    unint64_t v18 = v17;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 1128) = sub_10045DA1C(v16, v18, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "VisibleTablesQuery: matching note IDs: %s", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v14(v25, v24);
  }
  else
  {
    uint64_t v19 = *(void *)(v0 + 1248);
    uint64_t v20 = *(void *)(v0 + 1224);
    swift_bridgeObjectRelease_n();

    v14(v19, v20);
  }
  AppDependency.wrappedValue.getter();
  uint64_t v21 = *(void *)(v0 + 1104);
  *(void *)(v0 + 1520) = v21;
  uint64_t v26 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10069C4F8 + dword_10069C4F8);
  unsigned int v22 = (void *)swift_task_alloc();
  *(void *)(v0 + 1528) = v22;
  *unsigned int v22 = v0;
  v22[1] = sub_1003ED6A4;
  return v26(v7, v21);
}

uint64_t sub_1003ED6A4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 1032) = v2;
  *(void *)(v3 + 1040) = a1;
  *(void *)(v3 + 1048) = v1;
  *(void *)(v3 + 1536) = v1;
  swift_task_dealloc();
  if (v1)
  {

    return _swift_task_switch(sub_1003ED980, 0, 0);
  }
  else
  {

    swift_bridgeObjectRelease();
    return _swift_asyncLet_finish(v3 + 16, v3 + 1120, sub_1003ED824, v3 + 1056);
  }
}

uint64_t sub_1003ED824()
{
  return _swift_task_switch(sub_1003ED840, 0, 0);
}

uint64_t sub_1003ED840()
{
  uint64_t v1 = *(void **)(v0 + 1480);
  unint64_t v2 = *(void **)(v0 + 1352);
  uint64_t v3 = *(void **)(v0 + 1344);

  swift_release();
  uint64_t v6 = *(void *)(v0 + 1040);
  sub_100018FE8(v0 + 696);
  sub_10002E70C((uint64_t)&unk_1006A64A8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v4(v6);
}

uint64_t sub_1003ED980()
{
  swift_bridgeObjectRelease();
  return _swift_asyncLet_finish(v0 + 16, v0 + 1120, sub_1003EDA00, v0 + 656);
}

uint64_t sub_1003EDA00()
{
  return _swift_task_switch(sub_1003EDA1C, 0, 0);
}

uint64_t sub_1003EDA1C()
{
  swift_release();
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    uint64_t v5 = _convertErrorToNSError(_:)();
    *(void *)(v0 + 1112) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "VisibleTablesQuery: error fetching notes: %@", v3, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
  }
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0 + 1488);
  uint64_t v7 = *(void **)(v0 + 1480);
  uint64_t v8 = *(void *)(v0 + 1240);
  uint64_t v9 = *(void *)(v0 + 1224);

  v6(v8, v9);
  swift_willThrow();

  id v10 = *(void **)(v0 + 1352);
  uint64_t v11 = *(void **)(v0 + 1344);

  sub_100018FE8(v0 + 696);
  sub_10002E70C((uint64_t)&unk_1006A64A8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1003EDCFC()
{
  uint64_t v1 = *(void **)(v0 + 1352);
  os_log_type_t v2 = *(void **)(v0 + 1344);

  sub_100018FE8(v0 + 696);
  sub_10002E70C(0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1003EDE14()
{
  return _swift_task_switch(sub_1003EDE30, 0, 0);
}

uint64_t sub_1003EDE30()
{
  swift_release();
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    uint64_t v5 = _convertErrorToNSError(_:)();
    *(void *)(v0 + 1112) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "VisibleTablesQuery: error fetching notes: %@", v3, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
  }
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0 + 1488);
  uint64_t v7 = *(void **)(v0 + 1480);
  uint64_t v8 = *(void *)(v0 + 1240);
  uint64_t v9 = *(void *)(v0 + 1224);

  v6(v8, v9);
  swift_willThrow();

  id v10 = *(void **)(v0 + 1352);
  uint64_t v11 = *(void **)(v0 + 1344);

  sub_100018FE8(v0 + 696);
  sub_10002E70C((uint64_t)&unk_1006A64A8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1003EE110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = a3;
  *(void *)(v4 + 16) = a1;
  *(_OWORD *)(v4 + 40) = *v3;
  return _swift_task_switch(sub_1003EE13C, 0, 0);
}

uint64_t sub_1003EE13C()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  sub_10002F214(&qword_1006A6418);
  uint64_t v3 = *(void *)(type metadata accessor for VisibleTablesQuery.Comparator(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  v0[7] = v5;
  *(_OWORD *)(v5 + 16) = xmmword_100524D10;
  uint64_t v6 = (uint64_t *)(v5 + v4);
  uint64_t *v6 = swift_getKeyPath();
  v6[1] = v2;
  _OWORD v6[2] = v1;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[8] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_100298E6C;
  uint64_t v8 = v0[5];
  uint64_t v9 = v0[6];
  return VisibleTablesQuery.entities(matching:mode:sortedBy:limit:)(v5, 0, (uint64_t)_swiftEmptyArrayStorage, 0, 1, v8, v9);
}

uint64_t sub_1003EE2BC()
{
  uint64_t v0 = sub_10002F214(&qword_1006A64C8);
  sub_100032974(v0, static VisibleTablesQuery.sortingOptions);
  sub_10003293C(v0, (uint64_t)static VisibleTablesQuery.sortingOptions);
  type metadata accessor for TableEntity();
  sub_100019168(&qword_1006A9020, (void (*)(uint64_t))type metadata accessor for TableEntity);
  return EntityQuerySortingOptions.init(content:)();
}

uint64_t sub_1003EE370()
{
  uint64_t v0 = sub_10002F214((uint64_t *)&unk_1006A6720);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  unint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v12 - v5;
  swift_getKeyPath();
  sub_100019168(&qword_1006A9020, (void (*)(uint64_t))type metadata accessor for TableEntity);
  sub_10001DFB0(&qword_1006A0268, (uint64_t *)&unk_10069EE20);
  EntityQuerySortableByProperty.init<A>(_:)();
  type metadata accessor for TableEntity();
  static EntityQuerySortingOptionsBuilder.buildExpression(_:)();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v4, v0);
  sub_10002F214((uint64_t *)&unk_1006A6730);
  unint64_t v8 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100524D10;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 16))(v9 + v8, v6, v0);
  uint64_t v10 = static EntityQuerySortingOptionsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  v7(v6, v0);
  return v10;
}

uint64_t VisibleTablesQuery.sortingOptions.unsafeMutableAddressor()
{
  return sub_10023944C(&qword_10069B000, &qword_1006A64C8, (uint64_t)static VisibleTablesQuery.sortingOptions);
}

uint64_t static VisibleTablesQuery.sortingOptions.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1002394D0(&qword_10069B000, &qword_1006A64C8, (uint64_t)static VisibleTablesQuery.sortingOptions, a1);
}

uint64_t sub_1003EE5FC()
{
  uint64_t v0 = sub_10002F214((uint64_t *)&unk_1006A64D0);
  sub_100032974(v0, static VisibleTablesQuery.properties);
  sub_10003293C(v0, (uint64_t)static VisibleTablesQuery.properties);
  type metadata accessor for TableEntity();
  type metadata accessor for VisibleTablesQuery.Comparator(0);
  sub_100019168(&qword_1006A9020, (void (*)(uint64_t))type metadata accessor for TableEntity);
  return EntityQueryProperties.init(properties:)();
}

uint64_t sub_1003EE6C8()
{
  sub_10002F214(&qword_1006A6700);
  swift_getKeyPath();
  EntityQueryProperty.__allocating_init<>(_:comparators:)();
  sub_100019168(&qword_1006A9020, (void (*)(uint64_t))type metadata accessor for TableEntity);
  uint64_t v0 = static EntityQueryPropertiesBuilder.buildExpression(_:)();
  swift_release();
  sub_10002F214(&qword_10069BA00);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100529F20;
  *(void *)(v1 + 32) = v0;
  specialized Array._endMutation()();
  type metadata accessor for TableEntity();
  type metadata accessor for VisibleTablesQuery.Comparator(0);
  swift_retain();
  uint64_t v2 = static EntityQueryPropertiesBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  swift_release();
  return v2;
}

uint64_t sub_1003EE80C()
{
  uint64_t v0 = sub_10002F214(&qword_1006A6708);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002F214(&qword_1006A6710);
  swift_allocObject();
  ContainsComparator.init<>(mappingTransform:)();
  type metadata accessor for TableEntity();
  sub_100019168(&qword_1006A9020, (void (*)(uint64_t))type metadata accessor for TableEntity);
  static EntityQueryComparatorsBuilder.buildExpression(_:)();
  swift_release();
  sub_10002F214(&qword_1006A6718);
  unint64_t v4 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100524D10;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 16))(v5 + v4, v3, v0);
  sub_10002F214((uint64_t *)&unk_10069EE20);
  type metadata accessor for VisibleTablesQuery.Comparator(0);
  sub_1001FDDB8();
  uint64_t v6 = static EntityQueryComparatorsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v6;
}

uint64_t sub_1003EEA44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = swift_getKeyPath();
  a3[1] = a1;
  a3[2] = a2;
  type metadata accessor for VisibleTablesQuery.Comparator(0);
  swift_storeEnumTagMultiPayload();

  return swift_bridgeObjectRetain();
}

uint64_t VisibleTablesQuery.properties.unsafeMutableAddressor()
{
  return sub_10023944C(&qword_10069B008, (uint64_t *)&unk_1006A64D0, (uint64_t)static VisibleTablesQuery.properties);
}

uint64_t static VisibleTablesQuery.properties.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1002394D0(&qword_10069B008, (uint64_t *)&unk_1006A64D0, (uint64_t)static VisibleTablesQuery.properties, a1);
}

uint64_t sub_1003EEB0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for String.StandardComparator();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = sub_10002F214((uint64_t *)&unk_1006A1920);
  __chkstk_darwin(v9 - 8);
  sub_100031418(0, &qword_10069FCC0);
  swift_getKeyPath();
  static String.StandardComparator.localizedStandard.getter();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  SortDescriptor.init<A>(_:comparator:order:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  sub_100031418(0, &qword_10069BDF0);
  uint64_t result = NSSortDescriptor.init<A>(_:)();
  *a1 = result;
  return result;
}

uint64_t sub_1003EECEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  _OWORD v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(sub_1003EED10, 0, 0);
}

uint64_t sub_1003EED10()
{
  uint64_t v2 = (void *)v0[4];
  uint64_t v1 = (void *)v0[5];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)swift_allocObject();
  v0[6] = v4;
  _OWORD v4[2] = v3;
  v4[3] = v2;
  v4[4] = v1;
  id v5 = v3;
  id v6 = v2;
  id v7 = v1;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[7] = v8;
  uint64_t v9 = sub_10002F214(&qword_1006A00B0);
  *uint64_t v8 = v0;
  v8[1] = sub_100299B98;
  uint64_t v10 = v0[2];
  return NSManagedObjectContext.perform<A>(_:)(v10, sub_1003F3F74, v4, v9);
}

void sub_1003EEE1C(void *a1@<X2>, void *a2@<X8>)
{
  sub_100031418(0, &qword_10069BDF0);
  uint64_t v5 = NSManagedObjectContext.fetch<A>(_:)();
  if (!v2)
  {
    unint64_t v6 = v5;
    id v7 = a1;
    uint64_t v8 = sub_1003F1940(v6, v7);
    swift_bridgeObjectRelease();

    *a2 = v8;
  }
}

uint64_t sub_1003EEEC8(char a1, unint64_t a2, uint64_t a3, unint64_t a4, void *a5, uint64_t a6, char a7)
{
  if (a1) {
    swift_bridgeObjectRetain();
  }
  if ((static EntityQueryComparatorMode.== infix(_:_:)() & 1) != 0 && a4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10022C534(a2);
    uint64_t v12 = sub_10026A328(a4);
    swift_bridgeObjectRelease();
    sub_1001A9CA4(v12);
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = a5[3];
  uint64_t v14 = a5[4];
  uint64_t v15 = sub_10015E154(a5, v13);
  uint64_t v16 = sub_10002F214(&qword_1006A00B0);
  uint64_t v17 = sub_10001DFB0((unint64_t *)&unk_1006A00B8, &qword_1006A00B0);
  unint64_t v18 = sub_1003E8C24((uint64_t)v15, a6, a7 & 1, v16, v13, v17, v14);
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_1003E7828((unint64_t)v18);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1003EF044@<X0>(uint64_t a1@<X8>)
{
  return sub_10023A08C(&qword_10069B008, (uint64_t *)&unk_1006A64D0, (uint64_t)static VisibleTablesQuery.properties, a1);
}

uint64_t sub_1003EF070@<X0>(uint64_t a1@<X8>)
{
  return sub_10023A08C(&qword_10069B000, &qword_1006A64C8, (uint64_t)static VisibleTablesQuery.sortingOptions, a1);
}

uint64_t sub_1003EF09C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  *(void *)(v7 + 16) = a1;
  uint64_t v12 = *v6;
  uint64_t v11 = v6[1];
  char v13 = a3 & 1;
  char v14 = a6 & 1;
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 24) = v15;
  *uint64_t v15 = v7;
  v15[1] = sub_10016997C;
  return VisibleTablesQuery.entities(matching:mode:sortedBy:limit:)(a2, v13, a4, a5, v14, v12, v11);
}

void sub_1003EF178(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*a1 title];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

id sub_1003EF1E0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  int v94 = a2;
  uint64_t v5 = type metadata accessor for ICQueryType();
  uint64_t v91 = *(void *)(v5 - 8);
  uint64_t v92 = v5;
  __chkstk_darwin(v5);
  uint64_t v89 = (char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FolderEntity();
  uint64_t v90 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v88 = (uint64_t)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10002F214(&qword_10069D370);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v87 = (uint64_t)&v86 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v86 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v86 - v18;
  uint64_t v20 = sub_10002F214(&qword_1006A6760);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v23 = (char *)&v86 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = (uint64_t)&v23[*(int *)(v21 + 56)];
  uint64_t v25 = *(int *)(v21 + 72);
  sub_1003F1EE0(v3, (uint64_t)v23, type metadata accessor for VisibleTablesQuery.Comparator);
  uint64_t v93 = a1;
  uint64_t v26 = a1;
  char v27 = v94;
  uint64_t v95 = v24;
  sub_10002F034(v26, v24, &qword_10069D370);
  v23[v25] = v27;
  type metadata accessor for VisibleTablesQuery.Comparator(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v34 = type metadata accessor for ManagedEntityContextType();
      uint64_t v35 = *(void *)(v34 - 8);
      uint64_t v36 = v95;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v95, 1, v34) == 1) {
        goto LABEL_26;
      }
      sub_10002F034(v36, (uint64_t)v12, &qword_10069D370);
      if ((*(unsigned int (**)(char *, uint64_t))(v35 + 88))(v12, v34) == enum case for ManagedEntityContextType.html(_:))
      {
        id v33 = [self predicateWithValue:0];
        (*(void (**)(char *, uint64_t))(v91 + 8))(v23, v92);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v34);
LABEL_26:
        uint64_t v76 = v91;
        uint64_t v75 = v92;
        id v77 = v89;
        (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v89, v23, v92);
        id v33 = (id)ICQueryType.predicate.getter();
        (*(void (**)(char *, uint64_t))(v76 + 8))(v77, v75);
      }
      goto LABEL_20;
    case 2u:
      uint64_t v37 = *(void *)v23;
      sub_10002F214((uint64_t *)&unk_1006A1940);
      uint64_t v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = xmmword_100524D10;
      *(void *)(v38 + 56) = sub_10002F214((uint64_t *)&unk_1006A03A0);
      *(void *)(v38 + 32) = v37;
      NSString v39 = String._bridgeToObjectiveC()();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v33 = [self predicateWithFormat:v39 argumentArray:isa];

      goto LABEL_19;
    case 3u:
      swift_bridgeObjectRelease();
      goto LABEL_10;
    case 4u:
      uint64_t v41 = *((void *)v23 + 1);
      uint64_t v42 = *((void *)v23 + 2);
      sub_10002F034(v93, (uint64_t)v19, &qword_10069D370);
      uint64_t v43 = type metadata accessor for ManagedEntityContextType();
      uint64_t v23 = *(char **)(v43 - 8);
      if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v23 + 6))(v19, 1, v43) != 1)
      {
        sub_10002F034((uint64_t)v19, (uint64_t)v17, &qword_10069D370);
        int v44 = (*((uint64_t (**)(char *, uint64_t))v23 + 11))(v17, v43);
        if (v44 != enum case for ManagedEntityContextType.modern(_:))
        {
          if (v44 != enum case for ManagedEntityContextType.html(_:)) {
            (*((void (**)(char *, uint64_t))v23 + 1))(v17, v43);
          }
          sub_10002B754((uint64_t)v19, &qword_10069D370);
          uint64_t v45 = 0;
          unint64_t v47 = 0xE000000000000000;
          goto LABEL_30;
        }
      }
      sub_10002B754((uint64_t)v19, &qword_10069D370);
      swift_retain();
      uint64_t v45 = dispatch thunk of AnyKeyPath._kvcKeyPathString.getter();
      unint64_t v47 = v46;
      swift_release();
      if (v47)
      {
LABEL_30:
        uint64_t v36 = v95;
        sub_10002F214((uint64_t *)&unk_1006A1940);
        uint64_t v78 = swift_allocObject();
        *(_OWORD *)(v78 + 16) = xmmword_100527F30;
        *(void *)(v78 + 32) = v45;
        *(void *)(v78 + 40) = v47;
        *(void *)(v78 + 88) = &type metadata for String;
        *(void *)(v78 + 56) = &type metadata for String;
        *(void *)(v78 + 64) = v41;
        *(void *)(v78 + 72) = v42;
        NSString v79 = String._bridgeToObjectiveC()();
        Class v80 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v33 = [self predicateWithFormat:v79 argumentArray:v80];
        swift_release();

        goto LABEL_20;
      }
      __break(1u);
LABEL_15:
      sub_10016EFCC((long long *)v23, (uint64_t)v98);
      sub_100032E84(v23 + 40, v97);
      uint64_t v48 = v99;
      uint64_t v49 = v100;
      sub_10015E154(v98, v99);
      uint64_t v50 = sub_1001948D4(v93, v48, v49);
      uint64_t v52 = v51;
      sub_10002F214((uint64_t *)&unk_1006A1940);
      uint64_t v53 = swift_allocObject();
      *(_OWORD *)(v53 + 16) = xmmword_100527F30;
      *(void *)(v53 + 56) = &type metadata for String;
      *(void *)(v53 + 32) = v50;
      *(void *)(v53 + 40) = v52;
      sub_100032E28((uint64_t)v97, v53 + 64);
      NSString v54 = String._bridgeToObjectiveC()();
      v55.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v56 = [self predicateWithFormat:v54 argumentArray:v55.super.isa];
LABEL_17:
      id v33 = v56;

LABEL_18:
      sub_100018FE8((uint64_t)v97);
      sub_100018FE8((uint64_t)v98);
LABEL_19:
      uint64_t v36 = v95;
LABEL_20:
      sub_10002B754(v36, &qword_10069D370);
      return v33;
    case 5u:
    case 6u:
      goto LABEL_15;
    case 7u:
    case 8u:
    case 9u:
    case 0xAu:
      sub_10016EFCC((long long *)v23, (uint64_t)v98);
      sub_100032E84(v23 + 40, v97);
      uint64_t v57 = v99;
      uint64_t v58 = v100;
      sub_10015E154(v98, v99);
      uint64_t v59 = sub_1001948D4(v93, v57, v58);
      uint64_t v61 = v60;
      sub_10002F214((uint64_t *)&unk_1006A1940);
      uint64_t v62 = swift_allocObject();
      *(_OWORD *)(v62 + 16) = xmmword_100529A00;
      *(void *)(v62 + 32) = v59;
      *(void *)(v62 + 40) = v61;
      *(void *)(v62 + 88) = &type metadata for String;
      *(void *)(v62 + 56) = &type metadata for String;
      *(void *)(v62 + 64) = v59;
      *(void *)(v62 + 72) = v61;
      sub_100032E28((uint64_t)v97, v62 + 96);
      swift_bridgeObjectRetain();
      NSString v54 = String._bridgeToObjectiveC()();
      v55.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v56 = [self predicateWithFormat:v54 argumentArray:v55.super.isa];
      goto LABEL_17;
    case 0xBu:
      sub_10016EFCC((long long *)v23, (uint64_t)v98);
      sub_100032E84(v23 + 40, v97);
      sub_100032E84(v23 + 72, v96);
      uint64_t v64 = v99;
      uint64_t v65 = v100;
      sub_10015E154(v98, v99);
      uint64_t v66 = sub_1001948D4(v93, v64, v65);
      uint64_t v68 = v67;
      sub_10002F214((uint64_t *)&unk_1006A1940);
      uint64_t v69 = swift_allocObject();
      *(_OWORD *)(v69 + 16) = xmmword_10052AC40;
      *(void *)(v69 + 32) = v66;
      *(void *)(v69 + 40) = v68;
      *(void *)(v69 + 88) = &type metadata for String;
      *(void *)(v69 + 56) = &type metadata for String;
      *(void *)(v69 + 64) = v66;
      *(void *)(v69 + 72) = v68;
      sub_100032E28((uint64_t)v97, v69 + 96);
      *(void *)(v69 + 152) = &type metadata for String;
      *(void *)(v69 + 128) = v66;
      *(void *)(v69 + 136) = v68;
      sub_100032E28((uint64_t)v96, v69 + 160);
      swift_bridgeObjectRetain_n();
      NSString v70 = String._bridgeToObjectiveC()();
      Class v71 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v33 = [self predicateWithFormat:v70 argumentArray:v71];

      sub_100018FE8((uint64_t)v96);
      goto LABEL_18;
    default:
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v23, 1, v7) == 1)
      {
LABEL_10:
        id v33 = 0;
        goto LABEL_19;
      }
      if (v27)
      {
        uint64_t v28 = v88;
        sub_10029D25C((uint64_t)v23, v88);
        sub_100031418(0, &qword_1006A1560);
        sub_10002F214((uint64_t *)&unk_1006A1950);
        uint64_t v29 = swift_allocObject();
        *(_OWORD *)(v29 + 16) = xmmword_100524D10;
        uint64_t v30 = FolderID.managedIdentifier.getter();
        uint64_t v32 = v31;
        *(void *)(v29 + 56) = &type metadata for String;
        *(void *)(v29 + 64) = sub_1001BBFD8();
        *(void *)(v29 + 32) = v30;
        *(void *)(v29 + 40) = v32;
        id v33 = (id)NSPredicate.init(format:_:)();
        sub_1003F3B54(v28, (uint64_t (*)(void))type metadata accessor for FolderEntity);
        goto LABEL_19;
      }
      uint64_t v72 = type metadata accessor for ManagedEntityContextType();
      uint64_t v73 = *(void *)(v72 - 8);
      uint64_t v36 = v95;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v95, 1, v72) != 1)
      {
        uint64_t v74 = v87;
        sub_10002F034(v36, v87, &qword_10069D370);
        if ((*(unsigned int (**)(uint64_t, uint64_t))(v73 + 88))(v74, v72) != enum case for ManagedEntityContextType.html(_:)) {
          (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v74, v72);
        }
      }
      uint64_t v81 = v88;
      sub_10029D25C((uint64_t)v23, v88);
      sub_100031418(0, &qword_1006A1560);
      sub_10002F214((uint64_t *)&unk_1006A1950);
      uint64_t v82 = swift_allocObject();
      *(_OWORD *)(v82 + 16) = xmmword_100524D10;
      uint64_t v83 = FolderID.managedIdentifier.getter();
      uint64_t v85 = v84;
      *(void *)(v82 + 56) = &type metadata for String;
      *(void *)(v82 + 64) = sub_1001BBFD8();
      *(void *)(v82 + 32) = v83;
      *(void *)(v82 + 40) = v85;
      id v33 = (id)NSPredicate.init(format:_:)();
      sub_1003F3B54(v81, (uint64_t (*)(void))type metadata accessor for FolderEntity);
      goto LABEL_20;
  }
}

id sub_1003F03C4(uint64_t a1, int a2, uint64_t a3, int a4)
{
  int v67 = a4;
  int v62 = a2;
  uint64_t v63 = a1;
  uint64_t v73 = type metadata accessor for ICQueryType();
  uint64_t v68 = *(void *)(v73 - 8);
  uint64_t v5 = __chkstk_darwin(v73);
  uint64_t v61 = (uint64_t *)((char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v72 = (char *)&v60 - v8;
  __chkstk_darwin(v7);
  Class v71 = (char *)&v60 - v9;
  uint64_t v70 = type metadata accessor for VisibleTablesQuery.Comparator(0);
  uint64_t v66 = *(void *)(v70 - 8);
  uint64_t v10 = __chkstk_darwin(v70);
  uint64_t v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v60 - v13;
  uint64_t v15 = type metadata accessor for ManagedEntityContextType();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v65 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10002F214((uint64_t *)&unk_1006A0380);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10002F214(&qword_10069D370);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v25 = (char *)&v60 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  char v27 = (char *)&v60 - v26;
  (*(void (**)(char *, void, uint64_t))(v16 + 104))((char *)&v60 - v26, enum case for ManagedEntityContextType.html(_:), v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v27, 0, 1, v15);
  uint64_t v28 = (uint64_t)&v21[*(int *)(v19 + 56)];
  uint64_t v69 = a3;
  sub_10002F034(a3, (uint64_t)v21, &qword_10069D370);
  sub_10002F034((uint64_t)v27, v28, &qword_10069D370);
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v29((uint64_t)v21, 1, v15) == 1)
  {
    sub_10002B754((uint64_t)v27, &qword_10069D370);
    int v30 = v29(v28, 1, v15);
    uint64_t v31 = v63;
    if (v30 == 1)
    {
      uint64_t v32 = sub_10002B754((uint64_t)v21, &qword_10069D370);
      goto LABEL_26;
    }
    goto LABEL_6;
  }
  sub_10002F034((uint64_t)v21, (uint64_t)v25, &qword_10069D370);
  if (v29(v28, 1, v15) == 1)
  {
    sub_10002B754((uint64_t)v27, &qword_10069D370);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v25, v15);
    uint64_t v31 = v63;
LABEL_6:
    sub_10002B754((uint64_t)v21, (uint64_t *)&unk_1006A0380);
    goto LABEL_7;
  }
  uint64_t v52 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v65, v28, v15);
  sub_100019168(&qword_1006A1930, (void (*)(uint64_t))&type metadata accessor for ManagedEntityContextType);
  char v53 = dispatch thunk of static Equatable.== infix(_:_:)();
  NSString v54 = *(void (**)(char *, uint64_t))(v16 + 8);
  v54(v52, v15);
  sub_10002B754((uint64_t)v27, &qword_10069D370);
  v54(v25, v15);
  uint64_t v32 = sub_10002B754((uint64_t)v21, &qword_10069D370);
  uint64_t v31 = v63;
  if ((v53 & 1) == 0)
  {
LABEL_7:
    id v33 = (char *)_swiftEmptyArrayStorage;
    unint64_t v74 = (unint64_t)_swiftEmptyArrayStorage;
    uint64_t v34 = *(void *)(v31 + 16);
    if (v34)
    {
      uint64_t v35 = v31 + ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80));
      uint64_t v36 = *(void *)(v66 + 72);
      uint64_t v37 = (void (**)(char *, char *, uint64_t))(v68 + 32);
      uint64_t v64 = v68 + 8;
      uint64_t v65 = (char *)(v68 + 16);
      swift_bridgeObjectRetain();
      uint64_t v66 = v36;
      do
      {
        sub_1003F1EE0(v35, (uint64_t)v14, type metadata accessor for VisibleTablesQuery.Comparator);
        sub_1003F1EE0((uint64_t)v14, (uint64_t)v12, type metadata accessor for VisibleTablesQuery.Comparator);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v40 = *v37;
          uint64_t v41 = v71;
          uint64_t v42 = v73;
          (*v37)(v71, v12, v73);
          (*(void (**)(char *, char *, uint64_t))v65)(v72, v41, v42);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v33 = (char *)sub_1001A86B0(0, *((void *)v33 + 2) + 1, 1, (unint64_t)v33);
          }
          unint64_t v44 = *((void *)v33 + 2);
          unint64_t v43 = *((void *)v33 + 3);
          if (v44 >= v43 >> 1) {
            id v33 = (char *)sub_1001A86B0(v43 > 1, v44 + 1, 1, (unint64_t)v33);
          }
          *((void *)v33 + 2) = v44 + 1;
          uint64_t v38 = v68;
          uint64_t v39 = v73;
          v40(&v33[((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v68 + 72) * v44], v72, v73);
          (*(void (**)(char *, uint64_t))(v38 + 8))(v71, v39);
          uint64_t v36 = v66;
        }
        else
        {
          sub_1003F3B54((uint64_t)v12, type metadata accessor for VisibleTablesQuery.Comparator);
          id v45 = sub_1003EF1E0(v69, v67 & 1);
          if (v45)
          {
            id v46 = v45;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
        }
        sub_1003F3B54((uint64_t)v14, type metadata accessor for VisibleTablesQuery.Comparator);
        v35 += v36;
        --v34;
      }
      while (v34);
      swift_bridgeObjectRelease();
    }
    uint64_t v47 = v69;
    if (*((void *)v33 + 2))
    {
      uint64_t v48 = swift_allocObject();
      *(void *)(v48 + 16) = v33;
      uint64_t v49 = v61;
      *uint64_t v61 = v48;
      uint64_t v50 = v68;
      uint64_t v51 = v73;
      (*(void (**)(uint64_t *, void, uint64_t))(v68 + 104))(v49, enum case for ICQueryType.and(_:), v73);
      ICQueryType.predicate.getter();
      (*(void (**)(uint64_t *, uint64_t))(v50 + 8))(v49, v51);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_100031418(0, &qword_1006A1560);
    swift_bridgeObjectRetain();
    v55.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v56 = self;
    if ((v62 & 1) == 0) {
      goto LABEL_27;
    }
LABEL_30:
    id v57 = [v56 orPredicateWithSubpredicates:v55.super.isa];
    goto LABEL_31;
  }
LABEL_26:
  __chkstk_darwin(v32);
  uint64_t v47 = v69;
  *(&v60 - 2) = v69;
  *((unsigned char *)&v60 - 8) = v67 & 1;
  sub_1003E7AF8((void (*)(uint64_t *__return_ptr, uint64_t))sub_1003F3FE8, (uint64_t)(&v60 - 4), v31, type metadata accessor for VisibleTablesQuery.Comparator);
  sub_100031418(0, &qword_1006A1560);
  v55.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v56 = self;
  if (v62) {
    goto LABEL_30;
  }
LABEL_27:
  id v57 = [v56 andPredicateWithSubpredicates:v55.super.isa];
LABEL_31:
  id v58 = v57;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_10002B754(v47, &qword_10069D370);
  return v58;
}

uint64_t VisibleTablesQuery.Comparator.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ICQueryType();
  uint64_t v53 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FolderEntity();
  uint64_t v52 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v52 - v9;
  uint64_t v11 = sub_10002F214(&qword_10069B260);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v52 - v15;
  uint64_t v17 = type metadata accessor for VisibleTablesQuery.Comparator(0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003F1EE0(v1, (uint64_t)v19, type metadata accessor for VisibleTablesQuery.Comparator);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v42 = v53;
      (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v4, v19, v2);
      v58[0] = 0;
      v58[1] = 0xE000000000000000;
      v43._countAndFlagsBits = 0x2879726575516369;
      v43._object = (void *)0xE800000000000000;
      String.append(_:)(v43);
      _print_unlocked<A, B>(_:_:)();
      v44._countAndFlagsBits = 41;
      v44._object = (void *)0xE100000000000000;
      String.append(_:)(v44);
      uint64_t v34 = v58[0];
      (*(void (**)(char *, uint64_t))(v42 + 8))(v4, v2);
      return v34;
    case 2u:
      v58[0] = 0;
      v58[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(23);
      swift_bridgeObjectRelease();
      v58[0] = 0xD000000000000014;
      v58[1] = 0x8000000100554BD0;
      sub_100031418(0, (unint64_t *)&qword_10069E810);
      v22._countAndFlagsBits = Array.description.getter();
      String.append(_:)(v22);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 3u:
      uint64_t v23 = *(void *)v19;
      uint64_t v24 = *((void *)v19 + 1);
      strcpy((char *)v58, "textSearch(");
      HIDWORD(v58[1]) = -352321536;
      *(void *)&v57[0] = v23;
      *((void *)&v57[0] + 1) = v24;
      v25._countAndFlagsBits = String.init<A>(reflecting:)();
      String.append(_:)(v25);
LABEL_6:
      swift_bridgeObjectRelease();
      v26._countAndFlagsBits = 41;
      v26._object = (void *)0xE100000000000000;
      String.append(_:)(v26);
      return v58[0];
    case 4u:
      uint64_t v27 = *(void *)v19;
      uint64_t v28 = *((void *)v19 + 1);
      uint64_t v29 = *((void *)v19 + 2);
      v58[0] = 0;
      v58[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(16);
      v30._countAndFlagsBits = 0x736E6961746E6F63;
      v30._object = (void *)0xE900000000000028;
      String.append(_:)(v30);
      *(void *)&v57[0] = v27;
      sub_10002F214((uint64_t *)&unk_1006A64E8);
      _print_unlocked<A, B>(_:_:)();
      v31._countAndFlagsBits = 8236;
      v31._object = (void *)0xE200000000000000;
      String.append(_:)(v31);
      *(void *)&v57[0] = v28;
      *((void *)&v57[0] + 1) = v29;
      v32._countAndFlagsBits = String.init<A>(reflecting:)();
      String.append(_:)(v32);
      swift_bridgeObjectRelease();
      v33._countAndFlagsBits = 41;
      v33._object = (void *)0xE100000000000000;
      String.append(_:)(v33);
      swift_release();
      return v58[0];
    case 5u:
      sub_10016EFCC((long long *)v19, (uint64_t)v58);
      sub_100032E84(v19 + 40, v57);
      *(void *)&v54[0] = 0;
      *((void *)&v54[0] + 1) = 0xE000000000000000;
      unint64_t v35 = 0x286F546C61757165;
      unint64_t v36 = 0xE800000000000000;
      goto LABEL_17;
    case 6u:
      sub_10016EFCC((long long *)v19, (uint64_t)v58);
      sub_100032E84(v19 + 40, v57);
      *(void *)&v56[0] = 0;
      *((void *)&v56[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(18);
      v54[0] = v56[0];
      unint64_t v36 = 0xEB00000000286F54;
      unint64_t v35 = 0x6C61757145746F6ELL;
      goto LABEL_17;
    case 7u:
      sub_10016EFCC((long long *)v19, (uint64_t)v58);
      sub_100032E84(v19 + 40, v57);
      *(void *)&v56[0] = 0;
      *((void *)&v56[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(16);
      v54[0] = v56[0];
      unint64_t v35 = 0x6E6168547373656CLL;
      unint64_t v36 = 0xE900000000000028;
      goto LABEL_17;
    case 8u:
      sub_10016EFCC((long long *)v19, (uint64_t)v58);
      sub_100032E84(v19 + 40, v57);
      *(void *)&v56[0] = 0;
      *((void *)&v56[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(25);
      v54[0] = v56[0];
      unint64_t v36 = 0x8000000100554BB0;
      unint64_t v35 = 0xD000000000000012;
      goto LABEL_17;
    case 9u:
      sub_10016EFCC((long long *)v19, (uint64_t)v58);
      sub_100032E84(v19 + 40, v57);
      *(void *)&v56[0] = 0;
      *((void *)&v56[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(19);
      v54[0] = v56[0];
      unint64_t v35 = 0x5472657461657267;
      unint64_t v36 = 0xEC000000286E6168;
      goto LABEL_17;
    case 0xAu:
      sub_10016EFCC((long long *)v19, (uint64_t)v58);
      sub_100032E84(v19 + 40, v57);
      *(void *)&v56[0] = 0;
      *((void *)&v56[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(28);
      v54[0] = v56[0];
      unint64_t v35 = 0xD000000000000015;
      unint64_t v36 = 0x8000000100554B90;
LABEL_17:
      String.append(_:)(*(Swift::String *)&v35);
      sub_10002F214(&qword_1006A64E0);
      _print_unlocked<A, B>(_:_:)();
      v45._countAndFlagsBits = 8236;
      v45._object = (void *)0xE200000000000000;
      String.append(_:)(v45);
      sub_100032E28((uint64_t)v57, (uint64_t)v56);
      v46._countAndFlagsBits = String.init<A>(reflecting:)();
      String.append(_:)(v46);
      swift_bridgeObjectRelease();
      v47._countAndFlagsBits = 41;
      v47._object = (void *)0xE100000000000000;
      String.append(_:)(v47);
      uint64_t v34 = *(void *)&v54[0];
      goto LABEL_18;
    case 0xBu:
      sub_10016EFCC((long long *)v19, (uint64_t)v58);
      sub_100032E84(v19 + 40, v57);
      sub_100032E84(v19 + 72, v56);
      *(void *)&v54[0] = 0;
      *((void *)&v54[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(18);
      long long v55 = v54[0];
      v37._countAndFlagsBits = 0x286E656577746562;
      v37._object = (void *)0xE800000000000000;
      String.append(_:)(v37);
      sub_10002F214(&qword_1006A64E0);
      _print_unlocked<A, B>(_:_:)();
      v38._countAndFlagsBits = 8236;
      v38._object = (void *)0xE200000000000000;
      String.append(_:)(v38);
      sub_100032E28((uint64_t)v57, (uint64_t)v54);
      v39._countAndFlagsBits = String.init<A>(reflecting:)();
      String.append(_:)(v39);
      swift_bridgeObjectRelease();
      v40._countAndFlagsBits = 8236;
      v40._object = (void *)0xE200000000000000;
      String.append(_:)(v40);
      sub_100032E28((uint64_t)v56, (uint64_t)v54);
      v41._countAndFlagsBits = String.init<A>(reflecting:)();
      String.append(_:)(v41);
      swift_bridgeObjectRelease();
      uint64_t v34 = v55;
      sub_100018FE8((uint64_t)v56);
LABEL_18:
      sub_100018FE8((uint64_t)v57);
      sub_100018FE8((uint64_t)v58);
      break;
    default:
      sub_10029D1F4((uint64_t)v19, (uint64_t)v16);
      sub_10002F034((uint64_t)v16, (uint64_t)v14, &qword_10069B260);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v14, 1, v5) == 1)
      {
        uint64_t v20 = (void *)0xE300000000000000;
        uint64_t v21 = 7104878;
      }
      else
      {
        sub_10029D25C((uint64_t)v14, (uint64_t)v10);
        sub_1003F1EE0((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FolderEntity);
        uint64_t v21 = String.init<A>(describing:)();
        uint64_t v20 = v49;
        sub_1003F3B54((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FolderEntity);
      }
      strcpy((char *)v58, "containedIn(");
      BYTE5(v58[1]) = 0;
      HIWORD(v58[1]) = -5120;
      v50._countAndFlagsBits = v21;
      v50._object = v20;
      String.append(_:)(v50);
      swift_bridgeObjectRelease();
      v51._countAndFlagsBits = 41;
      v51._object = (void *)0xE100000000000000;
      String.append(_:)(v51);
      uint64_t v34 = v58[0];
      sub_10002B754((uint64_t)v16, &qword_10069B260);
      break;
  }
  return v34;
}

uint64_t sub_1003F16DC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003F171C(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100161724;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 16) = a1;
  return _swift_task_switch(sub_1003EA28C, 0, 0);
}

uint64_t type metadata accessor for VisibleTablesQuery.Comparator(uint64_t a1)
{
  return sub_10002EFBC(a1, qword_1006A66B8);
}

void sub_1003F17F0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_1003F1808()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1003F185C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_10017B61C;
  *(void *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(void *)(v5 + 16) = a1;
  return _swift_task_switch(sub_1003EED10, 0, 0);
}

uint64_t type metadata accessor for TableSearchResult(uint64_t a1)
{
  return sub_10002EFBC(a1, qword_1006A65B8);
}

void *sub_1003F1940(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  id v41 = a2;
  uint64_t v38 = type metadata accessor for TableID();
  uint64_t v5 = *(void (***)(char *, char *, uint64_t))(v38 - 8);
  __chkstk_darwin(v38);
  Swift::String v37 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v47 = (unint64_t)_swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_25;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v7; uint64_t v7 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v8 = a1 & 0xC000000000000001;
    uint64_t v35 = v3;
    unint64_t v36 = v5 + 4;
    uint64_t v3 = 4;
    uint64_t v9 = &selRef__applicationKeyWindow;
    unint64_t v39 = a1 & 0xC000000000000001;
    uint64_t v40 = v7;
    while (1)
    {
      uint64_t v10 = v8 ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)() : (char *)*(id *)(a1 + 8 * v3);
      uint64_t v5 = (void (**)(char *, char *, uint64_t))v10;
      uint64_t v11 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      if ([v10 v9[50]])
      {
        uint64_t v12 = sub_100031418(0, &qword_10069BDF0);
        v46[3] = v12;
        v46[0] = v5;
        sub_10002F034((uint64_t)v46, (uint64_t)v44, &qword_10069B4D0);
        uint64_t v13 = v45;
        if (v45)
        {
          uint64_t v14 = sub_10015E154(v44, v45);
          uint64_t v42 = v12;
          unint64_t v15 = a1;
          uint64_t v16 = *(void *)(v13 - 8);
          __chkstk_darwin(v14);
          uint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v16 + 16))(v18);
          uint64_t v19 = v5;
          uint64_t v20 = _bridgeAnythingToObjectiveC<A>(_:)();
          (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v13);
          a1 = v15;
          sub_100018FE8((uint64_t)v44);
        }
        else
        {
          uint64_t v21 = v5;
          uint64_t v20 = 0;
        }
        unsigned __int8 v22 = [v41 evaluateWithObject:v20, v35];
        swift_unknownObjectRelease();
        sub_10002B754((uint64_t)v46, &qword_10069B4D0);
        if (v22)
        {
          uint64_t v23 = (objc_class *)type metadata accessor for TableSearchResult(0);
          id v24 = objc_allocWithZone(v23);
          Swift::String v25 = v5;
          Swift::String v26 = (char *)v24;
          uint64_t v27 = v37;
          ICTableObject<>.tableEntityIdentifier.getter();
          (*v36)(&v26[OBJC_IVAR____TtC11MobileNotesP33_3A26B74EEED685164DF9267FE58E345F17TableSearchResult_id], v27, v38);
          id v28 = [v25 title];
          if (v28)
          {
            uint64_t v29 = v28;
            uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v32 = v31;
          }
          else
          {
            uint64_t v30 = 0;
            unint64_t v32 = 0xE000000000000000;
          }
          Swift::String v33 = (uint64_t *)&v26[OBJC_IVAR____TtC11MobileNotesP33_3A26B74EEED685164DF9267FE58E345F17TableSearchResult_title];
          uint64_t *v33 = v30;
          v33[1] = v32;

          v43.receiver = v26;
          v43.super_class = v23;
          [super init];

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        else
        {
        }
        unint64_t v8 = v39;
        uint64_t v7 = v40;
        uint64_t v9 = &selRef__applicationKeyWindow;
      }
      else
      {
      }
      ++v3;
      if (v11 == v7)
      {
        swift_bridgeObjectRelease();
        return (void *)v47;
      }
    }
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

id sub_1003F1D74(void *a1, void *a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = type metadata accessor for TableID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a2;
  ICTableObject<>.tableEntityIdentifier.getter();
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v9[OBJC_IVAR____TtC11MobileNotesP33_3A26B74EEED685164DF9267FE58E345F17TableSearchResult_id], v8, v5);
  id v10 = [a1 title];
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v14 = v13;
  }
  else
  {
    uint64_t v12 = 0;
    unint64_t v14 = 0xE000000000000000;
  }
  unint64_t v15 = (uint64_t *)&v9[OBJC_IVAR____TtC11MobileNotesP33_3A26B74EEED685164DF9267FE58E345F17TableSearchResult_title];
  *unint64_t v15 = v12;
  v15[1] = v14;

  v17.receiver = v9;
  v17.super_class = ObjectType;
  return [super init];
}

uint64_t sub_1003F1EE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1003F1F4C()
{
  unint64_t result = qword_1006A64F8;
  if (!qword_1006A64F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A64F8);
  }
  return result;
}

unint64_t sub_1003F1FA4()
{
  unint64_t result = qword_1006A6500;
  if (!qword_1006A6500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A6500);
  }
  return result;
}

uint64_t sub_1003F1FF8()
{
  return sub_100019168(&qword_1006A9020, (void (*)(uint64_t))type metadata accessor for TableEntity);
}

unint64_t sub_1003F2044()
{
  unint64_t result = qword_1006A6520;
  if (!qword_1006A6520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A6520);
  }
  return result;
}

uint64_t sub_1003F2098()
{
  return sub_100019168(&qword_10069D3D8, (void (*)(uint64_t))type metadata accessor for TableEntity);
}

unint64_t sub_1003F20E4()
{
  unint64_t result = qword_1006A6530;
  if (!qword_1006A6530)
  {
    sub_10001DFF4(&qword_10069EBF0);
    sub_100019168(&qword_10069D3D8, (void (*)(uint64_t))type metadata accessor for TableEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A6530);
  }
  return result;
}

uint64_t sub_1003F2188()
{
  return type metadata accessor for TableSearchResult(0);
}

uint64_t sub_1003F2190()
{
  uint64_t result = type metadata accessor for TableID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisibleTablesQuery()
{
  return &type metadata for VisibleTablesQuery;
}

uint64_t type metadata accessor for VisibleTablesQuery.ComparatorKeyPath()
{
  return sub_100183A74();
}

char *initializeBufferWithCopyOfBuffer for VisibleTablesQuery.Comparator(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v10 = type metadata accessor for ICQueryType();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        break;
      case 2u:
        *(void *)a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v11 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v11;
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v12 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v12;
        *((void *)a1 + 2) = *((void *)a2 + 2);
        swift_retain();
        swift_bridgeObjectRetain();
        break;
      case 5u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
      case 0xAu:
        long long v13 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v13;
        (**(void (***)(void *, const void *))(v13 - 8))(a1, a2);
        uint64_t v14 = *((void *)a2 + 8);
        *((void *)a1 + 8) = v14;
        (**(void (***)(uint64_t, uint64_t))(v14 - 8))((uint64_t)(a1 + 40), (uint64_t)(a2 + 40));
        break;
      case 0xBu:
        long long v15 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v15;
        (**(void (***)(void *, const void *))(v15 - 8))(a1, a2);
        uint64_t v16 = *((void *)a2 + 8);
        *((void *)a1 + 8) = v16;
        (**(void (***)(uint64_t, uint64_t))(v16 - 8))((uint64_t)(a1 + 40), (uint64_t)(a2 + 40));
        uint64_t v17 = *((void *)a2 + 12);
        *((void *)a1 + 12) = v17;
        (**(void (***)(uint64_t, uint64_t))(v17 - 8))((uint64_t)(a1 + 72), (uint64_t)(a2 + 72));
        break;
      default:
        uint64_t v6 = (int *)type metadata accessor for FolderEntity();
        uint64_t v7 = *((void *)v6 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
        {
          uint64_t v8 = sub_10002F214(&qword_10069B260);
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        }
        else
        {
          uint64_t v18 = type metadata accessor for FolderID();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
          uint64_t v19 = v6[5];
          uint64_t v20 = &a1[v19];
          uint64_t v21 = &a2[v19];
          uint64_t v22 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
          uint64_t v23 = v6[6];
          id v24 = &a1[v23];
          Swift::String v25 = &a2[v23];
          uint64_t v26 = *((void *)v25 + 1);
          *(void *)id v24 = *(void *)v25;
          *((void *)v24 + 1) = v26;
          uint64_t v27 = v6[7];
          id v28 = &a1[v27];
          uint64_t v29 = &a2[v27];
          uint64_t v30 = *((void *)v29 + 1);
          *(void *)id v28 = *(void *)v29;
          *((void *)v28 + 1) = v30;
          a1[v6[8]] = a2[v6[8]];
          a1[v6[9]] = a2[v6[9]];
          unint64_t v31 = *(void (**)(char *, void, uint64_t, int *))(v7 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v31(a1, 0, 1, v6);
        }
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for VisibleTablesQuery.Comparator(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v4 = type metadata accessor for FolderEntity();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4);
      if (!result)
      {
        uint64_t v5 = type metadata accessor for FolderID();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
        uint64_t v6 = a1 + *(int *)(v4 + 20);
        uint64_t v7 = type metadata accessor for URL();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
      return result;
    case 1:
      uint64_t v8 = type metadata accessor for ICQueryType();
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
      return v9(a1, v8);
    case 2:
    case 3:
      goto LABEL_11;
    case 4:
      swift_release();
LABEL_11:
      return swift_bridgeObjectRelease();
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      sub_100018FE8(a1);
      uint64_t v3 = a1 + 40;
      goto LABEL_3;
    case 11:
      sub_100018FE8(a1);
      sub_100018FE8(a1 + 40);
      uint64_t v3 = a1 + 72;
LABEL_3:
      uint64_t result = sub_100018FE8(v3);
      break;
    default:
      return result;
  }
  return result;
}

char *initializeWithCopy for VisibleTablesQuery.Comparator(char *a1, char *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v7 = type metadata accessor for ICQueryType();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      break;
    case 2u:
      *(void *)a1 = *(void *)a2;
      swift_bridgeObjectRetain();
      break;
    case 3u:
      uint64_t v8 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v8;
      swift_bridgeObjectRetain();
      break;
    case 4u:
      uint64_t v9 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v9;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      swift_retain();
      swift_bridgeObjectRetain();
      break;
    case 5u:
    case 6u:
    case 7u:
    case 8u:
    case 9u:
    case 0xAu:
      long long v10 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v10;
      (**(void (***)(void *, const void *))(v10 - 8))(a1, a2);
      uint64_t v11 = *((void *)a2 + 8);
      *((void *)a1 + 8) = v11;
      (**(void (***)(uint64_t, uint64_t))(v11 - 8))((uint64_t)(a1 + 40), (uint64_t)(a2 + 40));
      break;
    case 0xBu:
      long long v12 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v12;
      (**(void (***)(void *, const void *))(v12 - 8))(a1, a2);
      uint64_t v13 = *((void *)a2 + 8);
      *((void *)a1 + 8) = v13;
      (**(void (***)(uint64_t, uint64_t))(v13 - 8))((uint64_t)(a1 + 40), (uint64_t)(a2 + 40));
      uint64_t v14 = *((void *)a2 + 12);
      *((void *)a1 + 12) = v14;
      (**(void (***)(uint64_t, uint64_t))(v14 - 8))((uint64_t)(a1 + 72), (uint64_t)(a2 + 72));
      break;
    default:
      uint64_t v4 = (int *)type metadata accessor for FolderEntity();
      uint64_t v5 = *((void *)v4 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v5 + 48))(a2, 1, v4))
      {
        uint64_t v6 = sub_10002F214(&qword_10069B260);
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        uint64_t v15 = type metadata accessor for FolderID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
        uint64_t v16 = v4[5];
        uint64_t v17 = &a1[v16];
        uint64_t v18 = &a2[v16];
        uint64_t v19 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
        uint64_t v20 = v4[6];
        uint64_t v21 = &a1[v20];
        uint64_t v22 = &a2[v20];
        uint64_t v23 = *((void *)v22 + 1);
        *(void *)uint64_t v21 = *(void *)v22;
        *((void *)v21 + 1) = v23;
        uint64_t v24 = v4[7];
        Swift::String v25 = &a1[v24];
        uint64_t v26 = &a2[v24];
        uint64_t v27 = *((void *)v26 + 1);
        *(void *)Swift::String v25 = *(void *)v26;
        *((void *)v25 + 1) = v27;
        a1[v4[8]] = a2[v4[8]];
        a1[v4[9]] = a2[v4[9]];
        id v28 = *(void (**)(char *, void, uint64_t, int *))(v5 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v28(a1, 0, 1, v4);
      }
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for VisibleTablesQuery.Comparator(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1003F3B54((uint64_t)a1, type metadata accessor for VisibleTablesQuery.Comparator);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v7 = type metadata accessor for ICQueryType();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        break;
      case 2u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        break;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        break;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_retain();
        swift_bridgeObjectRetain();
        break;
      case 5u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
      case 0xAu:
        uint64_t v8 = a2[3];
        a1[3] = v8;
        a1[4] = a2[4];
        (**(void (***)(void *, void *))(v8 - 8))(a1, a2);
        uint64_t v9 = a2[8];
        a1[8] = v9;
        (**(void (***)(uint64_t, uint64_t))(v9 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
        break;
      case 0xBu:
        uint64_t v10 = a2[3];
        a1[3] = v10;
        a1[4] = a2[4];
        (**(void (***)(void *, void *))(v10 - 8))(a1, a2);
        uint64_t v11 = a2[8];
        a1[8] = v11;
        (**(void (***)(uint64_t, uint64_t))(v11 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
        uint64_t v12 = a2[12];
        a1[12] = v12;
        (**(void (***)(uint64_t, uint64_t))(v12 - 8))((uint64_t)(a1 + 9), (uint64_t)(a2 + 9));
        break;
      default:
        uint64_t v4 = (int *)type metadata accessor for FolderEntity();
        uint64_t v5 = *((void *)v4 - 1);
        if ((*(unsigned int (**)(void *, uint64_t, int *))(v5 + 48))(a2, 1, v4))
        {
          uint64_t v6 = sub_10002F214(&qword_10069B260);
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        }
        else
        {
          uint64_t v13 = type metadata accessor for FolderID();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
          uint64_t v14 = v4[5];
          uint64_t v15 = (char *)a1 + v14;
          uint64_t v16 = (char *)a2 + v14;
          uint64_t v17 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
          uint64_t v18 = v4[6];
          uint64_t v19 = (void *)((char *)a1 + v18);
          uint64_t v20 = (void *)((char *)a2 + v18);
          *uint64_t v19 = *v20;
          v19[1] = v20[1];
          uint64_t v21 = v4[7];
          uint64_t v22 = (void *)((char *)a1 + v21);
          uint64_t v23 = (void *)((char *)a2 + v21);
          *uint64_t v22 = *v23;
          v22[1] = v23[1];
          *((unsigned char *)a1 + v4[8]) = *((unsigned char *)a2 + v4[8]);
          *((unsigned char *)a1 + v4[9]) = *((unsigned char *)a2 + v4[9]);
          uint64_t v24 = *(void (**)(void *, void, uint64_t, int *))(v5 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v24(a1, 0, 1, v4);
        }
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1003F3B54(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *assignWithTake for VisibleTablesQuery.Comparator(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1003F3B54((uint64_t)a1, type metadata accessor for VisibleTablesQuery.Comparator);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = type metadata accessor for ICQueryType();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = (int *)type metadata accessor for FolderEntity();
      uint64_t v8 = *((void *)v7 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = sub_10002F214(&qword_10069B260);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        uint64_t v11 = type metadata accessor for FolderID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
        uint64_t v12 = v7[5];
        uint64_t v13 = &a1[v12];
        uint64_t v14 = &a2[v12];
        uint64_t v15 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
        *(_OWORD *)&a1[v7[6]] = *(_OWORD *)&a2[v7[6]];
        *(_OWORD *)&a1[v7[7]] = *(_OWORD *)&a2[v7[7]];
        a1[v7[8]] = a2[v7[8]];
        a1[v7[9]] = a2[v7[9]];
        (*(void (**)(char *, void, uint64_t, int *))(v8 + 56))(a1, 0, 1, v7);
      }
      goto LABEL_9;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_1003F3E28()
{
  sub_10029F4BC();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ICQueryType();
    if (v1 <= 0x3F) {
      swift_initEnumMetadataMultiPayload();
    }
  }
}

uint64_t sub_1003F3F2C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for TableEntity();
  uint64_t result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

void sub_1003F3F74(void *a1@<X8>)
{
  sub_1003EEE1C(*(void **)(v1 + 32), a1);
}

void sub_1003F3F94(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_1003F3FB0()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

id sub_1003F3FE8@<X0>(void *a1@<X8>)
{
  id result = sub_1003EF1E0(*(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
  *a1 = result;
  return result;
}

unint64_t sub_1003F4030@<X0>(void *a1@<X8>)
{
  return sub_1003EA384(a1);
}

uint64_t sub_1003F4050()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100032974(v0, qword_1006A6770);
  sub_10003293C(v0, (uint64_t)qword_1006A6770);
  return static Logger.audioTranscription.getter();
}

uint64_t sub_1003F409C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  v7[11] = type metadata accessor for AttributedString.CharacterView();
  v7[12] = swift_task_alloc();
  sub_10002F214(&qword_1006A6830);
  v7[13] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for SummarizationResult();
  v7[14] = v8;
  v7[15] = *(void *)(v8 - 8);
  v7[16] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for AttributedString();
  v7[17] = v9;
  v7[18] = *(void *)(v9 - 8);
  v7[19] = swift_task_alloc();
  type metadata accessor for MainActor();
  v7[20] = static MainActor.shared.getter();
  uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
  v7[21] = v11;
  v7[22] = v10;
  return _swift_task_switch(sub_1003F4250, v11, v10);
}

uint64_t sub_1003F4250()
{
  type metadata accessor for ICModelAvailabilityManager();
  uint64_t v1 = (void *)static ICModelAvailabilityManager.shared.getter();
  unsigned int v2 = [v1 supportsGreymatter];

  if (v2)
  {
    static TranscriptViewModelSegment.transcriptStringFromSegments(segments:)();
    type metadata accessor for SummarizationManager();
    AttributedString.characters.getter();
    sub_1003F9530(&qword_1006A01B0, (void (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView);
    uint64_t v3 = String.init<A>(_:)();
    uint64_t v5 = v4;
    v0[23] = v4;
    uint64_t v6 = (void *)swift_task_alloc();
    v0[24] = v6;
    void *v6 = v0;
    v6[1] = sub_1003F4404;
    uint64_t v7 = v0[13];
    return static SummarizationManager.generateTopLineTranscriptSummary(transcript:)(v7, v3, v5);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_1003F4404()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 200) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 176);
  uint64_t v4 = *(void *)(v2 + 168);
  if (v0) {
    uint64_t v5 = sub_1003F4B20;
  }
  else {
    uint64_t v5 = sub_1003F4558;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1003F4558()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[13];
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = v0[13];
    (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
    sub_10002B754(v4, &qword_1006A6830);
    goto LABEL_17;
  }
  uint64_t v5 = (void *)v0[8];
  (*(void (**)(void, void, void))(v0[15] + 32))(v0[16], v0[13], v0[14]);
  id v6 = [v5 audioModel];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = v0[25];
    ICAttachmentAudioModel.saveTopLineSummaryToAttachment(summarizationResult:)();
    if (v8)
    {
      uint64_t v10 = v0[15];
      uint64_t v9 = v0[16];
      uint64_t v11 = v0[14];

      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
      (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
      if (qword_10069B010 != -1) {
        swift_once();
      }
      uint64_t v13 = (void *)v0[9];
      uint64_t v12 = (void *)v0[10];
      uint64_t v14 = type metadata accessor for Logger();
      sub_10003293C(v14, (uint64_t)qword_1006A6770);
      id v15 = v13;
      id v16 = v12;
      swift_errorRetain();
      id v17 = v15;
      id v18 = v16;
      swift_errorRetain();
      uint64_t v19 = Logger.logObject.getter();
      os_log_type_t v20 = static os_log_type_t.error.getter();
      BOOL v21 = os_log_type_enabled(v19, v20);
      uint64_t v22 = (void *)v0[9];
      uint64_t v23 = (void *)v0[10];
      if (v21)
      {
        uint64_t v24 = swift_slowAlloc();
        uint64_t v49 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v24 = 138412802;
        os_log_type_t type = v20;
        v0[2] = v22;
        id v25 = v22;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v49 = v22;

        *(_WORD *)(v24 + 12) = 2112;
        v0[3] = v23;
        id v26 = v23;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v49[1] = v23;

        *(_WORD *)(v24 + 22) = 2112;
        swift_errorRetain();
        uint64_t v27 = _swift_stdlib_bridgeErrorToNSError();
        v0[4] = v27;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v49[2] = v27;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v19, type, "Failed to generate topline summary for call recording with note ID: %@ attachment ID: %@ {error: %@}", (uint8_t *)v24, 0x20u);
        sub_10002F214(&qword_10069FD50);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();

        swift_errorRelease();
        swift_errorRelease();
      }
      goto LABEL_17;
    }
  }
  if (qword_10069B010 != -1) {
    swift_once();
  }
  uint64_t v29 = (void *)v0[9];
  id v28 = (void *)v0[10];
  uint64_t v30 = type metadata accessor for Logger();
  sub_10003293C(v30, (uint64_t)qword_1006A6770);
  id v31 = v29;
  id v32 = v28;
  id v33 = v31;
  id v34 = v32;
  uint64_t v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.info.getter();
  BOOL v37 = os_log_type_enabled(v35, v36);
  uint64_t v38 = v0[9];
  unint64_t v39 = (void *)v0[10];
  if (v37)
  {
    os_log_type_t v51 = v36;
    uint64_t v40 = swift_slowAlloc();
    id v41 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v40 = 138412546;
    v0[5] = v38;
    uint64_t v42 = v38;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v41 = v38;

    *(_WORD *)(v40 + 12) = 2112;
    v0[6] = v39;
    id v43 = v39;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v41[1] = v39;

    _os_log_impl((void *)&_mh_execute_header, v35, v51, "successfully generated topline summary for call recording with note ID: %@ attachment ID: %@", (uint8_t *)v40, 0x16u);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v35 = v38;
  }

  uint64_t v45 = v0[18];
  uint64_t v44 = v0[19];
  uint64_t v46 = v0[17];
  (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v46);
LABEL_17:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v47 = (uint64_t (*)(void))v0[1];
  return v47();
}

uint64_t sub_1003F4B20()
{
  swift_release();
  (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
  if (qword_10069B010 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[9];
  uint64_t v2 = (void *)v0[10];
  uint64_t v3 = type metadata accessor for Logger();
  sub_10003293C(v3, (uint64_t)qword_1006A6770);
  id v4 = v1;
  id v5 = v2;
  swift_errorRetain();
  id v6 = v4;
  id v7 = v5;
  swift_errorRetain();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.error.getter();
  BOOL v10 = os_log_type_enabled(v8, v9);
  uint64_t v12 = (void *)v0[9];
  uint64_t v11 = (void *)v0[10];
  if (v10)
  {
    os_log_type_t type = v9;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 138412802;
    v0[2] = v12;
    os_log_t log = v8;
    id v15 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v14 = v12;

    *(_WORD *)(v13 + 12) = 2112;
    v0[3] = v11;
    id v16 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v14[1] = v11;

    *(_WORD *)(v13 + 22) = 2112;
    swift_errorRetain();
    uint64_t v17 = _swift_stdlib_bridgeErrorToNSError();
    v0[4] = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v14[2] = v17;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, type, "Failed to generate topline summary for call recording with note ID: %@ attachment ID: %@ {error: %@}", (uint8_t *)v13, 0x20u);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

Swift::Int sub_1003F4E1C(unint64_t *a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for TranscriptViewModelSegment() - 8);
  unint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = sub_1002E0880(v3);
  }
  uint64_t v4 = *(void *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_1003F4EFC(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_1003F4EC8()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CallTranscriptionImporter()
{
  return self;
}

Swift::Int sub_1003F4EFC(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for TranscriptViewModelSegment();
  uint64_t v182 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  v179 = (char *)&v169 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  v190 = (char *)&v169 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  v185 = (char *)&v169 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v169 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  id v16 = (char *)&v169 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v169 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  v174 = (char *)&v169 - v21;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v169 - v22;
  v194 = a1;
  Swift::Int v24 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v24);
  if (result >= v24)
  {
    if (v24 < 0) {
      goto LABEL_149;
    }
    if (v24) {
      return sub_1003F5BE0(0, v24, 1, v194);
    }
    return result;
  }
  if (v24 >= 0) {
    uint64_t v26 = v24;
  }
  else {
    uint64_t v26 = v24 + 1;
  }
  if (v24 < -1) {
    goto LABEL_157;
  }
  Swift::Int v27 = result;
  if (v24 < 2)
  {
    unint64_t v181 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v182 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v182 + 80));
    v171 = _swiftEmptyArrayStorage;
    if (v24 != 1)
    {
      id v33 = (char *)_swiftEmptyArrayStorage;
      unint64_t v34 = _swiftEmptyArrayStorage[2];
LABEL_115:
      if (v34 >= 2)
      {
        uint64_t v161 = *v194;
        do
        {
          unint64_t v162 = v34 - 2;
          if (v34 < 2) {
            goto LABEL_144;
          }
          if (!v161) {
            goto LABEL_156;
          }
          v163 = v33;
          v164 = v33 + 32;
          uint64_t v165 = *(void *)&v33[16 * v162 + 32];
          uint64_t v166 = *(void *)&v33[16 * v34 + 24];
          sub_1003F5F10(v161 + *(void *)(v182 + 72) * v165, v161 + *(void *)(v182 + 72) * *(void *)&v164[16 * v34 - 16], (char *)(v161 + *(void *)(v182 + 72) * v166), v181);
          if (v2) {
            break;
          }
          if (v166 < v165) {
            goto LABEL_145;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v163 = sub_100190A20((uint64_t)v163);
          }
          if (v162 >= *((void *)v163 + 2)) {
            goto LABEL_146;
          }
          v167 = &v163[16 * v162 + 32];
          *(void *)v167 = v165;
          *((void *)v167 + 1) = v166;
          unint64_t v168 = *((void *)v163 + 2);
          if (v34 > v168) {
            goto LABEL_147;
          }
          id v33 = v163;
          memmove(&v163[16 * v34 + 16], &v163[16 * v34 + 32], 16 * (v168 - v34));
          *((void *)v163 + 2) = v168 - 1;
          unint64_t v34 = v168 - 1;
        }
        while (v168 > 2);
      }
LABEL_126:
      swift_bridgeObjectRelease();
      v171[2] = 0;
      return swift_bridgeObjectRelease();
    }
    v172 = v23;
    v177 = v19;
    v178 = v16;
    v184 = v13;
    uint64_t v30 = v182;
  }
  else
  {
    v172 = v23;
    v177 = v19;
    v178 = v16;
    v184 = v13;
    uint64_t v28 = v26 >> 1;
    uint64_t v29 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v29 + 16) = v28;
    uint64_t v30 = v182;
    unint64_t v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    v171 = (void *)v29;
    unint64_t v181 = v29 + v31;
  }
  Swift::Int v32 = 0;
  v187 = (void (**)(char *, uint64_t))(v30 + 8);
  uint64_t v188 = v30 + 16;
  v192 = (void (**)(char *, uint64_t, uint64_t))(v30 + 32);
  id v33 = (char *)_swiftEmptyArrayStorage;
  uint64_t v195 = v4;
  Swift::Int v175 = v27;
  while (1)
  {
    Swift::Int v35 = v32;
    Swift::Int v36 = v32 + 1;
    Swift::Int v180 = v32;
    if (v32 + 1 >= v24)
    {
      Swift::Int v51 = v32;
      goto LABEL_66;
    }
    Swift::Int v37 = *v194;
    uint64_t v38 = v4;
    uint64_t v39 = *(void *)(v182 + 72);
    Swift::Int v189 = v32 + 1;
    uint64_t v40 = *(void (**)(char *, Swift::Int, uint64_t))(v182 + 16);
    id v41 = v172;
    v40(v172, v37 + v39 * v36, v38);
    Swift::Int v176 = v37;
    uint64_t v193 = v39;
    Swift::Int v42 = v37 + v39 * v35;
    id v43 = v41;
    uint64_t v44 = v174;
    v40(v174, v42, v195);
    TranscriptViewModelSegment.timestamp.getter();
    double v46 = v45;
    TranscriptViewModelSegment.timestamp.getter();
    Swift::Int v191 = v24;
    if (v46 == v47)
    {
      TranscriptViewModelSegment.duration.getter();
      double v49 = v48;
      TranscriptViewModelSegment.duration.getter();
    }
    else
    {
      TranscriptViewModelSegment.timestamp.getter();
      double v49 = v52;
      TranscriptViewModelSegment.timestamp.getter();
    }
    LODWORD(v186) = v49 < v50;
    uint64_t v53 = *v187;
    uint64_t v54 = v195;
    (*v187)(v44, v195);
    v53(v43, v54);
    Swift::Int v36 = v180 + 2;
    Swift::Int v55 = v191;
    if (v180 + 2 < v191)
    {
      v173 = v33;
      v189 *= v193;
      Swift::Int v56 = v176;
      uint64_t v183 = v193 * v36;
      while (1)
      {
        Swift::Int v57 = v36;
        id v58 = v177;
        uint64_t v59 = v195;
        v40(v177, v56 + v183, v195);
        uint64_t v60 = v178;
        v40(v178, v56 + v189, v59);
        TranscriptViewModelSegment.timestamp.getter();
        double v62 = v61;
        TranscriptViewModelSegment.timestamp.getter();
        if (v62 == v63)
        {
          TranscriptViewModelSegment.duration.getter();
          double v65 = v64;
          TranscriptViewModelSegment.duration.getter();
        }
        else
        {
          TranscriptViewModelSegment.timestamp.getter();
          double v65 = v67;
          TranscriptViewModelSegment.timestamp.getter();
        }
        int v68 = v65 < v66;
        uint64_t v69 = v60;
        uint64_t v70 = v195;
        v53(v69, v195);
        v53(v58, v70);
        if (v186 != v68) {
          break;
        }
        Swift::Int v36 = v57 + 1;
        v56 += v193;
        Swift::Int v55 = v191;
        if (v191 == v36)
        {
          Swift::Int v36 = v191;
          id v33 = v173;
          goto LABEL_30;
        }
      }
      id v33 = v173;
      Swift::Int v36 = v57;
      Swift::Int v55 = v191;
    }
LABEL_30:
    Swift::Int v71 = v175;
    Swift::Int v51 = v180;
    if (!v186) {
      break;
    }
    if (v36 < v180) {
      goto LABEL_150;
    }
    if (v180 >= v36) {
      break;
    }
    v173 = v33;
    uint64_t v72 = 0;
    uint64_t v73 = v193 * (v36 - 1);
    uint64_t v74 = v36 * v193;
    Swift::Int v75 = v180;
    uint64_t v76 = v180 * v193;
    uint64_t v77 = v195;
    Swift::Int v189 = v36;
    do
    {
      if (v75 != v36 + v72 - 1)
      {
        Swift::Int v79 = v176;
        if (!v176) {
          goto LABEL_155;
        }
        uint64_t v80 = v2;
        unint64_t v81 = v176 + v76;
        Swift::Int v82 = v176 + v73;
        v186 = *v192;
        v186(v179, v176 + v76, v195);
        if (v76 < v73 || v81 >= v79 + v74)
        {
          uint64_t v78 = v195;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          uint64_t v78 = v195;
          if (v76 != v73) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v186((char *)v82, (uint64_t)v179, v78);
        uint64_t v77 = v78;
        uint64_t v2 = v80;
        Swift::Int v36 = v189;
      }
      ++v75;
      --v72;
      v73 -= v193;
      v74 -= v193;
      v76 += v193;
    }
    while (v75 < v36 + v72);
    id v33 = v173;
    Swift::Int v71 = v175;
    Swift::Int v51 = v180;
    Swift::Int v55 = v191;
    if (v36 < v191) {
      goto LABEL_46;
    }
LABEL_66:
    if (v36 < v51) {
      goto LABEL_143;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v189 = v36;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      id v33 = sub_1001904C8(0, *((void *)v33 + 2) + 1, 1, v33);
    }
    unint64_t v111 = *((void *)v33 + 2);
    unint64_t v110 = *((void *)v33 + 3);
    unint64_t v34 = v111 + 1;
    if (v111 >= v110 >> 1) {
      id v33 = sub_1001904C8((char *)(v110 > 1), v111 + 1, 1, v33);
    }
    *((void *)v33 + 2) = v34;
    uint64_t v112 = v33 + 32;
    uint64_t v113 = &v33[16 * v111 + 32];
    Swift::Int v114 = v189;
    *(void *)uint64_t v113 = v51;
    *((void *)v113 + 1) = v114;
    if (v111)
    {
      uint64_t v4 = v195;
      while (1)
      {
        unint64_t v115 = v34 - 1;
        if (v34 >= 4)
        {
          uint64_t v120 = &v112[16 * v34];
          uint64_t v121 = *((void *)v120 - 8);
          uint64_t v122 = *((void *)v120 - 7);
          BOOL v126 = __OFSUB__(v122, v121);
          uint64_t v123 = v122 - v121;
          if (v126) {
            goto LABEL_132;
          }
          uint64_t v125 = *((void *)v120 - 6);
          uint64_t v124 = *((void *)v120 - 5);
          BOOL v126 = __OFSUB__(v124, v125);
          uint64_t v118 = v124 - v125;
          char v119 = v126;
          if (v126) {
            goto LABEL_133;
          }
          unint64_t v127 = v34 - 2;
          uint64_t v128 = &v112[16 * v34 - 32];
          uint64_t v130 = *(void *)v128;
          uint64_t v129 = *((void *)v128 + 1);
          BOOL v126 = __OFSUB__(v129, v130);
          uint64_t v131 = v129 - v130;
          if (v126) {
            goto LABEL_135;
          }
          BOOL v126 = __OFADD__(v118, v131);
          uint64_t v132 = v118 + v131;
          if (v126) {
            goto LABEL_138;
          }
          if (v132 >= v123)
          {
            uint64_t v150 = &v112[16 * v115];
            uint64_t v152 = *(void *)v150;
            uint64_t v151 = *((void *)v150 + 1);
            BOOL v126 = __OFSUB__(v151, v152);
            uint64_t v153 = v151 - v152;
            if (v126) {
              goto LABEL_142;
            }
            BOOL v143 = v118 < v153;
            goto LABEL_104;
          }
        }
        else
        {
          if (v34 != 3)
          {
            uint64_t v144 = *((void *)v33 + 4);
            uint64_t v145 = *((void *)v33 + 5);
            BOOL v126 = __OFSUB__(v145, v144);
            uint64_t v137 = v145 - v144;
            char v138 = v126;
            goto LABEL_98;
          }
          uint64_t v117 = *((void *)v33 + 4);
          uint64_t v116 = *((void *)v33 + 5);
          BOOL v126 = __OFSUB__(v116, v117);
          uint64_t v118 = v116 - v117;
          char v119 = v126;
        }
        if (v119) {
          goto LABEL_134;
        }
        unint64_t v127 = v34 - 2;
        v133 = &v112[16 * v34 - 32];
        uint64_t v135 = *(void *)v133;
        uint64_t v134 = *((void *)v133 + 1);
        BOOL v136 = __OFSUB__(v134, v135);
        uint64_t v137 = v134 - v135;
        char v138 = v136;
        if (v136) {
          goto LABEL_137;
        }
        v139 = &v112[16 * v115];
        uint64_t v141 = *(void *)v139;
        uint64_t v140 = *((void *)v139 + 1);
        BOOL v126 = __OFSUB__(v140, v141);
        uint64_t v142 = v140 - v141;
        if (v126) {
          goto LABEL_140;
        }
        if (__OFADD__(v137, v142)) {
          goto LABEL_141;
        }
        if (v137 + v142 >= v118)
        {
          BOOL v143 = v118 < v142;
LABEL_104:
          if (v143) {
            unint64_t v115 = v127;
          }
          goto LABEL_106;
        }
LABEL_98:
        if (v138) {
          goto LABEL_136;
        }
        v146 = &v112[16 * v115];
        uint64_t v148 = *(void *)v146;
        uint64_t v147 = *((void *)v146 + 1);
        BOOL v126 = __OFSUB__(v147, v148);
        uint64_t v149 = v147 - v148;
        if (v126) {
          goto LABEL_139;
        }
        if (v149 < v137) {
          goto LABEL_15;
        }
LABEL_106:
        unint64_t v154 = v115 - 1;
        if (v115 - 1 >= v34)
        {
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
          goto LABEL_152;
        }
        if (!*v194) {
          goto LABEL_154;
        }
        v155 = v33;
        v156 = &v112[16 * v154];
        uint64_t v157 = *(void *)v156;
        v158 = &v112[16 * v115];
        uint64_t v159 = *((void *)v158 + 1);
        sub_1003F5F10(*v194 + *(void *)(v182 + 72) * *(void *)v156, *v194 + *(void *)(v182 + 72) * *(void *)v158, (char *)(*v194 + *(void *)(v182 + 72) * v159), v181);
        if (v2) {
          goto LABEL_126;
        }
        if (v159 < v157) {
          goto LABEL_129;
        }
        if (v115 > *((void *)v155 + 2)) {
          goto LABEL_130;
        }
        *(void *)v156 = v157;
        *(void *)&v112[16 * v154 + 8] = v159;
        unint64_t v160 = *((void *)v155 + 2);
        if (v115 >= v160) {
          goto LABEL_131;
        }
        id v33 = v155;
        unint64_t v34 = v160 - 1;
        memmove(&v112[16 * v115], v158 + 16, 16 * (v160 - 1 - v115));
        *((void *)v155 + 2) = v160 - 1;
        uint64_t v4 = v195;
        if (v160 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v34 = 1;
    uint64_t v4 = v195;
LABEL_15:
    Swift::Int v24 = v194[1];
    Swift::Int v32 = v189;
    if (v189 >= v24) {
      goto LABEL_115;
    }
  }
  uint64_t v77 = v195;
  if (v36 >= v55) {
    goto LABEL_66;
  }
LABEL_46:
  if (__OFSUB__(v36, v51)) {
    goto LABEL_148;
  }
  if (v36 - v51 >= v71) {
    goto LABEL_66;
  }
  if (__OFADD__(v51, v71)) {
    goto LABEL_151;
  }
  if (v51 + v71 >= v55) {
    Swift::Int v83 = v55;
  }
  else {
    Swift::Int v83 = v51 + v71;
  }
  if (v83 >= v51)
  {
    if (v36 != v83)
    {
      v173 = v33;
      uint64_t v170 = v2;
      uint64_t v84 = *(void (**)(char *, uint64_t, uint64_t))(v182 + 72);
      uint64_t v183 = *(void *)(v182 + 16);
      uint64_t v193 = (void)v84 * (v36 - 1);
      v186 = v84;
      Swift::Int v85 = v36 * (void)v84;
      Swift::Int v176 = v83;
      do
      {
        uint64_t v87 = 0;
        Swift::Int v88 = v51;
        Swift::Int v189 = v36;
        while (1)
        {
          uint64_t v89 = *v194;
          Swift::Int v90 = v85;
          Swift::Int v191 = v85 + v87;
          uint64_t v91 = v85 + v87 + v89;
          uint64_t v93 = (void (*)(char *, uint64_t, uint64_t))v183;
          uint64_t v92 = v184;
          ((void (*)(char *, uint64_t, uint64_t))v183)(v184, v91, v77);
          uint64_t v94 = v193 + v87 + v89;
          uint64_t v95 = v185;
          v93(v185, v94, v77);
          TranscriptViewModelSegment.timestamp.getter();
          double v97 = v96;
          TranscriptViewModelSegment.timestamp.getter();
          if (v97 == v98)
          {
            TranscriptViewModelSegment.duration.getter();
            double v100 = v99;
            TranscriptViewModelSegment.duration.getter();
          }
          else
          {
            TranscriptViewModelSegment.timestamp.getter();
            double v100 = v102;
            TranscriptViewModelSegment.timestamp.getter();
          }
          v103 = v95;
          BOOL v104 = v100 < v101;
          v105 = *v187;
          (*v187)(v103, v77);
          v105(v92, v77);
          if (!v104) {
            break;
          }
          uint64_t v106 = *v194;
          if (!*v194) {
            goto LABEL_153;
          }
          Swift::Int v85 = v90;
          id v107 = (char *)(v106 + v193 + v87);
          v108 = *v192;
          (*v192)(v190, v106 + v90 + v87, v195);
          swift_arrayInitWithTakeFrontToBack();
          uint64_t v77 = v195;
          v108(v107, (uint64_t)v190, v195);
          v87 -= (uint64_t)v186;
          ++v88;
          Swift::Int v86 = v189;
          if (v189 == v88) {
            goto LABEL_56;
          }
        }
        Swift::Int v86 = v189;
        Swift::Int v85 = v90;
LABEL_56:
        Swift::Int v36 = v86 + 1;
        v193 += (uint64_t)v186;
        v85 += (Swift::Int)v186;
        Swift::Int v51 = v180;
      }
      while (v36 != v176);
      Swift::Int v36 = v176;
      uint64_t v2 = v170;
      id v33 = v173;
    }
    goto LABEL_66;
  }
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003F5BE0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v43 = a1;
  uint64_t v7 = type metadata accessor for TranscriptViewModelSegment();
  uint64_t v8 = __chkstk_darwin(v7);
  double v52 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  double v47 = (char *)&v41 - v11;
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v41 - v14;
  uint64_t v50 = a3;
  uint64_t v42 = a2;
  if (a3 != a2)
  {
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    uint64_t v16 = v13 + 16;
    uint64_t v18 = *(void *)(v16 + 56);
    uint64_t v44 = (void (**)(char *, uint64_t))(v16 - 8);
    double v45 = v17;
    uint64_t v46 = v16;
    Swift::Int v51 = (void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    uint64_t v19 = v18 * (v50 - 1);
    uint64_t v48 = v18;
    uint64_t v55 = v18 * v50;
LABEL_5:
    uint64_t v20 = 0;
    uint64_t v21 = v43;
    uint64_t v49 = v19;
    while (1)
    {
      uint64_t v22 = *a4;
      uint64_t v54 = v55 + v20;
      uint64_t v23 = v45;
      v45(v15, v55 + v20 + v22, v7);
      uint64_t v53 = v19 + v20;
      uint64_t v24 = v19 + v20 + v22;
      id v25 = v47;
      v23(v47, v24, v7);
      uint64_t v26 = v25;
      TranscriptViewModelSegment.timestamp.getter();
      double v28 = v27;
      TranscriptViewModelSegment.timestamp.getter();
      if (v28 == v29)
      {
        TranscriptViewModelSegment.duration.getter();
        double v31 = v30;
        TranscriptViewModelSegment.duration.getter();
      }
      else
      {
        TranscriptViewModelSegment.timestamp.getter();
        double v31 = v33;
        TranscriptViewModelSegment.timestamp.getter();
      }
      BOOL v34 = v31 < v32;
      Swift::Int v35 = v15;
      Swift::Int v36 = *v44;
      (*v44)(v26, v7);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v36)(v35, v7);
      uint64_t v15 = v35;
      uint64_t v19 = v49;
      if (!v34)
      {
LABEL_4:
        v19 += v48;
        v55 += v48;
        if (++v50 == v42) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v37 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v38 = a4;
      uint64_t v39 = v37 + v49 + v20;
      uint64_t v40 = *v51;
      (*v51)(v52, v37 + v55 + v20, v7);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v40)(v39, v52, v7);
      v20 -= v48;
      ++v21;
      a4 = v38;
      uint64_t v15 = v35;
      if (v50 == v21) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1003F5F10(unint64_t a1, unint64_t a2, char *a3, unint64_t a4)
{
  uint64_t v8 = type metadata accessor for TranscriptViewModelSegment();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  Swift::Int v71 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v72 = (char *)&v66 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v66 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v66 - v17;
  uint64_t v75 = *(void *)(v19 + 72);
  if (!v75)
  {
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  if (a2 - a1 == 0x8000000000000000 && v75 == -1) {
    goto LABEL_67;
  }
  uint64_t v20 = &a3[-a2];
  if (&a3[-a2] == (char *)0x8000000000000000 && v75 == -1) {
    goto LABEL_68;
  }
  uint64_t v21 = (uint64_t)(a2 - a1) / v75;
  unint64_t v77 = a4;
  unint64_t v78 = a1;
  uint64_t v22 = (uint64_t)v20 / v75;
  if (v21 >= (uint64_t)v20 / v75)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      unint64_t v70 = a1;
      uint64_t v24 = v22 * v75;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        id v25 = a3;
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        id v25 = a3;
        if (a4 != a2) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v41 = a4 + v24;
      unint64_t v76 = a4 + v24;
      unint64_t v78 = a2;
      BOOL v42 = v24 < 1 || v70 >= a2;
      uint64_t v43 = v72;
      if (!v42)
      {
        uint64_t v44 = -v75;
        double v45 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
        uint64_t v74 = v9 + 16;
        uint64_t v75 = v8;
        double v67 = (void (**)(char *, uint64_t))(v9 + 8);
        int v68 = v45;
        unint64_t v69 = a4;
        do
        {
          uint64_t v46 = v68;
          v68(v43, v41 + v44, v8);
          unint64_t v47 = a2 + v44;
          uint64_t v48 = v71;
          v46(v71, a2 + v44, v8);
          TranscriptViewModelSegment.timestamp.getter();
          double v50 = v49;
          TranscriptViewModelSegment.timestamp.getter();
          unint64_t v73 = a2;
          if (v50 == v51)
          {
            TranscriptViewModelSegment.duration.getter();
            double v53 = v52;
            TranscriptViewModelSegment.duration.getter();
          }
          else
          {
            TranscriptViewModelSegment.timestamp.getter();
            double v53 = v55;
            TranscriptViewModelSegment.timestamp.getter();
          }
          BOOL v56 = v53 < v54;
          Swift::Int v57 = v48;
          unint64_t v58 = (unint64_t)v25;
          unint64_t v59 = (unint64_t)&v25[v44];
          uint64_t v60 = *v67;
          uint64_t v61 = v44;
          uint64_t v62 = v75;
          (*v67)(v57, v75);
          v60(v43, v62);
          if (v56)
          {
            if (v58 < v73 || v59 >= v73)
            {
              uint64_t v8 = v75;
              swift_arrayInitWithTakeFrontToBack();
              uint64_t v43 = v72;
              unint64_t v63 = v69;
              uint64_t v44 = v61;
            }
            else
            {
              uint64_t v43 = v72;
              unint64_t v63 = v69;
              uint64_t v8 = v75;
              uint64_t v44 = v61;
              if (v58 != v73) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v78 += v44;
          }
          else
          {
            unint64_t v64 = v76;
            v76 += v61;
            uint64_t v44 = v61;
            if (v58 < v64 || v59 >= v64)
            {
              uint64_t v8 = v75;
              swift_arrayInitWithTakeFrontToBack();
              uint64_t v43 = v72;
              unint64_t v47 = v73;
              unint64_t v63 = v69;
            }
            else
            {
              uint64_t v43 = v72;
              unint64_t v47 = v73;
              unint64_t v63 = v69;
              uint64_t v8 = v75;
              if (v58 != v64) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
          }
          unint64_t v41 = v76;
          if (v76 <= v63) {
            break;
          }
          a2 = v47;
          id v25 = (char *)v59;
        }
        while (v47 > v70);
      }
      goto LABEL_65;
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    uint64_t v23 = v21 * v75;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v72 = a3;
    unint64_t v73 = a4 + v23;
    unint64_t v76 = a4 + v23;
    if (v23 >= 1 && a2 < (unint64_t)a3)
    {
      double v27 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
      uint64_t v74 = v9 + 16;
      double v28 = (void (**)(char *, uint64_t))(v9 + 8);
      do
      {
        v27(v18, a2, v8);
        v27(v16, a4, v8);
        TranscriptViewModelSegment.timestamp.getter();
        double v30 = v29;
        TranscriptViewModelSegment.timestamp.getter();
        if (v30 == v31)
        {
          TranscriptViewModelSegment.duration.getter();
          double v33 = v32;
          TranscriptViewModelSegment.duration.getter();
        }
        else
        {
          TranscriptViewModelSegment.timestamp.getter();
          double v33 = v35;
          TranscriptViewModelSegment.timestamp.getter();
        }
        BOOL v36 = v33 < v34;
        uint64_t v37 = *v28;
        (*v28)(v16, v8);
        v37(v18, v8);
        unint64_t v38 = v78;
        if (v36)
        {
          unint64_t v39 = a2 + v75;
          if (v78 < a2 || v78 >= v39)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v78 == a2)
          {
            unint64_t v38 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v40 = v77 + v75;
          if (v78 < v77 || v78 >= v40)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v78 != v77)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v77 = v40;
          unint64_t v39 = a2;
        }
        unint64_t v78 = v38 + v75;
        a4 = v77;
        if (v77 >= v73) {
          break;
        }
        a2 = v39;
      }
      while (v39 < (unint64_t)v72);
    }
LABEL_65:
    sub_1001908AC(&v78, &v77, (uint64_t *)&v76);
    return 1;
  }
LABEL_69:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_1003F6598(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = 0;
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        uint64_t v6 = v5;
        unint64_t v7 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_15;
        }
        if ([v5 isEmpty])
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
        }
        else
        {
        }
        ++v3;
        if (v7 == v2) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v3 < *(void *)(v4 + 16)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v5 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

void *sub_1003F6700(uint64_t a1)
{
  id v194 = 0;
  uint64_t v2 = sub_10002F214(&qword_1006A6838);
  __chkstk_darwin(v2 - 8);
  v179 = (char *)v150 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v188 = type metadata accessor for TranscriptViewModelSegment();
  uint64_t v189 = *(void *)(v188 - 8);
  uint64_t v4 = __chkstk_darwin(v188);
  uint64_t v6 = (char *)v150 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (uint8_t *)v150 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  v184 = (char *)v150 - v11;
  __chkstk_darwin(v10);
  uint64_t v183 = (char *)v150 - v12;
  uint64_t v13 = type metadata accessor for CMFormatDescriptionRef.MediaSubType();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  v171 = (char *)v150 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v192 = (int *)sub_10002F214(&qword_1006A6840);
  __chkstk_darwin(v192);
  uint64_t v17 = (char *)v150 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10002F214(&qword_1006A6848);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v193 = (char *)v150 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v195 = (uint64_t)v150 - v22;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)v150 - v23;
  uint64_t v25 = type metadata accessor for URL();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = __chkstk_darwin(v25);
  v164 = (char *)v150 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  double v30 = (uint8_t *)v150 - v29;
  uint64_t v31 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v31 - 8);
  unint64_t v168 = (char *)v150 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v198 = _swiftEmptyArrayStorage;
  uint64_t v33 = *(void *)(a1 + 16);
  v172 = v6;
  uint64_t v153 = v9;
  uint64_t v158 = v33;
  if (!v33)
  {
    unint64_t v40 = *(void *)(v26 + 56);
    swift_bridgeObjectRetain();
    uint64_t v111 = v188;
    uint64_t v112 = v153;
    unint64_t v39 = v168;
    goto LABEL_78;
  }
  double v35 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  uint64_t v34 = v26 + 16;
  unint64_t v162 = v35;
  uint64_t v161 = a1 + ((*(unsigned __int8 *)(v34 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 64));
  uint64_t v160 = *(void *)(v34 + 56);
  uint64_t v165 = (uint8_t **)(v34 + 40);
  uint64_t v159 = (unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 32);
  uint64_t v157 = (void (**)(uint8_t *, char *, uint64_t))(v34 + 16);
  uint64_t v163 = v34;
  Swift::Int v175 = (void (**)(char *, uint64_t))(v34 - 8);
  AVMediaType v156 = AVMediaTypeText;
  *(void *)&long long v190 = v14 + 56;
  Swift::Int v191 = (char *)(v14 + 48);
  uint64_t v169 = (void (**)(char *, uint64_t, uint64_t))(v14 + 32);
  unint64_t v181 = (void (**)(uint64_t, uint64_t))(v14 + 8);
  v178 = (void (**)(char *, char *, uint64_t))(v189 + 16);
  uint64_t v177 = v189 + 32;
  uint64_t v176 = v189 + 8;
  v150[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v36 = 0;
  *(void *)&long long v37 = 134217984;
  long long v152 = v37;
  *(void *)&long long v37 = 138412290;
  long long v151 = v37;
  uint64_t v155 = v25;
  uint64_t v170 = v30;
  unint64_t v38 = (unint64_t)v194;
  v187 = v24;
  unint64_t v39 = v168;
  v185 = v17;
  unint64_t v40 = (unint64_t)v30;
  while (2)
  {
    v162(v39, v161 + v160 * v36, v25);
    unint64_t v154 = *v165;
    ((void (*)(char *, void, uint64_t, uint64_t))v154)(v39, 0, 1, v25);
    if ((*v159)(v39, 1, v25) == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v111 = v188;
      uint64_t v112 = v153;
      goto LABEL_79;
    }
    id v194 = (id)v38;
    uint64_t v174 = v36;
    (*v157)((uint8_t *)v40, v39, v25);
    BOOL v42 = v164;
    unint64_t v38 = v40;
    URL.deletingPathExtension()();
    uint64_t v43 = URL.lastPathComponent.getter();
    uint64_t v45 = v44;
    uint64_t v46 = (char *)*v175;
    (*v175)(v42, v25);
    uint64_t v47 = static AudioTranscriptionContactsUtility.speakerNameFromContacts(handle:)();
    if (v48)
    {
      uint64_t v49 = v47;
      uint64_t v50 = v48;
      swift_bridgeObjectRelease();
      uint64_t v182 = v49;
      uint64_t v186 = v50;
    }
    else
    {
      uint64_t v182 = v43;
      uint64_t v186 = v45;
    }
    id v51 = objc_allocWithZone((Class)AVURLAsset);
    unint64_t v40 = v38;
    URL._bridgeToObjectiveC()(v52);
    double v54 = v53;
    id v55 = [v51 initWithURL:v53 options:0];

    id v56 = [v55 tracksWithMediaType:v156];
    sub_100031418(0, &qword_1006A6850);
    unint64_t v57 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v57 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v58 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v58 = *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (!v58)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_10069B010 != -1) {
        goto LABEL_100;
      }
      goto LABEL_74;
    }
    if ((v57 & 0xC000000000000001) != 0)
    {
      id v59 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      unint64_t v38 = (unint64_t)v194;
    }
    else
    {
      unint64_t v38 = (unint64_t)v194;
      if (!*(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_98;
      }
      id v59 = *(id *)(v57 + 32);
    }
    v173 = (void (*)(uint8_t *, uint64_t))v46;
    swift_bridgeObjectRelease();
    id v180 = v59;
    id v60 = [v59 segments];
    sub_100031418(0, &qword_1006A6858);
    unint64_t v61 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v62 = (unint64_t)sub_1003F6598(v61);
    swift_bridgeObjectRelease();
    uint64_t v46 = (char *)(v62 & 0xFFFFFFFFFFFFFF8);
    if (v62 >> 62)
    {
      swift_bridgeObjectRetain();
      if (!_CocoaArrayWrapper.endIndex.getter())
      {
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v63 = *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v63)
      {
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
    if ((v62 & 0xC000000000000001) != 0)
    {
      id v64 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_99;
      }
      id v64 = *(id *)(v62 + 32);
    }
    double v65 = v64;
    swift_bridgeObjectRelease();
    [v65 timeMapping];
    CMTime time = v200;
    CMTimeGetSeconds(&time);

    uint64_t v46 = (char *)(v62 & 0xFFFFFFFFFFFFFF8);
    if (!(v62 >> 62))
    {
LABEL_24:
      uint64_t v66 = *((void *)v46 + 2);
      if (v66 < 2) {
        goto LABEL_22;
      }
LABEL_25:
      if (qword_10069B010 != -1) {
        swift_once();
      }
      uint64_t v67 = type metadata accessor for Logger();
      sub_10003293C(v67, (uint64_t)qword_1006A6770);
      swift_bridgeObjectRetain();
      int v68 = Logger.logObject.getter();
      os_log_type_t v69 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v68, v69))
      {
        uint64_t v70 = swift_slowAlloc();
        *(_DWORD *)uint64_t v70 = v152;
        swift_bridgeObjectRelease();
        *(void *)(v70 + 4) = v66;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v68, v69, "%ld empty edits were found. This is unexpected and can lead to timestamp offsets in the transcript.", (uint8_t *)v70, 0xCu);
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      goto LABEL_30;
    }
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v66 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v66 >= 2) {
      goto LABEL_25;
    }
LABEL_22:
    swift_bridgeObjectRelease();
LABEL_30:
    id v71 = objc_allocWithZone((Class)AVAssetReader);
    time.CMTimeValue value = 0;
    id v72 = v55;
    id v73 = [v71 initWithAsset:v72 error:&time];
    unint64_t v40 = (unint64_t)v170;
    uint64_t v74 = (uint64_t)v193;
    if (!v73)
    {
      id v102 = (id)time.value;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_bridgeObjectRelease();
      unint64_t v38 = 0;
      id v92 = v72;
      goto LABEL_59;
    }
    uint64_t v75 = v73;
    id v76 = (id)time.value;
    id v167 = v72;

    id v77 = objc_allocWithZone((Class)AVAssetReaderTrackOutput);
    id v78 = [v77 initWithTrack:v180 outputSettings:0];
    if ([v75 canAddOutput:v78])
    {
      [v75 addOutput:v78];
      [v75 startReading];
    }
    id v166 = v75;
    id v79 = [v78 copyNextSampleBuffer];
    if (!v79)
    {
LABEL_3:
      unint64_t v40 = (unint64_t)v170;
      uint64_t v25 = v155;
      v173(v170, v155);

      swift_bridgeObjectRelease();
      uint64_t v41 = v174;
      goto LABEL_4;
    }
    id v80 = v79;
    id v194 = v78;
    while (!CMSampleBufferRef.numSamples.getter())
    {

LABEL_36:
      id v80 = [v78 copyNextSampleBuffer];
      if (!v80) {
        goto LABEL_3;
      }
    }
    uint64_t v81 = CMSampleBufferRef.formatDescription.getter();
    if (v81)
    {
      Swift::Int v82 = (void *)v81;
      CMFormatDescriptionRef.mediaSubType.getter();

      Swift::Int v83 = *(void (**)(uint64_t, void, uint64_t, uint64_t))v190;
      (*(void (**)(char *, void, uint64_t, uint64_t))v190)(v24, 0, 1, v13);
    }
    else
    {
      Swift::Int v83 = *(void (**)(uint64_t, void, uint64_t, uint64_t))v190;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v190)(v24, 1, 1, v13);
    }
    uint64_t v84 = (uint64_t)v24;
    uint64_t v85 = v195;
    static CMFormatDescriptionRef.MediaSubType.webVTT.getter();
    v83(v85, 0, 1, v13);
    uint64_t v86 = (uint64_t)&v17[v192[12]];
    sub_1003F9578(v84, (uint64_t)v17);
    sub_1003F9578(v85, v86);
    uint64_t v87 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))v191;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))v191)(v17, 1, v13) == 1)
    {
      sub_10002B754(v85, &qword_1006A6848);
      sub_10002B754(v84, &qword_1006A6848);
      uint64_t v24 = (char *)v84;
      if (v87(v86, 1, v13) == 1)
      {
        uint64_t v17 = v185;
        sub_10002B754((uint64_t)v185, &qword_1006A6848);
        goto LABEL_49;
      }
      goto LABEL_46;
    }
    sub_1003F9578((uint64_t)v17, v74);
    if (v87(v86, 1, v13) == 1)
    {
      sub_10002B754(v195, &qword_1006A6848);
      uint64_t v24 = v187;
      sub_10002B754((uint64_t)v187, &qword_1006A6848);
      (*v181)(v74, v13);
LABEL_46:
      uint64_t v17 = v185;
      sub_10002B754((uint64_t)v185, &qword_1006A6840);
LABEL_47:

LABEL_57:
      id v78 = v194;
      goto LABEL_36;
    }
    Swift::Int v88 = v171;
    (*v169)(v171, v86, v13);
    sub_1003F9530(&qword_1006A6860, (void (*)(uint64_t))&type metadata accessor for CMFormatDescriptionRef.MediaSubType);
    char v89 = dispatch thunk of static Equatable.== infix(_:_:)();
    Swift::Int v90 = *v181;
    uint64_t v91 = v88;
    uint64_t v74 = (uint64_t)v193;
    (*v181)((uint64_t)v91, v13);
    sub_10002B754(v195, &qword_1006A6848);
    uint64_t v24 = v187;
    sub_10002B754((uint64_t)v187, &qword_1006A6848);
    v90(v74, v13);
    sub_10002B754((uint64_t)v17, &qword_1006A6848);
    if ((v89 & 1) == 0) {
      goto LABEL_47;
    }
LABEL_49:
    id v92 = [self parseWebVTTSampleBuffer:v80];
    if (![v92 error])
    {
      CMSampleBufferGetPresentationTimeStamp(&time, (CMSampleBufferRef)v80);
      CMTimeGetSeconds(&time);
      CMSampleBufferGetDuration(&time, (CMSampleBufferRef)v80);
      CMTimeGetSeconds(&time);
      id v93 = [v92 text];
      if (v93)
      {
        uint64_t v94 = v93;
        static String._unconditionallyBridgeFromObjectiveC(_:)();
      }
      uint64_t v95 = v183;
      uint64_t v96 = type metadata accessor for CallerOrigin();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 56))(v179, 1, 1, v96);
      swift_bridgeObjectRetain();
      TranscriptViewModelSegment.init(text:timestamp:duration:speaker:callerOrigin:)();
      (*v178)(v184, v95, v188);
      unint64_t v97 = (unint64_t)v198;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v97 = sub_1001A9298(0, *(void *)(v97 + 16) + 1, 1, v97);
      }
      unint64_t v99 = *(void *)(v97 + 16);
      unint64_t v98 = *(void *)(v97 + 24);
      if (v99 >= v98 >> 1) {
        unint64_t v97 = sub_1001A9298(v98 > 1, v99 + 1, 1, v97);
      }
      *(void *)(v97 + 16) = v99 + 1;
      uint64_t v100 = v189;
      uint64_t v101 = v188;
      (*(void (**)(unint64_t, char *, uint64_t))(v189 + 32))(v97+ ((*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80))+ *(void *)(v100 + 72) * v99, v184, v188);

      v198 = (void *)v97;
      (*(void (**)(char *, uint64_t))(v100 + 8))(v183, v101);
      uint64_t v74 = (uint64_t)v193;
      uint64_t v24 = v187;
      goto LABEL_57;
    }
    swift_bridgeObjectRelease();
    swift_willThrow();

    unint64_t v38 = 0;
    unint64_t v40 = (unint64_t)v170;
    id v72 = v167;
LABEL_59:

    if (qword_10069B010 != -1) {
      swift_once();
    }
    uint64_t v103 = type metadata accessor for Logger();
    sub_10003293C(v103, (uint64_t)qword_1006A6770);
    swift_errorRetain();
    swift_errorRetain();
    BOOL v104 = Logger.logObject.getter();
    os_log_type_t v105 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v104, v105))
    {
      uint64_t v106 = swift_slowAlloc();
      uint64_t v107 = swift_slowAlloc();
      id v194 = 0;
      v108 = (uint8_t *)v40;
      uint64_t v109 = (void *)v107;
      *(_DWORD *)uint64_t v106 = v151;
      swift_errorRetain();
      uint64_t v110 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v106 + 4) = v110;
      *uint64_t v109 = v110;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v104, v105, "Error setting up asset reader for call recording: %@", (uint8_t *)v106, 0xCu);
      sub_10002F214(&qword_10069FD50);
      swift_arrayDestroy();
      unint64_t v40 = (unint64_t)v108;
      unint64_t v38 = (unint64_t)v194;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v41 = v174;
    swift_errorRelease();

    uint64_t v25 = v155;
    v173((uint8_t *)v40, v155);
LABEL_4:
    uint64_t v36 = v41 + 1;
    unint64_t v39 = v168;
    if (v36 != v158) {
      continue;
    }
    break;
  }
  uint64_t v111 = v188;
  uint64_t v112 = v153;
  unint64_t v40 = (unint64_t)v154;
LABEL_78:
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v40)(v39, 1, 1, v25);
  swift_bridgeObjectRelease();
LABEL_79:
  sub_1003F4E1C((unint64_t *)&v198);
  uint64_t result = v198;
  uint64_t v120 = v198[2];
  if (v120 <= 1) {
    uint64_t v120 = 1;
  }
  uint64_t v195 = v120;
  uint64_t v46 = v172;
  if (v120 != 1)
  {
    id v55 = (id)(v189 + 16);
    uint64_t v193 = (char *)(v189 + 8);
    Swift::Int v191 = &v197;
    unint64_t v121 = 1;
    v192 = (int *)0x800000010055CE40;
    *(void *)&long long v118 = 136315138;
    long long v190 = v118;
    v187 = (char *)&type metadata for Any + 8;
    id v194 = (id)(v189 + 16);
    while (1)
    {
      unint64_t v38 = v121 - 1;
      unint64_t v124 = v198[2];
      if (v121 - 1 >= v124)
      {
        __break(1u);
LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        swift_once();
LABEL_74:
        uint64_t v113 = type metadata accessor for Logger();
        sub_10003293C(v113, (uint64_t)qword_1006A6770);
        Swift::Int v114 = Logger.logObject.getter();
        os_log_type_t v115 = static os_log_type_t.error.getter();
        BOOL v116 = os_log_type_enabled(v114, v115);
        uint64_t v111 = v188;
        if (v116)
        {
          uint64_t v117 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v117 = 0;
          _os_log_impl((void *)&_mh_execute_header, v114, v115, "No text track found for call recording", v117, 2u);
          unint64_t v40 = v38;
          swift_slowDealloc();
        }

        ((void (*)(unint64_t, uint64_t))v46)(v40, v155);
        uint64_t v112 = v153;
        goto LABEL_79;
      }
      uint64_t v125 = v46;
      uint64_t v46 = (char *)v198
          + ((*(unsigned __int8 *)(v189 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v189 + 80));
      unint64_t v40 = *(void *)(v189 + 72);
      BOOL v126 = *(void (**)(uint8_t *, char *, uint64_t))(v189 + 16);
      v126(v112, &v46[v40 * v38], v111);
      if (v121 >= v124) {
        goto LABEL_97;
      }
      unint64_t v127 = &v46[v40 * v121];
      uint64_t v46 = v125;
      v126((uint8_t *)v125, v127, v111);
      TranscriptViewModelSegment.timestamp.getter();
      double v129 = v128;
      TranscriptViewModelSegment.duration.getter();
      double v131 = v129 + v130;
      TranscriptViewModelSegment.timestamp.getter();
      if (v132 >= v131)
      {
        uint64_t v122 = *(void (**)(unint64_t, uint64_t))v193;
        (*(void (**)(char *, uint64_t))v193)(v125, v111);
      }
      else
      {
        time.CMTimeValue value = 0;
        *(void *)&time.timescale = 0xE000000000000000;
        _StringGuts.grow(_:)(99);
        v133._countAndFlagsBits = 0xD00000000000002DLL;
        v133._object = v192;
        String.append(_:)(v133);
        unint64_t v196 = v121 - 1;
        v134._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v134);
        swift_bridgeObjectRelease();
        v135._countAndFlagsBits = 0x20646E6120;
        v135._object = (void *)0xE500000000000000;
        String.append(_:)(v135);
        unint64_t v196 = v121;
        v136._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v136);
        swift_bridgeObjectRelease();
        v137._countAndFlagsBits = 0x65530A2D2D2D0A2ELL;
        v137._object = (void *)0xEF2320746E656D67;
        String.append(_:)(v137);
        unint64_t v196 = v121 - 1;
        v138._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v138);
        swift_bridgeObjectRelease();
        v139._countAndFlagsBits = 8250;
        v139._object = (void *)0xE200000000000000;
        String.append(_:)(v139);
        unint64_t v40 = (unint64_t)v112;
        _print_unlocked<A, B>(_:_:)();
        v140._countAndFlagsBits = 0x6765530A2D2D2D0ALL;
        v140._object = (void *)0xEE002320746E656DLL;
        String.append(_:)(v140);
        unint64_t v196 = v121;
        v141._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v141);
        swift_bridgeObjectRelease();
        v142._countAndFlagsBits = 8250;
        v142._object = (void *)0xE200000000000000;
        String.append(_:)(v142);
        _print_unlocked<A, B>(_:_:)();
        v143._countAndFlagsBits = 757935370;
        v143._object = (void *)0xE400000000000000;
        String.append(_:)(v143);
        CMTimeValue value = time.value;
        unint64_t v144 = *(void *)&time.timescale;
        if (qword_10069B010 != -1) {
          swift_once();
        }
        uint64_t v146 = type metadata accessor for Logger();
        sub_10003293C(v146, (uint64_t)qword_1006A6770);
        swift_bridgeObjectRetain();
        uint64_t v147 = Logger.logObject.getter();
        os_log_type_t v148 = static os_log_type_t.error.getter();
        if (!os_log_type_enabled(v147, v148))
        {
          swift_bridgeObjectRelease_n();

          uint64_t v122 = *(void (**)(unint64_t, uint64_t))v193;
          uint64_t v46 = v172;
          (*(void (**)(char *, uint64_t))v193)(v172, v111);
          uint64_t v112 = (uint8_t *)v40;
          unint64_t v123 = v40;
          goto LABEL_85;
        }
        uint64_t v149 = (uint8_t *)swift_slowAlloc();
        time.CMTimeValue value = swift_slowAlloc();
        *(_DWORD *)uint64_t v149 = v190;
        unint64_t v40 = (unint64_t)(v149 + 4);
        swift_bridgeObjectRetain();
        unint64_t v196 = sub_10045DA1C(value, v144, &time.value);
        uint64_t v112 = v153;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v147, v148, "%s", v149, 0xCu);
        swift_arrayDestroy();
        uint64_t v111 = v188;
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v122 = *(void (**)(unint64_t, uint64_t))v193;
        uint64_t v46 = v172;
        (*(void (**)(char *, uint64_t))v193)(v172, v111);
      }
      unint64_t v123 = (unint64_t)v112;
LABEL_85:
      v122(v123, v111);
      ++v121;
      id v55 = v194;
      if (v195 == v121) {
        return v198;
      }
    }
  }
  return result;
}

void sub_1003F8170(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8 = sub_10002F214(&qword_1006A09A0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [a1 subAttachments];
  if (v11
    && (uint64_t v12 = v11,
        sub_100031418(0, &qword_10069BDF0),
        sub_1001BC094(),
        uint64_t v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)(),
        v12,
        uint64_t v14 = sub_1002AAE60(v13),
        swift_bridgeObjectRelease(),
        v14))
  {
    id v15 = [a1 audioModel];
    uint64_t v47 = v14;
    if (v15)
    {
      uint64_t v16 = v15;
      ICAttachmentAudioModel.saveModelDataToSubattachment(transcriptSegments:subattachment:retranscription:)();
    }
    if (qword_10069B010 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_10003293C(v21, (uint64_t)qword_1006A6770);
    id v22 = a3;
    id v23 = a4;
    id v24 = v22;
    id v25 = v23;
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v43 = a4;
      uint64_t v29 = v28;
      uint64_t v30 = swift_slowAlloc();
      uint64_t v45 = v10;
      uint64_t v31 = (void *)v30;
      *(_DWORD *)uint64_t v29 = 138412546;
      uint64_t v44 = a1;
      id v48 = v24;
      uint64_t v46 = a3;
      id v32 = v24;
      uint64_t v42 = a2;
      id v33 = v32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v31 = v24;

      *(_WORD *)(v29 + 12) = 2112;
      id v48 = v25;
      id v34 = v25;
      a3 = v46;
      a2 = v42;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v31[1] = v25;

      a1 = v44;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "saved call recording model data to subattachment with note ID: %@ attachment ID: %@", (uint8_t *)v29, 0x16u);
      sub_10002F214(&qword_10069FD50);
      swift_arrayDestroy();
      uint64_t v10 = v45;
      swift_slowDealloc();
      a4 = v43;
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v35 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v10, 1, 1, v35);
    type metadata accessor for MainActor();
    id v36 = a3;
    id v37 = a4;
    swift_bridgeObjectRetain();
    id v38 = a1;
    uint64_t v39 = static MainActor.shared.getter();
    unint64_t v40 = (void *)swift_allocObject();
    v40[2] = v39;
    v40[3] = &protocol witness table for MainActor;
    v40[4] = a2;
    v40[5] = v38;
    v40[6] = v36;
    v40[7] = v37;
    sub_10030B6A4((uint64_t)v10, (uint64_t)&unk_1006A6828, (uint64_t)v40);

    swift_release();
  }
  else
  {
    if (qword_10069B010 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_10003293C(v17, (uint64_t)qword_1006A6770);
    uint64_t v47 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v47, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v47, v18, "could not find subattachment for imported call recording", v19, 2u);
      swift_slowDealloc();
    }
    uint64_t v20 = v47;
  }
}

void sub_1003F8834(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v101 = a3;
  id v102 = a4;
  Swift::Int v114 = a2;
  uint64_t v6 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v6 - 8);
  os_log_type_t v115 = (char *)v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v100 = (char *)v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v98 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)v98 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)v98 - v18;
  id v20 = [self defaultManager];
  uint64_t v21 = a1;
  uint64_t v22 = NSFileManager.contentsOfDirectory(at:)();

  if (!v4)
  {
    long long v118 = v19;
    uint64_t v112 = v17;
    os_log_type_t v105 = v14;
    uint64_t v99 = v21;
    v98[1] = 0;
    uint64_t v120 = _swiftEmptyArrayStorage;
    uint64_t v23 = *(void *)(v22 + 16);
    uint64_t v103 = v8;
    uint64_t v111 = v23;
    uint64_t v113 = v22;
    if (v23)
    {
      unint64_t v24 = 0;
      uint64_t v109 = v9 + 48;
      uint64_t v110 = v9 + 56;
      BOOL v116 = (void (**)(char *, uint64_t, uint64_t))(v9 + 32);
      os_log_t v117 = (os_log_t)(v9 + 16);
      v98[0] = (v9 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v107 = v9;
      v108 = (void (**)(char *, uint64_t))(v9 + 8);
      uint64_t v104 = (v9 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      id v25 = v114;
      uint64_t v26 = (uint64_t)v115;
      while (1)
      {
        if (v24 >= *(void *)(v22 + 16))
        {
          __break(1u);
          goto LABEL_39;
        }
        unint64_t v29 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
        unint64_t v30 = v22 + v29;
        uint64_t v31 = *(void *)(v9 + 72);
        id v32 = *(void (**)(uint64_t, unint64_t, uint64_t))(v9 + 16);
        v32(v26, v30 + v31 * v24, v8);
        id v33 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56);
        v33(v26, 0, 1, v8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v26, 1, v8) == 1) {
          goto LABEL_21;
        }
        id v34 = *v116;
        uint64_t v35 = v118;
        (*v116)(v118, v26, v8);
        if (URL.pathExtension.getter() == 5656397 && v36 == 0xE300000000000000)
        {
          swift_bridgeObjectRelease();
          id v37 = v112;
          v32((uint64_t)v112, (unint64_t)v35, v8);
          uint64_t v38 = v8;
        }
        else
        {
          char v39 = _stringCompareWithSmolCheck(_:_:expecting:)();
          uint64_t v106 = v31;
          unint64_t v40 = v29;
          uint64_t v41 = v33;
          uint64_t v42 = v34;
          uint64_t v43 = v35;
          uint64_t v38 = v8;
          char v44 = v39;
          swift_bridgeObjectRelease();
          id v37 = v112;
          uint64_t v45 = v43;
          id v34 = v42;
          id v33 = v41;
          unint64_t v29 = v40;
          uint64_t v31 = v106;
          v32((uint64_t)v112, (unint64_t)v45, v38);
          if ((v44 & 1) == 0)
          {
            os_log_type_t v27 = v37;
            uint64_t v28 = *v108;
            (*v108)(v27, v38);
            goto LABEL_5;
          }
        }
        uint64_t v46 = v37;
        URL.lastPathComponent.getter();
        v47._countAndFlagsBits = 0x5F73746E656D6F6DLL;
        v47._object = (void *)0xE800000000000000;
        Swift::Bool v48 = String.hasPrefix(_:)(v47);
        swift_bridgeObjectRelease();
        uint64_t v28 = *v108;
        (*v108)(v46, v38);
        if (!v48)
        {
          v34(v105, (uint64_t)v118, v38);
          uint64_t v49 = v120;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100169BAC(0, (int64_t)v49[2].isa + 1, 1);
            uint64_t v49 = v120;
          }
          id v25 = v114;
          unint64_t isa = (unint64_t)v49[2].isa;
          unint64_t v50 = (unint64_t)v49[3].isa;
          if (isa >= v50 >> 1)
          {
            sub_100169BAC(v50 > 1, isa + 1, 1);
            uint64_t v49 = v120;
          }
          v49[2].unint64_t isa = (Class)(isa + 1);
          uint64_t v8 = v103;
          v34((char *)v49 + v29 + isa * v31, (uint64_t)v105, v103);
          uint64_t v120 = v49;
          uint64_t v9 = v107;
          goto LABEL_6;
        }
LABEL_5:
        uint64_t v8 = v38;
        v28(v118, v38);
        uint64_t v9 = v107;
        id v25 = v114;
LABEL_6:
        uint64_t v22 = v113;
        ++v24;
        uint64_t v26 = (uint64_t)v115;
        if (v111 == v24)
        {
          v33((uint64_t)v115, 1, 1, v8);
          goto LABEL_21;
        }
      }
    }
    id v25 = v114;
    uint64_t v26 = (uint64_t)v115;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v115, 1, 1, v8);
LABEL_21:
    swift_bridgeObjectRelease();
    sub_10002B754(v26, &qword_10069B310);
    os_log_t v117 = v120;
    if (qword_10069B010 != -1) {
LABEL_39:
    }
      swift_once();
    uint64_t v52 = type metadata accessor for Logger();
    uint64_t v53 = sub_10003293C(v52, (uint64_t)qword_1006A6770);
    id v54 = v101;
    id v55 = v25;
    id v56 = v54;
    unint64_t v57 = v55;
    uint64_t v58 = Logger.logObject.getter();
    os_log_type_t v59 = static os_log_type_t.info.getter();
    int v60 = v59;
    BOOL v61 = os_log_type_enabled(v58, v59);
    long long v118 = (char *)v53;
    if (v61)
    {
      uint64_t v62 = swift_slowAlloc();
      uint64_t v63 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v62 = 138412546;
      LODWORD(v116) = v60;
      uint64_t v120 = v56;
      Swift::Int v114 = (void *)(v62 + 4);
      os_log_type_t v115 = (char *)&v121;
      id v64 = v56;
      double v65 = v56;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v63 = v64;

      *(_WORD *)(v62 + 12) = 2112;
      uint64_t v120 = v57;
      uint64_t v66 = v57;
      id v56 = v64;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v63[1] = v57;

      _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v116, "importing transcript for call recording with note ID: %@ attachment ID: %@", (uint8_t *)v62, 0x16u);
      sub_10002F214(&qword_10069FD50);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v58 = v56;
    }

    uint64_t v67 = (void (**)(char *, uint64_t, uint64_t))sub_1003F6700((uint64_t)v117);
    swift_release();
    int v68 = v56;
    os_log_type_t v69 = v57;
    uint64_t v70 = v68;
    id v71 = v69;
    swift_bridgeObjectRetain();
    id v72 = Logger.logObject.getter();
    os_log_type_t v73 = static os_log_type_t.info.getter();
    int v74 = v73;
    if (os_log_type_enabled(v72, v73))
    {
      uint64_t v75 = swift_slowAlloc();
      Swift::Int v114 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v75 = 134218498;
      uint64_t v120 = v67[2];
      os_log_t v117 = v72;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v75 + 12) = 2112;
      LODWORD(v115) = v74;
      uint64_t v120 = v70;
      id v76 = v70;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      id v77 = v114;
      void *v114 = v70;

      *(_WORD *)(v75 + 22) = 2112;
      BOOL v116 = v67;
      uint64_t v120 = v71;
      id v78 = v71;
      uint64_t v67 = v116;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v77[1] = v71;

      os_log_t v79 = v117;
      _os_log_impl((void *)&_mh_execute_header, v117, (os_log_type_t)v115, "successfully imported transcript with %ld segments for call recording with note ID: %@ attachment ID: %@", (uint8_t *)v75, 0x20u);
      sub_10002F214(&qword_10069FD50);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    uint64_t v80 = v103;
    uint64_t v81 = v100;
    sub_1003F8170(v102, (uint64_t)v67, v70, v71);
    swift_bridgeObjectRelease();
    if (ICInternalSettingsShouldPreserveImportedCallRecordingData())
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v81, v99, v80);
      Swift::Int v82 = Logger.logObject.getter();
      os_log_type_t v83 = static os_log_type_t.info.getter();
      if (!os_log_type_enabled(v82, v83))
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v81, v80);
        goto LABEL_35;
      }
      uint64_t v84 = (uint8_t *)swift_slowAlloc();
      uint64_t v120 = swift_slowAlloc();
      *(_DWORD *)uint64_t v84 = 136315138;
      uint64_t v85 = URL.absoluteString.getter();
      unint64_t v119 = sub_10045DA1C(v85, v86, (uint64_t *)&v120);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v81, v103);
      _os_log_impl((void *)&_mh_execute_header, v82, v83, "preserving imported call recording data at %s", v84, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
LABEL_33:
      swift_slowDealloc();
LABEL_35:

      return;
    }
    _s11MobileNotes19CallNoteCoordinatorC06deleteC23RecordingsFromDirectory9directoryy10Foundation3URLV_tFZ_0(v99);
    uint64_t v87 = v70;
    Swift::Int v88 = v71;
    char v89 = v87;
    Swift::Int v90 = v88;
    Swift::Int v82 = Logger.logObject.getter();
    os_log_type_t v91 = static os_log_type_t.info.getter();
    int v92 = v91;
    if (os_log_type_enabled(v82, v91))
    {
      uint64_t v93 = swift_slowAlloc();
      LODWORD(v118) = v92;
      uint64_t v94 = v93;
      uint64_t v95 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v94 = 138412546;
      uint64_t v120 = v89;
      uint64_t v96 = v89;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v95 = v89;

      *(_WORD *)(v94 + 12) = 2112;
      uint64_t v120 = v90;
      unint64_t v97 = v90;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v95[1] = v90;

      _os_log_impl((void *)&_mh_execute_header, v82, (os_log_type_t)v118, "removed original call recording file for note ID: %@ attachmentID: %@", (uint8_t *)v94, 0x16u);
      sub_10002F214(&qword_10069FD50);
      swift_arrayDestroy();
      swift_slowDealloc();
      goto LABEL_33;
    }
  }
}

uint64_t sub_1003F9404()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1003F945C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100161724;
  return sub_1003F409C(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1003F9530(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003F9578(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_1006A6848);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_1003F95E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v19[1] = a2;
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ChecklistItemEntity();
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = a3;
  AppDependency.wrappedValue.getter();
  uint64_t v12 = (void *)v19[3];
  IntentParameter.wrappedValue.getter();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, &v11[*(int *)(v9 + 28)], v4);
  sub_1003FAEB8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ChecklistItemEntity);
  URL._bridgeToObjectiveC()(v13);
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  id v16 = [v12 managedObjectIDForURIRepresentation:v15];

  if (!v16)
  {
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = 0;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1003FA2F8(v17, 230);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_willThrow();
  }
  return v16;
}

uint64_t OpenChecklistItemIntent.target.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ChecklistItemEntity();
  __chkstk_darwin(v2 - 8);
  sub_100224348(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ChecklistItemEntity);
  IntentParameter.wrappedValue.setter();
  return sub_1003FAEB8(a1, (uint64_t (*)(void))type metadata accessor for ChecklistItemEntity);
}

void *OpenChecklistItemIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static OpenChecklistItemIntent.persistentIdentifier;
}

uint64_t sub_1003F98DC()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100032974(v6, static OpenChecklistItemIntent.title);
  sub_10003293C(v6, (uint64_t)static OpenChecklistItemIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t OpenChecklistItemIntent.title.unsafeMutableAddressor()
{
  if (qword_10069B018 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();

  return sub_10003293C(v0, (uint64_t)static OpenChecklistItemIntent.title);
}

uint64_t static OpenChecklistItemIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069B018 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static OpenChecklistItemIntent.title);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

void *OpenChecklistItemIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static OpenChecklistItemIntent.openAppWhenRun;
}

uint64_t static OpenChecklistItemIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t static OpenChecklistItemIntent.parameterSummary.getter()
{
  uint64_t v0 = sub_10002F214(&qword_1006A6870);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214(&qword_1006A6878);
  __chkstk_darwin(v1);
  sub_1000343BC();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._countAndFlagsBits = 0x74206C6165766552;
  v2._object = (void *)0xEB00000000206568;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_1006A6880);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0x696C6B6365686320;
  v3._object = (void *)0xEF6D657469207473;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_1003FA078(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ChecklistItemEntity();
  __chkstk_darwin(v2 - 8);
  sub_100224348(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ChecklistItemEntity);
  IntentParameter.wrappedValue.setter();
  return sub_1003FAEB8(a1, (uint64_t (*)(void))type metadata accessor for ChecklistItemEntity);
}

uint64_t sub_1003FA124()
{
  uint64_t v0 = sub_10002F214(&qword_1006A6870);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214(&qword_1006A6878);
  __chkstk_darwin(v1);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._countAndFlagsBits = 0x74206C6165766552;
  v2._object = (void *)0xEB00000000206568;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_1006A6880);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0x696C6B6365686320;
  v3._object = (void *)0xEF6D657469207473;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_1003FA2CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s11MobileNotes23OpenChecklistItemIntentVACycfC_0();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

id sub_1003FA2F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ChecklistItemID();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ChecklistItemEntity();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void **)(a1 + 16);
  uint64_t v14 = (void **)(a1 + 16);
  uint64_t v13 = v15;
  if (v15)
  {
    id v16 = v13;
  }
  else
  {
    uint64_t v37 = a2;
    sub_10002F214((uint64_t *)&unk_10069E1D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100524D10;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v18;
    uint64_t v35 = 0;
    unint64_t v36 = 0xE000000000000000;
    _StringGuts.grow(_:)(41);
    v19._object = (void *)0x800000010055CED0;
    v19._countAndFlagsBits = 0xD000000000000017;
    String.append(_:)(v19);
    v20._object = (void *)0x8000000100537570;
    v20._countAndFlagsBits = 0xD000000000000017;
    String.append(_:)(v20);
    v21._countAndFlagsBits = 0x6174206874697720;
    v21._object = (void *)0xED00002074656772;
    String.append(_:)(v21);
    IntentParameter.wrappedValue.getter();
    sub_100224348((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ChecklistItemID);
    sub_1003FAEB8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ChecklistItemEntity);
    ChecklistItemID.uriRepresentation.getter((uint64_t)v6);
    uint64_t v22 = type metadata accessor for URL();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v6, 1, v22) == 1)
    {
      sub_10016EFE4((uint64_t)v6);
      uint64_t v24 = 0;
      id v25 = (void *)0xE000000000000000;
    }
    else
    {
      uint64_t v24 = URL.absoluteString.getter();
      id v25 = v26;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v22);
    }
    type metadata accessor for ICError(0);
    v27._countAndFlagsBits = v24;
    v27._object = v25;
    String.append(_:)(v27);
    swift_bridgeObjectRelease();
    sub_1003FAEB8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ChecklistItemID);
    v28._countAndFlagsBits = 46;
    v28._object = (void *)0xE100000000000000;
    String.append(_:)(v28);
    unint64_t v29 = v35;
    unint64_t v30 = v36;
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = v29;
    *(void *)(inited + 56) = v30;
    sub_1001B50CC(inited);
    sub_1003FAF18((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
    _BridgedStoredNSError.init(_:userInfo:)();
    uint64_t v31 = v35;
    swift_beginAccess();
    id v32 = *v14;
    *uint64_t v14 = v31;
    id v16 = v31;

    uint64_t v13 = 0;
  }
  id v33 = v13;
  return v16;
}

uint64_t _s11MobileNotes23OpenChecklistItemIntentVACycfC_0()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v31 = *(void *)(v0 - 8);
  uint64_t v32 = v0;
  __chkstk_darwin(v0);
  unint64_t v30 = (char *)v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  unint64_t v29 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  Swift::String v28 = (char *)v26 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069B4D8);
  __chkstk_darwin(v6 - 8);
  Swift::String v27 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v8 - 8);
  v26[0] = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v26[1] = sub_10002F214(&qword_10069B4E0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  Swift::String v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v26[0];
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for ChecklistItemEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v27, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v28, 1, 1, v22);
  v23(v29, 1, 1, v22);
  (*(void (**)(char *, void, uint64_t))(v31 + 104))(v30, enum case for InputConnectionBehavior.default(_:), v32);
  sub_1003FAF18(qword_1006A4EE0, (void (*)(uint64_t))type metadata accessor for ChecklistItemEntity);
  uint64_t v24 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_10002F214((uint64_t *)&unk_10069B130);
  unint64_t v33 = 0xD000000000000024;
  unint64_t v34 = 0x8000000100549260;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  unint64_t v33 = 0xD000000000000021;
  unint64_t v34 = 0x8000000100549290;
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  return v24;
}

uint64_t sub_1003FAD2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_1003FAD5C()
{
  unint64_t result = qword_1006A6888;
  if (!qword_1006A6888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A6888);
  }
  return result;
}

uint64_t sub_1003FADB0()
{
  return sub_1003FAF18(&qword_1006A4A00, (void (*)(uint64_t))type metadata accessor for ChecklistItemEntity);
}

uint64_t sub_1003FADFC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1003FAE18()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for OpenChecklistItemIntent()
{
  return &type metadata for OpenChecklistItemIntent;
}

uint64_t sub_1003FAE44()
{
  return sub_10001DFB0(&qword_1006A68A8, &qword_1006A68B0);
}

uint64_t sub_1003FAE80()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003FAEB8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1003FAF18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_1003FAF60(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v33 = a3;
  uint64_t v34 = a2;
  id v32 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = type metadata accessor for UICollectionLayoutListConfiguration.FooterMode();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&ObjectType - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&ObjectType - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UICollectionLayoutListConfiguration();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&ObjectType - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes27TagAssignmentCollectionView_tagAssignmentDataSource] = 0;
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v9);
  UICollectionLayoutListConfiguration.init(appearance:)();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for UICollectionLayoutListConfiguration.FooterMode.supplementary(_:), v5);
  UICollectionLayoutListConfiguration.footerMode.setter();
  sub_1003FB444();
  uint64_t v17 = (void *)static UICollectionViewCompositionalLayout.list(using:)();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v35.receiver = v4;
  v35.super_class = ObjectType;
  [super initWithFrame:v17 collectionViewLayout:0.0, 0.0, 0.0, 0.0];

  id v19 = objc_allocWithZone((Class)type metadata accessor for TagAssignmentDataSource());
  id v20 = v32;
  id v21 = v32;
  uint64_t v22 = v33;
  swift_retain();
  uint64_t v23 = (char *)v18;
  id v24 = sub_100326C80(v23, v20, v34, v22);

  swift_release();
  id v25 = *(void **)&v23[OBJC_IVAR____TtC11MobileNotes27TagAssignmentCollectionView_tagAssignmentDataSource];
  *(void *)&v23[OBJC_IVAR____TtC11MobileNotes27TagAssignmentCollectionView_tagAssignmentDataSource] = v24;

  uint64_t v26 = self;
  Swift::String v27 = v23;
  id v28 = [v26 ICGroupedBackgroundColor];
  [v27 setBackgroundColor:v28];

  unint64_t v29 = v27;
  [v29 setShowsVerticalScrollIndicator:0];

  swift_release();
  return v29;
}

void sub_1003FB344(uint64_t a1, void (*a2)(void))
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = Strong;
    id v5 = [Strong collectionViewLayout];

    [v5 invalidateLayout];
  }
  if (a2) {
    a2();
  }
}

uint64_t type metadata accessor for TagAssignmentCollectionView()
{
  return self;
}

unint64_t sub_1003FB444()
{
  unint64_t result = qword_1006A1390;
  if (!qword_1006A1390)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1006A1390);
  }
  return result;
}

void *DeleteNotesIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static DeleteNotesIntent.persistentIdentifier;
}

unint64_t static DeleteNotesIntent.persistentIdentifier.getter()
{
  return 0xD000000000000015;
}

uint64_t sub_1003FB4B0()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100032974(v6, static DeleteNotesIntent.title);
  sub_10003293C(v6, (uint64_t)static DeleteNotesIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t DeleteNotesIntent.title.unsafeMutableAddressor()
{
  if (qword_10069B020 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();

  return sub_10003293C(v0, (uint64_t)static DeleteNotesIntent.title);
}

uint64_t static DeleteNotesIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069B020 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static DeleteNotesIntent.title);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t static DeleteNotesIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t static DeleteNotesIntent.parameterSummary.getter()
{
  uint64_t v0 = sub_10002F214(&qword_1006A68E8);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214((uint64_t *)&unk_1006A68F0);
  __chkstk_darwin(v1);
  sub_1001FD714();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._countAndFlagsBits = 0x74206574656C6544;
  v2._object = (void *)0xEB00000000206568;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_1006A6900);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0x7365746F6E20;
  v3._object = (void *)0xE600000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_1003FBC3C()
{
  uint64_t v0 = sub_10002F214(&qword_1006A68E8);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214((uint64_t *)&unk_1006A68F0);
  __chkstk_darwin(v1);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._countAndFlagsBits = 0x74206574656C6544;
  v2._object = (void *)0xEB00000000206568;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_1006A6900);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0x7365746F6E20;
  v3._object = (void *)0xE600000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_1003FBDD4(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v6 = v1[2];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100161724;
  return DeleteNotesIntent.perform()(a1, v4, v5, v6);
}

uint64_t DeleteNotesIntent.perform()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  type metadata accessor for MainActor();
  v4[9] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[10] = v6;
  v4[11] = v5;
  return _swift_task_switch(sub_1003FBF24, v6, v5);
}

uint64_t sub_1003FBF24()
{
  v0[2] = &type metadata for DeleteNotesIntent;
  sub_10002F214((uint64_t *)&unk_1006A5300);
  String.init<A>(describing:)();
  id v1 = objc_allocWithZone((Class)ICNAEventReporter);
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v3 = [v1 initWithSubTrackerName:v2];
  v0[12] = v3;

  IntentParameter.wrappedValue.getter();
  uint64_t v4 = v0[3];
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100331D08(v4);
  unint64_t v6 = v5;
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  if (v6 >> 62)
  {
    sub_100031418(0, (unint64_t *)&qword_1006A2780);
    swift_bridgeObjectRetain();
    uint64_t v17 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease_n();
    unint64_t v6 = v17;
  }
  else
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_100031418(0, (unint64_t *)&qword_1006A2780);
    if (swift_dynamicCastMetatype() || (uint64_t v15 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_3:
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v16 = v7 + 32;
      while (1)
      {
        self;
        if (!swift_dynamicCastObjCClass()) {
          break;
        }
        v16 += 8;
        if (!--v15) {
          goto LABEL_3;
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v6 = v7 | 1;
    }
  }
  v0[13] = v6;
  uint64_t v9 = v0[7];
  uint64_t v8 = v0[8];
  uint64_t v10 = v0[6];
  uint64_t v11 = (void *)swift_task_alloc();
  v0[14] = v11;
  id v11[2] = v10;
  v11[3] = v9;
  void v11[4] = v8;
  v11[5] = v3;
  uint64_t v12 = (void *)swift_task_alloc();
  v0[15] = v12;
  void v12[2] = v10;
  v12[3] = v9;
  void v12[4] = v8;
  id v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1006A5378 + dword_1006A5378);
  uint64_t v13 = (void *)swift_task_alloc();
  v0[16] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1003FC228;
  return v18((uint64_t)&unk_1006A6918, (uint64_t)v11, (uint64_t)&unk_1006A6928, (uint64_t)v12, v6);
}

uint64_t sub_1003FC228(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 136) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 80);
    uint64_t v6 = *(void *)(v4 + 88);
    uint64_t v7 = sub_1003FC434;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(unsigned char *)(v4 + 144) = a1 & 1;
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(void *)(v4 + 80);
    uint64_t v6 = *(void *)(v4 + 88);
    uint64_t v7 = sub_1003FC36C;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_1003FC36C()
{
  int v1 = *(unsigned __int8 *)(v0 + 144);
  swift_release();
  NSString v2 = *(void **)(v0 + 96);
  if (v1 == 1)
  {
    static IntentResult.result<>()();
  }
  else
  {
    sub_100173F8C();
    swift_allocError();
    *uint64_t v4 = 9;
    swift_willThrow();
  }

  id v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1003FC434()
{
  int v1 = *(void **)(v0 + 96);
  swift_release();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  NSString v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1003FC4C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s11MobileNotes06DeleteB6IntentVACycfC_0();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_1003FC4F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[16] = a2;
  v6[17] = a6;
  v6[15] = a1;
  v6[18] = type metadata accessor for MainActor();
  v6[19] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[20] = v8;
  v6[21] = v7;
  return _swift_task_switch(sub_1003FC590, v8, v7);
}

uint64_t sub_1003FC590()
{
  uint64_t v1 = v0[17];
  NSString v2 = self;
  v0[22] = v2;
  sub_10002F214(&qword_1006A6980);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [v2 deleteHTMLNotesIfNeeded:isa eventReporter:v1];

  v0[23] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[24] = v5;
  v0[25] = v4;
  return _swift_task_switch(sub_1003FC674, v5, v4);
}

uint64_t sub_1003FC674()
{
  uint64_t v1 = (void *)v0[22];
  uint64_t v2 = v0[17];
  sub_100031418(0, (unint64_t *)&qword_10069FD10);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  v0[26] = isa;
  v0[2] = v0;
  v0[3] = sub_1003BB33C;
  uint64_t v4 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10022AB14;
  v0[13] = &unk_10063B330;
  v0[14] = v4;
  [v1 deleteModernNotesIfNeeded:isa eventReporter:v2 completion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1003FC7B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  uint64_t v4 = type metadata accessor for ConfirmationActionName();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  v3[11] = v5;
  v3[12] = *(void *)(v5 - 8);
  v3[13] = swift_task_alloc();
  type metadata accessor for Locale();
  v3[14] = swift_task_alloc();
  type metadata accessor for String.LocalizationValue();
  v3[15] = swift_task_alloc();
  type metadata accessor for LocalizedStringResource();
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for IntentDialog();
  v3[18] = v6;
  v3[19] = *(void *)(v6 - 8);
  v3[20] = swift_task_alloc();
  uint64_t v7 = sub_10002F214((uint64_t *)&unk_1006A6970);
  v3[21] = v7;
  v3[22] = *(void *)(v7 - 8);
  v3[23] = swift_task_alloc();
  type metadata accessor for MainActor();
  v3[24] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[25] = v9;
  v3[26] = v8;
  return _swift_task_switch(sub_1003FCA54, v9, v8);
}

uint64_t sub_1003FCA54()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v15 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v16 = *(void *)(v0 + 144);
  uint64_t v5 = *(void *)(v0 + 56);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 40);
  *(void *)(v0 + 32) = v5;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v6 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 104);
  v7(v2, enum case for LocalizedStringResource.BundleDescription.main(_:), v4);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v7(v2, v6, v4);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  IntentDialog.init(full:supporting:)();
  static IntentResult.result<>(dialog:)();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v1, v16);
  static ConfirmationActionName.continue.getter();
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v8;
  unint64_t v9 = sub_1001FD714();
  uint64_t v10 = sub_10001DFB0(&qword_1006A5390, (uint64_t *)&unk_1006A6970);
  *uint64_t v8 = v0;
  v8[1] = sub_1003FCCCC;
  uint64_t v11 = *(void *)(v0 + 184);
  uint64_t v12 = *(void *)(v0 + 168);
  uint64_t v13 = *(void *)(v0 + 80);
  return AppIntent.requestConfirmation<A>(result:confirmationActionName:showPrompt:)(v11, v13, 1, &type metadata for DeleteNotesIntent, v12, v9, v10);
}

uint64_t sub_1003FCCCC()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 184);
  uint64_t v4 = *(void *)(*v1 + 176);
  uint64_t v5 = *(void *)(*v1 + 168);
  uint64_t v6 = *(void *)(*v1 + 80);
  uint64_t v7 = *(void *)(*v1 + 72);
  uint64_t v8 = *(void *)(*v1 + 64);
  *(void *)(*v1 + 224) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v9 = *(void *)(v2 + 200);
  uint64_t v10 = *(void *)(v2 + 208);
  if (v0) {
    uint64_t v11 = sub_1003FCF7C;
  }
  else {
    uint64_t v11 = sub_1003FCEAC;
  }
  return _swift_task_switch(v11, v9, v10);
}

uint64_t sub_1003FCEAC()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003FCF7C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t _s11MobileNotes06DeleteB6IntentVACycfC_0()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v30 = *(void *)(v0 - 8);
  uint64_t v31 = v0;
  __chkstk_darwin(v0);
  unint64_t v29 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  id v28 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  Swift::String v27 = (char *)v21 - v5;
  uint64_t v6 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v6 - 8);
  uint64_t v26 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v8 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Locale();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v12 - 8);
  uint64_t v25 = type metadata accessor for LocalizedStringResource();
  uint64_t v22 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  v21[1] = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002F214((uint64_t *)&unk_10069CE60);
  unint64_t v32 = 0xD000000000000021;
  unint64_t v33 = 0x8000000100549290;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v24 = AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069B130);
  unint64_t v32 = 0xD000000000000024;
  unint64_t v33 = 0x8000000100549260;
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  v21[2] = AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069B140);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v14 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  uint64_t v16 = v23;
  v15(v10, enum case for LocalizedStringResource.BundleDescription.main(_:), v23);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v15(v10, v14, v16);
  uint64_t v17 = v26;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v17, 0, 1, v25);
  uint64_t v34 = 0;
  uint64_t v18 = type metadata accessor for IntentDialog();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v27, 1, 1, v18);
  v19(v28, 1, 1, v18);
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v29, enum case for InputConnectionBehavior.default(_:), v31);
  sub_1003FD7EC();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  return v24;
}

uint64_t sub_1003FD5F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003FD624(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *uint64_t v10 = v3;
  v10[1] = sub_100161724;
  return sub_1003FC4F0(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_1003FD6E8()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_10017B61C;
  return sub_1003FC7B0(v2, v3, v4);
}

unint64_t sub_1003FD794()
{
  unint64_t result = qword_1006A6938;
  if (!qword_1006A6938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A6938);
  }
  return result;
}

unint64_t sub_1003FD7EC()
{
  unint64_t result = qword_10069B1E0;
  if (!qword_10069B1E0)
  {
    type metadata accessor for NoteEntity(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069B1E0);
  }
  return result;
}

unint64_t sub_1003FD84C()
{
  unint64_t result = qword_1006A6948;
  if (!qword_1006A6948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A6948);
  }
  return result;
}

unint64_t sub_1003FD8A4()
{
  unint64_t result = qword_1006A6950;
  if (!qword_1006A6950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A6950);
  }
  return result;
}

uint64_t sub_1003FD8F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1003FD914()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for DeleteNotesIntent()
{
  return &type metadata for DeleteNotesIntent;
}

uint64_t sub_1003FD940()
{
  return sub_10001DFB0(&qword_1006A6960, &qword_1006A6968);
}

id sub_1003FDADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a4)
  {
    NSString v13 = 0;
    if (a6) {
      goto LABEL_3;
    }
LABEL_5:
    NSString v14 = 0;
    goto LABEL_6;
  }
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a6) {
    goto LABEL_5;
  }
LABEL_3:
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_6:
  v17.receiver = v7;
  v17.super_class = ObjectType;
  id v15 = [super initWithTitle:v12 detailText:v13 symbolName:v14 contentLayout:a7];

  return v15;
}

BOOL static NSOperatingSystemVersion.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return a1 == a4 && a2 == a5 && a3 == a6;
}

BOOL static NSOperatingSystemVersion.< infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v6 = a2 < a5;
  if (a2 == a5) {
    BOOL v6 = a3 < a6;
  }
  if (a1 == a4) {
    return v6;
  }
  else {
    return a1 < a4;
  }
}

unint64_t sub_1003FDDD0()
{
  unint64_t result = qword_1006A6988;
  if (!qword_1006A6988)
  {
    type metadata accessor for OperatingSystemVersion(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A6988);
  }
  return result;
}

BOOL sub_1003FDE28(void *a1, void *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  BOOL v4 = v2 == v3;
  BOOL v5 = v2 < v3;
  if (v4) {
    BOOL v5 = a1[2] < a2[2];
  }
  if (*a1 == *a2) {
    return v5;
  }
  else {
    return *a1 < *a2;
  }
}

BOOL sub_1003FDE60(void *a1, void *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  BOOL v4 = v3 == v2;
  BOOL v5 = v3 < v2;
  if (v4) {
    BOOL v5 = a2[2] < a1[2];
  }
  if (*a2 == *a1) {
    BOOL v6 = v5;
  }
  else {
    BOOL v6 = *a2 < *a1;
  }
  return !v6;
}

BOOL sub_1003FDE9C(void *a1, void *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  BOOL v4 = v2 == v3;
  BOOL v5 = v2 < v3;
  if (v4) {
    BOOL v5 = a1[2] < a2[2];
  }
  if (*a1 == *a2) {
    BOOL v6 = v5;
  }
  else {
    BOOL v6 = *a1 < *a2;
  }
  return !v6;
}

BOOL sub_1003FDED8(void *a1, void *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  BOOL v4 = v3 == v2;
  BOOL v5 = v3 < v2;
  if (v4) {
    BOOL v5 = a2[2] < a1[2];
  }
  if (*a2 == *a1) {
    return v5;
  }
  else {
    return *a2 < *a1;
  }
}

BOOL sub_1003FDF10(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t type metadata accessor for SystemPaperWelcomeViewController()
{
  return self;
}

BOOL sub_1003FDF64()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 objectForKey:v1];

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  sub_1001BC02C((uint64_t)v8, (uint64_t)v9);
  if (!v10)
  {
    sub_100015BE0((uint64_t)v9);
    return 1;
  }
  sub_10002F214(&qword_1006A69B8);
  if ((swift_dynamicCast() & 1) == 0) {
    return 1;
  }
  if (v7[2] != 3)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  uint64_t v4 = v7[4];
  unint64_t v3 = v7[5];
  unint64_t v5 = v7[6];
  swift_bridgeObjectRelease();
  if (v4 != 15) {
    return v4 < 15;
  }
  if (v3) {
    return v3 >> 63;
  }
  return v5 >> 63;
}

id sub_1003FE0B8()
{
  if (!sub_1003FDF64()) {
    return 0;
  }
  id v0 = self;
  id v1 = [v0 mainBundle];
  v21._countAndFlagsBits = 0xD00000000000001BLL;
  v21._object = (void *)0x800000010055D130;
  v2._object = (void *)0x800000010055D110;
  v2._countAndFlagsBits = 0xD000000000000014;
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v21);

  id v4 = [v0 mainBundle];
  v22._countAndFlagsBits = 0xD000000000000016;
  v5._countAndFlagsBits = 0xD0000000000000AALL;
  v22._object = (void *)0x800000010055D200;
  v5._object = (void *)0x800000010055D150;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v22);

  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [self _systemImageNamed:v7];

  id v9 = [v0 mainBundle];
  v23._countAndFlagsBits = 0xD000000000000040;
  v23._object = (void *)0x800000010055D220;
  v10._countAndFlagsBits = 0x7261745320746547;
  v10._object = (void *)0xEB00000000646574;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v23);

  id v12 = objc_allocWithZone((Class)type metadata accessor for SystemPaperWelcomeViewController());
  id v13 = v8;
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v16 = [v12 initWithTitle:v14 detailText:v15 icon:v13 contentLayout:2];

  id v17 = [self boldButton];
  [v17 addTarget:v16 action:"dismiss:" forControlEvents:64];
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v17 setTitle:v18 forState:0];

  id v19 = [v16 buttonTray];
  [v19 addButton:v17];

  [v16 setModalPresentationStyle:2];
  return v16;
}

uint64_t sub_1003FE3EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v1 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v29 = v1;
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Locale();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_10002F214(&qword_1006A6A18);
  uint64_t v33 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  unint64_t v32 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v12 = (char *)&v28 - v11;
  uint64_t v35 = sub_10023F6CC();
  uint64_t v36 = v13;
  uint64_t v37 = v14;
  char v38 = v15 & 1;
  uint64x2_t v16 = (uint64x2_t)vdupq_n_s64(v15);
  uint64x2_t v31 = (uint64x2_t)xmmword_100524CF0;
  uint64x2_t v30 = (uint64x2_t)xmmword_100524D00;
  int16x8_t v17 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v16, (uint64x2_t)xmmword_100524D00), (int32x4_t)vshlq_u64(v16, (uint64x2_t)xmmword_100524CF0));
  *(int8x8_t *)v17.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v17), (int8x8_t)0x1000100010001);
  unsigned __int32 v39 = vmovn_s16(v17).u32[0];
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  id v19 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  uint64_t v28 = v2 + 104;
  v19(v4, enum case for LocalizedStringResource.BundleDescription.main(_:), v1);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  sub_10023FDA4();
  AppShortcutOptionsCollection.init(_:title:systemImageName:)();
  uint64_t v35 = sub_10023F448();
  uint64_t v36 = v20;
  uint64_t v37 = v21;
  char v38 = v22 & 1;
  uint64x2_t v23 = (uint64x2_t)vdupq_n_s64(v22);
  int16x8_t v24 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v23, v30), (int32x4_t)vshlq_u64(v23, v31));
  *(int8x8_t *)v24.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v24), (int8x8_t)0x1000100010001);
  unsigned __int32 v39 = vmovn_s16(v24).u32[0];
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v4, v18, v29);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v25 = v32;
  AppShortcutOptionsCollection.init(_:title:systemImageName:)();
  type metadata accessor for NoteEntity(0);
  sub_1003FF530();
  sub_1003FF588();
  static AppShortcutOptionsCollectionSpecificationBuilder.buildBlock<A, B>(_:_:)();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v33 + 8);
  v26(v25, v8);
  return ((uint64_t (*)(char *, uint64_t))v26)(v12, v8);
}

uint64_t sub_1003FE890@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for ShortcutTileColor.yellow(_:);
  uint64_t v3 = type metadata accessor for ShortcutTileColor();
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

ValueMetadata *type metadata accessor for NotesAppShortcuts()
{
  return &type metadata for NotesAppShortcuts;
}

uint64_t sub_1003FE914()
{
  uint64_t v0 = sub_10002F214(&qword_1006A69C0);
  __chkstk_darwin(v0 - 8);
  uint64_t v49 = (char *)&v42 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_10002F214(&qword_1006A69C8);
  __chkstk_darwin(v47);
  uint64_t v46 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10002F214(&qword_1006A69D0);
  __chkstk_darwin(v3 - 8);
  Swift::Bool v48 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10002F214(&qword_1006A69D8);
  __chkstk_darwin(v5 - 8);
  id v51 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = sub_10002F214(&qword_1006A69E0);
  __chkstk_darwin(KeyPath);
  uint64_t v57 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v7 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  BOOL v61 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v15 - 8);
  uint64_t v52 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for AppShortcut();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v62 = v17;
  uint64_t v63 = v18;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001C4064(v64);
  sub_10002F214(&qword_1006A69E8);
  sub_10002F214(&qword_1006A69F0);
  uint64_t v21 = swift_allocObject();
  long long v60 = xmmword_100524D10;
  *(_OWORD *)(v21 + 16) = xmmword_100524D10;
  sub_100035308();
  AppShortcutPhrase.init(stringLiteral:)();
  uint64_t v53 = v14;
  String.LocalizationValue.init(stringLiteral:)();
  id v54 = v11;
  static Locale.current.getter();
  unsigned int v58 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  id v55 = *(void (**)(char *))(v7 + 104);
  uint64_t v59 = v7 + 104;
  v55(v61);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v43 = v20;
  AppShortcut.init<A>(intent:phrases:shortTitle:systemImageName:)();
  uint64_t v50 = static AppShortcutsBuilder.buildExpression(_:)();
  unint64_t v22 = *(void (**)(char *, uint64_t))(v63 + 8);
  v63 += 8;
  id v56 = v22;
  v22(v20, v62);
  v64[7] = _s11MobileNotes14OpenNoteIntentVACycfC_0();
  v64[8] = v23;
  v64[9] = v24;
  sub_10002F214(&qword_1006A69F8);
  sub_10002F214(&qword_1006A6A00);
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = v60;
  sub_100035854();
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v25._countAndFlagsBits = 0x656874206E65704FLL;
  v25._object = (void *)0xEE002065746F6E20;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v25);
  swift_getKeyPath();
  sub_10002F214(&qword_1006A6A08);
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v26);
  AppShortcutPhrase.init(stringInterpolation:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  ((void (*)(char *, void, uint64_t))v55)(v61, v58, v57);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v27 = type metadata accessor for NoteEntity(0);
  sub_10002F214(&qword_10069B1D8);
  unint64_t v28 = sub_1003FF530();
  AppShortcutParameterPresentationSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v29._countAndFlagsBits = 0x206E65704FLL;
  v29._object = (void *)0xE500000000000000;
  AppShortcutParameterPresentationSummaryString.StringInterpolation.appendLiteral(_:)(v29);
  swift_getKeyPath();
  AppShortcutParameterPresentationSummaryString.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v30._countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  AppShortcutParameterPresentationSummaryString.StringInterpolation.appendLiteral(_:)(v30);
  AppShortcutParameterPresentationSummaryString.init(stringInterpolation:)();
  AppShortcutParameterPresentationSummary.init(_:table:)();
  sub_10002F214(&qword_1006A6A10);
  uint64_t v31 = sub_10001DFF4(&qword_1006A6A18);
  unint64_t v32 = sub_1003FF588();
  v64[0] = v27;
  v64[1] = v31;
  v64[2] = v31;
  v64[3] = v28;
  v64[4] = v32;
  v64[5] = v32;
  swift_getOpaqueTypeConformance2();
  AppShortcutParameterPresentation.init<A>(for:summary:optionsCollections:)();
  uint64_t v33 = v43;
  AppShortcut.init<A, B, C, D>(intent:phrases:shortTitle:systemImageName:parameterPresentation:)();
  id v51 = (char *)static AppShortcutsBuilder.buildExpression(_:)();
  v56(v33, v62);
  id v34 = [self configurationForDefaultMainDisplayMonitor];
  id v35 = [self monitorWithConfiguration:v34];

  type metadata accessor for ShowQuickNoteIntent.LayoutMonitorBox();
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = v35;
  v64[0] = v36;
  sub_10002F214(&qword_1006A6A28);
  sub_10002F214(&qword_1006A6A30);
  *(_OWORD *)(swift_allocObject() + 16) = v60;
  sub_1001FD51C();
  AppShortcutPhrase.init(stringLiteral:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  ((void (*)(char *, void, uint64_t))v55)(v61, v58, v57);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  AppShortcut.init<A>(intent:phrases:shortTitle:systemImageName:)();
  uint64_t v37 = static AppShortcutsBuilder.buildExpression(_:)();
  v56(v33, v62);
  sub_10002F214(&qword_1006A6A38);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_100529A00;
  unsigned __int32 v39 = v51;
  *(void *)(v38 + 32) = v50;
  *(void *)(v38 + 40) = v39;
  *(void *)(v38 + 48) = v37;
  uint64_t v40 = static AppShortcutsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v40;
}

unint64_t sub_1003FF530()
{
  unint64_t result = qword_10069CD70;
  if (!qword_10069CD70)
  {
    type metadata accessor for NoteEntity(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10069CD70);
  }
  return result;
}

unint64_t sub_1003FF588()
{
  unint64_t result = qword_1006A6A20;
  if (!qword_1006A6A20)
  {
    sub_10001DFF4(&qword_1006A6A18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A6A20);
  }
  return result;
}

objc_class *sub_1003FF5E4()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menu;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menu);
  if (v2)
  {
    uint64_t v3 = *(objc_class **)(v0 + OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menu);
  }
  else
  {
    uint64_t v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_1006A4D40);
    sub_10002F214(&qword_10069BA00);
    uint64_t preferredElementSize = swift_allocObject();
    *(_OWORD *)(preferredElementSize + 16) = xmmword_1005378B0;
    *(void *)(preferredElementSize + 32) = sub_1003FFACC();
    *(void *)(preferredElementSize + 40) = sub_1003FFAF8();
    *(void *)(preferredElementSize + 48) = sub_1003FFC30();
    *(void *)(preferredElementSize + 56) = sub_1003FFC5C();
    *(void *)(preferredElementSize + 64) = sub_1003FFC88();
    *(void *)(preferredElementSize + 72) = sub_1003FFCB4();
    *(void *)(preferredElementSize + 80) = sub_1003FFCE0();
    specialized Array._endMutation()();
    v6._countAndFlagsBits = 0;
    v6._object = (void *)0xE000000000000000;
    v14.value.super.Class isa = 0;
    v14.is_nil = 0;
    Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v6, (Swift::String_optional)0, v14, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, (Swift::OpaquePointer)preferredElementSize).super.super.isa;
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_100524CE0;
    *(void *)(v8 + 32) = sub_1003FF964();
    *(void *)(v8 + 40) = isa;
    specialized Array._endMutation()();
    v9._countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    v15.value.super.Class isa = 0;
    v15.is_nil = 0;
    v10.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v9, (Swift::String_optional)0, v15, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v8, (Swift::OpaquePointer)v8).super.super.isa;
    uint64_t v11 = *(void **)(v0 + v1);
    *(UIMenu *)(v4 + v1) = v10;
    uint64_t v3 = v10.super.super.isa;

    uint64_t v2 = 0;
  }
  id v12 = v2;
  return v3;
}

void sub_1003FF77C()
{
  id v1 = *(id *)(v0 + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection);
  if (v1)
  {
    self;
    uint64_t v2 = (void *)swift_dynamicCastObjCClass();
    if (v2)
    {
      id v1 = [v2 selectionType];
      unsigned int v3 = 0;
      goto LABEL_6;
    }
    id v1 = 0;
  }
  unsigned int v3 = 1;
LABEL_6:
  uint64_t v4 = (void *)sub_1003FF964();
  [v4 setState:v3];

  id v5 = sub_1003FFACC();
  Swift::String v6 = v5;
  unsigned int v7 = v3 ^ 1;
  if (v1) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = v7;
  }
  [v5 setState:v8];

  id v9 = sub_1003FFAF8();
  UIMenu v10 = v9;
  if (v1 == (id)1) {
    uint64_t v11 = v7;
  }
  else {
    uint64_t v11 = 0;
  }
  [v9 setState:v11];

  id v12 = sub_1003FFC30();
  uint64_t v13 = v12;
  if (v1 == (id)2) {
    uint64_t v14 = v7;
  }
  else {
    uint64_t v14 = 0;
  }
  [v12 setState:v14];

  id v15 = sub_1003FFC5C();
  uint64_t v16 = v15;
  if (v1 == (id)3) {
    uint64_t v17 = v7;
  }
  else {
    uint64_t v17 = 0;
  }
  [v15 setState:v17];

  id v18 = sub_1003FFC88();
  uint64_t v19 = v18;
  if (v1 == (id)4) {
    uint64_t v20 = v7;
  }
  else {
    uint64_t v20 = 0;
  }
  [v18 setState:v20];

  id v21 = sub_1003FFCB4();
  unint64_t v22 = v21;
  if (v1 == (id)5) {
    uint64_t v23 = v7;
  }
  else {
    uint64_t v23 = 0;
  }
  [v21 setState:v23];

  id v24 = sub_1003FFF0C();
  Swift::String v25 = v24;
  if (v1 == (id)7) {
    uint64_t v26 = v7;
  }
  else {
    uint64_t v26 = 0;
  }
  [v24 setState:v26];

  id v27 = sub_1003FFF38();
  unint64_t v28 = v27;
  if (v1 == (id)6) {
    uint64_t v29 = v7;
  }
  else {
    uint64_t v29 = 0;
  }
  [v27 setState:v29];

  id v30 = sub_1003FFF64();
  uint64_t v31 = v30;
  if (v1 == (id)8) {
    uint64_t v32 = v7;
  }
  else {
    uint64_t v32 = 0;
  }
  [v30 setState:v32];

  id v33 = sub_1003FFF90();
  id v34 = v33;
  if (v1 == (id)9) {
    uint64_t v35 = v7;
  }
  else {
    uint64_t v35 = 0;
  }
  [v33 setState:v35];

  id v36 = sub_1003FFFBC();
  id v38 = v36;
  if (v1 == (id)10) {
    uint64_t v37 = v7;
  }
  else {
    uint64_t v37 = 0;
  }
  [v36 setState:v37];
}

id sub_1003FF964()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionOff;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionOff];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionOff];
  }
  else
  {
    uint64_t v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(swift_allocObject() + 16) = v0;
    uint64_t v8 = v0;
    id v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    UIMenu v10 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id sub_1003FFACC()
{
  return sub_1003FFB24(&OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionToday);
}

id sub_1003FFAF8()
{
  return sub_1003FFB24(&OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionYesterday);
}

id sub_1003FFB24(uint64_t *a1)
{
  uint64_t v2 = *a1;
  id v3 = *(void **)&v1[*a1];
  if (v3)
  {
    id v4 = *(id *)&v1[*a1];
  }
  else
  {
    id v5 = v1;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v6 = (id)ICLocalizedStringFromICDateFilterSelectionType();
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    *(void *)(swift_allocObject() + 16) = v1;
    id v7 = v1;
    uint64_t v8 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v9 = *(void **)&v1[v2];
    *(void *)&v5[v2] = v8;
    id v4 = v8;

    id v3 = 0;
  }
  id v10 = v3;
  return v4;
}

id sub_1003FFC30()
{
  return sub_1003FFB24(&OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionLastSevenDays);
}

id sub_1003FFC5C()
{
  return sub_1003FFB24(&OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionLastThirtyDays);
}

id sub_1003FFC88()
{
  return sub_1003FFB24(&OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionLastThreeMonths);
}

id sub_1003FFCB4()
{
  return sub_1003FFB24(&OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionLastTwelveMonths);
}

objc_class *sub_1003FFCE0()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___customMenu;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___customMenu);
  if (v2)
  {
    id v3 = *(objc_class **)(v0 + OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___customMenu);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v10 = v9;

    sub_10002F214(&qword_10069BA00);
    unint64_t children = swift_allocObject();
    *(_OWORD *)(children + 16) = xmmword_1005352B0;
    *(void *)(children + 32) = sub_1003FFF0C();
    *(void *)(children + 40) = sub_1003FFF38();
    *(void *)(children + 48) = sub_1003FFF64();
    *(void *)(children + 56) = sub_1003FFF90();
    *(void *)(children + 64) = sub_1003FFFBC();
    specialized Array._endMutation()();
    if (children >> 62)
    {
      sub_100031418(0, (unint64_t *)&qword_1006A4D30);
      swift_bridgeObjectRetain();
      UIMenuElementSize preferredElementSize = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_100031418(0, (unint64_t *)&qword_1006A4D30);
      UIMenuElementSize preferredElementSize = children;
    }
    swift_bridgeObjectRelease();
    sub_100031418(0, (unint64_t *)&unk_1006A4D40);
    v13._countAndFlagsBits = v8;
    v13._object = v10;
    v18.value.super.Class isa = 0;
    v18.is_nil = 0;
    v14.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v13, (Swift::String_optional)0, v18, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, (Swift::OpaquePointer)children).super.super.isa;
    id v15 = *(void **)(v4 + v1);
    *(UIMenu *)(v4 + v1) = v14;
    id v3 = v14.super.super.isa;

    uint64_t v2 = 0;
  }
  id v16 = v2;
  return v3;
}

id sub_1003FFF0C()
{
  return sub_1003FFB24(&OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionRelativeRange);
}

id sub_1003FFF38()
{
  return sub_1003FFB24(&OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionSpecificRange);
}

id sub_1003FFF64()
{
  return sub_1003FFB24(&OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionSpecificDate);
}

id sub_1003FFF90()
{
  return sub_1003FFB24(&OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionBeforeDate);
}

id sub_1003FFFBC()
{
  return sub_1003FFB24(&OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionAfterDate);
}

uint64_t sub_1003FFFE8()
{
  return sub_100031418(0, &qword_1006A6AD8);
}

void sub_100400014(uint64_t a1, char *a2)
{
  id v3 = *(void **)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection];
  *(void *)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection] = 0;

  [a2 setNeedsUpdateConfiguration];
  sub_1003FF77C();
  uint64_t v4 = *(void (**)(uint64_t))&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange];
  if (v4)
  {
    uint64_t v5 = swift_retain();
    v4(v5);
    sub_10002E70C((uint64_t)v4);
  }
}

uint64_t sub_1004000B0(uint64_t a1, void *a2)
{
  (*(void (**)(void))((swift_isaMask & *a2) + 0x220))();
  id v3 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithSelectionType:0];
  uint64_t v4 = *(void **)((char *)a2 + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection);
  *(void *)((char *)a2 + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection) = v3;
  id v5 = v3;

  [a2 setNeedsUpdateConfiguration];
  uint64_t result = sub_1003FF77C();
  id v7 = *(void (**)(uint64_t))((char *)a2
                                      + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange);
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    return sub_10002E70C((uint64_t)v7);
  }
  return result;
}

uint64_t sub_1004001B8(uint64_t a1, void *a2)
{
  (*(void (**)(void))((swift_isaMask & *a2) + 0x220))();
  id v3 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithSelectionType:1];
  uint64_t v4 = *(void **)((char *)a2 + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection);
  *(void *)((char *)a2 + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection) = v3;
  id v5 = v3;

  [a2 setNeedsUpdateConfiguration];
  uint64_t result = sub_1003FF77C();
  id v7 = *(void (**)(uint64_t))((char *)a2
                                      + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange);
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    return sub_10002E70C((uint64_t)v7);
  }
  return result;
}

uint64_t sub_1004002C0(uint64_t a1, void *a2)
{
  (*(void (**)(void))((swift_isaMask & *a2) + 0x220))();
  id v3 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithSelectionType:2];
  uint64_t v4 = *(void **)((char *)a2 + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection);
  *(void *)((char *)a2 + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection) = v3;
  id v5 = v3;

  [a2 setNeedsUpdateConfiguration];
  uint64_t result = sub_1003FF77C();
  id v7 = *(void (**)(uint64_t))((char *)a2
                                      + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange);
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    return sub_10002E70C((uint64_t)v7);
  }
  return result;
}

uint64_t sub_1004003C8(uint64_t a1, void *a2)
{
  (*(void (**)(void))((swift_isaMask & *a2) + 0x220))();
  id v3 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithSelectionType:3];
  uint64_t v4 = *(void **)((char *)a2 + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection);
  *(void *)((char *)a2 + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection) = v3;
  id v5 = v3;

  [a2 setNeedsUpdateConfiguration];
  uint64_t result = sub_1003FF77C();
  id v7 = *(void (**)(uint64_t))((char *)a2
                                      + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange);
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    return sub_10002E70C((uint64_t)v7);
  }
  return result;
}

uint64_t sub_1004004D0(uint64_t a1, void *a2)
{
  (*(void (**)(void))((swift_isaMask & *a2) + 0x220))();
  id v3 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithSelectionType:4];
  uint64_t v4 = *(void **)((char *)a2 + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection);
  *(void *)((char *)a2 + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection) = v3;
  id v5 = v3;

  [a2 setNeedsUpdateConfiguration];
  uint64_t result = sub_1003FF77C();
  id v7 = *(void (**)(uint64_t))((char *)a2
                                      + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange);
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    return sub_10002E70C((uint64_t)v7);
  }
  return result;
}

uint64_t sub_1004005D8(uint64_t a1, void *a2)
{
  (*(void (**)(void))((swift_isaMask & *a2) + 0x220))();
  id v3 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithSelectionType:5];
  uint64_t v4 = *(void **)((char *)a2 + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection);
  *(void *)((char *)a2 + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection) = v3;
  id v5 = v3;

  [a2 setNeedsUpdateConfiguration];
  uint64_t result = sub_1003FF77C();
  id v7 = *(void (**)(uint64_t))((char *)a2
                                      + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange);
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    return sub_10002E70C((uint64_t)v7);
  }
  return result;
}

uint64_t sub_1004006E0(uint64_t a1, void *a2)
{
  (*(void (**)(void))((swift_isaMask & *a2) + 0x220))();
  id v3 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithSelectionType:7];
  uint64_t v4 = *(void **)((char *)a2 + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection);
  *(void *)((char *)a2 + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection) = v3;
  id v5 = v3;

  [a2 setNeedsUpdateConfiguration];
  uint64_t result = sub_1003FF77C();
  id v7 = *(void (**)(uint64_t))((char *)a2
                                      + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange);
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    return sub_10002E70C((uint64_t)v7);
  }
  return result;
}

uint64_t sub_1004007E8(uint64_t a1, void *a2)
{
  (*(void (**)(void))((swift_isaMask & *a2) + 0x220))();
  id v3 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithSelectionType:6];
  uint64_t v4 = *(void **)((char *)a2 + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection);
  *(void *)((char *)a2 + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection) = v3;
  id v5 = v3;

  [a2 setNeedsUpdateConfiguration];
  uint64_t result = sub_1003FF77C();
  id v7 = *(void (**)(uint64_t))((char *)a2
                                      + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange);
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    return sub_10002E70C((uint64_t)v7);
  }
  return result;
}

uint64_t sub_1004008F0(uint64_t a1, void *a2)
{
  (*(void (**)(void))((swift_isaMask & *a2) + 0x220))();
  id v3 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithSelectionType:8];
  uint64_t v4 = *(void **)((char *)a2 + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection);
  *(void *)((char *)a2 + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection) = v3;
  id v5 = v3;

  [a2 setNeedsUpdateConfiguration];
  uint64_t result = sub_1003FF77C();
  id v7 = *(void (**)(uint64_t))((char *)a2
                                      + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange);
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    return sub_10002E70C((uint64_t)v7);
  }
  return result;
}

uint64_t sub_1004009F8(uint64_t a1, void *a2)
{
  (*(void (**)(void))((swift_isaMask & *a2) + 0x220))();
  id v3 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithSelectionType:9];
  uint64_t v4 = *(void **)((char *)a2 + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection);
  *(void *)((char *)a2 + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection) = v3;
  id v5 = v3;

  [a2 setNeedsUpdateConfiguration];
  uint64_t result = sub_1003FF77C();
  id v7 = *(void (**)(uint64_t))((char *)a2
                                      + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange);
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    return sub_10002E70C((uint64_t)v7);
  }
  return result;
}

uint64_t sub_100400B00(uint64_t a1, void *a2)
{
  (*(void (**)(void))((swift_isaMask & *a2) + 0x220))();
  id v3 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithSelectionType:10];
  uint64_t v4 = *(void **)((char *)a2 + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection);
  *(void *)((char *)a2 + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection) = v3;
  id v5 = v3;

  [a2 setNeedsUpdateConfiguration];
  uint64_t result = sub_1003FF77C();
  id v7 = *(void (**)(uint64_t))((char *)a2
                                      + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange);
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    return sub_10002E70C((uint64_t)v7);
  }
  return result;
}

id sub_100400C08(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menu] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionOff] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionToday] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionYesterday] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionLastSevenDays] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionLastThirtyDays] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionLastThreeMonths] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionLastTwelveMonths] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___customMenu] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionRelativeRange] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionSpecificRange] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionSpecificDate] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionBeforeDate] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionAfterDate] = 0;
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for FolderComposerFilterCellDate();
  return [super initWithFrame:a1, a2, a3, a4];
}

id sub_100400D38(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menu] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionOff] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionToday] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionYesterday] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionLastSevenDays] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionLastThirtyDays] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionLastThreeMonths] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionLastTwelveMonths] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___customMenu] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionRelativeRange] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionSpecificRange] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionSpecificDate] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionBeforeDate] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionAfterDate] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for FolderComposerFilterCellDate();
  [super initWithCoder:a1];

  return v3;
}

void sub_100400E58()
{
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionYesterday));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionLastSevenDays));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionLastThirtyDays));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionLastThreeMonths));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionLastTwelveMonths));

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionRelativeRange));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionSpecificRange));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionSpecificDate));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionBeforeDate));
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes28FolderComposerFilterCellDate____lazy_storage___menuActionAfterDate);
}

id sub_100400F58()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FolderComposerFilterCellDate();
  return [super dealloc];
}

uint64_t type metadata accessor for FolderComposerFilterCellDate()
{
  return self;
}

objc_class *sub_1004010BC()
{
  return sub_1003FF5E4();
}

void sub_1004010E0()
{
}

uint64_t sub_100401104()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10040113C(uint64_t a1)
{
  return sub_100400B00(a1, *(void **)(v1 + 16));
}

uint64_t sub_100401144(uint64_t a1)
{
  return sub_1004009F8(a1, *(void **)(v1 + 16));
}

uint64_t sub_10040114C(uint64_t a1)
{
  return sub_1004008F0(a1, *(void **)(v1 + 16));
}

uint64_t sub_100401154(uint64_t a1)
{
  return sub_1004007E8(a1, *(void **)(v1 + 16));
}

uint64_t sub_10040115C(uint64_t a1)
{
  return sub_1004006E0(a1, *(void **)(v1 + 16));
}

uint64_t sub_100401164(uint64_t a1)
{
  return sub_1004005D8(a1, *(void **)(v1 + 16));
}

uint64_t sub_10040116C(uint64_t a1)
{
  return sub_1004004D0(a1, *(void **)(v1 + 16));
}

uint64_t sub_100401174(uint64_t a1)
{
  return sub_1004003C8(a1, *(void **)(v1 + 16));
}

uint64_t sub_10040117C(uint64_t a1)
{
  return sub_1004002C0(a1, *(void **)(v1 + 16));
}

uint64_t sub_100401184(uint64_t a1)
{
  return sub_1004001B8(a1, *(void **)(v1 + 16));
}

uint64_t sub_10040118C(uint64_t a1)
{
  return sub_1004000B0(a1, *(void **)(v1 + 16));
}

void sub_100401194(uint64_t a1)
{
  sub_100400014(a1, *(char **)(v1 + 16));
}

double CreateTableIntent.init()@<D0>(_OWORD *a1@<X8>)
{
  sub_100403CBC((uint64_t *)v5);
  long long v2 = v5[1];
  *a1 = v5[0];
  a1[1] = v2;
  double result = *(double *)&v6;
  long long v4 = v7;
  a1[2] = v6;
  a1[3] = v4;
  return result;
}

uint64_t CreateTableIntent.note.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NoteEntity(0);
  __chkstk_darwin(v2 - 8);
  sub_1004048C0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NoteEntity);
  IntentParameter.wrappedValue.setter();
  return sub_100404928(a1, type metadata accessor for NoteEntity);
}

void *CreateTableIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static CreateTableIntent.persistentIdentifier;
}

unint64_t static CreateTableIntent.persistentIdentifier.getter()
{
  return 0xD000000000000015;
}

uint64_t sub_1004012DC()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100032974(v6, static CreateTableIntent.title);
  sub_10003293C(v6, (uint64_t)static CreateTableIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t CreateTableIntent.title.unsafeMutableAddressor()
{
  if (qword_10069B028 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();

  return sub_10003293C(v0, (uint64_t)static CreateTableIntent.title);
}

uint64_t static CreateTableIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069B028 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10003293C(v2, (uint64_t)static CreateTableIntent.title);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t static CreateTableIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t static CreateTableIntent.parameterSummary.getter()
{
  uint64_t v0 = sub_10002F214(&qword_1006A6AE0);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10002F214(&qword_1006A6AE8);
  __chkstk_darwin(v1);
  sub_1001FD420();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._countAndFlagsBits = 0x6174206120646441;
  v2._object = (void *)0xEF206F7420656C62;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10002F214(&qword_1006A6AF0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0x736E6920646E6120;
  v3._object = (void *)0xEC00000020747265;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  sub_10002F214(&qword_1006A6AF8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:_:)();
}

uint64_t sub_100401AC8()
{
  swift_getKeyPath();
  sub_1001FD420();
  uint64_t v0 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)();
  swift_release();
  sub_10002F214(&qword_10069BA00);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100529F20;
  *(void *)(v1 + 32) = v0;
  specialized Array._endMutation()();
  swift_retain();
  uint64_t v2 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  swift_release();
  return v2;
}

uint64_t CreateTableIntent.perform()(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  v2[12] = type metadata accessor for TableEntity();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for NoteID();
  v2[17] = v3;
  v2[18] = *(void *)(v3 - 8);
  v2[19] = swift_task_alloc();
  type metadata accessor for NoteEntity(0);
  v2[20] = swift_task_alloc();
  return _swift_task_switch(sub_100401CD4, 0, 0);
}

uint64_t sub_100401CD4()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[18];
  AppDependency.wrappedValue.getter();
  uint64_t v5 = (void *)v0[5];
  v0[21] = [v5 modernManagedObjectContext];

  IntentParameter.wrappedValue.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1, v3);
  sub_100404928(v1, type metadata accessor for NoteEntity);
  AppDependency.wrappedValue.getter();
  uint64_t v6 = v0[6];
  v0[22] = v6;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1006A3B80 + dword_1006A3B80);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[23] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_100401E38;
  uint64_t v8 = v0[19];
  return v10(v8, v6);
}

uint64_t sub_100401E38(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)v1 + 176);
  uint64_t v3 = *(void *)(*(void *)v1 + 152);
  uint64_t v4 = *(void *)(*(void *)v1 + 144);
  uint64_t v5 = *(void *)(*(void *)v1 + 136);
  *(void *)(*(void *)v1 + 192) = a1;
  swift_task_dealloc();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  return _swift_task_switch(sub_100401FB0, 0, 0);
}

uint64_t sub_100401FB0()
{
  uint64_t v1 = (void *)v0[24];
  uint64_t v2 = (void *)v0[21];
  uint64_t v3 = (long long *)v0[11];
  uint64_t v4 = swift_allocObject();
  v0[25] = v4;
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v2;
  long long v5 = *v3;
  long long v6 = v3[1];
  long long v7 = v3[3];
  *(_OWORD *)(v4 + 64) = v3[2];
  *(_OWORD *)(v4 + 80) = v7;
  *(_OWORD *)(v4 + 32) = v5;
  *(_OWORD *)(v4 + 48) = v6;
  id v8 = v1;
  id v9 = v2;
  sub_1002541E0((uint64_t)v3);
  uint64_t v10 = (void *)swift_task_alloc();
  v0[26] = v10;
  uint64_t v11 = sub_10002F214(&qword_10069D520);
  *uint64_t v10 = v0;
  v10[1] = sub_1004020D4;
  return NSManagedObjectContext.perform<A>(_:)(v0 + 7, sub_1004048A0, v4, v11);
}

uint64_t sub_1004020D4()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100252CC4;
  }
  else {
    uint64_t v2 = sub_100402208;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100402208()
{
  uint64_t v1 = *(void **)(v0 + 56);
  *(void *)(v0 + 224) = v1;
  if (v1)
  {
    id v2 = *(id *)(v0 + 168);
    id v3 = v1;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1004023EC;
    uint64_t v5 = *(void *)(v0 + 168);
    uint64_t v6 = *(void *)(v0 + 128);
    return TableEntity.init(for:in:)(v6, (uint64_t)v3, v5);
  }
  else
  {
    id v8 = *(void **)(v0 + 192);
    id v9 = *(void **)(v0 + 168);
    type metadata accessor for ICError(0);
    *(void *)(v0 + 72) = 227;
    sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
    sub_100404A28((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_1004023EC()
{
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_100252D78;
  }
  else {
    id v2 = sub_100402500;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100402500()
{
  uint64_t v12 = (void *)v0[28];
  uint64_t v13 = (void *)v0[21];
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[13];
  uint64_t v4 = v0[14];
  UIMenu v14 = (void *)v0[24];
  sub_1004048C0(v2, v1, (uint64_t (*)(void))type metadata accessor for TableEntity);
  uint64_t v5 = _s11MobileNotes15OpenTableIntentVACycfC_0();
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  sub_1004048C0(v1, v4, (uint64_t (*)(void))type metadata accessor for TableEntity);
  sub_1004048C0(v4, v3, (uint64_t (*)(void))type metadata accessor for TableEntity);
  IntentParameter.wrappedValue.setter();
  sub_100404928(v4, (uint64_t (*)(void))type metadata accessor for TableEntity);
  sub_100404928(v1, (uint64_t (*)(void))type metadata accessor for TableEntity);
  v0[2] = v5;
  v0[3] = v7;
  v0[4] = v9;
  sub_100404A28(&qword_10069D3D8, (void (*)(uint64_t))type metadata accessor for TableEntity);
  sub_100035750();
  static IntentResult.result<A, B>(value:opensIntent:)();

  sub_100404928(v2, (uint64_t (*)(void))type metadata accessor for TableEntity);
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

void sub_1004026F8(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  os_log_t v117 = a4;
  uint64_t v124 = type metadata accessor for DataFrame.Row();
  uint64_t v112 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  double v130 = (char *)v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = type metadata accessor for DataFrame.Rows();
  uint64_t v128 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v125 = (char *)v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = (void *)type metadata accessor for UUID();
  uint64_t v119 = *(v120 - 1);
  __chkstk_darwin(v120);
  double v129 = (char *)v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = type metadata accessor for DataFrame();
  uint64_t v122 = *(void *)(v123 - 8);
  uint64_t v10 = __chkstk_darwin(v123);
  unint64_t v127 = (char *)v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v111 = (char *)v100 - v12;
  uint64_t v13 = type metadata accessor for CSVType();
  uint64_t v113 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = type metadata accessor for CSVReadingOptions();
  os_log_type_t v115 = *(void (***)(char *, char *, uint64_t))(v116 - 8);
  uint64_t v16 = __chkstk_darwin(v116);
  UIImage_optional v18 = (char *)v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  Swift::Int v114 = (char *)v100 - v19;
  uint64_t v20 = type metadata accessor for String.Encoding();
  long long v118 = *(void (***)(char *, uint64_t))(v20 - 8);
  __chkstk_darwin(v20);
  unint64_t v22 = (char *)v100 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10002F214(&qword_1006A6B50);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v26 = __chkstk_darwin(v25);
  unint64_t v28 = (char *)v100 - v27;
  __chkstk_darwin(v26);
  if (!a1) {
    goto LABEL_6;
  }
  uint64_t v106 = v31;
  uint64_t v107 = v30;
  uint64_t v109 = (uint64_t)v100 - v29;
  uint64_t v108 = a3;
  id v32 = a1;
  id v33 = [a2 objectWithID:v32];
  self;
  id v34 = (void *)swift_dynamicCastObjCClass();
  if (!v34)
  {

LABEL_6:
    type metadata accessor for ICError(0);
    uint64_t v131 = 227;
    sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
    sub_100404A28((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
    return;
  }
  id v110 = v33;
  uint64_t v35 = v34;
  if ([v34 isPasswordProtectedAndLocked])
  {
    sub_100173F8C();
    uint64_t v37 = v32;
    swift_allocError();
    char v38 = 11;
LABEL_16:
    *id v36 = v38;
    swift_willThrow();

LABEL_17:
    return;
  }
  if (![v35 isEditable])
  {
    sub_100173F8C();
    uint64_t v37 = v32;
    swift_allocError();
    char v38 = 12;
    goto LABEL_16;
  }
  id v105 = v32;
  id v104 = v35;
  if (![v35 canAddAttachment])
  {
    sub_100173F8C();
    swift_allocError();
    *double v65 = 21;
    swift_willThrow();

    goto LABEL_17;
  }
  uint64_t v103 = a2;
  uint64_t v39 = v122 + 56;
  uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v122 + 56);
  v40(v109, 1, 1, v123);
  IntentParameter.wrappedValue.getter();
  if (v132[1]
    && (id v101 = v40,
        uint64_t v102 = v39,
        static String.Encoding.utf8.getter(),
        uint64_t v41 = String.data(using:allowLossyConversion:)(),
        unint64_t v43 = v42,
        swift_bridgeObjectRelease(),
        v118[1](v22, v20),
        v43 >> 60 != 15))
  {
    long long v118 = (void (**)(char *, uint64_t))sub_1004037F4();
    v100[1] = sub_100404C38((uint64_t)&off_10062CE20);
    swift_arrayDestroy();
    sub_100404C38((uint64_t)&off_10062CE80);
    swift_arrayDestroy();
    (*(void (**)(char *, void, uint64_t))(v113 + 104))(v15, enum case for CSVType.double(_:), v13);
    uint64_t v66 = v114;
    CSVReadingOptions.init(hasHeaderRow:nilEncodings:trueEncodings:falseEncodings:floatingPointType:ignoresEmptyLines:usesQuoting:usesEscaping:delimiter:escapeCharacter:)();
    uint64_t v67 = v115;
    uint64_t v68 = v116;
    v115[2](v18, v66, v116);
    sub_100172484(v41, v43);
    sub_100403ABC((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v69 = v121;
    DataFrame.init(csvData:columns:rows:types:options:)();
    if (v69)
    {

      sub_1001A3F54(v41, v43);
      ((void (*)(char *, uint64_t))v67[1])(v66, v68);
      goto LABEL_42;
    }
    uint64_t v113 = v41;
    long long v118 = (void (**)(char *, uint64_t))v43;
    uint64_t v121 = 0;
    uint64_t v90 = v109;
    sub_10002B754(v109, &qword_1006A6B50);
    v101((uint64_t)v28, 0, 1, v123);
    sub_10002F1B0((uint64_t)v28, v90, &qword_1006A6B50);
    uint64_t v91 = v90;
    uint64_t v92 = v123;
    uint64_t v93 = v106;
    sub_10002F034(v91, v106, &qword_1006A6B50);
    uint64_t v94 = v122;
    int v95 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v122 + 48))(v93, 1, v92);
    uint64_t v49 = v129;
    if (v95 == 1)
    {
      ((void (*)(char *, uint64_t))v67[1])(v66, v68);
      sub_1001A3F54(v113, (unint64_t)v118);
      sub_10002B754(v93, &qword_1006A6B50);
      uint64_t v44 = 2;
      uint64_t v45 = 2;
    }
    else
    {
      uint64_t v96 = v111;
      (*(void (**)(char *, uint64_t, uint64_t))(v94 + 32))(v111, v93, v92);
      unint64_t v97 = v66;
      uint64_t v45 = DataFrame.shape.getter();
      DataFrame.shape.getter();
      uint64_t v98 = v92;
      uint64_t v44 = v99;
      sub_1001A3F54(v113, (unint64_t)v118);
      (*(void (**)(char *, uint64_t))(v94 + 8))(v96, v98);
      ((void (*)(char *, uint64_t))v67[1])(v97, v68);
    }
    uint64_t v47 = v120;
    uint64_t v48 = v119;
    id v46 = v110;
  }
  else
  {
    uint64_t v44 = 2;
    uint64_t v45 = 2;
    id v46 = v110;
    uint64_t v47 = v120;
    uint64_t v48 = v119;
    uint64_t v49 = v129;
  }
  id v50 = v104;
  id v51 = [v104 currentReplicaID];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  id v52 = objc_allocWithZone((Class)ICTableVersionedDocument);
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v54 = [v52 initWithColumnCount:v44 rowCount:v45 replicaID:isa];

  (*(void (**)(char *, void *))(v48 + 8))(v49, v47);
  id v55 = (void (**)(char *, char *, uint64_t))[v50 addAttachmentWithUTI:ICAttachmentUTTypeTable];
  id v56 = [v54 serialize];
  uint64_t v57 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v59 = v58;

  Class v60 = Data._bridgeToObjectiveC()().super.isa;
  sub_10017253C(v57, v59);
  [v55 setMergeableData:v60];

  BOOL v61 = (char *)[v55 attachmentModel];
  self;
  double v129 = (char *)swift_dynamicCastObjCClass();
  if (v129)
  {
    uint64_t v62 = v107;
    sub_10002F034(v109, v107, &qword_1006A6B50);
    uint64_t v63 = v122;
    uint64_t v64 = v123;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v122 + 48))(v62, 1, v123) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v127, v62, v64);
      uint64_t v70 = v125;
      DataFrame.rows.getter();
      uint64_t v71 = DataFrame.Rows.count.getter();
      id v72 = *(void **)(v128 + 8);
      v128 += 8;
      uint64_t v120 = v72;
      ((void (*)(char *, uint64_t))v72)(v70, v126);
      if ((v71 & 0x8000000000000000) == 0)
      {
        Swift::Int v114 = v61;
        os_log_type_t v115 = v55;
        uint64_t v116 = (uint64_t)v54;
        os_log_type_t v73 = v130;
        if (!v71)
        {
LABEL_35:
          [v129 writeMergeableData];

          (*(void (**)(char *, uint64_t))(v122 + 8))(v127, v123);
          id v46 = v110;
          id v54 = (id)v116;
          id v55 = v115;
          goto LABEL_36;
        }
        uint64_t v74 = 0;
        long long v118 = (void (**)(char *, uint64_t))(v112 + 8);
        uint64_t v119 = v71;
        while (v74 != v71)
        {
          uint64_t v75 = v125;
          DataFrame.rows.getter();
          DataFrame.Rows.subscript.getter();
          ((void (*)(char *, uint64_t))v120)(v75, v126);
          uint64_t v76 = DataFrame.Row.count.getter();
          if (v76 < 0) {
            goto LABEL_48;
          }
          uint64_t v77 = v76;
          if (v76)
          {
            uint64_t v78 = 0;
            do
            {
              DataFrame.Row.subscript.getter();
              if (v132[3])
              {
                if (swift_dynamicCast())
                {
                  id v79 = [v129 table];
                  id v80 = objc_allocWithZone((Class)NSAttributedString);
                  NSString v81 = String._bridgeToObjectiveC()();
                  swift_bridgeObjectRelease();
                  id v82 = [v80 initWithString:v81];

                  [v79 setAttributedString:v82 columnIndex:v78 rowIndex:v74];
                  os_log_type_t v73 = v130;
                }
              }
              else
              {
                sub_10002B754((uint64_t)v132, &qword_10069B4D0);
              }
              ++v78;
            }
            while (v77 != v78);
          }
          ++v74;
          (*v118)(v73, v124);
          uint64_t v71 = v119;
          if (v74 == v119) {
            goto LABEL_35;
          }
        }
        __break(1u);
LABEL_48:
        __break(1u);
      }
      __break(1u);
    }

    sub_10002B754(v62, &qword_1006A6B50);
  }
  else
  {
  }
LABEL_36:
  id v83 = objc_allocWithZone((Class)ICAttachmentInsertionController);
  id v84 = [v83 initWithNote:v104];
  sub_10002F1B0(v108 + 24, (uint64_t)v133, &qword_1006A08B0);
  sub_10002F1B0((uint64_t)v133, (uint64_t)v134, &qword_1006A08B0);
  if (v135 == 1) {
    id v85 = [v84 addAttachment:v55];
  }
  else {
    [v84 addAttachment:v55 atTextRange:v134[0], v134[1]];
  }
  unint64_t v86 = v103;

  v132[0] = 0;
  if ([v86 save:v132])
  {
    id v87 = v132[0];
    id v88 = [v55 objectID];

    sub_10002B754(v109, &qword_1006A6B50);
    *os_log_t v117 = v88;
    return;
  }
  id v89 = v132[0];
  _convertNSErrorToError(_:)();

  swift_willThrow();
LABEL_42:
  sub_10002B754(v109, &qword_1006A6B50);
}

Swift::Int sub_1004037F4()
{
  Swift::Int v0 = sub_100404C38((uint64_t)&off_10062CD60);
  swift_arrayDestroy();
  return v0;
}

uint64_t sub_100403844(uint64_t a1)
{
  long long v4 = v1[1];
  *(_OWORD *)(v2 + 16) = *v1;
  *(_OWORD *)(v2 + 32) = v4;
  long long v5 = v1[3];
  *(_OWORD *)(v2 + 48) = v1[2];
  *(_OWORD *)(v2 + 64) = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 80) = v6;
  void *v6 = v2;
  v6[1] = sub_1002534FC;
  return CreateTableIntent.perform()(a1);
}

unint64_t sub_1004038FC(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();

  return sub_100403974(a1, a2, v4);
}

unint64_t sub_100403974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        uint64_t v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

unint64_t sub_100403ABC(uint64_t a1)
{
  uint64_t v2 = sub_10002F214(&qword_1006A6B58);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10002F214((uint64_t *)&unk_1006A6B60);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (char *)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10002F034(v12, (uint64_t)v5, &qword_1006A6B58);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_1004038FC(*v5, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v19 = (uint64_t *)(v7[6] + 16 * result);
    *uint64_t v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = type metadata accessor for CSVType();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, v9, v21);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100403CBC@<X0>(uint64_t *a1@<X8>)
{
  id v56 = a1;
  uint64_t v1 = sub_10002F214(&qword_10069B1D0);
  __chkstk_darwin(v1 - 8);
  id v55 = &v48[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v71 = type metadata accessor for InputConnectionBehavior();
  uint64_t v74 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  os_log_type_t v73 = &v48[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_10069C9B0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  id v54 = &v48[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v64 = &v48[-v7];
  uint64_t v8 = sub_10002F214((uint64_t *)&unk_10069E280);
  __chkstk_darwin(v8 - 8);
  Class v60 = &v48[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_10002F214(&qword_10069C900);
  __chkstk_darwin(v10 - 8);
  unint64_t v59 = &v48[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = &v48[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = type metadata accessor for Locale();
  __chkstk_darwin(v16 - 8);
  uint64_t v17 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v17 - 8);
  uint64_t v18 = type metadata accessor for LocalizedStringResource();
  uint64_t v66 = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  id v72 = &v48[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v69 = sub_10002F214((uint64_t *)&unk_10069B250);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v21 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v22 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 104);
  unsigned int v49 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v57 = v12;
  v22(v15, enum case for LocalizedStringResource.BundleDescription.main(_:), v12);
  id v50 = v22;
  uint64_t v58 = v13 + 104;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v22(v15, v21, v12);
  BOOL v23 = v59;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v24 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v19 + 56);
  uint64_t v65 = v19 + 56;
  uint64_t v67 = v24;
  v24(v23, 0, 1, v18);
  uint64_t v25 = type metadata accessor for String.IntentInputOptions();
  uint64_t v77 = 0;
  uint64_t v78 = 0;
  uint64_t v26 = *(void *)(v25 - 8);
  id v51 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  uint64_t v52 = v26 + 56;
  v51(v60, 1, 1, v25);
  uint64_t v61 = type metadata accessor for IntentDialog();
  uint64_t v27 = *(void *)(v61 - 8);
  uint64_t v62 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
  uint64_t v63 = v27 + 56;
  v62(v64, 1, 1, v61);
  unsigned int v70 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v68 = *(void (**)(unsigned char *))(v74 + 104);
  v74 += 104;
  uint64_t v28 = v71;
  v68(v73);
  uint64_t v53 = IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v29 = v49;
  uint64_t v30 = v57;
  uint64_t v31 = v50;
  v50(v15, v49, v57);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v31(v15, v29, v30);
  id v32 = v59;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v67(v32, 0, 1, v66);
  uint64_t v77 = 0;
  uint64_t v78 = 0;
  v51(v60, 1, 1, v25);
  id v33 = v64;
  v62(v64, 1, 1, v61);
  ((void (*)(unsigned char *, void, uint64_t))v68)(v73, v70, v28);
  uint64_t v69 = IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
  Class v60 = (unsigned char *)sub_10002F214(&qword_10069B1D8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v34 = v57;
  v31(v15, v29, v57);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v31(v15, v29, v34);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v67(v32, 0, 1, v66);
  uint64_t v35 = type metadata accessor for NoteEntity(0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v55, 1, 1, v35);
  uint64_t v36 = v61;
  uint64_t v37 = v62;
  v62(v33, 1, 1, v61);
  v37(v54, 1, 1, v36);
  uint64_t v77 = sub_10023ED64();
  uint64_t v78 = v38;
  uint64_t v79 = v39;
  char v80 = v40 & 1;
  uint64x2_t v41 = (uint64x2_t)vdupq_n_s64(v40);
  int16x8_t v42 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v41, (uint64x2_t)xmmword_100524D00), (int32x4_t)vshlq_u64(v41, (uint64x2_t)xmmword_100524CF0));
  *(int8x8_t *)v42.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v42), (int8x8_t)0x1000100010001);
  unsigned __int32 v81 = vmovn_s16(v42).u32[0];
  ((void (*)(unsigned char *, void, uint64_t))v68)(v73, v70, v71);
  sub_1001579C0();
  uint64_t v43 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)();
  sub_10002F214((uint64_t *)&unk_10069CE60);
  unint64_t v75 = 0xD000000000000021;
  unint64_t v76 = 0x8000000100549290;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v44 = AppDependency.__allocating_init(key:manager:)();
  sub_10002F214((uint64_t *)&unk_10069B130);
  unint64_t v75 = 0xD000000000000024;
  unint64_t v76 = 0x8000000100549260;
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  uint64_t result = AppDependency.__allocating_init(key:manager:)();
  id v46 = v56;
  uint64_t v47 = v69;
  *id v56 = v53;
  v46[1] = v47;
  v46[3] = 0;
  void v46[4] = 0;
  v46[2] = v43;
  *((unsigned char *)v46 + 40) = 1;
  v46[6] = v44;
  v46[7] = result;
  return result;
}

uint64_t sub_1004047E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10040480C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100404838()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 96, 7);
}

void sub_1004048A0(void *a1@<X8>)
{
  sub_1004026F8(*(void **)(v1 + 16), *(void **)(v1 + 24), v1 + 32, a1);
}

uint64_t sub_1004048C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100404928(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_10040498C()
{
  unint64_t result = qword_1006A6B08;
  if (!qword_1006A6B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A6B08);
  }
  return result;
}

uint64_t sub_1004049E0()
{
  return sub_100404A28(&qword_1006A9020, (void (*)(uint64_t))type metadata accessor for TableEntity);
}

uint64_t sub_100404A28(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100404A78()
{
  unint64_t result = qword_1006A6B10;
  if (!qword_1006A6B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A6B10);
  }
  return result;
}

unint64_t sub_100404AD0()
{
  unint64_t result = qword_1006A6B18;
  if (!qword_1006A6B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A6B18);
  }
  return result;
}

uint64_t sub_100404B24()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100404B58()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for CreateTableIntent()
{
  return &type metadata for CreateTableIntent;
}

uint64_t sub_100404B84()
{
  return sub_10001DFB0(&qword_1006A6B28, &qword_1006A6B30);
}

uint64_t sub_100404BC0()
{
  return sub_10001DFB0(&qword_1006A6B38, &qword_1006A6B40);
}

uint64_t sub_100404BFC()
{
  return sub_10001DFB0(&qword_1006A6B48, &qword_1006A6B40);
}

Swift::Int sub_100404C38(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10002F214(&qword_1006A4CE0);
    uint64_t v3 = static _SetStorage.allocate(capacity:)();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      uint64_t v7 = (uint64_t *)(v6 + 16 * v4);
      uint64_t v9 = *v7;
      uint64_t v8 = v7[1];
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      Swift::Int result = Hasher._finalize()();
      uint64_t v11 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v12 = result & ~v11;
      unint64_t v13 = v12 >> 6;
      uint64_t v14 = *(void *)(v5 + 8 * (v12 >> 6));
      uint64_t v15 = 1 << v12;
      if (((1 << v12) & v14) != 0)
      {
        uint64_t v16 = *(void *)(v3 + 48);
        uint64_t v17 = (void *)(v16 + 16 * v12);
        BOOL v18 = *v17 == v9 && v17[1] == v8;
        if (v18 || (Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v19 = ~v11;
        while (1)
        {
          unint64_t v12 = (v12 + 1) & v19;
          unint64_t v13 = v12 >> 6;
          uint64_t v14 = *(void *)(v5 + 8 * (v12 >> 6));
          uint64_t v15 = 1 << v12;
          if ((v14 & (1 << v12)) == 0) {
            break;
          }
          uint64_t v20 = (void *)(v16 + 16 * v12);
          if (*v20 != v9 || v20[1] != v8)
          {
            Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v13) = v15 | v14;
      uint64_t v22 = (void *)(*(void *)(v3 + 48) + 16 * v12);
      *uint64_t v22 = v9;
      v22[1] = v8;
      uint64_t v23 = *(void *)(v3 + 16);
      BOOL v24 = __OFADD__(v23, 1);
      uint64_t v25 = v23 + 1;
      if (v24)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v25;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

uint64_t sub_100404DD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100404E04@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100404E84(void **a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v2;
  id v5 = v3;
  return static Published.subscript.setter();
}

uint64_t sub_100404EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

unint64_t sub_100404F4C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1004086D8(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_100405088(void *a1)
{
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR___ICActivityStreamNavigationController_activityStreamViewController] = 0;
  *(void *)&v1[OBJC_IVAR___ICActivityStreamNavigationController_sheetController] = 0;
  *(void *)&v1[OBJC_IVAR___ICActivityStreamNavigationController_preferredCompactContentWidth] = 0x4081C00000000000;
  *(void *)&v1[OBJC_IVAR___ICActivityStreamNavigationController_additionalSafeAreaTopInset] = 0x4038000000000000;
  v1[OBJC_IVAR___ICActivityStreamNavigationController_isCapturingActivityStreamSummaryEvent] = 0;
  *(void *)&v1[OBJC_IVAR___ICActivityStreamNavigationController_object] = 0;
  *(void *)&v1[OBJC_IVAR___ICActivityStreamNavigationController_selection] = 0;
  uint64_t v2 = OBJC_IVAR___ICActivityStreamNavigationController_viewModeDurations;
  *(void *)&v1[v2] = sub_100033558((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v3 = &v1[OBJC_IVAR___ICActivityStreamNavigationController_timeOfLastViewModeChange];
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(void *)&v1[OBJC_IVAR___ICActivityStreamNavigationController____lazy_storage___unfilteredHeaderView] = 0;
  *(void *)&v1[OBJC_IVAR___ICActivityStreamNavigationController____lazy_storage___filteredHeaderView] = 0;
  *(void *)&v1[OBJC_IVAR___ICActivityStreamNavigationController____lazy_storage___dockedDetent] = 0;
  *(void *)&v1[OBJC_IVAR___ICActivityStreamNavigationController_halfHeightRatio] = 0x400599999999999ALL;
  *(void *)&v1[OBJC_IVAR___ICActivityStreamNavigationController____lazy_storage___halfHeightDetent] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10040522C(char a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = type metadata accessor for Logger();
  __chkstk_darwin(v5);
  uint64_t v6 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29.receiver = v2;
  v29.super_class = ObjectType;
  [super viewWillAppear:a1 & 1];
  uint64_t v9 = OBJC_IVAR___ICActivityStreamNavigationController_activityStreamViewController;
  if (!*(void *)&v2[OBJC_IVAR___ICActivityStreamNavigationController_activityStreamViewController]
    && swift_unknownObjectWeakLoadStrong())
  {
    id v20 = objc_allocWithZone((Class)type metadata accessor for ActivityStreamViewController());
    uint64_t v21 = swift_unknownObjectRetain();
    id v22 = sub_10016F1D4(v21);
    sub_10002F214(&qword_10069BA00);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_100529F20;
    *(void *)(v23 + 32) = v22;
    uint64_t v28 = v23;
    specialized Array._endMutation()();
    sub_100031418(0, &qword_1006A0070);
    id v24 = v22;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v2 setViewControllers:isa];

    swift_unknownObjectRelease();
    uint64_t v26 = *(void **)&v2[v9];
    *(void *)&v2[v9] = v24;
  }
  Date.init()();
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
  uint64_t v11 = (uint64_t)&v2[OBJC_IVAR___ICActivityStreamNavigationController_timeOfLastViewModeChange];
  swift_beginAccess();
  sub_10021E98C((uint64_t)v8, v11);
  swift_endAccess();
  unint64_t v12 = *(void **)&v2[v9];
  if (v12)
  {
    unint64_t v13 = *(void **)&v2[OBJC_IVAR___ICActivityStreamNavigationController_object];
    id v14 = v13;
    id v15 = v12;
    sub_100170284(v13);

    uint64_t v16 = *(void **)&v2[v9];
    if (v16)
    {
      uint64_t v17 = *(void **)&v2[OBJC_IVAR___ICActivityStreamNavigationController_selection];
      swift_getKeyPath();
      swift_getKeyPath();
      uint64_t v28 = (uint64_t)v17;
      id v18 = v17;
      id v19 = v16;
      static Published.subscript.setter();
    }
  }
  sub_1004056D0();
}

void sub_1004056D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v10 = [self ic_isVision];
  uint64_t v11 = *(void **)&v0[OBJC_IVAR___ICActivityStreamNavigationController_activityStreamViewController];
  if (v10)
  {
    if (!v11) {
      goto LABEL_8;
    }
    unint64_t v12 = v11;
    id v13 = [v0 navigationBar];
    [v13 bounds];
    double v15 = v14;
  }
  else
  {
    if (!v11) {
      goto LABEL_8;
    }
    unint64_t v12 = v11;
    id v16 = [v0 view];
    if (!v16)
    {
      __break(1u);
      goto LABEL_29;
    }
    uint64_t v17 = v16;
    [v16 safeAreaInsets];
    double v19 = v18;

    id v20 = sub_10001FEB4();
    [v20 frame];
    double v22 = v21;

    double v15 = v19 + v22;
  }
  *(double *)&v12[OBJC_IVAR___ICActivityStreamViewController_topInset] = v15;
  sub_10016FBC0();

LABEL_8:
  unsigned int v70 = v9;
  uint64_t v71 = v7;
  uint64_t v23 = v6;
  uint64_t v72 = v3;
  uint64_t v73 = v2;
  id v24 = [v1 splitViewController];
  if (v24)
  {
    uint64_t v25 = v24;
    self;
    uint64_t v26 = swift_dynamicCastObjCClass();
    if (v26)
    {
      uint64_t v27 = (void *)v26;
      uint64_t v28 = sub_10001FEB4();
      unsigned __int8 v29 = [v27 shouldRenderAsOverlay];
      uint64_t v30 = OBJC_IVAR____TtC11MobileNotes24ActivityStreamHeaderView_isCloseButtonHidden;
      v28[OBJC_IVAR____TtC11MobileNotes24ActivityStreamHeaderView_isCloseButtonHidden] = v29;
      id v31 = sub_100031454();
      [v31 setHidden:v28[v30]];

      uint64_t v25 = v31;
    }
  }
  id v32 = *(void **)&v1[OBJC_IVAR___ICActivityStreamNavigationController_sheetController];
  if (v32)
  {
    id v74 = v32;
    id v33 = sub_10001FEB4();
    uint64_t v34 = OBJC_IVAR____TtC11MobileNotes24ActivityStreamHeaderView_isCloseButtonHidden;
    v33[OBJC_IVAR____TtC11MobileNotes24ActivityStreamHeaderView_isCloseButtonHidden] = 0;
    id v35 = sub_100031454();
    [v35 setHidden:v33[v34]];

    uint64_t v36 = OBJC_IVAR___ICActivityStreamNavigationController_activityStreamViewController;
    uint64_t v37 = *(void **)&v1[OBJC_IVAR___ICActivityStreamNavigationController_activityStreamViewController];
    if (v37)
    {
      id v38 = [v37 view];
      if (v38)
      {
        uint64_t v39 = v38;
        [v74 _currentPresentedViewFrame];
        double v41 = v40;
        id v42 = [v1 view];
        if (v42)
        {
          uint64_t v43 = v42;
          [v42 safeAreaInsets];
          double v45 = v44;

          double v46 = v41 - v45;
          id v47 = sub_10001FFAC();
          [v47 frame];
          double v49 = v48;

          double v50 = v46 - v49;
          uint64_t v51 = v23;
          if (v50 > 20.0)
          {
            uint64_t v52 = *(void **)&v1[v36];
            if (v52)
            {
              id v53 = v52;
              sub_10016FD54();
            }
          }
          [v39 alpha];
          id v55 = v5;
          uint64_t v56 = v71;
          if (v50 <= 20.0 == (v54 != 0.0))
          {
            uint64_t v57 = self;
            uint64_t v58 = swift_allocObject();
            *(void *)(v58 + 16) = v1;
            *(unsigned char *)(v58 + 24) = v50 <= 20.0;
            uint64_t v79 = sub_100408BF0;
            uint64_t v80 = v58;
            uint64_t aBlock = _NSConcreteStackBlock;
            uint64_t v76 = 1107296256;
            uint64_t v77 = sub_100262E2C;
            uint64_t v78 = &unk_10063B850;
            unint64_t v59 = _Block_copy(&aBlock);
            Class v60 = v1;
            swift_release();
            [v57 animateWithDuration:v59 animations:0.25];
            _Block_release(v59);
          }
          sub_100031418(0, (unint64_t *)&qword_10069D2D0);
          uint64_t v61 = (void *)static OS_dispatch_queue.main.getter();
          uint64_t v62 = swift_allocObject();
          *(void *)(v62 + 16) = v1;
          uint64_t v79 = sub_100408BFC;
          uint64_t v80 = v62;
          uint64_t aBlock = _NSConcreteStackBlock;
          uint64_t v76 = 1107296256;
          uint64_t v77 = sub_100262E2C;
          uint64_t v78 = &unk_10063B8A0;
          uint64_t v63 = _Block_copy(&aBlock);
          uint64_t v64 = v1;
          swift_release();
          uint64_t v65 = v70;
          static DispatchQoS.unspecified.getter();
          uint64_t aBlock = (void **)_swiftEmptyArrayStorage;
          sub_10028A36C();
          sub_10002F214((uint64_t *)&unk_1006A4830);
          sub_10036BAB4();
          uint64_t v66 = v73;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          OS_dispatch_queue.async(group:qos:flags:execute:)();
          _Block_release(v63);

          (*(void (**)(char *, uint64_t))(v72 + 8))(v55, v66);
          (*(void (**)(char *, uint64_t))(v56 + 8))(v65, v51);
          return;
        }
LABEL_29:
        __break(1u);
        return;
      }
    }
  }
  else
  {
    uint64_t v67 = *(void **)&v1[OBJC_IVAR___ICActivityStreamNavigationController_activityStreamViewController];
    if (!v67) {
      return;
    }
    id v74 = v67;
    sub_10016FD54();
  }
  id v68 = v74;
}

void sub_100405DBC()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR___ICActivityStreamNavigationController_object];
  if (v1)
  {
    uint64_t v2 = *(void **)&v0[OBJC_IVAR___ICActivityStreamNavigationController_activityStreamViewController];
    if (v2)
    {
      id v3 = v1;
      id v10 = v2;
      id v4 = [v0 view];
      if (!v4)
      {
        __break(1u);
        return;
      }
      uint64_t v5 = v4;
      id v11 = [v4 ic_viewControllerManager];

      if (v11)
      {
        if (([v11 isSplitViewExpandingOrCollapsing] & 1) == 0)
        {
          id v7 = [v10 eventReporter];
          [v7 startActivityStreamSummaryEventForObject:v3];

          unint64_t v8 = sub_100033558((uint64_t)&_swiftEmptyArrayStorage);
          uint64_t v9 = (unint64_t *)&v0[OBJC_IVAR___ICActivityStreamNavigationController_viewModeDurations];
          swift_beginAccess();
          *uint64_t v9 = v8;
          swift_bridgeObjectRelease();
          v0[OBJC_IVAR___ICActivityStreamNavigationController_isCapturingActivityStreamSummaryEvent] = 1;
          return;
        }

        uint64_t v6 = v11;
      }
      else
      {

        uint64_t v6 = v10;
      }
    }
  }
}

void sub_100406028()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___ICActivityStreamNavigationController_object);
  if (v1)
  {
    uint64_t v2 = v0;
    id v3 = *(void **)(v0 + OBJC_IVAR___ICActivityStreamNavigationController_activityStreamViewController);
    if (v3)
    {
      uint64_t v4 = OBJC_IVAR___ICActivityStreamNavigationController_isCapturingActivityStreamSummaryEvent;
      if (*(unsigned char *)(v2 + OBJC_IVAR___ICActivityStreamNavigationController_isCapturingActivityStreamSummaryEvent) == 1)
      {
        id v5 = v1;
        id v6 = v3;
        id v7 = [v6 eventReporter];
        if (v7)
        {
          unint64_t v8 = v7;
          sub_1004079B4();
          uint64_t v9 = (uint64_t *)(v2 + OBJC_IVAR___ICActivityStreamNavigationController_viewModeDurations);
          swift_beginAccess();
          uint64_t v10 = *v9;
          double v11 = 0.0;
          double v12 = 0.0;
          if (*(void *)(*v9 + 16))
          {
            uint64_t v13 = sub_1002B6E5C(2);
            if (v14) {
              double v12 = *(double *)(*(void *)(v10 + 56) + 8 * v13);
            }
          }
          swift_endAccess();
          sub_1004079B4();
          swift_beginAccess();
          uint64_t v15 = *v9;
          if (*(void *)(*v9 + 16))
          {
            uint64_t v16 = sub_1002B6E5C(3);
            if (v17) {
              double v11 = *(double *)(*(void *)(v15 + 56) + 8 * v16);
            }
          }
          swift_endAccess();
          sub_1004079B4();
          swift_beginAccess();
          uint64_t v18 = *v9;
          double v19 = 0.0;
          double v20 = 0.0;
          if (*(void *)(*v9 + 16))
          {
            uint64_t v21 = sub_1002B6E5C(5);
            if (v22) {
              double v20 = *(double *)(*(void *)(v18 + 56) + 8 * v21);
            }
          }
          swift_endAccess();
          sub_1004079B4();
          swift_beginAccess();
          uint64_t v23 = *v9;
          if (*(void *)(*v9 + 16))
          {
            uint64_t v24 = sub_1002B6E5C(1);
            if (v25) {
              double v19 = *(double *)(*(void *)(v23 + 56) + 8 * v24);
            }
          }
          swift_endAccess();
          [v8 submitActivityStreamSummaryEventForObject:v5 halfHeightViewDuration:v12 fullHeightViewDuration:v11 sideBarViewDuration:v20 minimizedViewDuration:v19];
        }
        *(unsigned char *)(v2 + v4) = 0;
      }
    }
  }
}

void sub_100406324(void *a1, double a2, double a3)
{
  uint64_t v4 = v3;
  v20.receiver = v3;
  v20.super_class = (Class)swift_getObjectType();
  [super viewWillTransitionToSize:a1 withTransitionCoordinator:a2];
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v3;
  uint64_t v18 = sub_100408C44;
  uint64_t v19 = v8;
  char v14 = _NSConcreteStackBlock;
  uint64_t v15 = 1107296256;
  uint64_t v16 = sub_100196704;
  char v17 = &unk_10063B7B0;
  uint64_t v9 = _Block_copy(&v14);
  id v10 = v4;
  swift_release();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  uint64_t v18 = sub_100408B9C;
  uint64_t v19 = v11;
  char v14 = _NSConcreteStackBlock;
  uint64_t v15 = 1107296256;
  uint64_t v16 = sub_100196704;
  char v17 = &unk_10063B800;
  double v12 = _Block_copy(&v14);
  id v13 = v10;
  swift_release();
  [a1 animateAlongsideTransition:v9 completion:v12];
  _Block_release(v12);
  _Block_release(v9);
}

id sub_1004064CC(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(a2 + OBJC_IVAR___ICActivityStreamNavigationController_activityStreamViewController);
  if (v3)
  {
    id v4 = v3;
    sub_10016FBC0();
  }
  id result = *(id *)(a2 + OBJC_IVAR___ICActivityStreamNavigationController_sheetController);
  if (result)
  {
    return [result invalidateDetents];
  }
  return result;
}

void sub_1004065C0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    id v2 = sub_10001FFAC();
    ActivityStreamDockView.update()();

    id v3 = sub_10001FFAC();
    [v3 layoutIfNeeded];

    id v4 = *(void **)&v1[OBJC_IVAR___ICActivityStreamNavigationController_sheetController];
    if (v4) {
      [v4 invalidateDetents];
    }
    sub_100406664();
  }
}

void sub_100406664()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR___ICActivityStreamNavigationController_sheetController];
  if (v1)
  {
    id v2 = v0;
    sub_10002F214(&qword_10069BA00);
    unint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_100529F20;
    id v4 = self;
    id v5 = v1;
    *(void *)(v3 + 32) = [v4 largeDetent];
    unint64_t v29 = v3;
    specialized Array._endMutation()();
    unint64_t v6 = v3;
    if (v2[OBJC_IVAR___ICActivityStreamNavigationController_hasInteractiveSizing] != 1)
    {
      uint64_t v11 = 0;
      uint64_t v7 = -1;
      goto LABEL_12;
    }
    uint64_t v7 = (uint64_t)sub_1004070C4(&OBJC_IVAR___ICActivityStreamNavigationController____lazy_storage___dockedDetent, (uint64_t)&unk_10063B6A8, (uint64_t)sub_100408750, (uint64_t)&unk_10063B6C0);
    if (v3 >> 62) {
      goto LABEL_28;
    }
LABEL_4:
    sub_1002E0C30(0, 0, v7);
    id v8 = [v2 view];
    if (v8)
    {
      uint64_t v9 = v8;
      unsigned __int8 v10 = [v8 ic_hasCompactHeight];

      if (v10)
      {
        uint64_t v7 = 0;
        goto LABEL_11;
      }
      unint64_t v6 = (unint64_t)sub_1004070C4(&OBJC_IVAR___ICActivityStreamNavigationController____lazy_storage___halfHeightDetent, (uint64_t)&unk_10063B658, (uint64_t)sub_100408720, (uint64_t)&unk_10063B670);
      if (v29 >> 62)
      {
        while (1)
        {
          swift_bridgeObjectRetain();
          uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v28 < 1) {
            break;
          }
LABEL_10:
          uint64_t v7 = 1;
          sub_1002E0C30(1, 1, v6);
LABEL_11:
          unint64_t v6 = v29;
          uint64_t v11 = 1;
LABEL_12:
          sub_100031418(0, (unint64_t *)&unk_1006A2770);
          swift_bridgeObjectRetain();
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v5 setDetents:isa];

          uint64_t v13 = OBJC_IVAR___ICActivityStreamNavigationController_indexOfCurrentDetent;
          uint64_t v14 = *(void *)&v2[OBJC_IVAR___ICActivityStreamNavigationController_indexOfCurrentDetent];
          if (v14 < 0) {
            goto LABEL_17;
          }
          if (v6 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            uint64_t v16 = v26 - 1;
            if (!__OFSUB__(v26, 1))
            {
LABEL_15:
              if (v16 < v14 || [v5 _indexOfCurrentDetent] != *(id *)&v2[v13])
              {
LABEL_17:
                [v5 _setIndexOfCurrentDetent:v11];
                sub_1004079B4();
                *(void *)&v2[v13] = v11;
              }
              [v5 _setIndexOfLastUndimmedDetent:v7];
              id v17 = [v2 view];
              if (!v17) {
                goto LABEL_32;
              }
              uint64_t v18 = v17;
              unsigned int v19 = [v17 ic_hasCompactHeight];

              if (v19)
              {
                double v20 = *(double *)&v2[OBJC_IVAR___ICActivityStreamNavigationController_preferredCompactContentWidth];
                double v21 = 0.0;
              }
              else
              {
                id v22 = [v2 view];
                if (!v22) {
                  goto LABEL_34;
                }
                uint64_t v23 = v22;
                [v22 intrinsicContentSize];
                double v20 = v24;
                double v21 = v25;
              }
              [v2 setPreferredContentSize:v20, v21];
              swift_bridgeObjectRelease();

              return;
            }
          }
          else
          {
            uint64_t v15 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
            uint64_t v16 = v15 - 1;
            if (!__OFSUB__(v15, 1)) {
              goto LABEL_15;
            }
          }
          __break(1u);
LABEL_28:
          swift_bridgeObjectRetain();
          uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if ((v27 & 0x8000000000000000) == 0) {
            goto LABEL_4;
          }
          __break(1u);
        }
      }
      else if (*(uint64_t *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
      {
        goto LABEL_10;
      }
      __break(1u);
LABEL_32:
      __break(1u);
    }
    __break(1u);
LABEL_34:
    __break(1u);
  }
}

double sub_100406BB4(uint64_t a1)
{
  sub_1004079B4();
  unint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR___ICActivityStreamNavigationController_viewModeDurations);
  swift_beginAccess();
  uint64_t v4 = *v3;
  double v5 = 0.0;
  if (*(void *)(v4 + 16))
  {
    uint64_t v6 = sub_1002B6E5C(a1);
    if (v7) {
      double v5 = *(double *)(*(void *)(v4 + 56) + 8 * v6);
    }
  }
  swift_endAccess();
  return v5;
}

void sub_100406C38(void *a1)
{
  id v2 = v1;
  if ([a1 state] != (id)3) {
    return;
  }
  uint64_t v3 = OBJC_IVAR___ICActivityStreamNavigationController_sheetController;
  uint64_t v4 = *(void **)&v1[OBJC_IVAR___ICActivityStreamNavigationController_sheetController];
  if (!v4) {
    return;
  }
  id v5 = [v4 detents];
  sub_100031418(0, (unint64_t *)&unk_1006A2770);
  uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  char v7 = *(void **)&v2[v3];
  if (v7)
  {
    unint64_t v8 = (unint64_t)[v7 _indexOfCurrentDetent];
    if ((v6 & 0xC000000000000001) == 0)
    {
      if ((v8 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v8 < *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v9 = *(id *)(v6 + 8 * v8 + 32);
        goto LABEL_8;
      }
      __break(1u);
      goto LABEL_46;
    }
    id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_8:
    id v34 = v9;
    swift_bridgeObjectRelease();
    unsigned __int8 v10 = *(void **)&v2[v3];
    if (v10)
    {
      id v11 = [v10 detents];
      uint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v13 = *(void **)&v2[v3];
      if (v13)
      {
        unint64_t v14 = (unint64_t)[v13 _indexOfCurrentDetent];
        if ((v12 & 0xC000000000000001) == 0)
        {
          if ((v14 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v14 < *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v15 = *(id *)(v12 + 8 * v14 + 32);
            goto LABEL_14;
          }
          __break(1u);
          goto LABEL_49;
        }
LABEL_46:
        id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_14:
        uint64_t v16 = v15;
        swift_bridgeObjectRelease();
        id v17 = sub_1004070C4(&OBJC_IVAR___ICActivityStreamNavigationController____lazy_storage___dockedDetent, (uint64_t)&unk_10063B6A8, (uint64_t)sub_100408750, (uint64_t)&unk_10063B6C0);
        if (v16)
        {
          id v18 = v16;
          char v19 = static NSObject.== infix(_:_:)();

          if (v19)
          {
            id v20 = [v2 view];
            if (v20)
            {
              double v21 = v20;
              unsigned int v22 = [v20 ic_hasCompactHeight];

              if (!v22)
              {
                id v33 = sub_1004070C4(&OBJC_IVAR___ICActivityStreamNavigationController____lazy_storage___halfHeightDetent, (uint64_t)&unk_10063B658, (uint64_t)sub_100408720, (uint64_t)&unk_10063B670);
                goto LABEL_38;
              }
LABEL_34:
              id v33 = [self largeDetent];
LABEL_38:
              id v30 = v34;
              id v34 = v33;
              goto LABEL_39;
            }
LABEL_52:
            __break(1u);
            return;
          }
LABEL_26:
          uint64_t v23 = *(void **)&v2[v3];
          if (v23)
          {
            id v24 = [v23 detents];
            uint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v26 = *(void **)&v2[v3];
            if (v26)
            {
              unint64_t v27 = (unint64_t)[v26 _indexOfCurrentDetent];
              if ((v25 & 0xC000000000000001) == 0)
              {
                if ((v27 & 0x8000000000000000) != 0)
                {
                  __break(1u);
                }
                else if (v27 < *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
                {
                  id v28 = *(id *)(v25 + 8 * v27 + 32);
                  goto LABEL_32;
                }
                __break(1u);
                goto LABEL_52;
              }
LABEL_49:
              id v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_32:
              unint64_t v29 = v28;
              swift_bridgeObjectRelease();
              id v30 = sub_1004070C4(&OBJC_IVAR___ICActivityStreamNavigationController____lazy_storage___halfHeightDetent, (uint64_t)&unk_10063B658, (uint64_t)sub_100408720, (uint64_t)&unk_10063B670);
              if (v29)
              {
                id v31 = v29;
                char v32 = static NSObject.== infix(_:_:)();

                if ((v32 & 1) == 0)
                {
LABEL_40:
                  sub_1004071E0((uint64_t)v34);

                  return;
                }
                goto LABEL_34;
              }
LABEL_39:

              goto LABEL_40;
            }
            swift_bridgeObjectRelease();
          }
          id v30 = sub_1004070C4(&OBJC_IVAR___ICActivityStreamNavigationController____lazy_storage___halfHeightDetent, (uint64_t)&unk_10063B658, (uint64_t)sub_100408720, (uint64_t)&unk_10063B670);
          goto LABEL_39;
        }
LABEL_25:

        goto LABEL_26;
      }
      swift_bridgeObjectRelease();
    }
    id v17 = sub_1004070C4(&OBJC_IVAR___ICActivityStreamNavigationController____lazy_storage___dockedDetent, (uint64_t)&unk_10063B6A8, (uint64_t)sub_100408750, (uint64_t)&unk_10063B6C0);
    goto LABEL_25;
  }

  swift_bridgeObjectRelease();
}

id sub_1004070C4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *a1;
  uint64_t v6 = *(void **)&v4[*a1];
  if (v6)
  {
    id v7 = *(id *)&v4[*a1];
  }
  else
  {
    unsigned __int8 v10 = self;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v4;
    v18[4] = a3;
    v18[5] = v11;
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 1107296256;
    v18[2] = sub_100408038;
    v18[3] = a4;
    uint64_t v12 = _Block_copy(v18);
    uint64_t v13 = v4;
    swift_release();
    id v14 = [v10 _detentWithContainerViewBlock:v12];
    _Block_release(v12);
    id v15 = *(void **)&v4[v5];
    *(void *)&v4[v5] = v14;
    id v7 = v14;

    uint64_t v6 = 0;
  }
  id v16 = v6;
  return v7;
}

void sub_1004071E0(uint64_t a1)
{
  id v2 = *(void **)&v1[OBJC_IVAR___ICActivityStreamNavigationController_sheetController];
  if (v2)
  {
    id v17 = v2;
    id v4 = [v17 detents];
    sub_100031418(0, (unint64_t *)&unk_1006A2770);
    unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    sub_1004A07D4(a1, v5);
    uint64_t v7 = v6;
    LOBYTE(a1) = v8;
    swift_bridgeObjectRelease();
    if (a1)
    {
    }
    else
    {
      sub_1004079B4();
      *(void *)&v1[OBJC_IVAR___ICActivityStreamNavigationController_indexOfCurrentDetent] = v7;
      id v9 = self;
      unsigned __int8 v10 = (void *)swift_allocObject();
      v10[2] = v17;
      v10[3] = v7;
      v10[4] = v1;
      unsigned int v22 = sub_100408B80;
      uint64_t v23 = v10;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v19 = 1107296256;
      id v20 = sub_100262E2C;
      double v21 = &unk_10063B710;
      uint64_t v11 = _Block_copy(&aBlock);
      id v12 = v17;
      uint64_t v13 = v1;
      swift_release();
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = v13;
      unsigned int v22 = sub_100408B8C;
      uint64_t v23 = (void *)v14;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v19 = 1107296256;
      id v20 = sub_100404EF8;
      double v21 = &unk_10063B760;
      id v15 = _Block_copy(&aBlock);
      id v16 = v13;
      swift_release();
      [v9 animateWithDuration:v11 animations:v15 completion:0.3];
      _Block_release(v15);
      _Block_release(v11);
    }
  }
}

unint64_t sub_10040750C()
{
  uint64_t v1 = OBJC_IVAR___ICActivityStreamNavigationController_sheetController;
  id v2 = *(void **)(v0 + OBJC_IVAR___ICActivityStreamNavigationController_sheetController);
  if (!v2) {
    return 5;
  }
  uint64_t v3 = v0;
  if (*(unsigned char *)(v0 + OBJC_IVAR___ICActivityStreamNavigationController_hasInteractiveSizing) != 1) {
    return 4;
  }
  id v4 = [v2 detents];
  sub_100031418(0, (unint64_t *)&unk_1006A2770);
  uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v6 = *(void **)(v3 + v1);
  if (!v6)
  {
    swift_bridgeObjectRelease();
    id v10 = sub_1004070C4(&OBJC_IVAR___ICActivityStreamNavigationController____lazy_storage___dockedDetent, (uint64_t)&unk_10063B6A8, (uint64_t)sub_100408750, (uint64_t)&unk_10063B6C0);
    goto LABEL_14;
  }
  unint64_t v7 = (unint64_t)[v6 _indexOfCurrentDetent];
  if ((v5 & 0xC000000000000001) == 0)
  {
    if ((v7 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v7 < *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v8 = *(id *)(v5 + 8 * v7 + 32);
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_31;
  }
  id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_8:
  id v9 = v8;
  swift_bridgeObjectRelease();
  id v10 = sub_1004070C4(&OBJC_IVAR___ICActivityStreamNavigationController____lazy_storage___dockedDetent, (uint64_t)&unk_10063B6A8, (uint64_t)sub_100408750, (uint64_t)&unk_10063B6C0);
  if (!v9)
  {
LABEL_14:

    goto LABEL_15;
  }
  id v11 = v9;
  char v12 = static NSObject.== infix(_:_:)();

  if (v12) {
    return 1;
  }
LABEL_15:
  uint64_t v14 = *(void **)(v3 + v1);
  if (!v14)
  {
LABEL_25:
    id v20 = sub_1004070C4(&OBJC_IVAR___ICActivityStreamNavigationController____lazy_storage___halfHeightDetent, (uint64_t)&unk_10063B658, (uint64_t)sub_100408720, (uint64_t)&unk_10063B670);
    goto LABEL_26;
  }
  id v15 = [v14 detents];
  uint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v17 = *(void **)(v3 + v1);
  if (!v17)
  {
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  unint64_t result = (unint64_t)[v17 _indexOfCurrentDetent];
  if ((v16 & 0xC000000000000001) != 0)
  {
LABEL_31:
    id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_21:
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    id v20 = sub_1004070C4(&OBJC_IVAR___ICActivityStreamNavigationController____lazy_storage___halfHeightDetent, (uint64_t)&unk_10063B658, (uint64_t)sub_100408720, (uint64_t)&unk_10063B670);
    if (v19)
    {
      id v21 = v19;
      char v22 = static NSObject.== infix(_:_:)();

      if (v22) {
        return 2;
      }
      return 3;
    }
LABEL_26:

    return 3;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v18 = *(id *)(v16 + 8 * result + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

void sub_100407808(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        [Strong hideActivityStreamWithCompletion:0];
        swift_unknownObjectRelease();
      }
      return;
    case 1:
      id v2 = &OBJC_IVAR___ICActivityStreamNavigationController____lazy_storage___dockedDetent;
      uint64_t v3 = &unk_10063B6A8;
      id v4 = &unk_10063B6C0;
      uint64_t v5 = sub_100408750;
      goto LABEL_9;
    case 2:
      id v2 = &OBJC_IVAR___ICActivityStreamNavigationController____lazy_storage___halfHeightDetent;
      uint64_t v3 = &unk_10063B658;
      id v4 = &unk_10063B670;
      uint64_t v5 = sub_100408720;
LABEL_9:
      id v6 = sub_1004070C4(v2, (uint64_t)v3, (uint64_t)v5, (uint64_t)v4);
      goto LABEL_11;
    case 3:
      id v6 = [self largeDetent];
LABEL_11:
      id v7 = v6;
      sub_1004071E0((uint64_t)v6);

      break;
    default:
      return;
  }
}

void sub_1004079B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  id v7 = (char *)&v26 - v6;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = [v1 view];
  if (v12)
  {
    uint64_t v13 = v12;
    id v14 = [v12 window];

    if (v14)
    {
      uint64_t v15 = (uint64_t)&v1[OBJC_IVAR___ICActivityStreamNavigationController_timeOfLastViewModeChange];
      swift_beginAccess();
      sub_10021E8BC(v15, (uint64_t)v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
      {
        sub_10033F718((uint64_t)v7);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
        unint64_t v16 = sub_10040750C();
        id v17 = &v1[OBJC_IVAR___ICActivityStreamNavigationController_viewModeDurations];
        swift_beginAccess();
        uint64_t v18 = *(void *)v17;
        double v19 = 0.0;
        if (*(void *)(*(void *)v17 + 16))
        {
          uint64_t v20 = sub_1002B6E5C(v16);
          if (v21) {
            double v19 = *(double *)(*(void *)(v18 + 56) + 8 * v20);
          }
        }
        swift_endAccess();
        Swift::UInt v22 = sub_10040750C();
        Date.timeIntervalSinceNow.getter();
        double v24 = v19 + fabs(v23);
        swift_beginAccess();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v27 = *(void *)v17;
        *(void *)id v17 = 0x8000000000000000;
        sub_1002BD27C(v22, isUniquelyReferenced_nonNull_native, v24);
        *(void *)id v17 = v27;
        swift_bridgeObjectRelease();
        swift_endAccess();
        Date.init()();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
        swift_beginAccess();
        sub_10021E98C((uint64_t)v5, v15);
        swift_endAccess();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100407D28(void *a1, uint64_t a2, char *a3)
{
  [a1 _setIndexOfCurrentDetent:a2];
  id v4 = [a3 view];
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = [v4 window];

    if (v6)
    {
      [v6 layoutIfNeeded];
    }
    id v7 = *(void **)&a3[OBJC_IVAR___ICActivityStreamNavigationController_activityStreamViewController];
    if (v7)
    {
      id v8 = v7;
      sub_10016FBC0();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100407E08(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a2 + OBJC_IVAR___ICActivityStreamNavigationController_activityStreamViewController);
  if (v2)
  {
    id v3 = v2;
    sub_10016FBC0();
  }
}

void sub_100407E70(uint64_t a1, char a2)
{
  id v4 = *(void **)(a1 + OBJC_IVAR___ICActivityStreamNavigationController_activityStreamViewController);
  if (v4)
  {
    id v5 = [v4 view];
    if (!v5)
    {
      __break(1u);
      return;
    }
    id v6 = v5;
    double v7 = 1.0;
    if (a2) {
      double v7 = 0.0;
    }
    [v5 setAlpha:v7];
  }
  id v8 = sub_10001FFAC();
  uint64_t v9 = v8;
  if ((a2 & 1) == 0 || (double v10 = 1.0, !*(void *)(a1 + OBJC_IVAR___ICActivityStreamNavigationController_selection))) {
    double v10 = 0.0;
  }
  [v8 setAlpha:v10];

  id v11 = sub_10001FEB4();
  if ((a2 & 1) == 0 || (double v12 = 0.0, !*(void *)(a1 + OBJC_IVAR___ICActivityStreamNavigationController_selection))) {
    double v12 = 1.0;
  }
  uint64_t v13 = v11;
  [v11 setAlpha:v12];
}

void sub_100407F6C(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + OBJC_IVAR___ICActivityStreamNavigationController_activityStreamViewController);
  if (v1)
  {
    id v2 = v1;
    sub_10016FBC0();
  }
}

double sub_100407FD4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___ICActivityStreamNavigationController_selection)) {
    id v2 = sub_10001FFAC();
  }
  else {
    id v2 = sub_10001FEB4();
  }
  id v3 = v2;
  [v2 frame];
  double v5 = v4;

  return v5;
}

double sub_100408038(uint64_t a1, void *a2)
{
  id v3 = *(double (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  double v5 = v3();
  swift_release();

  return v5;
}

void sub_10040832C(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = OBJC_IVAR___ICActivityStreamNavigationController_indexOfCurrentDetent;
  unint64_t v7 = *(void *)(v2 + OBJC_IVAR___ICActivityStreamNavigationController_indexOfCurrentDetent);
  sub_1004079B4();
  *(void *)(v2 + v6) = a2;
  id v8 = *(void **)(v2 + OBJC_IVAR___ICActivityStreamNavigationController_object);
  if (!v8) {
    return;
  }
  if ((uint64_t)v7 <= a2) {
    uint64_t v9 = 1;
  }
  else {
    uint64_t v9 = 2;
  }
  id v27 = v8;
  id v10 = [a1 detents];
  sub_100031418(0, (unint64_t *)&unk_1006A2770);
  uint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v11 & 0xC000000000000001) != 0)
  {
    id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_9;
  }
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v7 >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_27:
    __break(1u);
    return;
  }
  id v12 = *(id *)(v11 + 8 * v7 + 32);
LABEL_9:
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  sub_100031418(0, (unint64_t *)&qword_1006A0020);
  id v14 = sub_1004070C4(&OBJC_IVAR___ICActivityStreamNavigationController____lazy_storage___dockedDetent, (uint64_t)&unk_10063B6A8, (uint64_t)sub_100408750, (uint64_t)&unk_10063B6C0);
  char v15 = static NSObject.== infix(_:_:)();

  if (v15)
  {
    uint64_t v16 = 1;
  }
  else
  {
    id v17 = sub_1004070C4(&OBJC_IVAR___ICActivityStreamNavigationController____lazy_storage___halfHeightDetent, (uint64_t)&unk_10063B658, (uint64_t)sub_100408720, (uint64_t)&unk_10063B670);
    char v18 = static NSObject.== infix(_:_:)();

    if (v18)
    {
      uint64_t v16 = 3;
    }
    else
    {
      id v19 = [self largeDetent];
      char v20 = static NSObject.== infix(_:_:)();

      if (v20) {
        uint64_t v16 = 2;
      }
      else {
        uint64_t v16 = 0;
      }
    }
  }
  uint64_t v21 = OBJC_IVAR___ICActivityStreamNavigationController_activityStreamViewController;
  Swift::UInt v22 = *(void **)(v3 + OBJC_IVAR___ICActivityStreamNavigationController_activityStreamViewController);
  if (v22)
  {
    id v23 = [v22 eventReporter];
    if (v23)
    {
      double v24 = v23;
      [v23 submitCollabActivityBrowseEventForObject:v27 contextPath:0 clickContext:v9 mode:v16 isCurrentUserMentioned:0 hasRecentUpdates:0];
    }
    uint64_t v25 = *(void **)(v3 + v21);
    if (v25)
    {
      id v26 = v25;
      sub_10016FBC0();
    }
  }
}

ValueMetadata *type metadata accessor for ActivityStreamNavigationController.ViewModes()
{
  return &type metadata for ActivityStreamNavigationController.ViewModes;
}

unint64_t sub_100408684()
{
  unint64_t result = qword_1006A6D00;
  if (!qword_1006A6D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A6D00);
  }
  return result;
}

unint64_t sub_1004086D8(unint64_t result)
{
  if (result > 5) {
    return 0;
  }
  return result;
}

uint64_t sub_1004086E8()
{
  return _swift_deallocObject(v0, 24, 7);
}

CGFloat sub_100408720(void *a1)
{
  [a1 bounds];
  return CGRectGetHeight(v2) / 2.7;
}

double sub_100408750(uint64_t a1)
{
  return sub_100407FD4(a1, *(void *)(v1 + 16));
}

void sub_100408758(void *a1)
{
  uint64_t v3 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  __chkstk_darwin(v3 - 8);
  double v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    self;
    uint64_t v6 = swift_dynamicCastObjCClass();
    if (v6)
    {
      unint64_t v7 = (void *)v6;
      id v8 = *(void **)&v1[OBJC_IVAR___ICActivityStreamNavigationController_sheetController];
      *(void *)&v1[OBJC_IVAR___ICActivityStreamNavigationController_sheetController] = v6;
      id v9 = a1;

      sub_100406664();
      id v10 = [v7 _indexOfCurrentDetent];
      sub_1004079B4();
      *(void *)&v1[OBJC_IVAR___ICActivityStreamNavigationController_indexOfCurrentDetent] = v10;
      Date.init()();
      uint64_t v11 = type metadata accessor for Date();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 0, 1, v11);
      uint64_t v12 = (uint64_t)&v1[OBJC_IVAR___ICActivityStreamNavigationController_timeOfLastViewModeChange];
      swift_beginAccess();
      sub_10021E98C((uint64_t)v5, v12);
      swift_endAccess();
      [v7 setPrefersScrollingExpandsWhenScrolledToEdge:0];
      [v7 setPrefersGrabberVisible:v1[OBJC_IVAR___ICActivityStreamNavigationController_hasInteractiveSizing]];
      [v7 setWidthFollowsPreferredContentSizeWhenEdgeAttached:1];
      [v7 setPrefersEdgeAttachedInCompactHeight:1];
      id v13 = [v1 view];
      if (v13)
      {
        id v14 = v13;
        unsigned int v15 = [v13 ic_hasCompactHeight];

        if (v15
          && *(void *)&v1[OBJC_IVAR___ICActivityStreamNavigationController_selection]
          && swift_unknownObjectWeakLoadStrong())
        {
          self;
          uint64_t v16 = (void *)swift_dynamicCastObjCClass();
          if (v16)
          {
            id v17 = [v16 noteEditorViewController];
            [v17 hideActivityStreamToolbarAnimated:1];
            swift_unknownObjectRelease();
          }
          else
          {
            swift_unknownObjectRelease();
          }
        }
      }
      else
      {
        __break(1u);
      }
    }
  }
}

void sub_1004089DC()
{
  id v1 = [v0 view];
  if (v1)
  {
    CGRect v2 = v1;
    unsigned int v3 = [v1 ic_hasCompactHeight];

    if (v3)
    {
      uint64_t v4 = *(void **)&v0[OBJC_IVAR___ICActivityStreamNavigationController_object];
      if (v4)
      {
        double v5 = *(void **)&v0[OBJC_IVAR___ICActivityStreamNavigationController_selection];
        if (v5)
        {
          if (swift_unknownObjectWeakLoadStrong())
          {
            self;
            uint64_t v6 = swift_dynamicCastObjCClass();
            if (v6)
            {
              unint64_t v7 = (void *)v6;
              id v8 = v4;
              id v9 = v5;
              id v10 = [v7 noteEditorViewController];
              [v10 showActivityStreamToolbarForObject:v8 selection:v9 animated:1];

              swift_unknownObjectRelease();
            }
            else
            {
              swift_unknownObjectRelease();
            }
          }
        }
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100408B40()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_100408B80()
{
  sub_100407D28(*(void **)(v0 + 16), *(void *)(v0 + 24), *(char **)(v0 + 32));
}

void sub_100408B8C(uint64_t a1)
{
  sub_100407E08(a1, *(void *)(v1 + 16));
}

id sub_100408B9C(uint64_t a1)
{
  return sub_1004064CC(a1, *(void *)(v1 + 16));
}

uint64_t sub_100408BB8()
{
  return _swift_deallocObject(v0, 25, 7);
}

void sub_100408BF0()
{
  sub_100407E70(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void sub_100408BFC()
{
  sub_100407F6C(*(void *)(v0 + 16));
}

uint64_t sub_100408C04()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100408C3C()
{
}

void *sub_100408C94(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100169AAC(0, v1, 0);
    unsigned int v3 = (void *)(a1 + 32);
    do
    {
      uint64_t v4 = v3[3];
      uint64_t v5 = v3[4];
      sub_10015E154(v3, v4);
      uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
      uint64_t v8 = v7;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_100169AAC(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_100169AAC(v9 > 1, v10 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v10 + 1;
      uint64_t v11 = &_swiftEmptyArrayStorage[2 * v10];
      void v11[4] = v6;
      v11[5] = v8;
      v3 += 5;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100408DC0(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  id v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  __chkstk_darwin(a1);
  double v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  id v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v10 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v12 = (char *)&v26 - v11;
  __chkstk_darwin(v10);
  id v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  __chkstk_darwin(v15);
  id v17 = (char *)&v26 - v16;
  uint64_t v18 = dispatch thunk of Collection.count.getter();
  if (!v18) {
    return static Array._allocateUninitialized(_:)();
  }
  Swift::Int v19 = v18;
  uint64_t v43 = ContiguousArray.init()();
  uint64_t v32 = type metadata accessor for ContiguousArray();
  ContiguousArray.reserveCapacity(_:)(v19);
  uint64_t v36 = v8;
  uint64_t result = dispatch thunk of Collection.startIndex.getter();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    id v34 = (void (**)(char *))(v33 + 2);
    id v35 = v14;
    ++v33;
    while (1)
    {
      uint64_t v21 = (void (*)(char *, void))dispatch thunk of Collection.subscript.read();
      Swift::UInt v22 = v12;
      id v23 = v12;
      uint64_t v24 = AssociatedTypeWitness;
      (*v34)(v22);
      v21(v42, 0);
      uint64_t v25 = v41;
      v38(v23, v40);
      if (v25) {
        break;
      }
      uint64_t v41 = 0;
      (*v33)(v23, v24);
      ContiguousArray.append(_:)();
      dispatch thunk of Collection.formIndex(after:)();
      --v19;
      uint64_t v12 = v23;
      if (!v19)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        return v43;
      }
    }
    (*v33)(v23, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
  }
  return result;
}

uint64_t static ICArchiveExporterConfiguration.default.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_10069AFF8 != -1) {
    swift_once();
  }
  long long v2 = static ICArchiveCreator.default;
  uint64_t v4 = qword_1006CE118;
  uint64_t v3 = unk_1006CE120;
  uint64_t v6 = qword_1006CE128;
  uint64_t v5 = qword_1006CE130;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char IsAlexandriaDemoModeEnabled = ICInternalSettingsIsAlexandriaDemoModeEnabled();
  char v8 = ICInternalSettingsIsAlexandriaDemoModeEnabled();
  uint64_t result = ICInternalSettingsIsAlexandriaDemoModeEnabled();
  *(_OWORD *)a1 = v2;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = IsAlexandriaDemoModeEnabled;
  *(unsigned char *)(a1 + 49) = v8;
  *(unsigned char *)(a1 + 50) = result;
  *(_WORD *)(a1 + 51) = 0;
  return result;
}

uint64_t sub_10040928C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Notification();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100409380(uint64_t a1)
{
  if (*(void *)(a1 + 16) == 1)
  {
    sub_10002F214(&qword_10069D088);
    ICObjectReferences.title.getter();
    if (v1)
    {
      NSString v2 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v3 = [v2 ic_sanitizedFilenameString];

      uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v6 = v5;

      uint64_t v7 = HIBYTE(v6) & 0xF;
      if ((v6 & 0x2000000000000000) == 0) {
        uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
      }
      if (v7) {
        return v4;
      }
      swift_bridgeObjectRelease();
    }
  }
  id v9 = [self mainBundle];
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v9 localizedStringForKey:v10 value:0 table:0];

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v12;
}

uint64_t sub_1004094FC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100032974(v0, qword_1006A6D08);
  sub_10003293C(v0, (uint64_t)qword_1006A6D08);
  return static Logger.archiving.getter();
}

uint64_t sub_100409548()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OSSignposter();
  sub_100032974(v4, qword_1006A6D20);
  sub_10003293C(v4, (uint64_t)qword_1006A6D20);
  if (qword_10069B030 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_10003293C(v0, (uint64_t)qword_1006A6D08);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return OSSignposter.init(logger:)();
}

uint64_t ICArchiveExporter.objectProvider.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t ICArchiveExporter.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100409698(v1 + 24, a1);
}

uint64_t sub_100409698(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t ICArchiveExporter.fileManager.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t ICArchiveExporter.__allocating_init(objectProvider:configuration:fileManager:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  uint64_t v8 = sub_10041AB70(a1, a2, a3, a4);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v8;
}

uint64_t ICArchiveExporter.init(objectProvider:configuration:fileManager:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = sub_10041AB70(a1, a2, a3, a4);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v4;
}

uint64_t sub_1004097BC()
{
  id v1 = [self defaultCenter];
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = sub_10041B6B8;
  uint64_t v9 = v2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10040928C;
  uint64_t ObjectType = &unk_10063BAD8;
  id v3 = _Block_copy(aBlock);
  swift_release();
  id v4 = [v1 addObserverForName:UIApplicationDidReceiveMemoryWarningNotification object:0 queue:0 usingBlock:v3];
  _Block_release(v3);

  uint64_t ObjectType = (void *)swift_getObjectType();
  aBlock[0] = v4;
  swift_beginAccess();
  sub_10002B660((uint64_t)aBlock, v0 + 120, &qword_10069B4D0);
  return swift_endAccess();
}

uint64_t sub_100409924()
{
  uint64_t v1 = (uint64_t)(v0 + 15);
  uint64_t v2 = *v0;
  id v3 = [self defaultCenter];
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  uint64_t v5 = (void *)swift_allocObject();
  _OWORD v5[2] = *(void *)(v2 + 80);
  v5[3] = *(void *)(v2 + 88);
  void v5[4] = v4;
  id v11 = sub_10041B6F8;
  uint64_t v12 = v5;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10040928C;
  uint64_t ObjectType = &unk_10063BB50;
  unint64_t v6 = _Block_copy(aBlock);
  swift_release();
  id v7 = [v3 addObserverForName:UIApplicationDidReceiveMemoryWarningNotification object:0 queue:0 usingBlock:v6];
  _Block_release(v6);

  uint64_t ObjectType = (void *)swift_getObjectType();
  aBlock[0] = v7;
  swift_beginAccess();
  sub_10002B660((uint64_t)aBlock, v1, &qword_10069B4D0);
  return swift_endAccess();
}

uint64_t ICArchiveExporter.deinit()
{
  sub_100409B2C();
  swift_unknownObjectRelease();
  sub_10024BC98(*(void *)(v0 + 24), *(void *)(v0 + 32));
  swift_unknownObjectRelease();
  sub_10002B754(v0 + 120, &qword_10069B4D0);
  return v0;
}

void sub_100409B2C()
{
  swift_beginAccess();
  sub_10002F034(v0 + 120, (uint64_t)v2, &qword_10069B4D0);
  id v1 = [self defaultCenter];
  sub_100280B0C((uint64_t)v2, v1);

  sub_10002B754((uint64_t)v2, &qword_10069B4D0);
}

uint64_t ICArchiveExporter.__deallocating_deinit()
{
  ICArchiveExporter.deinit();

  return swift_deallocClassInstance();
}

uint64_t ICArchiveExporter.createArchive(for:at:progress:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = ICArchiveExporter.createArchive(for:progress:)(a1, a3, (uint64_t)v9);
  if (!v3)
  {
    swift_getObjectType();
    dispatch thunk of ICFileManaging.removeItem(at:)();
    dispatch thunk of ICFileManaging.copyItem(at:to:)();
    ICArchiveExporter.removeArchive(at:)((uint64_t)v9);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return result;
}

uint64_t sub_100409D88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = a3;
  uint64_t v6 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = swift_allocBox();
  uint64_t v11 = v10;
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  char v22 = 0;
  v17[4] = v11;
  uint64_t v18 = v3;
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v21 = &v22;
  type metadata accessor for ICModernObjectProvider();
  sub_10041B14C(&qword_1006A6DF0, (void (*)(uint64_t))&type metadata accessor for ICModernObjectProvider);
  uint64_t v14 = v17[1];
  dispatch thunk of ICObjectProviding.performAndWait(task:)();
  if (v14) {
    goto LABEL_4;
  }
  uint64_t v15 = v17[0];
  sub_10002F034(v11, (uint64_t)v8, &qword_10069B310);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12);
  if (result != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v15, v8, v12);
LABEL_4:
    sub_10040A7DC(v9, &v22, v3);
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t ICArchiveExporter.createArchive(for:progress:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v17 = a3;
  uint64_t v5 = sub_10002F214(&qword_10069B310);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = swift_allocBox();
  uint64_t v10 = v9;
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  char v25 = 0;
  uint64_t v20 = v10;
  uint64_t v21 = v3;
  uint64_t v13 = v19;
  uint64_t v22 = a1;
  uint64_t v23 = v18;
  uint64_t v24 = &v25;
  dispatch thunk of ICObjectProviding.performAndWait(task:)();
  if (v13) {
    goto LABEL_4;
  }
  uint64_t v14 = v17;
  sub_10002F034(v10, (uint64_t)v7, &qword_10069B310);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11);
  if (result != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v14, v7, v11);
LABEL_4:
    sub_10040AF20(v8, &v25, v3);
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_10040A184(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v21 - v8;
  if (qword_10069B030 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_10003293C(v10, (uint64_t)qword_1006A6D08);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v24 = a1;
  v11(v9, a1, v3);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  BOOL v14 = os_log_type_enabled(v12, v13);
  uint64_t v25 = v4;
  if (v14)
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v23 = v1;
    uint64_t v16 = (uint8_t *)v15;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v27 = v22;
    *(_DWORD *)uint64_t v16 = 136315138;
    v21[1] = v16 + 4;
    sub_10041B14C(&qword_1006A10C8, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v26 = sub_10045DA1C(v17, v18, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v19 = *(void (**)(char *, uint64_t))(v4 + 8);
    v19(v9, v3);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Removing archive… {url: %s}", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, uint64_t))(v4 + 8);
    v19(v9, v3);
  }

  swift_getObjectType();
  URL.deletingLastPathComponent()();
  dispatch thunk of ICFileManaging.removeItem(at:)();
  return ((uint64_t (*)(char *, uint64_t))v19)(v7, v3);
}

uint64_t ICArchiveExporter.removeArchive(at:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v21 - v8;
  if (qword_10069B030 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_10003293C(v10, (uint64_t)qword_1006A6D08);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v24 = a1;
  v11(v9, a1, v3);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  BOOL v14 = os_log_type_enabled(v12, v13);
  uint64_t v25 = v4;
  if (v14)
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v23 = v1;
    uint64_t v16 = (uint8_t *)v15;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v27 = v22;
    *(_DWORD *)uint64_t v16 = 136315138;
    v21[1] = v16 + 4;
    sub_10041B14C(&qword_1006A10C8, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v26 = sub_10045DA1C(v17, v18, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v19 = *(void (**)(char *, uint64_t))(v4 + 8);
    v19(v9, v3);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Removing archive… {url: %s}", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, uint64_t))(v4 + 8);
    v19(v9, v3);
  }

  swift_getObjectType();
  URL.deletingLastPathComponent()();
  dispatch thunk of ICFileManaging.removeItem(at:)();
  return ((uint64_t (*)(char *, uint64_t))v19)(v7, v3);
}

uint64_t sub_10040A7DC(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v46 = a3;
  id v47 = a2;
  uint64_t v51 = (uint8_t *)type metadata accessor for Logger();
  uint64_t v49 = *((void *)v51 - 1);
  __chkstk_darwin(v51);
  double v48 = &v44[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_10002F214(&qword_10069B310);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = &v44[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v44[-v9];
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = &v44[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = __chkstk_darwin(v13);
  unint64_t v18 = &v44[-v17];
  __chkstk_darwin(v16);
  uint64_t v20 = &v44[-v19];
  uint64_t v50 = a1;
  uint64_t v21 = swift_projectBox();
  swift_beginAccess();
  uint64_t v22 = v12;
  sub_10002F034(v21, (uint64_t)v10, &qword_10069B310);
  uint64_t v23 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48);
  if (v23(v10, 1, v11) == 1)
  {
    sub_10002B754((uint64_t)v10, &qword_10069B310);
LABEL_5:
    uint64_t v46 = v22;
    id v47 = v8;
    uint64_t v24 = (uint64_t)v51;
    uint64_t v25 = v48;
    uint64_t v26 = v49;
    if (qword_10069B030 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_10003293C(v24, (uint64_t)qword_1006A6D08);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v26 + 16))(v25, v27, v24);
    swift_retain_n();
    uint64_t v28 = Logger.logObject.getter();
    int v45 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v28, (os_log_type_t)v45))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      unint64_t v54 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136315138;
      swift_beginAccess();
      uint64_t v30 = v47;
      sub_10002F034(v21, (uint64_t)v47, &qword_10069B310);
      if (v23(v30, 1, v11) == 1)
      {
        uint64_t result = swift_release();
        __break(1u);
      }
      else
      {
        uint64_t v31 = v46;
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v46 + 32))(v18, v30, v11);
        sub_10041B14C(&qword_1006A10C8, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v34 = v33;
        (*(void (**)(unsigned char *, uint64_t))(v31 + 8))(v18, v11);
        unint64_t v52 = sub_10045DA1C(v32, v34, (uint64_t *)&v54);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v28, (os_log_type_t)v45, "Created archive {url: %s}", v29, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return (*(uint64_t (**)(unsigned char *, uint8_t *))(v49 + 8))(v48, v51);
      }
    }
    else
    {

      swift_release_n();
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v26 + 8))(v25, v24);
    }
    return result;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v22 + 32))(v20, v10, v11);
  if (*v47)
  {
    (*(void (**)(unsigned char *, uint64_t))(v22 + 8))(v20, v11);
    goto LABEL_5;
  }
  sub_10040A184((uint64_t)v20);
  if (qword_10069B030 != -1) {
    swift_once();
  }
  sub_10003293C((uint64_t)v51, (uint64_t)qword_1006A6D08);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v22 + 16))(v15, v20, v11);
  uint64_t v36 = Logger.logObject.getter();
  uint64_t v37 = v22;
  os_log_type_t v38 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v36, v38))
  {
    uint64_t v39 = (uint8_t *)swift_slowAlloc();
    v53[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v39 = 136315138;
    uint64_t v51 = v39 + 4;
    sub_10041B14C(&qword_1006A10C8, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v54 = sub_10045DA1C(v40, v41, v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    id v42 = *(void (**)(unsigned char *, uint64_t))(v37 + 8);
    v42(v15, v11);
    _os_log_impl((void *)&_mh_execute_header, v36, v38, "Failed to create archive — removing temporary files {url: %s}", v39, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return ((uint64_t (*)(unsigned char *, uint64_t))v42)(v20, v11);
  }
  else
  {

    uint64_t v43 = *(void (**)(unsigned char *, uint64_t))(v37 + 8);
    v43(v15, v11);
    return ((uint64_t (*)(unsigned char *, uint64_t))v43)(v20, v11);
  }
}

uint64_t sub_10040AF20(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v46 = a3;
  id v47 = a2;
  uint64_t v51 = (uint8_t *)type metadata accessor for Logger();
  uint64_t v49 = *((void *)v51 - 1);
  __chkstk_darwin(v51);
  double v48 = &v44[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_10002F214(&qword_10069B310);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = &v44[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v44[-v9];
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = &v44[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = __chkstk_darwin(v13);
  unint64_t v18 = &v44[-v17];
  __chkstk_darwin(v16);
  uint64_t v20 = &v44[-v19];
  uint64_t v50 = a1;
  uint64_t v21 = swift_projectBox();
  swift_beginAccess();
  uint64_t v22 = v12;
  sub_10002F034(v21, (uint64_t)v10, &qword_10069B310);
  uint64_t v23 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48);
  if (v23(v10, 1, v11) == 1)
  {
    sub_10002B754((uint64_t)v10, &qword_10069B310);
LABEL_5:
    uint64_t v46 = v22;
    id v47 = v8;
    uint64_t v24 = (uint64_t)v51;
    uint64_t v25 = v48;
    uint64_t v26 = v49;
    if (qword_10069B030 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_10003293C(v24, (uint64_t)qword_1006A6D08);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v26 + 16))(v25, v27, v24);
    swift_retain_n();
    uint64_t v28 = Logger.logObject.getter();
    int v45 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v28, (os_log_type_t)v45))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      unint64_t v54 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136315138;
      swift_beginAccess();
      uint64_t v30 = v47;
      sub_10002F034(v21, (uint64_t)v47, &qword_10069B310);
      if (v23(v30, 1, v11) == 1)
      {
        uint64_t result = swift_release();
        __break(1u);
      }
      else
      {
        uint64_t v31 = v46;
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v46 + 32))(v15, v30, v11);
        sub_10041B14C(&qword_1006A10C8, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v34 = v33;
        (*(void (**)(unsigned char *, uint64_t))(v31 + 8))(v15, v11);
        unint64_t v52 = sub_10045DA1C(v32, v34, (uint64_t *)&v54);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v28, (os_log_type_t)v45, "Created archive {url: %s}", v29, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return (*(uint64_t (**)(unsigned char *, uint8_t *))(v49 + 8))(v48, v51);
      }
    }
    else
    {

      swift_release_n();
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v26 + 8))(v25, v24);
    }
    return result;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v22 + 32))(v20, v10, v11);
  if (*v47)
  {
    (*(void (**)(unsigned char *, uint64_t))(v22 + 8))(v20, v11);
    goto LABEL_5;
  }
  ICArchiveExporter.removeArchive(at:)((uint64_t)v20);
  if (qword_10069B030 != -1) {
    swift_once();
  }
  sub_10003293C((uint64_t)v51, (uint64_t)qword_1006A6D08);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v22 + 16))(v18, v20, v11);
  uint64_t v36 = Logger.logObject.getter();
  uint64_t v37 = v22;
  os_log_type_t v38 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v36, v38))
  {
    uint64_t v39 = (uint8_t *)swift_slowAlloc();
    v53[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v39 = 136315138;
    uint64_t v51 = v39 + 4;
    sub_10041B14C(&qword_1006A10C8, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v54 = sub_10045DA1C(v40, v41, v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    id v42 = *(void (**)(unsigned char *, uint64_t))(v37 + 8);
    v42(v18, v11);
    _os_log_impl((void *)&_mh_execute_header, v36, v38, "Failed to create archive — removing temporary files {url: %s}", v39, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return ((uint64_t (*)(unsigned char *, uint64_t))v42)(v20, v11);
  }
  else
  {

    uint64_t v43 = *(void (**)(unsigned char *, uint64_t))(v37 + 8);
    v43(v18, v11);
    return ((uint64_t (*)(unsigned char *, uint64_t))v43)(v20, v11);
  }
}

uint64_t sub_10040B664(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, unsigned char *a5)
{
  uint64_t v132 = a1;
  uint64_t v123 = a5;
  uint64_t v124 = a4;
  uint64_t v119 = type metadata accessor for OSSignpostError();
  uint64_t v128 = *(void *)(v119 - 8);
  uint64_t v7 = __chkstk_darwin(v119);
  os_log_type_t v115 = (char *)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  Swift::Int v114 = (char *)&v103 - v10;
  __chkstk_darwin(v9);
  os_log_t v117 = (char *)&v103 - v11;
  uint64_t v12 = sub_10002F214(&qword_10069D088);
  uint64_t v121 = *(void *)(v12 - 8);
  uint64_t v122 = v12;
  __chkstk_darwin(v12);
  uint64_t v120 = (char *)&v103 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for OSSignposter();
  uint64_t v126 = *(void *)(v14 - 8);
  uint64_t v127 = v14;
  __chkstk_darwin(v14);
  uint64_t v125 = (char *)&v103 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for OSSignpostID();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v129 = v16;
  uint64_t v130 = v17;
  uint64_t v18 = __chkstk_darwin(v16);
  long long v118 = (char *)&v103 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v116 = (char *)&v103 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v103 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v27 = (char *)&v103 - v26;
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v103 - v28;
  uint64_t v30 = sub_10002F214(&qword_10069B310);
  uint64_t v31 = __chkstk_darwin(v30 - 8);
  unint64_t v33 = (char *)&v103 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v31);
  uint64_t v36 = (void (*)(char *, char *, uint64_t))((char *)&v103 - v35);
  uint64_t v37 = __chkstk_darwin(v34);
  uint64_t v39 = (char *)&v103 - v38;
  __chkstk_darwin(v37);
  unint64_t v41 = (char *)&v103 - v40;
  uint64_t v131 = a2;
  id v42 = v133;
  uint64_t result = sub_10040D270(a3, (uint64_t)&v103 - v40);
  if (!v42)
  {
    id v110 = v36;
    uint64_t v109 = v33;
    uint64_t v112 = a3;
    uint64_t v108 = v24;
    uint64_t v111 = v27;
    Swift::String v133 = 0;
    uint64_t v113 = v29;
    double v44 = (void (**)(void, void))type metadata accessor for URL();
    uint64_t v45 = (uint64_t)*(v44 - 1);
    (*(void (**)(char *, void, uint64_t, void (**)(void, void)))(v45 + 56))(v41, 0, 1, v44);
    uint64_t v46 = v132;
    sub_10002B660((uint64_t)v41, v132, &qword_10069B310);
    sub_10002F034(v46, (uint64_t)v39, &qword_10069B310);
    uint64_t v47 = v45 + 48;
    double v48 = *(char **)(v45 + 48);
    uint64_t result = ((uint64_t (*)(char *, uint64_t, void (**)(void, void)))v48)(v39, 1, v44);
    if (result == 1)
    {
      __break(1u);
LABEL_45:
      __break(1u);
    }
    else
    {
      swift_getObjectType();
      uint64_t v49 = v133;
      dispatch thunk of ICFileManaging.createDirectory(at:withIntermediateDirectories:)();
      uint64_t v50 = v49;
      if (v49) {
        return (*(uint64_t (**)(char *, void))(v45 + 8))(v39, v44);
      }
      unint64_t v52 = *(void (**)(void *, void))(v45 + 8);
      uint64_t v51 = (char *)(v45 + 8);
      uint64_t v107 = v52;
      v52(v39, v44);
      if (qword_10069B038 != -1) {
        goto LABEL_43;
      }
      while (1)
      {
        Swift::String v133 = v50;
        uint64_t v53 = v127;
        uint64_t v54 = sub_10003293C(v127, (uint64_t)qword_1006A6D20);
        id v55 = v125;
        uint64_t v56 = v126;
        uint64_t v57 = *(void (**)(char *))(v126 + 16);
        uint64_t v106 = v54;
        v57(v125);
        uint64_t v58 = v110;
        sub_10002F034(v132, (uint64_t)v110, &qword_10069B310);
        id v104 = (uint64_t (*)(void *, uint64_t, void (**)(void, void)))v48;
        uint64_t result = ((uint64_t (*)(void, uint64_t, void (**)(void, void)))v48)(v58, 1, v44);
        if (result == 1) {
          goto LABEL_45;
        }
        URL._bridgeToObjectiveC()(v59);
        OSSignposter.logHandle.getter();
        OSSignpostID.init(log:object:)();
        (*(void (**)(char *, uint64_t))(v56 + 8))(v55, v53);
        uint64_t v125 = v51;
        v107(v58, v44);
        Class v60 = OSSignposter.logHandle.getter();
        os_signpost_type_t v61 = static os_signpost_type_t.begin.getter();
        char v62 = OS_os_log.signpostsEnabled.getter();
        id v105 = v44;
        if (v62)
        {
          uint64_t v63 = v129;
          uint64_t v64 = v130;
          uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v130 + 16);
          unint64_t v66 = (v130 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
          uint64_t v67 = v111;
          v65(v111, v113, v129);
          id v68 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v68 = 0;
          os_signpost_id_t v69 = OSSignpostID.rawValue.getter();
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v60, v61, v69, "Create Archive", "", v68, 2u);
          swift_slowDealloc();

          unsigned int v70 = v67;
          (*(void (**)(char *, uint64_t))(v64 + 8))(v67, v63);
        }
        else
        {

          uint64_t v63 = v129;
          uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v130 + 16);
          unint64_t v66 = (v130 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
          unsigned int v70 = v111;
        }
        uint64_t v126 = v47;
        unint64_t v103 = v66;
        v65(v70, v113, v63);
        type metadata accessor for OSSignpostIntervalState();
        swift_allocObject();
        uint64_t v127 = OSSignpostIntervalState.init(id:isOpen:)();
        double v48 = *(char **)(v112 + 16);
        id v110 = v65;
        if (!v48) {
          break;
        }
        uint64_t v71 = *(void (**)(char *, uint64_t, uint64_t))(v121 + 16);
        uint64_t v72 = v112 + ((*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80));
        uint64_t v73 = *(void *)(v121 + 72);
        double v44 = (void (**)(void, void))(v121 + 8);
        swift_bridgeObjectRetain();
        uint64_t v51 = 0;
        uint64_t v47 = v122;
        uint64_t v50 = v120;
        while (1)
        {
          v71(v50, v72, v47);
          uint64_t v74 = ICObjectReferences.recursiveNoteCount.getter();
          BOOL v75 = __OFADD__(v51, v74);
          v51 += v74;
          if (v75) {
            break;
          }
          (*v44)(v50, v47);
          v72 += v73;
          if (!--v48)
          {
            swift_bridgeObjectRelease();
            uint64_t v76 = v129;
            goto LABEL_16;
          }
        }
        __break(1u);
LABEL_43:
        swift_once();
      }
      uint64_t v76 = v63;
      uint64_t v51 = 0;
LABEL_16:
      uint64_t v77 = v128;
      uint64_t v78 = v124;
      uint64_t v79 = v107;
      if (qword_10069B030 != -1) {
        swift_once();
      }
      uint64_t v80 = type metadata accessor for Logger();
      sub_10003293C(v80, (uint64_t)qword_1006A6D08);
      unsigned __int32 v81 = Logger.logObject.getter();
      os_log_type_t v82 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v81, v82))
      {
        id v83 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)id v83 = 134217984;
        uint64_t v79 = v107;
        Swift::String v134 = v51;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v81, v82, "Exporting notes… {noteCount: %ld}", v83, 0xCu);
        uint64_t v77 = v128;
        swift_slowDealloc();
      }

      [v78 setTotalUnitCount:v51];
      id v84 = v109;
      sub_10002F034(v132, (uint64_t)v109, &qword_10069B310);
      uint64_t result = v104(v84, 1, v105);
      if (result != 1)
      {
        id v85 = v133;
        sub_10040D9FC(v84, v112, v78);
        unint64_t v86 = v123;
        if (v85)
        {
          Swift::String v133 = v85;
          v79(v84, v105);
          id v87 = OSSignposter.logHandle.getter();
          id v88 = v108;
          OSSignpostIntervalState.signpostID.getter();
          os_signpost_type_t v89 = static os_signpost_type_t.end.getter();
          if (OS_os_log.signpostsEnabled.getter())
          {
            swift_retain();
            uint64_t v90 = v117;
            checkForErrorAndConsumeState(state:)();
            swift_release();
            uint64_t v91 = v119;
            if ((*(unsigned int (**)(char *, uint64_t))(v77 + 88))(v90, v119) == enum case for OSSignpostError.doubleEnd(_:))
            {
              uint64_t v92 = "[Error] Interval already ended";
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v77 + 8))(v90, v91);
              uint64_t v92 = "";
            }
            uint64_t v96 = v108;
LABEL_39:
            uint64_t v100 = v111;
            v110(v111, v96, v76);
            id v101 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)id v101 = 0;
            os_signpost_id_t v102 = OSSignpostID.rawValue.getter();
            _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v87, v89, v102, "Create Archive", v92, v101, 2u);
            swift_slowDealloc();

            uint64_t v99 = *(void (**)(char *, uint64_t))(v130 + 8);
            v99(v96, v76);
            v99(v100, v76);
            goto LABEL_40;
          }
        }
        else
        {
          v79(v84, v105);
          NSProgress.throwIfCancelled()();
          Swift::String v133 = v93;
          if (v93)
          {
            id v87 = OSSignposter.logHandle.getter();
            id v88 = v118;
            OSSignpostIntervalState.signpostID.getter();
            os_signpost_type_t v89 = static os_signpost_type_t.end.getter();
            if (OS_os_log.signpostsEnabled.getter())
            {
              swift_retain();
              uint64_t v94 = v115;
              checkForErrorAndConsumeState(state:)();
              swift_release();
              uint64_t v95 = v119;
              if ((*(unsigned int (**)(char *, uint64_t))(v77 + 88))(v94, v119) == enum case for OSSignpostError.doubleEnd(_:))
              {
                uint64_t v92 = "[Error] Interval already ended";
              }
              else
              {
                (*(void (**)(char *, uint64_t))(v77 + 8))(v94, v95);
                uint64_t v92 = "";
              }
              uint64_t v96 = v118;
              goto LABEL_39;
            }
          }
          else
          {
            unsigned char *v86 = 1;
            id v87 = OSSignposter.logHandle.getter();
            id v88 = v116;
            OSSignpostIntervalState.signpostID.getter();
            os_signpost_type_t v89 = static os_signpost_type_t.end.getter();
            if (OS_os_log.signpostsEnabled.getter())
            {
              swift_retain();
              unint64_t v97 = v114;
              checkForErrorAndConsumeState(state:)();
              swift_release();
              uint64_t v98 = v119;
              if ((*(unsigned int (**)(char *, uint64_t))(v77 + 88))(v97, v119) == enum case for OSSignpostError.doubleEnd(_:))
              {
                uint64_t v92 = "[Error] Interval already ended";
              }
              else
              {
                (*(void (**)(char *, uint64_t))(v77 + 8))(v97, v98);
                uint64_t v92 = "";
              }
              uint64_t v96 = v116;
              goto LABEL_39;
            }
          }
        }

        uint64_t v99 = *(void (**)(char *, uint64_t))(v130 + 8);
        v99(v88, v76);
LABEL_40:
        swift_release();
        return ((uint64_t (*)(char *, uint64_t))v99)(v113, v76);
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10040C3B8(uint64_t a1, uint64_t *a2, uint64_t a3, void *a4, unsigned char *a5)
{
  uint64_t v146 = a1;
  id v139 = a4;
  uint64_t v7 = *a2;
  Swift::String v137 = a5;
  uint64_t v138 = v7;
  uint64_t v8 = type metadata accessor for OSSignpostError();
  uint64_t v134 = *(void *)(v8 - 8);
  uint64_t v135 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v130 = (char *)v120 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v132 = (char *)v120 - v12;
  __chkstk_darwin(v11);
  uint64_t v129 = (char *)v120 - v13;
  uint64_t v14 = (void (*)(char *, char *, uint64_t))type metadata accessor for OSSignposter();
  uint64_t v141 = *((void *)v14 - 1);
  Swift::String v142 = v14;
  __chkstk_darwin(v14);
  Swift::String v140 = (char *)v120 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for OSSignpostID();
  uint64_t v143 = *(void *)(v16 - 8);
  uint64_t v144 = v16;
  uint64_t v17 = __chkstk_darwin(v16);
  Swift::String v133 = (char *)v120 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  Swift::String v136 = (char *)v120 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)v120 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v26 = (char *)v120 - v25;
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)v120 - v27;
  uint64_t v29 = sub_10002F214(&qword_10069B310);
  uint64_t v30 = __chkstk_darwin(v29 - 8);
  uint64_t v32 = (char *)v120 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v30);
  uint64_t v35 = (char *)v120 - v34;
  uint64_t v36 = __chkstk_darwin(v33);
  uint64_t v145 = (void (*)(void, void))((char *)v120 - v37);
  __chkstk_darwin(v36);
  uint64_t v39 = (char *)v120 - v38;
  uint64_t v40 = v147;
  uint64_t result = sub_10040D590(a3, (uint64_t)v120 - v38);
  if (!v40)
  {
    uint64_t v123 = v35;
    uint64_t v122 = v32;
    uint64_t v125 = a3;
    uint64_t v121 = v23;
    uint64_t v147 = 0;
    uint64_t v124 = v26;
    uint64_t v128 = v28;
    uint64_t v42 = type metadata accessor for URL();
    uint64_t v43 = *(void *)(v42 - 8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v39, 0, 1, v42);
    uint64_t v44 = v146;
    sub_10002B660((uint64_t)v39, v146, &qword_10069B310);
    uint64_t v45 = v145;
    sub_10002F034(v44, (uint64_t)v145, &qword_10069B310);
    uint64_t v46 = v43;
    uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 48);
    uint64_t v131 = v42;
    uint64_t v127 = v43 + 48;
    uint64_t v126 = v47;
    uint64_t result = v47((uint64_t)v45, 1, v42);
    if (result == 1)
    {
      __break(1u);
    }
    else
    {
      uint64_t v48 = v44;
      swift_getObjectType();
      uint64_t v49 = v147;
      dispatch thunk of ICFileManaging.createDirectory(at:withIntermediateDirectories:)();
      if (v49) {
        return (*(uint64_t (**)(void, uint64_t))(v46 + 8))(v45, v131);
      }
      uint64_t v50 = (char *)(v46 + 8);
      uint64_t v51 = v131;
      uint64_t v145 = *(void (**)(void, void))(v46 + 8);
      v145(v45, v131);
      if (qword_10069B038 != -1) {
        swift_once();
      }
      uint64_t v147 = 0;
      unint64_t v52 = v142;
      uint64_t v53 = sub_10003293C((uint64_t)v142, (uint64_t)qword_1006A6D20);
      uint64_t v54 = v140;
      uint64_t v55 = v141;
      (*(void (**)(char *, uint64_t, void))(v141 + 16))(v140, v53, v52);
      uint64_t v56 = (uint64_t)v123;
      sub_10002F034(v48, (uint64_t)v123, &qword_10069B310);
      uint64_t result = v126(v56, 1, v51);
      if (result != 1)
      {
        v120[1] = a2;
        URL._bridgeToObjectiveC()(&v150);
        OSSignposter.logHandle.getter();
        OSSignpostID.init(log:object:)();
        (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v55 + 8))(v54, v52);
        Swift::String v140 = v50;
        v145(v56, v51);
        uint64_t v123 = (char *)v53;
        uint64_t v57 = OSSignposter.logHandle.getter();
        os_signpost_type_t v58 = static os_signpost_type_t.begin.getter();
        if (OS_os_log.signpostsEnabled.getter())
        {
          uint64_t v60 = v143;
          uint64_t v59 = v144;
          Swift::String v142 = *(void (**)(char *, char *, uint64_t))(v143 + 16);
          os_signpost_type_t v61 = v124;
          char v62 = v128;
          v142(v124, v128, v144);
          uint64_t v63 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v63 = 0;
          os_signpost_id_t v64 = OSSignpostID.rawValue.getter();
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v57, v58, v64, "Create Archive", "", v63, 2u);
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v59);
          uint64_t v65 = v62;
          unint64_t v66 = v142;
        }
        else
        {

          uint64_t v59 = v144;
          unint64_t v66 = *(void (**)(char *, char *, uint64_t))(v143 + 16);
          uint64_t v65 = v128;
          os_signpost_type_t v61 = v124;
        }
        uint64_t v67 = v125;
        v66(v61, v65, v59);
        type metadata accessor for OSSignpostIntervalState();
        swift_allocObject();
        uint64_t v141 = OSSignpostIntervalState.init(id:isOpen:)();
        uint64_t v148 = 0;
        uint64_t v149 = v67;
        __chkstk_darwin(v141);
        uint64_t v68 = *(void *)(v138 + 88);
        v120[-2] = *(void *)(v138 + 80);
        v120[-1] = v68;
        swift_getAssociatedTypeWitness();
        swift_getAssociatedConformanceWitness();
        type metadata accessor for ICObjectReferences();
        type metadata accessor for Array();
        swift_getWitnessTable();
        uint64_t v69 = v147;
        Sequence.reduce<A>(_:_:)();
        Class isa = v150.super.isa;
        if (qword_10069B030 != -1) {
          swift_once();
        }
        uint64_t v71 = type metadata accessor for Logger();
        sub_10003293C(v71, (uint64_t)qword_1006A6D08);
        uint64_t v72 = Logger.logObject.getter();
        os_log_type_t v73 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v72, v73))
        {
          uint64_t v74 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v74 = 134217984;
          v150.super.Class isa = isa;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v72, v73, "Exporting notes… {noteCount: %ld}", v74, 0xCu);
          swift_slowDealloc();
        }
        Swift::String v142 = v66;

        uint64_t v75 = (uint64_t)v139;
        [v139 setTotalUnitCount:isa];
        uint64_t v76 = (uint64_t)v122;
        sub_10002F034(v146, (uint64_t)v122, &qword_10069B310);
        uint64_t result = v126(v76, 1, v131);
        uint64_t v77 = v128;
        if (result != 1)
        {
          sub_10040EBA8(v76, v125, v75);
          uint64_t v78 = v137;
          if (v69)
          {
            uint64_t v79 = v144;
            uint64_t v147 = v69;
            v145(v76, v131);
            uint64_t v80 = OSSignposter.logHandle.getter();
            unsigned __int32 v81 = v136;
            OSSignpostIntervalState.signpostID.getter();
            int v82 = static os_signpost_type_t.end.getter();
            if (OS_os_log.signpostsEnabled.getter())
            {
              swift_retain();
              id v83 = v132;
              checkForErrorAndConsumeState(state:)();
              swift_release();
              uint64_t v85 = v134;
              uint64_t v84 = v135;
              int v86 = (*(uint64_t (**)(char *, uint64_t))(v134 + 88))(v83, v135);
              LODWORD(v146) = v82;
              if (v86 == enum case for OSSignpostError.doubleEnd(_:))
              {
                uint64_t v99 = "[Error] Interval already ended";
              }
              else
              {
                (*(void (**)(char *, uint64_t))(v85 + 8))(v83, v84);
                uint64_t v99 = "";
              }
              uint64_t v100 = v124;
              id v101 = v136;
              v142(v124, v136, v79);
              os_signpost_id_t v102 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)os_signpost_id_t v102 = 0;
              os_signpost_id_t v103 = OSSignpostID.rawValue.getter();
              uint64_t v98 = v79;
              _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v80, (os_signpost_type_t)v146, v103, "Create Archive", v99, v102, 2u);
              swift_slowDealloc();

              unint64_t v97 = *(void (**)(char *, uint64_t))(v143 + 8);
              v97(v101, v79);
              v97(v100, v79);
              uint64_t v77 = v128;
            }
            else
            {

              unint64_t v97 = *(void (**)(char *, uint64_t))(v143 + 8);
              uint64_t v98 = v79;
              v97(v81, v79);
            }
            swift_release();
            id v104 = v77;
            uint64_t v105 = v98;
            return ((uint64_t (*)(char *, uint64_t))v97)(v104, v105);
          }
          v145(v76, v131);
          NSProgress.throwIfCancelled()();
          uint64_t v147 = v87;
          if (v87)
          {
            id v88 = OSSignposter.logHandle.getter();
            os_signpost_type_t v89 = v133;
            OSSignpostIntervalState.signpostID.getter();
            int v90 = static os_signpost_type_t.end.getter();
            char v91 = OS_os_log.signpostsEnabled.getter();
            uint64_t v92 = v142;
            if (v91)
            {
              swift_retain();
              uint64_t v93 = v130;
              checkForErrorAndConsumeState(state:)();
              swift_release();
              uint64_t v95 = v134;
              uint64_t v94 = v135;
              int v96 = (*(uint64_t (**)(char *, uint64_t))(v134 + 88))(v93, v135);
              LODWORD(v146) = v90;
              if (v96 == enum case for OSSignpostError.doubleEnd(_:))
              {
                Swift::Int v114 = "[Error] Interval already ended";
              }
              else
              {
                (*(void (**)(char *, uint64_t))(v95 + 8))(v93, v94);
                Swift::Int v114 = "";
              }
              os_log_type_t v115 = v124;
              uint64_t v116 = v124;
              os_log_t v117 = v133;
LABEL_36:
              uint64_t v113 = v144;
              v92(v116, v117, v144);
              long long v118 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)long long v118 = 0;
              os_signpost_id_t v119 = OSSignpostID.rawValue.getter();
              _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v88, (os_signpost_type_t)v146, v119, "Create Archive", v114, v118, 2u);
              swift_slowDealloc();

              unint64_t v97 = *(void (**)(char *, uint64_t))(v143 + 8);
              v97(v117, v113);
              v97(v115, v113);
              uint64_t v77 = v128;
              goto LABEL_37;
            }
          }
          else
          {
            *uint64_t v78 = 1;
            id v88 = OSSignposter.logHandle.getter();
            os_signpost_type_t v89 = v121;
            OSSignpostIntervalState.signpostID.getter();
            int v106 = static os_signpost_type_t.end.getter();
            char v107 = OS_os_log.signpostsEnabled.getter();
            uint64_t v92 = v142;
            if (v107)
            {
              swift_retain();
              uint64_t v108 = v129;
              checkForErrorAndConsumeState(state:)();
              swift_release();
              uint64_t v110 = v134;
              uint64_t v109 = v135;
              int v111 = (*(uint64_t (**)(char *, uint64_t))(v134 + 88))(v108, v135);
              LODWORD(v146) = v106;
              if (v111 == enum case for OSSignpostError.doubleEnd(_:))
              {
                Swift::Int v114 = "[Error] Interval already ended";
              }
              else
              {
                (*(void (**)(char *, uint64_t))(v110 + 8))(v108, v109);
                Swift::Int v114 = "";
              }
              os_log_type_t v115 = v124;
              uint64_t v116 = v124;
              os_log_t v117 = v121;
              goto LABEL_36;
            }
          }

          unint64_t v97 = *(void (**)(char *, uint64_t))(v143 + 8);
          uint64_t v112 = v89;
          uint64_t v113 = v144;
          v97(v112, v144);
LABEL_37:
          swift_release();
          id v104 = v77;
          uint64_t v105 = v113;
          return ((uint64_t (*)(char *, uint64_t))v97)(v104, v105);
        }
LABEL_42:
        __break(1u);
        return result;
      }
    }
    __break(1u);
    goto LABEL_42;
  }
  return result;
}

uint64_t sub_10040D270@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for URL();
  uint64_t v33 = *(void *)(v30 - 8);
  uint64_t v7 = __chkstk_darwin(v30);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v27 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v27 - v13;
  swift_getObjectType();
  uint64_t result = dispatch thunk of ICFileManaging.url(for:)();
  if (!v2)
  {
    URL.appendingPathComponent(_:isDirectory:)();
    uint64_t v16 = *(uint64_t (**)(char *, uint64_t))(v33 + 8);
    v33 += 8;
    uint64_t v27 = v16;
    v16(v9, v30);
    UUID.init()();
    UUID.uuidString.getter();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    URL.appendingPathComponent(_:isDirectory:)();
    swift_bridgeObjectRelease();
    uint64_t v17 = v12;
    uint64_t v18 = v30;
    uint64_t v19 = v27;
    v27(v17, v30);
    sub_100409380(v28);
    NSString v20 = String._bridgeToObjectiveC()();
    id v21 = [v20 ic_sanitizedFilenameString];

    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v24 = v23;

    uint64_t v31 = v22;
    uint64_t v32 = v24;
    v25._countAndFlagsBits = 46;
    v25._object = (void *)0xE100000000000000;
    String.append(_:)(v25);
    v26._countAndFlagsBits = 0x6372617365746F6ELL;
    v26._object = (void *)0xEC00000065766968;
    String.append(_:)(v26);
    swift_bridgeObjectRelease();
    URL.appendingPathComponent(_:isDirectory:)();
    swift_bridgeObjectRelease();
    return v19(v14, v18);
  }
  return result;
}

uint64_t sub_10040D590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  v27[2] = *v2;
  uint64_t v28 = a1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v30 - 8);
  uint64_t v9 = __chkstk_darwin(v30);
  uint64_t v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)v27 - v13;
  __chkstk_darwin(v12);
  uint64_t v29 = (char *)v27 - v15;
  swift_getObjectType();
  uint64_t result = dispatch thunk of ICFileManaging.url(for:)();
  if (!v3)
  {
    v27[1] = 0;
    URL.appendingPathComponent(_:isDirectory:)();
    uint64_t v17 = *(void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v18 = v30;
    v17(v11, v30);
    UUID.init()();
    UUID.uuidString.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v19 = v29;
    URL.appendingPathComponent(_:isDirectory:)();
    swift_bridgeObjectRelease();
    v17(v14, v18);
    sub_100031418(0, &qword_1006A6E18);
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    static ICArchive.archiveTitle<A>(for:)(v28);
    NSString v20 = String._bridgeToObjectiveC()();
    id v21 = [v20 ic_sanitizedFilenameString];

    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v24 = v23;

    uint64_t v31 = v22;
    uint64_t v32 = v24;
    v25._countAndFlagsBits = 46;
    v25._object = (void *)0xE100000000000000;
    String.append(_:)(v25);
    v26._countAndFlagsBits = 0x6372617365746F6ELL;
    v26._object = (void *)0xEC00000065766968;
    String.append(_:)(v26);
    swift_bridgeObjectRelease();
    URL.appendingPathComponent(_:isDirectory:)();
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(char *, uint64_t))v17)(v19, v18);
  }
  return result;
}

uint64_t sub_10040D944@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ICObjectReferences();
  uint64_t result = ICObjectReferences.recursiveNoteCount.getter();
  if (__OFADD__(v3, result)) {
    __break(1u);
  }
  else {
    *a2 = v3 + result;
  }
  return result;
}

uint64_t sub_10040D9FC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = v4;
  os_log_t v117 = a3;
  uint64_t v114 = type metadata accessor for URL();
  uint64_t v113 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  uint64_t v9 = (char *)&v112 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = type metadata accessor for ICArchiveModel();
  __chkstk_darwin(v115);
  uint64_t v116 = (char *)&v112 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10002F214(&qword_1006A6DF8);
  uint64_t v120 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  Swift::String v140 = (char *)&v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v139 = (uint64_t)&v112 - v14;
  uint64_t v141 = sub_10002F214(&qword_10069D088);
  uint64_t v122 = *(void *)(v141 - 8);
  uint64_t v15 = __chkstk_darwin(v141);
  uint64_t v127 = (char *)&v112 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v124 = (char *)&v112 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  Swift::String v136 = (char *)&v112 - v20;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v112 - v21;
  if (*(unsigned char *)(v3 + 96))
  {
    __break(1u);
    goto LABEL_95;
  }
  os_signpost_id_t v119 = a1;
  *(unsigned char *)(v3 + 96) = 1;
  uint64_t v138 = v11;
  *(void *)&long long v145 = _swiftEmptyArrayStorage;
  uint64_t v23 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  uint64_t v123 = v3;
  uint64_t v121 = a2;
  uint64_t v112 = v9;
  uint64_t v118 = v23;
  if (v23)
  {
    uint64_t v134 = *(void (**)(char *, char *, uint64_t))(v122 + 16);
    uint64_t v24 = *(char **)(v122 + 72);
    uint64_t v126 = (void (**)(char *, uint64_t))((*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80));
    Swift::String v25 = (char *)v126 + a2;
    unsigned int v132 = enum case for ICObjectReferences.Types.account<A>(_:);
    uint64_t v131 = (void (**)(uint64_t, uint64_t))(v120 + 104);
    uint64_t v130 = (void (**)(char *, uint64_t))(v120 + 8);
    uint64_t v129 = (void (**)(char *, char *, uint64_t))(v122 + 32);
    uint64_t v135 = (void *)(v122 + 16);
    uint64_t v125 = (void (**)(char *, uint64_t))(v122 + 8);
    uint64_t v128 = _swiftEmptyArrayStorage;
    uint64_t v26 = v23;
    uint64_t v27 = v22;
    Swift::String v137 = v5;
    Swift::String v133 = v24;
    v134(v22, v25, v141);
    while (1)
    {
      uint64_t v30 = v139;
      ICObjectReferences.type.getter();
      uint64_t v31 = v140;
      uint64_t v32 = v138;
      ((void (*)(char *, void, uint64_t))*v131)(v140, v132, v138);
      sub_10041B194();
      uint64_t v33 = v27;
      char v34 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v35 = *v130;
      (*v130)(v31, v32);
      v35((char *)v30, v32);
      if (v34)
      {
        uint64_t v28 = v141;
        (*v125)(v33, v141);
        uint64_t v5 = v137;
        uint64_t v27 = v33;
        uint64_t v29 = v133;
      }
      else
      {
        uint64_t v36 = *v129;
        uint64_t v28 = v141;
        (*v129)(v136, v33, v141);
        uint64_t v37 = v128;
        uint64_t v27 = v33;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100169E4C(0, v37[2] + 1, 1);
          uint64_t v28 = v141;
        }
        uint64_t v38 = (void *)v145;
        unint64_t v40 = *(void *)(v145 + 16);
        unint64_t v39 = *(void *)(v145 + 24);
        uint64_t v29 = v133;
        if (v40 >= v39 >> 1)
        {
          sub_100169E4C(v39 > 1, v40 + 1, 1);
          uint64_t v28 = v141;
          uint64_t v38 = (void *)v145;
        }
        v38[2] = v40 + 1;
        uint64_t v128 = v38;
        v36((char *)v126 + (void)v38 + v40 * (void)v29, v136, v28);
        uint64_t v5 = v137;
      }
      Swift::String v25 = &v29[(void)v25];
      if (!--v26) {
        break;
      }
      v134(v27, v25, v28);
    }
    unint64_t v41 = (void *)v145;
    uint64_t v3 = v123;
  }
  else
  {
    unint64_t v41 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  int64_t v42 = v41[2];
  Swift::String v136 = *(char **)(v3 + 16);
  if (!v42)
  {
    swift_release();
    uint64_t v43 = _swiftEmptyArrayStorage;
LABEL_24:
    uint64_t v50 = v43[2];
    if (v50)
    {
      uint64_t v51 = (uint64_t)(v43 + 4);
      swift_bridgeObjectRetain();
      unint64_t v52 = _swiftEmptyArrayStorage;
      Swift::String v137 = (char *)&type metadata for Any + 8;
      do
      {
        sub_10002F034(v51, (uint64_t)v147, &qword_10069B4D0);
        sub_10002F034((uint64_t)v147, (uint64_t)&v145, &qword_10069B4D0);
        if (v146)
        {
          sub_10002F214(&qword_10069DC10);
          if ((swift_dynamicCast() & 1) == 0)
          {
            uint64_t v144 = 0;
            long long v142 = 0u;
            long long v143 = 0u;
          }
        }
        else
        {
          sub_10002B754((uint64_t)&v145, &qword_10069B4D0);
          long long v142 = 0u;
          long long v143 = 0u;
          uint64_t v144 = 0;
        }
        sub_10002B754((uint64_t)v147, &qword_10069B4D0);
        if (*((void *)&v143 + 1))
        {
          sub_10016EFCC(&v142, (uint64_t)&v145);
          sub_10016EFCC(&v145, (uint64_t)&v142);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v52 = sub_1001A9334(0, v52[2] + 1, 1, v52);
          }
          unint64_t v54 = v52[2];
          unint64_t v53 = v52[3];
          if (v54 >= v53 >> 1) {
            unint64_t v52 = sub_1001A9334((void *)(v53 > 1), v54 + 1, 1, v52);
          }
          v52[2] = v54 + 1;
          sub_10016EFCC(&v142, (uint64_t)&v52[5 * v54 + 4]);
        }
        else
        {
          sub_10002B754((uint64_t)&v142, &qword_1006A6E08);
        }
        v51 += 32;
        --v50;
      }
      while (v50);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v52 = _swiftEmptyArrayStorage;
    }
    *(void *)&long long v145 = _swiftEmptyArrayStorage;
    uint64_t v55 = v52[2];
    if (v55)
    {
      uint64_t v56 = v52 + 4;
      swift_bridgeObjectRetain();
      do
      {
        uint64_t v57 = v56[3];
        uint64_t v58 = v56[4];
        sub_10015E154(v56, v57);
        uint64_t v59 = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 24))(v57, v58);
        sub_10022B9E4(v59);
        v56 += 5;
        --v55;
      }
      while (v55);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v125 = (void (**)(char *, uint64_t))v145;
    *(void *)&long long v145 = _swiftEmptyArrayStorage;
    uint64_t v60 = swift_bridgeObjectRetain();
    uint64_t v61 = v118;
    char v62 = v124;
    if (v118)
    {
      Swift::String v137 = v5;
      uint64_t v134 = *(void (**)(char *, char *, uint64_t))(v122 + 16);
      uint64_t v63 = *(void (***)(char *, char *, uint64_t))(v122 + 72);
      uint64_t v128 = (void *)((*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80));
      os_signpost_id_t v64 = (char *)v128 + v60;
      Swift::String v133 = (char *)(v120 + 104);
      unsigned int v132 = enum case for ICObjectReferences.Types.folder<A>(_:);
      uint64_t v131 = (void (**)(uint64_t, uint64_t))(v120 + 8);
      uint64_t v126 = (void (**)(char *, uint64_t))(v122 + 8);
      uint64_t v135 = (void *)(v122 + 16);
      uint64_t v130 = (void (**)(char *, uint64_t))(v122 + 32);
      uint64_t v129 = v63;
      uint64_t v65 = v138;
      v134(v124, (char *)v128 + v60, v141);
      while (1)
      {
        uint64_t v68 = v139;
        ICObjectReferences.type.getter();
        uint64_t v69 = v140;
        (*(void (**)(char *, void, uint64_t))v133)(v140, v132, v65);
        sub_100031418(0, (unint64_t *)&qword_10069E810);
        sub_1001A3EEC();
        char v70 = static ICObjectReferences.Types.== infix(_:_:)();
        uint64_t v71 = v62;
        uint64_t v72 = *v131;
        (*v131)((uint64_t)v69, v65);
        v72(v68, v65);
        if (v70)
        {
          os_log_type_t v73 = *v130;
          ((void (*)(char *, char *, uint64_t))*v130)(v127, v71, v141);
          uint64_t v74 = v145;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100169E4C(0, *(void *)(v74 + 16) + 1, 1);
            uint64_t v74 = v145;
          }
          uint64_t v67 = v129;
          unint64_t v76 = *(void *)(v74 + 16);
          unint64_t v75 = *(void *)(v74 + 24);
          if (v76 >= v75 >> 1)
          {
            sub_100169E4C(v75 > 1, v76 + 1, 1);
            uint64_t v74 = v145;
          }
          *(void *)(v74 + 16) = v76 + 1;
          uint64_t v77 = (char *)v128 + v74 + v76 * (void)v67;
          uint64_t v66 = v141;
          ((void (*)(char *, char *, uint64_t))v73)(v77, v127, v141);
          char v62 = v124;
        }
        else
        {
          uint64_t v66 = v141;
          (*v126)(v71, v141);
          char v62 = v71;
          uint64_t v67 = v129;
        }
        os_signpost_id_t v64 = (char *)v67 + (void)v64;
        if (!--v61) {
          break;
        }
        v134(v62, v64, v66);
      }
      uint64_t v78 = (void *)v145;
      uint64_t v5 = v137;
    }
    else
    {
      uint64_t v78 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease();
    int64_t v79 = v78[2];
    if (v79)
    {
      *(void *)&long long v142 = _swiftEmptyArrayStorage;
      swift_retain();
      sub_100169E2C(0, v79, 0);
      uint64_t v80 = (void *)v142;
      unsigned __int32 v81 = (char *)v78
          + ((*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80));
      uint64_t v82 = *(void *)(v122 + 72);
      while (1)
      {
        sub_10041B1F0();
        if (v5) {
          break;
        }
        *(void *)&long long v142 = v80;
        unint64_t v84 = v80[2];
        unint64_t v83 = v80[3];
        if (v84 >= v83 >> 1)
        {
          sub_100169E2C(v83 > 1, v84 + 1, 1);
          uint64_t v80 = (void *)v142;
        }
        v80[2] = v84 + 1;
        sub_1001BC02C((uint64_t)&v145, (uint64_t)&v80[4 * v84 + 4]);
        v81 += v82;
        if (!--v79)
        {
          Swift::String v137 = 0;
          swift_release();
          swift_release();
          goto LABEL_66;
        }
      }
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      uint64_t result = swift_release();
      goto LABEL_88;
    }
    Swift::String v137 = v5;
    swift_release();
    uint64_t v80 = _swiftEmptyArrayStorage;
LABEL_66:
    uint64_t v85 = v80[2];
    if (v85)
    {
      uint64_t v86 = (uint64_t)(v80 + 4);
      swift_bridgeObjectRetain();
      uint64_t v87 = _swiftEmptyArrayStorage;
      do
      {
        sub_10002F034(v86, (uint64_t)v147, &qword_10069B4D0);
        sub_10002F034((uint64_t)v147, (uint64_t)&v145, &qword_10069B4D0);
        if (v146)
        {
          sub_10002F214(&qword_10069DC10);
          if ((swift_dynamicCast() & 1) == 0)
          {
            uint64_t v144 = 0;
            long long v142 = 0u;
            long long v143 = 0u;
          }
        }
        else
        {
          sub_10002B754((uint64_t)&v145, &qword_10069B4D0);
          long long v142 = 0u;
          long long v143 = 0u;
          uint64_t v144 = 0;
        }
        sub_10002B754((uint64_t)v147, &qword_10069B4D0);
        if (*((void *)&v143 + 1))
        {
          sub_10016EFCC(&v142, (uint64_t)&v145);
          sub_10016EFCC(&v145, (uint64_t)&v142);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v87 = sub_1001A9334(0, v87[2] + 1, 1, v87);
          }
          unint64_t v89 = v87[2];
          unint64_t v88 = v87[3];
          if (v89 >= v88 >> 1) {
            uint64_t v87 = sub_1001A9334((void *)(v88 > 1), v89 + 1, 1, v87);
          }
          v87[2] = v89 + 1;
          sub_10016EFCC(&v142, (uint64_t)&v87[5 * v89 + 4]);
        }
        else
        {
          sub_10002B754((uint64_t)&v142, &qword_1006A6E08);
        }
        v86 += 32;
        --v85;
      }
      while (v85);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v87 = _swiftEmptyArrayStorage;
    }
    int v90 = v137;
    char v91 = sub_100408C94((uint64_t)v87);
    uint64_t v141 = (uint64_t)v90;
    swift_bridgeObjectRelease();
    uint64_t v92 = *(void *)(v123 + 24);
    uint64_t v93 = *(void *)(v123 + 40);
    uint64_t v94 = *(void *)(v123 + 48);
    uint64_t v95 = *(void *)(v123 + 56);
    uint64_t v96 = *(void *)(v123 + 64);
    uint64_t v139 = *(void *)(v123 + 32);
    Swift::String v140 = (char *)v92;
    sub_10024BEFC(v92, v139);
    uint64_t v138 = sub_10026A190((uint64_t)v125);
    swift_bridgeObjectRelease();
    if (!v91[2])
    {
      swift_bridgeObjectRelease();
      char v91 = 0;
    }
    unint64_t v97 = (int *)v115;
    uint64_t v9 = v116;
    uint64_t v98 = &v116[*(int *)(v115 + 24)];
    Date.init()();
    uint64_t v99 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56))(v98, 0, 1, v99);
    *uint64_t v9 = 0;
    *((void *)v9 + 1) = 1;
    uint64_t v100 = &v9[v97[7]];
    uint64_t v101 = v139;
    *(void *)uint64_t v100 = v140;
    *((void *)v100 + 1) = v101;
    *((void *)v100 + 2) = v93;
    *((void *)v100 + 3) = v94;
    *((void *)v100 + 4) = v95;
    *((void *)v100 + 5) = v96;
    *(void *)&v9[v97[8]] = v138;
    *(void *)&v9[v97[9]] = v91;
    if (qword_10069AFB0 == -1)
    {
LABEL_85:
      sub_10041B14C(&qword_1006A6E10, (void (*)(uint64_t))type metadata accessor for ICArchiveModel);
      uint64_t v102 = v141;
      uint64_t v103 = dispatch thunk of JSONEncoder.encode<A>(_:)();
      if (v102)
      {
        uint64_t result = sub_10041B2AC((uint64_t)v9);
      }
      else
      {
        uint64_t v105 = v103;
        unint64_t v106 = v104;
        swift_getObjectType();
        char v107 = v112;
        URL.appendingPathComponent(_:isDirectory:)();
        dispatch thunk of ICFileManaging.createFile(at:contents:)();
        (*(void (**)(char *, uint64_t))(v113 + 8))(v107, v114);
        uint64_t v108 = v118;
        if (v118)
        {
          uint64_t v109 = (void (*)(char *, char *, uint64_t))(v121
                                                              + ((*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80)));
          uint64_t v110 = *(void *)(v122 + 72);
          swift_bridgeObjectRetain();
          do
          {
            uint64_t v111 = v108;
            sub_10040FBAC(v109, v119, v117);
            uint64_t v109 = (void (*)(char *, char *, uint64_t))((char *)v109 + v110);
            --v108;
          }
          while (v111 != 1);
          swift_bridgeObjectRelease();
        }
        sub_10041B2AC((uint64_t)v116);
        uint64_t result = sub_10017253C(v105, v106);
      }
      goto LABEL_88;
    }
LABEL_95:
    swift_once();
    goto LABEL_85;
  }
  *(void *)&long long v142 = _swiftEmptyArrayStorage;
  swift_retain();
  sub_100169E2C(0, v42, 0);
  uint64_t v43 = (void *)v142;
  unint64_t v44 = (*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80);
  uint64_t v135 = v41;
  uint64_t v45 = (char *)v41 + v44;
  uint64_t v46 = *(void *)(v122 + 72);
  while (1)
  {
    sub_10041B1F0();
    if (v5) {
      break;
    }
    *(void *)&long long v142 = v43;
    unint64_t v48 = v43[2];
    unint64_t v47 = v43[3];
    if (v48 >= v47 >> 1)
    {
      sub_100169E2C(v47 > 1, v48 + 1, 1);
      uint64_t v43 = (void *)v142;
    }
    v43[2] = v48 + 1;
    sub_1001BC02C((uint64_t)&v145, (uint64_t)&v43[4 * v48 + 4]);
    v45 += v46;
    if (!--v42)
    {
      swift_release();
      swift_release();
      goto LABEL_24;
    }
  }
  swift_release();
  swift_release();
  uint64_t result = swift_release();
LABEL_88:
  *(unsigned char *)(v123 + 96) = 0;
  return result;
}

uint64_t sub_10040EBA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *v3;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for ICArchiveModel();
  uint64_t v13 = __chkstk_darwin(v87);
  if (v3[12])
  {
    __break(1u);
LABEL_50:
    swift_once();
    goto LABEL_45;
  }
  uint64_t v86 = v12;
  uint64_t v83 = v10;
  uint64_t v84 = v9;
  uint64_t v85 = a1;
  uint64_t v88 = (uint64_t)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = a3;
  uint64_t v92 = &v74;
  *((unsigned char *)v3 + 96) = 1;
  *(void *)&long long v97 = a2;
  __chkstk_darwin(v13);
  uint64_t v15 = a2;
  uint64_t v16 = *(void *)(v8 + 80);
  uint64_t v17 = *(void *)(v8 + 88);
  *(&v74 - 2) = v16;
  *(&v74 - 1) = v17;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ICObjectReferences();
  uint64_t v18 = type metadata accessor for Array();
  uint64_t v90 = v15;
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v19 = _ArrayProtocol.filter(_:)();
  uint64_t v91 = v4;
  *(void *)&long long v97 = v19;
  uint64_t v93 = v3;
  uint64_t v20 = v3[2];
  uint64_t v21 = (void *)swift_allocObject();
  void v21[2] = v16;
  void v21[3] = v17;
  v21[4] = v20;
  uint64_t v22 = swift_unknownObjectRetain();
  uint64_t v92 = &v74;
  __chkstk_darwin(v22);
  *(&v74 - 4) = v16;
  *(&v74 - 3) = v17;
  *(&v74 - 2) = (uint64_t)sub_10041B4D0;
  *(&v74 - 1) = (uint64_t)v21;
  uint64_t v23 = sub_10002F214(&qword_10069B4D0);
  uint64_t v24 = sub_10002F214(&qword_1006A3D90);
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v26 = v91;
  uint64_t v27 = sub_100408DC0((void (*)(char *, char *))sub_10041B3FC, (uint64_t)(&v74 - 6), v18, v23, v24, v25, (uint64_t)&protocol self-conformance witness table for Error, (uint64_t)&v94);
  if (v26)
  {
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_48;
  }
  uint64_t v80 = v20;
  unint64_t v75 = 0;
  uint64_t v76 = v25;
  uint64_t v77 = v24;
  uint64_t v78 = v23;
  uint64_t v79 = v16;
  uint64_t v81 = v18;
  uint64_t v91 = v27;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(v91 + 16);
  if (v29)
  {
    uint64_t v30 = v91 + 32;
    swift_bridgeObjectRetain();
    uint64_t v31 = _swiftEmptyArrayStorage;
    do
    {
      sub_10002F034(v30, (uint64_t)v99, &qword_10069B4D0);
      sub_10002F034((uint64_t)v99, (uint64_t)&v97, &qword_10069B4D0);
      if (v98)
      {
        sub_10002F214(&qword_10069DC10);
        if ((swift_dynamicCast() & 1) == 0)
        {
          uint64_t v96 = 0;
          long long v94 = 0u;
          long long v95 = 0u;
        }
      }
      else
      {
        sub_10002B754((uint64_t)&v97, &qword_10069B4D0);
        long long v94 = 0u;
        long long v95 = 0u;
        uint64_t v96 = 0;
      }
      sub_10002B754((uint64_t)v99, &qword_10069B4D0);
      if (*((void *)&v95 + 1))
      {
        sub_10016EFCC(&v94, (uint64_t)&v97);
        sub_10016EFCC(&v97, (uint64_t)&v94);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v31 = sub_1001A9334(0, v31[2] + 1, 1, v31);
        }
        unint64_t v33 = v31[2];
        unint64_t v32 = v31[3];
        if (v33 >= v32 >> 1) {
          uint64_t v31 = sub_1001A9334((void *)(v32 > 1), v33 + 1, 1, v31);
        }
        v31[2] = v33 + 1;
        sub_10016EFCC(&v94, (uint64_t)&v31[5 * v33 + 4]);
      }
      else
      {
        sub_10002B754((uint64_t)&v94, &qword_1006A6E08);
      }
      v30 += 32;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v31 = _swiftEmptyArrayStorage;
  }
  *(void *)&long long v97 = _swiftEmptyArrayStorage;
  uint64_t v34 = v31[2];
  if (v34)
  {
    uint64_t v35 = v31 + 4;
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v36 = v35[3];
      uint64_t v37 = v35[4];
      sub_10015E154(v35, v36);
      uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 24))(v36, v37);
      sub_10022B9E4(v38);
      v35 += 5;
      --v34;
    }
    while (v34);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v39 = v97;
  *(void *)&long long v97 = v90;
  __chkstk_darwin(v90);
  uint64_t v40 = v79;
  *(&v74 - 2) = v79;
  *(&v74 - 1) = v17;
  swift_bridgeObjectRetain();
  uint64_t v41 = v81;
  int64_t v42 = v75;
  *(void *)&long long v97 = _ArrayProtocol.filter(_:)();
  uint64_t v43 = (void *)swift_allocObject();
  v43[2] = v40;
  v43[3] = v17;
  v43[4] = v80;
  uint64_t v44 = swift_unknownObjectRetain();
  __chkstk_darwin(v44);
  *(&v74 - 4) = v40;
  *(&v74 - 3) = v17;
  *(&v74 - 2) = (uint64_t)sub_10041B4D0;
  *(&v74 - 1) = (uint64_t)v43;
  uint64_t v45 = sub_100408DC0((void (*)(char *, char *))sub_10041B3FC, (uint64_t)(&v74 - 6), v41, v78, v77, v76, (uint64_t)&protocol self-conformance witness table for Error, (uint64_t)&v94);
  uint64_t v92 = v42;
  if (v42)
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_48;
  }
  uint64_t v46 = v45;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v47 = *(void *)(v46 + 16);
  if (v47)
  {
    uint64_t v48 = v46 + 32;
    uint64_t v91 = v46;
    swift_bridgeObjectRetain();
    uint64_t v49 = _swiftEmptyArrayStorage;
    uint64_t v50 = v39;
    do
    {
      sub_10002F034(v48, (uint64_t)v99, &qword_10069B4D0);
      sub_10002F034((uint64_t)v99, (uint64_t)&v97, &qword_10069B4D0);
      if (v98)
      {
        sub_10002F214(&qword_10069DC10);
        if ((swift_dynamicCast() & 1) == 0)
        {
          uint64_t v96 = 0;
          long long v94 = 0u;
          long long v95 = 0u;
        }
      }
      else
      {
        sub_10002B754((uint64_t)&v97, &qword_10069B4D0);
        long long v94 = 0u;
        long long v95 = 0u;
        uint64_t v96 = 0;
      }
      sub_10002B754((uint64_t)v99, &qword_10069B4D0);
      if (*((void *)&v95 + 1))
      {
        sub_10016EFCC(&v94, (uint64_t)&v97);
        sub_10016EFCC(&v97, (uint64_t)&v94);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v49 = sub_1001A9334(0, v49[2] + 1, 1, v49);
        }
        unint64_t v52 = v49[2];
        unint64_t v51 = v49[3];
        if (v52 >= v51 >> 1) {
          uint64_t v49 = sub_1001A9334((void *)(v51 > 1), v52 + 1, 1, v49);
        }
        v49[2] = v52 + 1;
        sub_10016EFCC(&v94, (uint64_t)&v49[5 * v52 + 4]);
        uint64_t v39 = v50;
      }
      else
      {
        sub_10002B754((uint64_t)&v94, &qword_1006A6E08);
      }
      v48 += 32;
      --v47;
    }
    while (v47);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v49 = _swiftEmptyArrayStorage;
  }
  unint64_t v53 = v92;
  unint64_t v54 = sub_100408C94((uint64_t)v49);
  uint64_t v92 = v53;
  swift_bridgeObjectRelease();
  uint64_t v55 = v93[4];
  uint64_t v56 = v93[5];
  uint64_t v57 = v93[6];
  uint64_t v58 = v93[7];
  uint64_t v59 = v93[8];
  uint64_t v91 = v93[3];
  uint64_t WitnessTable = v55;
  sub_10024BEFC(v91, v55);
  uint64_t v80 = sub_10026A190(v39);
  swift_bridgeObjectRelease();
  if (!v54[2])
  {
    swift_bridgeObjectRelease();
    unint64_t v54 = 0;
  }
  uint64_t v60 = (int *)v87;
  a1 = v88;
  uint64_t v61 = v88 + *(int *)(v87 + 24);
  Date.init()();
  uint64_t v62 = type metadata accessor for Date();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v61, 0, 1, v62);
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = 1;
  uint64_t v63 = (void *)(a1 + v60[7]);
  uint64_t v64 = WitnessTable;
  void *v63 = v91;
  v63[1] = v64;
  v63[2] = v56;
  v63[3] = v57;
  v63[4] = v58;
  v63[5] = v59;
  *(void *)(a1 + v60[8]) = v80;
  *(void *)(a1 + v60[9]) = v54;
  if (qword_10069AFB0 != -1) {
    goto LABEL_50;
  }
LABEL_45:
  sub_10041B14C(&qword_1006A6E10, (void (*)(uint64_t))type metadata accessor for ICArchiveModel);
  uint64_t v65 = v92;
  uint64_t v66 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  uint64_t v68 = v86;
  if (!v65)
  {
    uint64_t v69 = v66;
    unint64_t v70 = v67;
    swift_getObjectType();
    uint64_t v71 = v85;
    URL.appendingPathComponent(_:isDirectory:)();
    dispatch thunk of ICFileManaging.createFile(at:contents:)();
    uint64_t v72 = (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v68, v84);
    *(void *)&long long v97 = v90;
    __chkstk_darwin(v72);
    os_log_type_t v73 = v93;
    *(&v74 - 4) = (uint64_t)v93;
    *(&v74 - 3) = v71;
    *(&v74 - 2) = v82;
    swift_getWitnessTable();
    Sequence.forEach(_:)();
    sub_10041B2AC(v88);
    uint64_t result = sub_10017253C(v69, v70);
    *((unsigned char *)v73 + 96) = 0;
    return result;
  }
  uint64_t result = sub_10041B2AC(a1);
LABEL_48:
  *((unsigned char *)v93 + 96) = 0;
  return result;
}

BOOL sub_10040F810()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v0 = type metadata accessor for ICObjectReferences.Types();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v10 - v5;
  type metadata accessor for ICObjectReferences();
  ICObjectReferences.type.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for ICObjectReferences.Types.account<A>(_:), v0);
  swift_getWitnessTable();
  char v7 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  v8(v6, v0);
  return (v7 & 1) == 0;
}

uint64_t sub_10040F9F0()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v0 = type metadata accessor for ICObjectReferences.Types();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v10 - v5;
  type metadata accessor for ICObjectReferences();
  ICObjectReferences.type.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for ICObjectReferences.Types.folder<A>(_:), v0);
  char v7 = static ICObjectReferences.Types.== infix(_:_:)();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  v8(v6, v0);
  return v7 & 1;
}

uint64_t sub_10040FBAC(void (*a1)(char *, char *, uint64_t), void *a2, void *a3)
{
  v218 = a3;
  v217 = a2;
  uint64_t v229 = type metadata accessor for OSSignpostError();
  uint64_t v230 = *(void *)(v229 - 8);
  uint64_t v4 = __chkstk_darwin(v229);
  v211 = (char *)&v199 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  v202 = (char *)&v199 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  v213 = (char *)&v199 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  v210 = (char *)&v199 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  v201 = (char *)&v199 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  v212 = (char *)&v199 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  v219 = (char *)&v199 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  v203 = (char *)&v199 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  v220 = (char *)&v199 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  v224 = (char *)&v199 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  v207 = (char *)&v199 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  v206 = (char *)&v199 - v27;
  __chkstk_darwin(v26);
  v225 = (char *)&v199 - v28;
  uint64_t v29 = sub_10002F214(&qword_10069D088);
  uint64_t v231 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  v237 = (char *)&v199 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for OSSignposter();
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v199 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v248 = type metadata accessor for OSSignpostID();
  uint64_t v239 = *(void *)(v248 - 8);
  uint64_t v35 = __chkstk_darwin(v248);
  v216 = (char *)&v199 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v35);
  v205 = (char *)&v199 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  v223 = (char *)&v199 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  v215 = (char *)&v199 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  v204 = (char *)&v199 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  v222 = (char *)&v199 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  v221 = (char *)&v199 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  v208 = (char *)&v199 - v50;
  uint64_t v51 = __chkstk_darwin(v49);
  v227 = (char *)&v199 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  v226 = (char *)&v199 - v54;
  uint64_t v55 = __chkstk_darwin(v53);
  v214 = (char *)&v199 - v56;
  uint64_t v57 = __chkstk_darwin(v55);
  v209 = (char *)&v199 - v58;
  uint64_t v59 = __chkstk_darwin(v57);
  v228 = (char *)&v199 - v60;
  uint64_t v61 = __chkstk_darwin(v59);
  v238 = (char *)&v199 - v62;
  __chkstk_darwin(v61);
  uint64_t v64 = (char *)&v199 - v63;
  if (qword_10069B038 != -1) {
    swift_once();
  }
  uint64_t v65 = sub_10003293C(v31, (uint64_t)qword_1006A6D20);
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v34, v65, v31);
  uint64_t v234 = v29;
  v236 = a1;
  ICObjectReferences.identifier.getter();
  id v66 = v245;
  id v67 = [v245 description];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:object:)();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
  uint64_t v233 = v65;
  uint64_t v68 = OSSignposter.logHandle.getter();
  os_signpost_type_t v69 = static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    unint64_t v70 = v238;
    uint64_t v71 = v239;
    uint64_t v72 = *(void (**)(char *, char *, uint64_t))(v239 + 16);
    unint64_t v73 = (v239 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v74 = v248;
    v72(v238, v64, v248);
    unint64_t v75 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v75 = 0;
    os_signpost_id_t v76 = OSSignpostID.rawValue.getter();
    os_signpost_type_t v77 = v69;
    uint64_t v78 = v74;
    unint64_t v79 = v73;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v68, v77, v76, "Export Object", "", v75, 2u);
    swift_slowDealloc();

    uint64_t v80 = v70;
    (*(void (**)(char *, uint64_t))(v71 + 8))(v70, v78);
  }
  else
  {

    uint64_t v80 = v238;
    uint64_t v72 = *(void (**)(char *, char *, uint64_t))(v239 + 16);
    unint64_t v79 = (v239 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v78 = v248;
  }
  uint64_t v81 = v237;
  v72(v80, v64, v78);
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  uint64_t v248 = OSSignpostIntervalState.init(id:isOpen:)();
  uint64_t v82 = v231;
  uint64_t v83 = v234;
  (*(void (**)(char *, void, uint64_t))(v231 + 16))(v81, v236, v234);
  int v84 = (*(uint64_t (**)(char *, uint64_t))(v82 + 88))(v81, v83);
  v235 = v64;
  if (v84 == enum case for ICObjectReferences.account<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v82 + 96))(v81, v83);
    swift_release();
    type metadata accessor for ICModernObjectProvider();
    sub_10041B14C(&qword_1006A6DF0, (void (*)(uint64_t))&type metadata accessor for ICModernObjectProvider);
    uint64_t v85 = v232;
    dispatch thunk of ICObjectProviding.object(for:)();
    v237 = v85;
    if (v85)
    {
      uint64_t v86 = OSSignposter.logHandle.getter();
      uint64_t v87 = v228;
      OSSignpostIntervalState.signpostID.getter();
      os_signpost_type_t v88 = static os_signpost_type_t.end.getter();
      if (OS_os_log.signpostsEnabled.getter())
      {
        unint64_t v89 = v72;
        swift_retain();
        uint64_t v90 = v225;
        checkForErrorAndConsumeState(state:)();
        swift_release();
        uint64_t v91 = v230;
        uint64_t v92 = v229;
        if ((*(unsigned int (**)(char *, uint64_t))(v230 + 88))(v90, v229) == enum case for OSSignpostError.doubleEnd(_:))
        {
          uint64_t v93 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v91 + 8))(v90, v92);
          uint64_t v93 = "";
        }
        uint64_t v123 = v238;
        uint64_t v124 = v228;
        v89(v238, v228, v78);
        goto LABEL_91;
      }

      uint64_t v110 = *(void (**)(char *, uint64_t))(v239 + 8);
      v110(v87, v78);
LABEL_94:
      uint64_t v169 = v235;
      swift_release();
      uint64_t v170 = v169;
      return ((uint64_t (*)(char *, uint64_t))v110)(v170, v78);
    }
    unint64_t v200 = v79;
    if (v241)
    {
      sub_10002F214(&qword_10069DC10);
      if (swift_dynamicCast())
      {
        if (*((void *)&v243 + 1))
        {
          sub_10016EFCC(&v242, (uint64_t)&v245);
          uint64_t v103 = ICObjectReferences.children.getter();
          unint64_t v104 = v237;
          sub_10041487C(&v245, v103, (uint64_t)v217, (uint64_t)v218);
          v237 = v104;
          if (v104)
          {
            sub_100018FE8((uint64_t)&v245);
            swift_bridgeObjectRelease();
            uint64_t v86 = OSSignposter.logHandle.getter();
            uint64_t v105 = v209;
            OSSignpostIntervalState.signpostID.getter();
            os_signpost_type_t v106 = static os_signpost_type_t.end.getter();
            if (OS_os_log.signpostsEnabled.getter())
            {
              v236 = v72;
              swift_retain();
              char v107 = v206;
              checkForErrorAndConsumeState(state:)();
              swift_release();
              uint64_t v108 = v230;
              uint64_t v109 = v229;
              if ((*(unsigned int (**)(char *, uint64_t))(v230 + 88))(v107, v229) == enum case for OSSignpostError.doubleEnd(_:))
              {
                uint64_t v93 = "[Error] Interval already ended";
              }
              else
              {
                (*(void (**)(char *, uint64_t))(v108 + 8))(v107, v109);
                uint64_t v93 = "";
              }
              uint64_t v124 = v209;
              uint64_t v123 = v238;
              v236(v238, v209, v78);
              id v166 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)id v166 = 0;
              os_signpost_id_t v167 = OSSignpostID.rawValue.getter();
              os_signpost_type_t v168 = v106;
              goto LABEL_92;
            }
            goto LABEL_68;
          }
          goto LABEL_82;
        }
      }
      else
      {
        uint64_t v244 = 0;
        long long v242 = 0u;
        long long v243 = 0u;
      }
    }
    else
    {
      sub_10002B754((uint64_t)v240, &qword_10069B4D0);
      long long v242 = 0u;
      long long v243 = 0u;
      uint64_t v244 = 0;
    }
    v236 = v72;
    sub_10002B754((uint64_t)&v242, &qword_1006A6E08);
    if (qword_10069B030 != -1) {
      swift_once();
    }
    uint64_t v125 = v235;
    uint64_t v126 = type metadata accessor for Logger();
    sub_10003293C(v126, (uint64_t)qword_1006A6D08);
    uint64_t v127 = Logger.logObject.getter();
    os_log_type_t v128 = static os_log_type_t.fault.getter();
    BOOL v129 = os_log_type_enabled(v127, v128);
    uint64_t v130 = v224;
    if (v129)
    {
      uint64_t v131 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v131 = 0;
      _os_log_impl((void *)&_mh_execute_header, v127, v128, "Account to be exported does not exist anymore — skipping", v131, 2u);
      swift_slowDealloc();
    }

    unsigned int v132 = OSSignposter.logHandle.getter();
    Swift::String v133 = v226;
    OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v134 = static os_signpost_type_t.end.getter();
    if ((OS_os_log.signpostsEnabled.getter() & 1) == 0)
    {

      uint64_t v110 = *(void (**)(char *, uint64_t))(v239 + 8);
      v110(v133, v78);
LABEL_122:
      swift_release();
      uint64_t v170 = v125;
      return ((uint64_t (*)(char *, uint64_t))v110)(v170, v78);
    }
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    uint64_t v135 = v230;
    uint64_t v136 = v229;
    if ((*(unsigned int (**)(char *, uint64_t))(v230 + 88))(v130, v229) == enum case for OSSignpostError.doubleEnd(_:))
    {
      Swift::String v137 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v135 + 8))(v130, v136);
      Swift::String v137 = "";
    }
    NSURL v150 = v226;
    long long v151 = v238;
    v236(v238, v226, v78);
    goto LABEL_99;
  }
  if (v84 == enum case for ICObjectReferences.folder<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v82 + 96))(v237, v83);
    swift_release();
    type metadata accessor for ICModernObjectProvider();
    sub_10041B14C(&qword_1006A6DF0, (void (*)(uint64_t))&type metadata accessor for ICModernObjectProvider);
    long long v94 = v232;
    dispatch thunk of ICObjectProviding.object(for:)();
    v237 = v94;
    if (v94)
    {
      uint64_t v86 = OSSignposter.logHandle.getter();
      long long v95 = v227;
      OSSignpostIntervalState.signpostID.getter();
      os_signpost_type_t v88 = static os_signpost_type_t.end.getter();
      if (OS_os_log.signpostsEnabled.getter())
      {
        v236 = v72;
        swift_retain();
        uint64_t v96 = v220;
        checkForErrorAndConsumeState(state:)();
        swift_release();
        uint64_t v97 = v230;
        uint64_t v98 = v229;
        if ((*(unsigned int (**)(char *, uint64_t))(v230 + 88))(v96, v229) == enum case for OSSignpostError.doubleEnd(_:))
        {
          uint64_t v93 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v97 + 8))(v96, v98);
          uint64_t v93 = "";
        }
        uint64_t v123 = v238;
        uint64_t v148 = v238;
        uint64_t v149 = &v249;
LABEL_87:
        uint64_t v124 = (char *)*(v149 - 32);
LABEL_90:
        v236(v148, v124, v78);
LABEL_91:
        id v166 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v166 = 0;
        os_signpost_id_t v167 = OSSignpostID.rawValue.getter();
        os_signpost_type_t v168 = v88;
LABEL_92:
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v86, v168, v167, "Export Object", v93, v166, 2u);
        swift_slowDealloc();

        uint64_t v110 = *(void (**)(char *, uint64_t))(v239 + 8);
        v110(v124, v78);
LABEL_93:
        v110(v123, v78);
        goto LABEL_94;
      }
      goto LABEL_34;
    }
    unint64_t v200 = v79;
    if (v241)
    {
      sub_10002F214(&qword_10069DC10);
      if (swift_dynamicCast())
      {
        if (*((void *)&v243 + 1))
        {
          sub_10016EFCC(&v242, (uint64_t)&v245);
          uint64_t v116 = ICObjectReferences.children.getter();
          os_log_t v117 = v237;
          sub_1004151C8(&v245, v116, (uint64_t)v217, (uint64_t)v218);
          v237 = v117;
          if (v117)
          {
            sub_100018FE8((uint64_t)&v245);
            swift_bridgeObjectRelease();
            uint64_t v86 = OSSignposter.logHandle.getter();
            uint64_t v105 = v208;
            OSSignpostIntervalState.signpostID.getter();
            os_signpost_type_t v118 = static os_signpost_type_t.end.getter();
            if (OS_os_log.signpostsEnabled.getter())
            {
              swift_retain();
              os_signpost_id_t v119 = v203;
              checkForErrorAndConsumeState(state:)();
              swift_release();
              uint64_t v120 = v230;
              uint64_t v121 = v229;
              if ((*(unsigned int (**)(char *, uint64_t))(v230 + 88))(v119, v229) == enum case for OSSignpostError.doubleEnd(_:))
              {
                uint64_t v122 = "[Error] Interval already ended";
              }
              else
              {
                (*(void (**)(char *, uint64_t))(v120 + 8))(v119, v121);
                uint64_t v122 = "";
              }
              uint64_t v123 = v238;
              id v194 = v238;
              uint64_t v195 = (char **)&v239;
LABEL_137:
              unint64_t v196 = *(v195 - 32);
              v72(v194, v196, v78);
              char v197 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)char v197 = 0;
              os_signpost_id_t v198 = OSSignpostID.rawValue.getter();
              _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v86, v118, v198, "Export Object", v122, v197, 2u);
              swift_slowDealloc();

              uint64_t v110 = *(void (**)(char *, uint64_t))(v239 + 8);
              v110(v196, v78);
              goto LABEL_93;
            }
            goto LABEL_68;
          }
          goto LABEL_82;
        }
      }
      else
      {
        uint64_t v244 = 0;
        long long v242 = 0u;
        long long v243 = 0u;
      }
    }
    else
    {
      sub_10002B754((uint64_t)v240, &qword_10069B4D0);
      long long v242 = 0u;
      long long v243 = 0u;
      uint64_t v244 = 0;
    }
    sub_10002B754((uint64_t)&v242, &qword_1006A6E08);
    if (qword_10069B030 != -1) {
      swift_once();
    }
    uint64_t v152 = type metadata accessor for Logger();
    sub_10003293C(v152, (uint64_t)qword_1006A6D08);
    uint64_t v153 = Logger.logObject.getter();
    os_log_type_t v154 = static os_log_type_t.fault.getter();
    BOOL v155 = os_log_type_enabled(v153, v154);
    AVMediaType v156 = v219;
    if (v155)
    {
      uint64_t v157 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v157 = 0;
      _os_log_impl((void *)&_mh_execute_header, v153, v154, "Folder to be exported does not exist anymore — skipping", v157, 2u);
      swift_slowDealloc();
    }

    unsigned int v132 = OSSignposter.logHandle.getter();
    uint64_t v158 = v221;
    OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v159 = static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      os_signpost_type_t v134 = v159;
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v160 = v230;
      uint64_t v161 = v229;
      if ((*(unsigned int (**)(char *, uint64_t))(v230 + 88))(v156, v229) == enum case for OSSignpostError.doubleEnd(_:))
      {
        Swift::String v137 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v160 + 8))(v156, v161);
        Swift::String v137 = "";
      }
      v171 = &v246;
LABEL_97:
      NSURL v150 = (char *)*((void *)v171 - 32);
      long long v151 = v238;
      v172 = v238;
LABEL_98:
      v72(v172, v150, v78);
LABEL_99:
      v173 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v173 = 0;
      os_signpost_id_t v174 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v132, v134, v174, "Export Object", v137, v173, 2u);
      swift_slowDealloc();

      uint64_t v110 = *(void (**)(char *, uint64_t))(v239 + 8);
      v110(v150, v78);
      v110(v151, v78);
LABEL_121:
      uint64_t v125 = v235;
      goto LABEL_122;
    }
    goto LABEL_120;
  }
  if (v84 == enum case for ICObjectReferences.note<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v82 + 96))(v237, v83);
    swift_release();
    type metadata accessor for ICModernObjectProvider();
    sub_10041B14C(&qword_1006A6DF0, (void (*)(uint64_t))&type metadata accessor for ICModernObjectProvider);
    uint64_t v99 = v232;
    dispatch thunk of ICObjectProviding.object(for:)();
    v237 = v99;
    if (v99)
    {
      uint64_t v86 = OSSignposter.logHandle.getter();
      long long v95 = v222;
      OSSignpostIntervalState.signpostID.getter();
      os_signpost_type_t v88 = static os_signpost_type_t.end.getter();
      if (OS_os_log.signpostsEnabled.getter())
      {
        v236 = v72;
        swift_retain();
        uint64_t v100 = v212;
        checkForErrorAndConsumeState(state:)();
        swift_release();
        uint64_t v101 = v230;
        uint64_t v102 = v229;
        if ((*(unsigned int (**)(char *, uint64_t))(v230 + 88))(v100, v229) == enum case for OSSignpostError.doubleEnd(_:))
        {
          uint64_t v93 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v101 + 8))(v100, v102);
          uint64_t v93 = "";
        }
        uint64_t v123 = v238;
        uint64_t v148 = v238;
        uint64_t v149 = (uint64_t *)&v247;
        goto LABEL_87;
      }
LABEL_34:

      uint64_t v110 = *(void (**)(char *, uint64_t))(v239 + 8);
      v110(v95, v78);
      goto LABEL_94;
    }
    unint64_t v200 = v79;
    if (v241)
    {
      sub_10002F214(&qword_10069DC10);
      if (swift_dynamicCast())
      {
        if (*((void *)&v243 + 1))
        {
          sub_10016EFCC(&v242, (uint64_t)&v245);
          uint64_t v138 = ICObjectReferences.children.getter();
          uint64_t v139 = v237;
          sub_100415B04(&v245, v138, v217, v218);
          v237 = v139;
          if (v139)
          {
            sub_100018FE8((uint64_t)&v245);
            swift_bridgeObjectRelease();
            uint64_t v86 = OSSignposter.logHandle.getter();
            uint64_t v105 = v204;
            OSSignpostIntervalState.signpostID.getter();
            os_signpost_type_t v118 = static os_signpost_type_t.end.getter();
            if (OS_os_log.signpostsEnabled.getter())
            {
              swift_retain();
              Swift::String v140 = v201;
              checkForErrorAndConsumeState(state:)();
              swift_release();
              uint64_t v141 = v230;
              uint64_t v142 = v229;
              if ((*(unsigned int (**)(char *, uint64_t))(v230 + 88))(v140, v229) == enum case for OSSignpostError.doubleEnd(_:))
              {
                uint64_t v122 = "[Error] Interval already ended";
              }
              else
              {
                (*(void (**)(char *, uint64_t))(v141 + 8))(v140, v142);
                uint64_t v122 = "";
              }
              uint64_t v123 = v238;
              id v194 = v238;
              uint64_t v195 = &v235;
              goto LABEL_137;
            }
LABEL_68:

            uint64_t v110 = *(void (**)(char *, uint64_t))(v239 + 8);
            v110(v105, v78);
            goto LABEL_94;
          }
LABEL_82:
          sub_100018FE8((uint64_t)&v245);
          swift_bridgeObjectRelease();
          unsigned int v132 = OSSignposter.logHandle.getter();
          unint64_t v162 = v214;
          OSSignpostIntervalState.signpostID.getter();
          os_signpost_type_t v134 = static os_signpost_type_t.end.getter();
          if ((OS_os_log.signpostsEnabled.getter() & 1) == 0)
          {

            uint64_t v110 = *(void (**)(char *, uint64_t))(v239 + 8);
            v110(v162, v78);
            goto LABEL_121;
          }
          swift_retain();
          uint64_t v163 = v207;
          checkForErrorAndConsumeState(state:)();
          swift_release();
          uint64_t v164 = v230;
          uint64_t v165 = v229;
          if ((*(unsigned int (**)(char *, uint64_t))(v230 + 88))(v163, v229) == enum case for OSSignpostError.doubleEnd(_:))
          {
            Swift::String v137 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v164 + 8))(v163, v165);
            Swift::String v137 = "";
          }
          long long v151 = v238;
          v172 = v238;
          NSURL v150 = v214;
          goto LABEL_98;
        }
      }
      else
      {
        uint64_t v244 = 0;
        long long v242 = 0u;
        long long v243 = 0u;
      }
    }
    else
    {
      sub_10002B754((uint64_t)v240, &qword_10069B4D0);
      long long v242 = 0u;
      long long v243 = 0u;
      uint64_t v244 = 0;
    }
    sub_10002B754((uint64_t)&v242, &qword_1006A6E08);
    if (qword_10069B030 != -1) {
      swift_once();
    }
    uint64_t v175 = type metadata accessor for Logger();
    sub_10003293C(v175, (uint64_t)qword_1006A6D08);
    uint64_t v176 = Logger.logObject.getter();
    os_log_type_t v177 = static os_log_type_t.fault.getter();
    BOOL v178 = os_log_type_enabled(v176, v177);
    v179 = v210;
    if (v178)
    {
      id v180 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v180 = 0;
      _os_log_impl((void *)&_mh_execute_header, v176, v177, "Note to be exported does not exist anymore — skipping", v180, 2u);
      swift_slowDealloc();
    }

    unsigned int v132 = OSSignposter.logHandle.getter();
    uint64_t v158 = v215;
    OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v181 = static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      os_signpost_type_t v134 = v181;
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v182 = v230;
      uint64_t v183 = v229;
      if ((*(unsigned int (**)(char *, uint64_t))(v230 + 88))(v179, v229) == enum case for OSSignpostError.doubleEnd(_:))
      {
        Swift::String v137 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v182 + 8))(v179, v183);
        Swift::String v137 = "";
      }
      v171 = (char *)&v243;
      goto LABEL_97;
    }
LABEL_120:

    uint64_t v110 = *(void (**)(char *, uint64_t))(v239 + 8);
    v110(v158, v78);
    goto LABEL_121;
  }
  if (v84 == enum case for ICObjectReferences.attachment<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v82 + 96))(v237, v83);
    swift_release();
    type metadata accessor for ICModernObjectProvider();
    sub_10041B14C(&qword_1006A6DF0, (void (*)(uint64_t))&type metadata accessor for ICModernObjectProvider);
    uint64_t v111 = v232;
    dispatch thunk of ICObjectProviding.object(for:)();
    v237 = v111;
    if (v111)
    {
      uint64_t v86 = OSSignposter.logHandle.getter();
      uint64_t v105 = v223;
      OSSignpostIntervalState.signpostID.getter();
      os_signpost_type_t v112 = static os_signpost_type_t.end.getter();
      if (OS_os_log.signpostsEnabled.getter())
      {
        v236 = v72;
        swift_retain();
        uint64_t v113 = v213;
        checkForErrorAndConsumeState(state:)();
        swift_release();
        uint64_t v114 = v230;
        uint64_t v115 = v229;
        os_signpost_type_t v88 = v112;
        if ((*(unsigned int (**)(char *, uint64_t))(v230 + 88))(v113, v229) == enum case for OSSignpostError.doubleEnd(_:))
        {
          uint64_t v93 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v114 + 8))(v113, v115);
          uint64_t v93 = "";
        }
        uint64_t v124 = v223;
        uint64_t v123 = v238;
        uint64_t v148 = v238;
        goto LABEL_90;
      }
      goto LABEL_68;
    }
    unint64_t v200 = v79;
    if (v241)
    {
      sub_10002F214(&qword_10069DC10);
      if (swift_dynamicCast())
      {
        if (*((void *)&v243 + 1))
        {
          sub_10016EFCC(&v242, (uint64_t)&v245);
          long long v143 = (char *)ICObjectReferences.children.getter();
          uint64_t v144 = v237;
          sub_100416868(&v245, v143, (void (**)(char *, uint64_t))v217, v218);
          v237 = v144;
          if (v144)
          {
            sub_100018FE8((uint64_t)&v245);
            swift_bridgeObjectRelease();
            uint64_t v86 = OSSignposter.logHandle.getter();
            uint64_t v105 = v205;
            OSSignpostIntervalState.signpostID.getter();
            os_signpost_type_t v118 = static os_signpost_type_t.end.getter();
            if (OS_os_log.signpostsEnabled.getter())
            {
              swift_retain();
              long long v145 = v202;
              checkForErrorAndConsumeState(state:)();
              swift_release();
              uint64_t v146 = v230;
              uint64_t v147 = v229;
              if ((*(unsigned int (**)(char *, uint64_t))(v230 + 88))(v145, v229) == enum case for OSSignpostError.doubleEnd(_:))
              {
                uint64_t v122 = "[Error] Interval already ended";
              }
              else
              {
                (*(void (**)(char *, uint64_t))(v146 + 8))(v145, v147);
                uint64_t v122 = "";
              }
              uint64_t v123 = v238;
              id v194 = v238;
              uint64_t v195 = (char **)&v236;
              goto LABEL_137;
            }
            goto LABEL_68;
          }
          goto LABEL_82;
        }
      }
      else
      {
        uint64_t v244 = 0;
        long long v242 = 0u;
        long long v243 = 0u;
      }
    }
    else
    {
      sub_10002B754((uint64_t)v240, &qword_10069B4D0);
      long long v242 = 0u;
      long long v243 = 0u;
      uint64_t v244 = 0;
    }
    sub_10002B754((uint64_t)&v242, &qword_1006A6E08);
    if (qword_10069B030 != -1) {
      swift_once();
    }
    uint64_t v184 = type metadata accessor for Logger();
    sub_10003293C(v184, (uint64_t)qword_1006A6D08);
    v185 = Logger.logObject.getter();
    os_log_type_t v186 = static os_log_type_t.fault.getter();
    BOOL v187 = os_log_type_enabled(v185, v186);
    uint64_t v188 = v211;
    if (v187)
    {
      uint64_t v189 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v189 = 0;
      _os_log_impl((void *)&_mh_execute_header, v185, v186, "Object to be exported does not exist anymore — skipping", v189, 2u);
      swift_slowDealloc();
    }

    unsigned int v132 = OSSignposter.logHandle.getter();
    uint64_t v158 = v216;
    OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v190 = static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      os_signpost_type_t v134 = v190;
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v191 = v230;
      uint64_t v192 = v229;
      if ((*(unsigned int (**)(char *, uint64_t))(v230 + 88))(v188, v229) == enum case for OSSignpostError.doubleEnd(_:))
      {
        Swift::String v137 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v191 + 8))(v188, v192);
        Swift::String v137 = "";
      }
      v171 = (char *)&v243 + 8;
      goto LABEL_97;
    }
    goto LABEL_120;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_100411BEC(char *a1, void (*a2)(char *, uint64_t), void *a3)
{
  os_signpost_type_t v190 = a3;
  uint64_t v189 = a2;
  v215 = a1;
  uint64_t v4 = *v3;
  uint64_t v203 = type metadata accessor for OSSignpostError();
  uint64_t v204 = *(void *)(v203 - 8);
  uint64_t v5 = __chkstk_darwin(v203);
  v180[2] = (char *)v180 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  BOOL v187 = (char *)v180 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  v180[1] = (char *)v180 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  os_log_type_t v186 = (char *)v180 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  v180[3] = (char *)v180 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  id v194 = (char *)v180 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  v180[6] = (char *)v180 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v199 = (char *)v180 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  os_signpost_type_t v181 = (char *)v180 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  v185 = (char *)v180 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v184 = (char *)v180 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v193 = (char *)v180 - v28;
  __chkstk_darwin(v27);
  os_signpost_id_t v198 = (char *)v180 - v29;
  uint64_t v30 = *(void *)(v4 + 88);
  v207 = v3;
  uint64_t v31 = *(void *)(v4 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v214 = v30;
  swift_getAssociatedConformanceWitness();
  uint64_t v33 = type metadata accessor for ICObjectReferences();
  uint64_t v212 = *(void *)(v33 - 8);
  uint64_t v34 = __chkstk_darwin(v33);
  v211 = (char *)v180 - v35;
  uint64_t v208 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v34);
  uint64_t v37 = (char *)v180 - v36;
  uint64_t v38 = type metadata accessor for OSSignposter();
  uint64_t v39 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v41 = (char *)v180 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v209 = (void *)type metadata accessor for OSSignpostID();
  uint64_t v224 = *(v209 - 1);
  uint64_t v42 = __chkstk_darwin(v209);
  v180[5] = (char *)v180 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __chkstk_darwin(v42);
  unint64_t v196 = (char *)v180 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  v180[4] = (char *)v180 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  uint64_t v195 = (char *)v180 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  uint64_t v182 = (char *)v180 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  v201 = (char *)v180 - v53;
  uint64_t v54 = __chkstk_darwin(v52);
  uint64_t v183 = (char *)v180 - v55;
  uint64_t v56 = __chkstk_darwin(v54);
  v202 = (char *)v180 - v57;
  uint64_t v58 = __chkstk_darwin(v56);
  uint64_t v188 = (char *)v180 - v59;
  uint64_t v60 = __chkstk_darwin(v58);
  uint64_t v192 = (char *)v180 - v61;
  uint64_t v62 = __chkstk_darwin(v60);
  uint64_t v191 = (char *)v180 - v63;
  uint64_t v64 = __chkstk_darwin(v62);
  char v197 = (char *)v180 - v65;
  uint64_t v66 = __chkstk_darwin(v64);
  unint64_t v200 = (char *)v180 - v67;
  uint64_t v68 = __chkstk_darwin(v66);
  v213 = (char *)v180 - v69;
  __chkstk_darwin(v68);
  uint64_t v71 = (char *)v180 - v70;
  if (qword_10069B038 != -1) {
    swift_once();
  }
  uint64_t v72 = sub_10003293C(v38, (uint64_t)qword_1006A6D20);
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v41, v72, v38);
  uint64_t v210 = v33;
  ICObjectReferences.identifier.getter();
  uint64_t v205 = v31;
  swift_getAssociatedConformanceWitness();
  dispatch thunk of CustomStringConvertible.description.getter();
  (*(void (**)(char *, uint64_t))(v208 + 8))(v37, AssociatedTypeWitness);
  String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:object:)();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v38);
  uint64_t v208 = v72;
  unint64_t v73 = OSSignposter.logHandle.getter();
  os_signpost_type_t v74 = static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v75 = v224;
    os_signpost_id_t v76 = *(void **)(v224 + 16);
    os_signpost_type_t v77 = v213;
    uint64_t v78 = v209;
    ((void (*)(char *, char *, void *))v76)(v213, v71, v209);
    unint64_t v79 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v79 = 0;
    os_signpost_id_t v80 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v73, v74, v80, "Export Object", "", v79, 2u);
    swift_slowDealloc();

    uint64_t v81 = v77;
    (*(void (**)(char *, void *))(v75 + 8))(v77, v78);
  }
  else
  {

    os_signpost_id_t v76 = *(void **)(v224 + 16);
    uint64_t v78 = v209;
    uint64_t v81 = v213;
  }
  uint64_t v82 = v212;
  ((void (*)(char *, char *, void *))v76)(v81, v71, v78);
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  uint64_t v83 = OSSignpostIntervalState.init(id:isOpen:)();
  uint64_t v84 = v210;
  uint64_t v85 = v211;
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v211, v215, v210);
  int v86 = (*(uint64_t (**)(char *, uint64_t))(v82 + 88))(v85, v84);
  v209 = v76;
  if (v86 == enum case for ICObjectReferences.account<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v82 + 96))(v85, v84);
    swift_release();
    uint64_t v87 = v206;
    dispatch thunk of ICObjectProviding.object(for:)();
    if (v87)
    {
      os_signpost_type_t v88 = OSSignposter.logHandle.getter();
      unint64_t v89 = v202;
      OSSignpostIntervalState.signpostID.getter();
      os_signpost_type_t v90 = static os_signpost_type_t.end.getter();
      if (OS_os_log.signpostsEnabled.getter())
      {
        uint64_t v214 = v87;
        v215 = v71;
        swift_retain();
        uint64_t v91 = v199;
        checkForErrorAndConsumeState(state:)();
        swift_release();
        uint64_t v92 = v204;
        uint64_t v93 = v203;
        int v94 = (*(uint64_t (**)(char *, uint64_t))(v204 + 88))(v91, v203);
        v180[0] = v83;
        if (v94 == enum case for OSSignpostError.doubleEnd(_:))
        {
          os_signpost_type_t v112 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v92 + 8))(v91, v93);
          os_signpost_type_t v112 = "";
        }
        uint64_t v113 = v213;
        uint64_t v114 = v213;
        uint64_t v115 = &v225;
LABEL_103:
        BOOL v129 = (char *)*(v115 - 32);
LABEL_104:
        ((void (*)(char *, char *, void *))v209)(v114, v129, v78);
        os_log_type_t v177 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v177 = 0;
        os_signpost_id_t v178 = OSSignpostID.rawValue.getter();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v88, v90, v178, "Export Object", v112, v177, 2u);
        swift_slowDealloc();

        uint64_t v126 = *(void (**)(char *, void *))(v224 + 8);
        v126(v129, v78);
        v126(v113, v78);
        uint64_t v71 = v215;
        goto LABEL_105;
      }
      goto LABEL_58;
    }
    if (v217)
    {
      sub_10002F214(&qword_10069DC10);
      if (swift_dynamicCast())
      {
        if (*((void *)&v219 + 1))
        {
          sub_10016EFCC(&v218, (uint64_t)&v221);
          uint64_t v105 = ICObjectReferences.children.getter();
          sub_100414CF8(&v221, v105, v189, (uint64_t)v190);
          goto LABEL_71;
        }
      }
      else
      {
        uint64_t v220 = 0;
        long long v218 = 0u;
        long long v219 = 0u;
      }
    }
    else
    {
      sub_10002B754((uint64_t)v216, &qword_10069B4D0);
      long long v218 = 0u;
      long long v219 = 0u;
      uint64_t v220 = 0;
    }
    sub_10002B754((uint64_t)&v218, &qword_1006A6E08);
    if (qword_10069B030 != -1) {
      swift_once();
    }
    uint64_t v214 = 0;
    uint64_t v116 = type metadata accessor for Logger();
    sub_10003293C(v116, (uint64_t)qword_1006A6D08);
    os_log_t v117 = Logger.logObject.getter();
    os_log_type_t v118 = static os_log_type_t.fault.getter();
    BOOL v119 = os_log_type_enabled(v117, v118);
    uint64_t v120 = v198;
    if (v119)
    {
      uint64_t v121 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v121 = 0;
      _os_log_impl((void *)&_mh_execute_header, v117, v118, "Account to be exported does not exist anymore — skipping", v121, 2u);
      swift_slowDealloc();
    }

    os_signpost_type_t v88 = OSSignposter.logHandle.getter();
    uint64_t v122 = v200;
    OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v90 = static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      v215 = v71;
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v123 = v204;
      uint64_t v124 = v203;
      int v125 = (*(uint64_t (**)(char *, uint64_t))(v204 + 88))(v120, v203);
      v180[0] = v83;
      if (v125 == enum case for OSSignpostError.doubleEnd(_:))
      {
        os_signpost_type_t v112 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v123 + 8))(v120, v124);
        os_signpost_type_t v112 = "";
      }
      BOOL v129 = v200;
      uint64_t v113 = v213;
      uint64_t v114 = v213;
      goto LABEL_104;
    }

    uint64_t v126 = *(void (**)(char *, void *))(v224 + 8);
    v126(v122, v78);
LABEL_105:
    swift_release();
    return ((uint64_t (*)(char *, void *))v126)(v71, v78);
  }
  if (v86 == enum case for ICObjectReferences.folder<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v212 + 96))(v211, v84);
    swift_release();
    uint64_t v95 = v206;
    dispatch thunk of ICObjectProviding.object(for:)();
    if (v95)
    {
      os_signpost_type_t v88 = OSSignposter.logHandle.getter();
      unint64_t v89 = v201;
      OSSignpostIntervalState.signpostID.getter();
      os_signpost_type_t v90 = static os_signpost_type_t.end.getter();
      if (OS_os_log.signpostsEnabled.getter())
      {
        uint64_t v214 = v95;
        v215 = v71;
        swift_retain();
        uint64_t v96 = v194;
        checkForErrorAndConsumeState(state:)();
        swift_release();
        uint64_t v97 = v204;
        uint64_t v98 = v203;
        int v99 = (*(uint64_t (**)(char *, uint64_t))(v204 + 88))(v96, v203);
        v180[0] = v83;
        if (v99 == enum case for OSSignpostError.doubleEnd(_:))
        {
          os_signpost_type_t v112 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v97 + 8))(v96, v98);
          os_signpost_type_t v112 = "";
        }
        uint64_t v113 = v213;
        uint64_t v114 = v213;
        uint64_t v115 = &v224;
        goto LABEL_103;
      }
      goto LABEL_58;
    }
    if (v217)
    {
      sub_10002F214(&qword_10069DC10);
      if (swift_dynamicCast())
      {
        if (*((void *)&v219 + 1))
        {
          sub_10016EFCC(&v218, (uint64_t)&v221);
          uint64_t v111 = ICObjectReferences.children.getter();
          sub_10041563C(&v221, v111, v189, (uint64_t)v190);
          goto LABEL_71;
        }
      }
      else
      {
        uint64_t v220 = 0;
        long long v218 = 0u;
        long long v219 = 0u;
      }
    }
    else
    {
      sub_10002B754((uint64_t)v216, &qword_10069B4D0);
      long long v218 = 0u;
      long long v219 = 0u;
      uint64_t v220 = 0;
    }
    sub_10002B754((uint64_t)&v218, &qword_1006A6E08);
    if (qword_10069B030 != -1) {
      swift_once();
    }
    uint64_t v130 = type metadata accessor for Logger();
    sub_10003293C(v130, (uint64_t)qword_1006A6D08);
    uint64_t v131 = Logger.logObject.getter();
    os_log_type_t v132 = static os_log_type_t.fault.getter();
    BOOL v133 = os_log_type_enabled(v131, v132);
    os_signpost_type_t v134 = v193;
    if (v133)
    {
      uint64_t v135 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v135 = 0;
      _os_log_impl((void *)&_mh_execute_header, v131, v132, "Folder to be exported does not exist anymore — skipping", v135, 2u);
      swift_slowDealloc();
    }

    uint64_t v136 = OSSignposter.logHandle.getter();
    Swift::String v137 = v197;
    OSSignpostIntervalState.signpostID.getter();
    LODWORD(v214) = static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      v215 = v71;
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v138 = v204;
      uint64_t v139 = v203;
      int v140 = (*(uint64_t (**)(char *, uint64_t))(v204 + 88))(v134, v203);
      v180[0] = v83;
      if (v140 == enum case for OSSignpostError.doubleEnd(_:))
      {
        uint64_t v146 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v138 + 8))(v134, v139);
        uint64_t v146 = "";
      }
      uint64_t v147 = v213;
      ((void (*)(char *, char *, void *))v209)(v213, v197, v78);
      uint64_t v148 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v148 = 0;
      os_signpost_id_t v149 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v136, (os_signpost_type_t)v214, v149, "Export Object", v146, v148, 2u);
      swift_slowDealloc();

      uint64_t v126 = *(void (**)(char *, void *))(v224 + 8);
      v126(v197, v78);
      goto LABEL_102;
    }
LABEL_98:

    uint64_t v126 = *(void (**)(char *, void *))(v224 + 8);
    v126(v137, v78);
    goto LABEL_105;
  }
  if (v86 == enum case for ICObjectReferences.note<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v212 + 96))(v211, v84);
    swift_release();
    uint64_t v100 = v206;
    dispatch thunk of ICObjectProviding.object(for:)();
    if (v100)
    {
      os_signpost_type_t v88 = OSSignposter.logHandle.getter();
      unint64_t v89 = v195;
      OSSignpostIntervalState.signpostID.getter();
      os_signpost_type_t v90 = static os_signpost_type_t.end.getter();
      if (OS_os_log.signpostsEnabled.getter())
      {
        uint64_t v214 = v100;
        v215 = v71;
        swift_retain();
        uint64_t v101 = v186;
        checkForErrorAndConsumeState(state:)();
        swift_release();
        uint64_t v102 = v204;
        uint64_t v103 = v203;
        int v104 = (*(uint64_t (**)(char *, uint64_t))(v204 + 88))(v101, v203);
        v180[0] = v83;
        if (v104 == enum case for OSSignpostError.doubleEnd(_:))
        {
          os_signpost_type_t v112 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v102 + 8))(v101, v103);
          os_signpost_type_t v112 = "";
        }
        uint64_t v113 = v213;
        uint64_t v114 = v213;
        uint64_t v115 = (uint64_t *)&v222;
        goto LABEL_103;
      }
      goto LABEL_58;
    }
    if (v217)
    {
      sub_10002F214(&qword_10069DC10);
      if (swift_dynamicCast())
      {
        if (*((void *)&v219 + 1))
        {
          sub_10016EFCC(&v218, (uint64_t)&v221);
          uint64_t v127 = ICObjectReferences.children.getter();
          sub_100416184((objc_class *)&v221, v127, (uint64_t)v189, v190);
          goto LABEL_71;
        }
      }
      else
      {
        uint64_t v220 = 0;
        long long v218 = 0u;
        long long v219 = 0u;
      }
    }
    else
    {
      sub_10002B754((uint64_t)v216, &qword_10069B4D0);
      long long v218 = 0u;
      long long v219 = 0u;
      uint64_t v220 = 0;
    }
    sub_10002B754((uint64_t)&v218, &qword_1006A6E08);
    if (qword_10069B030 != -1) {
      swift_once();
    }
    uint64_t v150 = type metadata accessor for Logger();
    sub_10003293C(v150, (uint64_t)qword_1006A6D08);
    long long v151 = Logger.logObject.getter();
    os_log_type_t v152 = static os_log_type_t.fault.getter();
    BOOL v153 = os_log_type_enabled(v151, v152);
    os_log_type_t v154 = v184;
    if (v153)
    {
      BOOL v155 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v155 = 0;
      _os_log_impl((void *)&_mh_execute_header, v151, v152, "Note to be exported does not exist anymore — skipping", v155, 2u);
      swift_slowDealloc();
    }

    uint64_t v136 = OSSignposter.logHandle.getter();
    Swift::String v137 = v191;
    OSSignpostIntervalState.signpostID.getter();
    LODWORD(v214) = static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      v215 = v71;
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v156 = v204;
      uint64_t v157 = v203;
      int v158 = (*(uint64_t (**)(char *, uint64_t))(v204 + 88))(v154, v203);
      v180[0] = v83;
      if (v158 == enum case for OSSignpostError.doubleEnd(_:))
      {
        os_signpost_type_t v168 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v156 + 8))(v154, v157);
        os_signpost_type_t v168 = "";
      }
      uint64_t v147 = v213;
      ((void (*)(char *, char *, void *))v209)(v213, v191, v78);
      uint64_t v169 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v169 = 0;
      os_signpost_id_t v170 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v136, (os_signpost_type_t)v214, v170, "Export Object", v168, v169, 2u);
      swift_slowDealloc();

      uint64_t v126 = *(void (**)(char *, void *))(v224 + 8);
      v126(v191, v78);
      goto LABEL_102;
    }
    goto LABEL_98;
  }
  if (v86 == enum case for ICObjectReferences.attachment<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v212 + 96))(v211, v84);
    swift_release();
    uint64_t v106 = v206;
    dispatch thunk of ICObjectProviding.object(for:)();
    if (v106)
    {
      os_signpost_type_t v88 = OSSignposter.logHandle.getter();
      unint64_t v89 = v196;
      OSSignpostIntervalState.signpostID.getter();
      os_signpost_type_t v90 = static os_signpost_type_t.end.getter();
      if (OS_os_log.signpostsEnabled.getter())
      {
        uint64_t v214 = v106;
        v215 = v71;
        swift_retain();
        char v107 = v187;
        checkForErrorAndConsumeState(state:)();
        swift_release();
        uint64_t v108 = v204;
        uint64_t v109 = v203;
        int v110 = (*(uint64_t (**)(char *, uint64_t))(v204 + 88))(v107, v203);
        v180[0] = v83;
        if (v110 == enum case for OSSignpostError.doubleEnd(_:))
        {
          os_signpost_type_t v112 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v108 + 8))(v107, v109);
          os_signpost_type_t v112 = "";
        }
        uint64_t v113 = v213;
        uint64_t v114 = v213;
        uint64_t v115 = (uint64_t *)&v223;
        goto LABEL_103;
      }
LABEL_58:

      uint64_t v126 = *(void (**)(char *, void *))(v224 + 8);
      v126(v89, v78);
      goto LABEL_105;
    }
    if (v217)
    {
      sub_10002F214(&qword_10069DC10);
      if (swift_dynamicCast())
      {
        if (*((void *)&v219 + 1))
        {
          sub_10016EFCC(&v218, (uint64_t)&v221);
          uint64_t v128 = ICObjectReferences.children.getter();
          sub_10041800C(&v221, v128, (uint64_t)v189, v190);
LABEL_71:
          sub_100018FE8((uint64_t)&v221);
          swift_bridgeObjectRelease();
          uint64_t v136 = OSSignposter.logHandle.getter();
          Swift::String v137 = v188;
          OSSignpostIntervalState.signpostID.getter();
          int v141 = static os_signpost_type_t.end.getter();
          if (OS_os_log.signpostsEnabled.getter())
          {
            v215 = v71;
            swift_retain();
            uint64_t v142 = v181;
            checkForErrorAndConsumeState(state:)();
            swift_release();
            uint64_t v143 = v204;
            uint64_t v144 = v203;
            int v145 = (*(uint64_t (**)(char *, uint64_t))(v204 + 88))(v142, v203);
            v180[0] = v83;
            LODWORD(v214) = v141;
            if (v145 == enum case for OSSignpostError.doubleEnd(_:))
            {
              os_signpost_id_t v174 = "[Error] Interval already ended";
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v143 + 8))(v142, v144);
              os_signpost_id_t v174 = "";
            }
            uint64_t v147 = v213;
            ((void (*)(char *, char *, void *))v209)(v213, v188, v78);
            uint64_t v175 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v175 = 0;
            os_signpost_id_t v176 = OSSignpostID.rawValue.getter();
            _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v136, (os_signpost_type_t)v214, v176, "Export Object", v174, v175, 2u);
            swift_slowDealloc();

            uint64_t v126 = *(void (**)(char *, void *))(v224 + 8);
            v126(v188, v78);
LABEL_102:
            v126(v147, v78);
            uint64_t v71 = v215;
            goto LABEL_105;
          }
          goto LABEL_98;
        }
      }
      else
      {
        uint64_t v220 = 0;
        long long v218 = 0u;
        long long v219 = 0u;
      }
    }
    else
    {
      sub_10002B754((uint64_t)v216, &qword_10069B4D0);
      long long v218 = 0u;
      long long v219 = 0u;
      uint64_t v220 = 0;
    }
    sub_10002B754((uint64_t)&v218, &qword_1006A6E08);
    if (qword_10069B030 != -1) {
      swift_once();
    }
    uint64_t v159 = type metadata accessor for Logger();
    sub_10003293C(v159, (uint64_t)qword_1006A6D08);
    uint64_t v160 = Logger.logObject.getter();
    os_log_type_t v161 = static os_log_type_t.fault.getter();
    BOOL v162 = os_log_type_enabled(v160, v161);
    uint64_t v163 = v185;
    if (v162)
    {
      uint64_t v164 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v164 = 0;
      _os_log_impl((void *)&_mh_execute_header, v160, v161, "Object to be exported does not exist anymore — skipping", v164, 2u);
      swift_slowDealloc();
    }

    uint64_t v136 = OSSignposter.logHandle.getter();
    Swift::String v137 = v192;
    OSSignpostIntervalState.signpostID.getter();
    LODWORD(v214) = static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      v215 = v71;
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      uint64_t v165 = v204;
      uint64_t v166 = v203;
      int v167 = (*(uint64_t (**)(char *, uint64_t))(v204 + 88))(v163, v203);
      v180[0] = v83;
      if (v167 == enum case for OSSignpostError.doubleEnd(_:))
      {
        v171 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v165 + 8))(v163, v166);
        v171 = "";
      }
      uint64_t v147 = v213;
      ((void (*)(char *, char *, void *))v209)(v213, v192, v78);
      v172 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v172 = 0;
      os_signpost_id_t v173 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v136, (os_signpost_type_t)v214, v173, "Export Object", v171, v172, 2u);
      swift_slowDealloc();

      uint64_t v126 = *(void (**)(char *, void *))(v224 + 8);
      v126(v192, v78);
      goto LABEL_102;
    }
    goto LABEL_98;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_100413CC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v75 = a5;
  uint64_t v56 = a6;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v63 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v68 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v55 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v55 - v16;
  uint64_t v71 = a1;
  uint64_t v72 = a2;
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v18 ic_sanitizedFilenameString];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v69 = a3;
  URL.appendingPathComponent(_:isDirectory:)();
  swift_bridgeObjectRelease();
  uint64_t v70 = a4;
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [v20 ic_sanitizedFilenameString];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v63;
  URL.appendingPathExtension(_:)();
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v22 + 8);
  uint64_t v67 = v15;
  v23(v15, v10);
  uint64_t v24 = *(void *)(v73 + 80);
  uint64_t v25 = *(void *)(v73 + 88);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v65 = v25;
  uint64_t v66 = v24;
  uint64_t v27 = v74;
  uint64_t v64 = ObjectType;
  dispatch thunk of ICFileManaging.createDirectory(at:withIntermediateDirectories:)();
  if (!v27) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v22 + 32))(v56, v17, v10);
  }
  v23(v17, v10);
  uint64_t v80 = v27;
  swift_errorRetain();
  uint64_t v28 = sub_10002F214(&qword_1006A3D90);
  uint64_t v29 = sub_100031418(0, (unint64_t *)&unk_1006A2D70);
  if ((swift_dynamicCast() & 1) == 0) {
    return swift_errorRelease();
  }
  id v30 = v79;
  if ([v79 code] != (id)516)
  {

    return swift_errorRelease();
  }
  id v59 = v30;
  uint64_t v57 = v29;
  uint64_t v58 = v28;
  uint64_t v60 = v23;
  uint64_t v61 = v22 + 8;
  swift_errorRelease();
  uint64_t v62 = ICAttachmentNameMaxLength;
  for (uint64_t i = 2; ; uint64_t i = v54 + 1)
  {
    id v76 = (id)i;
    uint64_t v77 = 32;
    unint64_t v78 = 0xE100000000000000;
    v32._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v32);
    swift_bridgeObjectRelease();
    uint64_t v33 = v77;
    uint64_t v34 = (void *)v78;
    NSString v35 = String._bridgeToObjectiveC()();
    id v36 = [v35 ic_sanitizedFilenameString];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v37 = String.count.getter();
    BOOL v38 = __OFSUB__(v62, v37);
    uint64_t result = v62 - v37;
    if (v38) {
      break;
    }
    uint64_t v73 = i;
    sub_10041AABC(result);
    uint64_t v74 = 0;
    swift_bridgeObjectRelease();
    uint64_t v40 = static String._fromSubstring(_:)();
    unint64_t v42 = v41;
    swift_bridgeObjectRelease();
    uint64_t v77 = v40;
    unint64_t v78 = v42;
    swift_bridgeObjectRetain();
    v43._countAndFlagsBits = v33;
    v43._object = v34;
    String.append(_:)(v43);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v44 = v67;
    URL.appendingPathComponent(_:isDirectory:)();
    swift_bridgeObjectRelease();
    NSString v45 = String._bridgeToObjectiveC()();
    id v46 = [v45 ic_sanitizedFilenameString];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v47 = v68;
    URL.appendingPathExtension(_:)();
    swift_bridgeObjectRelease();
    uint64_t v48 = v60;
    v60(v44, v10);
    uint64_t v49 = v74;
    dispatch thunk of ICFileManaging.createDirectory(at:withIntermediateDirectories:)();
    if (!v49)
    {

      (*(void (**)(uint64_t, char *, uint64_t))(v63 + 32))(v56, v47, v10);
      return swift_errorRelease();
    }
    v48(v47, v10);
    uint64_t v77 = v49;
    swift_errorRetain();
    int v50 = swift_dynamicCast();
    id v51 = v59;
    if (!v50 || (v52 = v76, id v53 = [v76 code], v52, v53 != (id)516))
    {

      swift_errorRelease();
      return swift_errorRelease();
    }
    uint64_t result = swift_errorRelease();
    uint64_t v54 = v73;
    if (__OFADD__(v73, 1)) {
      goto LABEL_18;
    }
    swift_errorRelease();
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1004142A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v75 = a5;
  uint64_t v56 = a6;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v63 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v68 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v55 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v55 - v16;
  uint64_t v71 = a1;
  uint64_t v72 = a2;
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v18 ic_sanitizedFilenameString];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v69 = a3;
  URL.appendingPathComponent(_:isDirectory:)();
  swift_bridgeObjectRelease();
  uint64_t v70 = a4;
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [v20 ic_sanitizedFilenameString];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v63;
  URL.appendingPathExtension(_:)();
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v22 + 8);
  uint64_t v67 = v15;
  v23(v15, v10);
  uint64_t v24 = *(void *)(v73 + 80);
  uint64_t v25 = *(void *)(v73 + 88);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v65 = v25;
  uint64_t v66 = v24;
  uint64_t v27 = v74;
  uint64_t v64 = ObjectType;
  dispatch thunk of ICFileManaging.createDirectory(at:withIntermediateDirectories:)();
  if (!v27) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v22 + 32))(v56, v17, v10);
  }
  v23(v17, v10);
  uint64_t v80 = v27;
  swift_errorRetain();
  uint64_t v28 = sub_10002F214(&qword_1006A3D90);
  uint64_t v29 = sub_100031418(0, (unint64_t *)&unk_1006A2D70);
  if (!swift_dynamicCast()) {
    return swift_errorRelease();
  }
  id v30 = v79;
  if ([v79 code] != (id)516)
  {

    return swift_errorRelease();
  }
  id v59 = v30;
  uint64_t v57 = v29;
  uint64_t v58 = v28;
  uint64_t v60 = v23;
  uint64_t v61 = v22 + 8;
  swift_errorRelease();
  uint64_t v62 = ICAttachmentNameMaxLength;
  for (uint64_t i = 2; ; uint64_t i = v54 + 1)
  {
    id v76 = (id)i;
    uint64_t v77 = 32;
    unint64_t v78 = 0xE100000000000000;
    v32._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v32);
    swift_bridgeObjectRelease();
    uint64_t v33 = v77;
    uint64_t v34 = (void *)v78;
    NSString v35 = String._bridgeToObjectiveC()();
    id v36 = [v35 ic_sanitizedFilenameString];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v37 = String.count.getter();
    BOOL v38 = __OFSUB__(v62, v37);
    uint64_t result = v62 - v37;
    if (v38) {
      break;
    }
    uint64_t v73 = i;
    sub_10041AABC(result);
    uint64_t v74 = 0;
    swift_bridgeObjectRelease();
    uint64_t v40 = static String._fromSubstring(_:)();
    unint64_t v42 = v41;
    swift_bridgeObjectRelease();
    uint64_t v77 = v40;
    unint64_t v78 = v42;
    swift_bridgeObjectRetain();
    v43._countAndFlagsBits = v33;
    v43._object = v34;
    String.append(_:)(v43);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v44 = v67;
    URL.appendingPathComponent(_:isDirectory:)();
    swift_bridgeObjectRelease();
    NSString v45 = String._bridgeToObjectiveC()();
    id v46 = [v45 ic_sanitizedFilenameString];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v47 = v68;
    URL.appendingPathExtension(_:)();
    swift_bridgeObjectRelease();
    uint64_t v48 = v60;
    v60(v44, v10);
    uint64_t v49 = v74;
    dispatch thunk of ICFileManaging.createDirectory(at:withIntermediateDirectories:)();
    if (!v49)
    {

      (*(void (**)(uint64_t, char *, uint64_t))(v63 + 32))(v56, v47, v10);
      return swift_errorRelease();
    }
    v48(v47, v10);
    uint64_t v77 = v49;
    swift_errorRetain();
    int v50 = swift_dynamicCast();
    id v51 = v59;
    if (!v50 || (v52 = v76, id v53 = [v76 code], v52, v53 != (id)516))
    {

      swift_errorRelease();
      return swift_errorRelease();
    }
    uint64_t result = swift_errorRelease();
    uint64_t v54 = v73;
    if (__OFADD__(v73, 1)) {
      goto LABEL_18;
    }
    swift_errorRelease();
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

void sub_10041487C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v45 - v13;
  NSProgress.throwIfCancelled()();
  if (!v15)
  {
    uint64_t v48 = a3;
    uint64_t v49 = 0;
    int v50 = v12;
    id v51 = v14;
    uint64_t v46 = v9;
    uint64_t v47 = a4;
    uint64_t v16 = v55;
    uint64_t v45 = a2;
    uint64_t v52 = v8;
    uint64_t v17 = a1[3];
    uint64_t v18 = a1[4];
    sub_10015E154(a1, v17);
    uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
    if (v20)
    {
      uint64_t v21 = v19;
      uint64_t v22 = v20;
    }
    else
    {
      id v23 = [self mainBundle];
      NSString v24 = String._bridgeToObjectiveC()();
      id v25 = [v23 localizedStringForKey:v24 value:0 table:0];

      uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v22 = v26;
    }
    uint64_t v27 = v16;
    uint64_t v28 = (uint64_t)v51;
    uint64_t v29 = v52;
    uint64_t v30 = v49;
    uint64_t v31 = v50;
    sub_100413CC4(v21, v22, v48, 0x746E756F636361, 0xE700000000000000, (uint64_t)v51);
    if (v30)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      id v51 = *(char **)(v27 + 80);
      uint64_t v55 = *(void *)(v27 + 88);
      URL.appendingPathComponent(_:isDirectory:)();
      uint64_t v32 = a1[3];
      uint64_t v33 = a1[4];
      sub_10015E154(a1, v32);
      long long v34 = *(_OWORD *)(v27 + 40);
      v53[0] = *(_OWORD *)(v27 + 24);
      v53[1] = v34;
      v54[0] = *(_OWORD *)(v27 + 56);
      *(void *)((char *)v54 + 13) = *(void *)(v27 + 69);
      uint64_t v35 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v33 + 80))(v53, v32, v33);
      unint64_t v37 = v36;
      swift_getObjectType();
      dispatch thunk of ICFileManaging.createFile(at:contents:)();
      uint64_t v38 = v29;
      uint64_t v39 = *(void (**)(char *, uint64_t))(v46 + 8);
      v39(v31, v38);
      sub_10017253C(v35, v37);
      uint64_t v40 = v45;
      uint64_t v41 = *(void *)(v45 + 16);
      if (v41)
      {
        uint64_t v42 = *(void *)(sub_10002F214(&qword_10069D088) - 8);
        uint64_t v43 = v40 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80));
        uint64_t v44 = *(void *)(v42 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_10040FBAC(v43, v28, v47);
          v43 += v44;
          --v41;
        }
        while (v41);
        swift_bridgeObjectRelease();
      }
      v39((char *)v28, v52);
    }
  }
}

void sub_100414CF8(void *a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v46 = a2;
  uint64_t v47 = a3;
  uint64_t v8 = *v5;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v39 - v14;
  NSProgress.throwIfCancelled()();
  if (!v16)
  {
    uint64_t v44 = v15;
    uint64_t v45 = 0;
    uint64_t v41 = v10;
    uint64_t v42 = v13;
    v39[1] = v8;
    uint64_t v40 = a4;
    uint64_t v43 = v9;
    uint64_t v17 = a1[3];
    uint64_t v18 = a1[4];
    sub_10015E154(a1, v17);
    uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
    uint64_t v21 = a1;
    if (v20)
    {
      uint64_t v22 = v19;
      uint64_t v23 = v20;
    }
    else
    {
      id v24 = [self mainBundle];
      NSString v25 = String._bridgeToObjectiveC()();
      id v26 = [v24 localizedStringForKey:v25 value:0 table:0];

      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v23 = v27;
    }
    uint64_t v29 = (uint64_t)v44;
    uint64_t v28 = v45;
    uint64_t v30 = v5;
    sub_1004142A0(v22, v23, (uint64_t)v47, 0x746E756F636361, 0xE700000000000000, (uint64_t)v44);
    swift_bridgeObjectRelease();
    if (!v28)
    {
      uint64_t v47 = (void (*)(char *, uint64_t))v5[11];
      uint64_t v31 = v42;
      URL.appendingPathComponent(_:isDirectory:)();
      uint64_t v32 = v21[3];
      uint64_t v33 = v21[4];
      sub_10015E154(v21, v32);
      long long v34 = *(_OWORD *)(v30 + 5);
      v48[0] = *(_OWORD *)(v30 + 3);
      v48[1] = v34;
      v49[0] = *(_OWORD *)(v30 + 7);
      *(void *)((char *)v49 + 13) = *(void *)((char *)v30 + 69);
      uint64_t v35 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v33 + 80))(v48, v32, v33);
      unint64_t v37 = v36;
      swift_getObjectType();
      dispatch thunk of ICFileManaging.createFile(at:contents:)();
      uint64_t v47 = *(void (**)(char *, uint64_t))(v41 + 8);
      v47(v31, v43);
      uint64_t v38 = sub_10017253C(v35, v37);
      uint64_t v45 = v39;
      uint64_t v50 = v46;
      __chkstk_darwin(v38);
      v39[-4] = v30;
      v39[-3] = v29;
      v39[-2] = v40;
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      type metadata accessor for ICObjectReferences();
      type metadata accessor for Array();
      swift_getWitnessTable();
      Sequence.forEach(_:)();
      v47((char *)v29, v43);
    }
  }
}

void sub_1004151C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v45 - v13;
  NSProgress.throwIfCancelled()();
  if (!v15)
  {
    uint64_t v48 = a3;
    uint64_t v49 = 0;
    uint64_t v50 = v12;
    id v51 = v14;
    uint64_t v46 = v9;
    uint64_t v47 = a4;
    uint64_t v16 = v55;
    uint64_t v45 = a2;
    uint64_t v52 = v8;
    uint64_t v17 = a1[3];
    uint64_t v18 = a1[4];
    sub_10015E154(a1, v17);
    uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
    if (v20)
    {
      uint64_t v21 = v19;
      uint64_t v22 = v20;
    }
    else
    {
      id v23 = [self mainBundle];
      NSString v24 = String._bridgeToObjectiveC()();
      id v25 = [v23 localizedStringForKey:v24 value:0 table:0];

      uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v22 = v26;
    }
    uint64_t v27 = v16;
    uint64_t v28 = (uint64_t)v51;
    uint64_t v29 = v52;
    uint64_t v30 = v49;
    uint64_t v31 = v50;
    sub_100413CC4(v21, v22, v48, 0x7265646C6F66, 0xE600000000000000, (uint64_t)v51);
    if (v30)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      id v51 = *(char **)(v27 + 80);
      uint64_t v55 = *(void *)(v27 + 88);
      URL.appendingPathComponent(_:isDirectory:)();
      uint64_t v32 = a1[3];
      uint64_t v33 = a1[4];
      sub_10015E154(a1, v32);
      long long v34 = *(_OWORD *)(v27 + 40);
      v53[0] = *(_OWORD *)(v27 + 24);
      v53[1] = v34;
      v54[0] = *(_OWORD *)(v27 + 56);
      *(void *)((char *)v54 + 13) = *(void *)(v27 + 69);
      uint64_t v35 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v33 + 80))(v53, v32, v33);
      unint64_t v37 = v36;
      swift_getObjectType();
      dispatch thunk of ICFileManaging.createFile(at:contents:)();
      uint64_t v38 = v29;
      uint64_t v39 = *(void (**)(char *, uint64_t))(v46 + 8);
      v39(v31, v38);
      sub_10017253C(v35, v37);
      uint64_t v40 = v45;
      uint64_t v41 = *(void *)(v45 + 16);
      if (v41)
      {
        uint64_t v42 = *(void *)(sub_10002F214(&qword_10069D088) - 8);
        uint64_t v43 = v40 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80));
        uint64_t v44 = *(void *)(v42 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_10040FBAC(v43, v28, v47);
          v43 += v44;
          --v41;
        }
        while (v41);
        swift_bridgeObjectRelease();
      }
      v39((char *)v28, v52);
    }
  }
}

void sub_10041563C(void *a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v46 = a2;
  uint64_t v47 = a3;
  uint64_t v8 = *v5;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v39 - v14;
  NSProgress.throwIfCancelled()();
  if (!v16)
  {
    uint64_t v44 = v15;
    uint64_t v45 = 0;
    uint64_t v41 = v10;
    uint64_t v42 = v13;
    v39[1] = v8;
    uint64_t v40 = a4;
    uint64_t v43 = v9;
    uint64_t v17 = a1[3];
    uint64_t v18 = a1[4];
    sub_10015E154(a1, v17);
    uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
    uint64_t v21 = a1;
    if (v20)
    {
      uint64_t v22 = v19;
      uint64_t v23 = v20;
    }
    else
    {
      id v24 = [self mainBundle];
      NSString v25 = String._bridgeToObjectiveC()();
      id v26 = [v24 localizedStringForKey:v25 value:0 table:0];

      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v23 = v27;
    }
    uint64_t v29 = (uint64_t)v44;
    uint64_t v28 = v45;
    uint64_t v30 = v5;
    sub_1004142A0(v22, v23, (uint64_t)v47, 0x7265646C6F66, 0xE600000000000000, (uint64_t)v44);
    swift_bridgeObjectRelease();
    if (!v28)
    {
      uint64_t v47 = (void (*)(char *, uint64_t))v5[11];
      uint64_t v31 = v42;
      URL.appendingPathComponent(_:isDirectory:)();
      uint64_t v32 = v21[3];
      uint64_t v33 = v21[4];
      sub_10015E154(v21, v32);
      long long v34 = *(_OWORD *)(v30 + 5);
      v48[0] = *(_OWORD *)(v30 + 3);
      v48[1] = v34;
      v49[0] = *(_OWORD *)(v30 + 7);
      *(void *)((char *)v49 + 13) = *(void *)((char *)v30 + 69);
      uint64_t v35 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v33 + 80))(v48, v32, v33);
      unint64_t v37 = v36;
      swift_getObjectType();
      dispatch thunk of ICFileManaging.createFile(at:contents:)();
      uint64_t v47 = *(void (**)(char *, uint64_t))(v41 + 8);
      v47(v31, v43);
      uint64_t v38 = sub_10017253C(v35, v37);
      uint64_t v45 = v39;
      uint64_t v50 = v46;
      __chkstk_darwin(v38);
      v39[-4] = v30;
      v39[-3] = v29;
      v39[-2] = v40;
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      type metadata accessor for ICObjectReferences();
      type metadata accessor for Array();
      swift_getWitnessTable();
      Sequence.forEach(_:)();
      v47((char *)v29, v43);
    }
  }
}

void sub_100415B04(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v61 - v13;
  NSProgress.throwIfCancelled()();
  if (v16) {
    return;
  }
  id v66 = a3;
  uint64_t v67 = v14;
  uint64_t v17 = a4;
  Class v18 = isa;
  uint64_t v63 = v9;
  uint64_t v64 = v8;
  __chkstk_darwin(v15);
  *(&v61 - 2) = type metadata accessor for ICModernObjectProvider();
  *(&v61 - 1) = sub_10041B14C(&qword_1006A6DF0, (void (*)(uint64_t))&type metadata accessor for ICModernObjectProvider);
  swift_getKeyPath();
  swift_retain();
  uint64_t v62 = a2;
  uint64_t v19 = sub_10041A1EC(a2);
  uint64_t v65 = 0;
  swift_release_n();
  uint64_t v20 = v19[2];
  if (v20)
  {
    uint64_t v21 = 0;
    uint64_t v22 = v19 + 4;
    uint64_t v23 = v12;
    Class v24 = v18;
    uint64_t v25 = (uint64_t)v67;
    id v26 = a1;
    while (1)
    {
      uint64_t v27 = *v22++;
      BOOL v28 = __OFADD__(v21, v27);
      v21 += v27;
      if (v28) {
        break;
      }
      if (!--v20) {
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    return;
  }
  uint64_t v21 = 0;
  uint64_t v23 = v12;
  Class v24 = v18;
  uint64_t v25 = (uint64_t)v67;
  id v26 = a1;
LABEL_8:
  swift_bridgeObjectRelease();
  if (__OFADD__(v21, 1)) {
    goto LABEL_26;
  }
  v29.super.Class isa = NSProgress.addingChild(totalUnitCount:pendingUnitCount:)(v21 + 1, 1).super.isa;
  uint64_t v30 = v26[3];
  uint64_t v31 = v26[4];
  sub_10015E154(v26, v30);
  (*(void (**)(uint64_t, uint64_t))(v31 + 16))(v30, v31);
  if (v32)
  {
    NSString v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v34 = [v33 ic_sanitizedFilenameString];

    uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v37 = v36;

    uint64_t v38 = HIBYTE(v37) & 0xF;
    if ((v37 & 0x2000000000000000) == 0) {
      uint64_t v38 = v35 & 0xFFFFFFFFFFFFLL;
    }
    if (v38) {
      goto LABEL_15;
    }
    swift_bridgeObjectRelease();
  }
  id v39 = [self mainBundle];
  NSString v40 = String._bridgeToObjectiveC()();
  id v41 = [v39 localizedStringForKey:v40 value:0 table:0];

  uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v37 = v42;
  swift_bridgeObjectRelease();

LABEL_15:
  uint64_t v43 = v65;
  sub_100413CC4(v35, v37, (uint64_t)v66, 1702129518, 0xE400000000000000, v25);
  if (v43)
  {
    swift_bridgeObjectRelease();

    return;
  }
  id v66 = v17;
  Class isa = v29.super.isa;
  swift_bridgeObjectRelease();
  URL.appendingPathComponent(_:isDirectory:)();
  uint64_t v67 = (char *)*((void *)v24 + 11);
  uint64_t v44 = v26[3];
  uint64_t v45 = v26;
  uint64_t v46 = v23;
  uint64_t v47 = v45[4];
  sub_10015E154(v45, v44);
  long long v48 = *(_OWORD *)((char *)v24 + 40);
  v69[0] = *(_OWORD *)((char *)v24 + 24);
  v69[1] = v48;
  v70[0] = *(_OWORD *)((char *)v24 + 56);
  *(void *)((char *)v70 + 13) = *(void *)((char *)v24 + 69);
  uint64_t v49 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v47 + 80))(v69, v44, v47);
  unint64_t v51 = v50;
  swift_getObjectType();
  dispatch thunk of ICFileManaging.createFile(at:contents:)();
  uint64_t v52 = v64;
  uint64_t v67 = v46;
  sub_10017253C(v49, v51);
  Class v53 = isa;
  uint64_t v54 = (char *)[(objc_class *)isa completedUnitCount];
  if (__OFADD__(v54, 1)) {
    goto LABEL_27;
  }
  [(objc_class *)v53 setCompletedUnitCount:v54 + 1];
  uint64_t v55 = v62;
  uint64_t v56 = *(void *)(v62 + 16);
  if (v56)
  {
    uint64_t v57 = *(void *)(sub_10002F214(&qword_10069D088) - 8);
    unint64_t v58 = v55 + ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80));
    uint64_t v59 = *(void *)(v57 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_10040FBAC(v58, v25, isa);
      v58 += v59;
      --v56;
    }
    while (v56);
    swift_bridgeObjectRelease();
    uint64_t v52 = v64;
  }
  sub_10041990C((char)[v66 completedUnitCount]);

  uint64_t v60 = *(void (**)(char *, uint64_t))(v63 + 8);
  v60(v67, v52);
  v60((char *)v25, v52);
}

void sub_100416184(objc_class *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  uint64_t v66 = a3;
  Class isa = a1;
  uint64_t v8 = *v5;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v60 - v14;
  NSProgress.throwIfCancelled()();
  if (v17) {
    return;
  }
  id v64 = a4;
  uint64_t v65 = v13;
  uint64_t v62 = v9;
  uint64_t v63 = v15;
  uint64_t v60 = a2;
  uint64_t v61 = v10;
  uint64_t v70 = a2;
  __chkstk_darwin(v16);
  uint64_t v18 = *(void *)(v8 + 80);
  uint64_t v19 = *(void *)(v8 + 88);
  *(&v60 - 2) = v18;
  *(&v60 - 1) = v19;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v21 = __chkstk_darwin(KeyPath);
  *(&v60 - 4) = v18;
  *(&v60 - 3) = v19;
  *(&v60 - 2) = v21;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ICObjectReferences();
  uint64_t v22 = type metadata accessor for Array();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v25 = sub_100408DC0((void (*)(char *, char *))sub_10041B3B0, (uint64_t)(&v60 - 6), v22, (uint64_t)&type metadata for Int, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v24);
  swift_release();
  uint64_t v26 = *(void *)(v25 + 16);
  if (v26)
  {
    uint64_t v27 = 0;
    BOOL v28 = (uint64_t *)(v25 + 32);
    uint64_t v29 = (uint64_t)v63;
    uint64_t v30 = v5;
    Class v31 = isa;
    while (1)
    {
      uint64_t v32 = *v28++;
      BOOL v33 = __OFADD__(v27, v32);
      v27 += v32;
      if (v33) {
        break;
      }
      if (!--v26) {
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v27 = 0;
  uint64_t v29 = (uint64_t)v63;
  uint64_t v30 = v5;
  Class v31 = isa;
LABEL_8:
  swift_bridgeObjectRelease();
  if (__OFADD__(v27, 1)) {
    goto LABEL_19;
  }
  uint64_t v63 = (char *)v22;
  Class isa = NSProgress.addingChild(totalUnitCount:pendingUnitCount:)(v27 + 1, 1).super.isa;
  uint64_t v34 = *((void *)v31 + 3);
  uint64_t v35 = *((void *)v31 + 4);
  sub_10015E154(v31, v34);
  (*(void (**)(uint64_t, uint64_t))(v35 + 16))(v34, v35);
  if (v36)
  {
    NSString v37 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v38 = [v37 ic_sanitizedFilenameString];

    uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v41 = v40;

    uint64_t v42 = HIBYTE(v41) & 0xF;
    if ((v41 & 0x2000000000000000) == 0) {
      uint64_t v42 = v39 & 0xFFFFFFFFFFFFLL;
    }
    if (v42) {
      goto LABEL_15;
    }
    swift_bridgeObjectRelease();
  }
  id v43 = [self mainBundle];
  NSString v44 = String._bridgeToObjectiveC()();
  id v45 = [v43 localizedStringForKey:v44 value:0 table:0];

  uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v41 = v46;
  swift_bridgeObjectRelease();

LABEL_15:
  sub_1004142A0(v39, v41, v66, 1702129518, 0xE400000000000000, v29);
  swift_bridgeObjectRelease();
  URL.appendingPathComponent(_:isDirectory:)();
  uint64_t v66 = v30[11];
  uint64_t v47 = *((void *)v31 + 3);
  uint64_t v48 = *((void *)v31 + 4);
  sub_10015E154(v31, v47);
  long long v49 = *(_OWORD *)(v30 + 5);
  v68[0] = *(_OWORD *)(v30 + 3);
  v68[1] = v49;
  v69[0] = *(_OWORD *)(v30 + 7);
  *(void *)((char *)v69 + 13) = *(void *)((char *)v30 + 69);
  uint64_t v50 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v48 + 80))(v68, v47, v48);
  unint64_t v52 = v51;
  swift_getObjectType();
  dispatch thunk of ICFileManaging.createFile(at:contents:)();
  sub_10017253C(v50, v52);
  Class v53 = isa;
  uint64_t v54 = (char *)[(objc_class *)isa completedUnitCount];
  if (__OFADD__(v54, 1))
  {
LABEL_20:
    __break(1u);
    return;
  }
  id v55 = [(objc_class *)v53 setCompletedUnitCount:v54 + 1];
  uint64_t v70 = v60;
  __chkstk_darwin(v55);
  *(&v60 - 4) = (uint64_t)v30;
  *(&v60 - 3) = v29;
  *(&v60 - 2) = (uint64_t)v53;
  swift_getWitnessTable();
  Sequence.forEach(_:)();
  uint64_t v56 = v29;
  uint64_t v58 = v61;
  uint64_t v57 = v62;
  sub_100419A34((char)[v64 completedUnitCount]);

  uint64_t v59 = *(void (**)(char *, uint64_t))(v58 + 8);
  v59(v65, v57);
  v59((char *)v56, v57);
}

void sub_100416868(void *a1, char *a2, void (**a3)(char *, uint64_t), void *a4)
{
  os_log_type_t v177 = a3;
  os_signpost_id_t v173 = a2;
  id v180 = a1;
  uint64_t v5 = sub_10002F214(&qword_10069B310);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v175 = (char *)v157 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v172 = (char *)v157 - v8;
  uint64_t v176 = type metadata accessor for URL();
  uint64_t v179 = *(void *)(v176 - 8);
  uint64_t v9 = __chkstk_darwin(v176);
  v171 = (void (**)(char *, uint64_t, uint64_t, uint64_t))((char *)v157 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v157 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)v157 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)v157 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)v157 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)v157 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  BOOL v28 = (void (**)(char *, char *, uint64_t))((char *)v157 - v27);
  uint64_t v29 = __chkstk_darwin(v26);
  Class v31 = (char *)v157 - v30;
  __chkstk_darwin(v29);
  BOOL v33 = (char *)v157 - v32;
  NSProgress.throwIfCancelled()();
  if (v34) {
    return;
  }
  int64_t v161 = (int64_t)v25;
  BOOL v162 = v28;
  uint64_t v164 = v22;
  uint64_t v165 = v19;
  os_signpost_id_t v170 = v16;
  os_signpost_type_t v181 = v13;
  os_signpost_type_t v168 = v31;
  os_signpost_id_t v174 = v33;
  id v163 = a4;
  uint64_t v35 = v180;
  uint64_t v36 = v180[3];
  uint64_t v37 = v180[4];
  sub_10015E154(v180, v36);
  uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 16))(v36, v37);
  if (v39)
  {
    uint64_t v40 = v38;
    uint64_t v41 = v39;
  }
  else
  {
    id v42 = [self mainBundle];
    NSString v43 = String._bridgeToObjectiveC()();
    id v44 = [v42 localizedStringForKey:v43 value:0 table:0];

    uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v41 = v45;
  }
  uint64_t v46 = v178;
  sub_100413CC4(v40, v41, (uint64_t)v177, 0x656D686361747461, 0xEA0000000000746ELL, (uint64_t)v174);
  swift_bridgeObjectRelease();
  URL.appendingPathComponent(_:isDirectory:)();
  uint64_t v47 = *(void *)(v46 + 80);
  uint64_t v169 = *(void *)(v46 + 88);
  uint64_t v48 = v35[3];
  uint64_t v49 = v35[4];
  sub_10015E154(v35, v48);
  long long v50 = *(_OWORD *)(v46 + 40);
  v183[0] = *(_OWORD *)(v46 + 24);
  v183[1] = v50;
  *(_OWORD *)uint64_t v184 = *(_OWORD *)(v46 + 56);
  *(void *)&v184[13] = *(void *)(v46 + 69);
  uint64_t v51 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v49 + 80))(v183, v48, v49);
  unint64_t v53 = v52;
  uint64_t ObjectType = swift_getObjectType();
  dispatch thunk of ICFileManaging.createFile(at:contents:)();
  uint64_t v159 = 0;
  uint64_t v167 = ObjectType;
  sub_10017253C(v51, v53);
  uint64_t v55 = sub_100031418(0, &qword_1006A6E18);
  uint64_t v56 = v180;
  uint64_t v57 = v180[3];
  uint64_t v58 = v180[4];
  uint64_t v59 = sub_10015E154(v180, v57);
  sub_1003CF16C((uint64_t)v59, v55, v57, v58);
  uint64_t v60 = v179;
  uint64_t v166 = v47;
  if (v61)
  {
    NSString v62 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v63 = [v62 ic_sanitizedFilenameString];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v64 = v56[3];
    uint64_t v65 = v56[4];
    sub_10015E154(v56, v64);
    uint64_t v66 = v64;
    uint64_t v67 = (uint64_t)v172;
    (*(void (**)(uint64_t, uint64_t))(v65 + 40))(v66, v65);
    uint64_t v68 = v176;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v67, 1, v176) == 1)
    {
      sub_10002B754(v67, &qword_10069B310);
      uint64_t v69 = v56[3];
      uint64_t v70 = v56[4];
      sub_10015E154(v56, v69);
      uint64_t v71 = (*(uint64_t (**)(uint64_t, uint64_t))(v70 + 48))(v69, v70);
      if (v72 >> 60 == 15)
      {
        swift_bridgeObjectRelease();
        uint64_t v73 = v176;
LABEL_20:
        uint64_t v74 = v175;
        goto LABEL_21;
      }
      uint64_t v79 = v71;
      unint64_t v80 = v72;
      uint64_t v81 = (char *)v171;
      URL.appendingPathComponent(_:isDirectory:)();
      swift_bridgeObjectRelease();
      uint64_t v82 = v159;
      dispatch thunk of ICFileManaging.createFile(at:contents:)();
      uint64_t v73 = v176;
      if (!v82)
      {
        uint64_t v159 = 0;
        (*(void (**)(char *, uint64_t))(v179 + 8))(v81, v176);
        sub_1001A3F54(v79, v80);
        goto LABEL_20;
      }
      (*(void (**)(char *, uint64_t))(v179 + 8))(v81, v176);
      sub_1001A3F54(v79, v80);
      uint64_t v74 = v175;
    }
    else
    {
      uint64_t v75 = v162;
      (*(void (**)(void, uint64_t, uint64_t))(v60 + 32))(v162, v67, v68);
      int64_t v76 = v161;
      URL.appendingPathComponent(_:isDirectory:)();
      swift_bridgeObjectRelease();
      uint64_t v77 = v159;
      dispatch thunk of ICFileManaging.copyItem(at:to:)();
      uint64_t v74 = v175;
      if (!v77)
      {
        uint64_t v159 = 0;
        unint64_t v89 = *(void (**)(int64_t, uint64_t))(v60 + 8);
        v89(v76, v68);
        v89((int64_t)v75, v68);
        uint64_t v73 = v68;
LABEL_21:
        uint64_t v56 = v180;
        goto LABEL_22;
      }
      unint64_t v78 = *(void (**)(int64_t, uint64_t))(v60 + 8);
      v78(v76, v68);
      v78((int64_t)v75, v68);
      uint64_t v73 = v68;
    }
    uint64_t v159 = 0;
    if (qword_10069B030 != -1) {
LABEL_85:
    }
      swift_once();
    uint64_t v83 = type metadata accessor for Logger();
    sub_10003293C(v83, (uint64_t)qword_1006A6D08);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v84 = Logger.logObject.getter();
    os_log_type_t v85 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v84, v85))
    {
      int v86 = (uint8_t *)swift_slowAlloc();
      uint64_t v185 = swift_slowAlloc();
      *(_DWORD *)int v86 = 136315138;
      swift_getErrorValue();
      uint64_t v87 = Error.localizedDescription.getter();
      unint64_t v182 = sub_10045DA1C(v87, v88, &v185);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v84, v85, "Cannot export attachment media file — skipping {error: %s}", v86, 0xCu);
      swift_arrayDestroy();
      uint64_t v73 = v176;
      swift_slowDealloc();
      uint64_t v74 = v175;
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    goto LABEL_21;
  }
  uint64_t v73 = v176;
  uint64_t v74 = v175;
LABEL_22:
  uint64_t v90 = v56[3];
  uint64_t v91 = v56[4];
  sub_10015E154(v56, v90);
  uint64_t v92 = (*(uint64_t (**)(uint64_t, uint64_t))(v91 + 64))(v90, v91);
  if (v93 >> 60 != 15)
  {
    uint64_t v94 = v92;
    unint64_t v95 = v93;
    uint64_t v96 = v164;
    URL.appendingPathComponent(_:isDirectory:)();
    uint64_t v97 = v159;
    dispatch thunk of ICFileManaging.createFile(at:contents:)();
    uint64_t v159 = v97;
    if (v97)
    {
      (*(void (**)(char *, uint64_t))(v179 + 8))(v96, v73);
      if (qword_10069B030 != -1) {
        swift_once();
      }
      uint64_t v98 = type metadata accessor for Logger();
      sub_10003293C(v98, (uint64_t)qword_1006A6D08);
      swift_errorRetain();
      swift_errorRetain();
      int v99 = Logger.logObject.getter();
      os_log_type_t v100 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v99, v100))
      {
        uint64_t v101 = (uint8_t *)swift_slowAlloc();
        uint64_t v185 = swift_slowAlloc();
        *(_DWORD *)uint64_t v101 = 136315138;
        os_log_type_t v177 = (void (**)(char *, uint64_t))(v101 + 4);
        swift_getErrorValue();
        uint64_t v102 = Error.localizedDescription.getter();
        unint64_t v182 = sub_10045DA1C(v102, v103, &v185);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v99, v100, "Cannot export attachment preview image file — skipping {error: %s}", v101, 0xCu);
        swift_arrayDestroy();
        uint64_t v73 = v176;
        swift_slowDealloc();
        swift_slowDealloc();
        sub_1001A3F54(v94, v95);

        swift_errorRelease();
      }
      else
      {
        sub_1001A3F54(v94, v95);
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
      uint64_t v159 = 0;
      uint64_t v74 = v175;
      uint64_t v56 = v180;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v179 + 8))(v96, v73);
      sub_1001A3F54(v94, v95);
    }
  }
  uint64_t v104 = v56[3];
  uint64_t v105 = v56[4];
  sub_10015E154(v56, v104);
  uint64_t v106 = (*(uint64_t (**)(uint64_t, uint64_t))(v105 + 72))(v104, v105);
  if (v107 >> 60 != 15)
  {
    uint64_t v108 = v106;
    unint64_t v109 = v107;
    int v110 = v165;
    URL.appendingPathComponent(_:isDirectory:)();
    uint64_t v111 = v159;
    dispatch thunk of ICFileManaging.createFile(at:contents:)();
    uint64_t v159 = v111;
    if (v111)
    {
      (*(void (**)(char *, uint64_t))(v179 + 8))(v110, v73);
      if (qword_10069B030 != -1) {
        swift_once();
      }
      uint64_t v112 = type metadata accessor for Logger();
      sub_10003293C(v112, (uint64_t)qword_1006A6D08);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v113 = Logger.logObject.getter();
      os_log_type_t v114 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v113, v114))
      {
        uint64_t v115 = (uint8_t *)swift_slowAlloc();
        uint64_t v185 = swift_slowAlloc();
        *(_DWORD *)uint64_t v115 = 136315138;
        os_log_type_t v177 = (void (**)(char *, uint64_t))(v115 + 4);
        swift_getErrorValue();
        uint64_t v116 = Error.localizedDescription.getter();
        unint64_t v182 = sub_10045DA1C(v116, v117, &v185);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v113, v114, "Cannot export attachment fallback PDF file — skipping {error: %s}", v115, 0xCu);
        swift_arrayDestroy();
        uint64_t v73 = v176;
        swift_slowDealloc();
        swift_slowDealloc();
        sub_1001A3F54(v108, v109);

        swift_errorRelease();
      }
      else
      {
        sub_1001A3F54(v108, v109);
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
      uint64_t v159 = 0;
      uint64_t v74 = v175;
      uint64_t v56 = v180;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v179 + 8))(v110, v73);
      sub_1001A3F54(v108, v109);
    }
  }
  uint64_t v118 = v56[3];
  uint64_t v119 = v56[4];
  sub_10015E154(v56, v118);
  uint64_t v120 = (*(uint64_t (**)(uint64_t, uint64_t))(v119 + 56))(v118, v119);
  uint64_t v122 = 0;
  uint64_t v123 = *(void *)(v120 + 56);
  uint64_t v160 = v120 + 56;
  v172 = (char *)v120;
  uint64_t v124 = 1 << *(unsigned char *)(v120 + 32);
  uint64_t v125 = -1;
  if (v124 < 64) {
    uint64_t v125 = ~(-1 << v124);
  }
  unint64_t v126 = v125 & v123;
  int64_t v161 = (unint64_t)(v124 + 63) >> 6;
  uint64_t v127 = v179;
  uint64_t v165 = (char *)(v179 + 16);
  v171 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v179 + 56);
  uint64_t v164 = (char *)(v179 + 48);
  BOOL v162 = (void (**)(char *, char *, uint64_t))(v179 + 32);
  os_log_type_t v177 = (void (**)(char *, uint64_t))(v179 + 8);
  *(void *)&long long v121 = 136315138;
  long long v158 = v121;
  v157[1] = (char *)&type metadata for Any + 8;
  uint64_t v128 = v159;
  BOOL v129 = v170;
  while (1)
  {
    if (v126)
    {
      unint64_t v132 = __clz(__rbit64(v126));
      v126 &= v126 - 1;
      unint64_t v133 = v132 | (v122 << 6);
      goto LABEL_60;
    }
    if (__OFADD__(v122++, 1))
    {
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    if (v122 >= v161) {
      goto LABEL_72;
    }
    unint64_t v135 = *(void *)(v160 + 8 * v122);
    if (!v135) {
      break;
    }
LABEL_59:
    unint64_t v126 = (v135 - 1) & v135;
    unint64_t v133 = __clz(__rbit64(v135)) + (v122 << 6);
LABEL_60:
    (*(void (**)(char *, unint64_t, uint64_t))(v127 + 16))(v74, *((void *)v172 + 6) + *(void *)(v127 + 72) * v133, v73);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v127 + 56))(v74, 0, 1, v73);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v127 + 48))(v74, 1, v73) == 1) {
      goto LABEL_73;
    }
    id v180 = (void *)v122;
    (*v162)(v129, v74, v73);
    Swift::String v137 = v74;
    uint64_t v138 = v73;
    uint64_t v139 = v129;
    URL.lastPathComponent.getter();
    int v140 = v181;
    URL.appendingPathComponent(_:isDirectory:)();
    swift_bridgeObjectRelease();
    dispatch thunk of ICFileManaging.copyItem(at:to:)();
    if (v128)
    {
      int v141 = *v177;
      (*v177)(v140, v138);
      uint64_t v73 = v138;
      if (qword_10069B030 != -1) {
        swift_once();
      }
      uint64_t v142 = type metadata accessor for Logger();
      sub_10003293C(v142, (uint64_t)qword_1006A6D08);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v143 = Logger.logObject.getter();
      os_log_type_t v144 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v143, v144))
      {
        uint64_t v145 = swift_slowAlloc();
        uint64_t v185 = swift_slowAlloc();
        *(_DWORD *)uint64_t v145 = v158;
        swift_getErrorValue();
        uint64_t v146 = Error.localizedDescription.getter();
        *(void *)(v145 + 4) = sub_10045DA1C(v146, v147, &v185);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v143, v144, "Cannot export attachment asset file — skipping {error: %s}", (uint8_t *)v145, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v73 = v176;
        swift_slowDealloc();
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
      }
      swift_errorRelease();
      BOOL v129 = v170;
      v141(v170, v73);
      uint64_t v128 = 0;
      uint64_t v74 = v175;
      uint64_t v127 = v179;
    }
    else
    {
      uint64_t v130 = v140;
      uint64_t v131 = *v177;
      (*v177)(v130, v138);
      v131(v139, v138);
      BOOL v129 = v139;
      uint64_t v73 = v138;
      uint64_t v74 = v137;
    }
    uint64_t v122 = (uint64_t)v180;
  }
  uint64_t v136 = v122 + 1;
  if (v122 + 1 >= v161) {
    goto LABEL_72;
  }
  unint64_t v135 = *(void *)(v160 + 8 * v136);
  if (v135) {
    goto LABEL_58;
  }
  uint64_t v136 = v122 + 2;
  if (v122 + 2 >= v161) {
    goto LABEL_72;
  }
  unint64_t v135 = *(void *)(v160 + 8 * v136);
  if (v135) {
    goto LABEL_58;
  }
  uint64_t v136 = v122 + 3;
  if (v122 + 3 >= v161) {
    goto LABEL_72;
  }
  unint64_t v135 = *(void *)(v160 + 8 * v136);
  if (v135)
  {
LABEL_58:
    uint64_t v122 = v136;
    goto LABEL_59;
  }
  uint64_t v136 = v122 + 4;
  if (v122 + 4 < v161)
  {
    unint64_t v135 = *(void *)(v160 + 8 * v136);
    if (!v135)
    {
      while (1)
      {
        uint64_t v122 = v136 + 1;
        if (__OFADD__(v136, 1)) {
          break;
        }
        if (v122 >= v161) {
          goto LABEL_72;
        }
        unint64_t v135 = *(void *)(v160 + 8 * v122);
        ++v136;
        if (v135) {
          goto LABEL_59;
        }
      }
LABEL_84:
      __break(1u);
      goto LABEL_85;
    }
    goto LABEL_58;
  }
LABEL_72:
  (*v171)(v74, 1, 1, v73);
LABEL_73:
  swift_release();
  uint64_t v74 = v173;
  id v148 = v163;
  os_signpost_id_t v149 = (char *)[v163 completedUnitCount];
  if (__OFADD__(v149, 1)) {
    goto LABEL_83;
  }
  [v148 setCompletedUnitCount:v149 + 1];
  uint64_t v150 = *((void *)v74 + 2);
  if (v150)
  {
    uint64_t v151 = *(void *)(sub_10002F214(&qword_10069D088) - 8);
    os_log_type_t v152 = &v74[(*(unsigned __int8 *)(v151 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v151 + 80)];
    uint64_t v153 = *(void *)(v151 + 72);
    swift_bridgeObjectRetain();
    uint64_t v154 = (uint64_t)v174;
    while (1)
    {
      sub_10040FBAC(v152, v154, v148);
      if (v128) {
        break;
      }
      v152 += v153;
      if (!--v150)
      {
        swift_bridgeObjectRelease();
        goto LABEL_79;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v156 = (void (*)(uint64_t, uint64_t))*v177;
    (*v177)(v168, v73);
    v156(v154, v73);
  }
  else
  {
LABEL_79:
    BOOL v155 = *v177;
    (*v177)(v168, v73);
    v155(v174, v73);
  }
}

void sub_10041800C(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v177 = a3;
  uint64_t v170 = a2;
  id v180 = a1;
  uint64_t v171 = *v4;
  uint64_t v6 = sub_10002F214(&qword_10069B310);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  os_signpost_id_t v174 = (char *)v157 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v169 = (char *)v157 - v9;
  uint64_t v175 = type metadata accessor for URL();
  uint64_t v178 = *(void *)(v175 - 8);
  uint64_t v10 = __chkstk_darwin(v175);
  uint64_t v176 = (char *)v157 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  os_signpost_id_t v173 = (char *)v157 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)v157 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)v157 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)v157 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)v157 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  BOOL v28 = (void (**)(char *, uint64_t, uint64_t, uint64_t))((char *)v157 - v27);
  uint64_t v29 = __chkstk_darwin(v26);
  Class v31 = (char *)v157 - v30;
  __chkstk_darwin(v29);
  BOOL v33 = (char *)v157 - v32;
  NSProgress.throwIfCancelled()();
  os_signpost_type_t v181 = v34;
  if (v34) {
    return;
  }
  int64_t v161 = (void (**)(void *, char *, uint64_t))v25;
  uint64_t v165 = v28;
  int64_t v160 = (int64_t)v22;
  BOOL v162 = v19;
  id v163 = v16;
  os_signpost_type_t v168 = v31;
  v172 = v33;
  uint64_t v164 = a4;
  uint64_t v35 = v180;
  uint64_t v36 = v180[3];
  uint64_t v37 = v180[4];
  sub_10015E154(v180, v36);
  uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 16))(v36, v37);
  if (v39)
  {
    uint64_t v40 = v38;
    uint64_t v41 = v39;
  }
  else
  {
    id v42 = [self mainBundle];
    NSString v43 = String._bridgeToObjectiveC()();
    id v44 = [v42 localizedStringForKey:v43 value:0 table:0];

    uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v41 = v45;
  }
  uint64_t v46 = v181;
  uint64_t v47 = v179;
  sub_1004142A0(v40, v41, v177, 0x656D686361747461, 0xEA0000000000746ELL, (uint64_t)v172);
  if (v46)
  {
    os_signpost_type_t v181 = v46;
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRelease();
  URL.appendingPathComponent(_:isDirectory:)();
  uint64_t v48 = *(void *)(v47 + 80);
  uint64_t v177 = *(void *)(v47 + 88);
  uint64_t v49 = v35[3];
  uint64_t v50 = v35[4];
  sub_10015E154(v35, v49);
  long long v51 = *(_OWORD *)(v47 + 40);
  v183[0] = *(_OWORD *)(v47 + 24);
  v183[1] = v51;
  *(_OWORD *)uint64_t v184 = *(_OWORD *)(v47 + 56);
  *(void *)&v184[13] = *(void *)(v47 + 69);
  uint64_t v52 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v50 + 80))(v183, v49, v50);
  unint64_t v54 = v53;
  uint64_t ObjectType = swift_getObjectType();
  dispatch thunk of ICFileManaging.createFile(at:contents:)();
  os_signpost_type_t v181 = 0;
  uint64_t v167 = ObjectType;
  sub_10017253C(v52, v54);
  uint64_t v56 = sub_100031418(0, &qword_1006A6E18);
  uint64_t v57 = v180;
  uint64_t v58 = v180[3];
  uint64_t v59 = v180[4];
  uint64_t v60 = sub_10015E154(v180, v58);
  sub_1003CF16C((uint64_t)v60, v56, v58, v59);
  uint64_t v166 = v48;
  if (!v61)
  {
    uint64_t v73 = v175;
    goto LABEL_12;
  }
  NSString v62 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v63 = [v62 ic_sanitizedFilenameString];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v64 = v57[3];
  uint64_t v65 = v57[4];
  sub_10015E154(v57, v64);
  uint64_t v66 = (uint64_t)v169;
  (*(void (**)(uint64_t, uint64_t))(v65 + 40))(v64, v65);
  uint64_t v67 = v178;
  uint64_t v68 = v175;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v178 + 48))(v66, 1, v175) != 1)
  {
    (*(void (**)(void (**)(char *, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))(v67 + 32))(v165, v66, v68);
    uint64_t v75 = (void (**)(void *, void, void))v161;
    URL.appendingPathComponent(_:isDirectory:)();
    swift_bridgeObjectRelease();
    int64_t v76 = v181;
    dispatch thunk of ICFileManaging.copyItem(at:to:)();
    if (!v76)
    {
      os_signpost_type_t v181 = 0;
      unint64_t v89 = *(void (**)(void, void))(v67 + 8);
      v89(v75, v68);
      v89(v165, v68);
      uint64_t v73 = v68;
      uint64_t v74 = v67;
      goto LABEL_23;
    }
    uint64_t v77 = *(void (**)(void, void))(v67 + 8);
    v77(v75, v68);
    v77(v165, v68);
    os_signpost_type_t v181 = 0;
    uint64_t v73 = v68;
LABEL_17:
    if (qword_10069B030 != -1) {
LABEL_82:
    }
      swift_once();
    uint64_t v82 = type metadata accessor for Logger();
    sub_10003293C(v82, (uint64_t)qword_1006A6D08);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v83 = Logger.logObject.getter();
    os_log_type_t v84 = static os_log_type_t.error.getter();
    BOOL v85 = os_log_type_enabled(v83, v84);
    uint64_t v74 = v178;
    if (v85)
    {
      int v86 = (uint8_t *)swift_slowAlloc();
      uint64_t v185 = swift_slowAlloc();
      *(_DWORD *)int v86 = 136315138;
      swift_getErrorValue();
      uint64_t v87 = Error.localizedDescription.getter();
      unint64_t v182 = sub_10045DA1C(v87, v88, &v185);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v83, v84, "Cannot export attachment media file — skipping {error: %s}", v86, 0xCu);
      swift_arrayDestroy();
      uint64_t v57 = v180;
      uint64_t v74 = v178;
      swift_slowDealloc();
      uint64_t v73 = v175;
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    goto LABEL_23;
  }
  sub_10002B754(v66, &qword_10069B310);
  uint64_t v69 = v57[3];
  uint64_t v70 = v57[4];
  sub_10015E154(v57, v69);
  uint64_t v71 = (*(uint64_t (**)(uint64_t, uint64_t))(v70 + 48))(v69, v70);
  if (v72 >> 60 != 15)
  {
    uint64_t v78 = v71;
    unint64_t v79 = v72;
    int64_t v80 = v160;
    URL.appendingPathComponent(_:isDirectory:)();
    swift_bridgeObjectRelease();
    uint64_t v81 = v181;
    dispatch thunk of ICFileManaging.createFile(at:contents:)();
    uint64_t v74 = v178;
    if (!v81)
    {
      os_signpost_type_t v181 = 0;
      uint64_t v73 = v175;
      (*(void (**)(int64_t))(v178 + 8))(v80);
      sub_1001A3F54(v78, v79);
      goto LABEL_23;
    }
    uint64_t v73 = v175;
    (*(void (**)(int64_t, uint64_t))(v178 + 8))(v80, v175);
    sub_1001A3F54(v78, v79);
    os_signpost_type_t v181 = 0;
    goto LABEL_17;
  }
  swift_bridgeObjectRelease();
  uint64_t v73 = v175;
LABEL_12:
  uint64_t v74 = v178;
LABEL_23:
  uint64_t v90 = v57[3];
  uint64_t v91 = v57[4];
  sub_10015E154(v57, v90);
  uint64_t v92 = (*(uint64_t (**)(uint64_t, uint64_t))(v91 + 64))(v90, v91);
  if (v93 >> 60 != 15)
  {
    uint64_t v94 = v92;
    unint64_t v95 = v93;
    uint64_t v96 = v162;
    URL.appendingPathComponent(_:isDirectory:)();
    uint64_t v97 = v181;
    dispatch thunk of ICFileManaging.createFile(at:contents:)();
    os_signpost_type_t v181 = v97;
    if (v97)
    {
      (*(void (**)(char *, uint64_t))(v74 + 8))(v96, v73);
      if (qword_10069B030 != -1) {
        swift_once();
      }
      uint64_t v98 = type metadata accessor for Logger();
      sub_10003293C(v98, (uint64_t)qword_1006A6D08);
      swift_errorRetain();
      swift_errorRetain();
      int v99 = Logger.logObject.getter();
      os_log_type_t v100 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v99, v100))
      {
        uint64_t v101 = (uint8_t *)swift_slowAlloc();
        uint64_t v185 = swift_slowAlloc();
        *(_DWORD *)uint64_t v101 = 136315138;
        uint64_t v169 = (char *)(v101 + 4);
        swift_getErrorValue();
        uint64_t v102 = Error.localizedDescription.getter();
        unint64_t v182 = sub_10045DA1C(v102, v103, &v185);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v99, v100, "Cannot export attachment preview image file — skipping {error: %s}", v101, 0xCu);
        swift_arrayDestroy();
        uint64_t v57 = v180;
        uint64_t v104 = v178;
        swift_slowDealloc();
        uint64_t v74 = v104;
        swift_slowDealloc();
        sub_1001A3F54(v94, v95);

        swift_errorRelease();
      }
      else
      {
        sub_1001A3F54(v94, v95);
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
      os_signpost_type_t v181 = 0;
      uint64_t v73 = v175;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v74 + 8))(v96, v73);
      sub_1001A3F54(v94, v95);
    }
  }
  uint64_t v105 = v57[3];
  uint64_t v106 = v57[4];
  sub_10015E154(v57, v105);
  uint64_t v107 = (*(uint64_t (**)(uint64_t, uint64_t))(v106 + 72))(v105, v106);
  if (v108 >> 60 == 15)
  {
    unint64_t v109 = v181;
  }
  else
  {
    uint64_t v110 = v107;
    unint64_t v111 = v108;
    uint64_t v112 = v163;
    URL.appendingPathComponent(_:isDirectory:)();
    uint64_t v113 = v181;
    dispatch thunk of ICFileManaging.createFile(at:contents:)();
    unint64_t v109 = v113;
    if (v113)
    {
      (*(void (**)(char *, uint64_t))(v74 + 8))(v112, v73);
      if (qword_10069B030 != -1) {
        swift_once();
      }
      uint64_t v114 = type metadata accessor for Logger();
      sub_10003293C(v114, (uint64_t)qword_1006A6D08);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v115 = Logger.logObject.getter();
      os_log_type_t v116 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v115, v116))
      {
        unint64_t v117 = (uint8_t *)swift_slowAlloc();
        uint64_t v185 = swift_slowAlloc();
        *(_DWORD *)unint64_t v117 = 136315138;
        os_signpost_type_t v181 = v117 + 4;
        swift_getErrorValue();
        uint64_t v118 = Error.localizedDescription.getter();
        unint64_t v182 = sub_10045DA1C(v118, v119, &v185);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v115, v116, "Cannot export attachment fallback PDF file — skipping {error: %s}", v117, 0xCu);
        swift_arrayDestroy();
        uint64_t v57 = v180;
        uint64_t v120 = v178;
        swift_slowDealloc();
        uint64_t v74 = v120;
        swift_slowDealloc();
        sub_1001A3F54(v110, v111);

        swift_errorRelease();
      }
      else
      {
        sub_1001A3F54(v110, v111);
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
      unint64_t v109 = 0;
      uint64_t v73 = v175;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v74 + 8))(v112, v73);
      sub_1001A3F54(v110, v111);
    }
  }
  uint64_t v121 = v57[3];
  uint64_t v122 = v57[4];
  sub_10015E154(v57, v121);
  uint64_t v123 = (*(uint64_t (**)(uint64_t, uint64_t))(v122 + 56))(v121, v122);
  int64_t v125 = 0;
  uint64_t v126 = *(void *)(v123 + 56);
  uint64_t v159 = v123 + 56;
  uint64_t v169 = (char *)v123;
  uint64_t v127 = 1 << *(unsigned char *)(v123 + 32);
  uint64_t v128 = -1;
  if (v127 < 64) {
    uint64_t v128 = ~(-1 << v127);
  }
  unint64_t v129 = v128 & v126;
  int64_t v160 = (unint64_t)(v127 + 63) >> 6;
  id v163 = (char *)(v74 + 16);
  uint64_t v165 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v74 + 56);
  BOOL v162 = (char *)(v74 + 48);
  int64_t v161 = (void (**)(void *, char *, uint64_t))(v74 + 32);
  id v180 = (void *)(v74 + 8);
  *(void *)&long long v124 = 136315138;
  long long v158 = v124;
  v157[1] = (char *)&type metadata for Any + 8;
  uint64_t v130 = v174;
  uint64_t v57 = v173;
  uint64_t v131 = v73;
  while (1)
  {
    if (v129)
    {
      unint64_t v134 = __clz(__rbit64(v129));
      uint64_t v135 = (v129 - 1) & v129;
      unint64_t v136 = v134 | (v125 << 6);
      goto LABEL_60;
    }
    if (__OFADD__(v125++, 1))
    {
      __break(1u);
      goto LABEL_80;
    }
    if (v125 >= v160) {
      goto LABEL_73;
    }
    unint64_t v138 = *(void *)(v159 + 8 * v125);
    if (!v138) {
      break;
    }
LABEL_59:
    uint64_t v135 = (v138 - 1) & v138;
    unint64_t v136 = __clz(__rbit64(v138)) + (v125 << 6);
LABEL_60:
    (*(void (**)(char *, unint64_t, uint64_t))(v74 + 16))(v130, *((void *)v169 + 6) + *(void *)(v74 + 72) * v136, v131);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v130, 0, 1, v131);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v130, 1, v131) == 1)
    {
      swift_release();
      unint64_t v147 = v164;
      uint64_t v148 = v170;
      goto LABEL_74;
    }
    os_signpost_type_t v181 = (uint8_t *)v135;
    uint64_t v73 = v74;
    (*v161)(v57, v130, v131);
    URL.lastPathComponent.getter();
    int v140 = v176;
    URL.appendingPathComponent(_:isDirectory:)();
    swift_bridgeObjectRelease();
    dispatch thunk of ICFileManaging.copyItem(at:to:)();
    if (v109)
    {
      int v141 = (void (*)(char *, uint64_t))*v180;
      uint64_t v73 = v131;
      ((void (*)(char *, uint64_t))*v180)(v140, v131);
      if (qword_10069B030 != -1) {
        swift_once();
      }
      uint64_t v142 = type metadata accessor for Logger();
      sub_10003293C(v142, (uint64_t)qword_1006A6D08);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v143 = Logger.logObject.getter();
      os_log_type_t v144 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v143, v144))
      {
        uint64_t v73 = swift_slowAlloc();
        uint64_t v185 = swift_slowAlloc();
        *(_DWORD *)uint64_t v73 = v158;
        swift_getErrorValue();
        uint64_t v145 = Error.localizedDescription.getter();
        *(void *)(v73 + 4) = sub_10045DA1C(v145, v146, &v185);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v143, v144, "Cannot export attachment asset file — skipping {error: %s}", (uint8_t *)v73, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v131 = v175;
        swift_slowDealloc();
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
      }
      swift_errorRelease();
      uint64_t v57 = v173;
      v141(v173, v131);
      unint64_t v109 = 0;
      uint64_t v130 = v174;
      uint64_t v74 = v178;
    }
    else
    {
      unint64_t v132 = v140;
      unint64_t v133 = (void (*)(void *, uint64_t))*v180;
      ((void (*)(char *, uint64_t))*v180)(v132, v131);
      v133(v57, v131);
    }
    unint64_t v129 = (unint64_t)v181;
  }
  int64_t v139 = v125 + 1;
  if (v125 + 1 >= v160) {
    goto LABEL_73;
  }
  unint64_t v138 = *(void *)(v159 + 8 * v139);
  if (v138) {
    goto LABEL_58;
  }
  int64_t v139 = v125 + 2;
  if (v125 + 2 >= v160) {
    goto LABEL_73;
  }
  unint64_t v138 = *(void *)(v159 + 8 * v139);
  if (v138)
  {
LABEL_58:
    int64_t v125 = v139;
    goto LABEL_59;
  }
  int64_t v139 = v125 + 3;
  if (v125 + 3 < v160)
  {
    unint64_t v138 = *(void *)(v159 + 8 * v139);
    if (!v138)
    {
      while (1)
      {
        int64_t v125 = v139 + 1;
        if (__OFADD__(v139, 1)) {
          break;
        }
        if (v125 >= v160) {
          goto LABEL_73;
        }
        unint64_t v138 = *(void *)(v159 + 8 * v125);
        ++v139;
        if (v138) {
          goto LABEL_59;
        }
      }
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
      goto LABEL_82;
    }
    goto LABEL_58;
  }
LABEL_73:
  unint64_t v147 = v164;
  uint64_t v148 = v170;
  (*v165)(v174, 1, 1, v131);
  swift_release();
LABEL_74:
  os_signpost_id_t v149 = (char *)[v147 completedUnitCount];
  uint64_t v150 = v179;
  if (__OFADD__(v149, 1)) {
    goto LABEL_81;
  }
  id v151 = [v147 setCompletedUnitCount:v149 + 1];
  uint64_t v185 = v148;
  __chkstk_darwin(v151);
  uint64_t v152 = (uint64_t)v172;
  v157[-4] = v150;
  v157[-3] = v152;
  v157[-2] = v147;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ICObjectReferences();
  type metadata accessor for Array();
  swift_getWitnessTable();
  Sequence.forEach(_:)();
  if (v109)
  {
    os_signpost_type_t v181 = v109;
    uint64_t v153 = (void (*)(uint64_t, uint64_t))*v180;
    uint64_t v154 = v175;
    ((void (*)(char *, uint64_t))*v180)(v168, v175);
    v153(v152, v154);
  }
  else
  {
    BOOL v155 = (void (*)(uint64_t, uint64_t))*v180;
    uint64_t v156 = v175;
    ((void (*)(char *, uint64_t))*v180)(v168, v175);
    v155(v152, v156);
  }
}

uint64_t sub_100419874@<X0>(uint64_t *a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ICObjectReferences();
  uint64_t result = ICObjectReferences.recursiveAttachmentCount.getter();
  *a1 = result;
  return result;
}

void sub_10041990C(char a1)
{
  uint64_t v2 = v1;
  if ((*(unsigned char *)(v1 + 112) & 1) != 0 || (a1 & 0x1F) == 0)
  {
    uint64_t v3 = qword_10069B030;
    swift_retain();
    if (v3 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10003293C(v4, (uint64_t)qword_1006A6D08);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Resetting context…", v7, 2u);
      swift_slowDealloc();
    }

    uint64_t v8 = (void *)ICModernObjectProvider.context.getter();
    [v8 reset];
    swift_release();

    *(unsigned char *)(v2 + 112) = 0;
  }
}

void sub_100419A34(char a1)
{
  uint64_t v2 = v1;
  if ((*(unsigned char *)(v1 + 112) & 1) != 0 || (a1 & 0x1F) == 0)
  {
    type metadata accessor for ICModernObjectProvider();
    if (swift_dynamicCastClass())
    {
      uint64_t v3 = qword_10069B030;
      swift_unknownObjectRetain();
      if (v3 != -1) {
        swift_once();
      }
      uint64_t v4 = type metadata accessor for Logger();
      sub_10003293C(v4, (uint64_t)qword_1006A6D08);
      uint64_t v5 = Logger.logObject.getter();
      os_log_type_t v6 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v5, v6))
      {
        uint64_t v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v7 = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, v6, "Resetting context…", v7, 2u);
        swift_slowDealloc();
      }

      uint64_t v8 = (void *)ICModernObjectProvider.context.getter();
      [v8 reset];
      swift_unknownObjectRelease();
    }
    *(unsigned char *)(v2 + 112) = 0;
  }
}

uint64_t sub_100419B78()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(unsigned char *)(result + 112) = 1;
    return swift_release();
  }
  return result;
}

uint64_t ICArchiveExporterConfiguration.creator.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10002F034(v1, a1, qword_1006A6D38);
}

uint64_t ICArchiveExporterConfiguration.creator.setter(uint64_t a1)
{
  return sub_10002B660(a1, v1, qword_1006A6D38);
}

uint64_t ICArchiveExporterConfiguration.exportsActivities.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t ICArchiveExporterConfiguration.exportsActivities.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 48) = result;
  return result;
}

uint64_t (*ICArchiveExporterConfiguration.exportsActivities.modify())()
{
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t ICArchiveExporterConfiguration.exportsAttributions.getter()
{
  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t ICArchiveExporterConfiguration.exportsAttributions.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 49) = result;
  return result;
}

uint64_t (*ICArchiveExporterConfiguration.exportsAttributions.modify())()
{
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t ICArchiveExporterConfiguration.exportsViewDates.getter()
{
  return *(unsigned __int8 *)(v0 + 50);
}

uint64_t ICArchiveExporterConfiguration.exportsViewDates.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 50) = result;
  return result;
}

uint64_t (*ICArchiveExporterConfiguration.exportsViewDates.modify())()
{
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t ICArchiveExporterConfiguration.exportsInternalProperties.getter()
{
  return *(unsigned __int8 *)(v0 + 51);
}

uint64_t ICArchiveExporterConfiguration.exportsInternalProperties.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 51) = result;
  return result;
}

uint64_t (*ICArchiveExporterConfiguration.exportsInternalProperties.modify())()
{
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t ICArchiveExporterConfiguration.forPagesHandoff.getter()
{
  return *(unsigned __int8 *)(v0 + 52);
}

uint64_t ICArchiveExporterConfiguration.forPagesHandoff.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 52) = result;
  return result;
}

uint64_t (*ICArchiveExporterConfiguration.forPagesHandoff.modify())()
{
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

void sub_100419D08()
{
  uint64_t v1 = self;
  id v2 = v0;
  id v3 = [v1 sharedContext];
  if (v3
    && (uint64_t v4 = v3,
        id v5 = [v3 snapshotManagedObjectContext],
        v4,
        v5))
  {
    swift_getObjectType();

    if (qword_10069AFF8 != -1) {
      swift_once();
    }
    long long v6 = static ICArchiveCreator.default;
    uint64_t v8 = qword_1006CE118;
    uint64_t v7 = unk_1006CE120;
    uint64_t v9 = qword_1006CE128;
    uint64_t v10 = qword_1006CE130;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    long long v11 = v6;
    uint64_t v12 = v8;
    uint64_t v13 = v7;
    uint64_t v14 = v9;
    uint64_t v15 = v10;
    char IsAlexandriaDemoModeEnabled = ICInternalSettingsIsAlexandriaDemoModeEnabled();
    char v17 = ICInternalSettingsIsAlexandriaDemoModeEnabled();
    char v18 = ICInternalSettingsIsAlexandriaDemoModeEnabled();
    __int16 v19 = 0;
    sub_10041B568(v5, (uint64_t)&v11);

    swift_deallocPartialClassInstance();
  }
  else
  {
    __break(1u);
  }
}

void *sub_10041A1EC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100169D0C(0, v1, 0);
    uint64_t v3 = *(void *)(sub_10002F214(&qword_10069D088) - 8);
    uint64_t v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = *(void *)(v3 + 72);
    do
    {
      swift_getAtKeyPath();
      unint64_t v7 = _swiftEmptyArrayStorage[2];
      unint64_t v6 = _swiftEmptyArrayStorage[3];
      if (v7 >= v6 >> 1) {
        sub_100169D0C(v6 > 1, v7 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v7 + 1;
      _swiftEmptyArrayStorage[v7 + 4] = v9;
      v4 += v5;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

char *sub_10041A330(unint64_t a1, void (**a2)(char *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = v2;
  uint64_t v30 = a2;
  uint64_t v29 = sub_10002F214(&qword_1006A6E20);
  __chkstk_darwin(v29);
  unint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10002F214(&qword_10069D088);
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v35 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v27 = (char *)&v26 - v10;
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v11; uint64_t v11 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v36 = v3;
    unint64_t v34 = a1 & 0xC000000000000001;
    uint64_t v26 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
    Class v31 = (void (**)(char *, char *, uint64_t))(v28 + 32);
    uint64_t v32 = (unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    uint64_t v12 = (char *)_swiftEmptyArrayStorage;
    uint64_t v13 = 4;
    unint64_t v33 = a1;
    while (1)
    {
      uint64_t v3 = v11;
      uint64_t v15 = v34
          ? (void (**)(char *, uint64_t, uint64_t, uint64_t))specialized _ArrayBuffer._getElementSlowPath(_:)()
          : (void (**)(char *, uint64_t, uint64_t, uint64_t))*(id *)(a1 + 8 * v13);
      uint64_t v16 = v15;
      a1 = v13 - 3;
      if (__OFADD__(v13 - 4, 1)) {
        break;
      }
      id v17 = [v15 managedObjectContext];
      if (v17)
      {
        char v18 = v17;
        __chkstk_darwin(v17);
        __int16 v19 = v30;
        *(&v26 - 2) = v16;
        *(&v26 - 1) = v19;
        uint64_t v20 = v36;
        NSManagedObjectContext.performAndWait<A>(_:)();
        uint64_t v36 = v20;
      }
      else
      {
        (*v26)(v6, 1, 1, v7);
      }
      if ((*v32)(v6, 1, v7) == 1)
      {
        sub_10002B754((uint64_t)v6, &qword_1006A6E20);
      }
      else
      {
        uint64_t v21 = *v31;
        uint64_t v22 = v27;
        (*v31)(v27, v6, v7);
        v21(v35, v22, v7);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v12 = (char *)sub_1001A9458(0, *((void *)v12 + 2) + 1, 1, (unint64_t)v12);
        }
        unint64_t v24 = *((void *)v12 + 2);
        unint64_t v23 = *((void *)v12 + 3);
        if (v24 >= v23 >> 1) {
          uint64_t v12 = (char *)sub_1001A9458(v23 > 1, v24 + 1, 1, (unint64_t)v12);
        }
        *((void *)v12 + 2) = v24 + 1;
        v21(&v12[((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v24], v35, v7);
      }
      ++v13;
      uint64_t v11 = v3;
      BOOL v14 = a1 == v3;
      a1 = v33;
      if (v14)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (char *)_swiftEmptyArrayStorage;
}

uint64_t sub_10041A714(uint64_t a1, unint64_t a2)
{
  return sub_10041A73C(a1, a2, (unint64_t *)&qword_10069E810);
}

uint64_t sub_10041A728(uint64_t a1, unint64_t a2)
{
  return sub_10041A73C(a1, a2, &qword_1006A4840);
}

uint64_t sub_10041A73C(uint64_t result, unint64_t a2, unint64_t *a3)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = a3;
    unint64_t v3 = a2;
    uint64_t v4 = result;
    unint64_t v6 = a2 >> 62;
    if (!(a2 >> 62))
    {
      uint64_t v7 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_4:
  if (v7 >= v4) {
    uint64_t v8 = v4;
  }
  else {
    uint64_t v8 = v7;
  }
  if (v7 < 0) {
    uint64_t v8 = v4;
  }
  if (v4) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v11 < 0)
    {
LABEL_28:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v10 < v9)
  {
    __break(1u);
    goto LABEL_28;
  }
  if ((v3 & 0xC000000000000001) != 0 && v9)
  {
    sub_100031418(0, v5);
    Swift::Int v12 = 0;
    do
    {
      Swift::Int v13 = v12 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v12);
      Swift::Int v12 = v13;
    }
    while (v9 != v13);
  }
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.subscript.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v14;
}

uint64_t sub_10041A8EC(uint64_t a1, unint64_t a2)
{
  return sub_10041A904(a1, a2, (void (*)(void))type metadata accessor for NoteSearchResult);
}

uint64_t sub_10041A904(uint64_t result, unint64_t a2, void (*a3)(void))
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = a3;
    unint64_t v3 = a2;
    uint64_t v4 = result;
    unint64_t v6 = a2 >> 62;
    if (!(a2 >> 62))
    {
      uint64_t v7 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_4:
  if (v7 >= v4) {
    uint64_t v8 = v4;
  }
  else {
    uint64_t v8 = v7;
  }
  if (v7 < 0) {
    uint64_t v8 = v4;
  }
  if (v4) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v11 < 0)
    {
LABEL_28:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v10 < v9)
  {
    __break(1u);
    goto LABEL_28;
  }
  if ((v3 & 0xC000000000000001) != 0 && v9)
  {
    v5(0);
    Swift::Int v12 = 0;
    do
    {
      Swift::Int v13 = v12 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v12);
      Swift::Int v12 = v13;
    }
    while (v9 != v13);
  }
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.subscript.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v14;
}

uint64_t sub_10041AAA4(uint64_t a1, unint64_t a2)
{
  return sub_10041A904(a1, a2, (void (*)(void))type metadata accessor for AttachmentSearchResult);
}

uint64_t sub_10041AABC(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    String.index(_:offsetBy:limitedBy:)();
    return String.subscript.getter();
  }
  return result;
}

uint64_t sub_10041AB58(uint64_t a1, unint64_t a2)
{
  return sub_10041A904(a1, a2, (void (*)(void))type metadata accessor for TableSearchResult);
}

uint64_t sub_10041AB70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(_OWORD *)(v4 + 120) = 0u;
  *(_OWORD *)(v4 + 136) = 0u;
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)a2;
  *(unsigned char *)(v4 + 96) = 0;
  *(void *)(v4 + 104) = 32;
  *(unsigned char *)(v4 + 112) = 0;
  *(void *)(v4 + 16) = a1;
  *(_OWORD *)(v4 + 40) = v5;
  *(_OWORD *)(v4 + 56) = *(_OWORD *)(a2 + 32);
  *(void *)(v4 + 69) = *(void *)(a2 + 45);
  *(void *)(v4 + 80) = a3;
  *(void *)(v4 + 88) = a4;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  sub_100409924();
  return v4;
}

uint64_t sub_10041ABE4()
{
  return sub_10041B120((uint64_t (*)(void, void, void, void, void))sub_10040C3B8);
}

uint64_t sub_10041AC14()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for ICArchiveExporter()
{
  return sub_100183A74();
}

uint64_t destroy for ICArchiveExporterConfiguration(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 8);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ICArchiveExporterConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4 == 1)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    uint64_t v6 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  return a1;
}

uint64_t assignWithCopy for ICArchiveExporterConfiguration(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8) == 1)
  {
    if (v4 == 1)
    {
      long long v5 = *a2;
      long long v6 = a2[2];
      *(_OWORD *)(a1 + 16) = a2[1];
      *(_OWORD *)(a1 + 32) = v6;
      *(_OWORD *)a1 = v5;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v4 == 1)
  {
    sub_10041AED8(a1);
    long long v8 = a2[1];
    long long v7 = a2[2];
    *(_OWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 32) = v7;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    *(void *)(a1 + 24) = *((void *)a2 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(void *)(a1 + 40) = *((void *)a2 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  *(unsigned char *)(a1 + 49) = *((unsigned char *)a2 + 49);
  *(unsigned char *)(a1 + 50) = *((unsigned char *)a2 + 50);
  *(unsigned char *)(a1 + 51) = *((unsigned char *)a2 + 51);
  *(unsigned char *)(a1 + 52) = *((unsigned char *)a2 + 52);
  return a1;
}

uint64_t sub_10041AED8(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for ICArchiveExporterConfiguration(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 45) = *(void *)(a2 + 45);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ICArchiveExporterConfiguration(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) != 1)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    if (v4 != 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      swift_bridgeObjectRelease();
      uint64_t v6 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v6;
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v7;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_10041AED8(a1);
  }
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
LABEL_6:
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(unsigned char *)(a1 + 51) = *(unsigned char *)(a2 + 51);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  return a1;
}

uint64_t getEnumTagSinglePayload for ICArchiveExporterConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFD && *(unsigned char *)(a1 + 53)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  BOOL v5 = __OFSUB__(v4, 1);
  int v6 = v4 - 1;
  if (v6 < 0 != v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for ICArchiveExporterConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 52) = 0;
    *(_DWORD *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 53) = 1;
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 53) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICArchiveExporterConfiguration()
{
  return &type metadata for ICArchiveExporterConfiguration;
}

uint64_t type metadata accessor for ICArchiveExporterObjCBridge()
{
  return self;
}

uint64_t sub_10041B0F4()
{
  return sub_10041B120((uint64_t (*)(void, void, void, void, void))sub_10040B664);
}

uint64_t sub_10041B120(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_10041B14C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10041B194()
{
  unint64_t result = qword_1006A6E00;
  if (!qword_1006A6E00)
  {
    sub_10001DFF4(&qword_1006A6DF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A6E00);
  }
  return result;
}

uint64_t sub_10041B1F0()
{
  return sub_10041B208();
}

uint64_t sub_10041B208()
{
  return dispatch thunk of ICObjectProviding.object(for:)();
}

uint64_t sub_10041B2AC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ICArchiveModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10041B308(char *a1)
{
  return sub_10041B46C(a1);
}

uint64_t sub_10041B320()
{
  swift_getAssociatedTypeWitness();

  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_10041B398()
{
  return 16;
}

__n128 sub_10041B3A4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10041B3B0()
{
  return swift_getAtKeyPath();
}

BOOL sub_10041B3DC()
{
  return sub_10040F810();
}

uint64_t sub_10041B3FC(uint64_t a1, void *a2)
{
  return sub_10041B434(a1, a2);
}

uint64_t sub_10041B414()
{
  return sub_10040F9F0() & 1;
}

uint64_t sub_10041B434(uint64_t a1, void *a2)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 32))();
  if (v3) {
    *a2 = v3;
  }
  return result;
}

uint64_t sub_10041B46C(char *a1)
{
  return sub_100411BEC(a1, *(void (**)(char *, uint64_t))(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_10041B498()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10041B4D0()
{
  return sub_10041B4E8();
}

uint64_t sub_10041B4E8()
{
  return dispatch thunk of ICObjectProviding.object(for:)();
}

uint64_t sub_10041B510()
{
  id v1 = *(id *)(v0 + 16);
  return ICObjectReferences<>.init(object:recursivelyIncludeChildren:forPagesHandoff:)();
}

id sub_10041B568(void *a1, uint64_t a2)
{
  type metadata accessor for ICModernObjectProvider();
  swift_allocObject();
  id v4 = a1;
  uint64_t v5 = ICModernObjectProvider.init(context:)();
  id v6 = [self defaultManager];
  sub_10002F214(&qword_1006A6E28);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 120) = 0u;
  *(_OWORD *)(v7 + 136) = 0u;
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v7 + 24) = *(_OWORD *)a2;
  *(unsigned char *)(v7 + 96) = 0;
  *(void *)(v7 + 104) = 32;
  *(unsigned char *)(v7 + 112) = 0;
  *(void *)(v7 + 16) = v5;
  *(_OWORD *)(v7 + 40) = v8;
  *(_OWORD *)(v7 + 56) = *(_OWORD *)(a2 + 32);
  *(void *)(v7 + 69) = *(void *)(a2 + 45);
  *(void *)(v7 + 80) = v6;
  *(void *)(v7 + 88) = &protocol witness table for NSFileManager;
  sub_1004097BC();
  uint64_t v9 = (objc_class *)type metadata accessor for ICArchiveExporterObjCBridge();
  uint64_t v10 = (char *)objc_allocWithZone(v9);
  *(void *)&v10[OBJC_IVAR___ICArchiveExporter_exporter] = v7;
  v12.receiver = v10;
  v12.super_class = v9;
  return [super init];
}

uint64_t sub_10041B680()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10041B6B8()
{
  return sub_100419B78();
}

uint64_t sub_10041B6C0()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10041B6F8()
{
  return sub_100419B78();
}

void sub_10041B704()
{
  id v0 = [self sharedContext];
  if (v0
    && (id v1 = v0,
        id v2 = [v0 snapshotManagedObjectContext],
        v1,
        v2))
  {
    if (qword_10069AFF8 != -1) {
      swift_once();
    }
    long long v3 = static ICArchiveCreator.default;
    uint64_t v5 = qword_1006CE118;
    uint64_t v4 = unk_1006CE120;
    uint64_t v7 = qword_1006CE128;
    uint64_t v6 = qword_1006CE130;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    long long v8 = v3;
    uint64_t v9 = v5;
    uint64_t v10 = v4;
    uint64_t v11 = v7;
    uint64_t v12 = v6;
    char IsAlexandriaDemoModeEnabled = ICInternalSettingsIsAlexandriaDemoModeEnabled();
    char v14 = ICInternalSettingsIsAlexandriaDemoModeEnabled();
    char v15 = ICInternalSettingsIsAlexandriaDemoModeEnabled();
    __int16 v16 = 256;
    sub_10041B568(v2, (uint64_t)&v8);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10041B83C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_10040D944(a1, a2);
}

uint64_t destroy for CollaborationParticipantView(id *a1)
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for CollaborationParticipantView(uint64_t a1, uint64_t a2)
{
  long long v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(void **)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  id v5 = v3;
  swift_retain();
  swift_retain();
  id v6 = v4;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CollaborationParticipantView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_retain();
  swift_release();
  long long v8 = *(void **)(a2 + 32);
  uint64_t v9 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v8;
  id v10 = v8;

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for CollaborationParticipantView(uint64_t a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release();

  *(_OWORD *)(a1 + 32) = a2[2];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for CollaborationParticipantView()
{
  return &type metadata for CollaborationParticipantView;
}

uint64_t sub_10041BA50()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10041BA6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10002F214(&qword_1006A6E30);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_1006A6E38);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)id v5 = static VerticalAlignment.center.getter();
  *((void *)v5 + 1) = 0;
  v5[16] = 0;
  uint64_t v10 = sub_10002F214(&qword_1006A6E40);
  sub_10041BC08(v1, (uint64_t)&v5[*(int *)(v10 + 44)]);
  char v11 = static Edge.Set.vertical.getter();
  [self deviceIsMac];
  EdgeInsets.init(_all:)();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  sub_10002F034((uint64_t)v5, (uint64_t)v9, &qword_1006A6E30);
  uint64_t v20 = &v9[*(int *)(v7 + 44)];
  *uint64_t v20 = v11;
  *((void *)v20 + 1) = v13;
  *((void *)v20 + 2) = v15;
  *((void *)v20 + 3) = v17;
  *((void *)v20 + 4) = v19;
  v20[40] = 0;
  sub_10002B754((uint64_t)v5, &qword_1006A6E30);
  return sub_10002F1B0((uint64_t)v9, a1, &qword_1006A6E38);
}

uint64_t sub_10041BC08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v130 = a1;
  uint64_t v167 = a2;
  uint64_t v2 = type metadata accessor for Image.Scale();
  uint64_t v165 = *(void *)(v2 - 8);
  uint64_t v166 = v2;
  __chkstk_darwin(v2);
  id v163 = (char *)&v130 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for IconOnlyLabelStyle();
  uint64_t v161 = *(void *)(v4 - 8);
  uint64_t v162 = v4;
  __chkstk_darwin(v4);
  int64_t v160 = (char *)&v130 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = type metadata accessor for AnchorView();
  uint64_t v153 = *(void *)(v155 - 8);
  __chkstk_darwin(v155);
  uint64_t v150 = (char *)&v130 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10002F214(&qword_1006A6E48);
  uint64_t v148 = *(void *)(v7 - 8);
  uint64_t v149 = v7;
  __chkstk_darwin(v7);
  unint64_t v147 = (char *)&v130 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = sub_10002F214(&qword_1006A6E50);
  __chkstk_darwin(v152);
  uint64_t v154 = (uint64_t *)((char *)&v130 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_10002F214(&qword_1006A6E58);
  uint64_t v158 = *(void *)(v10 - 8);
  uint64_t v159 = v10;
  __chkstk_darwin(v10);
  uint64_t v157 = (char *)&v130 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_10002F214(&qword_1006A6E60);
  uint64_t v12 = __chkstk_darwin(v151);
  uint64_t v164 = (uint64_t)&v130 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v156 = (char *)&v130 - v15;
  __chkstk_darwin(v14);
  uint64_t v173 = (uint64_t)&v130 - v16;
  uint64_t v17 = sub_10002F214(&qword_1006A6E68);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v130 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = sub_10002F214(&qword_1006A6E70);
  __chkstk_darwin(v137);
  uint64_t v140 = (uint64_t)&v130 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_10002F214(&qword_1006A6E78);
  uint64_t v21 = __chkstk_darwin(v138);
  uint64_t v172 = (uint64_t)&v130 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v139 = (uint64_t)&v130 - v24;
  __chkstk_darwin(v23);
  uint64_t v177 = (uint64_t)&v130 - v25;
  uint64_t v26 = type metadata accessor for AvatarThumbnailView();
  uint64_t v135 = *(void *)(v26 - 8);
  uint64_t v136 = v26;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v130 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_10002F214(&qword_1006A6E80);
  uint64_t v170 = *(void *)(v29 - 8);
  uint64_t v171 = v29;
  uint64_t v30 = __chkstk_darwin(v29);
  uint64_t v176 = (char *)&v130 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v175 = (char *)&v130 - v32;
  uint64_t v33 = type metadata accessor for RoundedRectangle();
  uint64_t v34 = v33 - 8;
  __chkstk_darwin(v33);
  uint64_t v36 = (double *)((char *)&v130 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v37 = sub_10002F214(&qword_1006A6E88);
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v130 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_10002F214(&qword_1006A6E90);
  uint64_t v41 = __chkstk_darwin(v40);
  uint64_t v169 = (uint64_t)&v130 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v45 = (char *)&v130 - v44;
  __chkstk_darwin(v43);
  uint64_t v174 = (uint64_t)&v130 - v46;
  static ActivityStream.Layout.colorBarWidth.getter();
  double v48 = v47 * 0.5;
  uint64_t v49 = (char *)v36 + *(int *)(v34 + 28);
  uint64_t v50 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v51 = type metadata accessor for RoundedCornerStyle();
  uint64_t v52 = v50;
  uint64_t v53 = v130;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 104))(v49, v52, v51);
  *uint64_t v36 = v48;
  v36[1] = v48;
  if (*(void *)(v53 + 8))
  {
    uint64_t v54 = *(void *)(v53 + 8);
    uint64_t v168 = v54;
  }
  else
  {
    uint64_t v54 = static Color.quaternary.getter();
    uint64_t v168 = 0;
  }
  sub_100182D70((uint64_t)v36, (uint64_t)v39);
  *(void *)&v39[*(int *)(v37 + 52)] = v54;
  *(_WORD *)&v39[*(int *)(v37 + 56)] = 256;
  swift_retain();
  sub_100182DD4((uint64_t)v36);
  static ActivityStream.Layout.colorBarWidth.getter();
  static ActivityStream.Layout.avatarSize.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10002F034((uint64_t)v39, (uint64_t)v45, &qword_1006A6E88);
  uint64_t v55 = &v45[*(int *)(v40 + 36)];
  long long v56 = v180;
  *(_OWORD *)uint64_t v55 = v179;
  *((_OWORD *)v55 + 1) = v56;
  *((_OWORD *)v55 + 2) = v181;
  sub_10002B754((uint64_t)v39, &qword_1006A6E88);
  sub_10002F1B0((uint64_t)v45, v174, &qword_1006A6E90);
  static ActivityStream.Layout.colorBarSpacing.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v146 = v182;
  int v145 = v183;
  uint64_t v144 = v184;
  int v143 = v185;
  uint64_t v141 = v187;
  uint64_t v142 = v186;
  sub_10002F214(&qword_10069BA00);
  uint64_t v57 = swift_allocObject();
  *(_OWORD *)(v57 + 16) = xmmword_100529F20;
  uint64_t v58 = *(void **)v53;
  *(void *)(v57 + 32) = *(void *)v53;
  *(void *)&long long v194 = v57;
  specialized Array._endMutation()();
  uint64_t v59 = self;
  id v60 = v58;
  id v61 = [v59 sharedThumbnailService];
  AvatarThumbnailView.init(thumbnailService:participants:)();
  static ActivityStream.Layout.avatarSize.getter();
  sub_10041D438(&qword_1006A6E98, (void (*)(uint64_t))&type metadata accessor for AvatarThumbnailView);
  NSString v62 = v176;
  uint64_t v63 = v136;
  View.ic_frame(size:)();
  (*(void (**)(char *, uint64_t))(v135 + 8))(v28, v63);
  (*(void (**)(char *, char *, uint64_t))(v170 + 32))(v175, v62, v171);
  static ActivityStream.Layout.avatarSpacing.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v136 = v188;
  LODWORD(v135) = v189;
  uint64_t v134 = v190;
  int v133 = v191;
  uint64_t v131 = v193;
  uint64_t v132 = v192;
  *(void *)uint64_t v19 = static HorizontalAlignment.leading.getter();
  *((void *)v19 + 1) = 0;
  v19[16] = 1;
  uint64_t v64 = sub_10002F214(&qword_1006A6EA0);
  sub_10041CD70((void **)v53, (uint64_t)&v19[*(int *)(v64 + 44)]);
  char v65 = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v67 = v66;
  uint64_t v69 = v68;
  uint64_t v71 = v70;
  uint64_t v73 = v72;
  uint64_t v74 = v140;
  sub_10002F034((uint64_t)v19, v140, &qword_1006A6E68);
  uint64_t v75 = v74 + *(int *)(v137 + 36);
  *(unsigned char *)uint64_t v75 = v65;
  *(void *)(v75 + 8) = v67;
  *(void *)(v75 + 16) = v69;
  *(void *)(v75 + 24) = v71;
  *(void *)(v75 + 32) = v73;
  *(unsigned char *)(v75 + 40) = 0;
  sub_10002B754((uint64_t)v19, &qword_1006A6E68);
  static ActivityStream.Layout.avatarSize.getter();
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v76 = v139;
  sub_10002F034(v74, v139, &qword_1006A6E70);
  uint64_t v77 = (_OWORD *)(v76 + *(int *)(v138 + 36));
  long long v78 = v199;
  v77[4] = v198;
  v77[5] = v78;
  v77[6] = v200;
  long long v79 = v195;
  *uint64_t v77 = v194;
  v77[1] = v79;
  long long v80 = v197;
  v77[2] = v196;
  v77[3] = v80;
  sub_10002B754(v74, &qword_1006A6E70);
  sub_10002F1B0(v76, v177, &qword_1006A6E78);
  if ([self deviceIsMac]) {
    uint64_t v81 = 0x4028000000000000;
  }
  else {
    uint64_t v81 = 0x4010000000000000;
  }
  uint64_t v82 = static VerticalAlignment.center.getter();
  uint64_t v83 = (uint64_t)v154;
  *uint64_t v154 = v82;
  *(void *)(v83 + 8) = v81;
  *(unsigned char *)(v83 + 16) = 0;
  uint64_t v84 = v83 + *(int *)(sub_10002F214(&qword_1006A6EA8) + 44);
  long long v201 = *(_OWORD *)(v53 + 32);
  BOOL v85 = (void *)v201;
  sub_10002F1B0((uint64_t)&v201 + 8, (uint64_t)v202, &qword_1006A6EB0);
  int v86 = (_OWORD *)swift_allocObject();
  long long v87 = *(_OWORD *)(v53 + 16);
  v86[1] = *(_OWORD *)v53;
  v86[2] = v87;
  v86[3] = *(_OWORD *)(v53 + 32);
  swift_retain();
  id v88 = v60;
  swift_retain();
  id v89 = v85;
  sub_100183A1C((uint64_t)v202);
  sub_10002F214(&qword_1006A6EB8);
  sub_10041D398();
  uint64_t v90 = v147;
  Button.init(action:label:)();
  long long v178 = v201;
  sub_10002F214(&qword_1006A6EC8);
  State.wrappedValue.getter();
  uint64_t v91 = v150;
  AnchorView.init(view:)();
  uint64_t v92 = static Alignment.center.getter();
  uint64_t v94 = v93;
  uint64_t v95 = v84 + *(int *)(sub_10002F214(&qword_1006A6ED0) + 36);
  uint64_t v96 = v153;
  uint64_t v97 = v155;
  (*(void (**)(uint64_t, char *, uint64_t))(v153 + 16))(v95, v91, v155);
  uint64_t v98 = (uint64_t *)(v95 + *(int *)(sub_10002F214(&qword_1006A6ED8) + 36));
  *uint64_t v98 = v92;
  v98[1] = v94;
  uint64_t v100 = v148;
  uint64_t v99 = v149;
  (*(void (**)(uint64_t, char *, uint64_t))(v148 + 16))(v84, v90, v149);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v91, v97);
  (*(void (**)(char *, uint64_t))(v100 + 8))(v90, v99);
  uint64_t v101 = v160;
  IconOnlyLabelStyle.init()();
  sub_10001DFB0(&qword_1006A6EE0, &qword_1006A6E50);
  sub_10041D438(&qword_10069CCB8, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
  uint64_t v102 = v157;
  uint64_t v103 = v162;
  View.labelStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v161 + 8))(v101, v103);
  sub_10002B754(v83, &qword_1006A6E50);
  uint64_t v105 = v165;
  uint64_t v104 = v166;
  uint64_t v106 = v163;
  (*(void (**)(char *, void, uint64_t))(v165 + 104))(v163, enum case for Image.Scale.large(_:), v166);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v108 = (uint64_t)v156;
  unint64_t v109 = (uint64_t *)&v156[*(int *)(v151 + 36)];
  uint64_t v110 = sub_10002F214(&qword_10069CCC8);
  (*(void (**)(char *, char *, uint64_t))(v105 + 16))((char *)v109 + *(int *)(v110 + 28), v106, v104);
  *unint64_t v109 = KeyPath;
  uint64_t v112 = v158;
  uint64_t v111 = v159;
  (*(void (**)(uint64_t, char *, uint64_t))(v158 + 16))(v108, v102, v159);
  (*(void (**)(char *, uint64_t))(v105 + 8))(v106, v104);
  (*(void (**)(char *, uint64_t))(v112 + 8))(v102, v111);
  uint64_t v113 = v173;
  sub_10002F1B0(v108, v173, &qword_1006A6E60);
  uint64_t v114 = v169;
  sub_10002F034(v174, v169, &qword_1006A6E90);
  uint64_t v116 = v170;
  uint64_t v115 = v171;
  unint64_t v117 = *(void (**)(char *, char *, uint64_t))(v170 + 16);
  uint64_t v118 = v176;
  v117(v176, v175, v171);
  sub_10002F034(v177, v172, &qword_1006A6E78);
  uint64_t v119 = v164;
  sub_10002F034(v113, v164, &qword_1006A6E60);
  uint64_t v120 = v167;
  sub_10002F034(v114, v167, &qword_1006A6E90);
  uint64_t v121 = (int *)sub_10002F214(&qword_1006A6EE8);
  uint64_t v122 = v120 + v121[12];
  *(void *)uint64_t v122 = 0;
  *(unsigned char *)(v122 + 8) = 1;
  *(void *)(v122 + 16) = v146;
  *(unsigned char *)(v122 + 24) = v145;
  *(void *)(v122 + 32) = v144;
  *(unsigned char *)(v122 + 40) = v143;
  uint64_t v123 = v141;
  *(void *)(v122 + 48) = v142;
  *(void *)(v122 + 56) = v123;
  v117((char *)(v120 + v121[16]), v118, v115);
  uint64_t v124 = v120 + v121[20];
  *(void *)uint64_t v124 = 0;
  *(unsigned char *)(v124 + 8) = 1;
  *(void *)(v124 + 16) = v136;
  *(unsigned char *)(v124 + 24) = v135;
  *(void *)(v124 + 32) = v134;
  *(unsigned char *)(v124 + 40) = v133;
  uint64_t v125 = v131;
  *(void *)(v124 + 48) = v132;
  *(void *)(v124 + 56) = v125;
  uint64_t v126 = v172;
  sub_10002F034(v172, v120 + v121[24], &qword_1006A6E78);
  uint64_t v127 = v120 + v121[28];
  *(void *)uint64_t v127 = 0;
  *(unsigned char *)(v127 + 8) = 1;
  sub_10002F034(v119, v120 + v121[32], &qword_1006A6E60);
  sub_10002B754(v173, &qword_1006A6E60);
  sub_10002B754(v177, &qword_1006A6E78);
  uint64_t v128 = *(void (**)(char *, uint64_t))(v116 + 8);
  v128(v175, v115);
  sub_10002B754(v174, &qword_1006A6E90);
  sub_10002B754(v119, &qword_1006A6E60);
  sub_10002B754(v126, &qword_1006A6E78);
  v128(v176, v115);
  return sub_10002B754(v169, &qword_1006A6E90);
}

uint64_t sub_10041CD70@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = sub_10002F214(&qword_1006A6EF0);
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *a1;
  id v7 = [v6 ic_participantName];
  if (!v7)
  {
    id v7 = [v6 ic_emailAddress];
    if (!v7)
    {
      id v7 = [v6 ic_phoneNumber];
      if (!v7) {
        id v7 = [self ic_ellipsisCharacterString];
      }
    }
  }
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  uint64_t v33 = v8;
  uint64_t v34 = v10;
  sub_10017B588();
  uint64_t v11 = Text.init<A>(_:)();
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  static ActivityStream.Layout.primaryFont.getter();
  uint64_t v16 = Text.font(_:)();
  uint64_t v18 = v17;
  char v20 = v19;
  swift_release();
  sub_1001839EC(v11, v13, v15);
  swift_bridgeObjectRelease();
  static Color.primary.getter();
  uint64_t v21 = Text.foregroundColor(_:)();
  uint64_t v23 = v22;
  char v25 = v24;
  uint64_t v27 = v26;
  swift_release();
  v25 &= 1u;
  sub_1001839EC(v16, v18, v20 & 1);
  swift_bridgeObjectRelease();
  uint64_t v33 = v21;
  uint64_t v34 = v23;
  char v35 = v25;
  uint64_t v36 = v27;
  View.hyphenationFactor(_:)();
  sub_1001839EC(v21, v23, v25);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v30 + 32))(v32, v5, v31);
}

void sub_10041D000(uint64_t a1)
{
  uint64_t v1 = *(void (**)())(a1 + 16);
  sub_10002F214(&qword_1006A6EC8);
  State.wrappedValue.getter();
  v1();
}

uint64_t sub_10041D068@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10002F214(&qword_10069CD10);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10002F214(&qword_1006A6EB8);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [self mainBundle];
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v10 localizedStringForKey:v11 value:0 table:0];

  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  *(void *)&v21[0] = v13;
  *((void *)&v21[0] + 1) = v15;
  sub_10017B588();
  Label<>.init<A>(_:systemImage:)();
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v9, v5, v2);
  uint64_t v16 = &v9[*(int *)(v7 + 44)];
  long long v17 = v21[5];
  *((_OWORD *)v16 + 4) = v21[4];
  *((_OWORD *)v16 + 5) = v17;
  *((_OWORD *)v16 + 6) = v21[6];
  long long v18 = v21[1];
  *(_OWORD *)uint64_t v16 = v21[0];
  *((_OWORD *)v16 + 1) = v18;
  long long v19 = v21[3];
  *((_OWORD *)v16 + 2) = v21[2];
  *((_OWORD *)v16 + 3) = v19;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_10002F1B0((uint64_t)v9, a1, &qword_1006A6EB8);
}

uint64_t sub_10041D2FC@<X0>(uint64_t a1@<X8>)
{
  return sub_10041BA6C(a1);
}

uint64_t sub_10041D338()
{
  swift_release();
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_10041D390()
{
  sub_10041D000(v0 + 16);
}

unint64_t sub_10041D398()
{
  unint64_t result = qword_1006A6EC0;
  if (!qword_1006A6EC0)
  {
    sub_10001DFF4(&qword_1006A6EB8);
    sub_10001DFB0(&qword_10069CD20, &qword_10069CD10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A6EC0);
  }
  return result;
}

uint64_t sub_10041D438(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10041D48C()
{
  unint64_t result = qword_1006A6EF8;
  if (!qword_1006A6EF8)
  {
    sub_10001DFF4(&qword_1006A6E38);
    sub_10001DFB0((unint64_t *)&unk_1006A6F00, &qword_1006A6E30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A6EF8);
  }
  return result;
}

void sub_10041D530(void *a1)
{
  uint64_t v2 = type metadata accessor for ManagedEntityContextType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for AccountID.Authority();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  id v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v12 = (uint64_t *)((char *)v23 - v11);
  self;
  if (swift_dynamicCastObjCClass())
  {
    id v13 = a1;
    AccountID.Authority.init(_:)();
    (*(void (**)(char *, uint64_t *, uint64_t))(v7 + 16))(v10, v12, v6);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for ManagedEntityContextType.modern(_:), v2);
    AccountID.init(authority:contextType:)();
    (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v12, v6);
  }
  else
  {
    v23[3] = &OBJC_PROTOCOL___ICLegacyAccount;
    uint64_t v14 = swift_dynamicCastObjCProtocolConditional();
    if (v14)
    {
      uint64_t v15 = (void *)v14;
      id v16 = a1;
      if ([v15 isLocalAccount])
      {
        (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v12, enum case for AccountID.Authority.local(_:), v6);
        (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for ManagedEntityContextType.html(_:), v2);
        AccountID.init(authority:contextType:)();
      }
      else
      {
        id v17 = [self emailAddressForAccount:v15];
        uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v23[0] = v16;
        uint64_t v20 = v19;

        *id v12 = v18;
        v12[1] = v20;
        (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v12, enum case for AccountID.Authority.synced(_:), v6);
        (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for ManagedEntityContextType.html(_:), v2);
        AccountID.init(authority:contextType:)();
      }
    }
    else
    {
      v23[1] = 0;
      void v23[2] = (id)0xE000000000000000;
      _StringGuts.grow(_:)(62);
      v21._object = (void *)0x8000000100557350;
      v21._countAndFlagsBits = 0xD00000000000003CLL;
      String.append(_:)(v21);
      sub_10002F214(&qword_1006A6FF8);
      v22._countAndFlagsBits = _typeName(_:qualified:)();
      String.append(_:)(v22);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
}

uint64_t VisibleAccountsQuery.entities(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 24) = a1;
  *(void *)(v3 + 32) = a3;
  return _swift_task_switch(sub_10041D92C, 0, 0);
}

uint64_t sub_10041D92C()
{
  AppDependency.wrappedValue.getter();
  uint64_t v1 = v0[2];
  v0[5] = v1;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10069C4F0 + dword_10069C4F0);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[6] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100163BE4;
  uint64_t v3 = v0[3];
  return v5(v3, v1);
}

uint64_t VisibleAccountsQuery.suggestedEntities()(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 2040) = a3;
  *(void *)(v3 + 1808) = a2;
  *(void *)(v3 + 1800) = a1;
  uint64_t v4 = type metadata accessor for AccountEntity();
  *(void *)(v3 + 1816) = v4;
  *(void *)(v3 + 1824) = *(void *)(v4 - 8);
  *(void *)(v3 + 1832) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Logger();
  *(void *)(v3 + 1840) = v5;
  *(void *)(v3 + 1848) = *(void *)(v5 - 8);
  *(void *)(v3 + 1856) = swift_task_alloc();
  *(void *)(v3 + 1864) = swift_task_alloc();
  *(void *)(v3 + 1872) = swift_task_alloc();
  *(void *)(v3 + 1880) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for ManagedEntityContextType();
  *(void *)(v3 + 1888) = v6;
  *(void *)(v3 + 1896) = *(void *)(v6 - 8);
  *(void *)(v3 + 1904) = swift_task_alloc();
  return _swift_task_switch(sub_10041DB94, 0, 0);
}

uint64_t sub_10041DB94()
{
  uint64_t v1 = *(void *)(v0 + 1904);
  uint64_t v2 = *(void *)(v0 + 1896);
  uint64_t v3 = *(void *)(v0 + 1888);
  AppDependency.wrappedValue.getter();
  uint64_t v4 = *(void **)(v0 + 1464);
  *(void *)(v0 + 1912) = [v4 modernManagedObjectContext];

  AppDependency.wrappedValue.getter();
  uint64_t v5 = *(void **)(v0 + 1608);
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for ManagedEntityContextType.html(_:), v3);
  *(void *)(v0 + 1920) = ICUnifiedNoteContext.managedObjectContext(for:)();
  (*(void (**)(void, void))(*(void *)(v0 + 1896) + 8))(*(void *)(v0 + 1904), *(void *)(v0 + 1888));

  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "VisibleAccountsQuery: fetching suggested results", v8, 2u);
    swift_slowDealloc();
  }
  uint64_t v9 = *(void *)(v0 + 1880);
  uint64_t v10 = *(void *)(v0 + 1848);
  uint64_t v11 = *(void *)(v0 + 1840);
  char v12 = *(unsigned char *)(v0 + 2040);
  uint64_t v13 = *(void *)(v0 + 1808);

  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  *(void *)(v0 + 1928) = v14;
  *(void *)(v0 + 1936) = (v10 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v14(v9, v11);
  *(void *)(v0 + 1944) = sub_100421EC4(v13, v12);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 1952) = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_10041DEC8;
  return ICCoreDataIndexer.reloadSnapshot()();
}

uint64_t sub_10041DEC8(uint64_t a1)
{
  uint64_t v3 = (void *)*v1;
  uint64_t v4 = (void *)*v1;
  v3[245] = a1;
  swift_task_dealloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v3[246] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_10041E02C;
  uint64_t v6 = v3[226];
  v5[13] = a1;
  v5[14] = v6;
  return _swift_task_switch(sub_100421FB4, 0, 0);
}

uint64_t sub_10041E02C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 1976) = a1;
  *(void *)(v3 + 1984) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_10041E130, 0, 0);
}

uint64_t sub_10041E130()
{
  uint64_t v1 = v0[248];
  uint64_t v2 = v0[247];
  uint64_t v3 = (void *)v0[240];
  uint64_t v4 = (void *)v0[239];
  uint64_t v5 = (void *)swift_allocObject();
  v0[249] = v5;
  _OWORD v5[2] = v4;
  v5[3] = v2;
  void v5[4] = v1;
  id v6 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10001DFF4(&qword_1006A6F38);
  swift_asyncLet_begin();
  os_log_type_t v7 = (void *)swift_allocObject();
  v0[250] = v7;
  v7[2] = v3;
  v7[3] = v2;
  v7[4] = v1;
  id v8 = v3;
  swift_retain();
  swift_asyncLet_begin();
  return _swift_asyncLet_get_throwing(v0 + 82, v0 + 195, sub_10041E2B4, v0 + 162);
}

uint64_t sub_10041E2B4()
{
  v1[251] = v0;
  if (v0)
  {
    return _swift_asyncLet_finish(v1 + 2, v1 + 189, sub_10041ECD4, v1 + 214);
  }
  else
  {
    v1[252] = v1[195];
    swift_bridgeObjectRetain();
    return _swift_asyncLet_get_throwing(v1 + 2, v1 + 189, sub_10041E380, v1 + 202);
  }
}

uint64_t sub_10041E380()
{
  *(void *)(v1 + 2024) = v0;
  if (v0) {
    uint64_t v2 = sub_10041EE78;
  }
  else {
    uint64_t v2 = sub_10041E3B4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10041E3B4()
{
  uint64_t v64 = v0;
  uint64_t v63 = *(void **)(v0 + 2016);
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_10022C794(v1);
  uint64_t v2 = v63;
  *(void *)(v0 + 2032) = v63;
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 134217984;
    *(void *)(v0 + 1752) = v2[2];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "VisibleAccountsQuery: found %ld account(s)", v5, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  (*(void (**)(void, void))(v0 + 1928))(*(void *)(v0 + 1872), *(void *)(v0 + 1840));
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain_n();
  id v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  id v61 = v2;
  if (os_log_type_enabled(v6, v7))
  {
    id v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v62 = swift_slowAlloc();
    uint64_t v59 = v8;
    *(_DWORD *)id v8 = 136315138;
    int64_t v9 = v2[2];
    if (v9)
    {
      os_log_type_t v55 = v7;
      uint64_t v10 = *(void *)(v0 + 1824);
      uint64_t v63 = _swiftEmptyArrayStorage;
      sub_100169AAC(0, v9, 0);
      uint64_t v11 = (uint64_t)v2 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
      uint64_t v12 = *(void *)(v10 + 72);
      uint64_t v13 = _swiftEmptyArrayStorage;
      do
      {
        uint64_t v14 = *(void *)(v0 + 1832);
        sub_10015B884(v11, v14);
        uint64_t v15 = AccountID.description.getter();
        uint64_t v17 = v16;
        sub_10015B8E8(v14);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100169AAC(0, v13[2] + 1, 1);
          uint64_t v13 = v63;
        }
        unint64_t v19 = v13[2];
        unint64_t v18 = v13[3];
        if (v19 >= v18 >> 1)
        {
          sub_100169AAC(v18 > 1, v19 + 1, 1);
          uint64_t v13 = v63;
        }
        void v13[2] = v19 + 1;
        uint64_t v20 = &v13[2 * v19];
        v20[4] = v15;
        v20[5] = v17;
        v11 += v12;
        --v9;
      }
      while (v9);
      os_log_type_t v7 = v55;
    }
    char v24 = *(void (**)(uint64_t, uint64_t))(v0 + 1928);
    uint64_t v25 = *(void *)(v0 + 1864);
    uint64_t v26 = *(void *)(v0 + 1840);
    uint64_t v27 = Array.description.getter();
    unint64_t v29 = v28;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 1704) = sub_10045DA1C(v27, v29, &v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v2 = v61;
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "VisibleAccountsQuery: account IDs: %s", v59, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v24(v25, v26);
  }
  else
  {
    Swift::String v21 = *(void (**)(uint64_t, uint64_t))(v0 + 1928);
    uint64_t v22 = *(void *)(v0 + 1864);
    uint64_t v23 = *(void *)(v0 + 1840);
    swift_bridgeObjectRelease_n();

    v21(v22, v23);
  }
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain_n();
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v30, v31))
  {
    os_log_type_t v60 = v31;
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    uint64_t v62 = swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 136642819;
    int64_t v33 = v2[2];
    if (v33)
    {
      long long v56 = v32;
      uint64_t v57 = v30;
      uint64_t v34 = *(void *)(v0 + 1824);
      uint64_t v35 = *(void *)(v0 + 1816);
      uint64_t v63 = _swiftEmptyArrayStorage;
      sub_100169AAC(0, v33, 0);
      uint64_t v36 = (uint64_t)v2 + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
      uint64_t v37 = *(void *)(v34 + 72);
      uint64_t v38 = v63;
      do
      {
        uint64_t v39 = *(void *)(v0 + 1832);
        sub_10015B884(v36, v39);
        uint64_t v40 = (uint64_t *)(v39 + *(int *)(v35 + 24));
        uint64_t v41 = *v40;
        uint64_t v42 = v40[1];
        swift_bridgeObjectRetain();
        sub_10015B8E8(v39);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100169AAC(0, v38[2] + 1, 1);
          uint64_t v38 = v63;
        }
        unint64_t v44 = v38[2];
        unint64_t v43 = v38[3];
        if (v44 >= v43 >> 1)
        {
          sub_100169AAC(v43 > 1, v44 + 1, 1);
          uint64_t v38 = v63;
        }
        v38[2] = v44 + 1;
        uint64_t v45 = &v38[2 * v44];
        v45[4] = v41;
        v45[5] = v42;
        v36 += v37;
        --v33;
      }
      while (v33);
      uint64_t v32 = v56;
      uint64_t v30 = v57;
    }
    uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v0 + 1928);
    uint64_t v58 = *(void *)(v0 + 1856);
    uint64_t v50 = *(void *)(v0 + 1840);
    uint64_t v51 = Array.description.getter();
    unint64_t v53 = v52;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 1656) = sub_10045DA1C(v51, v53, &v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v30, v60, "VisibleAccountsQuery: account titles: %{sensitive}s", v32, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v49(v58, v50);
  }
  else
  {
    uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v0 + 1928);
    uint64_t v47 = *(void *)(v0 + 1856);
    uint64_t v48 = *(void *)(v0 + 1840);
    swift_bridgeObjectRelease_n();

    v46(v47, v48);
  }
  return _swift_asyncLet_finish(v0 + 16, v0 + 1512, sub_10041EB14, v0 + 1472);
}

uint64_t sub_10041EB14()
{
  return _swift_task_switch(sub_10041EB30, 0, 0);
}

uint64_t sub_10041EB30()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1560, sub_10041EBB0, v0 + 1520);
}

uint64_t sub_10041EBB0()
{
  return _swift_task_switch(sub_10041EBCC, 0, 0);
}

uint64_t sub_10041EBCC()
{
  uint64_t v1 = *(void **)(v0 + 1960);
  uint64_t v2 = *(void **)(v0 + 1944);
  uint64_t v3 = *(void **)(v0 + 1920);

  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v5 = *(void *)(v0 + 2032);
  return v4(v5);
}

uint64_t sub_10041ECD4()
{
  return _swift_task_switch(sub_10041ECF0, 0, 0);
}

uint64_t sub_10041ECF0()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1560, sub_10041ED70, v0 + 1760);
}

uint64_t sub_10041ED70()
{
  return _swift_task_switch(sub_10041ED8C, 0, 0);
}

uint64_t sub_10041ED8C()
{
  uint64_t v1 = *(void **)(v0 + 1960);
  uint64_t v2 = *(void **)(v0 + 1944);
  uint64_t v3 = *(void **)(v0 + 1920);

  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10041EE78()
{
  swift_bridgeObjectRelease();
  return _swift_asyncLet_finish(v0 + 16, v0 + 1512, sub_10041EEF8, v0 + 1664);
}

uint64_t sub_10041EEF8()
{
  return _swift_task_switch(sub_10041EF14, 0, 0);
}

uint64_t sub_10041EF14()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1560, sub_10041EF94, v0 + 1568);
}

uint64_t sub_10041EF94()
{
  return _swift_task_switch(sub_10041EFB0, 0, 0);
}

uint64_t sub_10041EFB0()
{
  uint64_t v1 = *(void **)(v0 + 1960);
  uint64_t v2 = *(void **)(v0 + 1944);
  uint64_t v3 = *(void **)(v0 + 1920);

  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10041F09C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  _OWORD v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(sub_10041F0C0, 0, 0);
}

uint64_t sub_10041F0C0()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v3 = (void *)v0[3];
  os_log_type_t v4 = (void *)swift_allocObject();
  v0[6] = v4;
  _OWORD v4[2] = v1;
  v4[3] = v2;
  v4[4] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v5 = v3;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[7] = v6;
  uint64_t v7 = sub_10002F214(&qword_1006A6F38);
  void *v6 = v0;
  v6[1] = sub_100299E68;
  uint64_t v8 = v0[2];
  return NSManagedObjectContext.perform<A>(_:)(v8, sub_10042413C, v4, v7);
}

void sub_10041F1D4(uint64_t a1@<X0>, void *a2@<X2>, void *a3@<X8>)
{
  id v6 = a2;
  uint64_t v7 = sub_100421350(a1, v6);

  if (!v3) {
    *a3 = v7;
  }
}

uint64_t sub_10041F234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  _OWORD v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(sub_10041F258, 0, 0);
}

uint64_t sub_10041F258()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v3 = (void *)v0[3];
  os_log_type_t v4 = (void *)swift_allocObject();
  v0[6] = v4;
  _OWORD v4[2] = v1;
  v4[3] = v2;
  v4[4] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v5 = v3;
  id v6 = (void *)swift_task_alloc();
  v0[7] = v6;
  uint64_t v7 = sub_10002F214(&qword_1006A6F38);
  void *v6 = v0;
  v6[1] = sub_100299B98;
  uint64_t v8 = v0[2];
  return NSManagedObjectContext.perform<A>(_:)(v8, sub_1004240D0, v4, v7);
}

void sub_10041F36C(uint64_t a1@<X1>, void *a2@<X2>, void *a3@<X8>)
{
  id v6 = a2;
  uint64_t v7 = sub_100421350(a1, v6);

  if (!v3) {
    *a3 = v7;
  }
}

void sub_10041F3CC(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id v4 = [a1 objectWithID:a2];
  self;
  id v5 = (void *)swift_dynamicCastObjCClassUnconditional();
  id v6 = [v5 parent];

  if (v6)
  {

    id v7 = 0;
  }
  else
  {
    id v8 = [v5 account];
    id v7 = [v8 objectID];
  }
  *a3 = v7;
}

void sub_10041F4B4(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id v4 = [a1 objectWithID:a2];
  id v5 = (void *)swift_dynamicCastObjCProtocolUnconditional();
  id v6 = [v5 parentFolder];
  swift_unknownObjectRelease();
  if (v6 || (id v8 = [v5 account]) == 0)
  {

    id v7 = 0;
  }
  else
  {
    id v7 = [v8 objectID];

    swift_unknownObjectRelease();
  }
  *a3 = v7;
}

uint64_t sub_10041F5A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = _s11MobileNotes20VisibleAccountsQueryVACycfC_0();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  return result;
}

uint64_t sub_10041F5D4(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return _swift_task_switch(sub_10041D92C, 0, 0);
}

uint64_t sub_10041F5F8(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = *(void *)(v1 + 8);
  char v5 = *(unsigned char *)(v1 + 16);
  id v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v6;
  void *v6 = v2;
  v6[1] = sub_10016F18C;
  return VisibleAccountsQuery.suggestedEntities()(v3, v4, v5);
}

uint64_t sub_10041F6A4(uint64_t a1, uint64_t a2)
{
  char v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1002EA1DC();
  *char v5 = v2;
  v5[1] = sub_100161724;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t VisibleAccountsQuery.entities(matching:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 2104) = a5;
  *(void *)(v5 + 1864) = a4;
  *(void *)(v5 + 1856) = a3;
  *(void *)(v5 + 1848) = a2;
  *(void *)(v5 + 1840) = a1;
  uint64_t v6 = type metadata accessor for AccountEntity();
  *(void *)(v5 + 1872) = v6;
  *(void *)(v5 + 1880) = *(void *)(v6 - 8);
  *(void *)(v5 + 1888) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for AccountID();
  *(void *)(v5 + 1896) = v7;
  *(void *)(v5 + 1904) = *(void *)(v7 - 8);
  *(void *)(v5 + 1912) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Logger();
  *(void *)(v5 + 1920) = v8;
  *(void *)(v5 + 1928) = *(void *)(v8 - 8);
  *(void *)(v5 + 1936) = swift_task_alloc();
  *(void *)(v5 + 1944) = swift_task_alloc();
  *(void *)(v5 + 1952) = swift_task_alloc();
  *(void *)(v5 + 1960) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for ManagedEntityContextType();
  *(void *)(v5 + 1968) = v9;
  *(void *)(v5 + 1976) = *(void *)(v9 - 8);
  *(void *)(v5 + 1984) = swift_task_alloc();
  return _swift_task_switch(sub_10041F964, 0, 0);
}

uint64_t sub_10041F964()
{
  uint64_t v19 = v0;
  uint64_t v1 = *(void *)(v0 + 1984);
  uint64_t v2 = *(void *)(v0 + 1976);
  uint64_t v3 = *(void *)(v0 + 1968);
  AppDependency.wrappedValue.getter();
  uint64_t v4 = *(void **)(v0 + 1576);
  *(void *)(v0 + 1992) = [v4 modernManagedObjectContext];

  AppDependency.wrappedValue.getter();
  uint64_t v5 = *(void **)(v0 + 1720);
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for ManagedEntityContextType.html(_:), v3);
  *(void *)(v0 + 2000) = ICUnifiedNoteContext.managedObjectContext(for:)();
  (*(void (**)(void, void))(*(void *)(v0 + 1976) + 8))(*(void *)(v0 + 1984), *(void *)(v0 + 1968));

  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain_n();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.info.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = *(void *)(v0 + 1960);
  uint64_t v10 = *(void *)(v0 + 1928);
  uint64_t v11 = *(void *)(v0 + 1920);
  unint64_t v12 = *(void *)(v0 + 1848);
  if (v8)
  {
    uint64_t v16 = *(void *)(v0 + 1840);
    os_log_t log = v6;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136642819;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 1832) = sub_10045DA1C(v16, v12, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, log, v7, "VisibleAccountsQuery: performing with query string '%{sensitive}s'", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }
  *(void *)(v0 + 2008) = sub_100421EC4(*(void *)(v0 + 1864), *(unsigned char *)(v0 + 2104));
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 2016) = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_10041FD6C;
  return ICCoreDataIndexer.reloadSnapshot()();
}

uint64_t sub_10041FD6C(uint64_t a1)
{
  uint64_t v3 = (void *)*v1;
  uint64_t v4 = (void *)*v1;
  v3[253] = a1;
  swift_task_dealloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v3[254] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_10041FED0;
  uint64_t v6 = v3[233];
  v5[13] = a1;
  v5[14] = v6;
  return _swift_task_switch(sub_100421FB4, 0, 0);
}

uint64_t sub_10041FED0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 2040) = a1;
  *(void *)(v3 + 2048) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_10041FFD4, 0, 0);
}

uint64_t sub_10041FFD4()
{
  uint64_t v1 = *(void *)(v0 + 2048);
  uint64_t v2 = *(void *)(v0 + 2040);
  uint64_t v3 = *(void **)(v0 + 2000);
  uint64_t v4 = *(void **)(v0 + 1992);
  char v5 = *(unsigned char *)(v0 + 2104);
  uint64_t v6 = *(void *)(v0 + 1864);
  uint64_t v7 = *(void *)(v0 + 1856);
  uint64_t v8 = swift_allocObject();
  *(void *)(v0 + 2056) = v8;
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v6;
  *(unsigned char *)(v8 + 32) = v5;
  *(void *)(v8 + 40) = v2;
  *(void *)(v8 + 48) = v1;
  *(void *)(v8 + 56) = v4;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v9 = v4;
  swift_retain();
  sub_10001DFF4(&qword_1006A6F68);
  swift_asyncLet_begin();
  uint64_t v10 = swift_allocObject();
  *(void *)(v0 + 2064) = v10;
  *(void *)(v10 + 16) = v7;
  *(void *)(v10 + 24) = v6;
  *(unsigned char *)(v10 + 32) = v5;
  *(void *)(v10 + 40) = v2;
  *(void *)(v10 + 48) = v1;
  *(void *)(v10 + 56) = v3;
  swift_retain();
  swift_retain();
  id v11 = v3;
  swift_retain();
  swift_asyncLet_begin();
  return _swift_asyncLet_get_throwing(v0 + 656, v0 + 1672, sub_10042019C, v0 + 1296);
}

uint64_t sub_10042019C()
{
  v1[259] = v0;
  if (v0)
  {
    return _swift_asyncLet_finish(v1 + 2, v1 + 203, sub_100420D5C, v1 + 216);
  }
  else
  {
    v1[260] = v1[209];
    swift_bridgeObjectRetain();
    return _swift_asyncLet_get_throwing(v1 + 2, v1 + 203, sub_100420268, v1 + 210);
  }
}

uint64_t sub_100420268()
{
  *(void *)(v1 + 2088) = v0;
  if (v0) {
    uint64_t v2 = sub_100420F14;
  }
  else {
    uint64_t v2 = sub_10042029C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10042029C()
{
  uint64_t v77 = v0;
  uint64_t v1 = v0[260];
  uint64_t v2 = v0[231];
  uint64_t v3 = v0[230];
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1001769C4(v4, v1);
  swift_bridgeObjectRetain();
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_1004217CC(v6, v3, v2);
  swift_bridgeObjectRelease();
  v0[191] = v7;
  if (*(void *)(v7 + 16) >= 2uLL
    && (uint64_t v8 = v0[231],
        uint64_t v9 = v0[230],
        swift_bridgeObjectRetain(),
        uint64_t v10 = sub_100421B48(v5, v9, v8),
        swift_bridgeObjectRelease(),
        *(void *)(v10 + 16) == 1))
  {
    swift_bridgeObjectRelease();
    v0[191] = v10;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = v7;
  }
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  id v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 134349056;
    v0[228] = *(void *)(v10 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "VisibleAccountsQuery: found %{public}ld matching account(s)", v13, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = v0 + 203;

  uint64_t v15 = *(void (**)(void, void))(v0[241] + 8);
  v15(v0[244], v0[240]);
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  uint64_t v16 = v0[191];
  swift_bridgeObjectRetain_n();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    os_log_type_t v62 = v18;
    os_log_t log = v17;
    uint64_t v65 = v15;
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v75 = swift_slowAlloc();
    uint64_t v63 = v19;
    *(_DWORD *)uint64_t v19 = 136446210;
    int64_t v20 = *(void *)(v16 + 16);
    if (v20)
    {
      uint64_t v21 = v0[238];
      uint64_t v22 = v0[235];
      uint64_t v76 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_100169E8C(0, v20, 0);
      uint64_t v23 = v16 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
      os_log_t v72 = *(os_log_t *)(v22 + 72);
      char v24 = _swiftEmptyArrayStorage;
      do
      {
        uint64_t v25 = v0[239];
        uint64_t v26 = v0[237];
        uint64_t v27 = v0[236];
        sub_10015B884(v23, v27);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v25, v27, v26);
        sub_10015B8E8(v27);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100169E8C(0, v24[2] + 1, 1);
          char v24 = v76;
        }
        unint64_t v29 = v24[2];
        unint64_t v28 = v24[3];
        if (v29 >= v28 >> 1)
        {
          sub_100169E8C(v28 > 1, v29 + 1, 1);
          char v24 = v76;
        }
        uint64_t v30 = v0[239];
        uint64_t v31 = v0[237];
        void v24[2] = v29 + 1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v21 + 32))((unint64_t)v24+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(void *)(v21 + 72) * v29, v30, v31);
        uint64_t v76 = v24;
        v23 += (uint64_t)v72;
        --v20;
      }
      while (v20);
      swift_bridgeObjectRelease();
    }
    os_log_t v73 = (os_log_t)v0[243];
    uint64_t v34 = v0[240];
    uint64_t v35 = Array.description.getter();
    unint64_t v37 = v36;
    swift_bridgeObjectRelease();
    v0[227] = sub_10045DA1C(v35, v37, &v75);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, log, v62, "VisibleAccountsQuery: matching account IDs: %{public}s", v63, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v38 = v34;
    uint64_t v15 = v65;
    v65(v73, v38);
    uint64_t v14 = v0 + 203;
  }
  else
  {
    uint64_t v32 = v0[243];
    uint64_t v33 = v0[240];
    swift_bridgeObjectRelease_n();

    v15(v32, v33);
  }
  swift_retain();
  swift_retain();
  AppDependency.wrappedValue.getter();
  Logger.init(subsystem:category:)();
  swift_release();
  swift_release();
  uint64_t v39 = v0[191];
  swift_bridgeObjectRetain_n();
  uint64_t v40 = Logger.logObject.getter();
  os_log_type_t v41 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v40, v41))
  {
    os_log_type_t v70 = v41;
    uint64_t v74 = v40;
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    uint64_t v75 = swift_slowAlloc();
    uint64_t v71 = v42;
    *(_DWORD *)uint64_t v42 = 136642819;
    int64_t v43 = *(void *)(v39 + 16);
    if (v43)
    {
      uint64_t v66 = v15;
      uint64_t v68 = v14;
      uint64_t v44 = v0[235];
      uint64_t v45 = v0[234];
      uint64_t v76 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_100169AAC(0, v43, 0);
      uint64_t v46 = v39 + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80));
      uint64_t v47 = *(void *)(v44 + 72);
      uint64_t v48 = v76;
      do
      {
        uint64_t v49 = v0[236];
        sub_10015B884(v46, v49);
        uint64_t v50 = (uint64_t *)(v49 + *(int *)(v45 + 24));
        uint64_t v51 = *v50;
        uint64_t v52 = v50[1];
        swift_bridgeObjectRetain();
        sub_10015B8E8(v49);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100169AAC(0, v48[2] + 1, 1);
          uint64_t v48 = v76;
        }
        unint64_t v54 = v48[2];
        unint64_t v53 = v48[3];
        if (v54 >= v53 >> 1)
        {
          sub_100169AAC(v53 > 1, v54 + 1, 1);
          uint64_t v48 = v76;
        }
        _OWORD v48[2] = v54 + 1;
        os_log_type_t v55 = &v48[2 * v54];
        v55[4] = v51;
        v55[5] = v52;
        v46 += v47;
        --v43;
      }
      while (v43);
      swift_bridgeObjectRelease();
      uint64_t v14 = v68;
      uint64_t v15 = v66;
    }
    uint64_t v69 = v0[242];
    uint64_t v67 = v0[240];
    uint64_t v58 = Array.description.getter();
    unint64_t v60 = v59;
    swift_bridgeObjectRelease();
    v0[221] = sub_10045DA1C(v58, v60, &v75);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v74, v70, "VisibleAccountsQuery: matching account titles: %{sensitive}s", v71, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v15(v69, v67);
  }
  else
  {
    uint64_t v56 = v0[242];
    uint64_t v57 = v0[240];
    swift_bridgeObjectRelease_n();

    v15(v56, v57);
  }
  swift_beginAccess();
  v0[262] = v0[191];
  return _swift_asyncLet_finish(v0 + 2, v14, sub_100420B8C, v0 + 186);
}

uint64_t sub_100420B8C()
{
  return _swift_task_switch(sub_100420BA8, 0, 0);
}

uint64_t sub_100420BA8()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1672, sub_100420C28, v0 + 1536);
}

uint64_t sub_100420C28()
{
  return _swift_task_switch(sub_100420C44, 0, 0);
}

uint64_t sub_100420C44()
{
  uint64_t v1 = *(void **)(v0 + 2024);
  uint64_t v2 = *(void **)(v0 + 2008);
  uint64_t v3 = *(void **)(v0 + 2000);

  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v5 = *(void *)(v0 + 2096);
  return v4(v5);
}

uint64_t sub_100420D5C()
{
  return _swift_task_switch(sub_100420D78, 0, 0);
}

uint64_t sub_100420D78()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1672, sub_100420DF8, v0 + 1776);
}

uint64_t sub_100420DF8()
{
  return _swift_task_switch(sub_100420E14, 0, 0);
}

uint64_t sub_100420E14()
{
  uint64_t v1 = *(void **)(v0 + 2024);
  uint64_t v2 = *(void **)(v0 + 2008);
  uint64_t v3 = *(void **)(v0 + 2000);

  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100420F14()
{
  swift_bridgeObjectRelease();
  return _swift_asyncLet_finish(v0 + 16, v0 + 1624, sub_100420F94, v0 + 1584);
}

uint64_t sub_100420F94()
{
  return _swift_task_switch(sub_100420FB0, 0, 0);
}

uint64_t sub_100420FB0()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1672, sub_100421030, v0 + 1632);
}

uint64_t sub_100421030()
{
  return _swift_task_switch(sub_10042104C, 0, 0);
}

uint64_t sub_10042104C()
{
  uint64_t v1 = *(void **)(v0 + 2024);
  uint64_t v2 = *(void **)(v0 + 2008);
  uint64_t v3 = *(void **)(v0 + 2000);

  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10042114C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 16) = a1;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v7 + 24) = v10;
  *uint64_t v10 = v7;
  v10[1] = sub_100175F50;
  return sub_1004234EC(a5, a7);
}

uint64_t sub_1004211EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 16) = a1;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v7 + 24) = v10;
  *uint64_t v10 = v7;
  v10[1] = sub_100175D64;
  return sub_1004234EC(a6, a7);
}

uint64_t sub_10042128C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v7 = *(void *)v3;
  uint64_t v8 = *(void *)(v3 + 8);
  char v9 = *(unsigned char *)(v3 + 16);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v10;
  *uint64_t v10 = v4;
  v10[1] = sub_10016997C;
  return VisibleAccountsQuery.entities(matching:)(a2, a3, v7, v8, v9);
}

void *sub_100421350(uint64_t a1, void *a2)
{
  id v50 = a2;
  uint64_t v3 = type metadata accessor for AccountEntity();
  uint64_t v48 = *(void *)(v3 - 8);
  uint64_t v49 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v51 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0) {
    uint64_t v6 = __CocoaSet.count.getter();
  }
  else {
    uint64_t v6 = *(void *)(a1 + 16);
  }
  uint64_t result = _swiftEmptyArrayStorage;
  if (v6)
  {
    unint64_t v54 = _swiftEmptyArrayStorage;
    sub_100169E6C(0, v6 & ~(v6 >> 63), 0);
    if (v51)
    {
      uint64_t v8 = __CocoaSet.startIndex.getter();
      unsigned __int8 v10 = 1;
    }
    else
    {
      uint64_t v8 = sub_1002AEEF8(a1);
      unsigned __int8 v10 = v11 & 1;
    }
    uint64_t v56 = v8;
    uint64_t v57 = v9;
    unsigned __int8 v58 = v10;
    if ((v6 & 0x8000000000000000) == 0)
    {
      uint64_t v12 = a1 & 0xFFFFFFFFFFFFFF8;
      if (a1 < 0) {
        uint64_t v12 = a1;
      }
      v46[2] = v12;
      uint64_t v47 = a1;
      while (v6)
      {
        uint64_t v19 = v56;
        uint64_t v18 = v57;
        uint64_t v20 = v58;
        sub_1002AF09C(v56, v57, v58, a1);
        uint64_t v22 = v21;
        v55[0] = 0;
        id v23 = [v50 existingObjectWithID:v21 error:v55];
        id v24 = v55[0];
        if (!v23)
        {
          id v44 = v55[0];
          uint64_t v45 = _convertNSErrorToError(_:)();

          v46[1] = v45;
          swift_willThrow();

          sub_10002DA18(v19, v18, v20);
          return (void *)swift_release();
        }
        uint64_t v25 = v23;
        uint64_t v52 = v6;
        uint64_t v53 = v18;
        v55[4] = &OBJC_PROTOCOL___ICAccountObject;
        uint64_t v26 = (void *)swift_dynamicCastObjCProtocolUnconditional();
        id v27 = v24;
        unint64_t v28 = v5;
        sub_10041D530(v26);
        id v29 = [v26 localizedName];
        if (v29)
        {
          uint64_t v30 = v29;
          uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v33 = v32;
        }
        else
        {
          uint64_t v31 = 0;
          unint64_t v33 = 0xE000000000000000;
        }
        uint64_t v34 = (uint64_t *)&v28[*(int *)(v49 + 24)];
        *uint64_t v34 = v31;
        v34[1] = v33;
        id v35 = [v26 objectID];
        id v36 = [v35 URIRepresentation];

        uint64_t v5 = v28;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        unint64_t v37 = v54;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100169E6C(0, v37[2] + 1, 1);
          unint64_t v37 = v54;
        }
        a1 = v47;
        uint64_t v38 = v53;
        unint64_t v40 = v37[2];
        unint64_t v39 = v37[3];
        if (v40 >= v39 >> 1)
        {
          sub_100169E6C(v39 > 1, v40 + 1, 1);
          unint64_t v37 = v54;
        }
        _OWORD v37[2] = v40 + 1;
        sub_1002E86C4((uint64_t)v5, (uint64_t)v37+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(void *)(v48 + 72) * v40);
        if (v51)
        {
          if ((v20 & 1) == 0) {
            goto LABEL_33;
          }
          uint64_t v41 = __CocoaSet.Index.handleBitPattern.getter();
          uint64_t v42 = v52;
          if (v41) {
            swift_isUniquelyReferenced_nonNull_native();
          }
          sub_10002F214(&qword_1006A6FF0);
          int64_t v43 = (void (*)(id *, void))Set.Index._asCocoa.modify();
          __CocoaSet.formIndex(after:isUnique:)();
          v43(v55, 0);
          uint64_t v6 = v42 - 1;
          if (!v6)
          {
LABEL_29:
            sub_10002DA18(v56, v57, v58);
            return v54;
          }
        }
        else
        {
          uint64_t v13 = sub_10048F4F4(v19, v38, v20, a1);
          uint64_t v15 = v14;
          char v17 = v16;
          sub_10002DA18(v19, v38, v20);
          uint64_t v56 = v13;
          uint64_t v57 = v15;
          unsigned __int8 v58 = v17 & 1;
          uint64_t v6 = v52 - 1;
          if (v52 == 1) {
            goto LABEL_29;
          }
        }
      }
      __break(1u);
    }
    __break(1u);
LABEL_33:
    __break(1u);
  }
  return result;
}

uint64_t sub_1004217CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v41 = a2;
  uint64_t v42 = a3;
  uint64_t v40 = type metadata accessor for AccountEntity();
  uint64_t v4 = *(void *)(v40 - 8);
  uint64_t v5 = __chkstk_darwin(v40);
  uint64_t v36 = (uint64_t)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v34 - v8;
  uint64_t result = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v34 - v11;
  int64_t v13 = 0;
  uint64_t v14 = a1;
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v38 = a1 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v37 = _swiftEmptyArrayStorage;
  uint64_t v47 = _swiftEmptyArrayStorage;
  unint64_t v18 = v17 & v15;
  int64_t v39 = (unint64_t)(v16 + 63) >> 6;
  if ((v17 & v15) == 0) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  for (unint64_t i = v19 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v26)) + (v13 << 6))
  {
    uint64_t v21 = *(void *)(v4 + 72);
    sub_10015B884(*(void *)(v14 + 48) + v21 * i, (uint64_t)v9);
    sub_1002E86C4((uint64_t)v9, (uint64_t)v12);
    uint64_t v22 = &v12[*(int *)(v40 + 24)];
    uint64_t v24 = *(void *)v22;
    uint64_t v23 = *((void *)v22 + 1);
    uint64_t v45 = v24;
    uint64_t v46 = v23;
    uint64_t v43 = v41;
    uint64_t v44 = v42;
    sub_10017B588();
    if (StringProtocol.localizedStandardContains<A>(_:)())
    {
      sub_1002E86C4((uint64_t)v12, v36);
      unint64_t v28 = v37;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_100169E6C(0, v28[2] + 1, 1);
      }
      id v29 = v47;
      unint64_t v31 = v47[2];
      unint64_t v30 = v47[3];
      unint64_t v32 = (void *)(v31 + 1);
      if (v31 >= v30 >> 1)
      {
        unint64_t v37 = (void *)(v31 + 1);
        unint64_t v35 = v31;
        sub_100169E6C(v30 > 1, v31 + 1, 1);
        unint64_t v32 = v37;
        unint64_t v31 = v35;
        id v29 = v47;
      }
      _OWORD v29[2] = v32;
      uint64_t v33 = *(unsigned __int8 *)(v4 + 80);
      unint64_t v37 = v29;
      uint64_t result = sub_1002E86C4(v36, (uint64_t)v29 + ((v33 + 32) & ~v33) + v31 * v21);
      if (v18) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t result = sub_10015B8E8((uint64_t)v12);
      if (v18) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v25 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v25 >= v39) {
      goto LABEL_29;
    }
    unint64_t v26 = *(void *)(v38 + 8 * v25);
    ++v13;
    if (!v26)
    {
      int64_t v13 = v25 + 1;
      if (v25 + 1 >= v39) {
        goto LABEL_29;
      }
      unint64_t v26 = *(void *)(v38 + 8 * v13);
      if (!v26)
      {
        int64_t v13 = v25 + 2;
        if (v25 + 2 >= v39) {
          goto LABEL_29;
        }
        unint64_t v26 = *(void *)(v38 + 8 * v13);
        if (!v26)
        {
          int64_t v13 = v25 + 3;
          if (v25 + 3 >= v39) {
            goto LABEL_29;
          }
          unint64_t v26 = *(void *)(v38 + 8 * v13);
          if (!v26) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v18 = (v26 - 1) & v26;
  }
  int64_t v27 = v25 + 4;
  if (v27 >= v39)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v37;
  }
  unint64_t v26 = *(void *)(v38 + 8 * v27);
  if (v26)
  {
    int64_t v13 = v27;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v13 >= v39) {
      goto LABEL_29;
    }
    unint64_t v26 = *(void *)(v38 + 8 * v13);
    ++v27;
    if (v26) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_100421B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v41 = a2;
  uint64_t v42 = a3;
  uint64_t v40 = type metadata accessor for AccountEntity();
  uint64_t v4 = *(void *)(v40 - 8);
  uint64_t v5 = __chkstk_darwin(v40);
  uint64_t v36 = (uint64_t)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v34 - v8;
  uint64_t result = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v34 - v11;
  int64_t v13 = 0;
  uint64_t v14 = a1;
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v38 = a1 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v37 = _swiftEmptyArrayStorage;
  uint64_t v47 = _swiftEmptyArrayStorage;
  unint64_t v18 = v17 & v15;
  int64_t v39 = (unint64_t)(v16 + 63) >> 6;
  if ((v17 & v15) == 0) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  for (unint64_t i = v19 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v26)) + (v13 << 6))
  {
    uint64_t v21 = *(void *)(v4 + 72);
    sub_10015B884(*(void *)(v14 + 48) + v21 * i, (uint64_t)v9);
    sub_1002E86C4((uint64_t)v9, (uint64_t)v12);
    uint64_t v22 = &v12[*(int *)(v40 + 24)];
    uint64_t v24 = *(void *)v22;
    uint64_t v23 = *((void *)v22 + 1);
    uint64_t v45 = v24;
    uint64_t v46 = v23;
    uint64_t v43 = v41;
    uint64_t v44 = v42;
    sub_10017B588();
    if (StringProtocol.localizedStandardCompare<A>(_:)())
    {
      uint64_t result = sub_10015B8E8((uint64_t)v12);
      if (v18) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_1002E86C4((uint64_t)v12, v36);
      unint64_t v28 = v37;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_100169E6C(0, v28[2] + 1, 1);
      }
      id v29 = v47;
      unint64_t v31 = v47[2];
      unint64_t v30 = v47[3];
      unint64_t v32 = (void *)(v31 + 1);
      if (v31 >= v30 >> 1)
      {
        unint64_t v37 = (void *)(v31 + 1);
        unint64_t v35 = v31;
        sub_100169E6C(v30 > 1, v31 + 1, 1);
        unint64_t v32 = v37;
        unint64_t v31 = v35;
        id v29 = v47;
      }
      _OWORD v29[2] = v32;
      uint64_t v33 = *(unsigned __int8 *)(v4 + 80);
      unint64_t v37 = v29;
      uint64_t result = sub_1002E86C4(v36, (uint64_t)v29 + ((v33 + 32) & ~v33) + v31 * v21);
      if (v18) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v25 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v25 >= v39) {
      goto LABEL_29;
    }
    unint64_t v26 = *(void *)(v38 + 8 * v25);
    ++v13;
    if (!v26)
    {
      int64_t v13 = v25 + 1;
      if (v25 + 1 >= v39) {
        goto LABEL_29;
      }
      unint64_t v26 = *(void *)(v38 + 8 * v13);
      if (!v26)
      {
        int64_t v13 = v25 + 2;
        if (v25 + 2 >= v39) {
          goto LABEL_29;
        }
        unint64_t v26 = *(void *)(v38 + 8 * v13);
        if (!v26)
        {
          int64_t v13 = v25 + 3;
          if (v25 + 3 >= v39) {
            goto LABEL_29;
          }
          unint64_t v26 = *(void *)(v38 + 8 * v13);
          if (!v26) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v18 = (v26 - 1) & v26;
  }
  int64_t v27 = v25 + 4;
  if (v27 >= v39)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v37;
  }
  unint64_t v26 = *(void *)(v38 + 8 * v27);
  if (v26)
  {
    int64_t v13 = v27;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v13 >= v39) {
      goto LABEL_29;
    }
    unint64_t v26 = *(void *)(v38 + 8 * v13);
    ++v27;
    if (v26) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

void *sub_100421EC4(uint64_t a1, char a2)
{
  AppDependency.wrappedValue.getter();
  uint64_t v4 = v6;
  sub_100031418(0, &qword_10069C808);
  static ICUnifiedNoteContext.$prefersViewContext.getter();
  swift_task_localValuePush();
  sub_1001775DC(v6, 0, 0, a2, 0, &v6);
  swift_task_localValuePop();

  if (v2) {
    return (void *)swift_release();
  }
  swift_release();
  return v6;
}

uint64_t sub_100421F94(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  return _swift_task_switch(sub_100421FB4, 0, 0);
}

uint64_t sub_100421FB4()
{
  uint64_t v38 = v0;
  uint64_t v1 = v0 + 7;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
  {
    if (_CocoaArrayWrapper.endIndex.getter())
    {
      sub_100157AB0((unint64_t)_swiftEmptyArrayStorage);
      uint64_t v2 = v35;
    }
    else
    {
      uint64_t v2 = &_swiftEmptySetSingleton;
    }
    void *v1 = v2;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
    {
      uint64_t v3 = v0 + 7;
      sub_100157AB0((unint64_t)_swiftEmptyArrayStorage);
      uint64_t v4 = v36;
    }
    else
    {
      uint64_t v3 = v0 + 7;
      uint64_t v4 = &_swiftEmptySetSingleton;
    }
  }
  else
  {
    uint64_t v2 = &_swiftEmptySetSingleton;
    uint64_t v3 = v0 + 7;
    void *v1 = &_swiftEmptySetSingleton;
    uint64_t v4 = &_swiftEmptySetSingleton;
  }
  uint64_t v5 = (void *)v0[13];
  v0[6] = v4;
  id v6 = [v5 itemIdentifiers];
  uint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  v0[15] = v7;

  uint64_t v8 = *(void *)(v7 + 16);
  v0[16] = v8;
  if (!v8)
  {
    swift_bridgeObjectRelease();
LABEL_19:
    uint64_t v21 = (uint64_t (*)(void *, void *))v0[1];
    return v21(v2, v4);
  }
  uint64_t v9 = 0;
  unsigned __int8 v10 = v0 + 6;
  uint64_t v11 = (unint64_t *)&qword_10069E810;
  uint64_t v12 = &selRef_estimatedDimension_;
  int64_t v13 = v3;
  while (1)
  {
    v0[17] = v9;
    sub_100032E28(v0[15] + 32 * v9 + 32, (uint64_t)(v0 + 2));
    sub_100031418(0, v11);
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_7;
    }
    uint64_t v15 = (void *)v0[8];
    v0[18] = v15;
    if (![v15 v12[389]]) {
      break;
    }
    uint64_t v14 = v15;
LABEL_6:
    sub_100393BB0(&v37, v14);

LABEL_7:
    uint64_t v9 = v0[17] + 1;
    if (v9 == v0[16])
    {
      swift_bridgeObjectRelease();
      uint64_t v4 = (void *)v0[6];
      uint64_t v2 = (void *)v0[7];
      goto LABEL_19;
    }
  }
  if (objc_msgSend(v15, "ic_isModernFolderType"))
  {
    AppDependency.wrappedValue.getter();
    uint64_t v23 = (void *)v0[11];
    id v24 = [v23 modernManagedObjectContext];
    v0[19] = v24;

    uint64_t v25 = swift_allocObject();
    v0[20] = v25;
    *(void *)(v25 + 16) = v24;
    *(void *)(v25 + 24) = v15;
    v24;
    id v26 = v15;
    int64_t v27 = (void *)swift_task_alloc();
    v0[21] = v27;
    uint64_t v28 = sub_10002F214(&qword_10069D520);
    void *v27 = v0;
    v27[1] = sub_100422470;
    id v29 = sub_100424178;
    unint64_t v30 = v0 + 12;
    uint64_t v31 = v25;
    goto LABEL_23;
  }
  if (objc_msgSend(v15, "ic_isLegacyAccountType"))
  {
    uint64_t v14 = v15;
    goto LABEL_6;
  }
  if (!objc_msgSend(v15, "ic_isLegacyFolderType"))
  {

    goto LABEL_7;
  }
  uint64_t v16 = v11;
  uint64_t v17 = v10;
  unint64_t v18 = v13;
  AppDependency.wrappedValue.getter();
  unint64_t v19 = (void *)v0[9];
  id v20 = [v19 htmlManagedObjectContext];
  v0[22] = v20;

  if (!v20)
  {

    int64_t v13 = v18;
    unsigned __int8 v10 = v17;
    uint64_t v11 = v16;
    uint64_t v12 = &selRef_estimatedDimension_;
    goto LABEL_7;
  }
  uint64_t v32 = swift_allocObject();
  v0[23] = v32;
  *(void *)(v32 + 16) = v20;
  *(void *)(v32 + 24) = v15;
  id v33 = v15;
  v20;
  uint64_t v34 = (void *)swift_task_alloc();
  v0[24] = v34;
  uint64_t v28 = sub_10002F214(&qword_10069D520);
  *uint64_t v34 = v0;
  v34[1] = sub_100422998;
  id v29 = sub_10042415C;
  unint64_t v30 = v0 + 10;
  uint64_t v31 = v32;
LABEL_23:
  return NSManagedObjectContext.perform<A>(_:)(v30, v29, v31, v28);
}

uint64_t sub_100422470()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100422588, 0, 0);
}

uint64_t sub_100422588()
{
  uint64_t v32 = v0;
  uint64_t v2 = v0 + 12;
  uint64_t v1 = (void *)v0[12];
  uint64_t v4 = (void *)v0[18];
  uint64_t v3 = (void *)v0[19];
  if (v1)
  {
    sub_100393BB0(&v31, v1);
  }
  else
  {
  }
  uint64_t v5 = v0 + 7;
  uint64_t v6 = v0[17] + 1;
  if (v6 == v0[16])
  {
LABEL_5:
    swift_bridgeObjectRelease();
    uint64_t v8 = v0[6];
    uint64_t v7 = v0[7];
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    return v9(v7, v8);
  }
  uint64_t v11 = v0 + 6;
  while (1)
  {
    v0[17] = v6;
    sub_100032E28(v0[15] + 32 * v6 + 32, (uint64_t)(v0 + 2));
    sub_100031418(0, (unint64_t *)&qword_10069E810);
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_11;
    }
    int64_t v13 = (void *)v0[8];
    v0[18] = v13;
    if (!objc_msgSend(v13, "ic_isModernAccountType")) {
      break;
    }
    uint64_t v12 = v13;
LABEL_10:
    sub_100393BB0(&v31, v12);

LABEL_11:
    uint64_t v6 = v0[17] + 1;
    if (v6 == v0[16]) {
      goto LABEL_5;
    }
  }
  if (objc_msgSend(v13, "ic_isModernFolderType"))
  {
    AppDependency.wrappedValue.getter();
    unint64_t v19 = (void *)v0[11];
    id v20 = [v19 modernManagedObjectContext];
    v0[19] = v20;

    uint64_t v21 = swift_allocObject();
    v0[20] = v21;
    *(void *)(v21 + 16) = v20;
    *(void *)(v21 + 24) = v13;
    v20;
    id v22 = v13;
    uint64_t v23 = (void *)swift_task_alloc();
    v0[21] = v23;
    uint64_t v24 = sub_10002F214(&qword_10069D520);
    *uint64_t v23 = v0;
    v23[1] = sub_100422470;
    uint64_t v25 = sub_100424178;
    id v26 = v2;
    uint64_t v27 = v21;
    goto LABEL_23;
  }
  if (objc_msgSend(v13, "ic_isLegacyAccountType"))
  {
    uint64_t v12 = v13;
    goto LABEL_10;
  }
  if (!objc_msgSend(v13, "ic_isLegacyFolderType"))
  {

    goto LABEL_11;
  }
  uint64_t v14 = v11;
  uint64_t v15 = v2;
  uint64_t v16 = v5;
  AppDependency.wrappedValue.getter();
  uint64_t v17 = (void *)v0[9];
  id v18 = [v17 htmlManagedObjectContext];
  v0[22] = v18;

  if (!v18)
  {

    uint64_t v5 = v16;
    uint64_t v2 = v15;
    uint64_t v11 = v14;
    goto LABEL_11;
  }
  uint64_t v28 = swift_allocObject();
  v0[23] = v28;
  *(void *)(v28 + 16) = v18;
  *(void *)(v28 + 24) = v13;
  id v29 = v13;
  v18;
  unint64_t v30 = (void *)swift_task_alloc();
  v0[24] = v30;
  uint64_t v24 = sub_10002F214(&qword_10069D520);
  *unint64_t v30 = v0;
  v30[1] = sub_100422998;
  uint64_t v25 = sub_10042415C;
  id v26 = v0 + 10;
  uint64_t v27 = v28;
LABEL_23:
  return NSManagedObjectContext.perform<A>(_:)(v26, v25, v27, v24);
}

uint64_t sub_100422998()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100422AB0, 0, 0);
}

uint64_t sub_100422AB0()
{
  uint64_t v28 = v0;
  uint64_t v1 = (void *)v0[10];
  uint64_t v2 = v0 + 6;
  uint64_t v3 = (void *)v0[22];
  uint64_t v4 = (void *)v0[18];
  if (v1)
  {
    sub_100393BB0(&v27, v1);
  }
  else
  {
  }
  uint64_t v5 = v0[17] + 1;
  if (v5 == v0[16])
  {
LABEL_5:
    swift_bridgeObjectRelease();
    uint64_t v7 = v0[6];
    uint64_t v6 = v0[7];
    uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    return v8(v6, v7);
  }
  while (1)
  {
    v0[17] = v5;
    sub_100032E28(v0[15] + 32 * v5 + 32, (uint64_t)(v0 + 2));
    sub_100031418(0, (unint64_t *)&qword_10069E810);
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_11;
    }
    uint64_t v11 = (void *)v0[8];
    v0[18] = v11;
    if (!objc_msgSend(v11, "ic_isModernAccountType")) {
      break;
    }
    unsigned __int8 v10 = v11;
LABEL_10:
    sub_100393BB0(&v27, v10);

LABEL_11:
    uint64_t v5 = v0[17] + 1;
    if (v5 == v0[16]) {
      goto LABEL_5;
    }
  }
  if (objc_msgSend(v11, "ic_isModernFolderType"))
  {
    AppDependency.wrappedValue.getter();
    uint64_t v15 = (void *)v0[11];
    id v16 = [v15 modernManagedObjectContext];
    v0[19] = v16;

    uint64_t v17 = swift_allocObject();
    v0[20] = v17;
    *(void *)(v17 + 16) = v16;
    *(void *)(v17 + 24) = v11;
    v16;
    id v18 = v11;
    unint64_t v19 = (void *)swift_task_alloc();
    v0[21] = v19;
    uint64_t v20 = sub_10002F214(&qword_10069D520);
    *unint64_t v19 = v0;
    v19[1] = sub_100422470;
    uint64_t v21 = sub_100424178;
    id v22 = v0 + 12;
    uint64_t v23 = v17;
    goto LABEL_23;
  }
  if (objc_msgSend(v11, "ic_isLegacyAccountType"))
  {
    unsigned __int8 v10 = v11;
    goto LABEL_10;
  }
  if (!objc_msgSend(v11, "ic_isLegacyFolderType"))
  {

    goto LABEL_11;
  }
  uint64_t v12 = v2;
  AppDependency.wrappedValue.getter();
  int64_t v13 = (void *)v0[9];
  id v14 = [v13 htmlManagedObjectContext];
  v0[22] = v14;

  if (!v14)
  {

    uint64_t v2 = v12;
    goto LABEL_11;
  }
  uint64_t v24 = swift_allocObject();
  v0[23] = v24;
  *(void *)(v24 + 16) = v14;
  *(void *)(v24 + 24) = v11;
  id v25 = v11;
  v14;
  id v26 = (void *)swift_task_alloc();
  v0[24] = v26;
  uint64_t v20 = sub_10002F214(&qword_10069D520);
  *id v26 = v0;
  v26[1] = sub_100422998;
  uint64_t v21 = sub_10042415C;
  id v22 = v0 + 10;
  uint64_t v23 = v24;
LABEL_23:
  return NSManagedObjectContext.perform<A>(_:)(v22, v21, v23, v20);
}

uint64_t sub_100422EA4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_10017B61C;
  *(void *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(void *)(v5 + 16) = a1;
  return _swift_task_switch(sub_10041F0C0, 0, 0);
}

uint64_t sub_100422F6C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100422FB4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_100161724;
  *(void *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(void *)(v5 + 16) = a1;
  return _swift_task_switch(sub_10041F258, 0, 0);
}

uint64_t sub_10042307C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 56);
  long long v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_10017B61C;
  uint64_t v6[2] = a1;
  uint64_t v7 = (void *)swift_task_alloc();
  v6[3] = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_100175F50;
  return sub_1004234EC(v4, v5);
}

uint64_t sub_10042316C(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 56);
  long long v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_10017B61C;
  uint64_t v6[2] = a1;
  uint64_t v7 = (void *)swift_task_alloc();
  v6[3] = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_100175D64;
  return sub_1004234EC(v5, v4);
}

unint64_t sub_100423258()
{
  unint64_t result = qword_1006A6F80;
  if (!qword_1006A6F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A6F80);
  }
  return result;
}

unint64_t sub_1004232B0()
{
  unint64_t result = qword_1006A6F88[0];
  if (!qword_1006A6F88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1006A6F88);
  }
  return result;
}

uint64_t sub_100423304()
{
  return sub_1004233EC(&qword_1006A2940, (void (*)(uint64_t))type metadata accessor for AccountEntity);
}

unint64_t sub_100423350()
{
  unint64_t result = qword_1006A6FA8;
  if (!qword_1006A6FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A6FA8);
  }
  return result;
}

uint64_t sub_1004233A4()
{
  return sub_1004233EC(&qword_1006A6FB0, (void (*)(uint64_t))type metadata accessor for AccountEntity);
}

uint64_t sub_1004233EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100423438()
{
  unint64_t result = qword_1006A6FB8[0];
  if (!qword_1006A6FB8[0])
  {
    sub_10001DFF4(&qword_1006A6F38);
    sub_1004233EC(&qword_1006A6FB0, (void (*)(uint64_t))type metadata accessor for AccountEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1006A6FB8);
  }
  return result;
}

ValueMetadata *type metadata accessor for VisibleAccountsQuery()
{
  return &type metadata for VisibleAccountsQuery;
}

uint64_t sub_1004234EC(uint64_t a1, uint64_t a2)
{
  v2[9] = a1;
  v2[10] = a2;
  uint64_t v3 = type metadata accessor for AccountEntity();
  v2[11] = v3;
  v2[12] = *(void *)(v3 - 8);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  return _swift_task_switch(sub_1004235E0, 0, 0);
}

uint64_t sub_1004235E0()
{
  uint64_t v1 = v0[9];
  if ((v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_100031418(0, (unint64_t *)&qword_10069E810);
    sub_1001A3EEC();
    Set.Iterator.init(_cocoa:)();
    uint64_t v5 = v0[2];
    uint64_t v6 = v0[3];
    uint64_t v8 = v0[4];
    uint64_t v7 = v0[5];
    unint64_t v9 = v0[6];
  }
  else
  {
    uint64_t v10 = -1 << *(unsigned char *)(v1 + 32);
    uint64_t v6 = v1 + 56;
    uint64_t v8 = ~v10;
    uint64_t v11 = -v10;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v9 = v12 & *(void *)(v1 + 56);
    uint64_t v5 = swift_bridgeObjectRetain();
    uint64_t v7 = 0;
  }
  v0[18] = v5;
  v0[19] = v6;
  v0[22] = v7;
  v0[23] = v9;
  v0[20] = v8;
  v0[21] = &_swiftEmptySetSingleton;
  if (v5 < 0)
  {
    uint64_t v17 = __CocoaSet.Iterator.next()();
    if (!v17) {
      goto LABEL_33;
    }
    v0[8] = v17;
    sub_100031418(0, (unint64_t *)&qword_10069E810);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v16 = (id)v0[7];
    swift_unknownObjectRelease();
    uint64_t v15 = v7;
    uint64_t v13 = v9;
    goto LABEL_13;
  }
  if (v9)
  {
    uint64_t v13 = (v9 - 1) & v9;
    unint64_t v14 = __clz(__rbit64(v9)) | (v7 << 6);
    uint64_t v15 = v7;
LABEL_10:
    id v16 = *(id *)(*(void *)(v5 + 48) + 8 * v14);
LABEL_13:
    v0[25] = v15;
    v0[26] = v13;
    v0[24] = v16;
    if (v16)
    {
      id v18 = (void *)v0[10];
      uint64_t v19 = swift_allocObject();
      v0[27] = v19;
      *(void *)(v19 + 16) = v18;
      *(void *)(v19 + 24) = v16;
      id v20 = v16;
      id v21 = v18;
      id v22 = v20;
      id v23 = v21;
      id v24 = v22;
      id v25 = v23;
      id v26 = (void *)swift_task_alloc();
      v0[28] = v26;
      *id v26 = v0;
      v26[1] = sub_1004239A8;
      uint64_t v5 = v0[15];
      uint64_t v4 = v0[11];
      uint64_t v2 = sub_10016EF94;
      uint64_t v3 = v19;
      return NSManagedObjectContext.perform<A>(_:)(v5, v2, v3, v4);
    }
    goto LABEL_33;
  }
  int64_t v27 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    return NSManagedObjectContext.perform<A>(_:)(v5, v2, v3, v4);
  }
  int64_t v28 = (unint64_t)(v8 + 64) >> 6;
  if (v27 < v28)
  {
    unint64_t v29 = *(void *)(v6 + 8 * v27);
    uint64_t v15 = v7 + 1;
    if (!v29)
    {
      uint64_t v15 = v7 + 2;
      if (v7 + 2 >= v28) {
        goto LABEL_33;
      }
      unint64_t v29 = *(void *)(v6 + 8 * v15);
      if (!v29)
      {
        uint64_t v15 = v7 + 3;
        if (v7 + 3 >= v28) {
          goto LABEL_33;
        }
        unint64_t v29 = *(void *)(v6 + 8 * v15);
        if (!v29)
        {
          uint64_t v15 = v7 + 4;
          if (v7 + 4 >= v28) {
            goto LABEL_33;
          }
          unint64_t v29 = *(void *)(v6 + 8 * v15);
          if (!v29)
          {
            uint64_t v15 = v7 + 5;
            if (v7 + 5 >= v28) {
              goto LABEL_33;
            }
            unint64_t v29 = *(void *)(v6 + 8 * v15);
            if (!v29)
            {
              uint64_t v30 = v7 + 6;
              while (v28 != v30)
              {
                unint64_t v29 = *(void *)(v6 + 8 * v30++);
                if (v29)
                {
                  uint64_t v15 = v30 - 1;
                  goto LABEL_20;
                }
              }
              goto LABEL_33;
            }
          }
        }
      }
    }
LABEL_20:
    uint64_t v13 = (v29 - 1) & v29;
    unint64_t v14 = __clz(__rbit64(v29)) + (v15 << 6);
    goto LABEL_10;
  }
LABEL_33:
  sub_10017B518();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v31 = (uint64_t (*)(void *))v0[1];
  return v31(&_swiftEmptySetSingleton);
}

uint64_t sub_1004239A8()
{
  *(void *)(*(void *)v1 + 232) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10017AA68;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_100423AC4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100423AC4()
{
  uint64_t v1 = *(void **)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 120);
  uint64_t v7 = *(void **)(v0 + 80);
  uint64_t v6 = *(void *)(v0 + 88);

  sub_1002E86C4(v5, v3);
  sub_1002E86C4(v3, v4);
  Hasher.init(_seed:)();
  type metadata accessor for AccountID();
  sub_1004233EC((unint64_t *)&unk_1006A27E0, (void (*)(uint64_t))&type metadata accessor for AccountID);
  swift_bridgeObjectRetain();
  dispatch thunk of Hashable.hash(into:)();
  type metadata accessor for URL();
  sub_1004233EC((unint64_t *)&unk_10069BA10, (void (*)(uint64_t))&type metadata accessor for URL);
  dispatch thunk of Hashable.hash(into:)();
  uint64_t v8 = (void *)(v4 + *(int *)(v6 + 24));
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v9 = Hasher._finalize()();
  uint64_t v10 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v11 = v9 & ~v10;
  if ((*(void *)(v2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
  {
    uint64_t v12 = ~v10;
    uint64_t v13 = *(void *)(v0 + 168);
    uint64_t v14 = *(void *)(*(void *)(v0 + 96) + 72);
    while (1)
    {
      sub_10015B884(*(void *)(v13 + 48) + v11 * v14, *(void *)(v0 + 104));
      if (static AccountID.== infix(_:_:)() & 1) != 0 && (static URL.== infix(_:_:)())
      {
        uint64_t v15 = *(void *)(v0 + 104);
        id v16 = (void *)(v15 + *(int *)(*(void *)(v0 + 88) + 24));
        if (*v16 == *v8 && v16[1] == v8[1]) {
          goto LABEL_12;
        }
        if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
          break;
        }
      }
      sub_10015B8E8(*(void *)(v0 + 104));
      unint64_t v11 = (v11 + 1) & v12;
      if (((*(void *)(v2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        goto LABEL_13;
      }
    }
    uint64_t v15 = *(void *)(v0 + 104);
LABEL_12:
    uint64_t v18 = *(void *)(v0 + 136);
    sub_10015B8E8(v15);
    swift_bridgeObjectRelease();
    sub_10015B8E8(v18);
    uint64_t v19 = *(void *)(v0 + 168);
  }
  else
  {
LABEL_13:
    uint64_t v20 = *(void *)(v0 + 168);
    uint64_t v21 = *(void *)(v0 + 136);
    uint64_t v22 = *(void *)(v0 + 112);
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_10015B884(v21, v22);
    sub_100398FF4(v22, v11, isUniquelyReferenced_nonNull_native);
    uint64_t v19 = v20;
    swift_bridgeObjectRelease();
    sub_10015B8E8(v21);
  }

  uint64_t v28 = *(void *)(v0 + 200);
  unint64_t v29 = *(void *)(v0 + 208);
  *(void *)(v0 + 176) = v28;
  *(void *)(v0 + 184) = v29;
  *(void *)(v0 + 168) = v19;
  uint64_t v30 = *(void *)(v0 + 144);
  if (v30 < 0)
  {
    uint64_t v35 = __CocoaSet.Iterator.next()();
    if (!v35) {
      goto LABEL_40;
    }
    *(void *)(v0 + 64) = v35;
    sub_100031418(0, (unint64_t *)&qword_10069E810);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v34 = *(id *)(v0 + 56);
    swift_unknownObjectRelease();
    uint64_t v33 = v28;
    uint64_t v31 = v29;
    goto LABEL_20;
  }
  if (v29)
  {
    uint64_t v31 = (v29 - 1) & v29;
    unint64_t v32 = __clz(__rbit64(v29)) | (v28 << 6);
    uint64_t v33 = v28;
LABEL_17:
    id v34 = *(id *)(*(void *)(v30 + 48) + 8 * v32);
LABEL_20:
    *(void *)(v0 + 200) = v33;
    *(void *)(v0 + 208) = v31;
    *(void *)(v0 + 192) = v34;
    if (v34)
    {
      uint64_t v36 = *(void **)(v0 + 80);
      uint64_t v37 = swift_allocObject();
      *(void *)(v0 + 216) = v37;
      *(void *)(v37 + 16) = v36;
      *(void *)(v37 + 24) = v34;
      id v38 = v34;
      id v39 = v36;
      id v40 = v38;
      id v41 = v39;
      id v42 = v40;
      id v43 = v41;
      uint64_t v44 = (void *)swift_task_alloc();
      *(void *)(v0 + 224) = v44;
      *uint64_t v44 = v0;
      v44[1] = sub_1004239A8;
      uint64_t v24 = *(void *)(v0 + 120);
      uint64_t v27 = *(void *)(v0 + 88);
      id v25 = sub_10016EF94;
      uint64_t v26 = v37;
      return NSManagedObjectContext.perform<A>(_:)(v24, v25, v26, v27);
    }
    goto LABEL_40;
  }
  int64_t v45 = v28 + 1;
  if (__OFADD__(v28, 1))
  {
    __break(1u);
    return NSManagedObjectContext.perform<A>(_:)(v24, v25, v26, v27);
  }
  int64_t v46 = (unint64_t)(*(void *)(v0 + 160) + 64) >> 6;
  if (v45 < v46)
  {
    uint64_t v47 = *(void *)(v0 + 152);
    unint64_t v48 = *(void *)(v47 + 8 * v45);
    uint64_t v33 = v28 + 1;
    if (!v48)
    {
      uint64_t v33 = v28 + 2;
      if (v28 + 2 >= v46) {
        goto LABEL_40;
      }
      unint64_t v48 = *(void *)(v47 + 8 * v33);
      if (!v48)
      {
        uint64_t v33 = v28 + 3;
        if (v28 + 3 >= v46) {
          goto LABEL_40;
        }
        unint64_t v48 = *(void *)(v47 + 8 * v33);
        if (!v48)
        {
          uint64_t v33 = v28 + 4;
          if (v28 + 4 >= v46) {
            goto LABEL_40;
          }
          unint64_t v48 = *(void *)(v47 + 8 * v33);
          if (!v48)
          {
            uint64_t v33 = v28 + 5;
            if (v28 + 5 >= v46) {
              goto LABEL_40;
            }
            unint64_t v48 = *(void *)(v47 + 8 * v33);
            if (!v48)
            {
              uint64_t v49 = v28 + 6;
              while (v46 != v49)
              {
                unint64_t v48 = *(void *)(v47 + 8 * v49++);
                if (v48)
                {
                  uint64_t v33 = v49 - 1;
                  goto LABEL_27;
                }
              }
              goto LABEL_40;
            }
          }
        }
      }
    }
LABEL_27:
    uint64_t v31 = (v48 - 1) & v48;
    unint64_t v32 = __clz(__rbit64(v48)) + (v33 << 6);
    goto LABEL_17;
  }
LABEL_40:
  sub_10017B518();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v50 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v50(v19);
}

uint64_t sub_10042408C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1004240D0(void *a1@<X8>)
{
  sub_10041F36C(*(void *)(v1 + 24), *(void **)(v1 + 32), a1);
}

uint64_t sub_1004240F4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10042413C(void *a1@<X8>)
{
  sub_10041F1D4(*(void *)(v1 + 16), *(void **)(v1 + 32), a1);
}

void sub_10042415C(void *a1@<X8>)
{
  sub_10041F4B4(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

void sub_100424178(void *a1@<X8>)
{
  sub_10041F3CC(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

id sub_10042419C()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerTextFieldCell____lazy_storage___textField;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerTextFieldCell____lazy_storage___textField);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerTextFieldCell____lazy_storage___textField);
  }
  else
  {
    id v4 = sub_1004242F0(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_100424200(void *a1)
{
  id v3 = [a1 markedTextRange];

  if (!v3)
  {
    id v4 = *(void (**)(uint64_t, uint64_t))(v1
                                                 + OBJC_IVAR____TtC11MobileNotes32SmartFolderComposerTextFieldCell_textDidChange);
    if (v4)
    {
      swift_retain();
      id v5 = [a1 text];
      if (v5)
      {
        id v6 = v5;
        uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v9 = v8;
      }
      else
      {
        uint64_t v7 = 0;
        uint64_t v9 = 0;
      }
      v4(v7, v9);
      sub_10002E70C((uint64_t)v4);
      swift_bridgeObjectRelease();
    }
  }
}

id sub_1004242F0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UIListContentConfiguration.TextProperties();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UIListContentConfiguration();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [objc_allocWithZone((Class)UITextField) initWithFrame:0.0, 0.0, 0.0, 0.0];
  static UIListContentConfiguration.cell()();
  UIListContentConfiguration.textProperties.getter();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  unint64_t v11 = (void *)UIListContentConfiguration.TextProperties.color.getter();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  [v10 setTextColor:v11];
  [v10 setClearButtonMode:1];
  [v10 setAdjustsFontForContentSizeCategory:1];
  id v12 = [self preferredFontForTextStyle:UIFontTextStyleBody];
  [v10 setFont:v12];

  [v10 addTarget:a1 action:"textFieldDidChange:" forControlEvents:0x20000];
  [v10 addTarget:a1 action:"resignFirstResponder" forControlEvents:0x80000];

  return v10;
}

void sub_10042455C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UIListContentConfiguration();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = sub_10042419C();
  id v7 = [v6 superview];

  if (!v7)
  {
    static UIListContentConfiguration.cell()();
    UIListContentConfiguration.directionalLayoutMargins.getter();
    double v9 = v8;
    double v11 = v10;
    double v13 = v12;
    id v14 = [v1 contentView];
    id v15 = sub_10042419C();
    [v14 addSubview:v15];

    id v16 = sub_10042419C();
    [v16 ic_addAnchorsToFillSuperviewWithLeadingPadding:0 trailingPadding:0 verticalPadding:v11 usesSafeAreaLayoutGuideHorizontally:v9 usesSafeAreaLayoutGuideVertically:v13];

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

id sub_100424928()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SmartFolderComposerTextFieldCell();
  return [super dealloc];
}

uint64_t type metadata accessor for SmartFolderComposerTextFieldCell()
{
  return self;
}

uint64_t sub_1004249D0()
{
  return 5;
}

objc_class *sub_1004249D8()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellChecklists____lazy_storage___menu;
  objc_super v2 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellChecklists____lazy_storage___menu);
  if (v2)
  {
    uint64_t v3 = *(objc_class **)(v0 + OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellChecklists____lazy_storage___menu);
  }
  else
  {
    uint64_t v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_1006A4D40);
    sub_10002F214(&qword_10069BA00);
    uint64_t preferredElementSize = swift_allocObject();
    *(_OWORD *)(preferredElementSize + 16) = xmmword_100524CD0;
    *(void *)(preferredElementSize + 32) = sub_100424F54();
    *(void *)(preferredElementSize + 40) = sub_10042518C();
    *(void *)(preferredElementSize + 48) = sub_1004253D0();
    *(void *)(preferredElementSize + 56) = sub_100425610();
    specialized Array._endMutation()();
    v6._countAndFlagsBits = 0;
    v6._object = (void *)0xE000000000000000;
    v14.value.super.Class isa = 0;
    v14.is_nil = 0;
    Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v6, (Swift::String_optional)0, v14, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, (Swift::OpaquePointer)preferredElementSize).super.super.isa;
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_100524CE0;
    *(void *)(v8 + 32) = sub_100424D50();
    *(void *)(v8 + 40) = isa;
    specialized Array._endMutation()();
    v9._countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    v15.value.super.Class isa = 0;
    v15.is_nil = 0;
    v10.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v9, (Swift::String_optional)0, v15, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v8, (Swift::OpaquePointer)v8).super.super.isa;
    double v11 = *(void **)(v0 + v1);
    *(UIMenu *)(v4 + v1) = v10;
    uint64_t v3 = v10.super.super.isa;

    objc_super v2 = 0;
  }
  id v12 = v2;
  return v3;
}

void sub_100424B58()
{
  uint64_t v1 = (void *)sub_100424D50();
  uint64_t v2 = OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection;
  BOOL v3 = 1;
  if (*(void *)(v0 + OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection))
  {
    self;
    if (swift_dynamicCastObjCClass()) {
      BOOL v3 = 0;
    }
  }
  [v1 setState:v3];

  id v4 = sub_100424F54();
  BOOL v6 = 0;
  if (*(void *)(v0 + v2))
  {
    self;
    id v5 = (void *)swift_dynamicCastObjCClass();
    if (v5)
    {
      if (![v5 selectionType]) {
        BOOL v6 = 1;
      }
    }
  }
  [v4 setState:v6];

  id v7 = sub_10042518C();
  BOOL v9 = 0;
  if (*(void *)(v0 + v2))
  {
    self;
    uint64_t v8 = (void *)swift_dynamicCastObjCClass();
    if (v8)
    {
      if ([v8 selectionType] == (id)1) {
        BOOL v9 = 1;
      }
    }
  }
  [v7 setState:v9];

  id v10 = sub_1004253D0();
  BOOL v12 = 0;
  if (*(void *)(v0 + v2))
  {
    self;
    double v11 = (void *)swift_dynamicCastObjCClass();
    if (v11)
    {
      if ([v11 selectionType] == (id)2) {
        BOOL v12 = 1;
      }
    }
  }
  [v10 setState:v12];

  id v15 = sub_100425610();
  BOOL v14 = 0;
  if (*(void *)(v0 + v2))
  {
    self;
    double v13 = (void *)swift_dynamicCastObjCClass();
    if (v13)
    {
      if ([v13 selectionType] == (id)3) {
        BOOL v14 = 1;
      }
    }
  }
  [v15 setState:v14];
}

id sub_100424D50()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellChecklists____lazy_storage___menuActionOff;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellChecklists____lazy_storage___menuActionOff];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellChecklists____lazy_storage___menuActionOff];
  }
  else
  {
    id v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(swift_allocObject() + 16) = v0;
    uint64_t v8 = v0;
    BOOL v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v10 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

void sub_100424EB8(uint64_t a1, char *a2)
{
  id v3 = *(void **)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection];
  *(void *)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection] = 0;

  [a2 setNeedsUpdateConfiguration];
  sub_100424B58();
  id v4 = *(void (**)(uint64_t))&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange];
  if (v4)
  {
    uint64_t v5 = swift_retain();
    v4(v5);
    sub_10002E70C((uint64_t)v4);
  }
}

id sub_100424F54()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellChecklists____lazy_storage___menuActionAny;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellChecklists____lazy_storage___menuActionAny];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellChecklists____lazy_storage___menuActionAny];
  }
  else
  {
    id v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(swift_allocObject() + 16) = v0;
    uint64_t v8 = v0;
    BOOL v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v10 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

uint64_t sub_1004250BC(uint64_t a1, char *a2)
{
  id v3 = [objc_allocWithZone((Class)ICChecklistsFilterTypeSelection) initWithSelectionType:0];
  id v4 = *(void **)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection];
  *(void *)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection] = v3;
  id v5 = v3;

  [a2 setNeedsUpdateConfiguration];
  uint64_t result = sub_100424B58();
  id v7 = *(void (**)(uint64_t))&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange];
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    return sub_10002E70C((uint64_t)v7);
  }
  return result;
}

id sub_10042518C()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellChecklists____lazy_storage___menuActionIncomplete;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellChecklists____lazy_storage___menuActionIncomplete];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellChecklists____lazy_storage___menuActionIncomplete];
  }
  else
  {
    id v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(swift_allocObject() + 16) = v0;
    uint64_t v8 = v0;
    BOOL v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v10 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

uint64_t sub_100425300(uint64_t a1, char *a2)
{
  id v3 = [objc_allocWithZone((Class)ICChecklistsFilterTypeSelection) initWithSelectionType:1];
  id v4 = *(void **)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection];
  *(void *)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection] = v3;
  id v5 = v3;

  [a2 setNeedsUpdateConfiguration];
  uint64_t result = sub_100424B58();
  id v7 = *(void (**)(uint64_t))&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange];
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    return sub_10002E70C((uint64_t)v7);
  }
  return result;
}

id sub_1004253D0()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellChecklists____lazy_storage___menuActionComplete;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellChecklists____lazy_storage___menuActionComplete];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellChecklists____lazy_storage___menuActionComplete];
  }
  else
  {
    id v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(swift_allocObject() + 16) = v0;
    uint64_t v8 = v0;
    BOOL v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v10 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

uint64_t sub_100425540(uint64_t a1, char *a2)
{
  id v3 = [objc_allocWithZone((Class)ICChecklistsFilterTypeSelection) initWithSelectionType:2];
  id v4 = *(void **)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection];
  *(void *)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection] = v3;
  id v5 = v3;

  [a2 setNeedsUpdateConfiguration];
  uint64_t result = sub_100424B58();
  id v7 = *(void (**)(uint64_t))&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange];
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    return sub_10002E70C((uint64_t)v7);
  }
  return result;
}

id sub_100425610()
{
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellChecklists____lazy_storage___menuActionNone;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellChecklists____lazy_storage___menuActionNone];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellChecklists____lazy_storage___menuActionNone];
  }
  else
  {
    id v4 = v0;
    sub_100031418(0, (unint64_t *)&unk_10069B9F0);
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 localizedStringForKey:v6 value:0 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(swift_allocObject() + 16) = v0;
    uint64_t v8 = v0;
    BOOL v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v10 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

uint64_t sub_10042578C(uint64_t a1, char *a2)
{
  id v3 = [objc_allocWithZone((Class)ICChecklistsFilterTypeSelection) initWithSelectionType:3];
  id v4 = *(void **)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection];
  *(void *)&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelection] = v3;
  id v5 = v3;

  [a2 setNeedsUpdateConfiguration];
  uint64_t result = sub_100424B58();
  id v7 = *(void (**)(uint64_t))&a2[OBJC_IVAR____TtC11MobileNotes24FolderComposerFilterCell_filterTypeSelectionDidChange];
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    return sub_10002E70C((uint64_t)v7);
  }
  return result;
}

id sub_100425914(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellChecklists____lazy_storage___menu] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellChecklists____lazy_storage___menuActionOff] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellChecklists____lazy_storage___menuActionAny] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellChecklists____lazy_storage___menuActionIncomplete] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellChecklists____lazy_storage___menuActionComplete] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellChecklists____lazy_storage___menuActionNone] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for FolderComposerFilterCellChecklists();
  id v3 = [super initWithCoder:a1];

  return v3;
}

void sub_1004259D4()
{
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellChecklists____lazy_storage___menuActionOff));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellChecklists____lazy_storage___menuActionAny));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellChecklists____lazy_storage___menuActionIncomplete));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellChecklists____lazy_storage___menuActionComplete));
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes34FolderComposerFilterCellChecklists____lazy_storage___menuActionNone);
}

id sub_100425A54()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FolderComposerFilterCellChecklists();
  return [super dealloc];
}

uint64_t type metadata accessor for FolderComposerFilterCellChecklists()
{
  return self;
}

objc_class *sub_100425B38()
{
  return sub_1004249D8();
}

void sub_100425B5C()
{
}

uint64_t sub_100425B80()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100425BB8(uint64_t a1)
{
  return sub_10042578C(a1, *(char **)(v1 + 16));
}

uint64_t sub_100425BC0(uint64_t a1)
{
  return sub_100425540(a1, *(char **)(v1 + 16));
}

uint64_t sub_100425BC8(uint64_t a1)
{
  return sub_100425300(a1, *(char **)(v1 + 16));
}

uint64_t sub_100425BD0(uint64_t a1)
{
  return sub_1004250BC(a1, *(char **)(v1 + 16));
}

void sub_100425BD8(uint64_t a1)
{
  sub_100424EB8(a1, *(char **)(v1 + 16));
}

id EmojiImageGenerator.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super init];
}

unint64_t sub_100425D08(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    sub_10042603C(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      unsigned int v5 = _StringGuts.foreignErrorCorrectedScalar(startingAt:)();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
        _StringObject.sharedUTF8.getter();
      }
      unsigned int v5 = _decodeScalar(_:startingAt:)();
    }
  }
  else
  {
    unsigned int v5 = 0;
  }
  return v5 | ((unint64_t)(v2 == 0) << 32);
}

unint64_t sub_100425DE8(unint64_t a1, unint64_t a2)
{
  uint64_t v4 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v4 = a1;
  }
  uint64_t v5 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0) {
    uint64_t v5 = 11;
  }
  unint64_t v6 = v5 | (v4 << 16);
  unint64_t v7 = sub_1004260DC(0xFuLL, a1, a2);
  unint64_t result = sub_1004260DC(v6, a1, a2);
  unint64_t v9 = result >> 14;
  if (v7 >> 14 >= result >> 14)
  {
    if (v9 >= v7 >> 14) {
      return 0;
    }
    uint64_t v11 = 0;
    while (1)
    {
      if (__OFSUB__(v11--, 1)) {
        goto LABEL_41;
      }
      if ((a2 & 0x1000000000000000) == 0) {
        break;
      }
      unint64_t result = String.UnicodeScalarView._foreignIndex(before:)();
      unint64_t v7 = result;
LABEL_22:
      if (v9 >= v7 >> 14) {
        return v11;
      }
    }
    unint64_t v17 = v7 >> 16;
    if ((a2 & 0x2000000000000000) != 0)
    {
      unint64_t v22 = a1;
      uint64_t v23 = a2 & 0xFFFFFFFFFFFFFFLL;
      if ((*((unsigned char *)&v22 + v17 - 1) & 0xC0) == 0x80)
      {
        uint64_t v18 = 0;
        do
          int v20 = *((unsigned char *)&v22 + v17 + v18-- - 2) & 0xC0;
        while (v20 == 128);
        goto LABEL_35;
      }
    }
    else
    {
      unint64_t result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      if ((a1 & 0x1000000000000000) == 0) {
        unint64_t result = _StringObject.sharedUTF8.getter();
      }
      if ((*(unsigned char *)(v17 + result - 1) & 0xC0) == 0x80)
      {
        uint64_t v18 = 0;
        do
          int v19 = *(unsigned char *)(result + v17 - 2 + v18--) & 0xC0;
        while (v19 == 128);
LABEL_35:
        uint64_t v21 = 1 - v18;
LABEL_37:
        unint64_t v7 = (v7 - (v21 << 16)) & 0xFFFFFFFFFFFF0000 | 5;
        goto LABEL_22;
      }
    }
    uint64_t v21 = 1;
    goto LABEL_37;
  }
  for (uint64_t i = 0; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
      unint64_t result = String.UnicodeScalarView._foreignIndex(after:)();
      unint64_t v7 = result;
    }
    else
    {
      unint64_t v12 = v7 >> 16;
      if ((a2 & 0x2000000000000000) != 0)
      {
        unint64_t v22 = a1;
        uint64_t v23 = a2 & 0xFFFFFFFFFFFFFFLL;
        int v13 = *((unsigned __int8 *)&v22 + v12);
      }
      else
      {
        unint64_t result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if ((a1 & 0x1000000000000000) == 0) {
          unint64_t result = _StringObject.sharedUTF8.getter();
        }
        int v13 = *(unsigned __int8 *)(result + v12);
      }
      int v14 = (char)v13;
      unsigned int v15 = __clz(v13 ^ 0xFF) - 24;
      if (v14 >= 0) {
        LOBYTE(v15) = 1;
      }
      unint64_t v7 = ((v12 + v15) << 16) | 5;
    }
    if (v9 <= v7 >> 14) {
      return v11;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_10042603C(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5) {
    goto LABEL_9;
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    unint64_t result = sub_10042638C(result, a2, a3);
    if ((result & 1) == 0) {
      return result & 0xC | sub_1004261EC(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
  }
  return result;
}

unint64_t sub_1004260DC(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5) {
    goto LABEL_9;
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 < result >> 16)
  {
    __break(1u);
LABEL_9:
    unint64_t result = sub_10042617C(result, a2, a3);
    if ((result & 1) == 0) {
      return result & 0xC | sub_1004261EC(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
  }
  return result;
}

unint64_t sub_10042617C(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) == 4 << v5) {
    unint64_t result = sub_100426310(result, a2, a3);
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 < result >> 16) {
    __break(1u);
  }
  return result;
}

unint64_t sub_1004261EC(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    unint64_t v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      void v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((unsigned char *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            unint64_t v7 = v5 - 1;
            int v11 = *((unsigned char *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          return v7 << 16;
        }
        goto LABEL_14;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 == (a2 & 0xFFFFFFFFFFFFLL)) {
          goto LABEL_14;
        }
      }
      else
      {
        unint64_t v12 = result >> 16;
        uint64_t v6 = _StringObject.sharedUTF8.getter();
        unint64_t v5 = v12;
        if (v12 == v10) {
          goto LABEL_14;
        }
      }
      if ((*(unsigned char *)(v6 + v5) & 0xC0) == 0x80)
      {
        do
        {
          unint64_t v7 = v5 - 1;
          int v8 = *(unsigned char *)(v6 - 1 + v5--) & 0xC0;
        }
        while (v8 == 128);
        return v7 << 16;
      }
LABEL_14:
      unint64_t v7 = v5;
      return v7 << 16;
    }
    uint64_t v9 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v9 = a2 & 0xFFFFFFFFFFFFLL;
    }
    if (v5 != v9)
    {
      return _StringGuts.foreignScalarAlign(_:)();
    }
  }
  return result;
}

uint64_t sub_100426310(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = String.UTF16View.index(_:offsetBy:)();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = String.UTF8View._foreignIndex(_:offsetBy:)();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unint64_t sub_10042638C(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) == 4 << v5) {
    unint64_t result = sub_100426310(result, a2, a3);
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16) {
    __break(1u);
  }
  return result;
}

void *sub_1004263FC(uint64_t a1)
{
  unint64_t result = _swiftEmptyArrayStorage;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = self;
    for (uint64_t i = 0; i != v3; ++i)
    {
      swift_bridgeObjectRetain();
      v6._countAndFlagsBits = 45;
      v6._object = (void *)0xE100000000000000;
      String.append(_:)(v6);
      v7._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v7);
      swift_bridgeObjectRelease();
      v8._countAndFlagsBits = 30832;
      v8._object = (void *)0xE200000000000000;
      String.append(_:)(v8);
      NSString v9 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v10 = [v4 imageNamed:v9];

      if (v10)
      {
        id v11 = [v10 CGImage];
        if (v11)
        {
          id v12 = v11;
          id v13 = [objc_allocWithZone((Class)NSEmojiImageStrike) initWithImage:v12 alignmentInset:1.0, 2.0];

          if (v13)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
        }
        else
        {
        }
      }
    }
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return result;
}

id _s11MobileNotes19EmojiImageGeneratorC08generatecD5Asset_11descriptionSo07NSEmojidG0CSgSS_SStF_0(unint64_t a1, unint64_t a2)
{
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_100425D08(a1, a2);
  if ((v4 & 0x100000000) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  int v5 = v4;
  unint64_t v6 = sub_100425DE8(a1, a2);
  swift_bridgeObjectRelease();
  if (v6 != 1) {
    return 0;
  }
  sub_10002F214((uint64_t *)&unk_1006A1950);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100524D10;
  *(void *)(v7 + 56) = &type metadata for UInt32;
  *(void *)(v7 + 64) = &protocol witness table for UInt32;
  *(_DWORD *)(v7 + 32) = v5;
  String.init(format:_:)();
  if ((unint64_t)sub_1004263FC((uint64_t)&off_10062CF20) >> 62)
  {
    sub_100426824();
    swift_bridgeObjectRetain();
    _bridgeCocoaArray<A>(_:)();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_100426824();
  }
  swift_bridgeObjectRelease();
  id v8 = objc_allocWithZone((Class)NSEmojiImageAsset);
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_100426824();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v12 = [v8 initWithContentIdentifier:v9 shortDescription:v10 strikeImages:isa];

  return v12;
}

uint64_t type metadata accessor for EmojiImageGenerator()
{
  return self;
}

unint64_t sub_100426824()
{
  unint64_t result = qword_1006A70B8;
  if (!qword_1006A70B8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1006A70B8);
  }
  return result;
}

ValueMetadata *_s18RequestRequirementVMa()
{
  return &_s18RequestRequirementVN;
}

ValueMetadata *_s19NoteEditRequirementVMa()
{
  return &_s19NoteEditRequirementVN;
}

ValueMetadata *_s20NoteCountRequirementVMa()
{
  return &_s20NoteCountRequirementVN;
}

ValueMetadata *_s17LaunchRequirementVMa()
{
  return &_s17LaunchRequirementVN;
}

ValueMetadata *_s17CohortRequirementVMa()
{
  return &_s17CohortRequirementVN;
}

unint64_t sub_1004268B4(uint64_t a1)
{
  unint64_t result = sub_1004268DC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1004268DC()
{
  unint64_t result = qword_1006A70F8;
  if (!qword_1006A70F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A70F8);
  }
  return result;
}

uint64_t sub_100426930(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v41 = a4;
  uint64_t v7 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  NSString v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v12 = (char *)&v36 - v11;
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  unint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  int v20 = (char *)&v36 - v19;
  __chkstk_darwin(v18);
  unint64_t v22 = (char *)&v36 - v21;
  if (!a2 && !a3 && !v41) {
    return 1;
  }
  static Date.now.getter();
  if (*(void *)(a1 + 16) < a2)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
    return 0;
  }
  uint64_t v40 = *(void *)(a1 + 16);
  uint64_t result = sub_100426D98(a2, a1);
  if (v25 == v26 >> 1)
  {
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    uint64_t v28 = v12;
    uint64_t v29 = 1;
  }
  else
  {
    if (v25 >= (uint64_t)(v26 >> 1))
    {
      __break(1u);
      return result;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, v24 + *(void *)(v14 + 72) * v25, v13);
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    uint64_t v28 = v12;
    uint64_t v29 = 0;
  }
  id v39 = v27;
  v27(v28, v29, 1, v13);
  swift_bridgeObjectRetain();
  swift_unknownObjectRelease();
  id v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v38(v12, 1, v13) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
    uint64_t v30 = (uint64_t)v12;
LABEL_24:
    sub_10033F718(v30);
    return 0;
  }
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v37(v20, v12, v13);
  unint64_t v31 = Date.numberOfDays(from:)();
  if ((a3 & 0x8000000000000000) != 0 || v31 > a3)
  {
    id v34 = *(void (**)(char *, uint64_t))(v14 + 8);
    v34(v20, v13);
    v34(v22, v13);
    return 0;
  }
  if (!v40)
  {
    v39(v10, 1, 1, v13);
    goto LABEL_23;
  }
  (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v10, a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)), v13);
  v39(v10, 0, 1, v13);
  if (v38(v10, 1, v13) == 1)
  {
LABEL_23:
    uint64_t v35 = *(void (**)(char *, uint64_t))(v14 + 8);
    v35(v20, v13);
    v35(v22, v13);
    uint64_t v30 = (uint64_t)v10;
    goto LABEL_24;
  }
  v37(v17, v10, v13);
  unint64_t v32 = Date.numberOfDays(from:)();
  uint64_t v33 = *(void (**)(char *, uint64_t))(v14 + 8);
  v33(v17, v13);
  v33(v20, v13);
  v33(v22, v13);
  uint64_t result = 1;
  if (v41 >= 1 && v32 < v41) {
    return 0;
  }
  return result;
}

uint64_t sub_100426D98(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for Date();
    return a2;
  }
  return result;
}

unint64_t sub_100426E20(uint64_t a1)
{
  unint64_t result = sub_100426E48();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100426E48()
{
  unint64_t result = qword_1006A7138;
  if (!qword_1006A7138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A7138);
  }
  return result;
}

unint64_t sub_100426E9C(uint64_t a1)
{
  unint64_t result = sub_100426EC4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100426EC4()
{
  unint64_t result = qword_1006A7178;
  if (!qword_1006A7178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A7178);
  }
  return result;
}

BOOL sub_100426F18(uint64_t a1, double a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  NSString v10 = (char *)&v24 - v9;
  uint64_t v11 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v24 - v15;
  if (a2 == 0.0) {
    return 1;
  }
  sub_10021E8BC(a1, (uint64_t)&v24 - v15);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  int v19 = v18(v16, 1, v4);
  sub_10033F718((uint64_t)v16);
  if (v19 == 1) {
    return 0;
  }
  uint64_t v20 = _s19NoteEditRequirementV5DatesVMa();
  sub_10021E8BC(a1 + *(int *)(v20 + 20), (uint64_t)v14);
  if (v18(v14, 1, v4) == 1)
  {
    sub_10033F718((uint64_t)v14);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v14, v4);
    static Date.now.getter();
    Date.timeIntervalSince(_:)();
    double v22 = v21;
    uint64_t v23 = *(void (**)(char *, uint64_t))(v5 + 8);
    v23(v8, v4);
    v23(v10, v4);
    return v22 >= a2;
  }
}

unint64_t sub_100427170(uint64_t a1)
{
  unint64_t result = sub_100427198();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100427198()
{
  unint64_t result = qword_1006A71B8;
  if (!qword_1006A71B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A71B8);
  }
  return result;
}

BOOL sub_1004271EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v18 - v12;
  if (!a2) {
    return 1;
  }
  sub_10021E8BC(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10033F718((uint64_t)v6);
    return 1;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
  static Date.now.getter();
  unint64_t v15 = Date.numberOfDays(from:)();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v11, v7);
  v16(v13, v7);
  return a2 < 1 || v15 >= a2;
}

unint64_t sub_1004273C4(uint64_t a1)
{
  unint64_t result = sub_1004273EC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1004273EC()
{
  unint64_t result = qword_1006A71F8;
  if (!qword_1006A71F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1006A71F8);
  }
  return result;
}

uint64_t _s19NoteEditRequirementV5DatesVMa()
{
  uint64_t result = qword_1006A7258;
  if (!qword_1006A7258) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void (*sub_10042748C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6))(void *a1)
{
  uint64_t v10 = type metadata accessor for Date();
  *a1 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = v11;
  a1[1] = v11;
  uint64_t result = (void (*)(void *))malloc(*(void *)(v11 + 64));
  a1[2] = (uint64_t)result;
  if (a2 < a5 || (uint64_t)(a6 >> 1) <= a2)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(void))(v12 + 16))();
    return sub_100427588;
  }
  return result;
}

void sub_100427588(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  (*(void (**)(void *, void))(a1[1] + 8))(v1, *a1);

  free(v1);
}

uint64_t *sub_1004275D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      uint64_t v10 = sub_10002F214((uint64_t *)&unk_1006A3E20);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v12 = *(int *)(a3 + 20);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    if (v9((uint64_t *)v14, 1, v7))
    {
      uint64_t v15 = sub_10002F214((uint64_t *)&unk_1006A3E20);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1004277E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v4 - 8);
  int v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v5(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v6, 1, v4);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v6, v4);
  }
  return result;
}

char *sub_100427910(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(v12, 1, v6))
  {
    uint64_t v13 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  return a1;
}

char *sub_100427AD0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    uint64_t v17 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
  return a1;
}

char *sub_100427D4C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(v12, 1, v6))
  {
    uint64_t v13 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  return a1;
}

char *sub_100427F0C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    uint64_t v17 = sub_10002F214((uint64_t *)&unk_1006A3E20);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
  return a1;
}

uint64_t sub_100428188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10042819C);
}

uint64_t sub_10042819C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10042820C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100428220);
}

uint64_t sub_100428220(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_1006A3E20);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

void sub_100428294()
{
  sub_100005808();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100428320(void *a1, uint64_t a2)
{
  return sub_100428348(a1, a2, (unint64_t *)&qword_1006A0020);
}

uint64_t sub_100428334(void *a1, uint64_t a2)
{
  return sub_100428348(a1, a2, (unint64_t *)&qword_10069E810);
}

uint64_t sub_100428348(void *a1, uint64_t a2, unint64_t *a3)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v4 = a1;
    char v5 = __CocoaSet.contains(_:)();

    return v5 & 1;
  }
  if (!*(void *)(a2 + 16)
    || (Swift::Int v8 = NSObject._rawHashValue(seed:)(*(void *)(a2 + 40)),
        uint64_t v9 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v10 = v8 & ~v9,
        uint64_t v11 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0))
  {
LABEL_11:
    char v14 = 0;
    return v14 & 1;
  }
  sub_100031418(0, a3);
  id v12 = *(id *)(*(void *)(a2 + 48) + 8 * v10);
  char v13 = static NSObject.== infix(_:_:)();

  if ((v13 & 1) == 0)
  {
    uint64_t v15 = ~v9;
    unint64_t v16 = (v10 + 1) & v15;
    if ((*(void *)(v11 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16))
    {
      do
      {
        id v17 = *(id *)(*(void *)(a2 + 48) + 8 * v16);
        char v14 = static NSObject.== infix(_:_:)();

        if (v14) {
          break;
        }
        unint64_t v16 = (v16 + 1) & v15;
      }
      while (((*(void *)(v11 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) != 0);
      return v14 & 1;
    }
    goto LABEL_11;
  }
  char v14 = 1;
  return v14 & 1;
}

uint64_t sub_1004284A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          unint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t RealtimeCollaborationPaperKitController.description.getter()
{
  _StringGuts.grow(_:)(52);
  v0._object = (void *)0x8000000100557F70;
  v0._countAndFlagsBits = 0xD000000000000031;
  String.append(_:)(v0);
  type metadata accessor for EditNoteActivity();
  sub_100429F48(&qword_10069E5C8, (void (*)(uint64_t))&type metadata accessor for EditNoteActivity);
  v1._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._countAndFlagsBits = 41;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  return 0;
}

uint64_t RealtimeCollaborationPaperKitController.__allocating_init(activity:messageController:cloudConfiguration:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  RealtimeCollaborationPaperKitController.init(activity:messageController:cloudConfiguration:)(a1, a2, a3);
  return v6;
}

uint64_t sub_10042872C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100032974(v0, qword_1006A7290);
  sub_10003293C(v0, (uint64_t)qword_1006A7290);
  return static Logger.realtimeCollaboration.getter();
}

uint64_t RealtimeCollaborationPaperKitController.activity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11MobileNotes39RealtimeCollaborationPaperKitController_activity;
  uint64_t v4 = type metadata accessor for EditNoteActivity();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RealtimeCollaborationPaperKitController.messageController.getter()
{
  return swift_retain();
}

id RealtimeCollaborationPaperKitController.cloudConfiguration.getter()
{
  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC11MobileNotes39RealtimeCollaborationPaperKitController_cloudConfiguration));
}

id RealtimeCollaborationPaperKitController.note.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC11MobileNotes39RealtimeCollaborationPaperKitController_note);
}

uint64_t *RealtimeCollaborationPaperKitController.init(activity:messageController:cloudConfiguration:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v4;
  uint64_t v9 = sub_10002F214(&qword_1006A47C0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  BOOL v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = v8;
  id v40 = a3;
  uint64_t v38 = v10;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    sub_1001585C4((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    char v13 = &_swiftEmptySetSingleton;
  }
  *(uint64_t *)((char *)v4 + OBJC_IVAR____TtC11MobileNotes39RealtimeCollaborationPaperKitController_activeParticipants) = (uint64_t)v13;
  *(uint64_t *)((char *)v4
             + OBJC_IVAR____TtC11MobileNotes39RealtimeCollaborationPaperKitController_collaboratorDataSourceObservation) = 0;
  id v14 = [self sharedContext];
  if (!v14
    || (unint64_t v15 = v14,
        id v16 = [v14 managedObjectContext],
        v15,
        !v16))
  {
    type metadata accessor for ICError(0);
    uint64_t v43 = 225;
    sub_1001B50CC((uint64_t)_swiftEmptyArrayStorage);
    sub_100429F48((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
    swift_release();

    uint64_t v25 = type metadata accessor for EditNoteActivity();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(a1, v25);
LABEL_8:
    swift_bridgeObjectRelease();
    swift_release();
    swift_deallocPartialClassInstance();
    return v4;
  }
  uint64_t v37 = a2;
  EditNoteActivity.noteID.getter();
  id v17 = v16;
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v19 = [self noteWithIdentifier:v18 context:v17];

  id v36 = v17;
  if (!v19)
  {
    type metadata accessor for ICError(0);
    uint64_t v43 = 232;
    sub_10002F214((uint64_t *)&unk_10069E1D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100524D10;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v28;
    unint64_t v41 = 0;
    unint64_t v42 = 0xE000000000000000;
    _StringGuts.grow(_:)(34);
    swift_bridgeObjectRelease();
    unint64_t v41 = 0xD000000000000020;
    unint64_t v42 = 0x800000010055DCF0;
    v29._countAndFlagsBits = EditNoteActivity.noteID.getter();
    String.append(_:)(v29);
    swift_bridgeObjectRelease();
    unint64_t v30 = v41;
    unint64_t v31 = v42;
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = v30;
    *(void *)(inited + 56) = v31;
    sub_100167B58(inited);
    sub_100429F48((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();

    swift_release();
    uint64_t v32 = type metadata accessor for EditNoteActivity();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(a1, v32);
    goto LABEL_8;
  }
  uint64_t v20 = (char *)v4 + OBJC_IVAR____TtC11MobileNotes39RealtimeCollaborationPaperKitController_activity;
  uint64_t v35 = type metadata accessor for EditNoteActivity();
  uint64_t v39 = *(void *)(v35 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v20, a1, v35);
  *(uint64_t *)((char *)v4 + OBJC_IVAR____TtC11MobileNotes39RealtimeCollaborationPaperKitController_note) = (uint64_t)v19;
  *(uint64_t *)((char *)v4 + OBJC_IVAR____TtC11MobileNotes39RealtimeCollaborationPaperKitController_messageController) = v37;
  type metadata accessor for CollaborationParticipantDataSource();
  swift_allocObject();
  uint64_t v34 = a1;
  id v21 = v19;
  swift_retain();
  *(uint64_t *)((char *)v4 + OBJC_IVAR____TtC11MobileNotes39RealtimeCollaborationPaperKitController_participantDataSource) = (uint64_t)sub_10000FCE8(v21);
  id v22 = v40;
  *(uint64_t *)((char *)v4 + OBJC_IVAR____TtC11MobileNotes39RealtimeCollaborationPaperKitController_cloudConfiguration) = (uint64_t)v40;
  swift_beginAccess();
  id v23 = v22;
  swift_retain();
  sub_10002F214(&qword_1006A47C8);
  Published.projectedValue.getter();
  swift_endAccess();
  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_10001DFB0((unint64_t *)&unk_1006A47D0, &qword_1006A47C0);
  uint64_t v24 = Publisher<>.sink(receiveValue:)();

  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v34, v35);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v9);
  *(uint64_t *)((char *)v4
             + OBJC_IVAR____TtC11MobileNotes39RealtimeCollaborationPaperKitController_collaboratorDataSourceObservation) = v24;
  swift_release();
  return v4;
}

uint64_t sub_100428EEC()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    unint64_t v2 = swift_bridgeObjectRetain();
    uint64_t v3 = sub_10026A370(v2);
    swift_bridgeObjectRelease();
    *(void *)(v1 + OBJC_IVAR____TtC11MobileNotes39RealtimeCollaborationPaperKitController_activeParticipants) = v3;
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t RealtimeCollaborationPaperKitController.deinit()
{
  *(void *)(v0
            + OBJC_IVAR____TtC11MobileNotes39RealtimeCollaborationPaperKitController_collaboratorDataSourceObservation) = 0;
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MobileNotes39RealtimeCollaborationPaperKitController_activity;
  uint64_t v2 = type metadata accessor for EditNoteActivity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v0;
}

uint64_t RealtimeCollaborationPaperKitController.__deallocating_deinit()
{
  *(void *)(v0
            + OBJC_IVAR____TtC11MobileNotes39RealtimeCollaborationPaperKitController_collaboratorDataSourceObservation) = 0;
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MobileNotes39RealtimeCollaborationPaperKitController_activity;
  uint64_t v2 = type metadata accessor for EditNoteActivity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t RealtimeCollaborationPaperKitController.messages.getter()
{
  uint64_t v1 = sub_10002F214(&qword_10069B510);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  char v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v11[-v6];
  uint64_t v8 = *(void *)(*(void *)(v0
                             + OBJC_IVAR____TtC11MobileNotes39RealtimeCollaborationPaperKitController_messageController)
                 + OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_paperKitInbox);
  (*(void (**)(unsigned char *, void, uint64_t))(v2 + 104))(&v11[-v6], enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v1);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  sub_10002F214(&qword_10069B518);
  swift_allocObject();
  swift_retain();
  uint64_t v9 = sub_1001546FC((uint64_t)v5);
  os_unfair_lock_lock((os_unfair_lock_t)(v8 + 24));
  sub_100429FD0((void *)(v8 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v8 + 24));
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t RealtimeCollaborationPaperKitController.send(_:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_1006A7720);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = a1;
  v9[1] = a2;
  swift_retain();
  sub_100172484(a1, a2);
  sub_10002F214(&qword_10069BAC8);
  AsyncStream.Continuation.yield(_:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void RealtimeCollaborationPaperKitController.send(thumbnail:)(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_10002F214((uint64_t *)&unk_1006A7720);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v9) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
        JUMPOUT(0x1004297B8);
      }
      id v10 = [*(id *)(v2 + OBJC_IVAR____TtC11MobileNotes39RealtimeCollaborationPaperKitController_cloudConfiguration) fastSyncMaximumThumbnailMessageSizeBytes];
      uint64_t v9 = (int)v9;
LABEL_5:
      if ((uint64_t)v10 < v9) {
        goto LABEL_14;
      }
      goto LABEL_12;
    case 2uLL:
      uint64_t v12 = *(void *)(a1 + 16);
      uint64_t v11 = *(void *)(a1 + 24);
      uint64_t v9 = v11 - v12;
      if (__OFSUB__(v11, v12)) {
        goto LABEL_20;
      }
      id v13 = [*(id *)(v2 + OBJC_IVAR____TtC11MobileNotes39RealtimeCollaborationPaperKitController_cloudConfiguration) fastSyncMaximumThumbnailMessageSizeBytes];
      uint64_t v15 = *(void *)(a1 + 16);
      uint64_t v14 = *(void *)(a1 + 24);
      BOOL v16 = __OFSUB__(v14, v15);
      uint64_t v17 = v14 - v15;
      if (v16) {
        goto LABEL_21;
      }
      id v10 = v13;
      if ((uint64_t)v13 >= v17)
      {
LABEL_12:
        v23[0] = a1;
        v23[1] = a2;
        swift_retain();
        sub_100172484(a1, a2);
        sub_10002F214(&qword_10069BAC8);
        AsyncStream.Continuation.yield(_:)();
        swift_release();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
      else
      {
LABEL_14:
        if (qword_10069B040 != -1) {
          swift_once();
        }
        uint64_t v19 = type metadata accessor for Logger();
        sub_10003293C(v19, (uint64_t)qword_1006A7290);
        uint64_t v20 = Logger.logObject.getter();
        os_log_type_t v21 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v20, v21))
        {
          uint64_t v22 = swift_slowAlloc();
          *(_DWORD *)uint64_t v22 = 134218240;
          v23[0] = v9;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v22 + 12) = 2048;
          v23[0] = v10;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v20, v21, "Dropping PaperKit thumbnail (%ld bytes) because it exceeds the maximum size (%ld bytes)", (uint8_t *)v22, 0x16u);
          swift_slowDealloc();
        }
      }
      return;
    case 3uLL:
      unint64_t v18 = (unint64_t)[*(id *)(v2+ OBJC_IVAR____TtC11MobileNotes39RealtimeCollaborationPaperKitController_cloudConfiguration) fastSyncMaximumThumbnailMessageSizeBytes];
      if ((v18 & 0x8000000000000000) == 0) {
        goto LABEL_12;
      }
      id v10 = (id)v18;
      uint64_t v9 = 0;
      goto LABEL_14;
    default:
      uint64_t v9 = BYTE6(a2);
      id v10 = [*(id *)(v2 + OBJC_IVAR____TtC11MobileNotes39RealtimeCollaborationPaperKitController_cloudConfiguration) fastSyncMaximumThumbnailMessageSizeBytes];
      goto LABEL_5;
  }
}

void sub_1004297C8(uint64_t a1, unint64_t a2)
{
}

uint64_t sub_1004297E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = RealtimeCollaborationPaperKitController.messages.getter();
  *a1 = result;
  return result;
}

uint64_t RealtimeCollaborationPaperKitController.localParticipantID.getter()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes39RealtimeCollaborationPaperKitController_note);
  id v6 = [v5 currentReplicaID];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  id v8 = [v5 userIDForReplicaID:isa];

  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v9;
}

CGColorRef __swiftcall RealtimeCollaborationPaperKitController.color(for:)(Swift::String a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC11MobileNotes39RealtimeCollaborationPaperKitController_note);
  id v3 = [v2 collaborationColorManager];
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v3 highlightColorForUserID:v4 note:v2];

  if (v5)
  {
    uint64_t v7 = (CGColor *)[v5 CGColor];

    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::String __swiftcall RealtimeCollaborationPaperKitController.name(for:)(Swift::String a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC11MobileNotes39RealtimeCollaborationPaperKitController_note);
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 participantForUserID:v3];

  if (v4)
  {
    id v5 = [v4 ic_activityStreamDisplayName];

    id v4 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v7 = v6;
  }
  else
  {
    unint64_t v7 = 0xE000000000000000;
  }
  uint64_t v8 = (uint64_t)v4;
  uint64_t v9 = (void *)v7;
  result._object = v9;
  result._countAndFlagsBits = v8;
  return result;
}

uint64_t RealtimeCollaborationPaperKitController.avatarImage(for:size:)(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)(v5 + 48) = v4;
  *(double *)(v5 + 32) = a3;
  *(double *)(v5 + 40) = a4;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  type metadata accessor for MainActor();
  *(void *)(v5 + 56) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v5 + 64) = v7;
  *(void *)(v5 + 72) = v6;
  return _swift_task_switch(sub_100429B48, v7, v6);
}

uint64_t sub_100429B48()
{
  uint64_t v1 = v0[6];
  type metadata accessor for CollaboratorStatusView();
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC11MobileNotes39RealtimeCollaborationPaperKitController_note);
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 participantForUserID:v3];
  v0[10] = v4;

  uint64_t v5 = (void *)swift_task_alloc();
  v0[11] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100429C44;
  v6.n128_u64[0] = v0[4];
  v7.n128_u64[0] = v0[5];
  return static CollaboratorStatusView.fetchAvatarImage(for:size:)(v4, v6, v7);
}

uint64_t sub_100429C44(uint64_t a1)
{
  uint64_t v2 = *v1;
  NSString v3 = *(void **)(*v1 + 80);
  *(void *)(*v1 + 96) = a1;
  swift_task_dealloc();

  uint64_t v4 = *(void *)(v2 + 72);
  uint64_t v5 = *(void *)(v2 + 64);
  return _swift_task_switch(sub_100429D8C, v5, v4);
}

uint64_t sub_100429D8C()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t result = swift_release();
  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 96);
    uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v4(v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Bool __swiftcall RealtimeCollaborationPaperKitController.participantIsPresent(_:)(Swift::String a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC11MobileNotes39RealtimeCollaborationPaperKitController_note);
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 participantForUserID:v3];

  if (v4)
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC11MobileNotes39RealtimeCollaborationPaperKitController_activeParticipants);
    swift_bridgeObjectRetain();
    char v6 = sub_100428348(v4, v5, &qword_1006A4840);

    swift_bridgeObjectRelease();
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_100429EA8()
{
  return RealtimeCollaborationPaperKitController.description.getter();
}

uint64_t sub_100429ECC(void *a1)
{
  if (*(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  return specialized Array._endMutation()();
}

uint64_t sub_100429F48(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100429F90()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100429FC8()
{
  return sub_100428EEC();
}

uint64_t sub_100429FD0(void *a1)
{
  return sub_100429ECC(a1);
}

uint64_t sub_100429FEC()
{
  return sub_10001DFB0((unint64_t *)&unk_1006A72B0, &qword_10069B518);
}

uint64_t sub_10042A028()
{
  return type metadata accessor for RealtimeCollaborationPaperKitController();
}

uint64_t type metadata accessor for RealtimeCollaborationPaperKitController()
{
  uint64_t result = qword_1006A72E8;
  if (!qword_1006A72E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10042A07C()
{
  uint64_t result = type metadata accessor for EditNoteActivity();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t RealtimeCollaborationMessageController.__allocating_init(messenger:cloudConfiguration:cloudDatabase:activity:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_allocObject();
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_10017733C;
  return RealtimeCollaborationMessageController.init(messenger:cloudConfiguration:cloudDatabase:activity:context:)(a1, a2, a3, a4, a5);
}

uint64_t RealtimeCollaborationMessageController.numNonFatalErrorsEncounteredDuringSession.getter()
{
  unint64_t v1 = *(os_unfair_lock_s **)(v0
                            + OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_nonFatalErrorCount);
  uint64_t v2 = v1 + 4;
  NSString v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_100448BD8(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_10042A284()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100032974(v0, qword_1006A73A0);
  sub_10003293C(v0, (uint64_t)qword_1006A73A0);
  return static Logger.realtimeCollaboration.getter();
}

uint64_t sub_10042A2D0()
{
  uint64_t v0 = sub_10002F214(&qword_1006A3138);
  sub_100032974(v0, qword_1006A73B8);
  sub_10003293C(v0, (uint64_t)qword_1006A73B8);
  return static Logger.verboseRealtimeCollaboration.getter();
}

uint64_t sub_10042A320()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  NSString v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OSSignposter();
  sub_100032974(v4, qword_1006A73D0);
  sub_10003293C(v4, (uint64_t)qword_1006A73D0);
  if (qword_10069B048 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_10003293C(v0, (uint64_t)qword_1006A73A0);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return OSSignposter.init(logger:)();
}

uint64_t RealtimeCollaborationMessageController.activity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_activity;
  uint64_t v4 = type metadata accessor for EditNoteActivity();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

id RealtimeCollaborationMessageController.context.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_context);
}

uint64_t RealtimeCollaborationMessageController.messenger.getter()
{
  return swift_retain();
}

id RealtimeCollaborationMessageController.cloudConfiguration.getter()
{
  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_cloudConfiguration));
}

id RealtimeCollaborationMessageController.cloudDatabase.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_cloudDatabase);
}

uint64_t RealtimeCollaborationMessageController.cloudKitRecords.getter()
{
  return sub_10042A528(&OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_cloudKitRecords);
}

uint64_t RealtimeCollaborationMessageController.selectionMessages.getter()
{
  return sub_10042A528(&OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_selectionMessages);
}

uint64_t sub_10042A528(void *a1)
{
  uint64_t v2 = *(void *)(v1 + *a1);
  swift_retain();
  swift_retain();
  return v2;
}

uint64_t RealtimeCollaborationMessageController.paperKitInbox.getter()
{
  return swift_retain();
}

uint64_t RealtimeCollaborationMessageController.paperKitOutbox.getter()
{
  return swift_retain();
}

uint64_t RealtimeCollaborationMessageController.init(messenger:cloudConfiguration:cloudDatabase:activity:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[33] = a5;
  v6[34] = v5;
  v6[31] = a3;
  v6[32] = a4;
  v6[29] = a1;
  v6[30] = a2;
  v6[35] = *v5;
  sub_10002F214(&qword_1006A09A0);
  v6[36] = swift_task_alloc();
  uint64_t v7 = sub_10002F214(&qword_10069B510);
  v6[37] = v7;
  v6[38] = *(void *)(v7 - 8);
  v6[39] = swift_task_alloc();
  uint64_t v8 = sub_10002F214((uint64_t *)&unk_1006A7400);
  v6[40] = v8;
  v6[41] = *(void *)(v8 - 8);
  v6[42] = swift_task_alloc();
  v6[43] = swift_task_alloc();
  uint64_t v9 = sub_10002F214(&qword_10069B4E8);
  v6[44] = v9;
  v6[45] = *(void *)(v9 - 8);
  v6[46] = swift_task_alloc();
  v6[47] = swift_task_alloc();
  return _swift_task_switch(sub_10042A78C, 0, 0);
}

uint64_t sub_10042A78C()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[46];
  uint64_t v3 = v0[47];
  id v50 = v0 + 22;
  uint64_t v4 = v0[44];
  uint64_t v5 = v0[45];
  uint64_t v40 = v0[43];
  uint64_t v41 = v0[42];
  uint64_t v38 = v0[41];
  uint64_t v39 = v0[40];
  uint64_t v42 = v0[38];
  uint64_t v43 = v0[39];
  uint64_t v44 = v0[37];
  uint64_t v6 = v0[34];
  uint64_t v49 = (void *)v0[33];
  uint64_t v47 = (void *)v0[31];
  uint64_t v48 = v0[32];
  uint64_t v45 = v0[29];
  int64_t v46 = (void *)v0[30];
  uint64_t v7 = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_cloudKitRecords;
  v0[48] = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_cloudKitRecords;
  id v36 = (uint64_t *)(v6 + v7);
  unsigned int v51 = enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:);
  (*(void (**)(uint64_t))(v5 + 104))(v3);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v8(v2, v3, v4);
  sub_10002F214((uint64_t *)&unk_10069B4F0);
  swift_allocObject();
  uint64_t v34 = sub_100154D50(v2);
  v8(v2, v3, v4);
  swift_allocObject();
  uint64_t v9 = sub_100154D50(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  *id v36 = v34;
  v36[1] = v9;
  uint64_t v10 = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_selectionMessages;
  v0[49] = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_selectionMessages;
  uint64_t v37 = (uint64_t *)(v6 + v10);
  (*(void (**)(uint64_t, void, uint64_t))(v38 + 104))(v40, v51, v39);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16);
  v11(v41, v40, v39);
  sub_10002F214((uint64_t *)&unk_10069B500);
  swift_allocObject();
  uint64_t v35 = sub_100154A28(v41);
  v11(v41, v40, v39);
  swift_allocObject();
  uint64_t v12 = sub_100154A28(v41);
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v40, v39);
  *uint64_t v37 = v35;
  v37[1] = v12;
  uint64_t v13 = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_paperKitInbox;
  v0[50] = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_paperKitInbox;
  sub_10002F214((uint64_t *)&unk_1006A7410);
  uint64_t v14 = swift_allocObject();
  *(_DWORD *)(v14 + 24) = 0;
  *(void *)(v14 + 16) = _swiftEmptyArrayStorage;
  *(void *)(v6 + v13) = v14;
  uint64_t v15 = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_paperKitOutbox;
  v0[51] = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_paperKitOutbox;
  (*(void (**)(uint64_t, void, uint64_t))(v42 + 104))(v43, v51, v44);
  sub_10002F214(&qword_10069B518);
  swift_allocObject();
  *(void *)(v6 + v15) = sub_1001546FC(v43);
  uint64_t v16 = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_subtasks;
  v0[52] = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_subtasks;
  *(void *)(v6 + v16) = _swiftEmptyArrayStorage;
  uint64_t v17 = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_nonFatalErrorCount;
  v0[53] = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_nonFatalErrorCount;
  sub_10002F214(&qword_10069B520);
  uint64_t v18 = swift_allocObject();
  *(_DWORD *)(v18 + 24) = 0;
  *(void *)(v18 + 16) = 0;
  *(void *)(v6 + v17) = v18;
  uint64_t v19 = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_messenger;
  v0[54] = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_messenger;
  *(void *)(v6 + v19) = v45;
  uint64_t v20 = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_cloudConfiguration;
  v0[55] = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_cloudConfiguration;
  *(void *)(v6 + v20) = v46;
  uint64_t v21 = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_cloudDatabase;
  v0[56] = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_cloudDatabase;
  *(void *)(v6 + v21) = v47;
  uint64_t v22 = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_activity;
  v0[57] = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_activity;
  uint64_t v23 = v6 + v22;
  uint64_t v24 = type metadata accessor for EditNoteActivity();
  v0[58] = v24;
  uint64_t v25 = *(void *)(v24 - 8);
  v0[59] = v25;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v23, v48, v24);
  uint64_t v26 = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_context;
  v0[60] = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_context;
  *(void *)(v6 + v26) = v49;
  swift_retain();
  id v27 = v46;
  id v28 = v47;
  id v29 = v49;
  unint64_t v30 = (void *)swift_task_alloc();
  v1[61] = v30;
  uint64_t v31 = sub_10002F214(&qword_1006A7430);
  *unint64_t v30 = v1;
  v30[1] = sub_10042AC2C;
  uint64_t v32 = v1[33];
  return EditNoteActivity.withNote<A>(in:_:)(v50, v32, sub_10042B734, 0, v31);
}

uint64_t sub_10042AC2C()
{
  *(void *)(*(void *)v1 + 496) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10042B524;
  }
  else {
    uint64_t v2 = sub_10042AD40;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10042AD40()
{
  uint64_t v2 = (void *)v0[22];
  uint64_t v1 = (void *)v0[23];
  uint64_t v3 = (void *)v0[24];
  if (v2)
  {
    if (v3)
    {
      uint64_t v4 = v0[36];
      uint64_t v5 = v0[34];
      *(void *)(v5 + OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_encryptionParentRecordID) = v2;
      sub_10002F214(&qword_1006A7440);
      uint64_t v6 = swift_allocObject();
      *(_DWORD *)(v6 + 24) = 0;
      *(void *)(v6 + 16) = v1;
      *(void *)(v5 + OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_share) = v6;
      *(void *)(v5 + OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_paperKitTemplateRecord) = v3;
      id v55 = v1;
      id v52 = v2;
      id v49 = v3;
      sub_10042B7E8();
      uint64_t v8 = v7;
      sub_10042B990();
      uint64_t v10 = v9;
      uint64_t v11 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 1, 1, v11);
      uint64_t v12 = swift_allocObject();
      swift_weakInit();
      uint64_t v13 = (void *)swift_allocObject();
      void v13[2] = 0;
      v13[3] = 0;
      void v13[4] = v12;
      uint64_t v14 = sub_10030B6A4(v4, (uint64_t)&unk_1006A7460, (uint64_t)v13);
      sub_10022B874(v10);
      uint64_t v15 = v8;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v15 = sub_1001A8C44(0, v8[2] + 1, 1, v8);
      }
      unint64_t v17 = v15[2];
      unint64_t v16 = v15[3];
      if (v17 >= v16 >> 1) {
        uint64_t v15 = sub_1001A8C44((void *)(v16 > 1), v17 + 1, 1, v15);
      }
      uint64_t v18 = v0[59];
      uint64_t v45 = v0[58];
      uint64_t v20 = (void *)v0[33];
      uint64_t v19 = v0[34];
      uint64_t v21 = (void *)v0[31];
      uint64_t v44 = v0[32];
      uint64_t v22 = (void *)v0[30];
      void v15[2] = v17 + 1;
      v15[v17 + 4] = v14;

      swift_release();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v44, v45);
      *(void *)(v19 + OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_subtasks) = v15;
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v23 = (uint64_t (*)(uint64_t))v0[1];
      uint64_t v24 = v0[34];
      return v23(v24);
    }
    uint64_t v32 = v0[59];
    uint64_t v33 = v0[32];
    unint64_t v54 = (void *)v0[33];
    uint64_t v57 = v0[58];
    uint64_t v48 = (void *)v0[30];
    unsigned int v51 = (void *)v0[31];
    type metadata accessor for ICError(0);
    v0[28] = 232;
    sub_10002F214((uint64_t *)&unk_10069E1D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100524D10;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v35;
    id v36 = v2;
    _StringGuts.grow(_:)(53);
    v37._countAndFlagsBits = 0xD000000000000033;
    v37._object = (void *)0x800000010055DDB0;
    String.append(_:)(v37);
    v38._countAndFlagsBits = EditNoteActivity.noteID.getter();
    String.append(_:)(v38);
    swift_bridgeObjectRelease();
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = 0;
    *(void *)(inited + 56) = 0xE000000000000000;
    sub_100167B58(inited);
    sub_100449994((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();

    swift_release();
    uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
    v31(v33, v57);
  }
  else
  {
    uint64_t v26 = v0[59];
    uint64_t v53 = (void *)v0[33];
    uint64_t v56 = v0[58];
    uint64_t v46 = v0[32];
    uint64_t v47 = (void *)v0[30];
    id v50 = (void *)v0[31];
    type metadata accessor for ICError(0);
    v0[25] = 232;
    sub_10002F214((uint64_t *)&unk_10069E1D0);
    uint64_t v27 = swift_initStackObject();
    *(_OWORD *)(v27 + 16) = xmmword_100524D10;
    *(void *)(v27 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(v27 + 40) = v28;
    _StringGuts.grow(_:)(39);
    swift_bridgeObjectRelease();
    v29._countAndFlagsBits = EditNoteActivity.noteID.getter();
    String.append(_:)(v29);
    swift_bridgeObjectRelease();
    v30._object = (void *)0x800000010055DD80;
    v30._countAndFlagsBits = 0xD000000000000020;
    String.append(_:)(v30);
    *(void *)(v27 + 72) = &type metadata for String;
    *(void *)(v27 + 48) = 0x2065746F4ELL;
    *(void *)(v27 + 56) = 0xE500000000000000;
    sub_100167B58(v27);
    sub_100449994((unint64_t *)&qword_10069E4D0, type metadata accessor for ICError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_willThrow();
    swift_release();

    uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v31(v46, v56);
  }
  uint64_t v39 = v0[60];
  uint64_t v40 = v0[55];
  uint64_t v41 = v0[56];
  uint64_t v42 = v0[34];
  v31(v42 + v0[57], v0[58]);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_deallocPartialClassInstance();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v43 = (uint64_t (*)(void))v0[1];
  return v43();
}

uint64_t sub_10042B524()
{
  uint64_t v1 = *(void *)(v0 + 464);
  uint64_t v2 = *(void *)(v0 + 472);
  uint64_t v3 = *(void *)(v0 + 256);
  uint64_t v5 = *(void **)(v0 + 240);
  uint64_t v4 = *(void **)(v0 + 248);

  swift_release();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v6(v3, v1);
  uint64_t v7 = *(void *)(v0 + 480);
  uint64_t v8 = *(void *)(v0 + 440);
  uint64_t v9 = *(void *)(v0 + 448);
  uint64_t v10 = *(void *)(v0 + 272);
  v6(v10 + *(void *)(v0 + 456), *(void *)(v0 + 464));

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_deallocPartialClassInstance();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

void sub_10042B734(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = [a1 recordID];
  a2[1] = [a1 serverShareCheckingParent];
  id v4 = [a1 serverRecord];
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = [v4 ic_copyWithUserFields:0];
  }
  else
  {
    id v6 = 0;
  }
  a2[2] = v6;
}

double sub_10042B7E8()
{
  uint64_t v1 = sub_10002F214(&qword_1006A09A0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static TaskPriority.userInitiated.getter();
  uint64_t v4 = type metadata accessor for TaskPriority();
  uint64_t v5 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  v5(v3, 0, 1, v4);
  id v6 = (void *)swift_allocObject();
  uint64_t v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  swift_retain();
  uint64_t v7 = sub_10030B6A4((uint64_t)v3, (uint64_t)&unk_1006A76B8, (uint64_t)v6);
  static TaskPriority.userInitiated.getter();
  v5(v3, 0, 1, v4);
  uint64_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = 0;
  v8[3] = 0;
  v8[4] = v0;
  swift_retain();
  uint64_t v9 = sub_10030B6A4((uint64_t)v3, (uint64_t)&unk_1006A76C8, (uint64_t)v8);
  sub_10002F214(&qword_10069DC88);
  uint64_t v10 = swift_allocObject();
  *(void *)&double result = 2;
  *(_OWORD *)(v10 + 16) = xmmword_100527F30;
  *(void *)(v10 + 32) = v7;
  *(void *)(v10 + 40) = v9;
  return result;
}

double sub_10042B990()
{
  uint64_t v1 = sub_10002F214(&qword_1006A09A0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static TaskPriority.userInitiated.getter();
  uint64_t v4 = type metadata accessor for TaskPriority();
  uint64_t v5 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  v5(v3, 0, 1, v4);
  id v6 = (void *)swift_allocObject();
  uint64_t v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  swift_retain();
  uint64_t v7 = sub_10030B6A4((uint64_t)v3, (uint64_t)&unk_1006A75B0, (uint64_t)v6);
  static TaskPriority.userInitiated.getter();
  v5(v3, 0, 1, v4);
  uint64_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = 0;
  v8[3] = 0;
  v8[4] = v0;
  swift_retain();
  uint64_t v9 = sub_10030B6A4((uint64_t)v3, (uint64_t)&unk_1006A75C0, (uint64_t)v8);
  static TaskPriority.userInitiated.getter();
  v5(v3, 0, 1, v4);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v0;
  swift_retain();
  uint64_t v11 = sub_10030B6A4((uint64_t)v3, (uint64_t)&unk_1006A75D0, (uint64_t)v10);
  sub_10002F214(&qword_10069DC88);
  uint64_t v12 = swift_allocObject();
  *(void *)&double result = 3;
  *(_OWORD *)(v12 + 16) = xmmword_100529A00;
  *(void *)(v12 + 32) = v7;
  *(void *)(v12 + 40) = v9;
  *(void *)(v12 + 48) = v11;
  return result;
}

Swift::Void __swiftcall RealtimeCollaborationMessageController.finish()()
{
  sub_10002F214(&qword_10069BAA8);
  AsyncStream.Continuation.finish()();
  AsyncStream.Continuation.finish()();
  sub_10002F214(&qword_10069BA90);
  AsyncStream.Continuation.finish()();
  AsyncStream.Continuation.finish()();
  sub_10042BD8C(*(os_unfair_lock_s **)(v0
                                     + OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_paperKitInbox));
  sub_10002F214(&qword_10069BAC8);
  AsyncStream.Continuation.finish()();
  uint64_t v1 = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_subtasks;
  uint64_t v2 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_subtasks)
                 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    do
    {
      ++v3;
      swift_retain();
      Task.cancel()();
      swift_release();
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
  }
  *(void *)(v0 + v1) = _swiftEmptyArrayStorage;

  swift_bridgeObjectRelease();
}

uint64_t sub_10042BD8C(os_unfair_lock_s *a1)
{
  uint64_t v1 = (uint64_t *)&a1[4];
  uint64_t v2 = a1 + 6;
  os_unfair_lock_lock(a1 + 6);
  sub_100448FB4(v1, &v7);
  os_unfair_lock_unlock(v2);
  unint64_t v3 = v7;
  if (!(v7 >> 62))
  {
    uint64_t v4 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v4 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  if (v4 >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      ++v6;
      sub_10002F214(&qword_10069BAC8);
      AsyncStream.Continuation.finish()();
      swift_release();
    }
    while (v4 != v6);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_10042BEC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[21] = a4;
  uint64_t v5 = type metadata accessor for Notification();
  v4[22] = v5;
  v4[23] = *(void *)(v5 - 8);
  v4[24] = swift_task_alloc();
  sub_10002F214(qword_10069F2D8);
  v4[25] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for NSNotificationCenter.Notifications.Iterator();
  v4[26] = v6;
  v4[27] = *(void *)(v6 - 8);
  v4[28] = swift_task_alloc();
  return _swift_task_switch(sub_10042C010, 0, 0);
}

uint64_t sub_10042C010()
{
  id v1 = [self defaultCenter];
  NSNotificationCenter.notifications(named:object:)();

  NSNotificationCenter.Notifications.makeAsyncIterator()();
  swift_beginAccess();
  v0[29] = ICNotesCloudContextDidFetchShareNotificationShareKey;
  uint64_t v2 = sub_100449994((unint64_t *)&qword_1006A7590, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator);
  unint64_t v3 = (void *)swift_task_alloc();
  v0[30] = v3;
  *unint64_t v3 = v0;
  v3[1] = sub_10042C178;
  uint64_t v4 = v0[25];
  uint64_t v5 = v0[26];
  return dispatch thunk of AsyncIteratorProtocol.next()(v4, v5, v2);
}

uint64_t sub_10042C178()
{
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10042C86C;
  }
  else {
    uint64_t v2 = sub_10042C28C;
  }
  return _swift_task_switch(v2, 0, 0);
}

void sub_10042C28C()
{
  uint64_t v44 = v0;
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 184);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 216) + 8))(*(void *)(v0 + 224), *(void *)(v0 + 208));
LABEL_23:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v34 = *(void (**)(void))(v0 + 8);
    v34();
    return;
  }
  (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(*(void *)(v0 + 192), v1, v2);
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    uint64_t v13 = *(void *)(v0 + 216);
    uint64_t v12 = *(void *)(v0 + 224);
    uint64_t v14 = *(void *)(v0 + 208);
    (*(void (**)(void, void))(*(void *)(v0 + 184) + 8))(*(void *)(v0 + 192), *(void *)(v0 + 176));
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    goto LABEL_23;
  }
  uint64_t v5 = Strong;
  uint64_t v6 = (_OWORD *)(v0 + 56);
  uint64_t v7 = Notification.userInfo.getter();
  if (!v7)
  {
    _OWORD *v6 = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
LABEL_17:
    sub_10002B754(v0 + 56, &qword_10069B4D0);
    goto LABEL_18;
  }
  uint64_t v8 = v7;
  *(void *)(v0 + 112) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 120) = v9;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v8 + 16) && (unint64_t v10 = sub_100033028(v0 + 16), (v11 & 1) != 0))
  {
    sub_100032E28(*(void *)(v8 + 56) + 32 * v10, v0 + 56);
  }
  else
  {
    _OWORD *v6 = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
  }
  swift_bridgeObjectRelease();
  sub_100033134(v0 + 16);
  if (!*(void *)(v0 + 80)) {
    goto LABEL_17;
  }
  sub_100031418(0, &qword_10069E690);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_18:
    if (qword_10069B048 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_10003293C(v20, (uint64_t)qword_1006A73A0);
    os_log_type_t v21 = static os_log_type_t.fault.getter();
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = v21;
    BOOL v24 = os_log_type_enabled(v22, v21);
    uint64_t v25 = *(void *)(v0 + 216);
    uint64_t v26 = *(void *)(v0 + 224);
    uint64_t v27 = *(void *)(v0 + 208);
    uint64_t v28 = *(void *)(v0 + 184);
    uint64_t v29 = *(void *)(v0 + 192);
    uint64_t v30 = *(void *)(v0 + 176);
    if (v24)
    {
      uint64_t v42 = *(void *)(v0 + 192);
      uint64_t v31 = swift_slowAlloc();
      v43[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 136315650;
      uint64_t v32 = StaticString.description.getter();
      *(void *)(v0 + 144) = sub_10045DA1C(v32, v33, v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2048;
      *(void *)(v0 + 128) = 137;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v31 + 22) = 2080;
      *(void *)(v0 + 136) = sub_10045DA1C(0xD000000000000049, 0x800000010055DF50, v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Failed assertion at %s:%lu: %s", (uint8_t *)v31, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v42, v30);
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v27);
    }
    else
    {

      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v29, v30);
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v27);
    }
    goto LABEL_23;
  }
  uint64_t v15 = *(void *)(v0 + 248);
  unint64_t v16 = *(void **)(v0 + 160);
  uint64_t v17 = *(void *)(v5 + OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_share);
  *(void *)(swift_task_alloc() + 16) = v16;
  uint64_t v18 = (void **)(v17 + 16);
  uint64_t v19 = (os_unfair_lock_s *)(v17 + 24);
  os_unfair_lock_lock(v19);
  sub_100448FCC(v18);
  if (v15)
  {
    os_unfair_lock_unlock(v19);
  }
  else
  {
    uint64_t v36 = *(void *)(v0 + 184);
    uint64_t v35 = *(void *)(v0 + 192);
    uint64_t v37 = *(void *)(v0 + 176);
    os_unfair_lock_unlock(v19);
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);

    swift_release();
    uint64_t v38 = sub_100449994((unint64_t *)&qword_1006A7590, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator);
    uint64_t v39 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v39;
    *uint64_t v39 = v0;
    v39[1] = sub_10042C178;
    uint64_t v40 = *(void *)(v0 + 200);
    uint64_t v41 = *(void *)(v0 + 208);
    dispatch thunk of AsyncIteratorProtocol.next()(v40, v41, v38);
  }
}

uint64_t sub_10042C86C()
{
  *(void *)(v0 + 152) = *(void *)(v0 + 248);
  sub_10002F214(&qword_1006A3D90);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

void sub_10042C8F0(void **a1, void *a2)
{
  uint64_t v4 = *a1;
  if (v4) {
    id v5 = [v4 recordID];
  }
  else {
    id v5 = 0;
  }
  id v6 = [a2 recordID];
  uint64_t v7 = v6;
  if (!v5)
  {
    if (v6)
    {

      return;
    }
LABEL_10:
    if (qword_10069B048 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_10003293C(v10, (uint64_t)qword_1006A73A0);
    id v11 = a2;
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315138;
      id v15 = [v11 ic_loggingDescription];
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v18 = v17;

      sub_10045DA1C(v16, v18, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Did receive new share: %s", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v19 = *a1;
    id v20 = v11;

    *a1 = v11;
    return;
  }
  if (!v6)
  {

    return;
  }
  sub_100031418(0, &qword_1006A75A0);
  id v8 = v5;
  char v9 = static NSObject.== infix(_:_:)();

  if (v9) {
    goto LABEL_10;
  }
}

uint64_t sub_10042CB90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a4;
  sub_10002F214(&qword_1006A7798);
  v4[4] = swift_task_alloc();
  uint64_t v5 = sub_10002F214(&qword_1006A7658);
  v4[5] = v5;
  v4[6] = *(void *)(v5 - 8);
  v4[7] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for GroupSessionMessenger.MessageContext();
  v4[8] = v6;
  v4[9] = *(void *)(v6 - 8);
  v4[10] = swift_task_alloc();
  uint64_t v7 = sub_10002F214(&qword_1006A77A0);
  v4[11] = v7;
  v4[12] = *(void *)(v7 - 8);
  v4[13] = swift_task_alloc();
  sub_10002F214(&qword_1006A77A8);
  v4[14] = swift_task_alloc();
  uint64_t v8 = sub_10002F214(&qword_1006A77B0);
  v4[15] = v8;
  v4[16] = *(void *)(v8 - 8);
  v4[17] = swift_task_alloc();
  uint64_t v9 = sub_10002F214(&qword_1006A77B8);
  v4[18] = v9;
  v4[19] = *(void *)(v9 - 8);
  v4[20] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for MessageChunking.UnsafeAppendingAccumulator();
  v4[21] = v10;
  v4[22] = *(void *)(v10 - 8);
  v4[23] = swift_task_alloc();
  return _swift_task_switch(sub_10042CE8C, 0, 0);
}

uint64_t sub_10042CE8C()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[15];
  MessageChunking.UnsafeAppendingAccumulator.init()();
  sub_10001DFB0(&qword_1006A77C0, &qword_1006A77A0);
  sub_10001DFB0(&qword_1006A77C8, &qword_1006A77A0);
  GroupSessionMessenger.messages<A>(of:)();
  GroupSessionMessenger.Messages.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[24] = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_nonFatalErrorCount;
  uint64_t v4 = sub_10001DFB0(&qword_1006A77D0, &qword_1006A77B8);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[25] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10042D03C;
  uint64_t v6 = v0[18];
  uint64_t v7 = v0[14];
  return dispatch thunk of AsyncIteratorProtocol.next()(v7, v6, v4);
}

uint64_t sub_10042D03C()
{
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100449A98;
  }
  else {
    uint64_t v2 = sub_10042D150;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10042D150()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = sub_10002F214(&qword_1006A77D8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
    if (qword_10069B048 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10003293C(v3, (uint64_t)qword_1006A73A0);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Note subscriber task finished", v6, 2u);
      swift_slowDealloc();
    }

    goto LABEL_9;
  }
  uint64_t v7 = v0[10];
  uint64_t v8 = v0[8];
  uint64_t v9 = v0[9];
  uint64_t v10 = v1 + *(int *)(v2 + 48);
  (*(void (**)(void, uint64_t, void))(v0[12] + 32))(v0[13], v1, v0[11]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v7, v10, v8);
  if (static Task<>.isCancelled.getter())
  {
    uint64_t v12 = v0[19];
    uint64_t v11 = v0[20];
    uint64_t v13 = v0[18];
    uint64_t v15 = v0[12];
    uint64_t v14 = v0[13];
    uint64_t v16 = v0[11];
    (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
LABEL_9:
    (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
  uint64_t v19 = v0[26];
  sub_10001DFB0(&qword_1006A7680, &qword_1006A7658);
  sub_10001DFB0(&qword_1006A7688, &qword_1006A7658);
  MessageChunking.UnsafeAppendingAccumulator.process<A>(incoming:)();
  if (v19)
  {
    if (qword_10069B048 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_10003293C(v20, (uint64_t)qword_1006A73A0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      BOOL v24 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 138412290;
      swift_errorRetain();
      uint64_t v25 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v23 + 4) = v25;
      *BOOL v24 = v25;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Error processing incoming CloudKit message: %@", (uint8_t *)v23, 0xCu);
      sub_10002F214(&qword_10069FD50);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v32 = v0[24];
    uint64_t v33 = v0[3];

    uint64_t v34 = *(os_unfair_lock_s **)(v33 + v32);
    uint64_t v35 = v34 + 4;
    uint64_t v36 = v34 + 6;
    os_unfair_lock_lock(v34 + 6);
    sub_100448BE4(v35);
    uint64_t v38 = v0[12];
    uint64_t v37 = v0[13];
    uint64_t v40 = v0[10];
    uint64_t v39 = v0[11];
    uint64_t v41 = v0[8];
    uint64_t v42 = v0[9];
    os_unfair_lock_unlock(v36);
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v41);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    goto LABEL_21;
  }
  uint64_t v26 = v0[5];
  uint64_t v27 = v0[6];
  uint64_t v28 = v0[4];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v28, 1, v26) == 1)
  {
    uint64_t v30 = v0[12];
    uint64_t v29 = v0[13];
    uint64_t v31 = v0[11];
    (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    sub_10002B754(v28, &qword_1006A7798);
LABEL_21:
    uint64_t v43 = sub_10001DFB0(&qword_1006A77D0, &qword_1006A77B8);
    uint64_t v44 = (void *)swift_task_alloc();
    v0[25] = v44;
    *uint64_t v44 = v0;
    v44[1] = sub_10042D03C;
    uint64_t v45 = v0[18];
    uint64_t v46 = v0[14];
    return dispatch thunk of AsyncIteratorProtocol.next()(v46, v45, v43);
  }
  (*(void (**)(void, uint64_t, uint64_t))(v27 + 32))(v0[7], v28, v26);
  uint64_t v47 = (void *)swift_task_alloc();
  v0[27] = v47;
  *uint64_t v47 = v0;
  v47[1] = sub_10042D840;
  uint64_t v48 = v0[10];
  uint64_t v49 = v0[7];
  return sub_10042DD88(v49, v48);
}

uint64_t sub_10042D840()
{
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10042DA88;
  }
  else {
    uint64_t v2 = sub_10042D954;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10042D954()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v4 = v0[10];
  uint64_t v3 = v0[11];
  uint64_t v5 = v0[8];
  uint64_t v6 = v0[9];
  (*(void (**)(void, void))(v0[6] + 8))(v0[7], v0[5]);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v7 = sub_10001DFB0(&qword_1006A77D0, &qword_1006A77B8);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[25] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_10042D03C;
  uint64_t v9 = v0[18];
  uint64_t v10 = v0[14];
  return dispatch thunk of AsyncIteratorProtocol.next()(v10, v9, v7);
}

uint64_t sub_10042DA88()
{
  (*(void (**)(void, void))(v0[6] + 8))(v0[7], v0[5]);
  if (qword_10069B048 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10003293C(v1, (uint64_t)qword_1006A73A0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v4 + 4) = v6;
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error processing incoming CloudKit message: %@", (uint8_t *)v4, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = v0[24];
  uint64_t v8 = v0[3];

  uint64_t v9 = *(os_unfair_lock_s **)(v8 + v7);
  uint64_t v10 = v9 + 4;
  uint64_t v11 = v9 + 6;
  os_unfair_lock_lock(v9 + 6);
  sub_100448BE4(v10);
  uint64_t v13 = v0[12];
  uint64_t v12 = v0[13];
  uint64_t v15 = v0[10];
  uint64_t v14 = v0[11];
  uint64_t v16 = v0[8];
  uint64_t v17 = v0[9];
  os_unfair_lock_unlock(v11);
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  uint64_t v18 = sub_10001DFB0(&qword_1006A77D0, &qword_1006A77B8);
  uint64_t v19 = (void *)swift_task_alloc();
  v0[25] = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_10042D03C;
  uint64_t v20 = v0[18];
  uint64_t v21 = v0[14];
  return dispatch thunk of AsyncIteratorProtocol.next()(v21, v20, v18);
}

uint64_t sub_10042DD88(uint64_t a1, uint64_t a2)
{
  v3[53] = a2;
  v3[54] = v2;
  v3[52] = a1;
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_1006A7720);
  v3[55] = v4;
  v3[56] = *(void *)(v4 - 8);
  v3[57] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Logger();
  v3[58] = v5;
  v3[59] = *(void *)(v5 - 8);
  v3[60] = swift_task_alloc();
  uint64_t v6 = sub_10002F214(&qword_1006A2F20);
  v3[61] = v6;
  v3[62] = *(void *)(v6 - 8);
  v3[63] = swift_task_alloc();
  v3[64] = sub_10002F214(&qword_1006A3138);
  v3[65] = swift_task_alloc();
  v3[66] = swift_task_alloc();
  v3[67] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for FastSync.PaperKitMessage();
  v3[68] = v7;
  v3[69] = *(void *)(v7 - 8);
  v3[70] = swift_task_alloc();
  v3[71] = swift_task_alloc();
  v3[72] = swift_task_alloc();
  v3[73] = swift_task_alloc();
  uint64_t v8 = sub_10002F214(&qword_1006A7730);
  v3[74] = v8;
  v3[75] = *(void *)(v8 - 8);
  v3[76] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for FastSync.SelectionMessage();
  v3[77] = v9;
  v3[78] = *(void *)(v9 - 8);
  v3[79] = swift_task_alloc();
  v3[80] = swift_task_alloc();
  v3[81] = swift_task_alloc();
  v3[82] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Participant();
  v3[83] = v10;
  v3[84] = *(void *)(v10 - 8);
  v3[85] = swift_task_alloc();
  v3[86] = swift_task_alloc();
  v3[87] = swift_task_alloc();
  v3[88] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for FastSync.NoteContentMessage();
  v3[89] = v11;
  v3[90] = *(void *)(v11 - 8);
  v3[91] = swift_task_alloc();
  v3[92] = swift_task_alloc();
  v3[93] = sub_10002F214(&qword_1006A77E8);
  v3[94] = swift_task_alloc();
  v3[95] = swift_task_alloc();
  uint64_t v12 = sub_10002F214(&qword_1006A7658);
  v3[96] = v12;
  v3[97] = *(void *)(v12 - 8);
  v3[98] = swift_task_alloc();
  v3[99] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for FastSync.MessageVersion();
  v3[100] = v13;
  v3[101] = *(void *)(v13 - 8);
  v3[102] = swift_task_alloc();
  v3[103] = swift_task_alloc();
  return _swift_task_switch(sub_10042E2D4, 0, 0);
}

uint64_t sub_10042E2D4()
{
  uint64_t v89 = v0;
  uint64_t v1 = *(void *)(v0 + 824);
  uint64_t v2 = *(void *)(v0 + 816);
  uint64_t v3 = *(void *)(v0 + 808);
  uint64_t v4 = *(void *)(v0 + 800);
  FastSync.MessageContainer.version.getter();
  static FastSync.MessageVersion.current.getter();
  sub_100449994(&qword_1006A7740, (void (*)(uint64_t))&type metadata accessor for FastSync.MessageVersion);
  char v5 = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v6(v2, v4);
  v6(v1, v4);
  if (v5)
  {
    if (qword_10069B048 != -1) {
      swift_once();
    }
    uint64_t v7 = *(void *)(v0 + 792);
    uint64_t v8 = *(void *)(v0 + 776);
    uint64_t v9 = *(void *)(v0 + 768);
    uint64_t v10 = *(void *)(v0 + 416);
    sub_10003293C(*(void *)(v0 + 464), (uint64_t)qword_1006A73A0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v10, v9);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = *(void *)(v0 + 824);
      uint64_t v82 = *(void *)(v0 + 800);
      os_log_type_t v86 = v12;
      uint64_t v14 = *(void *)(v0 + 792);
      uint64_t v15 = *(void *)(v0 + 776);
      uint64_t v16 = *(void *)(v0 + 768);
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      v88[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315138;
      FastSync.MessageContainer.version.getter();
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
      sub_100449994(&qword_1006A7778, (void (*)(uint64_t))&type metadata accessor for FastSync.MessageVersion);
      uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v20 = v19;
      v6(v13, v82);
      *(void *)(v0 + 408) = sub_10045DA1C(v18, v20, v88);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v11, v86, "Skipping unsupported message container with version: %s", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 776) + 8))(*(void *)(v0 + 792), *(void *)(v0 + 768));
    }

    goto LABEL_10;
  }
  uint64_t v21 = *(void *)(v0 + 776);
  uint64_t v22 = *(void *)(v0 + 768);
  uint64_t v23 = *(void *)(v0 + 760);
  uint64_t v24 = *(void *)(v0 + 752);
  uint64_t v25 = *(void *)(v0 + 744);
  uint64_t v26 = *(void *)(v0 + 416);
  uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
  *(void *)(v0 + 832) = v27;
  *(void *)(v0 + 840) = (v21 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v27(v24, v26, v22);
  *(void *)(v0 + 848) = sub_10001DFB0((unint64_t *)&unk_1006A77F0, &qword_1006A7658);
  dispatch thunk of Collection.startIndex.getter();
  *(void *)(v24 + *(int *)(v25 + 36)) = *(void *)(v0 + 344);
  sub_10002F1B0(v24, v23, &qword_1006A77E8);
  uint64_t v28 = *(int *)(v25 + 36);
  *(_DWORD *)(v0 + 60) = v28;
  *(void *)(v0 + 856) = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_cloudConfiguration;
  *(void *)(v0 + 864) = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_paperKitInbox;
  *(void *)(v0 + 872) = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_nonFatalErrorCount;
  *(void *)(v0 + 880) = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_selectionMessages;
  *(void *)(v0 + 888) = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_cloudKitRecords;
  uint64_t v29 = *(void *)(v23 + v28);
  dispatch thunk of Collection.endIndex.getter();
  if (v29 == *(void *)(v0 + 384))
  {
LABEL_7:
    sub_10002B754(*(void *)(v0 + 760), &qword_1006A77E8);
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
    return v30();
  }
  uint64_t v83 = v0 + 16;
  uint64_t v84 = v0 + 112;
  uint64_t v81 = (long long *)(v0 + 160);
  uint64_t v80 = v0 + 208;
  uint64_t v79 = v0 + 64;
  while (1)
  {
    BOOL v85 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 832);
    uint64_t v33 = *(void *)(v0 + 784);
    uint64_t v34 = *(void *)(v0 + 776);
    uint64_t v35 = *(void *)(v0 + 768);
    uint64_t v36 = *(void *)(v0 + 760);
    uint64_t v37 = (void (*)(uint64_t, void))dispatch thunk of Collection.subscript.read();
    sub_10002F034(v38, v83, &qword_1006A7750);
    v37(v0 + 248, 0);
    v85(v33, v36, v35);
    dispatch thunk of Collection.formIndex(after:)();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
    sub_10002F1B0(v83, v84, &qword_1006A7750);
    sub_10002F034(v84, (uint64_t)v81, &qword_1006A7750);
    if ((*(unsigned char *)(v0 + 200) & 1) == 0) {
      break;
    }
    *(void *)(v0 + 360) = *(void *)v81;
    sub_10002F214(&qword_1006A3D90);
    swift_willThrowTypedImpl();
    if (qword_10069B048 != -1) {
      swift_once();
    }
    sub_10003293C(*(void *)(v0 + 464), (uint64_t)qword_1006A73A0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v42 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 138412290;
      swift_errorRetain();
      uint64_t v43 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v41 + 4) = v43;
      void *v42 = v43;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "Error processing incoming fast sync message: %@", (uint8_t *)v41, 0xCu);
      sub_10002F214(&qword_10069FD50);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v54 = *(void *)(v0 + 872);
    uint64_t v55 = *(void *)(v0 + 432);

    uint64_t v56 = *(os_unfair_lock_s **)(v55 + v54);
    uint64_t v57 = v56 + 4;
    uint64_t v58 = v56 + 6;
    os_unfair_lock_lock(v56 + 6);
    sub_100448BE4(v57);
    os_unfair_lock_unlock(v58);
    swift_errorRelease();
    sub_10002B754(v84, &qword_1006A7750);
LABEL_15:
    uint64_t v32 = *(void *)(*(void *)(v0 + 760) + *(int *)(v0 + 60));
    dispatch thunk of Collection.endIndex.getter();
    if (v32 == *(void *)(v0 + 384)) {
      goto LABEL_7;
    }
  }
  sub_10016EFCC(v81, v80);
  sub_10002F214(&qword_1006A7758);
  if (swift_dynamicCast())
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 720) + 32))(*(void *)(v0 + 728), *(void *)(v0 + 736), *(void *)(v0 + 712));
    GroupSessionMessenger.MessageContext.source.getter();
    unint64_t v59 = (void *)swift_task_alloc();
    *(void *)(v0 + 896) = v59;
    *unint64_t v59 = v0;
    v59[1] = sub_10042F120;
    uint64_t v60 = *(void *)(v0 + 704);
    goto LABEL_33;
  }
  if (swift_dynamicCast())
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 624) + 32))(*(void *)(v0 + 648), *(void *)(v0 + 656), *(void *)(v0 + 616));
    GroupSessionMessenger.MessageContext.source.getter();
    id v61 = (void *)swift_task_alloc();
    *(void *)(v0 + 952) = v61;
    *id v61 = v0;
    v61[1] = sub_100431818;
    uint64_t v62 = *(void *)(v0 + 696);
    uint64_t v63 = 2;
    goto LABEL_34;
  }
  if (!swift_dynamicCast())
  {
    sub_10002F034(v84, v79, &qword_1006A7750);
    static Logger.realtimeCollaboration.getter();
    os_log_type_t v44 = static os_log_type_t.fault.getter();
    uint64_t v45 = Logger.logObject.getter();
    BOOL v46 = os_log_type_enabled(v45, v44);
    uint64_t v47 = *(void *)(v0 + 472);
    uint64_t v87 = *(void *)(v0 + 480);
    uint64_t v48 = *(void *)(v0 + 464);
    if (v46)
    {
      uint64_t v49 = swift_slowAlloc();
      v88[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v49 = 136315650;
      uint64_t v50 = StaticString.description.getter();
      *(void *)(v49 + 4) = sub_10045DA1C(v50, v51, v88);
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 12) = 2048;
      *(void *)(v49 + 14) = 228;
      *(_WORD *)(v49 + 22) = 2080;
      *(void *)(v0 + 328) = 0;
      *(void *)(v0 + 336) = 0xE000000000000000;
      _StringGuts.grow(_:)(31);
      uint64_t v52 = *(void *)(v0 + 336);
      *(void *)(v0 + 280) = *(void *)(v0 + 328);
      *(void *)(v0 + 288) = v52;
      v53._countAndFlagsBits = 0xD00000000000001DLL;
      v53._object = (void *)0x800000010055DFD0;
      String.append(_:)(v53);
      sub_10002F214(&qword_1006A7750);
      _print_unlocked<A, B>(_:_:)();
      *(void *)(v49 + 24) = sub_10045DA1C(*(void *)(v0 + 280), *(void *)(v0 + 288), v88);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v45, v44, "Failed assertion at %s:%lu: %s", (uint8_t *)v49, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10002B754(v79, &qword_1006A7750);
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v87, v48);
    sub_10002B754(v84, &qword_1006A7750);
    sub_100018FE8(v80);
    goto LABEL_15;
  }
  uint64_t v64 = *(void *)(v0 + 856);
  uint64_t v65 = *(void *)(v0 + 584);
  uint64_t v66 = *(void *)(v0 + 576);
  uint64_t v67 = *(void *)(v0 + 552);
  uint64_t v68 = *(void *)(v0 + 544);
  uint64_t v69 = *(void *)(v0 + 432);
  os_log_type_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 16);
  *(void *)(v0 + 968) = v70;
  *(void *)(v0 + 976) = (v67 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v70(v66, v65, v68);
  if ([*(id *)(v69 + v64) fastSyncPaperKitEnablePCSEncryption])
  {
    GroupSessionMessenger.MessageContext.source.getter();
    uint64_t v71 = (void *)swift_task_alloc();
    *(void *)(v0 + 984) = v71;
    void *v71 = v0;
    v71[1] = sub_1004331C8;
    uint64_t v60 = *(void *)(v0 + 688);
  }
  else
  {
    uint64_t v72 = *(void *)(v0 + 584);
    uint64_t v73 = *(void *)(v0 + 576);
    uint64_t v74 = *(void *)(v0 + 568);
    uint64_t v75 = *(void *)(v0 + 552);
    uint64_t v76 = *(void *)(v0 + 544);
    uint64_t v77 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
    *(void *)(v0 + 1000) = v77;
    *(void *)(v0 + 1008) = (v75 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v77(v73, v76);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 32))(v74, v72, v76);
    GroupSessionMessenger.MessageContext.source.getter();
    uint64_t v78 = (void *)swift_task_alloc();
    *(void *)(v0 + 1016) = v78;
    *uint64_t v78 = v0;
    v78[1] = sub_100433330;
    uint64_t v60 = *(void *)(v0 + 680);
  }
LABEL_33:
  uint64_t v62 = v60;
  uint64_t v63 = 3;
LABEL_34:
  return sub_100442178(v62, v63);
}

uint64_t sub_10042F120()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 904) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[84] + 8))(v2[88], v2[83]);
  if (v0) {
    uint64_t v3 = sub_10042F494;
  }
  else {
    uint64_t v3 = sub_10042F288;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10042F288()
{
  uint64_t v1 = FastSync.NoteContentMessage.recordBatchData.getter();
  uint64_t v3 = v2;
  v0[114] = v1;
  v0[115] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[116] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10042F340;
  return sub_100442B14(v1, v3);
}

uint64_t sub_10042F340(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 936) = a1;
  *(void *)(v4 + 944) = v1;
  swift_task_dealloc();
  sub_10017253C(*(void *)(v3 + 912), *(void *)(v3 + 920));
  if (v1) {
    uint64_t v5 = sub_100430D64;
  }
  else {
    uint64_t v5 = sub_10042FF48;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10042F494()
{
  uint64_t v61 = v0;
  uint64_t v1 = v0 + 112;
  uint64_t v57 = v0 + 16;
  (*(void (**)(void, void))(*(void *)(v0 + 720) + 8))(*(void *)(v0 + 728), *(void *)(v0 + 712));
  sub_100018FE8(v0 + 208);
  uint64_t v2 = &qword_10069B000;
  uint64_t v55 = v0 + 64;
  uint64_t v58 = v0 + 112;
  uint64_t v56 = (long long *)(v0 + 160);
LABEL_2:
  if (v2[9] != -1) {
    swift_once();
  }
  sub_10003293C(*(void *)(v0 + 464), (uint64_t)qword_1006A73A0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v5 + 4) = v7;
    void *v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Error processing incoming fast sync message: %@", (uint8_t *)v5, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v8 = *(void *)(v0 + 872);
  uint64_t v9 = *(void *)(v0 + 432);

  uint64_t v10 = *(os_unfair_lock_s **)(v9 + v8);
  uint64_t v11 = v10 + 4;
  os_log_type_t v12 = v10 + 6;
  os_unfair_lock_lock(v10 + 6);
  sub_100448BE4(v11);
  os_unfair_lock_unlock(v12);
  swift_errorRelease();
  sub_10002B754(v1, &qword_1006A7750);
  while (1)
  {
    uint64_t v13 = *(void *)(*(void *)(v0 + 760) + *(int *)(v0 + 60));
    dispatch thunk of Collection.endIndex.getter();
    if (v13 == *(void *)(v0 + 384)) {
      break;
    }
    unint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 832);
    uint64_t v14 = *(void *)(v0 + 784);
    uint64_t v15 = *(void *)(v0 + 776);
    uint64_t v16 = *(void *)(v0 + 768);
    uint64_t v17 = *(void *)(v0 + 760);
    uint64_t v18 = (void (*)(uint64_t, void))dispatch thunk of Collection.subscript.read();
    sub_10002F034(v19, v57, &qword_1006A7750);
    v18(v0 + 248, 0);
    v59(v14, v17, v16);
    dispatch thunk of Collection.formIndex(after:)();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    uint64_t v1 = v0 + 112;
    sub_10002F1B0(v57, v58, &qword_1006A7750);
    sub_10002F034(v58, (uint64_t)v56, &qword_1006A7750);
    if (*(unsigned char *)(v0 + 200))
    {
      *(void *)(v0 + 360) = *(void *)v56;
      sub_10002F214(&qword_1006A3D90);
      swift_willThrowTypedImpl();
      uint64_t v2 = &qword_10069B000;
      goto LABEL_2;
    }
    uint64_t v20 = v0 + 208;
    sub_10016EFCC(v56, v0 + 208);
    sub_10002F214(&qword_1006A7758);
    if (swift_dynamicCast())
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 720) + 32))(*(void *)(v0 + 728), *(void *)(v0 + 736), *(void *)(v0 + 712));
      GroupSessionMessenger.MessageContext.source.getter();
      uint64_t v35 = (void *)swift_task_alloc();
      *(void *)(v0 + 896) = v35;
      void *v35 = v0;
      v35[1] = sub_10042F120;
      uint64_t v36 = *(void *)(v0 + 704);
      goto LABEL_25;
    }
    if (swift_dynamicCast())
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 624) + 32))(*(void *)(v0 + 648), *(void *)(v0 + 656), *(void *)(v0 + 616));
      GroupSessionMessenger.MessageContext.source.getter();
      uint64_t v37 = (void *)swift_task_alloc();
      *(void *)(v0 + 952) = v37;
      *uint64_t v37 = v0;
      v37[1] = sub_100431818;
      uint64_t v38 = *(void *)(v0 + 696);
      uint64_t v39 = 2;
      goto LABEL_26;
    }
    if (swift_dynamicCast())
    {
      uint64_t v40 = *(void *)(v0 + 856);
      uint64_t v41 = *(void *)(v0 + 584);
      uint64_t v42 = *(void *)(v0 + 576);
      uint64_t v43 = *(void *)(v0 + 552);
      uint64_t v44 = *(void *)(v0 + 544);
      uint64_t v45 = *(void *)(v0 + 432);
      BOOL v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16);
      *(void *)(v0 + 968) = v46;
      *(void *)(v0 + 976) = (v43 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v46(v42, v41, v44);
      if ([*(id *)(v45 + v40) fastSyncPaperKitEnablePCSEncryption])
      {
        GroupSessionMessenger.MessageContext.source.getter();
        uint64_t v47 = (void *)swift_task_alloc();
        *(void *)(v0 + 984) = v47;
        *uint64_t v47 = v0;
        v47[1] = sub_1004331C8;
        uint64_t v36 = *(void *)(v0 + 688);
      }
      else
      {
        uint64_t v48 = *(void *)(v0 + 584);
        uint64_t v49 = *(void *)(v0 + 576);
        uint64_t v50 = *(void *)(v0 + 568);
        uint64_t v51 = *(void *)(v0 + 552);
        uint64_t v52 = *(void *)(v0 + 544);
        Swift::String v53 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
        *(void *)(v0 + 1000) = v53;
        *(void *)(v0 + 1008) = (v51 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v53(v49, v52);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 32))(v50, v48, v52);
        GroupSessionMessenger.MessageContext.source.getter();
        uint64_t v54 = (void *)swift_task_alloc();
        *(void *)(v0 + 1016) = v54;
        *uint64_t v54 = v0;
        v54[1] = sub_100433330;
        uint64_t v36 = *(void *)(v0 + 680);
      }
LABEL_25:
      uint64_t v38 = v36;
      uint64_t v39 = 3;
LABEL_26:
      return sub_100442178(v38, v39);
    }
    sub_10002F034(v58, v55, &qword_1006A7750);
    static Logger.realtimeCollaboration.getter();
    os_log_type_t v21 = static os_log_type_t.fault.getter();
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = v21;
    BOOL v24 = os_log_type_enabled(v22, v21);
    uint64_t v26 = *(void *)(v0 + 472);
    uint64_t v25 = *(void *)(v0 + 480);
    uint64_t v27 = *(void *)(v0 + 464);
    if (v24)
    {
      uint64_t v28 = swift_slowAlloc();
      v60[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136315650;
      uint64_t v29 = StaticString.description.getter();
      *(void *)(v28 + 4) = sub_10045DA1C(v29, v30, v60);
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2048;
      *(void *)(v28 + 14) = 228;
      *(_WORD *)(v28 + 22) = 2080;
      *(void *)(v0 + 328) = 0;
      *(void *)(v0 + 336) = 0xE000000000000000;
      _StringGuts.grow(_:)(31);
      uint64_t v31 = *(void *)(v0 + 336);
      *(void *)(v0 + 280) = *(void *)(v0 + 328);
      *(void *)(v0 + 288) = v31;
      v32._countAndFlagsBits = 0xD00000000000001DLL;
      v32._object = (void *)0x800000010055DFD0;
      String.append(_:)(v32);
      sub_10002F214(&qword_1006A7750);
      _print_unlocked<A, B>(_:_:)();
      *(void *)(v28 + 24) = sub_10045DA1C(*(void *)(v0 + 280), *(void *)(v0 + 288), v60);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Failed assertion at %s:%lu: %s", (uint8_t *)v28, 0x20u);
      swift_arrayDestroy();
      uint64_t v20 = v0 + 208;
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10002B754(v55, &qword_1006A7750);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    sub_10002B754(v58, &qword_1006A7750);
    sub_100018FE8(v20);
  }
  sub_10002B754(*(void *)(v0 + 760), &qword_1006A77E8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v33 = *(uint64_t (**)(void))(v0 + 8);
  return v33();
}

void sub_10042FF48()
{
  uint64_t v92 = v0;
  unint64_t v1 = *(void *)(v0 + 936);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (v2)
    {
LABEL_3:
      uint64_t v3 = v2 - 1;
      if (v2 < 1)
      {
        __break(1u);
        return;
      }
      uint64_t v4 = 0;
      unint64_t v5 = v1 & 0xC000000000000001;
      uint64_t v83 = *(void *)(v90 + 936) + 32;
      uint64_t v6 = qword_1006A73A0;
      if ((v1 & 0xC000000000000001) == 0) {
        goto LABEL_6;
      }
      while (1)
      {
        for (id i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(); ; id i = *(id *)(v83 + 8 * v4))
        {
          uint64_t v8 = i;
          if (qword_10069B048 != -1) {
            swift_once();
          }
          sub_10003293C(*(void *)(v90 + 464), (uint64_t)v6);
          id v9 = v8;
          uint64_t v10 = Logger.logObject.getter();
          os_log_type_t v11 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v10, v11))
          {
            uint64_t v12 = swift_slowAlloc();
            v91[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v12 = 136315138;
            uint64_t v87 = v10;
            uint64_t v13 = v6;
            id v14 = [v9 ic_loggingDescription];
            uint64_t v15 = v4;
            unint64_t v16 = v5;
            uint64_t v17 = v3;
            uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v20 = v19;

            uint64_t v6 = v13;
            uint64_t v21 = v18;
            uint64_t v3 = v17;
            unint64_t v5 = v16;
            uint64_t v4 = v15;
            *(void *)(v12 + 4) = sub_10045DA1C(v21, v20, v91);
            swift_bridgeObjectRelease();

            _os_log_impl((void *)&_mh_execute_header, v87, v11, "Received CloudKit record: %s", (uint8_t *)v12, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            if (v3 == v15) {
              goto LABEL_16;
            }
          }
          else
          {

            if (v3 == v4) {
              goto LABEL_16;
            }
          }
          ++v4;
          if (v5) {
            break;
          }
LABEL_6:
          ;
        }
      }
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
  }
LABEL_16:
  uint64_t v22 = *(void *)(v90 + 936);
  uint64_t v89 = v90 + 208;
  uint64_t v88 = *(void *)(v90 + 728);
  uint64_t v23 = *(void *)(v90 + 720);
  uint64_t v85 = *(void *)(v90 + 712);
  uint64_t v24 = *(void *)(v90 + 608);
  uint64_t v25 = *(void *)(v90 + 600);
  uint64_t v26 = *(void *)(v90 + 592);
  swift_bridgeObjectRelease();
  *(void *)(v90 + 400) = v22;
  swift_bridgeObjectRetain();
  sub_10002F214(&qword_10069BAA8);
  AsyncStream.Continuation.yield(_:)();
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v88, v85);
  uint64_t v82 = v90 + 112;
  sub_10002B754(v90 + 112, &qword_1006A7750);
  swift_bridgeObjectRelease();
  sub_100018FE8(v90 + 208);
  uint64_t v79 = *(void *)(v90 + 944);
  uint64_t v27 = *(void *)(*(void *)(v90 + 760) + *(int *)(v90 + 60));
  dispatch thunk of Collection.endIndex.getter();
  if (v27 == *(void *)(v90 + 384))
  {
LABEL_17:
    sub_10002B754(*(void *)(v90 + 760), &qword_1006A77E8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v28 = *(void (**)(void))(v90 + 8);
    v28();
    return;
  }
  uint64_t v81 = v90 + 16;
  uint64_t v80 = (long long *)(v90 + 160);
  uint64_t v84 = v90 + 64;
  while (1)
  {
    os_log_type_t v86 = *(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 832);
    uint64_t v29 = *(void *)(v90 + 784);
    uint64_t v30 = *(void *)(v90 + 776);
    uint64_t v31 = *(void *)(v90 + 768);
    uint64_t v32 = *(void *)(v90 + 760);
    uint64_t v33 = (void (*)(uint64_t, void))dispatch thunk of Collection.subscript.read();
    sub_10002F034(v34, v81, &qword_1006A7750);
    v33(v90 + 248, 0);
    v86(v29, v32, v31);
    dispatch thunk of Collection.formIndex(after:)();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    sub_10002F1B0(v81, v82, &qword_1006A7750);
    sub_10002F034(v82, (uint64_t)v80, &qword_1006A7750);
    if ((*(unsigned char *)(v90 + 200) & 1) == 0) {
      break;
    }
    *(void *)(v90 + 360) = *(void *)v80;
    sub_10002F214(&qword_1006A3D90);
    swift_willThrowTypedImpl();
    if (qword_10069B048 != -1) {
      swift_once();
    }
    sub_10003293C(*(void *)(v90 + 464), (uint64_t)qword_1006A73A0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v49 = Logger.logObject.getter();
    os_log_type_t v50 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = swift_slowAlloc();
      uint64_t v52 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v51 = 138412290;
      swift_errorRetain();
      uint64_t v53 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v51 + 4) = v53;
      *uint64_t v52 = v53;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "Error processing incoming fast sync message: %@", (uint8_t *)v51, 0xCu);
      sub_10002F214(&qword_10069FD50);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v54 = *(void *)(v90 + 872);
    uint64_t v55 = *(void *)(v90 + 432);

    uint64_t v56 = *(os_unfair_lock_s **)(v55 + v54);
    uint64_t v57 = v56 + 4;
    uint64_t v58 = v56 + 6;
    os_unfair_lock_lock(v56 + 6);
    sub_100448BE4(v57);
    os_unfair_lock_unlock(v58);
    if (v79) {
      return;
    }
    swift_errorRelease();
    sub_10002B754(v82, &qword_1006A7750);
    uint64_t v47 = v90;
    uint64_t v48 = *(void *)(*(void *)(v90 + 760) + *(int *)(v90 + 60));
    dispatch thunk of Collection.endIndex.getter();
    uint64_t v79 = 0;
LABEL_28:
    if (v48 == *(void *)(v47 + 384)) {
      goto LABEL_17;
    }
  }
  sub_10016EFCC(v80, v89);
  sub_10002F214(&qword_1006A7758);
  if (swift_dynamicCast())
  {
    (*(void (**)(void, void, void))(*(void *)(v90 + 720) + 32))(*(void *)(v90 + 728), *(void *)(v90 + 736), *(void *)(v90 + 712));
    GroupSessionMessenger.MessageContext.source.getter();
    unint64_t v59 = (void *)swift_task_alloc();
    *(void *)(v90 + 896) = v59;
    *unint64_t v59 = v90;
    v59[1] = sub_10042F120;
    uint64_t v60 = *(void *)(v90 + 704);
    goto LABEL_42;
  }
  if (swift_dynamicCast())
  {
    (*(void (**)(void, void, void))(*(void *)(v90 + 624) + 32))(*(void *)(v90 + 648), *(void *)(v90 + 656), *(void *)(v90 + 616));
    GroupSessionMessenger.MessageContext.source.getter();
    uint64_t v61 = (void *)swift_task_alloc();
    *(void *)(v90 + 952) = v61;
    *uint64_t v61 = v90;
    v61[1] = sub_100431818;
    uint64_t v62 = *(void *)(v90 + 696);
    uint64_t v63 = 2;
    goto LABEL_43;
  }
  if (!swift_dynamicCast())
  {
    sub_10002F034(v82, v84, &qword_1006A7750);
    static Logger.realtimeCollaboration.getter();
    os_log_type_t v35 = static os_log_type_t.fault.getter();
    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v37 = v35;
    BOOL v38 = os_log_type_enabled(v36, v35);
    uint64_t v40 = *(void *)(v90 + 472);
    uint64_t v39 = *(void *)(v90 + 480);
    uint64_t v41 = *(void *)(v90 + 464);
    if (v38)
    {
      uint64_t v42 = swift_slowAlloc();
      v91[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v42 = 136315650;
      uint64_t v43 = StaticString.description.getter();
      *(void *)(v42 + 4) = sub_10045DA1C(v43, v44, v91);
      swift_bridgeObjectRelease();
      *(_WORD *)(v42 + 12) = 2048;
      *(void *)(v42 + 14) = 228;
      *(_WORD *)(v42 + 22) = 2080;
      *(void *)(v90 + 328) = 0;
      *(void *)(v90 + 336) = 0xE000000000000000;
      _StringGuts.grow(_:)(31);
      uint64_t v45 = *(void *)(v90 + 336);
      *(void *)(v90 + 280) = *(void *)(v90 + 328);
      *(void *)(v90 + 288) = v45;
      v46._countAndFlagsBits = 0xD00000000000001DLL;
      v46._object = (void *)0x800000010055DFD0;
      String.append(_:)(v46);
      sub_10002F214(&qword_1006A7750);
      _print_unlocked<A, B>(_:_:)();
      *(void *)(v42 + 24) = sub_10045DA1C(*(void *)(v90 + 280), *(void *)(v90 + 288), v91);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Failed assertion at %s:%lu: %s", (uint8_t *)v42, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10002B754(v84, &qword_1006A7750);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);
    sub_10002B754(v82, &qword_1006A7750);
    sub_100018FE8(v89);
    uint64_t v47 = v90;
    uint64_t v48 = *(void *)(*(void *)(v90 + 760) + *(int *)(v90 + 60));
    dispatch thunk of Collection.endIndex.getter();
    goto LABEL_28;
  }
  uint64_t v64 = *(void *)(v90 + 856);
  uint64_t v65 = *(void *)(v90 + 584);
  uint64_t v66 = *(void *)(v90 + 576);
  uint64_t v67 = *(void *)(v90 + 552);
  uint64_t v68 = *(void *)(v90 + 544);
  uint64_t v69 = *(void *)(v90 + 432);
  os_log_type_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 16);
  *(void *)(v90 + 968) = v70;
  *(void *)(v90 + 976) = (v67 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v70(v66, v65, v68);
  if ([*(id *)(v69 + v64) fastSyncPaperKitEnablePCSEncryption])
  {
    GroupSessionMessenger.MessageContext.source.getter();
    uint64_t v71 = (void *)swift_task_alloc();
    *(void *)(v90 + 984) = v71;
    void *v71 = v90;
    v71[1] = sub_1004331C8;
    uint64_t v60 = *(void *)(v90 + 688);
  }
  else
  {
    uint64_t v72 = *(void *)(v90 + 584);
    uint64_t v73 = *(void *)(v90 + 576);
    uint64_t v74 = *(void *)(v90 + 568);
    uint64_t v75 = *(void *)(v90 + 552);
    uint64_t v76 = *(void *)(v90 + 544);
    uint64_t v77 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
    *(void *)(v90 + 1000) = v77;
    *(void *)(v90 + 1008) = (v75 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v77(v73, v76);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 32))(v74, v72, v76);
    GroupSessionMessenger.MessageContext.source.getter();
    uint64_t v78 = (void *)swift_task_alloc();
    *(void *)(v90 + 1016) = v78;
    *uint64_t v78 = v90;
    v78[1] = sub_100433330;
    uint64_t v60 = *(void *)(v90 + 680);
  }
LABEL_42:
  uint64_t v62 = v60;
  uint64_t v63 = 3;
LABEL_43:
  sub_100442178(v62, v63);
}

uint64_t sub_100430D64()
{
  uint64_t v61 = v0;
  uint64_t v1 = v0 + 112;
  uint64_t v57 = v0 + 16;
  (*(void (**)(void, void))(*(void *)(v0 + 720) + 8))(*(void *)(v0 + 728), *(void *)(v0 + 712));
  sub_100018FE8(v0 + 208);
  uint64_t v2 = &qword_10069B000;
  uint64_t v55 = v0 + 64;
  uint64_t v58 = v0 + 112;
  uint64_t v56 = (long long *)(v0 + 160);
LABEL_2:
  if (v2[9] != -1) {
    swift_once();
  }
  sub_10003293C(*(void *)(v0 + 464), (uint64_t)qword_1006A73A0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v5 + 4) = v7;
    void *v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Error processing incoming fast sync message: %@", (uint8_t *)v5, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v8 = *(void *)(v0 + 872);
  uint64_t v9 = *(void *)(v0 + 432);

  uint64_t v10 = *(os_unfair_lock_s **)(v9 + v8);
  os_log_type_t v11 = v10 + 4;
  uint64_t v12 = v10 + 6;
  os_unfair_lock_lock(v10 + 6);
  sub_100448BE4(v11);
  os_unfair_lock_unlock(v12);
  swift_errorRelease();
  sub_10002B754(v1, &qword_1006A7750);
  while (1)
  {
    uint64_t v13 = *(void *)(*(void *)(v0 + 760) + *(int *)(v0 + 60));
    dispatch thunk of Collection.endIndex.getter();
    if (v13 == *(void *)(v0 + 384)) {
      break;
    }
    unint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 832);
    uint64_t v14 = *(void *)(v0 + 784);
    uint64_t v15 = *(void *)(v0 + 776);
    uint64_t v16 = *(void *)(v0 + 768);
    uint64_t v17 = *(void *)(v0 + 760);
    uint64_t v18 = (void (*)(uint64_t, void))dispatch thunk of Collection.subscript.read();
    sub_10002F034(v19, v57, &qword_1006A7750);
    v18(v0 + 248, 0);
    v59(v14, v17, v16);
    dispatch thunk of Collection.formIndex(after:)();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    uint64_t v1 = v0 + 112;
    sub_10002F1B0(v57, v58, &qword_1006A7750);
    sub_10002F034(v58, (uint64_t)v56, &qword_1006A7750);
    if (*(unsigned char *)(v0 + 200))
    {
      *(void *)(v0 + 360) = *(void *)v56;
      sub_10002F214(&qword_1006A3D90);
      swift_willThrowTypedImpl();
      uint64_t v2 = &qword_10069B000;
      goto LABEL_2;
    }
    uint64_t v20 = v0 + 208;
    sub_10016EFCC(v56, v0 + 208);
    sub_10002F214(&qword_1006A7758);
    if (swift_dynamicCast())
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 720) + 32))(*(void *)(v0 + 728), *(void *)(v0 + 736), *(void *)(v0 + 712));
      GroupSessionMessenger.MessageContext.source.getter();
      os_log_type_t v35 = (void *)swift_task_alloc();
      *(void *)(v0 + 896) = v35;
      void *v35 = v0;
      v35[1] = sub_10042F120;
      uint64_t v36 = *(void *)(v0 + 704);
      goto LABEL_25;
    }
    if (swift_dynamicCast())
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 624) + 32))(*(void *)(v0 + 648), *(void *)(v0 + 656), *(void *)(v0 + 616));
      GroupSessionMessenger.MessageContext.source.getter();
      os_log_type_t v37 = (void *)swift_task_alloc();
      *(void *)(v0 + 952) = v37;
      *os_log_type_t v37 = v0;
      v37[1] = sub_100431818;
      uint64_t v38 = *(void *)(v0 + 696);
      uint64_t v39 = 2;
      goto LABEL_26;
    }
    if (swift_dynamicCast())
    {
      uint64_t v40 = *(void *)(v0 + 856);
      uint64_t v41 = *(void *)(v0 + 584);
      uint64_t v42 = *(void *)(v0 + 576);
      uint64_t v43 = *(void *)(v0 + 552);
      uint64_t v44 = *(void *)(v0 + 544);
      uint64_t v45 = *(void *)(v0 + 432);
      Swift::String v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16);
      *(void *)(v0 + 968) = v46;
      *(void *)(v0 + 976) = (v43 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v46(v42, v41, v44);
      if ([*(id *)(v45 + v40) fastSyncPaperKitEnablePCSEncryption])
      {
        GroupSessionMessenger.MessageContext.source.getter();
        uint64_t v47 = (void *)swift_task_alloc();
        *(void *)(v0 + 984) = v47;
        *uint64_t v47 = v0;
        v47[1] = sub_1004331C8;
        uint64_t v36 = *(void *)(v0 + 688);
      }
      else
      {
        uint64_t v48 = *(void *)(v0 + 584);
        uint64_t v49 = *(void *)(v0 + 576);
        uint64_t v50 = *(void *)(v0 + 568);
        uint64_t v51 = *(void *)(v0 + 552);
        uint64_t v52 = *(void *)(v0 + 544);
        uint64_t v53 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
        *(void *)(v0 + 1000) = v53;
        *(void *)(v0 + 1008) = (v51 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v53(v49, v52);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 32))(v50, v48, v52);
        GroupSessionMessenger.MessageContext.source.getter();
        uint64_t v54 = (void *)swift_task_alloc();
        *(void *)(v0 + 1016) = v54;
        *uint64_t v54 = v0;
        v54[1] = sub_100433330;
        uint64_t v36 = *(void *)(v0 + 680);
      }
LABEL_25:
      uint64_t v38 = v36;
      uint64_t v39 = 3;
LABEL_26:
      return sub_100442178(v38, v39);
    }
    sub_10002F034(v58, v55, &qword_1006A7750);
    static Logger.realtimeCollaboration.getter();
    os_log_type_t v21 = static os_log_type_t.fault.getter();
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = v21;
    BOOL v24 = os_log_type_enabled(v22, v21);
    uint64_t v26 = *(void *)(v0 + 472);
    uint64_t v25 = *(void *)(v0 + 480);
    uint64_t v27 = *(void *)(v0 + 464);
    if (v24)
    {
      uint64_t v28 = swift_slowAlloc();
      v60[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136315650;
      uint64_t v29 = StaticString.description.getter();
      *(void *)(v28 + 4) = sub_10045DA1C(v29, v30, v60);
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2048;
      *(void *)(v28 + 14) = 228;
      *(_WORD *)(v28 + 22) = 2080;
      *(void *)(v0 + 328) = 0;
      *(void *)(v0 + 336) = 0xE000000000000000;
      _StringGuts.grow(_:)(31);
      uint64_t v31 = *(void *)(v0 + 336);
      *(void *)(v0 + 280) = *(void *)(v0 + 328);
      *(void *)(v0 + 288) = v31;
      v32._countAndFlagsBits = 0xD00000000000001DLL;
      v32._object = (void *)0x800000010055DFD0;
      String.append(_:)(v32);
      sub_10002F214(&qword_1006A7750);
      _print_unlocked<A, B>(_:_:)();
      *(void *)(v28 + 24) = sub_10045DA1C(*(void *)(v0 + 280), *(void *)(v0 + 288), v60);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Failed assertion at %s:%lu: %s", (uint8_t *)v28, 0x20u);
      swift_arrayDestroy();
      uint64_t v20 = v0 + 208;
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10002B754(v55, &qword_1006A7750);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    sub_10002B754(v58, &qword_1006A7750);
    sub_100018FE8(v20);
  }
  sub_10002B754(*(void *)(v0 + 760), &qword_1006A77E8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v33 = *(uint64_t (**)(void))(v0 + 8);
  return v33();
}

uint64_t sub_100431818()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 960) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[84] + 8))(v2[87], v2[83]);
  if (v0) {
    uint64_t v3 = sub_100432714;
  }
  else {
    uint64_t v3 = sub_100431980;
  }
  return _swift_task_switch(v3, 0, 0);
}

void sub_100431980()
{
  uint64_t v78 = v0;
  uint64_t v74 = v0 + 112;
  if (qword_10069B050 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 536);
  uint64_t v2 = *(void *)(v0 + 464);
  uint64_t v3 = *(void *)(v0 + 472);
  uint64_t v4 = sub_10003293C(*(void *)(v0 + 512), (uint64_t)qword_1006A73B8);
  sub_10002F034(v4, v1, &qword_1006A3138);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_10002B754(*(void *)(v0 + 536), &qword_1006A3138);
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 624) + 16))(*(void *)(v0 + 640), *(void *)(v0 + 648), *(void *)(v0 + 616));
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.debug.getter();
    BOOL v7 = os_log_type_enabled(v5, v6);
    uint64_t v8 = *(void *)(v0 + 640);
    uint64_t v9 = *(void *)(v0 + 624);
    uint64_t v10 = *(void *)(v0 + 616);
    if (v7)
    {
      uint64_t v11 = swift_slowAlloc();
      v77[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      sub_100449994(&qword_1006A3118, (void (*)(uint64_t))&type metadata accessor for FastSync.SelectionMessage);
      uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v11 + 4) = sub_10045DA1C(v12, v13, v77);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Received selection message: %s", (uint8_t *)v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    }
    (*(void (**)(void, void))(*(void *)(v0 + 472) + 8))(*(void *)(v0 + 536), *(void *)(v0 + 464));
  }
  uint64_t v14 = *(void *)(v0 + 648);
  uint64_t v15 = *(void *)(v0 + 624);
  uint64_t v16 = *(void *)(v0 + 616);
  uint64_t v18 = *(void *)(v0 + 496);
  uint64_t v17 = *(void *)(v0 + 504);
  uint64_t v19 = *(void *)(v0 + 488);
  (*(void (**)(void, uint64_t, uint64_t))(v15 + 16))(*(void *)(v0 + 632), v14, v16);
  sub_10002F214(&qword_10069BA90);
  AsyncStream.Continuation.yield(_:)();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  sub_10002B754(v74, &qword_1006A7750);
  sub_100018FE8(v0 + 208);
  uint64_t v71 = *(void *)(v0 + 960);
  uint64_t v20 = *(void *)(*(void *)(v0 + 760) + *(int *)(v0 + 60));
  dispatch thunk of Collection.endIndex.getter();
  if (v20 == *(void *)(v0 + 384))
  {
LABEL_10:
    sub_10002B754(*(void *)(v0 + 760), &qword_1006A77E8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v21 = *(void (**)(void))(v0 + 8);
    v21();
    return;
  }
  uint64_t v73 = v0 + 16;
  uint64_t v72 = (long long *)(v0 + 160);
  uint64_t v75 = v0 + 64;
  while (1)
  {
    uint64_t v76 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 832);
    uint64_t v22 = *(void *)(v0 + 784);
    uint64_t v23 = *(void *)(v0 + 776);
    uint64_t v24 = *(void *)(v0 + 768);
    uint64_t v25 = *(void *)(v0 + 760);
    uint64_t v26 = (void (*)(uint64_t, void))dispatch thunk of Collection.subscript.read();
    sub_10002F034(v27, v73, &qword_1006A7750);
    v26(v0 + 248, 0);
    v76(v22, v25, v24);
    dispatch thunk of Collection.formIndex(after:)();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    sub_10002F1B0(v73, v74, &qword_1006A7750);
    sub_10002F034(v74, (uint64_t)v72, &qword_1006A7750);
    if ((*(unsigned char *)(v0 + 200) & 1) == 0) {
      break;
    }
    *(void *)(v0 + 360) = *(void *)v72;
    sub_10002F214(&qword_1006A3D90);
    swift_willThrowTypedImpl();
    if (qword_10069B048 != -1) {
      swift_once();
    }
    sub_10003293C(*(void *)(v0 + 464), (uint64_t)qword_1006A73A0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = swift_slowAlloc();
      uint64_t v44 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v43 = 138412290;
      swift_errorRetain();
      uint64_t v45 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v43 + 4) = v45;
      *uint64_t v44 = v45;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Error processing incoming fast sync message: %@", (uint8_t *)v43, 0xCu);
      sub_10002F214(&qword_10069FD50);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v46 = *(void *)(v0 + 872);
    uint64_t v47 = *(void *)(v0 + 432);

    uint64_t v48 = *(os_unfair_lock_s **)(v47 + v46);
    uint64_t v49 = v48 + 4;
    uint64_t v50 = v48 + 6;
    os_unfair_lock_lock(v48 + 6);
    sub_100448BE4(v49);
    os_unfair_lock_unlock(v50);
    if (v71) {
      return;
    }
    swift_errorRelease();
    sub_10002B754(v74, &qword_1006A7750);
    uint64_t v40 = *(void *)(*(void *)(v0 + 760) + *(int *)(v0 + 60));
    dispatch thunk of Collection.endIndex.getter();
    uint64_t v71 = 0;
LABEL_21:
    if (v40 == *(void *)(v0 + 384)) {
      goto LABEL_10;
    }
  }
  uint64_t v28 = v0 + 208;
  sub_10016EFCC(v72, v0 + 208);
  sub_10002F214(&qword_1006A7758);
  if (swift_dynamicCast())
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 720) + 32))(*(void *)(v0 + 728), *(void *)(v0 + 736), *(void *)(v0 + 712));
    GroupSessionMessenger.MessageContext.source.getter();
    uint64_t v51 = (void *)swift_task_alloc();
    *(void *)(v0 + 896) = v51;
    *uint64_t v51 = v0;
    v51[1] = sub_10042F120;
    uint64_t v52 = *(void *)(v0 + 704);
    goto LABEL_35;
  }
  if (swift_dynamicCast())
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 624) + 32))(*(void *)(v0 + 648), *(void *)(v0 + 656), *(void *)(v0 + 616));
    GroupSessionMessenger.MessageContext.source.getter();
    uint64_t v53 = (void *)swift_task_alloc();
    *(void *)(v0 + 952) = v53;
    *uint64_t v53 = v0;
    v53[1] = sub_100431818;
    uint64_t v54 = *(void *)(v0 + 696);
    uint64_t v55 = 2;
    goto LABEL_36;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_10002F034(v74, v75, &qword_1006A7750);
    static Logger.realtimeCollaboration.getter();
    os_log_type_t v29 = static os_log_type_t.fault.getter();
    unint64_t v30 = Logger.logObject.getter();
    BOOL v31 = os_log_type_enabled(v30, v29);
    uint64_t v32 = *(void *)(v0 + 472);
    uint64_t v33 = *(void *)(v0 + 480);
    uint64_t v34 = *(void *)(v0 + 464);
    if (v31)
    {
      uint64_t v35 = swift_slowAlloc();
      v77[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136315650;
      uint64_t v36 = StaticString.description.getter();
      *(void *)(v35 + 4) = sub_10045DA1C(v36, v37, v77);
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2048;
      *(void *)(v35 + 14) = 228;
      *(_WORD *)(v35 + 22) = 2080;
      *(void *)(v0 + 328) = 0;
      *(void *)(v0 + 336) = 0xE000000000000000;
      _StringGuts.grow(_:)(31);
      uint64_t v38 = *(void *)(v0 + 336);
      *(void *)(v0 + 280) = *(void *)(v0 + 328);
      *(void *)(v0 + 288) = v38;
      v39._countAndFlagsBits = 0xD00000000000001DLL;
      v39._object = (void *)0x800000010055DFD0;
      String.append(_:)(v39);
      sub_10002F214(&qword_1006A7750);
      _print_unlocked<A, B>(_:_:)();
      *(void *)(v35 + 24) = sub_10045DA1C(*(void *)(v0 + 280), *(void *)(v0 + 288), v77);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v30, v29, "Failed assertion at %s:%lu: %s", (uint8_t *)v35, 0x20u);
      swift_arrayDestroy();
      uint64_t v28 = v0 + 208;
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10002B754(v75, &qword_1006A7750);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v33, v34);
    sub_10002B754(v74, &qword_1006A7750);
    sub_100018FE8(v28);
    uint64_t v40 = *(void *)(*(void *)(v0 + 760) + *(int *)(v0 + 60));
    dispatch thunk of Collection.endIndex.getter();
    goto LABEL_21;
  }
  uint64_t v56 = *(void *)(v0 + 856);
  uint64_t v57 = *(void *)(v0 + 584);
  uint64_t v58 = *(void *)(v0 + 576);
  uint64_t v59 = *(void *)(v0 + 552);
  uint64_t v60 = *(void *)(v0 + 544);
  uint64_t v61 = *(void *)(v0 + 432);
  uint64_t v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16);
  *(void *)(v0 + 968) = v62;
  *(void *)(v0 + 976) = (v59 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v62(v58, v57, v60);
  if ([*(id *)(v61 + v56) fastSyncPaperKitEnablePCSEncryption])
  {
    GroupSessionMessenger.MessageContext.source.getter();
    uint64_t v63 = (void *)swift_task_alloc();
    *(void *)(v0 + 984) = v63;
    void *v63 = v0;
    v63[1] = sub_1004331C8;
    uint64_t v52 = *(void *)(v0 + 688);
  }
  else
  {
    uint64_t v64 = *(void *)(v0 + 584);
    uint64_t v65 = *(void *)(v0 + 576);
    uint64_t v66 = *(void *)(v0 + 568);
    uint64_t v67 = *(void *)(v0 + 552);
    uint64_t v68 = *(void *)(v0 + 544);
    uint64_t v69 = *(void (**)(uint64_t, uint64_t))(v67 + 8);
    *(void *)(v0 + 1000) = v69;
    *(void *)(v0 + 1008) = (v67 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v69(v65, v68);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 32))(v66, v64, v68);
    GroupSessionMessenger.MessageContext.source.getter();
    os_log_type_t v70 = (void *)swift_task_alloc();
    *(void *)(v0 + 1016) = v70;
    *os_log_type_t v70 = v0;
    v70[1] = sub_100433330;
    uint64_t v52 = *(void *)(v0 + 680);
  }
LABEL_35:
  uint64_t v54 = v52;
  uint64_t v55 = 3;
LABEL_36:
  sub_100442178(v54, v55);
}

uint64_t sub_100432714()
{
  uint64_t v61 = v0;
  uint64_t v1 = v0 + 112;
  uint64_t v57 = v0 + 16;
  (*(void (**)(void, void))(*(void *)(v0 + 624) + 8))(*(void *)(v0 + 648), *(void *)(v0 + 616));
  sub_100018FE8(v0 + 208);
  uint64_t v2 = &qword_10069B000;
  uint64_t v55 = v0 + 64;
  uint64_t v58 = v0 + 112;
  uint64_t v56 = (long long *)(v0 + 160);
LABEL_2:
  if (v2[9] != -1) {
    swift_once();
  }
  sub_10003293C(*(void *)(v0 + 464), (uint64_t)qword_1006A73A0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    os_log_type_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v5 + 4) = v7;
    void *v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Error processing incoming fast sync message: %@", (uint8_t *)v5, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v8 = *(void *)(v0 + 872);
  uint64_t v9 = *(void *)(v0 + 432);

  uint64_t v10 = *(os_unfair_lock_s **)(v9 + v8);
  uint64_t v11 = v10 + 4;
  uint64_t v12 = v10 + 6;
  os_unfair_lock_lock(v10 + 6);
  sub_100448BE4(v11);
  os_unfair_lock_unlock(v12);
  swift_errorRelease();
  sub_10002B754(v1, &qword_1006A7750);
  while (1)
  {
    uint64_t v13 = *(void *)(*(void *)(v0 + 760) + *(int *)(v0 + 60));
    dispatch thunk of Collection.endIndex.getter();
    if (v13 == *(void *)(v0 + 384)) {
      break;
    }
    uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 832);
    uint64_t v14 = *(void *)(v0 + 784);
    uint64_t v15 = *(void *)(v0 + 776);
    uint64_t v16 = *(void *)(v0 + 768);
    uint64_t v17 = *(void *)(v0 + 760);
    uint64_t v18 = (void (*)(uint64_t, void))dispatch thunk of Collection.subscript.read();
    sub_10002F034(v19, v57, &qword_1006A7750);
    v18(v0 + 248, 0);
    v59(v14, v17, v16);
    dispatch thunk of Collection.formIndex(after:)();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    uint64_t v1 = v0 + 112;
    sub_10002F1B0(v57, v58, &qword_1006A7750);
    sub_10002F034(v58, (uint64_t)v56, &qword_1006A7750);
    if (*(unsigned char *)(v0 + 200))
    {
      *(void *)(v0 + 360) = *(void *)v56;
      sub_10002F214(&qword_1006A3D90);
      swift_willThrowTypedImpl();
      uint64_t v2 = &qword_10069B000;
      goto LABEL_2;
    }
    uint64_t v20 = v0 + 208;
    sub_10016EFCC(v56, v0 + 208);
    sub_10002F214(&qword_1006A7758);
    if (swift_dynamicCast())
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 720) + 32))(*(void *)(v0 + 728), *(void *)(v0 + 736), *(void *)(v0 + 712));
      GroupSessionMessenger.MessageContext.source.getter();
      uint64_t v35 = (void *)swift_task_alloc();
      *(void *)(v0 + 896) = v35;
      void *v35 = v0;
      v35[1] = sub_10042F120;
      uint64_t v36 = *(void *)(v0 + 704);
      goto LABEL_25;
    }
    if (swift_dynamicCast())
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 624) + 32))(*(void *)(v0 + 648), *(void *)(v0 + 656), *(void *)(v0 + 616));
      GroupSessionMessenger.MessageContext.source.getter();
      unint64_t v37 = (void *)swift_task_alloc();
      *(void *)(v0 + 952) = v37;
      *unint64_t v37 = v0;
      v37[1] = sub_100431818;
      uint64_t v38 = *(void *)(v0 + 696);
      uint64_t v39 = 2;
      goto LABEL_26;
    }
    if (swift_dynamicCast())
    {
      uint64_t v40 = *(void *)(v0 + 856);
      uint64_t v41 = *(void *)(v0 + 584);
      uint64_t v42 = *(void *)(v0 + 576);
      uint64_t v43 = *(void *)(v0 + 552);
      uint64_t v44 = *(void *)(v0 + 544);
      uint64_t v45 = *(void *)(v0 + 432);
      uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16);
      *(void *)(v0 + 968) = v46;
      *(void *)(v0 + 976) = (v43 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v46(v42, v41, v44);
      if ([*(id *)(v45 + v40) fastSyncPaperKitEnablePCSEncryption])
      {
        GroupSessionMessenger.MessageContext.source.getter();
        uint64_t v47 = (void *)swift_task_alloc();
        *(void *)(v0 + 984) = v47;
        *uint64_t v47 = v0;
        v47[1] = sub_1004331C8;
        uint64_t v36 = *(void *)(v0 + 688);
      }
      else
      {
        uint64_t v48 = *(void *)(v0 + 584);
        uint64_t v49 = *(void *)(v0 + 576);
        uint64_t v50 = *(void *)(v0 + 568);
        uint64_t v51 = *(void *)(v0 + 552);
        uint64_t v52 = *(void *)(v0 + 544);
        uint64_t v53 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
        *(void *)(v0 + 1000) = v53;
        *(void *)(v0 + 1008) = (v51 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v53(v49, v52);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 32))(v50, v48, v52);
        GroupSessionMessenger.MessageContext.source.getter();
        uint64_t v54 = (void *)swift_task_alloc();
        *(void *)(v0 + 1016) = v54;
        *uint64_t v54 = v0;
        v54[1] = sub_100433330;
        uint64_t v36 = *(void *)(v0 + 680);
      }
LABEL_25:
      uint64_t v38 = v36;
      uint64_t v39 = 3;
LABEL_26:
      return sub_100442178(v38, v39);
    }
    sub_10002F034(v58, v55, &qword_1006A7750);
    static Logger.realtimeCollaboration.getter();
    os_log_type_t v21 = static os_log_type_t.fault.getter();
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = v21;
    BOOL v24 = os_log_type_enabled(v22, v21);
    uint64_t v26 = *(void *)(v0 + 472);
    uint64_t v25 = *(void *)(v0 + 480);
    uint64_t v27 = *(void *)(v0 + 464);
    if (v24)
    {
      uint64_t v28 = swift_slowAlloc();
      v60[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136315650;
      uint64_t v29 = StaticString.description.getter();
      *(void *)(v28 + 4) = sub_10045DA1C(v29, v30, v60);
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2048;
      *(void *)(v28 + 14) = 228;
      *(_WORD *)(v28 + 22) = 2080;
      *(void *)(v0 + 328) = 0;
      *(void *)(v0 + 336) = 0xE000000000000000;
      _StringGuts.grow(_:)(31);
      uint64_t v31 = *(void *)(v0 + 336);
      *(void *)(v0 + 280) = *(void *)(v0 + 328);
      *(void *)(v0 + 288) = v31;
      v32._countAndFlagsBits = 0xD00000000000001DLL;
      v32._object = (void *)0x800000010055DFD0;
      String.append(_:)(v32);
      sub_10002F214(&qword_1006A7750);
      _print_unlocked<A, B>(_:_:)();
      *(void *)(v28 + 24) = sub_10045DA1C(*(void *)(v0 + 280), *(void *)(v0 + 288), v60);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Failed assertion at %s:%lu: %s", (uint8_t *)v28, 0x20u);
      swift_arrayDestroy();
      uint64_t v20 = v0 + 208;
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10002B754(v55, &qword_1006A7750);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    sub_10002B754(v58, &qword_1006A7750);
    sub_100018FE8(v20);
  }
  sub_10002B754(*(void *)(v0 + 760), &qword_1006A77E8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v33 = *(uint64_t (**)(void))(v0 + 8);
  return v33();
}

uint64_t sub_1004331C8()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 992) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[84] + 8))(v2[86], v2[83]);
  if (v0) {
    uint64_t v3 = sub_1004336A4;
  }
  else {
    uint64_t v3 = sub_100433498;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100433330()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 1024) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[84] + 8))(v2[85], v2[83]);
  if (v0) {
    uint64_t v3 = sub_100436B5C;
  }
  else {
    uint64_t v3 = sub_100435CD8;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100433498()
{
  uint64_t v1 = FastSync.PaperKitMessage.data.getter();
  uint64_t v3 = v2;
  v0[129] = v1;
  v0[130] = v2;
  os_log_type_t v4 = (void *)swift_task_alloc();
  v0[131] = v4;
  *os_log_type_t v4 = v0;
  v4[1] = sub_100433550;
  return sub_100442B14(v1, v3);
}

uint64_t sub_100433550(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 1056) = a1;
  *(void *)(v4 + 1064) = v1;
  swift_task_dealloc();
  sub_10017253C(*(void *)(v3 + 1032), *(void *)(v3 + 1040));
  if (v1) {
    uint64_t v5 = sub_100435208;
  }
  else {
    uint64_t v5 = sub_100434174;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1004336A4()
{
  uint64_t v64 = v0;
  uint64_t v1 = v0 + 112;
  uint64_t v60 = v0 + 16;
  uint64_t v2 = *(void *)(v0 + 584);
  uint64_t v3 = *(void *)(v0 + 544);
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 552) + 8);
  v4(*(void *)(v0 + 576), v3);
  v4(v2, v3);
  sub_100018FE8(v0 + 208);
  uint64_t v5 = &qword_10069B000;
  uint64_t v58 = v0 + 64;
  uint64_t v61 = v0 + 112;
  uint64_t v59 = (long long *)(v0 + 160);
LABEL_2:
  if (v5[9] != -1) {
    swift_once();
  }
  sub_10003293C(*(void *)(v0 + 464), (uint64_t)qword_1006A73A0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    swift_errorRetain();
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v8 + 4) = v10;
    *uint64_t v9 = v10;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Error processing incoming fast sync message: %@", (uint8_t *)v8, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v11 = *(void *)(v0 + 872);
  uint64_t v12 = *(void *)(v0 + 432);

  uint64_t v13 = *(os_unfair_lock_s **)(v12 + v11);
  uint64_t v14 = v13 + 4;
  uint64_t v15 = v13 + 6;
  os_unfair_lock_lock(v13 + 6);
  sub_100448BE4(v14);
  os_unfair_lock_unlock(v15);
  swift_errorRelease();
  sub_10002B754(v1, &qword_1006A7750);
  while (1)
  {
    uint64_t v16 = *(void *)(*(void *)(v0 + 760) + *(int *)(v0 + 60));
    dispatch thunk of Collection.endIndex.getter();
    if (v16 == *(void *)(v0 + 384)) {
      break;
    }
    uint64_t v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 832);
    uint64_t v17 = *(void *)(v0 + 784);
    uint64_t v18 = *(void *)(v0 + 776);
    uint64_t v19 = *(void *)(v0 + 768);
    uint64_t v20 = *(void *)(v0 + 760);
    os_log_type_t v21 = (void (*)(uint64_t, void))dispatch thunk of Collection.subscript.read();
    sub_10002F034(v22, v60, &qword_1006A7750);
    v21(v0 + 248, 0);
    v62(v17, v20, v19);
    dispatch thunk of Collection.formIndex(after:)();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    uint64_t v1 = v0 + 112;
    sub_10002F1B0(v60, v61, &qword_1006A7750);
    sub_10002F034(v61, (uint64_t)v59, &qword_1006A7750);
    if (*(unsigned char *)(v0 + 200))
    {
      *(void *)(v0 + 360) = *(void *)v59;
      sub_10002F214(&qword_1006A3D90);
      swift_willThrowTypedImpl();
      uint64_t v5 = &qword_10069B000;
      goto LABEL_2;
    }
    uint64_t v23 = v0 + 208;
    sub_10016EFCC(v59, v0 + 208);
    sub_10002F214(&qword_1006A7758);
    if (swift_dynamicCast())
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 720) + 32))(*(void *)(v0 + 728), *(void *)(v0 + 736), *(void *)(v0 + 712));
      GroupSessionMessenger.MessageContext.source.getter();
      uint64_t v38 = (void *)swift_task_alloc();
      *(void *)(v0 + 896) = v38;
      *uint64_t v38 = v0;
      v38[1] = sub_10042F120;
      uint64_t v39 = *(void *)(v0 + 704);
      goto LABEL_25;
    }
    if (swift_dynamicCast())
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 624) + 32))(*(void *)(v0 + 648), *(void *)(v0 + 656), *(void *)(v0 + 616));
      GroupSessionMessenger.MessageContext.source.getter();
      uint64_t v40 = (void *)swift_task_alloc();
      *(void *)(v0 + 952) = v40;
      *uint64_t v40 = v0;
      v40[1] = sub_100431818;
      uint64_t v41 = *(void *)(v0 + 696);
      uint64_t v42 = 2;
      goto LABEL_26;
    }
    if (swift_dynamicCast())
    {
      uint64_t v43 = *(void *)(v0 + 856);
      uint64_t v44 = *(void *)(v0 + 584);
      uint64_t v45 = *(void *)(v0 + 576);
      uint64_t v46 = *(void *)(v0 + 552);
      uint64_t v47 = *(void *)(v0 + 544);
      uint64_t v48 = *(void *)(v0 + 432);
      uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16);
      *(void *)(v0 + 968) = v49;
      *(void *)(v0 + 976) = (v46 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v49(v45, v44, v47);
      if ([*(id *)(v48 + v43) fastSyncPaperKitEnablePCSEncryption])
      {
        GroupSessionMessenger.MessageContext.source.getter();
        uint64_t v50 = (void *)swift_task_alloc();
        *(void *)(v0 + 984) = v50;
        *uint64_t v50 = v0;
        v50[1] = sub_1004331C8;
        uint64_t v39 = *(void *)(v0 + 688);
      }
      else
      {
        uint64_t v51 = *(void *)(v0 + 584);
        uint64_t v52 = *(void *)(v0 + 576);
        uint64_t v53 = *(void *)(v0 + 568);
        uint64_t v54 = *(void *)(v0 + 552);
        uint64_t v55 = *(void *)(v0 + 544);
        uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
        *(void *)(v0 + 1000) = v56;
        *(void *)(v0 + 1008) = (v54 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v56(v52, v55);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 32))(v53, v51, v55);
        GroupSessionMessenger.MessageContext.source.getter();
        uint64_t v57 = (void *)swift_task_alloc();
        *(void *)(v0 + 1016) = v57;
        *uint64_t v57 = v0;
        v57[1] = sub_100433330;
        uint64_t v39 = *(void *)(v0 + 680);
      }
LABEL_25:
      uint64_t v41 = v39;
      uint64_t v42 = 3;
LABEL_26:
      return sub_100442178(v41, v42);
    }
    sub_10002F034(v61, v58, &qword_1006A7750);
    static Logger.realtimeCollaboration.getter();
    os_log_type_t v24 = static os_log_type_t.fault.getter();
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = v24;
    BOOL v27 = os_log_type_enabled(v25, v24);
    uint64_t v29 = *(void *)(v0 + 472);
    uint64_t v28 = *(void *)(v0 + 480);
    uint64_t v30 = *(void *)(v0 + 464);
    if (v27)
    {
      uint64_t v31 = swift_slowAlloc();
      v63[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 136315650;
      uint64_t v32 = StaticString.description.getter();
      *(void *)(v31 + 4) = sub_10045DA1C(v32, v33, v63);
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2048;
      *(void *)(v31 + 14) = 228;
      *(_WORD *)(v31 + 22) = 2080;
      *(void *)(v0 + 328) = 0;
      *(void *)(v0 + 336) = 0xE000000000000000;
      _StringGuts.grow(_:)(31);
      uint64_t v34 = *(void *)(v0 + 336);
      *(void *)(v0 + 280) = *(void *)(v0 + 328);
      *(void *)(v0 + 288) = v34;
      v35._countAndFlagsBits = 0xD00000000000001DLL;
      v35._object = (void *)0x800000010055DFD0;
      String.append(_:)(v35);
      sub_10002F214(&qword_1006A7750);
      _print_unlocked<A, B>(_:_:)();
      *(void *)(v31 + 24) = sub_10045DA1C(*(void *)(v0 + 280), *(void *)(v0 + 288), v63);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Failed assertion at %s:%lu: %s", (uint8_t *)v31, 0x20u);
      swift_arrayDestroy();
      uint64_t v23 = v0 + 208;
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10002B754(v58, &qword_1006A7750);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
    sub_10002B754(v61, &qword_1006A7750);
    sub_100018FE8(v23);
  }
  sub_10002B754(*(void *)(v0 + 760), &qword_1006A77E8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
  return v36();
}

void sub_100434174()
{
  uint64_t v107 = v0;
  uint64_t v2 = v0;
  uint64_t v3 = v0 + 16;
  uint64_t v4 = v0 + 64;
  uint64_t v5 = v2 + 112;
  uint64_t v101 = v2 + 248;
  uint64_t v102 = v3;
  uint64_t v103 = v2 + 208;
  unint64_t v6 = *(void *)(v2 + 1056);
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v99 = v4;
  uint64_t v100 = (long long *)(v2 + 160);
  uint64_t v98 = (void *)(v2 + 360);
  unint64_t v8 = v2 + 376;
  uint64_t v104 = v2 + 112;
  uint64_t v105 = v2;
  if (!v7)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if ((v6 & 0xC000000000000001) != 0)
  {
    id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_7;
  }
  if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v9 = *(id *)(*(void *)(v2 + 1056) + 32);
LABEL_7:
    swift_bridgeObjectRelease();
    id v10 = [v9 encryptedValues];

    NSString v11 = String._bridgeToObjectiveC()();
    id v12 = [v10 objectForKeyedSubscript:v11];

    swift_unknownObjectRelease();
    if (v12)
    {
      *(void *)unint64_t v8 = v12;
      sub_10002F214(&qword_1006A7770);
      if (swift_dynamicCast())
      {
        swift_bridgeObjectRelease();
        uint64_t v1 = *(void *)(v2 + 312);
        unint64_t v8 = *(void *)(v2 + 320);
        if (qword_10069B050 == -1) {
          goto LABEL_10;
        }
        goto LABEL_64;
      }
    }
LABEL_13:
    if (qword_10069B048 != -1) {
      swift_once();
    }
    sub_10003293C(*(void *)(v2 + 464), (uint64_t)qword_1006A73A0);
    swift_bridgeObjectRetain();
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      v106[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136315138;
      sub_100031418(0, &qword_1006A7640);
      swift_bridgeObjectRetain();
      uint64_t v20 = Array.description.getter();
      unint64_t v22 = v21;
      swift_bridgeObjectRelease();
      *(void *)(v2 + 368) = sub_10045DA1C(v20, v22, v106);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Incoming PaperKit message is not in a valid format: %s", v19, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v23 = *(void *)(v2 + 1064);
    os_log_type_t v24 = *(os_unfair_lock_s **)(*(void *)(v2 + 432) + *(void *)(v2 + 872));
    uint64_t v25 = v24 + 4;
    os_log_type_t v26 = v24 + 6;
    os_unfair_lock_lock(v24 + 6);
    sub_100448BE4(v25);
    if (!v23)
    {
      uint64_t v27 = *(void *)(v2 + 584);
      uint64_t v28 = *(void *)(v2 + 576);
      uint64_t v29 = *(void *)(v2 + 552);
      uint64_t v30 = *(void *)(v2 + 544);
      os_unfair_lock_unlock(v26);
      uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
      v31(v28, v30);
      sub_10002B754(v5, &qword_1006A7750);
      v31(v27, v30);
      sub_100018FE8(v103);
      uint64_t v97 = 0;
      goto LABEL_34;
    }
    os_unfair_lock_unlock(v26);
    return;
  }
  __break(1u);
LABEL_64:
  swift_once();
LABEL_10:
  uint64_t v13 = *(void *)(v2 + 528);
  uint64_t v14 = *(void *)(v2 + 464);
  uint64_t v15 = *(void *)(v2 + 472);
  uint64_t v16 = sub_10003293C(*(void *)(v2 + 512), (uint64_t)qword_1006A73B8);
  sub_10002F034(v16, v13, &qword_1006A3138);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_10002B754(*(void *)(v2 + 528), &qword_1006A3138);
  }
  else
  {
    sub_100172484(v1, v8);
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 134217984;
      Swift::String v35 = v34;
      uint64_t v36 = 0;
      switch(v8 >> 62)
      {
        case 1uLL:
          LODWORD(v36) = HIDWORD(v1) - v1;
          if (__OFSUB__(HIDWORD(v1), v1))
          {
            __break(1u);
LABEL_66:
            __break(1u);
            JUMPOUT(0x1004351F8);
          }
          uint64_t v36 = (int)v36;
LABEL_30:
          *(void *)(v2 + 392) = v36;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          sub_10017253C(v1, v8);
          _os_log_impl((void *)&_mh_execute_header, v32, v33, "Received PaperKit message (PCS=ON) with length: %ld", v35, 0xCu);
          swift_slowDealloc();

          break;
        case 2uLL:
          uint64_t v38 = *(void *)(v1 + 16);
          uint64_t v37 = *(void *)(v1 + 24);
          BOOL v39 = __OFSUB__(v37, v38);
          uint64_t v36 = v37 - v38;
          if (!v39) {
            goto LABEL_30;
          }
          goto LABEL_66;
        case 3uLL:
          goto LABEL_30;
        default:
          uint64_t v36 = BYTE6(v8);
          goto LABEL_30;
      }
    }
    else
    {

      sub_10017253C(v1, v8);
    }
    (*(void (**)(void, void))(*(void *)(v2 + 472) + 8))(*(void *)(v2 + 528), *(void *)(v2 + 464));
  }
  uint64_t v40 = *(void *)(v2 + 584);
  uint64_t v41 = *(void *)(v2 + 576);
  uint64_t v42 = *(void *)(v2 + 552);
  uint64_t v43 = *(void *)(v2 + 544);
  sub_1004433BC(v1, v8, *(void *)(*(void *)(v2 + 432) + *(void *)(v2 + 864)));
  uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
  v44(v41, v43);
  sub_10002B754(v5, &qword_1006A7750);
  sub_10017253C(v1, v8);
  v44(v40, v43);
  sub_100018FE8(v103);
  uint64_t v97 = *(void *)(v2 + 1064);
LABEL_34:
  while (1)
  {
    uint64_t v45 = *(void *)(*(void *)(v2 + 760) + *(int *)(v2 + 60));
    dispatch thunk of Collection.endIndex.getter();
    if (v45 == *(void *)(v2 + 384)) {
      break;
    }
    uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v105 + 832);
    uint64_t v47 = *(void *)(v105 + 784);
    uint64_t v48 = *(void *)(v105 + 776);
    uint64_t v49 = *(void *)(v105 + 768);
    uint64_t v50 = *(void *)(v105 + 760);
    uint64_t v51 = (void (*)(uint64_t, void))dispatch thunk of Collection.subscript.read();
    sub_10002F034(v52, v102, &qword_1006A7750);
    v51(v101, 0);
    v46(v47, v50, v49);
    uint64_t v2 = v105;
    dispatch thunk of Collection.formIndex(after:)();
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
    sub_10002F1B0(v102, v104, &qword_1006A7750);
    sub_10002F034(v104, (uint64_t)v100, &qword_1006A7750);
    if (*(unsigned char *)(v105 + 200))
    {
      *uint64_t v98 = *(void *)v100;
      sub_10002F214(&qword_1006A3D90);
      swift_willThrowTypedImpl();
      if (qword_10069B048 != -1) {
        swift_once();
      }
      sub_10003293C(*(void *)(v105 + 464), (uint64_t)qword_1006A73A0);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v66 = Logger.logObject.getter();
      os_log_type_t v67 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v66, v67))
      {
        uint64_t v68 = swift_slowAlloc();
        uint64_t v69 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v68 = 138412290;
        swift_errorRetain();
        uint64_t v70 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v68 + 4) = v70;
        void *v69 = v70;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v66, v67, "Error processing incoming fast sync message: %@", (uint8_t *)v68, 0xCu);
        sub_10002F214(&qword_10069FD50);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }
      uint64_t v71 = *(void *)(v105 + 872);
      uint64_t v72 = *(void *)(v105 + 432);

      uint64_t v73 = *(os_unfair_lock_s **)(v72 + v71);
      uint64_t v74 = v73 + 4;
      uint64_t v75 = v73 + 6;
      os_unfair_lock_lock(v73 + 6);
      sub_100448BE4(v74);
      os_unfair_lock_unlock(v75);
      if (v97) {
        return;
      }
      swift_errorRelease();
      sub_10002B754(v104, &qword_1006A7750);
      uint64_t v97 = 0;
    }
    else
    {
      uint64_t v53 = v103;
      sub_10016EFCC(v100, v103);
      sub_10002F214(&qword_1006A7758);
      if (swift_dynamicCast())
      {
        (*(void (**)(void, void, void))(*(void *)(v105 + 720) + 32))(*(void *)(v105 + 728), *(void *)(v105 + 736), *(void *)(v105 + 712));
        GroupSessionMessenger.MessageContext.source.getter();
        uint64_t v77 = (void *)swift_task_alloc();
        *(void *)(v105 + 896) = v77;
        *uint64_t v77 = v105;
        v77[1] = sub_10042F120;
        uint64_t v78 = *(void *)(v105 + 704);
        goto LABEL_56;
      }
      if (swift_dynamicCast())
      {
        (*(void (**)(void, void, void))(*(void *)(v105 + 624) + 32))(*(void *)(v105 + 648), *(void *)(v105 + 656), *(void *)(v105 + 616));
        GroupSessionMessenger.MessageContext.source.getter();
        uint64_t v79 = (void *)swift_task_alloc();
        *(void *)(v105 + 952) = v79;
        *uint64_t v79 = v105;
        v79[1] = sub_100431818;
        uint64_t v80 = *(void *)(v105 + 696);
        uint64_t v81 = 2;
        goto LABEL_57;
      }
      if (swift_dynamicCast())
      {
        uint64_t v82 = *(void *)(v105 + 856);
        uint64_t v83 = *(void *)(v105 + 584);
        uint64_t v84 = *(void *)(v105 + 576);
        uint64_t v85 = *(void *)(v105 + 552);
        uint64_t v86 = *(void *)(v105 + 544);
        uint64_t v87 = *(void *)(v105 + 432);
        uint64_t v88 = *(void (**)(uint64_t, uint64_t, uint64_t))(v85 + 16);
        *(void *)(v105 + 968) = v88;
        *(void *)(v105 + 976) = (v85 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
        v88(v84, v83, v86);
        if ([*(id *)(v87 + v82) fastSyncPaperKitEnablePCSEncryption])
        {
          GroupSessionMessenger.MessageContext.source.getter();
          uint64_t v89 = (void *)swift_task_alloc();
          *(void *)(v105 + 984) = v89;
          *uint64_t v89 = v105;
          v89[1] = sub_1004331C8;
          uint64_t v78 = *(void *)(v105 + 688);
        }
        else
        {
          uint64_t v90 = *(void *)(v105 + 584);
          uint64_t v91 = *(void *)(v105 + 576);
          uint64_t v92 = *(void *)(v105 + 568);
          uint64_t v93 = *(void *)(v105 + 552);
          uint64_t v94 = *(void *)(v105 + 544);
          uint64_t v95 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
          *(void *)(v105 + 1000) = v95;
          *(void *)(v105 + 1008) = (v93 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
          v95(v91, v94);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v93 + 32))(v92, v90, v94);
          GroupSessionMessenger.MessageContext.source.getter();
          uint64_t v96 = (void *)swift_task_alloc();
          *(void *)(v105 + 1016) = v96;
          void *v96 = v105;
          v96[1] = sub_100433330;
          uint64_t v78 = *(void *)(v105 + 680);
        }
LABEL_56:
        uint64_t v80 = v78;
        uint64_t v81 = 3;
LABEL_57:
        sub_100442178(v80, v81);
        return;
      }
      sub_10002F034(v104, v99, &qword_1006A7750);
      static Logger.realtimeCollaboration.getter();
      os_log_type_t v54 = static os_log_type_t.fault.getter();
      uint64_t v55 = Logger.logObject.getter();
      os_log_type_t v56 = v54;
      BOOL v57 = os_log_type_enabled(v55, v54);
      uint64_t v59 = *(void *)(v105 + 472);
      uint64_t v58 = *(void *)(v105 + 480);
      uint64_t v60 = *(void *)(v105 + 464);
      if (v57)
      {
        uint64_t v61 = swift_slowAlloc();
        v106[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v61 = 136315650;
        uint64_t v62 = StaticString.description.getter();
        *(void *)(v61 + 4) = sub_10045DA1C(v62, v63, v106);
        swift_bridgeObjectRelease();
        *(_WORD *)(v61 + 12) = 2048;
        *(void *)(v61 + 14) = 228;
        *(_WORD *)(v61 + 22) = 2080;
        *(void *)(v105 + 328) = 0;
        *(void *)(v105 + 336) = 0xE000000000000000;
        _StringGuts.grow(_:)(31);
        uint64_t v64 = *(void *)(v105 + 336);
        *(void *)(v105 + 280) = *(void *)(v105 + 328);
        *(void *)(v105 + 288) = v64;
        v65._object = (void *)0x800000010055DFD0;
        v65._countAndFlagsBits = 0xD00000000000001DLL;
        String.append(_:)(v65);
        sub_10002F214(&qword_1006A7750);
        _print_unlocked<A, B>(_:_:)();
        *(void *)(v61 + 24) = sub_10045DA1C(*(void *)(v105 + 280), *(void *)(v105 + 288), v106);
        uint64_t v2 = v105;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v55, v56, "Failed assertion at %s:%lu: %s", (uint8_t *)v61, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v53 = v103;
        swift_slowDealloc();
      }

      sub_10002B754(v99, &qword_1006A7750);
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v58, v60);
      sub_10002B754(v104, &qword_1006A7750);
      sub_100018FE8(v53);
    }
  }
  sub_10002B754(*(void *)(v2 + 760), &qword_1006A77E8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v76 = *(void (**)(void))(v2 + 8);
  v76();
}

uint64_t sub_100435208()
{
  uint64_t v64 = v0;
  uint64_t v1 = v0 + 112;
  uint64_t v60 = v0 + 16;
  uint64_t v2 = *(void *)(v0 + 584);
  uint64_t v3 = *(void *)(v0 + 544);
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 552) + 8);
  v4(*(void *)(v0 + 576), v3);
  v4(v2, v3);
  sub_100018FE8(v0 + 208);
  uint64_t v5 = &qword_10069B000;
  uint64_t v58 = v0 + 64;
  uint64_t v61 = v0 + 112;
  uint64_t v59 = (long long *)(v0 + 160);
LABEL_2:
  if (v5[9] != -1) {
    swift_once();
  }
  sub_10003293C(*(void *)(v0 + 464), (uint64_t)qword_1006A73A0);
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    id v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    swift_errorRetain();
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v8 + 4) = v10;
    *id v9 = v10;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Error processing incoming fast sync message: %@", (uint8_t *)v8, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v11 = *(void *)(v0 + 872);
  uint64_t v12 = *(void *)(v0 + 432);

  uint64_t v13 = *(os_unfair_lock_s **)(v12 + v11);
  uint64_t v14 = v13 + 4;
  uint64_t v15 = v13 + 6;
  os_unfair_lock_lock(v13 + 6);
  sub_100448BE4(v14);
  os_unfair_lock_unlock(v15);
  swift_errorRelease();
  sub_10002B754(v1, &qword_1006A7750);
  while (1)
  {
    uint64_t v16 = *(void *)(*(void *)(v0 + 760) + *(int *)(v0 + 60));
    dispatch thunk of Collection.endIndex.getter();
    if (v16 == *(void *)(v0 + 384)) {
      break;
    }
    uint64_t v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 832);
    uint64_t v17 = *(void *)(v0 + 784);
    uint64_t v18 = *(void *)(v0 + 776);
    uint64_t v19 = *(void *)(v0 + 768);
    uint64_t v20 = *(void *)(v0 + 760);
    unint64_t v21 = (void (*)(uint64_t, void))dispatch thunk of Collection.subscript.read();
    sub_10002F034(v22, v60, &qword_1006A7750);
    v21(v0 + 248, 0);
    v62(v17, v20, v19);
    dispatch thunk of Collection.formIndex(after:)();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    uint64_t v1 = v0 + 112;
    sub_10002F1B0(v60, v61, &qword_1006A7750);
    sub_10002F034(v61, (uint64_t)v59, &qword_1006A7750);
    if (*(unsigned char *)(v0 + 200))
    {
      *(void *)(v0 + 360) = *(void *)v59;
      sub_10002F214(&qword_1006A3D90);
      swift_willThrowTypedImpl();
      uint64_t v5 = &qword_10069B000;
      goto LABEL_2;
    }
    uint64_t v23 = v0 + 208;
    sub_10016EFCC(v59, v0 + 208);
    sub_10002F214(&qword_1006A7758);
    if (swift_dynamicCast())
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 720) + 32))(*(void *)(v0 + 728), *(void *)(v0 + 736), *(void *)(v0 + 712));
      GroupSessionMessenger.MessageContext.source.getter();
      uint64_t v38 = (void *)swift_task_alloc();
      *(void *)(v0 + 896) = v38;
      *uint64_t v38 = v0;
      v38[1] = sub_10042F120;
      uint64_t v39 = *(void *)(v0 + 704);
      goto LABEL_25;
    }
    if (swift_dynamicCast())
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 624) + 32))(*(void *)(v0 + 648), *(void *)(v0 + 656), *(void *)(v0 + 616));
      GroupSessionMessenger.MessageContext.source.getter();
      uint64_t v40 = (void *)swift_task_alloc();
      *(void *)(v0 + 952) = v40;
      *uint64_t v40 = v0;
      v40[1] = sub_100431818;
      uint64_t v41 = *(void *)(v0 + 696);
      uint64_t v42 = 2;
      goto LABEL_26;
    }
    if (swift_dynamicCast())
    {
      uint64_t v43 = *(void *)(v0 + 856);
      uint64_t v44 = *(void *)(v0 + 584);
      uint64_t v45 = *(void *)(v0 + 576);
      uint64_t v46 = *(void *)(v0 + 552);
      uint64_t v47 = *(void *)(v0 + 544);
      uint64_t v48 = *(void *)(v0 + 432);
      uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16);
      *(void *)(v0 + 968) = v49;
      *(void *)(v0 + 976) = (v46 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v49(v45, v44, v47);
      if ([*(id *)(v48 + v43) fastSyncPaperKitEnablePCSEncryption])
      {
        GroupSessionMessenger.MessageContext.source.getter();
        uint64_t v50 = (void *)swift_task_alloc();
        *(void *)(v0 + 984) = v50;
        *uint64_t v50 = v0;
        v50[1] = sub_1004331C8;
        uint64_t v39 = *(void *)(v0 + 688);
      }
      else
      {
        uint64_t v51 = *(void *)(v0 + 584);
        uint64_t v52 = *(void *)(v0 + 576);
        uint64_t v53 = *(void *)(v0 + 568);
        uint64_t v54 = *(void *)(v0 + 552);
        uint64_t v55 = *(void *)(v0 + 544);
        os_log_type_t v56 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
        *(void *)(v0 + 1000) = v56;
        *(void *)(v0 + 1008) = (v54 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v56(v52, v55);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 32))(v53, v51, v55);
        GroupSessionMessenger.MessageContext.source.getter();
        BOOL v57 = (void *)swift_task_alloc();
        *(void *)(v0 + 1016) = v57;
        *BOOL v57 = v0;
        v57[1] = sub_100433330;
        uint64_t v39 = *(void *)(v0 + 680);
      }
LABEL_25:
      uint64_t v41 = v39;
      uint64_t v42 = 3;
LABEL_26:
      return sub_100442178(v41, v42);
    }
    sub_10002F034(v61, v58, &qword_1006A7750);
    static Logger.realtimeCollaboration.getter();
    os_log_type_t v24 = static os_log_type_t.fault.getter();
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = v24;
    BOOL v27 = os_log_type_enabled(v25, v24);
    uint64_t v29 = *(void *)(v0 + 472);
    uint64_t v28 = *(void *)(v0 + 480);
    uint64_t v30 = *(void *)(v0 + 464);
    if (v27)
    {
      uint64_t v31 = swift_slowAlloc();
      v63[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 136315650;
      uint64_t v32 = StaticString.description.getter();
      *(void *)(v31 + 4) = sub_10045DA1C(v32, v33, v63);
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2048;
      *(void *)(v31 + 14) = 228;
      *(_WORD *)(v31 + 22) = 2080;
      *(void *)(v0 + 328) = 0;
      *(void *)(v0 + 336) = 0xE000000000000000;
      _StringGuts.grow(_:)(31);
      uint64_t v34 = *(void *)(v0 + 336);
      *(void *)(v0 + 280) = *(void *)(v0 + 328);
      *(void *)(v0 + 288) = v34;
      v35._countAndFlagsBits = 0xD00000000000001DLL;
      v35._object = (void *)0x800000010055DFD0;
      String.append(_:)(v35);
      sub_10002F214(&qword_1006A7750);
      _print_unlocked<A, B>(_:_:)();
      *(void *)(v31 + 24) = sub_10045DA1C(*(void *)(v0 + 280), *(void *)(v0 + 288), v63);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Failed assertion at %s:%lu: %s", (uint8_t *)v31, 0x20u);
      swift_arrayDestroy();
      uint64_t v23 = v0 + 208;
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10002B754(v58, &qword_1006A7750);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
    sub_10002B754(v61, &qword_1006A7750);
    sub_100018FE8(v23);
  }
  sub_10002B754(*(void *)(v0 + 760), &qword_1006A77E8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
  return v36();
}

void sub_100435CD8()
{
  uint64_t v95 = v0;
  if (qword_10069B050 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 520);
  uint64_t v2 = *(void *)(v0 + 464);
  uint64_t v3 = *(void *)(v0 + 472);
  uint64_t v4 = sub_10003293C(*(void *)(v0 + 512), (uint64_t)qword_1006A73B8);
  sub_10002F034(v4, v1, &qword_1006A3138);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_10002B754(*(void *)(v0 + 520), &qword_1006A3138);
  }
  else
  {
    (*(void (**)(void, void, void))(v0 + 968))(*(void *)(v0 + 560), *(void *)(v0 + 568), *(void *)(v0 + 544));
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 134217984;
      unint64_t v8 = FastSync.PaperKitMessage.data.getter();
      uint64_t v10 = v8;
      unint64_t v11 = v9;
      switch(v9 >> 62)
      {
        case 1uLL:
          unint64_t v12 = HIDWORD(v8);
          sub_10017253C(v8, v9);
          if (__OFSUB__(v12, v10)) {
            goto LABEL_56;
          }
          unint64_t v11 = (int)v12 - (int)v10;
          break;
        case 2uLL:
          uint64_t v14 = *(void *)(v8 + 16);
          uint64_t v13 = *(void *)(v8 + 24);
          sub_10017253C(v8, v9);
          unint64_t v11 = v13 - v14;
          if (!__OFSUB__(v13, v14)) {
            break;
          }
          __break(1u);
LABEL_14:
          sub_10017253C(v10, v11);
          unint64_t v11 = 0;
          break;
        case 3uLL:
          goto LABEL_14;
        default:
          sub_10017253C(v8, v9);
          unint64_t v11 = BYTE6(v11);
          break;
      }
      (*(void (**)(void, void))(v0 + 1000))(*(void *)(v0 + 560), *(void *)(v0 + 544));
      *(void *)(v7 + 4) = v11;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Received PaperKit message (PCS=OFF) with length: %ld", (uint8_t *)v7, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(void, void))(v0 + 1000))(*(void *)(v0 + 560), *(void *)(v0 + 544));
    }
    uint64_t v15 = *(void *)(v0 + 520);
    uint64_t v16 = *(void *)(v0 + 464);
    uint64_t v17 = *(void *)(v0 + 472);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  }
  uint64_t v18 = (uint64_t *)(v0 + 352);
  uint64_t v19 = *(void *)(v0 + 1024);
  uint64_t v20 = *(os_unfair_lock_s **)(*(void *)(v0 + 432) + *(void *)(v0 + 864));
  uint64_t v21 = FastSync.PaperKitMessage.data.getter();
  unint64_t v23 = v22;
  os_log_type_t v24 = v20 + 4;
  v20 += 6;
  os_unfair_lock_lock(v20);
  sub_1004492C4(v24, (void *)(v0 + 352));
  os_unfair_lock_unlock(v20);
  if (v19) {
    return;
  }
  uint64_t v25 = *v18;
  uint64_t v90 = *v18;
  if ((unint64_t)*v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v25 = v90;
    uint64_t v92 = v31;
    if (!v31) {
      goto LABEL_27;
    }
  }
  else
  {
    uint64_t v92 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v92) {
      goto LABEL_27;
    }
  }
  if (v92 < 1)
  {
    __break(1u);
LABEL_56:
    __break(1u);
    JUMPOUT(0x100436B4CLL);
  }
  uint64_t v26 = 0;
  unint64_t v27 = v25 & 0xC000000000000001;
  do
  {
    if (v27) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    uint64_t v28 = *(void *)(v0 + 448);
    uint64_t v29 = *(void *)(v0 + 456);
    uint64_t v30 = *(void *)(v0 + 440);
    ++v26;
    *(void *)(v0 + 296) = v21;
    *(void *)(v0 + 304) = v23;
    sub_100172484(v21, v23);
    sub_10002F214(&qword_10069BAC8);
    AsyncStream.Continuation.yield(_:)();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v29, v30);
  }
  while (v92 != v26);
LABEL_27:
  uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v0 + 1000);
  uint64_t v33 = *(void *)(v0 + 568);
  uint64_t v34 = *(void *)(v0 + 544);
  swift_bridgeObjectRelease();
  sub_10017253C(v21, v23);
  v32(v33, v34);
  sub_10002B754(v0 + 112, &qword_1006A7750);
  uint64_t v88 = v0 + 208;
  sub_100018FE8(v0 + 208);
  uint64_t v35 = *(void *)(*(void *)(v0 + 760) + *(int *)(v0 + 60));
  dispatch thunk of Collection.endIndex.getter();
  if (v35 == *(void *)(v0 + 384))
  {
LABEL_28:
    sub_10002B754(*(void *)(v0 + 760), &qword_1006A77E8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v36 = *(void (**)(void))(v0 + 8);
    v36();
  }
  else
  {
    uint64_t v87 = v0 + 16;
    uint64_t v86 = (long long *)(v0 + 160);
    uint64_t v85 = v0 + 64;
    uint64_t v89 = v0 + 112;
    while (1)
    {
      while (1)
      {
        uint64_t v91 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 832);
        uint64_t v38 = *(void *)(v0 + 784);
        uint64_t v39 = *(void *)(v0 + 776);
        uint64_t v40 = *(void *)(v0 + 768);
        uint64_t v41 = *(void *)(v0 + 760);
        uint64_t v42 = (void (*)(uint64_t, void))dispatch thunk of Collection.subscript.read();
        sub_10002F034(v43, v87, &qword_1006A7750);
        v42(v0 + 248, 0);
        v91(v38, v41, v40);
        dispatch thunk of Collection.formIndex(after:)();
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
        sub_10002F1B0(v87, v89, &qword_1006A7750);
        sub_10002F034(v89, (uint64_t)v86, &qword_1006A7750);
        if ((*(unsigned char *)(v0 + 200) & 1) == 0) {
          break;
        }
        *(void *)(v0 + 360) = *(void *)v86;
        sub_10002F214(&qword_1006A3D90);
        swift_willThrowTypedImpl();
        if (qword_10069B048 != -1) {
          swift_once();
        }
        sub_10003293C(*(void *)(v0 + 464), (uint64_t)qword_1006A73A0);
        swift_errorRetain();
        swift_errorRetain();
        uint64_t v44 = Logger.logObject.getter();
        os_log_type_t v45 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v44, v45))
        {
          uint64_t v46 = swift_slowAlloc();
          uint64_t v47 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v46 = 138412290;
          swift_errorRetain();
          uint64_t v48 = _swift_stdlib_bridgeErrorToNSError();
          *(void *)(v46 + 4) = v48;
          *uint64_t v47 = v48;
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v44, v45, "Error processing incoming fast sync message: %@", (uint8_t *)v46, 0xCu);
          sub_10002F214(&qword_10069FD50);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_errorRelease();
          swift_errorRelease();
        }
        uint64_t v59 = *(void *)(v0 + 872);
        uint64_t v60 = *(void *)(v0 + 432);

        uint64_t v61 = *(os_unfair_lock_s **)(v60 + v59);
        uint64_t v62 = v61 + 4;
        unint64_t v63 = v61 + 6;
        os_unfair_lock_lock(v61 + 6);
        sub_100448BE4(v62);
        os_unfair_lock_unlock(v63);
        swift_errorRelease();
        sub_10002B754(v89, &qword_1006A7750);
        uint64_t v64 = *(void *)(*(void *)(v0 + 760) + *(int *)(v0 + 60));
        dispatch thunk of Collection.endIndex.getter();
        if (v64 == *(void *)(v0 + 384)) {
          goto LABEL_28;
        }
      }
      sub_10016EFCC(v86, v88);
      sub_10002F214(&qword_1006A7758);
      if (swift_dynamicCast())
      {
        (*(void (**)(void, void, void))(*(void *)(v0 + 720) + 32))(*(void *)(v0 + 728), *(void *)(v0 + 736), *(void *)(v0 + 712));
        GroupSessionMessenger.MessageContext.source.getter();
        uint64_t v65 = (void *)swift_task_alloc();
        *(void *)(v0 + 896) = v65;
        *uint64_t v65 = v0;
        v65[1] = sub_10042F120;
        uint64_t v66 = *(void *)(v0 + 704);
        goto LABEL_51;
      }
      if (swift_dynamicCast())
      {
        (*(void (**)(void, void, void))(*(void *)(v0 + 624) + 32))(*(void *)(v0 + 648), *(void *)(v0 + 656), *(void *)(v0 + 616));
        GroupSessionMessenger.MessageContext.source.getter();
        os_log_type_t v67 = (void *)swift_task_alloc();
        *(void *)(v0 + 952) = v67;
        *os_log_type_t v67 = v0;
        v67[1] = sub_100431818;
        uint64_t v68 = *(void *)(v0 + 696);
        uint64_t v69 = 2;
        goto LABEL_52;
      }
      if (swift_dynamicCast()) {
        break;
      }
      sub_10002F034(v89, v85, &qword_1006A7750);
      static Logger.realtimeCollaboration.getter();
      os_log_type_t v49 = static os_log_type_t.fault.getter();
      uint64_t v50 = Logger.logObject.getter();
      BOOL v51 = os_log_type_enabled(v50, v49);
      uint64_t v93 = *(void *)(v0 + 480);
      uint64_t v52 = *(void *)(v0 + 464);
      uint64_t v53 = *(void *)(v0 + 472);
      if (v51)
      {
        uint64_t v54 = swift_slowAlloc();
        v94[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v54 = 136315650;
        uint64_t v55 = StaticString.description.getter();
        *(void *)(v54 + 4) = sub_10045DA1C(v55, v56, v94);
        swift_bridgeObjectRelease();
        *(_WORD *)(v54 + 12) = 2048;
        *(void *)(v54 + 14) = 228;
        *(_WORD *)(v54 + 22) = 2080;
        *(void *)(v0 + 328) = 0;
        *(void *)(v0 + 336) = 0xE000000000000000;
        _StringGuts.grow(_:)(31);
        uint64_t v57 = *(void *)(v0 + 336);
        *(void *)(v0 + 280) = *(void *)(v0 + 328);
        *(void *)(v0 + 288) = v57;
        v58._countAndFlagsBits = 0xD00000000000001DLL;
        v58._object = (void *)0x800000010055DFD0;
        String.append(_:)(v58);
        sub_10002F214(&qword_1006A7750);
        _print_unlocked<A, B>(_:_:)();
        *(void *)(v54 + 24) = sub_10045DA1C(*(void *)(v0 + 280), *(void *)(v0 + 288), v94);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v50, v49, "Failed assertion at %s:%lu: %s", (uint8_t *)v54, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      sub_10002B754(v85, &qword_1006A7750);
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v93, v52);
      sub_10002B754(v0 + 112, &qword_1006A7750);
      sub_100018FE8(v88);
      uint64_t v37 = *(void *)(*(void *)(v0 + 760) + *(int *)(v0 + 60));
      dispatch thunk of Collection.endIndex.getter();
      if (v37 == *(void *)(v0 + 384)) {
        goto LABEL_28;
      }
    }
    uint64_t v70 = *(void *)(v0 + 856);
    uint64_t v71 = *(void *)(v0 + 584);
    uint64_t v72 = *(void *)(v0 + 576);
    uint64_t v73 = *(void *)(v0 + 552);
    uint64_t v74 = *(void *)(v0 + 544);
    uint64_t v75 = *(void *)(v0 + 432);
    uint64_t v76 = *(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 16);
    *(void *)(v0 + 968) = v76;
    *(void *)(v0 + 976) = (v73 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v76(v72, v71, v74);
    if ([*(id *)(v75 + v70) fastSyncPaperKitEnablePCSEncryption])
    {
      GroupSessionMessenger.MessageContext.source.getter();
      uint64_t v77 = (void *)swift_task_alloc();
      *(void *)(v0 + 984) = v77;
      *uint64_t v77 = v0;
      v77[1] = sub_1004331C8;
      uint64_t v66 = *(void *)(v0 + 688);
    }
    else
    {
      uint64_t v78 = *(void *)(v0 + 584);
      uint64_t v79 = *(void *)(v0 + 576);
      uint64_t v80 = *(void *)(v0 + 568);
      uint64_t v81 = *(void *)(v0 + 552);
      uint64_t v82 = *(void *)(v0 + 544);
      uint64_t v83 = *(void (**)(uint64_t, uint64_t))(v81 + 8);
      *(void *)(v0 + 1000) = v83;
      *(void *)(v0 + 1008) = (v81 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v83(v79, v82);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 32))(v80, v78, v82);
      GroupSessionMessenger.MessageContext.source.getter();
      uint64_t v84 = (void *)swift_task_alloc();
      *(void *)(v0 + 1016) = v84;
      *uint64_t v84 = v0;
      v84[1] = sub_100433330;
      uint64_t v66 = *(void *)(v0 + 680);
    }
LABEL_51:
    uint64_t v68 = v66;
    uint64_t v69 = 3;
LABEL_52:
    sub_100442178(v68, v69);
  }
}

uint64_t sub_100436B5C()
{
  uint64_t v61 = v0;
  uint64_t v1 = v0 + 112;
  uint64_t v57 = v0 + 16;
  (*(void (**)(void, void))(v0 + 1000))(*(void *)(v0 + 568), *(void *)(v0 + 544));
  sub_100018FE8(v0 + 208);
  uint64_t v2 = &qword_10069B000;
  uint64_t v55 = v0 + 64;
  uint64_t v58 = v0 + 112;
  unint64_t v56 = (long long *)(v0 + 160);
LABEL_2:
  if (v2[9] != -1) {
    swift_once();
  }
  sub_10003293C(*(void *)(v0 + 464), (uint64_t)qword_1006A73A0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    os_log_type_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v5 + 4) = v7;
    void *v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Error processing incoming fast sync message: %@", (uint8_t *)v5, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v8 = *(void *)(v0 + 872);
  uint64_t v9 = *(void *)(v0 + 432);

  uint64_t v10 = *(os_unfair_lock_s **)(v9 + v8);
  unint64_t v11 = v10 + 4;
  unint64_t v12 = v10 + 6;
  os_unfair_lock_lock(v10 + 6);
  sub_100448BE4(v11);
  os_unfair_lock_unlock(v12);
  swift_errorRelease();
  sub_10002B754(v1, &qword_1006A7750);
  while (1)
  {
    uint64_t v13 = *(void *)(*(void *)(v0 + 760) + *(int *)(v0 + 60));
    dispatch thunk of Collection.endIndex.getter();
    if (v13 == *(void *)(v0 + 384)) {
      break;
    }
    uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 832);
    uint64_t v14 = *(void *)(v0 + 784);
    uint64_t v15 = *(void *)(v0 + 776);
    uint64_t v16 = *(void *)(v0 + 768);
    uint64_t v17 = *(void *)(v0 + 760);
    uint64_t v18 = (void (*)(uint64_t, void))dispatch thunk of Collection.subscript.read();
    sub_10002F034(v19, v57, &qword_1006A7750);
    v18(v0 + 248, 0);
    v59(v14, v17, v16);
    dispatch thunk of Collection.formIndex(after:)();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    uint64_t v1 = v0 + 112;
    sub_10002F1B0(v57, v58, &qword_1006A7750);
    sub_10002F034(v58, (uint64_t)v56, &qword_1006A7750);
    if (*(unsigned char *)(v0 + 200))
    {
      *(void *)(v0 + 360) = *(void *)v56;
      sub_10002F214(&qword_1006A3D90);
      swift_willThrowTypedImpl();
      uint64_t v2 = &qword_10069B000;
      goto LABEL_2;
    }
    uint64_t v20 = v0 + 208;
    sub_10016EFCC(v56, v0 + 208);
    sub_10002F214(&qword_1006A7758);
    if (swift_dynamicCast())
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 720) + 32))(*(void *)(v0 + 728), *(void *)(v0 + 736), *(void *)(v0 + 712));
      GroupSessionMessenger.MessageContext.source.getter();
      uint64_t v35 = (void *)swift_task_alloc();
      *(void *)(v0 + 896) = v35;
      void *v35 = v0;
      v35[1] = sub_10042F120;
      uint64_t v36 = *(void *)(v0 + 704);
      goto LABEL_25;
    }
    if (swift_dynamicCast())
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 624) + 32))(*(void *)(v0 + 648), *(void *)(v0 + 656), *(void *)(v0 + 616));
      GroupSessionMessenger.MessageContext.source.getter();
      uint64_t v37 = (void *)swift_task_alloc();
      *(void *)(v0 + 952) = v37;
      *uint64_t v37 = v0;
      v37[1] = sub_100431818;
      uint64_t v38 = *(void *)(v0 + 696);
      uint64_t v39 = 2;
      goto LABEL_26;
    }
    if (swift_dynamicCast())
    {
      uint64_t v40 = *(void *)(v0 + 856);
      uint64_t v41 = *(void *)(v0 + 584);
      uint64_t v42 = *(void *)(v0 + 576);
      uint64_t v43 = *(void *)(v0 + 552);
      uint64_t v44 = *(void *)(v0 + 544);
      uint64_t v45 = *(void *)(v0 + 432);
      uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16);
      *(void *)(v0 + 968) = v46;
      *(void *)(v0 + 976) = (v43 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v46(v42, v41, v44);
      if ([*(id *)(v45 + v40) fastSyncPaperKitEnablePCSEncryption])
      {
        GroupSessionMessenger.MessageContext.source.getter();
        uint64_t v47 = (void *)swift_task_alloc();
        *(void *)(v0 + 984) = v47;
        *uint64_t v47 = v0;
        v47[1] = sub_1004331C8;
        uint64_t v36 = *(void *)(v0 + 688);
      }
      else
      {
        uint64_t v48 = *(void *)(v0 + 584);
        uint64_t v49 = *(void *)(v0 + 576);
        uint64_t v50 = *(void *)(v0 + 568);
        uint64_t v51 = *(void *)(v0 + 552);
        uint64_t v52 = *(void *)(v0 + 544);
        uint64_t v53 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
        *(void *)(v0 + 1000) = v53;
        *(void *)(v0 + 1008) = (v51 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v53(v49, v52);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 32))(v50, v48, v52);
        GroupSessionMessenger.MessageContext.source.getter();
        uint64_t v54 = (void *)swift_task_alloc();
        *(void *)(v0 + 1016) = v54;
        *uint64_t v54 = v0;
        v54[1] = sub_100433330;
        uint64_t v36 = *(void *)(v0 + 680);
      }
LABEL_25:
      uint64_t v38 = v36;
      uint64_t v39 = 3;
LABEL_26:
      return sub_100442178(v38, v39);
    }
    sub_10002F034(v58, v55, &qword_1006A7750);
    static Logger.realtimeCollaboration.getter();
    os_log_type_t v21 = static os_log_type_t.fault.getter();
    unint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = v21;
    BOOL v24 = os_log_type_enabled(v22, v21);
    uint64_t v26 = *(void *)(v0 + 472);
    uint64_t v25 = *(void *)(v0 + 480);
    uint64_t v27 = *(void *)(v0 + 464);
    if (v24)
    {
      uint64_t v28 = swift_slowAlloc();
      v60[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136315650;
      uint64_t v29 = StaticString.description.getter();
      *(void *)(v28 + 4) = sub_10045DA1C(v29, v30, v60);
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2048;
      *(void *)(v28 + 14) = 228;
      *(_WORD *)(v28 + 22) = 2080;
      *(void *)(v0 + 328) = 0;
      *(void *)(v0 + 336) = 0xE000000000000000;
      _StringGuts.grow(_:)(31);
      uint64_t v31 = *(void *)(v0 + 336);
      *(void *)(v0 + 280) = *(void *)(v0 + 328);
      *(void *)(v0 + 288) = v31;
      v32._countAndFlagsBits = 0xD00000000000001DLL;
      v32._object = (void *)0x800000010055DFD0;
      String.append(_:)(v32);
      sub_10002F214(&qword_1006A7750);
      _print_unlocked<A, B>(_:_:)();
      *(void *)(v28 + 24) = sub_10045DA1C(*(void *)(v0 + 280), *(void *)(v0 + 288), v60);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Failed assertion at %s:%lu: %s", (uint8_t *)v28, 0x20u);
      swift_arrayDestroy();
      uint64_t v20 = v0 + 208;
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10002B754(v55, &qword_1006A7750);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    sub_10002B754(v58, &qword_1006A7750);
    sub_100018FE8(v20);
  }
  sub_10002B754(*(void *)(v0 + 760), &qword_1006A77E8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v33 = *(uint64_t (**)(void))(v0 + 8);
  return v33();
}

uint64_t sub_10043760C(uint64_t a1, uint64_t a2)
{
  v3[53] = a2;
  v3[54] = v2;
  v3[52] = a1;
  uint64_t v4 = sub_10002F214((uint64_t *)&unk_1006A7720);
  v3[55] = v4;
  v3[56] = *(void *)(v4 - 8);
  v3[57] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Logger();
  v3[58] = v5;
  v3[59] = *(void *)(v5 - 8);
  v3[60] = swift_task_alloc();
  uint64_t v6 = sub_10002F214(&qword_1006A2F20);
  v3[61] = v6;
  v3[62] = *(void *)(v6 - 8);
  v3[63] = swift_task_alloc();
  v3[64] = sub_10002F214(&qword_1006A3138);
  v3[65] = swift_task_alloc();
  v3[66] = swift_task_alloc();
  v3[67] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for FastSync.PaperKitMessage();
  v3[68] = v7;
  v3[69] = *(void *)(v7 - 8);
  v3[70] = swift_task_alloc();
  v3[71] = swift_task_alloc();
  v3[72] = swift_task_alloc();
  v3[73] = swift_task_alloc();
  uint64_t v8 = sub_10002F214(&qword_1006A7730);
  v3[74] = v8;
  v3[75] = *(void *)(v8 - 8);
  v3[76] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for FastSync.SelectionMessage();
  v3[77] = v9;
  v3[78] = *(void *)(v9 - 8);
  v3[79] = swift_task_alloc();
  v3[80] = swift_task_alloc();
  v3[81] = swift_task_alloc();
  v3[82] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Participant();
  v3[83] = v10;
  v3[84] = *(void *)(v10 - 8);
  v3[85] = swift_task_alloc();
  v3[86] = swift_task_alloc();
  v3[87] = swift_task_alloc();
  v3[88] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for FastSync.NoteContentMessage();
  v3[89] = v11;
  v3[90] = *(void *)(v11 - 8);
  v3[91] = swift_task_alloc();
  v3[92] = swift_task_alloc();
  v3[93] = sub_10002F214(&qword_1006A7738);
  v3[94] = swift_task_alloc();
  v3[95] = swift_task_alloc();
  uint64_t v12 = sub_10002F214((uint64_t *)&unk_1006A75E0);
  v3[96] = v12;
  v3[97] = *(void *)(v12 - 8);
  v3[98] = swift_task_alloc();
  v3[99] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for FastSync.MessageVersion();
  v3[100] = v13;
  v3[101] = *(void *)(v13 - 8);
  v3[102] = swift_task_alloc();
  v3[103] = swift_task_alloc();
  return _swift_task_switch(sub_100437B58, 0, 0);
}

uint64_t sub_100437B58()
{
  uint64_t v89 = v0;
  uint64_t v1 = *(void *)(v0 + 824);
  uint64_t v2 = *(void *)(v0 + 816);
  uint64_t v3 = *(void *)(v0 + 808);
  uint64_t v4 = *(void *)(v0 + 800);
  FastSync.MessageContainer.version.getter();
  static FastSync.MessageVersion.current.getter();
  sub_100449994(&qword_1006A7740, (void (*)(uint64_t))&type metadata accessor for FastSync.MessageVersion);
  char v5 = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v6(v2, v4);
  v6(v1, v4);
  if (v5)
  {
    if (qword_10069B048 != -1) {
      swift_once();
    }
    uint64_t v7 = *(void *)(v0 + 792);
    uint64_t v8 = *(void *)(v0 + 776);
    uint64_t v9 = *(void *)(v0 + 768);
    uint64_t v10 = *(void *)(v0 + 416);
    sub_10003293C(*(void *)(v0 + 464), (uint64_t)qword_1006A73A0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v10, v9);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = *(void *)(v0 + 824);
      uint64_t v82 = *(void *)(v0 + 800);
      os_log_type_t v86 = v12;
      uint64_t v14 = *(void *)(v0 + 792);
      uint64_t v15 = *(void *)(v0 + 776);
      uint64_t v16 = *(void *)(v0 + 768);
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      v88[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315138;
      FastSync.MessageContainer.version.getter();
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
      sub_100449994(&qword_1006A7778, (void (*)(uint64_t))&type metadata accessor for FastSync.MessageVersion);
      uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v20 = v19;
      v6(v13, v82);
      *(void *)(v0 + 408) = sub_10045DA1C(v18, v20, v88);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v11, v86, "Skipping unsupported message container with version: %s", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 776) + 8))(*(void *)(v0 + 792), *(void *)(v0 + 768));
    }

    goto LABEL_10;
  }
  uint64_t v21 = *(void *)(v0 + 776);
  uint64_t v22 = *(void *)(v0 + 768);
  uint64_t v23 = *(void *)(v0 + 760);
  uint64_t v24 = *(void *)(v0 + 752);
  uint64_t v25 = *(void *)(v0 + 744);
  uint64_t v26 = *(void *)(v0 + 416);
  uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
  *(void *)(v0 + 832) = v27;
  *(void *)(v0 + 840) = (v21 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v27(v24, v26, v22);
  *(void *)(v0 + 848) = sub_10001DFB0(&qword_1006A7748, (uint64_t *)&unk_1006A75E0);
  dispatch thunk of Collection.startIndex.getter();
  *(void *)(v24 + *(int *)(v25 + 36)) = *(void *)(v0 + 344);
  sub_10002F1B0(v24, v23, &qword_1006A7738);
  uint64_t v28 = *(int *)(v25 + 36);
  *(_DWORD *)(v0 + 60) = v28;
  *(void *)(v0 + 856) = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_cloudConfiguration;
  *(void *)(v0 + 864) = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_paperKitInbox;
  *(void *)(v0 + 872) = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_nonFatalErrorCount;
  *(void *)(v0 + 880) = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_selectionMessages;
  *(void *)(v0 + 888) = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_cloudKitRecords;
  uint64_t v29 = *(void *)(v23 + v28);
  dispatch thunk of Collection.endIndex.getter();
  if (v29 == *(void *)(v0 + 384))
  {
LABEL_7:
    sub_10002B754(*(void *)(v0 + 760), &qword_1006A7738);
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
    return v30();
  }
  uint64_t v83 = v0 + 16;
  uint64_t v84 = v0 + 112;
  uint64_t v81 = (long long *)(v0 + 160);
  uint64_t v80 = v0 + 208;
  uint64_t v79 = v0 + 64;
  while (1)
  {
    uint64_t v85 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 832);
    uint64_t v33 = *(void *)(v0 + 784);
    uint64_t v34 = *(void *)(v0 + 776);
    uint64_t v35 = *(void *)(v0 + 768);
    uint64_t v36 = *(void *)(v0 + 760);
    uint64_t v37 = (void (*)(uint64_t, void))dispatch thunk of Collection.subscript.read();
    sub_10002F034(v38, v83, &qword_1006A7750);
    v37(v0 + 248, 0);
    v85(v33, v36, v35);
    dispatch thunk of Collection.formIndex(after:)();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
    sub_10002F1B0(v83, v84, &qword_1006A7750);
    sub_10002F034(v84, (uint64_t)v81, &qword_1006A7750);
    if ((*(unsigned char *)(v0 + 200) & 1) == 0) {
      break;
    }
    *(void *)(v0 + 360) = *(void *)v81;
    sub_10002F214(&qword_1006A3D90);
    swift_willThrowTypedImpl();
    if (qword_10069B048 != -1) {
      swift_once();
    }
    sub_10003293C(*(void *)(v0 + 464), (uint64_t)qword_1006A73A0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v42 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 138412290;
      swift_errorRetain();
      uint64_t v43 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v41 + 4) = v43;
      void *v42 = v43;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "Error processing incoming fast sync message: %@", (uint8_t *)v41, 0xCu);
      sub_10002F214(&qword_10069FD50);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v54 = *(void *)(v0 + 872);
    uint64_t v55 = *(void *)(v0 + 432);

    unint64_t v56 = *(os_unfair_lock_s **)(v55 + v54);
    uint64_t v57 = v56 + 4;
    uint64_t v58 = v56 + 6;
    os_unfair_lock_lock(v56 + 6);
    sub_100448BE4(v57);
    os_unfair_lock_unlock(v58);
    swift_errorRelease();
    sub_10002B754(v84, &qword_1006A7750);
LABEL_15:
    uint64_t v32 = *(void *)(*(void *)(v0 + 760) + *(int *)(v0 + 60));
    dispatch thunk of Collection.endIndex.getter();
    if (v32 == *(void *)(v0 + 384)) {
      goto LABEL_7;
    }
  }
  sub_10016EFCC(v81, v80);
  sub_10002F214(&qword_1006A7758);
  if (swift_dynamicCast())
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 720) + 32))(*(void *)(v0 + 728), *(void *)(v0 + 736), *(void *)(v0 + 712));
    GroupSessionMessenger.MessageContext.source.getter();
    uint64_t v59 = (void *)swift_task_alloc();
    *(void *)(v0 + 896) = v59;
    *uint64_t v59 = v0;
    v59[1] = sub_1004389A4;
    uint64_t v60 = *(void *)(v0 + 704);
    goto LABEL_33;
  }
  if (swift_dynamicCast())
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 624) + 32))(*(void *)(v0 + 648), *(void *)(v0 + 656), *(void *)(v0 + 616));
    GroupSessionMessenger.MessageContext.source.getter();
    uint64_t v61 = (void *)swift_task_alloc();
    *(void *)(v0 + 952) = v61;
    *uint64_t v61 = v0;
    v61[1] = sub_10043B09C;
    uint64_t v62 = *(void *)(v0 + 696);
    uint64_t v63 = 2;
    goto LABEL_34;
  }
  if (!swift_dynamicCast())
  {
    sub_10002F034(v84, v79, &qword_1006A7750);
    static Logger.realtimeCollaboration.getter();
    os_log_type_t v44 = static os_log_type_t.fault.getter();
    uint64_t v45 = Logger.logObject.getter();
    BOOL v46 = os_log_type_enabled(v45, v44);
    uint64_t v47 = *(void *)(v0 + 472);
    uint64_t v87 = *(void *)(v0 + 480);
    uint64_t v48 = *(void *)(v0 + 464);
    if (v46)
    {
      uint64_t v49 = swift_slowAlloc();
      v88[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v49 = 136315650;
      uint64_t v50 = StaticString.description.getter();
      *(void *)(v49 + 4) = sub_10045DA1C(v50, v51, v88);
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 12) = 2048;
      *(void *)(v49 + 14) = 228;
      *(_WORD *)(v49 + 22) = 2080;
      *(void *)(v0 + 328) = 0;
      *(void *)(v0 + 336) = 0xE000000000000000;
      _StringGuts.grow(_:)(31);
      uint64_t v52 = *(void *)(v0 + 336);
      *(void *)(v0 + 280) = *(void *)(v0 + 328);
      *(void *)(v0 + 288) = v52;
      v53._countAndFlagsBits = 0xD00000000000001DLL;
      v53._object = (void *)0x800000010055DFD0;
      String.append(_:)(v53);
      sub_10002F214(&qword_1006A7750);
      _print_unlocked<A, B>(_:_:)();
      *(void *)(v49 + 24) = sub_10045DA1C(*(void *)(v0 + 280), *(void *)(v0 + 288), v88);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v45, v44, "Failed assertion at %s:%lu: %s", (uint8_t *)v49, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10002B754(v79, &qword_1006A7750);
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v87, v48);
    sub_10002B754(v84, &qword_1006A7750);
    sub_100018FE8(v80);
    goto LABEL_15;
  }
  uint64_t v64 = *(void *)(v0 + 856);
  uint64_t v65 = *(void *)(v0 + 584);
  uint64_t v66 = *(void *)(v0 + 576);
  uint64_t v67 = *(void *)(v0 + 552);
  uint64_t v68 = *(void *)(v0 + 544);
  uint64_t v69 = *(void *)(v0 + 432);
  uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 16);
  *(void *)(v0 + 968) = v70;
  *(void *)(v0 + 976) = (v67 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v70(v66, v65, v68);
  if ([*(id *)(v69 + v64) fastSyncPaperKitEnablePCSEncryption])
  {
    GroupSessionMessenger.MessageContext.source.getter();
    uint64_t v71 = (void *)swift_task_alloc();
    *(void *)(v0 + 984) = v71;
    void *v71 = v0;
    v71[1] = sub_10043CA4C;
    uint64_t v60 = *(void *)(v0 + 688);
  }
  else
  {
    uint64_t v72 = *(void *)(v0 + 584);
    uint64_t v73 = *(void *)(v0 + 576);
    uint64_t v74 = *(void *)(v0 + 568);
    uint64_t v75 = *(void *)(v0 + 552);
    uint64_t v76 = *(void *)(v0 + 544);
    uint64_t v77 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
    *(void *)(v0 + 1000) = v77;
    *(void *)(v0 + 1008) = (v75 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v77(v73, v76);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 32))(v74, v72, v76);
    GroupSessionMessenger.MessageContext.source.getter();
    uint64_t v78 = (void *)swift_task_alloc();
    *(void *)(v0 + 1016) = v78;
    *uint64_t v78 = v0;
    v78[1] = sub_10043CBB4;
    uint64_t v60 = *(void *)(v0 + 680);
  }
LABEL_33:
  uint64_t v62 = v60;
  uint64_t v63 = 3;
LABEL_34:
  return sub_100442178(v62, v63);
}

uint64_t sub_1004389A4()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 904) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[84] + 8))(v2[88], v2[83]);
  if (v0) {
    uint64_t v3 = sub_100438D18;
  }
  else {
    uint64_t v3 = sub_100438B0C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100438B0C()
{
  uint64_t v1 = FastSync.NoteContentMessage.recordBatchData.getter();
  uint64_t v3 = v2;
  v0[114] = v1;
  v0[115] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[116] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100438BC4;
  return sub_100442B14(v1, v3);
}

uint64_t sub_100438BC4(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 936) = a1;
  *(void *)(v4 + 944) = v1;
  swift_task_dealloc();
  sub_10017253C(*(void *)(v3 + 912), *(void *)(v3 + 920));
  if (v1) {
    uint64_t v5 = sub_10043A5E8;
  }
  else {
    uint64_t v5 = sub_1004397CC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100438D18()
{
  uint64_t v61 = v0;
  uint64_t v1 = v0 + 112;
  uint64_t v57 = v0 + 16;
  (*(void (**)(void, void))(*(void *)(v0 + 720) + 8))(*(void *)(v0 + 728), *(void *)(v0 + 712));
  sub_100018FE8(v0 + 208);
  uint64_t v2 = &qword_10069B000;
  uint64_t v55 = v0 + 64;
  uint64_t v58 = v0 + 112;
  unint64_t v56 = (long long *)(v0 + 160);
LABEL_2:
  if (v2[9] != -1) {
    swift_once();
  }
  sub_10003293C(*(void *)(v0 + 464), (uint64_t)qword_1006A73A0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v5 + 4) = v7;
    void *v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Error processing incoming fast sync message: %@", (uint8_t *)v5, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v8 = *(void *)(v0 + 872);
  uint64_t v9 = *(void *)(v0 + 432);

  uint64_t v10 = *(os_unfair_lock_s **)(v9 + v8);
  uint64_t v11 = v10 + 4;
  os_log_type_t v12 = v10 + 6;
  os_unfair_lock_lock(v10 + 6);
  sub_100448BE4(v11);
  os_unfair_lock_unlock(v12);
  swift_errorRelease();
  sub_10002B754(v1, &qword_1006A7750);
  while (1)
  {
    uint64_t v13 = *(void *)(*(void *)(v0 + 760) + *(int *)(v0 + 60));
    dispatch thunk of Collection.endIndex.getter();
    if (v13 == *(void *)(v0 + 384)) {
      break;
    }
    uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 832);
    uint64_t v14 = *(void *)(v0 + 784);
    uint64_t v15 = *(void *)(v0 + 776);
    uint64_t v16 = *(void *)(v0 + 768);
    uint64_t v17 = *(void *)(v0 + 760);
    uint64_t v18 = (void (*)(uint64_t, void))dispatch thunk of Collection.subscript.read();
    sub_10002F034(v19, v57, &qword_1006A7750);
    v18(v0 + 248, 0);
    v59(v14, v17, v16);
    dispatch thunk of Collection.formIndex(after:)();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    uint64_t v1 = v0 + 112;
    sub_10002F1B0(v57, v58, &qword_1006A7750);
    sub_10002F034(v58, (uint64_t)v56, &qword_1006A7750);
    if (*(unsigned char *)(v0 + 200))
    {
      *(void *)(v0 + 360) = *(void *)v56;
      sub_10002F214(&qword_1006A3D90);
      swift_willThrowTypedImpl();
      uint64_t v2 = &qword_10069B000;
      goto LABEL_2;
    }
    uint64_t v20 = v0 + 208;
    sub_10016EFCC(v56, v0 + 208);
    sub_10002F214(&qword_1006A7758);
    if (swift_dynamicCast())
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 720) + 32))(*(void *)(v0 + 728), *(void *)(v0 + 736), *(void *)(v0 + 712));
      GroupSessionMessenger.MessageContext.source.getter();
      uint64_t v35 = (void *)swift_task_alloc();
      *(void *)(v0 + 896) = v35;
      void *v35 = v0;
      v35[1] = sub_1004389A4;
      uint64_t v36 = *(void *)(v0 + 704);
      goto LABEL_25;
    }
    if (swift_dynamicCast())
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 624) + 32))(*(void *)(v0 + 648), *(void *)(v0 + 656), *(void *)(v0 + 616));
      GroupSessionMessenger.MessageContext.source.getter();
      uint64_t v37 = (void *)swift_task_alloc();
      *(void *)(v0 + 952) = v37;
      *uint64_t v37 = v0;
      v37[1] = sub_10043B09C;
      uint64_t v38 = *(void *)(v0 + 696);
      uint64_t v39 = 2;
      goto LABEL_26;
    }
    if (swift_dynamicCast())
    {
      uint64_t v40 = *(void *)(v0 + 856);
      uint64_t v41 = *(void *)(v0 + 584);
      uint64_t v42 = *(void *)(v0 + 576);
      uint64_t v43 = *(void *)(v0 + 552);
      uint64_t v44 = *(void *)(v0 + 544);
      uint64_t v45 = *(void *)(v0 + 432);
      BOOL v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16);
      *(void *)(v0 + 968) = v46;
      *(void *)(v0 + 976) = (v43 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v46(v42, v41, v44);
      if ([*(id *)(v45 + v40) fastSyncPaperKitEnablePCSEncryption])
      {
        GroupSessionMessenger.MessageContext.source.getter();
        uint64_t v47 = (void *)swift_task_alloc();
        *(void *)(v0 + 984) = v47;
        *uint64_t v47 = v0;
        v47[1] = sub_10043CA4C;
        uint64_t v36 = *(void *)(v0 + 688);
      }
      else
      {
        uint64_t v48 = *(void *)(v0 + 584);
        uint64_t v49 = *(void *)(v0 + 576);
        uint64_t v50 = *(void *)(v0 + 568);
        uint64_t v51 = *(void *)(v0 + 552);
        uint64_t v52 = *(void *)(v0 + 544);
        Swift::String v53 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
        *(void *)(v0 + 1000) = v53;
        *(void *)(v0 + 1008) = (v51 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v53(v49, v52);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 32))(v50, v48, v52);
        GroupSessionMessenger.MessageContext.source.getter();
        uint64_t v54 = (void *)swift_task_alloc();
        *(void *)(v0 + 1016) = v54;
        *uint64_t v54 = v0;
        v54[1] = sub_10043CBB4;
        uint64_t v36 = *(void *)(v0 + 680);
      }
LABEL_25:
      uint64_t v38 = v36;
      uint64_t v39 = 3;
LABEL_26:
      return sub_100442178(v38, v39);
    }
    sub_10002F034(v58, v55, &qword_1006A7750);
    static Logger.realtimeCollaboration.getter();
    os_log_type_t v21 = static os_log_type_t.fault.getter();
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = v21;
    BOOL v24 = os_log_type_enabled(v22, v21);
    uint64_t v26 = *(void *)(v0 + 472);
    uint64_t v25 = *(void *)(v0 + 480);
    uint64_t v27 = *(void *)(v0 + 464);
    if (v24)
    {
      uint64_t v28 = swift_slowAlloc();
      v60[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136315650;
      uint64_t v29 = StaticString.description.getter();
      *(void *)(v28 + 4) = sub_10045DA1C(v29, v30, v60);
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2048;
      *(void *)(v28 + 14) = 228;
      *(_WORD *)(v28 + 22) = 2080;
      *(void *)(v0 + 328) = 0;
      *(void *)(v0 + 336) = 0xE000000000000000;
      _StringGuts.grow(_:)(31);
      uint64_t v31 = *(void *)(v0 + 336);
      *(void *)(v0 + 280) = *(void *)(v0 + 328);
      *(void *)(v0 + 288) = v31;
      v32._countAndFlagsBits = 0xD00000000000001DLL;
      v32._object = (void *)0x800000010055DFD0;
      String.append(_:)(v32);
      sub_10002F214(&qword_1006A7750);
      _print_unlocked<A, B>(_:_:)();
      *(void *)(v28 + 24) = sub_10045DA1C(*(void *)(v0 + 280), *(void *)(v0 + 288), v60);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Failed assertion at %s:%lu: %s", (uint8_t *)v28, 0x20u);
      swift_arrayDestroy();
      uint64_t v20 = v0 + 208;
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10002B754(v55, &qword_1006A7750);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    sub_10002B754(v58, &qword_1006A7750);
    sub_100018FE8(v20);
  }
  sub_10002B754(*(void *)(v0 + 760), &qword_1006A7738);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v33 = *(uint64_t (**)(void))(v0 + 8);
  return v33();
}

void sub_1004397CC()
{
  uint64_t v92 = v0;
  unint64_t v1 = *(void *)(v0 + 936);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (v2)
    {
LABEL_3:
      uint64_t v3 = v2 - 1;
      if (v2 < 1)
      {
        __break(1u);
        return;
      }
      uint64_t v4 = 0;
      unint64_t v5 = v1 & 0xC000000000000001;
      uint64_t v83 = *(void *)(v90 + 936) + 32;
      uint64_t v6 = qword_1006A73A0;
      if ((v1 & 0xC000000000000001) == 0) {
        goto LABEL_6;
      }
      while (1)
      {
        for (id i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(); ; id i = *(id *)(v83 + 8 * v4))
        {
          uint64_t v8 = i;
          if (qword_10069B048 != -1) {
            swift_once();
          }
          sub_10003293C(*(void *)(v90 + 464), (uint64_t)v6);
          id v9 = v8;
          uint64_t v10 = Logger.logObject.getter();
          os_log_type_t v11 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v10, v11))
          {
            uint64_t v12 = swift_slowAlloc();
            v91[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v12 = 136315138;
            uint64_t v87 = v10;
            uint64_t v13 = v6;
            id v14 = [v9 ic_loggingDescription];
            uint64_t v15 = v4;
            unint64_t v16 = v5;
            uint64_t v17 = v3;
            uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v20 = v19;

            uint64_t v6 = v13;
            uint64_t v21 = v18;
            uint64_t v3 = v17;
            unint64_t v5 = v16;
            uint64_t v4 = v15;
            *(void *)(v12 + 4) = sub_10045DA1C(v21, v20, v91);
            swift_bridgeObjectRelease();

            _os_log_impl((void *)&_mh_execute_header, v87, v11, "Received CloudKit record: %s", (uint8_t *)v12, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            if (v3 == v15) {
              goto LABEL_16;
            }
          }
          else
          {

            if (v3 == v4) {
              goto LABEL_16;
            }
          }
          ++v4;
          if (v5) {
            break;
          }
LABEL_6:
          ;
        }
      }
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
  }
LABEL_16:
  uint64_t v22 = *(void *)(v90 + 936);
  uint64_t v89 = v90 + 208;
  uint64_t v88 = *(void *)(v90 + 728);
  uint64_t v23 = *(void *)(v90 + 720);
  uint64_t v85 = *(void *)(v90 + 712);
  uint64_t v24 = *(void *)(v90 + 608);
  uint64_t v25 = *(void *)(v90 + 600);
  uint64_t v26 = *(void *)(v90 + 592);
  swift_bridgeObjectRelease();
  *(void *)(v90 + 400) = v22;
  swift_bridgeObjectRetain();
  sub_10002F214(&qword_10069BAA8);
  AsyncStream.Continuation.yield(_:)();
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v88, v85);
  uint64_t v82 = v90 + 112;
  sub_10002B754(v90 + 112, &qword_1006A7750);
  swift_bridgeObjectRelease();
  sub_100018FE8(v90 + 208);
  uint64_t v79 = *(void *)(v90 + 944);
  uint64_t v27 = *(void *)(*(void *)(v90 + 760) + *(int *)(v90 + 60));
  dispatch thunk of Collection.endIndex.getter();
  if (v27 == *(void *)(v90 + 384))
  {
LABEL_17:
    sub_10002B754(*(void *)(v90 + 760), &qword_1006A7738);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v28 = *(void (**)(void))(v90 + 8);
    v28();
    return;
  }
  uint64_t v81 = v90 + 16;
  uint64_t v80 = (long long *)(v90 + 160);
  uint64_t v84 = v90 + 64;
  while (1)
  {
    os_log_type_t v86 = *(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 832);
    uint64_t v29 = *(void *)(v90 + 784);
    uint64_t v30 = *(void *)(v90 + 776);
    uint64_t v31 = *(void *)(v90 + 768);
    uint64_t v32 = *(void *)(v90 + 760);
    uint64_t v33 = (void (*)(uint64_t, void))dispatch thunk of Collection.subscript.read();
    sub_10002F034(v34, v81, &qword_1006A7750);
    v33(v90 + 248, 0);
    v86(v29, v32, v31);
    dispatch thunk of Collection.formIndex(after:)();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    sub_10002F1B0(v81, v82, &qword_1006A7750);
    sub_10002F034(v82, (uint64_t)v80, &qword_1006A7750);
    if ((*(unsigned char *)(v90 + 200) & 1) == 0) {
      break;
    }
    *(void *)(v90 + 360) = *(void *)v80;
    sub_10002F214(&qword_1006A3D90);
    swift_willThrowTypedImpl();
    if (qword_10069B048 != -1) {
      swift_once();
    }
    sub_10003293C(*(void *)(v90 + 464), (uint64_t)qword_1006A73A0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v49 = Logger.logObject.getter();
    os_log_type_t v50 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = swift_slowAlloc();
      uint64_t v52 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v51 = 138412290;
      swift_errorRetain();
      uint64_t v53 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v51 + 4) = v53;
      *uint64_t v52 = v53;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "Error processing incoming fast sync message: %@", (uint8_t *)v51, 0xCu);
      sub_10002F214(&qword_10069FD50);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v54 = *(void *)(v90 + 872);
    uint64_t v55 = *(void *)(v90 + 432);

    unint64_t v56 = *(os_unfair_lock_s **)(v55 + v54);
    uint64_t v57 = v56 + 4;
    uint64_t v58 = v56 + 6;
    os_unfair_lock_lock(v56 + 6);
    sub_100448BE4(v57);
    os_unfair_lock_unlock(v58);
    if (v79) {
      return;
    }
    swift_errorRelease();
    sub_10002B754(v82, &qword_1006A7750);
    uint64_t v47 = v90;
    uint64_t v48 = *(void *)(*(void *)(v90 + 760) + *(int *)(v90 + 60));
    dispatch thunk of Collection.endIndex.getter();
    uint64_t v79 = 0;
LABEL_28:
    if (v48 == *(void *)(v47 + 384)) {
      goto LABEL_17;
    }
  }
  sub_10016EFCC(v80, v89);
  sub_10002F214(&qword_1006A7758);
  if (swift_dynamicCast())
  {
    (*(void (**)(void, void, void))(*(void *)(v90 + 720) + 32))(*(void *)(v90 + 728), *(void *)(v90 + 736), *(void *)(v90 + 712));
    GroupSessionMessenger.MessageContext.source.getter();
    uint64_t v59 = (void *)swift_task_alloc();
    *(void *)(v90 + 896) = v59;
    *uint64_t v59 = v90;
    v59[1] = sub_1004389A4;
    uint64_t v60 = *(void *)(v90 + 704);
    goto LABEL_42;
  }
  if (swift_dynamicCast())
  {
    (*(void (**)(void, void, void))(*(void *)(v90 + 624) + 32))(*(void *)(v90 + 648), *(void *)(v90 + 656), *(void *)(v90 + 616));
    GroupSessionMessenger.MessageContext.source.getter();
    uint64_t v61 = (void *)swift_task_alloc();
    *(void *)(v90 + 952) = v61;
    *uint64_t v61 = v90;
    v61[1] = sub_10043B09C;
    uint64_t v62 = *(void *)(v90 + 696);
    uint64_t v63 = 2;
    goto LABEL_43;
  }
  if (!swift_dynamicCast())
  {
    sub_10002F034(v82, v84, &qword_1006A7750);
    static Logger.realtimeCollaboration.getter();
    os_log_type_t v35 = static os_log_type_t.fault.getter();
    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v37 = v35;
    BOOL v38 = os_log_type_enabled(v36, v35);
    uint64_t v40 = *(void *)(v90 + 472);
    uint64_t v39 = *(void *)(v90 + 480);
    uint64_t v41 = *(void *)(v90 + 464);
    if (v38)
    {
      uint64_t v42 = swift_slowAlloc();
      v91[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v42 = 136315650;
      uint64_t v43 = StaticString.description.getter();
      *(void *)(v42 + 4) = sub_10045DA1C(v43, v44, v91);
      swift_bridgeObjectRelease();
      *(_WORD *)(v42 + 12) = 2048;
      *(void *)(v42 + 14) = 228;
      *(_WORD *)(v42 + 22) = 2080;
      *(void *)(v90 + 328) = 0;
      *(void *)(v90 + 336) = 0xE000000000000000;
      _StringGuts.grow(_:)(31);
      uint64_t v45 = *(void *)(v90 + 336);
      *(void *)(v90 + 280) = *(void *)(v90 + 328);
      *(void *)(v90 + 288) = v45;
      v46._countAndFlagsBits = 0xD00000000000001DLL;
      v46._object = (void *)0x800000010055DFD0;
      String.append(_:)(v46);
      sub_10002F214(&qword_1006A7750);
      _print_unlocked<A, B>(_:_:)();
      *(void *)(v42 + 24) = sub_10045DA1C(*(void *)(v90 + 280), *(void *)(v90 + 288), v91);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Failed assertion at %s:%lu: %s", (uint8_t *)v42, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10002B754(v84, &qword_1006A7750);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);
    sub_10002B754(v82, &qword_1006A7750);
    sub_100018FE8(v89);
    uint64_t v47 = v90;
    uint64_t v48 = *(void *)(*(void *)(v90 + 760) + *(int *)(v90 + 60));
    dispatch thunk of Collection.endIndex.getter();
    goto LABEL_28;
  }
  uint64_t v64 = *(void *)(v90 + 856);
  uint64_t v65 = *(void *)(v90 + 584);
  uint64_t v66 = *(void *)(v90 + 576);
  uint64_t v67 = *(void *)(v90 + 552);
  uint64_t v68 = *(void *)(v90 + 544);
  uint64_t v69 = *(void *)(v90 + 432);
  uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 16);
  *(void *)(v90 + 968) = v70;
  *(void *)(v90 + 976) = (v67 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v70(v66, v65, v68);
  if ([*(id *)(v69 + v64) fastSyncPaperKitEnablePCSEncryption])
  {
    GroupSessionMessenger.MessageContext.source.getter();
    uint64_t v71 = (void *)swift_task_alloc();
    *(void *)(v90 + 984) = v71;
    void *v71 = v90;
    v71[1] = sub_10043CA4C;
    uint64_t v60 = *(void *)(v90 + 688);
  }
  else
  {
    uint64_t v72 = *(void *)(v90 + 584);
    uint64_t v73 = *(void *)(v90 + 576);
    uint64_t v74 = *(void *)(v90 + 568);
    uint64_t v75 = *(void *)(v90 + 552);
    uint64_t v76 = *(void *)(v90 + 544);
    uint64_t v77 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
    *(void *)(v90 + 1000) = v77;
    *(void *)(v90 + 1008) = (v75 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v77(v73, v76);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 32))(v74, v72, v76);
    GroupSessionMessenger.MessageContext.source.getter();
    uint64_t v78 = (void *)swift_task_alloc();
    *(void *)(v90 + 1016) = v78;
    *uint64_t v78 = v90;
    v78[1] = sub_10043CBB4;
    uint64_t v60 = *(void *)(v90 + 680);
  }
LABEL_42:
  uint64_t v62 = v60;
  uint64_t v63 = 3;
LABEL_43:
  sub_100442178(v62, v63);
}

uint64_t sub_10043A5E8()
{
  uint64_t v61 = v0;
  uint64_t v1 = v0 + 112;
  uint64_t v57 = v0 + 16;
  (*(void (**)(void, void))(*(void *)(v0 + 720) + 8))(*(void *)(v0 + 728), *(void *)(v0 + 712));
  sub_100018FE8(v0 + 208);
  uint64_t v2 = &qword_10069B000;
  uint64_t v55 = v0 + 64;
  uint64_t v58 = v0 + 112;
  unint64_t v56 = (long long *)(v0 + 160);
LABEL_2:
  if (v2[9] != -1) {
    swift_once();
  }
  sub_10003293C(*(void *)(v0 + 464), (uint64_t)qword_1006A73A0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v5 + 4) = v7;
    void *v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Error processing incoming fast sync message: %@", (uint8_t *)v5, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v8 = *(void *)(v0 + 872);
  uint64_t v9 = *(void *)(v0 + 432);

  uint64_t v10 = *(os_unfair_lock_s **)(v9 + v8);
  os_log_type_t v11 = v10 + 4;
  uint64_t v12 = v10 + 6;
  os_unfair_lock_lock(v10 + 6);
  sub_100448BE4(v11);
  os_unfair_lock_unlock(v12);
  swift_errorRelease();
  sub_10002B754(v1, &qword_1006A7750);
  while (1)
  {
    uint64_t v13 = *(void *)(*(void *)(v0 + 760) + *(int *)(v0 + 60));
    dispatch thunk of Collection.endIndex.getter();
    if (v13 == *(void *)(v0 + 384)) {
      break;
    }
    uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 832);
    uint64_t v14 = *(void *)(v0 + 784);
    uint64_t v15 = *(void *)(v0 + 776);
    uint64_t v16 = *(void *)(v0 + 768);
    uint64_t v17 = *(void *)(v0 + 760);
    uint64_t v18 = (void (*)(uint64_t, void))dispatch thunk of Collection.subscript.read();
    sub_10002F034(v19, v57, &qword_1006A7750);
    v18(v0 + 248, 0);
    v59(v14, v17, v16);
    dispatch thunk of Collection.formIndex(after:)();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    uint64_t v1 = v0 + 112;
    sub_10002F1B0(v57, v58, &qword_1006A7750);
    sub_10002F034(v58, (uint64_t)v56, &qword_1006A7750);
    if (*(unsigned char *)(v0 + 200))
    {
      *(void *)(v0 + 360) = *(void *)v56;
      sub_10002F214(&qword_1006A3D90);
      swift_willThrowTypedImpl();
      uint64_t v2 = &qword_10069B000;
      goto LABEL_2;
    }
    uint64_t v20 = v0 + 208;
    sub_10016EFCC(v56, v0 + 208);
    sub_10002F214(&qword_1006A7758);
    if (swift_dynamicCast())
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 720) + 32))(*(void *)(v0 + 728), *(void *)(v0 + 736), *(void *)(v0 + 712));
      GroupSessionMessenger.MessageContext.source.getter();
      os_log_type_t v35 = (void *)swift_task_alloc();
      *(void *)(v0 + 896) = v35;
      void *v35 = v0;
      v35[1] = sub_1004389A4;
      uint64_t v36 = *(void *)(v0 + 704);
      goto LABEL_25;
    }
    if (swift_dynamicCast())
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 624) + 32))(*(void *)(v0 + 648), *(void *)(v0 + 656), *(void *)(v0 + 616));
      GroupSessionMessenger.MessageContext.source.getter();
      os_log_type_t v37 = (void *)swift_task_alloc();
      *(void *)(v0 + 952) = v37;
      *os_log_type_t v37 = v0;
      v37[1] = sub_10043B09C;
      uint64_t v38 = *(void *)(v0 + 696);
      uint64_t v39 = 2;
      goto LABEL_26;
    }
    if (swift_dynamicCast())
    {
      uint64_t v40 = *(void *)(v0 + 856);
      uint64_t v41 = *(void *)(v0 + 584);
      uint64_t v42 = *(void *)(v0 + 576);
      uint64_t v43 = *(void *)(v0 + 552);
      uint64_t v44 = *(void *)(v0 + 544);
      uint64_t v45 = *(void *)(v0 + 432);
      Swift::String v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16);
      *(void *)(v0 + 968) = v46;
      *(void *)(v0 + 976) = (v43 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v46(v42, v41, v44);
      if ([*(id *)(v45 + v40) fastSyncPaperKitEnablePCSEncryption])
      {
        GroupSessionMessenger.MessageContext.source.getter();
        uint64_t v47 = (void *)swift_task_alloc();
        *(void *)(v0 + 984) = v47;
        *uint64_t v47 = v0;
        v47[1] = sub_10043CA4C;
        uint64_t v36 = *(void *)(v0 + 688);
      }
      else
      {
        uint64_t v48 = *(void *)(v0 + 584);
        uint64_t v49 = *(void *)(v0 + 576);
        uint64_t v50 = *(void *)(v0 + 568);
        uint64_t v51 = *(void *)(v0 + 552);
        uint64_t v52 = *(void *)(v0 + 544);
        uint64_t v53 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
        *(void *)(v0 + 1000) = v53;
        *(void *)(v0 + 1008) = (v51 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v53(v49, v52);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 32))(v50, v48, v52);
        GroupSessionMessenger.MessageContext.source.getter();
        uint64_t v54 = (void *)swift_task_alloc();
        *(void *)(v0 + 1016) = v54;
        *uint64_t v54 = v0;
        v54[1] = sub_10043CBB4;
        uint64_t v36 = *(void *)(v0 + 680);
      }
LABEL_25:
      uint64_t v38 = v36;
      uint64_t v39 = 3;
LABEL_26:
      return sub_100442178(v38, v39);
    }
    sub_10002F034(v58, v55, &qword_1006A7750);
    static Logger.realtimeCollaboration.getter();
    os_log_type_t v21 = static os_log_type_t.fault.getter();
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = v21;
    BOOL v24 = os_log_type_enabled(v22, v21);
    uint64_t v26 = *(void *)(v0 + 472);
    uint64_t v25 = *(void *)(v0 + 480);
    uint64_t v27 = *(void *)(v0 + 464);
    if (v24)
    {
      uint64_t v28 = swift_slowAlloc();
      v60[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136315650;
      uint64_t v29 = StaticString.description.getter();
      *(void *)(v28 + 4) = sub_10045DA1C(v29, v30, v60);
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2048;
      *(void *)(v28 + 14) = 228;
      *(_WORD *)(v28 + 22) = 2080;
      *(void *)(v0 + 328) = 0;
      *(void *)(v0 + 336) = 0xE000000000000000;
      _StringGuts.grow(_:)(31);
      uint64_t v31 = *(void *)(v0 + 336);
      *(void *)(v0 + 280) = *(void *)(v0 + 328);
      *(void *)(v0 + 288) = v31;
      v32._countAndFlagsBits = 0xD00000000000001DLL;
      v32._object = (void *)0x800000010055DFD0;
      String.append(_:)(v32);
      sub_10002F214(&qword_1006A7750);
      _print_unlocked<A, B>(_:_:)();
      *(void *)(v28 + 24) = sub_10045DA1C(*(void *)(v0 + 280), *(void *)(v0 + 288), v60);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Failed assertion at %s:%lu: %s", (uint8_t *)v28, 0x20u);
      swift_arrayDestroy();
      uint64_t v20 = v0 + 208;
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10002B754(v55, &qword_1006A7750);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    sub_10002B754(v58, &qword_1006A7750);
    sub_100018FE8(v20);
  }
  sub_10002B754(*(void *)(v0 + 760), &qword_1006A7738);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v33 = *(uint64_t (**)(void))(v0 + 8);
  return v33();
}

uint64_t sub_10043B09C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 960) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[84] + 8))(v2[87], v2[83]);
  if (v0) {
    uint64_t v3 = sub_10043BF98;
  }
  else {
    uint64_t v3 = sub_10043B204;
  }
  return _swift_task_switch(v3, 0, 0);
}

void sub_10043B204()
{
  uint64_t v78 = v0;
  uint64_t v74 = v0 + 112;
  if (qword_10069B050 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 536);
  uint64_t v2 = *(void *)(v0 + 464);
  uint64_t v3 = *(void *)(v0 + 472);
  uint64_t v4 = sub_10003293C(*(void *)(v0 + 512), (uint64_t)qword_1006A73B8);
  sub_10002F034(v4, v1, &qword_1006A3138);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_10002B754(*(void *)(v0 + 536), &qword_1006A3138);
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 624) + 16))(*(void *)(v0 + 640), *(void *)(v0 + 648), *(void *)(v0 + 616));
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.debug.getter();
    BOOL v7 = os_log_type_enabled(v5, v6);
    uint64_t v8 = *(void *)(v0 + 640);
    uint64_t v9 = *(void *)(v0 + 624);
    uint64_t v10 = *(void *)(v0 + 616);
    if (v7)
    {
      uint64_t v11 = swift_slowAlloc();
      v77[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      sub_100449994(&qword_1006A3118, (void (*)(uint64_t))&type metadata accessor for FastSync.SelectionMessage);
      uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v11 + 4) = sub_10045DA1C(v12, v13, v77);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Received selection message: %s", (uint8_t *)v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    }
    (*(void (**)(void, void))(*(void *)(v0 + 472) + 8))(*(void *)(v0 + 536), *(void *)(v0 + 464));
  }
  uint64_t v14 = *(void *)(v0 + 648);
  uint64_t v15 = *(void *)(v0 + 624);
  uint64_t v16 = *(void *)(v0 + 616);
  uint64_t v18 = *(void *)(v0 + 496);
  uint64_t v17 = *(void *)(v0 + 504);
  uint64_t v19 = *(void *)(v0 + 488);
  (*(void (**)(void, uint64_t, uint64_t))(v15 + 16))(*(void *)(v0 + 632), v14, v16);
  sub_10002F214(&qword_10069BA90);
  AsyncStream.Continuation.yield(_:)();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  sub_10002B754(v74, &qword_1006A7750);
  sub_100018FE8(v0 + 208);
  uint64_t v71 = *(void *)(v0 + 960);
  uint64_t v20 = *(void *)(*(void *)(v0 + 760) + *(int *)(v0 + 60));
  dispatch thunk of Collection.endIndex.getter();
  if (v20 == *(void *)(v0 + 384))
  {
LABEL_10:
    sub_10002B754(*(void *)(v0 + 760), &qword_1006A7738);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v21 = *(void (**)(void))(v0 + 8);
    v21();
    return;
  }
  uint64_t v73 = v0 + 16;
  uint64_t v72 = (long long *)(v0 + 160);
  uint64_t v75 = v0 + 64;
  while (1)
  {
    uint64_t v76 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 832);
    uint64_t v22 = *(void *)(v0 + 784);
    uint64_t v23 = *(void *)(v0 + 776);
    uint64_t v24 = *(void *)(v0 + 768);
    uint64_t v25 = *(void *)(v0 + 760);
    uint64_t v26 = (void (*)(uint64_t, void))dispatch thunk of Collection.subscript.read();
    sub_10002F034(v27, v73, &qword_1006A7750);
    v26(v0 + 248, 0);
    v76(v22, v25, v24);
    dispatch thunk of Collection.formIndex(after:)();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    sub_10002F1B0(v73, v74, &qword_1006A7750);
    sub_10002F034(v74, (uint64_t)v72, &qword_1006A7750);
    if ((*(unsigned char *)(v0 + 200) & 1) == 0) {
      break;
    }
    *(void *)(v0 + 360) = *(void *)v72;
    sub_10002F214(&qword_1006A3D90);
    swift_willThrowTypedImpl();
    if (qword_10069B048 != -1) {
      swift_once();
    }
    sub_10003293C(*(void *)(v0 + 464), (uint64_t)qword_1006A73A0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = swift_slowAlloc();
      uint64_t v44 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v43 = 138412290;
      swift_errorRetain();
      uint64_t v45 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v43 + 4) = v45;
      *uint64_t v44 = v45;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Error processing incoming fast sync message: %@", (uint8_t *)v43, 0xCu);
      sub_10002F214(&qword_10069FD50);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v46 = *(void *)(v0 + 872);
    uint64_t v47 = *(void *)(v0 + 432);

    uint64_t v48 = *(os_unfair_lock_s **)(v47 + v46);
    uint64_t v49 = v48 + 4;
    uint64_t v50 = v48 + 6;
    os_unfair_lock_lock(v48 + 6);
    sub_100448BE4(v49);
    os_unfair_lock_unlock(v50);
    if (v71) {
      return;
    }
    swift_errorRelease();
    sub_10002B754(v74, &qword_1006A7750);
    uint64_t v40 = *(void *)(*(void *)(v0 + 760) + *(int *)(v0 + 60));
    dispatch thunk of Collection.endIndex.getter();
    uint64_t v71 = 0;
LABEL_21:
    if (v40 == *(void *)(v0 + 384)) {
      goto LABEL_10;
    }
  }
  uint64_t v28 = v0 + 208;
  sub_10016EFCC(v72, v0 + 208);
  sub_10002F214(&qword_1006A7758);
  if (swift_dynamicCast())
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 720) + 32))(*(void *)(v0 + 728), *(void *)(v0 + 736), *(void *)(v0 + 712));
    GroupSessionMessenger.MessageContext.source.getter();
    uint64_t v51 = (void *)swift_task_alloc();
    *(void *)(v0 + 896) = v51;
    *uint64_t v51 = v0;
    v51[1] = sub_1004389A4;
    uint64_t v52 = *(void *)(v0 + 704);
    goto LABEL_35;
  }
  if (swift_dynamicCast())
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 624) + 32))(*(void *)(v0 + 648), *(void *)(v0 + 656), *(void *)(v0 + 616));
    GroupSessionMessenger.MessageContext.source.getter();
    uint64_t v53 = (void *)swift_task_alloc();
    *(void *)(v0 + 952) = v53;
    *uint64_t v53 = v0;
    v53[1] = sub_10043B09C;
    uint64_t v54 = *(void *)(v0 + 696);
    uint64_t v55 = 2;
    goto LABEL_36;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_10002F034(v74, v75, &qword_1006A7750);
    static Logger.realtimeCollaboration.getter();
    os_log_type_t v29 = static os_log_type_t.fault.getter();
    unint64_t v30 = Logger.logObject.getter();
    BOOL v31 = os_log_type_enabled(v30, v29);
    uint64_t v32 = *(void *)(v0 + 472);
    uint64_t v33 = *(void *)(v0 + 480);
    uint64_t v34 = *(void *)(v0 + 464);
    if (v31)
    {
      uint64_t v35 = swift_slowAlloc();
      v77[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136315650;
      uint64_t v36 = StaticString.description.getter();
      *(void *)(v35 + 4) = sub_10045DA1C(v36, v37, v77);
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2048;
      *(void *)(v35 + 14) = 228;
      *(_WORD *)(v35 + 22) = 2080;
      *(void *)(v0 + 328) = 0;
      *(void *)(v0 + 336) = 0xE000000000000000;
      _StringGuts.grow(_:)(31);
      uint64_t v38 = *(void *)(v0 + 336);
      *(void *)(v0 + 280) = *(void *)(v0 + 328);
      *(void *)(v0 + 288) = v38;
      v39._countAndFlagsBits = 0xD00000000000001DLL;
      v39._object = (void *)0x800000010055DFD0;
      String.append(_:)(v39);
      sub_10002F214(&qword_1006A7750);
      _print_unlocked<A, B>(_:_:)();
      *(void *)(v35 + 24) = sub_10045DA1C(*(void *)(v0 + 280), *(void *)(v0 + 288), v77);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v30, v29, "Failed assertion at %s:%lu: %s", (uint8_t *)v35, 0x20u);
      swift_arrayDestroy();
      uint64_t v28 = v0 + 208;
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10002B754(v75, &qword_1006A7750);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v33, v34);
    sub_10002B754(v74, &qword_1006A7750);
    sub_100018FE8(v28);
    uint64_t v40 = *(void *)(*(void *)(v0 + 760) + *(int *)(v0 + 60));
    dispatch thunk of Collection.endIndex.getter();
    goto LABEL_21;
  }
  uint64_t v56 = *(void *)(v0 + 856);
  uint64_t v57 = *(void *)(v0 + 584);
  uint64_t v58 = *(void *)(v0 + 576);
  uint64_t v59 = *(void *)(v0 + 552);
  uint64_t v60 = *(void *)(v0 + 544);
  uint64_t v61 = *(void *)(v0 + 432);
  uint64_t v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16);
  *(void *)(v0 + 968) = v62;
  *(void *)(v0 + 976) = (v59 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v62(v58, v57, v60);
  if ([*(id *)(v61 + v56) fastSyncPaperKitEnablePCSEncryption])
  {
    GroupSessionMessenger.MessageContext.source.getter();
    uint64_t v63 = (void *)swift_task_alloc();
    *(void *)(v0 + 984) = v63;
    void *v63 = v0;
    v63[1] = sub_10043CA4C;
    uint64_t v52 = *(void *)(v0 + 688);
  }
  else
  {
    uint64_t v64 = *(void *)(v0 + 584);
    uint64_t v65 = *(void *)(v0 + 576);
    uint64_t v66 = *(void *)(v0 + 568);
    uint64_t v67 = *(void *)(v0 + 552);
    uint64_t v68 = *(void *)(v0 + 544);
    uint64_t v69 = *(void (**)(uint64_t, uint64_t))(v67 + 8);
    *(void *)(v0 + 1000) = v69;
    *(void *)(v0 + 1008) = (v67 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v69(v65, v68);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 32))(v66, v64, v68);
    GroupSessionMessenger.MessageContext.source.getter();
    uint64_t v70 = (void *)swift_task_alloc();
    *(void *)(v0 + 1016) = v70;
    *uint64_t v70 = v0;
    v70[1] = sub_10043CBB4;
    uint64_t v52 = *(void *)(v0 + 680);
  }
LABEL_35:
  uint64_t v54 = v52;
  uint64_t v55 = 3;
LABEL_36:
  sub_100442178(v54, v55);
}

uint64_t sub_10043BF98()
{
  uint64_t v61 = v0;
  uint64_t v1 = v0 + 112;
  uint64_t v57 = v0 + 16;
  (*(void (**)(void, void))(*(void *)(v0 + 624) + 8))(*(void *)(v0 + 648), *(void *)(v0 + 616));
  sub_100018FE8(v0 + 208);
  uint64_t v2 = &qword_10069B000;
  uint64_t v55 = v0 + 64;
  uint64_t v58 = v0 + 112;
  uint64_t v56 = (long long *)(v0 + 160);
LABEL_2:
  if (v2[9] != -1) {
    swift_once();
  }
  sub_10003293C(*(void *)(v0 + 464), (uint64_t)qword_1006A73A0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    os_log_type_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v5 + 4) = v7;
    void *v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Error processing incoming fast sync message: %@", (uint8_t *)v5, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v8 = *(void *)(v0 + 872);
  uint64_t v9 = *(void *)(v0 + 432);

  uint64_t v10 = *(os_unfair_lock_s **)(v9 + v8);
  uint64_t v11 = v10 + 4;
  uint64_t v12 = v10 + 6;
  os_unfair_lock_lock(v10 + 6);
  sub_100448BE4(v11);
  os_unfair_lock_unlock(v12);
  swift_errorRelease();
  sub_10002B754(v1, &qword_1006A7750);
  while (1)
  {
    uint64_t v13 = *(void *)(*(void *)(v0 + 760) + *(int *)(v0 + 60));
    dispatch thunk of Collection.endIndex.getter();
    if (v13 == *(void *)(v0 + 384)) {
      break;
    }
    uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 832);
    uint64_t v14 = *(void *)(v0 + 784);
    uint64_t v15 = *(void *)(v0 + 776);
    uint64_t v16 = *(void *)(v0 + 768);
    uint64_t v17 = *(void *)(v0 + 760);
    uint64_t v18 = (void (*)(uint64_t, void))dispatch thunk of Collection.subscript.read();
    sub_10002F034(v19, v57, &qword_1006A7750);
    v18(v0 + 248, 0);
    v59(v14, v17, v16);
    dispatch thunk of Collection.formIndex(after:)();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    uint64_t v1 = v0 + 112;
    sub_10002F1B0(v57, v58, &qword_1006A7750);
    sub_10002F034(v58, (uint64_t)v56, &qword_1006A7750);
    if (*(unsigned char *)(v0 + 200))
    {
      *(void *)(v0 + 360) = *(void *)v56;
      sub_10002F214(&qword_1006A3D90);
      swift_willThrowTypedImpl();
      uint64_t v2 = &qword_10069B000;
      goto LABEL_2;
    }
    uint64_t v20 = v0 + 208;
    sub_10016EFCC(v56, v0 + 208);
    sub_10002F214(&qword_1006A7758);
    if (swift_dynamicCast())
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 720) + 32))(*(void *)(v0 + 728), *(void *)(v0 + 736), *(void *)(v0 + 712));
      GroupSessionMessenger.MessageContext.source.getter();
      uint64_t v35 = (void *)swift_task_alloc();
      *(void *)(v0 + 896) = v35;
      void *v35 = v0;
      v35[1] = sub_1004389A4;
      uint64_t v36 = *(void *)(v0 + 704);
      goto LABEL_25;
    }
    if (swift_dynamicCast())
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 624) + 32))(*(void *)(v0 + 648), *(void *)(v0 + 656), *(void *)(v0 + 616));
      GroupSessionMessenger.MessageContext.source.getter();
      unint64_t v37 = (void *)swift_task_alloc();
      *(void *)(v0 + 952) = v37;
      *unint64_t v37 = v0;
      v37[1] = sub_10043B09C;
      uint64_t v38 = *(void *)(v0 + 696);
      uint64_t v39 = 2;
      goto LABEL_26;
    }
    if (swift_dynamicCast())
    {
      uint64_t v40 = *(void *)(v0 + 856);
      uint64_t v41 = *(void *)(v0 + 584);
      uint64_t v42 = *(void *)(v0 + 576);
      uint64_t v43 = *(void *)(v0 + 552);
      uint64_t v44 = *(void *)(v0 + 544);
      uint64_t v45 = *(void *)(v0 + 432);
      uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16);
      *(void *)(v0 + 968) = v46;
      *(void *)(v0 + 976) = (v43 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v46(v42, v41, v44);
      if ([*(id *)(v45 + v40) fastSyncPaperKitEnablePCSEncryption])
      {
        GroupSessionMessenger.MessageContext.source.getter();
        uint64_t v47 = (void *)swift_task_alloc();
        *(void *)(v0 + 984) = v47;
        *uint64_t v47 = v0;
        v47[1] = sub_10043CA4C;
        uint64_t v36 = *(void *)(v0 + 688);
      }
      else
      {
        uint64_t v48 = *(void *)(v0 + 584);
        uint64_t v49 = *(void *)(v0 + 576);
        uint64_t v50 = *(void *)(v0 + 568);
        uint64_t v51 = *(void *)(v0 + 552);
        uint64_t v52 = *(void *)(v0 + 544);
        uint64_t v53 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
        *(void *)(v0 + 1000) = v53;
        *(void *)(v0 + 1008) = (v51 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v53(v49, v52);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 32))(v50, v48, v52);
        GroupSessionMessenger.MessageContext.source.getter();
        uint64_t v54 = (void *)swift_task_alloc();
        *(void *)(v0 + 1016) = v54;
        *uint64_t v54 = v0;
        v54[1] = sub_10043CBB4;
        uint64_t v36 = *(void *)(v0 + 680);
      }
LABEL_25:
      uint64_t v38 = v36;
      uint64_t v39 = 3;
LABEL_26:
      return sub_100442178(v38, v39);
    }
    sub_10002F034(v58, v55, &qword_1006A7750);
    static Logger.realtimeCollaboration.getter();
    os_log_type_t v21 = static os_log_type_t.fault.getter();
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = v21;
    BOOL v24 = os_log_type_enabled(v22, v21);
    uint64_t v26 = *(void *)(v0 + 472);
    uint64_t v25 = *(void *)(v0 + 480);
    uint64_t v27 = *(void *)(v0 + 464);
    if (v24)
    {
      uint64_t v28 = swift_slowAlloc();
      v60[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136315650;
      uint64_t v29 = StaticString.description.getter();
      *(void *)(v28 + 4) = sub_10045DA1C(v29, v30, v60);
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2048;
      *(void *)(v28 + 14) = 228;
      *(_WORD *)(v28 + 22) = 2080;
      *(void *)(v0 + 328) = 0;
      *(void *)(v0 + 336) = 0xE000000000000000;
      _StringGuts.grow(_:)(31);
      uint64_t v31 = *(void *)(v0 + 336);
      *(void *)(v0 + 280) = *(void *)(v0 + 328);
      *(void *)(v0 + 288) = v31;
      v32._countAndFlagsBits = 0xD00000000000001DLL;
      v32._object = (void *)0x800000010055DFD0;
      String.append(_:)(v32);
      sub_10002F214(&qword_1006A7750);
      _print_unlocked<A, B>(_:_:)();
      *(void *)(v28 + 24) = sub_10045DA1C(*(void *)(v0 + 280), *(void *)(v0 + 288), v60);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Failed assertion at %s:%lu: %s", (uint8_t *)v28, 0x20u);
      swift_arrayDestroy();
      uint64_t v20 = v0 + 208;
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10002B754(v55, &qword_1006A7750);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    sub_10002B754(v58, &qword_1006A7750);
    sub_100018FE8(v20);
  }
  sub_10002B754(*(void *)(v0 + 760), &qword_1006A7738);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v33 = *(uint64_t (**)(void))(v0 + 8);
  return v33();
}

uint64_t sub_10043CA4C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 992) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[84] + 8))(v2[86], v2[83]);
  if (v0) {
    uint64_t v3 = sub_10043CF28;
  }
  else {
    uint64_t v3 = sub_10043CD1C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10043CBB4()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 1024) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[84] + 8))(v2[85], v2[83]);
  if (v0) {
    uint64_t v3 = sub_1004403E0;
  }
  else {
    uint64_t v3 = sub_10043F55C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10043CD1C()
{
  uint64_t v1 = FastSync.PaperKitMessage.data.getter();
  uint64_t v3 = v2;
  v0[129] = v1;
  v0[130] = v2;
  os_log_type_t v4 = (void *)swift_task_alloc();
  v0[131] = v4;
  *os_log_type_t v4 = v0;
  v4[1] = sub_10043CDD4;
  return sub_100442B14(v1, v3);
}

uint64_t sub_10043CDD4(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 1056) = a1;
  *(void *)(v4 + 1064) = v1;
  swift_task_dealloc();
  sub_10017253C(*(void *)(v3 + 1032), *(void *)(v3 + 1040));
  if (v1) {
    uint64_t v5 = sub_10043EA8C;
  }
  else {
    uint64_t v5 = sub_10043D9F8;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10043CF28()
{
  uint64_t v64 = v0;
  uint64_t v1 = v0 + 112;
  uint64_t v60 = v0 + 16;
  uint64_t v2 = *(void *)(v0 + 584);
  uint64_t v3 = *(void *)(v0 + 544);
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 552) + 8);
  v4(*(void *)(v0 + 576), v3);
  v4(v2, v3);
  sub_100018FE8(v0 + 208);
  uint64_t v5 = &qword_10069B000;
  uint64_t v58 = v0 + 64;
  uint64_t v61 = v0 + 112;
  uint64_t v59 = (long long *)(v0 + 160);
LABEL_2:
  if (v5[9] != -1) {
    swift_once();
  }
  sub_10003293C(*(void *)(v0 + 464), (uint64_t)qword_1006A73A0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    swift_errorRetain();
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v8 + 4) = v10;
    *uint64_t v9 = v10;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Error processing incoming fast sync message: %@", (uint8_t *)v8, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v11 = *(void *)(v0 + 872);
  uint64_t v12 = *(void *)(v0 + 432);

  uint64_t v13 = *(os_unfair_lock_s **)(v12 + v11);
  uint64_t v14 = v13 + 4;
  uint64_t v15 = v13 + 6;
  os_unfair_lock_lock(v13 + 6);
  sub_100448BE4(v14);
  os_unfair_lock_unlock(v15);
  swift_errorRelease();
  sub_10002B754(v1, &qword_1006A7750);
  while (1)
  {
    uint64_t v16 = *(void *)(*(void *)(v0 + 760) + *(int *)(v0 + 60));
    dispatch thunk of Collection.endIndex.getter();
    if (v16 == *(void *)(v0 + 384)) {
      break;
    }
    uint64_t v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 832);
    uint64_t v17 = *(void *)(v0 + 784);
    uint64_t v18 = *(void *)(v0 + 776);
    uint64_t v19 = *(void *)(v0 + 768);
    uint64_t v20 = *(void *)(v0 + 760);
    os_log_type_t v21 = (void (*)(uint64_t, void))dispatch thunk of Collection.subscript.read();
    sub_10002F034(v22, v60, &qword_1006A7750);
    v21(v0 + 248, 0);
    v62(v17, v20, v19);
    dispatch thunk of Collection.formIndex(after:)();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    uint64_t v1 = v0 + 112;
    sub_10002F1B0(v60, v61, &qword_1006A7750);
    sub_10002F034(v61, (uint64_t)v59, &qword_1006A7750);
    if (*(unsigned char *)(v0 + 200))
    {
      *(void *)(v0 + 360) = *(void *)v59;
      sub_10002F214(&qword_1006A3D90);
      swift_willThrowTypedImpl();
      uint64_t v5 = &qword_10069B000;
      goto LABEL_2;
    }
    uint64_t v23 = v0 + 208;
    sub_10016EFCC(v59, v0 + 208);
    sub_10002F214(&qword_1006A7758);
    if (swift_dynamicCast())
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 720) + 32))(*(void *)(v0 + 728), *(void *)(v0 + 736), *(void *)(v0 + 712));
      GroupSessionMessenger.MessageContext.source.getter();
      uint64_t v38 = (void *)swift_task_alloc();
      *(void *)(v0 + 896) = v38;
      *uint64_t v38 = v0;
      v38[1] = sub_1004389A4;
      uint64_t v39 = *(void *)(v0 + 704);
      goto LABEL_25;
    }
    if (swift_dynamicCast())
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 624) + 32))(*(void *)(v0 + 648), *(void *)(v0 + 656), *(void *)(v0 + 616));
      GroupSessionMessenger.MessageContext.source.getter();
      uint64_t v40 = (void *)swift_task_alloc();
      *(void *)(v0 + 952) = v40;
      *uint64_t v40 = v0;
      v40[1] = sub_10043B09C;
      uint64_t v41 = *(void *)(v0 + 696);
      uint64_t v42 = 2;
      goto LABEL_26;
    }
    if (swift_dynamicCast())
    {
      uint64_t v43 = *(void *)(v0 + 856);
      uint64_t v44 = *(void *)(v0 + 584);
      uint64_t v45 = *(void *)(v0 + 576);
      uint64_t v46 = *(void *)(v0 + 552);
      uint64_t v47 = *(void *)(v0 + 544);
      uint64_t v48 = *(void *)(v0 + 432);
      uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16);
      *(void *)(v0 + 968) = v49;
      *(void *)(v0 + 976) = (v46 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v49(v45, v44, v47);
      if ([*(id *)(v48 + v43) fastSyncPaperKitEnablePCSEncryption])
      {
        GroupSessionMessenger.MessageContext.source.getter();
        uint64_t v50 = (void *)swift_task_alloc();
        *(void *)(v0 + 984) = v50;
        *uint64_t v50 = v0;
        v50[1] = sub_10043CA4C;
        uint64_t v39 = *(void *)(v0 + 688);
      }
      else
      {
        uint64_t v51 = *(void *)(v0 + 584);
        uint64_t v52 = *(void *)(v0 + 576);
        uint64_t v53 = *(void *)(v0 + 568);
        uint64_t v54 = *(void *)(v0 + 552);
        uint64_t v55 = *(void *)(v0 + 544);
        uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
        *(void *)(v0 + 1000) = v56;
        *(void *)(v0 + 1008) = (v54 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v56(v52, v55);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 32))(v53, v51, v55);
        GroupSessionMessenger.MessageContext.source.getter();
        uint64_t v57 = (void *)swift_task_alloc();
        *(void *)(v0 + 1016) = v57;
        *uint64_t v57 = v0;
        v57[1] = sub_10043CBB4;
        uint64_t v39 = *(void *)(v0 + 680);
      }
LABEL_25:
      uint64_t v41 = v39;
      uint64_t v42 = 3;
LABEL_26:
      return sub_100442178(v41, v42);
    }
    sub_10002F034(v61, v58, &qword_1006A7750);
    static Logger.realtimeCollaboration.getter();
    os_log_type_t v24 = static os_log_type_t.fault.getter();
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = v24;
    BOOL v27 = os_log_type_enabled(v25, v24);
    uint64_t v29 = *(void *)(v0 + 472);
    uint64_t v28 = *(void *)(v0 + 480);
    uint64_t v30 = *(void *)(v0 + 464);
    if (v27)
    {
      uint64_t v31 = swift_slowAlloc();
      v63[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 136315650;
      uint64_t v32 = StaticString.description.getter();
      *(void *)(v31 + 4) = sub_10045DA1C(v32, v33, v63);
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2048;
      *(void *)(v31 + 14) = 228;
      *(_WORD *)(v31 + 22) = 2080;
      *(void *)(v0 + 328) = 0;
      *(void *)(v0 + 336) = 0xE000000000000000;
      _StringGuts.grow(_:)(31);
      uint64_t v34 = *(void *)(v0 + 336);
      *(void *)(v0 + 280) = *(void *)(v0 + 328);
      *(void *)(v0 + 288) = v34;
      v35._countAndFlagsBits = 0xD00000000000001DLL;
      v35._object = (void *)0x800000010055DFD0;
      String.append(_:)(v35);
      sub_10002F214(&qword_1006A7750);
      _print_unlocked<A, B>(_:_:)();
      *(void *)(v31 + 24) = sub_10045DA1C(*(void *)(v0 + 280), *(void *)(v0 + 288), v63);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Failed assertion at %s:%lu: %s", (uint8_t *)v31, 0x20u);
      swift_arrayDestroy();
      uint64_t v23 = v0 + 208;
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10002B754(v58, &qword_1006A7750);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
    sub_10002B754(v61, &qword_1006A7750);
    sub_100018FE8(v23);
  }
  sub_10002B754(*(void *)(v0 + 760), &qword_1006A7738);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
  return v36();
}

void sub_10043D9F8()
{
  uint64_t v107 = v0;
  uint64_t v2 = v0;
  uint64_t v3 = v0 + 16;
  uint64_t v4 = v0 + 64;
  uint64_t v5 = v2 + 112;
  uint64_t v101 = v2 + 248;
  uint64_t v102 = v3;
  uint64_t v103 = v2 + 208;
  unint64_t v6 = *(void *)(v2 + 1056);
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v99 = v4;
  uint64_t v100 = (long long *)(v2 + 160);
  uint64_t v98 = (void *)(v2 + 360);
  unint64_t v8 = v2 + 376;
  uint64_t v104 = v2 + 112;
  uint64_t v105 = v2;
  if (!v7)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if ((v6 & 0xC000000000000001) != 0)
  {
    id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_7;
  }
  if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v9 = *(id *)(*(void *)(v2 + 1056) + 32);
LABEL_7:
    swift_bridgeObjectRelease();
    id v10 = [v9 encryptedValues];

    NSString v11 = String._bridgeToObjectiveC()();
    id v12 = [v10 objectForKeyedSubscript:v11];

    swift_unknownObjectRelease();
    if (v12)
    {
      *(void *)unint64_t v8 = v12;
      sub_10002F214(&qword_1006A7770);
      if (swift_dynamicCast())
      {
        swift_bridgeObjectRelease();
        uint64_t v1 = *(void *)(v2 + 312);
        unint64_t v8 = *(void *)(v2 + 320);
        if (qword_10069B050 == -1) {
          goto LABEL_10;
        }
        goto LABEL_64;
      }
    }
LABEL_13:
    if (qword_10069B048 != -1) {
      swift_once();
    }
    sub_10003293C(*(void *)(v2 + 464), (uint64_t)qword_1006A73A0);
    swift_bridgeObjectRetain();
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      v106[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136315138;
      sub_100031418(0, &qword_1006A7640);
      swift_bridgeObjectRetain();
      uint64_t v20 = Array.description.getter();
      unint64_t v22 = v21;
      swift_bridgeObjectRelease();
      *(void *)(v2 + 368) = sub_10045DA1C(v20, v22, v106);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Incoming PaperKit message is not in a valid format: %s", v19, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v23 = *(void *)(v2 + 1064);
    os_log_type_t v24 = *(os_unfair_lock_s **)(*(void *)(v2 + 432) + *(void *)(v2 + 872));
    uint64_t v25 = v24 + 4;
    os_log_type_t v26 = v24 + 6;
    os_unfair_lock_lock(v24 + 6);
    sub_100448BE4(v25);
    if (!v23)
    {
      uint64_t v27 = *(void *)(v2 + 584);
      uint64_t v28 = *(void *)(v2 + 576);
      uint64_t v29 = *(void *)(v2 + 552);
      uint64_t v30 = *(void *)(v2 + 544);
      os_unfair_lock_unlock(v26);
      uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
      v31(v28, v30);
      sub_10002B754(v5, &qword_1006A7750);
      v31(v27, v30);
      sub_100018FE8(v103);
      uint64_t v97 = 0;
      goto LABEL_34;
    }
    os_unfair_lock_unlock(v26);
    return;
  }
  __break(1u);
LABEL_64:
  swift_once();
LABEL_10:
  uint64_t v13 = *(void *)(v2 + 528);
  uint64_t v14 = *(void *)(v2 + 464);
  uint64_t v15 = *(void *)(v2 + 472);
  uint64_t v16 = sub_10003293C(*(void *)(v2 + 512), (uint64_t)qword_1006A73B8);
  sub_10002F034(v16, v13, &qword_1006A3138);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_10002B754(*(void *)(v2 + 528), &qword_1006A3138);
  }
  else
  {
    sub_100172484(v1, v8);
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 134217984;
      Swift::String v35 = v34;
      uint64_t v36 = 0;
      switch(v8 >> 62)
      {
        case 1uLL:
          LODWORD(v36) = HIDWORD(v1) - v1;
          if (__OFSUB__(HIDWORD(v1), v1))
          {
            __break(1u);
LABEL_66:
            __break(1u);
            JUMPOUT(0x10043EA7CLL);
          }
          uint64_t v36 = (int)v36;
LABEL_30:
          *(void *)(v2 + 392) = v36;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          sub_10017253C(v1, v8);
          _os_log_impl((void *)&_mh_execute_header, v32, v33, "Received PaperKit message (PCS=ON) with length: %ld", v35, 0xCu);
          swift_slowDealloc();

          break;
        case 2uLL:
          uint64_t v38 = *(void *)(v1 + 16);
          uint64_t v37 = *(void *)(v1 + 24);
          BOOL v39 = __OFSUB__(v37, v38);
          uint64_t v36 = v37 - v38;
          if (!v39) {
            goto LABEL_30;
          }
          goto LABEL_66;
        case 3uLL:
          goto LABEL_30;
        default:
          uint64_t v36 = BYTE6(v8);
          goto LABEL_30;
      }
    }
    else
    {

      sub_10017253C(v1, v8);
    }
    (*(void (**)(void, void))(*(void *)(v2 + 472) + 8))(*(void *)(v2 + 528), *(void *)(v2 + 464));
  }
  uint64_t v40 = *(void *)(v2 + 584);
  uint64_t v41 = *(void *)(v2 + 576);
  uint64_t v42 = *(void *)(v2 + 552);
  uint64_t v43 = *(void *)(v2 + 544);
  sub_1004433BC(v1, v8, *(void *)(*(void *)(v2 + 432) + *(void *)(v2 + 864)));
  uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
  v44(v41, v43);
  sub_10002B754(v5, &qword_1006A7750);
  sub_10017253C(v1, v8);
  v44(v40, v43);
  sub_100018FE8(v103);
  uint64_t v97 = *(void *)(v2 + 1064);
LABEL_34:
  while (1)
  {
    uint64_t v45 = *(void *)(*(void *)(v2 + 760) + *(int *)(v2 + 60));
    dispatch thunk of Collection.endIndex.getter();
    if (v45 == *(void *)(v2 + 384)) {
      break;
    }
    uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v105 + 832);
    uint64_t v47 = *(void *)(v105 + 784);
    uint64_t v48 = *(void *)(v105 + 776);
    uint64_t v49 = *(void *)(v105 + 768);
    uint64_t v50 = *(void *)(v105 + 760);
    uint64_t v51 = (void (*)(uint64_t, void))dispatch thunk of Collection.subscript.read();
    sub_10002F034(v52, v102, &qword_1006A7750);
    v51(v101, 0);
    v46(v47, v50, v49);
    uint64_t v2 = v105;
    dispatch thunk of Collection.formIndex(after:)();
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
    sub_10002F1B0(v102, v104, &qword_1006A7750);
    sub_10002F034(v104, (uint64_t)v100, &qword_1006A7750);
    if (*(unsigned char *)(v105 + 200))
    {
      *uint64_t v98 = *(void *)v100;
      sub_10002F214(&qword_1006A3D90);
      swift_willThrowTypedImpl();
      if (qword_10069B048 != -1) {
        swift_once();
      }
      sub_10003293C(*(void *)(v105 + 464), (uint64_t)qword_1006A73A0);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v66 = Logger.logObject.getter();
      os_log_type_t v67 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v66, v67))
      {
        uint64_t v68 = swift_slowAlloc();
        uint64_t v69 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v68 = 138412290;
        swift_errorRetain();
        uint64_t v70 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v68 + 4) = v70;
        void *v69 = v70;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v66, v67, "Error processing incoming fast sync message: %@", (uint8_t *)v68, 0xCu);
        sub_10002F214(&qword_10069FD50);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }
      uint64_t v71 = *(void *)(v105 + 872);
      uint64_t v72 = *(void *)(v105 + 432);

      uint64_t v73 = *(os_unfair_lock_s **)(v72 + v71);
      uint64_t v74 = v73 + 4;
      uint64_t v75 = v73 + 6;
      os_unfair_lock_lock(v73 + 6);
      sub_100448BE4(v74);
      os_unfair_lock_unlock(v75);
      if (v97) {
        return;
      }
      swift_errorRelease();
      sub_10002B754(v104, &qword_1006A7750);
      uint64_t v97 = 0;
    }
    else
    {
      uint64_t v53 = v103;
      sub_10016EFCC(v100, v103);
      sub_10002F214(&qword_1006A7758);
      if (swift_dynamicCast())
      {
        (*(void (**)(void, void, void))(*(void *)(v105 + 720) + 32))(*(void *)(v105 + 728), *(void *)(v105 + 736), *(void *)(v105 + 712));
        GroupSessionMessenger.MessageContext.source.getter();
        uint64_t v77 = (void *)swift_task_alloc();
        *(void *)(v105 + 896) = v77;
        *uint64_t v77 = v105;
        v77[1] = sub_1004389A4;
        uint64_t v78 = *(void *)(v105 + 704);
        goto LABEL_56;
      }
      if (swift_dynamicCast())
      {
        (*(void (**)(void, void, void))(*(void *)(v105 + 624) + 32))(*(void *)(v105 + 648), *(void *)(v105 + 656), *(void *)(v105 + 616));
        GroupSessionMessenger.MessageContext.source.getter();
        uint64_t v79 = (void *)swift_task_alloc();
        *(void *)(v105 + 952) = v79;
        *uint64_t v79 = v105;
        v79[1] = sub_10043B09C;
        uint64_t v80 = *(void *)(v105 + 696);
        uint64_t v81 = 2;
        goto LABEL_57;
      }
      if (swift_dynamicCast())
      {
        uint64_t v82 = *(void *)(v105 + 856);
        uint64_t v83 = *(void *)(v105 + 584);
        uint64_t v84 = *(void *)(v105 + 576);
        uint64_t v85 = *(void *)(v105 + 552);
        uint64_t v86 = *(void *)(v105 + 544);
        uint64_t v87 = *(void *)(v105 + 432);
        uint64_t v88 = *(void (**)(uint64_t, uint64_t, uint64_t))(v85 + 16);
        *(void *)(v105 + 968) = v88;
        *(void *)(v105 + 976) = (v85 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
        v88(v84, v83, v86);
        if ([*(id *)(v87 + v82) fastSyncPaperKitEnablePCSEncryption])
        {
          GroupSessionMessenger.MessageContext.source.getter();
          uint64_t v89 = (void *)swift_task_alloc();
          *(void *)(v105 + 984) = v89;
          *uint64_t v89 = v105;
          v89[1] = sub_10043CA4C;
          uint64_t v78 = *(void *)(v105 + 688);
        }
        else
        {
          uint64_t v90 = *(void *)(v105 + 584);
          uint64_t v91 = *(void *)(v105 + 576);
          uint64_t v92 = *(void *)(v105 + 568);
          uint64_t v93 = *(void *)(v105 + 552);
          uint64_t v94 = *(void *)(v105 + 544);
          uint64_t v95 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
          *(void *)(v105 + 1000) = v95;
          *(void *)(v105 + 1008) = (v93 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
          v95(v91, v94);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v93 + 32))(v92, v90, v94);
          GroupSessionMessenger.MessageContext.source.getter();
          uint64_t v96 = (void *)swift_task_alloc();
          *(void *)(v105 + 1016) = v96;
          void *v96 = v105;
          v96[1] = sub_10043CBB4;
          uint64_t v78 = *(void *)(v105 + 680);
        }
LABEL_56:
        uint64_t v80 = v78;
        uint64_t v81 = 3;
LABEL_57:
        sub_100442178(v80, v81);
        return;
      }
      sub_10002F034(v104, v99, &qword_1006A7750);
      static Logger.realtimeCollaboration.getter();
      os_log_type_t v54 = static os_log_type_t.fault.getter();
      uint64_t v55 = Logger.logObject.getter();
      os_log_type_t v56 = v54;
      BOOL v57 = os_log_type_enabled(v55, v54);
      uint64_t v59 = *(void *)(v105 + 472);
      uint64_t v58 = *(void *)(v105 + 480);
      uint64_t v60 = *(void *)(v105 + 464);
      if (v57)
      {
        uint64_t v61 = swift_slowAlloc();
        v106[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v61 = 136315650;
        uint64_t v62 = StaticString.description.getter();
        *(void *)(v61 + 4) = sub_10045DA1C(v62, v63, v106);
        swift_bridgeObjectRelease();
        *(_WORD *)(v61 + 12) = 2048;
        *(void *)(v61 + 14) = 228;
        *(_WORD *)(v61 + 22) = 2080;
        *(void *)(v105 + 328) = 0;
        *(void *)(v105 + 336) = 0xE000000000000000;
        _StringGuts.grow(_:)(31);
        uint64_t v64 = *(void *)(v105 + 336);
        *(void *)(v105 + 280) = *(void *)(v105 + 328);
        *(void *)(v105 + 288) = v64;
        v65._object = (void *)0x800000010055DFD0;
        v65._countAndFlagsBits = 0xD00000000000001DLL;
        String.append(_:)(v65);
        sub_10002F214(&qword_1006A7750);
        _print_unlocked<A, B>(_:_:)();
        *(void *)(v61 + 24) = sub_10045DA1C(*(void *)(v105 + 280), *(void *)(v105 + 288), v106);
        uint64_t v2 = v105;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v55, v56, "Failed assertion at %s:%lu: %s", (uint8_t *)v61, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v53 = v103;
        swift_slowDealloc();
      }

      sub_10002B754(v99, &qword_1006A7750);
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v58, v60);
      sub_10002B754(v104, &qword_1006A7750);
      sub_100018FE8(v53);
    }
  }
  sub_10002B754(*(void *)(v2 + 760), &qword_1006A7738);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v76 = *(void (**)(void))(v2 + 8);
  v76();
}

uint64_t sub_10043EA8C()
{
  uint64_t v64 = v0;
  uint64_t v1 = v0 + 112;
  uint64_t v60 = v0 + 16;
  uint64_t v2 = *(void *)(v0 + 584);
  uint64_t v3 = *(void *)(v0 + 544);
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 552) + 8);
  v4(*(void *)(v0 + 576), v3);
  v4(v2, v3);
  sub_100018FE8(v0 + 208);
  uint64_t v5 = &qword_10069B000;
  uint64_t v58 = v0 + 64;
  uint64_t v61 = v0 + 112;
  uint64_t v59 = (long long *)(v0 + 160);
LABEL_2:
  if (v5[9] != -1) {
    swift_once();
  }
  sub_10003293C(*(void *)(v0 + 464), (uint64_t)qword_1006A73A0);
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    id v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    swift_errorRetain();
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v8 + 4) = v10;
    *id v9 = v10;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Error processing incoming fast sync message: %@", (uint8_t *)v8, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v11 = *(void *)(v0 + 872);
  uint64_t v12 = *(void *)(v0 + 432);

  uint64_t v13 = *(os_unfair_lock_s **)(v12 + v11);
  uint64_t v14 = v13 + 4;
  uint64_t v15 = v13 + 6;
  os_unfair_lock_lock(v13 + 6);
  sub_100448BE4(v14);
  os_unfair_lock_unlock(v15);
  swift_errorRelease();
  sub_10002B754(v1, &qword_1006A7750);
  while (1)
  {
    uint64_t v16 = *(void *)(*(void *)(v0 + 760) + *(int *)(v0 + 60));
    dispatch thunk of Collection.endIndex.getter();
    if (v16 == *(void *)(v0 + 384)) {
      break;
    }
    uint64_t v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 832);
    uint64_t v17 = *(void *)(v0 + 784);
    uint64_t v18 = *(void *)(v0 + 776);
    uint64_t v19 = *(void *)(v0 + 768);
    uint64_t v20 = *(void *)(v0 + 760);
    unint64_t v21 = (void (*)(uint64_t, void))dispatch thunk of Collection.subscript.read();
    sub_10002F034(v22, v60, &qword_1006A7750);
    v21(v0 + 248, 0);
    v62(v17, v20, v19);
    dispatch thunk of Collection.formIndex(after:)();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    uint64_t v1 = v0 + 112;
    sub_10002F1B0(v60, v61, &qword_1006A7750);
    sub_10002F034(v61, (uint64_t)v59, &qword_1006A7750);
    if (*(unsigned char *)(v0 + 200))
    {
      *(void *)(v0 + 360) = *(void *)v59;
      sub_10002F214(&qword_1006A3D90);
      swift_willThrowTypedImpl();
      uint64_t v5 = &qword_10069B000;
      goto LABEL_2;
    }
    uint64_t v23 = v0 + 208;
    sub_10016EFCC(v59, v0 + 208);
    sub_10002F214(&qword_1006A7758);
    if (swift_dynamicCast())
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 720) + 32))(*(void *)(v0 + 728), *(void *)(v0 + 736), *(void *)(v0 + 712));
      GroupSessionMessenger.MessageContext.source.getter();
      uint64_t v38 = (void *)swift_task_alloc();
      *(void *)(v0 + 896) = v38;
      *uint64_t v38 = v0;
      v38[1] = sub_1004389A4;
      uint64_t v39 = *(void *)(v0 + 704);
      goto LABEL_25;
    }
    if (swift_dynamicCast())
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 624) + 32))(*(void *)(v0 + 648), *(void *)(v0 + 656), *(void *)(v0 + 616));
      GroupSessionMessenger.MessageContext.source.getter();
      uint64_t v40 = (void *)swift_task_alloc();
      *(void *)(v0 + 952) = v40;
      *uint64_t v40 = v0;
      v40[1] = sub_10043B09C;
      uint64_t v41 = *(void *)(v0 + 696);
      uint64_t v42 = 2;
      goto LABEL_26;
    }
    if (swift_dynamicCast())
    {
      uint64_t v43 = *(void *)(v0 + 856);
      uint64_t v44 = *(void *)(v0 + 584);
      uint64_t v45 = *(void *)(v0 + 576);
      uint64_t v46 = *(void *)(v0 + 552);
      uint64_t v47 = *(void *)(v0 + 544);
      uint64_t v48 = *(void *)(v0 + 432);
      uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16);
      *(void *)(v0 + 968) = v49;
      *(void *)(v0 + 976) = (v46 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v49(v45, v44, v47);
      if ([*(id *)(v48 + v43) fastSyncPaperKitEnablePCSEncryption])
      {
        GroupSessionMessenger.MessageContext.source.getter();
        uint64_t v50 = (void *)swift_task_alloc();
        *(void *)(v0 + 984) = v50;
        *uint64_t v50 = v0;
        v50[1] = sub_10043CA4C;
        uint64_t v39 = *(void *)(v0 + 688);
      }
      else
      {
        uint64_t v51 = *(void *)(v0 + 584);
        uint64_t v52 = *(void *)(v0 + 576);
        uint64_t v53 = *(void *)(v0 + 568);
        uint64_t v54 = *(void *)(v0 + 552);
        uint64_t v55 = *(void *)(v0 + 544);
        os_log_type_t v56 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
        *(void *)(v0 + 1000) = v56;
        *(void *)(v0 + 1008) = (v54 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v56(v52, v55);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 32))(v53, v51, v55);
        GroupSessionMessenger.MessageContext.source.getter();
        BOOL v57 = (void *)swift_task_alloc();
        *(void *)(v0 + 1016) = v57;
        *BOOL v57 = v0;
        v57[1] = sub_10043CBB4;
        uint64_t v39 = *(void *)(v0 + 680);
      }
LABEL_25:
      uint64_t v41 = v39;
      uint64_t v42 = 3;
LABEL_26:
      return sub_100442178(v41, v42);
    }
    sub_10002F034(v61, v58, &qword_1006A7750);
    static Logger.realtimeCollaboration.getter();
    os_log_type_t v24 = static os_log_type_t.fault.getter();
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = v24;
    BOOL v27 = os_log_type_enabled(v25, v24);
    uint64_t v29 = *(void *)(v0 + 472);
    uint64_t v28 = *(void *)(v0 + 480);
    uint64_t v30 = *(void *)(v0 + 464);
    if (v27)
    {
      uint64_t v31 = swift_slowAlloc();
      v63[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 136315650;
      uint64_t v32 = StaticString.description.getter();
      *(void *)(v31 + 4) = sub_10045DA1C(v32, v33, v63);
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2048;
      *(void *)(v31 + 14) = 228;
      *(_WORD *)(v31 + 22) = 2080;
      *(void *)(v0 + 328) = 0;
      *(void *)(v0 + 336) = 0xE000000000000000;
      _StringGuts.grow(_:)(31);
      uint64_t v34 = *(void *)(v0 + 336);
      *(void *)(v0 + 280) = *(void *)(v0 + 328);
      *(void *)(v0 + 288) = v34;
      v35._countAndFlagsBits = 0xD00000000000001DLL;
      v35._object = (void *)0x800000010055DFD0;
      String.append(_:)(v35);
      sub_10002F214(&qword_1006A7750);
      _print_unlocked<A, B>(_:_:)();
      *(void *)(v31 + 24) = sub_10045DA1C(*(void *)(v0 + 280), *(void *)(v0 + 288), v63);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Failed assertion at %s:%lu: %s", (uint8_t *)v31, 0x20u);
      swift_arrayDestroy();
      uint64_t v23 = v0 + 208;
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10002B754(v58, &qword_1006A7750);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
    sub_10002B754(v61, &qword_1006A7750);
    sub_100018FE8(v23);
  }
  sub_10002B754(*(void *)(v0 + 760), &qword_1006A7738);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
  return v36();
}

void sub_10043F55C()
{
  uint64_t v95 = v0;
  if (qword_10069B050 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 520);
  uint64_t v2 = *(void *)(v0 + 464);
  uint64_t v3 = *(void *)(v0 + 472);
  uint64_t v4 = sub_10003293C(*(void *)(v0 + 512), (uint64_t)qword_1006A73B8);
  sub_10002F034(v4, v1, &qword_1006A3138);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_10002B754(*(void *)(v0 + 520), &qword_1006A3138);
  }
  else
  {
    (*(void (**)(void, void, void))(v0 + 968))(*(void *)(v0 + 560), *(void *)(v0 + 568), *(void *)(v0 + 544));
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 134217984;
      unint64_t v8 = FastSync.PaperKitMessage.data.getter();
      uint64_t v10 = v8;
      unint64_t v11 = v9;
      switch(v9 >> 62)
      {
        case 1uLL:
          unint64_t v12 = HIDWORD(v8);
          sub_10017253C(v8, v9);
          if (__OFSUB__(v12, v10)) {
            goto LABEL_56;
          }
          unint64_t v11 = (int)v12 - (int)v10;
          break;
        case 2uLL:
          uint64_t v14 = *(void *)(v8 + 16);
          uint64_t v13 = *(void *)(v8 + 24);
          sub_10017253C(v8, v9);
          unint64_t v11 = v13 - v14;
          if (!__OFSUB__(v13, v14)) {
            break;
          }
          __break(1u);
LABEL_14:
          sub_10017253C(v10, v11);
          unint64_t v11 = 0;
          break;
        case 3uLL:
          goto LABEL_14;
        default:
          sub_10017253C(v8, v9);
          unint64_t v11 = BYTE6(v11);
          break;
      }
      (*(void (**)(void, void))(v0 + 1000))(*(void *)(v0 + 560), *(void *)(v0 + 544));
      *(void *)(v7 + 4) = v11;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Received PaperKit message (PCS=OFF) with length: %ld", (uint8_t *)v7, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(void, void))(v0 + 1000))(*(void *)(v0 + 560), *(void *)(v0 + 544));
    }
    uint64_t v15 = *(void *)(v0 + 520);
    uint64_t v16 = *(void *)(v0 + 464);
    uint64_t v17 = *(void *)(v0 + 472);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  }
  uint64_t v18 = (uint64_t *)(v0 + 352);
  uint64_t v19 = *(void *)(v0 + 1024);
  uint64_t v20 = *(os_unfair_lock_s **)(*(void *)(v0 + 432) + *(void *)(v0 + 864));
  uint64_t v21 = FastSync.PaperKitMessage.data.getter();
  unint64_t v23 = v22;
  os_log_type_t v24 = v20 + 4;
  v20 += 6;
  os_unfair_lock_lock(v20);
  sub_1004492C4(v24, (void *)(v0 + 352));
  os_unfair_lock_unlock(v20);
  if (v19) {
    return;
  }
  uint64_t v25 = *v18;
  uint64_t v90 = *v18;
  if ((unint64_t)*v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v25 = v90;
    uint64_t v92 = v31;
    if (!v31) {
      goto LABEL_27;
    }
  }
  else
  {
    uint64_t v92 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v92) {
      goto LABEL_27;
    }
  }
  if (v92 < 1)
  {
    __break(1u);
LABEL_56:
    __break(1u);
    JUMPOUT(0x1004403D0);
  }
  uint64_t v26 = 0;
  unint64_t v27 = v25 & 0xC000000000000001;
  do
  {
    if (v27) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    uint64_t v28 = *(void *)(v0 + 448);
    uint64_t v29 = *(void *)(v0 + 456);
    uint64_t v30 = *(void *)(v0 + 440);
    ++v26;
    *(void *)(v0 + 296) = v21;
    *(void *)(v0 + 304) = v23;
    sub_100172484(v21, v23);
    sub_10002F214(&qword_10069BAC8);
    AsyncStream.Continuation.yield(_:)();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v29, v30);
  }
  while (v92 != v26);
LABEL_27:
  uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v0 + 1000);
  uint64_t v33 = *(void *)(v0 + 568);
  uint64_t v34 = *(void *)(v0 + 544);
  swift_bridgeObjectRelease();
  sub_10017253C(v21, v23);
  v32(v33, v34);
  sub_10002B754(v0 + 112, &qword_1006A7750);
  uint64_t v88 = v0 + 208;
  sub_100018FE8(v0 + 208);
  uint64_t v35 = *(void *)(*(void *)(v0 + 760) + *(int *)(v0 + 60));
  dispatch thunk of Collection.endIndex.getter();
  if (v35 == *(void *)(v0 + 384))
  {
LABEL_28:
    sub_10002B754(*(void *)(v0 + 760), &qword_1006A7738);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v36 = *(void (**)(void))(v0 + 8);
    v36();
  }
  else
  {
    uint64_t v87 = v0 + 16;
    uint64_t v86 = (long long *)(v0 + 160);
    uint64_t v85 = v0 + 64;
    uint64_t v89 = v0 + 112;
    while (1)
    {
      while (1)
      {
        uint64_t v91 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 832);
        uint64_t v38 = *(void *)(v0 + 784);
        uint64_t v39 = *(void *)(v0 + 776);
        uint64_t v40 = *(void *)(v0 + 768);
        uint64_t v41 = *(void *)(v0 + 760);
        uint64_t v42 = (void (*)(uint64_t, void))dispatch thunk of Collection.subscript.read();
        sub_10002F034(v43, v87, &qword_1006A7750);
        v42(v0 + 248, 0);
        v91(v38, v41, v40);
        dispatch thunk of Collection.formIndex(after:)();
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
        sub_10002F1B0(v87, v89, &qword_1006A7750);
        sub_10002F034(v89, (uint64_t)v86, &qword_1006A7750);
        if ((*(unsigned char *)(v0 + 200) & 1) == 0) {
          break;
        }
        *(void *)(v0 + 360) = *(void *)v86;
        sub_10002F214(&qword_1006A3D90);
        swift_willThrowTypedImpl();
        if (qword_10069B048 != -1) {
          swift_once();
        }
        sub_10003293C(*(void *)(v0 + 464), (uint64_t)qword_1006A73A0);
        swift_errorRetain();
        swift_errorRetain();
        uint64_t v44 = Logger.logObject.getter();
        os_log_type_t v45 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v44, v45))
        {
          uint64_t v46 = swift_slowAlloc();
          uint64_t v47 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v46 = 138412290;
          swift_errorRetain();
          uint64_t v48 = _swift_stdlib_bridgeErrorToNSError();
          *(void *)(v46 + 4) = v48;
          *uint64_t v47 = v48;
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v44, v45, "Error processing incoming fast sync message: %@", (uint8_t *)v46, 0xCu);
          sub_10002F214(&qword_10069FD50);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_errorRelease();
          swift_errorRelease();
        }
        uint64_t v59 = *(void *)(v0 + 872);
        uint64_t v60 = *(void *)(v0 + 432);

        uint64_t v61 = *(os_unfair_lock_s **)(v60 + v59);
        uint64_t v62 = v61 + 4;
        unint64_t v63 = v61 + 6;
        os_unfair_lock_lock(v61 + 6);
        sub_100448BE4(v62);
        os_unfair_lock_unlock(v63);
        swift_errorRelease();
        sub_10002B754(v89, &qword_1006A7750);
        uint64_t v64 = *(void *)(*(void *)(v0 + 760) + *(int *)(v0 + 60));
        dispatch thunk of Collection.endIndex.getter();
        if (v64 == *(void *)(v0 + 384)) {
          goto LABEL_28;
        }
      }
      sub_10016EFCC(v86, v88);
      sub_10002F214(&qword_1006A7758);
      if (swift_dynamicCast())
      {
        (*(void (**)(void, void, void))(*(void *)(v0 + 720) + 32))(*(void *)(v0 + 728), *(void *)(v0 + 736), *(void *)(v0 + 712));
        GroupSessionMessenger.MessageContext.source.getter();
        uint64_t v65 = (void *)swift_task_alloc();
        *(void *)(v0 + 896) = v65;
        *uint64_t v65 = v0;
        v65[1] = sub_1004389A4;
        uint64_t v66 = *(void *)(v0 + 704);
        goto LABEL_51;
      }
      if (swift_dynamicCast())
      {
        (*(void (**)(void, void, void))(*(void *)(v0 + 624) + 32))(*(void *)(v0 + 648), *(void *)(v0 + 656), *(void *)(v0 + 616));
        GroupSessionMessenger.MessageContext.source.getter();
        os_log_type_t v67 = (void *)swift_task_alloc();
        *(void *)(v0 + 952) = v67;
        *os_log_type_t v67 = v0;
        v67[1] = sub_10043B09C;
        uint64_t v68 = *(void *)(v0 + 696);
        uint64_t v69 = 2;
        goto LABEL_52;
      }
      if (swift_dynamicCast()) {
        break;
      }
      sub_10002F034(v89, v85, &qword_1006A7750);
      static Logger.realtimeCollaboration.getter();
      os_log_type_t v49 = static os_log_type_t.fault.getter();
      uint64_t v50 = Logger.logObject.getter();
      BOOL v51 = os_log_type_enabled(v50, v49);
      uint64_t v93 = *(void *)(v0 + 480);
      uint64_t v52 = *(void *)(v0 + 464);
      uint64_t v53 = *(void *)(v0 + 472);
      if (v51)
      {
        uint64_t v54 = swift_slowAlloc();
        v94[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v54 = 136315650;
        uint64_t v55 = StaticString.description.getter();
        *(void *)(v54 + 4) = sub_10045DA1C(v55, v56, v94);
        swift_bridgeObjectRelease();
        *(_WORD *)(v54 + 12) = 2048;
        *(void *)(v54 + 14) = 228;
        *(_WORD *)(v54 + 22) = 2080;
        *(void *)(v0 + 328) = 0;
        *(void *)(v0 + 336) = 0xE000000000000000;
        _StringGuts.grow(_:)(31);
        uint64_t v57 = *(void *)(v0 + 336);
        *(void *)(v0 + 280) = *(void *)(v0 + 328);
        *(void *)(v0 + 288) = v57;
        v58._countAndFlagsBits = 0xD00000000000001DLL;
        v58._object = (void *)0x800000010055DFD0;
        String.append(_:)(v58);
        sub_10002F214(&qword_1006A7750);
        _print_unlocked<A, B>(_:_:)();
        *(void *)(v54 + 24) = sub_10045DA1C(*(void *)(v0 + 280), *(void *)(v0 + 288), v94);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v50, v49, "Failed assertion at %s:%lu: %s", (uint8_t *)v54, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      sub_10002B754(v85, &qword_1006A7750);
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v93, v52);
      sub_10002B754(v0 + 112, &qword_1006A7750);
      sub_100018FE8(v88);
      uint64_t v37 = *(void *)(*(void *)(v0 + 760) + *(int *)(v0 + 60));
      dispatch thunk of Collection.endIndex.getter();
      if (v37 == *(void *)(v0 + 384)) {
        goto LABEL_28;
      }
    }
    uint64_t v70 = *(void *)(v0 + 856);
    uint64_t v71 = *(void *)(v0 + 584);
    uint64_t v72 = *(void *)(v0 + 576);
    uint64_t v73 = *(void *)(v0 + 552);
    uint64_t v74 = *(void *)(v0 + 544);
    uint64_t v75 = *(void *)(v0 + 432);
    uint64_t v76 = *(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 16);
    *(void *)(v0 + 968) = v76;
    *(void *)(v0 + 976) = (v73 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v76(v72, v71, v74);
    if ([*(id *)(v75 + v70) fastSyncPaperKitEnablePCSEncryption])
    {
      GroupSessionMessenger.MessageContext.source.getter();
      uint64_t v77 = (void *)swift_task_alloc();
      *(void *)(v0 + 984) = v77;
      *uint64_t v77 = v0;
      v77[1] = sub_10043CA4C;
      uint64_t v66 = *(void *)(v0 + 688);
    }
    else
    {
      uint64_t v78 = *(void *)(v0 + 584);
      uint64_t v79 = *(void *)(v0 + 576);
      uint64_t v80 = *(void *)(v0 + 568);
      uint64_t v81 = *(void *)(v0 + 552);
      uint64_t v82 = *(void *)(v0 + 544);
      uint64_t v83 = *(void (**)(uint64_t, uint64_t))(v81 + 8);
      *(void *)(v0 + 1000) = v83;
      *(void *)(v0 + 1008) = (v81 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v83(v79, v82);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 32))(v80, v78, v82);
      GroupSessionMessenger.MessageContext.source.getter();
      uint64_t v84 = (void *)swift_task_alloc();
      *(void *)(v0 + 1016) = v84;
      *uint64_t v84 = v0;
      v84[1] = sub_10043CBB4;
      uint64_t v66 = *(void *)(v0 + 680);
    }
LABEL_51:
    uint64_t v68 = v66;
    uint64_t v69 = 3;
LABEL_52:
    sub_100442178(v68, v69);
  }
}

uint64_t sub_1004403E0()
{
  uint64_t v61 = v0;
  uint64_t v1 = v0 + 112;
  uint64_t v57 = v0 + 16;
  (*(void (**)(void, void))(v0 + 1000))(*(void *)(v0 + 568), *(void *)(v0 + 544));
  sub_100018FE8(v0 + 208);
  uint64_t v2 = &qword_10069B000;
  uint64_t v55 = v0 + 64;
  uint64_t v58 = v0 + 112;
  unint64_t v56 = (long long *)(v0 + 160);
LABEL_2:
  if (v2[9] != -1) {
    swift_once();
  }
  sub_10003293C(*(void *)(v0 + 464), (uint64_t)qword_1006A73A0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    os_log_type_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v5 + 4) = v7;
    void *v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Error processing incoming fast sync message: %@", (uint8_t *)v5, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v8 = *(void *)(v0 + 872);
  uint64_t v9 = *(void *)(v0 + 432);

  uint64_t v10 = *(os_unfair_lock_s **)(v9 + v8);
  unint64_t v11 = v10 + 4;
  unint64_t v12 = v10 + 6;
  os_unfair_lock_lock(v10 + 6);
  sub_100448BE4(v11);
  os_unfair_lock_unlock(v12);
  swift_errorRelease();
  sub_10002B754(v1, &qword_1006A7750);
  while (1)
  {
    uint64_t v13 = *(void *)(*(void *)(v0 + 760) + *(int *)(v0 + 60));
    dispatch thunk of Collection.endIndex.getter();
    if (v13 == *(void *)(v0 + 384)) {
      break;
    }
    uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 832);
    uint64_t v14 = *(void *)(v0 + 784);
    uint64_t v15 = *(void *)(v0 + 776);
    uint64_t v16 = *(void *)(v0 + 768);
    uint64_t v17 = *(void *)(v0 + 760);
    uint64_t v18 = (void (*)(uint64_t, void))dispatch thunk of Collection.subscript.read();
    sub_10002F034(v19, v57, &qword_1006A7750);
    v18(v0 + 248, 0);
    v59(v14, v17, v16);
    dispatch thunk of Collection.formIndex(after:)();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    uint64_t v1 = v0 + 112;
    sub_10002F1B0(v57, v58, &qword_1006A7750);
    sub_10002F034(v58, (uint64_t)v56, &qword_1006A7750);
    if (*(unsigned char *)(v0 + 200))
    {
      *(void *)(v0 + 360) = *(void *)v56;
      sub_10002F214(&qword_1006A3D90);
      swift_willThrowTypedImpl();
      uint64_t v2 = &qword_10069B000;
      goto LABEL_2;
    }
    uint64_t v20 = v0 + 208;
    sub_10016EFCC(v56, v0 + 208);
    sub_10002F214(&qword_1006A7758);
    if (swift_dynamicCast())
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 720) + 32))(*(void *)(v0 + 728), *(void *)(v0 + 736), *(void *)(v0 + 712));
      GroupSessionMessenger.MessageContext.source.getter();
      uint64_t v35 = (void *)swift_task_alloc();
      *(void *)(v0 + 896) = v35;
      void *v35 = v0;
      v35[1] = sub_1004389A4;
      uint64_t v36 = *(void *)(v0 + 704);
      goto LABEL_25;
    }
    if (swift_dynamicCast())
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 624) + 32))(*(void *)(v0 + 648), *(void *)(v0 + 656), *(void *)(v0 + 616));
      GroupSessionMessenger.MessageContext.source.getter();
      uint64_t v37 = (void *)swift_task_alloc();
      *(void *)(v0 + 952) = v37;
      *uint64_t v37 = v0;
      v37[1] = sub_10043B09C;
      uint64_t v38 = *(void *)(v0 + 696);
      uint64_t v39 = 2;
      goto LABEL_26;
    }
    if (swift_dynamicCast())
    {
      uint64_t v40 = *(void *)(v0 + 856);
      uint64_t v41 = *(void *)(v0 + 584);
      uint64_t v42 = *(void *)(v0 + 576);
      uint64_t v43 = *(void *)(v0 + 552);
      uint64_t v44 = *(void *)(v0 + 544);
      uint64_t v45 = *(void *)(v0 + 432);
      uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16);
      *(void *)(v0 + 968) = v46;
      *(void *)(v0 + 976) = (v43 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v46(v42, v41, v44);
      if ([*(id *)(v45 + v40) fastSyncPaperKitEnablePCSEncryption])
      {
        GroupSessionMessenger.MessageContext.source.getter();
        uint64_t v47 = (void *)swift_task_alloc();
        *(void *)(v0 + 984) = v47;
        *uint64_t v47 = v0;
        v47[1] = sub_10043CA4C;
        uint64_t v36 = *(void *)(v0 + 688);
      }
      else
      {
        uint64_t v48 = *(void *)(v0 + 584);
        uint64_t v49 = *(void *)(v0 + 576);
        uint64_t v50 = *(void *)(v0 + 568);
        uint64_t v51 = *(void *)(v0 + 552);
        uint64_t v52 = *(void *)(v0 + 544);
        uint64_t v53 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
        *(void *)(v0 + 1000) = v53;
        *(void *)(v0 + 1008) = (v51 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v53(v49, v52);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 32))(v50, v48, v52);
        GroupSessionMessenger.MessageContext.source.getter();
        uint64_t v54 = (void *)swift_task_alloc();
        *(void *)(v0 + 1016) = v54;
        *uint64_t v54 = v0;
        v54[1] = sub_10043CBB4;
        uint64_t v36 = *(void *)(v0 + 680);
      }
LABEL_25:
      uint64_t v38 = v36;
      uint64_t v39 = 3;
LABEL_26:
      return sub_100442178(v38, v39);
    }
    sub_10002F034(v58, v55, &qword_1006A7750);
    static Logger.realtimeCollaboration.getter();
    os_log_type_t v21 = static os_log_type_t.fault.getter();
    unint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = v21;
    BOOL v24 = os_log_type_enabled(v22, v21);
    uint64_t v26 = *(void *)(v0 + 472);
    uint64_t v25 = *(void *)(v0 + 480);
    uint64_t v27 = *(void *)(v0 + 464);
    if (v24)
    {
      uint64_t v28 = swift_slowAlloc();
      v60[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136315650;
      uint64_t v29 = StaticString.description.getter();
      *(void *)(v28 + 4) = sub_10045DA1C(v29, v30, v60);
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2048;
      *(void *)(v28 + 14) = 228;
      *(_WORD *)(v28 + 22) = 2080;
      *(void *)(v0 + 328) = 0;
      *(void *)(v0 + 336) = 0xE000000000000000;
      _StringGuts.grow(_:)(31);
      uint64_t v31 = *(void *)(v0 + 336);
      *(void *)(v0 + 280) = *(void *)(v0 + 328);
      *(void *)(v0 + 288) = v31;
      v32._countAndFlagsBits = 0xD00000000000001DLL;
      v32._object = (void *)0x800000010055DFD0;
      String.append(_:)(v32);
      sub_10002F214(&qword_1006A7750);
      _print_unlocked<A, B>(_:_:)();
      *(void *)(v28 + 24) = sub_10045DA1C(*(void *)(v0 + 280), *(void *)(v0 + 288), v60);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Failed assertion at %s:%lu: %s", (uint8_t *)v28, 0x20u);
      swift_arrayDestroy();
      uint64_t v20 = v0 + 208;
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10002B754(v55, &qword_1006A7750);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    sub_10002B754(v58, &qword_1006A7750);
    sub_100018FE8(v20);
  }
  sub_10002B754(*(void *)(v0 + 760), &qword_1006A7738);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v33 = *(uint64_t (**)(void))(v0 + 8);
  return v33();
}

Swift::Void __swiftcall RealtimeCollaborationMessageController.incrementNonFatalErrorCount()()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0
                            + OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_nonFatalErrorCount);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_100448BE4(v2);

  os_unfair_lock_unlock(v3);
}

uint64_t sub_100440EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a4;
  sub_10002F214(&qword_1006A76D0);
  v4[4] = swift_task_alloc();
  uint64_t v5 = sub_10002F214((uint64_t *)&unk_1006A75E0);
  v4[5] = v5;
  v4[6] = *(void *)(v5 - 8);
  v4[7] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for GroupSessionMessenger.MessageContext();
  v4[8] = v6;
  v4[9] = *(void *)(v6 - 8);
  v4[10] = swift_task_alloc();
  uint64_t v7 = sub_10002F214(&qword_1006A76D8);
  v4[11] = v7;
  v4[12] = *(void *)(v7 - 8);
  v4[13] = swift_task_alloc();
  sub_10002F214(&qword_1006A76E0);
  v4[14] = swift_task_alloc();
  uint64_t v8 = sub_10002F214(&qword_1006A76E8);
  v4[15] = v8;
  v4[16] = *(void *)(v8 - 8);
  v4[17] = swift_task_alloc();
  uint64_t v9 = sub_10002F214(&qword_1006A76F0);
  v4[18] = v9;
  v4[19] = *(void *)(v9 - 8);
  v4[20] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for MessageChunking.UnsafeAppendingAccumulator();
  v4[21] = v10;
  v4[22] = *(void *)(v10 - 8);
  v4[23] = swift_task_alloc();
  return _swift_task_switch(sub_1004411F8, 0, 0);
}

uint64_t sub_1004411F8()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[15];
  MessageChunking.UnsafeAppendingAccumulator.init()();
  sub_10001DFB0(&qword_1006A76F8, &qword_1006A76D8);
  sub_10001DFB0(&qword_1006A7700, &qword_1006A76D8);
  GroupSessionMessenger.messages<A>(of:)();
  GroupSessionMessenger.Messages.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[24] = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_nonFatalErrorCount;
  uint64_t v4 = sub_10001DFB0(&qword_1006A7708, &qword_1006A76F0);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[25] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1004413A8;
  uint64_t v6 = v0[18];
  uint64_t v7 = v0[14];
  return dispatch thunk of AsyncIteratorProtocol.next()(v7, v6, v4);
}

uint64_t sub_1004413A8()
{
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100441BAC;
  }
  else {
    uint64_t v2 = sub_1004414BC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1004414BC()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = sub_10002F214(&qword_1006A7710);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
    if (qword_10069B048 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10003293C(v3, (uint64_t)qword_1006A73A0);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "PaperKit subscriber task finished", v6, 2u);
      swift_slowDealloc();
    }

    goto LABEL_9;
  }
  uint64_t v7 = v0[10];
  uint64_t v8 = v0[8];
  uint64_t v9 = v0[9];
  uint64_t v10 = v1 + *(int *)(v2 + 48);
  (*(void (**)(void, uint64_t, void))(v0[12] + 32))(v0[13], v1, v0[11]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v7, v10, v8);
  if (static Task<>.isCancelled.getter())
  {
    uint64_t v12 = v0[19];
    uint64_t v11 = v0[20];
    uint64_t v13 = v0[18];
    uint64_t v15 = v0[12];
    uint64_t v14 = v0[13];
    uint64_t v16 = v0[11];
    (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
LABEL_9:
    (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
  uint64_t v19 = v0[26];
  sub_10001DFB0(&qword_1006A7648, (uint64_t *)&unk_1006A75E0);
  sub_10001DFB0(&qword_1006A7650, (uint64_t *)&unk_1006A75E0);
  MessageChunking.UnsafeAppendingAccumulator.process<A>(incoming:)();
  if (v19)
  {
    if (qword_10069B048 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_10003293C(v20, (uint64_t)qword_1006A73A0);
    swift_errorRetain();
    swift_errorRetain();
    os_log_type_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      BOOL v24 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 138412290;
      swift_errorRetain();
      uint64_t v25 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v23 + 4) = v25;
      *BOOL v24 = v25;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Error processing incoming CloudKit message: %@", (uint8_t *)v23, 0xCu);
      sub_10002F214(&qword_10069FD50);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v32 = v0[24];
    uint64_t v33 = v0[3];

    uint64_t v34 = *(os_unfair_lock_s **)(v33 + v32);
    uint64_t v35 = v34 + 4;
    uint64_t v36 = v34 + 6;
    os_unfair_lock_lock(v34 + 6);
    sub_100448BE4(v35);
    uint64_t v38 = v0[12];
    uint64_t v37 = v0[13];
    uint64_t v40 = v0[10];
    uint64_t v39 = v0[11];
    uint64_t v41 = v0[8];
    uint64_t v42 = v0[9];
    os_unfair_lock_unlock(v36);
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v41);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    goto LABEL_21;
  }
  uint64_t v26 = v0[5];
  uint64_t v27 = v0[6];
  uint64_t v28 = v0[4];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v28, 1, v26) == 1)
  {
    uint64_t v30 = v0[12];
    uint64_t v29 = v0[13];
    uint64_t v31 = v0[11];
    (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    sub_10002B754(v28, &qword_1006A76D0);
LABEL_21:
    uint64_t v43 = sub_10001DFB0(&qword_1006A7708, &qword_1006A76F0);
    uint64_t v44 = (void *)swift_task_alloc();
    v0[25] = v44;
    *uint64_t v44 = v0;
    v44[1] = sub_1004413A8;
    uint64_t v45 = v0[18];
    uint64_t v46 = v0[14];
    return dispatch thunk of AsyncIteratorProtocol.next()(v46, v45, v43);
  }
  (*(void (**)(void, uint64_t, uint64_t))(v27 + 32))(v0[7], v28, v26);
  uint64_t v47 = (void *)swift_task_alloc();
  v0[27] = v47;
  *uint64_t v47 = v0;
  v47[1] = sub_100441C30;
  uint64_t v48 = v0[10];
  uint64_t v49 = v0[7];
  return sub_10043760C(v49, v48);
}

uint64_t sub_100441BAC()
{
  *(void *)(v0 + 16) = *(void *)(v0 + 208);
  sub_10002F214(&qword_1006A3D90);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_100441C30()
{
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100441E78;
  }
  else {
    uint64_t v2 = sub_100441D44;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100441D44()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v4 = v0[10];
  uint64_t v3 = v0[11];
  uint64_t v5 = v0[8];
  uint64_t v6 = v0[9];
  (*(void (**)(void, void))(v0[6] + 8))(v0[7], v0[5]);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v7 = sub_10001DFB0(&qword_1006A7708, &qword_1006A76F0);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[25] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1004413A8;
  uint64_t v9 = v0[18];
  uint64_t v10 = v0[14];
  return dispatch thunk of AsyncIteratorProtocol.next()(v10, v9, v7);
}

uint64_t sub_100441E78()
{
  (*(void (**)(void, void))(v0[6] + 8))(v0[7], v0[5]);
  if (qword_10069B048 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10003293C(v1, (uint64_t)qword_1006A73A0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v4 + 4) = v6;
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error processing incoming CloudKit message: %@", (uint8_t *)v4, 0xCu);
    sub_10002F214(&qword_10069FD50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = v0[24];
  uint64_t v8 = v0[3];

  uint64_t v9 = *(os_unfair_lock_s **)(v8 + v7);
  uint64_t v10 = v9 + 4;
  uint64_t v11 = v9 + 6;
  os_unfair_lock_lock(v9 + 6);
  sub_100448BE4(v10);
  uint64_t v13 = v0[12];
  uint64_t v12 = v0[13];
  uint64_t v15 = v0[10];
  uint64_t v14 = v0[11];
  uint64_t v16 = v0[8];
  uint64_t v17 = v0[9];
  os_unfair_lock_unlock(v11);
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  uint64_t v18 = sub_10001DFB0(&qword_1006A7708, &qword_1006A76F0);
  uint64_t v19 = (void *)swift_task_alloc();
  v0[25] = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_1004413A8;
  uint64_t v20 = v0[18];
  uint64_t v21 = v0[14];
  return dispatch thunk of AsyncIteratorProtocol.next()(v21, v20, v18);
}

uint64_t sub_100442178(uint64_t a1, uint64_t a2)
{
  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  v3[9] = sub_10002F214(&qword_1006A3138);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  return _swift_task_switch(sub_100442224, 0, 0);
}

uint64_t sub_100442224()
{
  uint64_t v60 = v0;
  uint64_t v1 = *(os_unfair_lock_s **)(v0[8] + OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_share);
  uint64_t v2 = (void **)&v1[4];
  os_log_type_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1004435E8(v2, v59);
  os_unfair_lock_unlock(v3);
  if (v59[0])
  {
    uint64_t v4 = v59[0];
    Participant.handle.getter();
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v6 = [v4 ic_participantWithHandle:v5];

    if (!v6)
    {
      uint64_t v29 = type metadata accessor for FastSyncError();
      sub_100449994(&qword_1006A76A0, (void (*)(uint64_t))&type metadata accessor for FastSyncError);
      swift_allocError();
      uint64_t v31 = v30;
      *uint64_t v30 = Participant.handle.getter();
      v31[1] = v32;
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v29 - 8) + 104))(v31, enum case for FastSyncError.handleNotInShare(_:), v29);
      swift_willThrow();
LABEL_14:

      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v40 = (uint64_t (*)(void))v0[1];
      goto LABEL_27;
    }
    if ([v6 acceptanceStatus] != (id)2)
    {
      uint64_t v33 = type metadata accessor for FastSyncError();
      sub_100449994(&qword_1006A76A0, (void (*)(uint64_t))&type metadata accessor for FastSyncError);
      swift_allocError();
      uint64_t v35 = v34;
      id v36 = [v6 description];
      uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v39 = v38;

      uint64_t *v35 = v37;
      v35[1] = v39;
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v33 - 8) + 104))(v35, enum case for FastSyncError.notAcceptedShare(_:), v33);
      goto LABEL_13;
    }
    uint64_t v7 = v0[7];
    if ((uint64_t)[v6 permission] < v7)
    {
      uint64_t v58 = v0[7];
      uint64_t v8 = type metadata accessor for FastSyncError();
      sub_100449994(&qword_1006A76A0, (void (*)(uint64_t))&type metadata accessor for FastSyncError);
      swift_allocError();
      uint64_t v10 = v9;
      id v11 = [v6 description];
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      v0[5] = v58;
      sub_100190AB4();
      uint64_t v15 = BinaryInteger.description.getter();
      *uint64_t v10 = v12;
      v10[1] = v14;
      v10[2] = v15;
      v10[3] = v16;
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v8 - 8) + 104))(v10, enum case for FastSyncError.noPermission(_:), v8);
LABEL_13:
      swift_willThrow();

      goto LABEL_14;
    }
    if (qword_10069B050 != -1) {
      swift_once();
    }
    uint64_t v41 = v0[11];
    uint64_t v42 = sub_10003293C(v0[9], (uint64_t)qword_1006A73B8);
    sub_10002F034(v42, v41, &qword_1006A3138);
    uint64_t v43 = type metadata accessor for Logger();
    uint64_t v44 = *(void *)(v43 - 8);
    int v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v41, 1, v43);
    uint64_t v22 = v0[11];
    if (v45 != 1)
    {
      id v46 = v6;
      uint64_t v47 = Logger.logObject.getter();
      os_log_type_t v48 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v47, v48))
      {
        uint64_t v49 = swift_slowAlloc();
        unint64_t v56 = (void *)swift_slowAlloc();
        v59[0] = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v49 = 138412546;
        v0[3] = v46;
        id v50 = v46;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *unint64_t v56 = v6;
        uint64_t v57 = v50;

        *(_WORD *)(v49 + 12) = 2080;
        id v51 = (id)CKStringFromParticipantPermission();
        uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v54 = v53;

        v0[4] = sub_10045DA1C(v52, v54, (uint64_t *)v59);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v47, v48, "Validated participant %@ has minimum permission: %s", (uint8_t *)v49, 0x16u);
        sub_10002F214(&qword_10069FD50);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      (*(void (**)(void, uint64_t))(v44 + 8))(v0[11], v43);
      goto LABEL_26;
    }
  }
  else
  {
    if (qword_10069B050 != -1) {
      swift_once();
    }
    uint64_t v17 = v0[10];
    uint64_t v18 = sub_10003293C(v0[9], (uint64_t)qword_1006A73B8);
    sub_10002F034(v18, v17, &qword_1006A3138);
    uint64_t v19 = type metadata accessor for Logger();
    uint64_t v20 = *(void *)(v19 - 8);
    int v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19);
    uint64_t v22 = v0[10];
    if (v21 != 1)
    {
      swift_retain_n();
      uint64_t v23 = Logger.logObject.getter();
      os_log_type_t v24 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = (uint8_t *)swift_slowAlloc();
        uint64_t v26 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v25 = 136315138;
        v59[0] = v26;
        uint64_t v27 = EditNoteActivity.noteID.getter();
        v0[2] = sub_10045DA1C(v27, v28, (uint64_t *)v59);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "Skipping participant validation because the note %s is not shared", v25, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      (*(void (**)(void, uint64_t))(v20 + 8))(v0[10], v19);
      goto LABEL_26;
    }
  }
  sub_10002B754(v22, &qword_1006A3138);
LABEL_26:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v40 = (uint64_t (*)(void))v0[1];
LABEL_27:
  return v40();
}

uint64_t sub_100442B14(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  uint64_t v4 = type metadata accessor for OSSignpostError();
  v3[7] = v4;
  v3[8] = *(void *)(v4 - 8);
  v3[9] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for OSSignpostID();
  v3[10] = v5;
  v3[11] = *(void *)(v5 - 8);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  return _swift_task_switch(sub_100442C50, 0, 0);
}

uint64_t sub_100442C50()
{
  if (qword_10069B058 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for OSSignposter();
  v0[15] = sub_10003293C(v1, (uint64_t)qword_1006A73D0);
  static OSSignpostID.exclusive.getter();
  uint64_t v2 = OSSignposter.logHandle.getter();
  os_signpost_type_t v3 = static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v4 = v0[13];
    uint64_t v5 = v0[10];
    uint64_t v6 = v0[11];
    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    unint64_t v8 = (v6 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v7(v4, v0[14], v5);
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    os_signpost_id_t v10 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v2, v3, v10, "Deserialize", "", v9, 2u);
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    uint64_t v11 = v0[11];

    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    unint64_t v8 = (v11 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[14];
  uint64_t v14 = v0[10];
  uint64_t v15 = v0[11];
  unint64_t v17 = v0[5];
  uint64_t v16 = v0[6];
  uint64_t v18 = v0[4];
  v0[16] = v7;
  v0[17] = v8;
  v7(v12, v13, v14);
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  v0[18] = OSSignpostIntervalState.init(id:isOpen:)();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  v0[19] = v19;
  v0[20] = (v15 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v19(v13, v14);
  uint64_t v20 = *(void *)(v16 + OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_cloudDatabase);
  id v21 = objc_allocWithZone((Class)CKDeserializeRecordModificationsOperation);
  sub_100172484(v18, v17);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v23 = [v21 initWithSerializedModifications:isa];
  v0[21] = v23;
  sub_10017253C(v18, v17);

  [v23 setQualityOfService:25];
  uint64_t v24 = swift_task_alloc();
  v0[22] = v24;
  *(void *)(v24 + 16) = v23;
  *(void *)(v24 + 24) = v20;
  uint64_t v25 = swift_task_alloc();
  v0[23] = v25;
  *(void *)(v25 + 16) = v23;
  uint64_t v26 = (void *)swift_task_alloc();
  v0[24] = v26;
  uint64_t v27 = sub_10002F214(&qword_1006A7788);
  *uint64_t v26 = v0;
  v26[1] = sub_100442F98;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v0 + 2, &unk_1006A7780, v24, sub_100449A88, v25, 0, 0, v27);
}

uint64_t sub_100442F98()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1004432F4;
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = sub_1004430BC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1004430BC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRelease();
  uint64_t v2 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  os_signpost_type_t v3 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v4 = *(void *)(v0 + 64);
    uint64_t v5 = *(void *)(v0 + 72);
    uint64_t v6 = *(void *)(v0 + 56);
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v5, v6) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v7 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 64) + 8))(*(void *)(v0 + 72), *(void *)(v0 + 56));
      uint64_t v7 = "";
    }
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v0 + 152);
    uint64_t v20 = v1;
    uint64_t v13 = *(void *)(v0 + 96);
    uint64_t v12 = *(void *)(v0 + 104);
    uint64_t v14 = *(void *)(v0 + 80);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 128))(v12, v13, v14);
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    os_signpost_id_t v16 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v2, v3, v16, "Deserialize", v7, v15, 2u);
    swift_slowDealloc();

    uint64_t v17 = v13;
    uint64_t v1 = v20;
    v11(v17, v14);
    swift_release();
    v11(v12, v14);
  }
  else
  {
    unint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 152);
    uint64_t v9 = *(void *)(v0 + 96);
    uint64_t v10 = *(void *)(v0 + 80);

    v8(v9, v10);
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v18(v1);
}

uint64_t sub_1004432F4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1004433BC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v12 = sub_10002F214((uint64_t *)&unk_1006A7720);
  uint64_t v6 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  unint64_t v8 = (char *)&v13[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_unfair_lock_lock((os_unfair_lock_t)(a3 + 24));
  sub_1004492C4((void *)(a3 + 16), v13);
  os_unfair_lock_unlock((os_unfair_lock_t)(a3 + 24));
  uint64_t v9 = v13[0];
  if (!(v13[0] >> 62))
  {
    uint64_t v10 = *(void *)((v13[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10) {
      goto LABEL_3;
    }
LABEL_11:
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v10) {
    goto LABEL_11;
  }
LABEL_3:
  if (v10 >= 1)
  {
    uint64_t v11 = 0;
    do
    {
      if ((v9 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      ++v11;
      v13[0] = a1;
      v13[1] = a2;
      sub_100172484(a1, a2);
      sub_10002F214(&qword_10069BAC8);
      AsyncStream.Continuation.yield(_:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v12);
    }
    while (v10 != v11);
LABEL_13:
    swift_bridgeObjectRelease();
    return;
  }
  __break(1u);
}

id sub_1004435E8@<X0>(void **a1@<X0>, void **a2@<X8>)
{
  uint64_t v2 = *a1;
  *a2 = *a1;
  return v2;
}

uint64_t sub_100443618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a4;
  uint64_t v5 = type metadata accessor for FastSyncError();
  v4[8] = v5;
  v4[9] = *(void *)(v5 - 8);
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  uint64_t v6 = sub_10002F214(&qword_1006A7658);
  v4[12] = v6;
  v4[13] = *(void *)(v6 - 8);
  v4[14] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for FastSync.NoteContentMessage();
  v4[15] = v7;
  v4[16] = *(void *)(v7 - 8);
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  uint64_t v8 = sub_10002F214((uint64_t *)&unk_1006A7690);
  v4[19] = v8;
  v4[20] = *(void *)(v8 - 8);
  v4[21] = swift_task_alloc();
  return _swift_task_switch(sub_100443814, 0, 0);
}

uint64_t sub_100443814()
{
  sub_10002F214(&qword_10069BA98);
  AsyncStream.makeAsyncIterator()();
  *(void *)(v0 + 176) = OBJC_IVAR____TtC11MobileNotes38RealtimeCollaborationMessageController_nonFatalErrorCount;
  *(_DWORD *)(v0 + 248) = enum case for FastSyncError.messageSendFailed(_:);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v1;
  void *v1 = v0;
  v1[1] = sub_100443928;
  uint64_t v2 = *(void *)(v0 + 152);
  return AsyncStream.Iterator.next(isolation:)(v0 + 32, 0, 0, v2);
}

uint64_t sub_100443928()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100443A24, 0, 0);
}

uint64_t sub_100443A24()
{
  uint64_t v37 = v0;
  uint64_t v1 = v0[4];
  if (!v1)
  {
    (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
    if (qword_10069B048 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10003293C(v2, (uint64_t)qword_1006A73A0);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "CloudKit publisher task finished", v5, 2u);
      swift_slowDealloc();
    }

    goto LABEL_9;
  }
  if (static Task<>.isCancelled.getter())
  {
    (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
    swift_bridgeObjectRelease();
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  unint64_t v8 = sub_1004492E4(v1);
  v0[24] = v8;
  swift_bridgeObjectRelease();
  uint64_t v35 = v8;
  uint64_t v32 = v0;
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v9 = result;
    if (result) {
      goto LABEL_14;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v31 = (void *)swift_task_alloc();
    v32[25] = v31;
    void *v31 = v32;
    v31[1] = sub_100443ED8;
    return sub_100444B90(v35);
  }
  uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v9) {
    goto LABEL_27;
  }
LABEL_14:
  uint64_t v10 = v9 - 1;
  if (v9 >= 1)
  {
    uint64_t v11 = 0;
    unint64_t v12 = v35 & 0xC000000000000001;
    uint64_t v13 = &qword_10069B000;
    uint64_t v14 = qword_1006A73A0;
    if ((v35 & 0xC000000000000001) == 0) {
      goto LABEL_17;
    }
    while (1)
    {
      for (id i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(); ; id i = *(id *)(v35 + 8 * v11 + 32))
      {
        os_signpost_id_t v16 = i;
        if (v13[9] != -1) {
          swift_once();
        }
        uint64_t v17 = type metadata accessor for Logger();
        sub_10003293C(v17, (uint64_t)v14);
        id v18 = v16;
        uint64_t v19 = Logger.logObject.getter();
        os_log_type_t v20 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v19, v20))
        {
          uint64_t v21 = swift_slowAlloc();
          uint64_t v36 = swift_slowAlloc();
          *(_DWORD *)uint64_t v21 = 136315138;
          os_log_t log = v19;
          uint64_t v22 = v13;
          unint64_t v23 = v12;
          id v24 = [v18 ic_loggingDescription];
          uint64_t v25 = v14;
          uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v34 = v11;
          uint64_t v27 = v10;
          unint64_t v29 = v28;

          unint64_t v12 = v23;
          uint64_t v13 = v22;
          uint64_t v30 = v26;
          uint64_t v14 = v25;
          *(void *)(v21 + 4) = sub_10045DA1C(v30, v29, &v36);
          uint64_t v10 = v27;
          uint64_t v11 = v34;
          swift_bridgeObjectRelease();

          _os_log_impl((void *)&_mh_execute_header, log, v20, "Sending CloudKit record: %s", (uint8_t *)v21, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          if (v10 == v34) {
            goto LABEL_27;
          }
        }
        else
        {

          if (v10 == v11) {
            goto LABEL_27;
          }
        }
        ++v11;
        if (v12) {
          break;
        }
LABEL_17:
        ;
      }
    }
  }
  __break(1u);
  return result;
}