void sub_100004C00(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  NSString v6;
  uint64_t vars8;

  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a4 setTitle:v6 forState:a3];
}

uint64_t sub_100004C74()
{
  uint64_t result = type metadata accessor for SidebarStyle();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_100004D64(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v2 = sub_100029CD8();
  sub_10002D610(v2, v3);
  swift_endAccess();
  sub_10000E5F8();
  return sub_100025E44(a1, &qword_1000F5130);
}

uint64_t _s27MiniTipCollectionHeaderViewCMa()
{
  return self;
}

uint64_t _s17SectionHeaderViewCMa()
{
  return self;
}

void sub_100004E20()
{
  type metadata accessor for GalleryNavigationDestination();
  if (v0 <= 0x3F)
  {
    sub_10000A3A8(319, &qword_1000F4FB0, (void (*)(uint64_t))&type metadata accessor for RootPPTTestCase);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t type metadata accessor for FloatingToolbarViewController()
{
  return self;
}

void sub_100004F74(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 setAccessibilityIdentifier:v4];
}

void sub_100004FD8(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for TipType();
  sub_100022284();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_1000204E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v3, a1, v7);
  int v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 88))(v3, v7);
  if (v11 == enum case for TipType.useSiriToRunShortcut(_:))
  {
    *(void *)(a3 + 24) = type metadata accessor for TipController.UseSiriToRunShortcutTip();
    *(void *)(a3 + 32) = sub_100006FB8(&qword_1000F53C8, (void (*)(uint64_t))type metadata accessor for TipController.UseSiriToRunShortcutTip);
    sub_10002A4E4((uint64_t *)a3);
    sub_10000A8B0(a2);
  }
  else if (v11 == enum case for TipType.none(_:))
  {
    *(void *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  else
  {
    _diagnoseUnexpectedEnumCase<A>(type:)();
    __break(1u);
  }
}

uint64_t sub_100005130()
{
  uint64_t result = type metadata accessor for AggregatedEntry();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1000051C4()
{
  type metadata accessor for RootNavigationDestination();
  if (v0 <= 0x3F)
  {
    sub_10000A3A8(319, &qword_1000F4C88, (void (*)(uint64_t))&type metadata accessor for RootNavigationDestination);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1000052F0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v152 = type metadata accessor for IndexPath();
  uint64_t v143 = *(void *)(v152 - 8);
  uint64_t v4 = __chkstk_darwin(v152);
  v140 = (char *)&v133 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  v154 = (char *)&v133 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  v149 = (char *)&v133 - v9;
  __chkstk_darwin(v8);
  v150 = (char *)&v133 - v10;
  Swift::Int v11 = *(void *)(a1 + 8);
  Swift::Int v12 = _minimumMergeRunLength(_:)(v11);
  if (v12 >= v11)
  {
    if (v11 < 0) {
      goto LABEL_139;
    }
    if (v11) {
      sub_1000632C0(0, v11, 1, (void *)a1);
    }
    return;
  }
  Swift::Int v13 = v12;
  uint64_t v136 = sub_100088994(v11 / 2);
  unint64_t v142 = v14;
  uint64_t v137 = v11;
  if (v11 <= 0) {
    goto LABEL_103;
  }
  Swift::Int v135 = v13;
  v15 = 0;
  v147 = (void (**)(char *, uint64_t))(v143 + 8);
  uint64_t v148 = v143 + 16;
  v157 = (void (**)(char *, uint64_t, uint64_t))(v143 + 32);
  v16 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v17 = v11;
  v151 = (void *)a1;
  while (1)
  {
    v18 = v15 + 1;
    uint64_t v141 = (uint64_t)v15;
    if ((uint64_t)(v15 + 1) >= v17)
    {
      uint64_t v26 = (uint64_t)v15;
      Swift::Int v39 = (Swift::Int)(v15 + 1);
      uint64_t v40 = v152;
    }
    else
    {
      uint64_t v145 = *(void *)a1;
      uint64_t v19 = v145;
      uint64_t v20 = v143;
      uint64_t v158 = *(void *)(v143 + 72);
      uint64_t v21 = v158;
      v22 = *(void (**)(char *, uint64_t, uint64_t))(v143 + 16);
      Swift::Int v156 = v17;
      uint64_t v23 = v152;
      v22(v150, v145 + v158 * (void)v18, v152);
      uint64_t v24 = v19 + v21 * v141;
      v25 = v149;
      v22(v149, v24, v23);
      uint64_t v26 = v141;
      uint64_t v27 = sub_100026570(&qword_1000F5EA8, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      v28 = v150;
      v153 = (char *)v27;
      LODWORD(v155) = dispatch thunk of static Comparable.< infix(_:_:)();
      v29 = *(void (**)(char *, uint64_t))(v20 + 8);
      v29(v25, v23);
      uint64_t v30 = v23;
      Swift::Int v17 = v156;
      v29(v28, v30);
      v31 = (char *)(v26 + 2);
      if (v26 + 2 >= v17)
      {
        Swift::Int v39 = v26 + 2;
      }
      else
      {
        uint64_t v134 = v2;
        v138 = v16;
        uint64_t v146 = v158 * (void)v18;
        uint64_t v32 = v145;
        uint64_t v33 = v158 * (void)v31;
        v34 = v31;
        while (1)
        {
          v35 = v150;
          uint64_t v36 = v152;
          v22(v150, v32 + v33, v152);
          v37 = v149;
          v22(v149, v32 + v146, v36);
          int v38 = dispatch thunk of static Comparable.< infix(_:_:)();
          v29(v37, v36);
          v29(v35, v36);
          if ((v155 ^ v38)) {
            break;
          }
          ++v34;
          v32 += v158;
          Swift::Int v17 = v156;
          if ((uint64_t)v34 >= v156)
          {
            Swift::Int v39 = v156;
            v16 = v138;
            uint64_t v2 = v134;
            uint64_t v26 = v141;
            goto LABEL_13;
          }
        }
        v16 = v138;
        Swift::Int v39 = (Swift::Int)v34;
        uint64_t v2 = v134;
        uint64_t v26 = v141;
        Swift::Int v17 = v156;
      }
LABEL_13:
      a1 = (uint64_t)v151;
      uint64_t v40 = v152;
      if (v155)
      {
        uint64_t v41 = v158;
        if (v39 < v26) {
          goto LABEL_140;
        }
        if (v26 < v39)
        {
          uint64_t v42 = v2;
          v138 = v16;
          uint64_t v43 = 0;
          uint64_t v44 = v158 * (v39 - 1);
          uint64_t v45 = v39 * v158;
          uint64_t v46 = v26;
          uint64_t v47 = v26 * v158;
          v153 = (char *)v39;
          do
          {
            if (v46 != v39 + v43 - 1)
            {
              uint64_t v48 = v42;
              uint64_t v49 = v145;
              if (!v145) {
                goto LABEL_146;
              }
              unint64_t v50 = v145 + v47;
              uint64_t v146 = v145 + v44;
              uint64_t v51 = v152;
              v155 = *v157;
              v155(v140, v145 + v47, v152);
              if (v47 < v44 || v50 >= v49 + v45)
              {
                uint64_t v53 = v146;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v53 = v146;
                if (v47 != v44) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              v155((char *)v53, (uint64_t)v140, v51);
              uint64_t v42 = v48;
              a1 = (uint64_t)v151;
              Swift::Int v39 = (Swift::Int)v153;
              uint64_t v41 = v158;
            }
            ++v46;
            --v43;
            v44 -= v41;
            v45 -= v41;
            v47 += v41;
          }
          while (v46 < v39 + v43);
          v16 = v138;
          uint64_t v40 = v152;
          uint64_t v2 = v42;
          uint64_t v26 = v141;
          Swift::Int v17 = v156;
        }
      }
    }
    if (v39 < v17)
    {
      if (__OFSUB__(v39, v26)) {
        goto LABEL_138;
      }
      if (v39 - v26 < v135)
      {
        if (__OFADD__(v26, v135)) {
          goto LABEL_141;
        }
        if (v26 + v135 >= v17) {
          v54 = (char *)v17;
        }
        else {
          v54 = (char *)(v26 + v135);
        }
        if ((uint64_t)v54 < v26)
        {
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        if ((char *)v39 != v54)
        {
          v138 = v16;
          uint64_t v134 = v2;
          uint64_t v55 = *(void *)(v143 + 72);
          v144 = *(void (**)(char *, uint64_t, uint64_t))(v143 + 16);
          uint64_t v145 = v55;
          uint64_t v158 = v55 * (v39 - 1);
          uint64_t v56 = v39 * v55;
          v139 = v54;
          do
          {
            uint64_t v57 = 0;
            v153 = (char *)v39;
            uint64_t v146 = v56;
            while (1)
            {
              v155 = (void (*)(char *, uint64_t, uint64_t))v26;
              uint64_t v58 = *(void *)a1;
              uint64_t v59 = v56 + v57 + *(void *)a1;
              v60 = v150;
              v61 = v144;
              v144(v150, v59, v40);
              uint64_t v62 = v158 + v57 + v58;
              v63 = (uint64_t *)a1;
              v64 = v149;
              v61(v149, v62, v40);
              sub_100026570(&qword_1000F5EA8, (void (*)(uint64_t))&type metadata accessor for IndexPath);
              LODWORD(v156) = dispatch thunk of static Comparable.< infix(_:_:)();
              v65 = *v147;
              (*v147)(v64, v40);
              v65(v60, v40);
              if ((v156 & 1) == 0) {
                break;
              }
              uint64_t v66 = *v63;
              if (!*v63) {
                goto LABEL_144;
              }
              uint64_t v56 = v146;
              v67 = (char *)(v66 + v158 + v57);
              v68 = *v157;
              uint64_t v69 = v152;
              (*v157)(v154, v66 + v146 + v57, v152);
              uint64_t v40 = v69;
              swift_arrayInitWithTakeFrontToBack();
              v68(v67, (uint64_t)v154, v69);
              v57 -= v145;
              uint64_t v26 = (uint64_t)v155 + 1;
              v70 = v153;
              a1 = (uint64_t)v151;
              if (v153 == (char *)v155 + 1) {
                goto LABEL_46;
              }
            }
            uint64_t v40 = v152;
            v70 = v153;
            a1 = (uint64_t)v63;
            uint64_t v56 = v146;
LABEL_46:
            Swift::Int v39 = (Swift::Int)(v70 + 1);
            v158 += v145;
            v56 += v145;
            uint64_t v26 = v141;
          }
          while ((char *)v39 != v139);
          Swift::Int v39 = (Swift::Int)v139;
          uint64_t v2 = v134;
          v16 = v138;
        }
      }
    }
    if (v39 < v26) {
      goto LABEL_137;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v153 = (char *)v39;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100063B48(0, *((void *)v16 + 2) + 1, 1, v16);
      v16 = v125;
    }
    unint64_t v73 = *((void *)v16 + 2);
    unint64_t v72 = *((void *)v16 + 3);
    unint64_t v74 = v73 + 1;
    if (v73 >= v72 >> 1)
    {
      sub_100063B48(v72 > 1, v73 + 1, 1, v16);
      v16 = v126;
    }
    *((void *)v16 + 2) = v74;
    v75 = v16 + 32;
    v76 = &v16[16 * v73 + 32];
    v77 = v153;
    *(void *)v76 = v26;
    *((void *)v76 + 1) = v77;
    if (v73) {
      break;
    }
    unint64_t v74 = 1;
LABEL_96:
    Swift::Int v17 = *(void *)(a1 + 8);
    v15 = v153;
    if ((uint64_t)v153 >= v17) {
      goto LABEL_104;
    }
  }
  while (1)
  {
    unint64_t v78 = v74 - 1;
    if (v74 >= 4)
    {
      v83 = &v75[2 * v74];
      uint64_t v84 = *(v83 - 8);
      uint64_t v85 = *(v83 - 7);
      BOOL v89 = __OFSUB__(v85, v84);
      uint64_t v86 = v85 - v84;
      if (v89) {
        goto LABEL_122;
      }
      uint64_t v88 = *(v83 - 6);
      uint64_t v87 = *(v83 - 5);
      BOOL v89 = __OFSUB__(v87, v88);
      uint64_t v81 = v87 - v88;
      char v82 = v89;
      if (v89) {
        goto LABEL_123;
      }
      unint64_t v90 = v74 - 2;
      v91 = &v75[2 * v74 - 4];
      uint64_t v93 = *v91;
      uint64_t v92 = v91[1];
      BOOL v89 = __OFSUB__(v92, v93);
      uint64_t v94 = v92 - v93;
      if (v89) {
        goto LABEL_124;
      }
      BOOL v89 = __OFADD__(v81, v94);
      uint64_t v95 = v81 + v94;
      if (v89) {
        goto LABEL_126;
      }
      if (v95 >= v86)
      {
        v113 = &v75[2 * v78];
        uint64_t v115 = *v113;
        uint64_t v114 = v113[1];
        BOOL v89 = __OFSUB__(v114, v115);
        uint64_t v116 = v114 - v115;
        if (v89) {
          goto LABEL_132;
        }
        BOOL v106 = v81 < v116;
        goto LABEL_85;
      }
    }
    else
    {
      if (v74 != 3)
      {
        uint64_t v107 = *((void *)v16 + 4);
        uint64_t v108 = *((void *)v16 + 5);
        BOOL v89 = __OFSUB__(v108, v107);
        uint64_t v100 = v108 - v107;
        char v101 = v89;
        goto LABEL_79;
      }
      uint64_t v80 = *((void *)v16 + 4);
      uint64_t v79 = *((void *)v16 + 5);
      BOOL v89 = __OFSUB__(v79, v80);
      uint64_t v81 = v79 - v80;
      char v82 = v89;
    }
    if (v82) {
      goto LABEL_125;
    }
    unint64_t v90 = v74 - 2;
    v96 = &v75[2 * v74 - 4];
    uint64_t v98 = *v96;
    uint64_t v97 = v96[1];
    BOOL v99 = __OFSUB__(v97, v98);
    uint64_t v100 = v97 - v98;
    char v101 = v99;
    if (v99) {
      goto LABEL_127;
    }
    v102 = &v75[2 * v78];
    uint64_t v104 = *v102;
    uint64_t v103 = v102[1];
    BOOL v89 = __OFSUB__(v103, v104);
    uint64_t v105 = v103 - v104;
    if (v89) {
      goto LABEL_129;
    }
    if (__OFADD__(v100, v105)) {
      goto LABEL_131;
    }
    if (v100 + v105 >= v81)
    {
      BOOL v106 = v81 < v105;
LABEL_85:
      if (v106) {
        unint64_t v78 = v90;
      }
      goto LABEL_87;
    }
LABEL_79:
    if (v101) {
      goto LABEL_128;
    }
    v109 = &v75[2 * v78];
    uint64_t v111 = *v109;
    uint64_t v110 = v109[1];
    BOOL v89 = __OFSUB__(v110, v111);
    uint64_t v112 = v110 - v111;
    if (v89) {
      goto LABEL_130;
    }
    if (v112 < v100) {
      goto LABEL_96;
    }
LABEL_87:
    unint64_t v117 = v78 - 1;
    if (v78 - 1 >= v74)
    {
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
      goto LABEL_133;
    }
    uint64_t v118 = *(void *)a1;
    if (!*(void *)a1) {
      goto LABEL_145;
    }
    v119 = v16;
    v120 = &v75[2 * v117];
    uint64_t v121 = *v120;
    a1 = (uint64_t)&v75[2 * v78];
    uint64_t v122 = *(void *)(a1 + 8);
    sub_1000635D0(v118 + *(void *)(v143 + 72) * *v120, v118 + *(void *)(v143 + 72) * *(void *)a1, v118 + *(void *)(v143 + 72) * v122, v142);
    if (v2) {
      break;
    }
    if (v122 < v121) {
      goto LABEL_119;
    }
    if (v78 > *((void *)v119 + 2)) {
      goto LABEL_120;
    }
    v123 = v119;
    uint64_t *v120 = v121;
    v75[2 * v117 + 1] = v122;
    unint64_t v124 = *((void *)v119 + 2);
    if (v78 >= v124) {
      goto LABEL_121;
    }
    v16 = v123;
    unint64_t v74 = v124 - 1;
    memmove(&v75[2 * v78], (const void *)(a1 + 16), 16 * (v124 - 1 - v78));
    *((void *)v16 + 2) = v124 - 1;
    a1 = (uint64_t)v151;
    if (v124 <= 2) {
      goto LABEL_96;
    }
  }
LABEL_101:
  swift_bridgeObjectRelease();
  if (v137 >= -1) {
    goto LABEL_116;
  }
  __break(1u);
LABEL_103:
  v16 = (char *)_swiftEmptyArrayStorage;
  unint64_t v74 = _swiftEmptyArrayStorage[2];
LABEL_104:
  if (v74 >= 2)
  {
    uint64_t v127 = *(void *)a1;
    while (1)
    {
      unint64_t v128 = v74 - 2;
      if (v74 < 2) {
        break;
      }
      if (!v127) {
        goto LABEL_147;
      }
      uint64_t v129 = *(void *)&v16[16 * v128 + 32];
      a1 = *(void *)&v16[16 * v74 + 24];
      sub_1000635D0(v127 + *(void *)(v143 + 72) * v129, v127 + *(void *)(v143 + 72) * *(void *)&v16[16 * v74 + 16], v127 + *(void *)(v143 + 72) * a1, v142);
      if (v2) {
        goto LABEL_101;
      }
      if (a1 < v129) {
        goto LABEL_134;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100063C20((uint64_t)v16);
        v16 = v132;
      }
      if (v128 >= *((void *)v16 + 2)) {
        goto LABEL_135;
      }
      v130 = (uint64_t *)&v16[16 * v128 + 32];
      uint64_t *v130 = v129;
      v130[1] = a1;
      unint64_t v131 = *((void *)v16 + 2);
      if (v74 > v131) {
        goto LABEL_136;
      }
      memmove(&v16[16 * v74 + 16], &v16[16 * v74 + 32], 16 * (v131 - v74));
      *((void *)v16 + 2) = v131 - 1;
      unint64_t v74 = v131 - 1;
      if (v131 <= 2) {
        goto LABEL_115;
      }
    }
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
    goto LABEL_142;
  }
LABEL_115:
  swift_bridgeObjectRelease();
  if (v137 >= -1)
  {
LABEL_116:
    *(void *)(v136 + 16) = 0;
    swift_bridgeObjectRelease();
    return;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
}

void sub_100005E34(uint64_t a1, void *a2)
{
  sub_100029C7C(0, (unint64_t *)&unk_1000F7100);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 setItems:isa];
}

uint64_t type metadata accessor for Toolbar()
{
  return self;
}

uint64_t sub_100005EDC()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  if (sub_1000225EC(v1, 1, v2) == 1)
  {
    sub_100023268(v1, &qword_1000F8550);
    swift_release();
    uint64_t v3 = v0[25];
    uint64_t v4 = v0[26];
    return _swift_task_switch(sub_1000AF3C0, v3, v4);
  }
  else
  {
    uint64_t v6 = v0[21];
    uint64_t v5 = v0[22];
    uint64_t v7 = v0[19];
    uint64_t v8 = v0[20];
    (*(void (**)(void, uint64_t, uint64_t))(v0[10] + 32))(v0[11], v1, v2);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v5, v7);
    uint64_t v9 = (int *)AsyncMapSequence.Iterator.transform.getter();
    v0[32] = v10;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    unint64_t v14 = (int *)((char *)v9 + *v9);
    Swift::Int v11 = (void *)swift_task_alloc();
    v0[33] = v11;
    *Swift::Int v11 = v0;
    v11[1] = sub_100006528;
    uint64_t v12 = v0[11];
    return ((uint64_t (*)(void *, uint64_t))v14)(v0 + 34, v12);
  }
}

void sub_1000060BC()
{
  type metadata accessor for AutoShortcutAppSection();
  if (v0 <= 0x3F)
  {
    type metadata accessor for TopHitViewColorScheme();
    if (v1 <= 0x3F)
    {
      sub_100007048();
      if (v2 <= 0x3F)
      {
        sub_10002D3D0();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_100006220()
{
  uint64_t v2 = sub_100025A08(&qword_1000F5128);
  uint64_t v3 = sub_1000165CC(v2);
  __chkstk_darwin(v3);
  sub_100021FC4();
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR___WFMainViewController_content);
  if (v4)
  {
    type metadata accessor for LibraryViewController();
    sub_100019868();
    if (swift_dynamicCastClass())
    {
      id v5 = v4;
      sub_100028868();
      uint64_t v7 = v6;
      uint64_t v9 = v8;

      if (v9)
      {
        id v10 = [self hiddenAppBundleIdentifiers];
        uint64_t v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

        sub_100060380(v7, v9, v11);
        char v13 = v12;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v13)
        {
          uint64_t v14 = type metadata accessor for RootNavigationContext();
          sub_10002A674(v1, v15, v16, v14);
          sub_100031DD0();
          sub_100025E44(v1, &qword_1000F5128);
        }
      }
    }
  }
}

uint64_t sub_10000636C()
{
  sub_100018A44();
  int v1 = *(unsigned __int8 *)(v0 + 274);
  if (v1 != *(unsigned __int8 *)(v0 + 273)) {
    sub_1000AF4A4(v1);
  }
  uint64_t v2 = static MainActor.shared.getter();
  *(void *)(v0 + 216) = v2;
  if (v2)
  {
    swift_getObjectType();
    uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v5 = 0;
  }
  *(void *)(v0 + 224) = v3;
  *(void *)(v0 + 232) = v5;
  return _swift_task_switch(sub_100009014, v3, v5);
}

void *sub_10000641C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_100025A08(&qword_1000F5078);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

BOOL sub_100006484()
{
  id v1 = [v0 presentedViewController];
  id v2 = v1;
  if (v1) {

  }
  return v2 != 0;
}

uint64_t sub_100006528()
{
  id v1 = (void *)*v0;
  id v2 = (void *)*v0;
  sub_1000188C4();
  *uint64_t v3 = v2;
  uint64_t v4 = v1[11];
  uint64_t v5 = v1[10];
  uint64_t v6 = v1[9];
  *uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  *((unsigned char *)v2 + 274) = *((unsigned char *)v2 + 272);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  uint64_t v7 = v1[29];
  uint64_t v8 = v1[28];
  return _swift_task_switch(sub_10002B738, v8, v7);
}

void sub_1000066CC(char a1, char a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v2;
  *(unsigned char *)(v5 + 24) = a1;
  if (a2)
  {
    uint64_t v6 = self;
    v9[4] = sub_1000465C8;
    v9[5] = v5;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    v9[2] = sub_10000E51C;
    v9[3] = &unk_1000E5A68;
    uint64_t v7 = _Block_copy(v9);
    id v8 = v2;
    swift_retain();
    swift_release();
    [v6 animateWithDuration:v7 animations:UINavigationControllerHideShowBarDuration];
    swift_release();
    _Block_release(v7);
  }
  else
  {
    sub_10000861C(v2, a1 & 1);
    swift_release();
  }
}

void sub_100006830(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_libraryAccessibilityIdentifier);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease();
  sub_10002B9A4();
}

void sub_100006894(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  [a3 setPlaceholder:v4];
}

void sub_1000068EC(uint64_t *a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_10002AB2C();
    uint64_t v3 = v4;
  }
  uint64_t v5 = *(void *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_1000052F0((uint64_t)v6);
  *a1 = v3;
}

Swift::Int sub_100006994()
{
  Swift::UInt v1 = *v0;
  double v2 = *((double *)v0 + 1);
  Hasher.init(_seed:)();
  sub_100024C08((int)&v4, v1, v2);
  return Hasher._finalize()();
}

void sub_1000069E8(uint64_t a1)
{
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for LibraryViewController();
  [super didMoveToParentViewController:a1];
  sub_1000100DC((unint64_t *)&unk_1000F7850, (void (*)(uint64_t))type metadata accessor for LibraryViewController);
  LibraryView.observeChanges(_:)(a1 != 0);
}

uint64_t sub_100006A88()
{
  uint64_t v2 = sub_100025A08(&qword_1000F5128);
  uint64_t v3 = sub_1000165CC(v2);
  __chkstk_darwin(v3);
  sub_100021FDC();
  uint64_t v4 = type metadata accessor for RootNavigationContext();
  sub_10002A674(v1, v5, v6, v4);
  sub_100019124();
  uint64_t v7 = sub_10003F7D0();
  sub_100025E44(v7, v8);
  uint64_t v9 = (uint64_t *)(v0 + OBJC_IVAR___WFMainViewController_navigationCompletions);
  swift_beginAccess();
  uint64_t v10 = *v9;
  uint64_t v11 = *(void *)(*v9 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = v10 + 40;
    do
    {
      char v13 = *(void (**)(uint64_t))(v12 - 8);
      uint64_t v14 = swift_retain();
      v13(v14);
      swift_release();
      v12 += 16;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
  }
  *uint64_t v9 = (uint64_t)_swiftEmptyArrayStorage;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100006BAC()
{
  uint64_t v1 = OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___editingItems;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___editingItems);
  uint64_t v3 = v2;
  if (v2 == 1)
  {
    sub_100029664();
    uint64_t v3 = v4;
    uint64_t v5 = *(void *)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    swift_bridgeObjectRetain();
    sub_10002B290(v5);
  }
  sub_100006C18(v2);
  return v3;
}

uint64_t sub_100006C18(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100006C28()
{
  uint64_t v1 = OBJC_IVAR___WFSidebarViewController____lazy_storage___sidebarDataSource;
  if (*(void *)(v0 + OBJC_IVAR___WFSidebarViewController____lazy_storage___sidebarDataSource))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR___WFSidebarViewController____lazy_storage___sidebarDataSource);
  }
  else
  {
    uint64_t v2 = sub_10000BD2C(v0);
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t type metadata accessor for SearchStateStore()
{
  return self;
}

uint64_t sub_100006CB4()
{
  uint64_t result = type metadata accessor for LibraryConfiguration();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t _s16EmptySectionCellCMa()
{
  return self;
}

uint64_t sub_100006E00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = Image.init(systemName:)();
  uint64_t v3 = static Font.title3.getter();
  uint64_t result = swift_getKeyPath();
  *a1 = v2;
  a1[1] = result;
  a1[2] = v3;
  return result;
}

uint64_t type metadata accessor for SearchStateController()
{
  return self;
}

uint64_t sub_100006F04()
{
  return swift_getGenericMetadata();
}

void sub_100006F34(uint64_t a1, void *a2)
{
  sub_100029C7C(0, &qword_1000F50A0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 setViewControllers:isa];
}

uint64_t sub_100006FB8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for TipController.UseSiriToRunShortcutTip()
{
  uint64_t result = qword_1000F5478;
  if (!qword_1000F5478) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100007048()
{
  if (!qword_1000F7A80)
  {
    type metadata accessor for ColorScheme();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000F7A80);
    }
  }
}

uint64_t sub_1000070A0()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t _s35SyncUnavailableCollectionHeaderViewCMa()
{
  return self;
}

uint64_t sub_1000070E0()
{
  if (!*(void *)(v0 + OBJC_IVAR____TtC9Shortcuts16SearchController_destinationIdentifier + 8)) {
    return 0x625F686372616573;
  }
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC9Shortcuts16SearchController_destinationIdentifier);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x5F6863726165735FLL;
  v1._object = (void *)0xEB00000000726162;
  String.append(_:)(v1);
  return v3;
}

uint64_t _s10TopHitCellCMa()
{
  return self;
}

void sub_1000071E0()
{
  sub_10002066C();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = v2[3];
  if (v7)
  {
    uint64_t v8 = (uint64_t)v2;
    uint64_t v9 = sub_10002A498(v2, v2[3]);
    uint64_t v10 = *(void *)(v7 - 8);
    __chkstk_darwin(v9);
    sub_1000165D8();
    sub_1000205E8();
    v11();
    uint64_t v12 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v1, v7);
    sub_1000149BC(v8);
  }
  else
  {
    uint64_t v12 = 0;
  }
  [v0 initWithBarButtonSystemItem:v6 target:v12 action:v4];
  swift_unknownObjectRelease();
  sub_10001885C();
}

uint64_t sub_100007348()
{
  type metadata accessor for SidebarView.DataSource(0);
  sub_10002CF08(&qword_1000F68D0, (void (*)(uint64_t))type metadata accessor for SidebarView.DataSource);
  ObservableObject<>.objectWillChange.getter();
  ObservableObjectPublisher.send()();

  return swift_release();
}

uint64_t sub_1000073D0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_searchController);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  char v3 = sub_10002C5D8();

  return v3 & 1;
}

uint64_t sub_10000741C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100025A08(&qword_1000F5130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100007484()
{
  return sub_100021594(v1, 0, 1, v0);
}

uint64_t sub_1000074BC()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_1000074E8()
{
  return swift_unknownObjectWeakInit();
}

uint64_t sub_100007500()
{
  return type metadata accessor for RootNavigationDestination();
}

uint64_t sub_100007524()
{
  return v0;
}

uint64_t sub_10000753C()
{
  sub_100023600(v1);
  sub_100023600(v0);
  return swift_bridgeObjectRetain();
}

unint64_t sub_100007578()
{
  unint64_t result = qword_1000F5518;
  if (!qword_1000F5518)
  {
    sub_10001E8D0(&qword_1000F54E8);
    sub_10000AB40(&qword_1000F53F8, (void (*)(void))sub_10002CC94);
    sub_10000AB40(&qword_1000F5408, (void (*)(void))sub_10002CD2C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5518);
  }
  return result;
}

uint64_t sub_1000076B4(char a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for LibraryViewController();
  [super viewDidAppear:a1 & 1];
  id v3 = [v1 navigationItem];
  [v3 setHidesSearchBarWhenScrolling:1];

  return sub_100014584();
}

uint64_t sub_1000077CC()
{
  uint64_t v1 = *(void *)(qword_1000FF160 + (swift_isaMask & *v0) + 16);
  sub_100025A08((uint64_t *)&unk_1000F7808);
  swift_allocObject();
  uint64_t v2 = v0;
  *(void *)((char *)v0 + v1) = PassthroughSubject.init()();

  return UIHostingController.init(rootView:)();
}

char *sub_10000788C()
{
  sub_100021EF8();
  type metadata accessor for RootNavigationDestination();
  sub_100022284();
  __chkstk_darwin(v2);
  sub_100021FC4();
  (*(void (**)(uint64_t, void))(v3 + 104))(v1, enum case for RootNavigationDestination.allShortcuts(_:));
  id v4 = objc_allocWithZone((Class)type metadata accessor for MainViewController(0));
  objc_super v5 = sub_10000D44C(v0);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v5;
}

uint64_t sub_100007990(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  uint64_t v3 = *(void **)(a1 + 24);
  id v4 = *(id *)(a1 + 72);
  swift_bridgeObjectRetain();
  swift_retain();
  id v5 = v2;
  id v6 = v3;
  return a1;
}

__n128 sub_1000079EC@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v5 = sub_10000E9E8();
  __n128 v11 = *(__n128 *)&UIEdgeInsetsZero.top;
  CGFloat bottom = UIEdgeInsetsZero.bottom;
  CGFloat right = UIEdgeInsetsZero.right;
  type metadata accessor for CGSize(0);
  sub_10002BC94();
  id v8 = a1;
  uint64_t v9 = Dictionary.init(dictionaryLiteral:)();
  *(void *)a2 = sub_10000ECFC;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = v8;
  *(void *)(a2 + 32) = 0;
  __n128 result = v11;
  *(__n128 *)(a2 + 40) = v11;
  *(CGFloat *)(a2 + 56) = bottom;
  *(CGFloat *)(a2 + 64) = right;
  *(void *)(a2 + 72) = 0;
  *(void *)(a2 + 80) = v9;
  return result;
}

uint64_t start(int a1, char **a2)
{
  id v5 = (objc_class *)objc_opt_class();
  NSStringFromClass(v5);
  id v6 = (NSString *)objc_claimAutoreleasedReturnValue();
  uint64_t v7 = UIApplicationMain(a1, a2, 0, v6);

  return v7;
}

void *sub_100007BCC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10002447C(0, v1, 0);
    uint64_t v3 = *(void *)(type metadata accessor for AutoShortcutApp() - 8);
    uint64_t v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = *(void *)(v3 + 72);
    do
    {
      uint64_t v6 = AutoShortcutApp.bundleIdentifier.getter();
      uint64_t v8 = v7;
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_10002447C(v9 > 1, v10 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v10 + 1;
      __n128 v11 = (char *)&_swiftEmptyArrayStorage[2 * v10];
      *((void *)v11 + 4) = v6;
      *((void *)v11 + 5) = v8;
      v4 += v5;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

unint64_t sub_100007D04(uint64_t a1, void *a2)
{
  id v22 = a2;
  uint64_t v3 = type metadata accessor for IndexPath();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100025A08(&qword_1000F5120);
  __chkstk_darwin(v7 - 8);
  unint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v23 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v10 = *(void *)(a1 + 16);
  v17[1] = a1;
  if (v10)
  {
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v11 = v4 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v20 = *(void *)(v11 + 56);
    uint64_t v21 = v12;
    v18 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v19 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    swift_bridgeObjectRetain();
    while (1)
    {
      v21(v9, v13, v3);
      sub_100021594((uint64_t)v9, 0, 1, v3);
      if (sub_1000225EC((uint64_t)v9, 1, v3) == 1) {
        break;
      }
      (*v19)(v6, v9, v3);
      sub_100021E68();
      uint64_t v14 = sub_1000AA7C8((uint64_t)v6);
      swift_release();
      (*v18)(v6, v3);
      if (v14)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v13 += v20;
      if (!--v10) {
        goto LABEL_11;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_11:
    sub_100021594((uint64_t)v9, 1, 1, v3);
  }
  swift_bridgeObjectRelease();
  unint64_t v15 = v23;

  return v15;
}

id sub_100007F94(void *a1, void *a2)
{
  id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithSource:a1 database:a2];

  return v4;
}

uint64_t sub_100007FF0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 56);
  id v4 = *(id *)(a1 + 16);
  swift_bridgeObjectRetain();
  sub_100023600(v2);
  sub_100023600(v3);
  return a1;
}

uint64_t sub_100008168()
{
  id v0 = [self lockedAppBundleIdentifiers];
  uint64_t v1 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v2 = swift_bridgeObjectRetain();
  char v3 = sub_10002AF68(v2, v1);
  swift_bridgeObjectRelease();
  if (v3)
  {
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_10009817C(v1);
    sub_100021E68();
    sub_100018A80();
    return swift_release();
  }
}

void *sub_10000823C()
{
  sub_100021E68();
  type metadata accessor for LibraryDataSource();
  uint64_t v1 = (uint64_t (*)(void))method lookup function for LibraryDataSource();
  char v2 = v1();
  swift_release();
  if (v2)
  {
    id v4 = sub_100026038();
    uint64_t v5 = sub_100008544(v4);
    if (!v5) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t v8 = v5;
    swift_bridgeObjectRetain();
    sub_1000068EC(&v8);
    swift_bridgeObjectRelease();
    unint64_t v3 = sub_100007D04(v8, v0);
  }
  else
  {
    sub_100021E68();
    unint64_t v3 = dispatch thunk of LibraryDataSource.selectedWorkflows.getter();
  }
  unint64_t v6 = v3;
  swift_release();
  return (void *)v6;
}

BOOL sub_100008330()
{
  id v1 = [v0 navigationItem];
  id v2 = [v1 searchController];

  if (v2) {
    return 1;
  }
  id v4 = [v0 traitCollection];
  id v5 = [v4 verticalSizeClass];

  if (v5 != (id)2) {
    return 0;
  }
  id v6 = [v0 traitCollection];
  id v7 = [v6 horizontalSizeClass];

  return v7 == (id)2;
}

void sub_100008410(id a1, NSDictionary *a2, NSError *a3)
{
  unint64_t v3 = a3;
  id v4 = getWFGeneralLogObject();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 136315394;
    id v6 = "-[WFAppDelegate application:willFinishLaunchingWithOptions:]_block_invoke_2";
    __int16 v7 = 2114;
    uint64_t v8 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s Finished updating remote user defaults with error: %{public}@", (uint8_t *)&v5, 0x16u);
  }
}

id sub_1000084D0()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for SearchController();
  [super dealloc];
}

uint64_t sub_100008544(void *a1)
{
  id v2 = [a1 indexPathsForSelectedItems];

  if (!v2) {
    return 0;
  }
  type metadata accessor for IndexPath();
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_1000085AC(char a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for MainViewController(0);
  [super viewDidAppear:a1 & 1];
  type metadata accessor for ActionDrawerDataSource();
  static ActionDrawerDataSource.shared.getter();
  swift_release();
  type metadata accessor for GlyphRegistry();
  static GlyphRegistry.shared.getter();
  return swift_release();
}

void sub_10000861C(void *a1, char a2)
{
  id v4 = [a1 view];
  if (!v4)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return;
  }
  int v5 = v4;
  double v6 = 1.0;
  if (a2) {
    double v6 = 0.0;
  }
  [v4 setAlpha:v6];

  id v7 = [a1 view];
  if (!v7) {
    goto LABEL_9;
  }
  id v8 = v7;
  [v7 setHidden:a2 & 1];
}

void sub_1000086D4(id a1)
{
  memset(&v5, 0, sizeof(v5));
  if (dladdr(sub_10002491C, &v5) && v5.dli_fname)
  {
    id v1 = [objc_alloc((Class)NSURL) initFileURLWithFileSystemRepresentation:v5.dli_fname isDirectory:0 relativeToURL:0];
    id v2 = (void *)_CFBundleCopyBundleURLForExecutableURL();
    uint64_t v3 = +[NSBundle bundleWithURL:v2];
    id v4 = (void *)qword_1000FEDB8;
    qword_1000FEDB8 = v3;
  }
  else
  {
    id v1 = getWFGeneralLogObject();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315138;
      id v7 = "WFCurrentBundle_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "%s WFLocalizedString failed to locate current bundle", buf, 0xCu);
    }
  }
}

void sub_1000087FC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    id v7 = [v5 inputStream];
    [v7 open];
    id v18 = 0;
    id v8 = +[NSPropertyListSerialization propertyListWithStream:v7 options:0 format:0 error:&v18];
    id v9 = v18;
    uint64_t v10 = objc_opt_class();
    id v11 = v8;
    if (v11 && (objc_opt_isKindOfClass() & 1) == 0)
    {
      uint64_t v13 = getWFGeneralLogObject();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_FAULT))
      {
        uint64_t v14 = objc_opt_class();
        *(_DWORD *)buf = 136315906;
        uint64_t v20 = "WFEnforceClass";
        __int16 v21 = 2114;
        id v22 = v11;
        __int16 v23 = 2114;
        uint64_t v24 = v14;
        __int16 v25 = 2114;
        uint64_t v26 = v10;
        id v15 = v14;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_FAULT, "%s Warning: %{public}@ is of type %{public}@, not %{public}@! Falling back to nil.", buf, 0x2Au);
      }
      id v12 = 0;
    }
    else
    {
      id v12 = v11;
    }

    [v7 close];
    if (v12) {
      [*(id *)(a1 + 32) setValuesForKeysWithDictionary:v12];
    }
  }
  else
  {
    id v9 = 0;
    id v12 = 0;
  }
  uint64_t v16 = *(void *)(a1 + 40);
  if (v16)
  {
    if (v6) {
      id v17 = v6;
    }
    else {
      id v17 = v9;
    }
    (*(void (**)(uint64_t, id, id))(v16 + 16))(v16, v12, v17);
  }
}

uint64_t sub_1000089EC()
{
  type metadata accessor for LibraryDataSource();
  id v0 = (uint64_t (*)(void))method lookup function for LibraryDataSource();

  return v0();
}

BOOL sub_100008A34()
{
  if (!swift_unknownObjectWeakLoadStrong()) {
    return 1;
  }
  swift_getObjectType();
  if (dispatch thunk of LibraryDelegate.isPresentingViewController.getter())
  {
    swift_unknownObjectRelease();
    return 0;
  }
  else
  {
    id v2 = [v0 presentedViewController];

    swift_unknownObjectRelease();
    return v2 == 0;
  }
}

uint64_t sub_100008AD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = sub_10002A628();
  sub_10001B470(v7, v8, v6);
  if (v9)
  {
    sub_100025E44(a1, &qword_1000F5100);
  }
  else
  {
    TaskPriority.rawValue.getter();
    sub_100016618();
    v10();
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  uint64_t v11 = sub_10001B6E8();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  return swift_task_create();
}

void sub_100008C28(void *a1)
{
}

id sub_100008C80()
{
  uint64_t v1 = OBJC_IVAR____TtC9Shortcuts21SearchStateController_stateStore;
  id v2 = objc_allocWithZone((Class)type metadata accessor for SearchStateStore());
  uint64_t v3 = v0;
  *(void *)&v0[v1] = [v2 init];
  swift_unknownObjectWeakInit();
  *(void *)&v3[OBJC_IVAR____TtC9Shortcuts21SearchStateController_pendingTraitCollection] = 0;

  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for SearchStateController();
  return [super init];
}

id sub_100008D20(uint64_t a1, uint64_t a2)
{
  v5[4] = a1;
  v5[5] = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = sub_100097AE8;
  v5[3] = &unk_1000E7708;
  id v2 = _Block_copy(v5);
  id v3 = [(id)swift_getObjCClassFromMetadata() elementWithProvider:v2];
  _Block_release(v2);
  swift_release();
  return v3;
}

uint64_t sub_100008DD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_100025A08(&qword_1000F5538);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  objc_super v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100025A08(&qword_1000F5540);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  char v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001E88C(&qword_1000F5548, &qword_1000F5540);
  static PredicateExpressions.build_Arg<A>(_:)();
  v11[15] = 1;
  static PredicateExpressions.build_Arg<A>(_:)();
  a1[3] = sub_100025A08(&qword_1000F5550);
  a1[4] = sub_10002D800();
  sub_10002A4E4(a1);
  sub_10001E88C(&qword_1000F5570, &qword_1000F5538);
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_100009014()
{
  uint64_t v1 = v0[27];
  v0[30] = AsyncMapSequence.Iterator.baseIterator.modify();
  sub_10001E88C(&qword_1000F8580, &qword_1000F8560);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[31] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10002B798;
  uint64_t v3 = v0[8];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v3, v1, &protocol witness table for MainActor);
}

void sub_100009110()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void **)(Strong + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customLayoutButton);
    id v3 = v2;

    if (v2)
    {
      id v4 = [v3 imageView];

      if (v4)
      {
        CGAffineTransformMakeScale(&v9, 0.95, 0.95);
        [v4 setTransform:&v9];
      }
    }
  }
  swift_beginAccess();
  uint64_t v5 = swift_unknownObjectWeakLoadStrong();
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    uint64_t v7 = *(void **)(v5 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customLayoutButton);
    id v8 = v7;

    if (v7)
    {
      [v8 setAlpha:0.0];
    }
  }
}

uint64_t sub_10000923C()
{
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 128);
  sub_10002A498(*(void **)(v0 + 48), *(void *)(*(void *)(v0 + 48) + 24));
  Tip.shouldDisplayUpdates.getter();
  AsyncMapSequence.base.getter();
  sub_10001E88C(&qword_1000F8578, &qword_1000F8558);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  AsyncMapSequence.transform.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  AsyncMapSequence.Iterator.init(_:transform:)();
  uint64_t v4 = static MainActor.shared.getter();
  *(void *)(v0 + 216) = v4;
  if (v4)
  {
    swift_getObjectType();
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *(void *)(v0 + 224) = v5;
  *(void *)(v0 + 232) = v7;
  return _swift_task_switch(sub_100009014, v5, v7);
}

uint64_t destroy for LibraryTable(uint64_t a1)
{
  swift_release();

  swift_unknownObjectWeakDestroy();

  return swift_release();
}

void *sub_100009420(uint64_t a1)
{
  uint64_t v14 = type metadata accessor for LibrarySectionOptions.SectionType();
  uint64_t v3 = *(void *)(v14 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    v12[1] = v1;
    id v15 = _swiftEmptyArrayStorage;
    sub_10002ABE0();
    uint64_t v7 = v15;
    uint64_t v8 = *(void *)(type metadata accessor for LibrarySectionOptions() - 8);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v13 = *(void *)(v8 + 72);
    do
    {
      LibrarySectionOptions.sectionType.getter();
      id v15 = v7;
      unint64_t v10 = v7[2];
      if (v10 >= v7[3] >> 1)
      {
        sub_10002ABE0();
        uint64_t v7 = v15;
      }
      v7[2] = v10 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))((unint64_t)v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v10, v5, v14);
      v9 += v13;
      --v6;
    }
    while (v6);
  }
  return v7;
}

void sub_100009608()
{
  type metadata accessor for Date();
  sub_100022284();
  uint64_t v2 = v1;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v5 = __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  if ([self isSyncEnabled])
  {
    uint64_t v21 = v2;
    uint64_t v6 = self;
    id v7 = [v6 syncShortcutsUserDefaults];
    unsigned int v8 = [v7 BOOLForKey:WFCloudKitLibraryFetchedKey];

    if (v8)
    {
      id v9 = [v0 traitCollection];
      id v10 = [v9 horizontalSizeClass];

      if (v10 != (id)2)
      {
        id v11 = [v6 syncShortcutsUserDefaults];
        uint64_t v12 = WFSyncUnavailableMessageDismissedByUserKey;
        unsigned int v13 = [v11 BOOLForKey:WFSyncUnavailableMessageDismissedByUserKey];

        if (v13)
        {
          id v14 = [v6 syncShortcutsUserDefaults];
          id v15 = [v14 integerForKey:WFSyncUnavailableMessageCountKey];

          if (v15 == (id)1)
          {
            id v16 = [v6 syncShortcutsUserDefaults];
            id v17 = [v16 objectForKey:WFSyncUnavailableMessageDateKey];

            if (v17)
            {
              _bridgeAnyObjectToAny(_:)();
              swift_unknownObjectRelease();
              sub_10006634C(&v22, &v23);
              swift_dynamicCast();
              Date.init()();
              Date.addingTimeInterval(_:)();
              char v18 = static Date.> infix(_:_:)();
              uint64_t v19 = *(void (**)(void))(v21 + 8);
              sub_100025F40();
              v19();
              sub_100025F40();
              v19();
              if (v18)
              {
                id v20 = [v6 syncShortcutsUserDefaults];
                [v20 setBool:0 forKey:v12];
              }
              sub_100025F40();
              v19();
            }
            else
            {
              __break(1u);
            }
          }
        }
      }
    }
  }
}

id sub_10000992C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v6 = a2;
  if (a2)
  {
    id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v6 = [v7 initWithSymbolName:v8 symbolColor:a3 background:a4];
  }
  else
  {
  }
  return v6;
}

void sub_100009AA4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void **)(Strong + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customLayoutButton);
    id v3 = v2;

    if (v2)
    {
      id v4 = [v3 imageView];

      if (v4)
      {
        v9[0] = 0x3FF0000000000000;
        v9[1] = 0;
        v9[2] = 0;
        v9[3] = 0x3FF0000000000000;
        v9[4] = 0;
        v9[5] = 0;
        [v4 setTransform:v9];
      }
    }
  }
  swift_beginAccess();
  uint64_t v5 = swift_unknownObjectWeakLoadStrong();
  if (v5)
  {
    id v6 = (void *)v5;
    id v7 = *(void **)(v5 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customLayoutButton);
    id v8 = v7;

    if (v7)
    {
      [v8 setAlpha:1.0];
    }
  }
}

uint64_t sub_100009BBC()
{
  uint64_t v2 = v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_tip;
  sub_100021F8C();
  sub_100009CE8(v2, (uint64_t)v9);
  uint64_t v3 = v10;
  if (v10)
  {
    sub_10002A498(v9, v10);
    sub_100025A64();
    uint64_t v5 = v4;
    __chkstk_darwin(v6);
    sub_100021FC4();
    (*(void (**)(uint64_t))(v5 + 16))(v1);
    sub_100023268((uint64_t)v9, &qword_1000F7920);
    char v7 = Tip.shouldDisplay.getter();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
  }
  else
  {
    sub_100023268((uint64_t)v9, &qword_1000F7920);
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_100009CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100025A08(&qword_1000F7920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100009D50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_100025A08(&qword_1000F54E8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100025A08(&qword_1000F54F0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001E88C(&qword_1000F54F8, &qword_1000F54F0);
  static PredicateExpressions.build_Arg<A>(_:)();
  memset(v11, 0, sizeof(v11));
  sub_100025A08(&qword_1000F53F0);
  static PredicateExpressions.build_Arg<A>(_:)();
  a1[3] = sub_100025A08(&qword_1000F5500);
  a1[4] = sub_10002D6EC();
  sub_10002A4E4(a1);
  sub_10001E88C(&qword_1000F5520, &qword_1000F54E8);
  sub_10000AB40(&qword_1000F5528, (void (*)(void))sub_10002CCE0);
  static PredicateExpressions.build_NotEqual<A, B>(lhs:rhs:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_100009FD0()
{
  type metadata accessor for SidebarStyle();
  if (v0 <= 0x3F)
  {
    sub_10000A348(319, &qword_1000F64D0, &qword_1000F5130, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
    if (v1 <= 0x3F)
    {
      sub_10000A3F8(319, &qword_1000F4C88, (uint64_t (*)(uint64_t))&type metadata accessor for RootNavigationDestination, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      if (v2 <= 0x3F)
      {
        sub_10000A348(319, &qword_1000F64D8, (uint64_t *)&unk_1000F8480, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
        if (v3 <= 0x3F)
        {
          sub_10000A3F8(319, &qword_1000F64E0, (uint64_t (*)(uint64_t))&type metadata accessor for AutoShortcutsAppsDataSource, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
          if (v4 <= 0x3F)
          {
            sub_10000A3F8(319, &qword_1000F64E8, (uint64_t (*)(uint64_t))&type metadata accessor for EditMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
            if (v5 <= 0x3F)
            {
              sub_10000A348(319, &qword_1000F64F0, &qword_1000F64F8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
              if (v6 <= 0x3F)
              {
                sub_10002D42C();
                if (v7 <= 0x3F) {
                  swift_updateClassMetadata2();
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_10000A348(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = sub_10001E8D0(a3);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_10000A3A8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_100019868();
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_10000A3F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_10000A45C()
{
  sub_10002066C();
  type metadata accessor for LibraryEditingOption();
  sub_100022284();
  uint64_t v33 = v1;
  __chkstk_darwin(v2);
  type metadata accessor for LibraryEditingBehavior();
  sub_100022284();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LibraryConfiguration();
  sub_100022284();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_10001899C();
  sub_100021F8C();
  sub_1000205E8();
  v10();
  LibraryConfiguration.editingBehavior.getter();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0, v6);
  sub_100021DB4();
  int v12 = v11();
  if (v12 == enum case for LibraryEditingBehavior.option(_:))
  {
    sub_10000F250(v0);
    uint64_t v13 = sub_100018DC0();
    v14(v13);
  }
  else if (v12 == enum case for LibraryEditingBehavior.options(_:))
  {
    uint64_t v15 = sub_100018DC0();
    v16(v15);
    uint64_t v17 = *(void *)v5;
    uint64_t v18 = *(void *)(*(void *)v5 + 16);
    if (v18)
    {
      v32[0] = v0;
      v32[1] = v17;
      uint64_t v19 = *(void (**)(uint64_t))(v33 + 16);
      unint64_t v20 = v17 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80));
      int v21 = enum case for LibraryEditingOption.selection(_:);
      uint64_t v22 = *(void *)(v33 + 72);
      while (1)
      {
        uint64_t v23 = sub_10001B6DC();
        v19(v23);
        uint64_t v24 = sub_100018D14();
        if (v25(v24) == v21) {
          break;
        }
        uint64_t v26 = sub_100018D14();
        v27(v26);
        v20 += v22;
        if (!--v18) {
          goto LABEL_8;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v30 = sub_100018D14();
      v31(v30);
      swift_bridgeObjectRelease();
      sub_10000F250(v32[0]);
    }
    else
    {
LABEL_8:
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v28 = sub_100018DC0();
    v29(v28);
  }
  sub_10001885C();
}

void *initializeWithCopy for LibraryTable(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = (void *)a2[2];
  a1[2] = v5;
  swift_retain();
  id v6 = v5;
  swift_unknownObjectWeakCopyInit();
  uint64_t v7 = (void *)a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  id v9 = v7;
  swift_retain();
  return a1;
}

void sub_10000A8B0(void *a1)
{
  type metadata accessor for TipController.UseSiriToRunShortcutTip();
  [self isHeySiriEnabled];
  Tips.Parameter.init<A>(_:_:_:_:)();
  sub_100025A08(&qword_1000F53F0);
  sub_10000AB40(&qword_1000F53F8, (void (*)(void))sub_10002CC94);
  uint64_t v3 = sub_10000AB40(&qword_1000F5408, (void (*)(void))sub_10002CD2C);
  Tips.Parameter.init<A>(_:_:_:_:)();
  id v2 = [a1 mostRunOrLatestImportedVisibleShortcut:v3];
  sub_10002CB34(v2);
}

void sub_10000AA64()
{
  if (!qword_1000F5490)
  {
    sub_10001E8D0(&qword_1000F53F0);
    sub_10000AB40(&qword_1000F53F8, (void (*)(void))sub_10002CC94);
    sub_10000AB40(&qword_1000F5408, (void (*)(void))sub_10002CD2C);
    unint64_t v0 = type metadata accessor for Tips.Parameter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000F5490);
    }
  }
}

uint64_t sub_10000AB40(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001E8D0(&qword_1000F53F0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_10000ABB0(uint64_t a1, char a2)
{
  uint64_t v5 = OBJC_IVAR____TtC9Shortcuts29FloatingToolbarViewController_toolbar;
  type metadata accessor for Toolbar();
  id v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v7 = v2;
  *(void *)&v2[v5] = [v6 init];
  *(void *)&v7[OBJC_IVAR____TtC9Shortcuts29FloatingToolbarViewController_bottomConstraint] = 0;
  *(void *)&v7[OBJC_IVAR____TtC9Shortcuts29FloatingToolbarViewController_backgroundColor] = 0;

  v13.receiver = v7;
  v13.super_class = (Class)type metadata accessor for FloatingToolbarViewController();
  uint64_t v8 = (char *)[v13 initWithNibName:0 bundle:0];
  id v9 = *(void **)&v8[OBJC_IVAR____TtC9Shortcuts29FloatingToolbarViewController_toolbar];
  uint64_t v10 = v8;
  [v9 setTranslucent:a2 & 1];
  id v11 = v9;
  sub_100005E34(a1, v11);

  return v10;
}

unint64_t sub_10000ADBC()
{
  sub_10001EEA8();
  unint64_t v0 = (unint64_t)sub_10000823C();
  if (v0 >> 62) {
    uint64_t v1 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v1 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  unint64_t result = sub_100006BAC();
  if (result)
  {
    unint64_t v3 = result;
    if (result >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v4 = result;
      if (result) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v4 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t result = swift_bridgeObjectRetain();
      if (v4)
      {
LABEL_6:
        if (v4 < 1)
        {
          __break(1u);
          return result;
        }
        for (uint64_t i = 0; i != v4; ++i)
        {
          if ((v3 & 0xC000000000000001) != 0) {
            id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v6 = *(id *)(v3 + 8 * i + 32);
          }
          uint64_t v7 = v6;
          [v6 setEnabled:v1 > 0];
        }
      }
    }
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_10000B048(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  v17[1] = a4;
  void v17[2] = a3;
  uint64_t v8 = type metadata accessor for LibraryConfiguration();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v5 + qword_1000F7FD0) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v12 = qword_1000F7FE8;
  type metadata accessor for UUID();
  sub_10001D3D0(&qword_1000F6980, (void (*)(uint64_t))&type metadata accessor for UUID);
  swift_retain();
  *(void *)(v5 + v12) = Dictionary.init(dictionaryLiteral:)();
  *(void *)(v5 + qword_1000F7FF0) = 0;
  *(unsigned char *)(v5 + qword_1000F7FF8) = 0;
  *(void *)(v5 + qword_1000F7FD8) = a1;
  swift_unknownObjectWeakAssign();
  id v13 = a1;
  swift_release();
  id v14 = &a2[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
  LibraryConfiguration.layoutOverride.getter();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v15 = LibraryDataSource.init(layoutMode:canChangeLayoutModes:shortcutMoveService:database:)();

  return v15;
}

uint64_t sub_10000B27C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100025A08(&qword_1000F82A8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v22 - v8;
  uint64_t v10 = sub_100025A08((uint64_t *)&unk_1000F82B0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  id v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v22 - v14;
  sub_10000CCAC((uint64_t)&v22 - v14);
  if (a1[5])
  {
    uint64_t v16 = swift_allocObject();
    memcpy((void *)(v16 + 16), a1, 0x48uLL);
    sub_100007FF0((uint64_t)a1);
    sub_100025A08(&qword_1000F5FF8);
    sub_10002D290();
    Button.init(action:label:)();
    uint64_t v17 = 0;
  }
  else
  {
    uint64_t v17 = 1;
  }
  uint64_t v18 = sub_100025A08(&qword_1000F6E00);
  sub_100021594((uint64_t)v9, v17, 1, v18);
  sub_100025DE8((uint64_t)v15, (uint64_t)v13, (uint64_t *)&unk_1000F82B0);
  sub_100025DE8((uint64_t)v9, (uint64_t)v7, &qword_1000F82A8);
  sub_100025DE8((uint64_t)v13, a2, (uint64_t *)&unk_1000F82B0);
  uint64_t v19 = sub_100025A08((uint64_t *)&unk_1000F82C0);
  uint64_t v20 = a2 + *(int *)(v19 + 48);
  *(void *)uint64_t v20 = 0;
  *(unsigned char *)(v20 + 8) = 1;
  sub_100025DE8((uint64_t)v7, a2 + *(int *)(v19 + 64), &qword_1000F82A8);
  sub_100025E44((uint64_t)v9, &qword_1000F82A8);
  sub_100025E44((uint64_t)v15, (uint64_t *)&unk_1000F82B0);
  sub_100025E44((uint64_t)v7, &qword_1000F82A8);
  return sub_100025E44((uint64_t)v13, (uint64_t *)&unk_1000F82B0);
}

void sub_10000B4F0()
{
  sub_10002066C();
  uint64_t v2 = sub_100025A08(&qword_1000F53D0);
  sub_100022284();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_10001888C();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_100025A08(&qword_1000F5418);
  sub_100022284();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_1000074A4();
  sub_100025A08(&qword_1000F54E0);
  type metadata accessor for Tips.Rule();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1000BABE0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v1, v0, v9);
  Tips.Rule.init<A>(_:_:)();
  uint64_t v13 = type metadata accessor for TipController.UseSiriToRunShortcutTip();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v8, v0 + *(int *)(v13 + 20), v2);
  sub_100025A08(&qword_1000F53F0);
  sub_10000AB40(&qword_1000F53F8, (void (*)(void))sub_10002CC94);
  sub_10000AB40(&qword_1000F5408, (void (*)(void))sub_10002CD2C);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  swift_bridgeObjectRelease();
  static Tips.RuleBuilder.buildPartialBlock(first:)();
  swift_bridgeObjectRelease();
  sub_10001885C();
}

void sub_10000B794(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    uint64_t v5 = *(void **)(Strong + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customLayoutButton);
    id v6 = v5;

    if (v5)
    {
      LibraryLayoutMode.symbolName.getter();
      NSString v7 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v6 setSymbolName:v7 pointSizeToWidthRatio:3.3];
    }
  }
  swift_beginAccess();
  uint64_t v8 = swift_unknownObjectWeakLoadStrong();
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    uint64_t v10 = *(void **)(v8 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customLayoutButton);
    id v11 = v10;

    if (v10)
    {
      uint64_t v12 = LibraryLayoutMode.accessibilityLabel.getter();
      sub_1000A1430(v12, v13, v11);
    }
  }
  uint64_t v14 = self;
  v16[4] = sub_10002BCE8;
  v16[5] = a2;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_10000E51C;
  v16[3] = &unk_1000E7870;
  uint64_t v15 = _Block_copy(v16);
  swift_retain();
  swift_release();
  [v14 animateWithDuration:v15 animations:0.125];
  _Block_release(v15);
}

uint64_t sub_10000B954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  *(unsigned char *)(v6 + 273) = a5;
  *(void *)(v6 + 48) = a4;
  *(void *)(v6 + 56) = a6;
  sub_100025A08(&qword_1000F8550);
  *(void *)(v6 + 64) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Tips.Status();
  *(void *)(v6 + 72) = v7;
  *(void *)(v6 + 80) = *(void *)(v7 - 8);
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 96) = sub_100025A08(&qword_1000F8558);
  *(void *)(v6 + 104) = swift_task_alloc();
  *(void *)(v6 + 112) = sub_100025A08(&qword_1000F8560);
  *(void *)(v6 + 120) = swift_task_alloc();
  uint64_t v8 = sub_100025A08(&qword_1000F8568);
  *(void *)(v6 + 128) = v8;
  *(void *)(v6 + 136) = *(void *)(v8 - 8);
  *(void *)(v6 + 144) = swift_task_alloc();
  uint64_t v9 = sub_100025A08(&qword_1000F8570);
  *(void *)(v6 + 152) = v9;
  *(void *)(v6 + 160) = *(void *)(v9 - 8);
  *(void *)(v6 + 168) = swift_task_alloc();
  *(void *)(v6 + 176) = swift_task_alloc();
  *(void *)(v6 + 184) = type metadata accessor for MainActor();
  *(void *)(v6 + 192) = static MainActor.shared.getter();
  uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v6 + 200) = v11;
  *(void *)(v6 + 208) = v10;
  return _swift_task_switch(sub_10000923C, v11, v10);
}

void sub_10000BBB8(uint64_t a1)
{
  uint64_t v2 = self;
  id v3 = [v2 defaultCenter];
  [v3 addObserver:a1 selector:"keyboardWillChange:" name:WFKeyboardWillChangeNotification object:0];

  uint64_t v4 = self;
  id v5 = [v4 workflowUserDefaults];
  [v5 addObserver:a1 forKeyPath:WFCloudKitSyncEnabledKey options:0 context:0];

  id v6 = [v4 syncShortcutsUserDefaults];
  [v6 addObserver:a1 forKeyPath:WFCloudKitLibraryFetchedKey options:0 context:0];

  id v7 = [v2 defaultCenter];
  [v7 addObserver:a1 selector:"didBecomeActive:" name:UIApplicationDidBecomeActiveNotification object:0];
}

uint64_t sub_10000BD2C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SidebarStyle();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v46 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100025A08(&qword_1000F5130);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for RootNavigationDestination();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v45 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v43 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v43 - v15;
  uint64_t v17 = (void *)(a1 + OBJC_IVAR___WFSidebarViewController_rootView);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v19 = (void *)Strong;
    uint64_t v44 = v17;
    uint64_t v20 = (uint64_t)v7;
    uint64_t v21 = a1;
    uint64_t v22 = v14;
    uint64_t v23 = v3;
    uint64_t v24 = v2;
    uint64_t v25 = v9;
    uint64_t v26 = v8;
    uint64_t v27 = v16;
    uint64_t v28 = Strong + OBJC_IVAR___WFMainViewController_currentDestination;
    swift_beginAccess();
    uint64_t v29 = v28;
    uint64_t v16 = v27;
    uint64_t v8 = v26;
    uint64_t v9 = v25;
    uint64_t v2 = v24;
    uint64_t v3 = v23;
    uint64_t v14 = v22;
    a1 = v21;
    id v7 = (char *)v20;
    sub_10000741C(v29, v20);

    if (sub_1000225EC(v20, 1, v8) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v16, v20, v8);
      goto LABEL_9;
    }
  }
  else
  {
    sub_100021594((uint64_t)v7, 1, 1, v8);
  }
  uint64_t v30 = swift_unknownObjectWeakLoadStrong();
  if (v30)
  {
    v31 = (void *)v30;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v14, v30 + OBJC_IVAR___WFMainViewController_initialDestination, v8);

    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v16, v14, v8);
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v16, enum case for RootNavigationDestination.allShortcuts(_:), v8);
  }
  sub_100012400((uint64_t)v7, &qword_1000F5130);
LABEL_9:
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v46, a1 + OBJC_IVAR___WFSidebarViewController_style, v2);
  uint64_t v32 = *(void **)(a1 + OBJC_IVAR___WFSidebarViewController_database);
  uint64_t v33 = swift_unknownObjectWeakLoadStrong();
  uint64_t v44 = v32;
  if (v33)
  {
    v34 = (void *)v33;
    v35 = *(void **)(v33 + OBJC_IVAR___WFMainViewController_autoShortcutsDataSource);
    id v36 = v32;
    swift_bridgeObjectRetain();
    id v37 = v35;
  }
  else
  {
    id v38 = objc_allocWithZone((Class)type metadata accessor for AutoShortcutsAppsDataSource());
    id v39 = v32;
    swift_bridgeObjectRetain();
    AutoShortcutsAppsDataSource.init(organizedCollections:)();
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v45, v16, v8);
  type metadata accessor for SidebarView.DataSource(0);
  swift_allocObject();
  swift_retain();
  sub_100015BB8();
  uint64_t v41 = v40;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
  *(void *)(v41 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_delegate + 8) = &off_1000E7898;
  swift_unknownObjectWeakAssign();
  return v41;
}

id sub_10000C24C(uint64_t a1)
{
  id v2 = [*(id *)(v1+ OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_hostingController) contentScrollViewForEdge:a1];

  return v2;
}

uint64_t sub_10000C290@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AggregatedEntry();
  sub_10001C100(v3);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_1000101B0(v5, a1);
}

void sub_10000C2E0()
{
  sub_10002066C();
  uint64_t v4 = v3;
  uint64_t v5 = sub_100025A08(&qword_1000F5128);
  uint64_t v6 = sub_1000165CC(v5);
  __chkstk_darwin(v6);
  sub_100021DD8();
  uint64_t v7 = sub_100025A08(&qword_1000F5130);
  uint64_t v8 = sub_1000165CC(v7);
  __chkstk_darwin(v8);
  sub_100021FDC();
  type metadata accessor for RootNavigationDestination();
  sub_100022284();
  __chkstk_darwin(v9);
  sub_10003F748();
  uint64_t v10 = type metadata accessor for RootNavigationContext.TransitionType();
  uint64_t v11 = sub_1000165CC(v10);
  __chkstk_darwin(v11);
  sub_10001C0D0();
  uint64_t v12 = sub_100025A08(&qword_1000F50B8);
  uint64_t v13 = sub_1000165CC(v12);
  __chkstk_darwin(v13);
  sub_1000165D8();
  uint64_t v14 = type metadata accessor for RootNavigationContext();
  sub_100022284();
  __chkstk_darwin(v15);
  sub_100018874();
  BOOL v16 = [v4 horizontalSizeClass] == (id)1;
  *((unsigned char *)v4 + OBJC_IVAR___WFMainViewController_display) = v16;
  uint64_t v17 = type metadata accessor for RootPPTTestCase();
  sub_10002A674(v2, v18, v19, v17);
  static RootNavigationContext.TransitionType.default.getter();
  RootNavigationContext.init(dismissOccludingViewController:clearSearchState:animateTransition:createAutomation:transitionType:pptTest:)();
  swift_beginAccess();
  uint64_t v20 = sub_10003F8F8();
  sub_100019760(v20, v21, &qword_1000F5130);
  sub_1000215BC(v1);
  if (v22)
  {
    uint64_t v23 = sub_10003F9FC();
    v24(v23);
    sub_100025E44(v1, &qword_1000F5130);
  }
  else
  {
    sub_100020698();
    v25();
    sub_10003FA8C();
    sub_1000205E8();
    v26();
    sub_100021594(v0, 0, 1, v14);
    type metadata accessor for MainViewController(0);
    sub_1000119DC(&qword_1000F50F8, (void (*)(uint64_t))type metadata accessor for MainViewController);
    sub_100014FE4();
    RootView.navigate(to:with:completion:)();
    sub_100025E44(v0, &qword_1000F5128);
    sub_100018D14();
    sub_100018D08();
    v27();
    uint64_t v28 = sub_10003F9FC();
    v29(v28);
  }
  sub_10001885C();
}

void _s20LibrarySectionHeaderC13SectionHeaderVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();

  if (*(void *)(a1 + 40)) {
    swift_release();
  }
  if (*(void *)(a1 + 56))
  {
    swift_release();
  }
}

void sub_10000C658(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) pendingShortcutItem];
  if (v2) {
    goto LABEL_3;
  }
  uint64_t v2 = [*(id *)(a1 + 32) pendingOpenURLContexts];
  if (v2) {
    goto LABEL_3;
  }
  uint64_t v15 = [*(id *)(a1 + 32) pendingUserActivity];

  if (!v15)
  {
    uint64_t v2 = [*(id *)(a1 + 32) window];
    BOOL v16 = [v2 rootViewController];
    uint64_t v17 = WFUserInterfaceFromViewController();
    WFPresentResumeSyncConfirmationAlertWithUserInterfaceIfNeeded();

LABEL_3:
  }
  uint64_t v3 = [*(id *)(a1 + 32) pendingShortcutItem];

  if (v3)
  {
    uint64_t v4 = *(void **)(a1 + 32);
    uint64_t v5 = [v4 pendingShortcutItem];
    [v4 handleShortcutItem:v5];

    [*(id *)(a1 + 32) setPendingShortcutItem:0];
  }
  uint64_t v6 = [*(id *)(a1 + 32) pendingOpenURLContexts];

  if (v6)
  {
    uint64_t v7 = *(void **)(a1 + 32);
    uint64_t v8 = *(void *)(a1 + 40);
    uint64_t v9 = [v7 pendingOpenURLContexts];
    [v7 scene:v8 openURLContexts:v9];

    [*(id *)(a1 + 32) setPendingOpenURLContexts:0];
  }
  uint64_t v10 = [*(id *)(a1 + 32) pendingUserActivity];

  if (v10)
  {
    uint64_t v11 = *(void **)(a1 + 32);
    uint64_t v12 = *(void *)(a1 + 40);
    uint64_t v13 = [v11 pendingUserActivity];
    [v11 scene:v12 continueUserActivity:v13];

    uint64_t v14 = *(void **)(a1 + 32);
    [v14 setPendingUserActivity:0];
  }
}

void sub_10000C810()
{
  sub_10002066C();
  uint64_t v3 = type metadata accessor for Tips.ConfigurationOption.AnalyticsEngine();
  sub_100022284();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_10001899C();
  uint64_t v7 = type metadata accessor for Tips.ConfigurationOption.DatastoreLocation();
  sub_100022284();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_1000204E8();
  uint64_t v11 = type metadata accessor for Tips.ConfigurationOption.DisplayFrequency();
  sub_100022284();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_1000165D8();
  if ((byte_1000FEDF8 & 1) == 0)
  {
    byte_1000FEDF8 = 1;
    sub_100025A08(&qword_1000F53E8);
    type metadata accessor for Tips.ConfigurationOption();
    sub_100022284();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1000BABF0;
    static Tips.ConfigurationOption.DisplayFrequency.system.getter();
    static Tips.ConfigurationOption.displayFrequency(_:)();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v2, v11);
    static Tips.ConfigurationOption.DatastoreLocation.tipsGroupContainer.getter();
    static Tips.ConfigurationOption.datastoreLocation(_:)();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v7);
    static Tips.ConfigurationOption.AnalyticsEngine.coreAnalytics.getter();
    static Tips.ConfigurationOption.analyticsEngine(_:)();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v3);
    static Tips.configure(_:)();
    swift_bridgeObjectRelease();
  }
  sub_10001885C();
}

void sub_10000CA68()
{
  sub_10002066C();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  char v11 = v10;
  if (v12)
  {
    sub_100016828();
    if (v14 != v15)
    {
      sub_100015110();
      if (v14)
      {
LABEL_24:
        __break(1u);
        return;
      }
      sub_1000245C8();
    }
  }
  else
  {
    uint64_t v13 = v0;
  }
  uint64_t v16 = *(void *)(v9 + 16);
  if (v13 <= v16) {
    uint64_t v17 = *(void *)(v9 + 16);
  }
  else {
    uint64_t v17 = v13;
  }
  if (!v17)
  {
    uint64_t v23 = _swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  sub_100025A08(v1);
  uint64_t v18 = v7(0);
  sub_100022084(v18);
  uint64_t v20 = *(void *)(v19 + 72);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v23 = (void *)swift_allocObject();
  size_t v24 = j__malloc_size(v23);
  if (!v20)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v24 - v22 == 0x8000000000000000 && v20 == -1) {
    goto LABEL_23;
  }
  v23[2] = v16;
  v23[3] = 2 * ((uint64_t)(v24 - v22) / v20);
LABEL_18:
  v7(0);
  sub_100025C80();
  uint64_t v27 = (char *)v23 + v26;
  uint64_t v28 = v9 + v26;
  if (v11)
  {
    v5(v28, v16, v27);
    *(void *)(v9 + 16) = 0;
  }
  else
  {
    v3(v28, v16, v27);
  }
  swift_release();
  sub_10001885C();
}

uint64_t sub_10000CBD8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    sub_10002A0B8();
    sub_1000220F0();
LABEL_11:
    uint64_t result = sub_1000249A0();
    __break(1u);
    return result;
  }
  uint64_t v6 = sub_100025DB8();
  v7(v6);
  sub_10001C094();
  uint64_t v9 = *(void *)(v8 + 72) * a2;
  unint64_t v10 = a3 + v9;
  unint64_t v11 = v3 + v9;
  if (v10 > v3 && v11 > a3)
  {
    sub_10002A0B8();
    sub_100022F68();
    goto LABEL_11;
  }
  sub_10002200C();

  return swift_arrayInitWithCopy();
}

uint64_t sub_10000CCAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v65 = a1;
  uint64_t v60 = sub_100025A08(&qword_1000F82E8);
  __chkstk_darwin(v60);
  uint64_t v64 = (uint64_t)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_100025A08(&qword_1000F82F0);
  uint64_t v53 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  v52 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100025A08(&qword_1000F82F8);
  uint64_t v55 = *(void *)(v63 - 8);
  uint64_t v4 = __chkstk_darwin(v63);
  uint64_t v51 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v54 = (char *)&v51 - v6;
  uint64_t v7 = sub_100025A08((uint64_t *)&unk_1000F82B0);
  __chkstk_darwin(v7 - 8);
  uint64_t v62 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AccessibilityTraits();
  uint64_t v56 = *(void *)(v9 - 8);
  unint64_t v57 = v9;
  __chkstk_darwin(v9);
  unint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100025A08(&qword_1000F8300);
  __chkstk_darwin(v12 - 8);
  char v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100025A08(&qword_1000F8308);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_100025A08(&qword_1000F8310);
  __chkstk_darwin(v58);
  uint64_t v19 = v1[7];
  uint64_t v20 = v1[8];
  uint64_t v59 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v19)
  {
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v19;
    *(void *)(v21 + 24) = v20;
    unint64_t v22 = sub_10003F658;
  }
  else
  {
    unint64_t v22 = 0;
  }
  sub_100023600(v19);
  sub_10002354C((uint64_t)v22);
  *(void *)char v14 = static VerticalAlignment.center.getter();
  *((void *)v14 + 1) = 0x4018000000000000;
  v14[16] = 0;
  uint64_t v23 = sub_100025A08(&qword_1000F8318);
  sub_10001038C(v1, v19 != 0, (uint64_t)&v14[*(int *)(v23 + 44)]);
  char v24 = static Edge.Set.leading.getter();
  EdgeInsets.init(_all:)();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  sub_100025DE8((uint64_t)v14, (uint64_t)v17, &qword_1000F8300);
  uint64_t v33 = &v17[*(int *)(v15 + 36)];
  *uint64_t v33 = v24;
  *((void *)v33 + 1) = v26;
  *((void *)v33 + 2) = v28;
  *((void *)v33 + 3) = v30;
  *((void *)v33 + 4) = v32;
  v33[40] = 0;
  sub_100025E44((uint64_t)v14, &qword_1000F8300);
  static AccessibilityTraits.isHeader.getter();
  sub_10002D1F0();
  uint64_t v34 = (uint64_t)v59;
  View.accessibilityAddTraits(_:)();
  (*(void (**)(char *, unint64_t))(v56 + 8))(v11, v57);
  sub_100025E44((uint64_t)v17, &qword_1000F8308);
  if (v19)
  {
    uint64_t v35 = swift_allocObject();
    id v36 = memcpy((void *)(v35 + 16), v1, 0x48uLL);
    __chkstk_darwin(v36);
    *(&v51 - 2) = (char *)v34;
    sub_100007FF0((uint64_t)v1);
    unint64_t v57 = sub_10002D008();
    id v37 = v52;
    Button.init(action:label:)();
    uint64_t v38 = sub_10001E88C(&qword_1000F8330, &qword_1000F82F0);
    unint64_t v39 = sub_10002C4C0();
    uint64_t v40 = v34;
    uint64_t v41 = v51;
    uint64_t v42 = v61;
    View.buttonStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v37, v42);
    uint64_t v44 = v54;
    uint64_t v43 = v55;
    uint64_t v45 = v41;
    uint64_t v34 = v40;
    uint64_t v46 = v63;
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v54, v45, v63);
    (*(void (**)(uint64_t, char *, uint64_t))(v43 + 16))(v64, v44, v46);
    swift_storeEnumTagMultiPayload();
    uint64_t v66 = v42;
    v67 = &type metadata for HeaderButtonStyle;
    uint64_t v68 = v38;
    unint64_t v69 = v39;
    swift_getOpaqueTypeConformance2();
    uint64_t v47 = (uint64_t)v62;
    _ConditionalContent<>.init(storage:)();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v46);
  }
  else
  {
    sub_100025DE8(v34, v64, &qword_1000F8310);
    swift_storeEnumTagMultiPayload();
    uint64_t v48 = sub_10001E88C(&qword_1000F8330, &qword_1000F82F0);
    unint64_t v49 = sub_10002C4C0();
    uint64_t v66 = v61;
    v67 = &type metadata for HeaderButtonStyle;
    uint64_t v68 = v48;
    unint64_t v69 = v49;
    swift_getOpaqueTypeConformance2();
    sub_10002D008();
    uint64_t v47 = (uint64_t)v62;
    _ConditionalContent<>.init(storage:)();
  }
  sub_10002382C(v47, v65, (uint64_t *)&unk_1000F82B0);
  return sub_100025E44(v34, &qword_1000F8310);
}

char *sub_10000D44C(void *a1)
{
  uint64_t v3 = type metadata accessor for RootNavigationDestination();
  sub_10001681C();
  sub_100021594(v4, v5, v6, v3);
  *(void *)&v1[OBJC_IVAR___WFMainViewController_navigationCompletions] = _swiftEmptyArrayStorage;
  uint64_t v7 = OBJC_IVAR___WFMainViewController_mainUndoManager;
  id v8 = objc_allocWithZone((Class)NSUndoManager);
  uint64_t v9 = v1;
  *(void *)&v1[v7] = [v8 init];
  v9[OBJC_IVAR___WFMainViewController_display] = 0;
  *(void *)&v9[OBJC_IVAR___WFMainViewController____lazy_storage___columnSidebar] = 0;
  *(void *)&v9[OBJC_IVAR___WFMainViewController____lazy_storage___compactSidebar] = 0;
  *(void *)&v9[OBJC_IVAR___WFMainViewController____lazy_storage___columnGalleryViewController] = 0;
  *(void *)&v9[OBJC_IVAR___WFMainViewController____lazy_storage___compactGalleryViewController] = 0;
  *(void *)&v9[OBJC_IVAR___WFMainViewController____lazy_storage___searchStateController] = 0;
  *(void *)&v9[OBJC_IVAR___WFMainViewController_content] = 0;
  *(void *)&v9[OBJC_IVAR___WFMainViewController_database] = a1;
  sub_1000205E8();
  v10();
  sub_100029C7C(0, &qword_1000F5260);
  unint64_t v11 = (void *)WFWorkflowRunSourceMyWorkflows;
  id v12 = a1;
  *(void *)&v9[OBJC_IVAR___WFMainViewController_runCoordinator] = sub_100007F94(v11, v12);
  id v13 = [objc_allocWithZone((Class)UISplitViewController) initWithStyle:1];
  *(void *)&v9[OBJC_IVAR___WFMainViewController_splitView] = v13;
  id v14 = objc_allocWithZone((Class)type metadata accessor for AutoShortcutsAppsDataSource());
  *(void *)&v9[OBJC_IVAR___WFMainViewController_autoShortcutsDataSource] = AutoShortcutsAppsDataSource.init(organizedCollections:)();

  v20.receiver = v9;
  v20.super_class = (Class)type metadata accessor for MainViewController(0);
  id v15 = [super initWithNibName:0 bundle:0];
  sub_1000119DC(&qword_1000F50F8, (void (*)(uint64_t))type metadata accessor for MainViewController);
  uint64_t v16 = (char *)v15;
  sub_100011A20();
  RootView.setup()();
  uint64_t v17 = *(void **)&v16[OBJC_IVAR___WFMainViewController_runCoordinator];
  [v17 setDelegate:v16];
  [v17 registerObserver:v16];

  sub_100029CD8();
  sub_100018D08();
  v18();
  return v16;
}

void sub_10000D710(char *a1, uint64_t a2, uint64_t a3)
{
  char v5 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = (void *)Strong;
  if (Strong)
  {
    id v8 = *(void **)(Strong + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customLayoutButton);
    id v9 = v8;

    if (v8)
    {
      id v10 = [v9 symbolName];

      uint64_t v7 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v12 = v11;

      goto LABEL_6;
    }
    uint64_t v7 = 0;
  }
  uint64_t v12 = 0;
LABEL_6:
  uint64_t v13 = LibraryLayoutMode.symbolName.getter();
  if (!v12)
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  if (v7 == (void *)v13 && v12 == v14)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
  {
LABEL_14:
    uint64_t v17 = self;
    uint64_t v27 = sub_10002BCE0;
    uint64_t v28 = a2;
    aBlock = _NSConcreteStackBlock;
    uint64_t v24 = 1107296256;
    uint64_t v25 = sub_10000E51C;
    uint64_t v26 = &unk_1000E77F8;
    uint64_t v18 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = a2;
    *(unsigned char *)(v19 + 24) = v5;
    *(void *)(v19 + 32) = a3;
    uint64_t v27 = sub_10002BCF0;
    uint64_t v28 = v19;
    aBlock = _NSConcreteStackBlock;
    uint64_t v24 = 1107296256;
    uint64_t v25 = sub_10002B23C;
    uint64_t v26 = &unk_1000E7848;
    objc_super v20 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    [v17 animateWithDuration:v18 animations:v20 completion:0.125];
    _Block_release(v20);
    _Block_release(v18);
  }
LABEL_16:
  swift_beginAccess();
  uint64_t v21 = swift_unknownObjectWeakLoadStrong();
  if (v21)
  {
    unint64_t v22 = (void *)v21;
    sub_100014B98(v5);
  }
}

uint64_t _s20LibrarySectionHeaderC13SectionHeaderVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  char v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v7 = (_OWORD *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  id v8 = v5;
  if (v6)
  {
    uint64_t v9 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *v7;
  }
  uint64_t v10 = *(void *)(a2 + 56);
  if (v10)
  {
    uint64_t v11 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v10;
    *(void *)(a1 + 64) = v11;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  }
  return a1;
}

id sub_10000DA6C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LibraryEditingBehavior();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LibraryConfiguration();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [objc_allocWithZone((Class)UICollectionView) initWithFrame:*(void *)(a1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_flowLayout) collectionViewLayout:0.0, 0.0, 0.0, 0.0];
  uint64_t v11 = self;
  id v12 = v10;
  id v13 = [v11 systemBackgroundColor];
  [v12 setBackgroundColor:v13];

  [v12 setDelegate:a1];
  [v12 setDragDelegate:a1];
  [v12 setDragInteractionEnabled:1];
  [v12 setDropDelegate:a1];
  [v12 setAlwaysBounceVertical:1];
  [v12 setAllowsMultipleSelectionDuringEditing:1];
  [v12 setAllowsFocus:1];
  [v12 setSelectionFollowsFocus:1];
  uint64_t v14 = a1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v14, v6);
  LibraryConfiguration.editingBehavior.getter();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  LOBYTE(v14) = LibraryEditingBehavior.allowsMultipleSelection.getter();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  [v12 setAllowsMultipleSelection:v14 & 1];
  return v12;
}

void sub_10000DDCC(void *a1)
{
  id v3 = [v1 traitCollection];
  id v4 = [v3 horizontalSizeClass];

  if (a1 && v4 == [a1 horizontalSizeClass])
  {
    v6.receiver = v1;
    v6.super_class = (Class)type metadata accessor for MainViewController(0);
    [super traitCollectionDidChange:a1];
  }
  else
  {
    id v5 = [v1 traitCollection];
    sub_10000C2E0();
  }
}

void sub_10000DEB4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  type metadata accessor for UIListContentConfiguration.TextProperties();
  sub_100022284();
  __chkstk_darwin(v11);
  type metadata accessor for UIListContentConfiguration();
  sub_100022284();
  __chkstk_darwin(v12);
  sub_10001899C();
  static UIListContentConfiguration.prominentInsetGroupedHeader()();
  UIListContentConfiguration.textProperties.getter();
  sub_10002411C();
  v13();
  uint64_t v14 = (void *)UIListContentConfiguration.TextProperties.font.getter();
  sub_1000AF260();
  v15();
  [v14 pointSize];

  sub_100029C7C(0, (unint64_t *)&unk_1000F83E0);
  uint64_t v16 = self;
  swift_bridgeObjectRetain();
  id v17 = [v16 tintColor];
  id v18 = [objc_allocWithZone((Class)WFColor) initWithPlatformColor:v17];

  id v19 = [self clearColor];
  id v20 = [objc_allocWithZone((Class)WFIconColorBackground) initWithColor:v19];

  id v21 = sub_10000992C(a3, a4, v18, v20);
  sub_100012EB0(a1, a2, v21, a5, a6, a7);
}

char *sub_10000E0FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  uint64_t v50 = a2;
  uint64_t v9 = type metadata accessor for RootNavigationDestination();
  uint64_t v48 = *(void *)(v9 - 8);
  uint64_t v49 = v9;
  __chkstk_darwin(v9);
  uint64_t v45 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100025A08(&qword_1000F50D0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v46 = (uint64_t)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v15 = (char *)&v41 - v14;
  *(void *)&a5[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_searchController] = 0;
  uint64_t v16 = &a5[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_rootNavigator];
  *(void *)&a5[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_rootNavigator
               + 8] = 0;
  swift_unknownObjectWeakInit();
  a5[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_hasAppeared] = 0;
  uint64_t v17 = (uint64_t)&a5[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_pendingTest];
  uint64_t v18 = type metadata accessor for RootPPTTestCase();
  sub_100021594(v17, 1, 1, v18);
  id v19 = &a5[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_pendingPresentation];
  *(void *)id v19 = 0;
  v19[8] = 0;
  id v20 = &a5[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_destination];
  uint64_t v21 = type metadata accessor for GalleryNavigationDestination();
  uint64_t v47 = *(void *)(v21 - 8);
  unint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 16);
  uint64_t v42 = v21;
  uint64_t v43 = v22;
  v22(v20, a1, v21);
  uint64_t v23 = a3;
  *((void *)v16 + 1) = a3;
  uint64_t v24 = v50;
  swift_unknownObjectWeakAssign();
  uint64_t v25 = a4;
  *(void *)&a5[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_userInterface] = a4;
  type metadata accessor for GallerySearchManager();
  swift_allocObject();
  uint64_t v26 = a5;
  uint64_t v44 = a4;
  swift_unknownObjectRetain();
  uint64_t v27 = GallerySearchManager.init()();
  *(void *)&v26[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_searchManager] = v27;
  uint64_t v28 = (objc_class *)type metadata accessor for GalleryHostingViewController(0);
  swift_retain();
  sub_100018DE4(a1, v24, v23, v25, v27, (uint64_t)v15);
  swift_release();
  id v29 = objc_allocWithZone((Class)sub_100025A08(&qword_1000F50D8));
  sub_100019760((uint64_t)v15, v46, &qword_1000F50D0);
  uint64_t v30 = UIHostingController.init(rootView:)();
  sub_100025E44((uint64_t)v15, &qword_1000F50D0);
  *(void *)&v26[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_hostingController] = v30;

  v51.receiver = v26;
  v51.super_class = v28;
  id v31 = [super initWithNibName:0 bundle:0];
  uint64_t v32 = (uint64_t)v45;
  uint64_t v33 = v42;
  v43(v45, a1, v42);
  sub_100021594(v32, 0, 1, v33);
  uint64_t v35 = v48;
  uint64_t v34 = v49;
  (*(void (**)(uint64_t, void, uint64_t))(v48 + 104))(v32, enum case for RootNavigationDestination.gallery(_:), v49);
  id v36 = (char *)v31;
  uint64_t v37 = RootNavigationDestination.displayName.getter();
  uint64_t v39 = v38;
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v32, v34);
  sub_10002AF58(v37, v39, v36);
  [v36 addChildViewController:*(void *)&v36[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_hostingController]];
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(a1, v33);
  return v36;
}

uint64_t sub_10000E51C(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

void sub_10000E560()
{
  sub_10000E56C(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void sub_10000E56C(void *a1, char a2)
{
  id v4 = self;
  id v5 = &selRef_tertiaryLabelColor;
  if ((a2 & 1) == 0) {
    id v5 = &selRef_systemBlueColor;
  }
  id v6 = [v4 *v5];
  [a1 setTintColor:v6];
}

void sub_10000E5F8()
{
  uint64_t v1 = type metadata accessor for RootNavigationDestination();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static WFLog.subscript.getter();
  id v9 = v0;
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v29 = v1;
  if (v12)
  {
    uint64_t v27 = v5;
    uint64_t v28 = v2;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    v31[0] = v26;
    *(_DWORD *)uint64_t v13 = 136446210;
    uint64_t v14 = (uint64_t)v9 + OBJC_IVAR___WFMainViewController_currentDestination;
    swift_beginAccess();
    if (sub_1000225EC(v14, 1, v1))
    {
      unint64_t v15 = 0xE300000000000000;
      uint64_t v16 = 7104878;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v4, v14, v1);
      uint64_t v16 = RootNavigationDestination.displayName.getter();
      unint64_t v15 = v17;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v4, v1);
    }
    uint64_t v30 = sub_10002D53C(v16, v15, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Current destination changed to %{public}s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v27);
    uint64_t v2 = v28;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  id v18 = sub_10001A4C0();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  if (Strong)
  {
    uint64_t v20 = (uint64_t)v9 + OBJC_IVAR___WFMainViewController_currentDestination;
    swift_beginAccess();
    uint64_t v21 = v29;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    if (!sub_1000225EC(v20, 1, v29))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v20, v21);
      uint64_t v22 = RootNavigationDestination.sidebarIdentifier.getter();
      uint64_t v23 = v24;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v21);
    }
    sub_10002C5C0(v22, v23);
  }
}

id sub_10000E9E8()
{
  id v1 = [v0 traitCollection];
  id result = [v0 view];
  if (result)
  {
    uint64_t v3 = result;
    [result frame];
    CGFloat v5 = v4;
    CGFloat v7 = v6;
    CGFloat v9 = v8;
    CGFloat v11 = v10;

    v23.origin.x = v5;
    v23.origin.y = v7;
    v23.size.width = v9;
    v23.size.height = v11;
    double Width = CGRectGetWidth(v23);
    id result = [v0 view];
    if (result)
    {
      uint64_t v13 = result;
      [result layoutMargins];
      double v15 = v14;
      double v17 = v16;
      double v19 = v18;
      double v21 = v20;

      id v22 = [self metricsCompatibleWithTraitCollection:v1 viewWidth:1 layoutMargins:Width v15 v17 v19 v21];
      return v22;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10000EB78(SEL *a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for LibraryViewController();
  [super *a1];
  return sub_10000EC04();
}

uint64_t type metadata accessor for LibraryViewController()
{
  uint64_t result = qword_1000F7768;
  if (!qword_1000F7768) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10000EC04()
{
  sub_1000255FC(&v5);
  id v1 = v5;
  swift_retain();
  uint64_t v2 = sub_10002582C(&v5);
  v1(v2);
  uint64_t result = swift_release();
  uint64_t v4 = OBJC_IVAR____TtC9Shortcuts21LibraryViewController_hasLoadedInitialData;
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_hasLoadedInitialData) & 1) == 0)
  {
    type metadata accessor for LibraryViewController();
    sub_1000100DC((unint64_t *)&unk_1000F7850, (void (*)(uint64_t))type metadata accessor for LibraryViewController);
    LibraryView.reload(animated:)(1);
    *(unsigned char *)(sub_100021E68() + qword_1000F7FF8) = 0;
    swift_release();
    sub_100021E68();
    dispatch thunk of LibraryDataSource.observeChanges.setter();
    uint64_t result = swift_release();
    *(unsigned char *)(v0 + v4) = 1;
  }
  return result;
}

void sub_10000ECFC()
{
}

void sub_10000ED04()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    sub_100024DD8();
  }
}

void sub_10000ED58()
{
  uint64_t v0 = sub_100006BAC();
  if (!v0) {
    return;
  }
  unint64_t v1 = v0;
  id v2 = objc_allocWithZone((Class)UIBarButtonItem);
  sub_1000071E0();
  uint64_t v4 = v3;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_4;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    id v11 = objc_allocWithZone((Class)type metadata accessor for FloatingToolbarViewController());
    sub_10000ABB0((uint64_t)_swiftEmptyArrayStorage, 1);

    return;
  }
  uint64_t v5 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v5) {
    goto LABEL_19;
  }
LABEL_4:
  if (v5 >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v1 + 8 * v6 + 32);
      }
      double v8 = v7;
      if (v6)
      {
        id v9 = v4;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      id v10 = v8;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      ++v6;
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    while (v5 != v6);
    goto LABEL_19;
  }
  __break(1u);
}

void sub_10000F010()
{
}

void sub_10000F028()
{
  sub_10002066C();
  uint64_t v1 = sub_100025A08(&qword_1000F54C8);
  sub_100022284();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_10001899C();
  uint64_t v5 = sub_100025A08(&qword_1000F54D0);
  sub_100022284();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_10001888C();
  uint64_t v11 = v10 - v9;
  sub_100025A08(&qword_1000F54D8);
  type metadata accessor for Tips.MaxDisplayCount();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1000BAB00;
  Tips.MaxDisplayCount.init(_:)();
  static Tips.OptionsBuilder.buildExpression<A>(_:)();
  swift_bridgeObjectRelease();
  swift_getOpaqueTypeConformance2();
  static Tips.OptionsBuilder.buildPartialBlock<A>(first:)();
  swift_getOpaqueTypeConformance2();
  static Tips.OptionsBuilder.buildFinalResult<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
  sub_10001885C();
}

id sub_10000F250(uint64_t a1)
{
  id v2 = [self buttonWithType:1];
  NSString v3 = String._bridgeToObjectiveC()();
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = sub_1000248B0(v3);

  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  sub_100004C00(v6, v8, 0, v2);
  id v9 = [v2 titleLabel];
  if (v9)
  {
    uint64_t v10 = v9;
    [v9 setAdjustsFontForContentSizeCategory:1];
  }
  id v11 = [v2 titleLabel];
  if (v11)
  {
    BOOL v12 = v11;
    id v13 = [self preferredFontForTextStyle:UIFontTextStyleBody];
    [v12 setFont:v13];
  }
  [v2 addTarget:a1 action:"startEditing" forControlEvents:64];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v14 = [v2 heightAnchor];
  id v15 = [v14 constraintGreaterThanOrEqualToConstant:30.0];

  [v15 setActive:1];
  id v16 = v2;
  sub_10002BB38((uint64_t)v2);
  id v17 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v16];

  return v17;
}

void sub_10000F47C()
{
  v26.receiver = v0;
  v26.super_class = (Class)sub_100024044();
  [super viewDidLoad];
  sub_10001AE14();
  id v2 = v1;
  [v1 setDelegate:v0];
  id v3 = sub_10002C1D8();
  id v4 = sub_10001B874((uint64_t)v3);

  id v5 = *(void **)&v0[OBJC_IVAR___WFMainViewController_splitView];
  [v5 setViewController:v4 forColumn:0];
  [v5 setViewController:v2 forColumn:3];
  [v0 addChildViewController:v5];
  id v6 = [v5 view];
  if (!v6)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v7 = v6;
  id v8 = [v0 view];
  if (!v8)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v9 = v8;
  [v8 bounds];
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  double v17 = v16;

  [v7 setFrame:v11, v13, v15, v17];
  id v18 = [v5 view];
  if (!v18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  double v19 = v18;
  [v18 setAutoresizingMask:18];

  id v20 = [v0 view];
  if (!v20)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  double v21 = v20;
  id v22 = [v5 view];
  if (v22)
  {
    CGRect v23 = v22;
    [v21 addSubview:v22];

    [v5 didMoveToParentViewController:v0];
    id v24 = [v0 traitCollection];
    sub_10000C2E0();

    sub_1000119DC(&qword_1000F50F8, (void (*)(uint64_t))type metadata accessor for MainViewController);
    sub_10003F7D0();
    RootView.navigate(to:)();
    id v25 = [self defaultCenter];
    [v25 addObserver:v0 selector:"didBecomeActive:" name:UIApplicationDidBecomeActiveNotification object:0];

    return;
  }
LABEL_11:
  __break(1u);
}

void sub_10000F74C()
{
  sub_10002066C();
  uint64_t v49 = v1;
  uint64_t v50 = v2;
  id v42 = v3;
  uint64_t v43 = v4;
  v41[0] = v5;
  v41[1] = v6;
  uint64_t v45 = type metadata accessor for DispatchWorkItemFlags();
  sub_100022284();
  uint64_t v48 = v7;
  __chkstk_darwin(v8);
  sub_10001B488(v9, v41[0]);
  type metadata accessor for DispatchQoS();
  sub_100022284();
  uint64_t v46 = v11;
  uint64_t v47 = v10;
  __chkstk_darwin(v10);
  sub_1000167F4();
  uint64_t v44 = v12;
  uint64_t v13 = type metadata accessor for DispatchQoS.QoSClass();
  sub_100022284();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  id v18 = (char *)v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v19 = &v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate];
  *(void *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_hasLoadedInitialData] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___dataSource] = 0;
  sub_10002A5BC(OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics);
  *(void *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___editingItems] = 1;
  uint64_t v20 = OBJC_IVAR____TtC9Shortcuts21LibraryViewController_flowLayout;
  id v21 = objc_allocWithZone((Class)UICollectionViewFlowLayout);
  id v22 = v0;
  *(void *)&v0[v20] = [v21 init];
  *(void *)&v22[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___collectionView] = 0;
  *(void *)&v22[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___tableView] = 0;
  *(void *)&v22[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_searchController] = 0;
  *(void *)&v22[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___toolbarViewController] = 1;
  *(void *)&v22[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customPlusButton] = 0;
  *(void *)&v22[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___createButtonItem] = 1;
  *(void *)&v22[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customEditButton] = 0;
  *(void *)&v22[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage____editButtonItem] = 1;
  *(void *)&v22[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customLayoutButton] = 0;
  *(void *)&v22[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutButtonItem] = 0;
  v22[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_overflowMenuButtonExists] = 0;
  *(void *)&v22[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___overflowMenuButtonItem] = 0;
  CGRect v23 = &v22[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_libraryAccessibilityIdentifier];
  *CGRect v23 = 0;
  v23[1] = 0;
  *(void *)&v22[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customSyncUnavailableButtonItem] = 0;
  *(void *)&v22[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___syncUnavailableButtonItem] = 1;
  *(void *)&v22[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_cancellables] = &_swiftEmptySetSingleton;
  id v24 = &v22[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_tip];
  *(_OWORD *)id v24 = 0u;
  *((_OWORD *)v24 + 1) = 0u;
  *((void *)v24 + 4) = 0;
  *(void *)&v22[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_tipStatusObservation] = 0;
  uint64_t v25 = OBJC_IVAR____TtC9Shortcuts21LibraryViewController_lockedAppBundleIdCache;
  id v26 = [self lockedAppBundleIdentifiers];
  uint64_t v27 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  *(void *)&v22[v25] = v27;
  uint64_t v28 = (void *)v41[0];
  *(void *)&v22[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_database] = v41[0];
  *((void *)v19 + 1) = v42;
  swift_unknownObjectWeakAssign();
  *(void *)&v22[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_groups] = v43;
  uint64_t v43 = type metadata accessor for LibraryConfiguration();
  sub_100021E0C();
  sub_1000205E8();
  v29();
  *(void *)&v22[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_shortcutMoveService] = v50;
  id v42 = v28;
  swift_retain();

  uint64_t v30 = (objc_class *)type metadata accessor for LibraryViewController();
  v53.receiver = v22;
  v53.super_class = v30;
  id v31 = [super initWithNibName:0 bundle:0];
  uint64_t v32 = LibraryConfiguration.title.getter();
  sub_10002AF58(v32, v33, v31);
  sub_100029C7C(0, &qword_1000F52B0);
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v18, enum case for DispatchQoS.QoSClass.background(_:), v13);
  uint64_t v34 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v13);
  uint64_t v35 = sub_1000206B4();
  *(void *)(v35 + 16) = v31;
  v52[4] = sub_10002B6C0;
  v52[5] = v35;
  v52[0] = _NSConcreteStackBlock;
  v52[1] = 1107296256;
  v52[2] = sub_10000E51C;
  v52[3] = &unk_1000E76E0;
  id v36 = _Block_copy(v52);
  id v37 = v31;
  static DispatchQoS.unspecified.getter();
  objc_super v51 = _swiftEmptyArrayStorage;
  sub_1000100DC((unint64_t *)&unk_1000F7860, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100025A08(&qword_1000F52B8);
  sub_10001E88C((unint64_t *)&qword_1000F7870, &qword_1000F52B8);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();

  _Block_release(v36);
  swift_release();
  swift_unknownObjectRelease();

  sub_100018D08();
  v38();
  sub_100016618();
  v39();
  sub_100016618();
  v40();
  swift_release();
  sub_10001885C();
}

void *sub_10000FD10(void *a1)
{
  uint64_t v2 = type metadata accessor for LibraryIndirectMenuDataSource();
  swift_allocObject();
  id v3 = a1;
  uint64_t v4 = sub_1000281F8(a1);
  sub_100021E68();
  uint64_t v5 = *(void **)&v3[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_database];
  uint64_t v6 = &v3[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate];
  swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = *((void *)v6 + 1);
  swift_unknownObjectWeakInit();
  id v8 = v5;
  sub_100025A08((uint64_t *)&unk_1000F7890);
  State.init(wrappedValue:)();
  long long v21 = v23[0];
  uint64_t v22 = 0x403A000000000000;
  type metadata accessor for LibraryDataSource();
  sub_1000100DC(&qword_1000F6048, (void (*)(uint64_t))&type metadata accessor for LibraryDataSource);
  v20[0] = ObservedObject.init(wrappedValue:)();
  v20[1] = v9;
  v20[2] = v8;
  v20[4] = v7;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  v19[3] = v2;
  v19[4] = sub_1000100DC(&qword_1000F78A0, (void (*)(uint64_t))type metadata accessor for LibraryIndirectMenuDataSource);
  v19[0] = v4;
  sub_100010124((uint64_t)v19, (uint64_t)&v18, &qword_1000F78A8);
  uint64_t v17 = KeyPath;
  sub_10002CE74(v20, v23);
  sub_100010124((uint64_t)&v17, (uint64_t)&v24, &qword_1000F78B0);
  swift_retain();
  sub_100025E44((uint64_t)&v17, &qword_1000F78B0);
  sub_10002CE20((uint64_t)v20);
  sub_100025E44((uint64_t)v19, &qword_1000F78A8);
  sub_100025A08(&qword_1000F78B8);
  sub_10002D330();
  AnyView.init<A>(_:)();
  id v11 = objc_allocWithZone((Class)sub_100025A08(&qword_1000F78D8));
  uint64_t v12 = (void *)sub_1000077CC();
  *(void *)&v23[0] = *(void *)((char *)v12 + *(void *)(qword_1000FF160 + (swift_isaMask & *v12) + 16));
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = v12;
  swift_retain();
  uint64_t v15 = v12;
  sub_100025A08((uint64_t *)&unk_1000F7808);
  sub_10001E88C((unint64_t *)&unk_1000F78E0, (uint64_t *)&unk_1000F7808);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  swift_release();
  return v15;
}

uint64_t sub_1000100DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100010124(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100025A08(a3);
  sub_10001C094();
  uint64_t v4 = sub_10001019C();
  v5(v4);
  return a2;
}

uint64_t sub_100010174()
{
  return UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
}

uint64_t sub_10001018C()
{
  return v0 + 8;
}

uint64_t sub_10001019C()
{
  return v0;
}

uint64_t sub_1000101B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AggregatedEntry();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LibraryMenu();
  __chkstk_darwin(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  LibraryMenu.init(entry:)();
  sub_10001E918(&qword_1000F62E8, (void (*)(uint64_t))&type metadata accessor for LibraryMenu);
  uint64_t result = AnyView.init<A>(_:)();
  *a2 = result;
  return result;
}

id sub_100010324(id *a1)
{
  id v1 = *a1;
  id result = [*a1 alpha];
  if (v3 == 0.5)
  {
    return [v1 setAlpha:0.0];
  }
  return result;
}

uint64_t sub_10001038C@<X0>(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v83 = a2;
  uint64_t v5 = type metadata accessor for UIListContentConfiguration.TextProperties();
  uint64_t v81 = *(void *)(v5 - 8);
  uint64_t v82 = v5;
  __chkstk_darwin(v5);
  uint64_t v80 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UIListContentConfiguration();
  uint64_t v85 = *(void *)(v7 - 8);
  uint64_t v86 = v7;
  __chkstk_darwin(v7);
  uint64_t v84 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_100025A08(&qword_1000F8350);
  __chkstk_darwin(v77);
  uint64_t v79 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for IconView.DisplayMode();
  uint64_t v10 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for IconSize();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (double *)((char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = type metadata accessor for IconView();
  uint64_t v78 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  double v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100025A08(&qword_1000F8358);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v89 = (uint64_t)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v24 = (void *)a1[2];
  uint64_t v87 = a3;
  uint64_t v88 = (uint64_t)&v74 - v23;
  if (v24)
  {
    self;
    uint64_t v25 = swift_dynamicCastObjCClass();
    v75 = a1;
    id v26 = (double *)(a1 + 3);
    if (v25)
    {
      double v27 = round(*v26 * 1.35);
      double *v16 = v27;
      v16[1] = v27;
      (*(void (**)(double *, void, uint64_t))(v14 + 104))(v16, enum case for IconSize.custom(_:), v13);
      uint64_t v28 = self;
      id v29 = v24;
      id v30 = [v28 wf_accentColor];
      id v31 = [objc_allocWithZone((Class)WFColor) initWithPlatformColor:v30];

      *(void *)uint64_t v12 = v31;
      v12[8] = 0;
      (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for IconView.DisplayMode.customColor(_:), v76);
    }
    else
    {
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v26;
      (*(void (**)(double *, void, uint64_t))(v14 + 104))(v16, enum case for IconSize.custom(_:), v13);
      (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for IconView.DisplayMode.default(_:), v76);
      id v29 = v24;
    }
    IconView.init(_:size:displayMode:animated:)();
    uint64_t v32 = v78;
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v79, v19, v17);
    swift_storeEnumTagMultiPayload();
    sub_10001D3D0(&qword_1000F7F90, (void (*)(uint64_t))&type metadata accessor for IconView);
    uint64_t v39 = v89;
    _ConditionalContent<>.init(storage:)();

    (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v17);
    uint64_t v40 = sub_100025A08((uint64_t *)&unk_1000F8360);
    sub_100021594(v39, 0, 1, v40);
    sub_10002382C(v39, v88, &qword_1000F8358);
    char v35 = v83;
    uint64_t v37 = v81;
    uint64_t v36 = v82;
    uint64_t v38 = v80;
    a1 = v75;
  }
  else
  {
    uint64_t v33 = (char *)&v74 - v23;
    uint64_t v34 = sub_100025A08((uint64_t *)&unk_1000F8360);
    sub_100021594((uint64_t)v33, 1, 1, v34);
    char v35 = v83;
    uint64_t v37 = v81;
    uint64_t v36 = v82;
    uint64_t v38 = v80;
  }
  uint64_t v41 = a1[1];
  uint64_t v90 = *a1;
  uint64_t v91 = v41;
  sub_10002B2A0();
  swift_bridgeObjectRetain();
  uint64_t v42 = Text.init<A>(_:)();
  uint64_t v44 = v43;
  char v46 = v45 & 1;
  uint64_t v47 = v84;
  static UIListContentConfiguration.prominentInsetGroupedHeader()();
  UIListContentConfiguration.textProperties.getter();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v47, v86);
  UIListContentConfiguration.TextProperties.font.getter();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v36);
  Font.init(_:)();
  uint64_t v48 = Text.font(_:)();
  uint64_t v85 = v49;
  uint64_t v86 = v50;
  char v52 = v51;
  swift_release();
  sub_100010C50(v42, v44, v46);
  swift_bridgeObjectRelease();
  int v83 = static Edge.Set.leading.getter();
  EdgeInsets.init(_all:)();
  uint64_t v54 = v53;
  uint64_t v56 = v55;
  uint64_t v58 = v57;
  uint64_t v60 = v59;
  if (v35)
  {
    uint64_t v84 = (char *)Image.init(systemName:)();
    unsigned int v61 = static HierarchicalShapeStyle.secondary.getter();
    static Font.callout.getter();
    static Font.Weight.semibold.getter();
    uint64_t v62 = Font.weight(_:)();
    swift_release();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v64 = v61;
  }
  else
  {
    uint64_t v84 = 0;
    uint64_t v64 = 0;
    uint64_t KeyPath = 0;
    uint64_t v62 = 0;
  }
  uint64_t v66 = v88;
  uint64_t v65 = v89;
  sub_100025DE8(v88, v89, &qword_1000F8358);
  uint64_t v67 = v87;
  sub_100025DE8(v65, v87, &qword_1000F8358);
  uint64_t v68 = sub_100025A08((uint64_t *)&unk_1000F8370);
  uint64_t v69 = v67 + *(int *)(v68 + 48);
  uint64_t v70 = v85;
  *(void *)uint64_t v69 = v48;
  *(void *)(v69 + 8) = v70;
  *(unsigned char *)(v69 + 16) = v52 & 1;
  *(void *)(v69 + 24) = v86;
  *(unsigned char *)(v69 + 32) = v83;
  *(void *)(v69 + 40) = v54;
  *(void *)(v69 + 48) = v56;
  *(void *)(v69 + 56) = v58;
  *(void *)(v69 + 64) = v60;
  *(unsigned char *)(v69 + 72) = 0;
  v71 = (void *)(v67 + *(int *)(v68 + 64));
  uint64_t v72 = (uint64_t)v84;
  void *v71 = v84;
  v71[1] = v64;
  v71[2] = KeyPath;
  v71[3] = v62;
  sub_10002CF58(v48, v70, v52 & 1);
  swift_bridgeObjectRetain();
  sub_10002D0B4(v72);
  sub_100025E44(v66, &qword_1000F8358);
  sub_10002D104(v72);
  sub_100010C50(v48, v70, v52 & 1);
  swift_bridgeObjectRelease();
  return sub_100025E44(v65, &qword_1000F8358);
}

uint64_t sub_100010C50(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

id sub_100010C60(char *a1)
{
  uint64_t v2 = type metadata accessor for LibraryWorkflowCreationBehavior();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v44 - v7;
  uint64_t v9 = type metadata accessor for LibraryConfiguration();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v53 = a1;
  uint64_t v13 = &a1[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration];
  swift_beginAccess();
  char v51 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  uint64_t v52 = v10 + 16;
  v51(v12, v13, v9);
  LibraryConfiguration.workflowCreationBehavior.getter();
  uint64_t v50 = *(void (**)(char *, uint64_t))(v10 + 8);
  v50(v12, v9);
  uint64_t v48 = *(void (**)(char *, void, uint64_t))(v3 + 104);
  uint64_t v49 = v3 + 104;
  v48(v6, enum case for LibraryWorkflowCreationBehavior.none(_:), v2);
  sub_1000100DC(&qword_1000F7878, (void (*)(uint64_t))&type metadata accessor for LibraryWorkflowCreationBehavior);
  char v14 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v3 + 8);
  v15(v6, v2);
  uint64_t v47 = v15;
  v15(v8, v2);
  id v16 = 0;
  if (v14) {
    return v16;
  }
  char v45 = v13;
  uint64_t v46 = v9;
  id result = [v53 view];
  if (result)
  {
    uint64_t v18 = result;
    id v19 = [result effectiveUserInterfaceLayoutDirection];

    id v20 = [self buttonWithType:1];
    NSString v21 = String._bridgeToObjectiveC()();
    [v20 setSymbolName:v21 pointSizeToWidthRatio:1.7];

    double v22 = 5.0;
    if (v19 == (id)1) {
      double v23 = 5.0;
    }
    else {
      double v23 = 0.0;
    }
    if (v19 == (id)1) {
      double v22 = 0.0;
    }
    [v20 setImageEdgeInsets:0.0, v22, 0.0, v23];
    [v20 addTarget:v53 action:"createWorkflow:" forControlEvents:64];
    uint64_t v24 = v46;
    v51(v12, v45, v46);
    LibraryConfiguration.workflowCreationBehavior.getter();
    v50(v12, v24);
    v48(v6, enum case for LibraryWorkflowCreationBehavior.inRoot(_:), v2);
    char v25 = static LibraryWorkflowCreationBehavior.== infix(_:_:)();
    id v26 = v6;
    double v27 = v47;
    v47(v26, v2);
    v27(v8, v2);
    if (v25)
    {
      sub_100029C7C(0, (unint64_t *)&unk_1000F7880);
      uint64_t v28 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v29 = sub_100008D20((uint64_t)sub_10009DD54, v28);
      sub_100029C7C(0, (unint64_t *)&unk_1000F7170);
      id v30 = v20;
      NSString v31 = String._bridgeToObjectiveC()();
      NSString v32 = String._bridgeToObjectiveC()();
      id v33 = sub_1000248B0(v31);

      uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v36 = v35;

      sub_100025A08(&qword_1000F5200);
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = xmmword_1000BAC10;
      *(void *)(v37 + 32) = v29;
      UIMenuElementSize v54 = v37;
      specialized Array._endMutation()();
      UIMenuElementSize v38 = v54;
      id v39 = v29;
      v40._countAndFlagsBits = v34;
      v40._object = v36;
      v55.value.super.Class isa = 0;
      v55.is_nil = 0;
      Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v40, (Swift::String_optional)0, v55, 0, 0xFFFFFFFFFFFFFFFFLL, v38, v43).super.super.isa;
      [v30 setMenu:isa];
    }
    id v42 = v20;
    sub_10002BB2C((uint64_t)v20);
    id v16 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v42];

    return v16;
  }
  __break(1u);
  return result;
}

uint64_t sub_100011230()
{
  return sub_1000119DC(&qword_1000F5050, (void (*)(uint64_t))type metadata accessor for MainViewController);
}

const char *sub_100011278(uint64_t a1)
{
  uint64_t v33 = type metadata accessor for SidebarStyle();
  uint64_t v2 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  NSString v32 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100025A08(&qword_1000F5238);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1000BABD0;
  sub_100025A08(&qword_1000F5270);
  uint64_t v5 = type metadata accessor for RootNavigationDestination();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 72);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1000BABE0;
  uint64_t v10 = v9 + v8;
  uint64_t v11 = enum case for GalleryNavigationDestination.home(_:);
  uint64_t v12 = type metadata accessor for GalleryNavigationDestination();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  sub_100021594(v10, 0, 1, v12);
  uint64_t v13 = *(void (**)(uint64_t, void, uint64_t))(v6 + 104);
  v13(v10, enum case for RootNavigationDestination.gallery(_:), v5);
  v13(v10 + v7, enum case for RootNavigationDestination.automations(_:), v5);
  type metadata accessor for StaticSidebarSection();
  swift_allocObject();
  uint64_t v14 = StaticSidebarSection.init(name:destinations:)();
  uint64_t v15 = sub_1000119DC(&qword_1000F5278, (void (*)(uint64_t))&type metadata accessor for StaticSidebarSection);
  *(void *)(v4 + 32) = v14;
  *(void *)(v4 + 40) = v15;
  type metadata accessor for MyShortcutsSidebarSection();
  swift_allocObject();
  uint64_t v16 = MyShortcutsSidebarSection.init(name:)();
  uint64_t v17 = sub_1000119DC(&qword_1000F5240, (void (*)(uint64_t))&type metadata accessor for MyShortcutsSidebarSection);
  *(void *)(v4 + 48) = v16;
  *(void *)(v4 + 56) = v17;
  uint64_t v18 = *(void **)(a1 + OBJC_IVAR___WFMainViewController_database);
  id v19 = [v18 sortedVisibleFolders];
  type metadata accessor for FoldersSidebarSection();
  swift_allocObject();
  uint64_t v20 = FoldersSidebarSection.init(folders:)();
  uint64_t v21 = sub_1000119DC(&qword_1000F5248, (void (*)(uint64_t))&type metadata accessor for FoldersSidebarSection);
  *(void *)(v4 + 64) = v20;
  *(void *)(v4 + 72) = v21;
  double v22 = *(void **)(a1 + OBJC_IVAR___WFMainViewController_autoShortcutsDataSource);
  type metadata accessor for AutoShortcutsSidebarSection();
  swift_allocObject();
  id v23 = v22;
  uint64_t v24 = AutoShortcutsSidebarSection.init(dataSource:)();
  uint64_t v25 = sub_1000119DC(&qword_1000F5250, (void (*)(uint64_t))&type metadata accessor for AutoShortcutsSidebarSection);
  *(void *)(v4 + 80) = v24;
  *(void *)(v4 + 88) = v25;
  uint64_t v26 = (uint64_t)v32;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v32, enum case for SidebarStyle.column(_:), v33);
  id v27 = v18;
  uint64_t v28 = sub_100012454();
  id v29 = objc_allocWithZone((Class)type metadata accessor for SidebarViewController());
  id v30 = sub_100028640(v26, (uint64_t)v27, v28, v4, 0);
  sub_1000119DC(&qword_1000F5070, (void (*)(uint64_t))type metadata accessor for SidebarViewController);
  RootViewSidebar.setup(with:)();
  return v30;
}

const char *sub_100011700(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SidebarStyle();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100025A08(&qword_1000F5238);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1000BABF0;
  type metadata accessor for MyShortcutsSidebarSection();
  swift_allocObject();
  uint64_t v7 = MyShortcutsSidebarSection.init(name:)();
  uint64_t v8 = sub_1000119DC(&qword_1000F5240, (void (*)(uint64_t))&type metadata accessor for MyShortcutsSidebarSection);
  *(void *)(v6 + 32) = v7;
  *(void *)(v6 + 40) = v8;
  uint64_t v9 = *(void **)(a1 + OBJC_IVAR___WFMainViewController_database);
  id v10 = [v9 sortedVisibleFolders];
  type metadata accessor for FoldersSidebarSection();
  swift_allocObject();
  uint64_t v11 = FoldersSidebarSection.init(folders:)();
  uint64_t v12 = sub_1000119DC(&qword_1000F5248, (void (*)(uint64_t))&type metadata accessor for FoldersSidebarSection);
  *(void *)(v6 + 48) = v11;
  *(void *)(v6 + 56) = v12;
  uint64_t v13 = *(void **)(a1 + OBJC_IVAR___WFMainViewController_autoShortcutsDataSource);
  type metadata accessor for AutoShortcutsSidebarSection();
  swift_allocObject();
  id v14 = v13;
  uint64_t v15 = AutoShortcutsSidebarSection.init(dataSource:)();
  uint64_t v16 = sub_1000119DC(&qword_1000F5250, (void (*)(uint64_t))&type metadata accessor for AutoShortcutsSidebarSection);
  *(void *)(v6 + 64) = v15;
  *(void *)(v6 + 72) = v16;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for SidebarStyle.compact(_:), v2);
  id v17 = v9;
  uint64_t v18 = sub_100012454();
  id v19 = objc_allocWithZone((Class)type metadata accessor for SidebarViewController());
  uint64_t v20 = sub_100028640((uint64_t)v5, (uint64_t)v17, v18, v6, (void *)1);
  sub_1000119DC(&qword_1000F5070, (void (*)(uint64_t))type metadata accessor for SidebarViewController);
  RootViewSidebar.setup(with:)();
  return v20;
}

uint64_t sub_1000119DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    sub_100019868();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100011A20()
{
  return v0;
}

uint64_t type metadata accessor for MainViewController(uint64_t a1)
{
  return sub_10001C010(a1, (uint64_t *)&unk_1000F4C78);
}

void sub_100011E20()
{
  sub_10002066C();
  int v59 = v1;
  uint64_t v64 = v2;
  uint64_t v3 = type metadata accessor for RootNavigationDestination();
  sub_100025A64();
  uint64_t v65 = v4;
  __chkstk_darwin(v5);
  sub_1000206CC();
  uint64_t v58 = v6;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v57 - v8;
  uint64_t v10 = sub_100025A08(&qword_1000F5130);
  __chkstk_darwin(v10 - 8);
  sub_1000206CC();
  uint64_t v60 = v11;
  __chkstk_darwin(v12);
  uint64_t v61 = v0;
  uint64_t v62 = (char *)&v57 - v13;
  uint64_t v14 = *(void *)(*(void *)(v0 + OBJC_IVAR___WFSidebarViewController_sections) + 16);
  uint64_t v66 = v3;
  if (!v14)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
LABEL_24:
    uint64_t v31 = v16[2];
    if (v31)
    {
      uint64_t v63 = *(char **)(v65 + 16);
      NSString v32 = (char *)v16 + ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80));
      uint64_t v33 = (void (**)(char *, uint64_t))(v65 + 8);
      uint64_t v34 = *(void *)(v65 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        ((void (*)(char *, char *, uint64_t))v63)(v9, v32, v3);
        uint64_t v35 = RootNavigationDestination.sidebarIdentifier.getter();
        uint64_t v37 = v36;
        if (v35 == RootNavigationDestination.sidebarIdentifier.getter() && v37 == v38) {
          break;
        }
        char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v40) {
          goto LABEL_35;
        }
        uint64_t v3 = v66;
        (*v33)(v9, v66);
        v32 += v34;
        if (!--v31)
        {
          swift_bridgeObjectRelease();
          goto LABEL_33;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_35:
      swift_bridgeObjectRelease();
      uint64_t v3 = v66;
      uint64_t v42 = (uint64_t)v62;
      (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v62, v9, v66);
      uint64_t v41 = 0;
    }
    else
    {
LABEL_33:
      uint64_t v41 = 1;
      uint64_t v42 = (uint64_t)v62;
    }
    sub_100021594(v42, v41, 1, v3);
    swift_bridgeObjectRelease();
    if (sub_1000225EC(v42, 1, v3) == 1) {
      goto LABEL_50;
    }
    sub_100006C28();
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v43 = v60;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v44 = v66;
    swift_release();
    if (sub_1000225EC(v43, 1, v44))
    {
      sub_100012400(v43, &qword_1000F5130);
      uint64_t v45 = 0;
      uint64_t v46 = 0;
    }
    else
    {
      uint64_t v47 = v65;
      uint64_t v48 = v58;
      sub_100025B3C();
      v49();
      sub_100012400(v43, &qword_1000F5130);
      uint64_t v50 = RootNavigationDestination.sidebarIdentifier.getter();
      uint64_t v51 = v44;
      uint64_t v45 = v50;
      uint64_t v46 = v52;
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v48, v51);
    }
    uint64_t v53 = RootNavigationDestination.sidebarIdentifier.getter();
    if (v46)
    {
      if (v45 == v53 && v46 == v54)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_50;
      }
      char v56 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v56) {
        goto LABEL_50;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_100006C28();
    sub_10006FDA8(v64, v59 & 1);
    swift_release();
LABEL_50:
    sub_100012400(v42, &qword_1000F5130);
    sub_10001885C();
    return;
  }
  uint64_t v63 = (char *)swift_bridgeObjectRetain();
  uint64_t v15 = v63 + 40;
  uint64_t v16 = _swiftEmptyArrayStorage;
  while (1)
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    uint64_t v17 = dispatch thunk of SidebarSection.destinations.getter();
    swift_unknownObjectRelease();
    uint64_t v18 = *(void *)(v17 + 16);
    uint64_t v19 = v16[2];
    uint64_t v20 = v19 + v18;
    if (__OFADD__(v19, v18)) {
      break;
    }
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (!isUniquelyReferenced_nonNull_native || v20 > v16[3] >> 1)
    {
      if (v19 <= v20) {
        uint64_t v22 = v19 + v18;
      }
      else {
        uint64_t v22 = v19;
      }
      uint64_t v16 = (void *)sub_1000123B8(isUniquelyReferenced_nonNull_native, v22, 1, (uint64_t)v16);
    }
    if (*(void *)(v17 + 16))
    {
      uint64_t v23 = v16[2];
      if ((v16[3] >> 1) - v23 < v18) {
        goto LABEL_53;
      }
      unint64_t v24 = (*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
      uint64_t v25 = *(void *)(v65 + 72);
      uint64_t v26 = (char *)v16 + v24 + v25 * v23;
      if (v17 + v24 < (unint64_t)&v26[v25 * v18] && (unint64_t)v26 < v17 + v24 + v25 * v18) {
        goto LABEL_55;
      }
      swift_arrayInitWithCopy();
      if (v18)
      {
        uint64_t v28 = v16[2];
        BOOL v29 = __OFADD__(v28, v18);
        uint64_t v30 = v28 + v18;
        if (v29) {
          goto LABEL_54;
        }
        v16[2] = v30;
      }
    }
    else if (v18)
    {
      goto LABEL_52;
    }
    swift_bridgeObjectRelease();
    v15 += 16;
    if (!--v14)
    {
      swift_bridgeObjectRelease();
      uint64_t v3 = v66;
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1000123B8(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_100029148(a1, a2, a3, a4, &qword_1000F5270, (uint64_t (*)(void))&type metadata accessor for RootNavigationDestination, (uint64_t (*)(void))&type metadata accessor for RootNavigationDestination, (void (*)(void))&type metadata accessor for RootNavigationDestination);
}

uint64_t sub_100012400(uint64_t a1, uint64_t *a2)
{
  sub_100025A08(a2);
  sub_10001C094();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100012454()
{
  id v1 = *(id *)&v0[OBJC_IVAR___WFMainViewController_database];
  id v2 = [v0 undoManager];
  sub_100021EF8();
  type metadata accessor for ShortcutMoveService();
  swift_allocObject();
  sub_100022F5C();
  return ShortcutMoveService.init(database:undoManager:)();
}

void *sub_1000124F4()
{
  id v1 = *(void **)(v0 + OBJC_IVAR___WFMainViewController_mainUndoManager);
  id v2 = v1;
  return v1;
}

uint64_t sub_100012524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100025A08(&qword_1000F5418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_100025A08(&qword_1000F53D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

void sub_1000125E4(void *a1)
{
  id v2 = v1;
  [a1 addChildViewController:v1];
  id v4 = [v1 view];
  if (!v4)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v5 = v4;
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v6 = sub_100025A4C();
  if (!v6)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v7 = v6;
  id v8 = sub_1000222B0();
  if (!v8)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v9 = v8;
  [v7 addSubview:v8];

  id v10 = sub_1000222B0();
  if (!v10)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v11 = v10;
  id v12 = [v10 bottomAnchor];

  id v13 = sub_100025A4C();
  if (!v13)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v14 = v13;
  id v15 = [v13 bottomAnchor];

  id v16 = [v12 constraintEqualToAnchor:v15];
  sub_10002B378((uint64_t)v16);
  sub_100025A08(&qword_1000F5200);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1000BAC00;
  id v18 = sub_1000222B0();
  if (!v18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v19 = v18;
  id v20 = [v18 leadingAnchor];

  id v21 = sub_100025A4C();
  if (!v21)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v22 = v21;
  id v23 = [v21 leadingAnchor];

  id v24 = [v20 constraintEqualToAnchor:v23];
  *(void *)(v17 + 32) = v24;
  id v25 = sub_1000222B0();
  if (!v25)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v26 = v25;
  id v27 = [v25 trailingAnchor];

  id v28 = sub_100025A4C();
  if (!v28)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  BOOL v29 = v28;
  id v30 = [v28 trailingAnchor];

  id v31 = [v27 constraintEqualToAnchor:v30];
  *(void *)(v17 + 40) = v31;
  NSString v32 = *(void **)&v2[OBJC_IVAR____TtC9Shortcuts29FloatingToolbarViewController_bottomConstraint];
  if (!v32)
  {
LABEL_23:
    __break(1u);
    return;
  }
  uint64_t v33 = self;
  *(void *)(v17 + 48) = v32;
  specialized Array._endMutation()();
  sub_100029C7C(0, &qword_1000F53B8);
  id v34 = v32;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v33 activateConstraints:isa];

  [v2 didMoveToParentViewController:a1];
}

uint64_t sub_10001293C(void *a1)
{
  id v2 = v1;
  type metadata accessor for LibraryCell();
  swift_getObjCClassFromMetadata();
  sub_100025A08(&qword_1000F8440);
  String.init<A>(describing:)();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_100021E48();

  _s16EmptySectionCellCMa();
  swift_getObjCClassFromMetadata();
  sub_100025A08(&qword_1000F8448);
  String.init<A>(describing:)();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_100021E48();

  _s10TopHitCellCMa();
  swift_getObjCClassFromMetadata();
  sub_100025A08((uint64_t *)&unk_1000F8450);
  String.init<A>(describing:)();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_100021E48();

  _s17SectionHeaderViewCMa();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v8 = UICollectionElementKindSectionHeader;
  NSString v9 = String._bridgeToObjectiveC()();
  [a1 registerClass:ObjCClassFromMetadata forSupplementaryViewOfKind:v8 withReuseIdentifier:v9];

  _s21AppShortcutHeaderViewCMa();
  uint64_t v10 = swift_getObjCClassFromMetadata();
  uint64_t v11 = v8;
  NSString v12 = String._bridgeToObjectiveC()();
  [a1 registerClass:v10 forSupplementaryViewOfKind:v11 withReuseIdentifier:v12];

  sub_100029C7C(0, &qword_1000F4AE8);
  uint64_t v13 = swift_getObjCClassFromMetadata();
  uint64_t v14 = UICollectionElementKindSectionFooter;
  NSString v15 = String._bridgeToObjectiveC()();
  [a1 registerClass:v13 forSupplementaryViewOfKind:v14 withReuseIdentifier:v15];

  _s27MiniTipCollectionHeaderViewCMa();
  swift_getObjCClassFromMetadata();
  id v16 = (void *)qword_1000F4650;
  uint64_t v17 = v11;
  if (v16 != (void *)-1) {
    swift_once();
  }
  NSString v18 = String._bridgeToObjectiveC()();
  sub_100012E0C((uint64_t)v18);

  _s35SyncUnavailableCollectionHeaderViewCMa();
  uint64_t v19 = (void *)qword_1000F4648;
  id v20 = v17;
  if (v19 != (void *)-1) {
    swift_once();
  }
  swift_getObjCClassFromMetadata();
  NSString v21 = String._bridgeToObjectiveC()();
  sub_100012E0C((uint64_t)v21);

  sub_1000206B4();
  swift_unknownObjectWeakInit();
  id v22 = objc_allocWithZone((Class)sub_100025A08((uint64_t *)&unk_1000F8460));
  id v23 = a1;
  id v24 = v22;
  UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
  sub_10001685C();
  sub_1000206B4();
  swift_unknownObjectWeakInit();
  swift_retain();
  dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter();
  swift_release();
  id v25 = *(void **)&v2[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_database];
  uint64_t v26 = *(void *)&v2[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_shortcutMoveService];
  _s10DataSourceCMa(0);
  sub_100018828();
  id v27 = v2;
  id v28 = v25;
  swift_retain();
  return sub_10000B048(v24, v27, (uint64_t)v28, v26);
}

void sub_100012D4C(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

double sub_100012D68()
{
  return 0.0;
}

void *sub_100012D88()
{
  return malloc(0x28uLL);
}

id sub_100012DA0()
{
  uint64_t v3 = *(const char **)(v1 + 3392);
  return [v0 v3];
}

uint64_t sub_100012DB8()
{
  return v0;
}

uint64_t sub_100012DE4()
{
  return v0;
}

id sub_100012E0C(uint64_t a1)
{
  NSString v6 = *(const char **)(v4 + 1360);
  return [v1 v6:v3, v2, a1];
}

uint64_t sub_100012E34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AggregatedEntry();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = *(void *)v5;
  char v7 = *(unsigned char *)(v5 + 8);

  return sub_10001EA04(v6, v7);
}

uint64_t sub_100012EB0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v7 = v6;
  uint64_t v11 = OBJC_IVAR____TtCC9Shortcuts21LibraryViewController20LibrarySectionHeader_header;
  NSString v12 = *(void **)&v6[OBJC_IVAR____TtCC9Shortcuts21LibraryViewController20LibrarySectionHeader_header];
  if (v12 && ([v12 removeFromSuperview], (uint64_t v13 = *(void **)&v6[v11]) != 0))
  {
    sub_10001B4A8();
    id v14 = a3;
    swift_bridgeObjectRetain();
    sub_10000753C();
    id v15 = v14;
    sub_100023600(a4);
    sub_100023600(a6);
    id v16 = v13;
    dispatch thunk of _UIHostingView.rootView.setter();
  }
  else
  {
    sub_10001B4A8();
    id v17 = objc_allocWithZone((Class)sub_100025A08(&qword_1000F83D8));
    id v18 = a3;
    swift_bridgeObjectRetain();
    sub_10000753C();
    id v19 = v18;
    sub_100023600(a4);
    sub_100023600(a6);
    uint64_t v20 = _UIHostingView.init(rootView:)();
    sub_10002BE7C(v20);
  }
  NSString v21 = *(void **)&v7[v11];
  if (v21)
  {
    id v22 = v21;
    [v22 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v7 addSubview:v22];
    id v42 = self;
    sub_100025A08(&qword_1000F5200);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1000BB0D0;
    id v24 = [v22 leadingAnchor];
    id v25 = [v7 layoutMarginsGuide];
    id v26 = [v25 leadingAnchor];

    id v27 = [v24 constraintEqualToAnchor:v26];
    *(void *)(v23 + 32) = v27;
    id v28 = [v22 trailingAnchor];
    id v29 = [v7 layoutMarginsGuide];
    id v30 = [v29 trailingAnchor];

    id v31 = [v28 constraintEqualToAnchor:v30];
    *(void *)(v23 + 40) = v31;
    id v32 = [v22 topAnchor];
    id v33 = [v7 layoutMarginsGuide];
    id v34 = [v33 topAnchor];

    id v35 = [v32 constraintEqualToAnchor:v34];
    *(void *)(v23 + 48) = v35;
    id v36 = [v22 bottomAnchor];
    id v37 = [v7 layoutMarginsGuide];
    id v38 = [v37 bottomAnchor];

    id v39 = [v36 constraintEqualToAnchor:v38];
    *(void *)(v23 + 56) = v39;
    specialized Array._endMutation()();
    sub_100029C7C(0, &qword_1000F53B8);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v42 activateConstraints:isa];
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  sub_10002354C(a4);
  return sub_10002354C(a6);
}

void sub_1000132E8()
{
  uint64_t v1 = v0;
  v33.receiver = v0;
  v33.super_class = (Class)type metadata accessor for FloatingToolbarViewController();
  [super viewDidLoad];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC9Shortcuts29FloatingToolbarViewController_toolbar];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = [v0 view];
  if (!v3)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v4 = v3;
  [v3 addSubview:v2];

  sub_100025A08(&qword_1000F5200);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1000BB0D0;
  id v6 = [v2 leadingAnchor];
  id v7 = sub_100025A4C();
  if (!v7)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v8 = v7;
  id v9 = [v7 safeAreaLayoutGuide];

  id v10 = [v9 leadingAnchor];
  id v11 = sub_10002A05C();

  *(void *)(v5 + 32) = v11;
  id v12 = [v2 topAnchor];
  id v13 = sub_100025A4C();
  if (!v13)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  id v14 = v13;
  id v15 = [v13 safeAreaLayoutGuide];

  id v16 = [v15 topAnchor];
  id v17 = sub_10002A05C();

  *(void *)(v5 + 40) = v17;
  id v18 = [v2 trailingAnchor];
  id v19 = sub_100025A4C();
  if (!v19)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v20 = v19;
  id v21 = [v19 safeAreaLayoutGuide];

  id v22 = [v21 trailingAnchor];
  id v23 = sub_10002A05C();

  *(void *)(v5 + 48) = v23;
  id v24 = [v2 bottomAnchor];
  id v25 = sub_100025A4C();
  if (v25)
  {
    id v26 = v25;
    id v27 = self;
    id v28 = [v26 safeAreaLayoutGuide];

    id v29 = [v28 bottomAnchor];
    id v30 = [v24 constraintEqualToAnchor:v29];

    *(void *)(v5 + 56) = v30;
    specialized Array._endMutation()();
    sub_100029C7C(0, &qword_1000F53B8);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v27 activateConstraints:isa];

    id v32 = [self defaultCenter];
    [v32 addObserver:v1 selector:"keyboardWillChange:" name:WFKeyboardWillChangeNotification object:0];

    return;
  }
LABEL_11:
  __break(1u);
}

id sub_1000136A8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  id v9 = (void *)Strong;
  id v10 = sub_100013740(a1, a2, a3, a4);

  return v10;
}

id sub_100013740(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v129 = a2;
  uint64_t v130 = a3;
  id v127 = a1;
  uint64_t v110 = type metadata accessor for LibrarySectionOptions.Footer();
  uint64_t v109 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v117 = (uint64_t)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AutoShortcutApp();
  uint64_t v115 = *(void *)(v7 - 8);
  uint64_t v116 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v112 = v9;
  v113 = (char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v114 = (char *)&v104 - v10;
  uint64_t v11 = type metadata accessor for LibraryWorkflowCreationBehavior();
  uint64_t v123 = *(void *)(v11 - 8);
  uint64_t v124 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v122 = (char *)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v121 = (char *)&v104 - v14;
  uint64_t v15 = type metadata accessor for LibrarySectionOptions();
  uint64_t v119 = *(void *)(v15 - 8);
  uint64_t v120 = v15;
  __chkstk_darwin(v15);
  uint64_t v118 = (char *)&v104 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for LibrarySectionOptions.Header();
  uint64_t v125 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  id v19 = (uint64_t *)((char *)&v104 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = sub_100025A08(&qword_1000F4B00);
  __chkstk_darwin(v20 - 8);
  id v22 = (char *)&v104 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for ShortcutsLibrarySection();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(void *)(v24 + 64);
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v111 = (char *)&v104 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v26);
  id v29 = (char *)&v104 - v28;
  unint64_t v128 = v4;
  sub_100021E68(v27);
  uint64_t v126 = a4;
  IndexPath.section.getter();
  sub_100025884();
  swift_release();
  if (sub_1000225EC((uint64_t)v22, 1, v23) == 1)
  {
    sub_100025E44((uint64_t)v22, &qword_1000F4B00);
    return 0;
  }
  uint64_t v107 = v24;
  uint64_t v31 = v24 + 32;
  uint64_t v105 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
  v105(v29, v22, v23);
  uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v34 = v129;
  BOOL v35 = v32 == v129 && v33 == v130;
  uint64_t v108 = v23;
  uint64_t v36 = v130;
  if (v35)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v37 & 1) == 0)
    {
      if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v34 && v38 == v36)
      {
        swift_bridgeObjectRelease();
        uint64_t v41 = v128;
        uint64_t v42 = v107;
        uint64_t v43 = v117;
      }
      else
      {
        char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        uint64_t v41 = v128;
        uint64_t v42 = v107;
        uint64_t v43 = v117;
        if ((v40 & 1) == 0)
        {
          (*(void (**)(char *, uint64_t))(v107 + 8))(v29, v108);
          return 0;
        }
      }
      ShortcutsLibrarySection.footer.getter();
      uint64_t v81 = v109;
      uint64_t v82 = v110;
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v109 + 88))(v43, v110) != enum case for LibrarySectionOptions.Footer.spacer(_:))
      {
        (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v108);
        (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v43, v82);
        return 0;
      }
      NSString v83 = String._bridgeToObjectiveC()();
      NSString v84 = String._bridgeToObjectiveC()();
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      id v30 = [v127 dequeueReusableSupplementaryViewOfKind:v83 withReuseIdentifier:v84 forIndexPath:isa];

      if (!v30)
      {
        (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v108);
        return v30;
      }
      BOOL v106 = v29;
      goto LABEL_38;
    }
  }
  ShortcutsLibrarySection.header.getter();
  uint64_t v44 = v125;
  int v45 = (*(uint64_t (**)(uint64_t *, uint64_t))(v125 + 88))(v19, v17);
  BOOL v106 = v29;
  if (v45 == enum case for LibrarySectionOptions.Header.nameAndIconName(_:))
  {
    uint64_t v115 = v31;
    (*(void (**)(uint64_t *, uint64_t))(v44 + 96))(v19, v17);
    uint64_t v46 = *v19;
    uint64_t v125 = v19[1];
    uint64_t v47 = (void *)v19[3];
    uint64_t v116 = v19[2];
    uint64_t v117 = v46;
    NSString v48 = String._bridgeToObjectiveC()();
    NSString v49 = String._bridgeToObjectiveC()();
    Class v50 = IndexPath._bridgeToObjectiveC()().super.isa;
    id v51 = [v127 dequeueReusableSupplementaryViewOfKind:v48 withReuseIdentifier:v49 forIndexPath:v50];

    _s17SectionHeaderViewCMa();
    id v30 = (id)swift_dynamicCastClassUnconditional();
    uint64_t v52 = v118;
    ShortcutsLibrarySection.options.getter();
    uint64_t v53 = v121;
    LibrarySectionOptions.workflowCreationBehavior.getter();
    (*(void (**)(char *, uint64_t))(v119 + 8))(v52, v120);
    UIImage_optional v55 = v122;
    uint64_t v54 = v123;
    uint64_t v56 = v124;
    (*(void (**)(char *, void, uint64_t))(v123 + 104))(v122, enum case for LibraryWorkflowCreationBehavior.none(_:), v124);
    sub_10001D3D0(&qword_1000F7878, (void (*)(uint64_t))&type metadata accessor for LibraryWorkflowCreationBehavior);
    char v57 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v58 = *(void (**)(char *, uint64_t))(v54 + 8);
    v58(v55, v56);
    v58(v53, v56);
    int v59 = 0;
    uint64_t v60 = 0;
    uint64_t v41 = v128;
    uint64_t v42 = v107;
    if ((v57 & 1) == 0)
    {
      uint64_t v61 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v62 = v111;
      uint64_t v63 = v108;
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v111, v106, v108);
      unint64_t v64 = (*(unsigned __int8 *)(v42 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
      uint64_t v60 = swift_allocObject();
      *(void *)(v60 + 16) = v61;
      v105((char *)(v60 + v64), v62, v63);
      int v59 = sub_1000AEF14;
    }
    sub_10000DEB4(v117, v125, v116, v47, (uint64_t)v59, v60, 0);
    sub_10002354C((uint64_t)v59);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (v45 == enum case for LibrarySectionOptions.Header.appShortcut(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v44 + 96))(v19, v17);
    uint64_t v66 = (uint64_t)v114;
    uint64_t v65 = v115;
    uint64_t v125 = *(void *)(v115 + 32);
    uint64_t v67 = v116;
    ((void (*)(char *, uint64_t *, uint64_t))v125)(v114, v19, v116);
    NSString v68 = String._bridgeToObjectiveC()();
    NSString v69 = String._bridgeToObjectiveC()();
    Class v70 = IndexPath._bridgeToObjectiveC()().super.isa;
    id v71 = [v127 dequeueReusableSupplementaryViewOfKind:v68 withReuseIdentifier:v69 forIndexPath:v70];

    _s21AppShortcutHeaderViewCMa();
    id v30 = (id)swift_dynamicCastClassUnconditional();
    uint64_t v72 = swift_allocObject();
    uint64_t v41 = v128;
    swift_unknownObjectWeakInit();
    unint64_t v73 = v113;
    (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v113, v66, v67);
    unint64_t v74 = (*(unsigned __int8 *)(v65 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
    uint64_t v75 = swift_allocObject();
    *(void *)(v75 + 16) = v72;
    ((void (*)(unint64_t, char *, uint64_t))v125)(v75 + v74, v73, v67);
    swift_retain();
    sub_1000AB7B0(v66, (uint64_t)sub_1000AEE28);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v66, v67);
    swift_release();
    uint64_t v42 = v107;
  }
  else if (v45 == enum case for LibrarySectionOptions.Header.tip(_:))
  {
    NSString v76 = String._bridgeToObjectiveC()();
    uint64_t v41 = v128;
    if (qword_1000F4650 != -1) {
      swift_once();
    }
    NSString v77 = String._bridgeToObjectiveC()();
    Class v78 = IndexPath._bridgeToObjectiveC()().super.isa;
    id v79 = [v127 dequeueReusableSupplementaryViewOfKind:v76 withReuseIdentifier:v77 forIndexPath:v78];

    _s27MiniTipCollectionHeaderViewCMa();
    uint64_t v80 = (void *)swift_dynamicCastClass();
    uint64_t v42 = v107;
    if (!v80) {

    }
    id v30 = sub_1000AF26C(v80);
    if (!v30) {
      goto LABEL_41;
    }
  }
  else
  {
    if (v45 != enum case for LibrarySectionOptions.Header.syncUnavailable(_:))
    {
      (*(void (**)(char *, uint64_t))(v107 + 8))(v29, v108);
      (*(void (**)(uint64_t *, uint64_t))(v44 + 8))(v19, v17);
      return 0;
    }
    NSString v86 = String._bridgeToObjectiveC()();
    if (qword_1000F4648 != -1) {
      swift_once();
    }
    NSString v87 = String._bridgeToObjectiveC()();
    Class v88 = IndexPath._bridgeToObjectiveC()().super.isa;
    id v89 = [v127 dequeueReusableSupplementaryViewOfKind:v86 withReuseIdentifier:v87 forIndexPath:v88];

    _s35SyncUnavailableCollectionHeaderViewCMa();
    uint64_t v90 = swift_dynamicCastClass();
    uint64_t v41 = v128;
    uint64_t v42 = v107;
    if (!v90)
    {

      (*(void (**)(char *, uint64_t))(v42 + 8))(v106, v108);
      return 0;
    }
    uint64_t v91 = (char *)v90;
    sub_1000311E4();
    id v30 = sub_1000AEB04(v92, v93, v94, v95, (uint64_t)v41, v91);
  }
LABEL_38:
  id v96 = v30;
  id result = [v41 view];
  if (result)
  {
    uint64_t v98 = result;
    [result layoutMargins];
    double v100 = v99;

    id result = [v41 view];
    if (result)
    {
      char v101 = result;
      [result layoutMargins];
      double v103 = v102;

      [v96 setLayoutMargins:0.0, v100, 0.0, v103];
LABEL_41:
      (*(void (**)(char *, uint64_t))(v42 + 8))(v106, v108);
      return v30;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

Swift::Int sub_100014568()
{
  return sub_100025BB4();
}

uint64_t sub_100014584()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_100025A08(&qword_1000F5100);
  __chkstk_darwin(v3 - 8);
  sub_100021FC4();
  uint64_t v4 = type metadata accessor for TipType();
  sub_100025A64();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LibraryConfiguration();
  sub_100025A64();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)&v2[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_tip];
  sub_100021F8C();
  sub_100009CE8(v16, (uint64_t)&v28);
  if (v29)
  {
    sub_100014B80(&v28, (uint64_t)&v26);
  }
  else
  {
    uint64_t v17 = &v2[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration];
    sub_100021F8C();
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v10);
    LibraryConfiguration.tipType.getter();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v10);
    sub_100004FD8((uint64_t)v9, *(void **)&v2[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_database], (uint64_t)&v26);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
    sub_100023268((uint64_t)&v28, &qword_1000F7920);
  }
  if (!v27) {
    return sub_100023268((uint64_t)&v26, &qword_1000F7920);
  }
  sub_100014B80(&v26, (uint64_t)&v28);
  if ((byte_1000FEDF8 & 1) == 0) {
    sub_10000C810();
  }
  sub_100014A0C((uint64_t)&v28, (uint64_t)&v26);
  swift_beginAccess();
  sub_10002D4D4((uint64_t)&v26, v16);
  swift_endAccess();
  sub_10002A498(&v28, v29);
  char v18 = Tip.shouldDisplay.getter();
  uint64_t v19 = *(void *)&v2[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_tipStatusObservation];
  sub_100014A0C((uint64_t)&v28, (uint64_t)&v26);
  if (v19)
  {
    swift_retain();
  }
  else
  {
    uint64_t v21 = type metadata accessor for TaskPriority();
    sub_100021594(v1, 1, 1, v21);
    sub_100014A0C((uint64_t)&v26, (uint64_t)v25);
    type metadata accessor for MainActor();
    id v22 = v2;
    uint64_t v23 = static MainActor.shared.getter();
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v23;
    *(void *)(v24 + 24) = &protocol witness table for MainActor;
    sub_100014B80(v25, v24 + 32);
    *(unsigned char *)(v24 + 72) = v18 & 1;
    *(void *)(v24 + 80) = v22;
    uint64_t v19 = sub_10002B210(v1, (uint64_t)&unk_1000F8548, v24);
  }
  sub_1000149BC((uint64_t)&v26);
  sub_10002BB14(v19);
  return sub_1000149BC((uint64_t)&v28);
}

uint64_t sub_10001490C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100025A08(&qword_1000F5418);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_100025A08(&qword_1000F53D0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_1000149BC(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_100014A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t *sub_100014A70(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_100025A08(&qword_1000F5418);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_100025A08(&qword_1000F53D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_100014B80(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void sub_100014B98(char a1)
{
  long long v2 = v1;
  id v4 = sub_100026038();
  id v5 = [v4 superview];

  if (v5)
  {
    id v6 = sub_100026038();
    [v6 removeFromSuperview];
LABEL_7:

    goto LABEL_8;
  }
  id v7 = sub_10002C010();
  id v8 = [v7 view];

  if (!v8)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  id v9 = [v8 superview];

  if (v9)
  {
    id v10 = sub_10002C010();
    id v11 = [v10 view];

    if (!v11)
    {
LABEL_29:
      __break(1u);
      return;
    }
    [v11 removeFromSuperview];

    id v6 = sub_10002C010();
    [v2 removeChildViewController:v6];
    goto LABEL_7;
  }
LABEL_8:
  if (a1)
  {
    sub_100021E68();
    sub_100015018();
    uint64_t v25 = (void (*)(void))method lookup function for LibraryDataSource();
    v25();
    swift_release();
    sub_100015164();
    swift_bridgeObjectRelease();
    id v26 = sub_100026038();
    [v26 wf_scrollToTopAnimated:0];

    [sub_100025B20() setAutoresizingMask:18];
    sub_100025B20();
    id v27 = sub_100014FCC();
    if (v27)
    {
      [v27 bounds];
      sub_100015144();
      sub_100015088(v28, "setFrame:");

      id v29 = sub_100014FCC();
      if (v29)
      {
        id v30 = v29;
        sub_100025B20();
        [v30 insertSubview:v26 atIndex:0];

        id v24 = (id)sub_100021E68();
        sub_1000238D0();
        swift_release();
        sub_100025B20();
        goto LABEL_18;
      }
      goto LABEL_27;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  id v12 = sub_10002C010();
  id v13 = [v12 view];

  if (!v13)
  {
    __break(1u);
    goto LABEL_22;
  }
  [v13 setAutoresizingMask:18];

  id v14 = sub_10002C010();
  id v15 = [v14 view];

  if (!v15)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  id v16 = sub_100014FCC();
  if (!v16)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  [v16 bounds];
  sub_100015144();
  sub_100015088(v17, "setFrame:");

  id v18 = sub_100014FCC();
  if (!v18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v19 = v18;
  id v20 = sub_10002C010();
  id v21 = [v20 view];

  if (!v21)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  [v19 insertSubview:v21 atIndex:0];

  id v22 = sub_10002C010();
  [v2 addChildViewController:v22];

  sub_100021E68();
  sub_1000238D0();
  swift_release();
  id v23 = sub_10002C010();
  id v24 = [v23 contentScrollViewForEdge:1];

LABEL_18:
  [v2 setContentScrollView:v24 forEdge:15];

  char v31 = [v2 isEditing] ^ 1;

  sub_100016680(v31, 0.0);
}

id sub_100014FC4@<X0>(uint64_t a1@<X8>)
{
  return *(id *)(v1 + a1);
}

id sub_100014FCC()
{
  long long v3 = *(const char **)(v1 + 584);
  return [v0 v3];
}

uint64_t sub_100014FE4()
{
  return v0;
}

uint64_t sub_100014FF0()
{
  return v0;
}

uint64_t sub_100015018()
{
  return type metadata accessor for LibraryDataSource();
}

uint64_t sub_100015030()
{
  return 0;
}

uint64_t sub_10001504C()
{
  return type metadata accessor for Locale();
}

id sub_100015088(uint64_t a1, const char *a2)
{
  return [v2 a2:v4 v5:v6 v7:v7];
}

void sub_1000150AC()
{
}

uint64_t sub_1000150B4()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_1000150D0()
{
  return OpenWorkflowOptions.init(scrolledToActionIndex:actionError:isNewWorkflow:showIconPicker:onOpen:)();
}

uint64_t sub_100015100()
{
  return v0;
}

uint64_t sub_10001511C()
{
  return v0;
}

uint64_t sub_10001512C()
{
  return v0;
}

void sub_100015144()
{
}

void sub_100015164()
{
  sub_10002066C();
  uint64_t v42 = v3;
  uint64_t v45 = type metadata accessor for ShortcutsLibraryItem();
  sub_100022284();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1000204E8();
  uint64_t v7 = sub_100025A08(&qword_1000F5EC8);
  sub_100022284();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_100018874();
  uint64_t v43 = v0;
  sub_100021E68();
  dispatch thunk of LibraryDataSource.sortedSections.getter();
  swift_release();
  uint64_t v11 = OrderedDictionary.values.getter();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, v7);
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v13 = type metadata accessor for ShortcutsLibrarySection();
    sub_100022084(v13);
    unint64_t v15 = v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v17 = *(void *)(v16 + 72);
    swift_bridgeObjectRetain();
    id v18 = _swiftEmptyArrayStorage;
    while (1)
    {
      uint64_t v19 = ShortcutsLibrarySection.items.getter();
      uint64_t v20 = *(void *)(v19 + 16);
      uint64_t v21 = v18[2];
      uint64_t v22 = v21 + v20;
      if (__OFADD__(v21, v20)) {
        break;
      }
      uint64_t v23 = v19;
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (!isUniquelyReferenced_nonNull_native || v22 > v18[3] >> 1)
      {
        if (v21 <= v22) {
          uint64_t v25 = v21 + v20;
        }
        else {
          uint64_t v25 = v21;
        }
        id v18 = (void *)sub_100088CC4(isUniquelyReferenced_nonNull_native, v25, 1, (uint64_t)v18);
      }
      if (*(void *)(v23 + 16))
      {
        uint64_t v26 = v18[2];
        if ((v18[3] >> 1) - v26 < v20) {
          goto LABEL_35;
        }
        unint64_t v27 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
        uint64_t v28 = *(void *)(v5 + 72);
        id v29 = (char *)v18 + v27 + v28 * v26;
        if (v23 + v27 < (unint64_t)&v29[v28 * v20] && (unint64_t)v29 < v23 + v27 + v28 * v20) {
          goto LABEL_37;
        }
        swift_arrayInitWithCopy();
        if (v20)
        {
          uint64_t v31 = v18[2];
          BOOL v32 = __OFADD__(v31, v20);
          uint64_t v33 = v31 + v20;
          if (v32) {
            goto LABEL_36;
          }
          v18[2] = v33;
        }
      }
      else if (v20)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      v15 += v17;
      if (!--v12)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    sub_1000205F4();
    sub_100023580();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    id v18 = _swiftEmptyArrayStorage;
LABEL_24:
    uint64_t v34 = v18[2];
    if (v34)
    {
      uint64_t v44 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 16);
      sub_100025C80();
      uint64_t v36 = (char *)v18 + v35;
      uint64_t v38 = *(void *)(v37 + 56);
      id v39 = (void (**)(uint64_t, uint64_t))(v37 - 8);
      swift_bridgeObjectRetain();
      do
      {
        v44(v1, v36, v45);
        uint64_t v40 = ShortcutsLibraryItem.workflow.getter();
        (*v39)(v1, v45);
        if (v40)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1000150B4();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        v36 += v38;
        --v34;
      }
      while (v34);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_100015500((unint64_t)_swiftEmptyArrayStorage, v42);
    sub_100015670((unint64_t)v41, v43);
    swift_bridgeObjectRelease();
    sub_10001885C();
  }
}

void *sub_100015500(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      unint64_t v4 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_7:
        uint64_t v6 = v5;
        unint64_t v7 = v4 + 1;
        if (__OFADD__(v4, 1)) {
          goto LABEL_15;
        }
        uint64_t v8 = WFDatabaseObjectDescriptor.id.getter();
        sub_100060380(v8, v9, a2);
        char v11 = v10;
        swift_bridgeObjectRelease();
        if (v11)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
        }
        ++v4;
        if (v7 == v3) {
          goto LABEL_17;
        }
      }
      if (v4 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
      if (!v3) {
        goto LABEL_17;
      }
    }
    id v5 = *(id *)(a1 + 8 * v4 + 32);
    goto LABEL_7;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100015670(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  id v30 = a2;
  uint64_t v5 = sub_100025A08(&qword_1000F5120);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v31 = (uint64_t)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v27 - v8;
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v10; uint64_t v10 = _CocoaArrayWrapper.endIndex.getter())
  {
    v27[1] = v3;
    uint64_t v28 = v10;
    unint64_t v11 = a1 & 0xC000000000000001;
    uint64_t v12 = 4;
    uint64_t v13 = &selRef_request;
    unint64_t v29 = a1;
    while (1)
    {
      uint64_t v3 = v12 - 4;
      id v14 = v11 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a1 + 8 * v12);
      id v32 = v14;
      uint64_t v15 = v12 - 3;
      if (__OFADD__(v3, 1)) {
        break;
      }
      sub_100021E68();
      sub_1000AADBC();
      swift_release();
      id v16 = sub_100026038();
      uint64_t v17 = v31;
      sub_1000642C8((uint64_t)v9, v31);
      uint64_t v18 = type metadata accessor for IndexPath();
      int v19 = sub_1000225EC(v17, 1, v18);
      Class isa = 0;
      if (v19 != 1)
      {
        uint64_t v21 = v13;
        unint64_t v22 = v11;
        uint64_t v23 = v9;
        uint64_t v24 = v31;
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        uint64_t v25 = v24;
        uint64_t v9 = v23;
        unint64_t v11 = v22;
        uint64_t v13 = v21;
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v25, v18);
      }
      [v16 v13[455]:isa:0:1];

      sub_1000285E8((uint64_t)v9, &qword_1000F5120);
      ++v12;
      a1 = v29;
      if (v15 == v28) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
LABEL_14:

  return swift_bridgeObjectRelease();
}

void sub_1000158F0()
{
  uint64_t v1 = *(void *)(v0 + qword_1000F7FD0);
  BOOL v2 = v1 < 1;
  uint64_t v3 = v1 - 1;
  if (!v2 && (*(unsigned char *)(v0 + qword_1000F7FF8) & 1) == 0) {
    *(void *)(v0 + qword_1000F7FD0) = v3;
  }
}

void sub_10001591C(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(id))
{
  id v9 = a3;
  id v10 = a4;
  id v11 = a1;
  a6(v9);

  sub_100021F78();
}

double sub_1000159A4(void *a1)
{
  uint64_t v3 = type metadata accessor for LibrarySectionOptions.Footer();
  sub_100022284();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_10002206C();
  uint64_t v7 = sub_100025A08(&qword_1000F4B00);
  uint64_t v8 = sub_1000165CC(v7);
  __chkstk_darwin(v8);
  sub_10001888C();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = type metadata accessor for ShortcutsLibrarySection();
  sub_100022284();
  __chkstk_darwin(v13);
  sub_1000074A4();
  sub_100021E68();
  sub_100025884();
  swift_release();
  if (sub_1000225EC(v11, 1, v12) == 1)
  {
    sub_10002D678(v11, &qword_1000F4B00);
    return 0.0;
  }
  sub_100020698();
  v14();
  ShortcutsLibrarySection.footer.getter();
  sub_100021DB4();
  if (v15() != enum case for LibrarySectionOptions.Footer.spacer(_:))
  {
    sub_10001B6B8();
    v18();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
    return 0.0;
  }
  [a1 frame];
  double Width = CGRectGetWidth(v20);
  sub_10001B6B8();
  v17();
  return Width;
}

void sub_100015BB8()
{
  sub_10002066C();
  uint64_t v1 = v0;
  uint64_t v108 = v2;
  int v105 = v3;
  uint64_t v106 = v4;
  uint64_t v104 = v5;
  id v103 = v6;
  double v102 = v7;
  uint64_t v114 = v8;
  sub_100025A08(&qword_1000F6898);
  sub_100022284();
  uint64_t v109 = v9;
  uint64_t v110 = v10;
  __chkstk_darwin(v9);
  sub_1000167F4();
  uint64_t v107 = v11;
  uint64_t v101 = sub_100025A08(&qword_1000F68A0);
  sub_100022284();
  uint64_t v100 = v12;
  __chkstk_darwin(v13);
  sub_1000167F4();
  sub_10002A61C(v14);
  uint64_t v99 = sub_100025A08(&qword_1000F68A8);
  sub_100022284();
  uint64_t v98 = v15;
  __chkstk_darwin(v16);
  sub_1000167F4();
  sub_10002A61C(v17);
  uint64_t v95 = sub_100025A08(&qword_1000F68B0);
  sub_100022284();
  uint64_t v94 = v18;
  __chkstk_darwin(v19);
  sub_1000167F4();
  sub_10002A61C(v20);
  uint64_t v93 = type metadata accessor for EditMode();
  sub_100022284();
  uint64_t v91 = v21;
  __chkstk_darwin(v22);
  sub_1000206CC();
  uint64_t v92 = v23;
  __chkstk_darwin(v24);
  sub_10002A61C((uint64_t)&v82 - v25);
  uint64_t v89 = sub_100025A08(&qword_1000F68B8);
  sub_100022284();
  uint64_t v88 = v26;
  __chkstk_darwin(v27);
  sub_1000167F4();
  sub_10002A61C(v28);
  uint64_t v87 = sub_100025A08((uint64_t *)&unk_1000F8480);
  sub_10001C094();
  __chkstk_darwin(v29);
  sub_1000206CC();
  uint64_t v85 = v30;
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v82 - v32;
  uint64_t v111 = sub_100025A08(&qword_1000F68C0);
  sub_100022284();
  uint64_t v35 = v34;
  uint64_t v97 = v34;
  __chkstk_darwin(v36);
  sub_10001888C();
  uint64_t v39 = v38 - v37;
  uint64_t v113 = sub_100025A08(&qword_1000F5130);
  sub_100012D7C();
  uint64_t v41 = __chkstk_darwin(v40);
  uint64_t v43 = (char *)&v82 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  uint64_t v45 = (char *)&v82 - v44;
  uint64_t v46 = v1 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource__currentDestination;
  uint64_t v96 = v1 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource__currentDestination;
  uint64_t v47 = type metadata accessor for RootNavigationDestination();
  sub_10001681C();
  sub_100021594(v48, v49, v50, v47);
  NSString v84 = v43;
  sub_100016574((uint64_t)v45, (uint64_t)v43, &qword_1000F5130);
  uint64_t v83 = v39;
  Published.init(initialValue:)();
  sub_100025E44((uint64_t)v45, &qword_1000F5130);
  NSString v86 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32);
  v86(v46, v39, v111);
  *(unsigned char *)(v1 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_shouldNavigateWhenDestinationChanges) = 1;
  sub_10001681C();
  uint64_t v51 = v47;
  uint64_t v112 = v47;
  sub_100021594(v52, v53, v54, v47);
  uint64_t v55 = type metadata accessor for AutoShortcutApp();
  sub_100021594((uint64_t)v33, 1, 1, v55);
  sub_100016574((uint64_t)v33, v85, (uint64_t *)&unk_1000F8480);
  Published.init(initialValue:)();
  sub_100025E44((uint64_t)v33, (uint64_t *)&unk_1000F8480);
  sub_100020628();
  v56();
  uint64_t v57 = v91;
  uint64_t v58 = v90;
  uint64_t v59 = v93;
  (*(void (**)(uint64_t, void, uint64_t))(v91 + 104))(v90, enum case for EditMode.inactive(_:), v93);
  sub_1000205E8();
  v60();
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v58, v59);
  sub_100020628();
  v61();
  uint64_t v62 = v1 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource__presentConfirmationDestination;
  sub_10001681C();
  sub_100021594(v63, v64, v65, v51);
  uint64_t v66 = (uint64_t)v84;
  sub_100016574((uint64_t)v45, (uint64_t)v84, &qword_1000F5130);
  uint64_t v67 = v83;
  Published.init(initialValue:)();
  sub_100025E44((uint64_t)v45, &qword_1000F5130);
  v86(v62, v67, v111);
  uint64_t v120 = 0;
  long long v118 = 0u;
  long long v119 = 0u;
  long long v116 = 0u;
  long long v117 = 0u;
  sub_100025A08(&qword_1000F64F8);
  Published.init(initialValue:)();
  sub_100024770();
  sub_100020628();
  v68();
  *(void *)&long long v116 = 0;
  Published.init(initialValue:)();
  sub_100024770();
  sub_100020628();
  v69();
  *(void *)(v1 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v1 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_cancellables) = &_swiftEmptySetSingleton;
  uint64_t v70 = type metadata accessor for SidebarStyle();
  sub_100021E0C();
  uint64_t v72 = v71;
  sub_1000205E8();
  v73();
  unint64_t v74 = v102;
  *(void *)(v1 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_database) = v102;
  *(void *)(v1 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_sections) = v103;
  swift_beginAccess();
  uint64_t v75 = v104;
  uint64_t v115 = v104;
  type metadata accessor for AutoShortcutsAppsDataSource();
  id v103 = v74;
  id v76 = v75;
  Published.init(initialValue:)();
  swift_endAccess();
  *(unsigned char *)(v1 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_isCompact) = v105;
  uint64_t v77 = v112;
  sub_100021E0C();
  sub_1000205E8();
  v78();
  sub_100021594((uint64_t)v45, 0, 1, v77);
  swift_beginAccess();
  sub_100016618();
  v79();
  sub_100016574((uint64_t)v45, v66, &qword_1000F5130);
  Published.init(initialValue:)();
  sub_100025E44((uint64_t)v45, &qword_1000F5130);
  swift_endAccess();
  *(void *)(v1 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_shortcutMoveService) = v108;
  swift_retain();
  dispatch thunk of AutoShortcutsAppsDataSource.$autoShortcutApps.getter();
  sub_10001E88C(&qword_1000F68C8, &qword_1000F6898);
  sub_1000234F0();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  sub_1000234F0();
  swift_release();
  sub_100016618();
  v80();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();

  swift_release();
  swift_release();
  sub_100018D08();
  v81();
  (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v114, v70);
  sub_10001885C();
}

uint64_t sub_100016574(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100025A08(a3);
  sub_10001C094();
  sub_100080458();
  v4();
  return a2;
}

uint64_t sub_1000165CC(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_1000165F0()
{
  return type metadata accessor for Locale();
}

uint64_t sub_100016640()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_100016658(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t sub_100016668()
{
  return v0;
}

void sub_100016680(char a1, double a2)
{
  id v5 = sub_100026038();
  [v5 contentInset];

  if ((a1 & 1) == 0)
  {
    sub_100016DB0();
    if (v6)
    {
      uint64_t v7 = v6;
      [*(id *)&v6[OBJC_IVAR____TtC9Shortcuts29FloatingToolbarViewController_toolbar] frame];
      CGRectGetHeight(v12);
    }
  }
  if (a2 > 0.0)
  {
    id v8 = sub_100026038();
    [v8 safeAreaInsets];
  }
  id v9 = [v2 contentScrollViewForEdge:4];
  if (v9)
  {
    id v10 = v9;
    sub_10002A6A0(v9, "setContentInset:");
    sub_10002A6A0(v10, "setScrollIndicatorInsets:");
  }
}

uint64_t sub_1000167CC()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t sub_10001685C()
{
  return v0;
}

void sub_100016868()
{
  sub_10002066C();
  uint64_t v2 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = sub_100025A08(&qword_1000F78F8);
  sub_100022284();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1000204E8();
  v26.receiver = v0;
  v26.super_class = (Class)type metadata accessor for LibraryViewController();
  [super viewDidLoad];
  *(unsigned char *)(sub_100021E68() + qword_1000F7FF8) = 1;
  swift_release();
  sub_100021E68();
  sub_100015018();
  id v8 = (uint64_t (*)(void))method lookup function for LibraryDataSource();
  char v9 = v8();
  swift_release();
  sub_100014B98(v9 & 1);
  sub_100021E68();
  dispatch thunk of LibraryDataSource.$layoutMode.getter();
  swift_release();
  uint64_t v10 = sub_1000206B4();
  swift_unknownObjectWeakInit();
  uint64_t v11 = sub_10001B6E8();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = ObjectType;
  sub_10001E88C(&qword_1000F7900, &qword_1000F78F8);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_100016D90();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  sub_100021E68();
  LibraryDataSource.onSortComparatorChanged.getter();
  swift_release();
  sub_1000206B4();
  swift_unknownObjectWeakInit();
  sub_100025A08(&qword_1000F7908);
  sub_10001E88C(&qword_1000F7910, &qword_1000F7908);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  sub_100016D90();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v12 = [v2 view];
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = &v2[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_libraryAccessibilityIdentifier];
    sub_100021F8C();
    if (*((void *)v14 + 1))
    {
      swift_bridgeObjectRetain();
      sub_10001B6DC();
      NSString v15 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v15 = 0;
    }
    [v13 setAccessibilityIdentifier:v15];

    id v16 = [v2 navigationItem];
    [v16 setHidesSearchBarWhenScrolling:0];

    id v17 = [v2 navigationItem];
    [v17 _setLargeTitleTwoLineMode:1];

    id v18 = [v2 navigationController];
    if (v18)
    {
      uint64_t v19 = v18;
      id v20 = [v18 navigationBar];

      [v20 setPrefersLargeTitles:1];
    }
    sub_100016DB0();
    if (v21)
    {
      uint64_t v22 = v21;
      sub_1000125E4(v2);
    }
    sub_100016DB0();
    if (v23)
    {
      uint64_t v24 = v23;
      sub_1000066CC(1, 0);
    }
    sub_10001EEA8();
    sub_100025A08(&qword_1000F7918);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1000BABE0;
    *(void *)(v25 + 32) = type metadata accessor for UITraitHorizontalSizeClass();
    *(void *)(v25 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
    *(void *)(v25 + 48) = type metadata accessor for UITraitPreferredContentSizeCategory();
    *(void *)(v25 + 56) = &protocol witness table for UITraitPreferredContentSizeCategory;
    *(void *)(sub_1000206B4() + 16) = ObjectType;
    UIViewController.registerForTraitChanges<A>(_:handler:)();
    swift_release();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_10001885C();
  }
  else
  {
    __break(1u);
  }
}

void sub_100016D38(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 200) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_100016D54(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_100016D70()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100016D90()
{
  return swift_beginAccess();
}

void sub_100016DB0()
{
}

uint64_t AppShortcutChiclet.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100025A08(&qword_1000F79F8);
  __chkstk_darwin(v5 - 8);
  sub_100021FC4();
  *(void *)uint64_t v2 = static HorizontalAlignment.leading.getter();
  *(void *)(v2 + 8) = 0;
  *(unsigned char *)(v2 + 16) = 1;
  uint64_t v6 = sub_100025A08(&qword_1000F7A00);
  sub_100016F0C(v3, v2 + *(int *)(v6 + 44));
  double v7 = *(double *)(v3 + *(int *)(type metadata accessor for AppShortcutChiclet(0) + 24));
  uint64_t v8 = static Alignment.leading.getter();
  sub_100017F94(0.0, 1, 0.0, 1, v7, 0, 0.0, 1, a1, 0.0, 1, 0.0, 1, v8, v9, &qword_1000F79F8, &qword_1000F7AD8);
  return sub_100025E44(v2, &qword_1000F79F8);
}

uint64_t sub_100016F0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v99 = a2;
  uint64_t v100 = type metadata accessor for AppShortcutChiclet(0);
  uint64_t v91 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v92 = v3;
  uint64_t v94 = (uint64_t)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100025A08(&qword_1000F7BD8);
  uint64_t v87 = *(void *)(v4 - 8);
  uint64_t v88 = v4;
  __chkstk_darwin(v4);
  uint64_t v81 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TopHitCollectionViewStyle();
  uint64_t v85 = *(void *)(v6 - 8);
  uint64_t v86 = v6;
  __chkstk_darwin(v6);
  uint64_t v83 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100025A08(&qword_1000F7BE0);
  uint64_t v96 = *(void *)(v8 - 8);
  uint64_t v97 = v8;
  __chkstk_darwin(v8);
  uint64_t v93 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_100025A08(&qword_1000F7BE8);
  uint64_t v10 = __chkstk_darwin(v90);
  uint64_t v98 = (uint64_t)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v89 = (char *)&v71 - v13;
  __chkstk_darwin(v12);
  uint64_t v95 = (uint64_t)&v71 - v14;
  uint64_t v77 = sub_100025A08(&qword_1000F7BF0);
  uint64_t v78 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  id v16 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100025A08(&qword_1000F7BF8);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100025A08(&qword_1000F7C00);
  uint64_t v79 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_100025A08(&qword_1000F7C08);
  __chkstk_darwin(v80);
  uint64_t v24 = (char *)&v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for AutoShortcutAppSection.SectionType();
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v71 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100025A08(&qword_1000F7C10);
  uint64_t v30 = __chkstk_darwin(v29 - 8);
  __chkstk_darwin(v30);
  uint64_t v101 = (uint64_t)&v71 - v31;
  uint64_t v32 = *(int *)(v100 + 20);
  int v33 = *(unsigned __int8 *)(a1 + v32);
  uint64_t v84 = v34;
  uint64_t v82 = v32;
  if (v33 == 1)
  {
    uint64_t v71 = v24;
    uint64_t v72 = v16;
    unint64_t v73 = v19;
    uint64_t v74 = v17;
    uint64_t v75 = v22;
    uint64_t v76 = v20;
    AutoShortcutAppSection.sectionType.getter();
    int v35 = (*(uint64_t (**)(char *, uint64_t))(v26 + 88))(v28, v25);
    uint64_t v36 = v80;
    uint64_t v37 = v81;
    if (v35 == enum case for AutoShortcutAppSection.SectionType.categorized(_:))
    {
      uint64_t v38 = (*(uint64_t (**)(char *, uint64_t))(v26 + 96))(v28, v25);
      uint64_t v39 = __chkstk_darwin(v38);
      __chkstk_darwin(v39);
      uint64_t v40 = a1;
      sub_100025A08(&qword_1000F7C50);
      sub_1000A2EBC();
      uint64_t v41 = v72;
      Label.init(title:icon:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v42 = static Font.title3.getter();
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v44 = v78;
      uint64_t v45 = (uint64_t)v73;
      uint64_t v46 = v77;
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v73, v41, v77);
      uint64_t v47 = (uint64_t *)(v45 + *(int *)(v74 + 36));
      *uint64_t v47 = KeyPath;
      v47[1] = v42;
      (*(void (**)(char *, uint64_t))(v44 + 8))(v41, v46);
      static Font.Weight.semibold.getter();
      sub_1000A2F64();
      uint64_t v48 = v75;
      View.fontWeight(_:)();
      sub_100025E44(v45, &qword_1000F7BF8);
      LOBYTE(v42) = static Edge.Set.all.getter();
      uint64_t v49 = v79;
      uint64_t v50 = (uint64_t)v71;
      uint64_t v51 = v76;
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v71, v48, v76);
      uint64_t v52 = v50 + *(int *)(v36 + 36);
      *(unsigned char *)uint64_t v52 = v42;
      *(_OWORD *)(v52 + 8) = xmmword_1000BE980;
      *(_OWORD *)(v52 + 24) = xmmword_1000BE990;
      *(unsigned char *)(v52 + 40) = 0;
      (*(void (**)(char *, uint64_t))(v49 + 8))(v48, v51);
      sub_10001C4A0(v50, v101, &qword_1000F7C08);
      uint64_t v53 = 0;
    }
    else
    {
      uint64_t v40 = a1;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
      uint64_t v53 = 1;
    }
  }
  else
  {
    uint64_t v40 = a1;
    uint64_t v53 = 1;
    uint64_t v36 = v80;
    uint64_t v37 = v81;
  }
  sub_100021594(v101, v53, 1, v36);
  (*(void (**)(char *, void, uint64_t))(v85 + 104))(v83, enum case for TopHitCollectionViewStyle.library(_:), v86);
  AutoShortcutAppSection.items.getter();
  if (*(unsigned char *)(v40 + v82)) {
    uint64_t v54 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    uint64_t v54 = 1;
  }
  sub_100017DEC();
  *(void *)uint64_t v37 = v54;
  *((void *)v37 + 1) = v55;
  v37[16] = 0;
  (*(void (**)(char *, void, uint64_t))(v87 + 104))(v37, enum case for TopHitCollectionView.Layout.grid<A, B>(_:), v88);
  TopHitViewColorScheme.platterBackgroundGradient.getter();
  uint64_t v56 = v94;
  sub_10001C190(v40, v94);
  unint64_t v57 = (*(unsigned __int8 *)(v91 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80);
  uint64_t v58 = swift_allocObject();
  sub_10001BFBC(v56, v58 + v57, (void (*)(void))type metadata accessor for AppShortcutChiclet);
  type metadata accessor for AggregatedEntry();
  sub_100025A08(&qword_1000F7C18);
  sub_10001E918(&qword_1000F7C20, (void (*)(uint64_t))&type metadata accessor for AggregatedEntry);
  sub_100018144();
  uint64_t v59 = v93;
  TopHitCollectionView.init(style:items:layout:backgroundGradient:containerWidth:content:)();
  LOBYTE(v57) = sub_100017A48();
  uint64_t v61 = v96;
  uint64_t v60 = v97;
  uint64_t v62 = (uint64_t)v89;
  (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v89, v59, v97);
  uint64_t v63 = (unsigned char *)(v62 + *(int *)(v90 + 36));
  unsigned char *v63 = v57 & 1;
  v63[1] = 0;
  (*(void (**)(char *, uint64_t))(v61 + 8))(v59, v60);
  uint64_t v64 = v95;
  sub_10001C4A0(v62, v95, &qword_1000F7BE8);
  uint64_t v65 = v101;
  uint64_t v66 = v84;
  sub_100025DE8(v101, v84, &qword_1000F7C10);
  uint64_t v67 = v98;
  sub_100025DE8(v64, v98, &qword_1000F7BE8);
  uint64_t v68 = v99;
  sub_100025DE8(v66, v99, &qword_1000F7C10);
  uint64_t v69 = sub_100025A08(&qword_1000F7C48);
  sub_100025DE8(v67, v68 + *(int *)(v69 + 48), &qword_1000F7BE8);
  sub_100025E44(v64, &qword_1000F7BE8);
  sub_100025E44(v65, &qword_1000F7C10);
  sub_100025E44(v67, &qword_1000F7BE8);
  return sub_100025E44(v66, &qword_1000F7C10);
}

uint64_t sub_100017A48()
{
  uint64_t v0 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100025A08(&qword_1000F7C70);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100025A08(&qword_1000F4890);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v23 - v13;
  __chkstk_darwin(v12);
  id v16 = (char *)&v23 - v15;
  type metadata accessor for AppShortcutChiclet(0);
  sub_100018214((uint64_t)v16);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v14, enum case for UserInterfaceSizeClass.regular(_:), v0);
  sub_100021594((uint64_t)v14, 0, 1, v0);
  uint64_t v17 = (uint64_t)&v7[*(int *)(v5 + 56)];
  sub_100025DE8((uint64_t)v16, (uint64_t)v7, &qword_1000F4890);
  sub_100025DE8((uint64_t)v14, v17, &qword_1000F4890);
  if (sub_1000225EC((uint64_t)v7, 1, v0) == 1)
  {
    sub_100025E44((uint64_t)v14, &qword_1000F4890);
    sub_100025E44((uint64_t)v16, &qword_1000F4890);
    int v18 = sub_1000225EC(v17, 1, v0);
    if (v18 == 1) {
      uint64_t v19 = &qword_1000F4890;
    }
    else {
      uint64_t v19 = &qword_1000F7C70;
    }
    if (v18 == 1) {
      char v20 = -1;
    }
    else {
      char v20 = 0;
    }
  }
  else
  {
    sub_100025DE8((uint64_t)v7, (uint64_t)v11, &qword_1000F4890);
    if (sub_1000225EC(v17, 1, v0) == 1)
    {
      sub_100025E44((uint64_t)v14, &qword_1000F4890);
      sub_100025E44((uint64_t)v16, &qword_1000F4890);
      (*(void (**)(char *, uint64_t))(v1 + 8))(v11, v0);
      char v20 = 0;
      uint64_t v19 = &qword_1000F7C70;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v3, v17, v0);
      sub_10001E918(&qword_1000F7C78, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      char v20 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v21 = *(void (**)(char *, uint64_t))(v1 + 8);
      v21(v3, v0);
      uint64_t v19 = &qword_1000F4890;
      sub_100025E44((uint64_t)v14, &qword_1000F4890);
      sub_100025E44((uint64_t)v16, &qword_1000F4890);
      v21(v11, v0);
    }
  }
  sub_100025E44((uint64_t)v7, v19);
  return v20 & 1;
}

uint64_t sub_100017DEC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TopHitCollectionViewStyle();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for AppShortcutChiclet(0);
  double v7 = *(double *)(v1 + *(int *)(v6 + 24));
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for TopHitCollectionViewStyle.library(_:), v2);
  TopHitCollectionViewStyle.contentViewHorizontalPadding.getter();
  double v9 = v8;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t result = static TopHitViewMetrics.width.getter();
  uint64_t v12 = *(void *)(v1 + *(int *)(v6 + 36));
  if (v12 <= 2) {
    uint64_t v12 = 2;
  }
  if (v12 + 0x4000000000000000 < 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  double v13 = (v7 - (v9 + v9)) / v11;
  if ((~*(void *)&v13 & 0x7FF0000000000000) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v13 <= -9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v13 >= 9.22337204e18) {
LABEL_11:
  }
    __break(1u);
  return result;
}

void *sub_100017F94@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v19 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v28 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    uint64_t v19 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_100025DE8(v17, a9, a16);
  uint64_t v29 = sub_100025A08(v19);
  return memcpy((void *)(a9 + *(int *)(v29 + 36)), __src, 0x70uLL);
}

unint64_t sub_100018144()
{
  unint64_t result = qword_1000F7C28;
  if (!qword_1000F7C28)
  {
    sub_10001E8D0(&qword_1000F7C18);
    sub_10001E88C(&qword_1000F7C30, &qword_1000F7C38);
    sub_10001E918(&qword_1000F7C40, (void (*)(uint64_t))type metadata accessor for EntryAnnotationModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F7C28);
  }
  return result;
}

uint64_t sub_100018214@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  double v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100025A08(&qword_1000F4700);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100025DE8(v2, (uint64_t)v10, &qword_1000F4700);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_10001C4A0((uint64_t)v10, a1, &qword_1000F4890);
  }
  os_log_type_t v12 = static os_log_type_t.fault.getter();
  double v13 = static Log.runtimeIssuesLog.getter();
  os_log_type_t v14 = v12;
  if (os_log_type_enabled(v13, v12))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    v17[1] = a1;
    uint64_t v18 = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    void v17[2] = sub_10002D53C(0xD000000000000020, 0x80000001000C29A0, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

id sub_1000184D8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LibraryCell();
  return [super isSelected];
}

uint64_t type metadata accessor for LibraryCell()
{
  return self;
}

char *sub_100018554()
{
  sub_100025CA4();
  uint64_t v2 = type metadata accessor for ShortcutChiclet.Model.Metrics();
  uint64_t v3 = sub_1000165CC(v2);
  __chkstk_darwin(v3);
  sub_10001899C();
  uint64_t v4 = sub_100025A08(&qword_1000F83A8);
  uint64_t v5 = sub_1000165CC(v4);
  __chkstk_darwin(v5);
  sub_10002206C();
  *(void *)&v0[OBJC_IVAR____TtC9Shortcuts11LibraryCell_hostingView] = 0;
  uint64_t v6 = OBJC_IVAR____TtC9Shortcuts11LibraryCell_model;
  uint64_t v7 = type metadata accessor for ShortcutChiclet.ButtonType();
  sub_100021594(v1, 1, 1, v7);
  uint64_t v8 = v0;
  static ShortcutChiclet.Model.Metrics.default.getter();
  type metadata accessor for ShortcutChiclet.Model();
  sub_100018828();
  *(void *)&v0[v6] = sub_100018928();
  uint64_t v9 = OBJC_IVAR____TtC9Shortcuts11LibraryCell_progress;
  type metadata accessor for ShortcutChiclet.Progress();
  sub_100018828();
  *(void *)&v8[v9] = ShortcutChiclet.Progress.init()();
  *(void *)&v8[OBJC_IVAR____TtC9Shortcuts11LibraryCell_observation] = 0;
  *(void *)&v8[OBJC_IVAR____TtC9Shortcuts11LibraryCell_workflowReference] = 0;
  *(void *)&v8[OBJC_IVAR____TtC9Shortcuts11LibraryCell_autoShortcut] = 0;
  uint64_t v10 = &v8[OBJC_IVAR____TtC9Shortcuts11LibraryCell_associatedBundleId];
  *(void *)uint64_t v10 = 0;
  *((void *)v10 + 1) = 0;
  *(void *)&v8[OBJC_IVAR____TtC9Shortcuts11LibraryCell_layoutMetrics] = 0;
  *(void *)&v8[OBJC_IVAR____TtC9Shortcuts11LibraryCell_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v8[OBJC_IVAR____TtC9Shortcuts11LibraryCell_isEnabled] = 0;
  v8[OBJC_IVAR____TtC9Shortcuts11LibraryCell_isJiggling] = 0;
  double v11 = &v8[OBJC_IVAR____TtC9Shortcuts11LibraryCell____lazy_storage___run];
  *(void *)double v11 = 0;
  *((void *)v11 + 1) = 0;
  os_log_type_t v12 = &v8[OBJC_IVAR____TtC9Shortcuts11LibraryCell____lazy_storage___stop];
  *(void *)os_log_type_t v12 = 0;
  *((void *)v12 + 1) = 0;
  double v13 = &v8[OBJC_IVAR____TtC9Shortcuts11LibraryCell____lazy_storage___accessibilitySelect];
  *(void *)double v13 = 0;
  *((void *)v13 + 1) = 0;

  v21.receiver = v8;
  v21.super_class = (Class)type metadata accessor for LibraryCell();
  id v14 = sub_1000189FC(&v21, "initWithFrame:");
  id v15 = objc_allocWithZone((Class)UIPointerInteraction);
  uint64_t v16 = (char *)v14;
  id v17 = [v15 initWithDelegate:v16];
  sub_100018A9C((uint64_t)[v16 addInteraction:v17], "setClipsToBounds:");
  swift_getKeyPath();
  uint64_t v18 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
  swift_release();

  uint64_t v19 = *(void **)&v16[OBJC_IVAR____TtC9Shortcuts11LibraryCell_observation];
  *(void *)&v16[OBJC_IVAR____TtC9Shortcuts11LibraryCell_observation] = v18;

  return v16;
}

uint64_t sub_100018804()
{
  return swift_slowAlloc();
}

uint64_t sub_100018828()
{
  return swift_allocObject();
}

uint64_t sub_100018840(uint64_t a1)
{
  return sub_100021594(a1, 1, 1, v1);
}

uint64_t sub_10001889C()
{
  return v0;
}

uint64_t sub_1000188B8(uint64_t a1)
{
  return _swift_task_switch(a1, 0, 0);
}

NSString sub_1000188D4()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_100018900()
{
  return v0;
}

uint64_t sub_100018928()
{
  return ShortcutChiclet.Model.init(metrics:isSelected:isHovered:isEditing:isGallery:isGalleryDetail:isAddedToLibrary:isDownloading:buttonType:buttonAction:)(v0, 0, 0, 0, 0, 0, 0, 0);
}

void sub_10001895C(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_100018978()
{
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t sub_1000189E8()
{
  return *(void *)((*(void *)(v0 - 72) & 0xFFFFFFFFFFFFFF8) + 0x10);
}

id sub_1000189FC(objc_super *a1, SEL a2)
{
  return [super a2:v6 v5:v5 v4:v3];
}

uint64_t sub_100018A1C(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  a1.n128_u64[0] = v10;
  return RunningWorkflow.init(workflowType:progress:waiting:runViewSource:stopHandler:)(v5, v7, v6, a5, v8, a1);
}

uint64_t sub_100018A50()
{
  return 0;
}

uint64_t sub_100018A6C()
{
  return v0;
}

void sub_100018A80()
{
  sub_1000238D0();
}

id sub_100018A9C(uint64_t a1, const char *a2)
{
  return [v2 a2];
}

void sub_100018AFC()
{
  v19.receiver = v0;
  v19.super_class = (Class)type metadata accessor for LibraryCell();
  [super layoutSubviews];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC9Shortcuts11LibraryCell_hostingView];
  if (v1)
  {
    id v2 = v1;
    id v3 = [v0 contentView];
    [v3 bounds];
    sub_100018DD0();

    double v4 = sub_100018D60();
    [v5 v6:v4];
  }
  uint64_t v7 = *(void **)&v0[OBJC_IVAR____TtC9Shortcuts11LibraryCell_workflowReference];
  if (v7)
  {
    id v8 = v7;
    id v9 = [v0 traitCollection];
    id v10 = [v9 userInterfaceStyle];

    BOOL v11 = v10 == (id)2;
    id v12 = [v0 traitCollection];
    id v13 = [v12 accessibilityContrast];

    BOOL v14 = v13 == (id)1;
    id v15 = [v8 backgroundColor];
    id v16 = [v15 paletteGradient];

    id v17 = [v16 baseColorForDarkMode:v11 highContrast:v14];
    id v18 = [v17 platformColor];

    [v0 setBackgroundColor:v18];
  }
  else
  {
    [v0 setBackgroundColor:0];
  }
}

uint64_t sub_100018CF0()
{
  return v0;
}

uint64_t sub_100018D14()
{
  return v0;
}

uint64_t sub_100018D20()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t sub_100018D3C()
{
  return v0;
}

double sub_100018D60()
{
  return v0;
}

uint64_t sub_100018D74()
{
  return v0;
}

uint64_t sub_100018DAC()
{
  return 0;
}

uint64_t sub_100018DC0()
{
  return v0;
}

uint64_t sub_100018DE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v39 = a6;
  uint64_t v40 = a5;
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  uint64_t v6 = type metadata accessor for GalleryNavigationDestination();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for GalleryView();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100025A08(&qword_1000F50E0);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  id v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100025A08(&qword_1000F50E8);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  objc_super v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v35, v6);
  GalleryView.init(destination:)();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v17, v13, v10);
  uint64_t v23 = (uint64_t *)&v17[*(int *)(v15 + 44)];
  uint64_t v24 = v36;
  uint64_t v25 = v37;
  *uint64_t v23 = KeyPath;
  v23[1] = v24;
  v23[2] = v25;
  uint64_t v26 = *(void (**)(char *, uint64_t))(v11 + 8);
  swift_unknownObjectRetain();
  v26(v13, v10);
  uint64_t v27 = swift_getKeyPath();
  sub_100019760((uint64_t)v17, (uint64_t)v21, &qword_1000F50E0);
  uint64_t v28 = (uint64_t *)&v21[*(int *)(v19 + 44)];
  uint64_t v29 = v38;
  uint64_t *v28 = v27;
  v28[1] = v29;
  swift_unknownObjectRetain();
  sub_100025E44((uint64_t)v17, &qword_1000F50E0);
  type metadata accessor for GallerySearchManager();
  sub_1000119DC(&qword_1000F50F0, (void (*)(uint64_t))&type metadata accessor for GallerySearchManager);
  uint64_t v30 = static ObservableObject.environmentStore.getter();
  uint64_t v31 = v39;
  sub_100019760((uint64_t)v21, v39, &qword_1000F50E8);
  uint64_t v32 = (uint64_t *)(v31 + *(int *)(sub_100025A08(&qword_1000F50D0) + 36));
  uint64_t v33 = v40;
  *uint64_t v32 = v30;
  v32[1] = v33;
  swift_retain();
  return sub_100025E44((uint64_t)v21, &qword_1000F50E8);
}

void sub_100019124()
{
  sub_10002066C();
  id v2 = v0;
  uint64_t v80 = v3;
  uint64_t v76 = v4;
  uint64_t v6 = v5;
  int v77 = v7;
  id v9 = v8;
  uint64_t v79 = type metadata accessor for RootNavigationContext();
  sub_100022284();
  uint64_t v72 = v10;
  __chkstk_darwin(v11);
  sub_100016D38(v12, v70);
  uint64_t v13 = sub_100025A08(&qword_1000F5128);
  uint64_t v14 = sub_100022084(v13);
  uint64_t v74 = v15;
  uint64_t v17 = *(void *)(v16 + 64);
  uint64_t v18 = __chkstk_darwin(v14);
  uint64_t v75 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v18);
  objc_super v21 = (char *)&v70 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v70 - v23;
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v70 - v25;
  id v27 = *(id *)&v0[OBJC_IVAR___WFMainViewController_content];
  sub_100026E5C();
  sub_10001A228();

  id v28 = v9;
  sub_1000198A4((uint64_t)v9);
  uint64_t v29 = sub_1000206B4();
  swift_unknownObjectWeakInit();
  sub_100019760(v6, (uint64_t)v26, &qword_1000F5128);
  unint64_t v73 = v24;
  sub_100019760((uint64_t)v26, (uint64_t)v24, &qword_1000F5128);
  uint64_t v78 = v21;
  sub_100019760((uint64_t)v26, (uint64_t)v21, &qword_1000F5128);
  unint64_t v30 = (*((unsigned __int8 *)v74 + 80) + 48) & ~(unint64_t)*((unsigned __int8 *)v74 + 80);
  uint64_t v31 = v30 + v17;
  uint64_t v32 = (void *)swift_allocObject();
  uint64_t v33 = v76;
  uint64_t v32[2] = v76;
  v32[3] = v80;
  v32[4] = v29;
  uint64_t v34 = v28;
  v32[5] = v28;
  uint64_t v35 = (uint64_t)v75;
  sub_10001ADAC((uint64_t)v26, (uint64_t)v32 + v30);
  char v36 = v77;
  *((unsigned char *)v32 + v31) = v77;
  char v37 = v36;
  sub_100019760(v6, v35, &qword_1000F5128);
  if (sub_1000225EC(v35, 1, v79) == 1)
  {
    id v38 = v34;
    sub_100023600(v33);
    swift_retain_n();
    id v39 = v38;
    uint64_t v40 = sub_10003F8CC();
    sub_100023600(v40);
    uint64_t v41 = sub_10003FA8C();
    sub_100025E44(v41, v42);
    uint64_t v43 = (void (*)(void))sub_10003F8CC();
    sub_1000198B8(v43, v44, v29, v39, (uint64_t)v73, v45);
    swift_release();
    uint64_t v46 = sub_10003F8CC();
    sub_10002354C(v46);
    swift_release();

    sub_100025E44((uint64_t)v78, &qword_1000F5128);
    swift_release();
    uint64_t v47 = sub_10003FA8C();
LABEL_9:
    sub_100025E44(v47, v48);
    goto LABEL_12;
  }
  uint64_t v74 = v32;
  id v71 = v2;
  sub_10003F7DC();
  sub_100020698();
  v49();
  id v50 = v34;
  uint64_t v51 = (void (*)(void))v33;
  uint64_t v52 = v80;
  sub_100023600(v33);
  swift_retain_n();
  id v53 = v50;
  sub_100023600((uint64_t)v51);
  if ((RootNavigationContext.dismissOccludingViewController.getter() & 1) == 0)
  {
    uint64_t v67 = (uint64_t)v73;
    sub_1000198B8(v51, v52, v29, v53, (uint64_t)v73, v37 & 1);
    swift_release();
    sub_10002354C((uint64_t)v51);
    swift_release();

    sub_100025E44((uint64_t)v78, &qword_1000F5128);
    swift_release();
    sub_100029108();
    v68();
    uint64_t v47 = v67;
    uint64_t v48 = &qword_1000F5128;
    goto LABEL_9;
  }
  sub_100025E44((uint64_t)v73, &qword_1000F5128);
  swift_release();
  uint64_t v54 = sub_10001B6E8();
  uint64_t v55 = v74;
  *(void *)(v54 + 16) = sub_10003F5B4;
  *(void *)(v54 + 24) = v55;
  swift_retain_n();
  id v56 = [v71 presentedViewController];
  uint64_t v57 = (uint64_t)v78;
  if (v56)
  {
    uint64_t v58 = v56;
    uint64_t v59 = (uint64_t)v78;
    uint64_t v60 = v53;
    self;
    uint64_t v61 = swift_dynamicCastObjCClass();
    if (v61)
    {
      uint64_t v62 = (void *)v61;
      id v63 = v58;
      id v64 = [v62 editorViewController];
      [v64 stop];

      uint64_t v59 = (uint64_t)v78;
      id v65 = [v62 workflow];
      [v65 save];
    }
    v81[4] = sub_10003F658;
    v81[5] = v54;
    v81[0] = _NSConcreteStackBlock;
    v81[1] = 1107296256;
    v81[2] = sub_10000E51C;
    v81[3] = &unk_1000E5888;
    uint64_t v66 = _Block_copy(v81);
    swift_retain();
    swift_release();
    [v71 dismissViewControllerAnimated:0 completion:v66];
    _Block_release(v66);

    swift_release();
    swift_release_n();
    sub_10002354C((uint64_t)v51);
    swift_release();

    sub_100025E44(v59, &qword_1000F5128);
  }
  else
  {
    sub_1000198B8(v51, v80, v29, v53, (uint64_t)v78, v37 & 1);
    swift_release();
    swift_release_n();
    sub_10002354C((uint64_t)v51);
    swift_release();

    sub_100025E44(v57, &qword_1000F5128);
  }
  sub_100029108();
  v69();
LABEL_12:
  sub_10001885C();
}

uint64_t sub_100019760(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100025A08(a3);
  sub_10001C094();
  uint64_t v4 = sub_100022F5C();
  v5(v4);
  return a2;
}

uint64_t sub_1000197B8()
{
  return v0;
}

uint64_t sub_1000197D0()
{
  return type metadata accessor for LocalizedStringResource.BundleDescription();
}

uint64_t sub_1000197FC()
{
  return sub_100021594(v1, 0, 1, v0);
}

uint64_t sub_10001981C()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t sub_100019838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100021594(a1, 1, 1, a4);
  return type metadata accessor for IntentDialog();
}

uint64_t sub_100019868()
{
  return v0;
}

uint64_t sub_100019874()
{
  return v0;
}

void sub_1000198A4(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR___WFMainViewController_content);
  *(void *)(v1 + OBJC_IVAR___WFMainViewController_content) = a1;
}

void sub_1000198B8(void (*a1)(void), uint64_t a2, uint64_t a3, void *a4, uint64_t a5, int a6)
{
  int v87 = a6;
  uint64_t v86 = a5;
  id v89 = a4;
  uint64_t v8 = sub_100025A08(&qword_1000F5128);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for RootNavigationContext.TransitionType();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v79 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  objc_super v21 = (char *)&v79 - v20;
  __chkstk_darwin(v19);
  uint64_t v88 = (char *)&v79 - v22;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_9;
  }
  uint64_t v24 = (char *)Strong;
  uint64_t v83 = v11;
  uint64_t v25 = (void *)sub_10001A1FC();
  uint64_t v26 = (char *)[v25 tabBarController];

  if (!v26)
  {
    id v33 = objc_allocWithZone((Class)UINavigationController);
    uint64_t v32 = (char *)[v33 initWithRootViewController:v89];
    id v34 = [v32 navigationBar];
    [v34 setPrefersLargeTitles:1];

    [*(id *)&v24[OBJC_IVAR___WFMainViewController_splitView] showDetailViewController:v32 sender:v24];
    goto LABEL_8;
  }
  uint64_t v84 = a1;
  uint64_t v85 = v26;
  uint64_t v27 = a2;
  id v28 = [v89 tabBarItem];
  if (!v28) {
    goto LABEL_54;
  }
  uint64_t v29 = v28;
  id v30 = [v28 tag];

  uint64_t v31 = v85;
  [v85 setSelectedIndex:v30];
  if (!v30)
  {
    id v35 = [v31 selectedViewController];
    if (v35)
    {
      char v36 = v35;
      self;
      char v37 = (void *)swift_dynamicCastObjCClass();
      if (v37)
      {
        id v38 = v37;
        id v82 = v36;
        id v39 = [v37 topViewController];
        if (v39)
        {
          uint64_t v40 = v39;
          uint64_t v80 = sub_100029C7C(0, &qword_1000F50A0);
          id v41 = v89;
          uint64_t v81 = (uint64_t)v38;
          id v42 = v41;
          id v43 = v40;
          LOBYTE(v40) = static NSObject.== infix(_:_:)();

          id v38 = (void *)v81;
          if (v40)
          {

            uint64_t v32 = v24;
            uint64_t v24 = v85;
            goto LABEL_6;
          }
        }
        id v44 = [v38 viewControllers];
        uint64_t v80 = sub_100029C7C(0, &qword_1000F50A0);
        unint64_t v45 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v45 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v81 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v81 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        uint64_t v46 = v12;
        swift_bridgeObjectRelease();
        uint64_t v47 = v81;
        uint64_t v81 = v27;
        if (v47 < 2)
        {
          int v53 = enum case for RootNavigationContext.TransitionType.push(_:);
          uint64_t v54 = *(void (**)(char *, void, uint64_t))(v12 + 104);
          uint64_t v55 = v88;
          uint64_t v52 = v83;
          v54(v88, enum case for RootNavigationContext.TransitionType.push(_:), v83);
          uint64_t v50 = (uint64_t)v84;
        }
        else
        {
          sub_100019760(v86, (uint64_t)v10, &qword_1000F5128);
          uint64_t v48 = type metadata accessor for RootNavigationContext();
          int v49 = sub_1000225EC((uint64_t)v10, 1, v48);
          uint64_t v50 = (uint64_t)v84;
          if (v49 == 1)
          {
            sub_100025E44((uint64_t)v10, &qword_1000F5128);
            static RootNavigationContext.TransitionType.default.getter();
            uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
            uint64_t v52 = v83;
          }
          else
          {
            RootNavigationContext.transitionType.getter();
            (*(void (**)(char *, uint64_t))(*(void *)(v48 - 8) + 8))(v10, v48);
            uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
            uint64_t v52 = v83;
            v51(v21, v18, v83);
          }
          uint64_t v55 = v88;
          v51(v88, v21, v52);
          int v53 = enum case for RootNavigationContext.TransitionType.push(_:);
        }
        (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v15, v55, v52);
        int v56 = (*(uint64_t (**)(char *, uint64_t))(v46 + 88))(v15, v52);
        char v57 = v87;
        if (v56 == v53)
        {
LABEL_29:
          id v58 = [v38 topViewController];
          if (v58)
          {
            uint64_t v59 = v58;
            type metadata accessor for LibraryViewController();
            if (swift_dynamicCastClass())
            {
              sub_100021E68();

              sub_1000AB198(1);
              swift_release();
            }
            else
            {
            }
          }
          [v38 pushViewController:v89 animated:v57 & 1];
          if (v50)
          {
            uint64_t v68 = swift_allocObject();
            uint64_t v75 = v81;
            *(void *)(v68 + 16) = v50;
            *(void *)(v68 + 24) = v75;
            uint64_t v76 = &v24[OBJC_IVAR___WFMainViewController_navigationCompletions];
            swift_beginAccess();
            swift_retain_n();
            sub_10003DF54();
            uint64_t v77 = *(void *)(*(void *)v76 + 16);
            sub_10005B530(v77);
            uint64_t v78 = *(void *)v76;
            *(void *)(v78 + 16) = v77 + 1;
            uint64_t v73 = v78 + 16 * v77;
            uint64_t v74 = sub_10003F704;
            goto LABEL_47;
          }
          goto LABEL_48;
        }
        if (v56 == enum case for RootNavigationContext.TransitionType.popAndPush(_:))
        {

          goto LABEL_29;
        }
        if (v56 != enum case for RootNavigationContext.TransitionType.pushAndReplace(_:))
        {
LABEL_55:
          _diagnoseUnexpectedEnumCase<A>(type:)();
          __break(1u);
          return;
        }
        id v60 = [v38 viewControllers];
        unint64_t v61 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v61 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v62 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v62 = *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        unint64_t v63 = v62 - 1;
        if (__OFSUB__(v62, 1))
        {
          __break(1u);
        }
        else
        {
          id v64 = v89;
          int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
          unint64_t v90 = v61;
          if (!isUniquelyReferenced_nonNull_bridgeObject
            || (v61 & 0x8000000000000000) != 0
            || (v61 & 0x4000000000000000) != 0)
          {
            unint64_t v61 = sub_100062CCC(v61);
            unint64_t v90 = v61;
          }
          if ((v63 & 0x8000000000000000) == 0)
          {
            if (v63 < *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              uint64_t v66 = *(void **)((v61 & 0xFFFFFFFFFFFFFF8) + 8 * v63 + 0x20);
              *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 8 * v63 + 0x20) = v64;

              specialized Array._endMutation()();
              Class isa = Array._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease();
              [v38 setViewControllers:isa animated:v57 & 1];

              if (v50)
              {
                uint64_t v68 = swift_allocObject();
                uint64_t v69 = v81;
                *(void *)(v68 + 16) = v50;
                *(void *)(v68 + 24) = v69;
                uint64_t v70 = &v24[OBJC_IVAR___WFMainViewController_navigationCompletions];
                swift_beginAccess();
                swift_retain_n();
                sub_10003DF54();
                uint64_t v71 = *(void *)(*(void *)v70 + 16);
                sub_10005B530(v71);
                uint64_t v72 = *(void *)v70;
                *(void *)(v72 + 16) = v71 + 1;
                uint64_t v73 = v72 + 16 * v71;
                uint64_t v74 = sub_10003F680;
LABEL_47:
                *(void *)(v73 + 32) = v74;
                *(void *)(v73 + 40) = v68;
                swift_endAccess();

                sub_10002354C(v50);
                (*(void (**)(char *, uint64_t))(v46 + 8))(v55, v83);
                return;
              }
LABEL_48:
              (*(void (**)(char *, uint64_t))(v46 + 8))(v55, v83);

              return;
            }
            goto LABEL_53;
          }
        }
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
        goto LABEL_55;
      }
    }
  }
  uint64_t v32 = v24;
  uint64_t v24 = v31;
LABEL_6:
  a1 = v84;
LABEL_8:

LABEL_9:
  if (a1) {
    a1();
  }
}

uint64_t sub_10001A1DC(uint64_t (*a1)(void), uint64_t (*a2)(void))
{
  if (*(unsigned char *)(v2 + OBJC_IVAR___WFMainViewController_display)) {
    return a2();
  }
  else {
    return a1();
  }
}

uint64_t sub_10001A1FC()
{
  return sub_10001A1DC((uint64_t (*)(void))sub_10002C1D8, (uint64_t (*)(void))sub_10001B344);
}

void sub_10001A228()
{
  sub_10002066C();
  uint64_t v1 = (void *)v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  int v7 = v6;
  uint64_t v8 = sub_100025A08(&qword_1000F5128);
  uint64_t v9 = sub_1000165CC(v8);
  __chkstk_darwin(v9);
  sub_10001899C();
  sub_100019760(v3, v0, &qword_1000F5128);
  uint64_t v10 = type metadata accessor for RootNavigationContext();
  if (sub_1000225EC(v0, 1, v10) == 1)
  {
    sub_100025E44(v0, &qword_1000F5128);
    char v11 = 1;
  }
  else
  {
    char v11 = RootNavigationContext.clearSearchState.getter();
    sub_100012D7C();
    uint64_t v12 = sub_100011A20();
    v13(v12);
  }
  if (v7)
  {
    swift_getObjectType();
    if (sub_10001A534((uint64_t)v7))
    {
      uint64_t v15 = v14;
      if (v11)
      {
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8);
        id v18 = v7;
        uint64_t v19 = v17(ObjectType, v15);
        if (v19)
        {
          uint64_t v20 = (void *)v19;
          sub_10001A854();
        }
      }
      else
      {
        id v21 = v7;
      }
      uint64_t v22 = swift_getObjectType();
      (*(void (**)(void, uint64_t, uint64_t))(v15 + 16))(0, v22, v15);
      id v23 = sub_10001A4C0();
      swift_unknownObjectWeakAssign();
    }
  }
  swift_getObjectType();
  uint64_t v24 = sub_10001A534((uint64_t)v5);
  if (v24)
  {
    uint64_t v26 = (void *)v24;
    uint64_t v27 = v25;
    id v28 = v5;
    sub_10001A4C0();
    sub_100021EF8();
    id v29 = objc_allocWithZone((Class)type metadata accessor for SearchController());
    id v30 = sub_10001A588(v26, v27, v1);
    if (v11) {
      sub_10001A854();
    }
    uint64_t v31 = swift_getObjectType();
    uint64_t v32 = *(void (**)(id, uint64_t, uint64_t))(v27 + 16);
    id v33 = v30;
    v32(v30, v31, v27);
    id v34 = sub_10001A4C0();
    swift_unknownObjectWeakAssign();
  }
  sub_10001885C();
}

id sub_10001A4C0()
{
  uint64_t v1 = OBJC_IVAR___WFMainViewController____lazy_storage___searchStateController;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___WFMainViewController____lazy_storage___searchStateController);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___WFMainViewController____lazy_storage___searchStateController);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)type metadata accessor for SearchStateController()) init];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_10001A534(uint64_t a1)
{
  if (swift_conformsToProtocol2()) {
    return a1;
  }
  else {
    return 0;
  }
}

void sub_10001A57C(uint64_t a1)
{
}

id sub_10001A588(void *a1, uint64_t a2, void *a3)
{
  int v7 = &v3[OBJC_IVAR____TtC9Shortcuts16SearchController_destinationIdentifier];
  *(void *)int v7 = 0;
  *((void *)v7 + 1) = 0;
  uint64_t v8 = &v3[OBJC_IVAR____TtC9Shortcuts16SearchController_viewController];
  *(void *)&v3[OBJC_IVAR____TtC9Shortcuts16SearchController_viewController + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v9 = (uint64_t *)&v3[OBJC_IVAR____TtC9Shortcuts16SearchController_placeholder];
  uint64_t v10 = v3;
  NSString v11 = String._bridgeToObjectiveC()();
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = sub_1000248B0(v11);

  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  *uint64_t v9 = v14;
  v9[1] = v16;
  uint64_t v17 = &v10[OBJC_IVAR____TtC9Shortcuts16SearchController_state];
  *(_OWORD *)uint64_t v17 = xmmword_1000BA470;
  *((_WORD *)v17 + 8) = 0;
  swift_unknownObjectWeakInit();
  v10[OBJC_IVAR____TtC9Shortcuts16SearchController_hidesNavigationBarDuringPresentation] = 0;
  *((void *)v8 + 1) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();

  v25.receiver = v10;
  v25.super_class = (Class)type metadata accessor for SearchController();
  [super init];
  id v19 = sub_10001A7B8();
  if (v19)
  {
    uint64_t v20 = v19;
    [v19 setSearchResultsUpdater:v18];
  }
  id v21 = sub_10001A768();
  if (v21)
  {
    uint64_t v22 = v21;
    id v23 = v18;
    [v22 setDelegate:v23];
  }
  return v18;
}

id sub_10001A768()
{
  id v0 = sub_10001A7B8();
  if (!v0) {
    return 0;
  }
  uint64_t v1 = v0;
  id v2 = [v0 searchBar];

  return v2;
}

id sub_10001A7B8()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v1 = Strong;
  if (Strong)
  {
    id v2 = [Strong navigationItem];

    id v1 = [v2 searchController];
  }
  return v1;
}

uint64_t type metadata accessor for SearchController()
{
  return self;
}

void sub_10001A854()
{
  sub_10001A8A0(0, 0xE000000000000000, 0);
  id v0 = sub_10001A768();
  sub_10001AA08(v0);
}

id sub_10001A8A0(uint64_t a1, uint64_t a2, __int16 a3)
{
  __int16 v6 = a3 & 0x101;
  swift_bridgeObjectRetain();
  sub_10001AD84(a1, a2, v6);
  id result = sub_10001AD2C();
  if (result)
  {
    uint64_t v8 = result;
    uint64_t v9 = v3 + OBJC_IVAR____TtC9Shortcuts16SearchController_state;
    uint64_t v10 = *(void *)(v3 + OBJC_IVAR____TtC9Shortcuts16SearchController_state);
    uint64_t v11 = *(void *)(v9 + 8);
    __int16 v12 = *(unsigned __int8 *)(v9 + 16);
    if (*(unsigned char *)(v9 + 17)) {
      __int16 v13 = 256;
    }
    else {
      __int16 v13 = 0;
    }
    __int16 v14 = v13 | v12;
    swift_bridgeObjectRetain();
    sub_10001A964(v10, v11, v14);

    return (id)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10001A964(uint64_t result, uint64_t a2, __int16 a3)
{
  if (!*(void *)(v3 + OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_lockCounter))
  {
    uint64_t v5 = result;
    __int16 v6 = a3 & 0x101;
    swift_bridgeObjectRetain();
    return sub_10001A9DC(v5, a2, v6);
  }
  return result;
}

uint64_t sub_10001A9DC(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v4 = v3 + OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_state;
  *(void *)uint64_t v4 = a1;
  *(void *)(v4 + 8) = a2;
  *(unsigned char *)(v4 + 16) = a3 & 1;
  *(unsigned char *)(v4 + 17) = HIBYTE(a3) & 1;
  return swift_bridgeObjectRelease();
}

void sub_10001AA08(void *a1)
{
  id v2 = (char *)sub_10001AD2C();
  if (!v2) {
    return;
  }
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)&v2[OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_state];
  uint64_t v4 = *(void *)&v2[OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_state + 8];
  int v6 = v2[OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_state + 16];
  swift_bridgeObjectRetain();

  if (a1)
  {
    id v25 = a1;
    id v7 = [v25 window];

    if (!v7 || (id v8 = [v25 superview], v8, !v8))
    {
      swift_bridgeObjectRelease();
LABEL_10:
      uint64_t v11 = v25;
      goto LABEL_11;
    }
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v10 = Strong;
      id v24 = [Strong presentedViewController];

      if (v24)
      {
        swift_bridgeObjectRelease();

        uint64_t v11 = v24;
LABEL_11:

        return;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_10009D994(v25);
    if (v4)
    {
      if (v13)
      {
        if (v5 == v12 && v4 == v13)
        {
          swift_bridgeObjectRelease_n();
LABEL_32:
          swift_bridgeObjectRelease();
LABEL_33:
          if (!v6)
          {
LABEL_34:
            [v25 resignFirstResponder:v24];
            uint64_t v17 = sub_10009D994(v25);
            if (v18)
            {
              uint64_t v19 = v17;
              unint64_t v20 = v18;
              swift_bridgeObjectRelease();
              uint64_t v21 = HIBYTE(v20) & 0xF;
              if ((v20 & 0x2000000000000000) == 0) {
                uint64_t v21 = v19 & 0xFFFFFFFFFFFFLL;
              }
              if (!v21)
              {
                id v22 = sub_10001A7B8();
                if (v22)
                {
                  id v23 = v22;
                  [v22 setActive:0];
                }
                id v25 = v25;
                sub_10008CBB8(a1);

                if (([v25 showsCancelButton] & 1) != 0
                  && ([v25 isFirstResponder] & 1) == 0)
                {
                  id v25 = v25;
                  sub_10008CBB8(a1);
                }
              }
            }
            goto LABEL_10;
          }
          goto LABEL_30;
        }
        char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v15) {
          goto LABEL_32;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRetain();
      NSString v16 = String._bridgeToObjectiveC()();
    }
    else
    {
      if (!v13) {
        goto LABEL_33;
      }
      NSString v16 = 0;
    }
    swift_bridgeObjectRelease();
    [v25 setText:v16];
    swift_bridgeObjectRelease();

    if ((v6 & 1) == 0) {
      goto LABEL_34;
    }
LABEL_30:
    [v25 becomeFirstResponder:v24];
    goto LABEL_10;
  }

  swift_bridgeObjectRelease();
}

id sub_10001AD2C()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  id v1 = (void *)Strong;
  id v2 = *(id *)(Strong + OBJC_IVAR____TtC9Shortcuts21SearchStateController_stateStore);

  return v2;
}

uint64_t sub_10001AD84(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v4 = v3 + OBJC_IVAR____TtC9Shortcuts16SearchController_state;
  *(void *)uint64_t v4 = a1;
  *(void *)(v4 + 8) = a2;
  *(unsigned char *)(v4 + 16) = a3 & 1;
  *(unsigned char *)(v4 + 17) = HIBYTE(a3) & 1;
  return sub_100025A7C();
}

uint64_t sub_10001ADAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100025A08(&qword_1000F5128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10001AE14()
{
  sub_10002066C();
  uint64_t v3 = v1;
  uint64_t v4 = type metadata accessor for RootNavigationDestination();
  sub_100022284();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1000204E8();
  id v65 = [objc_allocWithZone((Class)UITabBarController) init];
  id v8 = sub_10001B344();
  String._bridgeToObjectiveC()();
  sub_10003F858();
  id v9 = sub_1000242AC();

  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  sub_100029C7C(0, &qword_1000F5230);
  sub_10002A5F4();
  id v14 = sub_10001B4C0(0xD000000000000013, v13);
  uint64_t v62 = *(void (**)(uint64_t, void, uint64_t))(v6 + 104);
  sub_100014FB8();
  v15();
  uint64_t v16 = sub_10001B5B4();
  sub_1000242F8();
  v17();
  id v18 = objc_allocWithZone((Class)UITabBarItem);
  id v19 = sub_10001B530(v10, v12, v14, v16);
  [v8 setTabBarItem:v19];

  id v20 = sub_10001B344();
  id v64 = sub_10001B874((uint64_t)v20);

  [v64 setDelegate:v3];
  uint64_t v21 = *(void **)&v3[OBJC_IVAR___WFMainViewController_database];
  id v22 = objc_allocWithZone((Class)type metadata accessor for TriggerRootViewController());
  id v23 = v21;
  id v24 = (id)TriggerRootViewController.init(with:)();
  NSString v25 = String._bridgeToObjectiveC()();
  sub_1000223FC();
  id v26 = sub_1000242AC();

  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v29 = v28;

  id v30 = sub_10001B4C0(0x636F6C636B736564, 0xEE006C6C69662E6BLL);
  v62(v2, enum case for RootNavigationDestination.automations(_:), v4);
  uint64_t v31 = sub_10001B5B4();
  uint64_t v32 = v4;
  sub_100016618();
  v33();
  id v34 = objc_allocWithZone((Class)UITabBarItem);
  id v35 = v30;
  id v36 = v34;
  id v37 = sub_10001B530(v27, v29, v35, v31);
  unint64_t v63 = v24;
  [v24 setTabBarItem:v37];

  id v38 = sub_10001B874((uint64_t)v24);
  String._bridgeToObjectiveC()();
  sub_10003F858();
  id v39 = sub_1000242AC();

  uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v42 = v41;

  sub_10002A5F4();
  id v45 = sub_10001B4C0(v43, v44);
  uint64_t v46 = enum case for GalleryNavigationDestination.home(_:);
  uint64_t v47 = type metadata accessor for GalleryNavigationDestination();
  sub_10001C094();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 104))(v2, v46, v47);
  sub_100021594(v2, 0, 1, v47);
  v62(v2, enum case for RootNavigationDestination.gallery(_:), v32);
  uint64_t v49 = sub_10001B5B4();
  sub_100016618();
  v50();
  id v51 = objc_allocWithZone((Class)UITabBarItem);
  id v52 = sub_10001B530(v40, v42, v45, v49);
  sub_10001B720();
  uint64_t v54 = (void *)v53;
  id v55 = sub_10001B874(v53);

  id v56 = v55;
  sub_10001B720();
  id v58 = v57;
  [v57 setTabBarItem:v52];

  sub_100025A08(&qword_1000F5200);
  uint64_t v59 = swift_allocObject();
  *(_OWORD *)(v59 + 16) = xmmword_1000BAC00;
  *(void *)(v59 + 32) = v64;
  *(void *)(v59 + 40) = v38;
  *(void *)(v59 + 48) = v56;
  uint64_t v66 = v59;
  specialized Array._endMutation()();
  id v60 = v64;
  id v61 = v38;
  sub_100006F34(v66, v65);

  sub_10001885C();
}

id sub_10001B344()
{
  return sub_10001B364(&OBJC_IVAR___WFMainViewController____lazy_storage___compactSidebar, (uint64_t (*)(uint64_t))sub_100011700);
}

id sub_10001B364(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t v6 = (void *)a2(v2);
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

uint64_t sub_10001B3C8()
{
  return v0;
}

void sub_10001B3D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 136) = (char *)&a9 - v9;
}

uint64_t sub_10001B3FC()
{
  return swift_allocError();
}

uint64_t sub_10001B414()
{
  return type metadata accessor for String.LocalizationValue();
}

uint64_t sub_10001B458@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t sub_10001B470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000225EC(a1, a2, a3);
}

uint64_t sub_10001B488@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 216) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

id sub_10001B4C0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    NSString v2 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v2 = 0;
  }
  id v3 = [(id)swift_getObjCClassFromMetadata() _systemImageNamed:v2];

  return v3;
}

id sub_10001B530(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v5 = v4;
  if (a2)
  {
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v8 = 0;
  }
  id v9 = [v5 initWithTitle:v8 image:a3 tag:a4];

  return v9;
}

uint64_t sub_10001B5B4()
{
  type metadata accessor for RootNavigationDestination();
  sub_100022284();
  __chkstk_darwin(v0);
  sub_10001899C();
  sub_10003F87C();
  sub_1000205E8();
  v1();
  sub_10003F7DC();
  sub_100021DB4();
  int v3 = v2();
  if (v3 == enum case for RootNavigationDestination.gallery(_:))
  {
    uint64_t v4 = 2;
LABEL_8:
    uint64_t v5 = sub_10003F7DC();
    v6(v5);
    return v4;
  }
  if (v3 == enum case for RootNavigationDestination.shortcuts(_:)) {
    return 0;
  }
  if (v3 != enum case for RootNavigationDestination.automations(_:))
  {
    uint64_t v4 = 0;
    goto LABEL_8;
  }
  return 1;
}

uint64_t sub_10001B6C4()
{
  return swift_release();
}

uint64_t sub_10001B6DC()
{
  return v0;
}

uint64_t sub_10001B6E8()
{
  return swift_allocObject();
}

uint64_t sub_10001B700()
{
  return 0;
}

void sub_10001B720()
{
}

void sub_10001B72C(uint64_t *a1)
{
  uint64_t v4 = type metadata accessor for GalleryNavigationDestination();
  sub_100022284();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_100021DD8();
  uint64_t v8 = *a1;
  id v9 = *(void **)&v2[*a1];
  if (!v9)
  {
    type metadata accessor for GalleryHostingViewController(0);
    (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v1, enum case for GalleryNavigationDestination.home(_:), v4);
    sub_1000119DC((unint64_t *)&unk_1000F5060, (void (*)(uint64_t))type metadata accessor for MainViewController);
    sub_100026E5C();
    id v10 = (id)WFUserInterfaceFromViewController();
    swift_getObjectType();
    uint64_t v11 = v2;
    uint64_t v12 = sub_100022F5C();
    id v14 = sub_10002B3F4(v12, v13, v4, (uint64_t)v10);
    char v15 = *(void **)&v2[v8];
    *(void *)&v2[v8] = v14;
    uint64_t v16 = v14;

    id v9 = 0;
  }
  id v17 = v9;
  sub_10002A68C();
}

id sub_10001B874(uint64_t a1)
{
  id v1 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:a1];
  id v2 = [v1 navigationBar];
  [v2 setPrefersLargeTitles:1];

  return v1;
}

uint64_t sub_10001B8E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for AppShortcutChiclet(0);
  sub_10001C100(v5);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_10001B944(a1, v7, a2);
}

uint64_t sub_10001B944@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v67 = a3;
  uint64_t v65 = type metadata accessor for EntryAnnotationModifier(0);
  __chkstk_darwin(v65);
  uint64_t v66 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for AppShortcutChiclet(0);
  uint64_t v63 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v64 = v6;
  uint64_t v56 = (uint64_t)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TopHitViewColorScheme();
  uint64_t v53 = *(void *)(v7 - 8);
  uint64_t v54 = v7;
  __chkstk_darwin(v7);
  id v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AggregatedEntry();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v50 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = v13;
  __chkstk_darwin(v12);
  char v15 = (char *)&v46 - v14;
  uint64_t v16 = sub_100025A08(&qword_1000F7C80);
  __chkstk_darwin(v16 - 8);
  id v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100025A08(&qword_1000F7C38);
  uint64_t v61 = *(void *)(v19 - 8);
  uint64_t v62 = v19;
  __chkstk_darwin(v19);
  id v60 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_100025A08(&qword_1000F7C18);
  __chkstk_darwin(v57);
  uint64_t v59 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = AggregatedEntry.entryIcon.getter();
  uint64_t v22 = type metadata accessor for TopHitIconMask();
  id v58 = v18;
  sub_100021594((uint64_t)v18, 1, 1, v22);
  uint64_t v51 = AggregatedEntry.iconBadges.getter();
  uint64_t v23 = AggregatedEntry.shortTitle.getter();
  uint64_t v25 = v24;
  id v26 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v26(v15, a1, v10);
  if (v25)
  {
    uint64_t v48 = v25;
    uint64_t v49 = v23;
  }
  else
  {
    uint64_t v27 = AggregatedEntry.name.getter();
    uint64_t v48 = v28;
    uint64_t v49 = v27;
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
  uint64_t v29 = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v9, a2 + *(int *)(v55 + 32), v54);
  id v30 = v50;
  v26(v50, a1, v10);
  uint64_t v31 = a1;
  uint64_t v47 = a1;
  uint64_t v32 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v55 = (uint64_t)v9;
  uint64_t v46 = v26;
  uint64_t v54 = swift_allocObject();
  id v33 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
  v33(v54 + ((v32 + 16) & ~v32), v30, v10);
  uint64_t v34 = v29;
  uint64_t v35 = v56;
  sub_10001C190(v34, v56);
  v26(v30, v31, v10);
  unint64_t v36 = (*(unsigned __int8 *)(v63 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  unint64_t v37 = (v64 + v32 + v36) & ~v32;
  uint64_t v38 = swift_allocObject();
  sub_10001BFBC(v35, v38 + v36, (void (*)(void))type metadata accessor for AppShortcutChiclet);
  v33(v38 + v37, v30, v10);
  id v39 = v60;
  TopHitView.init(icon:iconMask:badges:name:colorScheme:menu:tapHandler:)();
  uint64_t v40 = (uint64_t)v66;
  v46(v66, v47, v10);
  uint64_t v41 = v40 + *(int *)(v65 + 20);
  *(void *)uint64_t v41 = swift_getKeyPath();
  *(unsigned char *)(v41 + 8) = 0;
  uint64_t v43 = v61;
  uint64_t v42 = v62;
  uint64_t v44 = (uint64_t)v59;
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v59, v39, v62);
  sub_10001BFBC(v40, v44 + *(int *)(v57 + 36), (void (*)(void))type metadata accessor for EntryAnnotationModifier);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v39, v42);
  return sub_10001C4A0(v44, v67, &qword_1000F7C18);
}

uint64_t type metadata accessor for EntryAnnotationModifier(uint64_t a1)
{
  return sub_10001C010(a1, qword_1000F7B40);
}

uint64_t sub_10001BFBC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10001C094();
  uint64_t v4 = sub_10001C17C();
  v5(v4);
  return a2;
}

uint64_t sub_10001C010(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10001C044(uint64_t a1)
{
  sub_100021594(*(void *)(v1 - 128), 1, 1, a1);
  uint64_t v3 = *(void *)(v1 - 120);
  return sub_100021594(v3, 1, 1, a1);
}

id sub_10001C0B4()
{
  return sub_1000248B0(v0);
}

uint64_t sub_10001C100(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_10001C114()
{
  return IndexPath.init(item:section:)();
}

uint64_t sub_10001C138()
{
  return v0;
}

NSString sub_10001C158()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_10001C17C()
{
  return v0;
}

uint64_t sub_10001C190(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppShortcutChiclet(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for AppShortcutChiclet(uint64_t a1)
{
  return sub_10001C010(a1, (uint64_t *)&unk_1000F7A70);
}

uint64_t initializeWithCopy for AppShortcutChiclet(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for AutoShortcutAppSection();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a3[8];
  uint64_t v10 = (void *)(a1 + v8);
  uint64_t v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = a1 + v9;
  uint64_t v14 = a2 + v9;
  uint64_t v15 = type metadata accessor for TopHitViewColorScheme();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
  swift_retain();
  v16(v13, v14, v15);
  uint64_t v17 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  id v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  sub_100025A08(&qword_1000F8410);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  }
  else
  {
    void *v18 = *v19;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = a3[11];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  sub_100025A08(&qword_1000F4700);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = type metadata accessor for UserInterfaceSizeClass();
    if (sub_1000225EC((uint64_t)v23, 1, v24))
    {
      uint64_t v25 = sub_100025A08(&qword_1000F4890);
      memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      sub_100021594((uint64_t)v22, 0, 1, v24);
    }
  }
  else
  {
    *uint64_t v22 = *v23;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10001C4A0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100025A08(a3);
  sub_10001C094();
  uint64_t v4 = sub_10001C17C();
  v5(v4);
  return a2;
}

uint64_t sub_10001C4F0(void *a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v5 = (void *)Strong;
  uint64_t v6 = sub_10001C584(a1, a2);

  return v6;
}

uint64_t sub_10001C584(void *a1, uint64_t a2)
{
  id v78 = a1;
  uint64_t v76 = type metadata accessor for AutoShortcutAppSection();
  uint64_t v74 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v73 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100025A08((uint64_t *)&unk_1000F8480);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v75 = (char *)&v70 - v9;
  uint64_t v10 = type metadata accessor for ShortcutsLibraryItem.ItemType();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (void **)((char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_100025A08(&qword_1000F7690);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ShortcutsLibraryItem();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = v2;
  sub_100021E68(v19);
  uint64_t v77 = a2;
  sub_100022110();
  swift_release();
  if (sub_1000225EC((uint64_t)v16, 1, v17) == 1)
  {
    sub_100025E44((uint64_t)v16, &qword_1000F7690);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v21, v16, v17);
  uint64_t v23 = v17;
  ShortcutsLibraryItem.itemType.getter();
  int v24 = (*(uint64_t (**)(void **, uint64_t))(v11 + 88))(v13, v10);
  uint64_t v25 = v21;
  if (v24 == enum case for ShortcutsLibraryItem.ItemType.workflow(_:))
  {
    (*(void (**)(void **, uint64_t))(v11 + 96))(v13, v10);
    id v26 = *v13;
    v80[0] = type metadata accessor for LibraryCell();
    sub_100025A08(&qword_1000F8440);
    String.init<A>(describing:)();
    NSString v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v29 = [v78 dequeueReusableCellWithReuseIdentifier:v27 forIndexPath:isa];

    uint64_t v22 = swift_dynamicCastClassUnconditional();
    id v30 = v79;
    sub_1000255FC(v80);
    id v31 = v81;
    sub_10002582C(v80);
    sub_10001D210(v26, v31);

    unsigned __int8 v32 = [v30 isEditing];
    *(unsigned char *)(v22 + OBJC_IVAR____TtC9Shortcuts11LibraryCell_isJiggling) = v32;
    sub_10001D5D4();
    sub_10002282C(v22, 0, 0, 0);

    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v23);
    return v22;
  }
  uint64_t v71 = v23;
  uint64_t v72 = v18;
  if (v24 != enum case for ShortcutsLibraryItem.ItemType.autoShortcut(_:))
  {
    if (v24 == enum case for ShortcutsLibraryItem.ItemType.appShortcutTopHit(_:))
    {
      (*(void (**)(void **, uint64_t))(v11 + 96))(v13, v10);
      int v41 = *((unsigned __int8 *)v13 + *(int *)(sub_100025A08(&qword_1000F4B08) + 48));
      uint64_t v42 = (uint64_t)v73;
      uint64_t v43 = v74;
      (*(void (**)(char *, void **, uint64_t))(v74 + 32))(v73, v13, v76);
      v80[0] = _s10TopHitCellCMa();
      sub_100025A08((uint64_t *)&unk_1000F8450);
      String.init<A>(describing:)();
      NSString v44 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      Class v45 = IndexPath._bridgeToObjectiveC()().super.isa;
      id v46 = v78;
      id v47 = [v78 dequeueReusableCellWithReuseIdentifier:v44 forIndexPath:v45];

      uint64_t v22 = swift_dynamicCastClassUnconditional();
      [v46 frame];
      double Width = CGRectGetWidth(v82);
      uint64_t v49 = *(void **)&v79[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_flowLayout];
      [v49 sectionInset];
      double v51 = Width - v50;
      id v52 = [v49 sectionInset];
      double v54 = v51 - v53;
      sub_100021E68(v52);
      id v55 = sub_10002738C(v54, v42, v41);
      swift_release();
      sub_1000AC40C(v55);

      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v76);
      (*(void (**)(char *, uint64_t))(v72 + 8))(v25, v71);
      return v22;
    }
    if (v24 == enum case for ShortcutsLibraryItem.ItemType.emptyState(_:))
    {
      (*(void (**)(void **, uint64_t))(v11 + 96))(v13, v10);
      uint64_t v59 = *v13;
      id v60 = (char *)v13 + *(int *)(sub_100025A08((uint64_t *)&unk_1000F76A0) + 48);
      v80[0] = _s16EmptySectionCellCMa();
      sub_100025A08(&qword_1000F8448);
      String.init<A>(describing:)();
      NSString v61 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      Class v62 = IndexPath._bridgeToObjectiveC()().super.isa;
      id v63 = [v78 dequeueReusableCellWithReuseIdentifier:v61 forIndexPath:v62];

      uint64_t v22 = swift_dynamicCastClassUnconditional();
      sub_1000255FC(v80);
      id v64 = v81;
      sub_10002582C(v80);
      id v65 = [v64 floatingViewConfiguration];

      [v65 cornerRadius];
      uint64_t v67 = v66;

      *(void *)(v22
                + OBJC_IVAR____TtCC9Shortcuts21LibraryViewControllerP33_92562CD5492E919F87A213A8E0FD4AE916EmptySectionCell_cornerRadius) = v67;
      sub_1000ABA7C();
      sub_1000ABA5C(v59);
      (*(void (**)(char *, uint64_t))(v72 + 8))(v21, v71);
      uint64_t v68 = type metadata accessor for LibrarySectionOptions();
      (*(void (**)(char *, uint64_t))(*(void *)(v68 - 8) + 8))(v60, v68);
      return v22;
    }
    (*(void (**)(char *, uint64_t))(v72 + 8))(v21, v71);
    (*(void (**)(void **, uint64_t))(v11 + 8))(v13, v10);
    return 0;
  }
  (*(void (**)(void **, uint64_t))(v11 + 96))(v13, v10);
  id v33 = *v13;
  v80[0] = type metadata accessor for LibraryCell();
  sub_100025A08(&qword_1000F8440);
  String.init<A>(describing:)();
  NSString v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Class v35 = IndexPath._bridgeToObjectiveC()().super.isa;
  id v36 = [v78 dequeueReusableCellWithReuseIdentifier:v34 forIndexPath:v35];

  uint64_t v22 = swift_dynamicCastClassUnconditional();
  sub_100021E68(v22);
  uint64_t v37 = (uint64_t)v75;
  sub_1000AA524();
  swift_release();
  sub_100025DE8(v37, (uint64_t)v8, (uint64_t *)&unk_1000F8480);
  uint64_t v38 = type metadata accessor for AutoShortcutApp();
  if (sub_1000225EC((uint64_t)v8, 1, v38) == 1)
  {
    sub_100025E44((uint64_t)v8, (uint64_t *)&unk_1000F8480);
    uint64_t v39 = 0;
    uint64_t v40 = 0;
  }
  else
  {
    uint64_t v39 = AutoShortcutApp.bundleIdentifier.getter();
    uint64_t v40 = v56;
    (*(void (**)(char *, uint64_t))(*(void *)(v38 - 8) + 8))(v8, v38);
  }
  uint64_t v57 = v72;
  sub_1000255FC(v80);
  id v58 = v81;
  sub_10002582C(v80);
  sub_1000AEFC0(v33, v39, v40, v58);

  swift_bridgeObjectRelease();
  sub_100025E44(v37, (uint64_t *)&unk_1000F8480);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v21, v71);
  return v22;
}

void sub_10001CFA0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ShortcutChiclet.Model.Metrics();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = *(void **)&v0[OBJC_IVAR____TtC9Shortcuts11LibraryCell_layoutMetrics];
  if (v9)
  {
    uint64_t v20 = OBJC_IVAR____TtC9Shortcuts11LibraryCell_layoutMetrics;
    id v10 = v9;
    sub_10001D814(v10, (uint64_t)v8);
    dispatch thunk of ShortcutChiclet.Model.metrics.getter();
    sub_10001D3D0(&qword_1000F83C0, (void (*)(uint64_t))&type metadata accessor for ShortcutChiclet.Model.Metrics);
    char v11 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v12 = *(void (**)(char *, uint64_t))(v3 + 8);
    v12(v6, v2);
    if (v11)
    {
      v12(v8, v2);
    }
    else
    {
      uint64_t v19 = v12;
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
      dispatch thunk of ShortcutChiclet.Model.metrics.setter();
      id v13 = [v1 layer];
      uint64_t v14 = *(void **)&v1[v20];
      if (v14)
      {
        id v15 = [v14 floatingViewConfiguration];
        [v15 cornerRadius];
        double v17 = v16;
      }
      else
      {
        double v17 = 0.0;
      }
      uint64_t v18 = v19;
      [v13 setCornerRadius:v17];

      v18(v8, v2);
    }
  }
}

void sub_10001D210(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for AppEntityVisualState();
  __chkstk_darwin(v4);
  a1;
  sub_10001D5A8((uint64_t)a1);
  id v5 = a2;
  sub_10001D5B4(a2);
  uint64_t v6 = swift_unknownObjectRetain();
  sub_10001D4C8(v6, (uint64_t)&off_1000E7B40);
  WFDatabaseObjectDescriptor.id.getter();
  sub_10001D3D0(&qword_1000F61C0, (void (*)(uint64_t))&type metadata accessor for AppEntityVisualState);
  sub_100025A08((uint64_t *)&unk_1000F8490);
  sub_10001E88C(&qword_1000F61C8, (uint64_t *)&unk_1000F8490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  id v7 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation());
  sub_10001D418();
  uint64_t v8 = (void *)AppEntityViewAnnotation.init<A>(entityType:identifier:state:)();
  UIView.annotate(with:)();
  sub_100020F3C();
}

uint64_t sub_10001D3D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10001D418()
{
  unint64_t result = qword_1000F84A0;
  if (!qword_1000F84A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F84A0);
  }
  return result;
}

void sub_10001D464(void *a1, void *a2, void (*a3)(void))
{
  id v5 = *(void **)(v3 + *a2);
  *(void *)(v3 + *a2) = a1;
  id v6 = a1;

  a3();
}

uint64_t sub_10001D4C8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC9Shortcuts11LibraryCell_delegate + 8) = a2;
  swift_unknownObjectWeakAssign();
  sub_10001D518();

  return swift_unknownObjectRelease();
}

uint64_t sub_10001D518()
{
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  dispatch thunk of ShortcutChiclet.Model.buttonAction.setter();

  return swift_release();
}

void sub_10001D5A8(uint64_t a1)
{
}

void sub_10001D5B4(void *a1)
{
}

uint64_t sub_10001D5D4()
{
  int v1 = v0[OBJC_IVAR____TtC9Shortcuts11LibraryCell_isJiggling];
  id v2 = [v0 layer];
  if (v1 == 1)
  {
    id v3 = sub_1000AD344(0x80000001000C2EF0, 0.134);
    sub_1000AE9A4((uint64_t)v3, 0xD000000000000014, 0x80000001000C2E50, v2);

    id v4 = [v0 layer];
    id v5 = sub_1000AD344(0x80000001000C2ED0, 0.142);
    sub_1000AE9A4((uint64_t)v5, 0xD000000000000014, 0x80000001000C2E70, v4);

    id v6 = [v0 layer];
    id v7 = sub_1000AD4A4();
    sub_1000AE9A4((uint64_t)v7, 0xD000000000000010, 0x80000001000C2E90, v6);
  }
  else
  {
    NSString v8 = String._bridgeToObjectiveC()();
    [v2 removeAnimationForKey:v8];

    id v9 = [v0 layer];
    NSString v10 = String._bridgeToObjectiveC()();
    [v9 removeAnimationForKey:v10];

    id v6 = [v0 layer];
    id v7 = String._bridgeToObjectiveC()();
    [v6 removeAnimationForKey:v7];
  }

  return dispatch thunk of ShortcutChiclet.Model.isEditing.setter();
}

uint64_t sub_10001D814@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  v19[1] = a2;
  uint64_t v3 = type metadata accessor for ShortcutChiclet.Model.Metrics.Button();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  id v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v9 = (char *)v19 - v8;
  uint64_t v10 = type metadata accessor for ShortcutChiclet.Model.Metrics.Icon();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  double v16 = (char *)v19 - v15;
  [a1 workflowIconToLabelMargin];
  [a1 workflowGlyphDimension];
  ShortcutChiclet.Model.Metrics.Icon.init(textSpacing:dimension:)();
  [a1 workflowGlyphDimension];
  ShortcutChiclet.Model.Metrics.Button.init(pointSize:)();
  id v17 = [a1 floatingViewConfiguration];
  [v17 cornerRadius];

  [a1 workflowContentEdgeInsets];
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  ShortcutChiclet.Model.Metrics.init(cornerRadius:insets:icon:button:)();

  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
}

uint64_t sub_10001DAD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v93 = a1;
  uint64_t v95 = a2;
  uint64_t v86 = sub_100025A08(&qword_1000F7B78);
  uint64_t v75 = *(void *)(v86 - 8);
  uint64_t v3 = __chkstk_darwin(v86);
  uint64_t v73 = (char *)v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v74 = (char *)v71 - v5;
  uint64_t v89 = sub_100025A08(&qword_1000F7B80);
  __chkstk_darwin(v89);
  uint64_t v92 = (char *)v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_100025A08(&qword_1000F7B88);
  __chkstk_darwin(v82);
  uint64_t v84 = (char *)v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_100025A08(&qword_1000F7B90);
  __chkstk_darwin(v90);
  uint64_t v85 = (char *)v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AppEntityVisualState();
  uint64_t v80 = *(void *)(v9 - 8);
  uint64_t v81 = v9;
  __chkstk_darwin(v9);
  uint64_t v79 = (char *)v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_100025A08(&qword_1000F7B98);
  uint64_t v78 = *(void *)(v83 - 8);
  uint64_t v11 = __chkstk_darwin(v83);
  uint64_t v76 = (char *)v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v77 = (char *)v71 - v13;
  uint64_t v14 = (void *)type metadata accessor for AggregatedEntry();
  uint64_t v87 = *(v14 - 1);
  id v88 = v14;
  __chkstk_darwin(v14);
  double v16 = (id *)((char *)v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v94 = sub_100025A08(&qword_1000F7BA0);
  __chkstk_darwin(v94);
  uint64_t v91 = (char *)v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100025A08(&qword_1000F7BA8);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100025A08(&qword_1000F7BB0);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  int v24 = (char *)v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = v2 + *(int *)(type metadata accessor for EntryAnnotationModifier(0) + 20);
  uint64_t v26 = *(void *)v25;
  char v27 = *(unsigned char *)(v25 + 8);
  sub_10001EAA8(*(void *)v25, v27);
  char v28 = sub_10001ECA4(v26, v27);
  sub_10001EA04(v26, v27);
  if (v28)
  {
    id v29 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
    v29(v24, v93, v21);
    v29(v20, (uint64_t)v24, v21);
    swift_storeEnumTagMultiPayload();
    sub_10001E88C(&qword_1000F7BC0, &qword_1000F7BB0);
    sub_10001EAB4();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  }
  else
  {
    id v31 = v24;
    v71[1] = v18;
    uint64_t v72 = v20;
    uint64_t v32 = v21;
    uint64_t v34 = v87;
    id v33 = v88;
    (*(void (**)(id *, uint64_t, id))(v87 + 16))(v16, v2, v88);
    int v35 = (*(uint64_t (**)(id *, id))(v34 + 88))(v16, v33);
    if (v35 == enum case for AggregatedEntry.userShortcut(_:))
    {
      (*(void (**)(id *, id))(v34 + 96))(v16, v33);
      id v36 = *v16;
      id v88 = v36;
      uint64_t v37 = WFDatabaseObjectDescriptor.id.getter();
      uint64_t v39 = v38;

      uint64_t v96 = v37;
      uint64_t v97 = v39;
      uint64_t v100 = _swiftEmptyArrayStorage;
      sub_10001E918(&qword_1000F61C0, (void (*)(uint64_t))&type metadata accessor for AppEntityVisualState);
      sub_100025A08((uint64_t *)&unk_1000F8490);
      sub_10001E88C(&qword_1000F61C8, (uint64_t *)&unk_1000F8490);
      uint64_t v40 = v79;
      uint64_t v41 = v81;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v42 = sub_10001E88C(&qword_1000F7BC0, &qword_1000F7BB0);
      unint64_t v43 = sub_10001D418();
      NSString v44 = v76;
      View.appEntity<A>(entityType:identifier:state:)();
      (*(void (**)(char *, uint64_t))(v80 + 8))(v40, v41);
      swift_bridgeObjectRelease();
      uint64_t v45 = v78;
      id v46 = v77;
      uint64_t v47 = v83;
      (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v77, v44, v83);
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v84, v46, v47);
      swift_storeEnumTagMultiPayload();
      uint64_t v96 = v21;
      uint64_t v97 = &type metadata for WorkflowEntity;
      uint64_t v98 = v42;
      unint64_t v99 = v43;
      swift_getOpaqueTypeConformance2();
      uint64_t v48 = type metadata accessor for AppShortcutEntity();
      uint64_t v49 = sub_10001E918(&qword_1000F7BC8, (void (*)(uint64_t))&type metadata accessor for AppShortcutEntity);
      uint64_t v96 = v21;
      uint64_t v97 = (ValueMetadata *)v48;
      uint64_t v98 = v42;
      unint64_t v99 = v49;
      swift_getOpaqueTypeConformance2();
      uint64_t v50 = (uint64_t)v85;
      _ConditionalContent<>.init(storage:)();
      sub_100025DE8(v50, (uint64_t)v92, &qword_1000F7B90);
      swift_storeEnumTagMultiPayload();
      sub_10001EB54();
      uint64_t v51 = (uint64_t)v91;
      _ConditionalContent<>.init(storage:)();

      sub_100025E44(v50, &qword_1000F7B90);
      (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v47);
    }
    else if (v35 == enum case for AggregatedEntry.appShortcut(_:))
    {
      (*(void (**)(id *, id))(v34 + 96))(v16, v33);
      id v52 = *v16;
      id v88 = v52;
      uint64_t v53 = type metadata accessor for AppShortcutEntity();
      id v54 = [v52 id];
      uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v57 = v56;

      uint64_t v96 = v55;
      uint64_t v97 = v57;
      uint64_t v100 = _swiftEmptyArrayStorage;
      sub_10001E918(&qword_1000F61C0, (void (*)(uint64_t))&type metadata accessor for AppEntityVisualState);
      sub_100025A08((uint64_t *)&unk_1000F8490);
      sub_10001E88C(&qword_1000F61C8, (uint64_t *)&unk_1000F8490);
      id v58 = v79;
      uint64_t v59 = v81;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v60 = sub_10001E88C(&qword_1000F7BC0, &qword_1000F7BB0);
      uint64_t v61 = sub_10001E918(&qword_1000F7BC8, (void (*)(uint64_t))&type metadata accessor for AppShortcutEntity);
      Class v62 = v73;
      id v63 = (ValueMetadata *)v53;
      View.appEntity<A>(entityType:identifier:state:)();
      (*(void (**)(char *, uint64_t))(v80 + 8))(v58, v59);
      swift_bridgeObjectRelease();
      uint64_t v64 = v75;
      id v65 = v74;
      uint64_t v66 = v62;
      uint64_t v67 = v86;
      (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v74, v66, v86);
      (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v84, v65, v67);
      swift_storeEnumTagMultiPayload();
      unint64_t v68 = sub_10001D418();
      uint64_t v96 = v21;
      uint64_t v97 = &type metadata for WorkflowEntity;
      uint64_t v98 = v60;
      unint64_t v99 = v68;
      swift_getOpaqueTypeConformance2();
      uint64_t v96 = v21;
      uint64_t v97 = v63;
      uint64_t v98 = v60;
      unint64_t v99 = v61;
      swift_getOpaqueTypeConformance2();
      uint64_t v69 = (uint64_t)v85;
      _ConditionalContent<>.init(storage:)();
      sub_100025DE8(v69, (uint64_t)v92, &qword_1000F7B90);
      swift_storeEnumTagMultiPayload();
      sub_10001EB54();
      uint64_t v51 = (uint64_t)v91;
      _ConditionalContent<>.init(storage:)();

      sub_100025E44(v69, &qword_1000F7B90);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v67);
    }
    else
    {
      uint64_t v86 = (uint64_t)v16;
      uint64_t v70 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
      v70(v31, v93, v21);
      v70(v92, (uint64_t)v31, v21);
      swift_storeEnumTagMultiPayload();
      sub_10001EB54();
      sub_10001E88C(&qword_1000F7BC0, &qword_1000F7BB0);
      uint64_t v51 = (uint64_t)v91;
      _ConditionalContent<>.init(storage:)();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v31, v32);
      (*(void (**)(uint64_t, id))(v34 + 8))(v86, v33);
    }
    sub_100025DE8(v51, (uint64_t)v72, &qword_1000F7BA0);
    swift_storeEnumTagMultiPayload();
    sub_10001E88C(&qword_1000F7BC0, &qword_1000F7BB0);
    sub_10001EAB4();
    _ConditionalContent<>.init(storage:)();
    return sub_100025E44(v51, &qword_1000F7BA0);
  }
}

uint64_t sub_10001E88C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001E8D0(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001E8D0(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_10001E918(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001E960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AggregatedEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  LOBYTE(a2) = *(unsigned char *)(v9 + 8);
  sub_10001EAA8(*(void *)v9, a2);
  uint64_t v11 = *(void *)v8;
  char v12 = *(unsigned char *)(v8 + 8);
  *(void *)uint64_t v8 = v10;
  *(unsigned char *)(v8 + 8) = a2;
  sub_10001EA04(v11, v12);
  return a1;
}

uint64_t sub_10001EA04(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_10001EA10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AggregatedEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  LOBYTE(a2) = *(unsigned char *)(v9 + 8);
  sub_10001EAA8(*(void *)v9, a2);
  *(void *)uint64_t v8 = v10;
  *(unsigned char *)(v8 + 8) = a2;
  return a1;
}

uint64_t sub_10001EAA8(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

unint64_t sub_10001EAB4()
{
  unint64_t result = qword_1000F7BD0;
  if (!qword_1000F7BD0)
  {
    sub_10001E8D0(&qword_1000F7BA0);
    sub_10001EB54();
    sub_10001E88C(&qword_1000F7BC0, &qword_1000F7BB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F7BD0);
  }
  return result;
}

unint64_t sub_10001EB54()
{
  unint64_t result = qword_1000F7BB8;
  if (!qword_1000F7BB8)
  {
    sub_10001E8D0(&qword_1000F7B90);
    sub_10001E8D0(&qword_1000F7BB0);
    sub_10001E88C(&qword_1000F7BC0, &qword_1000F7BB0);
    sub_10001D418();
    swift_getOpaqueTypeConformance2();
    type metadata accessor for AppShortcutEntity();
    sub_10001E918(&qword_1000F7BC8, (void (*)(uint64_t))&type metadata accessor for AppShortcutEntity);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F7BB8);
  }
  return result;
}

uint64_t sub_10001ECA4(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v8 = static os_log_type_t.fault.getter();
  uint64_t v9 = static Log.runtimeIssuesLog.getter();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v13 = sub_10002D53C(1819242306, 0xE400000000000000, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath();
  sub_10001EA04(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v14;
}

uint64_t sub_10001EEA8()
{
  uint64_t v3 = v0;
  uint64_t v4 = sub_100025A08((uint64_t *)&unk_1000F70F0);
  uint64_t v5 = sub_1000165CC(v4);
  __chkstk_darwin(v5);
  sub_1000167F4();
  uint64_t v103 = v6;
  sub_1000240F4();
  uint64_t v102 = type metadata accessor for LibraryConfiguration();
  sub_100022284();
  uint64_t v101 = v7;
  __chkstk_darwin(v8);
  sub_1000204E8();
  NSString v9 = sub_1000188D4();
  NSString v10 = sub_1000188D4();
  id v11 = sub_1000247DC((uint64_t)v9, v10);

  uint64_t v100 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_100012DA0();
  sub_10002667C();
  unint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  unint64_t v108 = v12;
  id v18 = [v3 splitViewController];
  if (v18)
  {
    uint64_t v19 = v18;
    unint64_t v20 = (unint64_t)[v18 displayMode];

    BOOL v21 = (v20 & 0xFFFFFFFFFFFFFFFDLL) == 1;
  }
  else
  {
    BOOL v21 = 0;
  }
  id v22 = [v3 traitCollection];
  id v23 = [v22 horizontalSizeClass];

  if (v23 != (id)1 && (sub_100012DA0() & 1) == 0 && v21)
  {
    long long aBlock = 0u;
    long long v105 = 0u;
    id v24 = objc_allocWithZone((Class)UIBarButtonItem);
    sub_1000071E0();
    uint64_t v26 = v25;
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v99 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v99 < 0)
      {
        __break(1u);
        return result;
      }
    }
    sub_100062D4C(0, 0, v26);
  }
  id v27 = [v3 traitCollection];
  id v28 = [v27 horizontalSizeClass];

  if (v28 != (id)1)
  {
    id v29 = sub_10001FB14();
    [v29 setStyle:2];

    id v30 = [objc_allocWithZone((Class)UIView) init];
    id v31 = (uint64_t (*__ptr32 *)(int, int, id))[objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v30];

    if (v108 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v98 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v98 < 0)
      {
        __break(1u);
        goto LABEL_50;
      }
    }
    sub_100062D4C(0, 0, (uint64_t)v31);
    uint64_t v15 = (void *)sub_1000605D0((unint64_t)v15);
  }
  if (v17)
  {
    id v32 = sub_10001FB14();
    uint64_t v33 = sub_1000206B4();
    *(void *)(v33 + 16) = v17;
    uint64_t v106 = sub_100063EC0;
    uint64_t v107 = v33;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v105 = sub_1000608D4;
    *((void *)&v105 + 1) = &unk_1000E6468;
    uint64_t v34 = _Block_copy(&aBlock);
    swift_release();
    [v32 setTitleMenuProvider:v34];
    _Block_release(v34);

    id v35 = sub_10001FB14();
    [v35 setLargeTitleDisplayMode:2];
  }
  else
  {
    id v35 = sub_10001FB14();
    [v35 setTitleMenuProvider:0];
  }

  id v36 = sub_10001FB14();
  uint64_t v37 = swift_bridgeObjectRetain();
  sub_10001FB6C(v37, v36, (SEL *)&selRef_setLeftBarButtonItems_);

  id v38 = sub_10001FB14();
  sub_10001FB6C((uint64_t)v15, v38, (SEL *)&selRef_setRightBarButtonItems_);

  id v39 = sub_10001FB14();
  if (sub_100012DA0())
  {
    BOOL v40 = 0;
  }
  else
  {
    id v41 = [v3 traitCollection];
    id v42 = [v41 horizontalSizeClass];

    BOOL v40 = v42 != (id)1;
  }
  [v39 setLeftItemsSupplementBackButton:v40];

  unint64_t v43 = *(void **)&v3[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_searchController];
  if (v43)
  {
    id v44 = v43;
    sub_100028468();
  }
  uint64_t v15 = self;
  [v15 defaultFontSize];
  double v2 = v45;
  id v31 = &off_1000BA000;
  if (!sub_100012DA0()) {
    goto LABEL_27;
  }
  unint64_t v46 = (unint64_t)sub_10000823C();
  if (!(v46 >> 62))
  {
    uint64_t v47 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_23;
  }
LABEL_50:
  uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
LABEL_23:
  swift_bridgeObjectRelease();
  if (v47 >= 1)
  {
    id v48 = sub_10001FB14();
    sub_100025A08(&qword_1000F51F0);
    uint64_t v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = *((_OWORD *)v31 + 176);
    unint64_t v50 = (unint64_t)sub_10000823C();
    uint64_t v51 = v103;
    if (v50 >> 62) {
      uint64_t v52 = _CocoaArrayWrapper.endIndex.getter();
    }
    else {
      uint64_t v52 = *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    *(void *)(v49 + 56) = &type metadata for Int;
    *(void *)(v49 + 64) = &protocol witness table for Int;
    *(void *)(v49 + 32) = v52;
    uint64_t v53 = static String.localizedStringWithFormat(_:_:)();
    uint64_t v55 = v54;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000287FC(v53, v55, v48, (SEL *)&selRef_setTitle_);

    id v56 = [v15 monospacedDigitSystemFontOfSize:v2 weight:UIFontWeightSemibold];
    goto LABEL_31;
  }
LABEL_27:
  swift_bridgeObjectRelease();
  id v57 = sub_10001FB14();
  if (sub_100012DA0())
  {
    NSString v58 = String._bridgeToObjectiveC()();
    NSString v59 = String._bridgeToObjectiveC()();
    id v60 = sub_1000248B0(v58);

    uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v63 = v62;
  }
  else
  {
    sub_1000225B4();
    sub_1000205E8();
    v64();
    uint64_t v61 = LibraryConfiguration.title.getter();
    uint64_t v63 = v65;
    (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v1, v102);
  }
  uint64_t v51 = v103;
  sub_1000287FC(v61, v63, v57, (SEL *)&selRef_setTitle_);

  id v56 = [v15 boldSystemFontOfSize:v2];
LABEL_31:
  id v66 = v56;
  id v67 = [v3 navigationController];
  if (v67)
  {
    unint64_t v68 = v67;
    id v69 = [v67 navigationBar];

    sub_100025A08(&qword_1000F4B20);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = *((_OWORD *)v31 + 176);
    *(void *)(inited + 32) = NSFontAttributeName;
    *(void *)(inited + 64) = sub_100029C7C(0, &qword_1000F4B28);
    *(void *)(inited + 40) = v66;
    type metadata accessor for Key(0);
    sub_100026570(&qword_1000F4B30, type metadata accessor for Key);
    uint64_t v71 = NSFontAttributeName;
    id v72 = v66;
    uint64_t v73 = Dictionary.init(dictionaryLiteral:)();
    sub_100024D14(v73, v69);
  }
  id v74 = [v3 traitCollection];
  id v75 = [v74 horizontalSizeClass];

  if (v75 != (id)1)
  {
LABEL_36:
    uint64_t v78 = *(void **)&v3[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customEditButton];
    if (!v78) {
      goto LABEL_38;
    }
    goto LABEL_37;
  }
  id v76 = sub_10001FB14();
  id v77 = [v76 titleMenuProvider];

  if (v77)
  {
    _Block_release(v77);
    goto LABEL_36;
  }
  uint64_t v78 = *(void **)&v3[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customEditButton];
  if (v78)
  {
LABEL_37:
    id v79 = v78;
    WFConvertEdgeInsetsToRTLIfNeeded();
    [v79 setContentEdgeInsets:];
  }
LABEL_38:
  if (swift_unknownObjectWeakLoadStrong())
  {
    swift_getObjectType();
    dispatch thunk of LibraryDelegate.runningWorkflow.getter();
    swift_unknownObjectRelease();
    uint64_t v80 = type metadata accessor for RunningWorkflow();
    BOOL v81 = sub_1000225EC(v51, 1, v80) != 1;
  }
  else
  {
    uint64_t v82 = type metadata accessor for RunningWorkflow();
    sub_100021594(v51, 1, 1, v82);
    BOOL v81 = 0;
  }
  sub_1000285E8(v51, (uint64_t *)&unk_1000F70F0);
  sub_100025A08(&qword_1000F5E98);
  uint64_t v83 = swift_initStackObject();
  *(_OWORD *)(v83 + 16) = xmmword_1000BABE0;
  uint64_t v84 = *(void **)&v3[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customEditButton];
  *(void *)(v83 + 32) = v84;
  uint64_t v85 = *(void **)&v3[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customPlusButton];
  *(void *)(v83 + 40) = v85;
  *(void *)&long long aBlock = v83;
  specialized Array._endMutation()();
  uint64_t v86 = aBlock + 32;
  id v87 = v84;
  id v88 = v85;
  uint64_t v89 = 0;
  do
  {
    uint64_t v90 = *(void **)(v86 + 8 * v89);
    uint64_t v91 = v89 + 1;
    if (v90)
    {
      id v92 = v90;
      [v92 setUserInteractionEnabled:!v81];
      uint64_t v93 = self;
      uint64_t v94 = swift_allocObject();
      *(void *)(v94 + 16) = v92;
      *(unsigned char *)(v94 + 24) = v81;
      uint64_t v106 = sub_10000E560;
      uint64_t v107 = v94;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v105 = sub_10000E51C;
      *((void *)&v105 + 1) = &unk_1000E6418;
      uint64_t v95 = _Block_copy(&aBlock);
      id v96 = v92;
      swift_release();
      [v93 animateWithDuration:v95 animations:0.15];
      _Block_release(v95);
    }
    uint64_t v89 = 1;
  }
  while (v91 != 2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10001FA9C()
{
  return type metadata accessor for String.LocalizationValue();
}

id sub_10001FAC4()
{
  uint64_t v3 = *(const char **)(v1 + 584);
  return [v0 v3];
}

uint64_t sub_10001FAF0()
{
  *(_OWORD *)(v0 - 128) = 0u;
  *(_OWORD *)(v0 - 112) = 0u;
  return Tips.Parameter.wrappedValue.setter();
}

id sub_10001FB14()
{
  uint64_t v3 = *(const char **)(v1 + 1504);
  return [v0 v3];
}

uint64_t sub_10001FB44()
{
  return v0;
}

uint64_t sub_10001FB54()
{
  return *(void *)(v0 - 296);
}

void sub_10001FB6C(uint64_t a1, void *a2, SEL *a3)
{
  sub_100029C7C(0, (unint64_t *)&unk_1000F7100);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 *a3];
}

double sub_10001FBF8(void *a1)
{
  id v85 = a1;
  uint64_t v80 = type metadata accessor for AutoShortcutApp();
  sub_100022284();
  uint64_t v79 = v2;
  __chkstk_darwin(v3);
  sub_1000167F4();
  sub_100025B4C(v4);
  uint64_t v84 = type metadata accessor for UIListContentConfiguration.TextProperties();
  sub_100022284();
  uint64_t v83 = v5;
  __chkstk_darwin(v6);
  sub_1000167F4();
  sub_100025B4C(v7);
  uint64_t v82 = type metadata accessor for UIListContentConfiguration();
  sub_100022284();
  uint64_t v81 = v8;
  __chkstk_darwin(v9);
  sub_10002206C();
  uint64_t v10 = sub_100025A08(&qword_1000F4B00);
  uint64_t v11 = sub_1000165CC(v10);
  __chkstk_darwin(v11);
  sub_10001888C();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = (void (*)(void))type metadata accessor for LibrarySectionOptions.Header();
  sub_100022284();
  uint64_t v17 = v16;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v20 = __chkstk_darwin(v19);
  id v22 = (char *)&v77 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v77 - v24;
  uint64_t v78 = v1;
  sub_100021E68();
  sub_100025884();
  swift_release();
  uint64_t v26 = type metadata accessor for ShortcutsLibrarySection();
  if (sub_1000225EC(v14, 1, v26) != 1)
  {
    ShortcutsLibrarySection.header.getter();
    sub_100016618();
    v28();
    sub_100020698();
    v29();
    id v30 = *(void (**)(char *, char *, void (*)(void)))(v17 + 16);
    v30(v22, v25, v15);
    sub_100021DB4();
    int v32 = v31();
    uint64_t v33 = v15;
    if (v32 == enum case for LibrarySectionOptions.Header.nameAndIconName(_:))
    {
      uint64_t v34 = sub_1000224F8();
      ((void (*)(uint64_t))v30)(v34);
      uint64_t v35 = sub_10001889C();
      v36(v35);
      uint64_t v78 = v22;
      swift_bridgeObjectRelease();
      static UIListContentConfiguration.prominentInsetGroupedHeader()();
      sub_1000205C8();
      sub_1000222A0();
      v37();
      id v38 = (void *)UIListContentConfiguration.TextProperties.font.getter();
      sub_1000222A0();
      v39();
      NSString v40 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      sub_100025A08(&qword_1000F4B20);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1000BAB00;
      *(void *)(inited + 32) = NSFontAttributeName;
      *(void *)(inited + 64) = sub_100029C7C(0, &qword_1000F4B28);
      *(void *)(inited + 40) = v38;
      type metadata accessor for Key(0);
      sub_100023888(&qword_1000F4B30, type metadata accessor for Key);
      id v42 = NSFontAttributeName;
      id v43 = v38;
      sub_100018978();
      Class isa = sub_1000204C8().super.isa;
      swift_bridgeObjectRelease();
      [v40 sizeWithAttributes:isa];

      [v85 frame];
      double Width = CGRectGetWidth(v86);

      uint64_t v15 = *(void (**)(void))(v17 + 8);
LABEL_8:
      sub_10001C0A4();
      v15();
      NSString v58 = v78;
LABEL_9:
      ((void (*)(char *, void (*)(void)))v15)(v58, v33);
      return Width;
    }
    id v77 = v25;
    if (v32 == enum case for LibrarySectionOptions.Header.appShortcut(_:))
    {
      uint64_t v45 = sub_1000224F8();
      ((void (*)(uint64_t))v30)(v45);
      uint64_t v46 = sub_10001889C();
      v47(v46);
      sub_100020698();
      v48();
      static UIListContentConfiguration.prominentInsetGroupedHeader()();
      sub_1000205C8();
      sub_1000222A0();
      v49();
      unint64_t v50 = (void *)UIListContentConfiguration.TextProperties.font.getter();
      sub_1000222A0();
      v51();
      AutoShortcutApp.localizedName.getter();
      NSString v52 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      sub_100025A08(&qword_1000F4B20);
      uint64_t v53 = swift_initStackObject();
      *(_OWORD *)(v53 + 16) = xmmword_1000BAB00;
      uint64_t v15 = (void (*)(void))NSFontAttributeName;
      *(void *)(v53 + 32) = NSFontAttributeName;
      *(void *)(v53 + 64) = sub_100029C7C(0, &qword_1000F4B28);
      *(void *)(v53 + 40) = v50;
      type metadata accessor for Key(0);
      sub_100023888(&qword_1000F4B30, type metadata accessor for Key);
      uint64_t v54 = NSFontAttributeName;
      id v55 = v50;
      uint64_t v78 = v22;
      sub_100018978();
      Class v56 = sub_1000204C8().super.isa;
      swift_bridgeObjectRelease();
      [v52 sizeWithAttributes:v56];

      [v85 frame];
      double Width = CGRectGetWidth(v87);

      sub_10001B6B8();
      v57();
      sub_1000206A4();
      goto LABEL_8;
    }
    if (v32 == enum case for LibrarySectionOptions.Header.tip(_:))
    {
      if (sub_100009BBC())
      {
        _s27MiniTipCollectionHeaderViewCMa();
        id v60 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
        uint64_t v61 = sub_1000AF26C(v60);

        if (v61)
        {
          [v85 frame];
          double v62 = CGRectGetWidth(v88);
          sub_100025C34(v62, UILayoutFittingExpandedSize.height, v64, v65, v63, "systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:");
          double Width = v66;

          uint64_t v15 = *(void (**)(void))(v17 + 8);
LABEL_17:
          sub_10001C0A4();
          v15();
          NSString v58 = v22;
          goto LABEL_9;
        }
        uint64_t v15 = *(void (**)(void))(v17 + 8);
LABEL_19:
        sub_10001C0A4();
        v15();
        sub_10001C0A4();
        v15();
        return 0.0;
      }
    }
    else if (v32 == enum case for LibrarySectionOptions.Header.syncUnavailable(_:))
    {
      _s35SyncUnavailableCollectionHeaderViewCMa();
      id v67 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
      uint64_t v68 = (uint64_t)v78;
      sub_1000311E4();
      uint64_t v71 = sub_1000AEB04(0.0, v69, 0.0, v70, v68, v67);

      [v85 frame];
      double v72 = CGRectGetWidth(v89);
      sub_100025C34(v72, UILayoutFittingExpandedSize.height, v74, v75, v73, "systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:");
      double Width = v76;

      sub_1000206A4();
      goto LABEL_17;
    }
    sub_1000206A4();
    goto LABEL_19;
  }
  sub_10002D678(v14, &qword_1000F4B00);
  return 0.0;
}

void sub_100020444(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

void type metadata accessor for Key(uint64_t a1)
{
}

uint64_t sub_1000204A0()
{
  return type metadata accessor for Locale();
}

NSDictionary sub_1000204C8()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_100020500()
{
  return v0;
}

uint64_t sub_100020530()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t sub_100020554()
{
  return 0;
}

uint64_t sub_100020570@<X0>(unint64_t a1@<X8>)
{
  if (a1 >= 0xFFFFFFFF) {
    LODWORD(a1) = -1;
  }
  return (a1 + 1);
}

uint64_t sub_100020584()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

void sub_1000205AC(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 128) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1000205C8()
{
  return UIListContentConfiguration.textProperties.getter();
}

uint64_t sub_100020610(uint64_t a1)
{
  *uint64_t v1 = a1;
  return IntentParameter.wrappedValue.modify();
}

id sub_100020650()
{
  return sub_1000248B0(v0);
}

uint64_t sub_1000206A4()
{
  return *(void *)(v0 - 336);
}

uint64_t sub_1000206B4()
{
  return swift_allocObject();
}

uint64_t sub_1000206E0()
{
  return v0;
}

double sub_1000206F4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v86 = a2;
  uint64_t v82 = a1;
  uint64_t v88 = type metadata accessor for IndexPath();
  sub_100022284();
  uint64_t v87 = v7;
  __chkstk_darwin(v8);
  sub_1000167F4();
  uint64_t v85 = v9;
  uint64_t v10 = sub_100025A08(&qword_1000F7690);
  uint64_t v11 = sub_1000165CC(v10);
  __chkstk_darwin(v11);
  sub_1000167F4();
  sub_100025B4C(v12);
  uint64_t v84 = type metadata accessor for ShortcutsLibraryItem.ItemType();
  sub_100022284();
  uint64_t v83 = v13;
  __chkstk_darwin(v14);
  sub_10001888C();
  uint64_t v17 = v16 - v15;
  uint64_t v89 = type metadata accessor for LibrarySectionOptions.Header();
  sub_100022284();
  uint64_t v91 = v18;
  __chkstk_darwin(v19);
  sub_1000074A4();
  uint64_t v20 = sub_100025A08(&qword_1000F4B00);
  uint64_t v21 = sub_1000165CC(v20);
  __chkstk_darwin(v21);
  sub_10001888C();
  uint64_t v24 = v23 - v22;
  uint64_t v25 = type metadata accessor for LibrarySectionOptions();
  sub_100022284();
  uint64_t v92 = v26;
  uint64_t v28 = __chkstk_darwin(v27);
  __chkstk_darwin(v28);
  id v30 = (char *)&v76 - v29;
  sub_1000255FC(v93);
  id v31 = v93[3];
  sub_10002582C(v93);
  [v31 sectionInset];
  double v33 = v32;

  sub_100021E68();
  sub_100025884();
  swift_release();
  uint64_t v34 = type metadata accessor for ShortcutsLibrarySection();
  if (sub_1000225EC(v24, 1, v34) == 1)
  {
    sub_10002D678(v24, &qword_1000F4B00);
  }
  else
  {
    uint64_t v77 = v17;
    uint64_t v79 = a3;
    uint64_t v78 = v5;
    ShortcutsLibrarySection.options.getter();
    sub_100016618();
    v35();
    sub_100020698();
    v36();
    LibrarySectionOptions.header.getter();
    uint64_t v37 = v91;
    uint64_t v38 = v4;
    uint64_t v39 = v89;
    sub_100021DB4();
    int v41 = v40();
    uint64_t v42 = v39;
    uint64_t v81 = v25;
    uint64_t v80 = v30;
    if (v41 == enum case for LibrarySectionOptions.Header.tip(_:))
    {
      uint64_t v43 = v39;
      char v44 = LibrarySectionOptions.hasNoShortcuts.getter();
      uint64_t v45 = v78;
      uint64_t v46 = v86;
      uint64_t v47 = v87;
      if ((v44 & 1) != 0 || (sub_100009BBC() & 1) != 0 && sub_100008330()) {
        double v33 = 0.0;
      }
      uint64_t v42 = v43;
      uint64_t v37 = v91;
      uint64_t v48 = v38;
      uint64_t v49 = v46;
    }
    else
    {
      if (v41 == enum case for LibrarySectionOptions.Header.none(_:))
      {
        uint64_t v45 = v78;
        uint64_t v50 = v42;
        BOOL v51 = sub_100008330();
        uint64_t v42 = v50;
        if (v51) {
          double v33 = 0.0;
        }
      }
      else
      {
        if (v41 == enum case for LibrarySectionOptions.Header.syncUnavailable(_:)) {
          double v33 = 0.0;
        }
        uint64_t v45 = v78;
      }
      uint64_t v49 = v86;
      uint64_t v47 = v87;
      uint64_t v48 = v4;
    }
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v48, v42);
    sub_100021E68();
    IndexPath.init(item:section:)();
    NSString v52 = v45;
    uint64_t v53 = v90;
    sub_100022110();
    swift_release();
    uint64_t v54 = *(void (**)(void))(v47 + 8);
    sub_10001B6B8();
    v54();
    uint64_t v55 = type metadata accessor for ShortcutsLibraryItem();
    if (sub_1000225EC(v53, 1, v55) == 1)
    {
      sub_10002D678(v53, &qword_1000F7690);
    }
    else
    {
      uint64_t v58 = v77;
      ShortcutsLibraryItem.itemType.getter();
      sub_100016618();
      v59();
      uint64_t v60 = v83;
      uint64_t v61 = v84;
      sub_100021DB4();
      if (v62() != enum case for ShortcutsLibraryItem.ItemType.appShortcutTopHit(_:))
      {
        uint64_t v73 = sub_10002A00C();
        v74(v73);
        (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v58, v61);
        return v33;
      }
      (*(void (**)(uint64_t, uint64_t))(v60 + 96))(v58, v61);
      type metadata accessor for AutoShortcutAppSection();
      sub_10002498C();
      sub_100016618();
      v63();
      IndexPath.init(item:section:)();
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      sub_10001B6B8();
      v54();
      double v65 = v82;
      [v52 collectionView:v82 layout:v49 sizeForItemAtIndexPath:isa];
      double v67 = v66;
      double v69 = v68;

      if (v67 != 0.0 || v69 != 0.0)
      {
        [v65 frame];
        CGRectGetWidth(v95);
        sub_1000255FC(v94);
        id v70 = (id)v94[3];
        sub_10002582C(v94);
        [v70 sectionInset];

        uint64_t v71 = sub_10002A00C();
        v72(v71);
        return v33;
      }
    }
    uint64_t v56 = sub_10002A00C();
    v57(v56);
  }
  return v33;
}

void sub_100020F3C()
{
  sub_10002066C();
  uint64_t v3 = v1;
  uint64_t v4 = type metadata accessor for ShortcutChiclet();
  sub_100022284();
  uint64_t v62 = v5;
  __chkstk_darwin(v6);
  sub_1000206CC();
  uint64_t v60 = v7;
  sub_1000215FC();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v54 - v9;
  uint64_t v11 = sub_100025A08(&qword_1000F83A8);
  uint64_t v12 = sub_1000165CC(v11);
  __chkstk_darwin(v12);
  sub_10001C0D0();
  uint64_t v13 = sub_100025A08(&qword_1000F83B0);
  uint64_t v14 = sub_1000165CC(v13);
  __chkstk_darwin(v14);
  sub_1000226F0();
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)v54 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)v54 - v19;
  sub_100021594((uint64_t)v54 - v19, 1, 1, v4);
  uint64_t v21 = *(void **)&v1[OBJC_IVAR____TtC9Shortcuts11LibraryCell_autoShortcut];
  if (v21)
  {
    id v22 = v21;
    id v55 = v22;
    id v23 = [v22 chicletColor];
    uint64_t v61 = v0;
    uint64_t v24 = (uint64_t)v23;
    unsigned __int16 v25 = (unsigned __int16)[self defaultGlyphCharacter];
    id v57 = v18;
    unsigned __int16 v26 = v25;
    id v27 = objc_allocWithZone((Class)WFWorkflowIcon);
    id v28 = sub_1000AE4CC(v24, v26, 0, 0xF000000000000000);
    sub_1000206B4();
    swift_unknownObjectWeakInit();
    type metadata accessor for ShortcutChiclet.MenuItemDataSource();
    sub_100018828();
    uint64_t v29 = ShortcutChiclet.MenuItemDataSource.init(getMenuItems:)();
    NSString v59 = (char *)v4;
    uint64_t v30 = *(void *)&v3[OBJC_IVAR____TtC9Shortcuts11LibraryCell_model];
    *uint64_t v2 = v29;
    uint64_t v56 = v29;
    uint64_t v31 = enum case for ShortcutChiclet.ButtonType.menu(_:);
    uint64_t v32 = type metadata accessor for ShortcutChiclet.ButtonType();
    sub_10001C094();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v33 + 104))(v2, v31, v32);
    sub_100021594((uint64_t)v2, 0, 1, v32);
    swift_retain();
    v54[1] = v30;
    dispatch thunk of ShortcutChiclet.Model.buttonType.setter();
    id v34 = [v22 triggerPhrase];
    uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v54[3] = v36;
    v54[4] = v35;

    uint64_t v64 = sub_100029C7C(0, &qword_1000F83B8);
    double v65 = &protocol witness table for WFWorkflowIcon;
    id v63 = v28;
    v54[2] = *(void *)&v3[OBJC_IVAR____TtC9Shortcuts11LibraryCell_associatedBundleId];
    uint64_t v58 = v20;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    id v37 = v28;
    uint64_t v1 = v3;
    sub_10002335C();
    sub_1000233F4();
    sub_1000232C4();
    uint64_t v18 = v57;
    uint64_t v0 = v61;
    uint64_t v20 = v58;
    uint64_t v4 = (uint64_t)v59;
    ShortcutChiclet.init(name:icon:textColor:associatedAppBundleIdentifier:model:progress:runAction:stopAction:accessibilitySelectionAction:)();
    swift_release();

    uint64_t v38 = (uint64_t)v20;
  }
  else
  {
    uint64_t v39 = *(void **)&v1[OBJC_IVAR____TtC9Shortcuts11LibraryCell_workflowReference];
    if (!v39) {
      goto LABEL_6;
    }
    uint64_t v61 = v0;
    uint64_t v58 = v39;
    swift_retain();
    swift_retain();
    sub_10002335C();
    NSString v59 = v10;
    sub_1000233F4();
    sub_1000232C4();
    uint64_t v0 = v61;
    uint64_t v10 = v59;
    uint64_t v3 = v1;
    ShortcutChiclet.init(reference:model:progress:runAction:stopAction:accessibilitySelectionAction:shouldUseClearBackground:)();
    uint64_t v38 = (uint64_t)v20;
  }
  sub_100025E44(v38, &qword_1000F83B0);
  sub_100021594((uint64_t)v18, 0, 1, v4);
  sub_10002382C((uint64_t)v18, (uint64_t)v20, &qword_1000F83B0);
LABEL_6:
  sub_100025DE8((uint64_t)v20, v0, &qword_1000F83B0);
  if (sub_1000225EC(v0, 1, v4) == 1)
  {
    sub_100025E44((uint64_t)v20, &qword_1000F83B0);
    uint64_t v20 = (char *)v0;
  }
  else
  {
    uint64_t v40 = sub_100025DDC();
    v41(v40);
    uint64_t v42 = *(void **)&v3[OBJC_IVAR____TtC9Shortcuts11LibraryCell_hostingView];
    if (v42)
    {
      uint64_t v43 = v62;
      sub_1000205E8();
      v44();
      id v45 = v42;
      sub_10001685C();
      dispatch thunk of _UIHostingView.rootView.setter();
    }
    else
    {
      type metadata accessor for LibraryCellHostingView(0);
      uint64_t v43 = v62;
      uint64_t v46 = v60;
      sub_1000205E8();
      v47();
      uint64_t v48 = (void *)sub_10002272C(v46);
      uint64_t v49 = self;
      id v50 = v48;
      id v51 = [v49 clearColor];
      sub_100022510((uint64_t)v51, "setBackgroundColor:");

      id v52 = [v3 contentView];
      [v52 addSubview:v50];

      id v53 = v50;
      sub_100023610((uint64_t)v50);
    }
    (*(void (**)(char *, uint64_t))(v43 + 8))(v10, v4);
  }
  sub_100025E44((uint64_t)v20, &qword_1000F83B0);
  sub_10001885C();
}

uint64_t sub_100021594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1000215BC(uint64_t a1)
{
  return sub_1000225EC(a1, 1, v1);
}

void sub_1000215DC(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_10002161C()
{
  return UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
}

uint64_t sub_100021638()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_100021650()
{
  return type metadata accessor for LocalizedStringResource();
}

void sub_100021678(void *a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for AutoShortcutAppSection();
  sub_100022284();
  __chkstk_darwin(v7);
  sub_1000167F4();
  uint64_t v60 = v8;
  uint64_t v9 = type metadata accessor for ShortcutsLibraryItem.ItemType();
  sub_100022284();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_1000074A4();
  uint64_t v13 = sub_100025A08(&qword_1000F7690);
  uint64_t v14 = sub_1000165CC(v13);
  __chkstk_darwin(v14);
  sub_10002206C();
  uint64_t v15 = type metadata accessor for ShortcutsLibraryItem();
  sub_100022284();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  sub_10001888C();
  uint64_t v21 = v20 - v19;
  sub_100021E68();
  sub_100022110();
  swift_release();
  if (sub_1000225EC(v4, 1, v15) == 1)
  {
    sub_10002D678(v4, &qword_1000F7690);
LABEL_16:
    sub_100021F78();
    return;
  }
  sub_100020698();
  v22();
  ShortcutsLibraryItem.itemType.getter();
  sub_100021DB4();
  int v24 = v23();
  if (v24 == enum case for ShortcutsLibraryItem.ItemType.appShortcutTopHit(_:))
  {
    uint64_t v25 = sub_100025E94();
    v26(v25);
    int v59 = *((unsigned __int8 *)v5 + *(int *)(sub_100025A08(&qword_1000F4B08) + 48));
    sub_100020698();
    v27();
    id v28 = [v3 traitCollection];
    [v28 horizontalSizeClass];

    [a1 frame];
    double Width = CGRectGetWidth(v69);
    sub_100021E68();
    sub_1000255FC(v67);
    id v30 = v67[3];
    memcpy(v66, v67, 0x50uLL);
    id v31 = v67[10];
    [v67[3] sectionInset];
    double v33 = Width - v32;
    [v30 sectionInset];
    double v35 = v33 - v34;
    AutoShortcutAppSection.items.getter();
    type metadata accessor for AggregatedEntry();
    sub_100023888((unint64_t *)&unk_1000F4B10, (void (*)(uint64_t))&type metadata accessor for AggregatedEntry);
    Swift::UInt v36 = Array<A>.hashValue.getter();
    swift_bridgeObjectRelease();
    sub_100024B38(v36, (uint64_t)v31, v35);
    if (v37)
    {
      id v51 = sub_10002738C(v35, v60, v59);
      [v51 sizeThatFits:v35];
      swift_isUniquelyReferenced_nonNull_native();
      __dst[0] = v31;
      double v52 = sub_100021F78();
      sub_100024A10(v36, v53, v52, v54, v35);
      id v31 = (id)__dst[0];
      swift_release();

      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
    }
    memcpy(__dst, v66, 0x50uLL);
    __dst[10] = v31;
    sub_100026058((uint64_t)__dst);
    sub_100016618();
    v55();
    uint64_t v15 = a3;
    goto LABEL_15;
  }
  if (v24 != enum case for ShortcutsLibraryItem.ItemType.emptyState(_:))
  {
    sub_1000255FC(__dst);
    id v56 = (id)__dst[3];
    sub_10002582C(__dst);
    [v56 itemSize];

    (*(void (**)(id *, uint64_t))(v11 + 8))(v5, v9);
LABEL_15:
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v21, v15);
    goto LABEL_16;
  }
  uint64_t v38 = sub_100025E94();
  v39(v38);

  [a1 frame];
  CGRectGetWidth(v70);
  sub_1000255FC(v62);
  id v40 = (id)v62[3];
  sub_10002582C(v62);
  [v40 sectionInset];

  sub_1000255FC(v63);
  id v41 = (id)v63[3];
  sub_10002582C(v63);
  [v41 sectionInset];

  [a1 frame];
  CGRectGetHeight(v71);
  sub_1000255FC(v64);
  id v42 = (id)v64[3];
  sub_10002582C(v64);
  [v42 sectionInset];

  sub_1000255FC(v65);
  id v43 = (id)v65[3];
  sub_10002582C(v65);
  [v43 sectionInset];

  id v44 = sub_10001FAC4();
  if (v44)
  {
    id v45 = v44;
    [v44 safeAreaInsets];

    id v46 = sub_10001FAC4();
    if (v46)
    {
      uint64_t v47 = v46;
      [v46 safeAreaInsets];

      if ((uint64_t)[a1 numberOfSections] >= 2)
      {
        sub_1000255FC(v66);
        id v48 = v66[3];
        sub_10002582C(v66);
        [v48 itemSize];

        sub_1000255FC(v67);
        id v49 = v67[3];
        sub_10002582C(v67);
        [v49 sectionInset];

        sub_1000255FC(__dst);
        id v50 = (id)__dst[3];
        sub_10002582C(__dst);
        [v50 sectionInset];
      }
      uint64_t v15 = a3;
      id v57 = (char *)v5 + *(int *)(sub_100025A08((uint64_t *)&unk_1000F76A0) + 48);
      type metadata accessor for LibrarySectionOptions();
      sub_10002498C();
      (*(void (**)(char *))(v58 + 8))(v57);
      goto LABEL_15;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100021DC0()
{
  return swift_slowDealloc();
}

void *sub_100021DF0()
{
  return malloc(0x28uLL);
}

uint64_t sub_100021E20()
{
  return type metadata accessor for IndexPath();
}

id sub_100021E48()
{
  uint64_t v5 = *(const char **)(v3 + 1352);
  return [v0 v5:v1 v2];
}

uint64_t sub_100021E68()
{
  uint64_t v1 = OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___dataSource;
  if (*(void *)(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___dataSource))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___dataSource);
  }
  else
  {
    id v3 = sub_100026038();
    uint64_t v2 = sub_10001293C(v3);

    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void sub_100021EDC(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  sub_1000287FC(v5, v6, v4, a4);
}

uint64_t sub_100021EF8()
{
  return 0;
}

uint64_t sub_100021F04()
{
  return swift_slowAlloc();
}

uint64_t sub_100021F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return IntentParameterSummary.init(_:table:_:)(v4, 0x6E65746E49707041, 0xEA00000000007374, a4, 0, v6, v5);
}

void sub_100021F64()
{
}

uint64_t sub_100021F6C()
{
  return v0;
}

double sub_100021F78()
{
  return v0;
}

uint64_t sub_100021F8C()
{
  return swift_beginAccess();
}

void sub_100021FA4(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_100021FDC()
{
  return 0;
}

uint64_t sub_100021FF8(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t sub_10002200C()
{
  return v0;
}

uint64_t sub_100022020()
{
  return swift_getObjectType();
}

uint64_t sub_100022044()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t sub_100022084(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_10002209C()
{
  return v0;
}

uint64_t sub_1000220C0()
{
  return type metadata accessor for SidebarView(0);
}

uint64_t sub_100022100()
{
  return v0;
}

uint64_t sub_100022110()
{
  uint64_t v2 = sub_100025A08(&qword_1000F4B00);
  uint64_t v3 = sub_1000165CC(v2);
  __chkstk_darwin(v3);
  sub_1000165D8();
  uint64_t v4 = type metadata accessor for ShortcutsLibrarySection();
  sub_100022284();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1000074A4();
  IndexPath.section.getter();
  sub_100025884();
  sub_1000215BC(v1);
  if (v8)
  {
    sub_100025E44(v1, &qword_1000F4B00);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v0, v1, v4);
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();
    if (v15)
    {
      ShortcutsLibrarySection.item(for:)();
      swift_bridgeObjectRelease();
      uint64_t v9 = sub_1000223CC();
      return v10(v9);
    }
    uint64_t v12 = sub_1000223CC();
    v13(v12);
  }
  uint64_t v14 = type metadata accessor for ShortcutsLibraryItem();
  return sub_100027C14(v14);
}

id sub_1000222B0()
{
  uint64_t v3 = *(const char **)(v1 + 584);
  return [v0 v3];
}

uint64_t sub_1000222E0()
{
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

id sub_100022320(id a1, SEL a2, uint64_t a3)
{
  return [a1 a2:a3:1];
}

void sub_10002233C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void **)(v2 + a2);
  *(void *)(v2 + a2) = a1;
}

uint64_t sub_100022354()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

void sub_100022370()
{
  uint64_t v1 = 0;
  unint64_t v2 = 0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v1);
}

uint64_t sub_10002238C()
{
  return 0;
}

uint64_t sub_1000223A8(uint64_t a1)
{
  uint64_t v4 = v2 + *(int *)(a1 + 32);
  return sub_1000225EC(v4, 1, v1);
}

uint64_t sub_1000223CC()
{
  return v0;
}

void sub_1000223E0(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 112) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

NSString sub_1000223FC()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_100022414()
{
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_10002244C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100022478()
{
  return v0;
}

uint64_t sub_10002248C()
{
  return v0;
}

void sub_1000224A8()
{
  SetShortcutAttributesAction.init(attribute:operation:state:)();
}

uint64_t sub_1000224C0()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_1000224F8()
{
  return v0;
}

id sub_100022510(uint64_t a1, const char *a2)
{
  return [v2 a2:v3];
}

uint64_t sub_100022528()
{
  return swift_bridgeObjectRetain();
}

id sub_100022548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  return [super v9];
}

uint64_t sub_100022568()
{
  return v0;
}

uint64_t sub_100022588()
{
  return v0;
}

uint64_t sub_10002259C()
{
  return swift_task_alloc();
}

uint64_t sub_1000225B4()
{
  return swift_beginAccess();
}

uint64_t sub_1000225EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_100022614()
{
  return swift_dynamicCast();
}

uint64_t sub_100022638()
{
  return v0 + 8;
}

uint64_t sub_100022644()
{
  return v0;
}

uint64_t sub_100022688()
{
  return ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
}

uint64_t sub_1000226A4()
{
  return v0;
}

uint64_t sub_1000226B4()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_1000226D8()
{
  return v0;
}

uint64_t type metadata accessor for LibraryCellHostingView(uint64_t a1)
{
  return sub_10001C010(a1, (uint64_t *)&unk_1000F8150);
}

uint64_t sub_10002272C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ShortcutChiclet();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_allocWithZone(v1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t v8 = _UIHostingView.init(rootView:)();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v8;
}

uint64_t sub_10002282C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6 = sub_100025A08((uint64_t *)&unk_1000F70F0);
  uint64_t v7 = sub_1000165CC(v6);
  __chkstk_darwin(v7);
  sub_10001888C();
  uint64_t v10 = v9 - v8;
  if (sub_100022B40(a1))
  {
    if (swift_unknownObjectWeakLoadStrong())
    {
      swift_getObjectType();
      dispatch thunk of LibraryDelegate.runningWorkflow.getter();
      swift_unknownObjectRelease();
      uint64_t v11 = type metadata accessor for RunningWorkflow();
      if (sub_1000225EC(v10, 1, v11) == 1)
      {
        sub_100023268(v10, (uint64_t *)&unk_1000F70F0);
      }
      else
      {
        uint64_t v14 = (void *)RunningWorkflow.runViewSource.getter();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
        if (v14)
        {
          [v14 updateSourceView:a1];
        }
      }
    }
    sub_10002361C(1, a4 & 1);
    sub_100022A00();
  }
  else
  {
    double v12 = sub_100022A00();
    char v13 = v12 >= 1.0 || v12 < 0.0;
    sub_10002361C(v13, a4 & 1);
    type metadata accessor for ShortcutChiclet.Progress();
    static ShortcutChiclet.Progress.noProgress.getter();
  }
  return dispatch thunk of ShortcutChiclet.Progress.apply(value:cancelled:)();
}

double sub_100022A00()
{
  uint64_t v0 = sub_100025A08((uint64_t *)&unk_1000F70F0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (swift_unknownObjectWeakLoadStrong())
  {
    swift_getObjectType();
    dispatch thunk of LibraryDelegate.runningWorkflow.getter();
    swift_unknownObjectRelease();
    uint64_t v3 = type metadata accessor for RunningWorkflow();
    if (sub_1000225EC((uint64_t)v2, 1, v3) != 1)
    {
      RunningWorkflow.progress.getter();
      double v5 = v6;
      (*(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
      return v5;
    }
    sub_100023268((uint64_t)v2, (uint64_t *)&unk_1000F70F0);
  }
  type metadata accessor for ShortcutChiclet.Progress();
  static ShortcutChiclet.Progress.noProgress.getter();
  return v4;
}

uint64_t sub_100022B40(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RunningWorkflow.WorkflowType();
  sub_100022284();
  uint64_t v4 = v3;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (id *)((char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  uint64_t v10 = (void **)((char *)v45 - v9);
  uint64_t v11 = sub_100025A08((uint64_t *)&unk_1000F70F0);
  uint64_t v12 = sub_1000165CC(v11);
  __chkstk_darwin(v12);
  sub_10001888C();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = type metadata accessor for RunningWorkflow();
  sub_100022284();
  v45[1] = v17;
  __chkstk_darwin(v18);
  sub_10001888C();
  if (!swift_unknownObjectWeakLoadStrong())
  {
    sub_100021594(v15, 1, 1, v16);
    goto LABEL_7;
  }
  swift_getObjectType();
  dispatch thunk of LibraryDelegate.runningWorkflow.getter();
  swift_unknownObjectRelease();
  if (sub_1000225EC(v15, 1, v16) == 1)
  {
LABEL_7:
    sub_100023268(v15, (uint64_t *)&unk_1000F70F0);
    goto LABEL_8;
  }
  sub_100020698();
  v19();
  uint64_t v20 = *(void **)(a1 + OBJC_IVAR____TtC9Shortcuts11LibraryCell_autoShortcut);
  if (v20)
  {
    id v21 = v20;
    RunningWorkflow.workflowType.getter();
    if ((*(unsigned int (**)(void **, uint64_t))(v4 + 88))(v10, v2) == enum case for RunningWorkflow.WorkflowType.autoShortcut(_:))
    {
      (*(void (**)(void **, uint64_t))(v4 + 96))(v10, v2);
      id v22 = *v10;
      sub_100029C7C(0, &qword_1000F8380);
      char v23 = static NSObject.== infix(_:_:)();

LABEL_23:
      uint64_t v43 = sub_10002A0A0();
      v44(v43);
      return v23 & 1;
    }
    uint64_t v37 = sub_10002A0A0();
    v38(v37);

    (*(void (**)(void **, uint64_t))(v4 + 8))(v10, v2);
  }
  else
  {
    uint64_t v25 = *(void **)(a1 + OBJC_IVAR____TtC9Shortcuts11LibraryCell_workflowReference);
    if (v25)
    {
      id v26 = v25;
      RunningWorkflow.workflowType.getter();
      if ((*(unsigned int (**)(id *, uint64_t))(v4 + 88))(v8, v2) == enum case for RunningWorkflow.WorkflowType.reference(_:))
      {
        (*(void (**)(id *, uint64_t))(v4 + 96))(v8, v2);
        id v27 = *v8;
        id v28 = [*v8 identifier];
        uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v31 = v30;

        id v32 = [v26 identifier];
        uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v35 = v34;

        if (v29 == v33 && v31 == v35) {
          char v23 = 1;
        }
        else {
          char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        goto LABEL_23;
      }
      uint64_t v41 = sub_10002A0A0();
      v42(v41);

      (*(void (**)(id *, uint64_t))(v4 + 8))(v8, v2);
    }
    else
    {
      uint64_t v39 = sub_10002A0A0();
      v40(v39);
    }
  }
LABEL_8:
  char v23 = 0;
  return v23 & 1;
}

uint64_t sub_100022F38()
{
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

void sub_100022F54()
{
}

uint64_t sub_100022F5C()
{
  return v0;
}

uint64_t sub_100022F78(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 - 112) = result;
  *(void *)(v4 - 104) = a2;
  *(void *)(v4 - 96) = a3;
  *(void *)(v4 - 88) = a4;
  return result;
}

uint64_t sub_100022F84()
{
  return v0;
}

NSString sub_100022FA4()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_100022FD0@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t sub_100022FE0()
{
  return v0;
}

void sub_100022FF4()
{
  type metadata accessor for RunningWorkflow.WorkflowType();
  sub_100022284();
  __chkstk_darwin(v2);
  sub_100021FC4();
  uint64_t v3 = *(void **)&v0[OBJC_IVAR___WFMainViewController_runCoordinator];
  id v4 = [v3 runningAppShortcut];
  if (v4)
  {
    uint64_t v5 = v4;
    *uint64_t v1 = v4;
    uint64_t v6 = sub_1000197B8();
    v7(v6);
    id v8 = v5;
    [v3 progress];
    [v3 waiting];
    id v9 = [v3 runViewSource];
    *(void *)(sub_1000206B4() + 16) = v0;
    uint64_t v10 = v0;
    sub_100018A1C(v13, (uint64_t)v10, v11, v12, (uint64_t)sub_10003F690);

    uint64_t v14 = type metadata accessor for RunningWorkflow();
    sub_10002A7BC(v14);
  }
  else
  {
    id v15 = [v3 runningWorkflow];
    if (v15)
    {
      uint64_t v16 = v15;
      *uint64_t v1 = v15;
      uint64_t v17 = sub_1000197B8();
      v18(v17);
      id v19 = v16;
      [v3 progress];
      [v3 waiting];
      id v20 = [v3 runViewSource];
      *(void *)(sub_1000206B4() + 16) = v0;
      id v21 = v0;
      sub_100018A1C(v24, (uint64_t)v21, v22, v23, (uint64_t)sub_10003F23C);

      uint64_t v25 = type metadata accessor for RunningWorkflow();
      sub_10002A7BC(v25);
    }
    else
    {
      type metadata accessor for RunningWorkflow();
      sub_10001681C();
      sub_100021594(v26, v27, v28, v29);
    }
  }
}

uint64_t sub_100023268(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100025A08(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000232C4()
{
  uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC9Shortcuts11LibraryCell____lazy_storage___accessibilitySelect);
  if (!*(void *)(v0 + OBJC_IVAR____TtC9Shortcuts11LibraryCell____lazy_storage___accessibilitySelect))
  {
    sub_1000206B4();
    sub_100023530();
    uint64_t v3 = *v2;
    *uint64_t v2 = (uint64_t)sub_1000AE880;
    v2[1] = v1;
    swift_retain();
    sub_10002354C(v3);
  }
  return sub_1000235DC();
}

uint64_t sub_10002335C()
{
  uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC9Shortcuts11LibraryCell____lazy_storage___run);
  if (!*(void *)(v0 + OBJC_IVAR____TtC9Shortcuts11LibraryCell____lazy_storage___run))
  {
    sub_1000206B4();
    sub_100023530();
    uint64_t v3 = *v2;
    *uint64_t v2 = (uint64_t)sub_1000AE8B8;
    v2[1] = v1;
    swift_retain();
    sub_10002354C(v3);
  }
  return sub_1000235DC();
}

uint64_t sub_1000233F4()
{
  uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC9Shortcuts11LibraryCell____lazy_storage___stop);
  if (!*(void *)(v0 + OBJC_IVAR____TtC9Shortcuts11LibraryCell____lazy_storage___stop))
  {
    sub_1000206B4();
    sub_100023530();
    uint64_t v3 = *v2;
    *uint64_t v2 = (uint64_t)sub_1000AE8B0;
    v2[1] = v1;
    swift_retain();
    sub_10002354C(v3);
  }
  return sub_1000235DC();
}

uint64_t sub_100023498()
{
  return v0;
}

uint64_t sub_1000234A8()
{
  return swift_bridgeObjectRelease_n();
}

void sub_1000234C0(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1000234F0()
{
  return v0;
}

uint64_t sub_1000234FC()
{
  return v0;
}

void sub_100023510(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_100023530()
{
  return swift_unknownObjectWeakInit();
}

uint64_t sub_10002354C(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_100023580()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t sub_1000235A4()
{
  return v0 + 8;
}

uint64_t sub_1000235B4()
{
  return v0;
}

uint64_t sub_1000235C4()
{
  return v0;
}

uint64_t sub_1000235DC()
{
  sub_100023600(v0);
  return v1;
}

uint64_t sub_100023600(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

void sub_100023610(uint64_t a1)
{
}

void sub_10002361C(char a1, char a2)
{
  int v5 = a1 & 1;
  uint64_t v6 = OBJC_IVAR____TtC9Shortcuts11LibraryCell_isEnabled;
  int v7 = v2[OBJC_IVAR____TtC9Shortcuts11LibraryCell_isEnabled];
  id v8 = [v2 contentView];
  [v8 alpha];
  double v10 = v9;

  double v11 = 0.5;
  if (v7) {
    double v11 = 1.0;
  }
  if (v7 != v5 || v10 != v11)
  {
    v2[v6] = v5;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v2;
    *(unsigned char *)(v13 + 24) = v5;
    *(_OWORD *)(v13 + 32) = xmmword_1000BEE50;
    if (a2)
    {
      uint64_t v14 = self;
      aBlock[4] = sub_1000AE870;
      aBlock[5] = v13;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10000E51C;
      aBlock[3] = &unk_1000E7C10;
      id v15 = _Block_copy(aBlock);
      uint64_t v16 = v2;
      swift_retain();
      swift_release();
      [v14 animateKeyframesWithDuration:4 delay:v15 options:0 animations:0.2 completion:0.0];
      swift_release();
      _Block_release(v15);
    }
    else
    {
      id v17 = [v2 contentView];
      id v19 = v17;
      double v18 = 0.5;
      if (a1) {
        double v18 = 1.0;
      }
      [v17 setAlpha:v18];
      swift_release();
    }
  }
}

uint64_t sub_10002382C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100025A08(a3);
  sub_10001C094();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_100023888(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1000238D0()
{
  sub_10002066C();
  uint64_t v1 = v0;
  char v3 = v2;
  int v5 = v4;
  uint64_t v86 = type metadata accessor for LibrarySectionOptions.Header();
  sub_100022284();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1000206CC();
  uint64_t v85 = v9;
  sub_1000215FC();
  __chkstk_darwin(v10);
  uint64_t v84 = (char *)v63 - v11;
  uint64_t v83 = type metadata accessor for LibrarySectionOptions();
  sub_100022284();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_1000167F4();
  uint64_t v82 = v15;
  uint64_t v16 = type metadata accessor for ShortcutsLibrarySection();
  sub_100022284();
  uint64_t v77 = v17;
  __chkstk_darwin(v18);
  sub_1000242E0();
  sub_100025A08(&qword_1000F5EC8);
  sub_100022284();
  __chkstk_darwin(v19);
  sub_10001C0D0();
  uint64_t v67 = sub_100025A08((uint64_t *)&unk_1000F83F0);
  sub_100022284();
  __chkstk_darwin(v20);
  sub_1000167F4();
  uint64_t v68 = v22;
  if ((v3 & 1) != 0 || *(uint64_t *)(v1 + qword_1000F7FD0) <= 0 && *(unsigned char *)(v1 + qword_1000F7FF8) != 1)
  {
    uint64_t v87 = v13;
    uint64_t v88 = v7;
    uint64_t v65 = v21;
    type metadata accessor for LibraryDataSource();
    uint64_t v23 = (void (*)(void, void))method lookup function for LibraryDataSource();
    v23(v5 & 1, v3 & 1);
    id Strong = (id)swift_unknownObjectWeakLoadStrong();
    if (!Strong)
    {
LABEL_31:
      sub_10001885C();
      return;
    }
    __n128 v24 = (void (*)(void))method lookup function for LibraryDataSource();
    v24();
    uint64_t v25 = LibraryLayoutMode.rawValue.getter();
    uint64_t v27 = v26;
    if (v25 == LibraryLayoutMode.rawValue.getter() && v27 == v28)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      sub_100021F6C();
      char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v30 & 1) == 0) {
        goto LABEL_30;
      }
    }
    char v32 = sub_1000073D0();
    NSDiffableDataSourceSnapshot.init()();
    dispatch thunk of LibraryDataSource.sortedSections.getter();
    uint64_t v33 = OrderedDictionary.values.getter();
    sub_1000AF260();
    v34();
    if (!*(void *)(v33 + 16))
    {
LABEL_29:
      swift_bridgeObjectRelease();
      uint64_t v61 = v68;
      dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v61, v67);
LABEL_30:
      id v62 = Strong;
      sub_10000ADBC();

      goto LABEL_31;
    }
    int v64 = v5;
    uint64_t v70 = 0;
    uint64_t v35 = v77 + 16;
    uint64_t v74 = *(void *)(v77 + 16);
    sub_100025C80();
    v63[1] = v33;
    uint64_t v38 = v33 + v37;
    uint64_t v73 = *(void *)(v35 + 56);
    uint64_t v81 = (void (**)(void))(v87 + 8);
    unsigned int v72 = enum case for LibrarySectionOptions.Header.tip(_:);
    uint64_t v79 = (void (**)(void))(v88 + 8);
    uint64_t v80 = (void (**)(uint64_t, void, uint64_t))(v88 + 104);
    uint64_t v77 = v35;
    uint64_t v71 = v35 - 8;
    unsigned int v69 = enum case for LibrarySectionOptions.Header.syncUnavailable(_:);
    long long v66 = xmmword_1000BAB00;
    uint64_t v75 = v16;
    uint64_t v76 = v1;
    while (1)
    {
      uint64_t v87 = v38;
      uint64_t v88 = v36;
      sub_1000205E8();
      v39();
      uint64_t v40 = v82;
      ShortcutsLibrarySection.options.getter();
      sub_10002412C(v40, v32 & 1);
      uint64_t v41 = *v81;
      sub_10002411C();
      v41();
      ShortcutsLibrarySection.options.getter();
      LibrarySectionOptions.header.getter();
      sub_10002411C();
      v41();
      id v42 = *v80;
      (*v80)(v85, v72, v86);
      char v43 = static LibrarySectionOptions.Header.== infix(_:_:)();
      id v44 = *v79;
      sub_100024094();
      v44();
      sub_100024094();
      v44();
      if (v43)
      {
        char v45 = sub_100009BBC();
        if ((v32 & 1) == 0) {
          goto LABEL_24;
        }
        char v46 = v45;
      }
      else
      {
        if ((v32 & 1) == 0) {
          goto LABEL_24;
        }
        char v46 = 0;
      }
      uint64_t v47 = *(void *)(ShortcutsLibrarySection.items.getter() + 16);
      swift_bridgeObjectRelease();
      if (v47 || (v46 & 1) != 0)
      {
LABEL_24:
        uint64_t v48 = v82;
        ShortcutsLibrarySection.options.getter();
        id v49 = v84;
        LibrarySectionOptions.header.getter();
        ((void (*)(uint64_t, uint64_t))v41)(v48, v83);
        uint64_t v50 = v85;
        uint64_t v51 = v86;
        v42(v85, v69, v86);
        char v52 = static LibrarySectionOptions.Header.== infix(_:_:)();
        ((void (*)(uint64_t, uint64_t))v44)(v50, v51);
        ((void (*)(char *, uint64_t))v44)(v49, v51);
        if ((v52 & 1) == 0
          || (id v53 = [Strong traitCollection],
              id v54 = [v53 horizontalSizeClass],
              v53,
              v54 != (id)2)
          && (sub_100009608(), (v55 & 1) != 0))
        {
          sub_100025A08(&qword_1000F52E0);
          uint64_t v56 = swift_allocObject();
          *(_OWORD *)(v56 + 16) = v66;
          *(void *)(v56 + 32) = ShortcutsLibrarySection.id.getter();
          *(void *)(v56 + 40) = v57;
          NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)v56);
          swift_bridgeObjectRelease();
          uint64_t v58 = ShortcutsLibrarySection.items.getter();
          uint64_t v59 = v70;
          sub_100024344(v58);
          uint64_t v70 = v59;
          swift_bridgeObjectRelease();
          uint64_t v89 = 0;
          uint64_t v90 = 0;
          NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
          swift_bridgeObjectRelease();
        }
      }
      sub_100016618();
      v60();
      uint64_t v38 = v87 + v73;
      uint64_t v36 = v88 - 1;
      if (v88 == 1) {
        goto LABEL_29;
      }
    }
  }
  sub_10001885C();
  sub_1000158F0();
}

uint64_t sub_100024044()
{
  return type metadata accessor for MainViewController(0);
}

uint64_t sub_100024060()
{
  return swift_allocObject();
}

id sub_1000240B0()
{
  return sub_1000248B0(v0);
}

uint64_t sub_1000240CC()
{
  return type metadata accessor for Locale();
}

uint64_t sub_1000240F4()
{
  return 0;
}

void sub_10002412C(uint64_t a1, char a2)
{
  sub_100021EF8();
  uint64_t v4 = type metadata accessor for LibrarySectionOptions.SectionType();
  sub_100022284();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1000204E8();
  LibrarySectionOptions.sectionType.getter();
  uint64_t v8 = sub_100025DDC();
  if (v9(v8) == enum case for LibrarySectionOptions.SectionType.shortcuts(_:))
  {
    (*(void (**)(void **, uint64_t))(v6 + 96))(v2, v4);
    uint64_t v10 = *v2;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v12 = (void *)Strong;
      if (a2)
      {
        uint64_t v13 = *(void **)(Strong + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_searchController);
        if (v13)
        {
          id v14 = v13;
          sub_10008CB58();
        }
        type metadata accessor for LibraryDataSource();
        uint64_t v15 = (void *)static LibraryDataSource.searchPredicate(for:)();

        uint64_t Strong = swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v15 = 0;
      }
      sub_100022510(Strong, "setSearchPredicate:");
    }
  }
  else
  {
    (*(void (**)(void **, uint64_t))(v6 + 8))(v2, v4);
  }
}

id sub_1000242AC()
{
  return sub_1000248B0(v0);
}

uint64_t sub_1000242C8()
{
  return ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_100024304()
{
  return static MainActor.shared.getter();
}

uint64_t sub_10002431C()
{
  return 0;
}

uint64_t sub_10002432C()
{
  return v0;
}

void *sub_100024344(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10002447C(0, v1, 0);
    uint64_t v3 = *(void *)(type metadata accessor for ShortcutsLibraryItem() - 8);
    uint64_t v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = *(void *)(v3 + 72);
    do
    {
      uint64_t v6 = ShortcutsLibraryItem.id.getter();
      uint64_t v8 = v7;
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_10002447C(v9 > 1, v10 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v10 + 1;
      uint64_t v11 = &_swiftEmptyArrayStorage[2 * v10];
      v11[4] = v6;
      v11[5] = v8;
      v4 += v5;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

void sub_10002447C(char a1, uint64_t a2, char a3)
{
  sub_10002467C(a1, a2, a3, *v3);
  *uint64_t v3 = v4;
}

void sub_10002449C(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t, void *), void (*a7)(uint64_t, uint64_t, void *))
{
  if (a3)
  {
    sub_100016828();
    if (v12 != v13)
    {
      sub_100015110();
      if (v12)
      {
        __break(1u);
        return;
      }
      sub_1000245C8();
    }
  }
  else
  {
    uint64_t v11 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v11 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v11;
  }
  if (v15)
  {
    sub_100025A08(a5);
    uint64_t v16 = (void *)sub_100024060();
    j__malloc_size(v16);
    sub_100016838();
    v16[2] = v14;
    v16[3] = v17;
  }
  else
  {
    uint64_t v16 = &_swiftEmptyArrayStorage;
  }
  uint64_t v18 = v16 + 4;
  uint64_t v19 = a4 + 32;
  if (a1)
  {
    a6(v19, v14, v18);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    a7(v19, v14, v18);
  }
  swift_release();
}

uint64_t sub_100024574()
{
  return type metadata accessor for LocalizedStringResource.BundleDescription();
}

uint64_t sub_10002459C()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_1000245D8()
{
  return v0;
}

uint64_t sub_1000245EC()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_100024604()
{
  return static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
}

NSString sub_100024630()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_100024650()
{
  return v0;
}

uint64_t sub_100024664()
{
  return v0;
}

void sub_10002467C(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

uint64_t sub_1000246B0(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_10002A0B8();
    sub_1000220F0();
LABEL_11:
    uint64_t result = sub_1000249A0();
    __break(1u);
    return result;
  }
  sub_100024784();
  if (!v5 && v4)
  {
    BOOL v4 = v3 >= v2;
    BOOL v5 = v3 == v2;
  }
  else
  {
    BOOL v4 = 0;
    BOOL v5 = 0;
  }
  if (!v5 && v4)
  {
    sub_10002A0B8();
    sub_100022F68();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_100024754(uint64_t a1)
{
  return sub_100021594(a1, 1, 1, v1);
}

uint64_t sub_100024770()
{
  return v0;
}

uint64_t sub_100024798()
{
  return type metadata accessor for IndexPath();
}

uint64_t sub_1000247BC(uint64_t a1)
{
  *uint64_t v1 = a1;
  *(void *)(a1 + 32) = v2;
  return type metadata accessor for LibraryDataSource();
}

id sub_1000247DC(uint64_t a1, void *a2)
{
  id v2 = a2;
  if ([v2 length])
  {
    uint64_t v3 = [v2 stringByReplacingOccurrencesOfString:@"\n" withString:@" "];
    BOOL v4 = +[NSString stringWithFormat:@"%@ (Pluralization)", v3];

    BOOL v5 = sub_10002491C();
    id v6 = [v5 localizedStringForKey:v4 value:v2 table:0];
  }
  else
  {
    id v6 = v2;
  }

  return v6;
}

id sub_1000248B0(void *a1)
{
  id v1 = a1;
  id v2 = sub_10002491C();
  uint64_t v3 = [v2 localizedStringForKey:v1 value:v1 table:0];

  return v3;
}

id sub_10002491C()
{
  if (qword_1000FEDC0 != -1) {
    dispatch_once(&qword_1000FEDC0, &stru_1000E80A8);
  }
  uint64_t v0 = (void *)qword_1000FEDB8;

  return v0;
}

uint64_t sub_100024970()
{
  return *(void *)(v0 - 112);
}

uint64_t sub_1000249A0()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t sub_1000249C8()
{
  return v0;
}

uint64_t sub_1000249E4()
{
  return 0;
}

uint64_t sub_1000249FC()
{
  return v0 + *(int *)(v1 + 20);
}

unint64_t sub_100024A10(Swift::UInt a1, char a2, double a3, double a4, double a5)
{
  id v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v13 = sub_100024B88(a1, a5);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v14 & 1) == 0;
  Swift::Int v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v18 = v13;
  char v19 = v14;
  sub_100025A08(&qword_1000F84B0);
  unint64_t result = _NativeDictionary.ensureUnique(isUnique:capacity:)(a2 & 1, v17);
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t result = sub_100024B88(a1, a5);
  if ((v19 & 1) != (v21 & 1))
  {
LABEL_11:
    unint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v18 = result;
LABEL_5:
  if (v19)
  {
    uint64_t v22 = (double *)(*(void *)(*v6 + 56) + 16 * v18);
    *uint64_t v22 = a3;
    v22[1] = a4;
  }
  else
  {
    unint64_t v23 = sub_100025DDC();
    return sub_100024CC4(v23, v24, v25, a5, a3, a4);
  }
  return result;
}

uint64_t sub_100024B38(Swift::UInt a1, uint64_t a2, double a3)
{
  if (*(void *)(a2 + 16) && (unint64_t v4 = sub_100024B88(a1, a3), (v5 & 1) != 0)) {
    return *(void *)(*(void *)(a2 + 56) + 16 * v4);
  }
  else {
    return 0;
  }
}

unint64_t sub_100024B88(Swift::UInt a1, double a2)
{
  Hasher.init(_seed:)();
  sub_100024C08((int)&v6, a1, a2);
  Swift::Int v4 = Hasher._finalize()();

  return sub_100024C4C(a1, v4, a2);
}

void sub_100024C08(int a1, Swift::UInt a2, double a3)
{
  Hasher._combine(_:)(a2);
  if ((*(void *)&a3 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = *(void *)&a3;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  Hasher._combine(_:)(v4);
}

unint64_t sub_100024C4C(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = ~v5;
    do
    {
      uint64_t v8 = *(void *)(v3 + 48) + 16 * result;
      if (*(double *)(v8 + 8) == a3 && *(void *)v8 == a1) {
        break;
      }
      unint64_t result = (result + 1) & v7;
    }
    while (((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_100024CC4(unint64_t result, uint64_t a2, void *a3, double a4, double a5, double a6)
{
  a3[(result >> 6) + 8] |= 1 << result;
  uint64_t v6 = a3[6] + 16 * result;
  *(void *)uint64_t v6 = a2;
  *(double *)(v6 + 8) = a4;
  uint64_t v7 = (double *)(a3[7] + 16 * result);
  *uint64_t v7 = a5;
  v7[1] = a6;
  uint64_t v8 = a3[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a3[2] = v10;
  }
  return result;
}

void sub_100024D14(uint64_t a1, void *a2)
{
  type metadata accessor for Key(0);
  sub_100026570(&qword_1000F4B30, type metadata accessor for Key);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 setTitleTextAttributes:isa];
}

void sub_100024DD8()
{
  uint64_t v1 = v0;
  id v2 = [v0 view];
  if (!v2) {
    goto LABEL_49;
  }
  uint64_t v3 = v2;
  [v2 frame];
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;

  v142.origin.x = v5;
  v142.origin.y = v7;
  v142.size.width = v9;
  v142.size.height = v11;
  double Width = CGRectGetWidth(v142);
  sub_1000255FC(v86);
  sub_10002582C(v86);
  BOOL v13 = Width != v87;
  if (Width != v87)
  {
    id v14 = [v1 view];
    if (!v14)
    {
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    uint64_t v15 = v14;
    [v14 frame];
    CGFloat v17 = v16;
    CGFloat v19 = v18;
    CGFloat v21 = v20;
    CGFloat v23 = v22;

    v143.origin.x = v17;
    v143.origin.y = v19;
    v143.size.width = v21;
    v143.size.height = v23;
    CGFloat v24 = CGRectGetWidth(v143);
    sub_1000255FC(v88);
    v136[0] = *(_OWORD *)v88;
    v136[1] = *(_OWORD *)&v88[2];
    CGFloat v137 = v24;
    long long v138 = *(_OWORD *)&v88[5];
    long long v139 = *(_OWORD *)&v88[7];
    uint64_t v140 = v88[9];
    uint64_t v141 = v88[10];
    sub_100026058((uint64_t)v136);
  }
  sub_1000255FC(v89);
  sub_10002582C(v89);
  id v25 = [v1 view];
  if (!v25) {
    goto LABEL_50;
  }
  uint64_t v26 = v25;
  double v27 = *(double *)&v89[6];
  [v25 layoutMargins];
  double v29 = v28;

  if (v27 != v29) {
    goto LABEL_9;
  }
  sub_1000255FC(v90);
  sub_10002582C(v90);
  id v30 = [v1 view];
  if (!v30)
  {
LABEL_53:
    __break(1u);
    return;
  }
  uint64_t v31 = v30;
  double v32 = *(double *)&v90[8];
  [v30 layoutMargins];
  double v34 = v33;

  if (v32 != v34) {
LABEL_9:
  }
    BOOL v13 = 1;
  id v35 = [v1 traitCollection];
  sub_1000255FC(v91);
  id v36 = v92;
  id v37 = v92;
  sub_10002582C(v91);
  if (v35)
  {
    if (v36)
    {
      sub_100029C7C(0, (unint64_t *)&unk_1000F4AF0);
      id v38 = v35;
      char v39 = static NSObject.== infix(_:_:)();

      if (v39) {
        goto LABEL_19;
      }
LABEL_18:
      id v40 = [v1 traitCollection];
      sub_1000255FC(v93);
      uint64_t v41 = v95[1];
      uint64_t v42 = v94;
      long long v83 = v93[2];
      long long v84 = v93[3];
      long long v81 = v93[1];
      long long v82 = v93[0];
      sub_10002AEF0((uint64_t)v95, (uint64_t)&v115);
      sub_10002AEC4(&v115);
      v132[0] = v82;
      v132[1] = v81;
      v132[2] = v83;
      v132[3] = v84;
      uint64_t v133 = v42;
      id v134 = v40;
      uint64_t v135 = v41;
      sub_100026058((uint64_t)v132);
      BOOL v13 = 1;
      goto LABEL_19;
    }
    id v37 = v35;
LABEL_17:

    goto LABEL_18;
  }
  if (v36) {
    goto LABEL_17;
  }
LABEL_19:
  id v43 = [v1 view:v81, v82, v83];
  if (!v43)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  id v44 = v43;
  [v43 layoutMargins];
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v52 = v51;

  sub_1000255FC(v96);
  v124[0] = v96[0];
  v124[1] = v96[1];
  uint64_t v125 = v97;
  uint64_t v126 = v46;
  uint64_t v127 = v48;
  uint64_t v128 = v50;
  uint64_t v129 = v52;
  uint64_t v130 = v98;
  uint64_t v131 = v99;
  sub_100026058((uint64_t)v124);
  if (!v13) {
    return;
  }
  id v53 = sub_10000E9E8();
  sub_1000255FC(v100);
  id v54 = (id)v100[3];
  sub_10002582C(v100);
  [v53 sectionInset];
  [v54 setSectionInset:];

  sub_1000255FC(v101);
  id v55 = (id)v101[3];
  sub_10002582C(v101);
  [v53 interitemSpacing];
  [v55 setMinimumInteritemSpacing:];

  sub_1000255FC(v102);
  id v56 = (id)v102[3];
  sub_10002582C(v102);
  [v53 lineSpacing];
  [v56 setMinimumLineSpacing:];

  sub_1000255FC(v103);
  id v57 = (id)v103[3];
  sub_10002582C(v103);
  [v53 workflowSize];
  [v57 setItemSize:];

  id v58 = v53;
  sub_1000255FC(&v104);
  uint64_t v59 = v111;
  uint64_t v60 = v110;
  uint64_t v61 = v109;
  uint64_t v62 = v106;

  long long v116 = v104;
  id v117 = v58;
  uint64_t v118 = v62;
  long long v119 = v107;
  long long v120 = v108;
  uint64_t v121 = v61;
  uint64_t v122 = v60;
  uint64_t v123 = v59;
  sub_100026058((uint64_t)&v116);
  sub_1000255FC(v112);
  id v63 = (id)v112[3];
  sub_10002582C(v112);
  id v64 = [v63 collectionView];

  if (v64)
  {
    id v85 = v58;
    id v65 = [v64 visibleCells];
    sub_100029C7C(0, &qword_1000F4AE0);
    unint64_t v66 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v66 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v67 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v67) {
        goto LABEL_32;
      }
    }
    else
    {
      uint64_t v67 = *(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v67) {
        goto LABEL_32;
      }
    }
    if (v67 < 1)
    {
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    for (uint64_t i = 0; i != v67; ++i)
    {
      if ((v66 & 0xC000000000000001) != 0) {
        id v69 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v69 = *(id *)(v66 + 8 * i + 32);
      }
      uint64_t v70 = v69;
      type metadata accessor for LibraryCell();
      if (swift_dynamicCastClass())
      {
        id v71 = v70;
        sub_1000255FC(v113);
        id v72 = (id)v113[2];
        sub_10002582C(v113);
        sub_10001D5B4(v72);
      }
    }
LABEL_32:
    swift_bridgeObjectRelease();
    id v73 = [v64 visibleSupplementaryViewsOfKind:UICollectionElementKindSectionHeader];
    sub_100029C7C(0, &qword_1000F4AE8);
    unint64_t v74 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v74 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v75 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v75)
      {
LABEL_34:
        if (v75 >= 1)
        {
          uint64_t v76 = 0;
          do
          {
            if ((v74 & 0xC000000000000001) != 0) {
              id v77 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v77 = *(id *)(v74 + 8 * v76 + 32);
            }
            uint64_t v78 = v77;
            ++v76;
            sub_10003107C();
            [v78 setLayoutMargins:0.0];
          }
          while (v75 != v76);
          goto LABEL_40;
        }
        goto LABEL_48;
      }
    }
    else
    {
      uint64_t v75 = *(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v75) {
        goto LABEL_34;
      }
    }
LABEL_40:

    swift_bridgeObjectRelease();
    id v58 = v85;
  }
  sub_1000255FC(v114);
  id v79 = (id)v114[3];
  sub_10002582C(v114);
  [v79 invalidateLayout];

  sub_100021E68(v80);
  sub_1000238D0(0, 0);

  swift_release();
}

id sub_1000255FC@<X0>(void *a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics;
  CGFloat v5 = *(void **)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 8);
  double v6 = *(void **)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 16);
  CGFloat v7 = *(void **)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 24);
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 32);
  uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 40);
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 48);
  uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 56);
  uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 64);
  BOOL v13 = *(void **)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 72);
  if (v5)
  {
    uint64_t v14 = *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 32);
    uint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 40);
    uint64_t v16 = *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 48);
    uint64_t v17 = *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 56);
    uint64_t v18 = *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 64);
    uint64_t v19 = *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics);
    uint64_t v20 = *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 8);
    uint64_t v21 = *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 16);
    uint64_t v22 = *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 24);
    uint64_t v23 = *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 72);
    uint64_t v24 = *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 80);
  }
  else
  {
    uint64_t v41 = *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 64);
    uint64_t v42 = *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 32);
    id v44 = *(void **)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 16);
    uint64_t v45 = *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 8);
    id v43 = *(void **)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 24);
    uint64_t v25 = *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 40);
    uint64_t v26 = *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 48);
    uint64_t v27 = *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 56);
    sub_1000079EC(*(void **)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_flowLayout), (uint64_t)&v46);
    uint64_t v28 = v51;
    uint64_t v29 = *(void *)v3;
    char v39 = *(void **)(v3 + 16);
    uint64_t v40 = *(void *)(v3 + 8);
    uint64_t v37 = *(void *)(v3 + 32);
    id v38 = *(void **)(v3 + 24);
    uint64_t v35 = *(void *)(v3 + 48);
    uint64_t v36 = *(void *)(v3 + 40);
    uint64_t v34 = *(void *)(v3 + 56);
    long long v33 = *(_OWORD *)(v3 + 64);
    long long v30 = v47;
    *(_OWORD *)uint64_t v3 = v46;
    *(_OWORD *)(v3 + 16) = v30;
    long long v31 = v49;
    *(_OWORD *)(v3 + 32) = v48;
    *(_OWORD *)(v3 + 48) = v31;
    *(_OWORD *)(v3 + 64) = v50;
    *(void *)(v3 + 80) = v28;
    sub_100007990((uint64_t)&v46);
    sub_1000260C8(v29, v40, v39, v38, v37, v36, v35, v34, v33, *((void **)&v33 + 1));
    uint64_t v12 = v41;
    uint64_t v8 = v42;
    uint64_t v11 = v27;
    uint64_t v10 = v26;
    uint64_t v9 = v25;
    CGFloat v7 = v43;
    double v6 = v44;
    uint64_t v4 = v45;
    uint64_t v19 = v46;
    uint64_t v23 = *((void *)&v50 + 1);
    uint64_t v24 = v51;
    uint64_t v17 = *((void *)&v49 + 1);
    uint64_t v16 = v49;
    uint64_t v18 = v50;
    uint64_t v15 = *((void *)&v48 + 1);
    uint64_t v14 = v48;
    uint64_t v22 = *((void *)&v47 + 1);
    uint64_t v21 = v47;
    uint64_t v20 = *((void *)&v46 + 1);
  }
  id result = sub_1000257BC(v5, v4, v6, v7, v8, v9, v10, v11, v12, v13);
  *a1 = v19;
  a1[1] = v20;
  a1[2] = v21;
  a1[3] = v22;
  a1[4] = v14;
  a1[5] = v15;
  a1[6] = v16;
  a1[7] = v17;
  a1[8] = v18;
  a1[9] = v23;
  a1[10] = v24;
  return result;
}

id sub_1000257BC(id result, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  if (result)
  {
    id v11 = a10;
    swift_bridgeObjectRetain();
    swift_retain();
    id v12 = a3;
    return a4;
  }
  return result;
}

void *sub_10002582C(void *a1)
{
  id v2 = (void *)a1[2];
  uint64_t v3 = (void *)a1[3];
  uint64_t v4 = (void *)a1[9];
  swift_bridgeObjectRelease();

  swift_release();
  return a1;
}

void sub_100025884()
{
  sub_10002066C();
  unint64_t v1 = v0;
  sub_100025A08(&qword_1000F5EC8);
  sub_100022284();
  __chkstk_darwin(v2);
  sub_1000204E8();
  uint64_t v3 = sub_100025A08((uint64_t *)&unk_1000F83F0);
  sub_100022284();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();
  uint64_t v9 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
  if ((v1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(v9 + 16) > v1)
  {
    uint64_t v10 = v9 + 16 * v1;
    uint64_t v12 = *(void *)(v10 + 32);
    uint64_t v11 = *(void *)(v10 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    dispatch thunk of LibraryDataSource.sortedSections.getter();
    v15[0] = v12;
    v15[1] = v11;
    OrderedDictionary.subscript.getter();
    swift_bridgeObjectRelease();
    uint64_t v13 = sub_100025DDC();
    v14(v13);
    sub_10001885C();
    return;
  }
  __break(1u);
}

uint64_t sub_100025A08(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

id sub_100025A4C()
{
  uint64_t v3 = *(const char **)(v1 + 584);
  return [v0 v3];
}

uint64_t sub_100025A7C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100025A84()
{
  return v0;
}

uint64_t sub_100025A98()
{
  return 0;
}

uint64_t sub_100025AD4()
{
  return swift_beginAccess();
}

void sub_100025B00()
{
}

id sub_100025B20()
{
  return sub_100026038();
}

uint64_t sub_100025B4C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return 0;
}

double sub_100025B5C()
{
  return 0.0;
}

uint64_t sub_100025B80(uint64_t a1)
{
  return sub_1000225EC(v1, 1, a1);
}

Swift::Int sub_100025BB4()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v0 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return v0;
}

id sub_100025C34(double a1, double a2, double a3, double a4, uint64_t a5, const char *a6)
{
  LODWORD(a3) = 1148846080;
  LODWORD(a4) = 1112014848;
  return [v6 a6:a1, a2, a3, a4];
}

uint64_t sub_100025C58()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t sub_100025C8C()
{
  return v0;
}

uint64_t sub_100025CB8()
{
  return sub_100025CDC() & 1;
}

uint64_t sub_100025CDC()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3)
  {
    char v5 = 1;
  }
  else
  {
    sub_100021F6C();
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void sub_100025D60()
{
}

uint64_t sub_100025D78()
{
  return swift_slowAlloc();
}

uint64_t sub_100025D90()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t sub_100025DB8()
{
  return 0;
}

uint64_t sub_100025DC4()
{
  return v0;
}

uint64_t sub_100025DDC()
{
  return v0;
}

uint64_t sub_100025DE8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100025A08(a3);
  sub_10001C094();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_100025E44(uint64_t a1, uint64_t *a2)
{
  sub_100025A08(a2);
  sub_10001C094();
  sub_100016618();
  v3();
  return a1;
}

uint64_t sub_100025E94()
{
  return v0;
}

uint64_t sub_100025EB0()
{
  return v0;
}

uint64_t sub_100025EC8(uint64_t a1, uint64_t a2)
{
  sub_10004AB78(a1, a2);
  return swift_beginAccess();
}

uint64_t sub_100025EFC()
{
  return v0;
}

uint64_t sub_100025F14()
{
  return v0;
}

uint64_t sub_100025F50()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t sub_100025F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _AssistantIntent.init<A>(_:phrases:parameterValues:)(v6 - 112, a2, 0, a4, 0, v5, v4);
}

uint64_t sub_100025F9C()
{
  return swift_beginAccess();
}

id sub_100025FD4(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t v6 = (void *)a2(v2);
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_100026038()
{
  return sub_100025FD4(&OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_10000DA6C);
}

void sub_100026058(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 80);
  uint64_t v3 = v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics;
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 8);
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 16);
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 24);
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 32);
  uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 40);
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 48);
  uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 56);
  long long v12 = *(_OWORD *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics + 64);
  long long v13 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v13;
  long long v14 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v3 + 48) = v14;
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(a1 + 64);
  *(void *)(v3 + 80) = v2;
  sub_1000260C8(v5, v4, v6, v7, v8, v9, v10, v11, v12, *((void **)&v12 + 1));
}

void sub_1000260C8(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  if (a1)
  {
    swift_release();

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100026138()
{
  return type metadata accessor for LocalizedStringResource.BundleDescription();
}

uint64_t sub_100026160()
{
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_10002619C()
{
  return type metadata accessor for RunningWorkflow();
}

void *sub_1000261C4@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  return memmove(__dst, a2, v2);
}

uint64_t sub_1000261E0(uint64_t a1)
{
  return *(void *)a1;
}

void sub_1000261EC()
{
  *(void *)(v1 - 256) = v0;
}

uint64_t sub_1000261FC()
{
  return v0;
}

uint64_t sub_100026240()
{
  return RootView.navigate(to:)();
}

uint64_t sub_10002625C()
{
  return type metadata accessor for LocalizedStringResource.BundleDescription();
}

BOOL sub_100026288(char *a1)
{
  uint64_t v2 = type metadata accessor for LibraryConfiguration();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v27[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v6 = [a1 navigationController];
  if (!v6) {
    return 0;
  }
  uint64_t v7 = v6;
  id v8 = [v6 navigationBar];

  [v8 bounds];
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  CGFloat v16 = v15;

  v28.origin.x = v10;
  v28.origin.y = v12;
  v28.size.width = v14;
  v28.size.height = v16;
  double Width = CGRectGetWidth(v28);
  id v18 = [self systemFontOfSize:17.0 weight:UIFontWeightSemibold];
  uint64_t v19 = &a1[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration];
  swift_beginAccess();
  (*(void (**)(unsigned char *, char *, uint64_t))(v3 + 16))(v5, v19, v2);
  LibraryConfiguration.title.getter();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_100025A08(&qword_1000F4B20);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000BAB00;
  *(void *)(inited + 32) = NSFontAttributeName;
  *(void *)(inited + 64) = sub_100029C7C(0, &qword_1000F4B28);
  *(void *)(inited + 40) = v18;
  type metadata accessor for Key(0);
  sub_100026570(&qword_1000F4B30, type metadata accessor for Key);
  uint64_t v22 = NSFontAttributeName;
  id v23 = v18;
  uint64_t v24 = Dictionary.init(dictionaryLiteral:)();
  double v25 = sub_1000265B8(v24, v20);

  return Width - v25 < 240.0;
}

uint64_t sub_100026570(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_1000265B8(uint64_t a1, void *a2)
{
  type metadata accessor for Key(0);
  sub_100026570(&qword_1000F4B30, type metadata accessor for Key);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 sizeWithAttributes:isa];
  double v5 = v4;

  return v5;
}

void sub_10002667C()
{
  sub_10002066C();
  uint64_t v2 = v0;
  char v4 = v3;
  uint64_t v5 = type metadata accessor for LibraryConfiguration();
  sub_100022284();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_10002206C();
  if (v4)
  {
    id v9 = sub_100060EB4(v2);
    id v10 = [v2 traitCollection];
    id v11 = [v10 horizontalSizeClass];

    id v12 = v9;
    if (v11 == (id)1)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1000150B4();
      }
    }
    else
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      sub_100025F2C();
      if (v17) {
        sub_1000150B4();
      }
      sub_100016640();
      specialized Array._endMutation()();
      id v18 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 1.0, 0.0];
      [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v18];

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1000150B4();
      }
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    type metadata accessor for LibraryViewController();
    objc_allocWithZone((Class)UIBarButtonItem);
    id v19 = v2;
    sub_1000071E0();
    uint64_t v21 = v20;
    sub_1000287FC(0xD000000000000013, 0x80000001000C14E0, v20, (SEL *)&selRef_setAccessibilityIdentifier_);
    id v22 = v21;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    sub_100025F2C();
    if (v17) {
      sub_1000150B4();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    goto LABEL_45;
  }
  sub_1000272D8();
  if (v13)
  {
    CGFloat v14 = v13;
    id v15 = [v2 traitCollection];
    id v16 = [v15 horizontalSizeClass];

    if (v16 == (id)1)
    {
      v14;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    else
    {
      if ((unint64_t)_swiftEmptyArrayStorage >> 62)
      {
        id v36 = v14;
        swift_bridgeObjectRetain();
        uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v37 < 0)
        {
          __break(1u);
          goto LABEL_48;
        }
      }
      else
      {
        id v23 = v14;
      }
      sub_100064C18();
    }
  }
  id v24 = [v2 traitCollection];
  id v25 = [v24 horizontalSizeClass];

  if (v25 != (id)2 || (sub_100009608(), (v26 & 1) == 0) || (sub_100098048(), !v27))
  {
LABEL_28:
    sub_100026C38();
    if (v30)
    {
      id v31 = v30;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1000150B4();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    sub_1000225B4();
    sub_1000205E8();
    v32();
    char v33 = LibraryConfiguration.layoutOverride.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v5);
    if (sub_100026288((char *)v2))
    {
      if (v33 == 2)
      {
        sub_100097E44();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        sub_100025F2C();
        if (!v17)
        {
LABEL_35:
          sub_100016640();
          specialized Array._endMutation()();
LABEL_44:
          sub_100026EA4();
LABEL_45:
          sub_10001885C();
          return;
        }
LABEL_48:
        sub_1000150B4();
        goto LABEL_35;
      }
    }
    else if (v33 == 2)
    {
      sub_100097C1C();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      sub_100025F2C();
      if (v17) {
        sub_1000150B4();
      }
      sub_100016640();
      specialized Array._endMutation()();
    }
    uint64_t v34 = sub_100027320();
    if (v34)
    {
      id v35 = v34;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      sub_100025F2C();
      if (v17) {
        sub_1000150B4();
      }
      sub_100016640();
      specialized Array._endMutation()();
    }
    goto LABEL_44;
  }
  CGRect v28 = v27;
  if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
  {
    id v29 = v27;
LABEL_27:
    sub_100064C18();

    goto LABEL_28;
  }
  id v38 = v27;
  swift_bridgeObjectRetain();
  uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if ((v39 & 0x8000000000000000) == 0) {
    goto LABEL_27;
  }
  __break(1u);
}

void sub_100026BD8()
{
}

uint64_t sub_100026BE0()
{
  return v0;
}

uint64_t sub_100026C04()
{
  return static Published.subscript.getter();
}

void sub_100026C38()
{
  sub_1000074D4();
  uint64_t v1 = v0;
  type metadata accessor for LibraryEditingBehavior();
  sub_100022284();
  __chkstk_darwin(v2);
  sub_100027BEC();
  sub_100022284();
  __chkstk_darwin(v3);
  sub_10001899C();
  sub_100021F8C();
  uint64_t v4 = sub_10001C138();
  v5(v4);
  LibraryConfiguration.editingBehavior.getter();
  uint64_t v6 = sub_1000235C4();
  v7(v6);
  sub_100018D14();
  sub_100021DB4();
  int v9 = v8();
  int v10 = enum case for LibraryEditingBehavior.autoShortcut(_:);
  sub_100018D14();
  sub_100018D08();
  v11();
  if (v9 == v10)
  {
    sub_100029C7C(0, &qword_1000F5230);
    sub_10001B4C0(0x7269632E6F666E69, 0xEB00000000656C63);
    type metadata accessor for LibraryViewController();
    objc_allocWithZone((Class)UIBarButtonItem);
    id v12 = v1;
    sub_1000A123C();
  }
  sub_10002A68C();
}

void sub_100026DDC()
{
  sub_1000074D4();
  uint64_t v4 = v3;
  uint64_t v6 = *v5;
  uint64_t v7 = *(void *)(v0 + *v5);
  if (v7 == 1)
  {
    uint64_t v8 = v2;
    int v9 = (void *)v1(v0);
    uint64_t v10 = *(void *)(v0 + v6);
    *(void *)(v0 + v6) = v9;
    id v11 = v9;
    v8(v10);
  }
  v4(v7);
  sub_10002A68C();
}

uint64_t sub_100026E5C()
{
  return v0;
}

uint64_t sub_100026E68()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

id sub_100026E80(id result)
{
  if (result != (id)1) {
    return result;
  }
  return result;
}

void sub_100026E90(id a1)
{
  if (a1 != (id)1) {
}
  }

void sub_100026EA4()
{
  sub_10002066C();
  type metadata accessor for LibraryEditingOption();
  sub_100022284();
  uint64_t v44 = v3;
  uint64_t v45 = v2;
  __chkstk_darwin(v2);
  sub_100023510(v4, (uint64_t)v34);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v34 - v7;
  __chkstk_darwin(v6);
  id v38 = (char *)&v34 - v9;
  uint64_t v10 = type metadata accessor for LibraryEditingBehavior();
  sub_100022284();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_10002238C();
  type metadata accessor for LibraryConfiguration();
  sub_100022284();
  __chkstk_darwin(v14);
  sub_100018874();
  uint64_t v34 = (void *)v0;
  sub_100021F8C();
  sub_1000205E8();
  v15();
  LibraryConfiguration.editingBehavior.getter();
  sub_100018D08();
  v16();
  sub_100021DB4();
  if (v17() != enum case for LibraryEditingBehavior.options(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v12 + 8))(v1, v10);
LABEL_16:
    sub_10001885C();
    return;
  }
  (*(void (**)(uint64_t *, uint64_t))(v12 + 96))(v1, v10);
  uint64_t v18 = *v1;
  id v19 = _swiftEmptyArrayStorage;
  long long v46 = _swiftEmptyArrayStorage;
  uint64_t v20 = *(void *)(v18 + 16);
  if (!v20)
  {
LABEL_15:
    char v33 = v34;
    swift_bridgeObjectRelease();
    sub_100096898((uint64_t)v19, v33);
    swift_release();
    goto LABEL_16;
  }
  unint64_t v21 = 0;
  uint64_t v22 = v45;
  uint64_t v40 = v44 + 88;
  uint64_t v41 = v44 + 16;
  int v39 = enum case for LibraryEditingOption.selection(_:);
  uint64_t v42 = (void (**)(void))(v44 + 32);
  uint64_t v43 = v44 + 8;
  id v35 = (void (**)(char *, uint64_t))(v44 + 96);
  uint64_t v36 = v20;
  id v23 = v38;
  uint64_t v37 = v18;
  while (v21 < *(void *)(v18 + 16))
  {
    uint64_t v24 = v44;
    id v25 = *(void (**)(char *, unint64_t, uint64_t))(v44 + 16);
    v25(v23, v18+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(void *)(v44 + 72) * v21, v22);
    uint64_t v26 = sub_10002913C();
    ((void (*)(uint64_t))v25)(v26);
    uint64_t v22 = v45;
    int v27 = (*(uint64_t (**)(char *, uint64_t))(v24 + 88))(v8, v45);
    if (v27 == v39)
    {
      (*v35)(v8, v22);
      swift_bridgeObjectRelease();
      sub_100016618();
      v28();
    }
    else
    {
      sub_100016618();
      v29();
      long long v30 = *v42;
      sub_100020698();
      v30();
      id v31 = v46;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10005B570();
        id v31 = v46;
      }
      unint64_t v32 = v31[2];
      if (v32 >= v31[3] >> 1)
      {
        sub_10005B570();
        id v31 = v46;
      }
      v31[2] = v32 + 1;
      sub_100020698();
      v30();
      long long v46 = v31;
      uint64_t v18 = v37;
      id v23 = v38;
      uint64_t v20 = v36;
    }
    if (v20 == ++v21)
    {
      id v19 = v46;
      goto LABEL_15;
    }
  }
  __break(1u);
}

uint64_t sub_1000272B8(char a1)
{
  if (v1 <= v3) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v1;
  }
  return sub_1000123B8(a1, v5, 1, v2);
}

void sub_1000272D8()
{
}

void *sub_100027320()
{
  uint64_t v1 = OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage____editButtonItem;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage____editButtonItem);
  uint64_t v3 = v2;
  if (v2 == (void *)1)
  {
    sub_10000A45C();
    uint64_t v3 = v4;
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v6 = v4;
    sub_100026E90(v5);
  }
  sub_100026E80(v2);
  return v3;
}

id sub_10002738C(double a1, uint64_t a2, int a3)
{
  sub_100021EF8();
  uint64_t v77 = type metadata accessor for TopHitCollectionViewStyle();
  sub_100022284();
  uint64_t v76 = v7;
  __chkstk_darwin(v8);
  sub_1000167F4();
  sub_100025B4C(v9);
  uint64_t v79 = type metadata accessor for TopHitViewColorScheme();
  sub_100022284();
  uint64_t v78 = v10;
  __chkstk_darwin(v11);
  sub_1000167F4();
  sub_100025B4C(v12);
  uint64_t v71 = type metadata accessor for AutoShortcutAppSection();
  sub_100022284();
  uint64_t v70 = v13;
  __chkstk_darwin(v14);
  sub_1000167F4();
  uint64_t v16 = sub_100025B4C(v15);
  char v17 = (int *)type metadata accessor for AppShortcutChiclet(v16);
  sub_10001C094();
  __chkstk_darwin(v18);
  sub_1000165D8();
  uint64_t v73 = sub_100025A08((uint64_t *)&unk_1000F8400);
  sub_10001C094();
  __chkstk_darwin(v19);
  sub_1000206CC();
  uint64_t v80 = v20;
  sub_1000215FC();
  __chkstk_darwin(v21);
  sub_100025B4C((uint64_t)&v62 - v22);
  uint64_t v23 = type metadata accessor for UUID();
  sub_100022284();
  uint64_t v25 = v24;
  __chkstk_darwin(v26);
  sub_1000206CC();
  uint64_t v81 = v27;
  sub_1000215FC();
  __chkstk_darwin(v28);
  long long v30 = (char *)&v62 - v29;
  AutoShortcutAppSection.items.getter();
  type metadata accessor for AggregatedEntry();
  sub_10001D3D0((unint64_t *)&unk_1000F4B10, (void (*)(uint64_t))&type metadata accessor for AggregatedEntry);
  uint64_t v31 = Array<A>.hashValue.getter();
  swift_bridgeObjectRelease();
  int v72 = a3;
  uint64_t v32 = Bool.hashValue.getter();
  uint64_t v33 = v32 ^ Double.hashValue.getter() ^ v31;
  AutoShortcutAppSection.id.getter();
  id v85 = v3;
  uint64_t v34 = (uint64_t *)&v3[qword_1000F7FE8];
  swift_beginAccess();
  uint64_t v68 = v34;
  uint64_t v35 = *v34;
  swift_bridgeObjectRetain();
  id v36 = sub_100027C34((uint64_t)v30, v35);
  uint64_t v38 = v37;
  swift_bridgeObjectRelease();
  int v39 = *(void (**)(char *, uint64_t))(v25 + 8);
  uint64_t v83 = v23;
  uint64_t v82 = v25 + 8;
  v39(v30, v23);
  if (v36)
  {
    if (v38 == v33)
    {
      id v40 = [v36 superview];

      if (!v40) {
        return v36;
      }
    }
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v67 = v33;
  unint64_t v66 = (void (*)(uint64_t, uint64_t))v39;
  if (Strong)
  {
    uint64_t v42 = (void *)Strong;
    uint64_t v43 = v3;
    sub_1000255FC(v89);

    uint64_t v3 = (char *)(id)v89[2];
    sub_10002582C(v89);
    uint64_t v44 = (uint64_t)[v3 itemsPerRow];
  }
  else
  {
    uint64_t v43 = v3;
    uint64_t v44 = 2;
  }
  swift_unknownObjectWeakLoadStrong();
  sub_100021EF8();
  uint64_t v63 = type metadata accessor for LibraryIndirectMenuDataSource();
  sub_1000206B4();
  uint64_t v64 = sub_1000281F8(v3);
  uint64_t v45 = v70;
  long long v46 = *(void (**)(uint64_t, char *, uint64_t))(v70 + 16);
  long long v47 = v69;
  id v65 = v43;
  uint64_t v48 = v71;
  v46((uint64_t)v69, v43, v71);
  uint64_t v49 = sub_1000206B4();
  swift_weakInit();
  long long v50 = (uint64_t *)(v4 + v17[10]);
  *long long v50 = swift_getKeyPath();
  sub_100025A08(&qword_1000F8410);
  swift_storeEnumTagMultiPayload();
  uint64_t v51 = (uint64_t *)(v4 + v17[11]);
  *uint64_t v51 = swift_getKeyPath();
  sub_100025A08(&qword_1000F4700);
  swift_storeEnumTagMultiPayload();
  v46(v4, v47, v48);
  *(unsigned char *)(v4 + v17[5]) = v72 & 1;
  *(double *)(v4 + v17[6]) = a1;
  *(void *)(v4 + v17[9]) = v44;
  uint64_t v52 = (uint64_t (**)())(v4 + v17[7]);
  void *v52 = sub_1000AEA8C;
  v52[1] = (uint64_t (*)())v49;
  swift_retain();
  AutoShortcutAppSection.bundleIdentifier.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v76 + 104))(v75, enum case for TopHitCollectionViewStyle.library(_:), v77);
  uint64_t v53 = v74;
  TopHitViewColorScheme.init(bundleIdentifier:style:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 32))(v4 + v17[8], v53, v79);
  uint64_t KeyPath = swift_getKeyPath();
  v88[3] = v63;
  v88[4] = sub_10001D3D0(&qword_1000F78A0, (void (*)(uint64_t))type metadata accessor for LibraryIndirectMenuDataSource);
  v88[0] = v64;
  sub_100025DE8((uint64_t)v88, (uint64_t)&v87, &qword_1000F78A8);
  uint64_t v86 = KeyPath;
  uint64_t v55 = v84;
  sub_10001C190(v4, v84);
  sub_100025DE8((uint64_t)&v86, v55 + *(int *)(v73 + 36), &qword_1000F78B0);
  swift_retain();
  sub_100025E44((uint64_t)&v86, &qword_1000F78B0);
  sub_100028234(v4);
  sub_100025E44((uint64_t)v88, &qword_1000F78A8);
  sub_100025DE8(v55, v80, (uint64_t *)&unk_1000F8400);
  id v56 = objc_allocWithZone((Class)sub_100025A08(&qword_1000F8418));
  id v57 = (void *)_UIHostingView.init(rootView:)();
  uint64_t v58 = v81;
  AutoShortcutAppSection.id.getter();
  swift_beginAccess();
  id v36 = v57;
  sub_100028144((uint64_t)v36, v67, v58);
  v66(v58, v83);
  swift_endAccess();
  swift_release();
  uint64_t v59 = sub_100021F6C();
  sub_100025E44(v59, v60);
  return v36;
}

uint64_t sub_100027B4C()
{
  return type metadata accessor for Locale();
}

uint64_t sub_100027B74()
{
  return *(void *)(v0 - 136);
}

void *sub_100027BAC()
{
  return malloc(0x28uLL);
}

double sub_100027BCC()
{
  uint64_t v5 = v1;
  uint64_t v6 = v2;
  uint64_t v7 = v3;
  uint64_t v8 = v4;
  return CGRectGetMinY(*(CGRect *)&v5);
}

uint64_t sub_100027BEC()
{
  return type metadata accessor for LibraryConfiguration();
}

uint64_t sub_100027C14(uint64_t a1)
{
  return sub_100021594(v1, 1, 1, a1);
}

void *sub_100027C34(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  unint64_t v3 = sub_100027E2C(a1);
  if ((v4 & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(void **)(*(void *)(a2 + 56) + 16 * v3);
  id v6 = v5;
  return v5;
}

void sub_100027C88(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v27 = a2;
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)*v4;
  unint64_t v14 = sub_100027E2C(a3);
  uint64_t v16 = v13[2];
  BOOL v17 = (v15 & 1) == 0;
  Swift::Int v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v19 = v14;
  char v20 = v15;
  sub_100025A08((uint64_t *)&unk_1000F8420);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a4 & 1, v18)) {
    goto LABEL_5;
  }
  unint64_t v21 = sub_100027E2C(a3);
  if ((v20 & 1) != (v22 & 1))
  {
LABEL_10:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v19 = v21;
LABEL_5:
  uint64_t v23 = *v5;
  if (v20)
  {
    uint64_t v24 = v23[7] + 16 * v19;

    uint64_t v25 = v27;
    *(void *)uint64_t v24 = a1;
    *(void *)(v24 + 8) = v25;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
    sub_100028084(v19, (uint64_t)v12, a1, v27, v23);
  }
}

unint64_t sub_100027E2C(uint64_t a1)
{
  type metadata accessor for UUID();
  sub_10001D3D0(&qword_1000F6980, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();

  return sub_100027EC4(a1, v2);
}

unint64_t sub_100027EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_10001D3D0(&qword_1000F8430, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v15 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

uint64_t sub_100028084(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v10 = a5[6];
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a2, v11);
  uint64_t v13 = (void *)(a5[7] + 16 * a1);
  *uint64_t v13 = a3;
  v13[1] = a4;
  uint64_t v14 = a5[2];
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    a5[2] = v16;
  }
  return result;
}

uint64_t sub_100028144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  *unint64_t v3 = 0x8000000000000000;
  sub_100027C88(a1, a2, a3, isUniquelyReferenced_nonNull_native);
  *unint64_t v3 = v9;

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for LibraryIndirectMenuDataSource()
{
  return self;
}

uint64_t sub_1000281F8(void *a1)
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();

  return v1;
}

uint64_t sub_100028234(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppShortcutChiclet(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for AppShortcutChiclet(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for AutoShortcutAppSection();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_release();
  uint64_t v5 = a1 + a2[8];
  uint64_t v6 = type metadata accessor for TopHitViewColorScheme();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[10];
  sub_100025A08(&qword_1000F8410);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + a2[11];
  sub_100025A08(&qword_1000F4700);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t result = sub_1000225EC(v9, 1, v10);
    if (!result)
    {
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
      return v12(v9, v10);
    }
  }
  else
  {
    return swift_release();
  }
  return result;
}

void sub_100028468()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v13 = (id)Strong;
    id v1 = sub_10001A768();

    if (v1)
    {
      uint64_t v2 = v13;
    }
    else
    {
      id v3 = [v13 traitCollection];
      id v4 = [v13 navigationItem];
      uint64_t v5 = swift_unknownObjectWeakLoadStrong();
      if (v5
        && (uint64_t v6 = (void *)v5,
            uint64_t v7 = *(void **)(v5 + OBJC_IVAR____TtC9Shortcuts21SearchStateController_pendingTraitCollection),
            id v8 = v7,
            v6,
            v7)
        && (id v9 = [v8 horizontalSizeClass],
            id v10 = [v3 horizontalSizeClass],
            v8,
            v9 != v10))
      {
        uint64_t v12 = v13;
      }
      else
      {
        [v4 setPreferredSearchBarPlacement:0];
        id v11 = sub_100029E68();
        [v4 setSearchController:v11];

        uint64_t v12 = v3;
        id v3 = v4;
        id v4 = v11;
      }

      uint64_t v2 = v4;
    }
  }
}

uint64_t sub_1000285E8(uint64_t a1, uint64_t *a2)
{
  sub_100025A08(a2);
  sub_100016618();
  v3();
  return a1;
}

const char *sub_100028640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v11 = (objc_class *)sub_100022020();
  swift_unknownObjectWeakInit();
  v6[OBJC_IVAR___WFSidebarViewController_animateDataReload] = 2;
  *(void *)&v6[OBJC_IVAR___WFSidebarViewController____lazy_storage___toolbarViewController] = 1;
  uint64_t v12 = &v6[OBJC_IVAR___WFSidebarViewController____lazy_storage___barButtons];
  v12[1] = 0;
  void v12[2] = 0;
  *uint64_t v12 = 0;
  *(void *)&v6[OBJC_IVAR___WFSidebarViewController____lazy_storage___sidebarDataSource] = 0;
  type metadata accessor for SidebarStyle();
  sub_10002A104();
  uint64_t v14 = v13;
  sub_100025B3C();
  v15();
  *(void *)&v6[OBJC_IVAR___WFSidebarViewController_database] = v8;
  *(void *)&v6[OBJC_IVAR___WFSidebarViewController_sections] = v9;
  v6[OBJC_IVAR___WFSidebarViewController_isCompact] = (_BYTE)a5;
  *(void *)&v6[OBJC_IVAR___WFSidebarViewController_shortcutMoveService] = v6;
  v32.receiver = v6;
  v32.super_class = v11;
  id v16 = v8;
  uint64_t v17 = swift_retain();
  id v25 = sub_100022548(v17, v18, v19, v20, v21, v22, v23, v24, v32);
  sub_100022FA4();
  NSString v26 = sub_10001C158();
  id v27 = sub_1000248B0(a5);

  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v29;

  sub_1000287FC(v28, v30, "initWithNibName:bundle:", (SEL *)&selRef_setTitle_);
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v5, v7);
  return "initWithNibName:bundle:";
}

void sub_1000287FC(uint64_t a1, uint64_t a2, void *a3, SEL *a4)
{
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 *a4:v6];
}

void sub_100028868()
{
  sub_10002066C();
  v76[5] = type metadata accessor for Logger();
  sub_100022284();
  v76[4] = v1;
  ((void (*)(void))__chkstk_darwin)();
  id v3 = (char *)v76 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100025A08((uint64_t *)&unk_1000F8480);
  uint64_t v5 = sub_1000165CC(v4);
  __chkstk_darwin(v5);
  sub_10001B488(v6, v76[0]);
  uint64_t v7 = type metadata accessor for AutoShortcutApp();
  sub_100022284();
  uint64_t v82 = v8;
  __chkstk_darwin(v9);
  sub_100023510(v10, v76[0]);
  __chkstk_darwin(v11);
  uint64_t v80 = (char *)v76 - v12;
  uint64_t v13 = type metadata accessor for LibrarySectionOptions.SectionType();
  sub_100022284();
  uint64_t v91 = v14;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (id *)((char *)v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  uint64_t v92 = v7;
  uint64_t v93 = (char *)v76 - v19;
  uint64_t v20 = *(void *)(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_groups);
  uint64_t v21 = *(void *)(v20 + 16);
  uint64_t v81 = v18;
  uint64_t v77 = v20;
  if (!v21)
  {
    uint64_t v23 = _swiftEmptyArrayStorage;
LABEL_24:
    uint64_t v44 = sub_100009420((uint64_t)v23);
    swift_bridgeObjectRelease();
    uint64_t v45 = v44[2];
    if (!v45)
    {
      swift_bridgeObjectRelease();
      uint64_t v49 = _swiftEmptyArrayStorage;
LABEL_42:
      uint64_t v67 = sub_100007BCC((uint64_t)v49);
      swift_bridgeObjectRelease();
      if (*(void *)(v20 + 16) == 1)
      {
        type metadata accessor for AllShortcutsGroup();
        if (swift_dynamicCastClass()) {
          goto LABEL_51;
        }
      }
      unint64_t v68 = v67[2];
      if (v68 >= 2)
      {
        static WFLog.subscript.getter();
        swift_bridgeObjectRetain_n();
        id v69 = Logger.logObject.getter();
        os_log_type_t v70 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v69, v70))
        {
          uint64_t v71 = (uint8_t *)swift_slowAlloc();
          v95[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v71 = 136315138;
          swift_bridgeObjectRetain();
          uint64_t v72 = Array.description.getter();
          unint64_t v74 = v73;
          swift_bridgeObjectRelease();
          uint64_t v94 = sub_10002D53C(v72, v74, v95);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v69, v70, "Found multiple auto-shortcut apps when checking which one to protect: %s", v71, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        sub_100016618();
        v75();
        unint64_t v68 = v67[2];
      }
      if (!v68)
      {
LABEL_51:
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      sub_10001885C();
      return;
    }
    v76[2] = 0;
    v76[3] = (uint64_t)v3;
    uint64_t v46 = v91 + 16;
    uint64_t v89 = *(void (**)(id *, char *, uint64_t))(v91 + 16);
    long long v47 = (char *)v44 + ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80));
    uint64_t v88 = (uint64_t (**)(id *, uint64_t))(v91 + 88);
    int v87 = enum case for LibrarySectionOptions.SectionType.shortcuts(_:);
    int v78 = enum case for LibrarySectionOptions.SectionType.uninhabited(_:);
    int v79 = enum case for LibrarySectionOptions.SectionType.appShortcuts(_:);
    uint64_t v91 = v82 + 32;
    uint64_t v86 = v46 - 8;
    uint64_t v48 = *(void *)(v46 + 56);
    uint64_t v84 = v46 + 80;
    uint64_t v85 = v48;
    v76[1] = (uint64_t)v44;
    swift_bridgeObjectRetain();
    uint64_t v49 = _swiftEmptyArrayStorage;
    uint64_t v50 = v83;
    while (1)
    {
      uint64_t v51 = v93;
      uint64_t v52 = sub_10002913C();
      uint64_t v53 = v13;
      id v54 = v89;
      ((void (*)(uint64_t))v89)(v52);
      v54(v18, v51, v53);
      uint64_t v13 = v53;
      int v55 = (*v88)(v18, v53);
      if (v55 == v87) {
        break;
      }
      if (v55 != v79)
      {
        if (v55 != v78) {
          goto LABEL_58;
        }
        goto LABEL_31;
      }
      uint64_t v58 = sub_1000293D0();
      v59(v58);
      (*(void (**)(uint64_t, id *, uint64_t))v91)(v50, v18, v7);
      uint64_t v60 = 0;
LABEL_32:
      sub_100021594(v50, v60, 1, v7);
      sub_100016618();
      v61();
      if (sub_1000225EC(v50, 1, v7) == 1)
      {
        sub_100025E44(v50, (uint64_t *)&unk_1000F8480);
      }
      else
      {
        uint64_t v62 = v46;
        uint64_t v63 = *(void (**)(uint64_t, id *, uint64_t))v91;
        uint64_t v64 = v80;
        (*(void (**)(char *, uint64_t, uint64_t))v91)(v80, v50, v7);
        v63(v90, (id *)v64, v7);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v49 = (void *)sub_1000294E8(0, v49[2] + 1, 1, (uint64_t)v49);
        }
        unint64_t v66 = v49[2];
        unint64_t v65 = v49[3];
        uint64_t v46 = v62;
        if (v66 >= v65 >> 1) {
          uint64_t v49 = (void *)sub_1000294E8(v65 > 1, v66 + 1, 1, (uint64_t)v49);
        }
        uint64_t v18 = v81;
        v49[2] = v66 + 1;
        uint64_t v7 = v92;
        sub_100020698();
        ((void (*)(void))v63)();
        uint64_t v50 = v83;
      }
      v47 += v85;
      if (!--v45)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v20 = v77;
        goto LABEL_42;
      }
    }
    uint64_t v56 = sub_1000293D0();
    v57(v56);

LABEL_31:
    uint64_t v60 = 1;
    goto LABEL_32;
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = v20 + 40;
  uint64_t v23 = _swiftEmptyArrayStorage;
  while (1)
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    uint64_t v24 = dispatch thunk of LibraryGroup.sections.getter();
    swift_unknownObjectRelease();
    uint64_t v25 = *(void *)(v24 + 16);
    uint64_t v26 = v23[2];
    uint64_t v27 = v26 + v25;
    if (__OFADD__(v26, v25)) {
      break;
    }
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (!isUniquelyReferenced_nonNull_native || v27 > v23[3] >> 1)
    {
      if (v26 <= v27) {
        uint64_t v29 = v26 + v25;
      }
      else {
        uint64_t v29 = v26;
      }
      uint64_t v23 = (void *)sub_10002AC00(isUniquelyReferenced_nonNull_native, v29, 1, (uint64_t)v23);
    }
    uint64_t v7 = v92;
    if (*(void *)(v24 + 16))
    {
      uint64_t v30 = v23[2];
      uint64_t v31 = (v23[3] >> 1) - v30;
      uint64_t v32 = *(void *)(type metadata accessor for LibrarySectionOptions() - 8);
      uint64_t v33 = *(void *)(v32 + 72);
      if (v31 < v25) {
        goto LABEL_55;
      }
      unint64_t v34 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
      uint64_t v35 = (char *)v23 + v34 + v33 * v30;
      unint64_t v36 = v24 + v34;
      uint64_t v37 = v33 * v25;
      uint64_t v38 = &v35[v37];
      unint64_t v39 = v36 + v37;
      if (v36 < (unint64_t)v38 && (unint64_t)v35 < v39) {
        goto LABEL_57;
      }
      swift_arrayInitWithCopy();
      if (v25)
      {
        uint64_t v41 = v23[2];
        BOOL v42 = __OFADD__(v41, v25);
        uint64_t v43 = v41 + v25;
        if (v42) {
          goto LABEL_56;
        }
        v23[2] = v43;
      }
    }
    else if (v25)
    {
      goto LABEL_54;
    }
    swift_bridgeObjectRelease();
    v22 += 16;
    if (!--v21)
    {
      uint64_t v20 = v77;
      swift_bridgeObjectRelease();
      uint64_t v18 = v81;
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
LABEL_58:
  _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
}

uint64_t sub_100029114()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t sub_10002913C()
{
  return v0;
}

uint64_t sub_100029148(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void), void (*a8)(void))
{
  if (a3)
  {
    sub_100016828();
    if (v14 != v15)
    {
      if (v13 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_23;
      }
      sub_1000245C8();
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v16 = *(void *)(a4 + 16);
  if (v13 <= v16) {
    uint64_t v17 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v17 = v13;
  }
  if (!v17)
  {
    uint64_t v21 = _swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  sub_100025A08(a5);
  uint64_t v18 = *(void *)(a6(0) - 8);
  uint64_t v19 = *(void *)(v18 + 72);
  unint64_t v20 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v21 = (void *)swift_allocObject();
  size_t v22 = j__malloc_size(v21);
  if (!v19 || (v22 - v20 == 0x8000000000000000 ? (BOOL v23 = v19 == -1) : (BOOL v23 = 0), v23))
  {
LABEL_23:
    sub_10002A0B8();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  v21[2] = v16;
  v21[3] = 2 * ((uint64_t)(v22 - v20) / v19);
LABEL_18:
  uint64_t v24 = *(void *)(a6(0) - 8);
  unint64_t v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  unint64_t v26 = (unint64_t)v21 + v25;
  if (a1)
  {
    sub_1000293EC(a4 + v25, v16, v26, a8);
    *(void *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100029530(0, v16, v26, a4, a7);
  }
  return (uint64_t)v21;
}

uint64_t sub_100029370()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t sub_100029394()
{
  return UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
}

void sub_1000293B0(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1000293D0()
{
  return v0;
}

void sub_1000293EC(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void))
{
  if (a2 < 0)
  {
    sub_10002A0B8();
    sub_100025F50();
    __break(1u);
  }
  else if (a3 < a1 || (a4(0), sub_10001C094(), a1 + *(void *)(v8 + 72) * a2 <= a3))
  {
    a4(0);
    sub_1000234FC();
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (a3 != a1)
  {
    sub_1000234FC();
    swift_arrayInitWithTakeBackToFront();
  }
}

uint64_t sub_1000294E8(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_100029148(a1, a2, a3, a4, &qword_1000F7198, (uint64_t (*)(void))&type metadata accessor for AutoShortcutApp, (uint64_t (*)(void))&type metadata accessor for AutoShortcutApp, (void (*)(void))&type metadata accessor for AutoShortcutApp);
}

uint64_t sub_100029530(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    sub_10002A0B8();
    sub_1000220F0();
    goto LABEL_11;
  }
  uint64_t v9 = *(void *)(a5(0) - 8);
  uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  uint64_t v11 = *(void *)(v9 + 72);
  unint64_t v12 = v10 + v11 * a1;
  unint64_t v13 = a3 + v11 * v5;
  if (v12 >= v13 || v12 + v11 * v5 <= a3)
  {
    swift_arrayInitWithCopy();
    swift_bridgeObjectRelease();
    return v13;
  }
  sub_10002A0B8();
  sub_100022F68();
LABEL_11:
  uint64_t result = sub_1000249A0();
  __break(1u);
  return result;
}

void sub_100029664()
{
  sub_10002066C();
  uint64_t v2 = type metadata accessor for LibraryEditingAction();
  sub_100022284();
  uint64_t v55 = v3;
  __chkstk_darwin(v4);
  sub_1000206CC();
  uint64_t v60 = v5;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v51 - v7;
  uint64_t v9 = type metadata accessor for LibraryEditingBehavior();
  sub_100022284();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_100018874();
  uint64_t v13 = type metadata accessor for LibraryConfiguration();
  sub_100022284();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_1000205E8();
  v19();
  id v20 = v0;
  LibraryConfiguration.editingBehavior.getter();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v13);
  uint64_t v21 = LibraryEditingBehavior.actions.getter();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v1, v9);
  if (v21)
  {
    id v59 = v20;
    unint64_t v66 = (unint64_t)_swiftEmptyArrayStorage;
    uint64_t v22 = *(void *)(v21 + 16);
    if (v22)
    {
      sub_100025C80();
      uint64_t v24 = v21 + v23;
      uint64_t v62 = *(void *)(v25 + 72);
      unsigned int v64 = enum case for LibraryEditingAction.delete(_:);
      uint64_t v61 = (void (**)(char *, void, uint64_t))(v25 + 104);
      uint64_t v63 = (void (**)(char *, uint64_t))(v25 + 8);
      uint64_t v57 = v25 + 88;
      uint64_t v58 = (void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16);
      int v56 = enum case for LibraryEditingAction.remove(_:);
      int v54 = enum case for LibraryEditingAction.move(_:);
      int v52 = enum case for LibraryEditingAction.duplicate(_:);
      uint64_t v53 = v25 + 96;
      uint64_t v51 = v21;
      swift_bridgeObjectRetain_n();
      uint64_t v26 = v60;
      uint64_t v55 = v2;
      while (1)
      {
        uint64_t v27 = LibraryEditingAction.title.getter();
        uint64_t v29 = v28;
        memset(v65, 0, 32);
        id v30 = objc_allocWithZone((Class)UIBarButtonItem);
        id v31 = sub_100029CE4(v27, v29, 0, v65, 0);
        (*v61)(v8, v64, v2);
        LOBYTE(v27) = static LibraryEditingAction.== infix(_:_:)();
        uint64_t v32 = *v63;
        (*v63)(v8, v2);
        if (v27)
        {
          id v33 = [self systemRedColor];
          [v31 setTintColor:v33];
        }
        LibraryEditingAction.title.getter();
        if (v34)
        {
          (*v58)(v26, v24, v2);
          uint64_t v35 = sub_1000245D8();
          int v37 = v36(v35);
          if (v37 == v56)
          {
            uint64_t v38 = sub_1000245D8();
            v39(v38);
            uint64_t v40 = *(void *)(v26 + 16);
            uint64_t v41 = v8;
            uint64_t v42 = *(void *)(v26 + 24);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v43 = sub_1000206B4();
            sub_1000074E8();
            uint64_t v44 = (void *)swift_allocObject();
            v44[2] = v43;
            v44[3] = v40;
            v44[4] = v42;
            uint64_t v8 = v41;
            uint64_t v45 = sub_1000643A0;
LABEL_15:
            uint64_t v49 = (uint64_t)v45;
            sub_100029C7C(0, &qword_1000F5ED8);
            swift_retain();
            uint64_t v50 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
            [v31 setPrimaryAction:v50];
            sub_10002354C(v49);

            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1000150B4();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            uint64_t v26 = v60;
            uint64_t v2 = v55;
            goto LABEL_20;
          }
          if (v37 == v54)
          {
            sub_1000206B4();
            sub_1000074E8();
            uint64_t v45 = sub_100064418;
            goto LABEL_15;
          }
          if (v37 == v52)
          {
            sub_1000206B4();
            sub_1000074E8();
            uint64_t v45 = sub_1000643F4;
            goto LABEL_15;
          }
          if (v37 == v64)
          {
            uint64_t v46 = sub_1000206B4();
            sub_1000074E8();
            uint64_t v47 = swift_allocObject();
            *(void *)(v47 + 16) = v46;
            *(void *)(v47 + 24) = v31;
            id v48 = v31;
            uint64_t v45 = sub_1000643EC;
            goto LABEL_15;
          }
          v32((char *)v26, v2);
          swift_bridgeObjectRelease();
        }

LABEL_20:
        v24 += v62;
        if (!--v22)
        {
          swift_bridgeObjectRelease();
          goto LABEL_24;
        }
      }
    }
    swift_bridgeObjectRetain();
LABEL_24:

    swift_bridgeObjectRelease_n();
  }
  else
  {
  }
  sub_10001885C();
}

uint64_t sub_100029C7C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

NSString sub_100029CB8()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_100029CD8()
{
  return v0;
}

id sub_100029CE4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  if (a2)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  uint64_t v11 = a4[3];
  if (v11)
  {
    uint64_t v12 = sub_10002A498(a4, a4[3]);
    uint64_t v13 = *(void *)(v11 - 8);
    __chkstk_darwin(v12);
    uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v13 + 16))(v15);
    uint64_t v16 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v11);
    sub_1000149BC((uint64_t)a4);
  }
  else
  {
    uint64_t v16 = 0;
  }
  id v17 = [v6 initWithTitle:v10 style:a3 target:v16 action:a5];

  swift_unknownObjectRelease();
  return v17;
}

id sub_100029E68()
{
  id v1 = [objc_allocWithZone((Class)UISearchController) initWithSearchResultsController:0];
  [v1 setSearchResultsUpdater:v0];
  [v1 setObscuresBackgroundDuringPresentation:0];
  [v1 setHidesNavigationBarDuringPresentation:*(unsigned __int8 *)(v0 + OBJC_IVAR____TtC9Shortcuts16SearchController_hidesNavigationBarDuringPresentation)];
  id v2 = sub_10002A0CC();
  [v2 setClipsToBounds:1];

  id v3 = sub_10002A0CC();
  [v3 setDelegate:v0];

  id v4 = sub_10002A0CC();
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC9Shortcuts16SearchController_placeholder);
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC9Shortcuts16SearchController_placeholder + 8);
  swift_bridgeObjectRetain();
  sub_100006894(v5, v6, v4);

  swift_bridgeObjectRelease();
  id v7 = sub_10002A0CC();
  [v7 setLookToDictateEnabled:1];

  id v8 = sub_10002A0CC();
  uint64_t v9 = sub_1000070E0();
  sub_100004F74(v9, v10, v8);

  return v1;
}

uint64_t sub_100029FCC()
{
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_10002A00C()
{
  return *(void *)(v0 - 416);
}

uint64_t sub_10002A034()
{
  return v0;
}

id sub_10002A05C()
{
  id v4 = *(const char **)(v2 + 2952);
  return [v0 v4:v1];
}

uint64_t sub_10002A078(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v5 = a3 & 1;
  return Text.init(_:tableName:bundle:comment:)(a1, a2, v5, a4, 0, 0, 0, 0, 0);
}

uint64_t sub_10002A0A0()
{
  return v0;
}

id sub_10002A0CC()
{
  uint64_t v3 = *(const char **)(v1 + 24);
  return [v0 v3];
}

uint64_t sub_10002A0E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return _AssistantIntent.init<A>(_:phrases:parameterValues:)(v7 - 112, a2, 0, a4, 0, a6, a7);
}

__n128 _s13LayoutMetricsV17TopHitsItemLayoutVwCP(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for TipController.UseSiriToRunShortcutTip.PersonalContent(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

unint64_t static WorkflowEntity.persistentIdentifier.getter()
{
  return 0xD000000000000013;
}

uint64_t _s13LayoutMetricsV17TopHitsItemLayoutVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

uint64_t sub_10002A1B8(void *a1, uint64_t a2)
{
  return sub_10001C4F0(a1, a2);
}

uint64_t sub_10002A1C0()
{
  return swift_release();
}

uint64_t sub_10002A1C8()
{
  return swift_release();
}

uint64_t sub_10002A1D0()
{
  return swift_release();
}

uint64_t sub_10002A1D8()
{
  return swift_release();
}

uint64_t sub_10002A1E0()
{
  return swift_release();
}

uint64_t sub_10002A1E8()
{
  return swift_release();
}

uint64_t sub_10002A1F0()
{
  return swift_release();
}

uint64_t sub_10002A1F8()
{
  return swift_release();
}

uint64_t sub_10002A200()
{
  return swift_release();
}

uint64_t sub_10002A208()
{
  return swift_release();
}

uint64_t sub_10002A210()
{
  return swift_release();
}

uint64_t sub_10002A218(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10002A228(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10002A238(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10002A248(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10002A258(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10002A268(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10002A278(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10002A288(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10002A298(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10002A2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10002A2B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t _s13LayoutMetricsV17TopHitsItemLayoutVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

void type metadata accessor for WorkflowEntity()
{
}

ValueMetadata *type metadata accessor for HeaderButtonStyle()
{
  return &type metadata for HeaderButtonStyle;
}

ValueMetadata *type metadata accessor for TipController.UseSiriToRunShortcutTip.PersonalContent()
{
  return &type metadata for TipController.UseSiriToRunShortcutTip.PersonalContent;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

uint64_t sub_10002A36C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10002A380()
{
  return swift_bridgeObjectRetain();
}

id sub_10002A390(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000136A8(a1, a2, a3, a4);
}

unint64_t sub_10002A3A8()
{
  unint64_t result = qword_1000F5A10;
  if (!qword_1000F5A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5A10);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TipController.UseSiriToRunShortcutTip.PersonalContent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for SidebarView.DataSource(uint64_t a1)
{
  return sub_10001C010(a1, (uint64_t *)&unk_1000F64C0);
}

const char *sub_10002A458()
{
  return "alpha";
}

void *sub_10002A498(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

void *_s20LibrarySectionHeaderC13SectionHeaderVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x48uLL);
}

uint64_t *sub_10002A4E4(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_10002A548(uint64_t a1, unint64_t *a2)
{
  return sub_100029C7C(0, a2);
}

uint64_t sub_10002A560()
{
  return type metadata accessor for LocalizedStringResource.BundleDescription();
}

unint64_t sub_10002A58C(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

uint64_t sub_10002A5A4()
{
  return v0;
}

double sub_10002A5BC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + a1;
  double result = 0.0;
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(void *)(v2 + 80) = 0;
  return result;
}

uint64_t sub_10002A5D8()
{
  return 0;
}

uint64_t sub_10002A600()
{
  return swift_task_alloc();
}

void sub_10002A61C(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
}

uint64_t sub_10002A628()
{
  return v0;
}

uint64_t sub_10002A634()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_10002A650()
{
  return v0;
}

void sub_10002A660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 128) = (char *)&a9 - v9;
}

uint64_t sub_10002A674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100021594(a1, 1, 1, a4);
}

id sub_10002A6A0(id a1, SEL a2)
{
  return [a1 a2:v4 v5:v5 v6:v6 v3:v3];
}

uint64_t sub_10002A6C0(uint64_t a1)
{
  return sub_1000AE8F8(a1, 0.0, 100.0);
}

unint64_t sub_10002A6E4@<X0>(uint64_t a1@<X8>)
{
  return v2
       + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
       + *(void *)(v1 + 72) * a1;
}

uint64_t sub_10002A714()
{
  return ParameterSummaryString.init(stringInterpolation:)();
}

uint64_t sub_10002A734()
{
  return type metadata accessor for RootNavigationDestination();
}

uint64_t sub_10002A750()
{
  return v0;
}

uint64_t sub_10002A76C()
{
  return type metadata accessor for LibrarySectionOptions();
}

uint64_t sub_10002A794()
{
  return v0;
}

uint64_t sub_10002A7BC(uint64_t a1)
{
  return sub_100021594(v1, 0, 1, a1);
}

uint64_t sub_10002A7E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_10002A844()
{
  sub_10002348C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_100016658(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_10008C8F8;
  uint64_t v3 = sub_10002A750();
  return v4(v3);
}

uint64_t sub_10002A8DC(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  double v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *double v4 = v2;
  v4[1] = sub_100088ACC;
  return v6(a1);
}

void *sub_10002A9B8(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    Swift::Int v2 = String.UTF8View._foreignCount()();
    if (v2) {
      goto LABEL_6;
    }
    return _swiftEmptyArrayStorage;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    Swift::Int v2 = HIBYTE(a2) & 0xF;
  }
  else {
    Swift::Int v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
LABEL_6:
  uint64_t v3 = sub_10000641C(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    double v4 = v3;
    uint64_t v5 = _StringGuts.copyUTF8(into:)();
    if ((v6 & 1) != 0 || v5 != v2) {
      goto LABEL_14;
    }
    return v4;
  }
  _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
LABEL_14:
  double result = (void *)_assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_10002AB2C()
{
}

void sub_10002AB98()
{
}

void sub_10002ABE0()
{
  sub_10002AB98();
  *uint64_t v0 = v1;
}

uint64_t sub_10002AC00(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_100029148(a1, a2, a3, a4, &qword_1000F71A0, (uint64_t (*)(void))&type metadata accessor for LibrarySectionOptions, (uint64_t (*)(void))&type metadata accessor for LibrarySectionOptions, (void (*)(void))&type metadata accessor for LibrarySectionOptions);
}

void *sub_10002AC48(uint64_t a1, unint64_t a2)
{
  Swift::Int v2 = sub_10002A9B8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    Swift::Int v2 = sub_10003E0D4(0, v2[2] + 1, 1, (uint64_t)v2);
  }
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    Swift::Int v2 = sub_10003E0D4((char *)(v3 > 1), v4 + 1, 1, (uint64_t)v2);
  }
  v2[2] = v4 + 1;
  *((unsigned char *)v2 + v4 + 32) = 0;
  return v2;
}

uint64_t sub_10002ACE0(void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_10003DFA0((char *)__src, HIBYTE(a6) & 0xF, __dst);
      UnsafeMutableRawBufferPointer.subscript.setter();
      uint64_t result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    uint64_t result = (uint64_t)sub_10002AC48(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    uint64_t v8 = _StringObject.sharedUTF8.getter();
    if (!v8)
    {
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_10002AE38(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_10000CBD8(a1, a2, a3);
}

uint64_t sub_10002AE50(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_10000CBD8(a1, a2, a3);
}

void type metadata accessor for NSDirectionalRectEdge(uint64_t a1)
{
}

uint64_t sub_10002AE7C()
{
  return sub_10002B4C4((unint64_t *)&unk_1000F4920, type metadata accessor for Key);
}

id *sub_10002AEC4(id *a1)
{
  return a1;
}

uint64_t sub_10002AEF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100025A08(&qword_1000F4AD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10002AF58(uint64_t a1, uint64_t a2, void *a3)
{
}

uint64_t sub_10002AF68(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = *(void *)(result + 56);
  uint64_t v30 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & v4;
  int64_t v31 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = a2 + 56;
  if ((v6 & v4) == 0) {
    goto LABEL_8;
  }
LABEL_7:
  unint64_t v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  int64_t v32 = v3;
  for (unint64_t i = v9 | (v3 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v13 << 6))
  {
    uint64_t v15 = result;
    uint64_t v16 = (uint64_t *)(*(void *)(result + 48) + 16 * i);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    Swift::Int v19 = Hasher._finalize()();
    uint64_t v20 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v21 = v19 & ~v20;
    if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
      goto LABEL_41;
    }
    uint64_t v22 = *(void *)(a2 + 48);
    uint64_t v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (!v24 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v25 = ~v20;
      for (unint64_t j = v21 + 1; ; unint64_t j = v27 + 1)
      {
        uint64_t v27 = j & v25;
        if (((*(void *)(v8 + (((j & v25) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v25)) & 1) == 0) {
          break;
        }
        uint64_t v28 = (void *)(v22 + 16 * v27);
        BOOL v29 = *v28 == v18 && v28[1] == v17;
        if (v29 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          goto LABEL_30;
        }
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_30:
    swift_bridgeObjectRelease();
    uint64_t result = v15;
    int64_t v3 = v32;
    if (v7) {
      goto LABEL_7;
    }
LABEL_8:
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v11 >= v31) {
      return 1;
    }
    unint64_t v12 = *(void *)(v30 + 8 * v11);
    int64_t v13 = v3 + 1;
    if (!v12)
    {
      int64_t v13 = v3 + 2;
      if (v3 + 2 >= v31) {
        return 1;
      }
      unint64_t v12 = *(void *)(v30 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v3 + 3;
        if (v3 + 3 >= v31) {
          return 1;
        }
        unint64_t v12 = *(void *)(v30 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v3 + 4;
          if (v3 + 4 >= v31) {
            return 1;
          }
          unint64_t v12 = *(void *)(v30 + 8 * v13);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v12 - 1) & v12;
    int64_t v32 = v13;
  }
  uint64_t v14 = v3 + 5;
  if (v3 + 5 >= v31) {
    return 1;
  }
  unint64_t v12 = *(void *)(v30 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v3 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v31) {
      return 1;
    }
    unint64_t v12 = *(void *)(v30 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_23;
    }
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_10002B210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100008AD4(a1, a2, a3);
}

uint64_t sub_10002B23C(uint64_t a1, uint64_t a2)
{
  int64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_10002B290(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_10002B2A0()
{
  unint64_t result = qword_1000F52C0;
  if (!qword_1000F52C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F52C0);
  }
  return result;
}

id sub_10002B310(double a1, double a2, double a3, double a4)
{
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for Toolbar();
  return [super initWithFrame:a1, a2, a3, a4];
}

void sub_10002B378(uint64_t a1)
{
  Swift::Int v2 = *(void **)(v1 + OBJC_IVAR____TtC9Shortcuts29FloatingToolbarViewController_bottomConstraint);
  *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts29FloatingToolbarViewController_bottomConstraint) = a1;
}

uint64_t type metadata accessor for GalleryHostingViewController(uint64_t a1)
{
  return sub_10001C010(a1, (uint64_t *)&unk_1000F4FA0);
}

char *sub_10002B3F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = objc_allocWithZone((Class)type metadata accessor for GalleryHostingViewController(0));

  return sub_10000E0FC(a1, a2, a3, a4, v8);
}

uint64_t sub_10002B468()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for GalleryHostingViewController.GalleryHostingController()
{
  return sub_100006F04();
}

uint64_t sub_10002B4C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10002B50C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_10002B554()
{
  return &protocol witness table for String;
}

uint64_t sub_10002B560()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10002B57C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for SidebarViewController()
{
  uint64_t result = qword_1000F7978;
  if (!qword_1000F7978) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10002B604(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10002B654()
{
  return sub_10002B604(&qword_1000F79E8, (void (*)(uint64_t))type metadata accessor for SidebarViewController);
}

void sub_10002B6C0()
{
  sub_10000BBB8(*(void *)(v0 + 16));
}

void sub_10002B6C8()
{
  sub_1000074D4();
  objc_allocWithZone(v0);
  sub_10000F74C();
  sub_10002A68C();
}

uint64_t sub_10002B738()
{
  sub_100018A44();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 208);
  return _swift_task_switch(sub_10000636C, v1, v2);
}

uint64_t sub_10002B798()
{
  sub_100018A44();
  sub_10001C0E8();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1000188C4();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v6 = *(void *)(v3 + 224);
    uint64_t v7 = *(void *)(v3 + 232);
    uint64_t v8 = sub_1000AF3A8;
  }
  else
  {
    (*(void (**)(void))(v3 + 240))();
    uint64_t v6 = *(void *)(v3 + 224);
    uint64_t v7 = *(void *)(v3 + 232);
    uint64_t v8 = sub_100005EDC;
  }
  return _swift_task_switch(v8, v6, v7);
}

uint64_t sub_10002B890(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + 32;
  char v7 = *(unsigned char *)(v1 + 72);
  uint64_t v8 = *(void *)(v1 + 80);
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *unint64_t v9 = v2;
  v9[1] = sub_100089924;
  return sub_10000B954(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10002B95C()
{
  _s35SyncUnavailableCollectionHeaderViewCMa();
  sub_100025A08(&qword_1000F5F78);
  uint64_t result = String.init<A>(describing:)();
  qword_1000FF0C8 = result;
  unk_1000FF0D0 = v1;
  return result;
}

void sub_10002B9A4()
{
  if ([v0 isViewLoaded])
  {
    id v1 = [v0 view];
    if (v1)
    {
      uint64_t v2 = v1;
      uint64_t v3 = &v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_libraryAccessibilityIdentifier];
      swift_beginAccess();
      if (*((void *)v3 + 1))
      {
        swift_bridgeObjectRetain();
        NSString v4 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v4 = 0;
      }
      [v2 setAccessibilityIdentifier:v4];
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_10002BACC()
{
  _s27MiniTipCollectionHeaderViewCMa();
  sub_100025A08(&qword_1000F8538);
  uint64_t result = String.init<A>(describing:)();
  qword_1000FF1A8 = result;
  unk_1000FF1B0 = v1;
  return result;
}

uint64_t sub_10002BB14(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_tipStatusObservation) = a1;
  return swift_release();
}

void sub_10002BB2C(uint64_t a1)
{
}

void sub_10002BB38(uint64_t a1)
{
}

id sub_10002BB98(char a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for LibraryViewController();
  return [super viewWillAppear:a1 & 1];
}

ValueMetadata *_s13LayoutMetricsV17TopHitsItemLayoutVMa()
{
  return &_s13LayoutMetricsV17TopHitsItemLayoutVN;
}

unint64_t sub_10002BC48()
{
  unint64_t result = qword_1000F4B38;
  if (!qword_1000F4B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F4B38);
  }
  return result;
}

unint64_t sub_10002BC94()
{
  unint64_t result = qword_1000F4AD0;
  if (!qword_1000F4AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F4AD0);
  }
  return result;
}

void sub_10002BCE0()
{
}

void sub_10002BCE8()
{
}

void sub_10002BCF0(uint64_t a1)
{
  sub_10000B794(a1, *(void *)(v1 + 16));
}

void sub_10002BD00(char *a1)
{
  sub_10000D710(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10002BD58()
{
  return sub_1000100DC(&qword_1000F77F8, (void (*)(uint64_t))type metadata accessor for LibraryViewController);
}

uint64_t sub_10002BDA0()
{
  return swift_initClassMetadata2();
}

uint64_t _s10DataSourceCMa(uint64_t a1)
{
  return sub_10001C010(a1, (uint64_t *)&unk_1000F8000);
}

ValueMetadata *_s10DataSourceC13TopHitWrapperVMa()
{
  return &_s10DataSourceC13TopHitWrapperVN;
}

uint64_t _s20LibrarySectionHeaderCMa()
{
  return self;
}

void sub_10002BE7C(uint64_t a1)
{
}

id sub_10002BECC()
{
  sub_100025CA4();
  *(void *)&v0[*v1] = 0;
  v5.receiver = v0;
  v5.super_class = (Class)v3(v2);
  return sub_1000189FC(&v5, "initWithFrame:");
}

ValueMetadata *_s20LibrarySectionHeaderC13SectionHeaderVMa()
{
  return &_s20LibrarySectionHeaderC13SectionHeaderVN;
}

uint64_t sub_10002BF34@<X0>(uint64_t a1@<X8>)
{
  memcpy(__dst, v1, sizeof(__dst));
  return sub_10002BF94(a1);
}

uint64_t sub_10002BF78()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10002BF94@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static VerticalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v3 = sub_100025A08(&qword_1000F82A0);
  return sub_10000B27C(v1, a1 + *(int *)(v3 + 44));
}

void *sub_10002BFE0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_searchController);
  id v2 = v1;
  return v1;
}

id sub_10002C010()
{
  return sub_100025FD4(&OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___tableView, (uint64_t (*)(uint64_t))sub_10000FD10);
}

uint64_t _s21AppShortcutHeaderViewCMa()
{
  return self;
}

id sub_10002C08C()
{
  sub_100025CA4();
  v3.receiver = v0;
  v3.super_class = (Class)v1();
  return sub_1000189FC(&v3, "initWithFrame:");
}

uint64_t sub_10002C0D8()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for LibraryViewController.TableHostingController()
{
  return sub_100006F04();
}

uint64_t sub_10002C144()
{
  return type metadata accessor for MainViewController(0);
}

id sub_10002C14C()
{
  return sub_100014FC4(OBJC_IVAR___WFMainViewController_database);
}

id sub_10002C1D8()
{
  return sub_10001B364(&OBJC_IVAR___WFMainViewController____lazy_storage___columnSidebar, (uint64_t (*)(uint64_t))sub_100011278);
}

BOOL sub_10002C240()
{
  return *(void *)(v0 + OBJC_IVAR___WFMainViewController_content) != 0;
}

uint64_t sub_10002C25C()
{
  swift_getWitnessTable();

  return RootView.navigate(to:with:completion:)();
}

uint64_t sub_10002C2E0()
{
  swift_getWitnessTable();

  return RootView.navigate(to:completion:)();
}

uint64_t sub_10002C378()
{
  return sub_1000119DC(&qword_1000F5058, (void (*)(uint64_t))type metadata accessor for MainViewController);
}

uint64_t sub_10002C3C0()
{
  return sub_1000119DC((unint64_t *)&unk_1000F5060, (void (*)(uint64_t))type metadata accessor for MainViewController);
}

uint64_t sub_10002C408()
{
  return sub_1000119DC(&qword_1000F5070, (void (*)(uint64_t))type metadata accessor for SidebarViewController);
}

uint64_t sub_10002C450()
{
  return sub_1000119DC((unint64_t *)&unk_1000F7850, (void (*)(uint64_t))type metadata accessor for LibraryViewController);
}

id sub_10002C498()
{
  return sub_100014FC4(OBJC_IVAR___WFMainViewController_autoShortcutsDataSource);
}

uint64_t sub_10002C4A4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10002C4C0()
{
  unint64_t result = qword_1000F8338;
  if (!qword_1000F8338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F8338);
  }
  return result;
}

id sub_10002C530()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_state];
  *(_OWORD *)uint64_t v1 = xmmword_1000BA470;
  *((_WORD *)v1 + 8) = 0;
  *(void *)&v0[OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_lockCounter] = 0;
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for SearchStateStore();
  return [super init];
}

uint64_t sub_10002C5C0(uint64_t a1, uint64_t a2)
{
  objc_super v3 = (void *)(v2 + OBJC_IVAR____TtC9Shortcuts16SearchController_destinationIdentifier);
  *objc_super v3 = a1;
  v3[1] = a2;
  return sub_100025A7C();
}

uint64_t sub_10002C5D8()
{
  uint64_t v0 = (unsigned __int8 *)sub_10001AD2C();
  if (!v0) {
    return 0;
  }
  uint64_t v1 = v0[OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_state + 17];

  return v1;
}

unint64_t sub_10002C61C()
{
  unint64_t result = qword_1000F5A00;
  if (!qword_1000F5A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5A00);
  }
  return result;
}

unint64_t sub_10002C668()
{
  unint64_t result = qword_1000F5A30;
  if (!qword_1000F5A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5A30);
  }
  return result;
}

unint64_t sub_10002C6B4()
{
  unint64_t result = qword_1000F5A18;
  if (!qword_1000F5A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5A18);
  }
  return result;
}

unint64_t sub_10002C700()
{
  unint64_t result = qword_1000F5A08;
  if (!qword_1000F5A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5A08);
  }
  return result;
}

unint64_t sub_10002C74C()
{
  unint64_t result = qword_1000F59F8;
  if (!qword_1000F59F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F59F8);
  }
  return result;
}

unint64_t sub_10002C798()
{
  unint64_t result = qword_1000F56A8;
  if (!qword_1000F56A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F56A8);
  }
  return result;
}

unint64_t sub_10002C7E4()
{
  unint64_t result = qword_1000F59F0;
  if (!qword_1000F59F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F59F0);
  }
  return result;
}

uint64_t sub_10002C864()
{
  uint64_t result = VCIsInternalBuild();
  if (result)
  {
    type metadata accessor for LogStreamManager();
    static LogStreamManager.shared.getter();
    dispatch thunk of LogStreamManager.start()();
    swift_release();
    type metadata accessor for AttributeGraphProfiler();
    static AttributeGraphProfiler.shared.getter();
    dispatch thunk of AttributeGraphProfiler.start()();
    return swift_release();
  }
  return result;
}

void sub_10002C91C(void *a1)
{
  if (VCIsInternalBuild())
  {
    id v2 = [a1 windowScene];
    if (v2)
    {
      objc_super v3 = v2;
      id v4 = [v2 statusBarManager];
      if (v4)
      {
        objc_super v5 = v4;
        uint64_t v6 = swift_allocObject();
        *(void *)(v6 + 16) = a1;
        v10[4] = sub_100045C80;
        v10[5] = v6;
        v10[0] = _NSConcreteStackBlock;
        v10[1] = 1107296256;
        v10[2] = sub_10000E51C;
        v10[3] = &unk_1000E5A18;
        char v7 = _Block_copy(v10);
        id v8 = a1;
        swift_release();
        [v5 setDebugMenuHandler:v7];
        _Block_release(v7);
      }
      type metadata accessor for DebugStatusBarManager();
      unint64_t v9 = (void *)static DebugStatusBarManager.shared.getter();
      dispatch thunk of DebugStatusBarManager.addWindowScene(_:)();
    }
  }
}

void sub_10002CA6C()
{
  sub_10002D478();
  if (v0 <= 0x3F)
  {
    sub_10000AA64();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10002CB34(void *a1)
{
  type metadata accessor for TipController.UseSiriToRunShortcutTip();
  sub_100025A08(&qword_1000F53D0);
  Tips.Parameter.wrappedValue.getter();
  if (v11)
  {
    uint64_t v2 = v10;
    swift_bridgeObjectRetain();
    sub_100047080(v10, v11);
    if (!a1) {
      goto LABEL_16;
    }
  }
  else
  {
    if (!a1) {
      return;
    }
    uint64_t v2 = 0;
  }
  id v3 = [a1 identifier];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  if (!v11)
  {
    if (!v6) {
      return;
    }
    goto LABEL_16;
  }
  if (!v6)
  {
LABEL_16:
    swift_bridgeObjectRelease();
LABEL_17:
    id v9 = a1;
    sub_1000474AC(a1);
    Tips.Parameter.wrappedValue.setter();
    return;
  }
  if (v2 == v4 && v11 == v6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0) {
    goto LABEL_17;
  }
}

unint64_t sub_10002CC94()
{
  unint64_t result = qword_1000F5400;
  if (!qword_1000F5400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5400);
  }
  return result;
}

unint64_t sub_10002CCE0()
{
  unint64_t result = qword_1000F5530;
  if (!qword_1000F5530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5530);
  }
  return result;
}

unint64_t sub_10002CD2C()
{
  unint64_t result = qword_1000F5410;
  if (!qword_1000F5410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5410);
  }
  return result;
}

uint64_t sub_10002CD7C()
{
  return sub_100006FB8(&qword_1000F54C0, (void (*)(uint64_t))type metadata accessor for TipController.UseSiriToRunShortcutTip);
}

uint64_t initializeWithTake for LibraryTable(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectWeakTakeInit();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t sub_10002CE20(uint64_t a1)
{
  return a1;
}

void *sub_10002CE74(void *a1, void *a2)
{
  return a2;
}

ValueMetadata *type metadata accessor for LibraryTable()
{
  return &type metadata for LibraryTable;
}

unint64_t sub_10002CEBC()
{
  unint64_t result = qword_1000F78C8;
  if (!qword_1000F78C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F78C8);
  }
  return result;
}

uint64_t sub_10002CF08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10002CF50()
{
  return sub_100007348();
}

uint64_t sub_10002CF58(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

unint64_t sub_10002CF68()
{
  unint64_t result = qword_1000F7C88;
  if (!qword_1000F7C88)
  {
    sub_10001E8D0(&qword_1000F7C90);
    sub_10001E88C(&qword_1000F7BC0, &qword_1000F7BB0);
    sub_10001EAB4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F7C88);
  }
  return result;
}

unint64_t sub_10002D008()
{
  unint64_t result = qword_1000F8340;
  if (!qword_1000F8340)
  {
    sub_10001E8D0(&qword_1000F8310);
    sub_10002D1F0();
    sub_10001D3D0(&qword_1000F6340, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F8340);
  }
  return result;
}

uint64_t sub_10002D0B4(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_10002D104(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

unint64_t sub_10002D150()
{
  unint64_t result = qword_1000F7AD0;
  if (!qword_1000F7AD0)
  {
    sub_10001E8D0(&qword_1000F7AD8);
    sub_10001E88C(&qword_1000F7AE0, &qword_1000F79F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F7AD0);
  }
  return result;
}

unint64_t sub_10002D1F0()
{
  unint64_t result = qword_1000F8320;
  if (!qword_1000F8320)
  {
    sub_10001E8D0(&qword_1000F8308);
    sub_10001E88C(&qword_1000F8328, &qword_1000F8300);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F8320);
  }
  return result;
}

unint64_t sub_10002D290()
{
  unint64_t result = qword_1000F82D0;
  if (!qword_1000F82D0)
  {
    sub_10001E8D0(&qword_1000F5FF8);
    sub_10001E88C(&qword_1000F6000, &qword_1000F82E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F82D0);
  }
  return result;
}

unint64_t sub_10002D330()
{
  unint64_t result = qword_1000F78C0;
  if (!qword_1000F78C0)
  {
    sub_10001E8D0(&qword_1000F78B8);
    sub_10002CEBC();
    sub_10001E88C(&qword_1000F78D0, &qword_1000F78B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F78C0);
  }
  return result;
}

void sub_10002D3D0()
{
  if (!qword_1000F7A88)
  {
    sub_10001E8D0(&qword_1000F4890);
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000F7A88);
    }
  }
}

void sub_10002D42C()
{
  if (!qword_1000F6500)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000F6500);
    }
  }
}

void sub_10002D478()
{
  if (!qword_1000F5488)
  {
    unint64_t v0 = type metadata accessor for Tips.Parameter();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000F5488);
    }
  }
}

uint64_t sub_10002D4D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100025A08(&qword_1000F7920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002D53C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_10002ACE0(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_10002A7E8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_10002A7E8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_1000149BC((uint64_t)v12);
  return v7;
}

uint64_t sub_10002D610(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100025A08(&qword_1000F5130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002D678(uint64_t a1, uint64_t *a2)
{
  sub_100025A08(a2);
  sub_10002498C();
  sub_100016618();
  v3();
  return a1;
}

uint64_t sub_10002D6C4(uint64_t a1)
{
  return a1;
}

unint64_t sub_10002D6EC()
{
  unint64_t result = qword_1000F5508;
  if (!qword_1000F5508)
  {
    sub_10001E8D0(&qword_1000F5500);
    sub_10001E88C(&qword_1000F5510, &qword_1000F54F0);
    sub_100007578();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5508);
  }
  return result;
}

unint64_t sub_10002D78C()
{
  unint64_t result = qword_1000F5568;
  if (!qword_1000F5568)
  {
    sub_10001E8D0(&qword_1000F5538);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5568);
  }
  return result;
}

unint64_t sub_10002D800()
{
  unint64_t result = qword_1000F5558;
  if (!qword_1000F5558)
  {
    sub_10001E8D0(&qword_1000F5550);
    sub_10001E88C(&qword_1000F5560, &qword_1000F5540);
    sub_10002D78C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5558);
  }
  return result;
}

id sub_10002D8DC()
{
  id result = [v0 textInputMode];
  if (result)
  {
    uint64_t v2 = sub_100030068(result);
    if (v3)
    {
      if (v2 == 0x6F69746174636964 && v3 == 0xE90000000000006ELL)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        id result = 0;
        if ((v5 & 1) == 0) {
          return result;
        }
      }
      uint64_t v6 = sub_10009D994(v0);
      if (v7)
      {
        uint64_t v8 = v6;
        unint64_t v9 = v7;
        if (String.count.getter() != 1)
        {
LABEL_16:
          swift_bridgeObjectRelease();
          return 0;
        }
        sub_1000804D0(v8, v9);
        uint64_t v11 = v10;
        swift_bridgeObjectRelease();
        if (v11)
        {
          unint64_t v12 = sub_100021F6C();
          if (sub_10002DA1C(v12, v13) == 1)
          {
            unint64_t v14 = sub_100021F6C();
            unint64_t v16 = sub_100080518(v14, v15);
            swift_bridgeObjectRelease();
            if ((v16 & 0x100000000) == 0) {
              return (id)(v16 == 65532);
            }
            return 0;
          }
          goto LABEL_16;
        }
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_10002DA1C(unint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1;
  }
  uint64_t v3 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0) {
    uint64_t v3 = 11;
  }
  return sub_10003012C(0xFuLL, v3 | (v2 << 16), a1, a2);
}

void variable initialization expression of OpenNavigationDestinationAction._target()
{
  sub_10002066C();
  type metadata accessor for InputConnectionBehavior();
  sub_100022284();
  v40[5] = v1;
  v40[6] = v0;
  __chkstk_darwin(v0);
  sub_1000223E0(v2, v40[0]);
  uint64_t v3 = sub_100025A08(&qword_1000F4658);
  uint64_t v4 = sub_1000165CC(v3);
  __chkstk_darwin(v4);
  sub_100021FA4(v5, v40[0]);
  uint64_t v7 = __chkstk_darwin(v6);
  sub_10002A660(v7, v8, v9, v10, v11, v12, v13, v14, v40[0]);
  uint64_t v15 = sub_100025A08(&qword_1000F4660);
  uint64_t v16 = sub_1000165CC(v15);
  __chkstk_darwin(v16);
  sub_100012D4C(v17, v40[0]);
  uint64_t v18 = sub_100025A08(&qword_1000F4668);
  uint64_t v19 = sub_1000165CC(v18);
  __chkstk_darwin(v19);
  unint64_t v21 = (char *)v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LocalizedStringResource.BundleDescription();
  sub_100022284();
  uint64_t v23 = v22;
  __chkstk_darwin(v24);
  sub_10002A5D8();
  uint64_t v25 = type metadata accessor for Locale();
  uint64_t v26 = sub_1000165CC(v25);
  __chkstk_darwin(v26);
  uint64_t v27 = sub_100030A50();
  uint64_t v28 = sub_1000165CC(v27);
  __chkstk_darwin(v28);
  uint64_t v29 = sub_1000167CC();
  sub_10001C094();
  __chkstk_darwin(v30);
  sub_1000165D8();
  v40[0] = sub_100025A08(&qword_1000F4670);
  sub_100029370();
  static Locale.current.getter();
  int64_t v31 = *(void (**)(uint64_t))(v23 + 104);
  uint64_t v32 = sub_100018D74();
  v31(v32);
  sub_100022644();
  sub_100022F38();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v33 = sub_100018D74();
  v31(v33);
  sub_100022F38();
  sub_100021594((uint64_t)v21, 0, 1, v29);
  uint64_t v34 = type metadata accessor for NavigationDestinationEntity();
  uint64_t v37 = sub_100019838(v40[1], v35, v36, v34);
  sub_10001C044(v37);
  uint64_t v38 = sub_100024970();
  v39(v38);
  sub_10002B4C4(&qword_1000F4678, (void (*)(uint64_t))type metadata accessor for NavigationDestinationEntity);
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_10001885C();
}

void variable initialization expression of OpenWorkflowAction._target()
{
}

void variable initialization expression of CreateWorkflowAction._name()
{
}

void variable initialization expression of CreateFolderAction._name()
{
}

void variable initialization expression of MoveShortcutToFolderAction._shortcuts()
{
}

void variable initialization expression of MoveShortcutToFolderAction._folder()
{
}

unint64_t sub_10002DE34()
{
  unint64_t result = qword_1000F46A8;
  if (!qword_1000F46A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F46A8);
  }
  return result;
}

void variable initialization expression of AddShortcutToHomeScreenAction._shortcut()
{
}

void variable initialization expression of AddShortcutToHomeScreenAction._title()
{
  sub_10002066C();
  type metadata accessor for InputConnectionBehavior();
  sub_100022284();
  __chkstk_darwin(v0);
  sub_100012D4C(v1, v28);
  uint64_t v2 = sub_100025A08(&qword_1000F4658);
  uint64_t v3 = sub_1000165CC(v2);
  __chkstk_darwin(v3);
  sub_1000167F4();
  uint64_t v4 = sub_100025A08(&qword_1000F4690);
  uint64_t v5 = sub_1000165CC(v4);
  __chkstk_darwin(v5);
  sub_1000234C0(v6, v29);
  uint64_t v7 = sub_100025A08(&qword_1000F4668);
  uint64_t v8 = sub_1000165CC(v7);
  __chkstk_darwin(v8);
  sub_100026138();
  sub_100022284();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  uint64_t v12 = sub_100027B4C();
  uint64_t v13 = sub_1000165CC(v12);
  __chkstk_darwin(v13);
  uint64_t v14 = sub_10001FA9C();
  uint64_t v15 = sub_1000165CC(v14);
  __chkstk_darwin(v15);
  sub_100022044();
  sub_10001C094();
  __chkstk_darwin(v16);
  sub_1000165D8();
  sub_100025A08(&qword_1000F46B0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v17 = *(void (**)(uint64_t))(v10 + 104);
  sub_100020684();
  v17(v18);
  sub_100029FCC();
  sub_1000240A0();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  sub_100020684();
  v17(v19);
  sub_100029FCC();
  sub_100007484();
  uint64_t v20 = type metadata accessor for String.IntentInputOptions();
  uint64_t v23 = sub_100019838(v30, v21, v22, v20);
  sub_100030A34(v23, v24, v25, v23);
  sub_100022348();
  v27(v26);
  sub_10002355C();
  IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
  sub_10001885C();
}

void variable initialization expression of AddShortcutToHomeScreenAction._image()
{
  sub_10002066C();
  type metadata accessor for InputConnectionBehavior();
  sub_100022284();
  __chkstk_darwin(v0);
  sub_1000223E0(v1, v27);
  uint64_t v2 = sub_100025A08(&qword_1000F4658);
  uint64_t v3 = sub_1000165CC(v2);
  __chkstk_darwin(v3);
  sub_10001895C(v4, v28);
  uint64_t v5 = sub_100025A08(&qword_1000F46B8);
  uint64_t v6 = sub_1000165CC(v5);
  __chkstk_darwin(v6);
  sub_1000205AC(v7, v29);
  uint64_t v8 = sub_100025A08(&qword_1000F4668);
  uint64_t v9 = sub_1000165CC(v8);
  __chkstk_darwin(v9);
  sub_100026138();
  sub_100022284();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  uint64_t v13 = sub_1000165F0();
  uint64_t v14 = sub_1000165CC(v13);
  __chkstk_darwin(v14);
  uint64_t v15 = sub_10001FA9C();
  uint64_t v16 = sub_1000165CC(v15);
  __chkstk_darwin(v16);
  sub_100022044();
  sub_10001C094();
  __chkstk_darwin(v17);
  sub_100018874();
  sub_100025A08(&qword_1000F46C0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = *(void (**)(void))(v11 + 104);
  sub_100020684();
  v18();
  sub_100022F38();
  sub_1000240A0();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  sub_100020684();
  v18();
  sub_100022F38();
  sub_100007484();
  uint64_t v19 = type metadata accessor for IntentFile();
  uint64_t v22 = sub_100019838(v30, v20, v21, v19);
  sub_100030A34(v22, v23, v24, v22);
  uint64_t v25 = sub_100024970();
  v26(v25);
  IntentParameter<>.init(title:description:default:supportedTypeIdentifiers:requestValueDialog:inputConnectionBehavior:)();
  sub_10001885C();
}

void variable initialization expression of RenameShortcutAction._shortcut()
{
}

void variable initialization expression of RenameShortcutAction._name()
{
}

void variable initialization expression of SetShortcutAttributesAction._shortcut()
{
}

void variable initialization expression of GetShortcutAttributesAction._attribute()
{
}

unint64_t sub_10002E4E4()
{
  unint64_t result = qword_1000F46D0;
  if (!qword_1000F46D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F46D0);
  }
  return result;
}

void variable initialization expression of GetShortcutAttributesAction._shortcut()
{
}

void variable initialization expression of SetShortcutAttributesAction._operation()
{
  sub_10002066C();
  type metadata accessor for InputConnectionBehavior();
  sub_100022284();
  __chkstk_darwin(v0);
  sub_1000223E0(v1, v28);
  uint64_t v2 = sub_100025A08(&qword_1000F4658);
  uint64_t v3 = sub_1000165CC(v2);
  __chkstk_darwin(v3);
  sub_100021FA4(v4, v29);
  uint64_t v6 = __chkstk_darwin(v5);
  sub_10002A660(v6, v7, v8, v9, v10, v11, v12, v13, v30);
  uint64_t v14 = sub_100025A08(&qword_1000F4668);
  uint64_t v15 = sub_1000165CC(v14);
  __chkstk_darwin(v15);
  sub_100026138();
  sub_100022284();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  uint64_t v19 = sub_100027B4C();
  uint64_t v20 = sub_1000165CC(v19);
  __chkstk_darwin(v20);
  uint64_t v21 = sub_10001FA9C();
  uint64_t v22 = sub_1000165CC(v21);
  __chkstk_darwin(v22);
  sub_100022044();
  sub_10001C094();
  __chkstk_darwin(v23);
  sub_1000165D8();
  sub_100025A08(&qword_1000F46D8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v24 = *(void (**)(void))(v17 + 104);
  sub_100025C28();
  v24();
  sub_100029FCC();
  sub_1000240A0();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  sub_100025C28();
  v24();
  sub_100029FCC();
  sub_100030A8C();
  uint64_t v25 = type metadata accessor for IntentDialog();
  sub_10001C044(v25);
  uint64_t v26 = sub_100024970();
  v27(v26);
  sub_10002E7D4();
  sub_100022568();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  sub_10001885C();
}

unint64_t sub_10002E7D4()
{
  unint64_t result = qword_1000F46E0;
  if (!qword_1000F46E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F46E0);
  }
  return result;
}

void variable initialization expression of SetShortcutAttributesAction._attribute()
{
}

void sub_10002E838()
{
  sub_10002066C();
  uint64_t v24 = v0;
  uint64_t v25 = v1;
  type metadata accessor for InputConnectionBehavior();
  sub_100022284();
  uint64_t v27 = v3;
  uint64_t v28 = v2;
  __chkstk_darwin(v2);
  sub_1000223E0(v4, v22[0]);
  uint64_t v5 = sub_100025A08(&qword_1000F4658);
  uint64_t v6 = sub_1000165CC(v5);
  __chkstk_darwin(v6);
  sub_100021FA4(v7, v22[0]);
  __chkstk_darwin(v8);
  uint64_t v23 = (uint64_t)v22 - v9;
  uint64_t v10 = sub_100025A08(&qword_1000F4668);
  uint64_t v11 = sub_1000165CC(v10);
  __chkstk_darwin(v11);
  sub_100026138();
  sub_100022284();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  uint64_t v15 = sub_1000204A0();
  uint64_t v16 = sub_1000165CC(v15);
  __chkstk_darwin(v16);
  uint64_t v17 = type metadata accessor for String.LocalizationValue();
  uint64_t v18 = sub_1000165CC(v17);
  __chkstk_darwin(v18);
  sub_10002A5D8();
  type metadata accessor for LocalizedStringResource();
  sub_10001C094();
  __chkstk_darwin(v19);
  sub_1000242E0();
  v22[1] = sub_100025A08(&qword_1000F46C8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v20 = *(void (**)(void))(v13 + 104);
  sub_100025C28();
  v20();
  sub_100022F38();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  sub_100025C28();
  v20();
  sub_100022F38();
  sub_100030A8C();
  char v29 = 6;
  type metadata accessor for IntentDialog();
  sub_100018840(v23);
  sub_100018840(v26);
  sub_100022348();
  v21();
  static ShortcutAttribute.allCases.getter();
  sub_10002E4E4();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  sub_10001885C();
}

void variable initialization expression of SetShortcutAttributesAction._state()
{
  sub_10002066C();
  type metadata accessor for InputConnectionBehavior();
  sub_100022284();
  __chkstk_darwin(v0);
  sub_1000223E0(v1, v27);
  uint64_t v2 = sub_100025A08(&qword_1000F4658);
  uint64_t v3 = sub_1000165CC(v2);
  __chkstk_darwin(v3);
  sub_10001895C(v4, v28);
  uint64_t v5 = sub_100025A08(&qword_1000F46E8);
  uint64_t v6 = sub_1000165CC(v5);
  __chkstk_darwin(v6);
  sub_1000205AC(v7, v29);
  uint64_t v8 = sub_100025A08(&qword_1000F4668);
  uint64_t v9 = sub_1000165CC(v8);
  __chkstk_darwin(v9);
  sub_100026138();
  sub_100022284();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  uint64_t v13 = sub_100027B4C();
  uint64_t v14 = sub_1000165CC(v13);
  __chkstk_darwin(v14);
  uint64_t v15 = sub_10001FA9C();
  uint64_t v16 = sub_1000165CC(v15);
  __chkstk_darwin(v16);
  sub_100022044();
  sub_10001C094();
  __chkstk_darwin(v17);
  sub_1000165D8();
  sub_100025A08((uint64_t *)&unk_1000F46F0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = *(void (**)(void))(v11 + 104);
  sub_100020684();
  v18();
  sub_100029FCC();
  sub_1000240A0();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  sub_100020684();
  v18();
  sub_100029FCC();
  sub_100007484();
  uint64_t v19 = type metadata accessor for Bool.IntentDisplayName();
  uint64_t v22 = sub_100019838(v30, v20, v21, v19);
  sub_100030A34(v22, v23, v24, v22);
  uint64_t v25 = sub_100024970();
  v26(v25);
  sub_100022568();
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
  sub_10001885C();
}

void variable initialization expression of CreateShortcutiCloudLinkAction._shortcut()
{
}

void sub_10002EE20()
{
  sub_10002066C();
  uint64_t v28 = v1;
  uint64_t v29 = v2;
  uint64_t v4 = v3;
  type metadata accessor for InputConnectionBehavior();
  sub_100022284();
  uint64_t v31 = v6;
  uint64_t v32 = v5;
  __chkstk_darwin(v5);
  sub_10001895C(v7, v26);
  uint64_t v8 = sub_100025A08(&qword_1000F4658);
  uint64_t v9 = sub_1000165CC(v8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v30 = (uint64_t)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v27 = (uint64_t)&v26 - v12;
  uint64_t v13 = sub_100025A08(&qword_1000F4668);
  uint64_t v14 = sub_1000165CC(v13);
  __chkstk_darwin(v14);
  sub_100026138();
  sub_100022284();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  uint64_t v18 = sub_1000204A0();
  uint64_t v19 = sub_1000165CC(v18);
  __chkstk_darwin(v19);
  uint64_t v20 = sub_10001B414();
  uint64_t v21 = sub_1000165CC(v20);
  __chkstk_darwin(v21);
  uint64_t v22 = sub_100022044();
  sub_10001C094();
  __chkstk_darwin(v23);
  sub_1000165D8();
  uint64_t v26 = sub_100025A08(v4);
  sub_100030A78();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v24 = *(void (**)(void))(v16 + 104);
  sub_100025C28();
  v24();
  sub_100022F38();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  sub_100025C28();
  v24();
  sub_100022F38();
  sub_100021594(v0, 0, 1, v22);
  uint64_t v33 = 0;
  type metadata accessor for IntentDialog();
  sub_100018840(v27);
  sub_100018840(v30);
  sub_100022348();
  v25();
  sub_10001D418();
  sub_10002355C();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_10001885C();
}

void variable initialization expression of DeleteWorkflowAction._entities()
{
  sub_10002066C();
  type metadata accessor for InputConnectionBehavior();
  sub_100022284();
  v24[2] = v3;
  v24[3] = v2;
  __chkstk_darwin(v2);
  sub_10001895C(v4, v24[0]);
  uint64_t v5 = sub_100025A08(&qword_1000F4658);
  uint64_t v6 = sub_1000165CC(v5);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v24 - v10;
  uint64_t v12 = sub_100025A08(&qword_1000F4668);
  uint64_t v13 = sub_1000165CC(v12);
  __chkstk_darwin(v13);
  uint64_t v14 = sub_100026138();
  sub_100022284();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  uint64_t v18 = sub_1000165F0();
  uint64_t v19 = sub_1000165CC(v18);
  __chkstk_darwin(v19);
  uint64_t v20 = sub_10001FA9C();
  uint64_t v21 = sub_1000165CC(v20);
  __chkstk_darwin(v21);
  type metadata accessor for LocalizedStringResource();
  sub_10001C094();
  __chkstk_darwin(v22);
  sub_100018874();
  v24[0] = sub_100025A08(&qword_1000F46A0);
  sub_100030A78();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v16 + 104))(v1, enum case for LocalizedStringResource.BundleDescription.main(_:), v14);
  sub_100022F38();
  sub_100018840(v0);
  v24[4] = 0;
  type metadata accessor for IntentDialog();
  sub_100018840((uint64_t)v11);
  sub_100018840((uint64_t)v9);
  sub_100022348();
  v23();
  sub_10001D418();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_10001885C();
}

void variable initialization expression of SearchShortcutsAction._searchPhrase()
{
}

void sub_10002F420()
{
  sub_10002066C();
  uint64_t v2 = v1;
  type metadata accessor for InputConnectionBehavior();
  sub_100022284();
  __chkstk_darwin(v3);
  sub_1000205AC(v4, v30);
  uint64_t v5 = sub_100025A08(&qword_1000F4658);
  uint64_t v6 = sub_1000165CC(v5);
  __chkstk_darwin(v6);
  sub_100012D4C(v7, v31);
  uint64_t v8 = sub_100025A08(&qword_1000F4690);
  uint64_t v9 = sub_1000165CC(v8);
  __chkstk_darwin(v9);
  sub_1000167F4();
  uint64_t v32 = v10;
  uint64_t v11 = sub_100025A08(&qword_1000F4668);
  uint64_t v12 = sub_1000165CC(v11);
  __chkstk_darwin(v12);
  sub_100024574();
  sub_100022284();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  uint64_t v16 = sub_1000204A0();
  uint64_t v17 = sub_1000165CC(v16);
  __chkstk_darwin(v17);
  uint64_t v18 = sub_10001B414();
  uint64_t v19 = sub_1000165CC(v18);
  __chkstk_darwin(v19);
  uint64_t v20 = sub_100022044();
  sub_10001C094();
  __chkstk_darwin(v21);
  sub_100025A08(v2);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v22 = *(void (**)(void))(v14 + 104);
  sub_100025C28();
  v22();
  sub_100022F38();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  sub_100025C28();
  v22();
  sub_100022F38();
  sub_100021594(v0, 0, 1, v20);
  uint64_t v23 = type metadata accessor for String.IntentInputOptions();
  uint64_t v26 = sub_100019838(v32, v24, v25, v23);
  sub_100030A34(v26, v27, v28, v26);
  sub_100022348();
  v29();
  IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
  sub_10001885C();
}

void variable initialization expression of SearchShortcutsAction._folder()
{
}

void sub_10002F764()
{
  sub_10002066C();
  type metadata accessor for InputConnectionBehavior();
  sub_100022284();
  __chkstk_darwin(v1);
  sub_1000223E0(v2, v38);
  uint64_t v3 = sub_100025A08(&qword_1000F4658);
  uint64_t v4 = sub_1000165CC(v3);
  __chkstk_darwin(v4);
  sub_100021FA4(v5, v39);
  uint64_t v7 = __chkstk_darwin(v6);
  sub_10002A660(v7, v8, v9, v10, v11, v12, v13, v14, v40);
  uint64_t v15 = sub_100025A08(&qword_1000F4660);
  uint64_t v16 = sub_1000165CC(v15);
  __chkstk_darwin(v16);
  sub_1000234C0(v17, v41);
  uint64_t v18 = sub_100025A08(&qword_1000F4668);
  uint64_t v19 = sub_1000165CC(v18);
  __chkstk_darwin(v19);
  sub_100024574();
  sub_100022284();
  uint64_t v21 = v20;
  __chkstk_darwin(v22);
  uint64_t v23 = sub_100027B4C();
  uint64_t v24 = sub_1000165CC(v23);
  __chkstk_darwin(v24);
  uint64_t v25 = sub_100030A50();
  uint64_t v26 = sub_1000165CC(v25);
  __chkstk_darwin(v26);
  uint64_t v27 = sub_1000167CC();
  sub_10001C094();
  __chkstk_darwin(v28);
  sub_1000242E0();
  sub_100025A08(&qword_1000F4670);
  sub_100029370();
  static Locale.current.getter();
  uint64_t v29 = *(void (**)(uint64_t))(v21 + 104);
  uint64_t v30 = sub_100018CF0();
  v29(v30);
  sub_100022F38();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v31 = sub_100018CF0();
  v29(v31);
  sub_100022644();
  sub_100022F38();
  sub_100021594(v0, 0, 1, v27);
  uint64_t v32 = type metadata accessor for NavigationDestinationEntity();
  uint64_t v35 = sub_100019838(v42, v33, v34, v32);
  sub_10001C044(v35);
  uint64_t v36 = sub_100024970();
  v37(v36);
  sub_10002DE34();
  sub_10002355C();
  IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)();
  sub_10001885C();
}

uint64_t variable initialization expression of LibraryTable.libraryDelegate()
{
  return 0;
}

uint64_t variable initialization expression of LibraryTable._selectedAutoShortcut()
{
  return 0;
}

double variable initialization expression of LibraryTable.rowHeight()
{
  return 26.0;
}

uint64_t variable initialization expression of AppShortcutChiclet._viewColorScheme@<X0>(uint64_t *a1@<X8>)
{
  return sub_10002FB24(&qword_1000F8410, a1);
}

uint64_t sub_10002FA60()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_10002FA84()
{
  type metadata accessor for ColorScheme();
  sub_100022284();
  __chkstk_darwin(v0);
  sub_100021FC4();
  uint64_t v1 = sub_100021F6C();
  v2(v1);
  return EnvironmentValues.colorScheme.setter();
}

uint64_t variable initialization expression of AppShortcutChiclet._sizeClass@<X0>(uint64_t *a1@<X8>)
{
  return sub_10002FB24(&qword_1000F4700, a1);
}

uint64_t sub_10002FB24@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  *a2 = swift_getKeyPath();
  sub_100025A08(a1);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10002FB74()
{
  return EnvironmentValues.horizontalSizeClass.getter();
}

uint64_t sub_10002FB98(uint64_t a1)
{
  uint64_t v3 = sub_100025A08(&qword_1000F4890);
  uint64_t v4 = sub_1000165CC(v3);
  __chkstk_darwin(v4);
  sub_100021FC4();
  sub_100030450(a1, v1);
  return EnvironmentValues.horizontalSizeClass.setter();
}

uint64_t sub_10002FC10(uint64_t a1, id *a2)
{
  return sub_1000308B0(a1, a2);
}

uint64_t sub_10002FC28(uint64_t a1, id *a2)
{
  return sub_100030928(a1, a2) & 1;
}

uint64_t sub_10002FC44()
{
  return sub_1000309E0(*v0, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

NSString sub_10002FC74@<X0>(void *a1@<X8>)
{
  NSString result = sub_1000309A8();
  *a1 = result;
  return result;
}

uint64_t sub_10002FC9C()
{
  return sub_10008C210();
}

uint64_t sub_10002FCA8()
{
  return sub_1000309E0(*v0, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_10002FCD8()
{
  return sub_1000300D8();
}

Swift::Int sub_10002FCF4()
{
  return sub_100025BB4();
}

uint64_t sub_10002FD00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = j___sSS10FoundationE36_unconditionallyBridgeFromObjectiveCySSSo8NSStringCSgFZ(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10002FD30(uint64_t a1)
{
  uint64_t v2 = sub_10002B4C4(&qword_1000F4B30, type metadata accessor for Key);
  uint64_t v3 = sub_10002B4C4((unint64_t *)&unk_1000F4960, type metadata accessor for Key);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10002FDEC(uint64_t a1)
{
  uint64_t v2 = sub_10002B4C4(&qword_1000F4938, type metadata accessor for WFWorkflowRunSource);
  uint64_t v3 = sub_10002B4C4((unint64_t *)&unk_1000F4940, type metadata accessor for WFWorkflowRunSource);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10002FEA8(uint64_t a1)
{
  uint64_t v2 = sub_10002B4C4((unint64_t *)&unk_1000F71C0, type metadata accessor for WFWorkflowTypeName);
  uint64_t v3 = sub_10002B4C4(&qword_1000F4930, type metadata accessor for WFWorkflowTypeName);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10002FF64@<X0>(void *a1@<X8>)
{
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_10002FFAC(uint64_t a1)
{
  uint64_t v2 = sub_10002B4C4(&qword_1000F78F0, type metadata accessor for NSKeyValueChangeKey);
  uint64_t v3 = sub_10002B4C4((unint64_t *)&unk_1000F4950, type metadata accessor for NSKeyValueChangeKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100030068(void *a1)
{
  id v2 = [a1 primaryLanguage];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_1000300D8()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

unint64_t sub_10003012C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = sub_100030340(a1, a3, a4);
  unint64_t result = sub_100030340(a2, a3, a4);
  unint64_t v9 = result >> 14;
  if (v7 >> 14 < result >> 14)
  {
    for (uint64_t i = 0; ; ++i)
    {
      uint64_t v11 = i + 1;
      if (__OFADD__(i, 1)) {
        break;
      }
      if ((a4 & 0x1000000000000000) != 0)
      {
        unint64_t result = String.UnicodeScalarView._foreignIndex(after:)();
        unint64_t v7 = result;
      }
      else
      {
        unint64_t v12 = v7 >> 16;
        if ((a4 & 0x2000000000000000) != 0)
        {
          unint64_t v22 = a3;
          uint64_t v23 = a4 & 0xFFFFFFFFFFFFFFLL;
          int v13 = *((unsigned __int8 *)&v22 + v12);
        }
        else
        {
          unint64_t result = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a3 & 0x1000000000000000) == 0) {
            unint64_t result = _StringObject.sharedUTF8.getter();
          }
          int v13 = *(unsigned __int8 *)(result + v12);
        }
        int v14 = (char)v13;
        unsigned int v15 = __clz(v13 ^ 0xFF) - 24;
        if (v14 >= 0) {
          LOBYTE(v15) = 1;
        }
        unint64_t v7 = ((v12 + v15) << 16) | 5;
      }
      if (v9 <= v7 >> 14) {
        return v11;
      }
    }
    __break(1u);
LABEL_38:
    __break(1u);
    return result;
  }
  if (v9 < v7 >> 14)
  {
    uint64_t v11 = 0;
    while (!__OFSUB__(v11--, 1))
    {
      if ((a4 & 0x1000000000000000) != 0)
      {
        unint64_t result = String.UnicodeScalarView._foreignIndex(before:)();
        unint64_t v7 = result;
      }
      else
      {
        if ((a4 & 0x2000000000000000) != 0)
        {
          unint64_t v22 = a3;
          uint64_t v23 = a4 & 0xFFFFFFFFFFFFFFLL;
          if ((*((unsigned char *)&v22 + (v7 >> 16) - 1) & 0xC0) == 0x80)
          {
            uint64_t v20 = 0;
            do
              int v21 = *((unsigned char *)&v22 + (v7 >> 16) + v20-- - 2) & 0xC0;
            while (v21 == 128);
            uint64_t v19 = 1 - v20;
          }
          else
          {
            uint64_t v19 = 1;
          }
        }
        else
        {
          unint64_t result = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a3 & 0x1000000000000000) == 0) {
            unint64_t result = _StringObject.sharedUTF8.getter();
          }
          uint64_t v17 = 0;
          do
            int v18 = *(unsigned char *)(result + (v7 >> 16) - 1 + v17--) & 0xC0;
          while (v18 == 128);
          uint64_t v19 = -v17;
        }
        unint64_t v7 = (v7 - (v19 << 16)) & 0xFFFFFFFFFFFF0000 | 5;
      }
      if (v9 >= v7 >> 14) {
        return v11;
      }
    }
    goto LABEL_38;
  }
  return 0;
}

unint64_t sub_100030340(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5) {
    goto LABEL_9;
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 < result >> 16)
  {
    __break(1u);
LABEL_9:
    unint64_t result = sub_1000303E0(result, a2, a3);
    if ((result & 1) == 0) {
      return result & 0xC | sub_10008C3A8(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
  }
  return result;
}

unint64_t sub_1000303E0(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) == 4 << v5) {
    unint64_t result = sub_10003E078(result, a2, a3);
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 < result >> 16) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100030450(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100025A08(&qword_1000F4890);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void type metadata accessor for WFWorkflowTypeName(uint64_t a1)
{
}

void type metadata accessor for WFWorkflowRunSource(uint64_t a1)
{
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
}

uint64_t _s13LayoutMetricsVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 initializeWithTake for TipController.UseSiriToRunShortcutTip.PersonalContent(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_100030538(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100030558(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
}

uint64_t sub_100030598()
{
  return sub_10002B4C4(&qword_1000F48C8, type metadata accessor for Key);
}

uint64_t sub_1000305E0()
{
  return sub_10002B4C4(&qword_1000F48D0, type metadata accessor for Key);
}

uint64_t sub_100030628()
{
  return sub_10002B4C4(&qword_1000F48D8, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_100030670()
{
  return sub_10002B4C4(&qword_1000F48E0, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_1000306B8()
{
  return sub_10002B4C4(&qword_1000F48E8, type metadata accessor for WFWorkflowRunSource);
}

uint64_t sub_100030700()
{
  return sub_10002B4C4(&qword_1000F48F0, type metadata accessor for WFWorkflowRunSource);
}

uint64_t sub_100030748()
{
  return sub_10002B4C4(&qword_1000F48F8, type metadata accessor for WFWorkflowRunSource);
}

uint64_t sub_100030790()
{
  return sub_10002B4C4(&qword_1000F4900, type metadata accessor for WFWorkflowTypeName);
}

uint64_t sub_1000307D8()
{
  return sub_10002B4C4(&qword_1000F4908, type metadata accessor for WFWorkflowTypeName);
}

uint64_t sub_100030820()
{
  return sub_10002B4C4(&qword_1000F4910, type metadata accessor for WFWorkflowTypeName);
}

uint64_t sub_100030868()
{
  return sub_10002B4C4(&qword_1000F4918, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_1000308B0(uint64_t a1, id *a2)
{
  uint64_t result = static String._forceBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return result;
}

uint64_t sub_100030928(uint64_t a1, id *a2)
{
  char v3 = static String._conditionallyBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return v3 & 1;
}

NSString sub_1000309A8()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1000309E0(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = a2(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100030A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100021594(v4, 1, 1, a4);
}

uint64_t sub_100030A50()
{
  return type metadata accessor for String.LocalizationValue();
}

uint64_t sub_100030A78()
{
  return 0x74756374726F6853;
}

uint64_t sub_100030A8C()
{
  return sub_100021594(v1, 0, 1, v0);
}

unint64_t StaticString._asString.getter(unint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
  {
    if (result) {
      return static String._fromUTF8Repairing(_:)();
    }
    __break(1u);
  }
  if (HIDWORD(result))
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return static String._fromUTF8Repairing(_:)();
  }
  if (result >> 11 == 27) {
    goto LABEL_14;
  }
  if (WORD1(result) > 0x10u) {
    goto LABEL_11;
  }
  if ((result & 0xFFFFFF80) != 0 || result <= 0xFF) {
    return static String._fromUTF8Repairing(_:)();
  }
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t *NSBundle._current.unsafeMutableAddressor()
{
  if (qword_1000F4550 != -1) {
    swift_once();
  }
  return &static NSBundle._current;
}

id sub_100030C08()
{
  _s2__CMa();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = [self bundleForClass:ObjCClassFromMetadata];
  static NSBundle._current = (uint64_t)result;
  return result;
}

id static NSBundle._current.getter()
{
  if (qword_1000F4550 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static NSBundle._current;

  return v0;
}

uint64_t sub_100030CBC()
{
  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t _s2__CMa()
{
  return self;
}

BOOL sub_100030CF0(uint64_t a1, uint64_t a2, double a3, double a4)
{
  return a3 == a4 && a1 == a2;
}

Swift::Int sub_100030D00(Swift::UInt a1, double a2)
{
  Hasher.init(_seed:)();
  sub_100024C08((int)&v5, a1, a2);
  return Hasher._finalize()();
}

Swift::Int sub_100030D58()
{
  return sub_100030D00(*(void *)v0, *(double *)(v0 + 8));
}

void sub_100030D64(int a1)
{
  sub_100024C08(a1, *(void *)v1, *(double *)(v1 + 8));
}

BOOL sub_100030D70(uint64_t a1, uint64_t a2)
{
  return sub_100030CF0(*(void *)a1, *(void *)a2, *(double *)(a1 + 8), *(double *)(a2 + 8));
}

uint64_t _s13LayoutMetricsVwxx(id *a1)
{
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t _s13LayoutMetricsVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void **)(a2 + 16);
  char v5 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  unint64_t v7 = *(void **)(a2 + 72);
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v7;
  *(void *)(a1 + 80) = v6;
  swift_retain();
  id v8 = v4;
  id v9 = v5;
  id v10 = v7;
  swift_bridgeObjectRetain();
  return a1;
}

void *_s13LayoutMetricsVwca(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  char v5 = (void *)a2[2];
  uint64_t v6 = (void *)a1[2];
  a1[2] = v5;
  id v7 = v5;

  id v8 = (void *)a2[3];
  id v9 = (void *)a1[3];
  a1[3] = v8;
  id v10 = v8;

  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  uint64_t v11 = (void *)a1[9];
  unint64_t v12 = (void *)a2[9];
  a1[9] = v12;
  id v13 = v12;

  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s13LayoutMetricsVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

uint64_t _s13LayoutMetricsVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();

  uint64_t v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);

  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13LayoutMetricsVwet(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s13LayoutMetricsVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)id result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)id result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s13LayoutMetricsVMa()
{
  return &_s13LayoutMetricsVN;
}

uint64_t sub_100031044()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10003107C()
{
  id v0 = sub_10001FAC4();
  if (v0)
  {
    uint64_t v1 = v0;
    [v0 layoutMargins];

    id v2 = sub_10001FAC4();
    if (v2)
    {
      uint64_t v3 = v2;
      [v2 layoutMargins];

      sub_100012D68();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100031104()
{
  if (!sub_100008330())
  {
    sub_1000255FC(v5);
    id v0 = (id)v5[2];
    sub_10002582C(v5);
    [v0 sectionInset];
  }
  id v1 = sub_10001FAC4();
  if (v1)
  {
    id v2 = v1;
    [v1 layoutMargins];

    id v3 = sub_10001FAC4();
    if (v3)
    {
      uint64_t v4 = v3;
      [v3 layoutMargins];

      sub_100021F78();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1000311E4()
{
  id v1 = [v0 view];
  if (v1)
  {
    id v2 = v1;
    [v1 layoutMargins];

    id v3 = [v0 view];
    if (v3)
    {
      uint64_t v4 = v3;
      [v3 layoutMargins];

      sub_100012D68();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100031288()
{
  type metadata accessor for RootNavigationDestination();
  sub_10001C094();
  uint64_t v0 = sub_100022F5C();

  return v1(v0);
}

uint64_t sub_1000312F0()
{
  swift_beginAccess();
  uint64_t v0 = sub_10003F7DC();
  return sub_100019760(v0, v1, v2);
}

BOOL static MoveShortcutToFolderAction.MoveError.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void MoveShortcutToFolderAction.MoveError.hash(into:)(uint64_t a1, char a2)
{
}

Swift::Int MoveShortcutToFolderAction.MoveError.hashValue.getter(char a1)
{
  return Hasher._finalize()();
}

BOOL sub_1000313C8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static MoveShortcutToFolderAction.MoveError.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_1000313D4()
{
  return MoveShortcutToFolderAction.MoveError.hashValue.getter(*v0);
}

void sub_1000313DC(uint64_t a1)
{
  MoveShortcutToFolderAction.MoveError.hash(into:)(a1, *v1);
}

Swift::Int sub_1000313E4()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100031428()
{
}

uint64_t sub_100031434()
{
  return sub_10001A1DC((uint64_t (*)(void))sub_100031428, (uint64_t (*)(void))sub_10001B720);
}

void sub_100031460()
{
  uint64_t v0 = (void *)sub_10001A1FC();
  id v5 = [v0 tabBarController];

  if (v5)
  {
    [v5 setSelectedIndex:0];
    id v1 = [v5 selectedViewController];
    if (v1)
    {
      id v2 = v1;
      self;
      id v3 = (void *)swift_dynamicCastObjCClass();
      if (v3)
      {

        uint64_t v4 = v5;
        id v5 = v2;
      }
      else
      {
        uint64_t v4 = v2;
      }
    }
  }
}

void sub_100031550()
{
  uint64_t v1 = (uint64_t)&v0[OBJC_IVAR___WFMainViewController_currentDestination];
  uint64_t v2 = type metadata accessor for RootNavigationDestination();
  sub_10002A674(v1, v3, v4, v2);
  *(void *)&v0[OBJC_IVAR___WFMainViewController_navigationCompletions] = _swiftEmptyArrayStorage;
  uint64_t v5 = OBJC_IVAR___WFMainViewController_mainUndoManager;
  *(void *)&v0[v5] = [objc_allocWithZone((Class)NSUndoManager) init];
  v0[OBJC_IVAR___WFMainViewController_display] = 0;
  *(void *)&v0[OBJC_IVAR___WFMainViewController____lazy_storage___columnSidebar] = 0;
  *(void *)&v0[OBJC_IVAR___WFMainViewController____lazy_storage___compactSidebar] = 0;
  *(void *)&v0[OBJC_IVAR___WFMainViewController____lazy_storage___columnGalleryViewController] = 0;
  *(void *)&v0[OBJC_IVAR___WFMainViewController____lazy_storage___compactGalleryViewController] = 0;
  *(void *)&v0[OBJC_IVAR___WFMainViewController____lazy_storage___searchStateController] = 0;
  *(void *)&v0[OBJC_IVAR___WFMainViewController_content] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10003167C(void *a1, void *a2)
{
  uint64_t v3 = v2;
  id v6 = [v2 traitCollection];
  id v7 = [v6 horizontalSizeClass];

  if (v7 == [a1 horizontalSizeClass])
  {
    v13.receiver = v3;
    v13.super_class = (Class)type metadata accessor for MainViewController(0);
    [super willTransitionToTraitCollection:a1 withTransitionCoordinator:a2];
  }
  else
  {
    id v8 = sub_10001A4C0();
    id v9 = a1;
    sub_10008C9E8(a1);

    v15.receiver = v3;
    v15.super_class = (Class)type metadata accessor for MainViewController(0);
    [super willTransitionToTraitCollection:v9 withTransitionCoordinator:a2];
    uint64_t v10 = sub_1000206B4();
    *(void *)(v10 + 16) = v3;
    aBlock[4] = sub_10003F688;
    aBlock[5] = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100031864;
    aBlock[3] = &unk_1000E5928;
    uint64_t v11 = _Block_copy(aBlock);
    id v12 = v3;
    swift_release();
    [a2 animateAlongsideTransition:0 completion:v11];
    _Block_release(v11);
  }
}

void sub_100031810()
{
  id v0 = sub_10001A4C0();
  sub_10008C9E8(0);
}

uint64_t sub_100031864(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

id sub_100031934()
{
  id v0 = (void *)WFUserInterfaceFromViewController();

  return v0;
}

uint64_t sub_100031964()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___WFMainViewController_content);
  if (v1)
  {
    id v2 = v1;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_10003F88C();
    }
    sub_100018D14();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }

  sub_10003FC00((unint64_t)_swiftEmptyArrayStorage);
  uint64_t v3 = (void *)sub_10001A1FC();
  id v4 = [v3 tabBarController];

  if (v4)
  {
    unint64_t v5 = sub_10003EB74(v4);
    if (v5)
    {
      unint64_t v6 = v5;
      if (v5 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t result = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v7 = result;
        if (result) {
          goto LABEL_9;
        }
      }
      else
      {
        uint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = swift_bridgeObjectRetain();
        if (v7)
        {
LABEL_9:
          if (v7 < 1) {
            goto LABEL_48;
          }
          for (uint64_t i = 0; i != v7; ++i)
          {
            if ((v6 & 0xC000000000000001) != 0)
            {
              sub_100014FE4();
              id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              id v10 = *(id *)(v6 + 8 * i + 32);
            }
            uint64_t v11 = v10;
            self;
            if (swift_dynamicCastObjCClass())
            {
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_10003F88C();
              }
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
            }
            else
            {
            }
          }
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v26 = _swiftEmptyArrayStorage;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v12 = result;
    if (result) {
      goto LABEL_26;
    }
  }
  else
  {
    uint64_t v12 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v12)
    {
LABEL_26:
      if (v12 >= 1)
      {
        uint64_t v13 = 0;
        do
        {
          if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
          {
            sub_100018D14();
            id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            id v14 = (id)_swiftEmptyArrayStorage[v13 + 4];
          }
          objc_super v15 = v14;
          ++v13;
          id v16 = [v14 viewControllers:v26];
          sub_100029C7C(0, &qword_1000F50A0);
          sub_10003FA60();
          unint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          sub_10003FC00(v17);
        }
        while (v12 != v13);
        swift_bridgeObjectRelease_n();
        int v18 = v26;
        goto LABEL_35;
      }
      __break(1u);
LABEL_48:
      __break(1u);
      return result;
    }
  }
  swift_bridgeObjectRelease_n();
  int v18 = _swiftEmptyArrayStorage;
LABEL_35:
  sub_10003FC00((unint64_t)v18);
  if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
    goto LABEL_45;
  }
  uint64_t v19 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v19; uint64_t v19 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v20 = 0;
    while (1)
    {
      uint64_t v21 = v20 + 1;
      if (__OFADD__(v20, 1)) {
        break;
      }
      unint64_t v22 = (void *)_swiftEmptyArrayStorage[v20 + 4];
      type metadata accessor for LibraryViewController();
      uint64_t v23 = swift_dynamicCastClass();
      if (v23)
      {
        uint64_t v24 = v23;
        id v25 = v22;
        goto LABEL_43;
      }
      ++v20;
      if (v21 == v19) {
        goto LABEL_41;
      }
    }
    __break(1u);
LABEL_45:
    swift_bridgeObjectRetain_n();
  }
LABEL_41:
  uint64_t v24 = 0;
LABEL_43:
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  return v24;
}

void *sub_100031D4C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___WFMainViewController_content);
  if (v1)
  {
    type metadata accessor for LibraryViewController();
    uint64_t v2 = swift_dynamicCastClass();
    if (v2)
    {
      uint64_t v3 = &OBJC_IVAR____TtC9Shortcuts21LibraryViewController_searchController;
    }
    else
    {
      type metadata accessor for GalleryHostingViewController(0);
      uint64_t v2 = swift_dynamicCastClass();
      if (!v2) {
        return 0;
      }
      uint64_t v3 = &OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_searchController;
    }
    uint64_t v1 = *(void **)(v2 + *v3);
    id v4 = v1;
  }
  return v1;
}

void sub_100031DD0()
{
  sub_10002066C();
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for RootNavigationDestination();
  sub_100022284();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10003F7B4();
  __chkstk_darwin(v8);
  if (*(unsigned char *)(v0 + OBJC_IVAR___WFMainViewController_display))
  {
    int v9 = enum case for RootNavigationDestination.shortcuts(_:);
    sub_100014FB8();
    v10();
  }
  else
  {
    sub_100014FB8();
    v11();
    int v9 = enum case for RootNavigationDestination.shortcuts(_:);
  }
  sub_1000205E8();
  v12();
  sub_100021DB4();
  int v14 = v13();
  if (v14 == v9)
  {
    sub_100031460();
    if (v3) {
      v3();
    }
    goto LABEL_9;
  }
  if (v14 == enum case for RootNavigationDestination.allShortcuts(_:))
  {
    type metadata accessor for MainViewController(0);
    sub_1000119DC(&qword_1000F50F8, (void (*)(uint64_t))type metadata accessor for MainViewController);
    RootView.navigate(to:completion:)();
LABEL_9:
    sub_100029108();
    v15();
    goto LABEL_13;
  }
  if (v3) {
    v3();
  }
  id v16 = *(void (**)(void))(v6 + 8);
  sub_100029108();
  v16();
  ((void (*)(uint64_t, uint64_t))v16)(v1, v4);
LABEL_13:
  sub_10001885C();
}

void sub_100031FD0()
{
  sub_10002066C();
  uint64_t v3 = v1;
  uint64_t v4 = sub_100025A08(&qword_1000F5128);
  uint64_t v5 = sub_1000165CC(v4);
  __chkstk_darwin(v5);
  sub_100021DD8();
  uint64_t v6 = type metadata accessor for RootNavigationDestination();
  sub_100022284();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_10001C0D0();
  id v10 = (void *)sub_10001A1FC();
  id v11 = [v10 tabBarController];

  if (v11)
  {
    uint64_t v12 = sub_10003EBEC(v11);
    if (v12)
    {
      uint64_t v13 = v12;
      sub_100014FB8();
      v14();
      unint64_t v15 = sub_10001B5B4();
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v2, v6);
      sub_100089510(v15, (v13 & 0xC000000000000001) == 0, v13);
      if ((v13 & 0xC000000000000001) != 0) {
        id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v16 = *(id *)(v13 + 8 * v15 + 32);
      }
      unint64_t v17 = v16;
      swift_bridgeObjectRelease();
      self;
      int v18 = (void *)swift_dynamicCastObjCClassUnconditional();
      id v19 = v17;
      id v20 = [v18 viewControllers];
      sub_100029C7C(0, &qword_1000F50A0);
      unint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v21 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v33)
        {
LABEL_7:
          sub_100089510(0, (v21 & 0xC000000000000001) == 0, v21);
          if ((v21 & 0xC000000000000001) == 0)
          {
            id v22 = *(id *)(v21 + 32);
LABEL_9:
            swift_bridgeObjectRelease();

            type metadata accessor for TriggerRootViewController();
            id v23 = (id)swift_dynamicCastClassUnconditional();
            goto LABEL_12;
          }
LABEL_21:
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_9;
        }
      }
      else if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_7;
      }
      swift_bridgeObjectRelease();
      __break(1u);
      goto LABEL_21;
    }
  }
  uint64_t v24 = *(void **)(v3 + OBJC_IVAR___WFMainViewController_database);
  id v25 = objc_allocWithZone((Class)type metadata accessor for TriggerRootViewController());
  id v26 = v24;
  id v23 = (id)TriggerRootViewController.init(with:)();
  id v19 = v23;
LABEL_12:
  sub_100019124();
  uint64_t v27 = sub_100021F6C();
  sub_100019760(v27, v28, v29);
  type metadata accessor for RootNavigationContext();
  sub_1000215BC(v0);
  if (v30)
  {
    sub_100025E44(v0, &qword_1000F5128);
  }
  else
  {
    char v31 = RootNavigationContext.createAutomation.getter();
    sub_100012D7C();
    sub_100016618();
    v32();
    if (v31) {
      TriggerRootViewController.startCreateNewPersonalAutomation()();
    }
  }

  sub_10001885C();
}

void sub_100032348()
{
  sub_10002066C();
  uint64_t v6 = v5;
  uint64_t v55 = v7;
  char v54 = v8;
  uint64_t v53 = v9;
  uint64_t v10 = sub_100025A08(&qword_1000F5128);
  uint64_t v11 = sub_1000165CC(v10);
  __chkstk_darwin(v11);
  sub_100018874();
  uint64_t v12 = sub_100025A08(&qword_1000F50B8);
  uint64_t v13 = sub_1000165CC(v12);
  __chkstk_darwin(v13);
  sub_100025A98();
  uint64_t v14 = type metadata accessor for RootPPTTestCase();
  sub_100022284();
  __chkstk_darwin(v15);
  sub_1000167F4();
  uint64_t v49 = v16;
  uint64_t v17 = sub_100025A08(&qword_1000F50C0);
  uint64_t v18 = sub_1000165CC(v17);
  __chkstk_darwin(v18);
  sub_10002A5D8();
  type metadata accessor for GalleryNavigationDestination();
  sub_100022284();
  __chkstk_darwin(v19);
  sub_100021FC4();
  id v20 = [*(id *)(v0 + OBJC_IVAR___WFMainViewController_splitView) detailViewController];
  uint64_t v51 = v6;
  uint64_t v52 = v14;
  if (!v20) {
    goto LABEL_17;
  }
  unint64_t v21 = v20;
  self;
  id v22 = (void *)swift_dynamicCastObjCClass();
  if (!v22)
  {

LABEL_17:
    uint64_t v29 = 0;
    id v50 = 0;
    goto LABEL_18;
  }
  id v23 = [v22 viewControllers];

  sub_100029C7C(0, &qword_1000F50A0);
  uint64_t v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!((unint64_t)v24 >> 62))
  {
    uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v25) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
  if (v24 < 0) {
    uint64_t v25 = v24;
  }
  else {
    uint64_t v25 = v24 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  _CocoaArrayWrapper.endIndex.getter();
  sub_10003F730();
  if (!v25)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
LABEL_5:
  BOOL v26 = __OFSUB__(v25, 1);
  unint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    sub_100089510(v27, (v24 & 0xC000000000000001) == 0, v24);
    if ((v24 & 0xC000000000000001) == 0)
    {
      id v28 = *(id *)(v24 + 8 * v27 + 32);
      goto LABEL_8;
    }
  }
  specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_8:
  sub_10003F730();
  type metadata accessor for GalleryHostingViewController(0);
  uint64_t v29 = (void *)swift_dynamicCastClass();
  if (v29) {
    id v50 = (id)v27;
  }
  else {
    id v50 = (id)v27;
  }
LABEL_18:
  char v30 = (void *)sub_10001A1FC();
  id v31 = [v30 tabBarController];

  if (!v31
    || (id v32 = [v31 selectedViewController], v31, v32)
    && (type metadata accessor for GalleryHostingViewController(0),
        uint64_t v33 = swift_dynamicCastClass(),
        v32,
        v33))
  {
    if (v29) {
      goto LABEL_26;
    }
  }
  else if (v29)
  {
  }
  uint64_t v29 = (void *)sub_100031434();
  sub_100019124();
LABEL_26:

  sub_100019760(v53, v4, &qword_1000F50C0);
  sub_10003F8D8(v4);
  if (v34)
  {
    sub_100025E44(v4, &qword_1000F50C0);
  }
  else
  {
    sub_100020698();
    v35();
    uint64_t v36 = (void *)sub_100031434();
    sub_10003C9E0(v1, v54 & 1);

    uint64_t v37 = sub_10003F9E8();
    v38(v37);
  }
  sub_100019760(v55, v3, &qword_1000F5128);
  type metadata accessor for RootNavigationContext();
  sub_10003F8D8(v3);
  if (v34)
  {
    sub_100025E44(v3, &qword_1000F5128);
    sub_10001681C();
    sub_100021594(v39, v40, v41, v52);
  }
  else
  {
    RootNavigationContext.pptTest.getter();
    sub_100012D7C();
    sub_100016618();
    v42();
    int v43 = sub_1000225EC(v2, 1, v52);
    if (v43 != 1)
    {
      sub_100020698();
      v45();
      uint64_t v46 = (void *)sub_100031434();
      sub_10003D01C(v49);

      uint64_t v47 = sub_10003F8F8();
      uint64_t v44 = v48(v47);
      if (!v51) {
        goto LABEL_35;
      }
      goto LABEL_34;
    }
  }

  uint64_t v44 = sub_100025E44(v2, &qword_1000F50B8);
  if (v51) {
LABEL_34:
  }
    v51(v44);
LABEL_35:
  sub_10001885C();
}

id sub_100032850()
{
  id result = *(id *)(v0 + OBJC_IVAR___WFMainViewController_content);
  if (result)
  {
    id result = (id)swift_dynamicCastObjCProtocolConditional();
    if (result) {
      return [result scrollForNavigationTap];
    }
  }
  return result;
}

uint64_t sub_1000328A4(void *a1)
{
  uint64_t v2 = v1;
  sub_100029C7C(0, &qword_1000F5268);
  id v4 = sub_100048C7C(a1, *(id *)(v2 + OBJC_IVAR___WFMainViewController_database));
  sub_10003507C();
  uint64_t v6 = v5;

  return v6;
}

id sub_1000329D0()
{
  uint64_t v0 = (void *)_convertErrorToNSError(_:)();
  id v1 = [(id)swift_getObjCClassFromMetadata() alertWithError:v0];
  swift_errorRelease();

  return v1;
}

void sub_100032A34()
{
  sub_10002066C();
  uint64_t v3 = v2;
  uint64_t v4 = sub_100025A08(&qword_1000F5118);
  uint64_t v5 = sub_1000165CC(v4);
  __chkstk_darwin(v5);
  sub_100025A98();
  type metadata accessor for OpenWorkflowOptions();
  sub_100022284();
  __chkstk_darwin(v6);
  sub_100021FDC();
  type metadata accessor for ShortcutsFeatureFlags();
  sub_100022284();
  __chkstk_darwin(v7);
  sub_10001899C();
  sub_100014FB8();
  v8();
  char v9 = ShortcutsFeatureFlags.isFeatureEnabled.getter();
  sub_10001B6B8();
  v10();
  uint64_t v11 = *(void **)(v0 + OBJC_IVAR___WFMainViewController_database);
  if (v9)
  {
    id v12 = objc_allocWithZone((Class)WFWorkflow);
    id v13 = sub_10003DE80(v3, v11);
    uint64_t v14 = type metadata accessor for OpenWorkflowOptions.ActionError();
    sub_10002A674(v1, v15, v16, v14);
    sub_1000150D0();
    sub_10003507C();

    uint64_t v17 = sub_100026BE0();
    v18(v17);
  }
  else
  {
    id v32 = 0;
    id v19 = [v11 createWorkflowWithOptions:v3 error:&v32];
    id v20 = v32;
    if (v19)
    {
      unint64_t v21 = v19;
      uint64_t v22 = type metadata accessor for OpenWorkflowOptions.ActionError();
      sub_10002A674(v1, v23, v24, v22);
      id v25 = v20;
      sub_1000150D0();
      BOOL v26 = (void *)sub_10003FA1C();
      sub_1000328A4(v26);

      uint64_t v27 = sub_100026BE0();
      v28(v27);
    }
    else
    {
      id v29 = v32;
      sub_100026E5C();
      _convertNSErrorToError(_:)();

      swift_willThrow();
      id v30 = (id)WFUserInterfaceFromViewController();
      sub_100029C7C(0, &qword_1000F5090);
      swift_errorRetain();
      id v31 = sub_1000329D0();
      sub_100022510((uint64_t)v31, "presentAlert:");

      swift_unknownObjectRelease();
      swift_errorRelease();
    }
  }
  sub_100022F5C();
  sub_10001885C();
}

void sub_100032D20()
{
  sub_10002066C();
  uint64_t v39 = v3;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for ShortcutFileImportView();
  sub_100022284();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_100018874();
  uint64_t v10 = sub_100025A08(&qword_1000F5218);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  sub_1000165D8();
  uint64_t v12 = sub_100025A08(&qword_1000F5220);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  sub_1000206CC();
  uint64_t v40 = v14;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v39 - v16;
  id v18 = v5;
  swift_retain();
  ShortcutFileImportView.init(importResult:completion:)();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = sub_1000119DC((unint64_t *)&unk_1000F5060, (void (*)(uint64_t))type metadata accessor for MainViewController);
  sub_1000205E8();
  v22(v21);
  uint64_t v23 = (uint64_t *)(v1 + *(int *)(v11 + 44));
  *uint64_t v23 = KeyPath;
  v23[1] = (uint64_t)v0;
  v23[2] = v20;
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v0;
  v24(v2, v6);
  uint64_t v25 = swift_getKeyPath();
  id v26 = (id)WFUserInterfaceFromViewController();
  sub_100019760(v1, (uint64_t)v17, &qword_1000F5218);
  uint64_t v27 = (uint64_t *)&v17[*(int *)(v13 + 44)];
  *uint64_t v27 = v25;
  v27[1] = (uint64_t)v26;
  uint64_t v28 = sub_10003F8F8();
  sub_100025E44(v28, v29);
  sub_100019760((uint64_t)v17, v40, &qword_1000F5220);
  id v30 = objc_allocWithZone((Class)sub_100025A08(&qword_1000F5228));
  id v31 = (void *)UIHostingController.init(rootView:)();
  sub_100016808();
  sub_100036410(v32, v33, v34, v35, v36);

  uint64_t v37 = sub_10003FA1C();
  sub_100025E44(v37, v38);
  sub_10001885C();
}

uint64_t sub_100032F9C()
{
  return EnvironmentValues.rootNavigator.setter();
}

uint64_t sub_100032FD8()
{
  return EnvironmentValues.userInterface.setter();
}

uint64_t sub_100033004(void *a1, void *a2, void *a3, char a4, void *a5, uint64_t a6, uint64_t a7)
{
  id v15 = a5;
  id v16 = v7;
  id v17 = a1;
  id v18 = a2;
  id v19 = a3;
  uint64_t v20 = sub_100021F6C();
  sub_100023600(v20);
  return sub_100036954(v16, v16, v17, a2, a3, a4, a5, a6, a7);
}

void sub_1000330A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = *(void **)(a1 + OBJC_IVAR___WFMainViewController_runCoordinator);
  if (a7)
  {
    v15[4] = a7;
    v15[5] = a8;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    void v15[2] = sub_1000331B4;
    v15[3] = &unk_1000E57E8;
    uint64_t v14 = _Block_copy(v15);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v14 = 0;
  }
  [v13 runWorkflowReference:a2 fromSource:a3 withInput:a4 requestOutput:a5 & 1 runViewSource:a6 completionHandler:v14];
  _Block_release(v14);
}

void sub_1000331B4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v7 = *(void (**)(void *, uint64_t, void *))(a1 + 32);
  swift_retain();
  id v9 = a2;
  id v8 = a4;
  v7(a2, a3, a4);
  swift_release();
}

uint64_t sub_100033248(void *a1)
{
  uint64_t v4 = sub_100025A08(&qword_1000F5100);
  uint64_t v5 = sub_1000165CC(v4);
  __chkstk_darwin(v5);
  sub_100015030();
  uint64_t v6 = type metadata accessor for TaskPriority();
  sub_100021594(v2, 1, 1, v6);
  type metadata accessor for MainActor();
  id v7 = v1;
  id v8 = a1;
  uint64_t v9 = static MainActor.shared.getter();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = v7;
  v10[5] = v8;
  sub_10002B210(v2, (uint64_t)&unk_1000F51E0, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_100033338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[10] = a4;
  void v5[11] = a5;
  uint64_t v6 = type metadata accessor for Logger();
  v5[12] = v6;
  v5[13] = *(void *)(v6 - 8);
  v5[14] = swift_task_alloc();
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[17] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[18] = v7;
  v5[19] = v8;
  return _swift_task_switch(sub_10003347C, v7, v8);
}

uint64_t sub_10003347C()
{
  sub_10002348C();
  uint64_t v1 = async function pointer to dispatch thunk of AutoShortcutsAppsDataSource.getLNAction(for:);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10003355C;
  uint64_t v3 = *(void *)(v0 + 88);
  return ((uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of AutoShortcutsAppsDataSource.getLNAction(for:)
                                          + v1))(v3);
}

uint64_t sub_10003355C()
{
  sub_10002348C();
  uint64_t v2 = *v1;
  sub_10001988C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_10001988C();
  *uint64_t v6 = v5;
  *(void *)(v8 + 168) = v7;
  *(void *)(v8 + 176) = v0;
  swift_task_dealloc();
  uint64_t v9 = *(void *)(v2 + 152);
  uint64_t v10 = *(void *)(v2 + 144);
  if (v0) {
    uint64_t v11 = sub_100034450;
  }
  else {
    uint64_t v11 = sub_1000336C0;
  }
  return _swift_task_switch(v11, v10, v9);
}

uint64_t sub_1000336C0()
{
  uint64_t v111 = v0;
  uint64_t v1 = *(void **)(v0 + 88);
  swift_release();
  id v2 = [v1 fullyQualifiedIdentifier];
  id v3 = [objc_allocWithZone((Class)LNMetadataProvider) initWithOptions:2];
  sub_100025A08(&qword_1000F5200);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1000BAC10;
  *(void *)(v4 + 32) = v2;
  uint64_t v110 = v4;
  specialized Array._endMutation()();
  sub_100029C7C(0, &qword_1000F5208);
  id v5 = v2;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 72) = 0;
  id v7 = [v3 actionsWithFullyQualifiedIdentifiers:isa error:v0 + 72];

  uint64_t v8 = *(void **)(v0 + 72);
  if (!v7)
  {
    uint64_t v42 = (id *)(v0 + 48);
    int v43 = *(void **)(v0 + 168);
    id v44 = v8;
    uint64_t v45 = _convertNSErrorToError(_:)();

    swift_willThrow();
    *(void *)(v0 + 40) = v45;
    swift_errorRetain();
    sub_100025A08(&qword_1000F5080);
    sub_100029C7C(0, &qword_1000F5088);
    if ((swift_dynamicCast() & 1) == 0)
    {
LABEL_24:
      swift_errorRelease();
      static WFLog.subscript.getter();
      swift_errorRetain();
      swift_errorRetain();
      os_log_type_t v70 = Logger.logObject.getter();
      os_log_type_t v71 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v70, v71))
      {
        uint64_t v72 = (uint8_t *)sub_100021F04();
        uint64_t v110 = sub_100025D78();
        *(_DWORD *)uint64_t v72 = 136446210;
        swift_getErrorValue();
        uint64_t v73 = Error.localizedDescription.getter();
        *(void *)(v0 + 64) = sub_10002D53C(v73, v74, &v110);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v70, v71, "Unable to run App Shortcut: %{public}s", v72, 0xCu);
        swift_arrayDestroy();
        sub_100021DC0();
        sub_100021DC0();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();

        sub_100011A20();
      }
      sub_1000242F8();
      v75();
      id v76 = [objc_allocWithZone((Class)WFAlert) init];
      sub_10002A5F4();
      NSString v77 = String._bridgeToObjectiveC()();
      sub_1000223FC();
      id v78 = sub_10001C0B4();

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v79 = sub_10003F87C();
      sub_1000287FC(v79, v80, v81, v82);
      id v83 = [self okButtonWithHandler:0];
      id v84 = [v76 buttons];
      sub_10002A548((uint64_t)v84, &qword_1000F51E8);
      uint64_t v85 = sub_100022354();

      uint64_t v110 = v85;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      sub_10001B43C();
      if (v86) {
        sub_10002459C();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      Class v87 = sub_10003FA48().super.isa;
      swift_bridgeObjectRelease();
      [v76 setButtons:v87];

      [(id)WFUserInterfaceFromViewController() presentAlert:v76];
      swift_unknownObjectRelease();
LABEL_30:
      swift_errorRelease();
      goto LABEL_31;
    }
    id v46 = *v42;
    id v47 = [*v42 domain];
    uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v50 = v49;

    if (v48 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v50 == v51)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v53 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v53 & 1) == 0)
      {
LABEL_23:

        goto LABEL_24;
      }
    }
    if ([v46 code] == (id)9007)
    {
      swift_errorRelease();
      static WFLog.subscript.getter();
      char v54 = Logger.logObject.getter();
      os_log_type_t v55 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v54, v55))
      {
        int v56 = (_WORD *)sub_100018804();
        sub_10003F998(v56);
        sub_10003F9D0((void *)&_mh_execute_header, v54, v55, "Unable to run Auto Shortcut due to user has not approved the application Privacy Disclosure)");
        sub_100021DC0();
      }
      uint64_t v57 = *(void **)(v0 + 88);

      sub_100018D08();
      v58();
      id v59 = [objc_allocWithZone((Class)WFAlert) init];
      NSString v60 = sub_1000223FC();
      NSString v61 = sub_1000223FC();
      id v62 = sub_1000248B0(v60);

      uint64_t v63 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_100021EDC(v64, v65, v66, (SEL *)&selRef_setTitle_);
      uint64_t v67 = sub_10003EC5C([v57 underlyingAutoShortcut]);
      if (v68)
      {
        uint64_t v69 = v68;
        uint64_t v109 = v67;
      }
      else
      {
        uint64_t v109 = WFExecutableAppShortcut.name.getter();
        uint64_t v69 = v90;
      }
      sub_10003F944();
      static AppNameCache.shared.getter();
      id v91 = [v62 underlyingAutoShortcut];
      id v92 = [v91 bundleIdentifier];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      dispatch thunk of AppNameCache.name(forBundleIdentifier:)();
      uint64_t v94 = v93;
      swift_release();
      swift_bridgeObjectRelease();
      if (v94)
      {
        NSString v95 = sub_100029CB8();
        NSString v96 = sub_1000223FC();
        id v97 = sub_1000248B0(v95);

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_100025A08(&qword_1000F51F0);
        uint64_t v98 = swift_allocObject();
        *(_OWORD *)(v98 + 16) = xmmword_1000BABE0;
        *(void *)(v98 + 56) = &type metadata for String;
        unint64_t v99 = sub_10003F354();
        sub_10003F904(v99, v109);
      }
      else
      {
        NSString v100 = sub_1000223FC();
        sub_1000223FC();
        id v101 = sub_1000240B0();

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_100025A08(&qword_1000F51F0);
        uint64_t v102 = swift_allocObject();
        *(_OWORD *)(v102 + 16) = xmmword_1000BAB00;
        *(void *)(v102 + 56) = &type metadata for String;
        *(void *)(v102 + 64) = sub_10003F354();
        *(void *)(v102 + 32) = v109;
        *(void *)(v102 + 40) = v69;
      }
      static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      uint64_t v103 = swift_bridgeObjectRelease();
      sub_100021EDC(v103, v104, v105, (SEL *)&selRef_setMessage_);
      id v106 = [self okButtonWithHandler:0];
      id v107 = [v59 buttons];
      sub_10002A548((uint64_t)v107, &qword_1000F51E8);
      uint64_t v108 = sub_100022354();

      uint64_t v110 = v108;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      sub_10001B43C();
      if (v86) {
        sub_10002459C();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      sub_10003FA48();
      sub_10003F730();
      [v59 setButtons:v106];

      [(id)WFUserInterfaceFromViewController() presentAlert:v59];
      swift_unknownObjectRelease();

      goto LABEL_30;
    }
    goto LABEL_23;
  }
  sub_100025A08(&qword_1000F5210);
  uint64_t v9 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  id v10 = v8;

  id v11 = [v5 bundleIdentifier];
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  uint64_t v15 = sub_1000A9A40(v12, v14, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15
    && (id v16 = [v5 actionIdentifier],
        uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(),
        uint64_t v19 = v18,
        v16,
        uint64_t v20 = sub_1000A9A84(v17, v19, v15),
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        v20))
  {
    uint64_t v21 = *(void **)(v0 + 168);
    uint64_t v22 = *(void **)(v0 + 88);
    id v23 = *(id *)(v0 + 80);
    id v24 = v22;
    id v25 = v21;
    id v26 = v20;
    uint64_t v27 = (void *)sub_100026E5C();
    sub_100036BD8(v27, v23, v24, v25, v20);
  }
  else
  {
    static WFLog.subscript.getter();
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      id v30 = (_WORD *)sub_100018804();
      sub_10003F998(v30);
      sub_10003F9D0((void *)&_mh_execute_header, v28, v29, "Unable to run App Shortcut: no LNAction returned");
      sub_100021DC0();
    }

    sub_10003FA1C();
    sub_100018D08();
    v31();
    id v32 = [objc_allocWithZone((Class)WFAlert) init];
    sub_10002A5F4();
    NSString v33 = String._bridgeToObjectiveC()();
    sub_1000223FC();
    id v34 = sub_1000240B0();

    uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v37 = v36;

    sub_1000287FC(v35, v37, v32, (SEL *)&selRef_setTitle_);
    id v38 = [self okButtonWithHandler:0];
    id v39 = [v32 buttons];
    sub_10002A548((uint64_t)v39, &qword_1000F51E8);
    uint64_t v40 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v110 = v40;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_10002459C();
    }
    uint64_t v41 = *(void **)(v0 + 168);
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    Array._bridgeToObjectiveC()();
    sub_10003F730();
    [v32 setButtons:v38];

    [(id)WFUserInterfaceFromViewController() presentAlert:v32];
    swift_unknownObjectRelease();
  }
LABEL_31:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100022638();
  return v88();
}

uint64_t sub_100034450()
{
  uint64_t v66 = v0;
  swift_release();
  v0[5] = v0[22];
  uint64_t v1 = v0 + 5;
  id v2 = (id *)(v0 + 6);
  swift_errorRetain();
  sub_100025A08(&qword_1000F5080);
  sub_100029C7C(0, &qword_1000F5088);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_15:
    swift_errorRelease();
    static WFLog.subscript.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      os_log_type_t v29 = (uint8_t *)sub_100021F04();
      uint64_t v65 = sub_100025D78();
      *(_DWORD *)os_log_type_t v29 = 136446210;
      uint64_t v1 = v29 + 12;
      swift_getErrorValue();
      uint64_t v30 = Error.localizedDescription.getter();
      v0[8] = sub_10002D53C(v30, v31, &v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Unable to run App Shortcut: %{public}s", v29, 0xCu);
      swift_arrayDestroy();
      sub_100021DC0();
      sub_100021DC0();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      sub_100011A20();
    }
    sub_1000242F8();
    v32();
    id v33 = [objc_allocWithZone((Class)WFAlert) init];
    NSString v34 = sub_1000223FC();
    sub_1000223FC();
    id v35 = sub_1000240B0();

    uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v38 = v37;

    sub_1000287FC(v36, v38, v33, (SEL *)&selRef_setTitle_);
    id v39 = [self okButtonWithHandler:0];
    id v40 = [v33 buttons];
    sub_10002A548((uint64_t)v40, &qword_1000F51E8);
    uint64_t v41 = sub_100022354();

    uint64_t v65 = v41;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    sub_10001B43C();
    if (v42) {
      sub_10003F7E8();
    }
    sub_10003F964();
    specialized Array._endMutation()();
    sub_10003FA48();
    sub_10003F730();
    [v33 setButtons:v39];

    [(id)WFUserInterfaceFromViewController() presentAlert:v33];
    swift_unknownObjectRelease();

    goto LABEL_21;
  }
  id v3 = *v2;
  id v4 = [*v2 domain];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  if (v5 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0) {
      goto LABEL_14;
    }
  }
  if ([v3 code] != (id)9007)
  {
LABEL_14:

    goto LABEL_15;
  }
  swift_errorRelease();
  static WFLog.subscript.getter();
  id v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (_WORD *)sub_100018804();
    sub_10003F998(v13);
    sub_10003F9D0((void *)&_mh_execute_header, v11, v12, "Unable to run Auto Shortcut due to user has not approved the application Privacy Disclosure)");
    sub_100021DC0();
  }
  uint64_t v14 = (void *)v0[11];

  sub_100018D08();
  v15();
  id v16 = [objc_allocWithZone((Class)WFAlert) init];
  sub_10002A5F4();
  NSString v17 = String._bridgeToObjectiveC()();
  NSString v18 = sub_1000223FC();
  id v19 = sub_1000248B0(v17);

  uint64_t v20 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_100021EDC(v21, v22, v23, (SEL *)&selRef_setTitle_);
  uint64_t v24 = sub_10003EC5C([v14 underlyingAutoShortcut]);
  if (v25)
  {
    uint64_t v26 = v25;
    uint64_t v64 = v24;
  }
  else
  {
    uint64_t v64 = WFExecutableAppShortcut.name.getter();
    uint64_t v26 = v45;
  }
  sub_10003F944();
  static AppNameCache.shared.getter();
  id v46 = [v19 underlyingAutoShortcut];
  id v47 = [v46 bundleIdentifier];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  dispatch thunk of AppNameCache.name(forBundleIdentifier:)();
  uint64_t v49 = v48;
  swift_bridgeObjectRelease();
  swift_release();
  if (v49)
  {
    NSString v50 = sub_100029CB8();
    NSString v51 = sub_1000223FC();
    id v52 = sub_1000248B0(v50);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_100025A08(&qword_1000F51F0);
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_1000BABE0;
    *(void *)(v53 + 56) = &type metadata for String;
    unint64_t v54 = sub_10003F354();
    sub_10003F904(v54, v64);
  }
  else
  {
    NSString v55 = sub_1000223FC();
    sub_1000223FC();
    id v56 = sub_1000240B0();

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_100025A08(&qword_1000F51F0);
    uint64_t v57 = swift_allocObject();
    *(_OWORD *)(v57 + 16) = xmmword_1000BAB00;
    *(void *)(v57 + 56) = &type metadata for String;
    *(void *)(v57 + 64) = sub_10003F354();
    *(void *)(v57 + 32) = v64;
    *(void *)(v57 + 40) = v26;
  }
  static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v58 = swift_bridgeObjectRelease();
  sub_100021EDC(v58, v59, v60, (SEL *)&selRef_setMessage_);
  id v61 = [self okButtonWithHandler:0];
  id v62 = [v16 buttons];
  sub_10002A548((uint64_t)v62, &qword_1000F51E8);
  uint64_t v63 = sub_100022354();

  uint64_t v65 = v63;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  sub_10001B43C();
  if (v42) {
    sub_10003F7E8();
  }
  sub_10003F964();
  specialized Array._endMutation()();
  sub_10003FA48();
  sub_10003F730();
  [v16 setButtons:v61];

  [(id)WFUserInterfaceFromViewController() presentAlert:v16];
  swift_unknownObjectRelease();
LABEL_21:
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100022638();
  return v43();
}

id sub_100034D44(uint64_t a1)
{
  return [*(id *)(v1 + OBJC_IVAR___WFMainViewController_runCoordinator) runContextualAction:a1];
}

void sub_100034D60()
{
  sub_10002066C();
  uint64_t v3 = type metadata accessor for LibraryConfiguration();
  uint64_t v4 = sub_1000165CC(v3);
  __chkstk_darwin(v4);
  sub_10002A5D8();
  uint64_t v5 = type metadata accessor for RootNavigationDestination();
  sub_100022284();
  uint64_t v7 = v6;
  uint64_t v9 = __chkstk_darwin(v8);
  __chkstk_darwin(v9);
  id v11 = (uint64_t *)((char *)&v34 - v10);
  uint64_t v12 = sub_100025A08(&qword_1000F5130);
  uint64_t v13 = sub_1000165CC(v12);
  __chkstk_darwin(v13);
  sub_10003F7B4();
  __chkstk_darwin(v14);
  id v16 = (id *)((char *)&v34 - v15);
  uint64_t v17 = v0 + OBJC_IVAR___WFMainViewController_currentDestination;
  swift_beginAccess();
  sub_100019760(v17, (uint64_t)v16, &qword_1000F5130);
  sub_10003F8D8((uint64_t)v16);
  if (v18)
  {
    sub_100025E44((uint64_t)v16, &qword_1000F5130);
  }
  else
  {
    sub_100021DB4();
    if (v19() == enum case for RootNavigationDestination.folder(_:))
    {
      uint64_t v35 = v2;
      (*(void (**)(id *, uint64_t))(v7 + 96))(v16, v5);
      id v20 = *v16;
      uint64_t v21 = *(void **)(v0 + OBJC_IVAR___WFMainViewController_database);
      NSString v22 = [v20 identifier];
      id v36 = v20;
      if (!v22)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v22 = String._bridgeToObjectiveC()();
        id v20 = v36;
        swift_bridgeObjectRelease();
      }
      id v23 = [v21 collectionWithIdentifier:v22];

      if (!v23)
      {

        goto LABEL_13;
      }
      *id v11 = v23;
      sub_100014FB8();
      v24();
      uint64_t v25 = *(void (**)(uint64_t))(v7 + 16);
      uint64_t v26 = sub_10003F8CC();
      v25(v26);
      sub_1000197FC();
      id v27 = v23;
      sub_100004D64(v1);
      uint64_t v28 = sub_100031964();
      if (!v28)
      {
        sub_100014FE4();
        sub_1000242F8();
        v33();

        goto LABEL_13;
      }
      os_log_type_t v29 = (void *)v28;
      uint64_t v30 = sub_10003F7D0();
      v25(v30);
      uint64_t v31 = v35;
      LibraryConfiguration.init(destination:)();
      sub_100097154(v31);
    }
    sub_1000242F8();
    v32();
  }
LABEL_13:
  sub_10001885C();
}

void sub_10003507C()
{
  sub_10002066C();
  uint64_t v100 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for OpenWorkflowOptions();
  sub_100022284();
  uint64_t v95 = v8;
  __chkstk_darwin(v9);
  uint64_t v93 = v10;
  uint64_t v94 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ShortcutsFeatureFlags();
  sub_100022284();
  uint64_t v97 = v12;
  uint64_t v98 = v11;
  __chkstk_darwin(v11);
  sub_100016D38(v13, v93);
  type metadata accessor for QuarantinedShortcutView();
  sub_100022284();
  uint64_t v102 = v15;
  uint64_t v103 = v14;
  __chkstk_darwin(v14);
  sub_1000206CC();
  uint64_t v101 = v16;
  __chkstk_darwin(v17);
  id v19 = (char *)&v93 - v18;
  uint64_t v20 = type metadata accessor for Logger();
  sub_100022284();
  uint64_t v22 = v21;
  __chkstk_darwin(v23);
  sub_100018874();
  uint64_t v104 = v0;
  uint64_t v24 = *(void **)&v0[OBJC_IVAR___WFMainViewController_runCoordinator];
  id v25 = [v24 runningWorkflow];

  if (v25)
  {
    unint64_t v99 = v4;
    static WFLog.subscript.getter();
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (_WORD *)sub_100018804();
      sub_10003F998(v28);
      sub_10003F9D0((void *)&_mh_execute_header, v26, v27, "A new workflow cannot be presented while a workflow is still running. Terminating this current Workflow.");
      sub_100021DC0();
    }

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v1, v20);
    [v24 stop];
    uint64_t v4 = v99;
  }
  if ([v6 remoteQuarantineStatus] == (id)1)
  {
    id v29 = v6;
    QuarantinedShortcutView.init(workflow:)();
    uint64_t v30 = v102;
    uint64_t v31 = v103;
    sub_1000205E8();
    v32();
    id v33 = objc_allocWithZone((Class)sub_100025A08(&qword_1000F51C8));
    uint64_t v34 = (void *)UIHostingController.init(rootView:)();
    sub_100016808();
    sub_100036410(v35, v36, v37, v38, v39);

    (*(void (**)(char *, uint64_t))(v30 + 8))(v19, v31);
LABEL_19:
    sub_10001885C();
    return;
  }
  id v40 = v6;
  if (!v4)
  {
LABEL_15:
    uint64_t v103 = v7;
    sub_100029C7C(0, &qword_1000F51B0);
    uint64_t v59 = v104;
    uint64_t v60 = *(void **)&v104[OBJC_IVAR___WFMainViewController_database];
    id v61 = v40;
    id v62 = v60;
    id v63 = sub_1000358E8(v61, v60, 0, 1);
    [v63 setDelegate:v59];
    [v63 setEditorDocumentMenuDelegate:v59];
    [v63 setIsEditingNewWorkflow:OpenWorkflowOptions.isNewWorkflow.getter() & 1];
    id v64 = [objc_allocWithZone((Class)WFComposePresentingViewController) initWithComposeViewController:v63];
    sub_10003F92C(v63, "setEditingState:animated:completionHandler:", 1);
    uint64_t v65 = v96;
    uint64_t v66 = v97;
    uint64_t v67 = v98;
    sub_100014FB8();
    v68();
    LOBYTE(v60) = ShortcutsFeatureFlags.isFeatureEnabled.getter();
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v65, v67);
    if (v60)
    {
      id v69 = [objc_allocWithZone((Class)UIZoomTransitionOptions) init];
      uint64_t v70 = sub_10001B6E8();
      *(void *)(v70 + 16) = v64;
      *(void *)(v70 + 24) = v63;
      v105[4] = sub_10003F1FC;
      v105[5] = v70;
      v105[0] = _NSConcreteStackBlock;
      v105[1] = 1107296256;
      v105[2] = sub_100035C44;
      v105[3] = &unk_1000E5680;
      os_log_type_t v71 = _Block_copy(v105);
      id v72 = v64;
      id v73 = v63;
      swift_release();
      [v69 setInteractiveDismissShouldBegin:v71];
      _Block_release(v71);
      id v74 = [self effectWithBlurRadius:7.0];
      [v69 setDimmingVisualEffect:v74];

      id v75 = [v104 view];
      if (!v75)
      {
        __break(1u);
        goto LABEL_21;
      }
      id v76 = v75;
      id v77 = [self systemBackgroundColor];
      [v76 setBackgroundColor:v77];

      sub_100029C7C(0, &qword_1000F51B8);
      uint64_t v78 = sub_10001B6E8();
      *(void *)(v78 + 16) = v4;
      *(void *)(v78 + 24) = v61;
      id v79 = v4;
      id v80 = v72;
      id v81 = v69;
      id v82 = v61;
      id v83 = (void *)static UIViewControllerTransition.zoom(options:sourceViewProvider:)();
      swift_release();

      [v80 setPreferredTransition:v83];
    }
    uint64_t v84 = v95;
    sub_10003FA10();
    uint64_t v85 = v64;
    char v86 = v94;
    uint64_t v87 = v103;
    sub_1000205E8();
    v88();
    unint64_t v89 = (*(unsigned __int8 *)(v84 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
    unint64_t v90 = (v93 + v89 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v91 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v84 + 32))(v91 + v89, v86, v87);
    *(void *)(v91 + v90) = v63;
    *(void *)(v91 + ((v90 + 15) & 0xFFFFFFFFFFFFFFF8)) = v61;
    id v92 = v61;
    v63;
    sub_100036410(v85, 0, 1, sub_10003F188, v91);

    swift_release();
    goto LABEL_19;
  }
  uint64_t v41 = *(void **)&v104[OBJC_IVAR___WFMainViewController_database];
  id v42 = v4;
  id v43 = [v41 conflictForWorkflowReference:v42];
  if (v43)
  {
    id v44 = v43;
    id v45 = objc_allocWithZone((Class)type metadata accessor for WorkflowConflictViewController());
    id v46 = v44;
    id v47 = (void *)WorkflowConflictViewController.init(conflict:)();
    [v47 setModalPresentationStyle:2];
    sub_1000119DC(&qword_1000F51C0, (void (*)(uint64_t))type metadata accessor for MainViewController);
    swift_unknownObjectRetain();
    dispatch thunk of WorkflowConflictViewController.delegate.setter();
    sub_100016808();
    sub_100036410(v48, v49, v50, v51, v52);

LABEL_13:
    goto LABEL_19;
  }
  uint64_t v53 = self;
  id v54 = [v53 existingSceneSessionForEditingWorkflowReference:v42];

  if (!v54)
  {

    goto LABEL_15;
  }
  id v55 = [v104 view];
  if (v55)
  {
    id v56 = v55;
    id v57 = [v55 window];

    id v58 = [v57 windowScene];
    [v53 activateSceneForWorkflowReference:v42 sender:v58];

    goto LABEL_13;
  }
LABEL_21:
  __break(1u);
}

id sub_1000358E8(void *a1, void *a2, void *a3, char a4)
{
  id v7 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithWorkflow:a1 database:a2 home:a3 shouldShowShareButton:a4 & 1];

  return v7;
}

id sub_100035960(void *a1, id a2, void *a3)
{
  id result = [a2 view];
  if (result)
  {
    id v6 = result;
    [a1 location];
    id v7 = [v6 hitTest:0];

    if (!v7) {
      return 0;
    }
    id v8 = sub_100035BB4();
    if (v8)
    {
      id v9 = v8;

      uint64_t v10 = 0;
      id v7 = v9;
LABEL_13:

      return (id)v10;
    }
    id v11 = sub_100035B04();
    if (v11)
    {
      uint64_t v12 = v11;
      [v11 contentOffset];
      [v12 adjustedContentInset];
      id v13 = [v12 traitCollection];
      [v13 displayScale];

      BSFloatRoundForScale();
      if (v14 > 0.0)
      {

LABEL_10:
        uint64_t v10 = 0;
        goto LABEL_13;
      }
      [a1 velocity];
      double v16 = v15;

      if (v16 < 0.0) {
        goto LABEL_10;
      }
    }
    id result = [a3 view];
    if (result)
    {
      id v17 = result;
      uint64_t v10 = 1;
      [result endEditing:1];

      goto LABEL_13;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_100035B04()
{
  id v1 = v0;
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
LABEL_4:
    id v3 = (id)v2;
  }
  else
  {
    while (1)
    {
      id v3 = [v1 superview];

      if (!v3) {
        break;
      }
      id v1 = v3;
      self;
      uint64_t v2 = swift_dynamicCastObjCClass();
      if (v2) {
        goto LABEL_4;
      }
    }
  }
  return v3;
}

id sub_100035BB4()
{
  type metadata accessor for WFSheetView();
  id v1 = v0;
  uint64_t v2 = swift_dynamicCastClass();
  if (v2)
  {
LABEL_4:
    id v3 = (id)v2;
  }
  else
  {
    while (1)
    {
      id v3 = [v1 superview];

      if (!v3) {
        break;
      }
      id v1 = v3;
      uint64_t v2 = swift_dynamicCastClass();
      if (v2) {
        goto LABEL_4;
      }
    }
  }
  return v3;
}

uint64_t sub_100035C44(uint64_t a1, void *a2)
{
  id v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  LOBYTE(v3) = v3();
  swift_release();

  return v3 & 1;
}

id sub_100035C9C(void *a1, void *a2, void *a3)
{
  uint64_t v6 = sub_100025A08(&qword_1000F5120);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for IndexPath();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = [a1 zoomedViewController];
  self;
  double v14 = (void *)swift_dynamicCastObjCClass();
  if (!v14) {
    goto LABEL_8;
  }
  id v15 = [v14 composeViewController];
  unsigned int v16 = [v15 willDeleteWhenClosed];

  if (v16) {
    goto LABEL_8;
  }
  id v17 = [a1 sourceViewController];
  type metadata accessor for MainViewController(0);
  if (!swift_dynamicCastClass())
  {

    goto LABEL_8;
  }
  uint64_t v18 = sub_100031964();
  if (!v18)
  {

    return 0;
  }
  id v19 = (void *)v18;
  if (!a2)
  {
    id v23 = [a3 reference];
    if (v23)
    {
      uint64_t v20 = v23;
      uint64_t v29 = v10;
      a2 = 0;
      goto LABEL_14;
    }

LABEL_8:
    return 0;
  }
  uint64_t v29 = v10;
  uint64_t v20 = a2;
LABEL_14:
  id v30 = v20;
  id v24 = a2;
  sub_100021E68();
  id v25 = [v20 identifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  sub_1000AA920();
  swift_bridgeObjectRelease();
  swift_release();
  if (sub_1000225EC((uint64_t)v8, 1, v9) != 1)
  {
    uint64_t v26 = v29;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v12, v8, v9);
    id v27 = sub_100026038();
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v21 = [v27 cellForItemAtIndexPath:isa];

    (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v9);
    return v21;
  }

  sub_100025E44((uint64_t)v8, &qword_1000F5120);
  return 0;
}

void (*sub_100035FEC(uint64_t a1, void *a2, void *a3))(void)
{
  uint64_t v5 = sub_100025A08(&qword_1000F5118);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OpenWorkflowOptions.ActionError();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = OpenWorkflowOptions.scrolledToActionIndex.getter();
  if ((v13 & 1) == 0)
  {
    unint64_t v14 = v12;
    uint64_t v36 = v9;
    id v15 = a2;
    id v16 = [a2 editorViewController];
    id v17 = a3;
    id v18 = [a3 actions];
    sub_100029C7C(0, &qword_1000F51D0);
    uint64_t v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    sub_100089510(v14, (v19 & 0xC000000000000001) == 0, v19);
    if ((v19 & 0xC000000000000001) != 0) {
      id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v20 = *(id *)(v19 + 8 * v14 + 32);
    }
    id v21 = v20;
    swift_bridgeObjectRelease();
    [v16 scrollToAction:v21];

    a2 = v15;
    a3 = v17;
    uint64_t v9 = v36;
  }
  OpenWorkflowOptions.actionError.getter();
  if (sub_1000225EC((uint64_t)v7, 1, v8) == 1)
  {
    sub_100025E44((uint64_t)v7, &qword_1000F5118);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    id v22 = [a3 actions];
    sub_100029C7C(0, &qword_1000F51D0);
    unint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v23 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (OpenWorkflowOptions.ActionError.actionIndex.getter() < v24)
    {
      id v25 = [a2 editorViewController];
      OpenWorkflowOptions.ActionError.message.getter();
      uint64_t v26 = a3;
      NSString v27 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v28 = [v26 actions];
      uint64_t v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      unint64_t v30 = OpenWorkflowOptions.ActionError.actionIndex.getter();
      sub_100089510(v30, (v29 & 0xC000000000000001) == 0, v29);
      if ((v29 & 0xC000000000000001) != 0) {
        id v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v31 = *(id *)(v29 + 8 * v30 + 32);
      }
      id v32 = v31;
      swift_bridgeObjectRelease();
      [v25 showActionError:v27 for:v32];
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  if (OpenWorkflowOptions.showIconPicker.getter()) {
    [a2 presentIconPickerWithSourceItem:0];
  }
  id result = (void (*)(void))OpenWorkflowOptions.onOpen.getter();
  if (result)
  {
    uint64_t v34 = (uint64_t)result;
    result();
    return (void (*)(void))sub_10002354C(v34);
  }
  return result;
}

void sub_100036410(void *a1, char a2, char a3, void *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  id v12 = [v6 presentedViewController];
  if (v12)
  {
    char v13 = v12;
    if (a2)
    {
      id v14 = [v12 presentedViewController];
      if (v14)
      {
        do
        {
          id v15 = v14;

          id v14 = [v15 presentedViewController];
          char v13 = v15;
        }
        while (v14);
        if (!a4) {
          goto LABEL_7;
        }
      }
      else
      {
        id v15 = v13;
        if (!a4) {
          goto LABEL_7;
        }
      }
      unint64_t v23 = a4;
      uint64_t v24 = a5;
      v20[0] = _NSConcreteStackBlock;
      sub_10003F9C4();
      id v21 = sub_10000E51C;
      id v22 = &unk_1000E5590;
      a4 = _Block_copy(v20);
      swift_retain();
      id v14 = (id)swift_release();
LABEL_7:
      sub_10003F9A4((uint64_t)v14, "presentViewController:animated:completion:");
      _Block_release(a4);

      return;
    }
    sub_100023600((uint64_t)a4);
    id v16 = v6;
    id v17 = a1;
    sub_100023600((uint64_t)a4);
    id v18 = v16;
    id v19 = v17;
    sub_100036740(v18, v18, v19, a3 & 1, (uint64_t)a4, a5);

    sub_10002354C((uint64_t)a4);
  }
  else
  {
    if (a4)
    {
      unint64_t v23 = a4;
      uint64_t v24 = a5;
      v20[0] = _NSConcreteStackBlock;
      sub_10003F9C4();
      id v21 = sub_10000E51C;
      id v22 = &unk_1000E5568;
      a4 = _Block_copy(v20);
      swift_retain();
      id v12 = (id)swift_release();
    }
    sub_10003F9A4((uint64_t)v12, "presentViewController:animated:completion:");
    _Block_release(a4);
  }
}

void sub_100036664(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  if (a4)
  {
    v9[4] = a4;
    v9[5] = a5;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    v9[2] = sub_10000E51C;
    void v9[3] = &unk_1000E5608;
    uint64_t v8 = _Block_copy(v9);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v8 = 0;
  }
  [a1 presentViewController:a2 animated:a3 & 1 completion:v8];
  _Block_release(v8);
}

uint64_t sub_100036740(void *a1, void *a2, void *a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  *(unsigned char *)(v12 + 32) = a4;
  *(void *)(v12 + 40) = a5;
  *(void *)(v12 + 48) = a6;
  id v13 = a2;
  id v14 = a3;
  sub_100023600(a5);
  id v15 = [a1 presentedViewController];
  if (v15)
  {
    id v16 = v15;
    self;
    uint64_t v17 = swift_dynamicCastObjCClass();
    if (v17)
    {
      id v18 = (void *)v17;
      id v19 = v16;
      id v20 = [v18 editorViewController];
      [v20 stop];

      id v21 = [v18 workflow];
      [v21 save];
    }
    v24[4] = sub_10003F0D0;
    v24[5] = v12;
    v24[0] = _NSConcreteStackBlock;
    v24[1] = 1107296256;
    v24[2] = sub_10000E51C;
    v24[3] = &unk_1000E55E0;
    id v22 = _Block_copy(v24);
    swift_retain();
    swift_release();
    [a1 dismissViewControllerAnimated:0 completion:v22];
    _Block_release(v22);
  }
  else
  {
    sub_100036664(v13, (uint64_t)v14, a4 & 1, a5, a6);
  }
  swift_release();

  return sub_10002354C(a5);
}

uint64_t sub_100036954(void *a1, void *a2, void *a3, void *a4, void *a5, char a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  *(void *)(v17 + 24) = a3;
  *(void *)(v17 + 32) = a4;
  *(void *)(v17 + 40) = a5;
  char v29 = a6;
  *(unsigned char *)(v17 + 48) = a6;
  *(void *)(v17 + 56) = a7;
  *(void *)(v17 + 64) = a8;
  *(void *)(v17 + 72) = a9;
  id v32 = a7;
  id v18 = a2;
  id v19 = a3;
  id v31 = a4;
  id v30 = a5;
  sub_100023600(a8);
  id v20 = [a1 presentedViewController];
  if (v20)
  {
    id v21 = v20;
    self;
    uint64_t v22 = swift_dynamicCastObjCClass();
    if (v22)
    {
      unint64_t v23 = (void *)v22;
      id v24 = v21;
      id v25 = [v23 editorViewController];
      [v25 stop];

      id v26 = [v23 workflow];
      [v26 save];
    }
    aBlock[4] = sub_10003F47C;
    aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10000E51C;
    aBlock[3] = &unk_1000E57C0;
    NSString v27 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [a1 dismissViewControllerAnimated:0 completion:v27];
    _Block_release(v27);

    swift_release();
  }
  else
  {
    sub_1000330A8((uint64_t)v18, (uint64_t)v19, (uint64_t)a4, (uint64_t)a5, v29 & 1, (uint64_t)a7, a8, a9);
    swift_release();
  }
  return sub_10002354C(a8);
}

void sub_100036BD8(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  uint64_t v11 = a2;
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  id v15 = [a1 presentedViewController];
  if (v15)
  {
    id v16 = v15;
    self;
    uint64_t v17 = swift_dynamicCastObjCClass();
    if (v17)
    {
      id v18 = (void *)v17;
      id v19 = v16;
      id v20 = [v18 editorViewController];
      [v20 stop];

      id v21 = [v18 workflow];
      [v21 save];
    }
    long long v23[4] = sub_10003F3F4;
    v23[5] = v10;
    v23[0] = _NSConcreteStackBlock;
    v23[1] = 1107296256;
    v23[2] = sub_10000E51C;
    v23[3] = &unk_1000E5770;
    uint64_t v22 = _Block_copy(v23);
    swift_retain();
    swift_release();
    [a1 dismissViewControllerAnimated:0 completion:v22];
    _Block_release(v22);
  }
  else
  {
    [*(id *)&v11[OBJC_IVAR___WFMainViewController_runCoordinator] runAppShortcut:v12 withLNAction:v13 andMetadata:v14];
  }
  swift_release();
}

void sub_100036DF0(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  id v11 = a4;
  id v12 = a2;
  id v13 = a3;
  id v14 = a5;
  id v15 = [a1 presentedViewController];
  if (v15)
  {
    id v16 = v15;
    self;
    uint64_t v17 = swift_dynamicCastObjCClass();
    if (v17)
    {
      id v18 = (void *)v17;
      id v19 = v16;
      id v20 = [v18 editorViewController];
      [v20 stop];

      id v21 = [v18 workflow];
      [v21 save];
    }
    long long v23[4] = sub_10003EE94;
    v23[5] = v10;
    v23[0] = _NSConcreteStackBlock;
    v23[1] = 1107296256;
    v23[2] = sub_10000E51C;
    v23[3] = &unk_1000E54C8;
    uint64_t v22 = _Block_copy(v23);
    swift_retain();
    swift_release();
    [a1 dismissViewControllerAnimated:0 completion:v22];
    _Block_release(v22);

    swift_release();
  }
  else
  {
    type metadata accessor for MainViewController(0);
    sub_1000119DC(&qword_1000F50F8, (void (*)(uint64_t))type metadata accessor for MainViewController);
    RootView.scroll(toWorkflow:animated:)();
    [*(id *)&v12[OBJC_IVAR___WFMainViewController_runCoordinator] resumeWorkflowReference:v13 fromSource:v11 withState:v14];

    swift_release();
  }
}

void sub_100037068()
{
  sub_10002066C();
  uint64_t v36 = v0;
  id v3 = v2;
  uint64_t v4 = type metadata accessor for NameIconComposeViewController.Mode();
  uint64_t v5 = sub_1000165CC(v4);
  __chkstk_darwin(v5);
  sub_100025A98();
  type metadata accessor for WFCollectionConfigurationViewController.EditMode();
  sub_100022284();
  __chkstk_darwin(v6);
  sub_10002266C();
  __chkstk_darwin(v7);
  sub_10003F918();
  uint64_t v8 = type metadata accessor for ShortcutsFeatureFlags();
  sub_100022284();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_10001899C();
  sub_100014FB8();
  v12();
  char v13 = ShortcutsFeatureFlags.isFeatureEnabled.getter();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v0, v8);
  if (v13)
  {
    if (v3) {
      *id v1 = v3;
    }
    sub_100014FB8();
    v15();
    sub_10003FA10();
    sub_10003F8F8();
    sub_1000205E8();
    v16();
    uint64_t v17 = *(void **)&v0[OBJC_IVAR___WFMainViewController_database];
    id v18 = objc_allocWithZone((Class)type metadata accessor for WFCollectionConfigurationViewController());
    id v19 = v3;
    id v20 = v17;
    sub_10003FA60();
    WFCollectionConfigurationViewController.init(mode:updatingWithDatabase:)();
    sub_100021EF8();
    objc_allocWithZone((Class)type metadata accessor for WFPreviewNavigationController());
    id v21 = v18;
    uint64_t v22 = (void *)WFPreviewNavigationController.init(rootViewController:isInSheetView:)();
    sub_10003F92C(v36, "presentViewController:animated:completion:", (uint64_t)v22);

    sub_10001B6B8();
    v23();
  }
  else
  {
    if (v3)
    {
      [v3 glyphCharacter];
      id v14 = v3;
    }
    else
    {
      [self defaultGlyphCharacter];
      id v14 = 0;
    }
    id v24 = v14;
    NameIconComposeViewController.Mode.init(_:)();
    id v25 = objc_allocWithZone((Class)type metadata accessor for NameIconComposeViewController());
    id v26 = (void *)NameIconComposeViewController.init(_:glyphCharacter:)();
    sub_1000119DC(&qword_1000F51A8, (void (*)(uint64_t))type metadata accessor for MainViewController);
    swift_unknownObjectRetain();
    dispatch thunk of NameIconComposeViewController.delegate.setter();
    if (v3)
    {
      id v27 = v26;
      id v28 = [v24 name];
    }
    else
    {
      char v29 = self;
      id v30 = v26;
      id v28 = [v29 defaultName];
    }
    id v31 = v28;
    uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v34 = v33;

    sub_10002AF58(v32, v34, v26);
    id v35 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v26];
    [v35 setModalPresentationStyle:2];
    sub_10003F92C(v36, "presentViewController:animated:completion:", (uint64_t)v35);
  }
  sub_10001885C();
}

void sub_1000373F8()
{
  uint64_t v2 = v0;
  sub_100021EF8();
  type metadata accessor for AggregatedEntry();
  sub_100022284();
  __chkstk_darwin(v3);
  sub_100021FC4();
  (*(void (**)(uint64_t, void *))(v4 + 16))(v1, v0);
  id v5 = objc_allocWithZone((Class)type metadata accessor for AddToHomeScreenViewController());
  uint64_t v6 = (void *)AddToHomeScreenViewController.init(aggregatedEntry:)();
  id v7 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v6];
  sub_10003F92C(v2, "presentViewController:animated:completion:", (uint64_t)v7);
}

void *sub_100037554()
{
  uint64_t v2 = v0;
  v55.receiver = v0;
  v55.super_class = (Class)type metadata accessor for MainViewController(0);
  [super keyCommands];
  if (v3)
  {
    uint64_t v4 = v3;
    sub_100029C7C(0, &qword_1000F5258);
    sub_100019868();
    id v5 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    id v5 = _swiftEmptyArrayStorage;
  }
  unint64_t v56 = (unint64_t)v5;
  id v6 = [v2 presentedViewController];

  if (!v6)
  {
    sub_100029C7C(0, &qword_1000F5258);
    NSString v7 = sub_100024630();
    String._bridgeToObjectiveC()();
    id v8 = sub_1000240B0();

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v9 = (id)sub_100029394();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    sub_10003F70C();
    if (v10) {
      sub_1000150B4();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    NSString v11 = sub_1000223FC();
    String._bridgeToObjectiveC()();
    id v12 = sub_10001C0B4();

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_100025D60();
    sub_10002A034();
    id v13 = (id)sub_100029394();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    sub_10001FADC();
    if (v10) {
      sub_1000150B4();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    sub_10002A5F4();
    NSString v14 = String._bridgeToObjectiveC()();
    sub_1000223FC();
    id v15 = sub_10001C0B4();

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_100025D60();
    sub_10002A034();
    id v16 = (id)sub_100029394();
    sub_100021638();
    sub_10001FADC();
    if (v10) {
      sub_1000150B4();
    }
    id v54 = v15;
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    NSString v17 = String._bridgeToObjectiveC()();
    sub_1000223FC();
    id v18 = sub_10001C0B4();

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_100025D60();
    sub_10002A034();
    id v19 = (id)sub_100029394();
    sub_100021638();
    sub_10001FADC();
    if (v10) {
      sub_1000150B4();
    }
    uint64_t v53 = v18;
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    NSString v20 = String._bridgeToObjectiveC()();
    sub_1000223FC();
    id v21 = sub_10001C0B4();

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_100025D60();
    sub_100020500();
    uint64_t v22 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
    [v22 setWantsPriorityOverSystemBehavior:1 _swiftEmptyArrayStorage:0, 0, 0, 0];
    id v23 = v22;
    sub_100021638();
    sub_10001FADC();
    if (v10) {
      sub_1000150B4();
    }
    uint64_t v52 = v21;
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    NSString v24 = sub_100024630();
    sub_1000223FC();
    id v25 = sub_10001C0B4();

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_100025D60();
    sub_100020500();
    id v26 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
    [v26 setWantsPriorityOverSystemBehavior:1];
    id v27 = v26;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    sub_10001FADC();
    if (v10) {
      sub_1000150B4();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    id v28 = [v2 traitCollection];
    id v29 = [v28 horizontalSizeClass];

    if (v29 == (id)2)
    {
      NSString v30 = sub_100024630();
      sub_1000223FC();
      id v31 = sub_10001C0B4();

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_100025D60();
      sub_10002A034();
      UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      sub_10003F70C();
      if (v10) {
        sub_1000150B4();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    uint64_t v32 = (char *)sub_10001A1FC();
    id v33 = *(id *)&v32[OBJC_IVAR___WFSidebarViewController_database];

    id v34 = [v33 sortedVisibleFolders];
    uint64_t v35 = (uint64_t)[v34 count];

    if (v35 >= 1)
    {
      id v51 = v13;
      NSString v36 = sub_100024630();
      sub_1000223FC();
      id v37 = sub_10001C0B4();

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      dispatch thunk of CustomStringConvertible.description.getter();
      sub_100025B5C();
      sub_100010174();
      sub_100021638();
      if (*(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1000150B4();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      for (uint64_t i = 2; i != 9; ++i)
      {
        dispatch thunk of CustomStringConvertible.description.getter();
        sub_100025B5C();
        sub_100010174();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1000150B4();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      sub_10002A5F4();
      NSString v39 = String._bridgeToObjectiveC()();
      sub_1000223FC();
      id v40 = sub_10001C0B4();

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      dispatch thunk of CustomStringConvertible.description.getter();
      sub_100025B5C();
      uint64_t v35 = sub_100010174();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      sub_10003F70C();
      id v13 = v51;
      if (v10) {
        sub_1000150B4();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    uint64_t v41 = (void *)sub_100031964();

    if (v41)
    {
      NSString v42 = String._bridgeToObjectiveC()();
      sub_1000223FC();
      id v43 = sub_10001C0B4();

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v45 = v44;

      sub_10002A034();
      id v46 = (id)sub_100010174();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      sub_10001FADC();
      if (v10) {
        sub_1000150B4();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      NSString v47 = String._bridgeToObjectiveC()();
      sub_1000223FC();
      id v48 = sub_10001C0B4();

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_100025D60();
      sub_10002A034();
      id v49 = (id)sub_100010174();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      sub_10001FADC();
      if (v10) {
        sub_1000150B4();
      }
      sub_100021F6C();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    return (void *)v56;
  }
  return v5;
}

void sub_100037F18()
{
}

uint64_t sub_100037F68()
{
  return sub_100037FC8();
}

uint64_t sub_100037FBC()
{
  return sub_100037FC8();
}

uint64_t sub_100037FC8()
{
  type metadata accessor for RootNavigationDestination();
  sub_100022284();
  __chkstk_darwin(v0);
  sub_10002206C();
  sub_100014FB8();
  v1();
  type metadata accessor for MainViewController(0);
  sub_1000119DC(&qword_1000F50F8, (void (*)(uint64_t))type metadata accessor for MainViewController);
  sub_100014FE4();
  RootView.navigate(to:)();
  uint64_t v2 = sub_100018D14();
  return v3(v2);
}

uint64_t sub_100038100()
{
  type metadata accessor for RootNavigationDestination();
  sub_100022284();
  __chkstk_darwin(v0);
  sub_100021FC4();
  type metadata accessor for GalleryNavigationDestination();
  sub_10001C094();
  uint64_t v1 = sub_10003F840();
  v2(v1);
  sub_10003FA28();
  sub_100014FB8();
  v3();
  sub_100024044();
  sub_1000119DC(&qword_1000F50F8, (void (*)(uint64_t))type metadata accessor for MainViewController);
  sub_100026240();
  uint64_t v4 = sub_100021F6C();
  return v5(v4);
}

void sub_100038264()
{
  sub_10002066C();
  id v4 = v3;
  uint64_t v5 = sub_100025A08(&qword_1000F5128);
  uint64_t v6 = sub_1000165CC(v5);
  __chkstk_darwin(v6);
  sub_1000167F4();
  uint64_t v60 = v7;
  type metadata accessor for RootNavigationDestination();
  sub_100022284();
  __chkstk_darwin(v8);
  sub_100021FDC();
  uint64_t v9 = type metadata accessor for RootNavigationContext.TransitionType();
  uint64_t v10 = sub_1000165CC(v9);
  __chkstk_darwin(v10);
  sub_100018874();
  uint64_t v11 = sub_100025A08(&qword_1000F50B8);
  uint64_t v12 = sub_1000165CC(v11);
  __chkstk_darwin(v12);
  uint64_t v13 = sub_10003F764();
  sub_100022284();
  uint64_t v59 = v14;
  __chkstk_darwin(v15);
  sub_1000165D8();
  uint64_t v16 = sub_10003ECCC(v4);
  if (!v17) {
    goto LABEL_44;
  }
  uint64_t v18 = v17;
  uint64_t v19 = HIBYTE(v17) & 0xF;
  uint64_t v20 = v16 & 0xFFFFFFFFFFFFLL;
  if ((v18 & 0x2000000000000000) != 0) {
    uint64_t v21 = v19;
  }
  else {
    uint64_t v21 = v16 & 0xFFFFFFFFFFFFLL;
  }
  if (v21)
  {
    if ((v18 & 0x1000000000000000) != 0)
    {
      uint64_t v23 = (uint64_t)sub_10003E314(v16, v18, 10);
      LOBYTE(v4) = v58;
      goto LABEL_36;
    }
    if ((v18 & 0x2000000000000000) == 0)
    {
      if ((v16 & 0x1000000000000000) != 0) {
        uint64_t v22 = (unsigned __int8 *)((v18 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v22 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
      }
      uint64_t v23 = (uint64_t)sub_10003E3FC(v22, v20, 10);
      LOBYTE(v4) = v24 & 1;
LABEL_36:
      swift_bridgeObjectRelease();
      if (v4)
      {
LABEL_44:
        sub_10001885C();
        return;
      }
      NSString v36 = (char *)sub_10001A1FC();
      id v37 = *(id *)&v36[OBJC_IVAR___WFSidebarViewController_database];

      id v4 = [v37 sortedVisibleFolders];
      if (!v23 || (uint64_t)[v4 count] < v23)
      {

        goto LABEL_44;
      }
      uint64_t v38 = type metadata accessor for RootPPTTestCase();
      sub_10002A674(v2, v39, v40, v38);
      static RootNavigationContext.TransitionType.default.getter();
      RootNavigationContext.init(dismissOccludingViewController:clearSearchState:animateTransition:createAutomation:transitionType:pptTest:)();
      id v41 = [v4 descriptors];
      sub_100029C7C(0, &qword_1000F51A0);
      uint64_t v42 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      BOOL v43 = __OFSUB__(v23, 1);
      unint64_t v44 = v23 - 1;
      if (!v43)
      {
        sub_100089510(v44, (v42 & 0xC000000000000001) == 0, v42);
        if ((v42 & 0xC000000000000001) == 0)
        {
          id v45 = *(id *)(v42 + 8 * v44 + 32);
LABEL_43:
          id v46 = v45;
          swift_bridgeObjectRelease();
          *uint64_t v0 = v46;
          sub_100014FB8();
          v47();
          sub_10003FA10();
          sub_1000205E8();
          v48();
          sub_100021594(v60, 0, 1, v13);
          type metadata accessor for MainViewController(0);
          sub_1000119DC(&qword_1000F50F8, (void (*)(uint64_t))type metadata accessor for MainViewController);
          RootView.navigate(to:with:completion:)();

          sub_100025E44(v60, &qword_1000F5128);
          uint64_t v49 = sub_100026BE0();
          v50(v49);
          (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v1, v13);
          goto LABEL_44;
        }
LABEL_71:
        id v45 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_43;
      }
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
    if (v16 == 43)
    {
      if (!v19) {
        goto LABEL_69;
      }
      if (v19 != 1)
      {
        sub_10003F720();
        if (!(!v29 & v28))
        {
          uint64_t v23 = v31;
          if (v30 == 2) {
            goto LABEL_35;
          }
          sub_10003F720();
          if (!(!v29 & v28))
          {
            uint64_t v23 = 10 * v23 + v33;
            if (v32 != 3)
            {
              while (1)
              {
                sub_10003F830();
                if (!v29 & v28) {
                  goto LABEL_33;
                }
                sub_100018D8C();
                if (!v29) {
                  goto LABEL_33;
                }
                uint64_t v23 = v35 + v34;
                if (__OFADD__(v35, v34)) {
                  goto LABEL_33;
                }
                sub_10001B3EC();
                if (v29) {
                  goto LABEL_36;
                }
              }
            }
            goto LABEL_35;
          }
        }
      }
    }
    else
    {
      if (v16 == 45)
      {
        if (v19)
        {
          if (v19 == 1) {
            goto LABEL_33;
          }
          sub_10003F720();
          if (!v29 & v28) {
            goto LABEL_33;
          }
          if (v26 == 2)
          {
            LOBYTE(v4) = 0;
            uint64_t v23 = -(uint64_t)v27;
            goto LABEL_36;
          }
          if ((v25 - 48) > 9u) {
            goto LABEL_33;
          }
          uint64_t v23 = -10 * v27 - (v25 - 48);
          if (v26 != 3)
          {
            while (1)
            {
              sub_10003F830();
              if (!v29 & v28) {
                goto LABEL_33;
              }
              sub_100018D8C();
              if (!v29) {
                goto LABEL_33;
              }
              uint64_t v23 = v56 - v55;
              if (__OFSUB__(v56, v55)) {
                goto LABEL_33;
              }
              sub_10001B3EC();
              if (v29) {
                goto LABEL_36;
              }
            }
          }
LABEL_35:
          LOBYTE(v4) = 0;
          goto LABEL_36;
        }
        __break(1u);
LABEL_69:
        __break(1u);
        goto LABEL_70;
      }
      if (v19 && (v16 - 48) <= 9u)
      {
        uint64_t v23 = (v16 - 48);
        if (v19 == 1) {
          goto LABEL_35;
        }
        sub_10003F720();
        if (!(!v29 & v28))
        {
          uint64_t v23 = 10 * v23 + v52;
          if (v51 != 2)
          {
            while (1)
            {
              sub_10003F830();
              if (!v29 & v28) {
                goto LABEL_33;
              }
              sub_100018D8C();
              if (!v29) {
                goto LABEL_33;
              }
              uint64_t v23 = v54 + v53;
              if (__OFADD__(v54, v53)) {
                goto LABEL_33;
              }
              sub_10001B3EC();
              if (v29) {
                goto LABEL_36;
              }
            }
          }
          goto LABEL_35;
        }
      }
    }
LABEL_33:
    uint64_t v23 = 0;
    LOBYTE(v4) = 1;
    goto LABEL_36;
  }
  sub_10001885C();
  swift_bridgeObjectRelease();
}

void sub_10003889C()
{
  type metadata accessor for RootNavigationDestination();
  sub_100022284();
  __chkstk_darwin(v1);
  sub_100021FC4();
  uint64_t v2 = (char *)sub_10001A1FC();
  id v3 = *(id *)&v2[OBJC_IVAR___WFSidebarViewController_database];

  id v4 = [v3 sortedVisibleFolders];
  id v5 = [v4 descriptors];

  sub_100029C7C(0, &qword_1000F51A0);
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v7)
    {
LABEL_3:
      BOOL v8 = __OFSUB__(v7, 1);
      unint64_t v9 = v7 - 1;
      if (v8)
      {
        __break(1u);
      }
      else
      {
        sub_100089510(v9, (v6 & 0xC000000000000001) == 0, v6);
        if ((v6 & 0xC000000000000001) == 0)
        {
          id v10 = *(id *)(v6 + 8 * v9 + 32);
LABEL_6:
          uint64_t v11 = v10;
          swift_bridgeObjectRelease();
          *uint64_t v0 = v11;
          sub_100014FB8();
          v12();
          sub_100024044();
          sub_1000119DC(&qword_1000F50F8, (void (*)(uint64_t))type metadata accessor for MainViewController);
          id v13 = v11;
          RootView.navigate(to:)();

          sub_100021F6C();
          sub_100018D08();
          v14();
          sub_10002A68C();
          return;
        }
      }
      sub_10003F7D0();
      id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7) {
      goto LABEL_3;
    }
  }
  sub_10002A68C();
  swift_bridgeObjectRelease();
}

void sub_100038B2C()
{
  sub_10002066C();
  uint64_t v2 = sub_100025A08(&qword_1000F5130);
  uint64_t v3 = sub_1000165CC(v2);
  __chkstk_darwin(v3);
  sub_10003F78C();
  sub_100022284();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1000215DC(v7, v37);
  __chkstk_darwin(v8);
  id v10 = (char *)&v37 - v9;
  uint64_t v11 = (char *)sub_10001A1FC();
  uint64_t v12 = *(void *)&v11[OBJC_IVAR___WFSidebarViewController_sections];
  swift_bridgeObjectRetain();

  uint64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    uint64_t v38 = v1;
    uint64_t v39 = v10;
    uint64_t v40 = v0;
    swift_bridgeObjectRetain();
    uint64_t v14 = v12 + 40;
    uint64_t v15 = _swiftEmptyArrayStorage;
    while (1)
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v16 = dispatch thunk of SidebarSection.destinations.getter();
      swift_unknownObjectRelease();
      uint64_t v17 = *(void *)(v16 + 16);
      uint64_t v18 = v15[2];
      if (__OFADD__(v18, v17)) {
        break;
      }
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (!isUniquelyReferenced_nonNull_native || v18 + v17 > v15[3] >> 1) {
        uint64_t v15 = (void *)sub_1000272B8(isUniquelyReferenced_nonNull_native);
      }
      if (*(void *)(v16 + 16))
      {
        sub_10003F984();
        if (v21 != v22) {
          goto LABEL_33;
        }
        unint64_t v23 = sub_10002A6E4(v20);
        BOOL v25 = v25 || v23 >= v24;
        if (!v25) {
          goto LABEL_37;
        }
        swift_arrayInitWithCopy();
        if (v17)
        {
          uint64_t v26 = v15[2];
          BOOL v22 = __OFADD__(v26, v17);
          uint64_t v27 = v26 + v17;
          if (v22) {
            goto LABEL_34;
          }
          void v15[2] = v27;
        }
      }
      else if (v17)
      {
        goto LABEL_32;
      }
      swift_bridgeObjectRelease();
      v14 += 16;
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        id v10 = v39;
        uint64_t v1 = v38;
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v15 = _swiftEmptyArrayStorage;
LABEL_21:
  swift_bridgeObjectRelease();
  sub_10003F80C();
  sub_100019760(0, v1, &qword_1000F5130);
  sub_1000215BC(v1);
  if (v28)
  {
    swift_bridgeObjectRelease();
    sub_100025E44(v1, &qword_1000F5130);
    goto LABEL_30;
  }
  sub_1000234DC();
  v29();
  uint64_t v30 = sub_100038E64((uint64_t)v10, (uint64_t)v15);
  if (v31)
  {
LABEL_29:
    sub_100023570();
    v36();
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  uint64_t v32 = v30 + 1;
  if (!__OFADD__(v30, 1))
  {
    if (v32 < v15[2])
    {
      if (v32 < 0) {
        goto LABEL_36;
      }
      uint64_t v33 = sub_100027B74();
      v34(v33);
      swift_bridgeObjectRelease();
      sub_100024044();
      sub_1000119DC(&qword_1000F50F8, (void (*)(uint64_t))type metadata accessor for MainViewController);
      RootView.navigate(to:)();
      uint64_t v35 = *(void (**)(void))(v5 + 8);
      sub_100023570();
      v35();
      sub_100023570();
      v35();
LABEL_30:
      sub_10001885C();
      return;
    }
    goto LABEL_29;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  sub_1000205F4();
  sub_100023580();
  __break(1u);
}

uint64_t sub_100038E64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v4 = *(void *)(type metadata accessor for RootNavigationDestination() - 8);
  uint64_t v5 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = *(void *)(v4 + 72);
  sub_1000119DC(&qword_1000F5198, (void (*)(uint64_t))&type metadata accessor for RootNavigationDestination);
  uint64_t v7 = 0;
  while ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
  {
    ++v7;
    v5 += v6;
    if (v2 == v7) {
      return 0;
    }
  }
  return v7;
}

void sub_100038FD0()
{
  sub_10002066C();
  uint64_t v2 = sub_100025A08(&qword_1000F5130);
  uint64_t v3 = sub_1000165CC(v2);
  __chkstk_darwin(v3);
  sub_10003F78C();
  sub_100022284();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1000215DC(v7, v36);
  __chkstk_darwin(v8);
  id v10 = (char *)&v36 - v9;
  uint64_t v11 = (char *)sub_10001A1FC();
  uint64_t v12 = *(void *)&v11[OBJC_IVAR___WFSidebarViewController_sections];
  swift_bridgeObjectRetain();

  uint64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    uint64_t v37 = v1;
    uint64_t v38 = v10;
    uint64_t v39 = v0;
    swift_bridgeObjectRetain();
    uint64_t v14 = v12 + 40;
    uint64_t v15 = _swiftEmptyArrayStorage;
    while (1)
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v16 = dispatch thunk of SidebarSection.destinations.getter();
      swift_unknownObjectRelease();
      uint64_t v17 = *(void *)(v16 + 16);
      uint64_t v18 = v15[2];
      if (__OFADD__(v18, v17)) {
        break;
      }
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (!isUniquelyReferenced_nonNull_native || v18 + v17 > v15[3] >> 1) {
        uint64_t v15 = (void *)sub_1000272B8(isUniquelyReferenced_nonNull_native);
      }
      if (*(void *)(v16 + 16))
      {
        sub_10003F984();
        if (v21 != v22) {
          goto LABEL_32;
        }
        unint64_t v23 = sub_10002A6E4(v20);
        BOOL v25 = v25 || v23 >= v24;
        if (!v25) {
          goto LABEL_35;
        }
        swift_arrayInitWithCopy();
        if (v17)
        {
          uint64_t v26 = v15[2];
          BOOL v22 = __OFADD__(v26, v17);
          uint64_t v27 = v26 + v17;
          if (v22) {
            goto LABEL_33;
          }
          void v15[2] = v27;
        }
      }
      else if (v17)
      {
        goto LABEL_31;
      }
      swift_bridgeObjectRelease();
      v14 += 16;
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        id v10 = v38;
        uint64_t v1 = v37;
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v15 = _swiftEmptyArrayStorage;
LABEL_21:
  swift_bridgeObjectRelease();
  sub_10003F80C();
  sub_100019760(0, v1, &qword_1000F5130);
  sub_1000215BC(v1);
  if (v28)
  {
    swift_bridgeObjectRelease();
    sub_100025E44(v1, &qword_1000F5130);
LABEL_29:
    sub_10001885C();
    return;
  }
  sub_1000234DC();
  v29();
  uint64_t v30 = sub_100038E64((uint64_t)v10, (uint64_t)v15);
  if ((v31 & 1) != 0 || v30 < 1)
  {
    sub_100023570();
    v35();
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  if ((unint64_t)(v30 - 1) < v15[2])
  {
    uint64_t v32 = sub_100027B74();
    v33(v32);
    swift_bridgeObjectRelease();
    sub_100024044();
    sub_1000119DC(&qword_1000F50F8, (void (*)(uint64_t))type metadata accessor for MainViewController);
    RootView.navigate(to:)();
    unsigned __int8 v34 = *(void (**)(void))(v5 + 8);
    sub_100023570();
    v34();
    sub_100023570();
    v34();
    goto LABEL_29;
  }
LABEL_34:
  __break(1u);
LABEL_35:
  sub_1000205F4();
  sub_100023580();
  __break(1u);
}

void sub_100039348()
{
}

void sub_1000393A8()
{
}

void sub_1000393C0(void (*a1)(void))
{
  uint64_t v2 = sub_100031964();
  if (v2)
  {
    id v3 = (id)v2;
    a1();
  }
}

id sub_10003946C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___WFMainViewController_splitView);
  id v2 = [v1 displayMode];
  id v3 = &selRef_showColumn_;
  if (v2 != (id)1) {
    id v3 = &selRef_hideColumn_;
  }
  uint64_t v4 = *v3;

  return [v1 v4];
}

void sub_100039520()
{
}

id sub_100039578()
{
  return sub_10003DB44(type metadata accessor for MainViewController);
}

void (*sub_1000396D4(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_100039734;
}

void sub_100039734(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_10000E5F8();
  }
}

id sub_100039780(uint64_t a1, uint64_t a2)
{
  return [v2 runWorkflowFromState:a1 source:a2];
}

uint64_t sub_1000397AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RootView.deleteCollections(_:alertCustomizationBlock:completion:)(a1, a2, a3, a4, a5, a6, WitnessTable);
}

uint64_t sub_100039844(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RootView.createWorkflow(for:)(a1, a2, WitnessTable);
}

uint64_t sub_1000398A8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RootView.navigateToFolder(_:)(a1, a2, WitnessTable);
}

uint64_t sub_100039908(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RootView.navigateToAutoShortcutApp(_:)(a1, a2, WitnessTable);
}

uint64_t sub_100039968(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return RootView.renameObject(_:)(a1, a2, WitnessTable);
}

uint64_t sub_1000399C8()
{
  swift_getWitnessTable();

  return RootView.navigate(to:)();
}

uint64_t sub_100039A28(void *a1)
{
  return sub_1000328A4(a1);
}

void sub_100039A4C()
{
}

void sub_100039A70()
{
  sub_10002066C();
  id v3 = v2;
  uint64_t v5 = v4;
  id v64 = v6;
  type metadata accessor for Logger();
  sub_100022284();
  uint64_t v62 = v8;
  uint64_t v63 = v7;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  sub_10003F918();
  type metadata accessor for NameIconComposeViewController.Mode();
  sub_100022284();
  __chkstk_darwin(v12);
  sub_100021DD8();
  sub_1000205E8();
  v13();
  sub_100021DB4();
  int v15 = v14();
  if (v15 == enum case for NameIconComposeViewController.Mode.create(_:))
  {
    uint64_t v16 = sub_100019874();
    v17(v16);
    swift_bridgeObjectRelease();
    uint64_t v18 = *(void **)(v1 + OBJC_IVAR___WFMainViewController_database);
    if (v5) {
      NSString v19 = String._bridgeToObjectiveC()();
    }
    else {
      NSString v19 = 0;
    }
    id v25 = [v3 glyphCharacter];
    v66[0] = 0;
    id v26 = [v18 createFolderWithName:v19 icon:v25 error:v66];

    if (v26)
    {
      id v27 = v66[0];

      [v64 dismissViewControllerAnimated:1 completion:0];
      id v28 = [objc_allocWithZone((Class)WFCreateFolderEvent) init];
      sub_1000287FC(0x4272616265646953, 0xED00006E6F747475, v28, (SEL *)&selRef_setFolderSource_);
      [v28 setIcon:[v3 glyphCharacter]];
      [v28 track];

LABEL_22:
      sub_10001885C();
      return;
    }
    id v29 = v66[0];
    uint64_t v30 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
    v66[0] = v30;
    sub_100025A08(&qword_1000F5080);
    sub_100029C7C(0, &qword_1000F5088);
    sub_100022614();
    char v31 = v65;
    static WFLog.subscript.getter();
    uint64_t v32 = v31;
    uint64_t v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (_DWORD *)sub_100021F04();
      uint64_t v36 = (void *)swift_slowAlloc();
      _DWORD *v35 = 138543362;
      id v37 = sub_10003F8AC();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v36 = v32;

      sub_10003FA6C((void *)&_mh_execute_header, v38, v39, "An error occurred while creating a folder from the sidebar: %{public}@");
      sub_100025A08(&qword_1000F5098);
      swift_arrayDestroy();
      sub_100021DC0();
      sub_100021DC0();
    }
    else
    {

      uint64_t v33 = v32;
    }

    sub_10003F7D0();
    sub_100016618();
    v53();
    (id)WFUserInterfaceFromViewController();
    sub_100029C7C(0, &qword_1000F5090);
    uint64_t v54 = v32;
    id v55 = sub_1000329D0();
    sub_100022510((uint64_t)v55, "presentAlert:");

    swift_unknownObjectRelease();
    goto LABEL_21;
  }
  if (v15 == enum case for NameIconComposeViewController.Mode.update(_:))
  {
    uint64_t v20 = sub_100019874();
    v21(v20);
    BOOL v22 = *v0;
    unint64_t v23 = *(void **)(v1 + OBJC_IVAR___WFMainViewController_database);
    if (v5) {
      NSString v24 = String._bridgeToObjectiveC()();
    }
    else {
      NSString v24 = 0;
    }
    id v40 = [v3 glyphCharacter];
    v66[0] = 0;
    id v41 = [v23 updateFolder:v22 newName:v24 newIcon:v40 error:v66];

    if (v41)
    {
      id v42 = v66[0];

      [v64 dismissViewControllerAnimated:1 completion:0];
      goto LABEL_22;
    }
    id v43 = v66[0];
    unint64_t v44 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
    v66[0] = v44;
    sub_100025A08(&qword_1000F5080);
    sub_100029C7C(0, &qword_1000F5088);
    sub_100022614();
    id v45 = v65;
    static WFLog.subscript.getter();
    id v46 = v45;
    NSString v47 = Logger.logObject.getter();
    os_log_type_t v48 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = (_DWORD *)sub_100021F04();
      id v61 = (void *)swift_slowAlloc();
      *uint64_t v49 = 138543362;
      id v50 = sub_10003F8AC();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v61 = v46;

      sub_10003FA6C((void *)&_mh_execute_header, v51, v52, "An error occurred while updating a folder from the sidebar: %{public}@");
      sub_100025A08(&qword_1000F5098);
      swift_arrayDestroy();
      sub_100021DC0();
      sub_100021DC0();
    }
    else
    {

      NSString v47 = v46;
    }
    uint64_t v56 = v63;
    uint64_t v57 = v62;

    (*(void (**)(char *, uint64_t))(v57 + 8))(v11, v56);
    (id)WFUserInterfaceFromViewController();
    sub_100029C7C(0, &qword_1000F5090);
    char v58 = v46;
    id v59 = sub_1000329D0();
    sub_100022510((uint64_t)v59, "presentAlert:");

    swift_unknownObjectRelease();
LABEL_21:
    swift_errorRelease();
    goto LABEL_22;
  }
  _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
}

id sub_10003A148(void *a1)
{
  return [a1 dismissViewControllerAnimated:1 completion:0];
}

id sub_10003A15C(void *a1)
{
  return sub_10003A148(a1);
}

void sub_10003A178()
{
  sub_10002066C();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = sub_100025A08(&qword_1000F5128);
  uint64_t v8 = sub_1000165CC(v7);
  __chkstk_darwin(v8);
  sub_100015030();
  uint64_t v9 = type metadata accessor for RootNavigationContext.TransitionType();
  uint64_t v10 = sub_1000165CC(v9);
  __chkstk_darwin(v10);
  sub_1000074A4();
  uint64_t v11 = sub_100025A08(&qword_1000F50B8);
  uint64_t v12 = sub_1000165CC(v11);
  __chkstk_darwin(v12);
  uint64_t v13 = sub_10003F764();
  sub_100022284();
  __chkstk_darwin(v14);
  sub_1000204E8();
  self;
  sub_10003FA60();
  uint64_t v15 = swift_dynamicCastObjCClass();
  if (v15)
  {
    uint64_t v16 = (void *)v15;
    id v17 = v4;
    id v18 = [v16 topViewController];
    if (v18)
    {
      NSString v19 = v18;
      uint64_t v36 = v13;
      uint64_t v37 = v0;
      id v20 = [v6 selectedViewController];
      if (!v20) {
        goto LABEL_8;
      }
      char v21 = v20;
      sub_100029C7C(0, &qword_1000F50A0);
      id v22 = v17;
      id v23 = v17;
      id v24 = v21;
      char v25 = static NSObject.== infix(_:_:)();

      id v17 = v23;
      if (v25)
      {
        uint64_t v26 = swift_dynamicCastObjCProtocolConditional();
        if (v26)
        {
          id v27 = (void *)v26;
          id v28 = v19;
          [v27 scrollForNavigationTap];
        }
        else
        {
        }
      }
      else
      {
LABEL_8:
        uint64_t v29 = type metadata accessor for RootPPTTestCase();
        sub_10002A674(v2, v30, v31, v29);
        static RootNavigationContext.TransitionType.default.getter();
        sub_10001681C();
        RootNavigationContext.init(dismissOccludingViewController:clearSearchState:animateTransition:createAutomation:transitionType:pptTest:)();
        uint64_t v32 = *(void **)(v37 + OBJC_IVAR___WFMainViewController_content);
        sub_10003FA10();
        sub_10003FA1C();
        sub_1000205E8();
        v33();
        sub_100021594(v1, 0, 1, v36);
        id v34 = v32;
        sub_10003FA8C();
        sub_10001A228();

        sub_100025E44(v1, &qword_1000F5128);
        sub_10001B6B8();
        v35();
      }
    }
    else
    {
    }
  }
  sub_10001885C();
}

void sub_10003A4DC()
{
  sub_10002066C();
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for RootNavigationDestination();
  sub_100022284();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_100021FC4();
  uint64_t v9 = sub_100025A08(&qword_1000F5128);
  uint64_t v10 = sub_1000165CC(v9);
  __chkstk_darwin(v10);
  sub_10002206C();
  uint64_t v11 = sub_100025A08(&qword_1000F5130);
  uint64_t v12 = sub_1000165CC(v11);
  __chkstk_darwin(v12);
  sub_1000074A4();
  id v13 = [v4 tabBarItem];
  if (v13)
  {
    uint64_t v14 = v13;
    id v15 = [v13 tag];

    if (v15 == (id)2)
    {
      type metadata accessor for GalleryNavigationDestination();
      sub_10001C094();
      uint64_t v25 = sub_10003F840();
      v26(v25);
      sub_10003FA28();
    }
    else if (v15 != (id)1)
    {
      if (v15)
      {
LABEL_16:
        sub_10001885C();
        return;
      }
      self;
      uint64_t v16 = swift_dynamicCastObjCClass();
      if (v16)
      {
        id v17 = (void *)v16;
        id v18 = v4;
        id v19 = [v17 topViewController];
        if (v19)
        {
          id v20 = v19;
          type metadata accessor for LibraryViewController();
          sub_10003FA60();
          if (swift_dynamicCastClass())
          {
            if (*(unsigned char *)(v0 + OBJC_IVAR___WFMainViewController_display)) {
              char v21 = (unsigned int *)&enum case for RootNavigationDestination.shortcuts(_:);
            }
            else {
              char v21 = (unsigned int *)&enum case for RootNavigationDestination.allShortcuts(_:);
            }
            (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v2, *v21, v5);
            sub_1000197FC();
            sub_100004D64(v2);
            uint64_t v22 = type metadata accessor for RootNavigationContext();
            sub_10002A674(v1, v23, v24, v22);
            sub_100019124();

            sub_100025E44(v1, &qword_1000F5128);
            goto LABEL_16;
          }
        }
        sub_100014FB8();
        v30();
        sub_100024044();
        sub_1000119DC(&qword_1000F50F8, (void (*)(uint64_t))type metadata accessor for MainViewController);
        sub_100026240();

        goto LABEL_15;
      }
    }
    sub_100014FB8();
    v27();
    sub_100024044();
    sub_1000119DC(&qword_1000F50F8, (void (*)(uint64_t))type metadata accessor for MainViewController);
    sub_100026240();
LABEL_15:
    uint64_t v28 = sub_10003F9E8();
    v29(v28);
    goto LABEL_16;
  }
  __break(1u);
}

void sub_10003A894()
{
  uint64_t v1 = sub_100025A08(&qword_1000F5120);
  uint64_t v2 = sub_1000165CC(v1);
  __chkstk_darwin(v2);
  sub_100025A98();
  type metadata accessor for IndexPath();
  sub_100022284();
  __chkstk_darwin(v3);
  sub_10002206C();
  uint64_t v4 = sub_100031964();
  if (!v4) {
    goto LABEL_8;
  }
  uint64_t v5 = (void *)v4;
  sub_100021E68();
  sub_1000AADBC();
  swift_release();
  sub_1000215BC(v0);
  if (v6)
  {

    sub_100025E44(v0, &qword_1000F5120);
LABEL_8:
    id v14 = (id)WFUserInterfaceFromViewController();
    goto LABEL_9;
  }
  sub_1000234DC();
  v7();
  id v8 = sub_100026038();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v10 = [v8 cellForItemAtIndexPath:isa];

  if (!v10)
  {
    sub_100029108();
    v13();

    goto LABEL_8;
  }
  sub_10003F7DC();
  id v11 = (id)WFUserInterfaceFromView();

  sub_100029108();
  v12();
LABEL_9:
  sub_10002A68C();
}

void sub_10003AABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_10002066C();
  a19 = v21;
  a20 = v22;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  type metadata accessor for OpenWorkflowOptions();
  sub_100022284();
  __chkstk_darwin(v27);
  sub_10002206C();
  uint64_t v28 = sub_100025A08(&qword_1000F5118);
  uint64_t v29 = sub_1000165CC(v28);
  __chkstk_darwin(v29);
  sub_10002266C();
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&a9 - v31;
  if (v24)
  {
    swift_bridgeObjectRetain();
    OpenWorkflowOptions.ActionError.init(actionIndex:message:)();
    uint64_t v33 = type metadata accessor for OpenWorkflowOptions.ActionError();
    uint64_t v34 = 0;
  }
  else
  {
    uint64_t v33 = type metadata accessor for OpenWorkflowOptions.ActionError();
    uint64_t v34 = 1;
  }
  sub_100021594((uint64_t)v32, v34, 1, v33);
  sub_100019760((uint64_t)v32, v20, &qword_1000F5118);
  OpenWorkflowOptions.init(scrolledToActionIndex:actionError:isNewWorkflow:showIconPicker:onOpen:)();
  sub_1000328A4(v26);
  swift_unknownObjectRelease();
  sub_100014FE4();
  sub_10001B6B8();
  v35();
  sub_100025E44((uint64_t)v32, &qword_1000F5118);
  sub_10001885C();
}

#error "10003ACB8: call analysis failed (funcsize=43)"

uint64_t sub_10003ACF0()
{
  return WFPresentWorkflowSettingsViewController();
}

void sub_10003ADA4()
{
  NSString v0 = String._bridgeToObjectiveC()();
  WFPostAccessibilityAnnouncement();
}

void sub_10003AE5C(void *a1, void *a2)
{
  uint64_t v5 = sub_10001B6E8();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = v2;
  v9[4] = sub_10003ED70;
  v9[5] = v5;
  v9[0] = _NSConcreteStackBlock;
  sub_10003F9C4();
  v9[2] = sub_10000E51C;
  void v9[3] = &unk_1000E5428;
  char v6 = _Block_copy(v9);
  id v7 = a2;
  id v8 = v2;
  swift_release();
  [a1 dismissViewControllerAnimated:1 completion:v9[0]];
  _Block_release(v6);
}

uint64_t sub_10003AF3C(void *a1)
{
  uint64_t result = (uint64_t)[a1 isDeleted];
  if ((result & 1) == 0)
  {
    type metadata accessor for MainViewController(0);
    sub_1000119DC(&qword_1000F5050, (void (*)(uint64_t))type metadata accessor for MainViewController);
    WorkflowOpener.openWorkflow(_:)();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_10003AFE0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    v6[4] = a3;
    v6[5] = a4;
    v6[0] = _NSConcreteStackBlock;
    sub_10003F9C4();
    void v6[2] = sub_10000E51C;
    v6[3] = &unk_1000E5540;
    uint64_t v5 = _Block_copy(v6);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v5 = 0;
  }
  [a1 dismissViewControllerAnimated:1 completion:v5, v6[0]];
  _Block_release(v5);
}

uint64_t sub_10003B168()
{
  return swift_unknownObjectRelease();
}

void sub_10003B258(uint64_t a1, uint64_t a2, char a3)
{
  type metadata accessor for Logger();
  sub_100022284();
  __chkstk_darwin(v5);
  sub_1000204E8();
  static WFLog.subscript.getter();
  id v6 = v3;
  id v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    char v20 = a3;
    uint64_t v9 = swift_slowAlloc();
    sub_100025D78();
    *(_DWORD *)uint64_t v9 = 134349570;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v9 + 12) = 1026;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v9 + 18) = 2080;
    id v10 = (void *)sub_100031964();
    if (v10)
    {
      id v11 = v10;
      id v12 = [v10 description];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    uint64_t v14 = sub_100022F5C();
    sub_10002D53C(v14, v15, v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Running state did change with progress: %{public}f waiting: %{BOOL,public}d visibleLibrary: %s", (uint8_t *)v9, 0x1Cu);
    swift_arrayDestroy();
    sub_100021DC0();
    sub_100021DC0();

    sub_10001B6B8();
    v17();
    a3 = v20;
  }
  else
  {

    sub_10001B6B8();
    v13();
  }
  uint64_t v18 = sub_100031964();
  if (v18)
  {
    id v19 = (void *)v18;
    sub_100064C38(a3 & 1);
  }
}

void sub_10003B590()
{
  sub_10002066C();
  uint64_t v3 = v2;
  uint64_t v4 = sub_100025A08(&qword_1000F5100);
  uint64_t v5 = sub_1000165CC(v4);
  __chkstk_darwin(v5);
  sub_10003F748();
  type metadata accessor for Logger();
  sub_100022284();
  __chkstk_darwin(v6);
  sub_1000074A4();
  if (v3)
  {
    id v7 = (void *)_convertErrorToNSError(_:)();
    [v7 wf_isUserCancelledError];
  }
  static WFLog.subscript.getter();
  id v8 = v0;
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v27 = v3;
    uint64_t v28 = v1;
    uint64_t v11 = swift_slowAlloc();
    sub_100025D78();
    *(_DWORD *)uint64_t v11 = 67109378;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 8) = 2080;
    id v12 = (void *)sub_100031964();
    if (v12)
    {
      id v13 = v12;
      id v14 = [v12 description];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    uint64_t v16 = sub_10003F7DC();
    sub_10002D53C(v16, v17, v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Did finish running workflow cancelled: %{BOOL}d visibleLibrary: %s", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    sub_100021DC0();
    sub_100021DC0();

    sub_1000242F8();
    v19();
    uint64_t v3 = v27;
    uint64_t v1 = v28;
  }
  else
  {

    sub_1000242F8();
    v15();
  }
  uint64_t v20 = sub_100031964();
  if (v20)
  {
    uint64_t v21 = (void *)v20;
    sub_10001EEA8();
  }
  if (!v3)
  {
    uint64_t v22 = (void *)sub_100031964();

    if (v22)
    {
      uint64_t v23 = type metadata accessor for TaskPriority();
      sub_100021594(v1, 1, 1, v23);
      type metadata accessor for MainActor();
      id v24 = v8;
      uint64_t v25 = static MainActor.shared.getter();
      uint64_t v26 = (void *)swift_allocObject();
      v26[2] = v25;
      v26[3] = &protocol witness table for MainActor;
      v26[4] = v24;
      sub_10002B210(v1, (uint64_t)&unk_1000F5110, (uint64_t)v26);
      swift_release();
    }
  }
  sub_10001885C();
}

uint64_t sub_10003B8D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  type metadata accessor for MainActor();
  v4[3] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[4] = v6;
  v4[5] = v5;
  return _swift_task_switch(sub_10003B96C, v6, v5);
}

uint64_t sub_10003B96C()
{
  sub_10002348C();
  id v1 = [*(id *)(v0 + 16) view];
  if (v1)
  {
    uint64_t v2 = v1;
    type metadata accessor for AppStorePromptController();
    id v3 = [v2 window];

    *(void *)(v0 + 48) = [v3 windowScene];
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 56) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_10003BA88;
    id v1 = (id)sub_100029CD8();
  }
  else
  {
    __break(1u);
  }
  return static AppStorePromptController.presentReviewPromptIfNeeded(in:database:)(v1);
}

uint64_t sub_10003BA88()
{
  sub_10002348C();
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 48);
  uint64_t v3 = *v0;
  sub_10001988C();
  *uint64_t v4 = v3;
  swift_task_dealloc();

  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t v6 = *(void *)(v1 + 32);
  return _swift_task_switch(sub_10003BBC0, v6, v5);
}

uint64_t sub_10003BBC0()
{
  swift_release();
  sub_100022638();
  return v0();
}

void sub_10003BCA4()
{
  sub_10002066C();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for Logger();
  sub_100022284();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_10002266C();
  __chkstk_darwin(v11);
  id v13 = (char *)&v28 - v12;
  id v14 = [v6 workflow];
  if (v14)
  {
    unint64_t v15 = v14;
    uint64_t v16 = *(void **)&v2[OBJC_IVAR___WFMainViewController_runCoordinator];
    id v17 = [v16 runningWorkflow];

    if (v17)
    {
      static WFLog.subscript.getter();
      uint64_t v18 = Logger.logObject.getter();
      os_log_type_t v19 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = (uint8_t *)sub_100018804();
        uint64_t v29 = v7;
        *(_WORD *)uint64_t v20 = 0;
        _os_log_impl((void *)&_mh_execute_header, v18, v19, "Received incoming workflow to run, but a workflow is already running. Stopping that one.", v20, 2u);
        uint64_t v7 = v29;
        sub_100021DC0();
      }

      (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v7);
      [v16 stop];
    }
    id v21 = v4;
    id v22 = v6;
    uint64_t v23 = v2;
    id v24 = v15;
    sub_100036DF0(v23, v23, v24, v4, v22);
  }
  else
  {
    static WFLog.subscript.getter();
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)sub_100018804();
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Received incoming workflow to run, with no reference", v27, 2u);
      sub_100021DC0();
    }

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v7);
  }
  sub_10001885C();
}

id sub_10003BEF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for MainViewController(0);
  sub_1000119DC(&qword_1000F50F8, (void (*)(uint64_t))type metadata accessor for MainViewController);
  RootView.scroll(toWorkflow:animated:)();
  uint64_t v8 = *(void **)(a1 + OBJC_IVAR___WFMainViewController_runCoordinator);

  return [v8 resumeWorkflowReference:a2 fromSource:a3 withState:a4];
}

void sub_10003C034()
{
  type metadata accessor for RootNavigationDestination();
  sub_100022284();
  __chkstk_darwin(v1);
  sub_1000204E8();
  sub_100014FB8();
  v2();
  type metadata accessor for MainViewController(0);
  sub_1000119DC(&qword_1000F50F8, (void (*)(uint64_t))type metadata accessor for MainViewController);
  RootView.navigate(to:)();
  sub_10003F7D0();
  sub_100018D08();
  v3();
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR___WFMainViewController_content);
  if (v4)
  {
    self;
    uint64_t v5 = swift_dynamicCastObjCClass();
    if (v5)
    {
      uint64_t v6 = (void *)v5;
      id v7 = v4;
      sub_100021F6C();
      NSString v8 = String._bridgeToObjectiveC()();
      [v6 flashAutomationForTriggerID:v8];
    }
  }
  sub_10002A68C();
}

uint64_t sub_10003C1FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_10001B6E8();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  type metadata accessor for MainViewController(0);
  sub_1000119DC(&qword_1000F50F8, (void (*)(uint64_t))type metadata accessor for MainViewController);
  swift_retain();
  RootView.importShortcutFile(with:openAfterImport:completion:)();
  sub_10002A68C();
  return swift_release();
}

void sub_10003C2DC(void *a1, char a2, void (*a3)(void *, void *))
{
  if (a2)
  {
    swift_errorRetain();
    uint64_t v6 = 0;
    uint64_t v7 = a1;
  }
  else
  {
    id v8 = a1;
    uint64_t v6 = a1;
    uint64_t v7 = 0;
  }
  a3(v6, v7);

  sub_10003EE84(a1, a2 & 1);
}

void sub_10003C404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

void sub_10003C474(uint64_t a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for GalleryHostingViewController.GalleryHostingController();
  [super setContentScrollView:a1 forEdge:15];
  id v3 = [v1 navigationController];
  id v4 = [v3 topViewController];

  [v4 setContentScrollView:a1 forEdge:15];
}

void sub_10003C55C(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  sub_10003C474((uint64_t)a3);
}

uint64_t sub_10003C5D0(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return sub_10003C604(a1);
}

uint64_t sub_10003C604(uint64_t a1)
{
  uint64_t v3 = *(void *)((swift_isaMask & *v1) + qword_1000F4FB8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v8 - v5, a1, v3);
  uint64_t v6 = UIHostingController.init(rootView:)();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v6;
}

void *sub_10003C728(uint64_t a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return sub_10003C76C(a1, a2);
}

void *sub_10003C76C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)((swift_isaMask & *v2) + qword_1000F4FB8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(a1);
  (*(void (**)(char *))(v5 + 16))((char *)&v11 - v6);
  uint64_t v7 = (void *)UIHostingController.init(coder:rootView:)();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  id v9 = v7;
  v8(a2, v4);
  if (v7) {

  }
  return v7;
}

id sub_10003C8A4(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for GalleryHostingViewController.GalleryHostingController();
  [super initWithCoder:a1];

  return v3;
}

id sub_10003C93C(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_10003C8A4(a3);
}

id sub_10003C964()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GalleryHostingViewController.GalleryHostingController();
  return [super dealloc];
}

void sub_10003C9E0(uint64_t a1, int a2)
{
  id v3 = v2;
  uint64_t v6 = sub_100025A08(&qword_1000F50C0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  id v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v53 - v10;
  uint64_t v12 = type metadata accessor for GalleryNavigationDestination();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v53 - v17;
  (*(void (**)(char *, void, uint64_t))(v13 + 104))((char *)&v53 - v17, enum case for GalleryNavigationDestination.home(_:), v12);
  char v19 = static GalleryNavigationDestination.== infix(_:_:)();
  uint64_t v61 = v13;
  id v59 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v60 = v13 + 8;
  v59(v18, v12);
  id v20 = [v3 navigationController];
  id v21 = v20;
  if (v19)
  {

    return;
  }
  char v58 = v16;
  int v55 = a2;
  if (!v20) {
    goto LABEL_9;
  }
  id v22 = [v20 topViewController];

  if (!v22) {
    goto LABEL_9;
  }
  type metadata accessor for GalleryHostingViewController(0);
  uint64_t v23 = swift_dynamicCastClass();
  if (!v23)
  {

LABEL_9:
    uint64_t v27 = v12;
    uint64_t v28 = a1;
    uint64_t v26 = v27;
    sub_100021594((uint64_t)v11, 1, 1, v27);
    goto LABEL_10;
  }
  uint64_t v24 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v11, v23 + OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_destination, v12);

  sub_100021594((uint64_t)v11, 0, 1, v12);
  sub_100019760((uint64_t)v11, (uint64_t)v9, &qword_1000F50C0);
  int v25 = (*(uint64_t (**)(char *, uint64_t))(v24 + 88))(v9, v12);
  if (v25 == enum case for GalleryNavigationDestination.loadingPage(_:))
  {
    uint64_t v26 = v12;
    (*(void (**)(char *, uint64_t))(v24 + 96))(v9, v12);

    swift_bridgeObjectRelease();
LABEL_23:
    uint64_t v28 = a1;
    sub_100025E44((uint64_t)v11, &qword_1000F50C0);
    id v50 = [v3 navigationController];
    if (v50)
    {
      uint64_t v51 = v50;
    }
    int v54 = 0;
    goto LABEL_11;
  }
  if (v25 == enum case for GalleryNavigationDestination.loadingCollection(_:))
  {
    uint64_t v26 = v12;
    (*(void (**)(char *, uint64_t))(v24 + 96))(v9, v12);
    swift_bridgeObjectRelease();
    os_log_type_t v48 = &v9[*(int *)(sub_100025A08(&qword_1000F50C8) + 48)];
    uint64_t v49 = type metadata accessor for GalleryCollectionDescriptor();
    (*(void (**)(char *, uint64_t))(*(void *)(v49 - 8) + 8))(v48, v49);
    goto LABEL_23;
  }
  uint64_t v52 = v12;
  uint64_t v28 = a1;
  uint64_t v26 = v52;
  ((void (*)(char *))v59)(v9);
LABEL_10:
  sub_100025E44((uint64_t)v11, &qword_1000F50C0);
  int v54 = a2;
LABEL_11:
  uint64_t v57 = type metadata accessor for GalleryHostingViewController(0);
  uint64_t v29 = v61;
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
  uint64_t v31 = v28;
  uint64_t v32 = v28;
  uint64_t v33 = v26;
  v30(v18, v32, v26);
  uint64_t v34 = &v3[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_rootNavigator];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v36 = *((void *)v34 + 1);
  uint64_t v37 = *(void *)&v3[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_userInterface];
  swift_getObjectType();
  id v56 = v3;
  swift_unknownObjectRetain();
  uint64_t v38 = sub_10002B3F4((uint64_t)v18, Strong, v36, v37);
  uint64_t v39 = v58;
  v30(v58, v31, v33);
  if ((*(unsigned int (**)(char *, uint64_t))(v29 + 88))(v39, v33) == enum case for GalleryNavigationDestination.shortcut(_:))
  {
    (*(void (**)(char *, uint64_t))(v29 + 96))(v39, v33);
    id v40 = v56;
    id v41 = [v56 presentedViewController];
    char v42 = v55;
    if (v41)
    {
      id v43 = v41;
      self;
      unint64_t v44 = (void *)swift_dynamicCastObjCClass();
      if (v44) {
        [v44 dismissViewControllerAnimated:v42 & 1 completion:0];
      }
    }
    [v40 presentViewController:v38 animated:v42 & 1 completion:0];

    uint64_t v45 = type metadata accessor for GalleryShortcutDescriptor();
    (*(void (**)(char *, uint64_t))(*(void *)(v45 - 8) + 8))(v39, v45);
  }
  else
  {
    id v46 = [v56 navigationController];
    if (v46)
    {
      NSString v47 = v46;
      [v46 pushViewController:v38 animated:v54 & 1];
    }
    v59(v39, v33);
  }
}

uint64_t sub_10003D01C(uint64_t a1)
{
  uint64_t v3 = sub_100025A08(&qword_1000F50B8);
  __chkstk_darwin(v3 - 8);
  objc_super v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v1
                 + OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_hasAppeared) & 1) != 0)
  {
    return sub_10003D818();
  }
  else
  {
    uint64_t v7 = type metadata accessor for RootPPTTestCase();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, a1, v7);
    sub_100021594((uint64_t)v5, 0, 1, v7);
    uint64_t v8 = v1 + OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_pendingTest;
    swift_beginAccess();
    sub_10003ED78((uint64_t)v5, v8);
    return swift_endAccess();
  }
}

void *sub_10003D154()
{
  uint64_t v1 = *(void **)(v0
                + OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_searchController);
  id v2 = v1;
  return v1;
}

void sub_10003D184(uint64_t a1)
{
  id v2 = *(void **)(v1
                + OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_searchController);
  *(void *)(v1
            + OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_searchController) = a1;
}

uint64_t sub_10003D198(uint64_t a1, char a2)
{
  uint64_t v3 = v2
     + OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_pendingPresentation;
  *(void *)uint64_t v3 = a1;
  *(unsigned char *)(v3 + 8) = a2;
  return _objc_release_x2();
}

void sub_10003D1B4()
{
  *(void *)&v0[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_searchController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_rootNavigator
               + 8] = 0;
  swift_unknownObjectWeakInit();
  v0[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_hasAppeared] = 0;
  uint64_t v1 = (uint64_t)&v0[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_pendingTest];
  uint64_t v2 = type metadata accessor for RootPPTTestCase();
  sub_100021594(v1, 1, 1, v2);
  uint64_t v3 = &v0[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_pendingPresentation];
  *(void *)uint64_t v3 = 0;
  v3[8] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_10003D2AC()
{
  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for GalleryHostingViewController(0);
  [super viewDidLoad];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_hostingController];
  id result = [v1 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v3 = result;
  id result = [v0 view];
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v4 = result;
  [result bounds];
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;

  [v3 setFrame:v6, v8, v10, v12];
  id result = [v1 view];
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v13 = result;
  [result setAutoresizingMask:18];

  id result = [v0 view];
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v14 = result;
  id result = [v1 view];
  if (result)
  {
    uint64_t v15 = result;
    [v14 addSubview:result];

    return [v1 didMoveToParentViewController:v0];
  }
LABEL_11:
  __break(1u);
  return result;
}

void sub_10003D48C(char a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for GalleryHostingViewController(0);
  [super viewWillAppear:a1 & 1];
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_searchController];
  if (v3)
  {
    id v4 = v3;
    sub_100028468();
  }
}

void sub_10003D548(char a1)
{
  uint64_t v3 = sub_100025A08(&qword_1000F50B8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  double v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  double v8 = &v18[-v7];
  uint64_t v9 = type metadata accessor for RootPPTTestCase();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  double v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = (objc_class *)type metadata accessor for GalleryHostingViewController(0);
  v19.receiver = v1;
  v19.super_class = v13;
  [super viewDidAppear:a1 & 1];
  uint64_t v14 = (uint64_t)&v1[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_pendingTest];
  swift_beginAccess();
  sub_100019760(v14, (uint64_t)v8, &qword_1000F50B8);
  if (sub_1000225EC((uint64_t)v8, 1, v9) == 1)
  {
    sub_100025E44((uint64_t)v8, &qword_1000F50B8);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v12, v8, v9);
    sub_10003D818();
    sub_100021594((uint64_t)v6, 1, 1, v9);
    swift_beginAccess();
    sub_10003ED78((uint64_t)v6, v14);
    swift_endAccess();
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
  }
  v1[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_hasAppeared] = 1;
  uint64_t v15 = *(void **)&v1[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_pendingPresentation];
  if (v15)
  {
    uint64_t v16 = v1[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_pendingPresentation
           + 8] & 1;
    id v17 = v15;
    [v1 presentViewController:v17 animated:v16 completion:0];
    sub_10003D198(0, 0);
  }
}

uint64_t sub_10003D818()
{
  uint64_t v1 = *(void **)(v0
                + OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_hostingController);
  sub_100029C7C(0, &qword_1000F50A0);
  id v2 = v1;
  sub_100025A08(&qword_1000F50A8);
  if (swift_dynamicCast())
  {
    sub_10002A498(&v4, *((uint64_t *)&v5 + 1));
    RootPPTTestCase.name.getter();
    RootPPTTestCase.parameters.getter();
    dispatch thunk of PPTTestHost.runTest(_:options:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1000149BC((uint64_t)&v4);
  }
  else
  {
    uint64_t v6 = 0;
    long long v4 = 0u;
    long long v5 = 0u;
    return sub_100025E44((uint64_t)&v4, &qword_1000F50B0);
  }
}

void sub_10003D930(uint64_t a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for GalleryHostingViewController(0);
  [super traitCollectionDidChange:a1];
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC9ShortcutsP33_5A6DD2238BCF5ED8887E2D852EDD3B1F28GalleryHostingViewController_searchController];
  if (v3)
  {
    id v4 = v3;
    sub_100028468();
  }
}

uint64_t sub_10003DA04(void *a1)
{
  if (!a1)
  {
    dispatch thunk of GallerySearchManager.isActive.setter();
LABEL_7:
    swift_bridgeObjectRelease();
    return dispatch thunk of GallerySearchManager.searchTerm.setter();
  }
  sub_10009D994(a1);
  if (v2)
  {
    String.ifNotEmpty.getter();
    uint64_t v4 = v3;
    swift_bridgeObjectRelease();
    if (v4) {
      swift_bridgeObjectRelease();
    }
  }
  dispatch thunk of GallerySearchManager.isActive.setter();
  sub_10009D994(a1);
  if (!v5) {
    goto LABEL_7;
  }
  return dispatch thunk of GallerySearchManager.searchTerm.setter();
}

void sub_10003DA9C()
{
}

id sub_10003DB2C()
{
  return sub_10003DB44(type metadata accessor for GalleryHostingViewController);
}

id sub_10003DB44(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return [super dealloc];
}

uint64_t sub_10003DC6C()
{
  return type metadata accessor for GalleryHostingViewController(0);
}

unsigned char *initializeBufferWithCopyOfBuffer for MainViewController.Display(unsigned char *result, unsigned char *a2)
{
  *id result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for MainViewController.Display(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = v6 - 2;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for MainViewController.Display(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *id result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10003DDD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_10003DDFC(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_10003DE08(unsigned char *result, char a2)
{
  *id result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for MainViewController.Display()
{
  return &type metadata for MainViewController.Display;
}

unint64_t sub_10003DE28()
{
  unint64_t result = qword_1000F5048;
  if (!qword_1000F5048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5048);
  }
  return result;
}

id sub_10003DE80(void *a1, void *a2)
{
  int v3 = v2;
  id v10 = 0;
  id v6 = [v3 initWithCreationOptions:a1 database:a2 error:&v10];
  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }

  return v6;
}

void sub_10003DF54()
{
  uint64_t v1 = *v0;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v0 = v1;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100088BE4(0, *(void *)(v1 + 16) + 1, 1, v1);
    *uint64_t v0 = v3;
  }
}

void *sub_10003DFA0(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    unint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

uint64_t sub_10003E078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v6 = String.UTF16View.index(_:offsetBy:)();
    sub_10002A58C(v6);
    return v7 | 4;
  }
  else
  {
    uint64_t v3 = String.UTF8View._foreignIndex(_:offsetBy:)();
    sub_10002A58C(v3);
    return v4 | 8;
  }
}

char *sub_10003E0D4(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100025A08(&qword_1000F5078);
    id v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    id v10 = (char *)_swiftEmptyArrayStorage;
  }
  double v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_10003E284(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_10003E1AC(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_10003E1AC(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    unint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

char *sub_10003E284(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

unsigned __int8 *sub_10003E314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  swift_bridgeObjectRetain();
  uint64_t v4 = String.init<A>(_:)();
  uint64_t v6 = v4;
  unint64_t v7 = v5;
  if ((v5 & 0x1000000000000000) == 0)
  {
    if ((v5 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v9 = HIBYTE(v7) & 0xF;
    uint64_t v14 = v6;
    uint64_t v15 = v7 & 0xFFFFFFFFFFFFFFLL;
    int64_t v8 = (unsigned __int8 *)&v14;
    goto LABEL_7;
  }
  uint64_t v6 = sub_10003E678(v4, v5);
  unint64_t v11 = v10;
  swift_bridgeObjectRelease();
  unint64_t v7 = v11;
  if ((v11 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 0x1000000000000000) != 0)
  {
    int64_t v8 = (unsigned __int8 *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    int64_t v8 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
  }
LABEL_7:
  double v12 = sub_10003E3FC(v8, v9, a3);
  swift_bridgeObjectRelease();
  return v12;
}

unsigned __int8 *sub_10003E3FC(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v15 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v16 = a3 + 48;
        unsigned __int8 v17 = a3 + 55;
        unsigned __int8 v18 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v16 = 58;
        }
        else
        {
          unsigned __int8 v18 = 97;
          unsigned __int8 v17 = 65;
        }
        if (result)
        {
          uint64_t v9 = 0;
          objc_super v19 = result + 1;
          do
          {
            unsigned int v20 = *v19;
            if (v20 < 0x30 || v20 >= v16)
            {
              if (v20 < 0x41 || v20 >= v17)
              {
                uint64_t v13 = 0;
                if (v20 < 0x61 || v20 >= v18) {
                  return (unsigned __int8 *)v13;
                }
                char v21 = -87;
              }
              else
              {
                char v21 = -55;
              }
            }
            else
            {
              char v21 = -48;
            }
            uint64_t v22 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
              return 0;
            }
            uint64_t v9 = v22 + (v20 + v21);
            if (__OFADD__(v22, (v20 + v21))) {
              return 0;
            }
            ++v19;
            --v15;
          }
          while (v15);
          return (unsigned __int8 *)v9;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v4 != 45)
    {
      if (a2)
      {
        unsigned __int8 v23 = a3 + 48;
        unsigned __int8 v24 = a3 + 55;
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v23 = 58;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v24 = 65;
        }
        if (result)
        {
          uint64_t v26 = 0;
          do
          {
            unsigned int v27 = *result;
            if (v27 < 0x30 || v27 >= v23)
            {
              if (v27 < 0x41 || v27 >= v24)
              {
                uint64_t v13 = 0;
                if (v27 < 0x61 || v27 >= v25) {
                  return (unsigned __int8 *)v13;
                }
                char v28 = -87;
              }
              else
              {
                char v28 = -55;
              }
            }
            else
            {
              char v28 = -48;
            }
            uint64_t v29 = v26 * a3;
            if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
              return 0;
            }
            uint64_t v26 = v29 + (v27 + v28);
            if (__OFADD__(v29, (v27 + v28))) {
              return 0;
            }
            ++result;
            --v3;
          }
          while (v3);
          return (unsigned __int8 *)(v29 + (v27 + v28));
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      uint64_t v5 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v6 = a3 + 48;
        unsigned __int8 v7 = a3 + 55;
        unsigned __int8 v8 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = 58;
        }
        else
        {
          unsigned __int8 v8 = 97;
          unsigned __int8 v7 = 65;
        }
        if (result)
        {
          uint64_t v9 = 0;
          for (uint64_t i = result + 1; ; ++i)
          {
            unsigned int v11 = *i;
            if (v11 < 0x30 || v11 >= v6)
            {
              if (v11 < 0x41 || v11 >= v7)
              {
                uint64_t v13 = 0;
                if (v11 < 0x61 || v11 >= v8) {
                  return (unsigned __int8 *)v13;
                }
                char v12 = -87;
              }
              else
              {
                char v12 = -55;
              }
            }
            else
            {
              char v12 = -48;
            }
            uint64_t v14 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
              return 0;
            }
            uint64_t v9 = v14 - (v11 + v12);
            if (__OFSUB__(v14, (v11 + v12))) {
              return 0;
            }
            if (!--v5) {
              return (unsigned __int8 *)v9;
            }
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10003E678(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = sub_10003E6E4((uint64_t)sub_10003E6E0, 0, a1, a2);
  uint64_t v6 = sub_10003E718(v2, v3, v4, v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_10003E6E4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v4 = a3;
  }
  uint64_t v5 = 7;
  if (((a4 >> 60) & ((a3 & 0x800000000000000) == 0)) != 0) {
    uint64_t v5 = 11;
  }
  return String.subscript.getter(15, v5 | (v4 << 16));
}

uint64_t sub_10003E718(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_10003E870(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned int v11 = sub_10000641C(v9, 0),
          unint64_t v12 = sub_10003E970((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = static String._uncheckedFromUTF8(_:)();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return static String._uncheckedFromUTF8(_:)();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  _StringObject.sharedUTF8.getter();
LABEL_4:

  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_10003E870(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_10003E078(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_10003E078(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
  }
  __break(1u);
  return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
}

unint64_t sub_10003E970(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_35;
  }
  if (a3 < 0) {
    goto LABEL_38;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_35:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    void v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t result = v12;
    if ((v12 & 0xC) == v15) {
      unint64_t result = sub_10003E078(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      unint64_t result = String.UTF8View._foreignSubscript(position:)();
      char v19 = result;
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
      }
      else
      {
        unint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          unint64_t result = _StringObject.sharedUTF8.getter();
        }
        char v19 = *(unsigned char *)(result + v18);
      }
    }
    if ((v12 & 0xC) == v15)
    {
      unint64_t result = sub_10003E078(v12, a6, a7);
      unint64_t v12 = result;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v23 <= v12 >> 16) {
      goto LABEL_37;
    }
    unint64_t v12 = String.UTF8View._foreignIndex(after:)();
LABEL_31:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_35;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_10003EB74(void *a1)
{
  id v2 = [a1 viewControllers];

  if (!v2) {
    return 0;
  }
  sub_100029C7C(0, &qword_1000F50A0);
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_10003EBEC(void *a1)
{
  id v1 = [a1 viewControllers];
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  sub_100029C7C(0, &qword_1000F50A0);
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_10003EC5C(void *a1)
{
  id v2 = [a1 localizedShortTitle];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_10003ECCC(void *a1)
{
  id v1 = [a1 input];
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_10003ED30()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10003ED70()
{
  return sub_10003AF3C(*(void **)(v0 + 16));
}

uint64_t sub_10003ED78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100025A08(&qword_1000F50B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003EDE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.rootNavigator.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10003EE10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.userInterface.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10003EE40()
{
  _Block_release(*(const void **)(v0 + 16));
  uint64_t v1 = sub_10001B3C8();

  return _swift_deallocObject(v1, v2, v3);
}

void sub_10003EE70(uint64_t a1, uint64_t a2)
{
  sub_10003C404(a1, a2, *(void *)(v2 + 16));
}

void sub_10003EE78(void *a1, char a2)
{
  sub_10003C2DC(a1, a2 & 1, *(void (**)(void *, void *))(v2 + 16));
}

void sub_10003EE84(void *a1, char a2)
{
  if (a2) {
    swift_errorRelease();
  }
  else {
}
  }

id sub_10003EE94()
{
  return sub_10003BEF8(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_10003EEA0()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10003EEE0()
{
  sub_10002348C();
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10003EF84;
  uint64_t v4 = sub_100022588();
  return sub_10003B8D4(v4, v5, v6, v2);
}

uint64_t sub_10003EF84()
{
  uint64_t v1 = *v0;
  sub_10001988C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100022638();
  return v3();
}

uint64_t sub_10003F070()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_10003F080()
{
  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 56, 7);
}

void sub_10003F0D0()
{
  sub_100036664(*(void **)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_10003F0E0()
{
  type metadata accessor for OpenWorkflowOptions();
  sub_10001C094();
  unint64_t v2 = (*(void *)(v1 + 64)
      + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_100016618();
  v3();

  uint64_t v4 = sub_10003F87C();

  return _swift_deallocObject(v4, v5, v6);
}

void (*sub_10003F188())(void)
{
  uint64_t v1 = type metadata accessor for OpenWorkflowOptions();
  sub_100022084(v1);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void **)(v0 + v7);
  uint64_t v9 = *(void **)(v0 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_100035FEC(v0 + v6, v8, v9);
}

id sub_10003F1FC(void *a1)
{
  return sub_100035960(a1, *(id *)(v1 + 16), *(void **)(v1 + 24));
}

id sub_10003F204(void *a1)
{
  return sub_100035C9C(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10003F20C()
{
  uint64_t v1 = sub_10001B3C8();

  return _swift_deallocObject(v1, v2, v3);
}

id sub_10003F23C()
{
  return [*(id *)(*(void *)(v0 + 16) + OBJC_IVAR___WFMainViewController_runCoordinator) stop];
}

uint64_t sub_10003F258()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10003F2A0()
{
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_10003F708;
  uint64_t v5 = sub_100022588();
  return sub_100033338(v5, v6, v7, v3, v2);
}

unint64_t sub_10003F354()
{
  unint64_t result = qword_1000F51F8;
  if (!qword_1000F51F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F51F8);
  }
  return result;
}

uint64_t sub_10003F3A4()
{
  return _swift_deallocObject(v0, 48, 7);
}

id sub_10003F3F4()
{
  return [*(id *)(v0[2] + OBJC_IVAR___WFMainViewController_runCoordinator) runAppShortcut:v0[3] withLNAction:v0[4] andMetadata:v0[5]];
}

uint64_t sub_10003F414()
{
  if (*(void *)(v0 + 64)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 80, 7);
}

void sub_10003F47C()
{
  sub_1000330A8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72));
}

uint64_t sub_10003F494()
{
  swift_unknownObjectWeakDestroy();
  uint64_t v0 = sub_10001B3C8();

  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10003F4C4()
{
  uint64_t v1 = sub_100025A08(&qword_1000F5128);
  sub_100022084(v1);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v6 = *(void *)(v5 + 64);
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_release();

  uint64_t v7 = type metadata accessor for RootNavigationContext();
  if (!sub_1000225EC(v0 + v4, 1, v7))
  {
    sub_100012D7C();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v4, v7);
  }

  return _swift_deallocObject(v0, v6 + v4 + 1, v3 | 7);
}

void sub_10003F5B4()
{
  uint64_t v1 = sub_100025A08(&qword_1000F5128);
  sub_100022084(v1);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (void (*)(void))v0[2];
  uint64_t v8 = v0[3];
  uint64_t v9 = v0[4];
  unint64_t v10 = (void *)v0[5];
  int v11 = *((unsigned __int8 *)v0 + v6 + *(void *)(v5 + 64));

  sub_1000198B8(v7, v8, v9, v10, (uint64_t)v0 + v6, v11);
}

uint64_t sub_10003F620()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10003F658()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10003F680()
{
  return sub_1000A9ACC(*(uint64_t (**)(void))(v0 + 16));
}

void sub_10003F688()
{
}

uint64_t sub_10003F730()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10003F748()
{
  return 0;
}

uint64_t sub_10003F764()
{
  return type metadata accessor for RootNavigationContext();
}

uint64_t sub_10003F78C()
{
  return type metadata accessor for RootNavigationDestination();
}

uint64_t sub_10003F7D0()
{
  return v0;
}

uint64_t sub_10003F7DC()
{
  return v0;
}

uint64_t sub_10003F7E8()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_10003F80C()
{
  return swift_beginAccess();
}

uint64_t sub_10003F840()
{
  return v0;
}

NSString sub_10003F858()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_10003F87C()
{
  return v0;
}

uint64_t sub_10003F88C()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

id sub_10003F8AC()
{
  *(void *)(v1 - 120) = v0;
  return v0;
}

uint64_t sub_10003F8CC()
{
  return v0;
}

uint64_t sub_10003F8D8(uint64_t a1)
{
  return sub_1000225EC(a1, 1, v1);
}

uint64_t sub_10003F8F8()
{
  return v0;
}

uint64_t sub_10003F904@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  v5[4] = a2;
  v5[5] = v2;
  v5[12] = v6;
  v5[13] = result;
  v5[8] = result;
  v5[9] = v3;
  v5[10] = v4;
  return result;
}

uint64_t sub_10003F918()
{
  return 0;
}

id sub_10003F92C(id a1, SEL a2, uint64_t a3)
{
  return [a1 a2:a3:1:0];
}

uint64_t sub_10003F944()
{
  return type metadata accessor for AppNameCache(0);
}

uint64_t sub_10003F964()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

_WORD *sub_10003F998(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

id sub_10003F9A4(uint64_t a1, const char *a2)
{
  return [v5 a2:v3:v2 & 1:v4];
}

void sub_10003F9D0(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 2u);
}

uint64_t sub_10003F9E8()
{
  return v0;
}

uint64_t sub_10003F9FC()
{
  return v0;
}

uint64_t sub_10003FA1C()
{
  return v0;
}

uint64_t sub_10003FA28()
{
  return sub_100021594(v0, 0, 1, v1);
}

NSArray sub_10003FA48()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_10003FA60()
{
  return v0;
}

void sub_10003FA6C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_10003FA8C()
{
  return v0;
}

uint64_t sub_10003FA98()
{
  id v0 = [self currentDevice];
  [v0 idiom];

  NSString v1 = sub_1000223FC();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = sub_1000248B0(v1);

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

uint64_t sub_10003FC00(unint64_t a1)
{
  return sub_10003FC18(a1, sub_100063EC8);
}

uint64_t sub_10003FC18(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v6, v5))
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v7 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *NSString v2 = v7;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
    {
      uint64_t v9 = v7 & 0xFFFFFFFFFFFFFF8;
      if (v6 + v5 <= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_12;
      }
    }
  }
  if (v7 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *NSString v2 = v10;
    uint64_t v9 = v10 & 0xFFFFFFFFFFFFFF8;
LABEL_12:
    uint64_t result = a2(v9 + 8 * *(void *)(v9 + 16) + 32, (*(void *)(v9 + 24) >> 1) - *(void *)(v9 + 16), a1);
    if (v12 >= v5) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v12 >= 1)
  {
    uint64_t v13 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v14 = __OFADD__(v13, v12);
    uint64_t v15 = v13 + v12;
    if (v14)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v15;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

void sub_10003FDE8()
{
  off_1000F5280 = &off_1000E4BB0;
}

void sub_10003FDFC()
{
  id v0 = self;
  id v1 = [v0 createDatabaseForTesting];
  [v0 setDefaultDatabase:v1];
  WFDatabase.performTransaction(reason:_:)();
}

void sub_10003FECC(void *a1)
{
  id v26 = 0;
  id v25 = sub_1000459C8(0x6F68532074736554, 0xEE00737475637472, 0xE959u, (uint64_t)&v26, a1);
  if (v25)
  {
    uint64_t v2 = qword_1000F4558;
    id v3 = v26;
    if (v2 != -1) {
      swift_once();
    }
    uint64_t v4 = (char *)off_1000F5280;
    uint64_t v5 = *((void *)off_1000F5280 + 2);
    if (v5)
    {
      uint64_t v6 = self;
      swift_bridgeObjectRetain();
      unint64_t v7 = (unsigned __int16 *)(v4 + 48);
      while (1)
      {
        uint64_t v9 = *((void *)v7 - 2);
        uint64_t v8 = *((void *)v7 - 1);
        unsigned __int16 v10 = *v7;
        id v11 = objc_allocWithZone((Class)WFWorkflowRecord);
        swift_bridgeObjectRetain();
        id v12 = [v11 init];
        sub_1000287FC(v9, v8, v12, (SEL *)&selRef_setName_);
        id v13 = [v6 randomPaletteColor];
        id v14 = objc_allocWithZone((Class)WFWorkflowIcon);
        id v15 = sub_1000AE4CC((uint64_t)v13, v10, 0, 0xF000000000000000);
        [v12 setIcon:v15];

        id v16 = [objc_allocWithZone((Class)WFWorkflowCreationOptions) initWithRecord:v12];
        id v17 = [v25 identifier];
        uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v20 = v19;

        sub_1000287FC(v18, v20, v16, (SEL *)&selRef_setCollectionIdentifier_);
        id v26 = 0;
        id v21 = [a1 createWorkflowWithOptions:v16 error:&v26];
        id v22 = v26;
        if (!v21) {
          break;
        }
        v7 += 12;

        if (!--v5)
        {

          swift_bridgeObjectRelease();
          return;
        }
      }
      unsigned __int8 v24 = v22;
      swift_bridgeObjectRelease();
      _convertNSErrorToError(_:)();

      swift_willThrow();
    }
  }
  else
  {
    id v23 = v26;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
}

uint64_t sub_1000401D8(uint64_t a1, void *a2)
{
  id v4 = [self mainScene];
  if (v4 && (uint64_t v5 = v4, v6 = [v4 delegate], v5, v6))
  {
    self;
    unint64_t v7 = (void *)swift_dynamicCastObjCClass();
    if (v7 && [v7 rootViewController])
    {
      type metadata accessor for MainViewController(0);
      unint64_t v8 = swift_dynamicCastClass();
      if (v8) {
        char v9 = sub_1000402EC(a1, a2, v8);
      }
      else {
        char v9 = 0;
      }
      swift_unknownObjectRelease();
    }
    else
    {
      char v9 = 0;
    }
    swift_unknownObjectRelease();
  }
  else
  {
    char v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_1000402EC(uint64_t a1, void *a2, unint64_t a3)
{
  v6._countAndFlagsBits = 0xD000000000000013;
  v6._object = (void *)0x80000001000C08F0;
  if (String.hasPrefix(_:)(v6))
  {
    return sub_1000404BC(a1, a2);
  }
  else
  {
    v8._countAndFlagsBits = 0x74756374726F6873;
    v8._object = (void *)0xEF72657761724473;
    if (String.hasPrefix(_:)(v8)
      || (v9._countAndFlagsBits = 0x74756374726F6873,
          v9._object = (void *)0xEF726F7469644573,
          String.hasPrefix(_:)(v9)))
    {
      return sub_100040A88(a1, (uint64_t)a2, a3);
    }
    else
    {
      v10._object = (void *)0x80000001000C0910;
      v10._countAndFlagsBits = 0xD000000000000010;
      if (String.hasPrefix(_:)(v10))
      {
        return sub_10004358C(a1, (uint64_t)a2, a3);
      }
      else
      {
        return 0;
      }
    }
  }
}

BOOL sub_1000404BC(uint64_t a1, void *a2)
{
  id v29 = a2;
  uint64_t v28 = a1;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v35 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v33 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for DispatchQoS();
  uint64_t v32 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v31 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for DispatchTime();
  uint64_t v30 = *(void *)(v36 - 8);
  uint64_t v6 = __chkstk_darwin(v36);
  Swift::String v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  Swift::String v10 = (char *)&v25 - v9;
  uint64_t v11 = type metadata accessor for RootNavigationDestination();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = [self defaultDatabase];
  id v37 = v15;
  uint64_t v38 = v2;
  WFDatabase.performTransaction(reason:_:)();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for RootNavigationDestination.allShortcuts(_:), v11);
  type metadata accessor for MainViewController(0);
  sub_1000441D4(&qword_1000F50F8, (void (*)(uint64_t))type metadata accessor for MainViewController);
  RootView.navigate(to:)();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  id v16 = (void *)sub_100031964();
  if (v16)
  {
    sub_100029C7C(0, &qword_1000F52B0);
    uint64_t v27 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    id v26 = v10;
    + infix(_:_:)();
    uint64_t v30 = *(void *)(v30 + 8);
    ((void (*)(char *, uint64_t))v30)(v8, v36);
    id v17 = (void *)swift_allocObject();
    id v18 = v29;
    void v17[2] = v28;
    void v17[3] = v18;
    v17[4] = v16;
    aBlock[4] = sub_1000441C8;
    aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10000E51C;
    aBlock[3] = &unk_1000E5978;
    uint64_t v19 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    id v29 = v16;
    uint64_t v20 = v31;
    static DispatchQoS.unspecified.getter();
    uint64_t v39 = _swiftEmptyArrayStorage;
    sub_1000441D4((unint64_t *)&unk_1000F7860, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100025A08(&qword_1000F52B8);
    sub_100045A44((unint64_t *)&qword_1000F7870, &qword_1000F52B8);
    id v21 = v33;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    id v22 = v26;
    id v23 = (void *)v27;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();

    _Block_release(v19);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v21, v3);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v20, v34);
    ((void (*)(char *, uint64_t))v30)(v22, v36);
    swift_release();
  }
  else
  {
  }
  return v16 != 0;
}

uint64_t sub_100040A88(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v165 = a3;
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = (char *)&v159 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100025A08(&qword_1000F52C8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v159 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = (void *)type metadata accessor for URL();
  v166 = (void (**)(char *, id))*(v168 - 1);
  uint64_t v12 = __chkstk_darwin(v168);
  id v14 = (char *)&v159 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v164 = (char *)&v159 - v15;
  int v16 = _AXSAccessibilityEnabled();
  uint64_t v167 = a2;
  if (v16 || _AXSApplicationAccessibilityEnabled())
  {
    uint64_t v17 = a1;
    static WFLog.subscript.getter();
    id v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      a2 = v167;
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    a1 = v17;
  }
  if ((a1 != 0xD000000000000021 || a2 != 0x80000001000C09A0)
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    uint64_t v163 = a1;
    if (a1 == 0xD00000000000002CLL && a2 == 0x80000001000C09D0
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      unint64_t v169 = (unint64_t)_swiftEmptyArrayStorage;
      sub_100025A08(&qword_1000F52E0);
      uint64_t inited = swift_initStackObject();
      *(void *)(inited + 32) = 0xD00000000000001BLL;
      v166 = (void (**)(char *, id))(inited + 32);
      *(_OWORD *)(inited + 16) = xmmword_1000BABD0;
      *(void *)(inited + 40) = 0x80000001000C0B40;
      *(void *)(inited + 48) = 0xD00000000000001BLL;
      *(void *)(inited + 56) = 0x80000001000C0B00;
      *(void *)(inited + 64) = 0xD000000000000018;
      *(void *)(inited + 72) = 0x80000001000C0AE0;
      *(void *)(inited + 80) = 0xD00000000000001FLL;
      v164 = (char *)inited;
      *(void *)(inited + 88) = 0x80000001000C0B60;
      id v40 = [objc_allocWithZone((Class)WFBundledActionProvider) init];
      id v41 = [v40 createAllAvailableActionsIncludingMissingActions:0];

      if (v41)
      {
        sub_100029C7C(0, &qword_1000F51D0);
        sub_100045A94();
        static Set._unconditionallyBridgeFromObjectiveC(_:)();
      }
      else if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
      {
LABEL_168:
        if (_CocoaArrayWrapper.endIndex.getter()) {
          sub_1000449D0((unint64_t)_swiftEmptyArrayStorage);
        }
      }
      uint64_t v42 = swift_bridgeObjectRetain();
      id v43 = sub_1000630F8(v42);
      swift_bridgeObjectRelease();
      v171[0] = (uint64_t)v43;
      sub_100044C24(v171);
      swift_bridgeObjectRelease();
      uint64_t v44 = v171[0];
      if (v171[0] < 0 || (v171[0] & 0x4000000000000000) != 0) {
        goto LABEL_159;
      }
      uint64_t v45 = *(void *)(v171[0] + 16);
      if (v45)
      {
LABEL_26:
        if (v45 < 1)
        {
          __break(1u);
          goto LABEL_168;
        }
        uint64_t v46 = 0;
        uint64_t v47 = 0;
        uint64_t v48 = 0;
        v168 = (void *)(v44 & 0xC000000000000001);
        do
        {
          if (v168) {
            id v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v49 = *(id *)(v44 + 8 * v48 + 32);
          }
          id v50 = v49;
          id v51 = [v49 app];
          if ((!v51 || (v52 = v51, unsigned int v53 = [v51 isInstalled], v52, v53))
            && [v50 visibleForUse:0])
          {
            id v54 = v50;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v169 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v169 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            id v55 = [v54 createAccompanyingActions];
            if (v55)
            {
              id v56 = v55;
              sub_100029C7C(0, &qword_1000F51D0);
              unint64_t v57 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

              sub_10003FC18(v57, sub_1000640C8);
            }
            if (v47 == 5 * (v47 / 5))
            {
              if (v46 % 4 < 0) {
                goto LABEL_157;
              }
              char v58 = self;
              swift_bridgeObjectRetain();
              id v59 = [v58 sharedRegistry];
              NSString v60 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              id v61 = [v59 createActionWithIdentifier:v60 serializedParameters:0];

              id v62 = v61;
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)((v169 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v169 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              }
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
              id v63 = [v62 createAccompanyingActions];
              if (v63)
              {
                id v64 = v63;
                sub_100029C7C(0, &qword_1000F51D0);
                unint64_t v65 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

                sub_10003FC18(v65, sub_1000640C8);
              }

              BOOL v66 = __OFADD__(v46++, 1);
              if (v66) {
                goto LABEL_158;
              }
            }
            else
            {
            }
            BOOL v66 = __OFADD__(v47++, 1);
            if (v66)
            {
              __break(1u);
LABEL_157:
              __break(1u);
LABEL_158:
              __break(1u);
LABEL_159:
              swift_bridgeObjectRetain();
              uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
              swift_release();
              if (!v45) {
                break;
              }
              goto LABEL_26;
            }
          }
          else
          {
          }
          ++v48;
        }
        while (v45 != v48);
      }
      swift_release();
      swift_setDeallocating();
      sub_10004492C();
      int64_t v150 = v169;
      id v151 = objc_allocWithZone((Class)WFWorkflow);
      id v152 = sub_100044808(1953719636, 0xE400000000000000, 0, 0, 0, 0, v150);
      id v86 = [v152 record];

LABEL_161:
      id v153 = [self defaultDatabase];
      id v154 = [objc_allocWithZone((Class)WFWorkflowCreationOptions) initWithRecord:v86];
      unint64_t v169 = 0;
      id v155 = [v153 createWorkflowWithOptions:v154 error:&v169];
      id v93 = (id)v169;
      if (v155)
      {
        Swift::Int v156 = v155;
        unint64_t v169 = v165;
        type metadata accessor for MainViewController(0);
        sub_1000441D4(&qword_1000F5050, (void (*)(uint64_t))type metadata accessor for MainViewController);
        id v157 = v93;
        if (WorkflowOpener.openWorkflow(_:)())
        {
          swift_getObjectType();
          dispatch thunk of EditorView.performScrollingTest(named:)();
          swift_unknownObjectRelease();

          return 1;
        }

        return 0;
      }
LABEL_173:
      id v158 = v93;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_unexpectedError();
      __break(1u);
      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
    if (a1 == 0xD000000000000029 && a2 == 0x80000001000C0A00
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      v171[0] = (uint64_t)_swiftEmptyArrayStorage;
      sub_100044290(0, 100000, 0xD000000000000010, 0x80000001000C0A70);
      unint64_t v169 = v67;
      sub_100025A08(&qword_1000F52D0);
      sub_100045A44(&qword_1000F52D8, &qword_1000F52D0);
      v164 = (char *)String.init<A>(_:)();
      v166 = v68;
      v168 = self;
      id v69 = [v168 sharedRegistry];
      NSString v70 = String._bridgeToObjectiveC()();
      id v71 = [v69 createActionWithIdentifier:v70 serializedParameters:0];

      [v71 copyForDuplicating];
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      [v71 copyForDuplicating];
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      [v71 copyForDuplicating];
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      [v71 copyForDuplicating];
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      [v71 copyForDuplicating];
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      [v71 copyForDuplicating];
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      [v71 copyForDuplicating];
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      [v71 copyForDuplicating];
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      id v72 = [v168 sharedRegistry];
      NSString v73 = String._bridgeToObjectiveC()();
      uint64_t v162 = sub_100025A08(&qword_1000F52F0);
      uint64_t v74 = swift_initStackObject();
      long long v161 = xmmword_1000BAB00;
      *(_OWORD *)(v74 + 16) = xmmword_1000BAB00;
      unint64_t v169 = 0xD000000000000010;
      unint64_t v170 = 0x80000001000C0B20;
      AnyHashable.init<A>(_:)();
      *(void *)(v74 + 96) = &type metadata for String;
      uint64_t v75 = (uint64_t)v164;
      id v76 = v166;
      *(void *)(v74 + 72) = v164;
      *(void *)(v74 + 80) = v76;
      swift_bridgeObjectRetain();
      Dictionary.init(dictionaryLiteral:)();
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      uint64_t v78 = (void (**)(char *, id))[v72 createActionWithIdentifier:v73 serializedParameters:isa];

      [v78 copyForDuplicating];
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      [v71 copyForDuplicating];
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      [v71 copyForDuplicating];
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      [v71 copyForDuplicating];
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      [v71 copyForDuplicating];
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      id v79 = sub_100044474(v75, (uint64_t)v166, 10);
      uint64_t v80 = v79[2];
      if (v80)
      {
        v166 = v78;
        unint64_t v169 = (unint64_t)_swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        id v81 = v79 + 5;
        do
        {
          id v82 = objc_allocWithZone((Class)WFPropertyListParameterValue);
          swift_bridgeObjectRetain();
          NSString v83 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v82 initWithString:v83];

          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          v81 += 2;
          --v80;
        }
        while (v80);
        swift_bridgeObjectRelease();
        uint64_t v78 = v166;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      id v89 = [v168 sharedRegistry];
      NSString v90 = String._bridgeToObjectiveC()();
      uint64_t v91 = swift_initStackObject();
      *(_OWORD *)(v91 + 16) = v161;
      unint64_t v169 = 0x736D6574494657;
      unint64_t v170 = 0xE700000000000000;
      AnyHashable.init<A>(_:)();
      sub_100029C7C(0, &qword_1000F52F8);
      id v92 = sub_100044570();
      id v93 = [v92 serializedRepresentation];

      if (v93)
      {
        *(void *)(v91 + 96) = swift_getObjectType();
        *(void *)(v91 + 72) = v93;
        Dictionary.init(dictionaryLiteral:)();
        Class v94 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v95 = [v89 createActionWithIdentifier:v90 serializedParameters:v94];

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        [v78 copyForDuplicating];
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        [v71 copyForDuplicating];
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        [v71 copyForDuplicating];
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        [v71 copyForDuplicating];
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        [v71 copyForDuplicating];
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        [v71 copyForDuplicating];
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        [v71 copyForDuplicating];
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        [v71 copyForDuplicating];
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        [v71 copyForDuplicating];
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        [v71 copyForDuplicating];
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        [v71 copyForDuplicating];
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        uint64_t v96 = v171[0];
        id v97 = objc_allocWithZone((Class)WFWorkflow);
        id v98 = sub_100044808(1953719636, 0xE400000000000000, 0, 0, 0, 0, v96);
        id v86 = [v98 record];

        goto LABEL_161;
      }
      __break(1u);
    }
    else
    {
      if ((a1 != 0xD000000000000033 || a2 != 0x80000001000C0A30)
        && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        id v86 = [objc_allocWithZone((Class)WFWorkflowRecord) init];
        goto LABEL_161;
      }
      v171[0] = (uint64_t)_swiftEmptyArrayStorage;
      sub_100044290(0, 100000, 0xD000000000000010, 0x80000001000C0A70);
      unint64_t v169 = v99;
      sub_100025A08(&qword_1000F52D0);
      sub_100045A44(&qword_1000F52D8, &qword_1000F52D0);
      v164 = (char *)String.init<A>(_:)();
      uint64_t v162 = v100;
      uint64_t v101 = self;
      id v102 = [v101 sharedRegistry];
      NSString v103 = String._bridgeToObjectiveC()();
      id v104 = [v102 createActionWithIdentifier:v103 serializedParameters:0];

      [v104 copyForDuplicating];
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      [v104 copyForDuplicating];
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      [v104 copyForDuplicating];
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      [v104 copyForDuplicating];
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      [v104 copyForDuplicating];
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      [v104 copyForDuplicating];
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      [v104 copyForDuplicating];
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      *(void *)&long long v161 = v104;
      [v104 copyForDuplicating];
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      sub_100025A08(&qword_1000F52E0);
      uint64_t v105 = swift_initStackObject();
      *(_OWORD *)(v105 + 16) = xmmword_1000BB060;
      *(void *)(v105 + 32) = 6647375;
      *(void *)(v105 + 40) = 0xE300000000000000;
      *(void *)(v105 + 48) = 7305044;
      *(void *)(v105 + 56) = 0xE300000000000000;
      *(void *)(v105 + 64) = 0x6565726854;
      *(void *)(v105 + 72) = 0xE500000000000000;
      *(void *)(v105 + 80) = 1920298822;
      *(void *)(v105 + 88) = 0xE400000000000000;
      *(void *)(v105 + 96) = 1702259014;
      *(void *)(v105 + 104) = 0xE400000000000000;
      *(void *)(v105 + 112) = 7891283;
      *(void *)(v105 + 120) = 0xE300000000000000;
      *(void *)(v105 + 128) = 0x6E65766553;
      *(void *)(v105 + 136) = 0xE500000000000000;
      *(void *)(v105 + 144) = 0x7468676945;
      *(void *)(v105 + 152) = 0xE500000000000000;
      sub_100029C7C(0, &qword_1000F52E8);
      unint64_t v169 = (unint64_t)_swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      id v106 = objc_allocWithZone((Class)WFPropertyListParameterValue);
      swift_bridgeObjectRetain();
      NSString v107 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v106 initWithChooseFromMenuString:v107];

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      id v108 = objc_allocWithZone((Class)WFPropertyListParameterValue);
      swift_bridgeObjectRetain();
      NSString v109 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v108 initWithChooseFromMenuString:v109];

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      id v110 = objc_allocWithZone((Class)WFPropertyListParameterValue);
      swift_bridgeObjectRetain();
      NSString v111 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v110 initWithChooseFromMenuString:v111];

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      id v112 = objc_allocWithZone((Class)WFPropertyListParameterValue);
      swift_bridgeObjectRetain();
      NSString v113 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v112 initWithChooseFromMenuString:v113];

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      id v114 = objc_allocWithZone((Class)WFPropertyListParameterValue);
      swift_bridgeObjectRetain();
      NSString v115 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v114 initWithChooseFromMenuString:v115];

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      id v116 = objc_allocWithZone((Class)WFPropertyListParameterValue);
      swift_bridgeObjectRetain();
      NSString v117 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v116 initWithChooseFromMenuString:v117];

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      id v118 = objc_allocWithZone((Class)WFPropertyListParameterValue);
      swift_bridgeObjectRetain();
      NSString v119 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v118 initWithChooseFromMenuString:v119];

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v168 = (void *)v105;
      id v120 = objc_allocWithZone((Class)WFPropertyListParameterValue);
      swift_bridgeObjectRetain();
      NSString v121 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v120 initWithChooseFromMenuString:v121];

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      id v122 = sub_100044570();
      id v123 = [v101 sharedRegistry];
      NSString v124 = String._bridgeToObjectiveC()();
      id v125 = [v123 createActionWithIdentifier:v124 serializedParameters:0];

      self;
      uint64_t v126 = (void *)swift_dynamicCastObjCClassUnconditional();
      id v160 = v122;
      [v126 setParameterState:v122 forKey:WFChooseFromMenuListItemsKey];
      id v159 = v125;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      v166 = (void (**)(char *, id))v126;
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      uint64_t v127 = sub_100044474((uint64_t)v164, v162, 10);
      uint64_t v128 = v127[2];
      if (v128)
      {
        unint64_t v169 = (unint64_t)_swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        uint64_t v129 = v127 + 5;
        do
        {
          id v130 = objc_allocWithZone((Class)WFPropertyListParameterValue);
          swift_bridgeObjectRetain();
          NSString v131 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v130 initWithString:v131];

          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          v129 += 2;
          --v128;
        }
        while (v128);
      }
      swift_bridgeObjectRelease();
      id v133 = [v101 sharedRegistry];
      NSString v134 = String._bridgeToObjectiveC()();
      sub_100025A08(&qword_1000F52F0);
      uint64_t v135 = swift_initStackObject();
      *(_OWORD *)(v135 + 16) = xmmword_1000BAB00;
      unint64_t v169 = 0x736D6574494657;
      unint64_t v170 = 0xE700000000000000;
      AnyHashable.init<A>(_:)();
      sub_100029C7C(0, &qword_1000F52F8);
      id v136 = sub_100044570();
      id v93 = [v136 serializedRepresentation];

      if (v93)
      {
        *(void *)(v135 + 96) = swift_getObjectType();
        *(void *)(v135 + 72) = v93;
        Dictionary.init(dictionaryLiteral:)();
        Class v137 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        v164 = (char *)[v133 createActionWithIdentifier:v134 serializedParameters:v137];

        sub_100029C7C(0, &qword_1000F5300);
        uint64_t v138 = (uint64_t)v168;
        sub_100089514(0, 1, (uint64_t)v168);
        sub_100089514(7uLL, 1, v138);
        for (uint64_t i = 0; i != 128; i += 16)
        {
          swift_bridgeObjectRetain();
          id v140 = [v166 createAccompanyingActionWithMode:1];
          self;
          uint64_t v141 = (void *)swift_dynamicCastObjCClassUnconditional();
          id v142 = sub_1000445F8();
          [v141 setItemTitle:v142];

          id v143 = v141;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          [v164 copyForDuplicating];
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        swift_setDeallocating();
        sub_10004492C();
        id v144 = [v166 createAccompanyingActionWithMode:2];
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        uint64_t v145 = 14;
        uint64_t v146 = (void *)v161;
        do
        {
          [v146 copyForDuplicating];
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          --v145;
        }
        while (v145);
        uint64_t v147 = v171[0];
        id v148 = objc_allocWithZone((Class)WFWorkflow);
        id v149 = sub_100044808(1953719636, 0xE400000000000000, 0, 0, 0, 0, v147);
        id v86 = [v149 record];

        goto LABEL_161;
      }
    }
    __break(1u);
    goto LABEL_173;
  }
  sub_100029C7C(0, &qword_1000F5310);
  uint64_t result = (uint64_t)sub_10004421C();
  if (!result) {
    return result;
  }
  id v22 = (void *)result;
  NSString v23 = String._bridgeToObjectiveC()();
  NSString v24 = String._bridgeToObjectiveC()();
  NSString v25 = String._bridgeToObjectiveC()();
  id v26 = [v22 URLForResource:v23 withExtension:v24 subdirectory:v25];

  if (!v26)
  {
    sub_100021594((uint64_t)v11, 1, 1, (uint64_t)v168);
    goto LABEL_21;
  }
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v27 = v166[4];
  uint64_t v28 = v168;
  ((void (*)(char *, char *, void *))v27)(v11, v14, v168);
  sub_100021594((uint64_t)v11, 0, 1, (uint64_t)v28);
  if (sub_1000225EC((uint64_t)v11, 1, (uint64_t)v28) == 1)
  {
LABEL_21:

    sub_100023268((uint64_t)v11, &qword_1000F52C8);
    return 0;
  }
  id v29 = v164;
  ((void (*)(char *, char *, void *))v27)(v164, v11, v28);
  uint64_t v30 = self;
  URL._bridgeToObjectiveC()(v31);
  uint64_t v33 = v32;
  id v34 = [v30 fileWithURL:v32 options:0];

  if (v34)
  {
    objc_allocWithZone((Class)WFWorkflowFileDescriptor);
    id v35 = v34;
    id v36 = sub_1000446D8(v35);
    id v37 = objc_allocWithZone((Class)WFWorkflowFile);
    id v38 = sub_100044744(v36);
    uint64_t v84 = v38;
    if (v38)
    {
      unint64_t v169 = 0;
      id v85 = [v38 recordRepresentationWithError:&v169];
      if (v85)
      {
        id v86 = v85;
        uint64_t v87 = v166[1];
        id v88 = (id)v169;
        v87(v164, v28);

        goto LABEL_161;
      }
      id v132 = (id)v169;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRelease();
    }
    else
    {
    }
    v166[1](v164, v28);
  }
  else
  {
    v166[1](v29, v28);
  }
  return 0;
}

uint64_t sub_10004358C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v22[1] = a3;
  uint64_t v3 = sub_100025A08(&qword_1000F5128);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[0] = type metadata accessor for RootNavigationDestination();
  uint64_t v6 = *(void *)(v22[0] - 8);
  __chkstk_darwin(v22[0]);
  Swift::String v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for RootNavigationContext.TransitionType();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_100025A08(&qword_1000F50B8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for RootNavigationContext();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  int v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  Dictionary.init(dictionaryLiteral:)();
  RootPPTTestCase.init(name:parameters:)();
  uint64_t v17 = type metadata accessor for RootPPTTestCase();
  sub_100021594((uint64_t)v12, 0, 1, v17);
  static RootNavigationContext.TransitionType.default.getter();
  RootNavigationContext.init(dismissOccludingViewController:clearSearchState:animateTransition:createAutomation:transitionType:pptTest:)();
  uint64_t v18 = enum case for GalleryNavigationDestination.home(_:);
  uint64_t v19 = type metadata accessor for GalleryNavigationDestination();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v8, v18, v19);
  sub_100021594((uint64_t)v8, 0, 1, v19);
  uint64_t v20 = v22[0];
  (*(void (**)(char *, void, void))(v6 + 104))(v8, enum case for RootNavigationDestination.gallery(_:), v22[0]);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v5, v16, v13);
  sub_100021594((uint64_t)v5, 0, 1, v13);
  type metadata accessor for MainViewController(0);
  sub_1000441D4(&qword_1000F50F8, (void (*)(uint64_t))type metadata accessor for MainViewController);
  RootView.navigate(to:with:completion:)();
  sub_100023268((uint64_t)v5, &qword_1000F5128);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v20);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return 1;
}

id sub_10004398C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PPTDispatcher();
  return [super init];
}

id sub_1000439E4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PPTDispatcher();
  return [super dealloc];
}

uint64_t type metadata accessor for PPTDispatcher()
{
  return self;
}

void sub_100043A40(void *a1)
{
  id v29 = 0;
  id v28 = sub_1000459C8(0xD000000000000018, 0x80000001000C0980, 0xE9AEu, (uint64_t)&v29, a1);
  if (v28)
  {
    uint64_t v2 = qword_1000F4558;
    id v3 = v29;
    if (v2 != -1) {
      swift_once();
    }
    uint64_t v4 = 0;
    uint64_t v5 = (char *)off_1000F5280;
    while (1)
    {
      uint64_t v6 = *((void *)v5 + 2);
      if (v6) {
        break;
      }
LABEL_10:
      if (v4++ == 10)
      {

        return;
      }
    }
    uint64_t v27 = v4;
    uint64_t v7 = self;
    swift_bridgeObjectRetain();
    Swift::String v8 = (unsigned __int16 *)(v5 + 48);
    while (1)
    {
      uint64_t v10 = *((void *)v8 - 2);
      uint64_t v9 = *((void *)v8 - 1);
      unsigned __int16 v11 = *v8;
      id v12 = objc_allocWithZone((Class)WFWorkflowRecord);
      swift_bridgeObjectRetain();
      id v13 = [v12 init];
      sub_1000287FC(v10, v9, v13, (SEL *)&selRef_setName_);
      id v14 = [v7 randomPaletteColor];
      id v15 = objc_allocWithZone((Class)WFWorkflowIcon);
      id v16 = sub_1000AE4CC((uint64_t)v14, v11, 0, 0xF000000000000000);
      [v13 setIcon:v16];

      id v17 = [objc_allocWithZone((Class)WFWorkflowCreationOptions) initWithRecord:v13];
      id v18 = [v28 identifier];
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v21 = v20;

      sub_1000287FC(v19, v21, v17, (SEL *)&selRef_setCollectionIdentifier_);
      id v29 = 0;
      id v22 = [a1 createWorkflowWithOptions:v17 nameCollisionBehavior:0 error:&v29];
      id v23 = v29;
      if (!v22) {
        break;
      }
      v8 += 12;

      if (!--v6)
      {
        swift_bridgeObjectRelease();
        uint64_t v5 = (char *)off_1000F5280;
        uint64_t v4 = v27;
        goto LABEL_10;
      }
    }
    NSString v25 = v23;
    swift_bridgeObjectRelease();
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  else
  {
    id v26 = v29;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
}

void sub_100043D44()
{
  sub_100043A40(*(void **)(v0 + 16));
}

uint64_t sub_100043D60(void **a1, uint64_t a2, void *a3)
{
  uint64_t v28 = a2;
  id v29 = a1;
  uint64_t v31 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v34 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v32 = *(void *)(v8 - 8);
  uint64_t v33 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchTime();
  uint64_t v30 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  id v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v17 = (char *)&v27 - v16;
  long long aBlock = a1;
  uint64_t v36 = a2;
  uint64_t v41 = 0x5F7473696C5FLL;
  unint64_t v42 = 0xE600000000000000;
  sub_10002B2A0();
  StringProtocol.contains<A>(_:)();
  sub_100021E68();
  dispatch thunk of LibraryDataSource.layoutMode.setter();
  swift_release();
  sub_100029C7C(0, &qword_1000F52B0);
  id v18 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v12 + 8);
  v19(v15, v11);
  uint64_t v20 = (void *)swift_allocObject();
  uint64_t v22 = v28;
  uint64_t v21 = v29;
  void v20[2] = a3;
  v20[3] = v21;
  v20[4] = v22;
  uint64_t v39 = sub_1000446AC;
  id v40 = v20;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v36 = 1107296256;
  id v37 = sub_10000E51C;
  id v38 = &unk_1000E59C8;
  id v23 = _Block_copy(&aBlock);
  id v24 = a3;
  swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter();
  uint64_t v41 = (uint64_t)_swiftEmptyArrayStorage;
  sub_1000441D4((unint64_t *)&unk_1000F7860, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100025A08(&qword_1000F52B8);
  sub_100045A44((unint64_t *)&qword_1000F7870, &qword_1000F52B8);
  uint64_t v25 = v31;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v25);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v33);
  v19(v17, v30);
  return swift_release();
}

uint64_t sub_100044188()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000441C8()
{
  return sub_100043D60(*(void ***)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1000441D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_10004421C()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithPath:v1];

  return v2;
}

void sub_100044290(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (!v4)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return;
  }
  sub_10005B590(0, v4 & ~(v4 >> 63), 0);
  if (a2 >= a1 && (v4 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = 0;
    uint64_t v10 = HIBYTE(a4) & 0xF;
    if ((a4 & 0x2000000000000000) == 0) {
      uint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v19 = v10;
    while (v9 != v4)
    {
      if (!v19) {
        goto LABEL_20;
      }
      uint64_t v11 = String.count.getter();
      if (v11 < 0) {
        goto LABEL_21;
      }
      unint64_t v12 = v11;
      if (!v11) {
        goto LABEL_22;
      }
      swift_stdlib_random();
      if (-(uint64_t)v12 % v12)
      {
        while (1)
          swift_stdlib_random();
      }
      String.index(_:offsetBy:)();
      uint64_t v13 = String.subscript.getter();
      uint64_t v15 = v14;
      unint64_t v17 = _swiftEmptyArrayStorage[2];
      unint64_t v16 = _swiftEmptyArrayStorage[3];
      if (v17 >= v16 >> 1) {
        sub_10005B590(v16 > 1, v17 + 1, 1);
      }
      ++v9;
      _swiftEmptyArrayStorage[2] = v17 + 1;
      id v18 = &_swiftEmptyArrayStorage[2 * v17];
      v18[4] = v13;
      v18[5] = v15;
      if (v9 == v4) {
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
LABEL_24:
  __break(1u);
}

void *sub_100044474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 < 0)
  {
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    if (a3)
    {
      uint64_t v6 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
      uint64_t v7 = v6;
      void v6[2] = a3;
      v6[4] = a1;
      v6[5] = a2;
      if (a3 != 1)
      {
        void v6[6] = a1;
        v6[7] = a2;
        uint64_t v8 = a3 - 2;
        if (v8)
        {
          uint64_t v9 = v6 + 9;
          do
          {
            *(v9 - 1) = a1;
            *uint64_t v9 = a2;
            swift_bridgeObjectRetain();
            v9 += 2;
            --v8;
          }
          while (v8);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return _swiftEmptyArrayStorage;
    }
    return v7;
  }
  return result;
}

id sub_100044570()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_100029C7C(0, &qword_1000F5320);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithValues:isa];

  return v2;
}

id sub_1000445F8()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithString:v1];

  return v2;
}

uint64_t sub_10004466C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1000446AC()
{
  sub_100098B1C(*(void *)(v0 + 24), *(void *)(v0 + 32));
}

id sub_1000446D8(void *a1)
{
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v4 = [v1 initWithFile:a1 name:v3];

  return v4;
}

id sub_100044744(void *a1)
{
  id v7 = 0;
  id v3 = [v1 initWithDescriptor:a1 error:&v7];
  if (v3)
  {
    id v4 = v7;
  }
  else
  {
    id v5 = v7;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }

  return v3;
}

id sub_100044808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a2)
  {
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    if (a4) {
      goto LABEL_3;
    }
  }
  else
  {
    NSString v11 = 0;
    if (a4)
    {
LABEL_3:
      NSString v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      if (a6) {
        goto LABEL_4;
      }
LABEL_8:
      NSString v13 = 0;
      if (a7) {
        goto LABEL_5;
      }
LABEL_9:
      v14.super.Class isa = 0;
      goto LABEL_10;
    }
  }
  NSString v12 = 0;
  if (!a6) {
    goto LABEL_8;
  }
LABEL_4:
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a7) {
    goto LABEL_9;
  }
LABEL_5:
  sub_100029C7C(0, &qword_1000F51D0);
  v14.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
LABEL_10:
  id v15 = [v7 initWithName:v11 description:v12 associatedAppBundleIdentifier:v13 actions:v14.super.isa];

  return v15;
}

uint64_t sub_10004492C()
{
  swift_arrayDestroy();

  return _swift_deallocClassInstance(v0, 32, 7);
}

uint64_t sub_100044970()
{
  type metadata accessor for WFWorkflowTypeName(0);
  swift_arrayDestroy();

  return _swift_deallocClassInstance(v0, 32, 7);
}

void sub_1000449D0(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_3;
    }
LABEL_5:
    id v3 = &_swiftEmptySetSingleton;
    goto LABEL_6;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  sub_100025A08(&qword_1000F5318);
  id v3 = (void *)static _SetStorage.allocate(capacity:)();
LABEL_6:
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v5)
    {
LABEL_26:
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v5) {
      goto LABEL_26;
    }
  }
  unint64_t v6 = 0;
  id v7 = (char *)(v3 + 7);
  unint64_t v27 = a1 & 0xC000000000000001;
  unint64_t v24 = a1 + 32;
  uint64_t v25 = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v26 = v5;
  while (1)
  {
    if (v27)
    {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v6 >= *(void *)(v25 + 16)) {
        goto LABEL_29;
      }
      id v8 = *(id *)(v24 + 8 * v6);
    }
    uint64_t v9 = v8;
    BOOL v10 = __OFADD__(v6++, 1);
    if (v10) {
      break;
    }
    Swift::Int v11 = NSObject._rawHashValue(seed:)(v3[5]);
    uint64_t v12 = -1 << *((unsigned char *)v3 + 32);
    unint64_t v13 = v11 & ~v12;
    unint64_t v14 = v13 >> 6;
    uint64_t v15 = *(void *)&v7[8 * (v13 >> 6)];
    uint64_t v16 = 1 << v13;
    if (((1 << v13) & v15) != 0)
    {
      sub_100029C7C(0, &qword_1000F51D0);
      id v17 = *(id *)(v3[6] + 8 * v13);
      char v18 = static NSObject.== infix(_:_:)();

      if (v18)
      {
LABEL_21:

        uint64_t v5 = v26;
        goto LABEL_25;
      }
      uint64_t v19 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v19;
        unint64_t v14 = v13 >> 6;
        uint64_t v15 = *(void *)&v7[8 * (v13 >> 6)];
        uint64_t v16 = 1 << v13;
        if ((v15 & (1 << v13)) == 0) {
          break;
        }
        id v20 = *(id *)(v3[6] + 8 * v13);
        char v21 = static NSObject.== infix(_:_:)();

        if (v21) {
          goto LABEL_21;
        }
      }
      uint64_t v5 = v26;
    }
    *(void *)&v7[8 * v14] = v16 | v15;
    *(void *)(v3[6] + 8 * v13) = v9;
    uint64_t v22 = v3[2];
    BOOL v10 = __OFADD__(v22, 1);
    uint64_t v23 = v22 + 1;
    if (v10) {
      goto LABEL_28;
    }
    v3[2] = v23;
LABEL_25:
    if (v6 == v5) {
      goto LABEL_26;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
}

uint64_t sub_100044C24(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_1000646E0(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_100044CA0(v6);
  return specialized ContiguousArray._endMutation()();
}

void sub_100044CA0(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        sub_100045500(0, v3, 1, a1);
      }
      return;
    }
    goto LABEL_147;
  }
  Swift::Int v5 = v4;
  uint64_t v6 = sub_100088A34(v3 / 2);
  id v132 = v7;
  uint64_t v137 = v6;
  uint64_t v130 = v3;
  uint64_t v126 = a1;
  if (v3 <= 0)
  {
    BOOL v10 = (char *)_swiftEmptyArrayStorage;
    unint64_t v67 = _swiftEmptyArrayStorage[2];
LABEL_109:
    if (v67 < 2)
    {
LABEL_123:
      swift_bridgeObjectRelease();
      if (v3 >= -1)
      {
        *(void *)((v137 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
        specialized Array._endMutation()();
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_152;
    }
    uint64_t v117 = *v126;
    while (1)
    {
      unint64_t v118 = v67 - 2;
      if (v67 < 2) {
        break;
      }
      if (!v117) {
        goto LABEL_156;
      }
      uint64_t v119 = *(void *)&v10[16 * v118 + 32];
      uint64_t v120 = *(void *)&v10[16 * v67 + 24];
      sub_100045680((id *)(v117 + 8 * v119), (id *)(v117 + 8 * *(void *)&v10[16 * v67 + 16]), v117 + 8 * v120, v132);
      if (v1) {
        goto LABEL_121;
      }
      if (v120 < v119) {
        goto LABEL_142;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100063C20((uint64_t)v10);
        BOOL v10 = v123;
      }
      if (v118 >= *((void *)v10 + 2)) {
        goto LABEL_143;
      }
      NSString v121 = &v10[16 * v118 + 32];
      *(void *)NSString v121 = v119;
      *((void *)v121 + 1) = v120;
      unint64_t v122 = *((void *)v10 + 2);
      if (v67 > v122) {
        goto LABEL_144;
      }
      memmove(&v10[16 * v67 + 16], &v10[16 * v67 + 32], 16 * (v122 - v67));
      *((void *)v10 + 2) = v122 - 1;
      unint64_t v67 = v122 - 1;
      Swift::Int v3 = v130;
      if (v122 <= 2) {
        goto LABEL_123;
      }
    }
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
    return;
  }
  uint64_t v8 = 0;
  uint64_t v9 = *a1;
  uint64_t v125 = *a1 - 8;
  BOOL v10 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v127 = v5;
  uint64_t v136 = *a1;
  while (1)
  {
    Swift::Int v11 = v8;
    Swift::Int v12 = v8 + 1;
    Swift::Int v129 = v8;
    if (v8 + 1 < v3)
    {
      unint64_t v13 = v10;
      unint64_t v14 = *(void **)(v9 + 8 * v8);
      id v15 = *(id *)(v9 + 8 * v12);
      id v16 = v14;
      id v17 = [v15 localizedName];
      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v20 = v19;

      id v21 = [v16 localizedName];
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v24 = v23;

      if (v18 == v22 && v20 == v24) {
        int v133 = 0;
      }
      else {
        int v133 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      Swift::Int v3 = v130;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      Swift::Int v26 = v129;
      Swift::Int v12 = v129 + 2;
      uint64_t v9 = v136;
      if (v129 + 2 < v130)
      {
        while (1)
        {
          uint64_t v27 = v9 + 8 * v26;
          uint64_t v28 = *(void **)(v27 + 8);
          id v29 = *(id *)(v27 + 16);
          id v30 = v28;
          id v31 = [v29 localizedName];
          uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v34 = v33;

          id v35 = [v30 localizedName];
          uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v38 = v37;

          BOOL v39 = v32 == v36 && v34 == v38;
          int v40 = v39 ? 0 : _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          Swift::Int v3 = v130;
          if ((v133 ^ v40)) {
            break;
          }
          uint64_t v41 = v26 + 3;
          ++v26;
          uint64_t v9 = v136;
          if (v41 >= v130)
          {
            Swift::Int v12 = v130;
            goto LABEL_22;
          }
        }
        Swift::Int v12 = v26 + 2;
        uint64_t v9 = v136;
      }
LABEL_22:
      BOOL v10 = v13;
      Swift::Int v5 = v127;
      if (v133)
      {
        Swift::Int v11 = v129;
        if (v12 < v129) {
          goto LABEL_149;
        }
        if (v129 < v12)
        {
          unint64_t v42 = (uint64_t *)(v125 + 8 * v12);
          Swift::Int v43 = v12;
          Swift::Int v44 = v129;
          uint64_t v45 = (uint64_t *)(v9 + 8 * v129);
          do
          {
            if (v44 != --v43)
            {
              if (!v9) {
                goto LABEL_155;
              }
              uint64_t v46 = *v45;
              *uint64_t v45 = *v42;
              *unint64_t v42 = v46;
            }
            ++v44;
            --v42;
            ++v45;
          }
          while (v44 < v43);
        }
      }
      else
      {
        Swift::Int v11 = v129;
      }
    }
    if (v12 < v3)
    {
      if (__OFSUB__(v12, v11)) {
        goto LABEL_146;
      }
      if (v12 - v11 < v5)
      {
        if (__OFADD__(v11, v5)) {
          goto LABEL_150;
        }
        if (v11 + v5 >= v3) {
          Swift::Int v47 = v3;
        }
        else {
          Swift::Int v47 = v11 + v5;
        }
        if (v47 < v11) {
          goto LABEL_151;
        }
        if (v12 != v47)
        {
          NSString v124 = v10;
          uint64_t v48 = v125 + 8 * v12;
          Swift::Int v128 = v47;
          do
          {
            id v49 = *(void **)(v9 + 8 * v12);
            uint64_t v131 = v48;
            Swift::Int v134 = v12;
            while (1)
            {
              id v50 = *(void **)v48;
              id v51 = v49;
              id v52 = v50;
              id v53 = [v51 localizedName];
              uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v56 = v55;

              id v57 = [v52 localizedName];
              uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v60 = v59;

              if (v54 == v58 && v56 == v60) {
                break;
              }
              char v62 = _stringCompareWithSmolCheck(_:_:expecting:)();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v62 & 1) == 0) {
                goto LABEL_52;
              }
              Swift::Int v63 = v134;
              uint64_t v9 = v136;
              if (!v136) {
                goto LABEL_153;
              }
              id v64 = *(void **)v48;
              id v49 = *(void **)(v48 + 8);
              *(void *)uint64_t v48 = v49;
              *(void *)(v48 + 8) = v64;
              v48 -= 8;
              if (v134 == ++v11) {
                goto LABEL_53;
              }
            }

            swift_bridgeObjectRelease_n();
LABEL_52:
            Swift::Int v63 = v134;
            uint64_t v9 = v136;
LABEL_53:
            Swift::Int v12 = v63 + 1;
            uint64_t v48 = v131 + 8;
            Swift::Int v11 = v129;
          }
          while (v12 != v128);
          Swift::Int v12 = v128;
          BOOL v10 = v124;
          Swift::Int v5 = v127;
        }
      }
    }
    if (v12 < v11) {
      goto LABEL_145;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100063B48(0, *((void *)v10 + 2) + 1, 1, v10);
      BOOL v10 = v115;
    }
    unint64_t v66 = *((void *)v10 + 2);
    unint64_t v65 = *((void *)v10 + 3);
    unint64_t v67 = v66 + 1;
    uint64_t v9 = v136;
    if (v66 >= v65 >> 1)
    {
      sub_100063B48(v65 > 1, v66 + 1, 1, v10);
      uint64_t v9 = v136;
      BOOL v10 = v116;
    }
    *((void *)v10 + 2) = v67;
    uint64_t v68 = v10 + 32;
    id v69 = &v10[16 * v66 + 32];
    *(void *)id v69 = v11;
    *((void *)v69 + 1) = v12;
    uint64_t v135 = v12;
    if (v66) {
      break;
    }
    unint64_t v67 = 1;
LABEL_103:
    Swift::Int v3 = v130;
    uint64_t v8 = v135;
    if (v135 >= v130) {
      goto LABEL_109;
    }
  }
  while (1)
  {
    unint64_t v70 = v67 - 1;
    if (v67 >= 4)
    {
      uint64_t v75 = &v68[2 * v67];
      uint64_t v76 = *(v75 - 8);
      uint64_t v77 = *(v75 - 7);
      BOOL v81 = __OFSUB__(v77, v76);
      uint64_t v78 = v77 - v76;
      if (v81) {
        goto LABEL_130;
      }
      uint64_t v80 = *(v75 - 6);
      uint64_t v79 = *(v75 - 5);
      BOOL v81 = __OFSUB__(v79, v80);
      uint64_t v73 = v79 - v80;
      char v74 = v81;
      if (v81) {
        goto LABEL_131;
      }
      unint64_t v82 = v67 - 2;
      NSString v83 = &v68[2 * v67 - 4];
      uint64_t v85 = *v83;
      uint64_t v84 = v83[1];
      BOOL v81 = __OFSUB__(v84, v85);
      uint64_t v86 = v84 - v85;
      if (v81) {
        goto LABEL_132;
      }
      BOOL v81 = __OFADD__(v73, v86);
      uint64_t v87 = v73 + v86;
      if (v81) {
        goto LABEL_134;
      }
      if (v87 >= v78)
      {
        uint64_t v105 = &v68[2 * v70];
        uint64_t v107 = *v105;
        uint64_t v106 = v105[1];
        BOOL v81 = __OFSUB__(v106, v107);
        uint64_t v108 = v106 - v107;
        if (v81) {
          goto LABEL_140;
        }
        BOOL v98 = v73 < v108;
        goto LABEL_92;
      }
    }
    else
    {
      if (v67 != 3)
      {
        uint64_t v99 = *((void *)v10 + 4);
        uint64_t v100 = *((void *)v10 + 5);
        BOOL v81 = __OFSUB__(v100, v99);
        uint64_t v92 = v100 - v99;
        char v93 = v81;
        goto LABEL_86;
      }
      uint64_t v72 = *((void *)v10 + 4);
      uint64_t v71 = *((void *)v10 + 5);
      BOOL v81 = __OFSUB__(v71, v72);
      uint64_t v73 = v71 - v72;
      char v74 = v81;
    }
    if (v74) {
      goto LABEL_133;
    }
    unint64_t v82 = v67 - 2;
    id v88 = &v68[2 * v67 - 4];
    uint64_t v90 = *v88;
    uint64_t v89 = v88[1];
    BOOL v91 = __OFSUB__(v89, v90);
    uint64_t v92 = v89 - v90;
    char v93 = v91;
    if (v91) {
      goto LABEL_135;
    }
    Class v94 = &v68[2 * v70];
    uint64_t v96 = *v94;
    uint64_t v95 = v94[1];
    BOOL v81 = __OFSUB__(v95, v96);
    uint64_t v97 = v95 - v96;
    if (v81) {
      goto LABEL_137;
    }
    if (__OFADD__(v92, v97)) {
      goto LABEL_139;
    }
    if (v92 + v97 >= v73)
    {
      BOOL v98 = v73 < v97;
LABEL_92:
      if (v98) {
        unint64_t v70 = v82;
      }
      goto LABEL_94;
    }
LABEL_86:
    if (v93) {
      goto LABEL_136;
    }
    uint64_t v101 = &v68[2 * v70];
    uint64_t v103 = *v101;
    uint64_t v102 = v101[1];
    BOOL v81 = __OFSUB__(v102, v103);
    uint64_t v104 = v102 - v103;
    if (v81) {
      goto LABEL_138;
    }
    if (v104 < v92) {
      goto LABEL_103;
    }
LABEL_94:
    unint64_t v109 = v70 - 1;
    if (v70 - 1 >= v67)
    {
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
      goto LABEL_141;
    }
    if (!v9) {
      goto LABEL_154;
    }
    id v110 = &v68[2 * v109];
    uint64_t v111 = *v110;
    id v112 = &v68[2 * v70];
    uint64_t v113 = v112[1];
    sub_100045680((id *)(v9 + 8 * *v110), (id *)(v9 + 8 * *v112), v9 + 8 * v113, v132);
    if (v1) {
      break;
    }
    if (v113 < v111) {
      goto LABEL_127;
    }
    if (v70 > *((void *)v10 + 2)) {
      goto LABEL_128;
    }
    *id v110 = v111;
    v68[2 * v109 + 1] = v113;
    unint64_t v114 = *((void *)v10 + 2);
    if (v70 >= v114) {
      goto LABEL_129;
    }
    unint64_t v67 = v114 - 1;
    memmove(&v68[2 * v70], v112 + 2, 16 * (v114 - 1 - v70));
    *((void *)v10 + 2) = v114 - 1;
    uint64_t v9 = v136;
    if (v114 <= 2) {
      goto LABEL_103;
    }
  }
LABEL_121:
  swift_bridgeObjectRelease();
  if (v130 < -1) {
    goto LABEL_148;
  }
  *(void *)((v137 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
  specialized Array._endMutation()();
  swift_bridgeObjectRelease();
}

uint64_t sub_100045500(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v23 = result;
  if (a3 != a2)
  {
    uint64_t v25 = *a4;
    uint64_t v4 = *a4 + 8 * a3 - 8;
    while (2)
    {
      Swift::Int v5 = *(void **)(v25 + 8 * a3);
      uint64_t v6 = v23;
      uint64_t v24 = v4;
      uint64_t v26 = a3;
      while (1)
      {
        id v7 = *(void **)v4;
        id v8 = v5;
        id v9 = v7;
        id v10 = [v8 localizedName];
        uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v13 = v12;

        id v14 = [v9 localizedName];
        uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v17 = v16;

        if (v11 == v15 && v13 == v17) {
          break;
        }
        char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v20 = v26;
        if (v19)
        {
          if (!v25)
          {
            __break(1u);
            return result;
          }
          id v21 = *(void **)v4;
          Swift::Int v5 = *(void **)(v4 + 8);
          *(void *)uint64_t v4 = v5;
          *(void *)(v4 + 8) = v21;
          v4 -= 8;
          if (v26 != ++v6) {
            continue;
          }
        }
        goto LABEL_13;
      }

      uint64_t result = swift_bridgeObjectRelease_n();
      uint64_t v20 = v26;
LABEL_13:
      a3 = v20 + 1;
      uint64_t v4 = v24 + 8;
      if (a3 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_100045680(id *a1, id *a2, unint64_t a3, void **a4)
{
  uint64_t v6 = a2;
  id v7 = a1;
  uint64_t v8 = (char *)a2 - (char *)a1;
  uint64_t v9 = a2 - a1;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 8;
  if (v9 >= v11)
  {
    sub_100089028(a2, (uint64_t)(a3 - (void)a2) / 8, a4);
    uint64_t v56 = a4;
    uint64_t v12 = &a4[v11];
    if (v7 >= v6 || v10 < 8)
    {
      id v14 = a4;
      goto LABEL_52;
    }
    uint64_t v34 = (id *)(a3 - 8);
    unint64_t v55 = (unint64_t)v7;
    while (1)
    {
      unint64_t v60 = (unint64_t)v12;
      id v35 = *--v12;
      char v62 = v6;
      uint64_t v37 = v6 - 1;
      uint64_t v36 = *(v6 - 1);
      id v38 = v35;
      id v39 = v36;
      uint64_t v58 = v38;
      id v40 = [v38 localizedName];
      uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v43 = v42;

      id v44 = [v39 localizedName];
      uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v47 = v46;

      if (v41 == v45 && v43 == v47) {
        char v49 = 0;
      }
      else {
        char v49 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      id v50 = v34 + 1;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      if (v49)
      {
        BOOL v51 = v50 != v62 || v34 >= v62;
        uint64_t v6 = v37;
        uint64_t v12 = (void **)v60;
        if (!v51) {
          goto LABEL_47;
        }
      }
      else
      {
        BOOL v52 = v50 != (id *)v60 || (unint64_t)v34 >= v60;
        uint64_t v37 = v12;
        uint64_t v6 = v62;
        if (!v52) {
          goto LABEL_47;
        }
      }
      id *v34 = *v37;
LABEL_47:
      --v34;
      if ((unint64_t)v6 <= v55 || v12 <= v56)
      {
        id v14 = v56;
        goto LABEL_52;
      }
    }
  }
  sub_100089028(a1, a2 - a1, a4);
  uint64_t v12 = &a4[v9];
  BOOL v13 = (unint64_t)v6 >= a3 || v8 < 8;
  id v14 = a4;
  if (!v13)
  {
    unint64_t v57 = a3;
    unint64_t v59 = (unint64_t)&a4[v9];
    while (1)
    {
      uint64_t v15 = v7;
      id v61 = v6;
      uint64_t v16 = *v14;
      id v17 = *v6;
      id v18 = v16;
      id v19 = [v17 localizedName];
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v22 = v21;

      id v23 = [v18 localizedName];
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v26 = v25;

      if (v20 == v24 && v22 == v26) {
        break;
      }
      char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v28 & 1) == 0) {
        goto LABEL_14;
      }
      id v29 = v61;
      uint64_t v6 = v61 + 1;
      id v30 = v15;
      BOOL v31 = v15 == v61;
LABEL_15:
      uint64_t v12 = (void **)v59;
      if (!v31) {
        *id v30 = *v29;
      }
      id v7 = v30 + 1;
      if ((unint64_t)v14 >= v59 || (unint64_t)v6 >= v57) {
        goto LABEL_22;
      }
    }

    swift_bridgeObjectRelease_n();
LABEL_14:
    id v29 = v14;
    id v30 = v15;
    BOOL v31 = v15 == v14++;
    uint64_t v6 = v61;
    goto LABEL_15;
  }
LABEL_22:
  uint64_t v6 = v7;
LABEL_52:
  sub_100089028(v14, v12 - v14, v6);
  return 1;
}

id sub_1000459C8(uint64_t a1, uint64_t a2, unsigned __int16 a3, uint64_t a4, void *a5)
{
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [a5 createFolderWithName:v8 icon:a3 error:a4];

  return v9;
}

uint64_t sub_100045A44(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001E8D0(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100045A94()
{
  unint64_t result = qword_1000F5308;
  if (!qword_1000F5308)
  {
    sub_100029C7C(255, &qword_1000F51D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5308);
  }
  return result;
}

void sub_100045AF4()
{
  sub_10003FECC(*(void **)(v0 + 16));
}

void sub_100045B20(void *a1)
{
  id v1 = [a1 rootViewController];
  if (v1)
  {
    id v2 = v1;
    type metadata accessor for DebugMenuViewController();
    sub_1000483D8(v2);
  }
}

id sub_100045B98()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DebugUtilities();
  return [super init];
}

id sub_100045BF0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DebugUtilities();
  return [super dealloc];
}

uint64_t type metadata accessor for DebugUtilities()
{
  return self;
}

uint64_t sub_100045C48()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100045C80()
{
  sub_100045B20(*(void **)(v0 + 16));
}

id sub_100045CCC()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for Toolbar();
  [super backgroundColor];

  return v1;
}

void sub_100045D74(void *a1)
{
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for Toolbar();
  [super setBackgroundColor:a1];
  sub_100045DC4();
}

void sub_100045DC4()
{
  id v1 = [v0 backgroundColor];
  if (v1)
  {
    objc_super v2 = v1;
    id v3 = [self wf_imageWithColor:v1];
  }
  else
  {
    id v3 = 0;
  }
  [v0 setShadowImage:v3 forToolbarPosition:0];
  [v0 setBackgroundImage:v3 forToolbarPosition:0 barMetrics:0];
  id v4 = [v0 backgroundColor];
  [v0 setBarTintColor:v4];
}

id sub_100045EBC(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for Toolbar();
  [super initWithCoder:a1];

  return v3;
}

id sub_100045F38()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Toolbar();
  return [super dealloc];
}

void sub_100045F70()
{
  uint64_t v1 = OBJC_IVAR____TtC9Shortcuts29FloatingToolbarViewController_toolbar;
  type metadata accessor for Toolbar();
  *(void *)&v0[v1] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *(void *)&v0[OBJC_IVAR____TtC9Shortcuts29FloatingToolbarViewController_bottomConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Shortcuts29FloatingToolbarViewController_backgroundColor] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_100046030()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for FloatingToolbarViewController();
  [super dealloc];
}

void sub_100046128(void *a1)
{
  id v3 = [v1 parentViewController];
  if (v3)
  {
    id v4 = v3;
    if ([a1 object])
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v33, 0, sizeof(v33));
    }
    sub_1000465D4((uint64_t)v33, (uint64_t)&aBlock);
    if (v29)
    {
      sub_100029C7C(0, &qword_1000F53C0);
      if (swift_dynamicCast())
      {
        objc_super v5 = v32;
        id v6 = [v4 view];
        if (v6)
        {
          id v7 = v6;
          [v5 keyboardFrameInView:v6];
          CGFloat v9 = v8;
          CGFloat v11 = v10;
          CGFloat v13 = v12;
          CGFloat v15 = v14;

          unsigned int v16 = [v5 isVisible];
          double v17 = 0.0;
          if (v16)
          {
            v34.origin.x = v9;
            v34.origin.y = v11;
            v34.size.width = v13;
            v34.size.height = v15;
            double v17 = 0.0 - CGRectGetHeight(v34);
          }
          [*(id *)&v1[OBJC_IVAR____TtC9Shortcuts29FloatingToolbarViewController_bottomConstraint] setConstant:v17];
          [*(id *)&v1[OBJC_IVAR____TtC9Shortcuts29FloatingToolbarViewController_toolbar] setNeedsLayout];
          [v5 animationDuration];
          double v19 = v18;
          uint64_t v20 = (void)[v5 animationCurve] << 16;
          uint64_t v21 = self;
          uint64_t v22 = swift_allocObject();
          *(void *)(v22 + 16) = v1;
          id v30 = sub_1000466D4;
          uint64_t v31 = v22;
          long long aBlock = _NSConcreteStackBlock;
          uint64_t v27 = 1107296256;
          char v28 = sub_10000E51C;
          id v29 = &unk_1000E5AB8;
          id v23 = _Block_copy(&aBlock);
          uint64_t v24 = v1;
          swift_release();
          id v30 = (void (*)())static NavigationDestinationEntity.defaultQuery.setter;
          uint64_t v31 = 0;
          long long aBlock = _NSConcreteStackBlock;
          uint64_t v27 = 1107296256;
          char v28 = sub_10002B23C;
          id v29 = &unk_1000E5AE0;
          uint64_t v25 = _Block_copy(&aBlock);
          [v21 animateWithDuration:v20 delay:v23 options:v25 animations:v19 completion:0.0];
          _Block_release(v25);
          _Block_release(v23);
        }
        else
        {
          __break(1u);
        }
      }
      else
      {
      }
    }
    else
    {

      sub_10004663C((uint64_t)&aBlock);
    }
  }
}

void sub_10004644C(void *a1)
{
  id v1 = [a1 view];
  if (v1)
  {
    objc_super v2 = v1;
    id v3 = [v1 superview];

    [v3 layoutIfNeeded];
  }
  else
  {
    __break(1u);
  }
}

void sub_100046538()
{
}

uint64_t sub_100046590()
{
  return _swift_deallocObject(v0, 25, 7);
}

void sub_1000465C8()
{
  sub_10000861C(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1000465D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100025A08(&qword_1000F7670);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004663C(uint64_t a1)
{
  uint64_t v2 = sub_100025A08(&qword_1000F7670);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10004669C()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000466D4()
{
  sub_10004644C(*(void **)(v0 + 16));
}

uint64_t sub_1000466EC()
{
  uint64_t v0 = LocalizedStringKey.init(stringLiteral:)();
  return sub_10002A078(v0, v1, v2, v3);
}

void sub_100046734()
{
  sub_10002066C();
  uint64_t v0 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  __chkstk_darwin(v1);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._object = (void *)0x80000001000C0DF0;
  v2._countAndFlagsBits = 0xD000000000000037;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v2);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v3._countAndFlagsBits = 0x53207965489C80E2;
  v3._object = (void *)0xAD0000202C697269;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v3);
  type metadata accessor for TipController.UseSiriToRunShortcutTip();
  sub_100025A08(&qword_1000F53D0);
  Tips.Parameter.wrappedValue.getter();
  if (v27)
  {
    uint64_t v4 = v28;
    objc_super v5 = v29;
    swift_bridgeObjectRelease();
  }
  else
  {
    objc_super v5 = (void *)0xEE00656C74695420;
    uint64_t v4 = 0x74756374726F6853;
  }
  v6._countAndFlagsBits = v4;
  v6._object = v5;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v6);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 10322146;
  v7._object = (void *)0xA300000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v7);
  uint64_t v8 = LocalizedStringKey.init(stringInterpolation:)();
  uint64_t v12 = sub_10002A078(v8, v9, v10, v11);
  uint64_t v14 = v13;
  char v16 = v15 & 1;
  static HierarchicalShapeStyle.primary.getter();
  uint64_t v17 = Text.foregroundStyle<A>(_:)();
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  sub_100010C50(v12, v14, v16);
  swift_bridgeObjectRelease();
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
  sub_100010C50(v17, v19, v21);
  swift_bridgeObjectRelease();
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v22);
  uint64_t v23 = LocalizedStringKey.init(stringInterpolation:)();
  sub_10002A078(v23, v24, v25, v26);
  sub_10001885C();
}

uint64_t sub_100046994()
{
  return Image.init(_:bundle:)(0x70695469726953, 0xE700000000000000, 0);
}

void sub_1000469B0()
{
  sub_10002066C();
  uint64_t v31 = v0;
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  Swift::String v6 = v5;
  uint64_t v7 = type metadata accessor for Tips.InvalidationReason();
  sub_100022284();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_10001888C();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = type metadata accessor for Logger();
  sub_100022284();
  uint64_t v30 = v15;
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  char v21 = (char *)&v30 - v20;
  sub_100046D10(v2, v6);
  if (v22)
  {
    type metadata accessor for TipController.UseSiriToRunShortcutTip();
    sub_100025A08(&qword_1000F53D0);
    Tips.Parameter.wrappedValue.getter();
    uint64_t v23 = v33;
    sub_100047080(v32, v33);
    if (v23)
    {
      if (sub_1000470C4(v4))
      {
        static WFLog.subscript.getter();
        uint64_t v24 = Logger.logObject.getter();
        os_log_type_t v25 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v24, v25))
        {
          uint64_t v26 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v26 = 0;
          _os_log_impl((void *)&_mh_execute_header, v24, v25, "Object referenced in the tip was modified. The delegate decided to stop showing the tip.", v26, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v30 + 8))(v21, v14);
        sub_10001FAF0();
      }
      if (sub_1000470C4(v31))
      {
        static WFLog.subscript.getter();
        uint64_t v27 = Logger.logObject.getter();
        os_log_type_t v28 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v27, v28))
        {
          id v29 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v29 = 0;
          _os_log_impl((void *)&_mh_execute_header, v27, v28, "Object referenced in the tip was removed. Nullifying personal content.", v29, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v30 + 8))(v19, v14);
        sub_10001FAF0();
      }
    }
  }
  else
  {
    (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v13, enum case for Tips.InvalidationReason.actionPerformed(_:), v7);
    type metadata accessor for TipController.UseSiriToRunShortcutTip();
    sub_100006FB8(&qword_1000F53C8, (void (*)(uint64_t))type metadata accessor for TipController.UseSiriToRunShortcutTip);
    Tip.invalidate(reason:)();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v7);
  }
  sub_10001885C();
}

void sub_100046D10(uint64_t a1, void *a2)
{
  uint64_t v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_100047C00();
    sub_100006FB8((unint64_t *)&qword_1000F53E0, (void (*)(uint64_t))sub_100047C00);
    Set.Iterator.init(_cocoa:)();
    uint64_t v2 = v23;
    uint64_t v21 = v24;
    uint64_t v3 = v25;
    int64_t v4 = v26;
    unint64_t v5 = v27;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v21 = a1 + 56;
    uint64_t v7 = ~v6;
    uint64_t v8 = -v6;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v5 = v9 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = v7;
    int64_t v4 = 0;
  }
  uint64_t v19 = v3;
  int64_t v20 = (unint64_t)(v3 + 64) >> 6;
  if (v2 < 0) {
    goto LABEL_10;
  }
LABEL_8:
  if (v5)
  {
    uint64_t v10 = (v5 - 1) & v5;
    unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
    int64_t v12 = v4;
    goto LABEL_29;
  }
  int64_t v14 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v14 < v20)
    {
      unint64_t v15 = *(void *)(v21 + 8 * v14);
      int64_t v12 = v4 + 1;
      if (v15) {
        goto LABEL_28;
      }
      int64_t v12 = v4 + 2;
      if (v4 + 2 >= v20) {
        goto LABEL_37;
      }
      unint64_t v15 = *(void *)(v21 + 8 * v12);
      if (v15) {
        goto LABEL_28;
      }
      int64_t v12 = v4 + 3;
      if (v4 + 3 >= v20) {
        goto LABEL_37;
      }
      unint64_t v15 = *(void *)(v21 + 8 * v12);
      if (v15) {
        goto LABEL_28;
      }
      int64_t v12 = v4 + 4;
      if (v4 + 4 >= v20) {
        goto LABEL_37;
      }
      unint64_t v15 = *(void *)(v21 + 8 * v12);
      if (v15)
      {
LABEL_28:
        uint64_t v10 = (v15 - 1) & v15;
        unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_29:
        id v13 = *(id *)(*(void *)(v2 + 48) + 8 * v11);
        if (v13)
        {
          while (1)
          {
            if (objc_msgSend(v13, "objectType", v19) == (id)5)
            {
              NSString v17 = [v13 identifier];
              if (!v17)
              {
                static String._unconditionallyBridgeFromObjectiveC(_:)();
                NSString v17 = String._bridgeToObjectiveC()();
                swift_bridgeObjectRelease();
              }
              id v18 = [a2 workflowSiriRunEventWithIdentifier:v17];

              if (v18) {
                break;
              }
            }

            int64_t v4 = v12;
            unint64_t v5 = v10;
            if ((v2 & 0x8000000000000000) == 0) {
              goto LABEL_8;
            }
LABEL_10:
            if (__CocoaSet.Iterator.next()())
            {
              sub_100047C00();
              swift_unknownObjectRetain();
              swift_dynamicCast();
              id v13 = v28;
              swift_unknownObjectRelease();
              int64_t v12 = v4;
              uint64_t v10 = v5;
              if (v28) {
                continue;
              }
            }
            goto LABEL_37;
          }
        }
        goto LABEL_37;
      }
      int64_t v12 = v4 + 5;
      if (v4 + 5 < v20)
      {
        unint64_t v15 = *(void *)(v21 + 8 * v12);
        if (!v15)
        {
          int64_t v16 = v4 + 6;
          while (v16 < v20)
          {
            unint64_t v15 = *(void *)(v21 + 8 * v16++);
            if (v15)
            {
              int64_t v12 = v16 - 1;
              goto LABEL_28;
            }
          }
          goto LABEL_37;
        }
        goto LABEL_28;
      }
    }
LABEL_37:
    sub_100047C40();

    return;
  }
  __break(1u);
}

uint64_t sub_100047080(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000470C4(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_100047C00();
    sub_100006FB8((unint64_t *)&qword_1000F53E0, (void (*)(uint64_t))sub_100047C00);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v29;
    uint64_t v25 = v30;
    uint64_t v3 = v31;
    int64_t v4 = v32;
    unint64_t v5 = v33;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v25 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v4 = 0;
  }
  uint64_t v23 = v3;
  int64_t v24 = (unint64_t)(v3 + 64) >> 6;
  while (1)
  {
    if (v1 < 0)
    {
      uint64_t v12 = __CocoaSet.Iterator.next()();
      if (!v12) {
        goto LABEL_41;
      }
      sub_100047C00();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v13 = (id)v27;
      swift_unknownObjectRelease();
      int64_t v11 = v4;
      if (!v27) {
        goto LABEL_40;
      }
      goto LABEL_31;
    }
    if (!v5) {
      break;
    }
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v10 = v9 | (v4 << 6);
    int64_t v11 = v4;
LABEL_30:
    id v13 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v13) {
      goto LABEL_40;
    }
LABEL_31:
    int64_t v26 = v11;
    id v17 = [v13 identifier:v23];
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v19;

    type metadata accessor for TipController.UseSiriToRunShortcutTip();
    sub_100025A08(&qword_1000F53D0);
    Tips.Parameter.wrappedValue.getter();
    if (v28)
    {
      swift_bridgeObjectRetain();
      sub_100047080(v27, v28);
      if (v18 == v27 && v28 == v20)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v12 = 1;
        goto LABEL_41;
      }
      char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      int64_t v4 = v26;
      if (v22)
      {
        uint64_t v12 = 1;
        goto LABEL_41;
      }
    }
    else
    {

      uint64_t result = swift_bridgeObjectRelease();
      int64_t v4 = v26;
    }
  }
  int64_t v14 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v14 >= v24) {
      goto LABEL_40;
    }
    unint64_t v15 = *(void *)(v25 + 8 * v14);
    int64_t v11 = v4 + 1;
    if (!v15)
    {
      int64_t v11 = v4 + 2;
      if (v4 + 2 >= v24) {
        goto LABEL_40;
      }
      unint64_t v15 = *(void *)(v25 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v4 + 3;
        if (v4 + 3 >= v24) {
          goto LABEL_40;
        }
        unint64_t v15 = *(void *)(v25 + 8 * v11);
        if (!v15)
        {
          int64_t v11 = v4 + 4;
          if (v4 + 4 >= v24) {
            goto LABEL_40;
          }
          unint64_t v15 = *(void *)(v25 + 8 * v11);
          if (!v15)
          {
            int64_t v11 = v4 + 5;
            if (v4 + 5 >= v24) {
              goto LABEL_40;
            }
            unint64_t v15 = *(void *)(v25 + 8 * v11);
            if (!v15)
            {
              int64_t v16 = v4 + 6;
              while (v16 < v24)
              {
                unint64_t v15 = *(void *)(v25 + 8 * v16++);
                if (v15)
                {
                  int64_t v11 = v16 - 1;
                  goto LABEL_29;
                }
              }
LABEL_40:
              uint64_t v12 = 0;
LABEL_41:
              sub_100047C40();
              return v12;
            }
          }
        }
      }
    }
LABEL_29:
    unint64_t v5 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v11 << 6);
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000474AC(void *a1)
{
  if (!a1) {
    return 0;
  }
  id v1 = a1;
  id v2 = [v1 identifier];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v4 = [v1 name];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_100047564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  BOOL v12 = a1 == a5 && a2 == a6;
  if (v12 || (v13 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v13 & 1) != 0))
  {
    if (a3 == a7 && a4 == a8)
    {
      return 1;
    }
    else
    {
      return _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  return result;
}

uint64_t sub_100047604(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1000476CC()
{
  return 2;
}

uint64_t sub_1000476D4()
{
  return 0;
}

uint64_t sub_1000476E0(char a1)
{
  if (a1) {
    return 1701667182;
  }
  else {
    return 25705;
  }
}

uint64_t sub_100047704()
{
  return sub_1000476E0(*v0);
}

uint64_t sub_10004770C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100047604(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100047734()
{
  return sub_1000476D4();
}

uint64_t sub_100047754@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000476CC();
  *a1 = result;
  return result;
}

uint64_t sub_10004777C(uint64_t a1)
{
  unint64_t v2 = sub_100048110();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000477B8(uint64_t a1)
{
  unint64_t v2 = sub_100048110();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000477F4(void *a1)
{
  uint64_t v4 = sub_100025A08(&qword_1000F5588);
  sub_100022284();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1000074A4();
  sub_10002A498(a1, a1[3]);
  sub_100048110();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1) {
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t sub_100047930(void *a1)
{
  sub_100025A08(&qword_1000F5578);
  sub_100022284();
  __chkstk_darwin(v3);
  sub_1000165D8();
  uint64_t v4 = a1[4];
  sub_10002A498(a1, a1[3]);
  sub_100048110();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    sub_1000149BC((uint64_t)a1);
  }
  else
  {
    uint64_t v4 = KeyedDecodingContainer.decode(_:forKey:)();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v6 = sub_100025EB0();
    v7(v6);
    swift_bridgeObjectRetain();
    sub_1000149BC((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_100047AE0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100047930(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_100047B10(void *a1)
{
  return sub_1000477F4(a1);
}

uint64_t sub_100047B30(uint64_t *a1, uint64_t *a2)
{
  return sub_100047564(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_100047B4C()
{
  return sub_1000466EC();
}

uint64_t sub_100047B74()
{
  return sub_100046994();
}

uint64_t sub_100047B90@<X0>(uint64_t *a1@<X8>)
{
  sub_100006FB8(&qword_1000F53C8, (void (*)(uint64_t))type metadata accessor for TipController.UseSiriToRunShortcutTip);
  uint64_t result = Tip.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_100047C00()
{
  unint64_t result = qword_1000F53D8;
  if (!qword_1000F53D8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000F53D8);
  }
  return result;
}

uint64_t sub_100047C40()
{
  return swift_release();
}

ValueMetadata *type metadata accessor for TipController()
{
  return &type metadata for TipController;
}

uint64_t destroy for TipController.UseSiriToRunShortcutTip.PersonalContent()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for TipController.UseSiriToRunShortcutTip.PersonalContent(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TipController.UseSiriToRunShortcutTip.PersonalContent(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for TipController.UseSiriToRunShortcutTip.PersonalContent(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100047D8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100025A08(&qword_1000F5418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_100025A08(&qword_1000F53D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_100047E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100025A08(&qword_1000F5418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_100025A08(&qword_1000F53D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_100047F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100025A08(&qword_1000F5418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_100025A08(&qword_1000F53D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_100047FCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100047FE0);
}

uint64_t sub_100047FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100025A08(&qword_1000F5418);
  sub_1000222C8();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    uint64_t v8 = sub_100025A08(&qword_1000F53D0);
    uint64_t v9 = a1 + *(int *)(a3 + 20);
  }

  return sub_1000225EC(v9, a2, v8);
}

uint64_t sub_100048064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100048078);
}

uint64_t sub_100048078(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_100025A08(&qword_1000F5418);
  sub_1000222C8();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    uint64_t v10 = sub_100025A08(&qword_1000F53D0);
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  return sub_100021594(v11, a2, a2, v10);
}

void *sub_100048104()
{
  return &protocol witness table for String;
}

unint64_t sub_100048110()
{
  unint64_t result = qword_1000F5580;
  if (!qword_1000F5580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5580);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TipController.UseSiriToRunShortcutTip.PersonalContent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100048228);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TipController.UseSiriToRunShortcutTip.PersonalContent.CodingKeys()
{
  return &type metadata for TipController.UseSiriToRunShortcutTip.PersonalContent.CodingKeys;
}

unint64_t sub_100048264()
{
  unint64_t result = qword_1000F5590;
  if (!qword_1000F5590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5590);
  }
  return result;
}

unint64_t sub_1000482B4()
{
  unint64_t result = qword_1000F5598;
  if (!qword_1000F5598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5598);
  }
  return result;
}

unint64_t sub_100048304()
{
  unint64_t result = qword_1000F55A0;
  if (!qword_1000F55A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F55A0);
  }
  return result;
}

uint64_t type metadata accessor for DebugMenuViewController()
{
  uint64_t result = qword_1000F55A8;
  if (!qword_1000F55A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100048398()
{
  return swift_initClassMetadata2();
}

void sub_1000483D8(void *a1)
{
  uint64_t v2 = type metadata accessor for DebugMenuView();
  __chkstk_darwin(v2 - 8);
  sub_10001888C();
  uint64_t v5 = v4 - v3;
  id v6 = a1;
  id v7 = [v6 presentedViewController];
  if (v7)
  {
    do
    {
      uint64_t v8 = v7;

      id v7 = [v8 presentedViewController];
      id v6 = v8;
    }
    while (v7);
  }
  else
  {
    uint64_t v8 = v6;
  }
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0;
  type metadata accessor for DebugMenuViewController();
  id v10 = [self defaultDatabase];
  swift_retain_n();
  DebugMenuView.init(database:close:onShare:)();
  uint64_t v11 = (void *)sub_1000487A4(v5);
  id v12 = [v11 navigationItem];
  sub_100048C18(0, 0xE000000000000000, v12);

  id v13 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v11];
  int64_t v14 = (objc_class *)[v13 presentationController];
  if (v14)
  {
    Class v15 = v14;
    self;
    uint64_t v16 = swift_dynamicCastObjCClass();
    if (v16)
    {
      id v17 = (void *)v16;
      sub_100025A08(&qword_1000F5200);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1000BB390;
      uint64_t v19 = self;
      *(void *)(v18 + 32) = [v19 _mediumDetent];
      *(void *)(v18 + 40) = [v19 _largeDetent];
      specialized Array._endMutation()();
      sub_100029C7C(0, &qword_1000F5610);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v17 _setDetents:isa];

      Class v15 = isa;
    }
  }
  [v8 presentViewController:v13 animated:1 completion:0];

  swift_beginAccess();
  uint64_t v21 = *(void **)(v9 + 16);
  *(void *)(v9 + 16) = v11;
  swift_release();
}

id sub_1000486F0(uint64_t a1)
{
  swift_beginAccess();
  id result = *(id *)(a1 + 16);
  if (result) {
    return [result dismissViewControllerAnimated:1 completion:0];
  }
  return result;
}

void sub_100048748(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(a2 + 16);
  if (v3)
  {
    id v4 = v3;
    sub_100048874();
  }
}

uint64_t sub_1000487A4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DebugMenuView();
  sub_100022284();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_10001888C();
  uint64_t v9 = v8 - v7;
  id v10 = objc_allocWithZone(v1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v9, a1, v3);
  uint64_t v11 = UIHostingController.init(rootView:)();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v3);
  return v11;
}

void sub_100048874()
{
  uint64_t v1 = v0;
  sub_100025A08(&qword_1000F55F8);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1000BAB00;
  URL._bridgeToObjectiveC()((NSURL *)&off_1000BA000);
  uint64_t v4 = v3;
  *(void *)(v2 + 56) = sub_100029C7C(0, &qword_1000F5600);
  *(void *)(v2 + 32) = v4;
  id v5 = objc_allocWithZone((Class)UIActivityViewController);
  id v6 = sub_100048B24(v2, 0);
  [v1 presentViewController:v6 animated:1 completion:0];
}

void *sub_100048948(uint64_t a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return sub_10004898C(a1, a2);
}

void *sub_10004898C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DebugMenuView();
  sub_100022284();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_10001888C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v8 - v7, a2, v3);
  uint64_t v9 = (void *)UIHostingController.init(coder:rootView:)();
  id v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  id v11 = v9;
  v10(a2, v3);
  if (v9) {

  }
  return v9;
}

id sub_100048A68(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for DebugMenuViewController();
  [super initWithCoder:a1];

  return v3;
}

id sub_100048ABC(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_100048A68(a3);
}

id sub_100048AE4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DebugMenuViewController();
  return [super dealloc];
}

uint64_t sub_100048B1C()
{
  return type metadata accessor for DebugMenuViewController();
}

id sub_100048B24(uint64_t a1, uint64_t a2)
{
  v4.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  if (a2)
  {
    sub_100029C7C(0, &qword_1000F5608);
    v5.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v5.super.Class isa = 0;
  }
  id v6 = [v2 initWithActivityItems:v4.super.isa applicationActivities:v5.super.isa];

  return v6;
}

uint64_t sub_100048BD0()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_100048C08()
{
  return sub_1000486F0(v0);
}

void sub_100048C10(uint64_t a1)
{
  sub_100048748(a1, v1);
}

void sub_100048C18(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 setBackButtonTitle:v4];
}

id sub_100048C7C(void *a1, void *a2)
{
  id v8 = 0;
  id v4 = [(id)swift_getObjCClassFromMetadata() workflowWithReference:a1 database:a2 error:&v8];
  if (v4)
  {
    id v5 = v8;
  }
  else
  {
    id v6 = v8;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }

  return v4;
}

void *sub_100048D5C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  id result = _swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    id v4 = (void **)(a1 + 32);
    do
    {
      id v5 = *v4++;
      id v6 = v5;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v2;
    }
    while (v2);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

id WFLinkActions.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

id WFLinkActions.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WFLinkActions();
  return [super init];
}

id WFLinkActions.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WFLinkActions();
  return [super dealloc];
}

id sub_100048ECC()
{
  id result = [self mainScene];
  if (result)
  {
    id v1 = result;
    id v2 = [result delegate];

    if (v2)
    {
      self;
      id v3 = (void *)swift_dynamicCastObjCClass();
      if (!v3)
      {
LABEL_6:
        swift_unknownObjectRelease();
        return 0;
      }
      id v4 = [v3 rootViewController];
      swift_unknownObjectRelease();
      if (v4)
      {
        type metadata accessor for MainViewController(0);
        id result = (id)swift_dynamicCastClass();
        if (result) {
          return result;
        }
        goto LABEL_6;
      }
    }
    return 0;
  }
  return result;
}

void *sub_100048F9C()
{
  uint64_t v0 = type metadata accessor for NavigationDestinationEntity();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0 - 8);
  id v3 = (char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [self mainScene];
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
  id v5 = v4;
  uint64_t v48 = v1;
  id v6 = [v4 delegate];

  if (!v6) {
    return _swiftEmptyArrayStorage;
  }
  self;
  uint64_t v7 = (void *)swift_dynamicCastObjCClass();
  if (!v7)
  {
    swift_unknownObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  id v8 = [v7 rootViewController];
  swift_unknownObjectRelease();
  uint64_t v9 = _swiftEmptyArrayStorage;
  if (!v8) {
    return v9;
  }
  type metadata accessor for MainViewController(0);
  if (!swift_dynamicCastClass())
  {
    swift_unknownObjectRelease();
    return v9;
  }
  id v10 = (char *)sub_10002C1D8();
  swift_unknownObjectRelease();
  uint64_t v11 = *(void *)&v10[OBJC_IVAR___WFSidebarViewController_sections];
  swift_bridgeObjectRetain();

  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    BOOL v51 = _swiftEmptyArrayStorage;
    sub_10005B694(0, v12, 0);
    uint64_t v9 = v51;
    uint64_t v13 = v11 + 40;
    do
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v14 = dispatch thunk of SidebarSection.destinations.getter();
      swift_unknownObjectRelease();
      BOOL v51 = v9;
      unint64_t v16 = v9[2];
      unint64_t v15 = v9[3];
      if (v16 >= v15 >> 1)
      {
        sub_10005B694(v15 > 1, v16 + 1, 1);
        uint64_t v9 = v51;
      }
      v9[2] = v16 + 1;
      v9[v16 + 4] = v14;
      v13 += 16;
      --v12;
    }
    while (v12);
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = v9[2];
  if (!v18)
  {
    uint64_t v21 = _swiftEmptyArrayStorage;
LABEL_39:
    swift_bridgeObjectRelease();
    uint64_t v42 = v21[2];
    if (v42)
    {
      BOOL v51 = _swiftEmptyArrayStorage;
      sub_10005B5B0();
      uint64_t v9 = v51;
      uint64_t v50 = type metadata accessor for RootNavigationDestination();
      uint64_t v43 = *(void *)(v50 - 8);
      char v49 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
      id v44 = (char *)v21 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80));
      uint64_t v45 = *(void *)(v43 + 72);
      uint64_t v46 = v48;
      do
      {
        v49(v3, v44, v50);
        BOOL v51 = v9;
        unint64_t v47 = v9[2];
        if (v47 >= v9[3] >> 1)
        {
          sub_10005B5B0();
          uint64_t v46 = v48;
          uint64_t v9 = v51;
        }
        v9[2] = v47 + 1;
        sub_10004B1AC((uint64_t)v3, (uint64_t)v9+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(void *)(v46 + 72) * v47);
        v44 += v45;
        --v42;
      }
      while (v42);
      swift_bridgeObjectRelease();
      return v9;
    }
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  uint64_t v19 = v3;
  swift_bridgeObjectRetain();
  uint64_t v20 = 0;
  uint64_t v21 = _swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v22 = v9[v20 + 4];
    uint64_t v23 = *(void *)(v22 + 16);
    uint64_t v24 = v21[2];
    uint64_t v25 = v24 + v23;
    if (__OFADD__(v24, v23)) {
      break;
    }
    swift_bridgeObjectRetain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (!isUniquelyReferenced_nonNull_native || v25 > v21[3] >> 1)
    {
      if (v24 <= v25) {
        uint64_t v27 = v24 + v23;
      }
      else {
        uint64_t v27 = v24;
      }
      uint64_t v21 = (void *)sub_1000123B8(isUniquelyReferenced_nonNull_native, v27, 1, (uint64_t)v21);
    }
    if (*(void *)(v22 + 16))
    {
      uint64_t v28 = v21[2];
      uint64_t v29 = (v21[3] >> 1) - v28;
      uint64_t v30 = *(void *)(type metadata accessor for RootNavigationDestination() - 8);
      uint64_t v31 = *(void *)(v30 + 72);
      if (v29 < v23) {
        goto LABEL_48;
      }
      unint64_t v32 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
      unint64_t v33 = (char *)v21 + v32 + v31 * v28;
      unint64_t v34 = v22 + v32;
      uint64_t v35 = v31 * v23;
      uint64_t v36 = &v33[v35];
      unint64_t v37 = v34 + v35;
      if (v34 < (unint64_t)v36 && (unint64_t)v33 < v37) {
        goto LABEL_50;
      }
      swift_arrayInitWithCopy();
      if (v23)
      {
        uint64_t v39 = v21[2];
        BOOL v40 = __OFADD__(v39, v23);
        uint64_t v41 = v39 + v23;
        if (v40) {
          goto LABEL_49;
        }
        v21[2] = v41;
      }
    }
    else if (v23)
    {
      goto LABEL_47;
    }
    swift_bridgeObjectRelease();
    if (v18 == ++v20)
    {
      swift_bridgeObjectRelease();
      id v3 = v19;
      goto LABEL_39;
    }
  }
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  id result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000494C4()
{
  uint64_t v0 = sub_100025A08(&qword_1000F4668);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v12[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for Locale();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v9);
  uint64_t v10 = type metadata accessor for TypeDisplayRepresentation();
  sub_10005F890(v10, static NavigationDestinationEntity.typeDisplayRepresentation);
  sub_10004AB78(v10, (uint64_t)static NavigationDestinationEntity.typeDisplayRepresentation);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v4 + 104))(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v3);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  LocalizedStringResource.init(stringLiteral:)();
  sub_100021594((uint64_t)v2, 0, 1, v9);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t NavigationDestinationEntity.typeDisplayRepresentation.unsafeMutableAddressor()
{
  return sub_10005A378(&qword_1000F4560, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static NavigationDestinationEntity.typeDisplayRepresentation);
}

uint64_t static NavigationDestinationEntity.typeDisplayRepresentation.getter()
{
  return sub_100059ED8();
}

uint64_t static NavigationDestinationEntity.typeDisplayRepresentation.setter(uint64_t a1)
{
  return sub_100059FAC(a1, &qword_1000F4560, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static NavigationDestinationEntity.typeDisplayRepresentation);
}

uint64_t (*static NavigationDestinationEntity.typeDisplayRepresentation.modify())()
{
  if (qword_1000F4560 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();
  sub_100025EC8(v0, (uint64_t)static NavigationDestinationEntity.typeDisplayRepresentation);
  return j_j__swift_endAccess;
}

void *NavigationDestinationEntity.persistentIdentifier.unsafeMutableAddressor()
{
  return &static NavigationDestinationEntity.persistentIdentifier;
}

unint64_t static NavigationDestinationEntity.persistentIdentifier.getter()
{
  return 0xD000000000000019;
}

void NavigationDestinationEntity.displayRepresentation.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_10002066C();
  a19 = v21;
  a20 = v22;
  uint64_t v23 = sub_100025A08(&qword_1000F4668);
  uint64_t v24 = sub_1000165CC(v23);
  __chkstk_darwin(v24);
  sub_100025C58();
  sub_10001C094();
  __chkstk_darwin(v25);
  uint64_t v26 = sub_10005FC38();
  uint64_t v27 = sub_1000165CC(v26);
  __chkstk_darwin(v27);
  sub_100018874();
  uint64_t v28 = sub_100025A08(&qword_1000F5618);
  uint64_t v29 = sub_1000165CC(v28);
  uint64_t v30 = __chkstk_darwin(v29);
  unint64_t v32 = (char *)&a9 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  unint64_t v34 = (char *)&a9 - v33;
  uint64_t v35 = type metadata accessor for DisplayRepresentation.Image();
  sub_10002A674((uint64_t)v34, v36, v37, v35);
  uint64_t v38 = RootNavigationDestination.symbolName.getter();
  if (v39)
  {
    sub_10005FA8C(v38, v39);
    sub_100012400((uint64_t)v34, &qword_1000F5618);
    sub_10004ABB0((uint64_t)v32, (uint64_t)v34);
  }
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v40);
  v41._countAndFlagsBits = RootNavigationDestination.displayName.getter();
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v41);
  swift_bridgeObjectRelease();
  v42._countAndFlagsBits = 0;
  v42._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v42);
  LocalizedStringResource.init(stringInterpolation:)();
  sub_100024754(v20);
  sub_10005FFE4();
  sub_10005C300();
  DisplayRepresentation.init(title:subtitle:image:)();
  sub_100012400((uint64_t)v34, &qword_1000F5618);
  sub_10001885C();
}

uint64_t NavigationDestinationEntity.DestinationQuery.entities(for:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return sub_1000188B8((uint64_t)sub_100049AEC);
}

uint64_t sub_100049AEC()
{
  sub_100018A44();
  type metadata accessor for MainActor();
  *(void *)(v0 + 24) = sub_100024304();
  sub_1000074BC();
  sub_100018DA0();
  sub_1000245BC();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_100049B64()
{
  sub_100018A44();
  swift_release();
  *(void *)(v0 + 32) = sub_100048F9C();
  sub_100026BF8();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_100049BCC()
{
  sub_10002348C();
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void **)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_100049D9C(v1, v2);
  sub_10005FCF4();
  return v3();
}

uint64_t sub_100049C44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;
  if (v3 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v5 == v6)
  {
LABEL_20:
    swift_bridgeObjectRelease_n();
    return 1;
  }
  char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v8)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v2 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v10 = 5;
  while (1)
  {
    uint64_t v11 = v10 - 3;
    if (__OFADD__(v10 - 4, 1)) {
      break;
    }
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;
    if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_7;
    }
    ++v10;
    if (v11 == v2) {
      goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100049D9C(uint64_t a1, void *a2)
{
  uint64_t v5 = type metadata accessor for NavigationDestinationEntity();
  uint64_t v6 = sub_100022084(v5);
  uint64_t v33 = v7;
  __chkstk_darwin(v6);
  sub_1000206CC();
  uint64_t v34 = v8;
  sub_1000215FC();
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v29 - v11;
  uint64_t v13 = _swiftEmptyArrayStorage;
  uint64_t v37 = _swiftEmptyArrayStorage;
  uint64_t v32 = *(void *)(a1 + 16);
  if (!v32)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)v13;
  }
  uint64_t v29 = v2;
  unint64_t v14 = 0;
  uint64_t v30 = a2 + 7;
  uint64_t v31 = a1;
  uint64_t v35 = a2;
  while (1)
  {
    if (v14 >= *(void *)(a1 + 16))
    {
      __break(1u);
      goto LABEL_30;
    }
    uint64_t v15 = *(void *)(v33 + 72);
    unint64_t v36 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    sub_10004B0EC(a1 + v36 + v15 * v14, (uint64_t)v12);
    uint64_t v16 = (uint64_t)v12;
    uint64_t v17 = RootNavigationDestination.sidebarIdentifier.getter();
    uint64_t v19 = v18;
    uint64_t v20 = a2[2];
    if (v20)
    {
      uint64_t v21 = v17;
      BOOL v22 = a2[4] == v17 && a2[5] == v18;
      if (v22 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
      {
LABEL_10:
        swift_bridgeObjectRelease();
        uint64_t v12 = (char *)v16;
        sub_10004B1AC(v16, v34);
        uint64_t v23 = v37;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10005FED0();
          uint64_t v23 = v37;
        }
        unint64_t v24 = v23[2];
        if (v24 >= v23[3] >> 1)
        {
          sub_10005B5B0();
          uint64_t v23 = v37;
        }
        v23[2] = v24 + 1;
        uint64_t result = sub_10004B1AC(v34, (uint64_t)v23 + v36 + v24 * v15);
        a2 = v35;
        goto LABEL_26;
      }
      a2 = v35;
      if (v20 != 1) {
        break;
      }
    }
LABEL_25:
    swift_bridgeObjectRelease();
    uint64_t v12 = (char *)v16;
    uint64_t result = sub_10004B150(v16);
LABEL_26:
    ++v14;
    a1 = v31;
    if (v14 == v32)
    {
      uint64_t v13 = v37;
      goto LABEL_28;
    }
  }
  uint64_t v25 = v30;
  uint64_t v26 = 1;
  while (1)
  {
    uint64_t v27 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (*(v25 - 1) == v21 && *v25 == v19) {
      goto LABEL_10;
    }
    uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
    if (result) {
      goto LABEL_10;
    }
    v25 += 2;
    ++v26;
    BOOL v22 = v27 == v20;
    a2 = v35;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_10004A010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v27 = a2;
  uint64_t v6 = type metadata accessor for NavigationDestinationEntity();
  uint64_t v7 = sub_100022084(v6);
  uint64_t v9 = v8;
  __chkstk_darwin(v7);
  uint64_t v26 = (uint64_t)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000215FC();
  uint64_t result = __chkstk_darwin(v11);
  unint64_t v14 = (char *)v23 - v13;
  uint64_t v15 = _swiftEmptyArrayStorage;
  uint64_t v32 = _swiftEmptyArrayStorage;
  uint64_t v25 = *(void *)(a1 + 16);
  if (v25)
  {
    v23[1] = v3;
    uint64_t v24 = a3;
    unint64_t v16 = 0;
    while (v16 < *(void *)(a1 + 16))
    {
      unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v18 = *(void *)(v9 + 72);
      sub_10004B0EC(a1 + v17 + v18 * v16, (uint64_t)v14);
      uint64_t v30 = RootNavigationDestination.displayName.getter();
      uint64_t v31 = v19;
      uint64_t v28 = v27;
      uint64_t v29 = a3;
      sub_10002B2A0();
      char v20 = StringProtocol.localizedCaseInsensitiveContains<A>(_:)();
      swift_bridgeObjectRelease();
      if (v20)
      {
        sub_10004B1AC((uint64_t)v14, v26);
        uint64_t v21 = v32;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10005FED0();
          uint64_t v21 = v32;
        }
        unint64_t v22 = v21[2];
        if (v22 >= v21[3] >> 1)
        {
          sub_10005B5B0();
          uint64_t v21 = v32;
        }
        v21[2] = v22 + 1;
        uint64_t result = sub_10004B1AC(v26, (uint64_t)v21 + v17 + v22 * v18);
        a3 = v24;
      }
      else
      {
        uint64_t result = sub_10004B150((uint64_t)v14);
      }
      if (v25 == ++v16)
      {
        uint64_t v15 = v32;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)v15;
  }
  return result;
}

void *sub_10004A214(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_7:
        uint64_t v5 = v4;
        unint64_t v6 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_15;
        }
        id v7 = [v4 name];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        sub_10002B2A0();
        char v8 = StringProtocol.localizedCaseInsensitiveContains<A>(_:)();
        swift_bridgeObjectRelease();
        if (v8)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
        }
        ++v3;
        if (v6 == v2) {
          goto LABEL_17;
        }
      }
      if (v3 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      if (!v2) {
        goto LABEL_17;
      }
    }
    id v4 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_7;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t NavigationDestinationEntity.DestinationQuery.entities(matching:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return sub_1000188B8((uint64_t)sub_10004A3F0);
}

uint64_t sub_10004A3F0()
{
  sub_100018A44();
  type metadata accessor for MainActor();
  *(void *)(v0 + 32) = sub_100024304();
  sub_1000074BC();
  sub_100018DA0();
  sub_1000245BC();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_10004A468()
{
  sub_100018A44();
  swift_release();
  *(void *)(v0 + 40) = sub_100048F9C();
  sub_100026BF8();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_10004A4D0()
{
  sub_10002348C();
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  swift_bridgeObjectRetain();
  sub_10004A010(v1, v3, v2);
  sub_10005FCF4();
  return v4();
}

uint64_t NavigationDestinationEntity.DestinationQuery.suggestedEntities()()
{
  return sub_1000188B8((uint64_t)sub_10004A560);
}

uint64_t sub_10004A560()
{
  sub_100018A44();
  type metadata accessor for MainActor();
  *(void *)(v0 + 16) = sub_100024304();
  sub_1000074BC();
  sub_100018DA0();
  sub_1000245BC();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_10004A5D8()
{
  sub_100018A44();
  swift_release();
  sub_100048F9C();
  sub_10005FCF4();
  return v0();
}

uint64_t sub_10004A634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_10005F974;
  return NavigationDestinationEntity.DestinationQuery.entities(matching:)(a2, a3);
}

uint64_t sub_10004A6D4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10005F984;
  return NavigationDestinationEntity.DestinationQuery.entities(for:)(a1);
}

uint64_t sub_10004A768(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10005F974;
  return NavigationDestinationEntity.DestinationQuery.suggestedEntities()();
}

uint64_t sub_10004A7F8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10005C740();
  *uint64_t v5 = v2;
  v5[1] = sub_10005F998;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_10004A8AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *id v7 = v3;
  v7[1] = sub_10005F998;
  return DynamicOptionsProvider.defaultResult()(a1, a2, a3);
}

uint64_t (*static NavigationDestinationEntity.defaultQuery.modify())()
{
  return static NavigationDestinationEntity.defaultQuery.setter;
}

uint64_t sub_10004A984(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RootNavigationDestination();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for RootNavigationDestination.gallery(_:)
    || v6 == enum case for RootNavigationDestination.workflowType(_:))
  {
    goto LABEL_6;
  }
  if (v6 == enum case for RootNavigationDestination.folder(_:))
  {
    uint64_t v8 = 1;
    goto LABEL_9;
  }
  if (v6 == enum case for RootNavigationDestination.autoShortcuts(_:))
  {
LABEL_6:
    uint64_t v8 = 0;
LABEL_9:
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return v8;
  }
  if (v6 == enum case for RootNavigationDestination.shortcuts(_:)) {
    return 0;
  }
  if (v6 == enum case for RootNavigationDestination.allShortcuts(_:)) {
    return 1;
  }
  BOOL v10 = v6 == enum case for RootNavigationDestination.automations(_:)
     || v6 == enum case for RootNavigationDestination.recentlyModified(_:);
  if (v10 || v6 == enum case for RootNavigationDestination.recentlyRun(_:)) {
    return 0;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for WFLinkActions()
{
  return self;
}

uint64_t sub_10004AB78(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_10004ABB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100025A08(&qword_1000F5618);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t (**NavigationDestinationEntity.FolderQuery.folderFilter.unsafeMutableAddressor())()
{
  return &static NavigationDestinationEntity.FolderQuery.folderFilter;
}

void static NavigationDestinationEntity.FolderQuery.folderFilter.getter()
{
}

uint64_t NavigationDestinationEntity.FolderQuery.entities(for:)()
{
  sub_100018A44();
  v0[2] = v1;
  uint64_t v2 = type metadata accessor for RootNavigationDestination();
  v0[3] = v2;
  sub_100022084(v2);
  v0[4] = v3;
  v0[5] = sub_10002259C();
  uint64_t v4 = type metadata accessor for NavigationDestinationEntity();
  sub_100022084(v4);
  v0[6] = v5;
  v0[7] = sub_10002A600();
  v0[8] = swift_task_alloc();
  sub_100026BF8();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t sub_10004AD00()
{
  sub_100018A44();
  type metadata accessor for MainActor();
  *(void *)(v0 + 72) = sub_100024304();
  sub_1000074BC();
  sub_100018DA0();
  sub_1000245BC();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_10004AD78()
{
  sub_100018A44();
  swift_release();
  *(void *)(v0 + 80) = sub_100048F9C();
  sub_100026BF8();
  return _swift_task_switch(v1, v2, v3);
}

#error "10004AEF0: call analysis failed (funcsize=177)"

uint64_t type metadata accessor for NavigationDestinationEntity()
{
  uint64_t result = qword_1000F5CD8;
  if (!qword_1000F5CD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10004B0EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NavigationDestinationEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004B150(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NavigationDestinationEntity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10004B1AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NavigationDestinationEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t NavigationDestinationEntity.FolderQuery.entities(matching:)()
{
  sub_100018A44();
  v0[2] = v1;
  v0[3] = v2;
  uint64_t v3 = type metadata accessor for RootNavigationDestination();
  v0[4] = v3;
  sub_100022084(v3);
  v0[5] = v4;
  v0[6] = sub_10002259C();
  uint64_t v5 = type metadata accessor for NavigationDestinationEntity();
  sub_100022084(v5);
  v0[7] = v6;
  v0[8] = sub_10002A600();
  v0[9] = swift_task_alloc();
  sub_100026BF8();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_10004B2D4()
{
  sub_100018A44();
  type metadata accessor for MainActor();
  *(void *)(v0 + 80) = sub_100024304();
  sub_1000074BC();
  sub_100018DA0();
  sub_1000245BC();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_10004B34C()
{
  sub_100018A44();
  swift_release();
  *(void *)(v0 + 88) = sub_100048F9C();
  sub_100026BF8();
  return _swift_task_switch(v1, v2, v3);
}

#error "10004B4C4: call analysis failed (funcsize=178)"

uint64_t NavigationDestinationEntity.FolderQuery.suggestedEntities()()
{
  sub_100018A44();
  uint64_t v1 = type metadata accessor for RootNavigationDestination();
  v0[2] = v1;
  sub_100022084(v1);
  v0[3] = v2;
  v0[4] = sub_10002259C();
  uint64_t v3 = type metadata accessor for NavigationDestinationEntity();
  sub_100022084(v3);
  v0[5] = v4;
  v0[6] = sub_10002A600();
  v0[7] = swift_task_alloc();
  sub_100026BF8();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_10004B73C()
{
  sub_100018A44();
  type metadata accessor for MainActor();
  *(void *)(v0 + 64) = sub_100024304();
  sub_1000074BC();
  sub_100018DA0();
  sub_1000245BC();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_10004B7B4()
{
  sub_100018A44();
  swift_release();
  *(void *)(v0 + 72) = sub_100048F9C();
  sub_100026BF8();
  return _swift_task_switch(v1, v2, v3);
}

void sub_10004B81C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, unint64_t a12, unint64_t a13, uint64_t a14, unint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_10005FD3C();
  uint64_t v23 = v22[9];
  uint64_t v53 = *(void *)(v23 + 16);
  if (!v53)
  {
LABEL_30:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100024650();
    sub_100016624();
    v46(v44, v45, v46, v47, v48, v49, v50, v51, a9, a10, a11, a12, a13, a14, a15, a16, a17, v53, _swiftEmptyArrayStorage,
      a20,
      a21,
      a22);
    return;
  }
  unint64_t v24 = 0;
  uint64_t v25 = v22[3];
  a16 = v25 + 16;
  a17 = v22[5];
  uint64_t v26 = (uint64_t (**)(uint64_t, uint64_t))(v25 + 88);
  a15 = __PAIR64__(enum case for RootNavigationDestination.gallery(_:), enum case for RootNavigationDestination.workflowType(_:));
  a13 = __PAIR64__(enum case for RootNavigationDestination.folder(_:), enum case for RootNavigationDestination.autoShortcuts(_:));
  a12 = __PAIR64__(enum case for RootNavigationDestination.shortcuts(_:), enum case for RootNavigationDestination.allShortcuts(_:));
  a11 = __PAIR64__(enum case for RootNavigationDestination.automations(_:), enum case for RootNavigationDestination.recentlyModified(_:));
  HIDWORD(a10) = enum case for RootNavigationDestination.recentlyRun(_:);
  a14 = v25 + 8;
  while (1)
  {
    if (v24 >= *(void *)(v23 + 16))
    {
      __break(1u);
      return;
    }
    uint64_t v27 = v22[7];
    uint64_t v28 = v22[4];
    uint64_t v29 = v22[2];
    unint64_t v30 = (*(unsigned __int8 *)(a17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(a17 + 80);
    uint64_t v31 = *(void *)(a17 + 72);
    sub_10004B0EC(v22[9] + v30 + v31 * v24, v27);
    uint64_t v32 = sub_10005F9AC();
    v33(v32);
    int v34 = (*v26)(v28, v29);
    if (v34 == HIDWORD(a15) || v34 == a15) {
      goto LABEL_16;
    }
    if (v34 == HIDWORD(a13))
    {
      uint64_t v36 = sub_10005FDCC();
      v37(v36);
LABEL_10:
      sub_10004B1AC(v22[7], v22[6]);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_10005B5B0();
      }
      sub_10005FE14();
      if (v38) {
        sub_10005B5B0();
      }
      uint64_t v39 = v22[6];
      _swiftEmptyArrayStorage[2] = v27;
      sub_10004B1AC(v39, (uint64_t)_swiftEmptyArrayStorage + v30 + v28 * v31);
      goto LABEL_18;
    }
    if (v34 == a13)
    {
LABEL_16:
      uint64_t v40 = sub_10005FDCC();
      v41(v40);
      goto LABEL_17;
    }
    if (v34 != HIDWORD(a12))
    {
      if (v34 == a12) {
        goto LABEL_10;
      }
      BOOL v42 = v34 == HIDWORD(a11) || v34 == a11;
      if (!v42 && v34 != HIDWORD(a10)) {
        break;
      }
    }
LABEL_17:
    sub_10004B150(v22[7]);
LABEL_18:
    if (v53 == ++v24) {
      goto LABEL_30;
    }
  }
  sub_100016624();
  _diagnoseUnexpectedEnumCase<A>(type:)();
}

uint64_t NavigationDestinationEntity.FolderQuery.defaultResult()(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return sub_1000188B8((uint64_t)sub_10004BB20);
}

uint64_t sub_10004BB20()
{
  sub_100018A44();
  uint64_t v1 = *(void *)(v0 + 16);
  type metadata accessor for RootNavigationDestination();
  sub_10001C094();
  sub_100022348();
  v2();
  uint64_t v3 = type metadata accessor for NavigationDestinationEntity();
  sub_100021594(v1, 0, 1, v3);
  sub_100022638();
  return v4();
}

uint64_t sub_10004BBCC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10005F974;
  return NavigationDestinationEntity.FolderQuery.entities(matching:)();
}

uint64_t sub_10004BC6C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10005F984;
  return NavigationDestinationEntity.FolderQuery.entities(for:)();
}

uint64_t sub_10004BD00(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10005F974;
  return NavigationDestinationEntity.FolderQuery.suggestedEntities()();
}

uint64_t sub_10004BD90(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10002DE34();
  *uint64_t v5 = v2;
  v5[1] = sub_10005F998;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_10004BE44(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10005F998;
  return NavigationDestinationEntity.FolderQuery.defaultResult()(a1);
}

uint64_t sub_10004BEE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = NavigationDestinationEntity.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10004BF08@<X0>(uint64_t a1@<X8>)
{
  return sub_10004C9E8(NavigationDestinationEntity.typeDisplayRepresentation.unsafeMutableAddressor, (void (*)(void))&type metadata accessor for TypeDisplayRepresentation, a1);
}

uint64_t sub_10004BF34(uint64_t a1)
{
  uint64_t v2 = sub_10002B50C(&qword_1000F4678, (void (*)(uint64_t))type metadata accessor for NavigationDestinationEntity);

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_10004BFB4(uint64_t a1)
{
  uint64_t v2 = sub_10002B50C(&qword_1000F5958, (void (*)(uint64_t))type metadata accessor for NavigationDestinationEntity);

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

void OpenNavigationDestinationAction.init()()
{
  sub_10002066C();
  type metadata accessor for InputConnectionBehavior();
  sub_100022284();
  __chkstk_darwin(v0);
  sub_1000167F4();
  uint64_t v1 = sub_100025A08(&qword_1000F4658);
  uint64_t v2 = sub_1000165CC(v1);
  __chkstk_darwin(v2);
  sub_1000206CC();
  uint64_t v39 = v3;
  sub_1000215FC();
  uint64_t v5 = __chkstk_darwin(v4);
  sub_10002A660(v5, v6, v7, v8, v9, v10, v11, v12, v35);
  uint64_t v13 = sub_100025A08(&qword_1000F4660);
  uint64_t v14 = sub_1000165CC(v13);
  __chkstk_darwin(v14);
  sub_100012D4C(v15, v36);
  uint64_t v16 = sub_100025A08(&qword_1000F4668);
  uint64_t v17 = sub_1000165CC(v16);
  __chkstk_darwin(v17);
  sub_10005FC88();
  sub_100022284();
  uint64_t v19 = v18;
  __chkstk_darwin(v20);
  uint64_t v21 = sub_10001504C();
  uint64_t v22 = sub_1000165CC(v21);
  __chkstk_darwin(v22);
  sub_10005F9C8();
  uint64_t v23 = type metadata accessor for String.LocalizationValue();
  uint64_t v24 = sub_1000165CC(v23);
  __chkstk_darwin(v24);
  sub_100020554();
  uint64_t v25 = type metadata accessor for LocalizedStringResource();
  sub_10001C094();
  __chkstk_darwin(v26);
  sub_1000165D8();
  sub_100025A08(&qword_1000F4670);
  sub_10005FB3C();
  static Locale.current.getter();
  uint64_t v27 = *(void (**)(void))(v19 + 104);
  sub_10001B44C();
  v27();
  sub_100022F38();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  sub_10001B44C();
  v27();
  sub_100022F38();
  sub_10005FE94();
  sub_100021594(v28, v29, v30, v25);
  uint64_t v31 = type metadata accessor for NavigationDestinationEntity();
  sub_100019838(v37, v32, v33, v31);
  sub_100018840(v38);
  sub_100018840(v39);
  sub_100022348();
  v34();
  sub_10002B50C(&qword_1000F4678, (void (*)(uint64_t))type metadata accessor for NavigationDestinationEntity);
  sub_10005FDBC();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_10001885C();
}

void sub_10004C3AC()
{
}

uint64_t OpenNavigationDestinationAction.title.unsafeMutableAddressor()
{
  return sub_10005A378(&qword_1000F4568, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)&static OpenNavigationDestinationAction.title);
}

uint64_t static OpenNavigationDestinationAction.title.getter()
{
  return sub_100059ED8();
}

uint64_t static OpenNavigationDestinationAction.title.setter(uint64_t a1)
{
  return sub_100059FAC(a1, &qword_1000F4568, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)&static OpenNavigationDestinationAction.title);
}

uint64_t (*static OpenNavigationDestinationAction.title.modify())()
{
  if (qword_1000F4568 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_100025EC8(v0, (uint64_t)&static OpenNavigationDestinationAction.title);
  return j_j__swift_endAccess;
}

void sub_10004C4FC()
{
}

uint64_t OpenNavigationDestinationAction.description.unsafeMutableAddressor()
{
  return sub_10005A378(&qword_1000F4570, (uint64_t (*)(void))&type metadata accessor for IntentDescription, (uint64_t)&static OpenNavigationDestinationAction.description);
}

uint64_t static OpenNavigationDestinationAction.description.getter()
{
  return sub_10005A40C();
}

uint64_t OpenNavigationDestinationAction.target.getter()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t OpenNavigationDestinationAction.target.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NavigationDestinationEntity();
  uint64_t v3 = sub_1000165CC(v2);
  __chkstk_darwin(v3);
  sub_10005FAC0(v4, v6);
  IntentParameter.wrappedValue.setter();
  return sub_10004B150(a1);
}

uint64_t (*OpenNavigationDestinationAction.target.modify())()
{
  uint64_t v1 = sub_100021DF0();
  *(void *)(v0 + 32) = sub_100020610((uint64_t)v1);
  return sub_10004C670;
}

uint64_t OpenNavigationDestinationAction.perform()()
{
  sub_100018A44();
  v0[2] = v1;
  v0[3] = v2;
  uint64_t v3 = sub_100025A08(&qword_1000F50B8);
  sub_1000165CC(v3);
  v0[4] = sub_10002259C();
  uint64_t v4 = type metadata accessor for RootNavigationContext.TransitionType();
  v0[5] = v4;
  sub_100022084(v4);
  v0[6] = v5;
  v0[7] = sub_10002259C();
  uint64_t v6 = sub_100025A08(&qword_1000F5128);
  sub_1000165CC(v6);
  v0[8] = sub_10002259C();
  uint64_t v7 = type metadata accessor for NavigationDestinationEntity();
  sub_1000165CC(v7);
  v0[9] = sub_10002259C();
  type metadata accessor for MainActor();
  v0[10] = sub_100024304();
  sub_1000074BC();
  sub_100018DA0();
  sub_1000245BC();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_10004C788()
{
  sub_10005FBCC();
  swift_release();
  id v1 = sub_100048ECC();
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v4 = v0[8];
    uint64_t v3 = v0[9];
    uint64_t v5 = v0[4];
    IntentParameter.wrappedValue.getter();
    sub_10005FA28();
    v6();
    uint64_t v7 = type metadata accessor for RootPPTTestCase();
    sub_10002A674(v5, v8, v9, v7);
    sub_100060010();
    RootNavigationContext.init(dismissOccludingViewController:clearSearchState:animateTransition:createAutomation:transitionType:pptTest:)();
    type metadata accessor for RootNavigationContext();
    uint64_t v10 = sub_100023498();
    sub_100021594(v10, v11, v12, v13);
    type metadata accessor for MainViewController(0);
    sub_10002B50C(&qword_1000F50F8, (void (*)(uint64_t))type metadata accessor for MainViewController);
    RootView.navigate(to:with:completion:)();

    sub_100012400(v4, &qword_1000F5128);
    type metadata accessor for RootNavigationDestination();
    sub_10001C094();
    (*(void (**)(uint64_t))(v14 + 8))(v3);
  }
  static IntentResult.result<>()();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1000235A4();
  return v15();
}

uint64_t sub_10004C950()
{
  return OpenNavigationDestinationAction.target.getter();
}

uint64_t sub_10004C958(uint64_t a1)
{
  return OpenNavigationDestinationAction.target.setter(a1);
}

uint64_t (*sub_10004C960(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_10004C670;
}

uint64_t sub_10004C9BC@<X0>(uint64_t a1@<X8>)
{
  return sub_10004C9E8(OpenNavigationDestinationAction.title.unsafeMutableAddressor, (void (*)(void))&type metadata accessor for LocalizedStringResource, a1);
}

uint64_t sub_10004C9E8@<X0>(uint64_t (*a1)(void)@<X2>, void (*a2)(void)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1();
  swift_beginAccess();
  a2(0);
  sub_10001C094();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(a3, v5);
}

uint64_t _s9Shortcuts31OpenNavigationDestinationActionV14openAppWhenRunSbvgZ_0()
{
  return 1;
}

uint64_t sub_10004CA88()
{
  id v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *id v1 = v0;
  v1[1] = sub_10005F998;
  return OpenNavigationDestinationAction.perform()();
}

void sub_10004CB28(void *a1@<X8>)
{
  OpenNavigationDestinationAction.init()();
  *a1 = v2;
}

uint64_t sub_10004CB50(uint64_t a1)
{
  unint64_t v2 = sub_10005C1C4();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t sub_10004CB8C()
{
  uint64_t v28 = type metadata accessor for String.LocalizationValue.Placeholder();
  uint64_t v26 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  id v1 = (char *)v22 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_100025A08(&qword_1000F4668);
  __chkstk_darwin(v3 - 8);
  uint64_t v29 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v23 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v27 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v27);
  uint64_t v24 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TypeDisplayRepresentation();
  sub_10005F890(v12, static WorkflowEntity.typeDisplayRepresentation);
  uint64_t v25 = sub_10004AB78(v12, (uint64_t)static WorkflowEntity.typeDisplayRepresentation);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v13 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v14 = v6 + 104;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v22[1] = v14;
  v15(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v16);
  uint64_t v17 = v26;
  uint64_t v18 = v28;
  (*(void (**)(char *, void, uint64_t))(v26 + 104))(v1, enum case for String.LocalizationValue.Placeholder.int(_:), v28);
  sub_10005B364((uint64_t)v1);
  String.LocalizationValue.StringInterpolation.appendInterpolation(placeholder:specifier:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v1, v18);
  v19._countAndFlagsBits = 0x756374726F687320;
  v19._object = (void *)0xEA00000000007374;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v19);
  String.LocalizationValue.init(stringInterpolation:)();
  static Locale.current.getter();
  v15(v8, v13, v23);
  uint64_t v20 = (uint64_t)v29;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  sub_100021594(v20, 0, 1, v27);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t WorkflowEntity.typeDisplayRepresentation.unsafeMutableAddressor()
{
  return sub_10005A378(&qword_1000F4578, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static WorkflowEntity.typeDisplayRepresentation);
}

uint64_t static WorkflowEntity.typeDisplayRepresentation.getter()
{
  return sub_100059ED8();
}

uint64_t static WorkflowEntity.typeDisplayRepresentation.setter(uint64_t a1)
{
  return sub_100059FAC(a1, &qword_1000F4578, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static WorkflowEntity.typeDisplayRepresentation);
}

uint64_t (*static WorkflowEntity.typeDisplayRepresentation.modify())()
{
  if (qword_1000F4578 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();
  sub_100025EC8(v0, (uint64_t)static WorkflowEntity.typeDisplayRepresentation);
  return j_j__swift_endAccess;
}

void *WorkflowEntity.persistentIdentifier.unsafeMutableAddressor()
{
  return &static WorkflowEntity.persistentIdentifier;
}

uint64_t WorkflowEntity.id.getter()
{
  return WFDatabaseObjectDescriptor.id.getter();
}

void WorkflowEntity.displayRepresentation.getter()
{
  sub_10002066C();
  uint64_t v2 = v1;
  uint64_t v3 = sub_100025A08(&qword_1000F5618);
  uint64_t v4 = sub_1000165CC(v3);
  __chkstk_darwin(v4);
  sub_100021FC4();
  uint64_t v5 = sub_100025A08(&qword_1000F4668);
  uint64_t v6 = sub_1000165CC(v5);
  __chkstk_darwin(v6);
  sub_10003F748();
  uint64_t v27 = type metadata accessor for LocalizedStringResource();
  sub_10001C094();
  __chkstk_darwin(v7);
  uint64_t v8 = sub_10005FC38();
  uint64_t v9 = sub_1000165CC(v8);
  __chkstk_darwin(v9);
  sub_10001899C();
  uint64_t v10 = self;
  id v11 = [v2 icon];
  id v12 = [v10 imageWithIcon:v11 size:31.0, 31.0];

  if (v12)
  {
    id v12 = (id)sub_10005BFEC(v12);
    unint64_t v14 = v13;
  }
  else
  {
    unint64_t v14 = 0xF000000000000000;
  }
  uint64_t v15 = 1;
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v16);
  id v17 = [v2 name];
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  v21._countAndFlagsBits = v18;
  v21._object = v20;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v21);
  swift_bridgeObjectRelease();
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v22);
  LocalizedStringResource.init(stringInterpolation:)();
  sub_10001681C();
  sub_100021594(v23, v24, v25, v27);
  if (v14 >> 60 != 15)
  {
    sub_10005B63C((uint64_t)v12, v14);
    DisplayRepresentation.Image.init(data:isTemplate:)();
    uint64_t v15 = 0;
  }
  uint64_t v26 = type metadata accessor for DisplayRepresentation.Image();
  sub_100021594(v0, v15, 1, v26);
  DisplayRepresentation.init(title:subtitle:image:)();
  sub_10005B5D0((uint64_t)v12, v14);
  sub_10001885C();
}

uint64_t WorkflowEntity.WorkflowQuery.entities(for:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return sub_1000188B8((uint64_t)sub_10004D3EC);
}

uint64_t sub_10004D3EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_10002A7A0();
  sub_100023258();
  uint64_t v13 = *(void *)(v12 + 16);
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    uint64_t v15 = self;
    swift_bridgeObjectRetain();
    uint64_t v16 = v13 + 40;
    do
    {
      swift_bridgeObjectRetain();
      id v17 = [v15 defaultDatabase];
      NSString v18 = String._bridgeToObjectiveC()();
      id v19 = [v17 referenceForWorkflowID:v18];

      swift_bridgeObjectRelease();
      if (v19)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v16 += 16;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
  }
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    sub_100022528();
    uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v20) {
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v20 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v20) {
      goto LABEL_19;
    }
  }
  uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
  if (v20 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v22 = 0;
  do
  {
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v23 = (id)_swiftEmptyArrayStorage[v22 + 4];
    }
    ++v22;
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    sub_10005FF34();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
  }
  while (v20 != v22);
LABEL_19:
  swift_bridgeObjectRelease();
  sub_100024650();
  sub_10005FF18();
  return v26(v24, v25, v26, v27, v28, v29, v30, v31, _swiftEmptyArrayStorage, a10, a11, a12);
}

uint64_t WorkflowEntity.WorkflowQuery.entities(matching:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return sub_1000188B8((uint64_t)sub_10004D63C);
}

uint64_t sub_10004D63C()
{
  sub_100023258();
  id v0 = [self defaultDatabase];
  id v1 = [v0 sortedVisibleWorkflowsByName];

  id v2 = [v1 descriptors];
  sub_100029C7C(0, (unint64_t *)&unk_1000F70A0);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  swift_bridgeObjectRetain();
  unint64_t v4 = (unint64_t)sub_10004A214(v3);
  unint64_t v5 = v4;
  if (v4 >> 62)
  {
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    if (!v6) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v6) {
      goto LABEL_11;
    }
  }
  uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
  if (v6 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v8 = 0;
  do
  {
    if ((v5 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v9 = *(id *)(v5 + 8 * v8 + 32);
    }
    ++v8;
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
  }
  while (v6 != v8);
LABEL_11:
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_100024650();
  return v11(v10);
}

uint64_t WorkflowEntity.WorkflowQuery.suggestedEntities()()
{
  return sub_1000188B8((uint64_t)sub_10004D840);
}

uint64_t sub_10004D840()
{
  sub_10005FBCC();
  id v0 = [self defaultDatabase];
  id v1 = [v0 sortedVisibleWorkflowsByName];

  id v2 = [v1 descriptors];
  sub_100029C7C(0, (unint64_t *)&unk_1000F70A0);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
    sub_100022528();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v4) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      goto LABEL_11;
    }
  }
  uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
  if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v6 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v3 + 8 * v6 + 32);
      }
      ++v6;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      sub_10005FF34();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v4 != v6);
LABEL_11:
    swift_bridgeObjectRelease();
    sub_100024650();
    sub_100011A2C();
    __asm { BRAA            X2, X16 }
  }
  __break(1u);
  return result;
}

uint64_t sub_10004D9F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_10004DA98;
  return WorkflowEntity.WorkflowQuery.entities(matching:)(a2, a3);
}

uint64_t sub_10004DA98()
{
  sub_10002348C();
  uint64_t v3 = v2;
  sub_10001C0E8();
  uint64_t v5 = v4;
  sub_10001988C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_1000188C4();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (!v0) {
    **(void **)(v5 + 16) = v3;
  }
  uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
  return v9();
}

uint64_t sub_10004DB74(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10004DC08;
  return WorkflowEntity.WorkflowQuery.entities(for:)(a1);
}

uint64_t sub_10004DC08()
{
  sub_100018A44();
  uint64_t v3 = v2;
  sub_10001C0E8();
  uint64_t v4 = *v1;
  sub_1000188C4();
  *uint64_t v5 = v4;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

uint64_t sub_10004DCD8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10005F974;
  return WorkflowEntity.WorkflowQuery.suggestedEntities()();
}

uint64_t sub_10004DD68(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10005CE1C();
  *uint64_t v5 = v2;
  v5[1] = sub_10005F998;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_10004DE1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10004DED0;
  return DynamicOptionsProvider.defaultResult()(a1, a2, a3);
}

uint64_t sub_10004DED0()
{
  sub_100018A44();
  sub_10001C0E8();
  uint64_t v1 = *v0;
  sub_1000188C4();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100022638();
  return v3();
}

uint64_t sub_10004DF90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = WorkflowEntity.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10004DFBC@<X0>(uint64_t a1@<X8>)
{
  return sub_10004C9E8(WorkflowEntity.typeDisplayRepresentation.unsafeMutableAddressor, (void (*)(void))&type metadata accessor for TypeDisplayRepresentation, a1);
}

uint64_t sub_10004DFE8(uint64_t a1)
{
  unint64_t v2 = sub_10001D418();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

void sub_10004E034()
{
}

uint64_t sub_10004E03C(uint64_t a1)
{
  unint64_t v2 = sub_10002C6B4();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

void OpenWorkflowAction.init()()
{
}

void sub_10004E0A0()
{
}

uint64_t OpenWorkflowAction.title.unsafeMutableAddressor()
{
  return sub_10005A378(&qword_1000F4580, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)&static OpenWorkflowAction.title);
}

uint64_t static OpenWorkflowAction.title.getter()
{
  return sub_100059ED8();
}

uint64_t static OpenWorkflowAction.title.setter(uint64_t a1)
{
  return sub_100059FAC(a1, &qword_1000F4580, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)&static OpenWorkflowAction.title);
}

uint64_t (*static OpenWorkflowAction.title.modify())()
{
  if (qword_1000F4580 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_100025EC8(v0, (uint64_t)&static OpenWorkflowAction.title);
  return j_j__swift_endAccess;
}

void sub_10004E1F4()
{
}

uint64_t OpenWorkflowAction.description.unsafeMutableAddressor()
{
  return sub_10005A378(&qword_1000F4588, (uint64_t (*)(void))&type metadata accessor for IntentDescription, (uint64_t)&static OpenWorkflowAction.description);
}

uint64_t static OpenWorkflowAction.description.getter()
{
  return sub_10005A40C();
}

uint64_t AddShortcutToHomeScreenAction.shortcut.getter()
{
  sub_10005FE7C();
  return v1;
}

void AddShortcutToHomeScreenAction.shortcut.setter(void *a1)
{
  id v2 = a1;
  sub_10005FEA0();
}

uint64_t OpenWorkflowAction.perform()()
{
  sub_100018A44();
  v0[4] = v1;
  v0[5] = v2;
  type metadata accessor for MainActor();
  v0[6] = sub_100024304();
  sub_1000074BC();
  sub_100018DA0();
  sub_1000245BC();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_10004E368()
{
  sub_10002348C();
  swift_release();
  id v1 = sub_100048ECC();
  if (v1)
  {
    uint64_t v2 = v1;
    *(void *)(v0 + 16) = v1;
    IntentParameter.wrappedValue.getter();
    uint64_t v3 = *(void **)(v0 + 24);
    type metadata accessor for MainViewController(0);
    sub_10002B50C(&qword_1000F5050, (void (*)(uint64_t))type metadata accessor for MainViewController);
    WorkflowOpener.openWorkflow(_:)();

    swift_unknownObjectRelease();
  }
  static IntentResult.result<>()();
  sub_1000235A4();
  return v4();
}

uint64_t sub_10004E45C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AddShortcutToHomeScreenAction.shortcut.getter();
  *a1 = result;
  return result;
}

void sub_10004E488(void **a1)
{
}

uint64_t sub_10004E494@<X0>(uint64_t a1@<X8>)
{
  return sub_10004C9E8(OpenWorkflowAction.title.unsafeMutableAddressor, (void (*)(void))&type metadata accessor for LocalizedStringResource, a1);
}

uint64_t sub_10004E4C0()
{
  id v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *id v1 = v0;
  v1[1] = sub_10005F998;
  return OpenWorkflowAction.perform()();
}

void sub_10004E560(void *a1@<X8>)
{
  OpenWorkflowAction.init()();
  *a1 = v2;
}

uint64_t sub_10004E588(uint64_t a1)
{
  unint64_t v2 = sub_10005C0D4();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t sub_10004E5C4()
{
  uint64_t v1 = type metadata accessor for LibraryWorkflowCreationBehavior();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (void **)((char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for LibraryConfiguration();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  LibraryConfiguration.workflowCreationBehavior.getter();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  int v10 = (*(uint64_t (**)(void **, uint64_t))(v2 + 88))(v4, v1);
  if (v10 != enum case for LibraryWorkflowCreationBehavior.inFolder(_:))
  {
    if (v10 == enum case for LibraryWorkflowCreationBehavior.forWorkflowType(_:))
    {
      (*(void (**)(void **, uint64_t))(v2 + 96))(v4, v1);
      uint64_t v14 = *v4;
      id v15 = (id)WFWorkflowCollectionIdentifierForWorkflowType();
      if (v15)
      {
        uint64_t v16 = v15;
        uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();

        return v13;
      }
    }
    else
    {
      (*(void (**)(void **, uint64_t))(v2 + 8))(v4, v1);
    }
    return 0;
  }
  (*(void (**)(void **, uint64_t))(v2 + 96))(v4, v1);
  uint64_t v11 = *v4;
  id v12 = [v11 identifier];
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v13;
}

void CreateWorkflowAction.init()()
{
}

void sub_10004E880()
{
}

uint64_t CreateWorkflowAction.title.unsafeMutableAddressor()
{
  return sub_10005A378(&qword_1000F4590, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)&static CreateWorkflowAction.title);
}

uint64_t static CreateWorkflowAction.title.getter()
{
  return sub_100059ED8();
}

uint64_t static CreateWorkflowAction.title.setter(uint64_t a1)
{
  return sub_100059FAC(a1, &qword_1000F4590, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)&static CreateWorkflowAction.title);
}

uint64_t (*static CreateWorkflowAction.title.modify())()
{
  if (qword_1000F4590 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_100025EC8(v0, (uint64_t)&static CreateWorkflowAction.title);
  return j_j__swift_endAccess;
}

void sub_10004E9D4()
{
}

uint64_t CreateWorkflowAction.description.unsafeMutableAddressor()
{
  return sub_10005A378(&qword_1000F4598, (uint64_t (*)(void))&type metadata accessor for IntentDescription, (uint64_t)&static CreateWorkflowAction.description);
}

uint64_t static CreateWorkflowAction.description.getter()
{
  return sub_10005A40C();
}

void static CreateWorkflowAction.parameterSummary.getter()
{
  sub_1000074D4();
  uint64_t v0 = sub_100025A08(&qword_1000F5680);
  uint64_t v1 = sub_1000165CC(v0);
  __chkstk_darwin(v1);
  sub_100021FC4();
  sub_100025A08(&qword_1000F5688);
  sub_10001C094();
  __chkstk_darwin(v2);
  sub_10001899C();
  sub_10005C05C();
  sub_1000242C8();
  v3._object = (void *)0x80000001000C0ED0;
  v3._countAndFlagsBits = 0xD000000000000016;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  sub_100025A08(&qword_1000F5698);
  sub_100022688();
  swift_release();
  sub_100022370();
  sub_10002A714();
  sub_100022414();
  sub_10002A68C();
}

uint64_t CreateWorkflowAction.perform()()
{
  sub_10002348C();
  v0[5] = v1;
  v0[6] = v2;
  type metadata accessor for MainActor();
  v0[7] = sub_100024304();
  sub_1000074BC();
  sub_1000245BC();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_10004EC38()
{
  sub_100023258();
  uint64_t v1 = (void **)(v0 + 2);
  swift_release();
  id v2 = sub_100048ECC();
  IntentParameter.wrappedValue.getter();
  uint64_t v3 = v0[3];
  if (v3)
  {
    uint64_t v4 = v0[2];
    id v5 = objc_allocWithZone((Class)WFWorkflowRecord);
    swift_bridgeObjectRetain();
    id v6 = [v5 init];
    sub_10005C120(v4, v3, v6);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    id v6 = 0;
  }
  id v7 = [objc_allocWithZone((Class)WFWorkflowCreationOptions) initWithRecord:v6];

  if (!v2) {
    goto LABEL_8;
  }
  id v8 = v2;
  uint64_t v9 = (void *)sub_100031964();

  if (!v9) {
    goto LABEL_9;
  }
  sub_10004E5C4();
  uint64_t v11 = v10;

  if (v11)
  {
    uint64_t v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_8:
    uint64_t v9 = 0;
  }
LABEL_9:
  [v7 setCollectionIdentifier:v9];

  id v12 = [self defaultDatabase];
  *uint64_t v1 = 0;
  id v13 = [v12 createWorkflowWithOptions:v7 nameCollisionBehavior:0 error:v0 + 2];

  uint64_t v14 = *v1;
  if (v13)
  {
    id v15 = v14;
    id v16 = v13;
    OpenWorkflowAction.init()();
    uint64_t v18 = v17;
    v0[2] = v16;
    id v19 = v16;
    IntentParameter.wrappedValue.setter();
    v0[2] = v19;
    v0[4] = v18;
    sub_10002C798();
    sub_10005C0D4();
    static IntentResult.result<A, B>(value:opensIntent:)();

    swift_release();
  }
  else
  {
    id v21 = v14;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }

  sub_10005FB5C();
  return v20();
}

uint64_t sub_10004EF00@<X0>(uint64_t a1@<X8>)
{
  return sub_10004C9E8(CreateWorkflowAction.title.unsafeMutableAddressor, (void (*)(void))&type metadata accessor for LocalizedStringResource, a1);
}

uint64_t sub_10004EF34()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10005F998;
  return CreateWorkflowAction.perform()();
}

void sub_10004EFD4(void *a1@<X8>)
{
  CreateWorkflowAction.init()();
  *a1 = v2;
}

uint64_t sub_10004EFFC(uint64_t a1)
{
  unint64_t v2 = sub_10005C05C();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

void CreateFolderAction.init()()
{
}

void sub_10004F050()
{
  sub_10002066C();
  type metadata accessor for InputConnectionBehavior();
  sub_100022284();
  __chkstk_darwin(v1);
  sub_1000205AC(v2, v28);
  uint64_t v3 = sub_100025A08(&qword_1000F4658);
  uint64_t v4 = sub_1000165CC(v3);
  __chkstk_darwin(v4);
  sub_100012D4C(v5, v29);
  uint64_t v6 = sub_100025A08(&qword_1000F4690);
  uint64_t v7 = sub_1000165CC(v6);
  __chkstk_darwin(v7);
  sub_100016D54(v8, v30);
  uint64_t v9 = sub_100025A08(&qword_1000F4668);
  uint64_t v10 = sub_1000165CC(v9);
  __chkstk_darwin(v10);
  sub_100018A50();
  type metadata accessor for LocalizedStringResource.BundleDescription();
  sub_100022284();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  uint64_t v14 = sub_10001504C();
  uint64_t v15 = sub_1000165CC(v14);
  __chkstk_darwin(v15);
  uint64_t v16 = sub_10005FC60();
  uint64_t v17 = sub_1000165CC(v16);
  __chkstk_darwin(v17);
  uint64_t v18 = sub_100021650();
  sub_10001C094();
  __chkstk_darwin(v19);
  sub_1000242E0();
  sub_100025A08(&qword_1000F4698);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v20 = *(void (**)(void))(v12 + 104);
  sub_10005FA0C();
  v20();
  sub_100022F38();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  sub_10005FA0C();
  v20();
  sub_100022F38();
  sub_100021594(v0, 0, 1, v18);
  uint64_t v21 = type metadata accessor for String.IntentInputOptions();
  uint64_t v24 = sub_100019838(v31, v22, v23, v21);
  sub_10002A674(v32, v25, v26, v24);
  sub_100022348();
  v27();
  sub_10005FFE4();
  sub_10005FDBC();
  IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
  sub_10001885C();
}

void sub_10004F350()
{
}

uint64_t CreateFolderAction.title.unsafeMutableAddressor()
{
  return sub_10005A378(&qword_1000F45A0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)&static CreateFolderAction.title);
}

uint64_t static CreateFolderAction.title.getter()
{
  return sub_100059ED8();
}

uint64_t static CreateFolderAction.title.setter(uint64_t a1)
{
  return sub_100059FAC(a1, &qword_1000F45A0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)&static CreateFolderAction.title);
}

uint64_t (*static CreateFolderAction.title.modify())()
{
  if (qword_1000F45A0 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_100025EC8(v0, (uint64_t)&static CreateFolderAction.title);
  return j_j__swift_endAccess;
}

void sub_10004F4A4()
{
}

uint64_t CreateFolderAction.description.unsafeMutableAddressor()
{
  return sub_10005A378(&qword_1000F45A8, (uint64_t (*)(void))&type metadata accessor for IntentDescription, (uint64_t)&static CreateFolderAction.description);
}

uint64_t static CreateFolderAction.description.getter()
{
  return sub_10005A40C();
}

void static CreateFolderAction.parameterSummary.getter()
{
  sub_1000074D4();
  uint64_t v0 = sub_100025A08(&qword_1000F56B8);
  uint64_t v1 = sub_1000165CC(v0);
  __chkstk_darwin(v1);
  sub_100021FC4();
  sub_100025A08(&qword_1000F56C0);
  sub_10001C094();
  __chkstk_darwin(v2);
  sub_10001899C();
  sub_10005C178();
  sub_1000242C8();
  v3._object = (void *)0x80000001000C0EF0;
  v3._countAndFlagsBits = 0xD000000000000014;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  sub_100025A08(&qword_1000F56D0);
  sub_100022688();
  swift_release();
  sub_100022370();
  sub_10002A714();
  sub_100022414();
  sub_10002A68C();
}

uint64_t AddShortcutToHomeScreenAction.$shortcut.getter()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t SearchShortcutsAction.searchPhrase.getter()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t SearchShortcutsAction.searchPhrase.setter()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t CreateFolderAction.perform()()
{
  sub_10002348C();
  v0[6] = v1;
  v0[7] = v2;
  uint64_t v3 = type metadata accessor for NavigationDestinationEntity();
  v0[8] = v3;
  sub_1000165CC(v3);
  v0[9] = sub_10002A600();
  v0[10] = swift_task_alloc();
  v0[11] = swift_task_alloc();
  type metadata accessor for MainActor();
  v0[12] = sub_100024304();
  sub_1000074BC();
  sub_1000245BC();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_10004F7C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_10005FD20();
  uint64_t v15 = (void **)(v14 + 4);
  swift_release();
  id v16 = [self defaultDatabase];
  IntentParameter.wrappedValue.getter();
  if (v14[3])
  {
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v17 = 0;
  }
  id v18 = [self defaultGlyphCharacter];
  void *v15 = 0;
  id v19 = [v16 createFolderWithName:v17 icon:v18 error:v14 + 4];

  uint64_t v20 = *v15;
  if (v19)
  {
    uint64_t v21 = v14[10];
    uint64_t v22 = (void *)v14[11];
    uint64_t v23 = v14[9];
    *uint64_t v22 = v19;
    type metadata accessor for RootNavigationDestination();
    sub_10001C094();
    sub_100022348();
    v24();
    id v25 = v20;
    id v26 = v19;
    OpenNavigationDestinationAction.init()();
    uint64_t v28 = v27;
    sub_10004B0EC((uint64_t)v22, v21);
    sub_10004B0EC(v21, v23);
    IntentParameter.wrappedValue.setter();
    sub_10004B150(v21);
    v14[5] = v28;
    sub_10002B50C((unint64_t *)&qword_1000F56E0, (void (*)(uint64_t))type metadata accessor for NavigationDestinationEntity);
    sub_10005C1C4();
    static IntentResult.result<A, B>(value:opensIntent:)();

    sub_10004B150((uint64_t)v22);
    swift_release();
  }
  else
  {
    id v29 = v20;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10001018C();
  sub_10005FD04();
  return v31(v30, v31, v32, v33, v34, v35, v36, v37, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_10004FA84()
{
  return CreateWorkflowAction.name.getter(*v0);
}

uint64_t sub_10004FA8C(uint64_t a1, uint64_t a2)
{
  return CreateWorkflowAction.name.setter(a1, a2, *v2);
}

uint64_t sub_10004FA94@<X0>(uint64_t a1@<X8>)
{
  return sub_10004C9E8(CreateFolderAction.title.unsafeMutableAddressor, (void (*)(void))&type metadata accessor for LocalizedStringResource, a1);
}

uint64_t sub_10004FAC4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10005F998;
  return CreateFolderAction.perform()();
}

void sub_10004FB64(void *a1@<X8>)
{
  CreateFolderAction.init()();
  *a1 = v2;
}

uint64_t sub_10004FB8C(uint64_t a1)
{
  unint64_t v2 = sub_10005C178();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

void MoveShortcutToFolderAction.init()()
{
  sub_10002066C();
  uint64_t v0 = sub_100025A08(&qword_1000F4660);
  uint64_t v1 = sub_1000165CC(v0);
  __chkstk_darwin(v1);
  sub_100016D54(v2, v41);
  type metadata accessor for InputConnectionBehavior();
  sub_100022284();
  __chkstk_darwin(v3);
  sub_100012D4C(v4, v42);
  uint64_t v5 = sub_100025A08(&qword_1000F4658);
  uint64_t v6 = sub_1000165CC(v5);
  __chkstk_darwin(v6);
  sub_1000293B0(v7, v43);
  uint64_t v9 = __chkstk_darwin(v8);
  sub_10005FFFC(v9, v10, v11, v12, v13, v14, v15, v16, v44);
  uint64_t v17 = sub_100025A08(&qword_1000F4668);
  uint64_t v18 = sub_1000165CC(v17);
  __chkstk_darwin(v18);
  sub_10001B700();
  type metadata accessor for LocalizedStringResource.BundleDescription();
  sub_100022284();
  uint64_t v20 = v19;
  __chkstk_darwin(v21);
  uint64_t v22 = sub_1000240CC();
  uint64_t v23 = sub_1000165CC(v22);
  __chkstk_darwin(v23);
  uint64_t v24 = sub_10001B414();
  uint64_t v25 = sub_1000165CC(v24);
  __chkstk_darwin(v25);
  uint64_t v45 = sub_100025C58();
  sub_100012D7C();
  __chkstk_darwin(v26);
  sub_10001C0D0();
  sub_100025A08(&qword_1000F46A0);
  sub_10005FBA4();
  static Locale.current.getter();
  uint64_t v27 = *(void (**)(void))(v20 + 104);
  uint64_t v28 = sub_10002A794();
  ((void (*)(uint64_t))v27)(v28);
  sub_100026160();
  sub_10005FE24();
  static Locale.current.getter();
  uint64_t v29 = sub_10002A794();
  ((void (*)(uint64_t))v27)(v29);
  sub_100026160();
  sub_10005FE94();
  sub_100021594(v30, v31, v32, v45);
  type metadata accessor for IntentDialog();
  sub_10005FAA4(v48);
  sub_10005FAA4(v47);
  sub_100022348();
  v33();
  sub_10001D418();
  sub_100060024();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_100025A08(&qword_1000F4670);
  sub_10005FB3C();
  static Locale.current.getter();
  sub_10002A794();
  sub_10001881C();
  v27();
  sub_100026160();
  sub_100018D20();
  static Locale.current.getter();
  sub_10002A794();
  sub_10001881C();
  v27();
  sub_100026160();
  uint64_t v34 = sub_100023498();
  sub_100021594(v34, v35, v36, v45);
  uint64_t v37 = type metadata accessor for NavigationDestinationEntity();
  sub_10002A674(v46, v38, v39, v37);
  sub_10005FAA4(v48);
  sub_10005FAA4(v47);
  sub_100022348();
  v40();
  sub_10002DE34();
  sub_10005FFC4();
  IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)();
  sub_10001885C();
}

void sub_10004FFE8()
{
}

uint64_t MoveShortcutToFolderAction.title.unsafeMutableAddressor()
{
  return sub_10005A378(&qword_1000F45B0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)&static MoveShortcutToFolderAction.title);
}

uint64_t static MoveShortcutToFolderAction.title.getter()
{
  return sub_100059ED8();
}

uint64_t static MoveShortcutToFolderAction.title.setter(uint64_t a1)
{
  return sub_100059FAC(a1, &qword_1000F45B0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)&static MoveShortcutToFolderAction.title);
}

uint64_t (*static MoveShortcutToFolderAction.title.modify())()
{
  if (qword_1000F45B0 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_100025EC8(v0, (uint64_t)&static MoveShortcutToFolderAction.title);
  return j_j__swift_endAccess;
}

void sub_10005013C()
{
}

uint64_t MoveShortcutToFolderAction.description.unsafeMutableAddressor()
{
  return sub_10005A378(&qword_1000F45B8, (uint64_t (*)(void))&type metadata accessor for IntentDescription, (uint64_t)&static MoveShortcutToFolderAction.description);
}

uint64_t static MoveShortcutToFolderAction.description.getter()
{
  return sub_10005A40C();
}

void static MoveShortcutToFolderAction.parameterSummary.getter()
{
  sub_1000074D4();
  uint64_t v0 = sub_100025A08(&qword_1000F56F0);
  uint64_t v1 = sub_1000165CC(v0);
  __chkstk_darwin(v1);
  sub_100021FC4();
  sub_100025A08(&qword_1000F56F8);
  sub_10001C094();
  __chkstk_darwin(v2);
  sub_10001899C();
  sub_10005C210();
  sub_1000242C8();
  v3._countAndFlagsBits = 0x2065766F4DLL;
  v3._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  sub_100025A08(&qword_1000F5708);
  sub_100022688();
  swift_release();
  sub_100060088();
  swift_getKeyPath();
  sub_100025A08(&qword_1000F5710);
  sub_100022688();
  swift_release();
  sub_100022370();
  sub_10002A714();
  sub_100022414();
  sub_10002A68C();
}

uint64_t MoveShortcutToFolderAction.shortcuts.setter()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t (*AddShortcutToHomeScreenAction.title.modify())()
{
  uint64_t v1 = sub_100012D88();
  *(void *)(v0 + 32) = sub_100020610((uint64_t)v1);
  return sub_10004C670;
}

unint64_t MoveShortcutToFolderAction.MoveError.errorDescription.getter(char a1)
{
  if (a1) {
    return 0xD000000000000029;
  }
  else {
    return 0xD000000000000023;
  }
}

unint64_t sub_1000503C8()
{
  return MoveShortcutToFolderAction.MoveError.errorDescription.getter(*v0);
}

uint64_t MoveShortcutToFolderAction.perform()()
{
  sub_100018A44();
  v0[6] = v1;
  v0[7] = v2;
  v0[5] = v3;
  uint64_t v4 = type metadata accessor for RootNavigationDestination();
  v0[8] = v4;
  sub_100022084(v4);
  v0[9] = v5;
  v0[10] = sub_10002259C();
  uint64_t v6 = type metadata accessor for NavigationDestinationEntity();
  sub_1000165CC(v6);
  v0[11] = sub_10002A600();
  v0[12] = swift_task_alloc();
  v0[13] = swift_task_alloc();
  type metadata accessor for MainActor();
  v0[14] = sub_100024304();
  sub_1000074BC();
  sub_100018DA0();
  sub_1000245BC();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_1000504D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_10005FD20();
  swift_release();
  id v15 = sub_100048ECC();
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v18 = v14[9];
    uint64_t v17 = v14[10];
    uint64_t v19 = v14[8];
    id v20 = sub_10002C1D8();

    swift_retain_n();
    IntentParameter.wrappedValue.getter();
    sub_100020698();
    v21();
    int v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 88))(v17, v19);
    if (v22 == enum case for RootNavigationDestination.folder(_:))
    {
      uint64_t v23 = (void **)v14[10];
      (*(void (**)(void **, uint64_t))(v14[9] + 96))(v23, v14[8]);
      uint64_t v24 = *v23;
LABEL_7:
      IntentParameter.wrappedValue.getter();
      sub_100048D5C(v14[2]);
      swift_bridgeObjectRelease();
      BYTE4(a10) = 1;
      dispatch thunk of ShortcutMoveService.prepend(_:to:source:)();
      uint64_t v26 = v14[12];
      uint64_t v27 = v14[11];
      swift_bridgeObjectRelease();
      OpenNavigationDestinationAction.init()();
      uint64_t v29 = v28;
      IntentParameter.wrappedValue.getter();
      sub_10004B0EC(v26, v27);
      IntentParameter.wrappedValue.setter();
      sub_10004B150(v26);
      v14[4] = v29;
      sub_10005C1C4();
      static IntentResult.result<A>(opensIntent:)();
      sub_10005FF94();
      swift_release();

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_1000235A4();
      goto LABEL_10;
    }
    if (v22 == enum case for RootNavigationDestination.allShortcuts(_:))
    {
      uint64_t v24 = 0;
      goto LABEL_7;
    }
    uint64_t v31 = v14[9];
    uint64_t v30 = v14[10];
    uint64_t v32 = v14[8];
    sub_10005C264();
    sub_10001B3FC();
    *uint64_t v33 = 1;
    swift_willThrow();
    sub_10005FF94();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
  }
  else
  {
    sub_10005C264();
    sub_10001B3FC();
    unsigned char *v25 = 0;
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100022638();
LABEL_10:
  sub_10005FD04();
  return v35(v34, v35, v36, v37, v38, v39, v40, v41, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1000507B4@<X0>(uint64_t a1@<X8>)
{
  return sub_10004C9E8(MoveShortcutToFolderAction.title.unsafeMutableAddressor, (void (*)(void))&type metadata accessor for LocalizedStringResource, a1);
}

uint64_t sub_1000507E4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10005F998;
  return MoveShortcutToFolderAction.perform()();
}

void sub_100050890(void *a1@<X8>)
{
  MoveShortcutToFolderAction.init()();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1000508B8(uint64_t a1)
{
  unint64_t v2 = sub_10005C210();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

void AddShortcutToHomeScreenAction.init()()
{
  sub_10002066C();
  uint64_t v1 = sub_100025A08(&qword_1000F46B8);
  uint64_t v2 = sub_1000165CC(v1);
  __chkstk_darwin(v2);
  sub_1000167F4();
  uint64_t v55 = v3;
  uint64_t v4 = sub_100025A08(&qword_1000F4690);
  uint64_t v5 = sub_1000165CC(v4);
  __chkstk_darwin(v5);
  sub_1000167F4();
  uint64_t v54 = v6;
  sub_10005FCB8();
  sub_100022284();
  __chkstk_darwin(v7);
  sub_10005FC00(v8, v51);
  uint64_t v9 = sub_100025A08(&qword_1000F4658);
  uint64_t v10 = sub_1000165CC(v9);
  __chkstk_darwin(v10);
  sub_1000206CC();
  uint64_t v53 = v11;
  sub_1000215FC();
  uint64_t v13 = __chkstk_darwin(v12);
  sub_10001B3D8(v13, v14, v15, v16, v17, v18, v19, v20, v52);
  uint64_t v21 = sub_100025A08(&qword_1000F4668);
  uint64_t v22 = sub_1000165CC(v21);
  __chkstk_darwin(v22);
  sub_10002A560();
  sub_100025A64();
  uint64_t v24 = v23;
  __chkstk_darwin(v25);
  uint64_t v26 = sub_1000240CC();
  uint64_t v27 = sub_1000165CC(v26);
  __chkstk_darwin(v27);
  uint64_t v28 = sub_10001B414();
  uint64_t v29 = sub_1000165CC(v28);
  __chkstk_darwin(v29);
  uint64_t v56 = sub_100025C58();
  sub_100012D7C();
  __chkstk_darwin(v30);
  sub_10001899C();
  uint64_t v31 = sub_100025A08((uint64_t *)&unk_1000F4680);
  sub_100060030(v31);
  sub_100020530();
  static Locale.current.getter();
  uint64_t v32 = *(void (**)(void))(v24 + 104);
  sub_10001B44C();
  v32();
  sub_100026160();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  sub_10001B44C();
  v32();
  sub_100026160();
  sub_10005FE94();
  sub_100021594(v33, v34, v35, v56);
  uint64_t v57 = type metadata accessor for IntentDialog();
  uint64_t v36 = sub_100015100();
  sub_100021594(v36, v37, v38, v57);
  sub_100024754(v53);
  sub_100014FB8();
  v39();
  sub_10001D418();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  uint64_t v40 = sub_100025A08(&qword_1000F46B0);
  sub_100060030(v40);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  sub_10002A7DC();
  v32();
  sub_100026160();
  sub_100018D20();
  static Locale.current.getter();
  sub_10002A7DC();
  v32();
  sub_100026160();
  sub_10005FB6C(v0);
  uint64_t v41 = type metadata accessor for String.IntentInputOptions();
  sub_100021594(v54, 1, 1, v41);
  uint64_t v42 = sub_100015100();
  sub_100021594(v42, v43, v44, v57);
  sub_100014FB8();
  v45();
  IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
  uint64_t v46 = sub_100025A08(&qword_1000F46C0);
  sub_100060030(v46);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  sub_10001881C();
  v32();
  sub_100026160();
  sub_100018D20();
  static Locale.current.getter();
  sub_10002A794();
  sub_10001881C();
  v32();
  sub_100026160();
  sub_100021594(v0, 0, 1, v56);
  uint64_t v47 = type metadata accessor for IntentFile();
  sub_10002A674(v55, v48, v49, v47);
  sub_100021594(v58, 1, 1, v57);
  sub_100014FB8();
  v50();
  IntentParameter<>.init(title:description:default:supportedTypeIdentifiers:requestValueDialog:inputConnectionBehavior:)();
  sub_10001885C();
}

void sub_100050EBC()
{
}

uint64_t AddShortcutToHomeScreenAction.title.unsafeMutableAddressor()
{
  return sub_10005A378(&qword_1000F45C0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)&static AddShortcutToHomeScreenAction.title);
}

uint64_t static AddShortcutToHomeScreenAction.title.getter()
{
  return sub_100059ED8();
}

uint64_t static AddShortcutToHomeScreenAction.title.setter(uint64_t a1)
{
  return sub_100059FAC(a1, &qword_1000F45C0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)&static AddShortcutToHomeScreenAction.title);
}

uint64_t (*static AddShortcutToHomeScreenAction.title.modify())()
{
  if (qword_1000F45C0 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_100025EC8(v0, (uint64_t)&static AddShortcutToHomeScreenAction.title);
  return j_j__swift_endAccess;
}

void sub_100051008()
{
}

uint64_t AddShortcutToHomeScreenAction.description.unsafeMutableAddressor()
{
  return sub_10005A378(&qword_1000F45C8, (uint64_t (*)(void))&type metadata accessor for IntentDescription, (uint64_t)&static AddShortcutToHomeScreenAction.description);
}

uint64_t static AddShortcutToHomeScreenAction.description.getter()
{
  return sub_10005A40C();
}

void static AddShortcutToHomeScreenAction.parameterSummary.getter()
{
  sub_1000074D4();
  uint64_t v0 = sub_100025A08(&qword_1000F5728);
  uint64_t v1 = sub_1000165CC(v0);
  __chkstk_darwin(v1);
  sub_100021FC4();
  sub_100025A08(&qword_1000F5730);
  sub_10001C094();
  __chkstk_darwin(v2);
  sub_10001899C();
  sub_10005C2B0();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v3._countAndFlagsBits = 543450177;
  v3._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  sub_100025A08(&qword_1000F5740);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v4._countAndFlagsBits = 0x656D6F48206F7420;
  v4._object = (void *)0xEF6E656572635320;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  uint64_t v5 = sub_10005FF74();
  sub_100021F1C(v5, v6, v7, (uint64_t)sub_10005121C);
  sub_10002A68C();
}

uint64_t sub_1000511F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AddShortcutToHomeScreenAction.$shortcut.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10005121C()
{
  swift_getKeyPath();
  sub_10005C2B0();
  uint64_t v0 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)();
  swift_release();
  swift_getKeyPath();
  swift_retain();
  uint64_t v1 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)();
  swift_release();
  sub_100025A08(&qword_1000F5200);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1000BB390;
  *(void *)(v2 + 32) = v0;
  *(void *)(v2 + 40) = v1;
  specialized Array._endMutation()();
  swift_retain();
  uint64_t v3 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v3;
}

uint64_t AddShortcutToHomeScreenAction.$title.getter()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_100051340@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AddShortcutToHomeScreenAction.$title.getter();
  *a1 = result;
  return result;
}

uint64_t AddShortcutToHomeScreenAction.$image.getter()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_100051390@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AddShortcutToHomeScreenAction.$image.getter();
  *a1 = result;
  return result;
}

uint64_t AddShortcutToHomeScreenAction.title.getter()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t AddShortcutToHomeScreenAction.title.setter()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t AddShortcutToHomeScreenAction.image.getter()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t AddShortcutToHomeScreenAction.image.setter()
{
  uint64_t v0 = sub_100025A08(&qword_1000F46B8);
  uint64_t v1 = sub_1000165CC(v0);
  __chkstk_darwin(v1);
  sub_10005C300();
  IntentParameter.wrappedValue.setter();
  uint64_t v2 = sub_100029CD8();
  return sub_100012400(v2, v3);
}

uint64_t (*AddShortcutToHomeScreenAction.image.modify())()
{
  uint64_t v1 = sub_100012D88();
  *(void *)(v0 + 32) = sub_100020610((uint64_t)v1);
  return sub_10004C670;
}

void AddShortcutToHomeScreenAction.AddToHomeScreenError.localizedStringResource.getter()
{
  sub_1000074D4();
  uint64_t v1 = type metadata accessor for LocalizedStringResource.BundleDescription();
  sub_100022284();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  uint64_t v5 = sub_10005F9E4();
  uint64_t v6 = sub_1000165CC(v5);
  __chkstk_darwin(v6);
  sub_10003F748();
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  uint64_t v8 = sub_1000165CC(v7);
  __chkstk_darwin(v8);
  sub_10005FB2C();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v0, enum case for LocalizedStringResource.BundleDescription.main(_:), v1);
  sub_10005FAEC();
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  sub_10002A68C();
}

BOOL static AddShortcutToHomeScreenAction.AddToHomeScreenError.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void AddShortcutToHomeScreenAction.AddToHomeScreenError.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int AddShortcutToHomeScreenAction.AddToHomeScreenError.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

BOOL sub_100051718(char *a1, char *a2)
{
  return static AddShortcutToHomeScreenAction.AddToHomeScreenError.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_100051724()
{
  return AddShortcutToHomeScreenAction.AddToHomeScreenError.hashValue.getter(*v0);
}

void sub_10005172C(uint64_t a1)
{
  AddShortcutToHomeScreenAction.AddToHomeScreenError.hash(into:)(a1, *v1);
}

void sub_100051734()
{
}

uint64_t AddShortcutToHomeScreenAction.perform()()
{
  sub_10002348C();
  v0[27] = v1;
  v0[28] = v2;
  v0[25] = v3;
  v0[26] = v4;
  uint64_t v5 = type metadata accessor for GlyphIconColorScheme();
  v0[29] = v5;
  sub_100022084(v5);
  v0[30] = v6;
  v0[31] = sub_10002259C();
  uint64_t v7 = type metadata accessor for AggregatedEntry();
  v0[32] = v7;
  sub_100022084(v7);
  v0[33] = v8;
  v0[34] = sub_10002259C();
  uint64_t v9 = sub_100025A08(&qword_1000F52C8);
  sub_1000165CC(v9);
  v0[35] = sub_10002A600();
  v0[36] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for URL();
  v0[37] = v10;
  sub_100022084(v10);
  v0[38] = v11;
  v0[39] = sub_10002259C();
  uint64_t v12 = sub_100025A08(&qword_1000F46B8);
  sub_1000165CC(v12);
  v0[40] = sub_10002259C();
  uint64_t v13 = type metadata accessor for IntentFile();
  v0[41] = v13;
  sub_100022084(v13);
  v0[42] = v14;
  v0[43] = sub_10002259C();
  type metadata accessor for MainActor();
  v0[44] = sub_100024304();
  uint64_t v15 = sub_1000074BC();
  v0[45] = v15;
  v0[46] = v16;
  return _swift_task_switch(sub_10005190C, v15, v16);
}

uint64_t sub_10005190C()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = v0[15];
  unint64_t v2 = v0[16];
  swift_bridgeObjectRelease();
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = v1 & 0xFFFFFFFFFFFFLL;
  }
  if (v3)
  {
    IntentParameter.wrappedValue.getter();
  }
  else
  {
    IntentParameter.wrappedValue.getter();
    uint64_t v4 = (void *)v0[20];
    id v5 = [v4 name];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  uint64_t v7 = v0[40];
  uint64_t v6 = v0[41];
  IntentParameter.wrappedValue.getter();
  if (sub_1000225EC(v7, 1, v6) == 1)
  {
    sub_100012400(v0[40], &qword_1000F46B8);
    IntentParameter.wrappedValue.getter();
    uint64_t v8 = (void *)v0[22];
    id v9 = [v8 icon];

    [v9 glyphCharacter];
    id v10 = (id)WFSystemImageNameForGlyphCharacter();
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v13 = v0[33];
      uint64_t v12 = (void *)v0[34];
      uint64_t v15 = (void *)v0[31];
      uint64_t v14 = v0[32];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      id v16 = [self sharedInstance];
      IntentParameter.wrappedValue.getter();
      *uint64_t v12 = v0[21];
      (*(void (**)(void *, void, uint64_t))(v13 + 104))(v12, enum case for AggregatedEntry.userShortcut(_:), v14);
      IntentParameter.wrappedValue.getter();
      uint64_t v17 = (void *)v0[19];
      id v18 = [v17 icon];

      id v19 = [v18 backgroundColor];
      void *v15 = v19;
      sub_10002A7DC();
      v20();
      WFHomeScreenController.add(entry:name:colorScheme:symbolName:)();
      uint64_t v42 = v0[33];
      uint64_t v41 = v0[34];
      uint64_t v43 = v0[31];
      uint64_t v44 = v0[32];
      uint64_t v46 = v0[29];
      uint64_t v45 = v0[30];
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v43, v46);
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v44);
LABEL_18:
      uint64_t v47 = v0[37];
      uint64_t v48 = v0[35];
      uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v51 = v50;
      uint64_t v52 = sub_100015100();
      sub_100021594(v52, v53, v54, v47);
      id v55 = objc_allocWithZone((Class)WFAppLaunchRequest);
      id v56 = sub_10005B230(v49, v51, 0, v48, 0, 0);
      v0[47] = v56;
      v0[2] = v0;
      v0[7] = v0 + 49;
      v0[3] = sub_100052248;
      uint64_t v57 = swift_continuation_init();
      v0[10] = _NSConcreteStackBlock;
      v0[11] = 0x40000000;
      v0[12] = sub_1000525B4;
      v0[13] = &unk_1000E5C90;
      v0[14] = v57;
      [v56 performWithCompletionHandler:v0 + 10];
      return _swift_continuation_await(v0 + 2);
    }
    swift_release();
    swift_bridgeObjectRelease();
    sub_10005C358();
    sub_10001B3FC();
    unsigned char *v31 = 2;
    swift_willThrow();
  }
  else
  {
    uint64_t v22 = v0[36];
    uint64_t v21 = v0[37];
    sub_100020698();
    v23();
    IntentFile.fileURL.getter();
    int v24 = sub_1000225EC(v22, 1, v21);
    uint64_t v25 = v0[36];
    if (v24 == 1)
    {
      uint64_t v26 = v0[43];
      uint64_t v28 = v0[41];
      uint64_t v27 = v0[42];
      swift_release();
      swift_bridgeObjectRelease();
      sub_100012400(v25, &qword_1000F52C8);
      sub_10005C358();
      sub_10001B3FC();
      *uint64_t v29 = 0;
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    }
    else
    {
      sub_100020698();
      v30();
      if (URL.startAccessingSecurityScopedResource()())
      {
        uint64_t v58 = Data.init(contentsOf:options:)();
        unint64_t v60 = v59;
        sub_100029C7C(0, &qword_1000F5230);
        uint64_t v61 = sub_10005FFB8();
        sub_10005B63C(v61, v62);
        uint64_t v63 = sub_10005FFB8();
        id v65 = sub_10005253C(v63, v64);
        if (v65)
        {
          unint64_t v66 = v65;
          id v67 = [self sharedInstance];
          IntentParameter.wrappedValue.getter();
          uint64_t v68 = (void *)v0[23];
          NSString v69 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          v0[24] = 0;
          unsigned int v70 = [v67 addWorkflowToHomeScreen:v68 withName:v69 image:v66 error:v0 + 24];

          uint64_t v71 = (void *)v0[24];
          if (v70)
          {
            uint64_t v72 = v0[42];
            uint64_t v90 = v0[43];
            uint64_t v73 = v0[41];
            uint64_t v74 = v0[38];
            uint64_t v75 = v0[39];
            uint64_t v76 = v0[37];
            id v77 = v71;

            sub_10005B5E4(v58, v60);
            URL.stopAccessingSecurityScopedResource()();
            (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v75, v76);
            (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v90, v73);
            goto LABEL_18;
          }
          uint64_t v84 = v0[42];
          uint64_t v89 = v0[41];
          uint64_t v92 = v0[43];
          uint64_t v85 = v0[38];
          uint64_t v87 = v0[39];
          uint64_t v88 = v0[37];
          id v86 = v71;
          swift_release();
          _convertNSErrorToError(_:)();

          swift_willThrow();
          sub_10005B5E4(v58, v60);

          URL.stopAccessingSecurityScopedResource()();
          (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v87, v88);
          (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v92, v89);
        }
        else
        {
          uint64_t v91 = v0[43];
          uint64_t v79 = v0[41];
          uint64_t v78 = v0[42];
          uint64_t v81 = v0[38];
          uint64_t v80 = v0[39];
          uint64_t v82 = v0[37];
          swift_release();
          swift_bridgeObjectRelease();
          sub_10005C358();
          sub_10001B3FC();
          unsigned char *v83 = 3;
          swift_willThrow();
          sub_10005B5E4(v58, v60);
          URL.stopAccessingSecurityScopedResource()();
          (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v80, v82);
          (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v91, v79);
        }
      }
      else
      {
        uint64_t v32 = v0[43];
        uint64_t v34 = v0[41];
        uint64_t v33 = v0[42];
        uint64_t v36 = v0[38];
        uint64_t v35 = v0[39];
        uint64_t v37 = v0[37];
        swift_release();
        swift_bridgeObjectRelease();
        sub_10005C358();
        sub_10001B3FC();
        *uint64_t v38 = 0;
        swift_willThrow();
        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
      }
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100022638();
  return v39();
}

uint64_t sub_100052248()
{
  sub_100018A44();
  sub_10001C0E8();
  sub_10001988C();
  *unint64_t v2 = v1;
  *unint64_t v2 = *v0;
  uint64_t v4 = v3[6];
  *(void *)(v1 + 384) = v4;
  uint64_t v5 = v3[46];
  uint64_t v6 = v3[45];
  if (v4) {
    uint64_t v7 = sub_100052458;
  }
  else {
    uint64_t v7 = sub_100052378;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_100052378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_10002A7A0();
  sub_100023258();
  uint64_t v13 = *(void **)(v12 + 376);
  sub_10005FFD0();
  swift_release();
  static IntentResult.result<>()();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100022638();
  sub_10005FF18();
  return v15(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10, a11, a12);
}

uint64_t sub_100052458()
{
  sub_100023258();
  uint64_t v1 = *(void **)(v0 + 376);
  swift_release();
  swift_willThrow();

  sub_10005FFD0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10001018C();
  return v2();
}

id sub_10005253C(uint64_t a1, unint64_t a2)
{
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v6 = [v4 initWithData:isa];
  sub_10005B5E4(a1, a2);

  return v6;
}

uint64_t sub_1000525B4(uint64_t a1, char a2, void *a3)
{
  if (a3)
  {
    id v3 = a3;
    return sub_10005F8F8();
  }
  else
  {
    uint64_t v5 = *(void *)(a1 + 32);
    return sub_100052608(v5, a2);
  }
}

uint64_t sub_100052608(uint64_t a1, char a2)
{
  **(unsigned char **)(*(void *)(a1 + 64) + 40) = a2;
  return swift_continuation_throwingResume();
}

uint64_t sub_100052628(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 64) + 40);
  uint64_t v4 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a2, v4);

  return swift_continuation_throwingResume();
}

uint64_t sub_1000526BC@<X0>(uint64_t a1@<X8>)
{
  return sub_10004C9E8(AddShortcutToHomeScreenAction.title.unsafeMutableAddressor, (void (*)(void))&type metadata accessor for LocalizedStringResource, a1);
}

uint64_t sub_1000526EC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10005F998;
  return AddShortcutToHomeScreenAction.perform()();
}

void sub_1000527A0(void *a1@<X8>)
{
  AddShortcutToHomeScreenAction.init()();
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
}

uint64_t sub_1000527CC(uint64_t a1)
{
  unint64_t v2 = sub_10005C2B0();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

void RenameShortcutAction.init()()
{
  sub_10002066C();
  uint64_t v1 = sub_100025A08(&qword_1000F4690);
  uint64_t v2 = sub_1000165CC(v1);
  __chkstk_darwin(v2);
  sub_1000167F4();
  uint64_t v48 = v3;
  sub_10005FCB8();
  sub_100022284();
  __chkstk_darwin(v4);
  sub_1000205AC(v5, v42);
  uint64_t v6 = sub_100025A08(&qword_1000F4658);
  uint64_t v7 = sub_1000165CC(v6);
  __chkstk_darwin(v7);
  sub_1000293B0(v8, v43);
  uint64_t v10 = __chkstk_darwin(v9);
  sub_10001B3D8(v10, v11, v12, v13, v14, v15, v16, v17, v44);
  uint64_t v18 = sub_100025A08(&qword_1000F4668);
  uint64_t v19 = sub_1000165CC(v18);
  __chkstk_darwin(v19);
  sub_1000197D0();
  sub_100022284();
  uint64_t v21 = v20;
  __chkstk_darwin(v22);
  uint64_t v23 = sub_100027B4C();
  uint64_t v24 = sub_1000165CC(v23);
  __chkstk_darwin(v24);
  uint64_t v25 = sub_10001FA9C();
  uint64_t v26 = sub_1000165CC(v25);
  __chkstk_darwin(v26);
  uint64_t v45 = sub_100025C58();
  sub_100012D7C();
  __chkstk_darwin(v27);
  sub_1000074A4();
  sub_100025A08((uint64_t *)&unk_1000F4680);
  sub_100020530();
  static Locale.current.getter();
  uint64_t v28 = *(void (**)(void))(v21 + 104);
  sub_10005FA64();
  sub_10005FA70();
  v28();
  sub_1000222E0();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  sub_10005FA64();
  sub_10005FA70();
  v28();
  sub_1000222E0();
  sub_10005FD88(v0, 0);
  uint64_t v46 = type metadata accessor for IntentDialog();
  sub_10005FD88(v49, 1);
  sub_10005FD88(v47, 1);
  sub_100022348();
  v29();
  sub_10001D418();
  sub_100060024();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_100025A08(&qword_1000F46B0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v30 = sub_10005FA64();
  ((void (*)(uint64_t))v28)(v30);
  sub_1000222E0();
  sub_100018D20();
  static Locale.current.getter();
  uint64_t v31 = sub_10005FA64();
  ((void (*)(uint64_t))v28)(v31);
  sub_1000222E0();
  uint64_t v32 = sub_100023498();
  sub_100021594(v32, v33, v34, v45);
  uint64_t v35 = type metadata accessor for String.IntentInputOptions();
  sub_10002A674(v48, v36, v37, v35);
  sub_10001681C();
  sub_100021594(v38, v39, v40, v46);
  sub_100022348();
  v41();
  IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
  sub_10001885C();
}

void sub_100052C30()
{
}

uint64_t RenameShortcutAction.title.unsafeMutableAddressor()
{
  return sub_10005A378(&qword_1000F45D0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)&static RenameShortcutAction.title);
}

uint64_t static RenameShortcutAction.title.getter()
{
  return sub_10005A40C();
}

void sub_100052CCC()
{
}

uint64_t RenameShortcutAction.description.unsafeMutableAddressor()
{
  return sub_10005A378(&qword_1000F45D8, (uint64_t (*)(void))&type metadata accessor for IntentDescription, (uint64_t)&static RenameShortcutAction.description);
}

uint64_t static RenameShortcutAction.description.getter()
{
  return sub_10005A40C();
}

void static RenameShortcutAction.parameterSummary.getter()
{
  sub_1000074D4();
  uint64_t v0 = sub_100025A08(&qword_1000F5758);
  uint64_t v1 = sub_1000165CC(v0);
  __chkstk_darwin(v1);
  sub_100021FC4();
  sub_100025A08(&qword_1000F5760);
  sub_10001C094();
  __chkstk_darwin(v2);
  sub_10001899C();
  sub_10005C3A4();
  sub_1000242C8();
  v3._countAndFlagsBits = 0x20656D616E6552;
  v3._object = (void *)0xE700000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  sub_100025A08(&qword_1000F5770);
  sub_100022688();
  swift_release();
  sub_100060088();
  swift_getKeyPath();
  sub_100025A08(&qword_1000F5778);
  sub_100022688();
  swift_release();
  sub_100022370();
  sub_10002A714();
  sub_100022414();
  sub_10002A68C();
}

uint64_t RenameShortcutAction.perform()()
{
  sub_100018A44();
  v0[6] = v1;
  v0[7] = v2;
  v0[5] = v3;
  sub_100026BF8();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_100052F28()
{
  sub_10005FBCC();
  id v1 = [self defaultDatabase];
  IntentParameter.wrappedValue.getter();
  uint64_t v2 = *(void **)(v0 + 16);
  IntentParameter.wrappedValue.getter();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 16) = 0;
  id v4 = [v1 renameReference:v2 to:v3 error:v0 + 16];

  uint64_t v5 = *(void **)(v0 + 16);
  if (v4)
  {
    id v6 = v5;
    OpenWorkflowAction.init()();
    uint64_t v8 = v7;
    IntentParameter.wrappedValue.getter();
    id v9 = *(id *)(v0 + 16);
    IntentParameter.wrappedValue.setter();

    *(void *)(v0 + 16) = v4;
    *(void *)(v0 + 32) = v8;
    sub_10002C798();
    sub_10005C0D4();
    static IntentResult.result<A, B>(value:opensIntent:)();

    swift_release();
  }
  else
  {
    id v11 = v5;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  sub_10005FB5C();
  return v10();
}

uint64_t sub_100053114@<X0>(uint64_t a1@<X8>)
{
  return sub_100053890(RenameShortcutAction.title.unsafeMutableAddressor, a1);
}

uint64_t sub_100053130()
{
  id v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *id v1 = v0;
  v1[1] = sub_10005F998;
  return RenameShortcutAction.perform()();
}

void sub_1000531DC(void *a1@<X8>)
{
  RenameShortcutAction.init()();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_100053204(uint64_t a1)
{
  unint64_t v2 = sub_10005C3A4();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

void ChangeShortcutIconAction.init()()
{
}

void sub_100053258()
{
}

uint64_t ChangeShortcutIconAction.title.unsafeMutableAddressor()
{
  return sub_10005A378(&qword_1000F45E0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)&static ChangeShortcutIconAction.title);
}

uint64_t static ChangeShortcutIconAction.title.getter()
{
  return sub_10005A40C();
}

void sub_1000532EC()
{
}

uint64_t ChangeShortcutIconAction.description.unsafeMutableAddressor()
{
  return sub_10005A378(&qword_1000F45E8, (uint64_t (*)(void))&type metadata accessor for IntentDescription, (uint64_t)&static ChangeShortcutIconAction.description);
}

uint64_t static ChangeShortcutIconAction.description.getter()
{
  return sub_10005A40C();
}

void static ChangeShortcutIconAction.parameterSummary.getter()
{
  sub_1000074D4();
  uint64_t v0 = sub_100025A08(&qword_1000F5788);
  uint64_t v1 = sub_1000165CC(v0);
  __chkstk_darwin(v1);
  sub_100021FC4();
  sub_100025A08(&qword_1000F5790);
  sub_10001C094();
  __chkstk_darwin(v2);
  sub_10001899C();
  sub_10005C3F8();
  sub_1000242C8();
  v3._countAndFlagsBits = 0x692065676E616843;
  v3._object = (void *)0xEF20666F206E6F63;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  sub_100025A08(&qword_1000F57A0);
  sub_100022688();
  swift_release();
  sub_100022370();
  sub_10002A714();
  sub_100022414();
  sub_10002A68C();
}

uint64_t ChangeShortcutIconAction.perform()()
{
  sub_100018A44();
  v0[3] = v1;
  v0[4] = v2;
  uint64_t v3 = sub_100025A08(&qword_1000F5118);
  sub_1000165CC(v3);
  v0[5] = sub_10002259C();
  uint64_t v4 = type metadata accessor for OpenWorkflowOptions();
  v0[6] = v4;
  sub_100022084(v4);
  v0[7] = v5;
  v0[8] = sub_10002259C();
  sub_100026BF8();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t sub_10005354C()
{
  sub_100018A44();
  uint64_t v1 = v0[5];
  uint64_t v2 = type metadata accessor for OpenWorkflowOptions.ActionError();
  sub_10002A674(v1, v3, v4, v2);
  OpenWorkflowOptions.init(scrolledToActionIndex:actionError:isNewWorkflow:showIconPicker:onOpen:)();
  v0[9] = type metadata accessor for MainActor();
  v0[10] = static MainActor.shared.getter();
  sub_1000074BC();
  sub_100018DA0();
  sub_1000245BC();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_100053610()
{
  sub_100018A44();
  swift_release();
  *(void *)(v0 + 88) = sub_100048ECC();
  sub_100026BF8();
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_100053678()
{
  sub_10002348C();
  if (v0[11])
  {
    IntentParameter.wrappedValue.getter();
    v0[12] = v0[2];
    v0[13] = static MainActor.shared.getter();
    sub_1000074BC();
    sub_100018DA0();
    sub_1000245BC();
    return _swift_task_switch(v1, v2, v3);
  }
  else
  {
    static IntentResult.result<>()();
    uint64_t v4 = sub_10002A5A4();
    v5(v4);
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1000235A4();
    return v6();
  }
}

uint64_t sub_10005376C()
{
  sub_10002348C();
  uint64_t v1 = *(void **)(v0 + 96);
  uint64_t v2 = *(void **)(v0 + 88);
  swift_release();
  uint64_t v3 = (void *)sub_100029CD8();
  sub_1000328A4(v3);

  swift_unknownObjectRelease();
  sub_100026BF8();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_1000537F8()
{
  sub_10002348C();
  static IntentResult.result<>()();
  uint64_t v0 = sub_10002A5A4();
  v1(v0);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1000235A4();
  return v2();
}

uint64_t sub_100053878@<X0>(uint64_t a1@<X8>)
{
  return sub_100053890(ChangeShortcutIconAction.title.unsafeMutableAddressor, a1);
}

uint64_t sub_100053890@<X0>(uint64_t (*a1)(void)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1();
  type metadata accessor for LocalizedStringResource();
  sub_10001C094();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);

  return v6(a2, v3, v4);
}

uint64_t sub_100053900()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10005F998;
  return ChangeShortcutIconAction.perform()();
}

void sub_1000539A0(void *a1@<X8>)
{
  ChangeShortcutIconAction.init()();
  *a1 = v2;
}

uint64_t sub_1000539C8(uint64_t a1)
{
  unint64_t v2 = sub_10005C3F8();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t sub_100053A04()
{
  uint64_t v0 = sub_100025A08(&qword_1000F4668);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = &v12[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for Locale();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v9);
  uint64_t v10 = type metadata accessor for TypeDisplayRepresentation();
  sub_10005F890(v10, static ShortcutAttribute.typeDisplayRepresentation);
  sub_10004AB78(v10, (uint64_t)static ShortcutAttribute.typeDisplayRepresentation);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v4 + 104))(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v3);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  sub_100021594((uint64_t)v2, 1, 1, v9);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t ShortcutAttribute.typeDisplayRepresentation.unsafeMutableAddressor()
{
  return sub_10005A378(&qword_1000F45F0, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static ShortcutAttribute.typeDisplayRepresentation);
}

uint64_t static ShortcutAttribute.typeDisplayRepresentation.getter()
{
  return sub_100059ED8();
}

uint64_t static ShortcutAttribute.typeDisplayRepresentation.setter(uint64_t a1)
{
  return sub_100059FAC(a1, &qword_1000F45F0, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static ShortcutAttribute.typeDisplayRepresentation);
}

uint64_t (*static ShortcutAttribute.typeDisplayRepresentation.modify())()
{
  if (qword_1000F45F0 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();
  sub_100025EC8(v0, (uint64_t)static ShortcutAttribute.typeDisplayRepresentation);
  return j_j__swift_endAccess;
}

void static ShortcutAttribute.caseDisplayRepresentations.getter()
{
  sub_10002066C();
  uint64_t v2 = sub_100025A08(&qword_1000F5618);
  uint64_t v3 = sub_1000165CC(v2);
  __chkstk_darwin(v3);
  sub_10005FC1C(v4, v38);
  uint64_t v5 = sub_100025A08(&qword_1000F4668);
  uint64_t v6 = sub_1000165CC(v5);
  __chkstk_darwin(v6);
  uint64_t v43 = sub_10002625C();
  sub_100022284();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_10001B700();
  uint64_t v10 = type metadata accessor for Locale();
  uint64_t v11 = sub_1000165CC(v10);
  __chkstk_darwin(v11);
  sub_10005FDE4();
  uint64_t v12 = type metadata accessor for String.LocalizationValue();
  uint64_t v13 = sub_1000165CC(v12);
  __chkstk_darwin(v13);
  sub_10005FDE4();
  uint64_t v44 = type metadata accessor for LocalizedStringResource();
  sub_10001C094();
  __chkstk_darwin(v14);
  sub_100025A08(&qword_1000F57B0);
  uint64_t v15 = sub_100025A08(&qword_1000F57B8);
  sub_100022084(v15);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v41 = *(void *)(v16 + 72);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1000BB3D0;
  unint64_t v42 = v19 + v18;
  *(unsigned char *)(v19 + v18) = 0;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  unsigned int v39 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v40 = *(void (**)(void))(v8 + 104);
  sub_10005FA28();
  v20();
  sub_10005FB0C();
  sub_100022F38();
  sub_10001681C();
  sub_100021594(v21, v22, v23, v44);
  sub_10005FA8C(0xD000000000000013, 0x80000001000C1010);
  DisplayRepresentation.init(title:subtitle:image:)();
  sub_10006007C(v42 + v41);
  *uint64_t v24 = 1;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  ((void (*)(uint64_t, void, uint64_t))v40)(v1, v39, v43);
  sub_100022F38();
  sub_10001681C();
  sub_100021594(v25, v26, v27, v44);
  sub_10005FA8C(0x746177656C707061, 0xEA00000000006863);
  DisplayRepresentation.init(title:subtitle:image:)();
  sub_10006007C(v42 + 2 * v41);
  unsigned char *v28 = 2;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  ((void (*)(uint64_t, void, uint64_t))v40)(v1, v39, v43);
  sub_10005FAEC();
  sub_100022F38();
  uint64_t v29 = sub_100015100();
  sub_100021594(v29, v30, v31, v44);
  sub_10005FA8C(0xD000000000000011, 0x80000001000C1050);
  sub_10005FFC4();
  DisplayRepresentation.init(title:subtitle:image:)();
  sub_10006007C(v42 + 3 * v41);
  *uint64_t v32 = 3;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  sub_10005FA28();
  v40();
  sub_100022F38();
  uint64_t v33 = sub_100015100();
  sub_100021594(v33, v34, v35, v44);
  sub_10005FA8C(0x6569762E74786574, 0xEF7265646E696677);
  DisplayRepresentation.init(title:subtitle:image:)();
  sub_10006007C(v42 + 4 * v41);
  *uint64_t v36 = 4;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  sub_10005FA28();
  v40();
  sub_100022F38();
  sub_100018840(v0);
  sub_10005FA8C(0x7061687372616567, 0xEE006C6C69662E65);
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v42 + 5 * v41) = 5;
  sub_10001981C();
  static Locale.current.getter();
  sub_10005FA28();
  v37();
  sub_100022F38();
  sub_100021594(v0, 1, 1, v44);
  sub_10005FA8C(1801678700, 0xE400000000000000);
  DisplayRepresentation.init(title:subtitle:image:)();
  type metadata accessor for DisplayRepresentation();
  sub_10005C444();
  Dictionary.init(dictionaryLiteral:)();
  sub_10001885C();
}

Shortcuts::ShortcutAttribute_optional __swiftcall ShortcutAttribute.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000E4DB8, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 6) {
    return (Shortcuts::ShortcutAttribute_optional)6;
  }
  else {
    return (Shortcuts::ShortcutAttribute_optional)v3;
  }
}

_UNKNOWN **static ShortcutAttribute.allCases.getter()
{
  return &off_1000E4E68;
}

uint64_t ShortcutAttribute.rawValue.getter(char a1)
{
  uint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x61576E4F776F6873;
      break;
    case 2:
      uint64_t v3 = 0x4D6E496E6970;
      goto LABEL_5;
    case 3:
      uint64_t v3 = 0x657263536E6FLL;
LABEL_5:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6E65000000000000;
      break;
    case 4:
      uint64_t result = 0x7463416B63697571;
      break;
    case 5:
      uint64_t result = 0x656857776F6C6C61;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100054668(unsigned __int8 *a1, char *a2)
{
  return sub_100060140(*a1, *a2);
}

Swift::Int sub_100054674()
{
  return sub_10005467C(*v0);
}

Swift::Int sub_10005467C(char a1)
{
  return Hasher._finalize()();
}

Swift::Int sub_1000546E0()
{
  return sub_1000548EC();
}

uint64_t sub_1000546EC()
{
  return sub_100054754();
}

uint64_t sub_1000546F4()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100054754()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100054884(uint64_t a1)
{
  return sub_10005488C(a1, *v1);
}

Swift::Int sub_10005488C(uint64_t a1, char a2)
{
  return Hasher._finalize()();
}

Swift::Int sub_1000548EC()
{
  return Hasher._finalize()();
}

Shortcuts::ShortcutAttribute_optional sub_100054960@<W0>(Swift::String *a1@<X0>, Shortcuts::ShortcutAttribute_optional *a2@<X8>)
{
  result.value = ShortcutAttribute.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t sub_100054990@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ShortcutAttribute.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1000549BC(void *a1@<X8>)
{
  *a1 = &off_1000E4E68;
}

uint64_t sub_1000549CC@<X0>(uint64_t a1@<X8>)
{
  return sub_10004C9E8(ShortcutAttribute.typeDisplayRepresentation.unsafeMutableAddressor, (void (*)(void))&type metadata accessor for TypeDisplayRepresentation, a1);
}

uint64_t sub_1000549F8(uint64_t a1)
{
  unint64_t v2 = sub_10002E4E4();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_100054A48(uint64_t a1)
{
  unint64_t v2 = sub_10005DA84();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_100054A94(char a1)
{
  switch(a1)
  {
    case 1:
      id v6 = [v2 workflowTypes];
      sub_10005FEB8();
      uint64_t v4 = sub_100026E68();

      uint64_t v5 = (id *)&WFWorkflowTypeWatch;
      goto LABEL_7;
    case 2:
      id v7 = [v2 workflowTypes];
      sub_10005FEB8();
      uint64_t v4 = sub_100026E68();

      uint64_t v5 = (id *)&WFWorkflowTypeMenuBar;
      goto LABEL_7;
    case 3:
      id v8 = [v2 workflowTypes];
      sub_10005FEB8();
      uint64_t v4 = sub_100026E68();

      uint64_t v5 = (id *)&WFWorkflowTypeReceivesOnScreenContent;
      goto LABEL_7;
    case 4:
      id v9 = [v2 workflowTypes];
      sub_10005FEB8();
      uint64_t v4 = sub_100026E68();

      uint64_t v5 = (id *)&WFWorkflowTypeQuickActions;
      goto LABEL_7;
    case 5:
      return [v2 disabledOnLockScreen] ^ 1;
    default:
      id v3 = [v2 workflowTypes];
      sub_10005FEB8();
      uint64_t v4 = sub_100026E68();

      uint64_t v5 = (id *)&WFWorkflowTypeShareSheet;
LABEL_7:
      id v10 = *v5;
      char v11 = sub_100049C44((uint64_t)v10, v4);
      swift_bridgeObjectRelease();

      return v11 & 1;
  }
}

void sub_100054C34(char a1, char a2)
{
  switch(a2)
  {
    case 1:
      id v3 = (void **)&WFWorkflowTypeWatch;
      goto LABEL_7;
    case 2:
      id v3 = (void **)&WFWorkflowTypeMenuBar;
      goto LABEL_7;
    case 3:
      id v3 = (void **)&WFWorkflowTypeReceivesOnScreenContent;
      goto LABEL_7;
    case 4:
      id v3 = (void **)&WFWorkflowTypeQuickActions;
      goto LABEL_7;
    case 5:
      [v2 setDisabledOnLockScreen:(a1 & 1) == 0];
      return;
    default:
      id v3 = (void **)&WFWorkflowTypeShareSheet;
LABEL_7:
      sub_100054CD4(*v3, a1 & 1, v2);
      return;
  }
}

void sub_100054CD4(void *a1, char a2, id a3)
{
  id v6 = [a3 workflowTypes];
  type metadata accessor for WFWorkflowTypeName(0);
  uint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v8 = sub_100081328(v7);
  sub_100025A08(&qword_1000F5E28);
  if (a2)
  {
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1000BAB00;
    *(void *)(inited + 32) = a1;
    id v10 = a1;
    uint64_t v11 = sub_100054E24(inited, v8);
  }
  else
  {
    uint64_t v12 = swift_initStackObject();
    *(_OWORD *)(v12 + 16) = xmmword_1000BAB00;
    *(void *)(v12 + 32) = a1;
    id v13 = a1;
    uint64_t v11 = (uint64_t)sub_10005B6F4(v12, v8);
    swift_setDeallocating();
    sub_100044970();
  }
  sub_1000631E8(v11);
  swift_bridgeObjectRelease();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_release();
  [a3 setWorkflowTypes:isa];
}

uint64_t sub_100054E24(uint64_t a1, uint64_t a2)
{
  uint64_t v9 = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      uint64_t v5 = *(void **)(a1 + 8 * i + 32);
      sub_100089A6C(&v8, v5);
    }
    swift_bridgeObjectRelease();
    return v9;
  }
  else
  {
    uint64_t v6 = a2;
    swift_bridgeObjectRelease();
  }
  return v6;
}

void GetShortcutAttributesAction.init()()
{
  sub_10002066C();
  type metadata accessor for InputConnectionBehavior();
  sub_100022284();
  __chkstk_darwin(v0);
  sub_10001895C(v1, v33);
  uint64_t v2 = sub_100025A08(&qword_1000F4658);
  uint64_t v3 = sub_1000165CC(v2);
  __chkstk_darwin(v3);
  sub_1000206CC();
  uint64_t v36 = v4;
  sub_1000215FC();
  uint64_t v6 = __chkstk_darwin(v5);
  sub_10002A660(v6, v7, v8, v9, v10, v11, v12, v13, v34);
  uint64_t v14 = sub_100025A08(&qword_1000F4668);
  uint64_t v15 = sub_1000165CC(v14);
  __chkstk_darwin(v15);
  sub_1000197D0();
  sub_100022284();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  uint64_t v19 = sub_100027B4C();
  uint64_t v20 = sub_1000165CC(v19);
  __chkstk_darwin(v20);
  uint64_t v21 = sub_10001FA9C();
  uint64_t v22 = sub_1000165CC(v21);
  __chkstk_darwin(v22);
  uint64_t v35 = sub_100025C58();
  sub_100012D7C();
  __chkstk_darwin(v23);
  sub_1000242E0();
  sub_100025A08(&qword_1000F46C8);
  sub_100025D90();
  static Locale.current.getter();
  uint64_t v24 = *(void (**)(void))(v17 + 104);
  sub_10005FA64();
  sub_10005FA70();
  v24();
  sub_1000222E0();
  sub_10005FE48();
  static Locale.current.getter();
  sub_10005FA64();
  sub_10005FA70();
  v24();
  sub_1000222E0();
  sub_10005FE94();
  sub_100021594(v25, v26, v27, v35);
  type metadata accessor for IntentDialog();
  sub_100018840(v37);
  sub_100018840(v36);
  sub_100022348();
  v28();
  sub_10002E4E4();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  sub_100025A08((uint64_t *)&unk_1000F4680);
  sub_100020530();
  static Locale.current.getter();
  sub_10005FA64();
  sub_10001881C();
  v24();
  sub_1000222E0();
  sub_10005FE48();
  static Locale.current.getter();
  sub_10005FA64();
  sub_10001881C();
  v24();
  sub_1000222E0();
  uint64_t v29 = sub_100023498();
  sub_100021594(v29, v30, v31, v35);
  sub_100018840(v37);
  sub_100018840(v36);
  sub_100022348();
  v32();
  sub_10001D418();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_10001885C();
}

void sub_100055274()
{
}

uint64_t GetShortcutAttributesAction.title.unsafeMutableAddressor()
{
  return sub_10005A378(&qword_1000F45F8, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)&static GetShortcutAttributesAction.title);
}

uint64_t static GetShortcutAttributesAction.title.getter()
{
  return sub_10005A40C();
}

void sub_100055308()
{
}

uint64_t GetShortcutAttributesAction.description.unsafeMutableAddressor()
{
  return sub_10005A378(&qword_1000F4600, (uint64_t (*)(void))&type metadata accessor for IntentDescription, (uint64_t)&static GetShortcutAttributesAction.description);
}

uint64_t static GetShortcutAttributesAction.description.getter()
{
  return sub_10005A40C();
}

uint64_t SetShortcutAttributesAction.operation.getter()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t GetShortcutAttributesAction.attribute.setter()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t GetShortcutAttributesAction.shortcut.getter()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

void GetShortcutAttributesAction.shortcut.setter(void *a1)
{
  id v2 = a1;
  sub_10005FEA0();
}

void static GetShortcutAttributesAction.parameterSummary.getter()
{
  sub_1000074D4();
  uint64_t v0 = sub_100025A08(&qword_1000F57C8);
  uint64_t v1 = sub_1000165CC(v0);
  __chkstk_darwin(v1);
  sub_100021FC4();
  sub_100025A08(&qword_1000F57D0);
  sub_10001C094();
  __chkstk_darwin(v2);
  sub_10001899C();
  sub_10005C490();
  sub_1000242C8();
  v3._countAndFlagsBits = 544499015;
  v3._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  sub_100025A08(&qword_1000F57E0);
  sub_100022688();
  swift_release();
  v4._countAndFlagsBits = 0x20726F6620;
  v4._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  swift_getKeyPath();
  sub_100025A08(&qword_1000F57E8);
  sub_100022688();
  swift_release();
  sub_100022370();
  sub_10002A714();
  sub_100022414();
  sub_10002A68C();
}

uint64_t GetShortcutAttributesAction.perform()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return sub_1000188B8((uint64_t)sub_1000555D4);
}

void sub_1000555D4()
{
  sub_10005FBCC();
  uint64_t v1 = sub_100029C7C(0, &qword_1000F5268);
  IntentParameter.wrappedValue.getter();
  id v2 = [self defaultDatabase];
  id v3 = sub_10005FF54(v2);
  if (v1)
  {
    sub_10005FE6C();
  }
  else
  {
    Swift::String v4 = v3;
    OpenWorkflowAction.init()();
    uint64_t v6 = v5;
    IntentParameter.wrappedValue.getter();
    id v7 = *(id *)(v0 + 16);
    IntentParameter.wrappedValue.setter();

    IntentParameter.wrappedValue.getter();
    *(unsigned char *)(v0 + 48) = sub_100054A94(*(unsigned char *)(v0 + 16)) & 1;
    *(void *)(v0 + 16) = v6;
    sub_10005C4E4();
    sub_10005C0D4();
    static IntentResult.result<A, B>(value:opensIntent:)();

    swift_release();
    sub_1000235A4();
  }
  sub_100011A2C();
  __asm { BRAA            X1, X16 }
}

uint64_t sub_100055734@<X0>(uint64_t a1@<X8>)
{
  return sub_100053890(GetShortcutAttributesAction.title.unsafeMutableAddressor, a1);
}

uint64_t sub_100055750(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_10005F998;
  return GetShortcutAttributesAction.perform()(a1, v5, v4);
}

void sub_1000557FC(void *a1@<X8>)
{
  GetShortcutAttributesAction.init()();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_100055824(uint64_t a1)
{
  unint64_t v2 = sub_10005C490();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

void static SetShortcutAttributesAction.SetShortcutAttributesOperation.typeDisplayRepresentation.getter()
{
  sub_10002066C();
  uint64_t v1 = sub_100025A08(&qword_1000F4668);
  uint64_t v2 = sub_1000165CC(v1);
  __chkstk_darwin(v2);
  sub_10005F9C8();
  type metadata accessor for LocalizedStringResource.BundleDescription();
  sub_100022284();
  __chkstk_darwin(v3);
  sub_10003F748();
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = sub_1000165CC(v4);
  __chkstk_darwin(v5);
  uint64_t v6 = type metadata accessor for String.LocalizationValue();
  uint64_t v7 = sub_1000165CC(v6);
  __chkstk_darwin(v7);
  uint64_t v8 = sub_100029114();
  sub_10001C094();
  __chkstk_darwin(v9);
  sub_100018874();
  sub_10005FDFC();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  sub_10005FA28();
  v10();
  sub_10005FB0C();
  sub_100022F38();
  sub_100021594(v0, 1, 1, v8);
  TypeDisplayRepresentation.init(name:numericFormat:)();
  sub_10001885C();
}

void static SetShortcutAttributesAction.SetShortcutAttributesOperation.caseDisplayRepresentations.getter()
{
  sub_10002066C();
  uint64_t v0 = sub_100025A08(&qword_1000F5618);
  uint64_t v1 = sub_1000165CC(v0);
  __chkstk_darwin(v1);
  sub_10005FC1C(v2, v20);
  uint64_t v3 = sub_100025A08(&qword_1000F4668);
  uint64_t v4 = sub_1000165CC(v3);
  __chkstk_darwin(v4);
  sub_1000167F4();
  uint64_t v24 = v5;
  type metadata accessor for LocalizedStringResource.BundleDescription();
  sub_100025A64();
  __chkstk_darwin(v6);
  uint64_t v7 = sub_10005F9E4();
  uint64_t v8 = sub_1000165CC(v7);
  __chkstk_darwin(v8);
  sub_10002238C();
  uint64_t v9 = type metadata accessor for String.LocalizationValue();
  uint64_t v10 = sub_1000165CC(v9);
  __chkstk_darwin(v10);
  uint64_t v22 = type metadata accessor for LocalizedStringResource();
  sub_10001C094();
  __chkstk_darwin(v11);
  sub_1000074A4();
  sub_100025A08(&qword_1000F5800);
  uint64_t v12 = sub_100025A08(&qword_1000F5808) - 8;
  uint64_t v21 = *(void *)(*(void *)v12 + 72);
  unint64_t v13 = (*(unsigned __int8 *)(*(void *)v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v12 + 80);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1000BABE0;
  *(unsigned char *)(v23 + v13) = 0;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  sub_10002A7DC();
  v14();
  sub_100014FF0();
  sub_100022F38();
  sub_10001681C();
  sub_100021594(v15, v16, v17, v22);
  uint64_t v18 = type metadata accessor for DisplayRepresentation.Image();
  sub_100021594(v25, 1, 1, v18);
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v23 + v13 + v21) = 1;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  sub_100022348();
  v19();
  sub_100014FF0();
  sub_100022F38();
  sub_10005FDA0(v24);
  sub_100021594(v25, 1, 1, v18);
  DisplayRepresentation.init(title:subtitle:image:)();
  type metadata accessor for DisplayRepresentation();
  sub_10005C530();
  Dictionary.init(dictionaryLiteral:)();
  sub_10001885C();
}

Shortcuts::SetShortcutAttributesAction::SetShortcutAttributesOperation_optional __swiftcall SetShortcutAttributesAction.SetShortcutAttributesOperation.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1000E4E90, v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    v4.value = Shortcuts_SetShortcutAttributesAction_SetShortcutAttributesOperation_toggle;
  }
  else {
    v4.value = Shortcuts_SetShortcutAttributesAction_SetShortcutAttributesOperation_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

_UNKNOWN **static SetShortcutAttributesAction.SetShortcutAttributesOperation.allCases.getter()
{
  return &off_1000E4EE0;
}

uint64_t SetShortcutAttributesAction.SetShortcutAttributesOperation.rawValue.getter(char a1)
{
  if (a1) {
    return 0x656C67676F74;
  }
  else {
    return 1852994932;
  }
}

uint64_t sub_100055E24(char *a1, char *a2)
{
  return sub_1000600A8(*a1, *a2);
}

Swift::Int sub_100055E30()
{
  return sub_1000546E0();
}

uint64_t sub_100055E38()
{
  return sub_1000546F4();
}

Swift::Int sub_100055E40()
{
  return sub_1000548EC();
}

Shortcuts::SetShortcutAttributesAction::SetShortcutAttributesOperation_optional sub_100055E48@<W0>(Swift::String *a1@<X0>, Shortcuts::SetShortcutAttributesAction::SetShortcutAttributesOperation_optional *a2@<X8>)
{
  result.value = SetShortcutAttributesAction.SetShortcutAttributesOperation.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t sub_100055E78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SetShortcutAttributesAction.SetShortcutAttributesOperation.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_100055EA4(void *a1@<X8>)
{
  *a1 = &off_1000E4EE0;
}

uint64_t sub_100055EB8(uint64_t a1)
{
  unint64_t v2 = sub_10002E7D4();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_100055F08(uint64_t a1)
{
  unint64_t v2 = sub_10005DF00();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

void SetShortcutAttributesAction.init()()
{
  sub_10002066C();
  uint64_t v2 = sub_100025A08(&qword_1000F46E8);
  uint64_t v3 = sub_1000165CC(v2);
  __chkstk_darwin(v3);
  sub_10005FC00(v4, v47[0]);
  type metadata accessor for InputConnectionBehavior();
  sub_100022284();
  uint64_t v64 = v5;
  uint64_t v65 = v6;
  __chkstk_darwin(v5);
  sub_1000167F4();
  uint64_t v54 = v7;
  uint64_t v8 = sub_100025A08(&qword_1000F4658);
  uint64_t v9 = sub_1000165CC(v8);
  __chkstk_darwin(v9);
  sub_1000293B0(v10, v47[0]);
  __chkstk_darwin(v11);
  uint64_t v60 = (uint64_t)v47 - v12;
  uint64_t v13 = sub_100025A08(&qword_1000F4668);
  uint64_t v14 = sub_1000165CC(v13);
  __chkstk_darwin(v14);
  uint64_t v15 = sub_10002A560();
  sub_100022284();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  uint64_t v19 = sub_100027B4C();
  uint64_t v20 = sub_1000165CC(v19);
  __chkstk_darwin(v20);
  uint64_t v21 = sub_10001FA9C();
  uint64_t v22 = sub_1000165CC(v21);
  __chkstk_darwin(v22);
  uint64_t v23 = sub_100025C58();
  uint64_t v59 = v23;
  sub_100012D7C();
  __chkstk_darwin(v24);
  sub_10001899C();
  uint64_t v55 = v0;
  uint64_t v50 = sub_100025A08(&qword_1000F46D8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v25 = *(void (**)(void))(v17 + 104);
  int v56 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v57 = v15;
  sub_10005FA70();
  v25();
  v47[1] = v17 + 104;
  uint64_t v53 = v25;
  sub_1000222E0();
  sub_100018D20();
  static Locale.current.getter();
  sub_10005FA70();
  v25();
  sub_1000222E0();
  uint64_t v52 = v1;
  sub_100021594(v1, 0, 1, v23);
  LOBYTE(v66) = 0;
  uint64_t v58 = type metadata accessor for IntentDialog();
  sub_100018840(v60);
  sub_100018840(v61);
  int v62 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v63 = *(void *)(v65 + 104);
  v65 += 104;
  sub_10005FA28();
  v26();
  sub_10002E7D4();
  uint64_t v50 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  uint64_t v27 = sub_100025A08(&qword_1000F46C8);
  sub_100060030(v27);
  sub_100025D90();
  static Locale.current.getter();
  uint64_t v28 = v53;
  sub_10001B44C();
  v28();
  sub_1000222E0();
  sub_10005FE24();
  static Locale.current.getter();
  sub_10001B44C();
  v28();
  uint64_t v29 = v52;
  sub_1000222E0();
  sub_10005FB6C(v29);
  LOBYTE(v66) = 6;
  uint64_t v30 = sub_100015100();
  sub_100021594(v30, v31, v32, v58);
  sub_10005FDA0(v61);
  sub_100014FB8();
  v33();
  sub_10002E4E4();
  uint64_t v49 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  uint64_t v48 = sub_100025A08((uint64_t *)&unk_1000F4680);
  sub_100020530();
  static Locale.current.getter();
  uint64_t v34 = v53;
  sub_10001B44C();
  v34();
  sub_1000222E0();
  sub_100018D20();
  static Locale.current.getter();
  sub_10001B44C();
  v34();
  uint64_t v35 = v52;
  sub_1000222E0();
  sub_10005FB6C(v35);
  uint64_t v66 = 0;
  sub_10001681C();
  sub_100021594(v36, v37, v38, v58);
  sub_100018840(v61);
  sub_100014FB8();
  v39();
  sub_10001D418();
  sub_100060024();
  uint64_t v61 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  uint64_t v48 = sub_100025A08((uint64_t *)&unk_1000F46F0);
  sub_10006005C();
  static Locale.current.getter();
  sub_10001B44C();
  v34();
  sub_1000222E0();
  sub_100060048();
  sub_100018D20();
  static Locale.current.getter();
  sub_10001B44C();
  v34();
  sub_1000222E0();
  sub_10005FB6C(v35);
  LOBYTE(v66) = 1;
  uint64_t v40 = type metadata accessor for Bool.IntentDisplayName();
  sub_10002A674(v51, v41, v42, v40);
  sub_10001681C();
  sub_100021594(v43, v44, v45, v58);
  sub_100014FB8();
  v46();
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
  sub_10001885C();
}

void SetShortcutAttributesAction.init(attribute:operation:state:)()
{
  sub_10002066C();
  uint64_t v1 = sub_100025A08(&qword_1000F46E8);
  uint64_t v2 = sub_1000165CC(v1);
  __chkstk_darwin(v2);
  sub_1000167F4();
  uint64_t v49 = v3;
  sub_10005FCB8();
  sub_100022284();
  uint64_t v53 = v4;
  __chkstk_darwin(v5);
  sub_100016D54(v6, v47);
  uint64_t v7 = sub_100025A08(&qword_1000F4658);
  uint64_t v8 = sub_1000165CC(v7);
  __chkstk_darwin(v8);
  sub_1000206CC();
  uint64_t v50 = v9;
  sub_1000215FC();
  uint64_t v11 = __chkstk_darwin(v10);
  sub_10001B3D8(v11, v12, v13, v14, v15, v16, v17, v18, v48);
  uint64_t v19 = sub_100025A08(&qword_1000F4668);
  uint64_t v20 = sub_1000165CC(v19);
  __chkstk_darwin(v20);
  sub_10002625C();
  sub_100022284();
  uint64_t v22 = v21;
  __chkstk_darwin(v23);
  uint64_t v24 = sub_10001504C();
  uint64_t v25 = sub_1000165CC(v24);
  __chkstk_darwin(v25);
  uint64_t v26 = type metadata accessor for String.LocalizationValue();
  uint64_t v27 = sub_1000165CC(v26);
  __chkstk_darwin(v27);
  uint64_t v51 = sub_100029114();
  sub_100012D7C();
  __chkstk_darwin(v28);
  sub_100018874();
  sub_100025A08(&qword_1000F46D8);
  sub_10005FDFC();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v29 = *(void (**)(void))(v22 + 104);
  sub_10002A7DC();
  v29();
  sub_100022F38();
  sub_10001981C();
  static Locale.current.getter();
  sub_10002A7DC();
  v29();
  sub_100022F38();
  sub_10005FE94();
  sub_100021594(v30, v31, v32, v51);
  uint64_t v33 = type metadata accessor for IntentDialog();
  sub_100024754(v52);
  sub_100024754(v50);
  (*(void (**)())(v53 + 104))();
  sub_10002E7D4();
  sub_10005FFE4();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  sub_100025A08(&qword_1000F46C8);
  swift_retain();
  sub_100025D90();
  static Locale.current.getter();
  sub_10005FA70();
  v29();
  sub_100022F38();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  sub_10005FA70();
  v29();
  sub_100022F38();
  sub_10005FB88(v0);
  uint64_t v34 = sub_100015100();
  sub_100021594(v34, v35, v36, v33);
  sub_100018840(v50);
  sub_100022348();
  v37();
  sub_10002E4E4();
  sub_10005FFE4();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  sub_100025A08((uint64_t *)&unk_1000F4680);
  swift_retain();
  sub_100020530();
  static Locale.current.getter();
  sub_10001881C();
  v29();
  sub_100022F38();
  sub_10001981C();
  static Locale.current.getter();
  sub_10001881C();
  v29();
  sub_100022F38();
  sub_10005FB88(v0);
  sub_10001681C();
  sub_100021594(v38, v39, v40, v33);
  sub_100024754(v50);
  sub_100014FB8();
  v41();
  sub_10001D418();
  sub_100060024();
  sub_10005FFB8();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_100025A08((uint64_t *)&unk_1000F46F0);
  swift_retain();
  sub_10006005C();
  static Locale.current.getter();
  sub_10001B44C();
  v29();
  sub_100022F38();
  sub_100060048();
  sub_10001981C();
  static Locale.current.getter();
  sub_10001B44C();
  v29();
  sub_100022F38();
  sub_10005FB88(v0);
  uint64_t v42 = type metadata accessor for Bool.IntentDisplayName();
  sub_100021594(v49, 1, 1, v42);
  uint64_t v43 = sub_100015100();
  sub_100021594(v43, v44, v45, v33);
  sub_100014FB8();
  v46();
  sub_10005FFB8();
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  IntentParameter.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  IntentParameter.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  IntentParameter.wrappedValue.setter();
  swift_release();
  sub_10005FF94();
  swift_release_n();
  swift_release_n();
  swift_release();
  sub_10001885C();
}

uint64_t SetShortcutAttributesAction.attribute.setter()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t SetShortcutAttributesAction.operation.setter()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t SetShortcutAttributesAction.state.setter()
{
  return IntentParameter.wrappedValue.setter();
}

void sub_100056F20()
{
}

uint64_t SetShortcutAttributesAction.title.unsafeMutableAddressor()
{
  return sub_10005A378(&qword_1000F4608, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)&static SetShortcutAttributesAction.title);
}

uint64_t static SetShortcutAttributesAction.title.getter()
{
  return sub_10005A40C();
}

void sub_100056FB4()
{
}

uint64_t SetShortcutAttributesAction.description.unsafeMutableAddressor()
{
  return sub_10005A378(&qword_1000F4610, (uint64_t (*)(void))&type metadata accessor for IntentDescription, (uint64_t)&static SetShortcutAttributesAction.description);
}

uint64_t static SetShortcutAttributesAction.description.getter()
{
  return sub_10005A40C();
}

uint64_t SetShortcutAttributesAction.attribute.getter()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t SetShortcutAttributesAction.shortcut.getter()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

void SetShortcutAttributesAction.shortcut.setter(void *a1)
{
  id v2 = a1;
  sub_10005FEA0();
}

uint64_t SetShortcutAttributesAction.state.getter()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t (*SetShortcutAttributesAction.state.modify())()
{
  unsigned __int8 v1 = sub_100012D88();
  *(void *)(v0 + 32) = sub_100020610((uint64_t)v1);
  return sub_10004C670;
}

uint64_t SetShortcutAttributesAction.$state.getter()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t static SetShortcutAttributesAction.parameterSummary.getter()
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v1 = sub_100025A08(&qword_1000F5818);
  unint64_t v2 = sub_10005C580();
  uint64_t v3 = sub_10001E88C(&qword_1000F5828, &qword_1000F5818);

  return ParameterSummarySwitchCondition.init(_:_:)(KeyPath, sub_100057248, 0, v1, v2, v3);
}

uint64_t sub_100057248@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v1 = sub_100025A08(&qword_1000F5E38);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v24 = v1;
  uint64_t v25 = v2;
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v22 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v23 = (char *)v19 - v5;
  uint64_t v21 = sub_100025A08(&qword_1000F5E40);
  uint64_t v27 = *(void *)(v21 - 8);
  uint64_t v6 = __chkstk_darwin(v21);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v20 = (char *)v19 - v9;
  char v28 = 0;
  uint64_t v10 = sub_100025A08(&qword_1000F5E48);
  v19[1] = sub_10005C580();
  sub_10005DEB0();
  sub_10001E88C(&qword_1000F5E50, &qword_1000F5E48);
  void v19[2] = v10;
  ParameterSummaryCaseCondition.init(_:_:)();
  sub_10001E88C(&qword_1000F5E58, &qword_1000F5E40);
  uint64_t v11 = v21;
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v27 + 8);
  v27 += 8;
  v12(v8, v11);
  uint64_t v13 = v22;
  ParameterSummaryDefaultCaseCondition.init(_:)();
  sub_10001E88C(&qword_1000F5E60, &qword_1000F5E38);
  uint64_t v14 = v23;
  uint64_t v15 = v24;
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v25 + 8);
  v16(v13, v15);
  uint64_t v17 = v20;
  static ParameterSummaryCaseBuilder.buildBlock<A, B>(_:_:)();
  v16(v14, v15);
  return ((uint64_t (*)(char *, uint64_t))v12)(v17, v11);
}

uint64_t sub_1000575F8@<X0>(uint64_t a1@<X8>)
{
  v17[1] = a1;
  uint64_t v1 = sub_100025A08(&qword_1000F5E68);
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_100025A08(&qword_1000F5E70);
  __chkstk_darwin(v2);
  uint64_t v3 = sub_100025A08(&qword_1000F5E48);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v17 - v8;
  sub_10005C580();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  sub_100025A08(&qword_1000F5E78);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v11._countAndFlagsBits = 32;
  v11._object = (void *)0xE100000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  sub_100025A08(&qword_1000F5E80);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v12._countAndFlagsBits = 32;
  v12._object = (void *)0xE100000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  sub_100025A08(&qword_1000F5E90);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v13._countAndFlagsBits = 0x20726F6620;
  v13._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  sub_100025A08(&qword_1000F5E88);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v14);
  ParameterSummaryString.init(stringInterpolation:)();
  IntentParameterSummary.init(_:table:)();
  sub_10001E88C(&qword_1000F5E50, &qword_1000F5E48);
  static ParameterSummaryBuilder.buildExpression<A>(_:)();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v4 + 8);
  v15(v7, v3);
  static ParameterSummaryBuilder.buildBlock<A>(_:)();
  return ((uint64_t (*)(char *, uint64_t))v15)(v9, v3);
}

uint64_t sub_10005798C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SetShortcutAttributesAction.$state.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000579B8@<X0>(uint64_t a1@<X8>)
{
  v16[1] = a1;
  uint64_t v1 = sub_100025A08(&qword_1000F5E68);
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_100025A08(&qword_1000F5E70);
  __chkstk_darwin(v2);
  uint64_t v3 = sub_100025A08(&qword_1000F5E48);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v16 - v8;
  sub_10005C580();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  sub_100025A08(&qword_1000F5E78);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v11._countAndFlagsBits = 32;
  v11._object = (void *)0xE100000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  sub_100025A08(&qword_1000F5E80);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v12._countAndFlagsBits = 0x20726F6620;
  v12._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  sub_100025A08(&qword_1000F5E88);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)();
  IntentParameterSummary.init(_:table:)();
  sub_10001E88C(&qword_1000F5E50, &qword_1000F5E48);
  static ParameterSummaryBuilder.buildExpression<A>(_:)();
  Swift::String v14 = *(void (**)(char *, uint64_t))(v4 + 8);
  v14(v7, v3);
  static ParameterSummaryBuilder.buildBlock<A>(_:)();
  return ((uint64_t (*)(char *, uint64_t))v14)(v9, v3);
}

uint64_t SetShortcutAttributesAction.perform()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[18] = a4;
  v5[19] = a5;
  v5[16] = a2;
  v5[17] = a3;
  v5[15] = a1;
  return sub_1000188B8((uint64_t)sub_100057D28);
}

uint64_t sub_100057D28()
{
  sub_10005FFAC();
  uint64_t v1 = sub_100029C7C(0, &qword_1000F5268);
  IntentParameter.wrappedValue.getter();
  id v2 = [self defaultDatabase];
  id v3 = sub_10005FF54(v2);
  *(void *)(v0 + 160) = v3;
  if (v1)
  {
    sub_10005FE6C();
    return v4();
  }
  else
  {
    uint64_t v6 = v3;
    IntentParameter.wrappedValue.getter();
    if (*(unsigned char *)(v0 + 80))
    {
      IntentParameter.wrappedValue.getter();
      char v7 = *(unsigned char *)(v0 + 80);
      char v8 = (sub_100054A94(v7) & 1) == 0;
      char v9 = v7;
    }
    else
    {
      IntentParameter.wrappedValue.getter();
      char v10 = *(unsigned char *)(v0 + 80);
      IntentParameter.wrappedValue.getter();
      char v8 = *(unsigned char *)(v0 + 80);
      char v9 = v10;
    }
    sub_100054C34(v8, v9);
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 24) = sub_100057F1C;
    uint64_t v11 = swift_continuation_init();
    *(void *)(v0 + 80) = _NSConcreteStackBlock;
    *(void *)(v0 + 88) = 0x40000000;
    *(void *)(v0 + 96) = sub_10005812C;
    *(void *)(v0 + 104) = &unk_1000E5CA8;
    *(void *)(v0 + 112) = v11;
    [v6 saveWithCompletionBlock:v0 + 80];
    return _swift_continuation_await(v0 + 16);
  }
}

uint64_t sub_100057F1C()
{
  sub_100018A44();
  sub_10001C0E8();
  sub_10001988C();
  *id v2 = v1;
  *id v2 = *v0;
  *(void *)(v1 + 168) = *(void *)(v3 + 48);
  sub_100026BF8();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_100057FFC()
{
  sub_10005FFAC();
  uint64_t v1 = *(void **)(v0 + 160);
  OpenWorkflowAction.init()();
  uint64_t v3 = v2;
  IntentParameter.wrappedValue.getter();
  id v4 = *(id *)(v0 + 80);
  IntentParameter.wrappedValue.setter();

  *(void *)(v0 + 80) = v3;
  sub_10005C0D4();
  static IntentResult.result<A>(opensIntent:)();

  swift_release();
  sub_1000235A4();
  return v5();
}

uint64_t sub_1000580C4()
{
  sub_10002348C();
  uint64_t v1 = *(void **)(v0 + 160);
  swift_willThrow();

  sub_100022638();
  return v2();
}

uint64_t sub_10005812C(uint64_t a1, void *a2)
{
  if (a2)
  {
    id v2 = a2;
    return sub_10005F8F8();
  }
  else
  {
    return j__swift_continuation_throwingResume();
  }
}

uint64_t sub_100058180@<X0>(uint64_t a1@<X8>)
{
  return sub_100053890(SetShortcutAttributesAction.title.unsafeMutableAddressor, a1);
}

uint64_t sub_10005819C(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v7 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10005F998;
  return SetShortcutAttributesAction.perform()(a1, v4, v5, v7, v6);
}

void sub_10005825C(void *a1@<X8>)
{
  SetShortcutAttributesAction.init()();
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
}

uint64_t sub_100058288(uint64_t a1)
{
  unint64_t v2 = sub_10005C580();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

void CreateShortcutiCloudLinkAction.init()()
{
}

void sub_1000582DC()
{
  sub_10002066C();
  uint64_t v28 = v0;
  uint64_t v29 = v1;
  type metadata accessor for InputConnectionBehavior();
  sub_100022284();
  uint64_t v31 = v3;
  uint64_t v32 = v2;
  __chkstk_darwin(v2);
  sub_10001895C(v4, v26);
  uint64_t v5 = sub_100025A08(&qword_1000F4658);
  uint64_t v6 = sub_1000165CC(v5);
  __chkstk_darwin(v6);
  uint64_t v30 = (uint64_t)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000215FC();
  __chkstk_darwin(v8);
  uint64_t v27 = (uint64_t)&v26 - v9;
  uint64_t v10 = sub_100025A08(&qword_1000F4668);
  uint64_t v11 = sub_1000165CC(v10);
  __chkstk_darwin(v11);
  sub_100026138();
  sub_100022284();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  uint64_t v15 = sub_1000240CC();
  uint64_t v16 = sub_1000165CC(v15);
  __chkstk_darwin(v16);
  uint64_t v17 = sub_10005FBD8();
  uint64_t v18 = sub_1000165CC(v17);
  __chkstk_darwin(v18);
  uint64_t v19 = sub_100029114();
  sub_10001C094();
  __chkstk_darwin(v20);
  sub_10001C0D0();
  uint64_t v26 = sub_100025A08((uint64_t *)&unk_1000F4680);
  sub_100020530();
  static Locale.current.getter();
  uint64_t v21 = *(void (**)(void))(v13 + 104);
  sub_10005FA0C();
  v21();
  sub_100022F38();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  sub_10005FA0C();
  v21();
  sub_100022F38();
  uint64_t v22 = sub_100023498();
  sub_100021594(v22, v23, v24, v19);
  uint64_t v33 = 0;
  type metadata accessor for IntentDialog();
  sub_100018840(v27);
  sub_100018840(v30);
  sub_100022348();
  v25();
  sub_10001D418();
  sub_10005FDBC();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_10001885C();
}

void sub_1000585CC()
{
}

uint64_t CreateShortcutiCloudLinkAction.title.unsafeMutableAddressor()
{
  return sub_10005A378(&qword_1000F4618, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)&static CreateShortcutiCloudLinkAction.title);
}

uint64_t static CreateShortcutiCloudLinkAction.title.getter()
{
  return sub_100059ED8();
}

uint64_t static CreateShortcutiCloudLinkAction.title.setter(uint64_t a1)
{
  return sub_100059FAC(a1, &qword_1000F4618, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)&static CreateShortcutiCloudLinkAction.title);
}

uint64_t (*static CreateShortcutiCloudLinkAction.title.modify())()
{
  if (qword_1000F4618 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_100025EC8(v0, (uint64_t)&static CreateShortcutiCloudLinkAction.title);
  return j_j__swift_endAccess;
}

void sub_100058718()
{
}

uint64_t CreateShortcutiCloudLinkAction.description.unsafeMutableAddressor()
{
  return sub_10005A378(&qword_1000F4620, (uint64_t (*)(void))&type metadata accessor for IntentDescription, (uint64_t)&static CreateShortcutiCloudLinkAction.description);
}

uint64_t static CreateShortcutiCloudLinkAction.description.getter()
{
  return sub_10005A40C();
}

void static CreateShortcutiCloudLinkAction.parameterSummary.getter()
{
  sub_1000074D4();
  uint64_t v0 = sub_100025A08(&qword_1000F5838);
  uint64_t v1 = sub_1000165CC(v0);
  __chkstk_darwin(v1);
  sub_100021FC4();
  sub_100025A08(&qword_1000F5840);
  sub_10001C094();
  __chkstk_darwin(v2);
  sub_10001899C();
  sub_10005C5CC();
  sub_1000242C8();
  v3._object = (void *)0x80000001000C10F0;
  v3._countAndFlagsBits = 0xD000000000000017;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  sub_100025A08(&qword_1000F5850);
  sub_100022688();
  swift_release();
  sub_100022370();
  sub_10002A714();
  sub_100022414();
  sub_10002A68C();
}

uint64_t CreateShortcutiCloudLinkAction.perform()()
{
  sub_100018A44();
  v0[16] = v1;
  v0[17] = v2;
  uint64_t v3 = type metadata accessor for URL();
  v0[18] = v3;
  sub_100022084(v3);
  v0[19] = v4;
  v0[20] = sub_10002A600();
  v0[21] = swift_task_alloc();
  sub_100026BF8();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_100058958()
{
  sub_10005FBCC();
  id v1 = [objc_allocWithZone((Class)WFWorkflowPrepareForSharingOptions) init];
  v0[22] = v1;
  sub_100029C7C(0, &qword_1000F5268);
  IntentParameter.wrappedValue.getter();
  uint64_t v2 = (void *)v0[15];
  id v3 = [self defaultDatabase];
  id v4 = sub_100048C7C(v2, v3);
  v0[23] = v4;
  uint64_t v5 = v4;
  id v6 = [v4 prepareForSharingWithOptions:v1];
  v0[24] = v6;
  id v7 = [self sharedManager];
  v0[25] = v7;
  sub_10005C618(v5);
  if (!v8)
  {
    id v9 = [self defaultName];
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  uint64_t v10 = v0[20];
  NSString v11 = String._bridgeToObjectiveC()();
  v0[26] = v11;
  swift_bridgeObjectRelease();
  v0[2] = v0;
  v0[7] = v10;
  v0[3] = sub_100058BF0;
  uint64_t v12 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_100058E80;
  v0[13] = &unk_1000E5CC0;
  v0[14] = v12;
  [v7 uploadWorkflow:v6 withName:v11 shortDescription:0 longDescription:0 private:1 completionHandler:v0 + 10];
  sub_100011A2C();
  return _swift_continuation_await(v13);
}

uint64_t sub_100058BF0()
{
  sub_100018A44();
  sub_10001C0E8();
  sub_10001988C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 216) = *(void *)(v3 + 48);
  sub_100026BF8();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_100058CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_10002A7A0();
  sub_100023258();
  uint64_t v14 = (void *)v12[25];
  uint64_t v13 = (void *)v12[26];
  uint64_t v16 = (void *)v12[23];
  uint64_t v15 = (void *)v12[24];
  uint64_t v29 = (void *)v12[22];
  sub_100020698();
  v17();

  sub_10002B50C(&qword_1000F5860, (void (*)(uint64_t))&type metadata accessor for URL);
  sub_100029CD8();
  static IntentResult.result<A>(value:)();

  uint64_t v18 = sub_100029CD8();
  v19(v18);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1000235A4();
  sub_10005FF18();
  return v21(v20, v21, v22, v23, v24, v25, v26, v27, v29, a10, a11, a12);
}

uint64_t sub_100058DE0()
{
  sub_10005FFAC();
  uint64_t v1 = *(void **)(v0 + 208);
  uint64_t v2 = *(void **)(v0 + 200);
  uint64_t v4 = *(void **)(v0 + 176);
  uint64_t v3 = *(void **)(v0 + 184);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  sub_100022638();
  return v5();
}

uint64_t sub_100058E80(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for URL();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 32);
  if (a3)
  {
    id v9 = a3;
    return sub_10005F8F8();
  }
  else
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    return sub_100052628(v8, (uint64_t)v7);
  }
}

uint64_t sub_100058F2C@<X0>(uint64_t a1@<X8>)
{
  return sub_10004C9E8(CreateShortcutiCloudLinkAction.title.unsafeMutableAddressor, (void (*)(void))&type metadata accessor for LocalizedStringResource, a1);
}

uint64_t sub_100058F5C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10005F998;
  return CreateShortcutiCloudLinkAction.perform()();
}

void sub_100058FFC(void *a1@<X8>)
{
  CreateShortcutiCloudLinkAction.init()();
  *a1 = v2;
}

uint64_t sub_100059024(uint64_t a1)
{
  unint64_t v2 = sub_10005C5CC();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

void DeleteWorkflowAction.init()()
{
  sub_10002066C();
  type metadata accessor for InputConnectionBehavior();
  sub_100022284();
  v21[2] = v2;
  v21[3] = v1;
  __chkstk_darwin(v1);
  sub_10001895C(v3, v21[0]);
  uint64_t v4 = sub_100025A08(&qword_1000F4658);
  uint64_t v5 = sub_1000165CC(v4);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v21 - v9;
  uint64_t v11 = sub_100025A08(&qword_1000F4668);
  uint64_t v12 = sub_1000165CC(v11);
  __chkstk_darwin(v12);
  sub_100026138();
  sub_100022284();
  __chkstk_darwin(v13);
  sub_100018A50();
  uint64_t v14 = type metadata accessor for Locale();
  uint64_t v15 = sub_1000165CC(v14);
  __chkstk_darwin(v15);
  uint64_t v16 = sub_10001FA9C();
  uint64_t v17 = sub_1000165CC(v16);
  __chkstk_darwin(v17);
  sub_10005F9C8();
  type metadata accessor for LocalizedStringResource();
  sub_10001C094();
  __chkstk_darwin(v18);
  sub_100018874();
  v21[0] = sub_100025A08(&qword_1000F46A0);
  sub_10005FBA4();
  static Locale.current.getter();
  sub_10005FA28();
  v19();
  sub_100022F38();
  sub_100018840(v0);
  v21[4] = 0;
  type metadata accessor for IntentDialog();
  sub_100018840((uint64_t)v10);
  sub_100018840((uint64_t)v8);
  sub_100022348();
  v20();
  sub_10001D418();
  sub_10005FFC4();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_10001885C();
}

void sub_100059300()
{
}

uint64_t DeleteWorkflowAction.title.unsafeMutableAddressor()
{
  return sub_10005A378(&qword_1000F4628, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)&static DeleteWorkflowAction.title);
}

uint64_t static DeleteWorkflowAction.title.getter()
{
  return sub_100059ED8();
}

uint64_t static DeleteWorkflowAction.title.setter(uint64_t a1)
{
  return sub_100059FAC(a1, &qword_1000F4628, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)&static DeleteWorkflowAction.title);
}

uint64_t (*static DeleteWorkflowAction.title.modify())()
{
  if (qword_1000F4628 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_100025EC8(v0, (uint64_t)&static DeleteWorkflowAction.title);
  return j_j__swift_endAccess;
}

void sub_10005944C()
{
}

uint64_t DeleteWorkflowAction.description.unsafeMutableAddressor()
{
  return sub_10005A378(&qword_1000F4630, (uint64_t (*)(void))&type metadata accessor for IntentDescription, (uint64_t)&static DeleteWorkflowAction.description);
}

uint64_t static DeleteWorkflowAction.description.getter()
{
  return sub_10005A40C();
}

uint64_t DeleteWorkflowAction.perform()()
{
  sub_10002348C();
  v0[3] = v1;
  v0[4] = v2;
  type metadata accessor for MainActor();
  v0[5] = sub_100024304();
  sub_1000074BC();
  sub_1000245BC();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_100059594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_10005FD20();
  uint64_t v15 = (id *)(v14 + 16);
  swift_release();
  IntentParameter.wrappedValue.getter();
  uint64_t v16 = *(void *)(v14 + 16);
  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    a9 = v14;
    uint64_t v18 = self;
    swift_bridgeObjectRetain();
    uint64_t v19 = 0;
    while (1)
    {
      id v20 = *(id *)(v16 + 8 * v19 + 32);
      id v21 = [v18 defaultDatabase];
      id *v15 = 0;
      unsigned int v22 = [v21 deleteReference:v20 error:v15];

      id v23 = *v15;
      if (!v22) {
        break;
      }
      ++v19;

      if (v17 == v19)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    uint64_t v24 = v23;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_bridgeObjectRelease_n();
    sub_10001018C();
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRelease();
    static IntentResult.result<>()();
    sub_10001018C();
  }
  sub_10005FD04();
  return v26(v25, v26, v27, v28, v29, v30, v31, v32, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_100059730()
{
  return AddShortcutToHomeScreenAction.shortcut.getter();
}

uint64_t sub_100059738@<X0>(uint64_t a1@<X8>)
{
  return sub_10004C9E8(DeleteWorkflowAction.title.unsafeMutableAddressor, (void (*)(void))&type metadata accessor for LocalizedStringResource, a1);
}

uint64_t sub_100059764()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10005F998;
  return DeleteWorkflowAction.perform()();
}

void sub_100059804(void *a1@<X8>)
{
  DeleteWorkflowAction.init()();
  *a1 = v2;
}

uint64_t sub_10005982C(uint64_t a1)
{
  unint64_t v2 = sub_10005E250();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

void SearchShortcutsAction.init()()
{
  sub_10002066C();
  uint64_t v1 = sub_100025A08(&qword_1000F4660);
  uint64_t v2 = sub_1000165CC(v1);
  __chkstk_darwin(v2);
  sub_1000167F4();
  uint64_t v49 = v3;
  sub_10005FCB8();
  sub_100022284();
  __chkstk_darwin(v4);
  sub_1000167F4();
  uint64_t v5 = sub_100025A08(&qword_1000F4658);
  uint64_t v6 = sub_1000165CC(v5);
  __chkstk_darwin(v6);
  sub_1000206CC();
  uint64_t v48 = v7;
  sub_1000215FC();
  uint64_t v9 = __chkstk_darwin(v8);
  sub_10005FFFC(v9, v10, v11, v12, v13, v14, v15, v16, v44);
  uint64_t v17 = sub_100025A08(&qword_1000F4690);
  uint64_t v18 = sub_1000165CC(v17);
  __chkstk_darwin(v18);
  sub_1000167F4();
  uint64_t v47 = v19;
  uint64_t v20 = sub_100025A08(&qword_1000F4668);
  uint64_t v21 = sub_1000165CC(v20);
  __chkstk_darwin(v21);
  sub_10005FC88();
  sub_100022284();
  uint64_t v23 = v22;
  __chkstk_darwin(v24);
  uint64_t v25 = sub_1000240CC();
  uint64_t v26 = sub_1000165CC(v25);
  __chkstk_darwin(v26);
  uint64_t v27 = sub_10001B414();
  uint64_t v28 = sub_1000165CC(v27);
  __chkstk_darwin(v28);
  uint64_t v46 = sub_100021650();
  sub_100012D7C();
  __chkstk_darwin(v29);
  sub_1000165D8();
  sub_100025A08(&qword_1000F46B0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v30 = *(void (**)(void))(v23 + 104);
  sub_10005FFF0();
  sub_10001B44C();
  v30();
  sub_100026160();
  sub_10005FB2C();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  sub_10005FFF0();
  sub_10001B44C();
  v30();
  sub_100026160();
  sub_10005FD88(v0, 0);
  uint64_t v31 = type metadata accessor for String.IntentInputOptions();
  uint64_t v45 = sub_100019838(v47, v32, v33, v31);
  sub_10002A674(v50, v34, v35, v45);
  sub_100022348();
  v36();
  IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
  sub_100025A08(&qword_1000F4670);
  sub_10005FB3C();
  static Locale.current.getter();
  sub_10005FFF0();
  sub_10001881C();
  v30();
  sub_100026160();
  sub_10005FB2C();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  sub_10005FFF0();
  sub_10001881C();
  v30();
  sub_100026160();
  sub_100021594(v0, 0, 1, v46);
  uint64_t v37 = type metadata accessor for NavigationDestinationEntity();
  sub_10002A674(v49, v38, v39, v37);
  sub_10001681C();
  sub_100021594(v40, v41, v42, v45);
  sub_10005FDA0(v48);
  sub_100022348();
  v43();
  sub_10002DE34();
  IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)();
  sub_10001885C();
}

void sub_100059CF4()
{
}

void sub_100059D18()
{
  sub_10002066C();
  uint64_t v1 = v0;
  type metadata accessor for LocalizedStringResource.BundleDescription();
  sub_100022284();
  __chkstk_darwin(v2);
  uint64_t v3 = sub_10005F9E4();
  uint64_t v4 = sub_1000165CC(v3);
  __chkstk_darwin(v4);
  uint64_t v5 = sub_10005FC60();
  uint64_t v6 = sub_1000165CC(v5);
  __chkstk_darwin(v6);
  sub_100018A50();
  uint64_t v7 = type metadata accessor for LocalizedStringResource();
  sub_10005F890(v7, v1);
  uint64_t v8 = sub_10005FFC4();
  sub_10004AB78(v8, v9);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  sub_10005FA28();
  v10();
  sub_100022F38();
  sub_10001885C();
}

uint64_t SearchShortcutsAction.title.unsafeMutableAddressor()
{
  return sub_10005A378(&qword_1000F4638, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)&static SearchShortcutsAction.title);
}

uint64_t static SearchShortcutsAction.title.getter()
{
  return sub_100059ED8();
}

uint64_t sub_100059ED8()
{
  sub_10005FD70();
  if (!v3) {
    swift_once();
  }
  uint64_t v4 = v2(0);
  uint64_t v5 = sub_10004AB78(v4, v1);
  swift_beginAccess();
  sub_100012D7C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v0, v5, v4);
}

uint64_t static SearchShortcutsAction.title.setter(uint64_t a1)
{
  return sub_100059FAC(a1, &qword_1000F4638, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)&static SearchShortcutsAction.title);
}

uint64_t sub_100059FAC(uint64_t a1, void *a2, uint64_t (*a3)(void), uint64_t a4)
{
  if (*a2 != -1) {
    swift_once();
  }
  uint64_t v7 = a3(0);
  uint64_t v8 = sub_10004AB78(v7, a4);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 24))(v8, a1, v7);
  swift_endAccess();
  uint64_t v9 = sub_100029CD8();
  return v10(v9);
}

uint64_t (*static SearchShortcutsAction.title.modify())()
{
  if (qword_1000F4638 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_100025EC8(v0, (uint64_t)&static SearchShortcutsAction.title);
  return j__swift_endAccess;
}

void sub_10005A118()
{
}

void sub_10005A13C()
{
  sub_10002066C();
  v22[1] = v0;
  void v22[2] = v1;
  char v3 = v2;
  uint64_t v4 = sub_100025A08(&qword_1000F4668);
  uint64_t v5 = sub_1000165CC(v4);
  __chkstk_darwin(v5);
  sub_100020554();
  uint64_t v6 = type metadata accessor for LocalizedStringResource.BundleDescription();
  sub_100022284();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  uint64_t v13 = sub_1000165CC(v12);
  __chkstk_darwin(v13);
  uint64_t v14 = sub_10005FBD8();
  uint64_t v15 = sub_1000165CC(v14);
  __chkstk_darwin(v15);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  sub_10001C094();
  __chkstk_darwin(v17);
  sub_10002238C();
  uint64_t v18 = type metadata accessor for IntentDescription();
  sub_10005F890(v18, v3);
  sub_10004AB78(v18, (uint64_t)v3);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v6);
  sub_100022F38();
  sub_10001681C();
  sub_100021594(v19, v20, v21, v16);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  sub_10001885C();
}

uint64_t SearchShortcutsAction.description.unsafeMutableAddressor()
{
  return sub_10005A378(&qword_1000F4640, (uint64_t (*)(void))&type metadata accessor for IntentDescription, (uint64_t)&static SearchShortcutsAction.description);
}

uint64_t sub_10005A378(void *a1, uint64_t (*a2)(void), uint64_t a3)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = a2(0);

  return sub_10004AB78(v5, a3);
}

uint64_t static SearchShortcutsAction.description.getter()
{
  return sub_10005A40C();
}

uint64_t sub_10005A40C()
{
  sub_10005FD70();
  if (!v3) {
    swift_once();
  }
  uint64_t v4 = v2(0);
  sub_10004AB78(v4, v1);
  sub_100012D7C();
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v5 + 16);

  return v6(v0);
}

uint64_t SearchShortcutsAction.folder.getter()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t _s9Shortcuts26MoveShortcutToFolderActionV6folderAA27NavigationDestinationEntityVvs_0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NavigationDestinationEntity();
  uint64_t v3 = sub_1000165CC(v2);
  __chkstk_darwin(v3);
  sub_10005FAC0(v4, v6);
  IntentParameter.wrappedValue.setter();
  return sub_10004B150(a1);
}

void static SearchShortcutsAction.parameterSummary.getter()
{
  sub_1000074D4();
  uint64_t v0 = sub_100025A08(&qword_1000F5870);
  uint64_t v1 = sub_1000165CC(v0);
  __chkstk_darwin(v1);
  sub_100021FC4();
  sub_100025A08(&qword_1000F5878);
  sub_10001C094();
  __chkstk_darwin(v2);
  sub_10001899C();
  sub_10005C67C();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v3._countAndFlagsBits = 0x20686372616553;
  v3._object = (void *)0xE700000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  sub_100025A08(&qword_1000F5888);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v4._countAndFlagsBits = 0x726F6853206E6920;
  v4._object = (void *)0xED00007374756374;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  uint64_t v5 = sub_10005FF74();
  sub_100021F1C(v5, v6, v7, (uint64_t)sub_10005A688);
  sub_10002A68C();
}

uint64_t sub_10005A688()
{
  swift_getKeyPath();
  sub_10005C67C();
  uint64_t v0 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)();
  swift_release();
  sub_100025A08(&qword_1000F5200);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1000BAC10;
  *(void *)(v1 + 32) = v0;
  specialized Array._endMutation()();
  swift_retain();
  uint64_t v2 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  swift_release();
  return v2;
}

uint64_t SearchShortcutsAction.perform()()
{
  sub_100018A44();
  v0[5] = v1;
  v0[6] = v2;
  v0[4] = v3;
  uint64_t v4 = sub_100025A08(&qword_1000F50B8);
  sub_1000165CC(v4);
  v0[7] = sub_10002259C();
  uint64_t v5 = type metadata accessor for RootNavigationContext.TransitionType();
  v0[8] = v5;
  sub_100022084(v5);
  v0[9] = v6;
  v0[10] = sub_10002259C();
  uint64_t v7 = type metadata accessor for RootNavigationContext();
  v0[11] = v7;
  sub_100022084(v7);
  v0[12] = v8;
  v0[13] = sub_10002259C();
  v0[14] = type metadata accessor for MainActor();
  v0[15] = static MainActor.shared.getter();
  uint64_t v10 = sub_1000074BC();
  v0[16] = v10;
  v0[17] = v9;
  return _swift_task_switch(sub_10005A868, v10, v9);
}

uint64_t sub_10005A868()
{
  sub_10005FBCC();
  id v1 = sub_100048ECC();
  *(void *)(v0 + 144) = v1;
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = *(void *)(v0 + 104);
    uint64_t v4 = *(void *)(v0 + 56);
    long long v13 = *(_OWORD *)(v0 + 40);
    sub_100014FB8();
    v5();
    uint64_t v6 = type metadata accessor for RootPPTTestCase();
    sub_10002A674(v4, v7, v8, v6);
    sub_100060010();
    RootNavigationContext.init(dismissOccludingViewController:clearSearchState:animateTransition:createAutomation:transitionType:pptTest:)();
    *(void *)(v0 + 152) = static MainActor.shared.getter();
    uint64_t v9 = swift_task_alloc();
    *(void *)(v0 + 160) = v9;
    *(void *)(v9 + 16) = v2;
    *(_OWORD *)(v9 + 24) = v13;
    *(void *)(v9 + 40) = v3;
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_10005AA48;
    return withCheckedContinuation<A>(isolation:function:_:)();
  }
  else
  {
    swift_release();
    static IntentResult.result<>()();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1000235A4();
    return v11();
  }
}

uint64_t sub_10005AA48()
{
  sub_10002348C();
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  sub_1000188C4();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v4 = *(void *)(v1 + 136);
  uint64_t v5 = *(void *)(v1 + 128);
  return _swift_task_switch(sub_10005AB9C, v5, v4);
}

uint64_t sub_10005AB9C()
{
  sub_10005FFAC();
  swift_release();
  id v1 = sub_100048ECC();
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = sub_100031D4C();
    if (v3)
    {
      uint64_t v4 = v3;
      id v5 = sub_10001A768();
      if (v5)
      {
        uint64_t v6 = v5;
        id v7 = [v2 presentedViewController];
        if (v7)
        {
          uint64_t v8 = v7;
          self;
          uint64_t v9 = (void *)swift_dynamicCastObjCClass();
          if (v9) {
            [v9 dismissViewControllerAnimated:0 completion:0];
          }
        }
        [v4 searchBarTextDidBeginEditing:v6];
        IntentParameter.wrappedValue.getter();
        sub_10005C6D8(v0[2], v0[3], v6);
        [v4 searchBarSearchButtonClicked:v6];
      }
    }
  }
  uint64_t v10 = (void *)v0[18];
  static IntentResult.result<>()();

  uint64_t v11 = sub_10002A5A4();
  v12(v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1000235A4();
  return v13();
}

uint64_t sub_10005AD14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v23 = a5;
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  uint64_t v5 = sub_100025A08(&qword_1000F5E20);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v8 = sub_100025A08(&qword_1000F5128);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for RootNavigationDestination();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for NavigationDestinationEntity();
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  IntentParameter.wrappedValue.getter();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v17, v11);
  uint64_t v18 = type metadata accessor for RootNavigationContext();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v10, v23, v18);
  sub_100021594((uint64_t)v10, 0, 1, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v5);
  unint64_t v19 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v20 + v19, (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  type metadata accessor for MainViewController(0);
  sub_10002B50C(&qword_1000F50F8, (void (*)(uint64_t))type metadata accessor for MainViewController);
  RootView.navigate(to:with:completion:)();
  swift_release();
  sub_100012400((uint64_t)v10, &qword_1000F5128);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_10005B060()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_10005B094()
{
  return SearchShortcutsAction.searchPhrase.getter();
}

uint64_t sub_10005B09C()
{
  return SearchShortcutsAction.searchPhrase.setter();
}

void sub_10005B0A4(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

uint64_t sub_10005B0F0@<X0>(uint64_t a1@<X8>)
{
  return sub_10004C9E8(SearchShortcutsAction.title.unsafeMutableAddressor, (void (*)(void))&type metadata accessor for LocalizedStringResource, a1);
}

uint64_t sub_10005B120()
{
  id v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *id v1 = v0;
  v1[1] = sub_10004DED0;
  return SearchShortcutsAction.perform()();
}

void sub_10005B1CC(void *a1@<X8>)
{
  SearchShortcutsAction.init()();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_10005B1F4(uint64_t a1)
{
  unint64_t v2 = sub_10005C67C();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

id sub_10005B230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6)
{
  uint64_t v7 = v6;
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (a3)
  {
    v13.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v13.super.Class isa = 0;
  }
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v16 = 0;
  if (sub_1000225EC(a4, 1, v14) != 1)
  {
    URL._bridgeToObjectiveC()(v15);
    uint64_t v16 = v17;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a4, v14);
  }
  id v18 = [v7 initWithBundleIdentifier:v12 options:v13.super.isa URL:v16 userActivity:a5 retainsSiri:a6 & 1];

  return v18;
}

uint64_t sub_10005B364(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for String.LocalizationValue.Placeholder();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for String.LocalizationValue.Placeholder.int(_:)) {
    return 1684827173;
  }
  if (v6 == enum case for String.LocalizationValue.Placeholder.uint(_:)) {
    return 1970039845;
  }
  if (v6 == enum case for String.LocalizationValue.Placeholder.float(_:)) {
    return 26149;
  }
  if (v6 == enum case for String.LocalizationValue.Placeholder.double(_:)) {
    return 6712357;
  }
  if (v6 != enum case for String.LocalizationValue.Placeholder.object(_:)) {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return 16421;
}

uint64_t sub_10005B504(uint64_t result)
{
  if (result + 1 > *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  return result;
}

void sub_10005B530(uint64_t a1)
{
  unint64_t v2 = *(void *)(*v1 + 24);
  if (a1 + 1 > (uint64_t)(v2 >> 1))
  {
    sub_100088BE4(v2 > 1, a1 + 1, 1, *v1);
    *id v1 = v3;
  }
}

void sub_10005B570()
{
  sub_100063C34();
  *uint64_t v0 = v1;
}

void sub_10005B590(char a1, uint64_t a2, char a3)
{
  sub_100063C7C(a1, a2, a3, *v3);
  *uint64_t v3 = v4;
}

void sub_10005B5B0()
{
  sub_100063CB0();
  *uint64_t v0 = v1;
}

uint64_t sub_10005B5D0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_10005B5E4(a1, a2);
  }
  return a1;
}

uint64_t sub_10005B5E4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_10005B63C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

void sub_10005B694(char a1, uint64_t a2, char a3)
{
  sub_100063CF8(a1, a2, a3, *v3);
  *uint64_t v3 = v4;
}

void sub_10005B6B4()
{
  sub_100063DBC();
  *uint64_t v0 = v1;
}

void sub_10005B6D4()
{
  sub_100063E04();
  *uint64_t v0 = v1;
}

void *sub_10005B6F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  v34[0] = a1;
  uint64_t v31 = *(void *)(a1 + 16);
  if (v31)
  {
    uint64_t v3 = a2 + 56;
    uint64_t v32 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    while (1)
    {
      uint64_t v5 = *(void **)(v32 + 8 * v4++);
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      Hasher.init(_seed:)();
      id v33 = v5;
      String.hash(into:)();
      Swift::Int v6 = Hasher._finalize()();
      swift_bridgeObjectRelease();
      uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v8 = v6 & ~v7;
      if ((*(void *)(v3 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
      {
        uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v11 = v10;
        if (v9 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v11 == v12)
        {
LABEL_21:
          swift_bridgeObjectRelease_n();
LABEL_22:

          v34[1] = v4;
          char v23 = *(unsigned char *)(v2 + 32);
          unint64_t v24 = (unint64_t)((1 << v23) + 63) >> 6;
          size_t v25 = 8 * v24;
          if ((v23 & 0x3Fu) < 0xE
            || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
          {
            __chkstk_darwin(isStackAllocationSafe);
            memcpy((char *)&v31 - ((v25 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v25);
            sub_10005BA8C((unint64_t *)((char *)&v31 - ((v25 + 15) & 0x3FFFFFFFFFFFFFF0)), v24, v2, v8, v34);
            uint64_t v27 = v26;
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v28 = (void *)swift_slowAlloc();
            memcpy(v28, (const void *)(v2 + 56), v25);
            sub_10005BA8C((unint64_t *)v28, v24, v2, v8, v34);
            uint64_t v27 = v29;
            swift_release();
            swift_bridgeObjectRelease();
            swift_slowDealloc();
          }
          return (void *)v27;
        }
        char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v14) {
          goto LABEL_22;
        }
        uint64_t v15 = ~v7;
        while (1)
        {
          unint64_t v8 = (v8 + 1) & v15;
          if (((*(void *)(v3 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
            break;
          }
          uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v18 = v17;
          if (v16 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v18 == v19) {
            goto LABEL_21;
          }
          char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v21) {
            goto LABEL_22;
          }
        }
      }

      if (v4 == v31)
      {
        swift_bridgeObjectRelease();
        return (void *)v2;
      }
    }
  }
  return (void *)v2;
}

void sub_10005BA8C(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v6 = *(void *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v35 = v6 - 1;
  uint64_t v8 = *a5;
  unint64_t v7 = a5[1];
  unint64_t v9 = *(void *)(*a5 + 16);
  if (v7 == v9)
  {
LABEL_2:
    swift_retain();
    sub_10005BD58(a1, a2, v35, a3);
    return;
  }
  uint64_t v38 = a3 + 56;
  uint64_t v36 = a5;
  while ((v7 & 0x8000000000000000) == 0)
  {
    if (v7 >= v9) {
      goto LABEL_32;
    }
    uint64_t v10 = *(void **)(v8 + 8 * v7 + 32);
    a5[1] = v7 + 1;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    id v37 = v10;
    String.hash(into:)();
    Swift::Int v11 = Hasher._finalize()();
    swift_bridgeObjectRelease();
    uint64_t v12 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v13 = v11 & ~v12;
    unint64_t v14 = v13 >> 6;
    uint64_t v15 = 1 << v13;
    if (((1 << v13) & *(void *)(v38 + 8 * (v13 >> 6))) == 0) {
      goto LABEL_20;
    }
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;
    if (v16 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v18 == v19)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v21 & 1) == 0)
      {
        uint64_t v22 = ~v12;
        for (unint64_t i = v13 + 1; ; unint64_t i = v24 + 1)
        {
          unint64_t v24 = i & v22;
          if (((*(void *)(v38 + (((i & v22) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v22)) & 1) == 0) {
            break;
          }
          uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v27 = v26;
          if (v25 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v27 == v28)
          {
            swift_bridgeObjectRelease_n();
LABEL_29:

            unint64_t v14 = v24 >> 6;
            uint64_t v15 = 1 << v24;
            goto LABEL_23;
          }
          char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v30) {
            goto LABEL_29;
          }
        }
LABEL_20:

        a5 = v36;
        goto LABEL_26;
      }
    }

LABEL_23:
    unint64_t v31 = a1[v14];
    a1[v14] = v31 & ~v15;
    a5 = v36;
    if ((v15 & v31) != 0)
    {
      uint64_t v32 = v35 - 1;
      if (__OFSUB__(v35, 1)) {
        goto LABEL_33;
      }
      --v35;
      if (!v32) {
        return;
      }
    }
LABEL_26:
    uint64_t v8 = *a5;
    unint64_t v7 = a5[1];
    unint64_t v9 = *(void *)(*a5 + 16);
    if (v7 == v9) {
      goto LABEL_2;
    }
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
}

uint64_t sub_10005BD58(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    unint64_t v9 = &_swiftEmptySetSingleton;
LABEL_35:
    swift_release();
    return (uint64_t)v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_100025A08(&qword_1000F5E30);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  unint64_t v9 = (unsigned char *)result;
  char v30 = a1;
  uint64_t v31 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= v31) {
      goto LABEL_35;
    }
    unint64_t v16 = v30[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= v31) {
        goto LABEL_35;
      }
      unint64_t v16 = v30[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= v31) {
          goto LABEL_35;
        }
        unint64_t v16 = v30[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    uint64_t v18 = *(void **)(*(void *)(v4 + 48) + 8 * v14);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    id v19 = v18;
    String.hash(into:)();
    Swift::Int v20 = Hasher._finalize()();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v21 = -1 << v9[32];
    unint64_t v22 = v20 & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6))) == 0)
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      while (++v23 != v26 || (v25 & 1) == 0)
      {
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v23);
        if (v28 != -1)
        {
          unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(void *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    *(void *)(*((void *)v9 + 6) + 8 * v24) = v19;
    ++*((void *)v9 + 2);
    if (__OFSUB__(v5--, 1)) {
      goto LABEL_38;
    }
    if (!v5) {
      goto LABEL_35;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= v31) {
    goto LABEL_35;
  }
  unint64_t v16 = v30[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_35;
    }
    unint64_t v16 = v30[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10005BFEC(void *a1)
{
  id v2 = [a1 PNGRepresentation];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

unint64_t sub_10005C05C()
{
  unint64_t result = qword_1000F5690;
  if (!qword_1000F5690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5690);
  }
  return result;
}

uint64_t sub_10005C0A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AddShortcutToHomeScreenAction.$shortcut.getter();
  *a1 = result;
  return result;
}

unint64_t sub_10005C0D4()
{
  unint64_t result = qword_1000F56B0;
  if (!qword_1000F56B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F56B0);
  }
  return result;
}

void sub_10005C120(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  [a3 setName:v4];
}

unint64_t sub_10005C178()
{
  unint64_t result = qword_1000F56C8;
  if (!qword_1000F56C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F56C8);
  }
  return result;
}

unint64_t sub_10005C1C4()
{
  unint64_t result = qword_1000F56E8;
  if (!qword_1000F56E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F56E8);
  }
  return result;
}

unint64_t sub_10005C210()
{
  unint64_t result = qword_1000F5700;
  if (!qword_1000F5700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5700);
  }
  return result;
}

unint64_t sub_10005C264()
{
  unint64_t result = qword_1000F5720;
  if (!qword_1000F5720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5720);
  }
  return result;
}

unint64_t sub_10005C2B0()
{
  unint64_t result = qword_1000F5738;
  if (!qword_1000F5738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5738);
  }
  return result;
}

uint64_t sub_10005C300()
{
  sub_10006003C();
  sub_100025A08(v2);
  sub_10001C094();
  (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v0, v1);
  return v0;
}

unint64_t sub_10005C358()
{
  unint64_t result = qword_1000F5750;
  if (!qword_1000F5750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5750);
  }
  return result;
}

unint64_t sub_10005C3A4()
{
  unint64_t result = qword_1000F5768;
  if (!qword_1000F5768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5768);
  }
  return result;
}

unint64_t sub_10005C3F8()
{
  unint64_t result = qword_1000F5798;
  if (!qword_1000F5798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5798);
  }
  return result;
}

unint64_t sub_10005C444()
{
  unint64_t result = qword_1000F57C0;
  if (!qword_1000F57C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F57C0);
  }
  return result;
}

unint64_t sub_10005C490()
{
  unint64_t result = qword_1000F57D8;
  if (!qword_1000F57D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F57D8);
  }
  return result;
}

unint64_t sub_10005C4E4()
{
  unint64_t result = qword_1000F57F8;
  if (!qword_1000F57F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F57F8);
  }
  return result;
}

unint64_t sub_10005C530()
{
  unint64_t result = qword_1000F5810;
  if (!qword_1000F5810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5810);
  }
  return result;
}

unint64_t sub_10005C580()
{
  unint64_t result = qword_1000F5820;
  if (!qword_1000F5820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5820);
  }
  return result;
}

unint64_t sub_10005C5CC()
{
  unint64_t result = qword_1000F5848;
  if (!qword_1000F5848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5848);
  }
  return result;
}

uint64_t sub_10005C618(void *a1)
{
  id v1 = [a1 name];
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

unint64_t sub_10005C67C()
{
  unint64_t result = qword_1000F5880;
  if (!qword_1000F5880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5880);
  }
  return result;
}

uint64_t sub_10005C6CC(uint64_t a1)
{
  return sub_10005AD14(a1, v1[2], v1[3], v1[4], v1[5]);
}

void sub_10005C6D8(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 setText:v4];
}

unint64_t sub_10005C740()
{
  unint64_t result = qword_1000F5898;
  if (!qword_1000F5898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5898);
  }
  return result;
}

unint64_t sub_10005C790()
{
  unint64_t result = qword_1000F58A8;
  if (!qword_1000F58A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F58A8);
  }
  return result;
}

unint64_t sub_10005C7E0()
{
  unint64_t result = qword_1000F58B0[0];
  if (!qword_1000F58B0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000F58B0);
  }
  return result;
}

uint64_t sub_10005C82C()
{
  return sub_10002B50C(&qword_1000F4678, (void (*)(uint64_t))type metadata accessor for NavigationDestinationEntity);
}

unint64_t sub_10005C878()
{
  unint64_t result = qword_1000F58C8;
  if (!qword_1000F58C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F58C8);
  }
  return result;
}

uint64_t sub_10005C8C4()
{
  return sub_10002B50C((unint64_t *)&qword_1000F56E0, (void (*)(uint64_t))type metadata accessor for NavigationDestinationEntity);
}

unint64_t sub_10005C910()
{
  unint64_t result = qword_1000F58D0;
  if (!qword_1000F58D0)
  {
    sub_10001E8D0(qword_1000F58D8);
    sub_10002B50C((unint64_t *)&qword_1000F56E0, (void (*)(uint64_t))type metadata accessor for NavigationDestinationEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F58D0);
  }
  return result;
}

unint64_t sub_10005C9BC()
{
  unint64_t result = qword_1000F58F8;
  if (!qword_1000F58F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F58F8);
  }
  return result;
}

unint64_t sub_10005CA0C()
{
  unint64_t result = qword_1000F5900[0];
  if (!qword_1000F5900[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000F5900);
  }
  return result;
}

unint64_t sub_10005CA5C()
{
  unint64_t result = qword_1000F5918[0];
  if (!qword_1000F5918[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000F5918);
  }
  return result;
}

uint64_t sub_10005CAA8()
{
  return sub_10002B50C(&qword_1000F5930, (void (*)(uint64_t))type metadata accessor for NavigationDestinationEntity);
}

uint64_t sub_10005CAF0()
{
  return sub_10002B50C(&qword_1000F5938, (void (*)(uint64_t))type metadata accessor for NavigationDestinationEntity);
}

uint64_t sub_10005CB38()
{
  return sub_10002B50C(&qword_1000F5940, (void (*)(uint64_t))type metadata accessor for NavigationDestinationEntity);
}

uint64_t sub_10005CB80()
{
  return sub_10002B50C(&qword_1000F5948, (void (*)(uint64_t))type metadata accessor for NavigationDestinationEntity);
}

uint64_t sub_10005CBC8()
{
  return sub_10002B50C(&qword_1000F5950, (void (*)(uint64_t))type metadata accessor for NavigationDestinationEntity);
}

uint64_t sub_10005CC10()
{
  return sub_10002B50C(&qword_1000F5958, (void (*)(uint64_t))type metadata accessor for NavigationDestinationEntity);
}

uint64_t sub_10005CC58()
{
  return sub_10001E88C(&qword_1000F5960, &qword_1000F5968);
}

uint64_t sub_10005CC94()
{
  return sub_10002B50C(&qword_1000F5970, (void (*)(uint64_t))type metadata accessor for NavigationDestinationEntity);
}

unint64_t sub_10005CCE0()
{
  unint64_t result = qword_1000F5978;
  if (!qword_1000F5978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5978);
  }
  return result;
}

unint64_t sub_10005CD34()
{
  unint64_t result = qword_1000F5980;
  if (!qword_1000F5980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5980);
  }
  return result;
}

unint64_t sub_10005CD84()
{
  unint64_t result = qword_1000F5988;
  if (!qword_1000F5988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5988);
  }
  return result;
}

uint64_t sub_10005CDD0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005CDEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10005E384(a1, a2, a3, (void (*)(void))sub_10005C1C4);
}

unint64_t sub_10005CE1C()
{
  unint64_t result = qword_1000F5998;
  if (!qword_1000F5998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5998);
  }
  return result;
}

unint64_t sub_10005CE6C()
{
  unint64_t result = qword_1000F59A8;
  if (!qword_1000F59A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F59A8);
  }
  return result;
}

unint64_t sub_10005CEBC()
{
  unint64_t result = qword_1000F59B0[0];
  if (!qword_1000F59B0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000F59B0);
  }
  return result;
}

unint64_t sub_10005CF10()
{
  unint64_t result = qword_1000F59C8;
  if (!qword_1000F59C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F59C8);
  }
  return result;
}

unint64_t sub_10005CF60()
{
  unint64_t result = qword_1000F59D0;
  if (!qword_1000F59D0)
  {
    sub_10001E8D0(qword_1000F59D8);
    sub_10002C798();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F59D0);
  }
  return result;
}

uint64_t sub_10005CFD4()
{
  return sub_10001E88C(&qword_1000F5A20, &qword_1000F5A28);
}

unint64_t sub_10005D014()
{
  unint64_t result = qword_1000F5A38;
  if (!qword_1000F5A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5A38);
  }
  return result;
}

unint64_t sub_10005D068()
{
  unint64_t result = qword_1000F5A40;
  if (!qword_1000F5A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5A40);
  }
  return result;
}

unint64_t sub_10005D0B8()
{
  unint64_t result = qword_1000F5A48;
  if (!qword_1000F5A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5A48);
  }
  return result;
}

uint64_t sub_10005D104()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005D120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10005E384(a1, a2, a3, (void (*)(void))sub_10005C0D4);
}

unint64_t sub_10005D150()
{
  unint64_t result = qword_1000F5A58;
  if (!qword_1000F5A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5A58);
  }
  return result;
}

unint64_t sub_10005D1A4()
{
  unint64_t result = qword_1000F5A60;
  if (!qword_1000F5A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5A60);
  }
  return result;
}

unint64_t sub_10005D1F4()
{
  unint64_t result = qword_1000F5A68;
  if (!qword_1000F5A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5A68);
  }
  return result;
}

uint64_t sub_10005D240()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10005D274()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10005D294()
{
  unint64_t result = qword_1000F5A78;
  if (!qword_1000F5A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5A78);
  }
  return result;
}

unint64_t sub_10005D2E8()
{
  unint64_t result = qword_1000F5A80;
  if (!qword_1000F5A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5A80);
  }
  return result;
}

unint64_t sub_10005D338()
{
  unint64_t result = qword_1000F5A88;
  if (!qword_1000F5A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5A88);
  }
  return result;
}

uint64_t sub_10005D384()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10005D3B8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10005D3D8()
{
  unint64_t result = qword_1000F5A98;
  if (!qword_1000F5A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5A98);
  }
  return result;
}

unint64_t sub_10005D42C()
{
  unint64_t result = qword_1000F5AA0;
  if (!qword_1000F5AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5AA0);
  }
  return result;
}

unint64_t sub_10005D47C()
{
  unint64_t result = qword_1000F5AA8;
  if (!qword_1000F5AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5AA8);
  }
  return result;
}

uint64_t sub_10005D4C8()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10005D4FC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10005D51C()
{
  unint64_t result = qword_1000F5AB8;
  if (!qword_1000F5AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5AB8);
  }
  return result;
}

unint64_t sub_10005D56C()
{
  unint64_t result = qword_1000F5AC0;
  if (!qword_1000F5AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5AC0);
  }
  return result;
}

unint64_t sub_10005D5BC()
{
  unint64_t result = qword_1000F5AC8;
  if (!qword_1000F5AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5AC8);
  }
  return result;
}

uint64_t sub_10005D608()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005D624()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10005D644()
{
  unint64_t result = qword_1000F5AD8;
  if (!qword_1000F5AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5AD8);
  }
  return result;
}

unint64_t sub_10005D694()
{
  unint64_t result = qword_1000F5AE0;
  if (!qword_1000F5AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5AE0);
  }
  return result;
}

uint64_t sub_10005D6E0()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10005D714()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10005D734()
{
  unint64_t result = qword_1000F5AF0;
  if (!qword_1000F5AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5AF0);
  }
  return result;
}

unint64_t sub_10005D784()
{
  unint64_t result = qword_1000F5AF8;
  if (!qword_1000F5AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5AF8);
  }
  return result;
}

uint64_t sub_10005D7D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005D7EC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10005D80C()
{
  unint64_t result = qword_1000F5B08;
  if (!qword_1000F5B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5B08);
  }
  return result;
}

uint64_t sub_10005D858()
{
  return sub_10001E88C(&qword_1000F5B10, &qword_1000F5B18);
}

unint64_t sub_10005D898()
{
  unint64_t result = qword_1000F5B20;
  if (!qword_1000F5B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5B20);
  }
  return result;
}

unint64_t sub_10005D8E8()
{
  unint64_t result = qword_1000F5B28;
  if (!qword_1000F5B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5B28);
  }
  return result;
}

unint64_t sub_10005D938()
{
  unint64_t result = qword_1000F5B30;
  if (!qword_1000F5B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5B30);
  }
  return result;
}

void *sub_10005D984()
{
  return &protocol witness table for String;
}

unint64_t sub_10005D994()
{
  unint64_t result = qword_1000F5B38;
  if (!qword_1000F5B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5B38);
  }
  return result;
}

unint64_t sub_10005D9E4()
{
  unint64_t result = qword_1000F5B40;
  if (!qword_1000F5B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5B40);
  }
  return result;
}

unint64_t sub_10005DA34()
{
  unint64_t result = qword_1000F5B48;
  if (!qword_1000F5B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5B48);
  }
  return result;
}

unint64_t sub_10005DA84()
{
  unint64_t result = qword_1000F5B50;
  if (!qword_1000F5B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5B50);
  }
  return result;
}

uint64_t sub_10005DAD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10005E384(a1, a2, a3, (void (*)(void))sub_10002E4E4);
}

unint64_t sub_10005DB00()
{
  unint64_t result = qword_1000F5B58;
  if (!qword_1000F5B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5B58);
  }
  return result;
}

unint64_t sub_10005DB50()
{
  unint64_t result = qword_1000F5B60;
  if (!qword_1000F5B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5B60);
  }
  return result;
}

unint64_t sub_10005DBA4()
{
  unint64_t result = qword_1000F5B68;
  if (!qword_1000F5B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5B68);
  }
  return result;
}

unint64_t sub_10005DBF4()
{
  unint64_t result = qword_1000F5B70;
  if (!qword_1000F5B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5B70);
  }
  return result;
}

uint64_t sub_10005DC40()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10005DC74()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10005DC94()
{
  unint64_t result = qword_1000F5B80;
  if (!qword_1000F5B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5B80);
  }
  return result;
}

uint64_t sub_10005DCE0()
{
  return sub_10001E88C(&qword_1000F5B88, &qword_1000F5B90);
}

unint64_t sub_10005DD20()
{
  unint64_t result = qword_1000F5B98;
  if (!qword_1000F5B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5B98);
  }
  return result;
}

unint64_t sub_10005DD70()
{
  unint64_t result = qword_1000F5BA0;
  if (!qword_1000F5BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5BA0);
  }
  return result;
}

unint64_t sub_10005DDC0()
{
  unint64_t result = qword_1000F5BA8;
  if (!qword_1000F5BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5BA8);
  }
  return result;
}

unint64_t sub_10005DE10()
{
  unint64_t result = qword_1000F5BB0;
  if (!qword_1000F5BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5BB0);
  }
  return result;
}

unint64_t sub_10005DE60()
{
  unint64_t result = qword_1000F5BB8;
  if (!qword_1000F5BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5BB8);
  }
  return result;
}

unint64_t sub_10005DEB0()
{
  unint64_t result = qword_1000F5BC0;
  if (!qword_1000F5BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5BC0);
  }
  return result;
}

unint64_t sub_10005DF00()
{
  unint64_t result = qword_1000F5BC8;
  if (!qword_1000F5BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5BC8);
  }
  return result;
}

uint64_t sub_10005DF4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10005E384(a1, a2, a3, (void (*)(void))sub_10002E7D4);
}

unint64_t sub_10005DF7C()
{
  unint64_t result = qword_1000F5BD0;
  if (!qword_1000F5BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5BD0);
  }
  return result;
}

unint64_t sub_10005DFCC()
{
  unint64_t result = qword_1000F5BD8;
  if (!qword_1000F5BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5BD8);
  }
  return result;
}

unint64_t sub_10005E020()
{
  unint64_t result = qword_1000F5BE0;
  if (!qword_1000F5BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5BE0);
  }
  return result;
}

unint64_t sub_10005E070()
{
  unint64_t result = qword_1000F5BE8;
  if (!qword_1000F5BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5BE8);
  }
  return result;
}

uint64_t sub_10005E0BC()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10005E0F0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10005E110()
{
  unint64_t result = qword_1000F5BF8;
  if (!qword_1000F5BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5BF8);
  }
  return result;
}

unint64_t sub_10005E160()
{
  unint64_t result = qword_1000F5C00;
  if (!qword_1000F5C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5C00);
  }
  return result;
}

uint64_t sub_10005E1AC()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10005E1E0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10005E200()
{
  unint64_t result = qword_1000F5C10;
  if (!qword_1000F5C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5C10);
  }
  return result;
}

unint64_t sub_10005E250()
{
  unint64_t result = qword_1000F5C18;
  if (!qword_1000F5C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5C18);
  }
  return result;
}

unint64_t sub_10005E2A0()
{
  unint64_t result = qword_1000F5C20;
  if (!qword_1000F5C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5C20);
  }
  return result;
}

unint64_t sub_10005E2F0()
{
  unint64_t result = qword_1000F5C28;
  if (!qword_1000F5C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5C28);
  }
  return result;
}

uint64_t sub_10005E33C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005E358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10005E384(a1, a2, a3, (void (*)(void))sub_10005E250);
}

uint64_t sub_10005E384(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10005E3D0()
{
  unint64_t result = qword_1000F5C38;
  if (!qword_1000F5C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5C38);
  }
  return result;
}

unint64_t sub_10005E424()
{
  unint64_t result = qword_1000F5C40;
  if (!qword_1000F5C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5C40);
  }
  return result;
}

unint64_t sub_10005E474()
{
  unint64_t result = qword_1000F5C48;
  if (!qword_1000F5C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5C48);
  }
  return result;
}

uint64_t sub_10005E4C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005E4DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for NavigationDestinationEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RootNavigationDestination();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t destroy for NavigationDestinationEntity(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RootNavigationDestination();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for NavigationDestinationEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RootNavigationDestination();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for NavigationDestinationEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RootNavigationDestination();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for NavigationDestinationEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RootNavigationDestination();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for NavigationDestinationEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RootNavigationDestination();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for NavigationDestinationEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005E76C);
}

uint64_t sub_10005E76C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RootNavigationDestination();

  return sub_1000225EC(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for NavigationDestinationEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005E7C8);
}

uint64_t sub_10005E7C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RootNavigationDestination();

  return sub_100021594(a1, a2, a2, v4);
}

uint64_t sub_10005E814()
{
  uint64_t result = type metadata accessor for RootNavigationDestination();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for NavigationDestinationEntity.DestinationQuery()
{
}

void type metadata accessor for NavigationDestinationEntity.FolderQuery()
{
}

void type metadata accessor for OpenNavigationDestinationAction()
{
}

void type metadata accessor for WorkflowEntity.WorkflowQuery()
{
}

void type metadata accessor for OpenWorkflowAction()
{
}

void type metadata accessor for CreateWorkflowAction()
{
}

void type metadata accessor for CreateFolderAction()
{
}

void type metadata accessor for MoveShortcutToFolderAction()
{
}

void type metadata accessor for MoveShortcutToFolderAction.MoveError()
{
}

uint64_t destroy for AddShortcutToHomeScreenAction()
{
  swift_release();
  swift_release();

  return swift_release();
}

void *_s9Shortcuts29AddShortcutToHomeScreenActionVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for AddShortcutToHomeScreenAction(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for AddShortcutToHomeScreenAction(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for AddShortcutToHomeScreenAction(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AddShortcutToHomeScreenAction(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AddShortcutToHomeScreenAction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for AddShortcutToHomeScreenAction()
{
}

uint64_t getEnumTagSinglePayload for AddShortcutToHomeScreenAction.AddToHomeScreenError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v5 = v6 - 4;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for AddShortcutToHomeScreenAction.AddToHomeScreenError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10005EC7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for AddShortcutToHomeScreenAction.AddToHomeScreenError()
{
}

void type metadata accessor for RenameShortcutAction()
{
}

void type metadata accessor for ChangeShortcutIconAction()
{
}

uint64_t getEnumTagSinglePayload for ShortcutAttribute(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 5) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v5 = v6 - 6;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ShortcutAttribute(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10005EE1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

unsigned char *sub_10005EE44(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

void type metadata accessor for ShortcutAttribute()
{
}

void type metadata accessor for GetShortcutAttributesAction()
{
}

uint64_t destroy for SetShortcutAttributesAction()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for SetShortcutAttributesAction(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for SetShortcutAttributesAction(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for SetShortcutAttributesAction(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SetShortcutAttributesAction(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SetShortcutAttributesAction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SetShortcutAttributesAction()
{
}

unsigned char *_s9Shortcuts26MoveShortcutToFolderActionV9MoveErrorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10005F148);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for SetShortcutAttributesAction.SetShortcutAttributesOperation()
{
}

void type metadata accessor for CreateShortcutiCloudLinkAction()
{
}

void type metadata accessor for DeleteWorkflowAction()
{
}

uint64_t destroy for SearchShortcutsAction()
{
  swift_release();

  return swift_release();
}

void *_s9Shortcuts26MoveShortcutToFolderActionVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *_s9Shortcuts26MoveShortcutToFolderActionVwca_0()
{
  sub_10006003C();
  *unint64_t v1 = *v2;
  swift_retain();
  swift_release();
  v1[1] = *(void *)(v0 + 8);
  swift_retain();
  swift_release();
  return v1;
}

_OWORD *_s9Shortcuts26MoveShortcutToFolderActionVwta_0()
{
  sub_10006003C();
  swift_release();
  *unint64_t v1 = *v0;
  swift_release();
  return v1;
}

uint64_t _s10DataSourceC13TopHitWrapperVwet(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s10DataSourceC13TopHitWrapperVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SearchShortcutsAction()
{
}

uint64_t sub_10005F328()
{
  return sub_10001E88C(&qword_1000F5D10, &qword_1000F5D18);
}

uint64_t sub_10005F364()
{
  return sub_10001E88C(&qword_1000F5D20, &qword_1000F5D28);
}

uint64_t sub_10005F3A0()
{
  return sub_10001E88C(&qword_1000F5D30, &qword_1000F5D38);
}

uint64_t sub_10005F3DC()
{
  return sub_10001E88C(&qword_1000F5D40, &qword_1000F5D38);
}

uint64_t sub_10005F418()
{
  return sub_10001E88C(&qword_1000F5D48, &qword_1000F5D50);
}

uint64_t sub_10005F454()
{
  return sub_10001E88C(&qword_1000F5D58, &qword_1000F5D60);
}

uint64_t sub_10005F490()
{
  return sub_10001E88C(&qword_1000F5D68, &qword_1000F5D60);
}

uint64_t sub_10005F4CC()
{
  return sub_10001E88C(&qword_1000F5D70, &qword_1000F5D78);
}

uint64_t sub_10005F508()
{
  return sub_10001E88C(&qword_1000F5D80, &qword_1000F5D18);
}

uint64_t sub_10005F544()
{
  return sub_10001E88C(&qword_1000F5D88, &qword_1000F5D90);
}

uint64_t sub_10005F580()
{
  return sub_10001E88C(&qword_1000F5D98, &qword_1000F5DA0);
}

uint64_t sub_10005F5BC()
{
  return sub_10001E88C(&qword_1000F5DA8, &qword_1000F5DB0);
}

uint64_t sub_10005F5F8()
{
  return sub_10001E88C(&qword_1000F5DB8, &qword_1000F5DC0);
}

uint64_t sub_10005F634()
{
  return sub_10001E88C(&qword_1000F5DC8, &qword_1000F5DD0);
}

uint64_t sub_10005F670()
{
  return sub_10001E88C(&qword_1000F5DD8, &qword_1000F5DD0);
}

uint64_t sub_10005F6AC()
{
  return sub_10001E88C(&qword_1000F5DE0, &qword_1000F5DE8);
}

uint64_t sub_10005F6E8()
{
  return sub_10001E88C(&qword_1000F5DF0, &qword_1000F5DF8);
}

uint64_t sub_10005F724()
{
  return sub_10001E88C(&qword_1000F5E00, &qword_1000F5E08);
}

uint64_t sub_10005F760()
{
  return sub_10001E88C(&qword_1000F5E10, &qword_1000F5E18);
}

uint64_t sub_10005F79C()
{
  sub_100025A08(&qword_1000F5E20);
  sub_10001C094();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_10005F828()
{
  sub_100025A08(&qword_1000F5E20);

  return sub_10005B060();
}

uint64_t *sub_10005F890(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_10005F8F8()
{
  sub_10006003C();
  sub_100025A08(&qword_1000F5080);
  uint64_t v2 = sub_10001B3FC();
  *uint64_t v3 = v0;

  return _swift_continuation_throwingResumeWithError(v1, v2);
}

uint64_t sub_10005F9AC()
{
  return v0;
}

uint64_t sub_10005F9C8()
{
  return 0;
}

uint64_t sub_10005F9E4()
{
  return type metadata accessor for Locale();
}

void sub_10005FA20()
{
}

uint64_t sub_10005FA34@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12 = a1
      + ((*(unsigned __int8 *)(a9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(a9 + 80))
      + *(void *)(a9 + 72) * v10;
  return sub_10004B0EC(v12, v9);
}

uint64_t sub_10005FA64()
{
  return v0;
}

uint64_t sub_10005FA8C(uint64_t a1, uint64_t a2)
{
  return DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(a1, a2, 0, 0);
}

uint64_t sub_10005FAA4(uint64_t a1)
{
  return sub_100021594(a1, 1, 1, v1);
}

uint64_t sub_10005FAC0@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return sub_10004B0EC(v2, (uint64_t)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0));
}

uint64_t sub_10005FB3C()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t sub_10005FB5C()
{
  return v0 + 8;
}

uint64_t sub_10005FB6C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 168);
  return sub_100021594(a1, 0, 1, v3);
}

uint64_t sub_10005FB88(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 152);
  return sub_100021594(a1, 0, 1, v3);
}

uint64_t sub_10005FBA4()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t sub_10005FBD8()
{
  return type metadata accessor for String.LocalizationValue();
}

void sub_10005FC00(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 232) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_10005FC1C(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 96) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_10005FC38()
{
  return type metadata accessor for String.LocalizationValue.StringInterpolation();
}

uint64_t sub_10005FC60()
{
  return type metadata accessor for String.LocalizationValue();
}

uint64_t sub_10005FC88()
{
  return type metadata accessor for LocalizedStringResource.BundleDescription();
}

void sub_10005FCB0()
{
}

uint64_t sub_10005FCB8()
{
  return type metadata accessor for InputConnectionBehavior();
}

void sub_10005FCD0()
{
  sub_10005B5B0();
}

uint64_t sub_10005FD58()
{
  return v0;
}

uint64_t sub_10005FD88(uint64_t a1, uint64_t a2)
{
  return sub_100021594(a1, a2, 1, v2);
}

uint64_t sub_10005FDA0(uint64_t a1)
{
  return sub_100021594(a1, 1, 1, v1);
}

uint64_t sub_10005FDCC()
{
  return *(void *)(v0 + 32);
}

uint64_t sub_10005FDFC()
{
  return 0x6F6974617265704FLL;
}

uint64_t sub_10005FE24()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t sub_10005FE48()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t sub_10005FE6C()
{
  return v0 + 8;
}

uint64_t sub_10005FE7C()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_10005FEA0()
{
  return IntentParameter.wrappedValue.setter();
}

void sub_10005FEB8()
{
  type metadata accessor for WFWorkflowTypeName(0);
}

void sub_10005FED0()
{
  sub_10005B5B0();
}

void sub_10005FEF4()
{
  sub_10005B5B0();
}

uint64_t sub_10005FF34()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

id sub_10005FF54(void *a1)
{
  return sub_100048C7C(v1, a1);
}

uint64_t sub_10005FF74()
{
  return ParameterSummaryString.init(stringInterpolation:)();
}

uint64_t sub_10005FF94()
{
  return swift_release_n();
}

uint64_t sub_10005FFB8()
{
  return v0;
}

uint64_t sub_10005FFC4()
{
  return v0;
}

uint64_t sub_10005FFE4()
{
  return v0;
}

uint64_t sub_10005FFF0()
{
  return v0;
}

void sub_10005FFFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 144) = (char *)&a9 - v9;
}

uint64_t sub_100060010()
{
  return 1;
}

uint64_t sub_100060030(uint64_t result)
{
  *(void *)(v1 - 248) = result;
  return result;
}

unint64_t sub_100060048()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_10006005C()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

void sub_10006007C(uint64_t a1@<X8>)
{
  *(void *)(v2 - 200) = a1 + v1;
}

void sub_100060088()
{
  uint64_t v1 = 544175136;
  unint64_t v2 = 0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v1);
}

uint64_t sub_1000600A8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x656C67676F74;
  }
  else {
    uint64_t v3 = 1852994932;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x656C67676F74;
  }
  else {
    uint64_t v5 = 1852994932;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_100060140(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000010;
  unint64_t v3 = 0x80000001000BF370;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000010;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x61576E4F776F6873;
      unint64_t v3 = 0xEB00000000686374;
      break;
    case 2:
      unint64_t v5 = 0x6E654D6E496E6970;
      uint64_t v6 = 1918976629;
      goto LABEL_6;
    case 3:
      unint64_t v5 = 0x6E65657263536E6FLL;
      unint64_t v3 = 0xEF746E65746E6F43;
      break;
    case 4:
      unint64_t v5 = 0x7463416B63697571;
      uint64_t v6 = 1936617321;
LABEL_6:
      unint64_t v3 = v6 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      break;
    case 5:
      unint64_t v5 = 0x656857776F6C6C61;
      unint64_t v3 = 0xEF64656B636F4C6ELL;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x80000001000BF370;
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0x61576E4F776F6873;
      unint64_t v7 = 0xEB00000000686374;
      break;
    case 2:
      unint64_t v2 = 0x6E654D6E496E6970;
      uint64_t v8 = 1918976629;
      goto LABEL_13;
    case 3:
      unint64_t v2 = 0x6E65657263536E6FLL;
      unint64_t v7 = 0xEF746E65746E6F43;
      break;
    case 4:
      unint64_t v2 = 0x7463416B63697571;
      uint64_t v8 = 1936617321;
LABEL_13:
      unint64_t v7 = v8 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      break;
    case 5:
      unint64_t v2 = 0x656857776F6C6C61;
      unint64_t v7 = 0xEF64656B636F4C6ELL;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v10 = 1;
  }
  else {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

void sub_100060380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    Swift::Int v8 = v6 & ~v7;
    sub_1000189B4();
    if (v9)
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      if ((*v11 != a1 || v11[1] != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        uint64_t v13 = ~v7;
        uint64_t v14 = (v8 + 1) & v13;
        sub_1000189B4();
        if (v15)
        {
          do
          {
            unint64_t v16 = (void *)(v10 + 16 * v14);
            if (*v16 == a1 && v16[1] == a2) {
              break;
            }
            if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
              break;
            }
            uint64_t v14 = (v14 + 1) & v13;
            sub_1000189B4();
          }
          while ((v18 & 1) != 0);
        }
      }
    }
  }
}

void sub_100060494(uint64_t a1, uint64_t a2, SEL *a3)
{
  sub_1000225B4();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v5 = Strong;
    [Strong *a3];
  }
}

void sub_1000604E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v5 = Strong;
    [Strong deleteSelected:a3];
  }
}

void sub_100060548()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    NSString v2 = String._bridgeToObjectiveC()();
    [v1 removeSelected:v2];
  }
}

unint64_t sub_1000605D0(unint64_t a1)
{
  unint64_t v1 = a1;
  if ((a1 & 0x8000000000000000) != 0 || (a1 & 0x4000000000000000) != 0) {
    goto LABEL_39;
  }
  uint64_t v2 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  while (1)
  {
    unint64_t v17 = v2;
    if (v2 < 0 || (v2 & 0x4000000000000000) != 0)
    {
      swift_retain();
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      swift_release();
      if (v3 < -1) {
        __break(1u);
      }
      uint64_t v4 = v3 / 2;
    }
    else
    {
      uint64_t v3 = *(void *)(v2 + 16);
      swift_bridgeObjectRelease();
      uint64_t v4 = (unint64_t)v3 >> 1;
    }
    if ((unint64_t)(v3 + 1) < 3) {
      return v2;
    }
    unint64_t v5 = 0;
    while (1)
    {
      unint64_t v6 = v5 + 1;
      unint64_t v1 = v3 - (v5 + 1);
      if (__OFSUB__(v3, v5 + 1)) {
        break;
      }
      if (v5 != v1)
      {
        uint64_t v7 = v17;
        if ((v17 & 0xC000000000000001) != 0)
        {
          uint64_t v10 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((v5 & 0x8000000000000000) != 0) {
            goto LABEL_33;
          }
          unint64_t v8 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v5 >= v8) {
            goto LABEL_34;
          }
          id v9 = *(id *)(v17 + 8 * v5 + 32);
          if ((v1 & 0x8000000000000000) != 0) {
            goto LABEL_35;
          }
          if (v1 >= v8) {
            goto LABEL_37;
          }
          uint64_t v10 = (uint64_t)v9;
          id v11 = *(id *)(v17 + 32 + 8 * v1);
        }
        id v12 = v11;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || (v17 & 0x8000000000000000) != 0
          || (v17 & 0x4000000000000000) != 0)
        {
          uint64_t v7 = sub_100062CD0(v17);
          unint64_t v17 = v7;
        }
        uint64_t v13 = (v7 & 0xFFFFFFFFFFFFFF8) + 8 * v5;

        *(void *)(v13 + 32) = v12;
        specialized Array._endMutation()();
        uint64_t v14 = v17;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || (v17 & 0x8000000000000000) != 0
          || (v17 & 0x4000000000000000) != 0)
        {
          uint64_t v14 = sub_100062CD0(v17);
          unint64_t v17 = v14;
        }
        if ((v1 & 0x8000000000000000) != 0) {
          goto LABEL_36;
        }
        if (v1 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_38;
        }
        uint64_t v15 = (v14 & 0xFFFFFFFFFFFFFF8) + 8 * v1;

        *(void *)(v15 + 32) = v10;
        specialized Array._endMutation()();
      }
      unint64_t v5 = v6;
      if (v4 == v6) {
        return v17;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    uint64_t v2 = (uint64_t)sub_100062FCC(v1);
  }
}

UIMenu sub_1000607E0(uint64_t a1, UIMenuElementSize a2)
{
  UIMenuElementSize preferredElementSize = a2;
  if ((unint64_t)a2 >> 62)
  {
    sub_100029C7C(0, &qword_1000F5EA0);
    swift_bridgeObjectRetain();
    uint64_t v5 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
    UIMenuElementSize preferredElementSize = v5;
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_100029C7C(0, &qword_1000F5EA0);
  }
  sub_100029C7C(0, (unint64_t *)&unk_1000F7170);
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v7.value.super.Class isa = 0;
  v7.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v3, (Swift::String_optional)0, v7, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v6);
}

id sub_1000608D4(uint64_t a1)
{
  unint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  sub_100029C7C(0, &qword_1000F5EA0);
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  Swift::String v3 = (void *)v1(v2);
  swift_release();
  swift_bridgeObjectRelease();

  return v3;
}

id sub_100060964()
{
  return sub_100022320(v0, "setEditing:animated:", 1);
}

void sub_1000609C0(char a1, char a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = sub_100025A08((uint64_t *)&unk_1000F70F0);
  uint64_t v8 = sub_1000165CC(v7);
  __chkstk_darwin(v8);
  sub_1000204E8();
  if (a1)
  {
    if (swift_unknownObjectWeakLoadStrong())
    {
      swift_getObjectType();
      dispatch thunk of LibraryDelegate.runningWorkflow.getter();
      swift_unknownObjectRelease();
      uint64_t v9 = type metadata accessor for RunningWorkflow();
      if (sub_1000225EC(v3, 1, v9) != 1)
      {
        sub_1000285E8(v3, (uint64_t *)&unk_1000F70F0);
        return;
      }
    }
    else
    {
      uint64_t v10 = type metadata accessor for RunningWorkflow();
      sub_100021594(v3, 1, 1, v10);
    }
    sub_1000285E8(v3, (uint64_t *)&unk_1000F70F0);
  }
  unsigned int v11 = [v2 isEditing];
  id v12 = sub_100026038();
  [v12 setEditing:a1 & 1];

  v16.receiver = v4;
  v16.super_class = (Class)type metadata accessor for LibraryViewController();
  [super setEditing:a1 & 1 animated:a2 & 1];
  if (v11 != (a1 & 1))
  {
    sub_10000ADBC();
    sub_100060BE4((a1 & 1) == 0);
    id v13 = sub_100026038();
    [v13 reloadData];

    sub_100021E68();
    type metadata accessor for LibraryDataSource();
    uint64_t v14 = (void (*)(void))method lookup function for LibraryDataSource();
    v14(a1 & 1);
    sub_1000AA084();
    swift_release();
    if ((a1 & 1) == 0)
    {
      id v15 = sub_100026038();
      [v15 cancelInteractiveMovement];

      [v4 deselectAllCells];
    }
    sub_100060CC4();
  }
}

void sub_100060BE4(char a1)
{
  uint64_t v2 = v1;
  id v4 = [v1 tabBarController];
  if (v4)
  {
    uint64_t v5 = v4;
    Swift::OpaquePointer v6 = &selRef_showBarWithTransition_;
    if ((a1 & 1) == 0) {
      Swift::OpaquePointer v6 = &selRef_hideBarWithTransition_;
    }
    [v4 *v6];
  }
  id v7 = [v2 traitCollection];
  id v8 = [v7 horizontalSizeClass];

  sub_100016DB0();
  if (v9)
  {
    uint64_t v10 = v9;
    sub_1000066CC(a1 & 1, v8 != (id)1);
  }

  sub_100016680(a1 & 1, 0.0);
}

void sub_100060CC4()
{
  if (UIAccessibilityIsVoiceOverRunning())
  {
    NSString v0 = String._bridgeToObjectiveC()();
    NSString v1 = String._bridgeToObjectiveC()();
    id v2 = sub_1000248B0(v0);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    LODWORD(v2) = UIAccessibilityAnnouncementNotification;
    NSString argument = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    UIAccessibilityPostNotification((UIAccessibilityNotifications)v2, argument);
  }
}

id sub_100060E54()
{
  return [v0 setEditing:0 animated:1];
}

id sub_100060EB4(void *a1)
{
  unint64_t v2 = (unint64_t)sub_10000823C();
  if (v2 >> 62) {
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  NSString v4 = String._bridgeToObjectiveC()();
  if (v3)
  {
    NSString v5 = String._bridgeToObjectiveC()();
    id v6 = sub_1000248B0(v4);

    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;

    uint64_t v17 = type metadata accessor for LibraryViewController();
    objc_super v16 = a1;
    uint64_t v10 = "deselectAllCells";
  }
  else
  {
    NSString v11 = String._bridgeToObjectiveC()();
    id v12 = sub_1000248B0(v4);

    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v13;

    uint64_t v17 = type metadata accessor for LibraryViewController();
    objc_super v16 = a1;
    uint64_t v10 = "selectAllCells";
  }
  objc_allocWithZone((Class)UIBarButtonItem);
  id v14 = a1;
  return sub_100029CE4(v7, v9, 0, &v16, (uint64_t)v10);
}

uint64_t sub_100061088()
{
  sub_10000823C();
  sub_1000610C4();

  return swift_bridgeObjectRelease();
}

void sub_1000610C4()
{
  sub_100021E68();
  id v0 = sub_1000A9DBC();
  swift_release();
  dispatch thunk of MoveToFolderCoordinator.move(_:presentingViewController:)();
}

id sub_10006117C()
{
  NSString v1 = *(void **)(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_database);
  sub_10000823C();
  sub_100029C7C(0, (unint64_t *)&unk_1000F70A0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  NSString v3 = String._bridgeToObjectiveC()();
  id v8 = 0;
  unsigned int v4 = [v1 removeReferences:isa fromCollectionWithIdentifier:v3 error:&v8];

  id v5 = v8;
  if (v4)
  {
    return v5;
  }
  else
  {
    id v7 = v8;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    return (id)swift_errorRelease();
  }
}

uint64_t sub_100061344(void *a1)
{
  uint64_t v3 = sub_100025A08(&qword_1000F5100);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TaskPriority();
  sub_100021594((uint64_t)v5, 1, 1, v6);
  type metadata accessor for MainActor();
  id v7 = v1;
  id v8 = a1;
  uint64_t v9 = static MainActor.shared.getter();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = v7;
  v10[5] = v8;
  sub_10002B210((uint64_t)v5, (uint64_t)&unk_1000F5EE8, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_10006144C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[9] = a4;
  v5[10] = a5;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  void v5[11] = v6;
  v5[12] = *(void *)(v6 - 8);
  v5[13] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for DispatchQoS();
  v5[14] = v7;
  v5[15] = *(void *)(v7 - 8);
  v5[16] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for DispatchTime();
  v5[17] = v8;
  v5[18] = *(void *)(v8 - 8);
  v5[19] = swift_task_alloc();
  v5[20] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[21] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[22] = v10;
  v5[23] = v9;
  return _swift_task_switch(sub_100061608, v10, v9);
}

uint64_t sub_100061608()
{
  NSString v1 = (void *)v0[10];
  unint64_t v2 = sub_10000823C();
  v0[24] = v2;
  uint64_t v3 = sub_1000206B4();
  v0[25] = v3;
  *(void *)(v3 + 16) = v1;
  id v4 = v1;
  id v5 = (void *)swift_task_alloc();
  v0[26] = v5;
  uint64_t v6 = type metadata accessor for LibraryViewController();
  uint64_t v7 = sub_100026570(&qword_1000F8470, (void (*)(uint64_t))type metadata accessor for LibraryViewController);
  *id v5 = v0;
  v5[1] = sub_100061744;
  return LibraryOperations.deleteWorkflows(_:alertCustomizationBlock:)(v2, sub_10006467C, v3, v6, v7);
}

uint64_t sub_100061744(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 216) = a1;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 184);
  uint64_t v4 = *(void *)(v2 + 176);
  return _swift_task_switch(sub_1000618AC, v4, v3);
}

uint64_t sub_1000618AC()
{
  char v1 = *((unsigned char *)v0 + 216);
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[19];
  uint64_t v5 = v0[17];
  uint64_t v6 = (void *)v0[9];
  swift_release();
  sub_100029C7C(0, &qword_1000F52B0);
  id v14 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  id v15 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v15(v4, v5);
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = v1;
  *(void *)(v7 + 24) = v6;
  v0[6] = sub_1000646BC;
  v0[7] = v7;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10000E51C;
  v0[5] = &unk_1000E65D0;
  uint64_t v8 = _Block_copy(v0 + 2);
  id v9 = v6;
  static DispatchQoS.unspecified.getter();
  v0[8] = _swiftEmptyArrayStorage;
  sub_100026570((unint64_t *)&unk_1000F7860, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100025A08(&qword_1000F52B8);
  sub_10001E88C((unint64_t *)&qword_1000F7870, &qword_1000F52B8);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v8);

  sub_100016618();
  v10();
  sub_100016618();
  v11();
  v15(v2, v5);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

void sub_100061B74(void *a1, uint64_t a2)
{
  id v3 = [self sourceWithBarButtonItem:a2];
  [a1 setPresentationSource:v3];
}

uint64_t sub_100061C58()
{
  uint64_t v22 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v25 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DispatchQoS();
  uint64_t v23 = *(void *)(v3 - 8);
  uint64_t v24 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchTime();
  uint64_t v21 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v20 - v11;
  sub_10000823C();
  type metadata accessor for LibraryViewController();
  sub_100026570(&qword_1000F8470, (void (*)(uint64_t))type metadata accessor for LibraryViewController);
  LibraryOperations.duplicateWorkflows(_:completion:)();
  swift_bridgeObjectRelease();
  sub_100029C7C(0, &qword_1000F52B0);
  uint64_t v13 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  id v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v10, v6);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v0;
  aBlock[4] = sub_10006446C;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000E51C;
  aBlock[3] = &unk_1000E6530;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = v0;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100026570((unint64_t *)&unk_1000F7860, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100025A08(&qword_1000F52B8);
  sub_10001E88C((unint64_t *)&qword_1000F7870, &qword_1000F52B8);
  uint64_t v18 = v22;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v2, v18);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v24);
  return ((uint64_t (*)(char *, uint64_t))v14)(v12, v21);
}

void sub_1000620D0()
{
  sub_10002066C();
  uint64_t v3 = v0;
  uint64_t v4 = sub_100025A08(&qword_1000F7690);
  uint64_t v5 = sub_1000165CC(v4);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = type metadata accessor for ShortcutsLibraryItem.ItemType();
  sub_100022284();
  uint64_t v95 = v8;
  __chkstk_darwin(v9);
  sub_1000167F4();
  id v110 = v10;
  sub_1000240F4();
  uint64_t v112 = type metadata accessor for IndexPath();
  sub_100022284();
  uint64_t v94 = v11;
  __chkstk_darwin(v12);
  sub_1000165D8();
  uint64_t v13 = sub_100025A08(&qword_1000F4B00);
  uint64_t v14 = sub_1000165CC(v13);
  __chkstk_darwin(v14);
  sub_1000167F4();
  uint64_t v99 = v15;
  sub_1000240F4();
  uint64_t v16 = type metadata accessor for ShortcutsLibraryItem();
  sub_100022284();
  uint64_t v102 = v17;
  __chkstk_darwin(v18);
  sub_1000167F4();
  uint64_t v109 = v19;
  sub_1000240F4();
  uint64_t v105 = type metadata accessor for ShortcutsLibrarySection();
  sub_100022284();
  uint64_t v21 = v20;
  __chkstk_darwin(v22);
  sub_1000206CC();
  uint64_t v101 = v23;
  __chkstk_darwin(v24);
  uint64_t v25 = sub_100025A08(&qword_1000F5EC8);
  sub_100022284();
  uint64_t v27 = v26;
  __chkstk_darwin(v28);
  sub_10002206C();
  uint64_t v100 = sub_100021E68();
  sub_100021E68();
  dispatch thunk of LibraryDataSource.sortedSections.getter();
  swift_release();
  uint64_t v29 = OrderedDictionary.values.getter();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v1, v25);
  uint64_t v30 = *(void *)(v29 + 16);
  uint64_t v96 = v21;
  uint64_t v97 = v3;
  uint64_t v111 = v16;
  if (v30)
  {
    uint64_t v32 = *(void *)(v21 + 16);
    uint64_t v31 = v21 + 16;
    uint64_t v107 = v32;
    uint64_t v108 = v31;
    sub_100025C80();
    uint64_t v34 = v29 + v33;
    uint64_t v103 = *(void *)(v31 + 56);
    uint64_t v104 = v31 - 8;
    BOOL v98 = (void (**)(uint64_t, uint64_t, uint64_t))v29;
    swift_bridgeObjectRetain();
    uint64_t v35 = _swiftEmptyArrayStorage;
    while (1)
    {
      sub_1000205E8();
      v36();
      uint64_t v37 = ShortcutsLibrarySection.items.getter();
      sub_100016618();
      v38();
      uint64_t v39 = *(void *)(v37 + 16);
      uint64_t v40 = v35[2];
      uint64_t v41 = v40 + v39;
      if (__OFADD__(v40, v39)) {
        break;
      }
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (!isUniquelyReferenced_nonNull_native || v41 > v35[3] >> 1)
      {
        if (v40 <= v41) {
          uint64_t v43 = v40 + v39;
        }
        else {
          uint64_t v43 = v40;
        }
        uint64_t v35 = (void *)sub_100088CC4(isUniquelyReferenced_nonNull_native, v43, 1, (uint64_t)v35);
      }
      uint64_t v16 = v111;
      if (*(void *)(v37 + 16))
      {
        uint64_t v44 = v35[2];
        if ((v35[3] >> 1) - v44 < v39) {
          goto LABEL_55;
        }
        unint64_t v45 = (*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80);
        uint64_t v46 = *(void *)(v102 + 72);
        uint64_t v47 = (char *)v35 + v45 + v46 * v44;
        if (v37 + v45 < (unint64_t)&v47[v46 * v39] && (unint64_t)v47 < v37 + v45 + v46 * v39) {
          goto LABEL_60;
        }
        swift_arrayInitWithCopy();
        if (v39)
        {
          uint64_t v49 = v35[2];
          BOOL v50 = __OFADD__(v49, v39);
          uint64_t v51 = v49 + v39;
          if (v50) {
            goto LABEL_57;
          }
          v35[2] = v51;
        }
      }
      else if (v39)
      {
        goto LABEL_54;
      }
      swift_bridgeObjectRelease();
      v34 += v103;
      if (!--v30)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v3 = v97;
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  swift_bridgeObjectRelease();
  uint64_t v35 = _swiftEmptyArrayStorage;
LABEL_24:
  uint64_t v52 = v35[2];
  if (v52)
  {
    uint64_t v113 = _swiftEmptyArrayStorage;
    sub_10002447C(0, v52, 0);
    uint64_t v107 = *(void *)(v102 + 16);
    uint64_t v108 = v102 + 16;
    sub_100025C80();
    uint64_t v54 = (char *)v35 + v53;
    uint64_t v56 = *(void *)(v55 + 56);
    uint64_t v103 = v55 - 8;
    uint64_t v104 = v56;
    do
    {
      sub_1000205E8();
      v57();
      uint64_t v58 = ShortcutsLibraryItem.id.getter();
      uint64_t v60 = v59;
      sub_100016618();
      v61();
      int v62 = v113;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10002447C(0, v62[2] + 1, 1);
        int v62 = v113;
      }
      unint64_t v64 = v62[2];
      unint64_t v63 = v62[3];
      if (v64 >= v63 >> 1)
      {
        sub_10002447C(v63 > 1, v64 + 1, 1);
        int v62 = v113;
      }
      v62[2] = v64 + 1;
      uint64_t v65 = &v62[2 * v64];
      v65[4] = v58;
      void v65[5] = v60;
      v54 += v104;
      --v52;
      uint64_t v16 = v111;
    }
    while (v52);
    swift_bridgeObjectRelease();
    uint64_t v3 = v97;
  }
  else
  {
    swift_bridgeObjectRelease();
    int v62 = _swiftEmptyArrayStorage;
  }
  uint64_t v66 = sub_10008140C((uint64_t)v62);
  type metadata accessor for LibraryDataSource();
  id v67 = (void (*)(uint64_t))method lookup function for LibraryDataSource();
  v67(v66);
  sub_1000A9EAC();
  swift_release();
  sub_100021E68();
  uint64_t v68 = (uint64_t (*)(void))method lookup function for LibraryDataSource();
  LOBYTE(v66) = v68();
  swift_release();
  uint64_t v69 = v105;
  uint64_t v70 = v96;
  if ((v66 & 1) == 0)
  {
LABEL_52:
    sub_10000ADBC();
    sub_10001885C();
    return;
  }
  id v71 = v3;
  sub_100021E68();
  uint64_t v72 = sub_1000AB0C8();
  swift_release();
  if (v72 < 0) {
    goto LABEL_59;
  }
  uint64_t v73 = v72;
  uint64_t v74 = v99;
  if (!v73)
  {
LABEL_51:

    goto LABEL_52;
  }
  uint64_t v75 = v69;
  uint64_t v76 = 0;
  BOOL v98 = (void (**)(uint64_t, uint64_t, uint64_t))(v70 + 32);
  uint64_t v108 = v95 + 88;
  uint64_t v109 = v102 + 8;
  LODWORD(v107) = enum case for ShortcutsLibraryItem.ItemType.workflow(_:);
  uint64_t v103 = v95 + 96;
  uint64_t v104 = v95 + 8;
  id v77 = (void (**)(uint64_t, uint64_t))(v94 + 8);
  uint64_t v102 = v70 + 8;
  uint64_t v100 = v73;
  while (v76 != v73)
  {
    sub_100021E68();
    sub_100025884();
    swift_release();
    if (sub_1000225EC(v74, 1, v75) == 1)
    {
      sub_1000285E8(v74, &qword_1000F4B00);
    }
    else
    {
      (*v98)(v101, v74, v75);
      sub_100021E68();
      uint64_t v78 = sub_1000AAFF4();
      swift_release();
      if (v78 < 0) {
        goto LABEL_58;
      }
      if (v78)
      {
        for (uint64_t i = 0; i != v78; ++i)
        {
          IndexPath.init(item:section:)();
          sub_100021E68();
          sub_100022110();
          swift_release();
          if (sub_1000225EC((uint64_t)v7, 1, v16) == 1)
          {
            sub_1000285E8((uint64_t)v7, &qword_1000F7690);
          }
          else
          {
            uint64_t v80 = v110;
            ShortcutsLibraryItem.itemType.getter();
            uint64_t v81 = v80;
            uint64_t v16 = v111;
            sub_100016618();
            v82();
            uint64_t v83 = sub_1000206E0();
            int v85 = v84(v83);
            if (v85 == v107)
            {
              uint64_t v86 = sub_1000206E0();
              v87(v86);

              id v88 = sub_100026038();
              Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
              [v88 selectItemAtIndexPath:isa animated:1 scrollPosition:0];
            }
            else
            {
              uint64_t v90 = sub_1000206E0();
              v91(v90);
            }
          }
          (*v77)(v2, v112);
        }
      }
      uint64_t v75 = v105;
      sub_100016618();
      v92();
      uint64_t v74 = v99;
    }
    ++v76;
    uint64_t v73 = v100;
    if (v76 == v100) {
      goto LABEL_51;
    }
  }
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  sub_1000205F4();
  sub_100023580();
  __break(1u);
}

void sub_1000629C0()
{
  sub_10002066C();
  uint64_t v2 = type metadata accessor for IndexPath();
  sub_100022284();
  __chkstk_darwin(v3);
  sub_10002206C();
  uint64_t v4 = sub_100025A08(&qword_1000F5120);
  uint64_t v5 = sub_1000165CC(v4);
  __chkstk_darwin(v5);
  sub_1000204E8();
  sub_100021E68();
  type metadata accessor for LibraryDataSource();
  uint64_t v6 = (uint64_t (*)(unsigned char *))method lookup function for LibraryDataSource();
  uint64_t v7 = (void (*)(unsigned char *, void))v6(v26);
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  *uint64_t v9 = &_swiftEmptySetSingleton;
  v7(v26, 0);
  sub_1000A9EAC();
  swift_release();
  sub_100021E68();
  uint64_t v10 = (uint64_t (*)(void))method lookup function for LibraryDataSource();
  char v11 = v10();
  swift_release();
  if (v11)
  {
    id v12 = sub_100026038();
    uint64_t v13 = sub_100008544(v12);
    if (v13)
    {
      uint64_t v14 = *(void *)(v13 + 16);
      if (v14)
      {
        sub_100025C80();
        uint64_t v17 = v15 + v16;
        uint64_t v24 = *(void *)(v18 + 56);
        uint64_t v25 = v19;
        uint64_t v20 = (void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
        uint64_t v21 = (void (**)(uint64_t, uint64_t))(v18 - 8);
        swift_bridgeObjectRetain();
        while (1)
        {
          v25(v1, v17, v2);
          sub_100021594(v1, 0, 1, v2);
          if (sub_1000225EC(v1, 1, v2) == 1) {
            break;
          }
          (*v20)(v0, v1, v2);
          id v22 = sub_100026038();
          Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
          [v22 deselectItemAtIndexPath:isa animated:1];

          (*v21)(v0, v2);
          v17 += v24;
          if (!--v14) {
            goto LABEL_9;
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_9:
        sub_100021594(v1, 1, 1, v2);
      }
      swift_bridgeObjectRelease_n();
    }
  }
  sub_10000ADBC();
  sub_10001885C();
}

id sub_100062CB4()
{
  return sub_100022320(v0, "setEditing:animated:", 0);
}

uint64_t sub_100062CD0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }

  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_100062D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = a1;
    if (!(*v4 >> 62))
    {
      uint64_t v8 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_4:
  if (v8 < v5)
  {
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v9 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v7 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (!(*v4 >> 62))
  {
    uint64_t v10 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_9;
  }
LABEL_32:
  swift_bridgeObjectRetain();
  uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_9:
  uint64_t v11 = v10 + v7;
  if (__OFADD__(v10, v7))
  {
    __break(1u);
    goto LABEL_34;
  }
  unint64_t v12 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v12;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v12 & 0x8000000000000000) != 0
    || (v12 & 0x4000000000000000) != 0
    || (uint64_t v14 = v12 & 0xFFFFFFFFFFFFFF8, v11 > *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v12 >> 62))
    {
LABEL_15:
      swift_bridgeObjectRetain();
      unint64_t v12 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *uint64_t v4 = v12;
      uint64_t v14 = v12 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_16;
    }
LABEL_34:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
LABEL_16:
  uint64_t v15 = (void *)(v14 + 32 + 8 * v6);
  sub_100029C7C(0, (unint64_t *)&unk_1000F7100);
  swift_arrayDestroy();
  if (!v7) {
    goto LABEL_24;
  }
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)(v14 + 16);
  }
  if (__OFSUB__(v16, v5))
  {
    __break(1u);
    goto LABEL_37;
  }
  uint64_t result = sub_100089028(v14 + 32 + 8 * v5, v16 - v5, v15 + 1);
  if (v12 >> 62)
  {
LABEL_37:
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  uint64_t v18 = *(void *)(v14 + 16);
LABEL_22:
  if (__OFADD__(v18, v7))
  {
    __break(1u);
    return result;
  }
  *(void *)(v14 + 16) = v18 + v7;
LABEL_24:
  void *v15 = v3;

  return specialized Array._endMutation()();
}

void *sub_100062FCC(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_8;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v2 <= 0)
    {
      uint64_t v3 = _swiftEmptyArrayStorage;
    }
    else
    {
      sub_100025A08(&qword_1000F5200);
      uint64_t v3 = (void *)swift_allocObject();
      size_t v4 = j__malloc_size(v3);
      v3[2] = v2;
      v3[3] = (2 * ((uint64_t)(v4 - 32) / 8)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_100063F04((uint64_t)(v3 + 4), v2, v1, (void (*)(uint64_t, void, uint64_t))sub_100089284, &qword_1000F5EC0, &qword_1000F5EB8, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_100064104);
    unint64_t v1 = v5;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
  }
  return v3;
}

void *sub_1000630F8(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = __CocoaSet.count.getter();
    if (v2) {
      goto LABEL_3;
    }
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
LABEL_3:
  if (v2 <= 0)
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  else
  {
    sub_100025A08(&qword_1000F5200);
    uint64_t v3 = (void *)sub_100024060();
    size_t v4 = j__malloc_size(v3);
    v3[2] = v2;
    v3[3] = (2 * ((uint64_t)(v4 - 32) / 8)) | 1;
  }
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_1000646F4(&v7, v3 + 4, v2, a1);
  uint64_t result = (void *)sub_100047C40();
  if (v5 == (void *)v2) {
    return v3;
  }
  __break(1u);
  return result;
}

void *sub_1000631E8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_100025A08(&qword_1000F5E28);
  uint64_t v3 = (void *)sub_100024060();
  j__malloc_size(v3);
  sub_100016838();
  v3[2] = v1;
  v3[3] = v4;
  unint64_t v5 = sub_1000649FC(&v7, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_100047C40();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

uint64_t sub_1000632C0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v31 = a1;
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v41 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v37 = (char *)&v29 - v11;
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v36 = (char *)&v29 - v14;
  uint64_t v39 = a3;
  uint64_t v30 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void (**)(void, void, void))(v13 + 16);
    uint64_t v15 = v13 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    uint64_t v32 = (uint64_t (**)(char *, uint64_t))(v15 - 8);
    uint64_t v33 = (void (*)(char *, uint64_t, uint64_t))v16;
    uint64_t v34 = a4;
    uint64_t v35 = v15;
    uint64_t v40 = (void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v44 = v17 * (v39 - 1);
    uint64_t v38 = v17;
    uint64_t v43 = v17 * v39;
    while (2)
    {
      uint64_t v18 = 0;
      uint64_t v42 = v31;
      do
      {
        uint64_t v19 = *a4;
        uint64_t v20 = v43 + v18 + *a4;
        uint64_t v21 = v36;
        id v22 = v33;
        v33(v36, v20, v7);
        uint64_t v23 = v37;
        v22(v37, v44 + v18 + v19, v7);
        sub_100026570(&qword_1000F5EA8, (void (*)(uint64_t))&type metadata accessor for IndexPath);
        LOBYTE(v22) = dispatch thunk of static Comparable.< infix(_:_:)();
        uint64_t v24 = *v32;
        (*v32)(v23, v7);
        uint64_t v25 = v21;
        a4 = v34;
        uint64_t result = v24(v25, v7);
        if ((v22 & 1) == 0) {
          break;
        }
        uint64_t v26 = *a4;
        if (!*a4)
        {
          __break(1u);
          return result;
        }
        uint64_t v27 = v26 + v44 + v18;
        uint64_t v28 = *v40;
        (*v40)(v41, v26 + v43 + v18, v7);
        swift_arrayInitWithTakeFrontToBack();
        uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v28)(v27, v41, v7);
        v18 -= v38;
        ++v42;
      }
      while (v39 != v42);
      v44 += v38;
      v43 += v38;
      if (++v39 != v30) {
        continue;
      }
      break;
    }
  }
  return result;
}

void sub_1000635D0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v72 = a3;
  uint64_t v73 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v73 - 8);
  uint64_t v9 = __chkstk_darwin(v73);
  uint64_t v70 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v69 = (char *)&v59 - v11;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  int64_t v14 = a2 - a1;
  BOOL v15 = a2 - a1 == 0x8000000000000000 && v13 == -1;
  if (v15) {
    goto LABEL_80;
  }
  int64_t v16 = v72 - a2;
  if (v72 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_81;
  }
  unint64_t v65 = a4;
  uint64_t v18 = v14 / v13;
  uint64_t v19 = v16 / v13;
  uint64_t v71 = v13;
  if (v14 / v13 >= v16 / v13)
  {
    unint64_t v24 = v65;
    sub_100088FF8(a2, v16 / v13, v65);
    unint64_t v23 = a2;
    uint64_t v21 = (char *)(v24 + v19 * v13);
    if (v19 * v13 < 1 || a1 >= a2)
    {
      unint64_t v20 = v24;
      goto LABEL_74;
    }
    uint64_t v60 = v4;
    unint64_t v61 = a1;
    uint64_t v64 = -v13;
    uint64_t v37 = *(void (**)(char *))(v8 + 16);
    uint64_t v68 = v8 + 16;
    int v62 = (void (**)(char *, uint64_t))(v8 + 8);
    unint64_t v63 = v37;
    unint64_t v38 = v72;
    do
    {
      unint64_t v39 = v38;
      uint64_t v41 = v63;
      uint64_t v40 = v64;
      unint64_t v72 = v38 + v64;
      uint64_t v42 = v69;
      id v67 = &v21[v64];
      unint64_t v43 = v23;
      uint64_t v44 = v73;
      unint64_t v45 = v21;
      v63(v69);
      uint64_t v46 = v70;
      unint64_t v66 = v43 + v40;
      v41(v70);
      sub_100026570(&qword_1000F5EA8, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      LOBYTE(v40) = dispatch thunk of static Comparable.< infix(_:_:)();
      uint64_t v47 = *v62;
      (*v62)(v46, v44);
      v47(v42, v44);
      if (v40)
      {
        uint64_t v48 = v45;
        unint64_t v38 = v72;
        if (v39 < v43 || v72 >= v43)
        {
          unint64_t v50 = v66;
          swift_arrayInitWithTakeFrontToBack();
          unint64_t v23 = v50;
          unint64_t v20 = v65;
          unint64_t v51 = v61;
        }
        else
        {
          unint64_t v51 = v61;
          if (v39 == v43)
          {
            unint64_t v23 = v66;
          }
          else
          {
            unint64_t v54 = v66;
            swift_arrayInitWithTakeBackToFront();
            unint64_t v23 = v54;
          }
          unint64_t v20 = v65;
        }
        uint64_t v21 = v48;
      }
      else
      {
        unint64_t v38 = v72;
        if (v39 < (unint64_t)v45 || v72 >= (unint64_t)v45)
        {
          uint64_t v53 = v67;
          swift_arrayInitWithTakeFrontToBack();
          uint64_t v21 = v53;
          unint64_t v20 = v65;
          unint64_t v51 = v61;
        }
        else
        {
          BOOL v15 = v39 == (void)v45;
          unint64_t v20 = v65;
          unint64_t v51 = v61;
          if (v15)
          {
            uint64_t v21 = v67;
          }
          else
          {
            uint64_t v55 = v67;
            swift_arrayInitWithTakeBackToFront();
            uint64_t v21 = v55;
          }
        }
        unint64_t v23 = v43;
      }
    }
    while ((unint64_t)v21 > v20 && v23 > v51);
  }
  else
  {
    unint64_t v20 = v65;
    sub_100088FF8(a1, v14 / v13, v65);
    uint64_t v21 = (char *)(v20 + v18 * v13);
    if (v18 * v13 < 1 || a2 >= v72)
    {
      unint64_t v23 = a1;
      goto LABEL_74;
    }
    uint64_t v60 = v4;
    id v67 = *(char **)(v8 + 16);
    uint64_t v68 = v8 + 16;
    uint64_t v26 = (void (**)(char *, uint64_t))(v8 + 8);
    unint64_t v66 = (unint64_t)v21;
    uint64_t v28 = v69;
    uint64_t v27 = v70;
    uint64_t v29 = v73;
    do
    {
      uint64_t v30 = v67;
      ((void (*)(char *, unint64_t, uint64_t))v67)(v28, a2, v29);
      ((void (*)(char *, unint64_t, uint64_t))v30)(v27, v20, v29);
      sub_100026570(&qword_1000F5EA8, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      LOBYTE(v30) = dispatch thunk of static Comparable.< infix(_:_:)();
      uint64_t v31 = *v26;
      (*v26)(v27, v29);
      v31(v28, v29);
      if (v30)
      {
        unint64_t v32 = a2 + v71;
        if (a1 < a2 || a1 >= v32)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      else
      {
        unint64_t v34 = v20 + v71;
        if (a1 < v20 || a1 >= v34)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != v20)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v32 = a2;
        unint64_t v20 = v34;
      }
      uint64_t v21 = (char *)v66;
      a1 += v71;
      BOOL v36 = v20 >= v66 || v32 >= v72;
      a2 = v32;
    }
    while (!v36);
    unint64_t v23 = a1;
  }
  uint64_t v13 = v71;
LABEL_74:
  uint64_t v57 = &v21[-v20];
  if (v13 != -1 || v57 != (char *)0x8000000000000000)
  {
    sub_100088FF8(v20, (uint64_t)v57 / v13, v23);
    return;
  }
LABEL_82:
  __break(1u);
}

void sub_100063B48(char a1, uint64_t a2, char a3, char *a4)
{
  if (a3)
  {
    sub_100016828();
    if (v7 != v8)
    {
      sub_100015110();
      if (v7)
      {
        __break(1u);
        return;
      }
      sub_1000245C8();
    }
  }
  else
  {
    uint64_t v6 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v6 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v6;
  }
  if (v10)
  {
    sub_100025A08(&qword_1000F5EB0);
    uint64_t v11 = (char *)sub_100024060();
    j__malloc_size(v11);
    sub_100016838();
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = v12;
  }
  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v11 + 32;
  int64_t v14 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || &v14[16 * v9] <= v13) {
      memmove(v13, v14, 16 * v9);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v9);
  }
  swift_bridgeObjectRelease();
}

void sub_100063C20(uint64_t a1)
{
}

void sub_100063C34()
{
}

void sub_100063C7C(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_100063CB0()
{
}

void sub_100063CF8(char a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    sub_100016828();
    if (v7 != v8)
    {
      sub_100015110();
      if (v7)
      {
        __break(1u);
        return;
      }
      sub_1000245C8();
    }
  }
  else
  {
    uint64_t v6 = a2;
  }
  uint64_t v9 = *(void *)(a4 + 16);
  if (v6 <= v9) {
    uint64_t v10 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v10 = v6;
  }
  if (v10)
  {
    sub_100025A08(&qword_1000F5F30);
    uint64_t v11 = (char *)sub_100024060();
    j__malloc_size(v11);
    sub_100016838();
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = v12;
  }
  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = (char *)(a4 + 32);
  if (a1)
  {
    sub_10008914C(v13, v9, v11 + 32);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100089448((uint64_t)v13, v9);
  }
  swift_release();
}

void sub_100063DBC()
{
}

void sub_100063E04()
{
}

void sub_100063E4C(uint64_t a1, uint64_t a2, void *a3)
{
}

uint64_t sub_100063E58()
{
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_100063E90()
{
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_10001B3C8();

  return _swift_deallocObject(v0, v1, v2);
}

UIMenu sub_100063EC0(uint64_t a1)
{
  return sub_1000607E0(a1, *(UIMenuElementSize *)(v1 + 16));
}

uint64_t sub_100063EC8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_100063F04(a1, a2, a3, (void (*)(uint64_t, void, uint64_t))sub_100089298, &qword_1000F5F20, &qword_1000F5F18, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_100064154);
}

uint64_t sub_100063F04(uint64_t result, uint64_t a2, unint64_t a3, void (*a4)(uint64_t, void, uint64_t), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v13 = result;
  unint64_t v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v15) {
      return a3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return a3;
    }
  }
  if (v13)
  {
    if (v14)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v16 <= a2)
      {
        if (v15 >= 1)
        {
          uint64_t v17 = sub_10001E88C(a5, a6);
          swift_bridgeObjectRetain();
          for (uint64_t i = 0; i != v15; ++i)
          {
            uint64_t v19 = sub_100025A08(a6);
            unint64_t v20 = (void (*)(unsigned char *, void))a7(v23, i, a3, v19, v17);
            id v22 = *v21;
            v20(v23, 0);
            *(void *)(v13 + 8 * i) = v22;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        a4((a3 & 0xFFFFFFFFFFFFFF8) + 32, *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10), v13);
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000640C8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_100063F04(a1, a2, a3, (void (*)(uint64_t, void, uint64_t))sub_10008941C, &qword_1000F5EF8, &qword_1000F5EF0, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_100064154);
}

uint64_t (*sub_100064104())()
{
  uint64_t v1 = sub_100027BAC();
  uint64_t v2 = sub_100021FF8((uint64_t)v1);
  *(void *)(v0 + 32) = sub_1000641E8(v2, v3);
  return sub_100064150;
}

uint64_t (*sub_100064154())()
{
  uint64_t v1 = sub_100027BAC();
  uint64_t v2 = sub_100021FF8((uint64_t)v1);
  *(void *)(v0 + 32) = sub_10006425C(v2, v3);
  return sub_100064150;
}

void sub_1000641A0(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_1000641E8(uint64_t a1, uint64_t a2))(id *a1)
{
  unint64_t v6 = sub_10002244C(a1, a2);
  sub_100089510(v6, v7, v8);
  if (v5) {
    id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v9 = *(id *)(v3 + 8 * v4 + 32);
  }
  *uint64_t v2 = v9;
  return _s10DataSourceC13TopHitWrapperVwxx;
}

void _s10DataSourceC13TopHitWrapperVwxx(id *a1)
{
}

void (*sub_10006425C(uint64_t a1, uint64_t a2))(id *)
{
  unint64_t v6 = sub_10002244C(a1, a2);
  sub_100089510(v6, v7, v8);
  if (v5) {
    id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v9 = *(id *)(v3 + 8 * v4 + 32);
  }
  *uint64_t v2 = v9;
  return j__s10DataSourceC13TopHitWrapperVwxx;
}

uint64_t sub_1000642C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100025A08(&qword_1000F5120);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100064330()
{
  swift_unknownObjectWeakDestroy();
  uint64_t v0 = sub_10001B3C8();

  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_100064360()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1000643A0()
{
}

uint64_t sub_1000643AC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000643EC(uint64_t a1)
{
  sub_1000604E4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1000643F4(uint64_t a1)
{
  sub_100060494(a1, v1, (SEL *)&selRef_duplicateSelected);
}

void sub_100064418(uint64_t a1)
{
  sub_100060494(a1, v1, (SEL *)&selRef_moveSelected);
}

uint64_t sub_10006443C()
{
  uint64_t v1 = sub_10001B3C8();

  return _swift_deallocObject(v1, v2, v3);
}

id sub_10006446C()
{
  return sub_100022320(*(id *)(v0 + 16), "setEditing:animated:", 0);
}

uint64_t sub_100064480()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000644C8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100064588;
  return sub_10006144C(a1, v4, v5, v7, v6);
}

uint64_t sub_100064588()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void sub_10006467C(void *a1)
{
  sub_100061B74(a1, *(void *)(v1 + 16));
}

uint64_t sub_100064684()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_1000646BC()
{
  if (*(unsigned char *)(v0 + 16) == 1) {
    return sub_100022320(*(id *)(v0 + 24), "setEditing:animated:", 0);
  }
  return result;
}

uint64_t sub_1000646E0(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_1000646F4(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v7 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    sub_100029C7C(0, &qword_1000F51D0);
    sub_100045A94();
    id result = (void *)Set.Iterator.init(_cocoa:)();
    uint64_t v4 = v26;
    uint64_t v8 = v27;
    uint64_t v9 = v28;
    int64_t v10 = v29;
    unint64_t v11 = v30;
  }
  else
  {
    int64_t v10 = 0;
    uint64_t v12 = -1 << *(unsigned char *)(a4 + 32);
    uint64_t v8 = a4 + 56;
    uint64_t v9 = ~v12;
    uint64_t v13 = -v12;
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v11 = v14 & *(void *)(a4 + 56);
  }
  if (!a2)
  {
    uint64_t v15 = 0;
LABEL_47:
    *uint64_t v7 = v4;
    v7[1] = v8;
    v7[2] = v9;
    v7[3] = v10;
    v7[4] = v11;
    return (void *)v15;
  }
  if (!a3)
  {
    uint64_t v15 = 0;
    goto LABEL_47;
  }
  if (a3 < 0) {
    goto LABEL_49;
  }
  uint64_t v15 = 0;
  int64_t v24 = (unint64_t)(v9 + 64) >> 6;
  uint64_t v23 = v9;
  while (1)
  {
    if (v4 < 0)
    {
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_46;
      }
      sub_100029C7C(0, &qword_1000F51D0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v18 = v25;
      id result = (void *)swift_unknownObjectRelease();
      if (!v25) {
        goto LABEL_46;
      }
      goto LABEL_28;
    }
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v10 << 6);
      goto LABEL_27;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v19 >= v24)
    {
      unint64_t v11 = 0;
      goto LABEL_46;
    }
    unint64_t v20 = *(void *)(v8 + 8 * v19);
    if (v20) {
      goto LABEL_26;
    }
    int64_t v21 = v10 + 2;
    if (v10 + 2 >= v24)
    {
      unint64_t v11 = 0;
      ++v10;
      goto LABEL_46;
    }
    unint64_t v20 = *(void *)(v8 + 8 * v21);
    if (!v20)
    {
      if (v10 + 3 >= v24) {
        goto LABEL_43;
      }
      unint64_t v20 = *(void *)(v8 + 8 * (v10 + 3));
      if (v20)
      {
        int64_t v19 = v10 + 3;
        goto LABEL_26;
      }
      int64_t v21 = v10 + 4;
      if (v10 + 4 >= v24)
      {
        unint64_t v11 = 0;
        v10 += 3;
        goto LABEL_46;
      }
      unint64_t v20 = *(void *)(v8 + 8 * v21);
      if (!v20)
      {
        int64_t v19 = v10 + 5;
        if (v10 + 5 >= v24)
        {
LABEL_43:
          unint64_t v11 = 0;
          int64_t v10 = v21;
          goto LABEL_46;
        }
        unint64_t v20 = *(void *)(v8 + 8 * v19);
        if (!v20)
        {
          int64_t v22 = v10 + 6;
          while (v22 < v24)
          {
            unint64_t v20 = *(void *)(v8 + 8 * v22++);
            if (v20)
            {
              int64_t v19 = v22 - 1;
              goto LABEL_26;
            }
          }
          unint64_t v11 = 0;
          int64_t v10 = v24 - 1;
          goto LABEL_46;
        }
        goto LABEL_26;
      }
    }
    int64_t v19 = v21;
LABEL_26:
    unint64_t v11 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v19 << 6);
    int64_t v10 = v19;
LABEL_27:
    id result = *(id *)(*(void *)(v4 + 48) + 8 * v17);
    uint64_t v18 = result;
    if (!result) {
      goto LABEL_46;
    }
LABEL_28:
    ++v15;
    *a2++ = v18;
    if (v15 == a3)
    {
      uint64_t v15 = a3;
LABEL_46:
      uint64_t v9 = v23;
      goto LABEL_47;
    }
  }
  __break(1u);
LABEL_49:
  __break(1u);
  return result;
}

void *sub_1000649FC(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    unint64_t v20 = *(void **)(*(void *)(a4 + 48) + 8 * v16);
    *unint64_t v11 = v20;
    if (v13 == v10)
    {
      id v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    id result = v20;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100064C18()
{
  return sub_100062D4C(0, 0, v0);
}

void sub_100064C38(char a1)
{
  uint64_t v4 = sub_100025A08(&qword_1000F7690);
  uint64_t v5 = sub_1000165CC(v4);
  __chkstk_darwin(v5);
  sub_1000167F4();
  uint64_t v34 = v6;
  uint64_t v7 = type metadata accessor for ShortcutsLibraryItem();
  sub_100022284();
  uint64_t v33 = v8;
  __chkstk_darwin(v9);
  sub_1000167F4();
  uint64_t v35 = v10;
  type metadata accessor for RunningWorkflow.WorkflowType();
  sub_100022284();
  uint64_t v37 = v12;
  uint64_t v38 = v11;
  __chkstk_darwin(v11);
  sub_1000167F4();
  BOOL v36 = v13;
  uint64_t v14 = sub_100025A08((uint64_t *)&unk_1000F70F0);
  uint64_t v15 = sub_1000165CC(v14);
  __chkstk_darwin(v15);
  uint64_t v16 = sub_10002619C();
  sub_100022284();
  __chkstk_darwin(v17);
  sub_1000167F4();
  if ([v1 isEditing]) {
    [v1 setEditing:0 animated:1];
  }
  sub_10001EEA8();
  id v18 = sub_100026038();
  id v19 = [v18 visibleCells];

  sub_100029C7C(0, &qword_1000F4AE0);
  unint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v21) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v21) {
      goto LABEL_13;
    }
  }
  if (v21 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v21; ++i)
  {
    if ((v20 & 0xC000000000000001) != 0) {
      id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v23 = *(id *)(v20 + 8 * i + 32);
    }
    int64_t v24 = v23;
    type metadata accessor for LibraryCell();
    uint64_t v25 = swift_dynamicCastClass();
    if (v25) {
      sub_10002282C(v25, a1 & 1, 0, 1);
    }
  }
LABEL_13:
  swift_bridgeObjectRelease();
  if (!swift_unknownObjectWeakLoadStrong())
  {
    sub_100021594(v2, 1, 1, v16);
    goto LABEL_19;
  }
  swift_getObjectType();
  dispatch thunk of LibraryDelegate.runningWorkflow.getter();
  swift_unknownObjectRelease();
  if (sub_1000225EC(v2, 1, v16) == 1)
  {
LABEL_19:
    int64_t v29 = (uint64_t *)&unk_1000F70F0;
    goto LABEL_20;
  }
  sub_100020698();
  v26();
  RunningWorkflow.workflowType.getter();
  if ((*(unsigned int (**)(void **, uint64_t))(v37 + 88))(v36, v38) == enum case for RunningWorkflow.WorkflowType.reference(_:))
  {
    (*(void (**)(void **, uint64_t))(v37 + 96))(v36, v38);
    uint64_t v27 = *v36;
    sub_100021E68();
    uint64_t v2 = v34;
    dispatch thunk of LibraryDataSource.libraryItem(for:)();
    swift_release();
    if (sub_1000225EC(v34, 1, v7) == 1)
    {
      sub_100022468();
      v28();

      int64_t v29 = &qword_1000F7690;
LABEL_20:
      sub_100023268(v2, v29);
      return;
    }
    sub_100020698();
    v31();
    ShortcutsLibraryItem.nameIconViewModel.getter();
    type metadata accessor for NameIconView.Model();
    sub_1000652D4();
    ObservableObject<>.objectWillChange.getter();
    ObservableObjectPublisher.send()();
    swift_release();
    dispatch thunk of NameIconView.Model.progress.getter();
    RunningWorkflow.progress.getter();
    dispatch thunk of ShortcutChiclet.Progress.apply(value:cancelled:)();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v7);
    sub_100022468();
    v32();
  }
  else
  {
    sub_100022468();
    v30();
    (*(void (**)(void **, uint64_t))(v37 + 8))(v36, v38);
  }
}

uint64_t sub_100065154(void *a1)
{
  uint64_t v3 = sub_100025A08((uint64_t *)&unk_1000F70F0);
  uint64_t v4 = sub_1000165CC(v3);
  __chkstk_darwin(v4);
  uint64_t v5 = sub_10002619C();
  sub_100022284();
  __chkstk_darwin(v6);
  sub_10001888C();
  if (!swift_unknownObjectWeakLoadStrong())
  {
    sub_100021594(v1, 1, 1, v5);
    goto LABEL_6;
  }
  swift_getObjectType();
  dispatch thunk of LibraryDelegate.runningWorkflow.getter();
  swift_unknownObjectRelease();
  if (sub_1000225EC(v1, 1, v5) == 1)
  {
LABEL_6:
    sub_100023268(v1, (uint64_t *)&unk_1000F70F0);
LABEL_7:
    char v9 = 0;
    return v9 & 1;
  }
  sub_100020698();
  v7();
  if (!a1)
  {
    uint64_t v13 = sub_10002209C();
    v14(v13);
    goto LABEL_7;
  }
  id v8 = a1;
  char v9 = RunningWorkflow.matchesReference(_:)();

  uint64_t v10 = sub_10002209C();
  v11(v10);
  return v9 & 1;
}

unint64_t sub_1000652D4()
{
  unint64_t result = qword_1000F5F38;
  if (!qword_1000F5F38)
  {
    type metadata accessor for NameIconView.Model();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5F38);
  }
  return result;
}

id sub_100065324()
{
  uint64_t v1 = type metadata accessor for Date();
  sub_100022284();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_10001899C();
  uint64_t v5 = self;
  id v6 = [v5 syncShortcutsUserDefaults];
  uint64_t v7 = WFSyncUnavailableMessageCountKey;
  id v8 = (char *)[v6 integerForKey:WFSyncUnavailableMessageCountKey];

  id result = [v5 syncShortcutsUserDefaults];
  if (__OFADD__(v8, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = result;
    [result setInteger:v8 + 1 forKey:v7];

    id v11 = [v5 syncShortcutsUserDefaults];
    Date.init()();
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    [v11 setObject:isa forKey:WFSyncUnavailableMessageDateKey];

    id v13 = [v5 syncShortcutsUserDefaults];
    [v13 setBool:1 forKey:WFSyncUnavailableMessageDismissedByUserKey];

    sub_100021E68();
    sub_1000238D0();
    return (id)swift_release();
  }
  return result;
}

void sub_1000654EC()
{
  v4.receiver = v0;
  v4.super_class = (Class)swift_getObjectType();
  [super prepareForReuse];
  uint64_t v1 = OBJC_IVAR____TtCC9Shortcuts21LibraryViewController35SyncUnavailableCollectionHeaderView_hostingView;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtCC9Shortcuts21LibraryViewController35SyncUnavailableCollectionHeaderView_hostingView];
  if (v2)
  {
    [v2 removeFromSuperview];
    uint64_t v3 = *(void **)&v0[v1];
  }
  else
  {
    uint64_t v3 = 0;
  }
  *(void *)&v0[v1] = 0;
}

id sub_1000655A4(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtCC9Shortcuts21LibraryViewController35SyncUnavailableCollectionHeaderView_hostingView] = 0;
  *(void *)&v4[OBJC_IVAR____TtCC9Shortcuts21LibraryViewController35SyncUnavailableCollectionHeaderView_layoutConstraints] = _swiftEmptyArrayStorage;
  v11.receiver = v4;
  v11.super_class = ObjectType;
  return [super initWithFrame:a1, a2, a3, a4];
}

id sub_100065650(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtCC9Shortcuts21LibraryViewController35SyncUnavailableCollectionHeaderView_hostingView] = 0;
  *(void *)&v1[OBJC_IVAR____TtCC9Shortcuts21LibraryViewController35SyncUnavailableCollectionHeaderView_layoutConstraints] = _swiftEmptyArrayStorage;
  v6.receiver = v1;
  v6.super_class = ObjectType;
  id v4 = [super initWithCoder:a1];

  return v4;
}

id sub_1000656EC()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  [super dealloc];
}

uint64_t sub_100065770@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = type metadata accessor for RoundedRectangle();
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  sub_10001888C();
  char v9 = (_OWORD *)(v8 - v7);
  uint64_t v10 = sub_100025A08(&qword_1000F5F80);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  sub_10001888C();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = sub_100025A08(&qword_1000F5F88);
  __chkstk_darwin(v15 - 8);
  sub_10001888C();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = sub_100025A08(&qword_1000F5F90);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  sub_10001899C();
  uint64_t v21 = sub_100025A08(&qword_1000F5F98);
  __chkstk_darwin(v21 - 8);
  sub_10001888C();
  uint64_t v24 = v23 - v22;
  *(void *)uint64_t v18 = static HorizontalAlignment.leading.getter();
  *(void *)(v18 + 8) = 0;
  *(unsigned char *)(v18 + 16) = 1;
  uint64_t v25 = sub_100025A08(&qword_1000F5FA0);
  sub_100065AD0(a1, a2, v18 + *(int *)(v25 + 44));
  LOBYTE(a1) = static Edge.Set.all.getter();
  sub_100025DE8(v18, v3, &qword_1000F5F88);
  uint64_t v26 = v3 + *(int *)(v20 + 44);
  *(unsigned char *)uint64_t v26 = a1;
  *(_OWORD *)(v26 + 8) = 0u;
  *(_OWORD *)(v26 + 24) = 0u;
  *(unsigned char *)(v26 + 40) = 1;
  sub_100012400(v18, &qword_1000F5F88);
  uint64_t v27 = static Alignment.leading.getter();
  sub_1000A1578(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v24, 0.0, 1, 0.0, 1, v27, v28);
  sub_100012400(v3, &qword_1000F5F90);
  int64_t v29 = (char *)v9 + *(int *)(v6 + 28);
  uint64_t v30 = enum case for RoundedCornerStyle.continuous(_:);
  type metadata accessor for RoundedCornerStyle();
  sub_10001C094();
  (*(void (**)(char *, uint64_t))(v31 + 104))(v29, v30);
  __asm { FMOV            V0.2D, #15.0 }
  *char v9 = _Q0;
  sub_1000664E8((uint64_t)v9, v14);
  *(void *)(v14 + *(int *)(v11 + 60)) = 1;
  *(_WORD *)(v14 + *(int *)(v11 + 64)) = 256;
  sub_10006654C((uint64_t)v9);
  uint64_t v37 = static Alignment.center.getter();
  uint64_t v39 = v38;
  uint64_t v40 = a3 + *(int *)(sub_100025A08(&qword_1000F5FA8) + 36);
  sub_100025DE8(v14, v40, &qword_1000F5F80);
  uint64_t v41 = (uint64_t *)(v40 + *(int *)(sub_100025A08(&qword_1000F5FB0) + 36));
  *uint64_t v41 = v37;
  v41[1] = v39;
  sub_100025DE8(v24, a3, &qword_1000F5F98);
  sub_100012400(v14, &qword_1000F5F80);
  return sub_100012400(v24, &qword_1000F5F98);
}

uint64_t sub_100065AD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v34 = a3;
  uint64_t v5 = sub_100025A08(&qword_1000F5FB8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100025A08(&qword_1000F5FC0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v33 - v12;
  *(void *)uint64_t v13 = static VerticalAlignment.center.getter();
  *((void *)v13 + 1) = 0;
  v13[16] = 1;
  uint64_t v14 = sub_100025A08(&qword_1000F5FC8);
  sub_100065D90(a1, a2, (uint64_t)&v13[*(int *)(v14 + 44)]);
  sub_10003FA98();
  uint64_t v15 = type metadata accessor for Font.Design();
  sub_100021594((uint64_t)v7, 1, 1, v15);
  static Font.system(size:weight:design:)();
  sub_100012400((uint64_t)v7, &qword_1000F5FB8);
  uint64_t v16 = Text.font(_:)();
  uint64_t v18 = v17;
  char v20 = v19;
  swift_bridgeObjectRelease();
  swift_release();
  LOBYTE(a1) = v20 & 1;
  int v35 = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v21 = Text.foregroundStyle<A>(_:)();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  char v27 = v26 & 1;
  sub_100010C50(v16, v18, a1);
  swift_bridgeObjectRelease();
  sub_100025DE8((uint64_t)v13, (uint64_t)v11, &qword_1000F5FC0);
  uint64_t v28 = v34;
  sub_100025DE8((uint64_t)v11, v34, &qword_1000F5FC0);
  uint64_t v29 = sub_100025A08(&qword_1000F5FD0);
  uint64_t v30 = v28 + *(int *)(v29 + 48);
  *(void *)uint64_t v30 = 0;
  *(unsigned char *)(v30 + 8) = 1;
  uint64_t v31 = v28 + *(int *)(v29 + 64);
  *(void *)uint64_t v31 = v21;
  *(void *)(v31 + 8) = v23;
  *(unsigned char *)(v31 + 16) = v27;
  *(void *)(v31 + 24) = v25;
  sub_10002CF58(v21, v23, v27);
  swift_bridgeObjectRetain();
  sub_100012400((uint64_t)v13, &qword_1000F5FC0);
  sub_100010C50(v21, v23, v27);
  swift_bridgeObjectRelease();
  return sub_100012400((uint64_t)v11, &qword_1000F5FC0);
}

uint64_t sub_100065D90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v41 = a1;
  uint64_t v4 = sub_100025A08(&qword_1000F5FD8);
  uint64_t v45 = *(void *)(v4 - 8);
  uint64_t v46 = v4;
  __chkstk_darwin(v4);
  uint64_t v40 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_100025A08(&qword_1000F5FE0) - 8;
  uint64_t v6 = __chkstk_darwin(v44);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v42 = (uint64_t)&v38 - v9;
  uint64_t v10 = sub_100025A08(&qword_1000F5FB8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (uint64_t)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v13 = String._bridgeToObjectiveC()();
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = sub_1000248B0(v13);

  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  uint64_t v47 = v16;
  uint64_t v48 = v18;
  sub_10002B2A0();
  uint64_t v19 = Text.init<A>(_:)();
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  static Font.Weight.semibold.getter();
  uint64_t v24 = type metadata accessor for Font.Design();
  sub_100021594(v12, 1, 1, v24);
  static Font.system(size:weight:design:)();
  sub_100012400(v12, &qword_1000F5FB8);
  uint64_t v25 = Text.font(_:)();
  uint64_t v27 = v26;
  LOBYTE(v12) = v28;
  uint64_t v39 = v29;
  swift_release();
  LOBYTE(v12) = v12 & 1;
  sub_100010C50(v19, v21, v23);
  swift_bridgeObjectRelease();
  uint64_t v30 = swift_allocObject();
  uint64_t v31 = v43;
  *(void *)(v30 + 16) = v41;
  *(void *)(v30 + 24) = v31;
  swift_unknownObjectRetain();
  sub_100025A08(&qword_1000F5FE8);
  sub_1000665E8();
  unint64_t v32 = v40;
  Button.init(action:label:)();
  uint64_t v34 = v45;
  uint64_t v33 = v46;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v8, v32, v46);
  *(_OWORD *)&v8[*(int *)(v44 + 44)] = xmmword_1000BD5E0;
  (*(void (**)(char *, uint64_t))(v34 + 8))(v32, v33);
  uint64_t v35 = v42;
  sub_100066688((uint64_t)v8, v42);
  sub_100025DE8(v35, (uint64_t)v8, &qword_1000F5FE0);
  *(void *)a3 = v25;
  *(void *)(a3 + 8) = v27;
  *(unsigned char *)(a3 + 16) = v12;
  *(void *)(a3 + 24) = v39;
  *(void *)(a3 + 32) = 0;
  *(unsigned char *)(a3 + 40) = 1;
  uint64_t v36 = sub_100025A08(&qword_1000F6018);
  sub_100025DE8((uint64_t)v8, a3 + *(int *)(v36 + 64), &qword_1000F5FE0);
  sub_10002CF58(v25, v27, v12);
  swift_bridgeObjectRetain();
  sub_100012400(v35, &qword_1000F5FE0);
  sub_100012400((uint64_t)v8, &qword_1000F5FE0);
  sub_100010C50(v25, v27, v12);
  return swift_bridgeObjectRelease();
}

id sub_1000661C8(id result)
{
  if (result) {
    return sub_100065324();
  }
  return result;
}

uint64_t sub_1000661F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_100025A08(&qword_1000F5FB8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = Image.init(systemName:)();
  static Font.Weight.semibold.getter();
  uint64_t v6 = type metadata accessor for Font.Design();
  sub_100021594((uint64_t)v4, 1, 1, v6);
  uint64_t v7 = static Font.system(size:weight:design:)();
  sub_100012400((uint64_t)v4, &qword_1000F5FB8);
  uint64_t KeyPath = swift_getKeyPath();
  id v9 = [self systemGray2Color];
  uint64_t v10 = Color.init(uiColor:)();
  uint64_t result = swift_getKeyPath();
  *a1 = v5;
  a1[1] = KeyPath;
  a1[2] = v7;
  a1[3] = result;
  a1[4] = v10;
  return result;
}

uint64_t sub_100066328()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_100066344@<X0>(uint64_t a1@<X8>)
{
  return sub_100065770(*v1, v1[1], a1);
}

_OWORD *sub_10006634C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

_OWORD *_s26SyncUnavailableHostingViewVwCP(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t _s26SyncUnavailableHostingViewVwxx()
{
  return swift_unknownObjectRelease();
}

void *_s26SyncUnavailableHostingViewVwca(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v3;
  return a1;
}

_OWORD *_s26SyncUnavailableHostingViewVwta(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  return a1;
}

uint64_t _s26SyncUnavailableHostingViewVwet(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s26SyncUnavailableHostingViewVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *_s26SyncUnavailableHostingViewVMa()
{
  return &_s26SyncUnavailableHostingViewVN;
}

uint64_t sub_1000664CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000664E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RoundedRectangle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006654C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RoundedRectangle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000665A8()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

id sub_1000665E0()
{
  return sub_1000661C8(*(id *)(v0 + 16));
}

unint64_t sub_1000665E8()
{
  unint64_t result = qword_1000F5FF0;
  if (!qword_1000F5FF0)
  {
    sub_10001E8D0(&qword_1000F5FE8);
    sub_10002D290();
    sub_10001E88C(&qword_1000F6008, &qword_1000F6010);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F5FF0);
  }
  return result;
}

uint64_t sub_100066688(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100025A08(&qword_1000F5FE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100066704()
{
  unint64_t result = qword_1000F6020;
  if (!qword_1000F6020)
  {
    sub_10001E8D0(&qword_1000F5FA8);
    sub_1000667A4();
    sub_10001E88C(&qword_1000F6040, &qword_1000F5FB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F6020);
  }
  return result;
}

unint64_t sub_1000667A4()
{
  unint64_t result = qword_1000F6028;
  if (!qword_1000F6028)
  {
    sub_10001E8D0(&qword_1000F5F98);
    sub_100066820();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F6028);
  }
  return result;
}

unint64_t sub_100066820()
{
  unint64_t result = qword_1000F6030;
  if (!qword_1000F6030)
  {
    sub_10001E8D0(&qword_1000F5F90);
    sub_10001E88C(&qword_1000F6038, &qword_1000F5F88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F6030);
  }
  return result;
}

uint64_t sub_1000668C4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for ShortcutsLibraryItem();
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v34 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v25 - v10;
  uint64_t v12 = (char *)_swiftEmptyArrayStorage;
  uint64_t v35 = (char *)_swiftEmptyArrayStorage;
  uint64_t v33 = *(void *)(a1 + 16);
  if (v33)
  {
    unint64_t v13 = 0;
    uint64_t v25 = v2;
    uint64_t v26 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
    uint64_t v31 = v9 + 16;
    unint64_t v32 = (uint64_t (**)(char *, char *, uint64_t))(v9 + 32);
    uint64_t v27 = v5;
    uint64_t v28 = a2;
    uint64_t v29 = a1;
    uint64_t v30 = v9;
    while (v13 < *(void *)(a1 + 16))
    {
      unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v15 = *(void *)(v9 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v11, a1 + v14 + v15 * v13, v5);
      uint64_t v16 = ShortcutsLibraryItem.id.getter();
      uint64_t v17 = a2;
      sub_100060380(v16, v18, a2);
      uint64_t v19 = v5;
      char v21 = v20;
      swift_bridgeObjectRelease();
      if (v21)
      {
        char v22 = *v32;
        (*v32)(v34, v11, v19);
        char v23 = v35;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10005B6B4();
          char v23 = v35;
        }
        unint64_t v24 = *((void *)v23 + 2);
        if (v24 >= *((void *)v23 + 3) >> 1)
        {
          sub_10005B6B4();
          char v23 = v35;
        }
        *((void *)v23 + 2) = v24 + 1;
        uint64_t v5 = v27;
        uint64_t result = v22(&v23[v14 + v24 * v15], v34, v27);
        uint64_t v35 = v23;
        a2 = v28;
        a1 = v29;
      }
      else
      {
        uint64_t result = (*v26)(v11, v19);
        uint64_t v5 = v19;
        a2 = v17;
      }
      ++v13;
      uint64_t v9 = v30;
      if (v33 == v13)
      {
        uint64_t v12 = v35;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)v12;
  }
  return result;
}

void sub_100066B64(unint64_t a1, NSObject *a2, void *a3, void *a4, uint64_t a5)
{
  unint64_t v6 = a1;
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v7; uint64_t v7 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v20 = v6 & 0xC000000000000001;
    sub_100029C7C(0, (unint64_t *)&unk_1000F70A0);
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    uint64_t v8 = 4;
    uint64_t v18 = v7;
    unint64_t v19 = v6;
    while (1)
    {
      id v9 = v20 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v6 + 8 * v8);
      uint64_t v10 = v9;
      uint64_t v11 = v8 - 3;
      if (__OFADD__(v8 - 4, 1)) {
        break;
      }
      dispatch_group_enter(a2);
      uint64_t v12 = (void *)swift_allocObject();
      void v12[2] = a2;
      void v12[3] = a4;
      v12[4] = a5;
      aBlock[4] = sub_10006E8CC;
      aBlock[5] = v12;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10006F3E0;
      aBlock[3] = &unk_1000E69F0;
      unint64_t v13 = _Block_copy(aBlock);
      unint64_t v14 = a2;
      id v15 = a4;
      swift_retain();
      swift_release();
      id v16 = [v10 loadObjectOfClass:ObjCClassFromMetadata completionHandler:v13];
      _Block_release(v13);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      ++v8;
      unint64_t v6 = v19;
      if (v11 == v18)
      {

        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }

  swift_bridgeObjectRelease();
LABEL_15:
  swift_release();
}

uint64_t property wrapper backing initializer of LibraryTable.dataSource()
{
  type metadata accessor for LibraryDataSource();
  sub_10006D784(&qword_1000F6048, (void (*)(uint64_t))&type metadata accessor for LibraryDataSource);
  sub_100022F5C();

  return ObservedObject.init(wrappedValue:)();
}

uint64_t LibraryTable.dataSource.getter()
{
  return swift_retain();
}

uint64_t LibraryTable.dataSource.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*LibraryTable.dataSource.modify())()
{
  return static NavigationDestinationEntity.defaultQuery.setter;
}

uint64_t LibraryTable.$dataSource.getter()
{
  type metadata accessor for LibraryDataSource();
  sub_10006D784(&qword_1000F6048, (void (*)(uint64_t))&type metadata accessor for LibraryDataSource);
  sub_100022F5C();

  return ObservedObject.projectedValue.getter();
}

uint64_t property wrapper backing initializer of LibraryTable.selectedAutoShortcut()
{
  sub_100025A08((uint64_t *)&unk_1000F7890);
  State.init(wrappedValue:)();
  return v1;
}

uint64_t LibraryTable.init(dataSource:database:libraryDelegate:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  *(void *)(a3 + 32) = 0;
  swift_unknownObjectWeakInit();
  sub_100025A08((uint64_t *)&unk_1000F7890);
  State.init(wrappedValue:)();
  *(_OWORD *)(a3 + 40) = v8;
  *(void *)(a3 + 56) = 0x403A000000000000;
  type metadata accessor for LibraryDataSource();
  sub_10006D784(&qword_1000F6048, (void (*)(uint64_t))&type metadata accessor for LibraryDataSource);
  *(void *)a3 = ObservedObject.init(wrappedValue:)();
  *(void *)(a3 + 8) = v6;
  *(void *)(a3 + 16) = a1;
  *(void *)(a3 + 32) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t LibraryTable.body.getter@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  sub_10002CE74(v1, v5);
  uint64_t v3 = swift_allocObject();
  uint64_t result = sub_10006804C((uint64_t)v5, v3 + 16);
  *a1 = sub_100068084;
  a1[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v3;
  return result;
}

uint64_t sub_1000670E4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v91 = a1;
  uint64_t v94 = a3;
  uint64_t v90 = type metadata accessor for ScrollViewProxy();
  uint64_t v88 = *(void *)(v90 - 8);
  uint64_t v89 = *(void *)(v88 + 64);
  __chkstk_darwin(v90);
  uint64_t v87 = (char *)v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = type metadata accessor for PPTTestCase.Name();
  uint64_t v92 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v86 = (char *)v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100025A08(&qword_1000F6238);
  __chkstk_darwin(v6 - 8);
  uint64_t v82 = (char *)v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_100025A08(&qword_1000F6240);
  uint64_t v69 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  int v62 = (char *)v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_100025A08(&qword_1000F6248);
  uint64_t v66 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  unint64_t v63 = (char *)v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_100025A08(&qword_1000F6250);
  __chkstk_darwin(v65);
  uint64_t v64 = (char *)v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_100025A08(&qword_1000F6258);
  uint64_t v75 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v70 = (char *)v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_100025A08(&qword_1000F6260);
  uint64_t v76 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v71 = (char *)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_100025A08(&qword_1000F6268);
  __chkstk_darwin(v74);
  unint64_t v72 = (char *)v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_100025A08(&qword_1000F6270);
  uint64_t v83 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v78 = (char *)v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_100025A08(&qword_1000F6278);
  __chkstk_darwin(v81);
  uint64_t v79 = (char *)v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_100025A08(&qword_1000F6280);
  __chkstk_darwin(v85);
  uint64_t v80 = (char *)v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LibraryDataSource();
  sub_10006D784(&qword_1000F6048, (void (*)(uint64_t))&type metadata accessor for LibraryDataSource);
  ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  ObservedObject.Wrapper.subscript.getter();
  swift_release();
  swift_release();
  v61[2] = *((void *)&v98 + 1);
  v61[3] = v98;
  v61[1] = v99;
  ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  ObservedObject.Wrapper.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v95 = a2;
  uint64_t v97 = a2;
  uint64_t v96 = a2;
  type metadata accessor for ShortcutsLibraryItem();
  sub_100025A08(&qword_1000F6288);
  sub_100025A08(&qword_1000F6290);
  sub_100025A08(&qword_1000F6298);
  sub_10006DA5C();
  sub_10001E88C(&qword_1000F62B8, &qword_1000F6290);
  sub_10001E88C(&qword_1000F62C0, &qword_1000F6298);
  uint64_t v17 = v62;
  Table.init<A>(selection:sortOrder:columns:rows:)();
  uint64_t v18 = v95;
  sub_10002CE74(v95, &v98);
  uint64_t v19 = swift_allocObject();
  sub_10006804C((uint64_t)&v98, v19 + 16);
  sub_10001E88C(&qword_1000F62C8, &qword_1000F6240);
  unint64_t v20 = v63;
  uint64_t v21 = v67;
  View.contextAction<A>(forSelectionType:action:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v17, v21);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v23 = v66;
  uint64_t v24 = (uint64_t)v64;
  uint64_t v25 = v68;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v64, v20, v68);
  uint64_t v26 = v65;
  uint64_t v27 = v24 + *(int *)(v65 + 36);
  *(void *)uint64_t v27 = KeyPath;
  *(void *)(v27 + 8) = 1;
  *(unsigned char *)(v27 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v25);
  uint64_t v28 = v18;
  sub_10002CE74(v18, &v98);
  uint64_t v29 = swift_allocObject();
  sub_10006804C((uint64_t)&v98, v29 + 16);
  uint64_t v30 = type metadata accessor for LibraryMenu();
  unint64_t v31 = sub_10006DBE0();
  uint64_t v32 = sub_10006D784(&qword_1000F62E8, (void (*)(uint64_t))&type metadata accessor for LibraryMenu);
  uint64_t v33 = v70;
  View.contextMenu<A, B>(forSelectionType:menu:primaryAction:)();
  swift_release();
  sub_100012400(v24, &qword_1000F6250);
  long long v103 = *(_OWORD *)(v28 + 5);
  sub_100025A08(&qword_1000F62F0);
  State.projectedValue.getter();
  uint64_t v34 = v99;
  long long v103 = v98;
  uint64_t v104 = v99;
  sub_100029C7C(0, &qword_1000F5268);
  type metadata accessor for GalleryShortcutActionsView();
  *(void *)&long long v98 = v26;
  *((void *)&v98 + 1) = &type metadata for String;
  uint64_t v99 = (void *)v30;
  unint64_t v100 = v31;
  uint64_t v101 = &protocol witness table for String;
  uint64_t v102 = v32;
  swift_getOpaqueTypeConformance2();
  sub_10006DCF4();
  sub_10006D784(&qword_1000F6300, (void (*)(uint64_t))&type metadata accessor for GalleryShortcutActionsView);
  uint64_t v35 = v71;
  uint64_t v36 = v73;
  View.sheet<A, B>(item:onDismiss:content:)();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v75 + 8))(v33, v36);
  uint64_t v37 = swift_getKeyPath();
  uint64_t v38 = (uint64_t)v82;
  uint64_t v39 = v95;
  sub_10006A988();
  uint64_t v40 = sub_100025A08(&qword_1000F6308);
  sub_100021594(v38, 0, 1, v40);
  uint64_t v41 = (uint64_t)v72;
  uint64_t v42 = (uint64_t *)&v72[*(int *)(v74 + 36)];
  uint64_t v43 = sub_100025A08(&qword_1000F6310);
  sub_100019760(v38, (uint64_t)v42 + *(int *)(v43 + 28), &qword_1000F6238);
  *uint64_t v42 = v37;
  uint64_t v44 = v76;
  uint64_t v45 = v77;
  (*(void (**)(uint64_t, char *, uint64_t))(v76 + 16))(v41, v35, v77);
  sub_100012400(v38, &qword_1000F6238);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v35, v45);
  swift_retain();
  LOBYTE(v45) = dispatch thunk of LibraryDataSource.isEditing.getter();
  swift_release();
  LOBYTE(v103) = v45 & 1;
  sub_10002CE74(v39, &v98);
  uint64_t v46 = swift_allocObject();
  sub_10006804C((uint64_t)&v98, v46 + 16);
  sub_10006DD68();
  uint64_t v47 = v78;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_100012400(v41, &qword_1000F6268);
  uint64_t v48 = static Animation.default.getter();
  swift_retain();
  LOBYTE(v25) = dispatch thunk of LibraryDataSource.isEditing.getter();
  swift_release();
  uint64_t v49 = v83;
  uint64_t v50 = (uint64_t)v79;
  uint64_t v51 = v84;
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v79, v47, v84);
  uint64_t v52 = v50 + *(int *)(v81 + 36);
  *(void *)uint64_t v52 = v48;
  *(unsigned char *)(v52 + 8) = v25 & 1;
  (*(void (**)(char *, uint64_t))(v49 + 8))(v47, v51);
  sub_10006DF54();
  uint64_t v53 = (uint64_t)v80;
  View.accessibilityIdentifier(_:)();
  sub_100012400(v50, &qword_1000F6278);
  unint64_t v54 = v86;
  PPTTestCase.Name.init(_:)();
  uint64_t v55 = v88;
  uint64_t v56 = v87;
  uint64_t v57 = v90;
  (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v87, v91, v90);
  unint64_t v58 = (*(unsigned __int8 *)(v55 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  uint64_t v59 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v55 + 32))(v59 + v58, v56, v57);
  sub_10006E0A4();
  View.onTest(_:handler:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v54, v93);
  return sub_100012400(v53, &qword_1000F6280);
}

uint64_t sub_10006804C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100068084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000670E4(a1, (void *)(v2 + 16), a2);
}

uint64_t sub_10006808C()
{
  return dispatch thunk of LibraryDataSource.selectedWorkflowIds.setter();
}

uint64_t sub_1000680B8()
{
  return dispatch thunk of LibraryDataSource.sortOrderComparators.setter();
}

uint64_t sub_1000680E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v64 = sub_100025A08(&qword_1000F63E0);
  uint64_t v66 = *(void *)(v64 - 8);
  uint64_t v3 = __chkstk_darwin(v64);
  uint64_t v60 = (char *)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  unint64_t v61 = (char *)v55 - v6;
  __chkstk_darwin(v5);
  uint64_t v65 = (char *)v55 - v7;
  uint64_t v8 = sub_100025A08(&qword_1000F63E8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)v55 - v14;
  __chkstk_darwin(v13);
  unint64_t v63 = (char *)v55 - v16;
  NSString v17 = String._bridgeToObjectiveC()();
  NSString v18 = String._bridgeToObjectiveC()();
  v55[3] = 0x80000001000C16D0;
  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = sub_1000B3654(v17, v18);

  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v23 = v22;

  uint64_t v69 = v21;
  uint64_t v70 = v23;
  swift_getKeyPath();
  sub_10002CE74(a1, &v67);
  uint64_t v24 = swift_allocObject();
  sub_10006804C((uint64_t)&v67, v24 + 16);
  sub_100025A08(&qword_1000F63F0);
  uint64_t v25 = sub_10006D784(&qword_1000F63B0, (void (*)(uint64_t))&type metadata accessor for ShortcutsLibraryItem);
  sub_10006EA98();
  v55[1] = sub_10002B2A0();
  v55[2] = v25;
  TableColumn<>.init<A, B>(_:value:content:)();
  uint64_t v56 = v8;
  TableColumn.width(min:ideal:max:)();
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
  uint64_t v57 = v9;
  uint64_t v58 = v9 + 8;
  uint64_t v59 = v26;
  v26(v12, v8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v63, v15, v8);
  NSString v27 = String._bridgeToObjectiveC()();
  NSString v28 = String._bridgeToObjectiveC()();
  NSString v29 = String._bridgeToObjectiveC()();
  id v30 = sub_1000B3654(v27, v28);

  uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v33 = v32;

  uint64_t v67 = v31;
  uint64_t v68 = v33;
  swift_getKeyPath();
  v55[0] = sub_100025A08(&qword_1000F6418);
  sub_10001E88C(&qword_1000F6420, &qword_1000F6418);
  uint64_t v34 = v60;
  TableColumn<>.init<A, B>(_:value:content:)();
  uint64_t v35 = v61;
  uint64_t v36 = v64;
  TableColumn.width(min:ideal:max:)();
  uint64_t v37 = v66;
  uint64_t v38 = *(void (**)(char *, uint64_t))(v66 + 8);
  v38(v34, v36);
  uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  uint64_t v66 = v37 + 32;
  v39(v65, v35, v36);
  NSString v40 = String._bridgeToObjectiveC()();
  NSString v41 = String._bridgeToObjectiveC()();
  NSString v42 = String._bridgeToObjectiveC()();
  id v43 = sub_1000B3654(v40, v41);

  uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v46 = v45;

  uint64_t v67 = v44;
  uint64_t v68 = v46;
  swift_getKeyPath();
  TableColumn<>.init<A, B>(_:value:content:)();
  uint64_t v47 = v64;
  TableColumn.width(min:ideal:max:)();
  v38(v34, v47);
  uint64_t v48 = sub_100025A08(&qword_1000F6428);
  uint64_t v49 = v62;
  v39((char *)(v62 + *(int *)(v48 + 64)), v35, v47);
  uint64_t v50 = (char *)(v49 + *(int *)(v48 + 48));
  uint64_t v51 = v49;
  uint64_t v52 = v56;
  uint64_t v53 = v63;
  (*(void (**)(uint64_t, char *, uint64_t))(v57 + 16))(v51, v63, v56);
  v39(v50, v65, v47);
  return v59(v53, v52);
}

uint64_t sub_100068854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ShortcutsLibraryItem();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)a2 = static VerticalAlignment.center.getter();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  sub_100025A08(&qword_1000F6430);
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v8(v7, a1, v4);
  swift_retain();
  NameIconView.init(item:dataSource:)();
  uint64_t v9 = sub_100025A08(&qword_1000F63F0);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(a2 + *(int *)(v9 + 36), a1, v4);
}

uint64_t sub_100068994@<X0>(uint64_t a1@<X8>)
{
  return sub_1000689C4((void (*)(void))&ShortcutsLibraryItem.actionCountText.getter, a1);
}

uint64_t sub_1000689AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000689C4((void (*)(void))&ShortcutsLibraryItem.modificationDateText.getter, a1);
}

uint64_t sub_1000689C4@<X0>(void (*a1)(void)@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = static VerticalAlignment.center.getter();
  a1();
  sub_10002B2A0();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(void *)(a2 + 24) = result;
  *(void *)(a2 + 32) = v6;
  *(unsigned char *)(a2 + 40) = v7 & 1;
  *(void *)(a2 + 48) = v8;
  return result;
}

uint64_t sub_100068A44(void *a1)
{
  uint64_t v2 = sub_100025A08(&qword_1000F5EC8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  dispatch thunk of LibraryDataSource.sortedSections.getter();
  swift_release();
  uint64_t v6 = OrderedDictionary.values.getter();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_10002CE74(a1, v10);
  uint64_t v7 = swift_allocObject();
  sub_10006804C((uint64_t)v10, v7 + 16);
  v10[0] = v6;
  v9[0] = sub_100025A08(&qword_1000F6358);
  v9[1] = &type metadata for String;
  v9[2] = sub_100025A08(&qword_1000F62B0);
  void v9[3] = type metadata accessor for ShortcutsLibraryItem();
  v9[4] = sub_10001E88C(&qword_1000F6360, &qword_1000F6358);
  v9[5] = sub_10001E88C(&qword_1000F62A8, &qword_1000F62B0);
  void v9[6] = sub_10006D784(&qword_1000F6368, (void (*)(uint64_t))&type metadata accessor for ShortcutsLibrarySection);
  swift_getKeyPath();
  return ForEach<>.init<A>(_:id:content:)();
}

uint64_t sub_100068CAC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for ShortcutsLibrarySection();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = type metadata accessor for LibrarySectionOptions();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  ShortcutsLibrarySection.options.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  sub_10002CE74(a2, v17);
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v14 + v13, (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  sub_10006804C((uint64_t)v17, v14 + ((v8 + v13 + 7) & 0xFFFFFFFFFFFFFFF8));
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a3, v12, v9);
  uint64_t result = sub_100025A08(&qword_1000F62B0);
  uint64_t v16 = (uint64_t (**)@<X0>(uint64_t@<X8>))(a3 + *(int *)(result + 36));
  void *v16 = sub_10006E408;
  v16[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v14;
  return result;
}

uint64_t sub_100068EBC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  NSString v28 = a2;
  uint64_t v21 = a1;
  uint64_t v30 = a3;
  uint64_t v25 = type metadata accessor for ShortcutsLibrarySection();
  uint64_t v3 = *(void *)(v25 - 8);
  uint64_t v26 = *(void *)(v3 + 64);
  __chkstk_darwin(v25);
  uint64_t v24 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for UTType();
  uint64_t v5 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v22 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100025A08(&qword_1000F6370);
  uint64_t v29 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38[0] = ShortcutsLibrarySection.tableItems.getter();
  uint64_t v31 = sub_100025A08(&qword_1000F6378);
  uint64_t v32 = &type metadata for String;
  uint64_t v33 = sub_100025A08(&qword_1000F6380);
  uint64_t v34 = type metadata accessor for ShortcutsLibraryItem();
  uint64_t v35 = sub_10001E88C(&qword_1000F6388, &qword_1000F6378);
  unint64_t v36 = sub_10006E480();
  uint64_t v37 = sub_10006D784(&qword_1000F63B0, (void (*)(uint64_t))&type metadata accessor for ShortcutsLibraryItem);
  swift_getKeyPath();
  ForEach<>.init<A>(_:id:content:)();
  sub_100025A08(&qword_1000F63B8);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1000BAB00;
  unint64_t v11 = v10 + v9;
  id v12 = (id)WFWorkflowReferenceType();
  unint64_t v13 = v22;
  static UTType._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v11, v13, v23);
  uint64_t v14 = v24;
  uint64_t v15 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v24, v21, v25);
  sub_10002CE74(v28, v38);
  unint64_t v16 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v17 = (v26 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v18 + v16, v14, v15);
  sub_10006804C((uint64_t)v38, v18 + v17);
  sub_10006E69C();
  uint64_t v19 = v27;
  DynamicTableRowContent.onInsert(of:perform:)();
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v8, v19);
}

uint64_t sub_100069338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v14[1] = a2;
  uint64_t v3 = type metadata accessor for ShortcutsLibraryItem();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3);
  uint64_t v6 = sub_100025A08(&qword_1000F63A0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  sub_10006D784(&qword_1000F63B0, (void (*)(uint64_t))&type metadata accessor for ShortcutsLibraryItem);
  TableRow.init(_:)();
  v10((char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  unint64_t v11 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v12 + v11, (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  sub_10001E88C(&qword_1000F6398, &qword_1000F63A0);
  TableRowContent.itemProvider(_:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1000695AC(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for LibrarySectionOptions();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = ShortcutsLibrarySection.workflowInsertionAllowed.getter();
  if (result)
  {
    ShortcutsLibrarySection.options.getter();
    sub_1000696A8(a2, a1, (uint64_t)v7);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_1000696A8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v47 = a2;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v51 = *(void *)(v5 - 8);
  uint64_t v52 = v5;
  __chkstk_darwin(v5);
  uint64_t v50 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for LibrarySectionOptions();
  uint64_t v45 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v42 = v7;
  id v43 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  dispatch_group_t v9 = *(dispatch_group_t *)(v8 - 8);
  __chkstk_darwin(v8);
  NSString v41 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v39);
  NSString v40 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for DispatchQoS();
  uint64_t v48 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v53 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56[0] = _swiftEmptyArrayStorage;
  if (!(a1 >> 62))
  {
    uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    unint64_t v19 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_19;
    }
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
  if (!v13) {
    goto LABEL_15;
  }
LABEL_3:
  sub_100029C7C(0, (unint64_t *)&unk_1000F70A0);
  uint64_t result = swift_getObjCClassFromMetadata();
  if (v13 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v15 = result;
  dispatch_group_t v37 = v9;
  uint64_t v38 = (void *)v8;
  for (uint64_t i = 0; i != v13; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v17 = *(id *)(a1 + 8 * i + 32);
    }
    uint64_t v18 = v17;
    if ([v17 canLoadObjectOfClass:v15])
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v19 = v56[0];
  uint64_t v8 = (uint64_t)v38;
  dispatch_group_t v9 = v37;
  if ((v56[0] & 0x8000000000000000) != 0)
  {
LABEL_19:
    swift_retain();
    uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    if (!v35) {
      goto LABEL_20;
    }
LABEL_18:
    dispatch_group_t v37 = dispatch_group_create();
    sub_100029C7C(0, &qword_1000F52B0);
    static DispatchQoS.unspecified.getter();
    v56[0] = _swiftEmptyArrayStorage;
    sub_10006D784(&qword_1000F63C8, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
    sub_100025A08(&qword_1000F63D0);
    uint64_t v38 = &protocol conformance descriptor for [A];
    sub_10001E88C(&qword_1000F63D8, &qword_1000F63D0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    ((void (*)(char *, void, uint64_t))v9[13].isa)(v41, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v8);
    id v20 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = _swiftEmptyArrayStorage;
    uint64_t v57 = _swiftEmptyArrayStorage;
    uint64_t v22 = v37;
    uint64_t v23 = v20;
    NSString v41 = v23;
    swift_retain();
    sub_100066B64(v19, v22, &v57, v23, v21);
    swift_release();
    uint64_t v24 = (void *)static OS_dispatch_queue.main.getter();
    sub_10002CE74(v44, v56);
    uint64_t v25 = v45;
    uint64_t v26 = v43;
    uint64_t v27 = v46;
    (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v43, a3, v46);
    unint64_t v28 = (*(unsigned __int8 *)(v25 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    uint64_t v29 = swift_allocObject();
    sub_10006804C((uint64_t)v56, v29 + 16);
    uint64_t v30 = v47;
    *(void *)(v29 + 80) = v21;
    *(void *)(v29 + 88) = v30;
    (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))(v29 + v28, v26, v27);
    aBlock[4] = sub_10006E83C;
    aBlock[5] = v29;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10000E51C;
    aBlock[3] = &unk_1000E69A0;
    uint64_t v31 = _Block_copy(aBlock);
    swift_retain();
    uint64_t v32 = v53;
    static DispatchQoS.unspecified.getter();
    unint64_t v54 = _swiftEmptyArrayStorage;
    sub_10006D784((unint64_t *)&unk_1000F7860, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100025A08(&qword_1000F52B8);
    sub_10001E88C((unint64_t *)&qword_1000F7870, &qword_1000F52B8);
    uint64_t v33 = v50;
    uint64_t v34 = v52;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_group.notify(qos:flags:queue:execute:)();

    _Block_release(v31);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v33, v34);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v32, v49);
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
LABEL_16:
  if ((v19 & 0x4000000000000000) != 0) {
    goto LABEL_19;
  }
  if (*(void *)(v19 + 16)) {
    goto LABEL_18;
  }
LABEL_20:

  return swift_release();
}

void sub_100069F18(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_100025A08(&qword_1000F5100);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100025A08(&qword_1000F7690);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ShortcutsLibraryItem();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v13 = dispatch thunk of LibraryDataSource.selectedTableItems.getter();
  swift_release();
  uint64_t v14 = *(void *)(v13 + 16);
  swift_bridgeObjectRelease();
  if (v14 == 1)
  {
    swift_retain();
    uint64_t v15 = dispatch thunk of LibraryDataSource.selectedTableItems.getter();
    swift_release();
    sub_1000805F8(v15, (uint64_t)v8);
    swift_bridgeObjectRelease();
    if (sub_1000225EC((uint64_t)v8, 1, v9) == 1)
    {
      sub_100012400((uint64_t)v8, &qword_1000F7690);
      return;
    }
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    uint64_t v16 = ShortcutsLibraryItem.workflow.getter();
    if (!v16)
    {
      uint64_t v20 = ShortcutsLibraryItem.autoShortcut.getter();
      if (v20)
      {
        uint64_t v21 = (void *)v20;
        uint64_t v22 = type metadata accessor for TaskPriority();
        sub_100021594((uint64_t)v5, 1, 1, v22);
        sub_10002CE74(a2, v26);
        type metadata accessor for MainActor();
        id v23 = v21;
        uint64_t v24 = static MainActor.shared.getter();
        uint64_t v25 = (void *)swift_allocObject();
        long long v25[2] = v24;
        v25[3] = &protocol witness table for MainActor;
        v25[4] = v23;
        sub_10006804C((uint64_t)v26, (uint64_t)(v25 + 5));
        sub_10002B210((uint64_t)v5, (uint64_t)&unk_1000F6350, (uint64_t)v25);

        swift_release();
      }
      goto LABEL_9;
    }
    id v17 = (void *)v16;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v19 = Strong;
      swift_getObjectType();
      v26[0] = v19;
      WorkflowOpener.openWorkflow(_:)();
      swift_unknownObjectRelease();

      swift_unknownObjectRelease();
LABEL_9:
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      return;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

uint64_t sub_10006A260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  void v5[6] = a5;
  type metadata accessor for MainActor();
  v5[7] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  void v5[8] = v7;
  v5[9] = v6;
  return _swift_task_switch(sub_10006A2F8, v7, v6);
}

uint64_t sub_10006A2F8()
{
  id v1 = objc_allocWithZone((Class)type metadata accessor for AutoShortcutsAppsDataSource());
  v0[10] = AutoShortcutsAppsDataSource.init(organizedCollections:)();
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of AutoShortcutsAppsDataSource.getWFWorkflow(for:)
                                       + async function pointer to dispatch thunk of AutoShortcutsAppsDataSource.getWFWorkflow(for:));
  uint64_t v2 = (void *)swift_task_alloc();
  v0[11] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10006A3C0;
  uint64_t v3 = v0[5];
  return v5(v3);
}

uint64_t sub_10006A3C0(uint64_t a1)
{
  sub_10001C0E8();
  uint64_t v4 = v3;
  swift_task_dealloc();
  if (v1)
  {
    swift_errorRelease();
    uint64_t v5 = v4[8];
    uint64_t v6 = v4[9];
    uint64_t v7 = sub_10006A5A4;
  }
  else
  {
    v4[12] = a1;
    uint64_t v5 = v4[8];
    uint64_t v6 = v4[9];
    uint64_t v7 = sub_10006A4C8;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_10006A4C8()
{
  uint64_t v1 = (void *)v0[12];
  uint64_t v2 = (void *)v0[10];
  uint64_t v3 = v0[6];
  swift_release();
  uint64_t v5 = *(void **)(v3 + 40);
  uint64_t v4 = *(void *)(v3 + 48);
  v0[2] = v5;
  v0[3] = v4;
  v0[4] = v1;
  swift_retain();
  id v6 = v1;
  id v7 = v5;
  sub_100025A08(&qword_1000F62F0);
  State.wrappedValue.setter();

  swift_release();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10006A5A4()
{
  uint64_t v1 = *(void **)(v0 + 80);
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10006A60C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100025A08(&qword_1000F5EC8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  dispatch thunk of LibraryDataSource.sortedSections.getter();
  swift_release();
  uint64_t v8 = OrderedDictionary.values.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v36 = a2;
    uint64_t v10 = *(void *)(type metadata accessor for ShortcutsLibrarySection() - 8);
    unint64_t v11 = v8 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v12 = *(void *)(v10 + 72);
    swift_bridgeObjectRetain();
    uint64_t v13 = _swiftEmptyArrayStorage;
    while (1)
    {
      uint64_t v14 = ShortcutsLibrarySection.items.getter();
      uint64_t v15 = *(void *)(v14 + 16);
      uint64_t v16 = v13[2];
      uint64_t v17 = v16 + v15;
      if (__OFADD__(v16, v15)) {
        break;
      }
      uint64_t v18 = v14;
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (!isUniquelyReferenced_nonNull_native || v17 > v13[3] >> 1)
      {
        if (v16 <= v17) {
          uint64_t v20 = v16 + v15;
        }
        else {
          uint64_t v20 = v16;
        }
        uint64_t v13 = (void *)sub_100088CC4(isUniquelyReferenced_nonNull_native, v20, 1, (uint64_t)v13);
      }
      if (*(void *)(v18 + 16))
      {
        uint64_t v21 = v13[2];
        uint64_t v22 = (v13[3] >> 1) - v21;
        uint64_t v23 = *(void *)(type metadata accessor for ShortcutsLibraryItem() - 8);
        uint64_t v24 = *(void *)(v23 + 72);
        if (v22 < v15) {
          goto LABEL_27;
        }
        unint64_t v25 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
        uint64_t v26 = (char *)v13 + v25 + v24 * v21;
        unint64_t v27 = v18 + v25;
        uint64_t v28 = v24 * v15;
        uint64_t v29 = &v26[v28];
        unint64_t v30 = v27 + v28;
        if (v27 < (unint64_t)v29 && (unint64_t)v26 < v30) {
          goto LABEL_29;
        }
        swift_arrayInitWithCopy();
        if (v15)
        {
          uint64_t v32 = v13[2];
          BOOL v33 = __OFADD__(v32, v15);
          uint64_t v34 = v32 + v15;
          if (v33) {
            goto LABEL_28;
          }
          v13[2] = v34;
        }
      }
      else if (v15)
      {
        goto LABEL_26;
      }
      swift_bridgeObjectRelease();
      v11 += v12;
      if (!--v9)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = _swiftEmptyArrayStorage;
LABEL_24:
    swift_bridgeObjectRetain();
    sub_1000668C4((uint64_t)v13, a1);
    return LibraryMenu.init(tableItems:)();
  }
  return result;
}

uint64_t sub_10006A94C(id *a1)
{
  id v1 = *a1;

  return GalleryShortcutActionsView.init(workflow:)(v1);
}

uint64_t sub_10006A988()
{
  sub_10002CE74(v0, v6);
  type metadata accessor for MainActor();
  uint64_t v1 = static MainActor.shared.getter();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = &protocol witness table for MainActor;
  sub_10006804C((uint64_t)v6, v2 + 32);
  sub_10002CE74(v0, v6);
  uint64_t v3 = static MainActor.shared.getter();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = &protocol witness table for MainActor;
  sub_10006804C((uint64_t)v6, v4 + 32);
  type metadata accessor for EditMode();
  return Binding.init(get:set:)();
}

void sub_10006AA94(uint64_t a1, unsigned char *a2)
{
  if ((*a2 & 1) == 0)
  {
    swift_retain();
    uint64_t v2 = (void (*)(uint64_t *, void))dispatch thunk of LibraryDataSource.selectedWorkflowIds.modify();
    uint64_t v4 = v3;
    swift_bridgeObjectRelease();
    *uint64_t v4 = &_swiftEmptySetSingleton;
    v2(&v5, 0);
    swift_release();
  }
}

uint64_t sub_10006AB18()
{
  uint64_t v0 = type metadata accessor for PPTTestCase.ScrollMode();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for PPTTestCase.ScrollMode.oscillate(_:), v0);
  PPTTestCase.performScrollTest(_:scrollMode:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_10006AC14@<X0>(uint64_t a1@<X8>)
{
  swift_retain();
  char v2 = dispatch thunk of LibraryDataSource.isEditing.getter();
  swift_release();
  uint64_t v3 = type metadata accessor for EditMode();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  uint64_t v5 = (unsigned int *)&enum case for EditMode.active(_:);
  if ((v2 & 1) == 0) {
    uint64_t v5 = (unsigned int *)&enum case for EditMode.inactive(_:);
  }
  uint64_t v6 = *v5;

  return v4(a1, v6, v3);
}

uint64_t sub_10006ACB8()
{
  uint64_t v0 = type metadata accessor for EditMode();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for EditMode.active(_:), v0);
  swift_retain();
  static EditMode.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  dispatch thunk of LibraryDataSource.isEditing.setter();
  return swift_release();
}

void sub_10006ADD8(uint64_t a1, int a2, dispatch_group_t group, NSObject *a4, uint64_t a5)
{
  if (a1 && (self, (uint64_t v8 = swift_dynamicCastObjCClass()) != 0))
  {
    uint64_t v9 = v8;
    uint64_t v10 = a5 + 16;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v10;
    *(void *)(v11 + 24) = v9;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = sub_10006E910;
    *(void *)(v12 + 24) = v11;
    v15[4] = sub_10003F658;
    v15[5] = v12;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    void v15[2] = sub_10006B024;
    v15[3] = &unk_1000E6A68;
    uint64_t v13 = _Block_copy(v15);
    swift_unknownObjectRetain_n();
    swift_retain();
    swift_release();
    dispatch_sync(a4, v13);
    swift_unknownObjectRelease();
    _Block_release(v13);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation)
    {
      __break(1u);
    }
    else
    {
      dispatch_group_leave(group);
      swift_release();
    }
  }
  else
  {
    dispatch_group_leave(group);
  }
}

uint64_t sub_10006AFA8(void *a1, void *a2)
{
  swift_beginAccess();
  id v4 = a2;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  sub_10005B504(*(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10));
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  return swift_endAccess();
}

uint64_t sub_10006B024(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_10006B04C()
{
  swift_retain();
  LibraryDataSource.shortcutMoveService.getter();
  swift_release();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v0 = (void *)LibrarySectionOptions.collection.getter();
  dispatch thunk of ShortcutMoveService.move(_:to:of:source:)();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_10006B124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v65 = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v64 = v4;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v7 = type metadata accessor for EmptyTableRowContent();
  uint64_t v8 = type metadata accessor for Section();
  uint64_t v57 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v56 = (char *)&v52 - v12;
  uint64_t v13 = sub_10001E8D0(&qword_1000F61D0);
  unint64_t v14 = sub_10006D7CC();
  uint64_t v66 = AssociatedTypeWitness;
  uint64_t v89 = AssociatedTypeWitness;
  uint64_t v90 = v13;
  uint64_t v54 = v13;
  uint64_t v91 = AssociatedConformanceWitness;
  unint64_t v92 = v14;
  unint64_t v15 = v14;
  uint64_t v67 = type metadata accessor for TableHeaderRowContent();
  uint64_t v68 = v7;
  uint64_t v16 = type metadata accessor for Section();
  uint64_t v55 = *(void **)(v16 - 8);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v53 = (char *)&v52 - v20;
  uint64_t v21 = type metadata accessor for LibrarySectionOptions.Header();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = v16;
  uint64_t v60 = v8;
  uint64_t v63 = type metadata accessor for _ConditionalContent();
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  unint64_t v61 = (char *)&v52 - v25;
  uint64_t v26 = v58;
  LibrarySectionOptions.header.getter();
  LOBYTE(v16) = LibrarySectionOptions.Header.shouldShowInTable.getter();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  if (v16)
  {
    __chkstk_darwin(*(void *)(v26 + *(int *)(a1 + 36)));
    uint64_t v27 = v64;
    *(&v52 - 4) = v3;
    *(&v52 - 3) = v27;
    unint64_t v51 = v15;
    Section<>.init<A, B>(content:header:)();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v29 = swift_getWitnessTable();
    uint64_t v72 = WitnessTable;
    uint64_t v73 = v27;
    uint64_t v74 = v29;
    uint64_t v30 = v59;
    uint64_t v58 = swift_getWitnessTable();
    uint64_t v31 = v55;
    uint64_t v32 = (void (*)(char *, char *, uint64_t))v55[2];
    BOOL v33 = v53;
    v32(v53, v19, v30);
    uint64_t v34 = (void (*)(char *, uint64_t))v31[1];
    v34(v19, v30);
    v32(v19, v33, v30);
    uint64_t v69 = v29;
    uint64_t v70 = v27;
    uint64_t v71 = v29;
    swift_getWitnessTable();
    uint64_t v35 = v61;
    sub_10006C39C((uint64_t)v19, v66, v30);
    v34(v19, v30);
    v34(v33, v30);
  }
  else
  {
    uint64_t v36 = v66;
    uint64_t v27 = v64;
    Section<>.init<A>(content:)();
    uint64_t v37 = swift_getWitnessTable();
    uint64_t v86 = v37;
    uint64_t v87 = v27;
    uint64_t v88 = v37;
    uint64_t v55 = &protocol conformance descriptor for <> Section<A, B, C>;
    uint64_t v38 = v60;
    uint64_t v58 = swift_getWitnessTable();
    uint64_t v39 = v57;
    NSString v40 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
    NSString v41 = v56;
    v40(v56, v11, v38);
    uint64_t v42 = *(void (**)(char *, uint64_t))(v39 + 8);
    v42(v11, v38);
    v40(v11, v41, v38);
    uint64_t v83 = swift_getWitnessTable();
    uint64_t v84 = v27;
    uint64_t v85 = v37;
    uint64_t v43 = v59;
    swift_getWitnessTable();
    uint64_t v35 = v61;
    sub_10006C49C((uint64_t)v11, v36, v43, v38);
    v42(v11, v38);
    v42(v41, v38);
  }
  uint64_t v44 = swift_getWitnessTable();
  uint64_t v45 = swift_getWitnessTable();
  uint64_t v80 = v44;
  uint64_t v81 = v27;
  uint64_t v82 = v45;
  uint64_t v46 = swift_getWitnessTable();
  uint64_t v77 = v45;
  uint64_t v78 = v27;
  uint64_t v79 = v45;
  uint64_t v47 = swift_getWitnessTable();
  uint64_t v75 = v46;
  uint64_t v76 = v47;
  uint64_t v48 = v63;
  swift_getWitnessTable();
  uint64_t v49 = v62;
  (*(void (**)(uint64_t, char *, uint64_t))(v62 + 16))(v65, v35, v48);
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v35, v48);
}

uint64_t sub_10006B954@<X0>(uint64_t a1@<X8>)
{
  return sub_10006B990(a1);
}

uint64_t sub_10006B990@<X0>(uint64_t a1@<X8>)
{
  uint64_t v51 = a1;
  uint64_t v1 = type metadata accessor for AutoShortcutApp();
  uint64_t v43 = *(void *)(v1 - 8);
  uint64_t v44 = v1;
  __chkstk_darwin(v1);
  uint64_t v42 = (char *)v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_100025A08(&qword_1000F6220);
  __chkstk_darwin(v49);
  uint64_t v48 = (uint64_t)v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_100025A08(&qword_1000F6228);
  __chkstk_darwin(v45);
  uint64_t v5 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_100025A08(&qword_1000F6230);
  __chkstk_darwin(v47);
  uint64_t v7 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_100025A08(&qword_1000F61F8);
  __chkstk_darwin(v46);
  uint64_t v9 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_100025A08(&qword_1000F61E8);
  __chkstk_darwin(v50);
  uint64_t v11 = (void (**)(char *, char *, uint64_t))((char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_100025A08(&qword_1000F6208);
  NSString v41 = *(void (***)(char *, char *, uint64_t))(v12 - 8);
  __chkstk_darwin(v12);
  unint64_t v14 = (char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for LibrarySectionOptions.Header();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  LibrarySectionOptions.header.getter();
  int v19 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v18, v15);
  if (v19 == enum case for LibrarySectionOptions.Header.nameAndIconName(_:))
  {
    uint64_t v20 = (*(uint64_t (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    uint64_t v21 = *((void *)v18 + 1);
    uint64_t v22 = *((void *)v18 + 3);
    uint64_t v23 = __chkstk_darwin(v20);
    v40[-2] = v24;
    v40[-1] = v21;
    __chkstk_darwin(v23);
    v40[-2] = v25;
    v40[-1] = v22;
    Label.init(title:icon:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v26 = v41;
    v41[2](v7, v14, v12);
    swift_storeEnumTagMultiPayload();
    sub_10001E88C(&qword_1000F6200, &qword_1000F6208);
    _ConditionalContent<>.init(storage:)();
    sub_100019760((uint64_t)v9, (uint64_t)v5, &qword_1000F61F8);
    swift_storeEnumTagMultiPayload();
    sub_100025A08(&qword_1000F6218);
    sub_10006D8C4();
    sub_10006D964();
    _ConditionalContent<>.init(storage:)();
    sub_100012400((uint64_t)v9, &qword_1000F61F8);
    sub_100019760((uint64_t)v11, v48, &qword_1000F61E8);
    swift_storeEnumTagMultiPayload();
    sub_10006D848();
    _ConditionalContent<>.init(storage:)();
    sub_100012400((uint64_t)v11, &qword_1000F61E8);
    return ((uint64_t (*)(char *, uint64_t))v26[1])(v14, v12);
  }
  v40[1] = v12;
  NSString v41 = v11;
  if (v19 == enum case for LibrarySectionOptions.Header.appShortcut(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v42, v18, v44);
    uint64_t v52 = AutoShortcutApp.localizedName.getter();
    uint64_t v53 = v28;
    sub_10002B2A0();
    uint64_t v29 = Text.init<A>(_:)();
    uint64_t v31 = v30;
    *(void *)uint64_t v7 = v29;
    *((void *)v7 + 1) = v30;
    v40[0] = v30;
    char v33 = v32 & 1;
    v7[16] = v32 & 1;
    *((void *)v7 + 3) = v34;
    swift_storeEnumTagMultiPayload();
    sub_10002CF58(v29, v31, v33);
    sub_10001E88C(&qword_1000F6200, &qword_1000F6208);
    swift_bridgeObjectRetain();
    _ConditionalContent<>.init(storage:)();
    sub_100019760((uint64_t)v9, (uint64_t)v5, &qword_1000F61F8);
    swift_storeEnumTagMultiPayload();
    sub_100025A08(&qword_1000F6218);
    sub_10006D8C4();
    sub_10006D964();
    uint64_t v35 = (uint64_t)v41;
    _ConditionalContent<>.init(storage:)();
    sub_100012400((uint64_t)v9, &qword_1000F61F8);
    sub_100019760(v35, v48, &qword_1000F61E8);
    swift_storeEnumTagMultiPayload();
    sub_10006D848();
    _ConditionalContent<>.init(storage:)();
    sub_100012400(v35, &qword_1000F61E8);
    sub_100010C50(v29, v40[0], v33);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v42, v44);
  }
  if (v19 == enum case for LibrarySectionOptions.Header.tip(_:))
  {
    char v54 = 1;
    _ConditionalContent<>.init(storage:)();
    *uint64_t v5 = v52;
    swift_storeEnumTagMultiPayload();
    sub_100025A08(&qword_1000F6218);
    sub_10006D8C4();
    sub_10006D964();
    uint64_t v36 = (uint64_t)v41;
    _ConditionalContent<>.init(storage:)();
    sub_100019760(v36, v48, &qword_1000F61E8);
    swift_storeEnumTagMultiPayload();
    sub_10006D848();
    _ConditionalContent<>.init(storage:)();
    uint64_t v37 = v36;
    return sub_100012400(v37, &qword_1000F61E8);
  }
  uint64_t v38 = v48;
  uint64_t v39 = (uint64_t)v41;
  if (v19 == enum case for LibrarySectionOptions.Header.none(_:))
  {
    char v54 = 0;
    _ConditionalContent<>.init(storage:)();
    *uint64_t v5 = v52;
    swift_storeEnumTagMultiPayload();
    sub_100025A08(&qword_1000F6218);
    sub_10006D8C4();
    sub_10006D964();
    _ConditionalContent<>.init(storage:)();
    sub_100019760(v39, v38, &qword_1000F61E8);
    swift_storeEnumTagMultiPayload();
    sub_10006D848();
    _ConditionalContent<>.init(storage:)();
    uint64_t v37 = v39;
    return sub_100012400(v37, &qword_1000F61E8);
  }
  if (v19 == enum case for LibrarySectionOptions.Header.syncUnavailable(_:))
  {
    swift_storeEnumTagMultiPayload();
    sub_10006D848();
    return _ConditionalContent<>.init(storage:)();
  }
  else
  {
    uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_10006C39C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for _ConditionalContent.Storage();
  __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_10006C49C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for _ConditionalContent.Storage();
  __chkstk_darwin(v6);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))((char *)&v9 - v7, a1, a4);
  swift_storeEnumTagMultiPayload();
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_10006C59C@<X0>(uint64_t a1@<X8>)
{
  sub_10002B2A0();
  swift_bridgeObjectRetain();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_10006C608@<X0>(uint64_t *a1@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t result = Image.init(_internalSystemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_10006C660()
{
  return static TableRowContent._tableRowCount(inputs:)();
}

uint64_t WFWorkflow.id.getter()
{
  return v0;
}

uint64_t sub_10006C688()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_10006C6A4()
{
  return &protocol witness table for ObjectIdentifier;
}

void sub_10006C6B0(void *a1@<X8>)
{
  *a1 = *v1;
}

void *assignWithCopy for LibraryTable(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  char v4 = (void *)a2[2];
  uint64_t v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  swift_unknownObjectWeakCopyAssign();
  a1[4] = a2[4];
  uint64_t v7 = (void *)a1[5];
  uint64_t v8 = (void *)a2[5];
  a1[5] = v8;
  id v9 = v8;

  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  return a1;
}

uint64_t assignWithTake for LibraryTable(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  swift_unknownObjectWeakTakeAssign();
  id v6 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryTable(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryTable(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_10006C874()
{
  return sub_10001E88C(&qword_1000F6050, &qword_1000F6058);
}

uint64_t sub_10006C8B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShortcutsLibraryItem();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_10006C91C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ShortcutsLibraryItem();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_10006C980(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShortcutsLibraryItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_10006C9E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShortcutsLibraryItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_10006CA48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShortcutsLibraryItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_10006CAAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShortcutsLibraryItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_10006CB10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10006CB24);
}

uint64_t sub_10006CB24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShortcutsLibraryItem();

  return sub_1000225EC(a1, a2, v4);
}

uint64_t sub_10006CB6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10006CB80);
}

uint64_t sub_10006CB80()
{
  type metadata accessor for ShortcutsLibraryItem();
  uint64_t v0 = sub_100022478();

  return sub_100021594(v0, v1, v2, v3);
}

uint64_t type metadata accessor for AppEntityAnnotationModifier()
{
  uint64_t result = qword_1000F60B8;
  if (!qword_1000F60B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10006CC08()
{
  uint64_t result = type metadata accessor for ShortcutsLibraryItem();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10006CC94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_10006CC9C()
{
  uint64_t result = type metadata accessor for LibrarySectionOptions();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10006CD34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for LibrarySectionOptions();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 36);
    id v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *id v9 = *v10;
    v9[1] = v11;
  }
  swift_retain();
  return a1;
}

uint64_t sub_10006CE08(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LibrarySectionOptions();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_release();
}

uint64_t sub_10006CE80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LibrarySectionOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (void *)(a1 + v7);
  id v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  return a1;
}

uint64_t sub_10006CF08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LibrarySectionOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (void *)(a1 + v7);
  id v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10006CF9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LibrarySectionOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 36)) = *(_OWORD *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t sub_10006D018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LibrarySectionOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 36)) = *(_OWORD *)(a2 + *(int *)(a3 + 36));
  swift_release();
  return a1;
}

uint64_t sub_10006D0A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10006D0B4);
}

uint64_t sub_10006D0B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for LibrarySectionOptions();
  sub_1000222C8();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return sub_1000225EC(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 36));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_10006D140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10006D154);
}

void sub_10006D154(uint64_t a1, int a2, int a3, uint64_t a4)
{
  type metadata accessor for LibrarySectionOptions();
  sub_1000222C8();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    uint64_t v9 = sub_100022478();
    sub_100021594(v9, v10, v11, v12);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  }
}

uint64_t type metadata accessor for ConditionalHeaderSection()
{
  return sub_100006F04();
}

uint64_t sub_10006D1E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10006D22C()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_10006D248(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t sub_10006D250()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10006D26C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v33 = a2;
  uint64_t v2 = sub_100025A08(&qword_1000F61A0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  int v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100025A08(&qword_1000F61A8);
  __chkstk_darwin(v30);
  char v32 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AppEntityVisualState();
  uint64_t v28 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100025A08(&qword_1000F61B0);
  uint64_t v10 = *(void *)(v31 - 8);
  uint64_t v11 = __chkstk_darwin(v31);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = ShortcutsLibraryItem.workflow.getter();
  if (v16)
  {
    uint64_t v17 = (void *)v16;
    uint64_t v35 = WFDatabaseObjectDescriptor.id.getter();
    uint64_t v36 = v18;
    uint64_t v34 = _swiftEmptyArrayStorage;
    sub_10006D784(&qword_1000F61C0, (void (*)(uint64_t))&type metadata accessor for AppEntityVisualState);
    sub_100025A08((uint64_t *)&unk_1000F8490);
    sub_10001E88C(&qword_1000F61C8, (uint64_t *)&unk_1000F8490);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v19 = sub_10001E88C(&qword_1000F61B8, &qword_1000F61A0);
    unint64_t v20 = sub_10001D418();
    View.appEntity<A>(entityType:identifier:state:)();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v7);
    swift_bridgeObjectRelease();
    uint64_t v21 = v31;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v13, v31);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v32, v15, v21);
    swift_storeEnumTagMultiPayload();
    uint64_t v35 = v2;
    uint64_t v36 = &type metadata for WorkflowEntity;
    uint64_t v37 = v19;
    unint64_t v38 = v20;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();

    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v21);
  }
  else
  {
    uint64_t v23 = v3;
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v24(v5, v29, v2);
    v24(v32, (uint64_t)v5, v2);
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = sub_10001E88C(&qword_1000F61B8, &qword_1000F61A0);
    unint64_t v26 = sub_10001D418();
    uint64_t v35 = v2;
    uint64_t v36 = &type metadata for WorkflowEntity;
    uint64_t v37 = v25;
    unint64_t v38 = v26;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v5, v2);
  }
}

uint64_t sub_10006D784(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10006D7CC()
{
  unint64_t result = qword_1000F61D8;
  if (!qword_1000F61D8)
  {
    sub_10001E8D0(&qword_1000F61D0);
    sub_10006D848();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F61D8);
  }
  return result;
}

unint64_t sub_10006D848()
{
  unint64_t result = qword_1000F61E0;
  if (!qword_1000F61E0)
  {
    sub_10001E8D0(&qword_1000F61E8);
    sub_10006D8C4();
    sub_10006D964();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F61E0);
  }
  return result;
}

unint64_t sub_10006D8C4()
{
  unint64_t result = qword_1000F61F0;
  if (!qword_1000F61F0)
  {
    sub_10001E8D0(&qword_1000F61F8);
    sub_10001E88C(&qword_1000F6200, &qword_1000F6208);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F61F0);
  }
  return result;
}

unint64_t sub_10006D964()
{
  unint64_t result = qword_1000F6210;
  if (!qword_1000F6210)
  {
    sub_10001E8D0(&qword_1000F6218);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F6210);
  }
  return result;
}

uint64_t sub_10006D9D0@<X0>(uint64_t a1@<X8>)
{
  return sub_10006B954(a1);
}

uint64_t sub_10006D9DC@<X0>(uint64_t a1@<X8>)
{
  return sub_10006C59C(a1);
}

uint64_t sub_10006D9E4@<X0>(uint64_t *a1@<X8>)
{
  return sub_10006C608(a1);
}

uint64_t sub_10006D9EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = dispatch thunk of LibraryDataSource.selectedWorkflowIds.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10006DA1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = dispatch thunk of LibraryDataSource.sortOrderComparators.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10006DA4C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000680E4(*(void **)(v1 + 16), a1);
}

uint64_t sub_10006DA54()
{
  return sub_100068A44(*(void **)(v0 + 16));
}

unint64_t sub_10006DA5C()
{
  unint64_t result = qword_1000F62A0;
  if (!qword_1000F62A0)
  {
    sub_10001E8D0(&qword_1000F6288);
    sub_10001E88C(&qword_1000F62A8, &qword_1000F62B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F62A0);
  }
  return result;
}

void sub_10006DAF8(uint64_t a1)
{
  sub_100069F18(a1, (void *)(v1 + 16));
}

uint64_t sub_10006DB00()
{
  return dispatch thunk of Identifiable.id.getter();
}

uint64_t sub_10006DB6C()
{
  sub_1000220B4();
  uint64_t result = EnvironmentValues.lineLimit.getter();
  *(void *)uint64_t v0 = result;
  *(unsigned char *)(v0 + 8) = v2 & 1;
  return result;
}

uint64_t sub_10006DBA0()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_10006DBD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10006A60C(a1, a2);
}

unint64_t sub_10006DBE0()
{
  unint64_t result = qword_1000F62D0;
  if (!qword_1000F62D0)
  {
    sub_10001E8D0(&qword_1000F6250);
    sub_10001E8D0(&qword_1000F6240);
    sub_10001E88C(&qword_1000F62C8, &qword_1000F6240);
    swift_getOpaqueTypeConformance2();
    sub_10001E88C(&qword_1000F62D8, &qword_1000F62E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F62D0);
  }
  return result;
}

unint64_t sub_10006DCF4()
{
  unint64_t result = qword_1000F62F8;
  if (!qword_1000F62F8)
  {
    sub_100029C7C(255, &qword_1000F5268);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F62F8);
  }
  return result;
}

void sub_10006DD60(uint64_t a1, unsigned char *a2)
{
}

unint64_t sub_10006DD68()
{
  unint64_t result = qword_1000F6318;
  if (!qword_1000F6318)
  {
    sub_10001E8D0(&qword_1000F6268);
    sub_10001E8D0(&qword_1000F6258);
    sub_100029C7C(255, &qword_1000F5268);
    type metadata accessor for GalleryShortcutActionsView();
    sub_10001E8D0(&qword_1000F6250);
    type metadata accessor for LibraryMenu();
    sub_10006DBE0();
    sub_10006D784(&qword_1000F62E8, (void (*)(uint64_t))&type metadata accessor for LibraryMenu);
    swift_getOpaqueTypeConformance2();
    sub_10006DCF4();
    sub_10006D784(&qword_1000F6300, (void (*)(uint64_t))&type metadata accessor for GalleryShortcutActionsView);
    swift_getOpaqueTypeConformance2();
    sub_10001E88C(&qword_1000F6320, &qword_1000F6310);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F6318);
  }
  return result;
}

unint64_t sub_10006DF54()
{
  unint64_t result = qword_1000F6328;
  if (!qword_1000F6328)
  {
    sub_10001E8D0(&qword_1000F6278);
    sub_10001E8D0(&qword_1000F6268);
    sub_10006DD68();
    swift_getOpaqueTypeConformance2();
    sub_10001E88C(&qword_1000F84F0, &qword_1000F6330);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F6328);
  }
  return result;
}

uint64_t sub_10006E03C()
{
  return sub_10006E940((void (*)(void))&type metadata accessor for ScrollViewProxy);
}

uint64_t sub_10006E054()
{
  uint64_t v0 = type metadata accessor for ScrollViewProxy();
  sub_10001C100(v0);

  return sub_10006AB18();
}

unint64_t sub_10006E0A4()
{
  unint64_t result = qword_1000F6338;
  if (!qword_1000F6338)
  {
    sub_10001E8D0(&qword_1000F6280);
    sub_10006DF54();
    sub_10006D784(&qword_1000F6340, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F6338);
  }
  return result;
}

uint64_t sub_10006E154@<X0>(uint64_t a1@<X8>)
{
  return sub_10006AC14(a1);
}

uint64_t sub_10006E164()
{
  swift_unknownObjectRelease();
  swift_release();

  swift_unknownObjectWeakDestroy();
  swift_release();

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_10006E1C4()
{
  return sub_10006ACB8();
}

uint64_t sub_10006E1D0()
{
  swift_unknownObjectRelease();

  swift_release();
  swift_unknownObjectWeakDestroy();

  swift_release();

  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_10006E238(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10006E2FC;
  return sub_10006A260(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t sub_10006E2FC()
{
  sub_10001C0E8();
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10006E3D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100068CAC(a1, (void *)(v2 + 16), a2);
}

uint64_t sub_10006E3DC()
{
  return 56;
}

__n128 sub_10006E3E8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  long long v4 = *(_OWORD *)(a1 + 32);
  *(void *)(a2 + 48) = *(void *)(a1 + 48);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(__n128 *)a2 = result;
  return result;
}

uint64_t sub_10006E408@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ShortcutsLibrarySection();
  sub_100022084(v3);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = (void *)(v1 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_100068EBC(v1 + v8, v9, a1);
}

unint64_t sub_10006E480()
{
  unint64_t result = qword_1000F6390;
  if (!qword_1000F6390)
  {
    sub_10001E8D0(&qword_1000F6380);
    sub_10001E88C(&qword_1000F6398, &qword_1000F63A0);
    sub_10006D784(&qword_1000F63A8, (void (*)(uint64_t))&type metadata accessor for ItemProviderTableRowModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F6390);
  }
  return result;
}

uint64_t sub_10006E554()
{
  type metadata accessor for ShortcutsLibrarySection();
  sub_10001C094();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = v5 + 64;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  uint64_t v7 = v0 + v5;
  swift_release();

  swift_unknownObjectWeakDestroy();
  swift_release();

  return _swift_deallocObject(v0, v6, v4);
}

uint64_t sub_10006E614(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShortcutsLibrarySection();
  sub_100022084(v4);

  return sub_1000695AC(a1, a2);
}

unint64_t sub_10006E69C()
{
  unint64_t result = qword_1000F63C0;
  if (!qword_1000F63C0)
  {
    sub_10001E8D0(&qword_1000F6370);
    sub_10006E480();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F63C0);
  }
  return result;
}

uint64_t sub_10006E710()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10006E748()
{
  uint64_t v1 = type metadata accessor for LibrarySectionOptions();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 96) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();

  swift_unknownObjectWeakDestroy();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10006E83C()
{
  uint64_t v0 = type metadata accessor for LibrarySectionOptions();
  sub_10001C100(v0);

  return sub_10006B04C();
}

uint64_t sub_10006E884()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10006E8CC(uint64_t a1, int a2)
{
  sub_10006ADD8(a1, a2, *(dispatch_group_t *)(v2 + 16), *(NSObject **)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_10006E8D8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10006E910()
{
  return sub_10006AFA8(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10006E918()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10006E928()
{
  return sub_10006E940((void (*)(void))&type metadata accessor for ShortcutsLibraryItem);
}

uint64_t sub_10006E940(void (*a1)(void))
{
  a1(0);
  sub_10001C094();
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t))(v2 + 8))(v1 + v4);

  return _swift_deallocObject(v1, v5, v6);
}

uint64_t sub_10006E9D0()
{
  uint64_t v0 = type metadata accessor for ShortcutsLibraryItem();
  sub_10001C100(v0);
  return ShortcutsLibraryItem.itemProvider.getter();
}

uint64_t sub_10006EA0C()
{
  sub_1000220B4();
  uint64_t result = ShortcutsLibraryItem.name.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_10006EA38()
{
  swift_release();

  swift_unknownObjectWeakDestroy();
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10006EA90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100068854(a1, a2);
}

unint64_t sub_10006EA98()
{
  unint64_t result = qword_1000F63F8;
  if (!qword_1000F63F8)
  {
    sub_10001E8D0(&qword_1000F63F0);
    sub_10001E88C(&qword_1000F6400, &qword_1000F6408);
    sub_10006D784(&qword_1000F6410, (void (*)(uint64_t))type metadata accessor for AppEntityAnnotationModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F63F8);
  }
  return result;
}

uint64_t sub_10006EB68()
{
  sub_1000220B4();
  uint64_t result = ShortcutsLibraryItem.actionCountText.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_10006EB90()
{
  sub_1000220B4();
  uint64_t result = ShortcutsLibraryItem.modificationDateText.getter();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

unint64_t sub_10006EBBC()
{
  unint64_t result = qword_1000F6438;
  if (!qword_1000F6438)
  {
    sub_10001E8D0(&qword_1000F6440);
    sub_10001E8D0(&qword_1000F61A0);
    sub_10001E88C(&qword_1000F61B8, &qword_1000F61A0);
    sub_10001D418();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F6438);
  }
  return result;
}

uint64_t sub_10006ECA4()
{
  return swift_getWitnessTable();
}

void *sub_10006EE64(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v4 = OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_database;
    uint64_t v5 = _swiftEmptyArrayStorage;
    uint64_t v6 = 4;
    while (1)
    {
      id v7 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v6);
      unint64_t v8 = v7;
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      id v10 = [*(id *)(a2 + v4) sortedVisibleWorkflowsInCollection:v7];
      id v11 = [v10 count];

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100088D0C(0, v5[2] + 1, 1, (uint64_t)v5);
        uint64_t v5 = v14;
      }
      unint64_t v13 = v5[2];
      unint64_t v12 = v5[3];
      if (v13 >= v12 >> 1)
      {
        sub_100088D0C(v12 > 1, v13 + 1, 1, (uint64_t)v5);
        uint64_t v5 = v15;
      }
      v5[2] = v13 + 1;
      v5[v13 + 4] = v11;
      ++v6;
      if (v9 == v3)
      {
        swift_release();
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
  swift_release();
  uint64_t v5 = _swiftEmptyArrayStorage;
LABEL_17:
  swift_bridgeObjectRelease();
  return v5;
}

void *sub_10006F028()
{
  uint64_t v0 = type metadata accessor for RootNavigationDestination();
  sub_100022284();
  __chkstk_darwin(v1);
  sub_10001888C();
  type metadata accessor for IndexSet.Index();
  sub_100022284();
  __chkstk_darwin(v2);
  sub_1000167F4();
  type metadata accessor for IndexSet();
  sub_10002CF08(&qword_1000F6AB0, (void (*)(uint64_t))&type metadata accessor for IndexSet);
  uint64_t v3 = dispatch thunk of Collection.count.getter();
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v16 = _swiftEmptyArrayStorage;
    sub_10005B6D4();
    uint64_t v5 = _swiftEmptyArrayStorage;
    unint64_t result = (void *)dispatch thunk of Collection.startIndex.getter();
    if ((v4 & 0x8000000000000000) == 0)
    {
      swift_getObjectType();
      while (1)
      {
        uint64_t v7 = v0;
        unint64_t v8 = (void (*)(unsigned char *, void))dispatch thunk of Collection.subscript.read();
        unint64_t v10 = *v9;
        v8(v15, 0);
        unint64_t result = (void *)dispatch thunk of SidebarSection.destinations.getter();
        if ((v10 & 0x8000000000000000) != 0) {
          break;
        }
        if (v10 >= result[2]) {
          goto LABEL_12;
        }
        uint64_t v0 = v7;
        sub_100080458();
        v11();
        swift_bridgeObjectRelease();
        uint64_t v16 = v5;
        unint64_t v12 = v5[2];
        if (v12 >= v5[3] >> 1)
        {
          sub_10005B6D4();
          uint64_t v5 = v16;
        }
        v5[2] = v12 + 1;
        sub_100020628();
        v13();
        uint64_t v16 = v5;
        dispatch thunk of Collection.formIndex(after:)();
        if (!--v4)
        {
          sub_100016618();
          v14();
          swift_unknownObjectRelease();
          return v16;
        }
      }
      __break(1u);
LABEL_12:
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    swift_unknownObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_10006F33C()
{
  return EnvironmentValues.editMode.getter();
}

uint64_t sub_10006F360(uint64_t a1)
{
  uint64_t v3 = sub_100025A08(&qword_1000F6238);
  uint64_t v4 = sub_1000165CC(v3);
  __chkstk_darwin(v4);
  sub_10002206C();
  sub_100016574(a1, v1, &qword_1000F6238);
  return EnvironmentValues.editMode.setter();
}

uint64_t sub_10006F3E0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  id v5 = a3;
  uint64_t v6 = sub_100021F6C();
  v4(v6);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_10006F45C(uint64_t *a1)
{
  uint64_t v2 = sub_100025A08(&qword_1000F6DF8);
  __chkstk_darwin(v2);
  uint64_t v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v5 = *a1;
  long long v10 = *(_OWORD *)(a1 + 1);
  uint64_t v12 = v5;
  sub_100080120((uint64_t)&v10 + 8, (uint64_t)v11, &qword_1000F6EA8);
  long long v8 = *(_OWORD *)(a1 + 3);
  sub_100080120((uint64_t)&v8 + 8, (uint64_t)v9, &qword_1000F6EB0);
  long long v6 = *((_OWORD *)a1 + 1);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)a1;
  *((_OWORD *)v4 + 1) = v6;
  *((void *)v4 + 4) = a1[4];
  swift_storeEnumTagMultiPayload();
  sub_100080178((uint64_t)&v12);
  swift_retain();
  sub_100080178((uint64_t)v11);
  swift_retain();
  sub_100080178((uint64_t)v9);
  sub_100025A08(&qword_1000F5FE8);
  sub_100025A08(&qword_1000F6E18);
  sub_1000665E8();
  sub_10007FE08();
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_10006F5C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for _ConditionalContent.Storage();
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2);
  swift_storeEnumTagMultiPayload();
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_10006F6C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for _ConditionalContent.Storage();
  __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return _ConditionalContent<>.init(storage:)();
}

unint64_t sub_10006F7B8(char a1)
{
  if (a1) {
    return 0xD000000000000013;
  }
  else {
    return 0xD00000000000001ALL;
  }
}

unint64_t sub_10006F7F4()
{
  return sub_10006F7B8(*v0);
}

uint64_t sub_10006F7FC()
{
  uint64_t v1 = sub_100025A08(&qword_1000F6960);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100025A08(&qword_1000F5130);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  long long v10 = (char *)&v36 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v43 = (uint64_t)&v36 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v36 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v36 - v16;
  uint64_t v18 = type metadata accessor for RootNavigationDestination();
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v19);
  uint64_t v25 = (char *)&v36 - v24;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_isCompact)) {
    return result;
  }
  NSString v41 = v7;
  uint64_t v42 = v23;
  NSString v40 = v10;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (sub_1000225EC((uint64_t)v17, 1, v18) == 1) {
    return sub_100025E44((uint64_t)v17, &qword_1000F5130);
  }
  uint64_t v26 = v42;
  uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
  v39(v25, v17, v18);
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v15, v25, v18);
  sub_100021594((uint64_t)v15, 0, 1, v18);
  uint64_t v38 = v0;
  uint64_t v27 = v0 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_lastSelectedDestination;
  swift_beginAccess();
  uint64_t v28 = (uint64_t)&v3[*(int *)(v1 + 48)];
  sub_100016574((uint64_t)v15, (uint64_t)v3, &qword_1000F5130);
  sub_100016574(v27, v28, &qword_1000F5130);
  if (sub_1000225EC((uint64_t)v3, 1, v18) == 1)
  {
    sub_100025E44((uint64_t)v15, &qword_1000F5130);
    if (sub_1000225EC(v28, 1, v18) == 1)
    {
      sub_100025E44((uint64_t)v3, &qword_1000F5130);
      return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v25, v18);
    }
  }
  else
  {
    uint64_t v29 = v43;
    sub_100016574((uint64_t)v3, v43, &qword_1000F5130);
    if (sub_1000225EC(v28, 1, v18) != 1)
    {
      uint64_t v37 = v27;
      v39(v21, (char *)v28, v18);
      sub_10002CF08(&qword_1000F5198, (void (*)(uint64_t))&type metadata accessor for RootNavigationDestination);
      char v30 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v31 = *(void (**)(char *, uint64_t))(v42 + 8);
      v31(v21, v18);
      sub_100025E44((uint64_t)v15, &qword_1000F5130);
      v31((char *)v29, v18);
      sub_100025E44((uint64_t)v3, &qword_1000F5130);
      if (v30) {
        return ((uint64_t (*)(char *, uint64_t))v31)(v25, v18);
      }
      goto LABEL_13;
    }
    sub_100025E44((uint64_t)v15, &qword_1000F5130);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v29, v18);
  }
  uint64_t v37 = v27;
  sub_100025E44((uint64_t)v3, &qword_1000F6960);
LABEL_13:
  if (*(unsigned char *)(v38 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_shouldNavigateWhenDestinationChanges) == 1) {
    sub_100070804();
  }
  uint64_t v32 = (uint64_t)v40;
  v39(v40, v25, v18);
  sub_100021594(v32, 0, 1, v18);
  uint64_t v33 = v32;
  uint64_t v34 = (uint64_t)v41;
  sub_100080120(v33, (uint64_t)v41, &qword_1000F5130);
  uint64_t v35 = v37;
  swift_beginAccess();
  sub_10007D2AC(v34, v35);
  return swift_endAccess();
}

uint64_t sub_10006FD64()
{
  return sub_100070514();
}

uint64_t sub_10006FD78(uint64_t a1)
{
  return sub_100070144(a1, &qword_1000F5130, (uint64_t)&unk_1000BDBE0, (uint64_t)&unk_1000BDCF8, (void (*)(uint64_t))sub_10006F7FC);
}

uint64_t sub_10006FDA8(uint64_t a1, char a2)
{
  uint64_t v5 = sub_100025A08(&qword_1000F5130);
  uint64_t v6 = sub_1000165CC(v5);
  __chkstk_darwin(v6);
  sub_10002206C();
  uint64_t v7 = OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_shouldNavigateWhenDestinationChanges;
  *(unsigned char *)(v2 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_shouldNavigateWhenDestinationChanges) = a2;
  uint64_t v8 = type metadata accessor for RootNavigationDestination();
  sub_10001C094();
  sub_100080458();
  v9();
  sub_100021594(v3, 0, 1, v8);
  uint64_t result = sub_10006FD78(v3);
  *(unsigned char *)(v2 + v7) = 1;
  return result;
}

uint64_t sub_10006FE78()
{
  uint64_t v0 = type metadata accessor for RootNavigationDestination();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100025A08((uint64_t *)&unk_1000F8480);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AutoShortcutApp();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  long long v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (sub_1000225EC((uint64_t)v6, 1, v7) == 1) {
    return sub_100025E44((uint64_t)v6, (uint64_t *)&unk_1000F8480);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v3, v10, v7);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for RootNavigationDestination.autoShortcuts(_:), v0);
  sub_100070804();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_100070100()
{
  return sub_100070514();
}

uint64_t sub_100070114(uint64_t a1)
{
  return sub_100070144(a1, (uint64_t *)&unk_1000F8480, (uint64_t)&unk_1000BDCD0, (uint64_t)&unk_1000BDE10, (void (*)(uint64_t))sub_10006FE78);
}

uint64_t sub_100070144(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v9 = sub_100025A08(a2);
  uint64_t v10 = sub_1000165CC(v9);
  __chkstk_darwin(v10);
  sub_1000165D8();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100016574(a1, v5, a2);
  swift_retain();
  uint64_t v11 = static Published.subscript.setter();
  a5(v11);
  return sub_100025E44(a1, a2);
}

uint64_t sub_100070218()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100026C04();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100070278()
{
  return sub_1000804B0();
}

uint64_t sub_1000702D8()
{
  uint64_t v0 = type metadata accessor for EditMode();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    sub_1000A1050();
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return result;
}

uint64_t sub_100070410()
{
  return sub_100070514();
}

uint64_t sub_100070424()
{
  type metadata accessor for EditMode();
  sub_100022284();
  __chkstk_darwin(v0);
  sub_10002206C();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000205E8();
  v1();
  swift_retain();
  sub_100080464();
  sub_1000702D8();
  sub_100018D08();
  return v2();
}

uint64_t sub_100070500()
{
  return sub_100070514();
}

uint64_t sub_100070514()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_100070584(uint64_t a1)
{
  uint64_t v3 = sub_100025A08(&qword_1000F5130);
  uint64_t v4 = sub_1000165CC(v3);
  __chkstk_darwin(v4);
  sub_10002206C();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100016574(a1, v1, &qword_1000F5130);
  swift_retain();
  sub_100080464();
  return sub_100025E44(a1, &qword_1000F5130);
}

double sub_100070638@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10001511C();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(void *)(a1 + 64) = v7;
  return result;
}

uint64_t sub_1000706BC(uint64_t a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100080120(a1, (uint64_t)v3, &qword_1000F64F8);
  swift_retain();
  return sub_1000804B0();
}

double sub_10007072C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100026C04();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10007078C()
{
  return static Published.subscript.setter();
}

uint64_t sub_100070804()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_1000234F0();
    sub_1000A0D94();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_100070860()
{
  sub_10002066C();
  uint64_t v79 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  v76[4] = type metadata accessor for Logger();
  sub_100022284();
  v76[3] = v6;
  __chkstk_darwin(v7);
  sub_1000167F4();
  v76[5] = v8;
  uint64_t v9 = type metadata accessor for RootNavigationDestination();
  sub_100022284();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_100024100();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v76 - v14;
  type metadata accessor for IndexSet();
  sub_100022284();
  uint64_t v77 = v17;
  uint64_t v78 = v16;
  __chkstk_darwin(v16);
  sub_10001888C();
  uint64_t v20 = v19 - v18;
  sub_1000714A4();
  unint64_t v86 = v21;
  swift_getObjectType();
  uint64_t v22 = dispatch thunk of SidebarSection.destinations.getter();
  uint64_t v23 = _swiftEmptyArrayStorage;
  unint64_t v88 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v24 = *(void *)(v22 + 16);
  uint64_t v80 = v20;
  if (v24)
  {
    v76[1] = v5;
    v76[2] = v3;
    uint64_t v27 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
    uint64_t v26 = v11 + 16;
    uint64_t v25 = v27;
    unint64_t v28 = (*(unsigned __int8 *)(v26 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 64);
    v76[0] = v22;
    unint64_t v29 = v22 + v28;
    unint64_t v85 = *(void *)(v26 + 56);
    LODWORD(v84) = enum case for RootNavigationDestination.folder(_:);
    unint64_t v81 = v26 + 80;
    uint64_t v82 = (uint64_t)v27;
    uint64_t v83 = v26;
    do
    {
      v25(v15, v29, v9);
      v25(v1, (unint64_t)v15, v9);
      uint64_t v30 = sub_100021F6C();
      int v32 = v31(v30);
      if (v32 == v84)
      {
        uint64_t v33 = sub_100021F6C();
        v34(v33);
        sub_100018D08();
        v36(v35);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1000150B4();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        uint64_t v25 = (void (*)(char *, unint64_t, uint64_t))v82;
      }
      else
      {
        uint64_t v37 = *(void (**)(uint64_t))(v26 - 8);
        sub_100021F6C();
        sub_100018D08();
        v37(v38);
        ((void (*)(char *, uint64_t))v37)(v15, v9);
      }
      v29 += v85;
      --v24;
    }
    while (v24);
    uint64_t v23 = (void *)v88;
  }
  swift_bridgeObjectRelease();
  unint64_t v88 = (unint64_t)v23;
  sub_100025A08(&qword_1000F6B58);
  sub_10001E88C(&qword_1000F6B60, &qword_1000F6B58);
  MutableCollection.move(fromOffsets:toOffset:)();
  IndexSet.init()();
  unint64_t v39 = v88;
  if (v88 >> 62) {
    goto LABEL_56;
  }
  uint64_t v40 = *(void *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (2)
  {
    unint64_t v41 = v86;
    if (v40)
    {
      if (v86 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v42 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v42 = *(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      unint64_t v43 = 0;
      unint64_t v81 = v39 + 32;
      uint64_t v82 = v39 & 0xFFFFFFFFFFFFFF8;
      unint64_t v84 = v39 & 0xC000000000000001;
      unint64_t v85 = v41 & 0xC000000000000001;
      uint64_t v83 = v40;
      while (1)
      {
        if (v84)
        {
          id v44 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v43 >= *(void *)(v82 + 16)) {
            goto LABEL_55;
          }
          id v44 = *(id *)(v81 + 8 * v43);
        }
        uint64_t v45 = v44;
        unint64_t v46 = v43 + 1;
        if (__OFADD__(v43, 1))
        {
          __break(1u);
          goto LABEL_54;
        }
        if (v42) {
          break;
        }

LABEL_30:
        ++v43;
        if (v46 == v40) {
          goto LABEL_46;
        }
      }
      if (v85)
      {
        swift_bridgeObjectRetain();
        id v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v47 = *(void **)(v41 + 32);
        swift_bridgeObjectRetain();
        id v48 = v47;
      }
      uint64_t v49 = v48;
      sub_100029C7C(0, &qword_1000F51A0);
      char v50 = static NSObject.== infix(_:_:)();

      if (v50) {
        goto LABEL_25;
      }
      if (v42 != 1)
      {
        if (v85) {
          id v51 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v51 = *(id *)(v86 + 40);
        }
        uint64_t v52 = v51;
        char v53 = static NSObject.== infix(_:_:)();

        if (v53)
        {
LABEL_25:
          unint64_t v41 = v86;
          swift_bridgeObjectRelease();
          IndexSet.insert(_:)(v43);

LABEL_29:
          uint64_t v40 = v83;
          goto LABEL_30;
        }
        if (v42 != 2)
        {
          uint64_t v54 = 6;
          while (1)
          {
            id v55 = v85 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v86 + 8 * v54);
            uint64_t v56 = v55;
            uint64_t v57 = v54 - 3;
            if (__OFADD__(v54 - 4, 1)) {
              break;
            }
            char v58 = static NSObject.== infix(_:_:)();

            if (v58) {
              goto LABEL_25;
            }
            ++v54;
            if (v57 == v42) {
              goto LABEL_28;
            }
          }
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          sub_100016D70();
          uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          continue;
        }
      }
LABEL_28:

      unint64_t v41 = v86;
      swift_bridgeObjectRelease();
      goto LABEL_29;
    }
    break;
  }
LABEL_46:
  swift_bridgeObjectRelease();
  uint64_t v59 = *(void **)(v79 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_database);
  sub_100029C7C(0, &qword_1000F51A0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v61 = v80;
  IndexSet._bridgeToObjectiveC()(v62);
  uint64_t v64 = v63;
  v89[0] = 0;
  unsigned int v65 = [v59 moveCollections:isa toIndexes:v63 error:v89];

  if (v65)
  {
    uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
    id v67 = v89[0];
    v66(v61, v78);
  }
  else
  {
    id v68 = v89[0];
    sub_1000234F0();
    _convertNSErrorToError(_:)();

    swift_willThrow();
    static WFLog.subscript.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v69 = Logger.logObject.getter();
    os_log_type_t v70 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = (uint8_t *)sub_100021F04();
      v89[0] = (id)sub_100025D78();
      *(_DWORD *)uint64_t v71 = 136446210;
      swift_getErrorValue();
      uint64_t v72 = Error.localizedDescription.getter();
      uint64_t v87 = sub_10002D53C(v72, v73, (uint64_t *)v89);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v69, v70, "Unable to move folders: %{public}s", v71, 0xCu);
      swift_arrayDestroy();
      sub_100021DC0();
      sub_100021DC0();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
    }
    swift_errorRelease();
    sub_100016618();
    v75(v74);
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v61, v78);
  }
  sub_10001885C();
}

uint64_t sub_10007104C()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_1000234F0();
    sub_1000A1000();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1000710A8(void *a1, char a2)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    v5._rawValue = a1;
    sub_1000A0E34(v5, a2 & 1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100071120@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (swift_unknownObjectWeakLoadStrong())
  {
    if (a1 >> 62) {
      goto LABEL_21;
    }
    unint64_t v37 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v37 > 1)
    {
      uint64_t v29 = a2;
      swift_bridgeObjectRetain();
      while (1)
      {
        Swift::Int v5 = 0;
        uint64_t v6 = *(void **)&v2[OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_database];
        unint64_t v7 = a1 & 0xC000000000000001;
        a2 = 4;
        unint64_t v8 = a1;
        while (1)
        {
          uint64_t v9 = v7
             ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
             : (char *)*(id *)(a1 + 8 * a2);
          uint64_t v2 = v9;
          a1 = a2 - 3;
          if (__OFADD__(a2 - 4, 1)) {
            break;
          }
          id v10 = [v6 sortedVisibleWorkflowsInCollection:v9];
          id v11 = [v10 count];

          BOOL v12 = __OFADD__(v5, v11);
          v5 += (Swift::Int)v11;
          if (v12) {
            goto LABEL_20;
          }
          ++a2;
          BOOL v13 = v5 > 1 || a1 == v37;
          a1 = v8;
          if (v13) {
            goto LABEL_16;
          }
        }
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        swift_bridgeObjectRetain();
        uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v22 <= 1) {
          break;
        }
        uint64_t v29 = a2;
        swift_bridgeObjectRetain();
        unint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
        if (!v37)
        {
          Swift::Int v5 = 0;
LABEL_16:
          swift_bridgeObjectRelease();
          sub_1000A0EE0((Swift::OpaquePointer)a1, v5, 0, v31);
          unint64_t v37 = v31[0];
          uint64_t v14 = v31[2];
          uint64_t v30 = v31[1];
          Swift::Int v15 = v31[3];
          uint64_t v16 = v31[4];
          uint64_t v17 = v31[5];
          uint64_t v18 = v31[6];
          uint64_t v19 = v31[7];
          sub_100080120((uint64_t)v31, (uint64_t)v33, &qword_1000F6B48);
          if (v34)
          {
            uint64_t result = swift_unknownObjectRelease();
            a2 = v29;
            goto LABEL_31;
          }
LABEL_32:
          sub_10007D120();
          swift_allocError();
          unsigned char *v28 = 1;
          swift_willThrow();
          return swift_unknownObjectRelease();
        }
      }
    }
    swift_retain();
    uint64_t result = (uint64_t)sub_10006EE64(a1, (uint64_t)v2);
    uint64_t v23 = *(void *)(result + 16);
    if (v23)
    {
      uint64_t v24 = 0;
      Swift::Int v15 = 0;
      do
      {
        uint64_t v25 = *(void *)(result + 8 * v24 + 32);
        BOOL v12 = __OFADD__(v15, v25);
        v15 += v25;
        if (v12)
        {
          __break(1u);
          return result;
        }
        ++v24;
      }
      while (v23 != v24);
      swift_bridgeObjectRelease();
      if (!v15)
      {
        uint64_t result = swift_unknownObjectRelease();
        unint64_t v26 = 0;
        uint64_t v27 = 0;
        uint64_t v14 = 0;
        goto LABEL_35;
      }
      sub_1000A0EE0((Swift::OpaquePointer)a1, v15, 1, v32);
      unint64_t v37 = v32[0];
      uint64_t v14 = v32[2];
      uint64_t v30 = v32[1];
      Swift::Int v15 = v32[3];
      uint64_t v16 = v32[4];
      uint64_t v17 = v32[5];
      uint64_t v18 = v32[6];
      uint64_t v19 = v32[7];
      sub_100080120((uint64_t)v32, (uint64_t)v35, &qword_1000F6B48);
      if (!v36) {
        goto LABEL_32;
      }
      uint64_t result = swift_unknownObjectRelease();
LABEL_31:
      unint64_t v26 = v37;
      uint64_t v27 = v30;
    }
    else
    {
      swift_unknownObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v26 = 0;
      uint64_t v27 = 0;
      uint64_t v14 = 0;
      Swift::Int v15 = 0;
LABEL_35:
      uint64_t v16 = 0;
      uint64_t v17 = 0;
      uint64_t v18 = 0;
      uint64_t v19 = 0;
    }
    *(void *)a2 = v26;
    *(void *)(a2 + 8) = v27;
    *(void *)(a2 + 16) = v14;
    *(void *)(a2 + 24) = v15;
    *(void *)(a2 + 32) = v16;
    *(void *)(a2 + 40) = v17;
    *(void *)(a2 + 48) = v18;
    *(void *)(a2 + 56) = v19;
  }
  else
  {
    sub_10007D120();
    swift_allocError();
    *unint64_t v21 = 0;
    return swift_willThrow();
  }
  return result;
}

void sub_1000714A4()
{
  sub_10002066C();
  uint64_t v1 = type metadata accessor for RootNavigationDestination();
  sub_100022284();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_10002206C();
  swift_unknownObjectRetain();
  Swift::Int v5 = sub_10006F028();
  uint64_t v6 = v5[2];
  if (v6)
  {
    uint64_t v9 = *(void (**)(id *, char *, uint64_t))(v3 + 16);
    uint64_t v7 = v3 + 16;
    unint64_t v8 = v9;
    id v10 = (char *)v5 + ((*(unsigned __int8 *)(v7 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 64));
    uint64_t v11 = *(void *)(v7 + 56);
    BOOL v12 = (unsigned int (**)(id *, uint64_t))(v7 + 72);
    int v13 = enum case for RootNavigationDestination.folder(_:);
    uint64_t v21 = v11;
    int v20 = enum case for RootNavigationDestination.folder(_:);
    do
    {
      v8(v0, v10, v1);
      if ((*v12)(v0, v1) == v13)
      {
        uint64_t v14 = v7;
        uint64_t v15 = sub_100080484();
        v16(v15);
        id v17 = *v0;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1000150B4();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        uint64_t v7 = v14;
        uint64_t v11 = v21;
        int v13 = v20;
      }
      else
      {
        uint64_t v18 = sub_100080484();
        v19(v18);
      }
      v10 += v11;
      --v6;
    }
    while (v6);
  }
  swift_bridgeObjectRelease();
  sub_10001885C();
}

void sub_100071678()
{
  sub_10002066C();
  uint64_t v2 = v1;
  type metadata accessor for Logger();
  sub_100022284();
  __chkstk_darwin(v3);
  sub_10002206C();
  uint64_t v4 = sub_100025A08(&qword_1000F5130);
  uint64_t v5 = sub_1000165CC(v4);
  __chkstk_darwin(v5);
  sub_1000165D8();
  sub_100071120((unint64_t)v2, (uint64_t)v8);
  sub_100080120((uint64_t)v8, (uint64_t)&v9, &qword_1000F6B48);
  if (v10)
  {
    v15[0] = v2;
    v15[1] = v9;
    long long v16 = v11;
    long long v17 = v12;
    void v15[2] = v10;
    uint64_t v18 = v13;
    uint64_t v19 = v14;
    swift_bridgeObjectRetain();
    sub_1000706BC((uint64_t)v15);
    uint64_t v6 = type metadata accessor for RootNavigationDestination();
    sub_10001C094();
    sub_100080458();
    v7();
    sub_100021594(v0, 0, 1, v6);
    sub_100070584(v0);
  }
  else
  {
    sub_1000710A8(v2, 0);
  }
  sub_10001885C();
}

void sub_100071970()
{
  sub_10002066C();
  uint64_t v2 = v1;
  unint64_t v4 = v3;
  type metadata accessor for RootNavigationDestination.DropBehavior();
  sub_100022284();
  uint64_t v40 = v6;
  uint64_t v41 = v5;
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v5);
  unint64_t v39 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100025A08(&qword_1000F5100);
  uint64_t v10 = sub_1000165CC(v9);
  __chkstk_darwin(v10);
  sub_1000167F4();
  uint64_t v42 = v11;
  unint64_t v43 = (unint64_t)_swiftEmptyArrayStorage;
  if (!(v4 >> 62))
  {
    uint64_t v12 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v12) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    unint64_t v19 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_19;
    }
    goto LABEL_16;
  }
  sub_100016D70();
  uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
  if (!v12) {
    goto LABEL_15;
  }
LABEL_3:
  uint64_t v38 = v0;
  sub_100029C7C(0, (unint64_t *)&unk_1000F70A0);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  if (v12 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v14 = ObjCClassFromMetadata;
  uint64_t v37 = v2;
  uint64_t v15 = v8;
  for (uint64_t i = 0; i != v12; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0) {
      id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v17 = *(id *)(v4 + 8 * i + 32);
    }
    uint64_t v18 = v17;
    if ([v17 canLoadObjectOfClass:v14])
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      sub_100021F6C();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v19 = v43;
  uint64_t v8 = v15;
  uint64_t v0 = v38;
  if ((v43 & 0x8000000000000000) != 0)
  {
LABEL_19:
    swift_retain();
    uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    if (!v34) {
      goto LABEL_20;
    }
LABEL_18:
    uint64_t v20 = type metadata accessor for TaskPriority();
    sub_100021594(v42, 1, 1, v20);
    uint64_t v21 = v0 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_delegate;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    uint64_t v37 = *(void *)(v21 + 8);
    uint64_t v38 = Strong;
    uint64_t v23 = v39;
    uint64_t v24 = v40;
    uint64_t v25 = v0;
    uint64_t v26 = v41;
    sub_1000205E8();
    v27();
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v28 = static MainActor.shared.getter();
    unint64_t v29 = (*(unsigned __int8 *)(v24 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    unint64_t v30 = (v8 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v31 = (char *)swift_allocObject();
    *((void *)v31 + 2) = v28;
    *((void *)v31 + 3) = &protocol witness table for MainActor;
    *((void *)v31 + 4) = v19;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v31[v29], v23, v26);
    *(void *)&v31[v30] = v25;
    int v32 = (uint64_t *)&v31[(v30 + 15) & 0xFFFFFFFFFFFFFFF8];
    uint64_t v33 = v37;
    *int v32 = v38;
    v32[1] = v33;
    sub_10002B210(v42, (uint64_t)&unk_1000F6AE0, (uint64_t)v31);
    swift_release();
    sub_10001885C();
    return;
  }
LABEL_16:
  if ((v19 & 0x4000000000000000) != 0) {
    goto LABEL_19;
  }
  if (*(void *)(v19 + 16)) {
    goto LABEL_18;
  }
LABEL_20:
  sub_10001885C();
  swift_release();
}

uint64_t sub_100071CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[6] = a7;
  v8[7] = a8;
  v8[4] = a5;
  v8[5] = a6;
  v8[3] = a4;
  uint64_t v9 = type metadata accessor for RootNavigationDestination.DropBehavior();
  v8[8] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[9] = v10;
  v8[10] = *(void *)(v10 + 64);
  v8[11] = swift_task_alloc();
  sub_100025A08(&qword_1000F5100);
  v8[12] = swift_task_alloc();
  v8[13] = type metadata accessor for MainActor();
  v8[14] = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  v8[15] = v12;
  v8[16] = v11;
  return _swift_task_switch(sub_100071DF8, v12, v11);
}

uint64_t sub_100071DF8()
{
  uint64_t v1 = v0[3];
  sub_100025A08(&qword_1000F6AE8);
  v0[17] = static MainActor.shared.getter();
  uint64_t v2 = swift_task_alloc();
  v0[18] = v2;
  *(void *)(v2 + 16) = v1;
  sub_100025A08(&qword_1000F6B00);
  unint64_t v3 = (void *)swift_task_alloc();
  v0[19] = v3;
  *unint64_t v3 = v0;
  v3[1] = sub_100071F1C;
  uint64_t v4 = sub_1000235B4();
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v4);
}

uint64_t sub_100071F1C()
{
  sub_10002348C();
  sub_10001FB2C();
  uint64_t v2 = *v1;
  sub_1000188C4();
  *unint64_t v3 = v2;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 120);
  return _swift_task_switch(sub_10007204C, v5, v4);
}

uint64_t sub_10007204C()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[9];
  uint64_t v19 = v0[7];
  uint64_t v16 = v0[6];
  uint64_t v17 = v0[10];
  uint64_t v14 = v0[5];
  uint64_t v15 = v0[8];
  swift_release();
  uint64_t v18 = v0[2];
  uint64_t v4 = type metadata accessor for TaskPriority();
  sub_100021594(v2, 1, 1, v4);
  sub_1000205E8();
  v5();
  swift_unknownObjectRetain();
  swift_retain();
  uint64_t v6 = static MainActor.shared.getter();
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v8 = (v17 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v6;
  *(void *)(v10 + 24) = &protocol witness table for MainActor;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v10 + v7, v1, v15);
  *(void *)(v10 + v8) = v14;
  *(void *)(v10 + v9) = v18;
  uint64_t v11 = (void *)(v10 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v11 = v16;
  v11[1] = v19;
  sub_10002B210(v2, (uint64_t)&unk_1000F6B10, v10);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100022638();
  return v12();
}

uint64_t sub_100072200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[12] = a2;
  v3[13] = a3;
  v3[11] = a1;
  sub_100025A08(&qword_1000F5100);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  uint64_t v4 = sub_100025A08(&qword_1000F6B18);
  v3[16] = v4;
  v3[17] = *(void *)(v4 - 8);
  v3[18] = swift_task_alloc();
  v3[19] = type metadata accessor for MainActor();
  v3[20] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[21] = v6;
  v3[22] = v5;
  return _swift_task_switch(sub_100072340, v6, v5);
}

uint64_t sub_100072340()
{
  unint64_t v1 = *(void *)(v0 + 104);
  *(void *)(v0 + 72) = _swiftEmptyArrayStorage;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v2 = v3;
    if (!v3) {
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v3 = swift_bridgeObjectRetain();
    if (!v2) {
      goto LABEL_17;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    return TaskGroup.Iterator.next(isolation:)(v3);
  }
  uint64_t v4 = 0;
  unint64_t v26 = v1 & 0xC000000000000001;
  uint64_t v25 = *(void *)(v0 + 104) + 32;
  do
  {
    if (v26) {
      id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v5 = *(id *)(v25 + 8 * v4);
    }
    uint64_t v6 = v5;
    uint64_t v8 = *(void *)(v0 + 112);
    uint64_t v7 = *(void *)(v0 + 120);
    uint64_t v9 = type metadata accessor for TaskPriority();
    sub_10001681C();
    sub_100021594(v10, v11, v12, v9);
    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    v13[4] = v6;
    sub_100016574(v7, v8, &qword_1000F5100);
    LODWORD(v7) = sub_1000225EC(v8, 1, v9);
    id v14 = v6;
    if (v7 == 1)
    {
      sub_100025E44(*(void *)(v0 + 112), &qword_1000F5100);
    }
    else
    {
      TaskPriority.rawValue.getter();
      sub_100012D7C();
      sub_100016618();
      v15();
    }
    if (v13[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v18 = v17;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v16 = 0;
      uint64_t v18 = 0;
    }
    uint64_t v19 = **(void **)(v0 + 96);
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = &unk_1000F6B30;
    *(void *)(v20 + 24) = v13;
    sub_100025A08(&qword_1000F6AE8);
    uint64_t v21 = v18 | v16;
    if (v18 | v16)
    {
      uint64_t v21 = v0 + 16;
      *(void *)(v0 + 16) = 0;
      *(void *)(v0 + 24) = 0;
      *(void *)(v0 + 32) = v16;
      *(void *)(v0 + 40) = v18;
    }
    ++v4;
    uint64_t v22 = *(void *)(v0 + 120);
    *(void *)(v0 + 48) = 1;
    *(void *)(v0 + 56) = v21;
    *(void *)(v0 + 64) = v19;
    swift_task_create();
    swift_release();
    sub_100025E44(v22, &qword_1000F5100);
  }
  while (v2 != v4);
LABEL_17:
  swift_bridgeObjectRelease();
  sub_100025A08(&qword_1000F6AE8);
  TaskGroup.makeAsyncIterator()();
  *(void *)(v0 + 184) = static MainActor.shared.getter();
  uint64_t v23 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_1000726C4;
  uint64_t v3 = sub_1000235B4();
  return TaskGroup.Iterator.next(isolation:)(v3);
}

uint64_t sub_1000726C4()
{
  sub_10002348C();
  sub_10001FB2C();
  uint64_t v2 = *v1;
  sub_1000188C4();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  swift_release();
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v5 = *(void *)(v0 + 168);
  return _swift_task_switch(sub_1000727D8, v5, v4);
}

uint64_t sub_1000727D8()
{
  unint64_t v1 = (void *)v0[10];
  if (v1 == (void *)1)
  {
    uint64_t v5 = (void *)v0[11];
    (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
    swift_release();
    *uint64_t v5 = v0[9];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_100022638();
    return v6();
  }
  else
  {
    if (v1)
    {
      id v2 = v1;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v0[9] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v0[9] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1000150B4();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      sub_100026E90(v1);
    }
    v0[23] = static MainActor.shared.getter();
    uint64_t v3 = (void *)swift_task_alloc();
    v0[24] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1000726C4;
    uint64_t v4 = sub_1000235B4();
    return TaskGroup.Iterator.next(isolation:)(v4);
  }
}

uint64_t sub_10007297C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a4;
  return _swift_task_switch(sub_10007299C, 0, 0);
}

uint64_t sub_10007299C()
{
  sub_100018A44();
  uint64_t v1 = v0[3];
  uint64_t v2 = swift_task_alloc();
  v0[4] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  uint64_t v4 = sub_100025A08(&qword_1000F6AE8);
  *uint64_t v3 = v0;
  v3[1] = sub_100072A90;
  uint64_t v5 = v0[2];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD00000000000001BLL, 0x80000001000C18A0, sub_10007D030, v2, v4);
}

uint64_t sub_100072A90()
{
  sub_100018A44();
  sub_10001C0E8();
  uint64_t v1 = *v0;
  sub_1000188C4();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100022638();
  return v3();
}

void sub_100072B6C(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_100025A08(&qword_1000F6B40);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  sub_100029C7C(0, (unint64_t *)&unk_1000F70A0);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_10007D0C0;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10006F3E0;
  aBlock[3] = &unk_1000E6D60;
  uint64_t v10 = _Block_copy(aBlock);
  swift_release();
  id v11 = [a2 loadObjectOfClass:ObjCClassFromMetadata completionHandler:v10];
  _Block_release(v10);
}

uint64_t sub_100072D48(uint64_t a1)
{
  if (a1)
  {
    self;
    if (swift_dynamicCastObjCClass()) {
      swift_unknownObjectRetain();
    }
  }
  sub_100025A08(&qword_1000F6B40);
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_100072DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[15] = a6;
  v7[16] = a7;
  v7[13] = a4;
  v7[14] = a5;
  uint64_t v8 = type metadata accessor for Logger();
  v7[17] = v8;
  v7[18] = *(void *)(v8 - 8);
  v7[19] = swift_task_alloc();
  v7[20] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for RootNavigationDestination.DropBehavior();
  v7[21] = v9;
  v7[22] = *(void *)(v9 - 8);
  v7[23] = swift_task_alloc();
  type metadata accessor for MainActor();
  v7[24] = static MainActor.shared.getter();
  uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100072F64, v11, v10);
}

uint64_t sub_100072F64()
{
  uint64_t v28 = v0;
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[22];
  swift_release();
  sub_1000205E8();
  v4();
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v1, v2);
  if (v5 == enum case for RootNavigationDestination.DropBehavior.intoCollection(_:))
  {
    uint64_t v6 = (void **)v0[23];
    (*(void (**)(void **, void))(v0[22] + 96))(v6, v0[21]);
    uint64_t v7 = *v6;
    LOBYTE(v27) = 1;
    dispatch thunk of ShortcutMoveService.prepend(_:to:source:)();
    goto LABEL_6;
  }
  if (v5 == enum case for RootNavigationDestination.DropBehavior.intoCollectionWithType(_:))
  {
    uint64_t v8 = (void **)v0[23];
    uint64_t v9 = v0[14];
    (*(void (**)(void **, void))(v0[22] + 96))(v8, v0[21]);
    uint64_t v7 = *v8;
    uint64_t v10 = *(void **)(v9 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_database);
    sub_100029C7C(0, (unint64_t *)&unk_1000F70A0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    v0[11] = 0;
    LODWORD(v10) = [v10 prependReferences:isa toCollectionWithType:v7 error:v0 + 11];

    uint64_t v12 = (void *)v0[11];
    if (!v10)
    {
      id v14 = v12;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      static WFLog.subscript.getter();
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.error.getter();
      BOOL v17 = os_log_type_enabled(v15, v16);
      uint64_t v18 = v0[18];
      uint64_t v19 = v0[19];
      uint64_t v20 = v0[17];
      if (v17)
      {
        uint64_t v26 = v0[19];
        uint64_t v21 = (uint8_t *)sub_100021F04();
        uint64_t v27 = sub_100025D78();
        *(_DWORD *)uint64_t v21 = 136315138;
        swift_getErrorValue();
        uint64_t v22 = Error.localizedDescription.getter();
        v0[9] = sub_10002D53C(v22, v23, &v27);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "Unable to move workflows: %s", v21, 0xCu);
        swift_arrayDestroy();
        sub_100021DC0();
        sub_100021DC0();

        swift_errorRelease();
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v26, v20);
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();

        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v20);
      }
LABEL_12:
      if (v0[16]) {
        sub_1000A11B8();
      }
      goto LABEL_14;
    }
    id v13 = v12;
LABEL_6:

    goto LABEL_12;
  }
  if (v5 != enum case for RootNavigationDestination.DropBehavior.none(_:)) {
    (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);
  }
LABEL_14:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100022638();
  return v24();
}

uint64_t sub_100073518()
{
  type metadata accessor for SidebarStyle();
  sub_10001C094();
  sub_100016618();
  v1();

  swift_bridgeObjectRelease();
  swift_release();
  sub_100025A08(&qword_1000F68C0);
  sub_10001C094();
  uint64_t v3 = *(void (**)(void))(v2 + 8);
  sub_1000189C8();
  v3();
  sub_100025E44(v0 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_lastSelectedDestination, &qword_1000F5130);
  sub_100025A08(&qword_1000F68B8);
  sub_10001C094();
  sub_100016618();
  v4();
  sub_100025A08(&qword_1000F6B68);
  sub_10001C094();
  sub_100016618();
  v5();
  sub_100025A08(&qword_1000F68B0);
  sub_10001C094();
  sub_100016618();
  v6();
  sub_1000189C8();
  v3();
  sub_100025A08(&qword_1000F68A8);
  sub_10001C094();
  sub_100016618();
  v7();
  sub_100025A08(&qword_1000F68A0);
  sub_10001C094();
  sub_100016618();
  v8();
  sub_10002D6C4(v0 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_delegate);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100073764()
{
  sub_100073518();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_1000737BC()
{
  return type metadata accessor for SidebarView.DataSource(0);
}

uint64_t *sub_1000737C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for RootNavigationDestination();
    swift_retain();
    if (sub_1000225EC((uint64_t)v8, 1, v9))
    {
      uint64_t v10 = sub_100025A08(&qword_1000F5130);
      memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      sub_100021594((uint64_t)v7, 0, 1, v9);
    }
    uint64_t v12 = sub_100025A08(&qword_1000F67F8);
    *(void *)&v7[*(int *)(v12 + 28)] = *(void *)&v8[*(int *)(v12 + 28)];
  }
  swift_retain();
  return v3;
}

uint64_t sub_100073914(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for RootNavigationDestination();
  if (!sub_1000225EC(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  sub_100025A08(&qword_1000F67F8);

  return swift_release();
}

void *sub_1000739BC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for RootNavigationDestination();
  swift_retain();
  if (sub_1000225EC((uint64_t)v7, 1, v8))
  {
    uint64_t v9 = sub_100025A08(&qword_1000F5130);
    memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
    sub_100021594((uint64_t)v6, 0, 1, v8);
  }
  uint64_t v10 = sub_100025A08(&qword_1000F67F8);
  *(void *)&v6[*(int *)(v10 + 28)] = *(void *)&v7[*(int *)(v10 + 28)];
  swift_retain();
  return a1;
}

void *sub_100073AC0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for RootNavigationDestination();
  int v10 = sub_1000225EC((uint64_t)v7, 1, v9);
  int v11 = sub_1000225EC((uint64_t)v8, 1, v9);
  if (!v10)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_100025A08(&qword_1000F5130);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  sub_100021594((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v14 = sub_100025A08(&qword_1000F67F8);
  *(void *)&v7[*(int *)(v14 + 28)] = *(void *)&v8[*(int *)(v14 + 28)];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_100073C68(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for RootNavigationDestination();
  if (sub_1000225EC((uint64_t)v6, 1, v7))
  {
    uint64_t v8 = sub_100025A08(&qword_1000F5130);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
    sub_100021594((uint64_t)v5, 0, 1, v7);
  }
  uint64_t v9 = sub_100025A08(&qword_1000F67F8);
  *(void *)&v5[*(int *)(v9 + 28)] = *(void *)&v6[*(int *)(v9 + 28)];
  return a1;
}

void *sub_100073D58(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for RootNavigationDestination();
  int v11 = sub_1000225EC((uint64_t)v8, 1, v10);
  int v12 = sub_1000225EC((uint64_t)v9, 1, v10);
  if (!v11)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = sub_100025A08(&qword_1000F5130);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  sub_100021594((uint64_t)v8, 0, 1, v10);
LABEL_7:
  uint64_t v15 = sub_100025A08(&qword_1000F67F8);
  *(void *)&v8[*(int *)(v15 + 28)] = *(void *)&v9[*(int *)(v15 + 28)];
  swift_release();
  return a1;
}

uint64_t sub_100073EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100073EFC);
}

uint64_t sub_100073EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_100020570(*(void *)(a1 + 8));
  }
  uint64_t v7 = sub_100025A08(&qword_1000F67F8);
  uint64_t v8 = a1 + *(int *)(a3 + 20);

  return sub_1000225EC(v8, a2, v7);
}

uint64_t sub_100073F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100073F90);
}

uint64_t sub_100073F90(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100025A08(&qword_1000F67F8);
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return sub_100021594(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SidebarView(uint64_t a1)
{
  return sub_10001C010(a1, (uint64_t *)&unk_1000F6858);
}

void sub_100074034()
{
  sub_10000A348(319, (unint64_t *)&unk_1000F6868, &qword_1000F5130, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1000740F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007410C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SidebarView.DataSource(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10007414C()
{
  uint64_t v0 = type metadata accessor for SidebarView(0);
  __chkstk_darwin(v0 - 8);
  sub_10007C7B4();
  type metadata accessor for MainActor();
  uint64_t v1 = static MainActor.shared.getter();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = &protocol witness table for MainActor;
  sub_10007FB14();
  sub_10007C7B4();
  uint64_t v3 = static MainActor.shared.getter();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = &protocol witness table for MainActor;
  sub_10007FB14();
  Binding.init(get:set:)();
  return v6;
}

uint64_t sub_100074324@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v37 = sub_100025A08(&qword_1000F6960);
  __chkstk_darwin(v37);
  uint64_t v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100025A08(&qword_1000F5130);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v36 = (uint64_t)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v32 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  int v12 = (char *)&v32 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v32 - v13;
  uint64_t v15 = type metadata accessor for RootNavigationDestination();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v35 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v32 - v19;
  type metadata accessor for SidebarView(0);
  sub_100025A08(&qword_1000F67F8);
  State.wrappedValue.getter();
  if (sub_1000225EC((uint64_t)v14, 1, v15) == 1)
  {
    uint64_t result = sub_100025E44((uint64_t)v14, &qword_1000F5130);
    char v22 = 0;
  }
  else
  {
    uint64_t v34 = a1;
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v33(v20, v14, v15);
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v12, v20, v15);
    sub_100021594((uint64_t)v12, 0, 1, v15);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v23 = (uint64_t)&v3[*(int *)(v37 + 48)];
    uint64_t v24 = &qword_1000F5130;
    sub_100016574((uint64_t)v12, (uint64_t)v3, &qword_1000F5130);
    sub_100016574((uint64_t)v9, v23, &qword_1000F5130);
    if (sub_1000225EC((uint64_t)v3, 1, v15) == 1)
    {
      sub_100025E44((uint64_t)v9, &qword_1000F5130);
      sub_100025E44((uint64_t)v12, &qword_1000F5130);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v15);
      if (sub_1000225EC(v23, 1, v15) == 1)
      {
        char v25 = -1;
      }
      else
      {
        uint64_t v24 = &qword_1000F6960;
        char v25 = 0;
      }
    }
    else
    {
      uint64_t v26 = v36;
      sub_100016574((uint64_t)v3, v36, &qword_1000F5130);
      if (sub_1000225EC(v23, 1, v15) == 1)
      {
        sub_100025E44((uint64_t)v9, &qword_1000F5130);
        sub_100025E44((uint64_t)v12, &qword_1000F5130);
        uint64_t v27 = *(void (**)(char *, uint64_t))(v16 + 8);
        v27(v20, v15);
        v27((char *)v26, v15);
        char v25 = 0;
        uint64_t v24 = &qword_1000F6960;
      }
      else
      {
        uint64_t v37 = (uint64_t)v3;
        uint64_t v28 = v35;
        v33(v35, (char *)v23, v15);
        sub_10002CF08(&qword_1000F5198, (void (*)(uint64_t))&type metadata accessor for RootNavigationDestination);
        uint64_t v29 = v26;
        char v25 = dispatch thunk of static Equatable.== infix(_:_:)();
        unint64_t v30 = *(void (**)(char *, uint64_t))(v16 + 8);
        uint64_t v31 = v28;
        uint64_t v3 = (char *)v37;
        v30(v31, v15);
        uint64_t v24 = &qword_1000F5130;
        sub_100025E44((uint64_t)v9, &qword_1000F5130);
        sub_100025E44((uint64_t)v12, &qword_1000F5130);
        v30(v20, v15);
        v30((char *)v29, v15);
      }
    }
    a1 = v34;
    uint64_t result = sub_100025E44((uint64_t)v3, v24);
    char v22 = v25 & 1;
  }
  *a1 = v22;
  return result;
}

uint64_t sub_100074830(unsigned char *a1)
{
  uint64_t v2 = sub_100025A08(&qword_1000F5130);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 1)
  {
    type metadata accessor for SidebarView(0);
    swift_retain();
    sub_100025A08(&qword_1000F67F8);
    State.wrappedValue.getter();
  }
  else
  {
    uint64_t v5 = type metadata accessor for RootNavigationDestination();
    sub_100021594((uint64_t)v4, 1, 1, v5);
    swift_retain();
  }
  sub_100070584((uint64_t)v4);
  return swift_release();
}

uint64_t sub_100074920@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1;
  uint64_t v106 = a1;
  uint64_t v4 = sub_100025A08(&qword_1000F6238);
  uint64_t v5 = sub_1000165CC(v4);
  __chkstk_darwin(v5);
  sub_1000167F4();
  uint64_t v105 = v6;
  uint64_t v104 = type metadata accessor for SidebarListStyle();
  sub_100022284();
  uint64_t v102 = v7;
  __chkstk_darwin(v8);
  sub_1000167F4();
  uint64_t v98 = v9;
  uint64_t v86 = sub_100025A08(&qword_1000F68D8);
  sub_100022284();
  uint64_t v83 = v10;
  __chkstk_darwin(v11);
  sub_1000167F4();
  uint64_t v82 = v12;
  uint64_t v13 = sub_100025A08(&qword_1000F68E0);
  uint64_t v14 = sub_1000165CC(v13);
  __chkstk_darwin(v14);
  sub_10001888C();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = sub_100025A08(&qword_1000F68E8);
  sub_10001C094();
  __chkstk_darwin(v19);
  sub_100024100();
  __chkstk_darwin(v20);
  char v22 = (char *)&v81 - v21;
  uint64_t v92 = sub_100025A08(&qword_1000F68F0);
  sub_100022284();
  uint64_t v90 = v23;
  __chkstk_darwin(v24);
  sub_1000167F4();
  uint64_t v87 = v25;
  uint64_t v93 = sub_100025A08(&qword_1000F68F8);
  sub_100022284();
  uint64_t v91 = v26;
  __chkstk_darwin(v27);
  sub_1000167F4();
  uint64_t v89 = v28;
  uint64_t v99 = sub_100025A08(&qword_1000F6900);
  sub_100022284();
  uint64_t v97 = v29;
  __chkstk_darwin(v30);
  sub_1000167F4();
  uint64_t v95 = v31;
  uint64_t v94 = sub_100025A08(&qword_1000F6908);
  sub_10001C094();
  __chkstk_darwin(v32);
  sub_1000167F4();
  uint64_t v101 = v33;
  uint64_t v103 = sub_100025A08(&qword_1000F6910);
  sub_10001C094();
  __chkstk_darwin(v34);
  sub_1000167F4();
  uint64_t v100 = v35;
  uint64_t v36 = sub_100025A08(&qword_1000F6918);
  uint64_t v37 = sub_1000165CC(v36);
  __chkstk_darwin(v37);
  sub_1000167F4();
  uint64_t v96 = v38;
  uint64_t v39 = type metadata accessor for SidebarView.DataSource(0);
  uint64_t v40 = sub_10002CF08(&qword_1000F68D0, (void (*)(uint64_t))type metadata accessor for SidebarView.DataSource);
  uint64_t v84 = v39;
  ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  uint64_t v85 = v40;
  ObservedObject.Wrapper.subscript.getter();
  swift_release();
  swift_release();
  char v41 = *(unsigned char *)(*(void *)(v3 + 8) + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_isCompact);
  sub_100016574(v17, v2, &qword_1000F68E0);
  *(unsigned char *)(v2 + *(int *)(v18 + 52)) = (v41 & 1) == 0;
  sub_100075350();
  sub_100025E44(v17, &qword_1000F68E0);
  uint64_t v88 = v18;
  sub_100020628();
  v42();
  uint64_t v86 = (uint64_t)v22;
  sub_100080120(v2, (uint64_t)v22, &qword_1000F68E8);
  uint64_t v107 = v3;
  swift_retain();
  sub_100070638((uint64_t)v119);
  swift_release();
  sub_100080120((uint64_t)v119, (uint64_t)v120, &qword_1000F64F8);
  sub_100080120((uint64_t)v119, (uint64_t)v121, &qword_1000F64F8);
  if (v121[0])
  {
    uint64_t v44 = v120[0];
    uint64_t v43 = v120[1];
    unint64_t v45 = v120[2];
    uint64_t v83 = (uint64_t *)v120[3];
    swift_bridgeObjectRetain();
    sub_100077BF8(v44);
  }
  else
  {
    uint64_t v43 = 0;
    unint64_t v45 = 0xE000000000000000;
  }
  uint64_t v117 = v43;
  unint64_t v118 = v45;
  sub_10007414C();
  swift_retain();
  sub_100070638((uint64_t)v120);
  swift_release();
  uint64_t v46 = sub_100080120((uint64_t)v120, (uint64_t)&v108, &qword_1000F64F8);
  uint64_t v83 = &v81;
  __chkstk_darwin(v46);
  uint64_t v82 = sub_100025A08(&qword_1000F6920);
  uint64_t v47 = sub_100025A08(&qword_1000F6928);
  uint64_t v48 = sub_10001E88C(&qword_1000F6930, &qword_1000F68E8);
  unint64_t v49 = sub_10002B2A0();
  uint64_t v80 = sub_10001E88C(&qword_1000F6938, &qword_1000F6920);
  uint64_t v50 = v88;
  uint64_t v51 = v86;
  View.confirmationDialog<A, B, C, D>(_:isPresented:titleVisibility:presenting:actions:message:)();
  swift_release();
  swift_release();
  sub_100077BF8(v108);
  swift_bridgeObjectRelease();
  sub_100025E44(v51, &qword_1000F68E8);
  SidebarListStyle.init()();
  uint64_t v108 = v50;
  uint64_t v109 = &type metadata for String;
  uint64_t v110 = v82;
  uint64_t v111 = &type metadata for Text;
  uint64_t v112 = v47;
  uint64_t v113 = v48;
  unint64_t v114 = v49;
  uint64_t v115 = v80;
  id v116 = &protocol witness table for Text;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v53 = v92;
  uint64_t v54 = (void *)v104;
  View.listStyle<A>(_:)();
  sub_100016618();
  v55();
  sub_100016618();
  v56();
  uint64_t v108 = v53;
  uint64_t v109 = v54;
  uint64_t v110 = OpaqueTypeConformance2;
  uint64_t v111 = &protocol witness table for SidebarListStyle;
  swift_getOpaqueTypeConformance2();
  uint64_t v57 = v95;
  View.prefersExpandedSidebars(_:)();
  sub_100016618();
  v58();
  uint64_t KeyPath = swift_getKeyPath();
  ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  uint64_t v60 = v105;
  ObservedObject.Wrapper.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v61 = sub_100025A08(&qword_1000F6308);
  sub_100021594(v60, 0, 1, v61);
  uint64_t v62 = v101;
  uint64_t v63 = (uint64_t *)(v101 + *(int *)(v94 + 36));
  uint64_t v64 = sub_100025A08(&qword_1000F6310);
  sub_100016574(v60, (uint64_t)v63 + *(int *)(v64 + 28), &qword_1000F6238);
  uint64_t *v63 = KeyPath;
  uint64_t v65 = v97;
  uint64_t v66 = v99;
  sub_1000205E8();
  v67();
  sub_100025E44(v60, &qword_1000F6238);
  (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v57, v66);
  LOBYTE(OpaqueTypeConformance2) = static Edge.Set.bottom.getter();
  swift_retain();
  sub_10007072C();
  swift_release();
  EdgeInsets.init(_all:)();
  uint64_t v69 = v68;
  uint64_t v71 = v70;
  uint64_t v73 = v72;
  uint64_t v75 = v74;
  uint64_t v76 = v100;
  sub_100016574(v62, v100, &qword_1000F6908);
  uint64_t v77 = v76 + *(int *)(v103 + 36);
  *(unsigned char *)uint64_t v77 = OpaqueTypeConformance2;
  *(void *)(v77 + 8) = v69;
  *(void *)(v77 + 16) = v71;
  *(void *)(v77 + 24) = v73;
  *(void *)(v77 + 32) = v75;
  *(unsigned char *)(v77 + 40) = 0;
  sub_100025E44(v62, &qword_1000F6908);
  sub_100077CBC();
  uint64_t v78 = v96;
  View.accessibilityIdentifier(_:)();
  sub_100025E44(v76, &qword_1000F6910);
  return sub_100080120(v78, v106, &qword_1000F6918);
}

uint64_t sub_100075350()
{
  uint64_t v0 = type metadata accessor for SidebarView(0);
  __chkstk_darwin(v0 - 8);
  swift_getKeyPath();
  sub_10007C7B4();
  swift_allocObject();
  sub_10007FB14();
  swift_bridgeObjectRetain();
  sub_100025A08(&qword_1000F6968);
  sub_100025A08(&qword_1000F6970);
  sub_10001E88C(&qword_1000F6978, &qword_1000F6968);
  sub_10002CF08(&qword_1000F6980, (void (*)(uint64_t))&type metadata accessor for UUID);
  sub_10007BDBC();
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_10007555C()
{
  return dispatch thunk of SidebarSection.id.getter();
}

uint64_t sub_10007559C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SidebarView(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  swift_getObjectType();
  uint64_t result = dispatch thunk of SidebarSection.shouldDisplay.getter();
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  if (result)
  {
    uint64_t v8 = dispatch thunk of SidebarSection.name.getter();
    uint64_t v9 = v12;
    sub_10007C7B4();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v5;
    *(void *)(v11 + 24) = v6;
    sub_10007FB14();
    uint64_t result = swift_unknownObjectRetain();
    uint64_t v10 = sub_10007BE58;
  }
  *a2 = v8;
  a2[1] = v9;
  a2[2] = (uint64_t)v10;
  a2[3] = v11;
  return result;
}

uint64_t sub_100075724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v84 = a4;
  uint64_t v7 = type metadata accessor for SidebarView(0);
  uint64_t v71 = *(uint64_t (**)(uint64_t))(v7 - 8);
  uint64_t v8 = *((void *)v71 + 8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = sub_100025A08(&qword_1000F69A0);
  uint64_t v74 = *(void *)(v9 - 8);
  uint64_t v75 = v9;
  __chkstk_darwin(v9);
  uint64_t v73 = (char *)v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_100025A08(&qword_1000F69A8);
  __chkstk_darwin(v72);
  uint64_t v78 = (char *)v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_100025A08(&qword_1000F69B0);
  __chkstk_darwin(v76);
  uint64_t v80 = (uint64_t)v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_100025A08(&qword_1000F69B8);
  __chkstk_darwin(v77);
  uint64_t v81 = (uint64_t)v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_100025A08(&qword_1000F69C0);
  __chkstk_darwin(v87);
  uint64_t v82 = (uint64_t)v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100025A08(&qword_1000F69C8);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v79 = (char *)v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v83 = (char *)v62 - v19;
  uint64_t v85 = sub_100025A08(&qword_1000F69D0);
  __chkstk_darwin(v85);
  uint64_t v21 = (char *)v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = type metadata accessor for AutoShortcutsAppGrid(0);
  __chkstk_darwin(v86);
  uint64_t v23 = (void *)((char *)v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for AutoShortcutsSidebarSection();
  if (swift_dynamicCastClass())
  {
    swift_retain();
    sub_100070218();
    swift_release();
    type metadata accessor for SidebarView.DataSource(0);
    sub_10002CF08(&qword_1000F68D0, (void (*)(uint64_t))type metadata accessor for SidebarView.DataSource);
    ObservedObject.projectedValue.getter();
    swift_getKeyPath();
    uint64_t v24 = v86;
    ObservedObject.Wrapper.subscript.getter();
    swift_release();
    swift_release();
    char v25 = *(unsigned char *)(*(void *)(a3 + 8) + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_isCompact);
    type metadata accessor for AutoShortcutsAppsDataSource();
    sub_10002CF08(&qword_1000F6AA8, (void (*)(uint64_t))&type metadata accessor for AutoShortcutsAppsDataSource);
    *uint64_t v23 = ObservedObject.init(wrappedValue:)();
    v23[1] = v26;
    *((unsigned char *)v23 + *(int *)(v24 + 24)) = v25;
    sub_10007C7B4();
    swift_storeEnumTagMultiPayload();
    sub_10002CF08(&qword_1000F6AA0, (void (*)(uint64_t))type metadata accessor for AutoShortcutsAppGrid);
    unint64_t v27 = sub_10007C3E4();
    uint64_t v88 = v87;
    unint64_t v89 = v27;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return sub_10007C828((uint64_t)v23, (void (*)(void))type metadata accessor for AutoShortcutsAppGrid);
  }
  else
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v63 = a1;
    uint64_t v92 = dispatch thunk of SidebarSection.destinations.getter();
    v62[4] = type metadata accessor for SidebarView;
    sub_10007C7B4();
    uint64_t v70 = a2;
    uint64_t v29 = *((unsigned __int8 *)v71 + 80);
    uint64_t v64 = ((v29 + 16) & ~v29) + v8;
    uint64_t v65 = (v29 + 16) & ~v29;
    v62[1] = v29 | 7;
    swift_allocObject();
    uint64_t v71 = type metadata accessor for SidebarView;
    sub_10007FB14();
    v62[3] = a3;
    uint64_t v66 = sub_100025A08((uint64_t *)&unk_1000F71D0);
    v62[2] = sub_100025A08(&qword_1000F69D8);
    sub_10001E88C(&qword_1000F69E0, (uint64_t *)&unk_1000F71D0);
    uint64_t v30 = sub_10001E8D0(&qword_1000F69E8);
    uint64_t v69 = v15;
    uint64_t v31 = v30;
    uint64_t v32 = type metadata accessor for NavigationDestinationEntity();
    unint64_t v33 = sub_10007BFA4();
    uint64_t v68 = v16;
    unint64_t v34 = v33;
    uint64_t v35 = sub_10002CF08(&qword_1000F4678, (void (*)(uint64_t))type metadata accessor for NavigationDestinationEntity);
    uint64_t v88 = v31;
    unint64_t v89 = v32;
    unint64_t v90 = v34;
    uint64_t v91 = v35;
    swift_getOpaqueTypeConformance2();
    sub_10002CF08(&qword_1000F6A30, (void (*)(uint64_t))&type metadata accessor for RootNavigationDestination);
    uint64_t v36 = v73;
    ForEach<>.init(_:content:)();
    sub_10007C7B4();
    uint64_t v37 = swift_allocObject();
    uint64_t v38 = v63;
    uint64_t v66 = (uint64_t)v21;
    uint64_t v39 = v70;
    *(void *)(v37 + 16) = v63;
    *(void *)(v37 + 24) = v39;
    sub_10007FB14();
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = sub_10007C168;
    *(void *)(v40 + 24) = v37;
    uint64_t v42 = v74;
    uint64_t v41 = v75;
    uint64_t v43 = (uint64_t)v78;
    (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v78, v36, v75);
    uint64_t v44 = (uint64_t (**)())(v43 + *(int *)(v72 + 36));
    *uint64_t v44 = sub_10007C240;
    v44[1] = (uint64_t (*)())v40;
    unint64_t v45 = *(void (**)(char *, uint64_t))(v42 + 8);
    swift_unknownObjectRetain();
    v45(v36, v41);
    sub_10007C7B4();
    unint64_t v46 = (v64 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v47 = swift_allocObject();
    sub_10007FB14();
    uint64_t v48 = (void *)(v47 + v46);
    *uint64_t v48 = v38;
    v48[1] = v70;
    uint64_t v49 = swift_allocObject();
    *(void *)(v49 + 16) = sub_10007C330;
    *(void *)(v49 + 24) = v47;
    uint64_t v50 = v80;
    sub_100016574(v43, v80, &qword_1000F69A8);
    uint64_t v51 = (void *)(v50 + *(int *)(v76 + 36));
    *uint64_t v51 = sub_10007C3B8;
    v51[1] = v49;
    swift_unknownObjectRetain();
    sub_100025E44(v43, &qword_1000F69A8);
    sub_10009E5A8();
    LOBYTE(v47) = v52;
    uint64_t v53 = v81;
    sub_100016574(v50, v81, &qword_1000F69B0);
    *(unsigned char *)(v53 + *(int *)(v77 + 36)) = (v47 & 1) == 0;
    sub_100025E44(v50, &qword_1000F69B0);
    sub_10009E5A8();
    LOBYTE(v47) = v54;
    uint64_t v55 = v82;
    sub_100016574(v53, v82, &qword_1000F69B8);
    uint64_t v56 = v87;
    *(unsigned char *)(v55 + *(int *)(v87 + 36)) = (v47 & 1) == 0;
    sub_100025E44(v53, &qword_1000F69B8);
    static VerticalEdge.Set.all.getter();
    unint64_t v57 = sub_10007C3E4();
    char v58 = v79;
    View.listRowSeparator(_:edges:)();
    sub_100025E44(v55, &qword_1000F69C0);
    uint64_t v59 = v68;
    uint64_t v60 = v83;
    uint64_t v61 = v69;
    (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v83, v58, v69);
    (*(void (**)(uint64_t, char *, uint64_t))(v59 + 16))(v66, v60, v61);
    swift_storeEnumTagMultiPayload();
    sub_10002CF08(&qword_1000F6AA0, (void (*)(uint64_t))type metadata accessor for AutoShortcutsAppGrid);
    uint64_t v88 = v56;
    unint64_t v89 = v57;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v60, v61);
  }
}

uint64_t sub_100076338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v75 = a1;
  uint64_t v98 = a3;
  uint64_t v5 = type metadata accessor for RootNavigationDestination();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v71 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_100025A08(&qword_1000F6960) - 8;
  __chkstk_darwin(v93);
  uint64_t v87 = (uint64_t)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_100025A08(&qword_1000F5130);
  uint64_t v9 = __chkstk_darwin(v88);
  uint64_t v72 = (uint64_t)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  unint64_t v89 = (char *)&v71 - v12;
  __chkstk_darwin(v11);
  uint64_t v86 = (char *)&v71 - v13;
  uint64_t v14 = type metadata accessor for AppEntityVisualState();
  uint64_t v96 = *(void *)(v14 - 8);
  uint64_t v97 = v14;
  __chkstk_darwin(v14);
  uint64_t v95 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = type metadata accessor for NavigationDestinationEntity();
  __chkstk_darwin(v94);
  uint64_t v102 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100025A08(&qword_1000F6AB8);
  __chkstk_darwin(v17 - 8);
  uint64_t v85 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100025A08(&qword_1000F6AC0);
  __chkstk_darwin(v19 - 8);
  uint64_t v83 = (char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_100025A08(&qword_1000F6A00) - 8;
  __chkstk_darwin(v84);
  uint64_t v82 = (char *)&v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for UTType();
  uint64_t v22 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v77 = (char *)&v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for DestinationRow(0);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_100025A08(&qword_1000F6AC8);
  uint64_t v80 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v99 = (char *)&v71 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_100025A08(&qword_1000F69E8);
  __chkstk_darwin(v100);
  uint64_t v101 = (char *)&v71 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100025A08(&qword_1000F69D8);
  uint64_t v91 = *(void *)(v29 - 8);
  uint64_t v92 = v29;
  __chkstk_darwin(v29);
  unint64_t v90 = (char *)&v71 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = v6;
  uint64_t v74 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v31 = a1;
  uint64_t v32 = v5;
  v74(v26, v31, v5);
  type metadata accessor for SidebarView(0);
  uint64_t v79 = a2;
  uint64_t v76 = v24;
  sub_100025A08(&qword_1000F67F8);
  State.projectedValue.getter();
  uint64_t v33 = *(void *)(a2 + 8);
  unint64_t v34 = (uint64_t *)&v26[*(int *)(v24 + 24)];
  type metadata accessor for SidebarView.DataSource(0);
  sub_10002CF08(&qword_1000F68D0, (void (*)(uint64_t))type metadata accessor for SidebarView.DataSource);
  swift_retain();
  uint64_t *v34 = ObservedObject.init(wrappedValue:)();
  v34[1] = v35;
  uint64_t v36 = v32;
  sub_100025A08(&qword_1000F63B8);
  unint64_t v37 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1000BAB00;
  unint64_t v39 = v38 + v37;
  id v40 = (id)WFWorkflowReferenceType();
  uint64_t v41 = v77;
  static UTType._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(unint64_t, char *, uint64_t))(v22 + 32))(v39, v41, v78);
  uint64_t v42 = type metadata accessor for SidebarDropDelegate(0);
  v103[3] = v42;
  v103[4] = sub_10002CF08(&qword_1000F6AD0, (void (*)(uint64_t))type metadata accessor for SidebarDropDelegate);
  uint64_t v43 = sub_10002A4E4(v103);
  uint64_t v44 = v75;
  unint64_t v45 = v74;
  v74((char *)v43, v75, v32);
  *(uint64_t *)((char *)v43 + *(int *)(v42 + 20)) = v33;
  sub_10002CF08(&qword_1000F6A08, (void (*)(uint64_t))type metadata accessor for DestinationRow);
  swift_retain();
  unint64_t v46 = v99;
  View.onDrop(of:delegate:)();
  swift_bridgeObjectRelease();
  sub_10007C828((uint64_t)v26, (void (*)(void))type metadata accessor for DestinationRow);
  sub_1000149BC((uint64_t)v103);
  uint64_t v47 = (uint64_t)v83;
  v45(v83, v44, v36);
  uint64_t v48 = v45;
  sub_100021594(v47, 0, 1, v36);
  uint64_t v49 = (uint64_t)v82;
  sub_100016574(v47, (uint64_t)&v82[*(int *)(v84 + 44)], &qword_1000F6AC0);
  uint64_t v50 = v80;
  uint64_t v51 = v46;
  uint64_t v52 = v81;
  (*(void (**)(uint64_t, char *, uint64_t))(v80 + 16))(v49, v51, v81);
  sub_100025E44(v47, &qword_1000F6AC0);
  uint64_t v53 = (uint64_t)v85;
  v48(v85, v44, v36);
  sub_100021594(v53, 0, 1, v36);
  sub_100021594(v53, 0, 1, v88);
  uint64_t v54 = (uint64_t)v101;
  sub_100016574(v53, (uint64_t)&v101[*(int *)(v100 + 36)], &qword_1000F6AB8);
  sub_100016574(v49, v54, &qword_1000F6A00);
  sub_100025E44(v53, &qword_1000F6AB8);
  sub_100025E44(v49, &qword_1000F6A00);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v99, v52);
  v48(v102, v44, v36);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  uint64_t v55 = (uint64_t)v86;
  static Published.subscript.getter();
  swift_release();
  uint64_t v56 = (uint64_t)v89;
  swift_release();
  swift_release();
  v48((char *)v56, v44, v36);
  sub_100021594(v56, 0, 1, v36);
  uint64_t v57 = v87;
  uint64_t v58 = v87 + *(int *)(v93 + 56);
  sub_100016574(v55, v87, &qword_1000F5130);
  sub_100016574(v56, v58, &qword_1000F5130);
  uint64_t v59 = v57;
  if (sub_1000225EC(v57, 1, v36) == 1)
  {
    sub_100025E44(v56, &qword_1000F5130);
    sub_100025E44(v55, &qword_1000F5130);
    if (sub_1000225EC(v58, 1, v36) == 1) {
      uint64_t v60 = &qword_1000F5130;
    }
    else {
      uint64_t v60 = &qword_1000F6960;
    }
  }
  else
  {
    uint64_t v61 = v72;
    sub_100016574(v57, v72, &qword_1000F5130);
    if (sub_1000225EC(v58, 1, v36) == 1)
    {
      sub_100025E44(v56, &qword_1000F5130);
      sub_100025E44(v55, &qword_1000F5130);
      (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v61, v36);
      uint64_t v60 = &qword_1000F6960;
    }
    else
    {
      uint64_t v62 = v73;
      uint64_t v63 = v71;
      (*(void (**)(char *, uint64_t, uint64_t))(v73 + 32))(v71, v58, v36);
      sub_10002CF08(&qword_1000F5198, (void (*)(uint64_t))&type metadata accessor for RootNavigationDestination);
      uint64_t v64 = v56;
      dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v65 = *(void (**)(char *, uint64_t))(v62 + 8);
      v65(v63, v36);
      uint64_t v60 = &qword_1000F5130;
      sub_100025E44(v64, &qword_1000F5130);
      sub_100025E44(v55, &qword_1000F5130);
      v65((char *)v61, v36);
    }
  }
  sub_100025E44(v59, v60);
  uint64_t v66 = v95;
  AppEntityVisualState.init(isSelected:isHighlighted:isFocused:isDisabled:isEditing:isPrimary:)();
  sub_10007BFA4();
  sub_10002CF08(&qword_1000F4678, (void (*)(uint64_t))type metadata accessor for NavigationDestinationEntity);
  id v67 = v90;
  uint64_t v68 = (uint64_t)v101;
  uint64_t v69 = (uint64_t)v102;
  View.appEntity<A>(_:state:)();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v66, v97);
  sub_10007C828(v69, (void (*)(void))type metadata accessor for NavigationDestinationEntity);
  sub_100025E44(v68, &qword_1000F69E8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v91 + 32))(v98, v67, v92);
}

uint64_t sub_10007704C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v19[1] = a4;
  uint64_t v4 = sub_100025A08(&qword_1000F5130);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)v19 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v19 - v11;
  uint64_t v13 = type metadata accessor for RootNavigationDestination();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectRetain();
  uint64_t v17 = sub_10006F028();
  sub_100080610((uint64_t)v17, (uint64_t)v12);
  swift_bridgeObjectRelease();
  if (sub_1000225EC((uint64_t)v12, 1, v13) == 1) {
    return sub_100025E44((uint64_t)v12, &qword_1000F5130);
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v10, v16, v13);
  sub_100021594((uint64_t)v10, 0, 1, v13);
  type metadata accessor for SidebarView(0);
  sub_100016574((uint64_t)v10, (uint64_t)v7, &qword_1000F5130);
  sub_100025A08(&qword_1000F67F8);
  State.wrappedValue.setter();
  sub_100025E44((uint64_t)v10, &qword_1000F5130);
  swift_retain();
  sub_1000714A4();
  swift_release();
  swift_retain();
  sub_100071678();
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_100077310()
{
  swift_retain();
  sub_100070860();

  return swift_release();
}

uint64_t sub_100077384@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v60 = a3;
  uint64_t v4 = type metadata accessor for SidebarView(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = sub_100025A08(&qword_1000F7110);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_100025A08(&qword_1000F6950);
  uint64_t v59 = *(void *)(v55 - 8);
  uint64_t v10 = __chkstk_darwin(v55);
  uint64_t v58 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v57 = (char *)&v47 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v56 = (char *)&v47 - v15;
  __chkstk_darwin(v14);
  uint64_t v64 = (char *)&v47 - v16;
  uint64_t v17 = *a1;
  uint64_t v48 = a1[1];
  uint64_t v18 = a1[2];
  uint64_t v63 = a1[3];
  uint64_t v19 = a1[4];
  uint64_t v62 = a1[5];
  uint64_t v20 = a1[6];
  uint64_t v61 = a1[7];
  uint64_t v21 = a1[8];
  uint64_t v54 = v9;
  static ButtonRole.destructive.getter();
  uint64_t v22 = type metadata accessor for ButtonRole();
  sub_100021594((uint64_t)v9, 0, 1, v22);
  uint64_t v52 = type metadata accessor for SidebarView;
  uint64_t v49 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007C7B4();
  uint64_t v23 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v51 = v23 | 7;
  unint64_t v24 = (v6 + ((v23 + 16) & ~v23) + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = swift_allocObject();
  uint64_t v50 = type metadata accessor for SidebarView;
  sub_10007FB14();
  uint64_t v26 = (void *)(v25 + v24);
  uint64_t v27 = v48;
  *uint64_t v26 = v17;
  v26[1] = v27;
  uint64_t v28 = v63;
  v26[2] = v18;
  v26[3] = v28;
  uint64_t v29 = v62;
  v26[4] = v19;
  v26[5] = v29;
  uint64_t v30 = v61;
  v26[6] = v20;
  v26[7] = v30;
  void v26[8] = v21;
  uint64_t v74 = v17;
  uint64_t v75 = v27;
  uint64_t v76 = v18;
  uint64_t v77 = v28;
  uint64_t v78 = v19;
  uint64_t v79 = v29;
  uint64_t v80 = v20;
  uint64_t v81 = v30;
  uint64_t v82 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Button.init(role:action:label:)();
  sub_10007C7B4();
  uint64_t v31 = swift_allocObject();
  sub_10007FB14();
  uint64_t v32 = (void *)(v31 + v24);
  *uint64_t v32 = v17;
  v32[1] = v27;
  uint64_t v33 = v63;
  uint64_t v32[2] = v18;
  v32[3] = v33;
  uint64_t v34 = v62;
  v32[4] = v19;
  v32[5] = v34;
  uint64_t v35 = v61;
  v32[6] = v20;
  v32[7] = v35;
  uint64_t v32[8] = v21;
  uint64_t v65 = v17;
  uint64_t v66 = v27;
  uint64_t v67 = v18;
  uint64_t v68 = v33;
  uint64_t v69 = v19;
  uint64_t v70 = v34;
  uint64_t v71 = v20;
  uint64_t v72 = v35;
  uint64_t v73 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v36 = v56;
  Button.init(action:label:)();
  uint64_t v37 = v59;
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
  unint64_t v39 = v57;
  id v40 = v64;
  uint64_t v41 = v55;
  v38(v57, v64, v55);
  uint64_t v42 = v58;
  v38(v58, v36, v41);
  uint64_t v43 = v60;
  v38(v60, v39, v41);
  uint64_t v44 = sub_100025A08(&qword_1000F6958);
  v38(&v43[*(int *)(v44 + 48)], v42, v41);
  unint64_t v45 = *(void (**)(char *, uint64_t))(v37 + 8);
  v45(v36, v41);
  v45(v40, v41);
  v45(v42, v41);
  return ((uint64_t (*)(char *, uint64_t))v45)(v39, v41);
}

uint64_t sub_100077964@<X0>(uint64_t a1@<X8>)
{
  sub_10002B2A0();
  swift_bridgeObjectRetain();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1000779D0(uint64_t a1, void **a2, char a3)
{
  char v4 = *a2;
  swift_retain();
  sub_1000710A8(v4, a3);

  return swift_release();
}

uint64_t sub_100077A2C@<X0>(uint64_t a1@<X8>)
{
  sub_10002B2A0();
  swift_bridgeObjectRetain();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_100077A98@<X0>(uint64_t a1@<X8>)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_10002B2A0();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_100077B14(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EditMode();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_100070424();
}

void *sub_100077BE4()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_100077BF8(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100077C64@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_100077384(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_100077C6C()
{
  return EnvironmentValues.editMode.getter();
}

uint64_t sub_100077C94()
{
  return sub_100070410();
}

unint64_t sub_100077CBC()
{
  unint64_t result = qword_1000F6940;
  if (!qword_1000F6940)
  {
    sub_10001E8D0(&qword_1000F6910);
    sub_100077D38();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F6940);
  }
  return result;
}

unint64_t sub_100077D38()
{
  unint64_t result = qword_1000F6948;
  if (!qword_1000F6948)
  {
    sub_10001E8D0(&qword_1000F6908);
    sub_10001E8D0(&qword_1000F68F8);
    sub_10001E8D0(&qword_1000F68F0);
    type metadata accessor for SidebarListStyle();
    sub_10001E8D0(&qword_1000F68E8);
    sub_10001E8D0(&qword_1000F6920);
    sub_10001E8D0(&qword_1000F6928);
    sub_10001E88C(&qword_1000F6930, &qword_1000F68E8);
    sub_10002B2A0();
    sub_10001E88C(&qword_1000F6938, &qword_1000F6920);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_10001E88C(&qword_1000F6320, &qword_1000F6310);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F6948);
  }
  return result;
}

uint64_t sub_100077F50()
{
  return sub_100078068(0);
}

uint64_t sub_100077F58()
{
  return sub_10007810C();
}

uint64_t sub_100077F74()
{
  sub_1000220C0();
  sub_100080498();
  uint64_t v0 = sub_10002A734();
  if (!sub_100025B80(v0))
  {
    sub_100012D7C();
    uint64_t v1 = sub_1000226A4();
    v2(v1);
  }
  sub_100025A08(&qword_1000F67F8);
  sub_10001B6C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_10001511C();

  return _swift_deallocObject(v3, v4, v5);
}

uint64_t sub_100078060()
{
  return sub_100078068(1);
}

uint64_t sub_100078068(char a1)
{
  uint64_t v2 = type metadata accessor for SidebarView(0);
  sub_100022084(v2);
  sub_100015074();
  void v6[8] = v3;
  return sub_1000779D0(v4, v6, a1);
}

uint64_t sub_1000780F4()
{
  return sub_10007810C();
}

uint64_t sub_10007810C()
{
  sub_100015074();
  uint64_t v4 = v0;
  return v1(v3);
}

uint64_t sub_100078150()
{
  uint64_t v0 = type metadata accessor for SidebarView(0);
  sub_10001C100(v0);
  sub_1000245EC();

  return sub_100074324(v1);
}

uint64_t sub_100078198()
{
  sub_1000220C0();
  swift_unknownObjectRelease();
  sub_100080498();
  uint64_t v0 = sub_10002A734();
  if (!sub_100025B80(v0))
  {
    sub_100012D7C();
    uint64_t v1 = sub_1000226A4();
    v2(v1);
  }
  sub_100025A08(&qword_1000F67F8);
  sub_10001B6C4();
  uint64_t v3 = sub_100012DB8();

  return _swift_deallocObject(v3, v4, v5);
}

uint64_t sub_100078254()
{
  uint64_t v0 = type metadata accessor for SidebarView(0);
  sub_10001C100(v0);
  uint64_t v1 = (unsigned char *)sub_100016668();

  return sub_100074830(v1);
}

uint64_t sub_100078298()
{
  uint64_t v1 = sub_100025A08(&qword_1000F6DB0);
  __chkstk_darwin(v1);
  uint64_t v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)uint64_t v3 = static VerticalAlignment.center.getter();
  *((void *)v3 + 1) = 0;
  v3[16] = 1;
  uint64_t v4 = sub_100025A08(&qword_1000F6DB8);
  sub_1000783D4(v0, (uint64_t)&v3[*(int *)(v4 + 44)]);
  uint64_t v7 = v0;
  sub_100025A08(&qword_1000F6DC0);
  sub_10001E88C(&qword_1000F6DC8, &qword_1000F6DB0);
  sub_10007FA78();
  View.contextMenu<A>(menuItems:)();
  return sub_100025E44((uint64_t)v3, &qword_1000F6DB0);
}

uint64_t sub_1000783D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v184 = a1;
  uint64_t v178 = a2;
  uint64_t v160 = sub_100025A08(&qword_1000F6DF8);
  __chkstk_darwin(v160);
  uint64_t v161 = (uint64_t)&v141 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = type metadata accessor for BorderlessButtonStyle();
  uint64_t v153 = *(void *)(v155 - 8);
  __chkstk_darwin(v155);
  id v151 = (char *)&v141 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = sub_100025A08(&qword_1000F6E00);
  uint64_t v148 = *(void *)(v150 - 8);
  __chkstk_darwin(v150);
  uint64_t v147 = (char *)&v141 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_100025A08(&qword_1000F6E08);
  uint64_t v152 = *(void *)(v154 - 8);
  __chkstk_darwin(v154);
  id v149 = (char *)&v141 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_100025A08(&qword_1000F6E10);
  __chkstk_darwin(v146);
  id v157 = (char *)&v141 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = sub_100025A08(&qword_1000F6E18);
  uint64_t v7 = __chkstk_darwin(v159);
  uint64_t v156 = (uint64_t)&v141 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v158 = (uint64_t)&v141 - v9;
  uint64_t v169 = type metadata accessor for RootNavigationDestination();
  uint64_t v168 = *(void *)(v169 - 8);
  __chkstk_darwin(v169);
  v172 = (char *)&v141 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100025A08(&qword_1000F5FB8);
  __chkstk_darwin(v11 - 8);
  uint64_t v166 = (uint64_t)&v141 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = type metadata accessor for Font.TextStyle();
  uint64_t v165 = *(void *)(v167 - 8);
  __chkstk_darwin(v167);
  v164 = (char *)&v141 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100025A08(&qword_1000F6E20);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v179 = (uint64_t)&v141 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v141 - v17;
  uint64_t v183 = type metadata accessor for EditMode();
  uint64_t v185 = *(void *)(v183 - 8);
  uint64_t v19 = __chkstk_darwin(v183);
  v182 = (char *)&v141 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v181 = (char *)&v141 - v21;
  uint64_t v175 = sub_100025A08(&qword_1000F6E28);
  __chkstk_darwin(v175);
  uint64_t v23 = (char *)&v141 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = sub_100025A08(&qword_1000F6E30);
  __chkstk_darwin(v173);
  uint64_t v25 = (char *)&v141 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for DestinationRow(0);
  uint64_t v27 = v26 - 8;
  uint64_t v28 = *(void *)(v26 - 8);
  uint64_t v29 = *(void *)(v28 + 64);
  __chkstk_darwin(v26);
  uint64_t v174 = sub_100025A08(&qword_1000F6E38);
  uint64_t v30 = *(void *)(v174 - 8);
  __chkstk_darwin(v174);
  uint64_t v32 = (char *)&v141 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_100025A08(&qword_1000F6E40);
  uint64_t v34 = __chkstk_darwin(v33 - 8);
  uint64_t v186 = (uint64_t)&v141 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v36 = *(int *)(v27 + 32);
  uint64_t v37 = v184;
  uint64_t v180 = v184 + v36;
  BOOL v38 = *(unsigned char *)(*(void *)(v184 + v36 + 8) + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_isCompact) == 1;
  v176 = v18;
  uint64_t v177 = (uint64_t)&v141 - v39;
  uint64_t v145 = (char *)&v141 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = v29;
  uint64_t v143 = v28;
  if (v38)
  {
    sub_10007C7B4();
    swift_allocObject();
    uint64_t v40 = sub_10007FB14();
    __chkstk_darwin(v40);
    *(&v141 - 2) = v37;
    sub_10001E88C(&qword_1000F6E58, &qword_1000F6E28);
    Button.init(action:label:)();
    uint64_t v41 = v174;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v25, v32, v174);
    swift_storeEnumTagMultiPayload();
    sub_10001E88C(&qword_1000F6E50, &qword_1000F6E38);
    _ConditionalContent<>.init(storage:)();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v41);
  }
  else
  {
    *(void *)uint64_t v23 = static VerticalAlignment.center.getter();
    *((void *)v23 + 1) = 0;
    v23[16] = 1;
    uint64_t v42 = sub_100025A08(&qword_1000F6E48);
    sub_10007A87C(v37, &v23[*(int *)(v42 + 44)]);
    sub_100016574((uint64_t)v23, (uint64_t)v25, &qword_1000F6E28);
    swift_storeEnumTagMultiPayload();
    sub_10001E88C(&qword_1000F6E50, &qword_1000F6E38);
    sub_10001E88C(&qword_1000F6E58, &qword_1000F6E28);
    _ConditionalContent<>.init(storage:)();
    sub_100025E44((uint64_t)v23, &qword_1000F6E28);
  }
  uint64_t v43 = v185;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  uint64_t v44 = v181;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v45 = enum case for EditMode.active(_:);
  unint64_t v46 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 104);
  uint64_t v48 = v182;
  uint64_t v47 = v183;
  v46(v182, enum case for EditMode.active(_:), v183);
  sub_10002CF08(&qword_1000F6E60, (void (*)(uint64_t))&type metadata accessor for EditMode);
  char v49 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v51 = *(void (**)(char *, uint64_t))(v43 + 8);
  uint64_t v50 = v43 + 8;
  v51(v48, v47);
  uint64_t v162 = v51;
  v51(v44, v47);
  uint64_t v163 = v46;
  if ((v49 & 1) != 0 || (uint64_t v52 = sub_100079AA8(), !v53))
  {
    uint64_t v74 = 0;
    uint64_t v170 = 0;
    uint64_t v175 = 0;
    uint64_t v173 = 0;
    uint64_t v171 = 0;
    uint64_t v174 = 0;
  }
  else
  {
    uint64_t v54 = v52;
    uint64_t v55 = v53;
    uint64_t v142 = static VerticalAlignment.center.getter();
    uint64_t v187 = v54;
    uint64_t v188 = v55;
    sub_10002B2A0();
    swift_bridgeObjectRetain();
    uint64_t v56 = Text.init<A>(_:)();
    uint64_t v58 = v57;
    uint64_t v185 = v50;
    char v60 = v59 & 1;
    static Font.body.getter();
    uint64_t v61 = Text.font(_:)();
    uint64_t v170 = v62;
    uint64_t v63 = v45;
    char v65 = v64;
    uint64_t v141 = v66;
    swift_release();
    char v67 = v65 & 1;
    uint64_t v45 = v63;
    char v68 = v60;
    uint64_t v37 = v184;
    sub_100010C50(v56, v58, v68);
    swift_bridgeObjectRelease();
    LODWORD(v187) = static HierarchicalShapeStyle.secondary.getter();
    uint64_t v69 = v170;
    uint64_t v175 = Text.foregroundStyle<A>(_:)();
    uint64_t v173 = v70;
    uint64_t v174 = v71;
    uint64_t v171 = v72 & 1;
    char v73 = v67;
    uint64_t v74 = v142;
    sub_100010C50(v61, v69, v73);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v170 = 1;
  }
  if ((sub_100079BBC() & 1) == 0)
  {
    uint64_t v90 = v168;
    uint64_t v91 = v172;
    uint64_t v92 = v169;
    (*(void (**)(char *, uint64_t, uint64_t))(v168 + 16))(v172, v37, v169);
    if ((*(unsigned int (**)(char *, uint64_t))(v90 + 88))(v91, v92) == enum case for RootNavigationDestination.folder(_:))
    {
      uint64_t v142 = v74;
      uint64_t v93 = (void **)v172;
      (*(void (**)(char *, uint64_t))(v90 + 96))(v172, v92);
      uint64_t v94 = *v93;
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      uint64_t v95 = v181;
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v97 = v182;
      uint64_t v96 = v183;
      v163(v182, v45, v183);
      char v98 = static EditMode.== infix(_:_:)();
      uint64_t v99 = v97;
      uint64_t v100 = v162;
      v162(v99, v96);
      v100(v95, v96);
      uint64_t v89 = v186;
      if (v98)
      {
        sub_10007C7B4();
        unint64_t v101 = (v144
              + ((*(unsigned __int8 *)(v143 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80))
              + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v102 = swift_allocObject();
        sub_10007FB14();
        *(void *)(v102 + v101) = v94;
        id v103 = v94;
        sub_100025A08(&qword_1000F5FF8);
        sub_10002D290();
        uint64_t v104 = v147;
        Button.init(action:label:)();
        uint64_t v105 = v151;
        BorderlessButtonStyle.init()();
        sub_10001E88C(&qword_1000F6E78, &qword_1000F6E00);
        sub_10002CF08(&qword_1000F6E80, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
        uint64_t v106 = v149;
        uint64_t v107 = v150;
        uint64_t v108 = v155;
        View.buttonStyle<A>(_:)();
        (*(void (**)(char *, uint64_t))(v153 + 8))(v105, v108);
        (*(void (**)(char *, uint64_t))(v148 + 8))(v104, v107);
        LOBYTE(v102) = static Edge.Set.trailing.getter();
        EdgeInsets.init(_all:)();
        uint64_t v110 = v109;
        uint64_t v112 = v111;
        uint64_t v114 = v113;
        uint64_t v116 = v115;
        uint64_t v117 = v152;
        uint64_t v118 = (uint64_t)v157;
        uint64_t v119 = v154;
        (*(void (**)(char *, char *, uint64_t))(v152 + 16))(v157, v106, v154);
        uint64_t v120 = v118 + *(int *)(v146 + 36);
        *(unsigned char *)uint64_t v120 = v102;
        *(void *)(v120 + 8) = v110;
        *(void *)(v120 + 16) = v112;
        *(void *)(v120 + 24) = v114;
        *(void *)(v120 + 32) = v116;
        *(unsigned char *)(v120 + 40) = 0;
        (*(void (**)(char *, uint64_t))(v117 + 8))(v106, v119);
        static AnyTransition.opacity.getter();
        static Animation.easeInOut(duration:)();
        Animation.delay(_:)();
        swift_release();
        AnyTransition.animation(_:)();
        swift_release();
        swift_release();
        static AnyTransition.opacity.getter();
        static Animation.easeInOut(duration:)();
        AnyTransition.animation(_:)();
        swift_release();
        swift_release();
        uint64_t v121 = static AnyTransition.asymmetric(insertion:removal:)();
        swift_release();
        swift_release();
        uint64_t v122 = v156;
        sub_100016574(v118, v156, &qword_1000F6E10);
        *(void *)(v122 + *(int *)(v159 + 36)) = v121;
        sub_100025E44(v118, &qword_1000F6E10);
        uint64_t v123 = v158;
        sub_100080120(v122, v158, &qword_1000F6E18);
        sub_100016574(v123, v161, &qword_1000F6E18);
        swift_storeEnumTagMultiPayload();
        sub_100025A08(&qword_1000F5FE8);
        sub_1000665E8();
        sub_10007FE08();
        uint64_t v124 = v179;
        _ConditionalContent<>.init(storage:)();

        sub_100025E44(v123, &qword_1000F6E18);
        uint64_t v125 = sub_100025A08(&qword_1000F6E68);
        sub_100021594(v124, 0, 1, v125);
        uint64_t v87 = (uint64_t)v176;
        sub_100080120(v124, (uint64_t)v176, &qword_1000F6E20);
        uint64_t v74 = v142;
        goto LABEL_16;
      }

      uint64_t v87 = (uint64_t)v176;
      uint64_t v74 = v142;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v90 + 8))(v172, v92);
      uint64_t v87 = (uint64_t)v176;
      uint64_t v89 = v186;
    }
    uint64_t v126 = sub_100025A08(&qword_1000F6E68);
    sub_100021594(v87, 1, 1, v126);
    goto LABEL_16;
  }
  uint64_t v75 = Image.init(systemName:)();
  uint64_t v76 = v165;
  uint64_t v77 = v164;
  uint64_t v78 = v167;
  (*(void (**)(char *, void, uint64_t))(v165 + 104))(v164, enum case for Font.TextStyle.caption(_:), v167);
  uint64_t v79 = type metadata accessor for Font.Design();
  uint64_t v80 = v166;
  sub_100021594(v166, 1, 1, v79);
  static Font.system(_:design:weight:)();
  sub_100025E44(v80, &qword_1000F5FB8);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v77, v78);
  static Font.Weight.bold.getter();
  uint64_t v81 = Font.weight(_:)();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  id v83 = [self tertiaryLabelColor];
  uint64_t v84 = Color.init(_:)();
  uint64_t v85 = swift_getKeyPath();
  uint64_t v187 = v75;
  uint64_t v188 = KeyPath;
  uint64_t v189 = v81;
  uint64_t v190 = v85;
  uint64_t v191 = v84;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v86 = (uint64_t)v176;
  sub_10006F45C(&v187);
  swift_release();
  uint64_t v87 = v86;
  swift_release_n();
  swift_release_n();
  swift_release_n();
  swift_release_n();
  uint64_t v88 = sub_100025A08(&qword_1000F6E68);
  sub_100021594(v86, 0, 1, v88);
  uint64_t v89 = v186;
LABEL_16:
  uint64_t v127 = v177;
  sub_100016574(v177, v89, &qword_1000F6E40);
  uint64_t v128 = v179;
  sub_100016574(v87, v179, &qword_1000F6E20);
  uint64_t v129 = v178;
  sub_100016574(v89, v178, &qword_1000F6E40);
  uint64_t v130 = (int *)sub_100025A08(&qword_1000F6E70);
  uint64_t v131 = v129 + v130[12];
  *(void *)uint64_t v131 = 0;
  *(unsigned char *)(v131 + 8) = 1;
  id v132 = (uint64_t *)(v129 + v130[16]);
  uint64_t v133 = v74;
  uint64_t *v132 = v74;
  v132[1] = 0;
  uint64_t v134 = v87;
  uint64_t v135 = v170;
  uint64_t v136 = v175;
  v132[2] = v170;
  v132[3] = v136;
  uint64_t v137 = v173;
  uint64_t v138 = v171;
  _OWORD v132[4] = v173;
  v132[5] = v138;
  uint64_t v139 = v174;
  v132[6] = v174;
  sub_100016574(v128, v129 + v130[20], &qword_1000F6E20);
  sub_10007FD20(v133, 0, v135, v136, v137, v138, v139);
  sub_100025E44(v134, &qword_1000F6E20);
  sub_100025E44(v127, &qword_1000F6E40);
  sub_100025E44(v128, &qword_1000F6E20);
  sub_10007FD6C(v133, 0, v135, v136, v137, v138, v139);
  return sub_100025E44(v186, &qword_1000F6E40);
}

uint64_t sub_100079A00()
{
  type metadata accessor for DestinationRow(0);
  swift_retain();
  sub_100070804();

  return swift_release();
}

uint64_t sub_100079A58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = static VerticalAlignment.center.getter();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  uint64_t v4 = sub_100025A08(&qword_1000F6E48);
  return sub_10007A87C(a1, (unsigned char *)(a2 + *(int *)(v4 + 44)));
}

uint64_t sub_100079AA8()
{
  id v1 = objc_retain(*(id *)(*(void *)(v0 + *(int *)(type metadata accessor for DestinationRow(0) + 24) + 8)
                         + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_database));
  swift_retain();
  uint64_t v2 = (void *)sub_100070218();
  swift_release();
  uint64_t v3 = RootNavigationDestination.countOfItems(in:autoShortcutsDataSource:)();
  char v5 = v4;

  uint64_t v6 = 0;
  if ((v5 & 1) == 0 && v3)
  {
    uint64_t v7 = self;
    id v8 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInteger:v3];
    id v9 = [v7 localizedStringFromNumber:v8 numberStyle:0];

    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  return v6;
}

uint64_t sub_100079BBC()
{
  uint64_t v0 = type metadata accessor for DestinationRow(0);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for EditMode();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v9 = (char *)&v15 - v8;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v7, enum case for EditMode.active(_:), v3);
  sub_10002CF08(&qword_1000F6E60, (void (*)(uint64_t))&type metadata accessor for EditMode);
  char v10 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v7, v3);
  v11(v9, v3);
  sub_10007C7B4();
  if (v10)
  {
    sub_10007C828((uint64_t)v2, (void (*)(void))type metadata accessor for DestinationRow);
    return 0;
  }
  else
  {
    uint64_t v13 = *(void *)&v2[*(int *)(v0 + 24) + 8];
    swift_retain();
    sub_10007C828((uint64_t)v2, (void (*)(void))type metadata accessor for DestinationRow);
    uint64_t v12 = *(unsigned __int8 *)(v13 + OBJC_IVAR____TtCV9Shortcuts11SidebarView10DataSource_isCompact);
    swift_release();
  }
  return v12;
}

uint64_t sub_100079E70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = Image.init(systemName:)();
  uint64_t v3 = static Font.title3.getter();
  uint64_t result = swift_getKeyPath();
  *a1 = v2;
  a1[1] = result;
  a1[2] = v3;
  return result;
}

uint64_t sub_100079ED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v3 = sub_100025A08(&qword_1000F6DC0);
  __chkstk_darwin(v3 - 8);
  uint64_t v52 = (char *)v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100025A08(&qword_1000F7110);
  __chkstk_darwin(v5 - 8);
  uint64_t v53 = (char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DestinationRow(0);
  char v49 = *(char **)(v7 - 8);
  uint64_t v8 = *((void *)v49 + 8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = sub_100025A08(&qword_1000F6DE8);
  uint64_t v50 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)v47 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v51 = (char *)v47 - v17;
  __chkstk_darwin(v16);
  uint64_t v54 = (char *)v47 - v18;
  uint64_t v19 = type metadata accessor for RootNavigationDestination();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (void **)((char *)v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(void **, uint64_t, uint64_t))(v20 + 16))(v22, a1, v19);
  if ((*(unsigned int (**)(void **, uint64_t))(v20 + 88))(v22, v19) == enum case for RootNavigationDestination.folder(_:))
  {
    (*(void (**)(void **, uint64_t))(v20 + 96))(v22, v19);
    uint64_t v23 = *v22;
    v47[4] = type metadata accessor for DestinationRow;
    v47[5] = a1;
    sub_10007C7B4();
    uint64_t v24 = v49[80];
    unint64_t v25 = (v8 + ((v24 + 16) & ~v24) + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v47[2] = v25 + 8;
    v47[3] = v24 | 7;
    uint64_t v26 = swift_allocObject();
    uint64_t v27 = v50;
    char v49 = v12;
    uint64_t v28 = v26;
    v47[1] = type metadata accessor for DestinationRow;
    uint64_t v29 = sub_10007FB14();
    v47[0] = v47;
    *(void *)(v28 + v25) = v23;
    __chkstk_darwin(v29);
    uint64_t v48 = v15;
    v47[-2] = v23;
    id v30 = v23;
    sub_100025A08(&qword_1000F6208);
    sub_10001E88C(&qword_1000F6200, &qword_1000F6208);
    Button.init(action:label:)();
    uint64_t v31 = (uint64_t)v53;
    static ButtonRole.destructive.getter();
    uint64_t v32 = type metadata accessor for ButtonRole();
    sub_100021594(v31, 0, 1, v32);
    sub_10007C7B4();
    uint64_t v33 = swift_allocObject();
    uint64_t v34 = sub_10007FB14();
    *(void *)(v33 + v25) = v30;
    __chkstk_darwin(v34);
    v47[-2] = v30;
    id v35 = v30;
    uint64_t v36 = v51;
    Button.init(role:action:label:)();
    uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
    BOOL v38 = v48;
    uint64_t v39 = v54;
    v37(v48, v54, v9);
    uint64_t v40 = v49;
    v37(v49, v36, v9);
    uint64_t v41 = (uint64_t)v52;
    v37(v52, v38, v9);
    uint64_t v42 = sub_100025A08(&qword_1000F6DF0);
    v37((char *)(v41 + *(int *)(v42 + 48)), v40, v9);

    uint64_t v43 = *(void (**)(char *, uint64_t))(v27 + 8);
    v43(v36, v9);
    v43(v39, v9);
    v43(v40, v9);
    v43(v38, v9);
    uint64_t v44 = sub_100025A08(&qword_1000F6DE0);
    sub_100021594(v41, 0, 1, v44);
    return sub_100080120(v41, v55, &qword_1000F6DC0);
  }
  else
  {
    (*(void (**)(void **, uint64_t))(v20 + 8))(v22, v19);
    uint64_t v46 = sub_100025A08(&qword_1000F6DE0);
    return sub_100021594(v55, 1, 1, v46);
  }
}

uint64_t sub_10007A570()
{
  uint64_t v0 = sub_10002431C();
  type metadata accessor for DestinationRow(v0);
  swift_retain();
  sub_10007104C();

  return swift_release();
}

uint64_t sub_10007A5C4(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_100025A08(&qword_1000F5130);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v14 - v8;
  uint64_t v10 = type metadata accessor for RootNavigationDestination();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v9, a1, v10);
  sub_100021594((uint64_t)v9, 0, 1, v10);
  type metadata accessor for DestinationRow(0);
  sub_100016574((uint64_t)v9, (uint64_t)v7, &qword_1000F5130);
  sub_100025A08(&qword_1000F68E0);
  Binding.wrappedValue.setter();
  sub_100025E44((uint64_t)v9, &qword_1000F5130);
  sub_100025A08(&qword_1000F5200);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1000BAC10;
  *(void *)(v11 + 32) = a2;
  v14[1] = v11;
  specialized Array._endMutation()();
  swift_retain();
  id v12 = a2;
  sub_100071678();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10007A780(void *a1, unsigned int *a2)
{
  uint64_t v5 = type metadata accessor for LibraryEditingOption();
  sub_100022284();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1000204E8();
  *uint64_t v2 = a1;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v2, *a2, v5);
  id v9 = a1;
  LibraryEditingOption.title.getter();
  LibraryEditingOption.symbolName.getter();
  sub_10002B2A0();
  Label<>.init<A>(_:systemImage:)();
  return (*(uint64_t (**)(void *, uint64_t))(v7 + 8))(v2, v5);
}

uint64_t sub_10007A87C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v4 = sub_100025A08(&qword_1000F6EB8);
  uint64_t v33 = *(void *)(v4 - 8);
  uint64_t v5 = v33;
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = &v31[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v31[-v9];
  uint64_t v34 = a1;
  Label.init(title:icon:)();
  uint64_t v35 = RootNavigationDestination.displayName.getter();
  uint64_t v36 = v11;
  sub_10002B2A0();
  uint64_t v12 = Text.init<A>(_:)();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  int v32 = static Edge.Set.trailing.getter();
  EdgeInsets.init(_all:)();
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v27 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 16);
  v27(v8, v10, v4);
  v27(a2, v8, v4);
  uint64_t v28 = &a2[*(int *)(sub_100025A08((uint64_t *)&unk_1000F6EC0) + 48)];
  *(void *)uint64_t v28 = v12;
  *((void *)v28 + 1) = v14;
  v28[16] = v18;
  *((void *)v28 + 3) = v16;
  v28[32] = v32;
  *((void *)v28 + 5) = v20;
  *((void *)v28 + 6) = v22;
  *((void *)v28 + 7) = v24;
  *((void *)v28 + 8) = v26;
  v28[72] = 0;
  sub_10002CF58(v12, v14, v18);
  uint64_t v29 = *(void (**)(unsigned char *, uint64_t))(v33 + 8);
  swift_bridgeObjectRetain();
  v29(v10, v4);
  sub_100010C50(v12, v14, v18);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(unsigned char *, uint64_t))v29)(v8, v4);
}

uint64_t sub_10007AAEC@<X0>(uint64_t *a1@<X8>)
{
  RootNavigationDestination.symbolName.getter();
  uint64_t result = Image.init(_internalSystemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_10007AB30()
{
  uint64_t v0 = type metadata accessor for RootNavigationDestination.DropBehavior();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  RootNavigationDestination.dropBehavior.getter();
  int v4 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  BOOL v5 = v4 == enum case for RootNavigationDestination.DropBehavior.intoCollection(_:)
    || v4 == enum case for RootNavigationDestination.DropBehavior.intoCollectionWithType(_:);
  uint64_t v6 = v5;
  if (v5 || v4 != enum case for RootNavigationDestination.DropBehavior.none(_:)) {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return v6;
}

BOOL sub_10007AC4C()
{
  uint64_t v0 = type metadata accessor for RootNavigationDestination.DropBehavior();
  uint64_t v22 = *(void *)(v0 - 8);
  uint64_t v23 = v0;
  __chkstk_darwin(v0);
  uint64_t v21 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for UTType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  BOOL v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100025A08(&qword_1000F63B8);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v18 = v7 + *(void *)(v3 + 72);
  uint64_t v19 = v6;
  uint64_t v8 = swift_allocObject();
  long long v17 = xmmword_1000BAB00;
  *(_OWORD *)(v8 + 16) = xmmword_1000BAB00;
  id v9 = (id)WFWorkflowReferenceType();
  static UTType._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v10 = *(void (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t v20 = v2;
  v10(v8 + v7, v5, v2);
  Swift::Bool v11 = DropInfo.hasItemsConforming(to:)((Swift::OpaquePointer)v8);
  swift_bridgeObjectRelease();
  if (v11)
  {
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = v17;
    unint64_t v13 = v12 + v7;
    id v14 = (id)WFWorkflowReferenceType();
    static UTType._unconditionallyBridgeFromObjectiveC(_:)();

    v10(v13, v5, v20);
    DropInfo.itemProviders(for:)();
    swift_bridgeObjectRelease();
    type metadata accessor for SidebarDropDelegate(0);
    uint64_t v15 = v21;
    RootNavigationDestination.dropBehavior.getter();
    sub_100071970();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v15, v23);
  }
  return v11;
}

uint64_t sub_10007AEFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v3 = *(char **)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v57 = &type metadata for Never;
  uint64_t v58 = v3;
  char v59 = &protocol witness table for Never;
  uint64_t v60 = v4;
  uint64_t v5 = type metadata accessor for List();
  uint64_t v47 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v46 = (char *)&v45 - v9;
  uint64_t v10 = *(void **)(a1 + 16);
  type metadata accessor for Optional();
  uint64_t v11 = type metadata accessor for Binding();
  uint64_t v12 = type metadata accessor for Optional();
  __chkstk_darwin(v12 - 8);
  id v14 = (char *)&v45 - v13;
  uint64_t v15 = *(void **)(a1 + 32);
  uint64_t v57 = v10;
  uint64_t v58 = v3;
  char v49 = v3;
  uint64_t WitnessTable = v4;
  char v59 = v15;
  uint64_t v60 = v4;
  uint64_t v16 = type metadata accessor for List();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v45 = (char *)&v45 - v21;
  uint64_t v22 = type metadata accessor for _ConditionalContent();
  uint64_t v52 = *(void *)(v22 - 8);
  uint64_t v53 = v22;
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v51 = (char *)&v45 - v24;
  uint64_t v25 = *(int *)(a1 + 52);
  uint64_t v26 = v48;
  if (v48[v25] == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v14, v48, v11);
    uint64_t v27 = sub_100021594((uint64_t)v14, 0, 1, v11);
    __chkstk_darwin(v27);
    uint64_t v28 = v49;
    uint64_t v29 = (char *)WitnessTable;
    *(&v45 - 6) = (char *)v10;
    *(&v45 - 5) = v28;
    *(&v45 - 4) = (char *)v15;
    *(&v45 - 3) = v29;
    *(&v45 - 2) = v26;
    List.init(selection:content:)();
    swift_getWitnessTable();
    id v30 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    uint64_t v31 = v45;
    v30(v45, v20, v16);
    int v32 = *(void (**)(char *, uint64_t))(v17 + 8);
    v32(v20, v16);
    v30(v20, v31, v16);
    swift_getWitnessTable();
    uint64_t v33 = v51;
    sub_10006F5C8((uint64_t)v20, v16);
    v32(v20, v16);
    v32(v31, v16);
  }
  else
  {
    __chkstk_darwin(v23);
    uint64_t v34 = v49;
    uint64_t v35 = (char *)WitnessTable;
    *(&v45 - 6) = (char *)v10;
    *(&v45 - 5) = v34;
    *(&v45 - 4) = (char *)v15;
    *(&v45 - 3) = v35;
    *(&v45 - 2) = v26;
    List<>.init(content:)();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v36 = v46;
    uint64_t v37 = v47;
    BOOL v38 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
    v38(v46, v8, v5);
    uint64_t v39 = *(void (**)(char *, uint64_t))(v37 + 8);
    v39(v8, v5);
    v38(v8, v36, v5);
    swift_getWitnessTable();
    uint64_t v33 = v51;
    sub_10006F6C0((uint64_t)v8, v16, v5);
    v39(v8, v5);
    v39(v36, v5);
  }
  uint64_t v40 = swift_getWitnessTable();
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v55 = v40;
  uint64_t v56 = v41;
  uint64_t v42 = v53;
  swift_getWitnessTable();
  uint64_t v43 = v52;
  (*(void (**)(uint64_t, char *, uint64_t))(v52 + 16))(v54, v33, v42);
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v33, v42);
}

uint64_t sub_10007B4D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  sub_10002206C();
  uint64_t v8 = a1 + *(int *)(type metadata accessor for ConditionalSelectionList() + 56);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v9(v3, v8, a2);
  v9(a3, v3, a2);
  sub_1000189C8();
  return v14(v10, v11, v12, v13);
}

uint64_t sub_10007B5D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v51 = a3;
  uint64_t v52 = a4;
  uint64_t v48 = a1;
  uint64_t v55 = a7;
  uint64_t v46 = *(void *)(a5 - 8);
  uint64_t v10 = __chkstk_darwin(a1);
  uint64_t v44 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v45 = (char *)&v43 - v12;
  uint64_t v50 = type metadata accessor for Prominence();
  uint64_t v13 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  char v49 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Section();
  uint64_t v47 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v43 - v16;
  uint64_t v63 = &protocol witness table for Text;
  uint64_t v64 = a6;
  uint64_t v58 = a6;
  char v65 = &protocol witness table for EmptyView;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v61 = v15;
  uint64_t v62 = WitnessTable;
  uint64_t v57 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v20 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v21 = __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v23 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v43 - v24;
  uint64_t v56 = a5;
  uint64_t v26 = type metadata accessor for _ConditionalContent();
  uint64_t v54 = *(void *)(v26 - 8);
  uint64_t v27 = __chkstk_darwin(v26);
  uint64_t v53 = (char *)&v43 - v28;
  if (a2)
  {
    uint64_t v61 = v48;
    uint64_t v62 = a2;
    sub_10002B2A0();
    swift_bridgeObjectRetain();
    Section<>.init<A>(_:content:)();
    uint64_t v29 = v49;
    uint64_t v30 = v50;
    (*(void (**)(char *, void, uint64_t))(v13 + 104))(v49, enum case for Prominence.increased(_:), v50);
    uint64_t v52 = v26;
    uint64_t v31 = v57;
    View.headerProminence(_:)();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v29, v30);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v17, v15);
    uint64_t v61 = v15;
    uint64_t v62 = v31;
    swift_getOpaqueTypeConformance2();
    int v32 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
    v32(v25, v23, OpaqueTypeMetadata2);
    uint64_t v33 = *(void (**)(char *, uint64_t))(v20 + 8);
    v33(v23, OpaqueTypeMetadata2);
    v32(v23, v25, OpaqueTypeMetadata2);
    uint64_t v34 = v53;
    sub_10006F5C8((uint64_t)v23, OpaqueTypeMetadata2);
    v33(v23, OpaqueTypeMetadata2);
    v33(v25, OpaqueTypeMetadata2);
    uint64_t v26 = v52;
  }
  else
  {
    uint64_t v35 = (uint64_t)v44;
    v51(v27);
    uint64_t v36 = v45;
    uint64_t v37 = v46;
    BOOL v38 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 16);
    uint64_t v39 = v56;
    v38(v45, v35, v56);
    uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
    v40(v35, v39);
    v38((char *)v35, (uint64_t)v36, v39);
    uint64_t v61 = v15;
    uint64_t v62 = v57;
    swift_getOpaqueTypeConformance2();
    uint64_t v34 = v53;
    sub_10006F6C0(v35, OpaqueTypeMetadata2, v39);
    v40(v35, v39);
    v40((uint64_t)v36, v39);
  }
  uint64_t v61 = v15;
  uint64_t v62 = v57;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v60 = v58;
  swift_getWitnessTable();
  uint64_t v41 = v54;
  (*(void (**)(uint64_t, char *, uint64_t))(v54 + 16))(v55, v34, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v34, v26);
}

uint64_t sub_10007BC3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10007B5D8(*(void *)v2, *(void *)(v2 + 8), *(void (**)(uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_10007BC50(id *a1)
{
  id v1 = *a1;
  return sub_100070278();
}

uint64_t sub_10007BC7C()
{
  return sub_100070500();
}

uint64_t sub_10007BCA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(uint64_t))
{
  uint64_t v10 = sub_100025A08(a5);
  uint64_t v11 = sub_1000165CC(v10);
  __chkstk_darwin(v11);
  sub_1000204E8();
  sub_100016574(a1, v6, a5);
  return a6(v6);
}

uint64_t sub_10007BD30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10007BCA0(a1, a2, a3, a4, &qword_1000F5130, sub_100070584);
}

uint64_t sub_10007BD6C()
{
  uint64_t v0 = type metadata accessor for SidebarView(0);
  sub_10001C100(v0);
  id v1 = (uint64_t *)sub_100018D3C();

  return sub_10007559C(v1, v2);
}

unint64_t sub_10007BDBC()
{
  unint64_t result = qword_1000F6988;
  if (!qword_1000F6988)
  {
    sub_10001E8D0(&qword_1000F6970);
    sub_10001E88C(&qword_1000F6990, &qword_1000F6998);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F6988);
  }
  return result;
}

uint64_t sub_10007BE58()
{
  uint64_t v0 = type metadata accessor for SidebarView(0);
  sub_10001C100(v0);
  uint64_t v1 = sub_1000245EC();

  return sub_100075724(v1, v2, v3, v4);
}

uint64_t sub_10007BEA0()
{
  sub_1000220C0();
  sub_100080498();
  uint64_t v0 = sub_10002A734();
  if (!sub_100025B80(v0))
  {
    sub_100012D7C();
    uint64_t v1 = sub_1000226A4();
    v2(v1);
  }
  sub_100025A08(&qword_1000F67F8);
  sub_10001B6C4();
  uint64_t v3 = sub_100012DB8();

  return _swift_deallocObject(v3, v4, v5);
}

uint64_t sub_10007BF54()
{
  uint64_t v0 = type metadata accessor for SidebarView(0);
  sub_10001C100(v0);
  uint64_t v1 = sub_100018D3C();

  return sub_100076338(v1, v2, v3);
}

unint64_t sub_10007BFA4()
{
  unint64_t result = qword_1000F69F0;
  if (!qword_1000F69F0)
  {
    sub_10001E8D0(&qword_1000F69E8);
    sub_10007C044();
    sub_10001E88C(&qword_1000F6A20, &qword_1000F6A28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F69F0);
  }
  return result;
}

unint64_t sub_10007C044()
{
  unint64_t result = qword_1000F69F8;
  if (!qword_1000F69F8)
  {
    sub_10001E8D0(&qword_1000F6A00);
    type metadata accessor for DestinationRow(255);
    sub_10002CF08(&qword_1000F6A08, (void (*)(uint64_t))type metadata accessor for DestinationRow);
    swift_getOpaqueTypeConformance2();
    sub_10001E88C(&qword_1000F6A10, &qword_1000F6A18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F69F8);
  }
  return result;
}

uint64_t type metadata accessor for DestinationRow(uint64_t a1)
{
  return sub_10001C010(a1, (uint64_t *)&unk_1000F6C58);
}

uint64_t sub_10007C168()
{
  uint64_t v0 = type metadata accessor for SidebarView(0);
  sub_10001C100(v0);
  uint64_t v1 = sub_100016668();

  return sub_10007704C(v1, v2, v3, v4);
}

uint64_t sub_10007C1AC@<X0>(uint64_t a1@<X8>)
{
  sub_100070638((uint64_t)v3);
  return sub_100080120((uint64_t)v3, a1, &qword_1000F64F8);
}

uint64_t sub_10007C1F4(uint64_t a1)
{
  sub_100080120(a1, (uint64_t)v2, &qword_1000F64F8);
  sub_10007D1C8(v2);
  return sub_1000706BC((uint64_t)v2);
}

uint64_t sub_10007C240()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10007C268()
{
  sub_1000220C0();
  sub_100080498();
  uint64_t v0 = sub_10002A734();
  if (!sub_100025B80(v0))
  {
    sub_100012D7C();
    uint64_t v1 = sub_1000226A4();
    v2(v1);
  }
  sub_100025A08(&qword_1000F67F8);
  sub_10001B6C4();
  swift_unknownObjectRelease();
  uint64_t v3 = sub_10001511C();

  return _swift_deallocObject(v3, v4, v5);
}

uint64_t sub_10007C330()
{
  uint64_t v0 = type metadata accessor for SidebarView(0);
  sub_100022084(v0);
  sub_100021F6C();

  return sub_100077310();
}

uint64_t sub_10007C3B8(uint64_t a1, void *a2)
{
  return (*(uint64_t (**)(uint64_t, void))(v2 + 16))(a1, *a2);
}

unint64_t sub_10007C3E4()
{
  unint64_t result = qword_1000F6A38;
  if (!qword_1000F6A38)
  {
    sub_10001E8D0(&qword_1000F69C0);
    sub_10007C484();
    sub_10001E88C(&qword_1000F6A90, &qword_1000F6A98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F6A38);
  }
  return result;
}

unint64_t sub_10007C484()
{
  unint64_t result = qword_1000F6A40;
  if (!qword_1000F6A40)
  {
    sub_10001E8D0(&qword_1000F69B8);
    sub_10007C524();
    sub_10001E88C(&qword_1000F6A80, &qword_1000F6A88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F6A40);
  }
  return result;
}

unint64_t sub_10007C524()
{
  unint64_t result = qword_1000F6A48;
  if (!qword_1000F6A48)
  {
    sub_10001E8D0(&qword_1000F69B0);
    sub_10007C5C4();
    sub_10001E88C(&qword_1000F6A70, &qword_1000F6A78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F6A48);
  }
  return result;
}

unint64_t sub_10007C5C4()
{
  unint64_t result = qword_1000F6A50;
  if (!qword_1000F6A50)
  {
    sub_10001E8D0(&qword_1000F69A8);
    sub_10007C664();
    sub_10001E88C(&qword_1000F6A60, &qword_1000F6A68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F6A50);
  }
  return result;
}

unint64_t sub_10007C664()
{
  unint64_t result = qword_1000F6A58;
  if (!qword_1000F6A58)
  {
    sub_10001E8D0(&qword_1000F69A0);
    sub_10001E8D0(&qword_1000F69E8);
    type metadata accessor for NavigationDestinationEntity();
    sub_10007BFA4();
    sub_10002CF08(&qword_1000F4678, (void (*)(uint64_t))type metadata accessor for NavigationDestinationEntity);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F6A58);
  }
  return result;
}

uint64_t sub_10007C75C()
{
  return sub_100070100();
}

uint64_t sub_10007C780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10007BCA0(a1, a2, a3, a4, (uint64_t *)&unk_1000F8480, sub_100070114);
}

uint64_t sub_10007C7B4()
{
  uint64_t v1 = sub_10002431C();
  v2(v1);
  sub_10001C094();
  sub_100080458();
  v3();
  return v0;
}

uint64_t type metadata accessor for SidebarDropDelegate(uint64_t a1)
{
  return sub_10001C010(a1, qword_1000F6BC8);
}

uint64_t sub_10007C828(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10001C094();
  sub_100016618();
  v3();
  return a1;
}

uint64_t sub_10007C87C()
{
  type metadata accessor for RootNavigationDestination.DropBehavior();
  sub_100022284();
  sub_100024078();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000189C8();
  v0();
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v1 = sub_100012DB8();

  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10007C930()
{
  uint64_t v1 = type metadata accessor for RootNavigationDestination.DropBehavior();
  sub_100022084(v1);
  sub_100016844();
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + v3);
  uint64_t v6 = v0 + v5;
  uint64_t v8 = v0 + v7;
  uint64_t v9 = *(void *)(v0 + v7);
  uint64_t v10 = *(void *)(v8 + 8);
  uint64_t v11 = swift_task_alloc();
  uint64_t v12 = (void *)sub_100016658(v11);
  *uint64_t v12 = v13;
  v12[1] = sub_10005F998;
  uint64_t v14 = sub_100022588();
  return sub_100071CC0(v14, v15, v16, v2, v6, v4, v9, v10);
}

uint64_t sub_10007CA34()
{
  sub_10002348C();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_100016658(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_10004DED0;
  return sub_100072200(v4, v2, v5);
}

uint64_t sub_10007CAD8()
{
  sub_10002066C();
  type metadata accessor for RootNavigationDestination.DropBehavior();
  sub_100022284();
  sub_100024078();
  swift_unknownObjectRelease();
  sub_1000189C8();
  v0();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_100012DB8();
  sub_10001885C();
  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10007CB8C()
{
  uint64_t v1 = type metadata accessor for RootNavigationDestination.DropBehavior();
  sub_100022084(v1);
  sub_100016844();
  uint64_t v3 = *(void *)(v0 + v2);
  uint64_t v5 = *(void *)(v0 + v4);
  uint64_t v7 = v0 + v6;
  uint64_t v8 = *(void *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = (void *)sub_100016658(v9);
  *uint64_t v10 = v11;
  v10[1] = sub_10005F998;
  uint64_t v12 = sub_100022588();
  return sub_100072DCC(v12, v13, v14, v7, v3, v5, v8);
}

uint64_t sub_10007CC98(uint64_t a1, int *a2)
{
  *(void *)(v2 + 24) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_10007CD78;
  return v5(v2 + 16);
}

uint64_t sub_10007CD78()
{
  sub_10002348C();
  sub_10001FB2C();
  uint64_t v2 = *(void **)(v0 + 24);
  uint64_t v3 = *v1;
  sub_1000188C4();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  *uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v5 = *(uint64_t (**)(void))(v3 + 8);
  return v5();
}

uint64_t sub_10007CE78()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10007CEB8()
{
  sub_10002348C();
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)sub_100016658(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_10005F998;
  uint64_t v5 = sub_100022588();
  return sub_10007297C(v5, v6, v7, v1);
}

uint64_t sub_10007CF54()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10007CF8C()
{
  sub_10002348C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_100016658(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_10004DED0;
  uint64_t v3 = sub_1000235B4();
  return v4(v3);
}

void sub_10007D030(uint64_t a1)
{
  sub_100072B6C(a1, *(void **)(v1 + 16));
}

uint64_t sub_10007D038()
{
  sub_100025A08(&qword_1000F6B40);
  sub_10001C094();
  v1 += 8;
  uint64_t v2 = *(unsigned __int8 *)(v1 + 72);
  uint64_t v3 = ((v2 + 16) & ~v2) + *(void *)(v1 + 56);
  uint64_t v4 = v2 | 7;
  sub_100016618();
  v5();

  return _swift_deallocObject(v0, v3, v4);
}

uint64_t sub_10007D0C0()
{
  uint64_t v0 = sub_100025A08(&qword_1000F6B40);
  sub_10001C100(v0);
  uint64_t v1 = sub_100021F6C();

  return sub_100072D48(v1);
}

unint64_t sub_10007D120()
{
  unint64_t result = qword_1000F6B50;
  if (!qword_1000F6B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F6B50);
  }
  return result;
}

void sub_10007D16C(double *a1@<X8>)
{
  *a1 = sub_10007072C();
}

uint64_t sub_10007D198()
{
  return sub_10007078C();
}

uint64_t *sub_10007D1C8(uint64_t *a1)
{
  return a1;
}

uint64_t sub_10007D210(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10007D27C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100070218();
  *a1 = result;
  return result;
}

uint64_t sub_10007D2AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100025A08(&qword_1000F5130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for SidebarView.SidebarError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10007D3E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SidebarView.SidebarError()
{
  return &type metadata for SidebarView.SidebarError;
}

uint64_t *sub_10007D418(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for RootNavigationDestination();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t sub_10007D4E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RootNavigationDestination();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_release();
}

uint64_t sub_10007D558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for RootNavigationDestination();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

uint64_t sub_10007D5D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for RootNavigationDestination();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10007D664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for RootNavigationDestination();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10007D6E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for RootNavigationDestination();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t sub_10007D764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007D778);
}

uint64_t sub_10007D778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for RootNavigationDestination();
  sub_100021E0C();
  if (*(_DWORD *)(v7 + 84) != a2) {
    return sub_100020570(*(void *)(a1 + *(int *)(a3 + 20)));
  }

  return sub_1000225EC(a1, a2, v6);
}

uint64_t sub_10007D7FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007D810);
}

void sub_10007D810()
{
  sub_100007500();
  sub_100021E0C();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    sub_100021594(v1, v0, v0, v4);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 20)) = (v0 - 1);
  }
}

uint64_t sub_10007D888()
{
  uint64_t result = type metadata accessor for RootNavigationDestination();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10007D920(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for RootNavigationDestination();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(uint64_t *)((char *)a2 + v9 + 8);
    *uint64_t v10 = *(uint64_t *)((char *)a2 + v9);
    v10[1] = v12;
    swift_retain();
    swift_retain();
    uint64_t v13 = *(int *)(sub_100025A08(&qword_1000F68E0) + 32);
    uint64_t v14 = (char *)v10 + v13;
    uint64_t v15 = &v11[v13];
    if (sub_1000225EC((uint64_t)&v11[v13], 1, v7))
    {
      uint64_t v16 = sub_100025A08(&qword_1000F5130);
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v14, (uint64_t *)v15, v7);
      sub_100021594((uint64_t)v14, 0, 1, v7);
    }
    uint64_t v18 = *(int *)(a3 + 24);
    uint64_t v19 = (uint64_t *)((char *)a1 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
  }
  swift_retain();
  return a1;
}

uint64_t sub_10007DAB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RootNavigationDestination();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  swift_release();
  swift_release();
  uint64_t v7 = v6 + *(int *)(sub_100025A08(&qword_1000F68E0) + 32);
  if (!sub_1000225EC(v7, 1, v4)) {
    v5(v7, v4);
  }

  return swift_release();
}

uint64_t sub_10007DB98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for RootNavigationDestination();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = a2 + v8;
  uint64_t v11 = *(void *)(a2 + v8 + 8);
  *uint64_t v9 = *(void *)(a2 + v8);
  v9[1] = v11;
  swift_retain();
  swift_retain();
  uint64_t v12 = *(int *)(sub_100025A08(&qword_1000F68E0) + 32);
  uint64_t v13 = (char *)v9 + v12;
  uint64_t v14 = (const void *)(v10 + v12);
  if (sub_1000225EC(v10 + v12, 1, v6))
  {
    uint64_t v15 = sub_100025A08(&qword_1000F5130);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v13, (uint64_t)v14, v6);
    sub_100021594((uint64_t)v13, 0, 1, v6);
  }
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  swift_retain();
  return a1;
}

char *sub_10007DCE4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for RootNavigationDestination();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  *(void *)&a1[v9] = *(void *)&a2[v9];
  swift_retain();
  swift_release();
  *((void *)v10 + 1) = *((void *)v11 + 1);
  swift_retain();
  swift_release();
  uint64_t v12 = *(int *)(sub_100025A08(&qword_1000F68E0) + 32);
  uint64_t v13 = &v10[v12];
  uint64_t v14 = &v11[v12];
  LODWORD(v11) = sub_1000225EC((uint64_t)v13, 1, v6);
  int v15 = sub_1000225EC((uint64_t)v14, 1, v6);
  if (!v11)
  {
    if (!v15)
    {
      v8(v13, v14, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_100025A08(&qword_1000F5130);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
  sub_100021594((uint64_t)v13, 0, 1, v6);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 24);
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  *(void *)uint64_t v18 = *(void *)v19;
  *((void *)v18 + 1) = *((void *)v19 + 1);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10007DEE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for RootNavigationDestination();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = a2 + v8;
  uint64_t v11 = *(void *)(a2 + v8 + 8);
  *uint64_t v9 = *(void *)(a2 + v8);
  v9[1] = v11;
  uint64_t v12 = *(int *)(sub_100025A08(&qword_1000F68E0) + 32);
  uint64_t v13 = (char *)v9 + v12;
  uint64_t v14 = (const void *)(v10 + v12);
  if (sub_1000225EC((uint64_t)v14, 1, v6))
  {
    uint64_t v15 = sub_100025A08(&qword_1000F5130);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v13, (uint64_t)v14, v6);
    sub_100021594((uint64_t)v13, 0, 1, v6);
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

char *sub_10007E00C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for RootNavigationDestination();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  *(void *)&a1[v9] = *(void *)&a2[v9];
  swift_release();
  *((void *)v10 + 1) = *((void *)v11 + 1);
  swift_release();
  uint64_t v12 = *(int *)(sub_100025A08(&qword_1000F68E0) + 32);
  uint64_t v13 = &v10[v12];
  uint64_t v14 = &v11[v12];
  int v15 = sub_1000225EC((uint64_t)v13, 1, v6);
  int v16 = sub_1000225EC((uint64_t)v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      v8(v13, v14, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_100025A08(&qword_1000F5130);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
  sub_100021594((uint64_t)v13, 0, 1, v6);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v19 = &a1[v18];
  uint64_t v20 = (uint64_t *)&a2[v18];
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *(void *)uint64_t v19 = v22;
  *((void *)v19 + 1) = v21;
  swift_release();
  return a1;
}

uint64_t sub_10007E1E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007E1FC);
}

uint64_t sub_10007E1FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for RootNavigationDestination();
  sub_100021E0C();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    sub_100025A08(&qword_1000F68E0);
    sub_100021E0C();
    if (*(_DWORD *)(v11 + 84) != a2) {
      return sub_100020570(*(void *)(a1 + *(int *)(a3 + 24) + 8));
    }
    uint64_t v8 = v10;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
  }

  return sub_1000225EC(v9, a2, v8);
}

uint64_t sub_10007E2B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007E2C8);
}

void sub_10007E2C8()
{
  sub_100007500();
  sub_100021E0C();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v1;
  }
  else
  {
    sub_100025A08(&qword_1000F68E0);
    sub_100021E0C();
    if (*(_DWORD *)(v9 + 84) != v3)
    {
      *(void *)(v1 + *(int *)(v2 + 24) + 8) = (v0 - 1);
      return;
    }
    uint64_t v6 = v8;
    uint64_t v7 = v1 + *(int *)(v2 + 20);
  }

  sub_100021594(v7, v0, v0, v6);
}

void sub_10007E374()
{
  type metadata accessor for RootNavigationDestination();
  if (v0 <= 0x3F)
  {
    sub_10000A348(319, (unint64_t *)&unk_1000F6C68, &qword_1000F5130, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Binding);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_10007E468()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_10007E4A4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_10007E4F0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10007E558(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  swift_release();
  return a1;
}

uint64_t sub_10007E5A8(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10007E5E8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for ConditionalSection()
{
  return sub_100006F04();
}

uint64_t sub_10007E640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 48);
}

uint64_t sub_10007E648()
{
  type metadata accessor for Optional();
  uint64_t result = type metadata accessor for Binding();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *sub_10007E72C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v8 = *(void *)(v6 + 64);
  }
  else {
    size_t v8 = *(void *)(v6 + 64) + 1;
  }
  size_t v9 = ((v7 + 16) & ~v7) + v8;
  uint64_t v10 = *(void *)(v4 - 8);
  int v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = v11;
  unint64_t v13 = ((v9 + v11 + 1) & ~(unint64_t)v11) + *(void *)(v10 + 64);
  int v14 = (v11 | *(_DWORD *)(v6 + 80)) & 0x100000;
  uint64_t v15 = *a2;
  *a1 = *a2;
  if ((v11 | v7) > 7 || v14 != 0 || v13 > 0x18)
  {
    a1 = (void *)(v15
                  + (((v11 | v7) & 0xF8 ^ 0x1F8) & ((v11 | v7) + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v25 = v4;
    uint64_t v19 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v20 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v19 = *v20;
    __dst = (void *)(((unint64_t)v19 + v7 + 8) & ~v7);
    uint64_t v21 = (const void *)(((unint64_t)v20 + v7 + 8) & ~v7);
    swift_retain();
    swift_retain();
    if (sub_1000225EC((uint64_t)v21, 1, v5))
    {
      memcpy(__dst, v21, v8);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(__dst, v21, v5);
      sub_100021594((uint64_t)__dst, 0, 1, v5);
    }
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(((unint64_t)a1 + v9 + v12 + 1) & ~v12, ((unint64_t)a2 + v9 + v12 + 1) & ~v12, v25);
  }
  return a1;
}

uint64_t sub_10007E960(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 15;
  swift_release();
  unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 8) & ~v8;
  if (!sub_1000225EC(v9, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9, v6);
  }
  uint64_t v10 = *(void *)(a2 + 24);
  int v11 = *(uint64_t (**)(uint64_t))(*(void *)(v10 - 8) + 8);
  uint64_t v12 = *(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  uint64_t v13 = a1 + *(void *)(v7 + 64) + ((v8 + 16) & ~v8);
  if (!*(_DWORD *)(v7 + 84)) {
    ++v13;
  }

  return v11((v13 + v12 + 1) & ~v12);
}

void *sub_10007EA90(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v6 = *v7;
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  int v11 = (void *)(((unint64_t)v6 + v10 + 8) & ~v10);
  uint64_t v12 = (const void *)(((unint64_t)v7 + v10 + 8) & ~v10);
  swift_retain();
  swift_retain();
  if (sub_1000225EC((uint64_t)v12, 1, v8))
  {
    int v13 = *(_DWORD *)(v9 + 84);
    uint64_t v14 = *(void *)(v9 + 64);
    if (v13) {
      size_t v15 = *(void *)(v9 + 64);
    }
    else {
      size_t v15 = v14 + 1;
    }
    memcpy(v11, v12, v15);
  }
  else
  {
    uint64_t v17 = *(void (**)(void *, const void *, uint64_t))(v9 + 16);
    uint64_t v16 = v9 + 16;
    v17(v11, v12, v8);
    sub_100021594((uint64_t)v11, 0, 1, v8);
    int v13 = *(_DWORD *)(v16 + 68);
    uint64_t v14 = *(void *)(v16 + 48);
  }
  uint64_t v18 = v14 + ((v10 + 16) & ~v10);
  if (!v13) {
    ++v18;
  }
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  *uint64_t v19 = *v20;
  uint64_t v21 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v21 + 16))((unint64_t)&v19[*(unsigned __int8 *)(v21 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v21 + 80), (unint64_t)&v20[*(unsigned __int8 *)(v21 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  return a1;
}

void *sub_10007EC28(void *a1, void *a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v7 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFF8;
  *uint64_t v7 = *(void *)(v6 & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (void *)(((unint64_t)v7 + v11 + 8) & ~v11);
  int v13 = (const void *)((v11 + 8 + v8) & ~v11);
  int v14 = sub_1000225EC((uint64_t)v12, 1, v9);
  int v15 = sub_1000225EC((uint64_t)v13, 1, v9);
  if (v14)
  {
    if (v15)
    {
      int v16 = *(_DWORD *)(v10 + 84);
      size_t v17 = *(void *)(v10 + 64);
LABEL_6:
      if (v16) {
        size_t v18 = v17;
      }
      else {
        size_t v18 = v17 + 1;
      }
      memcpy(v12, v13, v18);
      goto LABEL_12;
    }
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v12, v13, v9);
    sub_100021594((uint64_t)v12, 0, 1, v9);
  }
  else
  {
    if (v15)
    {
      (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
      int v16 = *(_DWORD *)(v10 + 84);
      size_t v17 = *(void *)(v10 + 64);
      goto LABEL_6;
    }
    (*(void (**)(void *, const void *, uint64_t))(v10 + 24))(v12, v13, v9);
  }
LABEL_12:
  uint64_t v19 = *(void *)(v10 + 64) + ((v11 + 16) & ~v11);
  if (!*(_DWORD *)(v10 + 84)) {
    ++v19;
  }
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  *uint64_t v20 = *v21;
  uint64_t v22 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v22 + 24))((unint64_t)&v20[*(unsigned __int8 *)(v22 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v22 + 80), (unint64_t)&v21[*(unsigned __int8 *)(v22 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
  return a1;
}

void *sub_10007EE40(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  unint64_t v6 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v6 = *v7;
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = (void *)(((unint64_t)v6 + v10 + 8) & ~v10);
  uint64_t v12 = (const void *)(((unint64_t)v7 + v10 + 8) & ~v10);
  if (sub_1000225EC((uint64_t)v12, 1, v8))
  {
    int v13 = *(_DWORD *)(v9 + 84);
    size_t v14 = *(void *)(v9 + 64);
    if (v13) {
      size_t v15 = v14;
    }
    else {
      size_t v15 = v14 + 1;
    }
    memcpy(v11, v12, v15);
  }
  else
  {
    size_t v17 = *(void (**)(void *, const void *, uint64_t))(v9 + 32);
    uint64_t v16 = v9 + 32;
    v17(v11, v12, v8);
    sub_100021594((uint64_t)v11, 0, 1, v8);
    int v13 = *(_DWORD *)(v16 + 52);
    size_t v14 = *(void *)(v16 + 32);
  }
  size_t v18 = v14 + ((v10 + 16) & ~v10);
  if (!v13) {
    ++v18;
  }
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  *uint64_t v19 = *v20;
  uint64_t v21 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v21 + 32))((unint64_t)&v19[*(unsigned __int8 *)(v21 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v21 + 80), (unint64_t)&v20[*(unsigned __int8 *)(v21 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  return a1;
}

void *sub_10007EFCC(void *a1, void *a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  unint64_t v7 = (unint64_t)a1 + 15;
  swift_release();
  unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = v6 & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v7 & 0xFFFFFFFFFFFFFFF8) = *(void *)(v6 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  int v13 = (void *)((v12 + 8 + v8) & ~v12);
  size_t v14 = (const void *)((v12 + 8 + v9) & ~v12);
  int v15 = sub_1000225EC((uint64_t)v13, 1, v10);
  int v16 = sub_1000225EC((uint64_t)v14, 1, v10);
  if (v15)
  {
    if (v16)
    {
      int v17 = *(_DWORD *)(v11 + 84);
      size_t v18 = *(void *)(v11 + 64);
LABEL_6:
      if (v17) {
        size_t v19 = v18;
      }
      else {
        size_t v19 = v18 + 1;
      }
      memcpy(v13, v14, v19);
      goto LABEL_12;
    }
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v13, v14, v10);
    sub_100021594((uint64_t)v13, 0, 1, v10);
  }
  else
  {
    if (v16)
    {
      (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
      int v17 = *(_DWORD *)(v11 + 84);
      size_t v18 = *(void *)(v11 + 64);
      goto LABEL_6;
    }
    (*(void (**)(void *, const void *, uint64_t))(v11 + 40))(v13, v14, v10);
  }
LABEL_12:
  uint64_t v20 = *(void *)(v11 + 64) + ((v12 + 16) & ~v12);
  if (!*(_DWORD *)(v11 + 84)) {
    ++v20;
  }
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  *uint64_t v21 = *v22;
  uint64_t v23 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v23 + 40))((unint64_t)&v21[*(unsigned __int8 *)(v23 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v23 + 80), (unint64_t)&v22[*(unsigned __int8 *)(v23 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
  return a1;
}

uint64_t sub_10007F1D4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  if (v7) {
    unsigned int v8 = v7 - 1;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = v8;
  }
  uint64_t v10 = *(void *)(a3 + 24);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  if (v12 <= v9) {
    unsigned int v13 = v9;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v11 + 84);
  }
  uint64_t v14 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v15 = *(unsigned __int8 *)(v11 + 80);
  if (v7) {
    uint64_t v16 = *(void *)(*(void *)(v5 - 8) + 64);
  }
  else {
    uint64_t v16 = *(void *)(*(void *)(v5 - 8) + 64) + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v17 = v16 + ((v14 + 16) & ~v14);
  int v18 = a2 - v13;
  if (a2 <= v13) {
    goto LABEL_34;
  }
  uint64_t v19 = ((v15 + v17 + 1) & ~v15) + *(void *)(*(void *)(v10 - 8) + 64);
  char v20 = 8 * v19;
  if (v19 <= 3)
  {
    unsigned int v23 = ((v18 + ~(-1 << v20)) >> v20) + 1;
    if (HIWORD(v23))
    {
      int v21 = *(_DWORD *)((char *)a1 + v19);
      if (!v21) {
        goto LABEL_34;
      }
      goto LABEL_24;
    }
    if (v23 > 0xFF)
    {
      int v21 = *(unsigned __int16 *)((char *)a1 + v19);
      if (!*(unsigned __int16 *)((char *)a1 + v19)) {
        goto LABEL_34;
      }
      goto LABEL_24;
    }
    if (v23 < 2)
    {
LABEL_34:
      if (v9 >= v12)
      {
        uint64_t v28 = (unint64_t *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
        if ((v8 & 0x80000000) != 0)
        {
          unsigned int v30 = sub_1000225EC(((unint64_t)v28 + v14 + 8) & ~v14, v7, v5);
          if (v30 >= 2) {
            return v30 - 1;
          }
          else {
            return 0;
          }
        }
        else
        {
          unint64_t v29 = *v28;
          if (v29 >= 0xFFFFFFFF) {
            LODWORD(v29) = -1;
          }
          return (v29 + 1);
        }
      }
      else
      {
        uint64_t v27 = ((unint64_t)a1 + v15 + v17 + 1) & ~v15;
        return sub_1000225EC(v27, v12, v10);
      }
    }
  }
  int v21 = *((unsigned __int8 *)a1 + v19);
  if (!*((unsigned char *)a1 + v19)) {
    goto LABEL_34;
  }
LABEL_24:
  int v24 = (v21 - 1) << v20;
  if (v19 > 3) {
    int v24 = 0;
  }
  if (v19)
  {
    if (v19 <= 3) {
      int v25 = v19;
    }
    else {
      int v25 = 4;
    }
    switch(v25)
    {
      case 2:
        int v26 = *a1;
        break;
      case 3:
        int v26 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v26 = *(_DWORD *)a1;
        break;
      default:
        int v26 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v26 = 0;
  }
  return v13 + (v26 | v24) + 1;
}

void sub_10007F450(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  int v7 = 0;
  uint64_t v8 = *(void *)(a4 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  if (v10) {
    unsigned int v11 = v10 - 1;
  }
  else {
    unsigned int v11 = 0;
  }
  uint64_t v12 = *(void *)(a4 + 24);
  uint64_t v13 = *(void *)(v12 - 8);
  if (v11 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  else {
    unsigned int v14 = v11;
  }
  uint64_t v15 = *(unsigned int *)(v13 + 84);
  if (v15 <= v14) {
    unsigned int v16 = v14;
  }
  else {
    unsigned int v16 = *(_DWORD *)(v13 + 84);
  }
  uint64_t v17 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v18 = (v17 + 16) & ~v17;
  size_t v19 = *(void *)(*(void *)(v8 - 8) + 64);
  if (!v10) {
    ++v19;
  }
  size_t v20 = v18 + v19;
  uint64_t v21 = *(unsigned __int8 *)(v13 + 80);
  size_t v22 = ((v21 + v18 + v19 + 1) & ~v21) + *(void *)(v13 + 64);
  char v23 = 8 * v22;
  BOOL v24 = a3 >= v16;
  unsigned int v25 = a3 - v16;
  if (v25 != 0 && v24)
  {
    if (v22 <= 3)
    {
      unsigned int v26 = ((v25 + ~(-1 << v23)) >> v23) + 1;
      if (HIWORD(v26))
      {
        int v7 = 4;
      }
      else if (v26 >= 0x100)
      {
        int v7 = 2;
      }
      else
      {
        int v7 = v26 > 1;
      }
    }
    else
    {
      int v7 = 1;
    }
  }
  if (v16 < a2)
  {
    unsigned int v27 = ~v16 + a2;
    if (v22 < 4)
    {
      int v28 = (v27 >> v23) + 1;
      if (v22)
      {
        int v29 = v27 & ~(-1 << v23);
        bzero(a1, v22);
        if (v22 == 3)
        {
          *(_WORD *)a1 = v29;
          a1[2] = BYTE2(v29);
        }
        else if (v22 == 2)
        {
          *(_WORD *)a1 = v29;
        }
        else
        {
          *a1 = v29;
        }
      }
    }
    else
    {
      bzero(a1, v22);
      *(_DWORD *)a1 = v27;
      int v28 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v22] = v28;
        return;
      case 2:
        *(_WORD *)&a1[v22] = v28;
        return;
      case 3:
        goto LABEL_75;
      case 4:
        *(_DWORD *)&a1[v22] = v28;
        return;
      default:
        return;
    }
  }
  switch(v7)
  {
    case 1:
      a1[v22] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v22] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_75:
      __break(1u);
      JUMPOUT(0x10007F844);
    case 4:
      *(_DWORD *)&a1[v22] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (!a2) {
        return;
      }
LABEL_33:
      if (v14 < v15)
      {
        uint64_t v30 = (unint64_t)&a1[v21 + 1 + v20] & ~v21;
        uint64_t v10 = v15;
        uint64_t v8 = v12;
LABEL_35:
        sub_100021594(v30, a2, v10, v8);
        return;
      }
      if (v14 >= a2)
      {
        uint64_t v34 = (void *)((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8);
        if ((v11 & 0x80000000) == 0)
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v35 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v35 = (a2 - 1);
          }
          void *v34 = v35;
          return;
        }
        a1 = (char *)(((unint64_t)v34 + v17 + 8) & ~v17);
        if (v11 >= a2)
        {
          a2 = (a2 + 1);
          uint64_t v30 = ((unint64_t)v34 + v17 + 8) & ~v17;
          goto LABEL_35;
        }
        if (v19 <= 3) {
          int v36 = ~(-1 << (8 * v19));
        }
        else {
          int v36 = -1;
        }
        if (v19)
        {
          int v32 = v36 & (~v11 + a2);
          if (v19 <= 3) {
            int v37 = v19;
          }
          else {
            int v37 = 4;
          }
          bzero(a1, v19);
          switch(v37)
          {
            case 2:
LABEL_68:
              *(_WORD *)a1 = v32;
              break;
            case 3:
LABEL_72:
              *(_WORD *)a1 = v32;
              a1[2] = BYTE2(v32);
              break;
            case 4:
LABEL_73:
              *(_DWORD *)a1 = v32;
              break;
            default:
LABEL_47:
              *a1 = v32;
              break;
          }
        }
      }
      else
      {
        if (v20 <= 3) {
          int v31 = ~(-1 << (8 * v20));
        }
        else {
          int v31 = -1;
        }
        if (v20)
        {
          int v32 = v31 & (~v14 + a2);
          if (v20 <= 3) {
            int v33 = v20;
          }
          else {
            int v33 = 4;
          }
          bzero(a1, v20);
          switch(v33)
          {
            case 2:
              goto LABEL_68;
            case 3:
              goto LABEL_72;
            case 4:
              goto LABEL_73;
            default:
              goto LABEL_47;
          }
        }
      }
      return;
  }
}

uint64_t type metadata accessor for ConditionalSelectionList()
{
  return swift_getGenericMetadata();
}

unint64_t sub_10007F8A8()
{
  unint64_t result = qword_1000F6DA0;
  if (!qword_1000F6DA0)
  {
    sub_10001E8D0(&qword_1000F6918);
    sub_100077CBC();
    sub_10002CF08(&qword_1000F6340, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F6DA0);
  }
  return result;
}

unint64_t sub_10007F958()
{
  unint64_t result = qword_1000F6DA8;
  if (!qword_1000F6DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F6DA8);
  }
  return result;
}

uint64_t sub_10007F9A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007F9C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007FA04()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007FA4C@<X0>(uint64_t a1@<X8>)
{
  return sub_10007B4D8(*(void *)(v1 + 48), *(void *)(v1 + 24), a1);
}

uint64_t sub_10007FA70@<X0>(uint64_t a1@<X8>)
{
  return sub_100079ED8(*(void *)(v1 + 16), a1);
}

unint64_t sub_10007FA78()
{
  unint64_t result = qword_1000F6DD0;
  if (!qword_1000F6DD0)
  {
    sub_10001E8D0(&qword_1000F6DC0);
    sub_10001E88C(&qword_1000F6DD8, &qword_1000F6DE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F6DD0);
  }
  return result;
}

uint64_t sub_10007FB14()
{
  uint64_t v1 = sub_10002431C();
  v2(v1);
  sub_10001C094();
  sub_100020628();
  v3();
  return v0;
}

uint64_t sub_10007FB6C()
{
  return sub_10007A780(*(void **)(v0 + 16), (unsigned int *)&enum case for LibraryEditingOption.folderDetails(_:));
}

uint64_t sub_10007FB94()
{
  sub_10002066C();
  type metadata accessor for DestinationRow(0);
  sub_100025AB4();
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = type metadata accessor for RootNavigationDestination();
  sub_10001C094();
  uint64_t v8 = *(void (**)(uint64_t))(v7 + 8);
  uint64_t v9 = sub_100018A6C();
  v8(v9);
  unint64_t v10 = v1 + v3 + *(int *)(v0 + 20);
  swift_release();
  swift_release();
  uint64_t v11 = sub_100025A08(&qword_1000F68E0);
  if (!sub_1000223A8(v11)) {
    ((void (*)(unint64_t, uint64_t))v8)(v10, v6);
  }
  swift_release();

  sub_10001885C();
  return _swift_deallocObject(v12, v13, v14);
}

uint64_t sub_10007FCA4()
{
  uint64_t v0 = type metadata accessor for DestinationRow(0);
  sub_100022084(v0);
  uint64_t v2 = sub_10001B458((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_10007A5C4(v2, v3);
}

uint64_t sub_10007FCFC()
{
  return sub_10007A780(*(void **)(v0 + 16), (unsigned int *)&enum case for LibraryEditingOption.folderDeletion(_:));
}

uint64_t sub_10007FD20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  if (a7)
  {
    sub_10002CF58(a4, a5, a6 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10007FD6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  if (a7)
  {
    sub_100010C50(a4, a5, a6 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10007FDBC()
{
  uint64_t v0 = type metadata accessor for DestinationRow(0);
  sub_100022084(v0);
  sub_10001B458((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_10007A570();
}

unint64_t sub_10007FE08()
{
  unint64_t result = qword_1000F6E88;
  if (!qword_1000F6E88)
  {
    sub_10001E8D0(&qword_1000F6E18);
    sub_10007FEA8();
    sub_10001E88C(&qword_1000F6E98, &qword_1000F6EA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F6E88);
  }
  return result;
}

unint64_t sub_10007FEA8()
{
  unint64_t result = qword_1000F6E90;
  if (!qword_1000F6E90)
  {
    sub_10001E8D0(&qword_1000F6E10);
    sub_10001E8D0(&qword_1000F6E00);
    type metadata accessor for BorderlessButtonStyle();
    sub_10001E88C(&qword_1000F6E78, &qword_1000F6E00);
    sub_10002CF08(&qword_1000F6E80, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F6E90);
  }
  return result;
}

uint64_t sub_10007FFDC()
{
  sub_10002066C();
  type metadata accessor for DestinationRow(0);
  sub_100025AB4();
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = type metadata accessor for RootNavigationDestination();
  sub_10001C094();
  uint64_t v6 = *(void (**)(uint64_t))(v5 + 8);
  uint64_t v7 = sub_100018A6C();
  v6(v7);
  unint64_t v8 = v1 + v3 + *(int *)(v0 + 20);
  swift_release();
  swift_release();
  uint64_t v9 = sub_100025A08(&qword_1000F68E0);
  if (!sub_1000223A8(v9)) {
    ((void (*)(unint64_t, uint64_t))v6)(v8, v4);
  }
  swift_release();
  sub_10001885C();
  return _swift_deallocObject(v10, v11, v12);
}

uint64_t sub_1000800D8()
{
  uint64_t v0 = type metadata accessor for DestinationRow(0);
  sub_10001C100(v0);

  return sub_100079A00();
}

uint64_t sub_100080118@<X0>(uint64_t a1@<X8>)
{
  return sub_100079A58(*(void *)(v1 + 16), a1);
}

uint64_t sub_100080120(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100025A08(a3);
  sub_10001C094();
  sub_100020628();
  v4();
  return a2;
}

uint64_t sub_100080178(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000801A4@<X0>(uint64_t *a1@<X8>)
{
  return sub_10007AAEC(a1);
}

uint64_t sub_1000801AC()
{
  return swift_getWitnessTable();
}

uint64_t sub_10008029C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1000803A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100080464()
{
  return static Published.subscript.setter();
}

uint64_t sub_100080484()
{
  return v0;
}

uint64_t sub_100080498()
{
  return swift_release();
}

uint64_t sub_1000804B0()
{
  return static Published.subscript.setter();
}

uint64_t sub_1000804D0(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return String.subscript.getter();
  }
  else {
    return 0;
  }
}

unint64_t sub_100080518(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    sub_10008C298(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      unsigned int v5 = _StringGuts.foreignErrorCorrectedScalar(startingAt:)();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
        _StringObject.sharedUTF8.getter();
      }
      unsigned int v5 = _decodeScalar(_:startingAt:)();
    }
  }
  else
  {
    unsigned int v5 = 0;
  }
  return v5 | ((unint64_t)(v2 == 0) << 32);
}

uint64_t sub_1000805F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100080628(a1, (uint64_t (*)(void))&type metadata accessor for ShortcutsLibraryItem, a2);
}

uint64_t sub_100080610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100080628(a1, (uint64_t (*)(void))&type metadata accessor for RootNavigationDestination, a2);
}

uint64_t sub_100080628@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = a2(0);
  uint64_t v7 = v6;
  if (v5)
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a3, a1+ ((*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80)), v6);
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = 1;
  }

  return sub_100021594(a3, v8, 1, v7);
}

unint64_t sub_1000806D4(uint64_t a1, void *a2)
{
  id v22 = a2;
  uint64_t v3 = type metadata accessor for IndexPath();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100025A08(&qword_1000F5120);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v23 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v10 = *(void *)(a1 + 16);
  v17[1] = a1;
  if (v10)
  {
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v11 = v4 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v20 = *(void *)(v11 + 56);
    uint64_t v21 = v12;
    uint64_t v18 = (void (**)(char *, uint64_t))(v11 - 8);
    size_t v19 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    swift_bridgeObjectRetain();
    while (1)
    {
      v21(v9, v13, v3);
      sub_100021594((uint64_t)v9, 0, 1, v3);
      if (sub_1000225EC((uint64_t)v9, 1, v3) == 1) {
        break;
      }
      (*v19)(v6, v9, v3);
      sub_100021E68();
      uint64_t v14 = sub_1000AA7C8((uint64_t)v6);
      swift_release();
      (*v18)(v6, v3);
      if (v14)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v13 += v20;
      if (!--v10) {
        goto LABEL_11;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_11:
    sub_100021594((uint64_t)v9, 1, 1, v3);
  }
  swift_bridgeObjectRelease();
  unint64_t v15 = v23;

  return v15;
}

void *sub_100080964(uint64_t a1, void *a2, char a3, void *a4, unint64_t a5, void *a6)
{
  uint64_t v8 = _swiftEmptyArrayStorage;
  unint64_t v20 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    uint64_t v12 = *(void *)(type metadata accessor for LibraryEditingAction() - 8);
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v14 = *(void *)(v12 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1000853E4(v13, (uint64_t)a2, a3 & 1, a4, a5, a6, &v19);
      if (v6) {
        break;
      }
      if (v19)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v13 += v14;
      if (!--v9)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = (void *)v20;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v8 = (void *)v20;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_11:

    swift_bridgeObjectRelease();
  }

  return v8;
}

char *sub_100080B30(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  id v30 = a2;
  uint64_t v5 = sub_100025A08(&qword_1000F5120);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v26 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  int v29 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unsigned int v25 = (char *)&v23 - v11;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v12; uint64_t v12 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v31 = v8;
    uint64_t v23 = v3;
    unint64_t v28 = a1 & 0xC000000000000001;
    uint64_t v13 = (char *)_swiftEmptyArrayStorage;
    unsigned int v27 = (void (**)(char *, char *, uint64_t))(v26 + 32);
    uint64_t v14 = 4;
    unint64_t v24 = a1;
    while (1)
    {
      uint64_t v8 = v14 - 4;
      id v15 = v28 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a1 + 8 * v14);
      unsigned int v16 = v15;
      uint64_t v3 = v14 - 3;
      if (__OFADD__(v8, 1)) {
        break;
      }
      sub_100021E68();
      sub_1000AADBC();

      swift_release();
      uint64_t v17 = v31;
      if (sub_1000225EC((uint64_t)v7, 1, v31) == 1)
      {
        sub_100025E44((uint64_t)v7, &qword_1000F5120);
      }
      else
      {
        uint64_t v18 = *v27;
        uint64_t v19 = v25;
        (*v27)(v25, v7, v17);
        v18(v29, v19, v17);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v13 = (char *)sub_100029148(0, *((void *)v13 + 2) + 1, 1, (uint64_t)v13, &qword_1000F70E0, (uint64_t (*)(void))&type metadata accessor for IndexPath, (uint64_t (*)(void))&type metadata accessor for IndexPath, (void (*)(void))&type metadata accessor for IndexPath);
        }
        unint64_t v21 = *((void *)v13 + 2);
        unint64_t v20 = *((void *)v13 + 3);
        if (v21 >= v20 >> 1) {
          uint64_t v13 = (char *)sub_100029148(v20 > 1, v21 + 1, 1, (uint64_t)v13, &qword_1000F70E0, (uint64_t (*)(void))&type metadata accessor for IndexPath, (uint64_t (*)(void))&type metadata accessor for IndexPath, (void (*)(void))&type metadata accessor for IndexPath);
        }
        *((void *)v13 + 2) = v21 + 1;
        v18(&v13[((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(void *)(v26 + 72) * v21], v29, v31);
        a1 = v24;
      }
      ++v14;
      if (v3 == v12)
      {

        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }

  swift_bridgeObjectRelease();
  return (char *)_swiftEmptyArrayStorage;
}

uint64_t sub_100080F00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v30 = (char *)a3;
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v29 - v10;
  uint64_t v12 = sub_100025A08(&qword_1000F5120);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = *(void *)(a1 + 16);
  v29[1] = a1;
  if (v33)
  {
    unsigned int v16 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    uint64_t v39 = v16;
    uint64_t v34 = a1 + ((*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64));
    uint64_t v17 = *(void *)(v15 + 56);
    uint64_t v35 = (void (**)(char *, char *, uint64_t))(v15 + 16);
    uint64_t v37 = a2 + 56;
    uint64_t v38 = v17;
    uint64_t v18 = (void (**)(char *, uint64_t))(v15 - 8);
    swift_bridgeObjectRetain();
    uint64_t v19 = 0;
    uint64_t v31 = v14;
    while (1)
    {
      v39(v14, v34 + v38 * v19, v5);
      sub_100021594((uint64_t)v14, 0, 1, v5);
      if (sub_1000225EC((uint64_t)v14, 1, v5) == 1) {
        break;
      }
      uint64_t v36 = v19;
      uint64_t v20 = v15;
      int v32 = *v35;
      v32(v11, v14, v5);
      if (*(void *)(a2 + 16))
      {
        uint64_t v21 = a2;
        sub_10008979C(&qword_1000F70D0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
        uint64_t v22 = dispatch thunk of Hashable._rawHashValue(seed:)();
        uint64_t v23 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v24 = v22 & ~v23;
        if ((*(void *)(v37 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24))
        {
          uint64_t v25 = ~v23;
          while (1)
          {
            v39(v9, *(void *)(a2 + 48) + v24 * v38, v5);
            sub_10008979C(&qword_1000F70D8, (void (*)(uint64_t))&type metadata accessor for IndexPath);
            char v26 = dispatch thunk of static Equatable.== infix(_:_:)();
            (*v18)(v9, v5);
            if (v26) {
              break;
            }
            unint64_t v24 = (v24 + 1) & v25;
            a2 = v21;
            if (((*(void *)(v37 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
              goto LABEL_9;
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v27 = (uint64_t)v30;
          v32(v30, v11, v5);
          sub_100021594(v27, 0, 1, v5);
          return swift_bridgeObjectRelease();
        }
      }
LABEL_9:
      uint64_t v19 = v36 + 1;
      (*v18)(v11, v5);
      uint64_t v15 = v20;
      uint64_t v14 = v31;
      if (v19 == v33) {
        goto LABEL_13;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_13:
    sub_100021594((uint64_t)v14, 1, 1, v5);
  }
  swift_bridgeObjectRelease();
  sub_100021594((uint64_t)v30, 1, 1, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100081300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100008AD4(a1, a2, a3);
}

uint64_t sub_100081328(uint64_t a1)
{
  type metadata accessor for WFWorkflowTypeName(0);
  sub_10008979C((unint64_t *)&unk_1000F71C0, type metadata accessor for WFWorkflowTypeName);
  uint64_t v2 = Set.init(minimumCapacity:)();
  uint64_t v9 = v2;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      uint64_t v5 = *(void **)(a1 + 8 * i + 32);
      sub_100089A6C(&v8, v5);
    }
    swift_bridgeObjectRelease();
    return v9;
  }
  else
  {
    uint64_t v6 = v2;
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_10008140C(uint64_t a1)
{
  uint64_t v2 = Set.init(minimumCapacity:)();
  uint64_t v10 = v2;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_100089C44(&v9, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v10;
  }
  else
  {
    uint64_t v7 = v2;
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_1000814C0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  Swift::Int v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v8 = (char *)&v19 - v7;
  uint64_t v9 = sub_100025A08(&qword_1000F5120);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10008979C(&qword_1000F70D0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  uint64_t v22 = Set.init(minimumCapacity:)();
  uint64_t v19 = a1;
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    uint64_t v13 = v3 + 16;
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v15 = v19 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v20 = *(void *)(v13 + 56);
    uint64_t v21 = v14;
    unsigned int v16 = (void (**)(char *, char *, uint64_t))(v13 + 16);
    uint64_t v17 = (void (**)(char *, uint64_t))(v13 - 8);
    while (1)
    {
      v21(v11, v15, v2);
      sub_100021594((uint64_t)v11, 0, 1, v2);
      if (sub_1000225EC((uint64_t)v11, 1, v2) == 1) {
        break;
      }
      (*v16)(v6, v11, v2);
      sub_100089DD0((uint64_t)v8, v6);
      (*v17)(v8, v2);
      v15 += v20;
      if (!--v12) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    sub_100021594((uint64_t)v11, 1, 1, v2);
  }
  swift_bridgeObjectRelease();
  return v22;
}

void sub_10008172C()
{
  sub_10002066C();
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for ShortcutsLibraryItem.ItemType();
  sub_100022284();
  uint64_t v36 = v7;
  __chkstk_darwin(v8);
  sub_1000074A4();
  uint64_t v9 = sub_100025A08(&qword_1000F7690);
  uint64_t v10 = sub_1000165CC(v9);
  __chkstk_darwin(v10);
  sub_1000242E0();
  uint64_t v11 = type metadata accessor for ShortcutsLibraryItem();
  sub_100022284();
  __chkstk_darwin(v12);
  sub_10001C0D0();
  uint64_t v13 = sub_100025A08(&qword_1000F5120);
  uint64_t v14 = sub_1000165CC(v13);
  __chkstk_darwin(v14);
  uint64_t v15 = sub_100021E20();
  sub_100022284();
  __chkstk_darwin(v16);
  sub_1000165D8();
  uint64_t v18 = *(void *)(v5 + 16);
  if (v18)
  {
    if (v18 == 1)
    {
      uint64_t v35 = v17;
      sub_100080628(v5, (uint64_t (*)(void))&type metadata accessor for IndexPath, (uint64_t)v0);
      uint64_t v19 = sub_10002A628();
      sub_10001B470(v19, v20, v15);
      if (v22)
      {
        sub_100025E44((uint64_t)v0, &qword_1000F5120);
      }
      else
      {
        sub_100020698();
        v21();
        sub_100021E68();
        sub_100022110();
        swift_release();
        sub_10001B470(v3, 1, v11);
        if (v22)
        {
          sub_100025E44(v3, &qword_1000F7690);
        }
        else
        {
          sub_100020698();
          v23();
          ShortcutsLibraryItem.itemType.getter();
          sub_100021F58();
          v24();
          int v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 88))(v1, v6);
          if (v25 == enum case for ShortcutsLibraryItem.ItemType.appShortcutTopHit(_:))
          {
            sub_100016618();
            v26();
            (*(void (**)(uint64_t, uint64_t))(v36 + 96))(v1, v6);
            type metadata accessor for AutoShortcutAppSection();
            sub_10001C094();
            sub_100016618();
            v27();
            goto LABEL_16;
          }
          (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v1, v6);
        }
        sub_100021E68();
        uint64_t v28 = sub_1000AA50C(v2);
        swift_release();
        if (v28)
        {
          sub_100029C7C(0, &qword_1000F7160);
          Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
          uint64_t v30 = sub_1000206B4();
          swift_unknownObjectWeakInit();
          uint64_t v31 = sub_10001B6E8();
          *(void *)(v31 + 16) = v30;
          *(void *)(v31 + 24) = v28;
          swift_retain();
          sub_1000832C8((uint64_t)isa, 0, 0, (uint64_t)sub_10008C834, v31);
          sub_100016618();
          v32();
          swift_release();
          goto LABEL_16;
        }
        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v2, v15);
      }
    }
    sub_100029C7C(0, &qword_1000F7160);
    uint64_t v33 = sub_10001B6E8();
    *(void *)(v33 + 16) = v0;
    *(void *)(v33 + 24) = v5;
    swift_bridgeObjectRetain();
    id v34 = v0;
    sub_1000832C8(0, 0, 0, (uint64_t)sub_10008C7D0, v33);
  }
LABEL_16:
  sub_10001885C();
}

uint64_t sub_100081BA4()
{
  uint64_t v82 = type metadata accessor for ShortcutChiclet.MenuItemModel.ItemVariant();
  uint64_t v0 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v76 = (char *)v60 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for ButtonRole();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v63 = (char *)v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_100025A08(&qword_1000F7168);
  __chkstk_darwin(v75);
  uint64_t v6 = (char *)v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100025A08(&qword_1000F7110);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v78 = (char *)v60 - v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v60 - v13;
  uint64_t v77 = type metadata accessor for ShortcutChiclet.MenuItem();
  uint64_t v15 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v81 = (char *)v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v18 = (void *)Strong;
  uint64_t v19 = v0;
  char v67 = v10;
  sub_100082718();
  UIMenuElementSize v91 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  uint64_t v21 = *(void *)(v20 + 16);
  if (!v21)
  {
    swift_bridgeObjectRelease();
    Class v54 = 0;
    goto LABEL_40;
  }
  uint64_t v61 = v18;
  Class v22 = 0;
  unint64_t v24 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v23 = v15 + 16;
  uint64_t v87 = v24;
  unint64_t v25 = (*(unsigned __int8 *)(v23 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 64);
  v60[1] = v20;
  uint64_t v26 = v20 + v25;
  uint64_t v86 = (uint64_t (**)(uint64_t *, uint64_t))(v23 + 72);
  uint64_t v66 = (void (**)(uint64_t *, uint64_t))(v23 - 8);
  char v72 = (void (**)(uint64_t *, uint64_t))(v23 + 80);
  uint64_t v62 = (void (**)(char *, uint64_t, uint64_t))(v3 + 32);
  char v65 = (void (**)(char *, uint64_t))(v3 + 8);
  int v85 = enum case for ShortcutChiclet.MenuItem.item(_:);
  uint64_t v71 = (uint64_t (**)(char *, uint64_t))(v19 + 88);
  uint64_t v70 = (void (**)(char *, uint64_t))(v19 + 96);
  int v69 = enum case for ShortcutChiclet.MenuItem.divider(_:);
  int v68 = enum case for ShortcutChiclet.MenuItemModel.ItemVariant.button(_:);
  int v64 = enum case for ShortcutChiclet.MenuItemModel.ItemVariant.toggle(_:);
  uint64_t v88 = v23;
  uint64_t v84 = *(void *)(v23 + 56);
  uint64_t v27 = v82;
  uint64_t v73 = v2;
  uint64_t v79 = v14;
  uint64_t v80 = v6;
  uint64_t v29 = v77;
  uint64_t v28 = (uint64_t)v78;
  uint64_t v30 = (uint64_t *)v81;
  do
  {
    v87(v30, v26, v29);
    int v31 = (*v86)(v30, v29);
    if (v31 == v85)
    {
      (*v72)(v30, v29);
      uint64_t v89 = *v30;
      ShortcutChiclet.MenuItemModel.role.getter();
      static ButtonRole.destructive.getter();
      sub_100021594(v28, 0, 1, v2);
      uint64_t v32 = (uint64_t)&v6[*(int *)(v75 + 48)];
      sub_10008C83C((uint64_t)v14, (uint64_t)v6);
      sub_10008C83C(v28, v32);
      if (sub_1000225EC((uint64_t)v6, 1, v2) == 1)
      {
        sub_100025E44(v28, &qword_1000F7110);
        sub_100025E44((uint64_t)v14, &qword_1000F7110);
        if (sub_1000225EC(v32, 1, v2) == 1)
        {
          sub_100025E44((uint64_t)v6, &qword_1000F7110);
LABEL_19:
          uint64_t v41 = v76;
          dispatch thunk of ShortcutChiclet.MenuItemModel.variant.getter();
          int v42 = (*v71)(v41, v27);
          uint64_t v83 = v21;
          if (v42 == v68)
          {
            (*v70)(v41, v27);
            swift_release();
          }
          else
          {
            if (v42 != v64)
            {

              uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
              __break(1u);
              return result;
            }
            (*v70)(v41, v27);
            dispatch thunk of LibraryMenuItem.ToggleModel.isSelected.getter();
            swift_release();
          }
          sub_100029C7C(0, &qword_1000F5ED8);
          ShortcutChiclet.MenuItemModel.name.getter();
          sub_100029C7C(0, &qword_1000F5230);
          uint64_t v43 = ShortcutChiclet.MenuItemModel.symbol.getter();
          sub_10001B4C0(v43, v44);
          swift_retain();
          uint64_t v45 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
          uint64_t v46 = v45;
          if (v22)
          {
            uint64_t v47 = v22;
            id v48 = [(objc_class *)v47 children];
            sub_100029C7C(0, &qword_1000F5EA0);
            uint64_t v49 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v90 = v49;
            id v50 = v46;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            uint64_t v27 = v82;
            uint64_t v21 = v83;
            if (*(void *)((v90 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v90 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            Class isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            uint64_t v52 = (objc_class *)[(objc_class *)v47 menuByReplacingChildren:isa];

            swift_release();
            Class v22 = v52;
            uint64_t v2 = v73;
            uint64_t v14 = v79;
            uint64_t v6 = v80;
          }
          else
          {
            id v53 = v45;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            uint64_t v27 = v82;
            uint64_t v21 = v83;
            uint64_t v2 = v73;
            uint64_t v14 = v79;
            if (*(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();

            swift_release();
            Class v22 = 0;
            uint64_t v6 = v80;
          }
          uint64_t v28 = (uint64_t)v78;
          uint64_t v29 = v77;
          goto LABEL_31;
        }
      }
      else
      {
        uint64_t v36 = (uint64_t)v67;
        sub_10008C83C((uint64_t)v6, (uint64_t)v67);
        if (sub_1000225EC(v32, 1, v2) != 1)
        {
          uint64_t v37 = *v62;
          uint64_t v74 = v22;
          uint64_t v38 = v63;
          v37(v63, v32, v2);
          sub_10008979C(&qword_1000F7180, (void (*)(uint64_t))&type metadata accessor for ButtonRole);
          dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v39 = v28;
          uint64_t v40 = *v65;
          (*v65)(v38, v2);
          sub_100025E44(v39, &qword_1000F7110);
          sub_100025E44((uint64_t)v79, &qword_1000F7110);
          v40((char *)v36, v2);
          Class v22 = v74;
          sub_100025E44((uint64_t)v6, &qword_1000F7110);
          uint64_t v27 = v82;
          goto LABEL_19;
        }
        sub_100025E44(v28, &qword_1000F7110);
        sub_100025E44((uint64_t)v14, &qword_1000F7110);
        (*v65)((char *)v36, v2);
        uint64_t v27 = v82;
      }
      sub_100025E44((uint64_t)v6, &qword_1000F7168);
      goto LABEL_19;
    }
    if (v31 != v69)
    {
      (*v66)(v30, v29);
      goto LABEL_32;
    }
    if (v22)
    {
      uint64_t v74 = v22;
      uint64_t v33 = v22;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      uint64_t v6 = v80;
      Class v22 = v74;
    }
    sub_100029C7C(0, (unint64_t *)&unk_1000F7170);
    v34._countAndFlagsBits = 0;
    v34._object = (void *)0xE000000000000000;
    v92.value.super.Class isa = 0;
    v92.is_nil = 0;
    Class v35 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v34, (Swift::String_optional)0, v92, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, v59).super.super.isa;

    Class v22 = v35;
LABEL_31:
    uint64_t v30 = (uint64_t *)v81;
LABEL_32:
    v26 += v84;
    --v21;
  }
  while (v21);
  swift_bridgeObjectRelease();
  if (v22)
  {
    Class v54 = v22;
    uint64_t v55 = v22;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    uint64_t v18 = v61;
    if (*(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  else
  {
    Class v54 = 0;
    uint64_t v18 = v61;
  }
LABEL_40:
  sub_100029C7C(0, (unint64_t *)&unk_1000F7170);
  v57._countAndFlagsBits = 0;
  v57._object = (void *)0xE000000000000000;
  v93.value.super.Class isa = 0;
  v93.is_nil = 0;
  Class v56 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v57, (Swift::String_optional)0, v93, 0, 0xFFFFFFFFFFFFFFFFLL, v91, v59).super.super.isa;

  return (uint64_t)v56;
}

void sub_100082718()
{
  sub_10002066C();
  sub_100025DB8();
  uint64_t v120 = type metadata accessor for LibraryMenuItem.Attributes();
  sub_100022284();
  uint64_t v134 = v3;
  __chkstk_darwin(v4);
  sub_1000206CC();
  uint64_t v119 = v5;
  __chkstk_darwin(v6);
  uint64_t v118 = (char *)v100 - v7;
  uint64_t v8 = sub_100025A08(&qword_1000F7110);
  uint64_t v9 = sub_1000165CC(v8);
  __chkstk_darwin(v9);
  sub_10001888C();
  uint64_t v12 = (_OWORD *)(v11 - v10);
  uint64_t v104 = type metadata accessor for Logger();
  sub_100022284();
  uint64_t v137 = v13;
  __chkstk_darwin(v14);
  sub_1000167F4();
  uint64_t v108 = v15;
  uint64_t v16 = type metadata accessor for LibraryMenuItem.ItemVariant();
  sub_100022284();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  sub_10001C0D0();
  uint64_t v121 = type metadata accessor for ShortcutChiclet.MenuItemModel.ItemVariant();
  sub_100022284();
  uint64_t v21 = v20;
  __chkstk_darwin(v22);
  sub_1000206CC();
  uint64_t v117 = v23;
  __chkstk_darwin(v24);
  uint64_t v136 = (char *)v100 - v25;
  uint64_t v138 = type metadata accessor for ShortcutChiclet.MenuItem();
  sub_100022284();
  uint64_t v131 = v26;
  __chkstk_darwin(v27);
  sub_1000206CC();
  uint64_t v135 = v28;
  __chkstk_darwin(v29);
  uint64_t v128 = (char *)v100 - v30;
  uint64_t v31 = type metadata accessor for AggregatedEntry();
  sub_100022284();
  uint64_t v33 = v32;
  __chkstk_darwin(v34);
  sub_1000074A4();
  *uint64_t v1 = v0;
  (*(void (**)(void *, void, uint64_t))(v33 + 104))(v1, enum case for AggregatedEntry.appShortcut(_:), v31);
  id v35 = v0;
  sub_100084B08();
  unint64_t v37 = v36;
  uint64_t v38 = v1;
  unint64_t v39 = v37;
  (*(void (**)(void *, uint64_t))(v33 + 8))(v38, v31);
  if (v39 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v40 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v40)
  {
LABEL_32:
    swift_bridgeObjectRelease();
    sub_10001885C();
    return;
  }
  unint64_t v127 = v39 & 0xC000000000000001;
  int v107 = enum case for ShortcutChiclet.MenuItem.divider(_:);
  uint64_t v129 = v131 + 32;
  uint64_t v130 = v131 + 104;
  uint64_t v125 = (uint64_t (**)(_OWORD *, uint64_t))(v18 + 88);
  int v124 = enum case for LibraryMenuItem.ItemVariant.button(_:);
  int v106 = enum case for LibraryMenuItem.ItemVariant.toggle(_:);
  int v103 = enum case for LibraryMenuItem.ItemVariant.submenu(_:);
  uint64_t v123 = v18 + 96;
  uint64_t v102 = WFLogCategoryGeneral;
  unint64_t v101 = (void (**)(uint64_t, uint64_t))(v137 + 8);
  v100[3] = enum case for ShortcutChiclet.MenuItemModel.ItemVariant.toggle(_:);
  uint64_t v114 = v21 + 13;
  uint64_t v113 = (void (**)(void))(v134 + 8);
  uint64_t v112 = (void (**)(uint64_t, char *, uint64_t))(v21 + 2);
  uint64_t v111 = v21 + 1;
  uint64_t v18 = 4;
  int v105 = enum case for ShortcutChiclet.MenuItemModel.ItemVariant.button(_:);
  int v110 = enum case for ShortcutChiclet.MenuItem.item(_:);
  uint64_t v21 = _swiftEmptyArrayStorage;
  uint64_t v109 = v12;
  uint64_t v116 = v16;
  uint64_t v115 = v2;
  uint64_t v12 = v136;
  unint64_t v122 = v39;
  uint64_t v126 = v40;
  while (1)
  {
    if (v127) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    if (__OFADD__(v18 - 4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    uint64_t v137 = v18 - 3;
    if (LibraryMenuItem.hasSeparator.getter())
    {
      sub_100022348();
      v41();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100018D54();
        uint64_t v21 = (void *)sub_100029148(v86, v87, v88, v89, &qword_1000F7118, v90, v91, v92);
      }
      unint64_t v42 = v21[2];
      if (v42 >= v21[3] >> 1)
      {
        sub_100018D54();
        uint64_t v21 = (void *)sub_100029148(v93, v94, v95, v96, &qword_1000F7118, v97, v98, v99);
      }
      v21[2] = v42 + 1;
      sub_100012DC8();
      (*(void (**)(unint64_t, char *, uint64_t))(v45 + 32))(v43 + v44 * v42, v128, v138);
    }
    dispatch thunk of LibraryMenuItem.variant.getter();
    int v46 = (*v125)(v2, v16);
    if (v46 != v124) {
      break;
    }
    uint64_t v47 = sub_10002248C();
    v48(v47);
    *uint64_t v12 = *v2;
LABEL_19:
    sub_100022348();
    v51();
    uint64_t v52 = LibraryMenuItem.title.getter();
    uint64_t v133 = v53;
    uint64_t v134 = v52;
    LibraryMenuItem.symbolName.getter();
    uint64_t v132 = v54;
    LibraryMenuItem.attributes.getter();
    static LibraryMenuItem.Attributes.destructive.getter();
    sub_10008979C(&qword_1000F7070, (void (*)(uint64_t))&type metadata accessor for LibraryMenuItem.Attributes);
    char v55 = dispatch thunk of SetAlgebra.isSuperset(of:)();
    Class v56 = *v113;
    sub_1000189D8();
    v56();
    sub_1000189D8();
    v56();
    if (v55)
    {
      uint64_t v57 = (uint64_t)v109;
      static ButtonRole.destructive.getter();
      uint64_t v58 = 0;
    }
    else
    {
      uint64_t v58 = 1;
      uint64_t v57 = (uint64_t)v109;
    }
    uint64_t v59 = type metadata accessor for ButtonRole();
    sub_100021594(v57, v58, 1, v59);
    (*v112)(v117, v136, v121);
    type metadata accessor for ShortcutChiclet.MenuItemModel();
    swift_allocObject();
    *uint64_t v135 = ShortcutChiclet.MenuItemModel.init(name:symbol:role:variant:)();
    sub_100022348();
    v60();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = v116;
    uint64_t v2 = v115;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100018D54();
      uint64_t v21 = (void *)sub_100029148(v72, v73, v74, v75, &qword_1000F7118, v76, v77, v78);
    }
    unint64_t v62 = v21[2];
    uint64_t v12 = v136;
    if (v62 >= v21[3] >> 1)
    {
      sub_100018D54();
      uint64_t v21 = (void *)sub_100029148(v79, v80, v81, v82, &qword_1000F7118, v83, v84, v85);
    }
    v21[2] = v62 + 1;
    sub_100012DC8();
    (*(void (**)(unint64_t, uint64_t *, uint64_t))(v65 + 32))(v63 + v64 * v62, v135, v138);
    swift_release();
    swift_release();
    sub_100016618();
    v66();
    unint64_t v39 = v122;
LABEL_31:
    ++v18;
    if (v137 == v126) {
      goto LABEL_32;
    }
  }
  if (v46 == v106)
  {
    uint64_t v49 = sub_10002248C();
    v50(v49);
    *(void *)uint64_t v12 = *(void *)v2;
    goto LABEL_19;
  }
  if (v46 == v103)
  {
    uint64_t v67 = sub_10002248C();
    v68(v67);
    swift_bridgeObjectRelease();
    static WFLog.subscript.getter();
    int v69 = Logger.logObject.getter();
    os_log_type_t v70 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v71 = 0;
      _os_log_impl((void *)&_mh_execute_header, v69, v70, "Submenus not supported in this model", v71, 2u);
      unint64_t v39 = v122;
      swift_slowDealloc();
    }

    swift_release();
    (*v101)(v108, v104);
    goto LABEL_31;
  }
  _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
}

uint64_t sub_100083144()
{
  uint64_t v0 = type metadata accessor for ShortcutChiclet.MenuItemModel.ItemVariant();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (void (**)(uint64_t))&v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  dispatch thunk of ShortcutChiclet.MenuItemModel.variant.getter();
  int v4 = (*(uint64_t (**)(void (**)(uint64_t), uint64_t))(v1 + 88))(v3, v0);
  if (v4 == enum case for ShortcutChiclet.MenuItemModel.ItemVariant.button(_:))
  {
    uint64_t v5 = (*(uint64_t (**)(void (**)(uint64_t), uint64_t))(v1 + 96))(v3, v0);
    (*v3)(v5);
    return swift_release();
  }
  if (v4 == enum case for ShortcutChiclet.MenuItemModel.ItemVariant.toggle(_:))
  {
    (*(void (**)(void (**)(uint64_t), uint64_t))(v1 + 96))(v3, v0);
    uint64_t v6 = (void (*)(unsigned char *, void))dispatch thunk of LibraryMenuItem.ToggleModel.isSelected.modify();
    *uint64_t v7 = !*v7;
    v6(v9, 0);
    return swift_release();
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

id sub_1000832C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a2)
  {
    uint64_t v9 = 0;
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v10 = 0;
    goto LABEL_6;
  }
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  uint64_t v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  uint64_t v15 = sub_100088B94;
  uint64_t v16 = &unk_1000E7350;
  uint64_t v9 = _Block_copy(&v13);
  swift_retain();
  swift_release();
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v17 = a4;
  uint64_t v18 = a5;
  uint64_t v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  uint64_t v15 = sub_1000608D4;
  uint64_t v16 = &unk_1000E7328;
  uint64_t v10 = _Block_copy(&v13);
  swift_retain();
  swift_release();
LABEL_6:
  id v11 = [(id)swift_getObjCClassFromMetadata() configurationWithIdentifier:a1 previewProvider:v9 actionProvider:v10];
  sub_10002354C(a4);
  sub_10002354C(a2);
  swift_unknownObjectRelease();
  _Block_release(v10);
  _Block_release(v9);
  return v11;
}

Class sub_100083468(uint64_t a1)
{
  uint64_t v50 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v63 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for LibraryMenuItem.ItemVariant();
  uint64_t v5 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LibraryMenuItem.Attributes();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v45 - v13;
  id v15 = v1;
  uint64_t v51 = a1;
  sub_1000806D4(a1, v15);
  unint64_t v65 = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v66 = (unint64_t)_swiftEmptyArrayStorage;
  sub_1000848FC();
  unint64_t v17 = v16;
  Class result = (Class)swift_bridgeObjectRelease();
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    Class result = (Class)swift_bridgeObjectRelease();
    if (v19) {
      goto LABEL_3;
    }
LABEL_25:
    swift_bridgeObjectRelease();
    UIMenuElementSize v37 = (UIMenuElementSize)_swiftEmptyArrayStorage;
    goto LABEL_26;
  }
  uint64_t v19 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v19) {
    goto LABEL_25;
  }
LABEL_3:
  if (v19 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v20 = 0;
  uint64_t v57 = (void (**)(char *, uint64_t))(v9 + 8);
  unint64_t v58 = v17 & 0xC000000000000001;
  Class v56 = (uint64_t (**)(uint64_t *, uint64_t))(v5 + 88);
  int v55 = enum case for LibraryMenuItem.ItemVariant.button(_:);
  uint64_t v49 = (void (**)(uint64_t *, uint64_t))(v5 + 8);
  uint64_t v47 = WFLogCategoryGeneral;
  id v48 = (void (**)(char *, uint64_t))(v3 + 8);
  int v46 = (void (**)(uint64_t *, uint64_t))(v5 + 96);
  unint64_t v59 = v17;
  uint64_t v60 = (uint64_t *)v7;
  uint64_t v61 = v19;
  do
  {
    if (v58) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    if (LibraryMenuItem.hasSeparator.getter())
    {
      uint64_t v21 = (void *)v65;
      if (v65 >> 62)
      {
        sub_100029C7C(0, &qword_1000F5EA0);
        swift_bridgeObjectRetain();
        UIMenuElementSize v22 = _bridgeCocoaArray<A>(_:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
        sub_100029C7C(0, &qword_1000F5EA0);
        UIMenuElementSize v22 = (UIMenuElementSize)v21;
      }
      swift_bridgeObjectRelease();
      sub_100029C7C(0, (unint64_t *)&unk_1000F7170);
      v23._countAndFlagsBits = 0;
      v23._object = (void *)0xE000000000000000;
      v67.value.super.Class isa = 0;
      v67.is_nil = 0;
      UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v23, (Swift::String_optional)0, v67, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v22, v43);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      unint64_t v65 = (unint64_t)_swiftEmptyArrayStorage;
    }
    LibraryMenuItem.attributes.getter();
    static LibraryMenuItem.Attributes.destructive.getter();
    sub_10008979C(&qword_1000F7070, (void (*)(uint64_t))&type metadata accessor for LibraryMenuItem.Attributes);
    LODWORD(v64) = dispatch thunk of SetAlgebra.isSuperset(of:)();
    uint64_t v24 = *v57;
    (*v57)(v12, v8);
    v24(v14, v8);
    LibraryMenuItem.attributes.getter();
    static LibraryMenuItem.Attributes.hidden.getter();
    dispatch thunk of SetAlgebra.isSuperset(of:)();
    v24(v12, v8);
    v24(v14, v8);
    LibraryMenuItem.attributes.getter();
    static LibraryMenuItem.Attributes.disabled.getter();
    dispatch thunk of SetAlgebra.isSuperset(of:)();
    v24(v12, v8);
    v24(v14, v8);
    uint64_t v25 = v60;
    dispatch thunk of LibraryMenuItem.variant.getter();
    uint64_t v26 = v62;
    int v27 = (*v56)(v25, v62);
    if (v27 == v55)
    {
      (*v46)(v25, v26);
      uint64_t v28 = *v25;
      uint64_t v29 = v25[1];
      uint64_t v54 = sub_100029C7C(0, &qword_1000F5ED8);
      uint64_t v30 = LibraryMenuItem.title.getter();
      uint64_t v52 = v31;
      uint64_t v53 = v30;
      sub_100029C7C(0, &qword_1000F5230);
      LibraryMenuItem.symbolName.getter();
      sub_10009E774();
      uint64_t v32 = (void *)swift_allocObject();
      uint64_t v32[2] = v28;
      v32[3] = v29;
      v32[4] = v51;
      uint64_t v64 = v29;
      swift_retain();
      swift_bridgeObjectRetain();
      id v33 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_release();

      swift_release();
    }
    else
    {
      (*v49)(v25, v26);
      static WFLog.subscript.getter();
      uint64_t v34 = Logger.logObject.getter();
      os_log_type_t v35 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v34, v35))
      {
        unint64_t v36 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v36 = 0;
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "Unsupported variant, only buttons can be used here", v36, 2u);
        swift_slowDealloc();
      }

      swift_release();
      (*v48)(v63, v50);
    }
    ++v20;
  }
  while (v61 != v20);
  swift_bridgeObjectRelease();
  UIMenuElementSize v37 = v65;
LABEL_26:
  if ((unint64_t)v37 >> 62)
  {
    sub_100029C7C(0, &qword_1000F5EA0);
    swift_bridgeObjectRetain();
    UIMenuElementSize v38 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_100029C7C(0, &qword_1000F5EA0);
    UIMenuElementSize v38 = v37;
  }
  swift_bridgeObjectRelease();
  sub_100029C7C(0, (unint64_t *)&unk_1000F7170);
  v39._countAndFlagsBits = 0;
  v39._object = (void *)0xE000000000000000;
  v68.value.super.Class isa = 0;
  v68.is_nil = 0;
  UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v39, (Swift::String_optional)0, v68, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v38, v43);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  uint64_t v40 = (void *)v66;
  if (v66 >> 62)
  {
    sub_100029C7C(0, &qword_1000F5EA0);
    swift_bridgeObjectRetain();
    UIMenuElementSize v41 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_100029C7C(0, &qword_1000F5EA0);
    UIMenuElementSize v41 = (UIMenuElementSize)v40;
  }
  swift_bridgeObjectRelease();
  v42._countAndFlagsBits = 0;
  v42._object = (void *)0xE000000000000000;
  v69.value.super.Class isa = 0;
  v69.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v42, (Swift::String_optional)0, v69, 0, 0xFFFFFFFFFFFFFFFFLL, v41, v44).super.super.isa;
}

id sub_100083ECC()
{
  id v0 = sub_10009C924();
  if (!v0) {
    return 0;
  }
  uint64_t v2 = v0;
  uint64_t v3 = v1;
  id v4 = [objc_allocWithZone((Class)UIPreviewParameters) init];
  [v4 setVisiblePath:v2];
  id v5 = objc_allocWithZone((Class)UIColor);
  id v6 = sub_1000887F8((uint64_t)sub_1000840E8, 0);
  [v4 setBackgroundColor:v6];

  sub_100029C7C(0, &qword_1000F8390);
  id v7 = v3;
  id v8 = sub_1000A9AF4(v7, v4);

  return v8;
}

id sub_100083FD0()
{
  return sub_100083ECC();
}

id sub_100083FF0(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t (*a6)(void))
{
  uint64_t v11 = type metadata accessor for IndexPath();
  sub_100022284();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_1000165D8();
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v15 = a3;
  id v16 = a4;
  id v17 = a1;
  uint64_t v18 = (void *)a6();

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v6, v11);

  return v18;
}

id sub_1000840E8(void *a1)
{
  if ([a1 userInterfaceStyle] == (id)1)
  {
    id v1 = objc_allocWithZone((Class)UIColor);
    return [v1 initWithWhite:0.6 alpha:1.0];
  }
  else
  {
    id v3 = [self clearColor];
    return v3;
  }
}

uint64_t sub_100084170(uint64_t a1, void *a2, void *a3)
{
  id v5 = (void *)v3;
  uint64_t v8 = sub_100025A08(&qword_1000F5120);
  uint64_t v9 = sub_1000165CC(v8);
  __chkstk_darwin(v9);
  uint64_t v10 = sub_100021E20();
  sub_100022284();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_1000204E8();
  aBlock[0] = [a2 identifier];
  sub_100025A08((uint64_t *)&unk_1000F7150);
  if (!swift_dynamicCast())
  {
    uint64_t v25 = sub_10002A628();
    sub_100021594(v25, v26, 1, v10);
    return sub_100025E44(v3, &qword_1000F5120);
  }
  sub_100021594(v3, 0, 1, v10);
  uint64_t v14 = sub_10002A628();
  sub_10001B470(v14, v15, v10);
  if (v16) {
    return sub_100025E44(v3, &qword_1000F5120);
  }
  sub_100020698();
  v18(v17);
  sub_100021E68();
  uint64_t v19 = (void *)sub_1000AA7C8(v4);
  swift_release();
  if (v19)
  {
    [a3 setPreferredCommitStyle:0, aBlock[0]];
    uint64_t v20 = sub_10001B6E8();
    *(void *)(v20 + 16) = v5;
    *(void *)(v20 + 24) = v19;
    aBlock[4] = sub_10008C770;
    aBlock[5] = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10000E51C;
    aBlock[3] = &unk_1000E7288;
    uint64_t v21 = _Block_copy(aBlock);
    id v22 = v5;
    id v23 = v19;
    swift_release();
    [a3 addCompletion:v21];
    _Block_release(v21);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v4, v10);
}

uint64_t sub_1000843CC()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    swift_getObjectType();
    WorkflowOpener.openWorkflow(_:)();
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1000844E4()
{
  sub_10002066C();
  sub_100025DB8();
  uint64_t v4 = type metadata accessor for AggregatedEntry();
  sub_100022284();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1000204E8();
  uint64_t v8 = sub_100025A08(&qword_1000F7690);
  uint64_t v9 = sub_1000165CC(v8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  sub_100018DAC();
  uint64_t v48 = type metadata accessor for ShortcutsLibraryItem();
  sub_100022284();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_1000242E0();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v17 = (void *)Strong;
    uint64_t v18 = v6;
    unint64_t v49 = (unint64_t)_swiftEmptyArrayStorage;
    uint64_t v19 = *(void *)(v0 + 16);
    uint64_t v47 = v19;
    if (v19)
    {
      uint64_t v39 = v3;
      uint64_t v40 = v12;
      Swift::OpaquePointer v43 = v1;
      uint64_t v44 = v18;
      uint64_t v45 = v4;
      int v46 = (void *)Strong;
      uint64_t v41 = v14;
      uint64_t v42 = v0;
      id v22 = *(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 16);
      uint64_t v21 = v14 + 16;
      uint64_t v20 = v22;
      unint64_t v23 = v0 + ((*(unsigned __int8 *)(v21 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 64));
      uint64_t v24 = *(void *)(v21 + 56);
      swift_bridgeObjectRetain();
      uint64_t v25 = v48;
      do
      {
        v20(v2, v23, v25);
        uint64_t v26 = ShortcutsLibraryItem.workflow.getter();
        sub_100021F58();
        v27();
        if (v26)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1000150B4();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          uint64_t v25 = v48;
        }
        v23 += v24;
        --v19;
      }
      while (v19);
      uint64_t v0 = v42;
      swift_bridgeObjectRelease();
      unint64_t v28 = v49;
      uint64_t v4 = v45;
      uint64_t v17 = v46;
      id v1 = v43;
      uint64_t v29 = v44;
      uint64_t v12 = v40;
      uint64_t v14 = v41;
      uint64_t v3 = v39;
    }
    else
    {
      unint64_t v28 = (unint64_t)_swiftEmptyArrayStorage;
      uint64_t v29 = v18;
    }
    if (v28 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v30 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v30 != v47)
    {
      uint64_t v33 = v47;
      swift_bridgeObjectRelease();
      if (v33 == 1)
      {
        sub_100080628(v0, (uint64_t (*)(void))&type metadata accessor for ShortcutsLibraryItem, (uint64_t)v12);
        uint64_t v34 = v48;
        sub_10001B470((uint64_t)v12, 1, v48);
        if (v32)
        {
          sub_100025E44((uint64_t)v12, &qword_1000F7690);
        }
        else
        {
          unint64_t v36 = (void *)ShortcutsLibraryItem.autoShortcut.getter();
          (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v34);
          if (v36)
          {
            *id v1 = v36;
            (*(void (**)(void *, void, uint64_t))(v29 + 104))(v1, enum case for AggregatedEntry.appShortcut(_:), v4);
            id v37 = v36;
            sub_100084B08();

            (*(void (**)(void *, uint64_t))(v29 + 8))(v1, v4);
            goto LABEL_25;
          }
        }
      }

      goto LABEL_25;
    }
    sub_100080628(v0, (uint64_t (*)(void))&type metadata accessor for ShortcutsLibraryItem, v3);
    uint64_t v31 = v48;
    sub_10001B470(v3, 1, v48);
    if (v32)
    {
      sub_100025E44(v3, &qword_1000F7690);
      os_log_type_t v35 = 0;
    }
    else
    {
      ShortcutsLibraryItem.nameIconViewModel.getter();
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v3, v31);
      os_log_type_t v35 = (void *)dispatch thunk of NameIconView.Model.popoverModel.getter();
      swift_release();
    }
    sub_1000848FC();

    swift_bridgeObjectRelease();
  }
LABEL_25:
  sub_10001885C();
}

void sub_1000848FC()
{
  sub_10002066C();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  sub_100025DB8();
  uint64_t v5 = type metadata accessor for LibraryConfiguration();
  sub_100022284();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!(v1 >> 62))
  {
    if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_11:
    sub_10001885C();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v18) {
    goto LABEL_11;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v11 = *(id *)(v1 + 32);
LABEL_6:
    if (v1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v12 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v13 = &v2[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration];
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v13, v5);
    uint64_t v14 = LibraryConfiguration.workflowContextualEditingActions.getter();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
    id v15 = v4;
    swift_bridgeObjectRetain();
    char v16 = v2;
    id v17 = v11;
    sub_100080964(v14, v16, v12 > 1, v17, v1, v4);

    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  __break(1u);
}

void sub_100084B08()
{
  sub_10002066C();
  uint64_t v66 = v0;
  uint64_t v3 = v2;
  uint64_t v70 = type metadata accessor for LibraryMenuItem.Attributes();
  sub_10001C094();
  __chkstk_darwin(v4);
  sub_1000167F4();
  uint64_t v71 = v5;
  type metadata accessor for LibraryMenuItem.ItemVariant();
  sub_100022284();
  uint64_t v68 = v7;
  uint64_t v69 = v6;
  __chkstk_darwin(v6);
  sub_1000167F4();
  uint64_t v64 = v8;
  uint64_t v65 = type metadata accessor for AppShortcutAdditionMenuItem();
  sub_100022284();
  uint64_t v10 = v9;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  sub_100018DAC();
  uint64_t v15 = type metadata accessor for AggregatedEntry();
  sub_100022284();
  uint64_t v17 = v16;
  uint64_t v19 = *(void *)(v18 + 64);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v63 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  unint64_t v23 = (id *)((char *)&v51 - v22);
  unint64_t v73 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v67 = v3;
  v24((char *)&v51 - v22, v3, v15);
  uint64_t v25 = v17;
  int v26 = (*(uint64_t (**)(id *, uint64_t))(v17 + 88))(v23, v15);
  uint64_t v61 = v17 + 16;
  uint64_t v62 = v19;
  unint64_t v59 = v24;
  uint64_t v60 = v14;
  uint64_t v58 = v1;
  if (v26 == enum case for AggregatedEntry.appShortcut(_:))
  {
    uint64_t v52 = v17;
    (*(void (**)(id *, uint64_t))(v17 + 96))(v23, v15);

    static AppShortcutAdditionMenuItem.addToHomeScreen.getter();
    uint64_t v27 = v15;
    uint64_t v28 = AppShortcutAdditionMenuItem.name.getter();
    uint64_t v55 = v29;
    uint64_t v56 = v28;
    uint64_t v57 = v10;
    uint64_t v30 = *(void (**)(void))(v10 + 8);
    sub_100021F58();
    v30();
    static AppShortcutAdditionMenuItem.addToHomeScreen.getter();
    uint64_t v53 = AppShortcutAdditionMenuItem.symbolName.getter();
    uint64_t v54 = v31;
    sub_100021F58();
    v30();
    uint64_t v32 = sub_1000206B4();
    swift_unknownObjectWeakInit();
    v24(v63, v67, v15);
    uint64_t v33 = v52;
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = v32;
    uint64_t v37 = v27;
    sub_100020698();
    v35();
    unint64_t v36 = v64;
    char *v64 = sub_10008C14C;
    v36[1] = (void (*)())v34;
    (*(void (**)(void (**)()))(v68 + 104))(v36);
    char v72 = _swiftEmptyArrayStorage;
    sub_10008979C(&qword_1000F7070, (void (*)(uint64_t))&type metadata accessor for LibraryMenuItem.Attributes);
    swift_retain();
    sub_100025A08(&qword_1000F7078);
    sub_100089590();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    type metadata accessor for LibraryMenuItem();
    swift_allocObject();
    LibraryMenuItem.init(title:symbolName:attributes:hasSeparator:variant:)();
    swift_release();
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    uint64_t v25 = v33;
    if (*(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1000150B4();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_release();
    uint64_t v10 = v57;
  }
  else
  {
    (*(void (**)(id *, uint64_t))(v17 + 8))(v23, v15);
    uint64_t v37 = v15;
  }
  uint64_t v38 = v58;
  static AppShortcutAdditionMenuItem.addToShortcut.getter();
  uint64_t v39 = AppShortcutAdditionMenuItem.name.getter();
  uint64_t v56 = v40;
  uint64_t v57 = v39;
  uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  uint64_t v42 = v65;
  v41(v38, v65);
  Swift::OpaquePointer v43 = v60;
  static AppShortcutAdditionMenuItem.addToShortcut.getter();
  AppShortcutAdditionMenuItem.symbolName.getter();
  uint64_t v58 = v44;
  v41((uint64_t)v43, v42);
  uint64_t v45 = sub_1000206B4();
  swift_unknownObjectWeakInit();
  int v46 = v63;
  v59(v63, v67, v37);
  unint64_t v47 = (*(unsigned __int8 *)(v25 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  uint64_t v48 = swift_allocObject();
  *(void *)(v48 + 16) = v45;
  (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))(v48 + v47, v46, v37);
  unint64_t v49 = v64;
  char *v64 = sub_10008C08C;
  v49[1] = (void (*)())v48;
  sub_100022348();
  v50();
  char v72 = _swiftEmptyArrayStorage;
  sub_10008979C(&qword_1000F7070, (void (*)(uint64_t))&type metadata accessor for LibraryMenuItem.Attributes);
  swift_retain();
  sub_100025A08(&qword_1000F7078);
  sub_100089590();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  type metadata accessor for LibraryMenuItem();
  swift_allocObject();
  LibraryMenuItem.init(title:symbolName:attributes:hasSeparator:variant:)();
  swift_release();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1000150B4();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_release();
  sub_10001885C();
}

void *sub_1000851B8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AggregatedEntry();
  sub_100022284();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_10001888C();
  uint64_t v8 = (id *)(v7 - v6);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v10 = (void *)Strong;
  (*(void (**)(id *, uint64_t, uint64_t))(v4 + 16))(v8, a1, v2);
  int v11 = (*(uint64_t (**)(id *, uint64_t))(v4 + 88))(v8, v2);
  if (v11 != enum case for AggregatedEntry.userShortcut(_:))
  {
    if (v11 == enum case for AggregatedEntry.appShortcut(_:))
    {
      uint64_t v19 = sub_100007524();
      v20(v19);

      sub_100084B08();
      uint64_t v18 = v21;
      goto LABEL_6;
    }

    (*(void (**)(id *, uint64_t))(v4 + 8))(v8, v2);
    return _swiftEmptyArrayStorage;
  }
  uint64_t v12 = sub_100007524();
  v13(v12);
  id v14 = *v8;
  sub_100025A08(&qword_1000F5200);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1000BAC10;
  *(void *)(v15 + 32) = v14;
  specialized Array._endMutation()();
  id v16 = v14;
  sub_1000848FC();
  uint64_t v18 = v17;

  swift_bridgeObjectRelease();
LABEL_6:

  return (void *)v18;
}

uint64_t sub_10008536C()
{
  swift_unknownObjectWeakDestroy();
  uint64_t v0 = sub_10001B3C8();

  return _swift_deallocClassInstance(v0, v1, v2);
}

void sub_10008539C()
{
}

void *sub_1000853C0(uint64_t a1)
{
  return sub_1000851B8(a1);
}

uint64_t sub_1000853E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, unint64_t a5@<X4>, void *a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v141 = a7;
  unint64_t v127 = a6;
  uint64_t v131 = a4;
  unint64_t v132 = a5;
  int v130 = a3;
  uint64_t v138 = a2;
  uint64_t v133 = type metadata accessor for LibraryMenuItem.Attributes();
  uint64_t v8 = __chkstk_darwin(v133);
  __chkstk_darwin(v8);
  uint64_t v134 = (char *)&v127 - v9;
  uint64_t v10 = type metadata accessor for LibraryMenuItem.ItemVariant();
  uint64_t v135 = *(void *)(v10 - 8);
  uint64_t v136 = v10;
  __chkstk_darwin(v10);
  uint64_t v137 = (void (**)())((char *)&v127 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for LibraryEditingAction();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  id v16 = (char *)&v127 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v127 - v17;
  uint64_t v129 = LibraryEditingAction.symbolName.getter();
  uint64_t v20 = v19;
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v21(v18, a1, v12);
  int v22 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v18, v12);
  id v140 = v18;
  if (v22 != enum case for LibraryEditingAction.remove(_:))
  {
    uint64_t v128 = v13;
    uint64_t v139 = v12;
    if (v22 == enum case for LibraryEditingAction.newWindow(_:))
    {
      swift_bridgeObjectRelease();
      id v34 = [self sharedApplication];
      unsigned int v35 = [v34 supportsMultipleScenes];

      uint64_t v33 = 0;
      if (v35)
      {
        uint64_t v12 = v139;
        uint64_t v25 = v128;
        if (v130) {
          goto LABEL_83;
        }
        unint64_t v36 = self;
        uint64_t v37 = v131;
        id v38 = [v36 existingSceneSessionForEditingWorkflowReference:v131];
        NSString v39 = String._bridgeToObjectiveC()();
        NSString v40 = String._bridgeToObjectiveC()();
        id v41 = sub_1000248B0(v39);
        if (v38) {
          unint64_t v132 = 0xEA00000000006572;
        }
        else {
          unint64_t v132 = 0xEB00000000657261;
        }
        uint64_t v58 = v135;
        id v59 = v41;

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v60 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v61 = swift_allocObject();
        *(void *)(v61 + 16) = v60;
        *(void *)(v61 + 24) = v37;
        uint64_t v62 = v136;
        uint64_t v63 = v137;
        *uint64_t v137 = sub_100089760;
        v63[1] = (void (*)())v61;
        (*(void (**)(void (**)(), void, uint64_t))(v58 + 104))(v63, enum case for LibraryMenuItem.ItemVariant.button(_:), v62);
        uint64_t v142 = _swiftEmptyArrayStorage;
        sub_10008979C(&qword_1000F7070, (void (*)(uint64_t))&type metadata accessor for LibraryMenuItem.Attributes);
        id v64 = v37;
        swift_retain();
        sub_100025A08(&qword_1000F7078);
        sub_100089590();
        dispatch thunk of SetAlgebra.init<A>(_:)();
        type metadata accessor for LibraryMenuItem();
        swift_allocObject();
        uint64_t v33 = LibraryMenuItem.init(title:symbolName:attributes:hasSeparator:variant:)();
        swift_release();
      }
LABEL_82:
      uint64_t v12 = v139;
      uint64_t v25 = v128;
      goto LABEL_83;
    }
    if (v22 == enum case for LibraryEditingAction.move(_:))
    {
      LibraryEditingAction.title.getter();
      if (v42)
      {
        uint64_t v43 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v44 = swift_allocObject();
        unint64_t v45 = v132;
        *(void *)(v44 + 16) = v43;
        *(void *)(v44 + 24) = v45;
        uint64_t v46 = v136;
        unint64_t v47 = v137;
        *uint64_t v137 = sub_10008967C;
        v47[1] = (void (*)())v44;
        (*(void (**)(void (**)(), void, uint64_t))(v135 + 104))(v47, enum case for LibraryMenuItem.ItemVariant.button(_:), v46);
        uint64_t v142 = _swiftEmptyArrayStorage;
        sub_10008979C(&qword_1000F7070, (void (*)(uint64_t))&type metadata accessor for LibraryMenuItem.Attributes);
        swift_bridgeObjectRetain();
        swift_retain();
        sub_100025A08(&qword_1000F7078);
        sub_100089590();
        dispatch thunk of SetAlgebra.init<A>(_:)();
        type metadata accessor for LibraryMenuItem();
        swift_allocObject();
LABEL_18:
        uint64_t v33 = LibraryMenuItem.init(title:symbolName:attributes:hasSeparator:variant:)();
        swift_release();
        goto LABEL_82;
      }
      goto LABEL_81;
    }
    uint64_t v48 = v131;
    if (v22 == enum case for LibraryEditingAction.duplicate(_:))
    {
      LibraryEditingAction.title.getter();
      if (v49)
      {
        uint64_t v50 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v51 = swift_allocObject();
        unint64_t v52 = v132;
        *(void *)(v51 + 16) = v50;
        *(void *)(v51 + 24) = v52;
        uint64_t v53 = v136;
        uint64_t v54 = v137;
        *uint64_t v137 = sub_100089754;
        v54[1] = (void (*)())v51;
        (*(void (**)(void (**)(), void, uint64_t))(v135 + 104))(v54, enum case for LibraryMenuItem.ItemVariant.button(_:), v53);
        uint64_t v142 = _swiftEmptyArrayStorage;
        sub_10008979C(&qword_1000F7070, (void (*)(uint64_t))&type metadata accessor for LibraryMenuItem.Attributes);
        swift_retain();
        swift_bridgeObjectRetain();
        sub_100025A08(&qword_1000F7078);
        sub_100089590();
        dispatch thunk of SetAlgebra.init<A>(_:)();
        type metadata accessor for LibraryMenuItem();
        swift_allocObject();
        goto LABEL_18;
      }
      goto LABEL_81;
    }
    if (v22 == enum case for LibraryEditingAction.share(_:))
    {
      if (v130) {
        goto LABEL_81;
      }
      id v55 = [*(id *)(v138 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_database) conflictingReferenceForReference:v131];

      LibraryEditingAction.title.getter();
      if (!v56) {
        goto LABEL_81;
      }
      uint64_t v57 = (char *)v129;
      if (!v20) {
        uint64_t v57 = 0;
      }
      uint64_t v134 = v57;
      if (v55)
      {
        static LibraryMenuItem.Attributes.disabled.getter();
      }
      else
      {
        uint64_t v142 = _swiftEmptyArrayStorage;
        sub_10008979C(&qword_1000F7070, (void (*)(uint64_t))&type metadata accessor for LibraryMenuItem.Attributes);
        sub_100025A08(&qword_1000F7078);
        sub_100089590();
        dispatch thunk of SetAlgebra.init<A>(_:)();
      }
      uint64_t v92 = swift_allocObject();
      swift_unknownObjectWeakInit();
      char v93 = (void (*)())swift_allocObject();
      *((void *)v93 + 2) = v92;
      *((void *)v93 + 3) = v48;
      uint64_t v94 = v127;
      *((void *)v93 + 4) = v127;
      uint64_t v95 = v136;
      uint64_t v96 = v137;
      *uint64_t v137 = sub_100089700;
      v96[1] = v93;
      (*(void (**)(void (**)(), void, uint64_t))(v135 + 104))(v96, enum case for LibraryMenuItem.ItemVariant.button(_:), v95);
      type metadata accessor for LibraryMenuItem();
      swift_allocObject();
      id v97 = v94;
      id v98 = v48;
      goto LABEL_54;
    }
    if (v22 == enum case for LibraryEditingAction.details(_:))
    {
      if (v130) {
        goto LABEL_81;
      }
      LibraryEditingAction.title.getter();
      if (!v65) {
        goto LABEL_81;
      }
      uint64_t v66 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v67 = swift_allocObject();
      *(void *)(v67 + 16) = v66;
      *(void *)(v67 + 24) = v48;
      uint64_t v68 = sub_1000896B0;
      goto LABEL_32;
    }
    if (v22 == enum case for LibraryEditingAction.delete(_:))
    {
      LibraryEditingAction.title.getter();
      if (!v72) {
        goto LABEL_81;
      }
      static LibraryMenuItem.Attributes.destructive.getter();
      uint64_t v73 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v74 = swift_allocObject();
      unint64_t v75 = v132;
      *(void *)(v74 + 16) = v73;
      *(void *)(v74 + 24) = v75;
      uint64_t v76 = v136;
      uint64_t v77 = v137;
      *uint64_t v137 = sub_1000895F4;
      v77[1] = (void (*)())v74;
      (*(void (**)(void (**)(), void, uint64_t))(v135 + 104))(v77, enum case for LibraryMenuItem.ItemVariant.button(_:), v76);
      type metadata accessor for LibraryMenuItem();
      swift_allocObject();
      swift_bridgeObjectRetain();
LABEL_54:
      uint64_t v33 = LibraryMenuItem.init(title:symbolName:attributes:hasSeparator:variant:)();
      goto LABEL_82;
    }
    if (v22 == enum case for LibraryEditingAction.run(_:))
    {
      if (sub_100065154(v131)) {
        goto LABEL_81;
      }
      sub_100021E68();
      type metadata accessor for LibraryDataSource();
      uint64_t v78 = (void (*)(void))method lookup function for LibraryDataSource();
      v78();
      swift_release();
      uint64_t v79 = LibraryLayoutMode.rawValue.getter();
      uint64_t v81 = v80;
      if (v79 == LibraryLayoutMode.rawValue.getter() && v81 == v82)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v84 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v84 & 1) == 0) {
          goto LABEL_81;
        }
      }
      if (v130) {
        goto LABEL_81;
      }
      LibraryEditingAction.title.getter();
      if (!v106) {
        goto LABEL_81;
      }
      uint64_t v107 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v108 = swift_allocObject();
      *(void *)(v108 + 16) = v107;
      *(void *)(v108 + 24) = v48;
      uint64_t v109 = v136;
      int v110 = v137;
      *uint64_t v137 = sub_1000895E8;
      v110[1] = (void (*)())v108;
      (*(void (**)(void (**)(), void, uint64_t))(v135 + 104))(v110, enum case for LibraryMenuItem.ItemVariant.button(_:), v109);
      uint64_t v142 = _swiftEmptyArrayStorage;
      sub_10008979C(&qword_1000F7070, (void (*)(uint64_t))&type metadata accessor for LibraryMenuItem.Attributes);
      id v111 = v48;
    }
    else
    {
      if (v22 != enum case for LibraryEditingAction.stop(_:))
      {
        if (v22 == enum case for LibraryEditingAction.open(_:))
        {
          sub_100021E68();
          type metadata accessor for LibraryDataSource();
          uint64_t v99 = (void (*)(void))method lookup function for LibraryDataSource();
          v99();
          swift_release();
          uint64_t v100 = LibraryLayoutMode.rawValue.getter();
          uint64_t v102 = v101;
          if (v100 == LibraryLayoutMode.rawValue.getter() && v102 == v103)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            char v105 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v105 & 1) == 0) {
              goto LABEL_81;
            }
          }
          if ((v130 & 1) == 0)
          {
            LibraryEditingAction.title.getter();
            if (v118)
            {
              unint64_t v119 = v129;
              if (!v20) {
                unint64_t v119 = 0;
              }
              unint64_t v132 = v119;
              uint64_t v120 = swift_allocObject();
              swift_unknownObjectWeakInit();
              uint64_t v121 = swift_allocObject();
              *(void *)(v121 + 16) = v120;
              *(void *)(v121 + 24) = v48;
              uint64_t v122 = v136;
              uint64_t v123 = v137;
              *uint64_t v137 = sub_10008976C;
              v123[1] = (void (*)())v121;
              (*(void (**)(void (**)(), void, uint64_t))(v135 + 104))(v123, enum case for LibraryMenuItem.ItemVariant.button(_:), v122);
              uint64_t v142 = _swiftEmptyArrayStorage;
              sub_10008979C(&qword_1000F7070, (void (*)(uint64_t))&type metadata accessor for LibraryMenuItem.Attributes);
              swift_retain();
              id v124 = v48;
              sub_100025A08(&qword_1000F7078);
              sub_100089590();
              dispatch thunk of SetAlgebra.init<A>(_:)();
              type metadata accessor for LibraryMenuItem();
              swift_allocObject();
              goto LABEL_18;
            }
          }
LABEL_81:
          swift_bridgeObjectRelease();
          uint64_t v33 = 0;
          goto LABEL_82;
        }
        if (v22 != enum case for LibraryEditingAction.rename(_:)) {
          goto LABEL_81;
        }
        if (v130) {
          goto LABEL_81;
        }
        LibraryEditingAction.title.getter();
        if (!v112) {
          goto LABEL_81;
        }
        uint64_t v113 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v67 = swift_allocObject();
        *(void *)(v67 + 16) = v113;
        *(void *)(v67 + 24) = v48;
        uint64_t v68 = sub_100089710;
LABEL_32:
        uint64_t v69 = v136;
        uint64_t v70 = v137;
        *uint64_t v137 = v68;
        v70[1] = (void (*)())v67;
        (*(void (**)(void (**)(), void, uint64_t))(v135 + 104))(v70, enum case for LibraryMenuItem.ItemVariant.button(_:), v69);
        uint64_t v142 = _swiftEmptyArrayStorage;
        sub_10008979C(&qword_1000F7070, (void (*)(uint64_t))&type metadata accessor for LibraryMenuItem.Attributes);
        id v71 = v48;
        swift_retain();
        sub_100025A08(&qword_1000F7078);
        sub_100089590();
        dispatch thunk of SetAlgebra.init<A>(_:)();
        type metadata accessor for LibraryMenuItem();
        swift_allocObject();
        goto LABEL_18;
      }
      if ((sub_100065154(v131) & 1) == 0) {
        goto LABEL_81;
      }
      sub_100021E68();
      type metadata accessor for LibraryDataSource();
      int v85 = (void (*)(void))method lookup function for LibraryDataSource();
      v85();
      swift_release();
      uint64_t v86 = LibraryLayoutMode.rawValue.getter();
      uint64_t v88 = v87;
      if (v86 == LibraryLayoutMode.rawValue.getter() && v88 == v89)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v91 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v91 & 1) == 0) {
          goto LABEL_81;
        }
      }
      if (v130) {
        goto LABEL_81;
      }
      LibraryEditingAction.title.getter();
      if (!v114) {
        goto LABEL_81;
      }
      uint64_t v115 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v116 = v136;
      uint64_t v117 = v137;
      *uint64_t v137 = sub_100089588;
      v117[1] = (void (*)())v115;
      (*(void (**)(void (**)(), void, uint64_t))(v135 + 104))(v117, enum case for LibraryMenuItem.ItemVariant.button(_:), v116);
      uint64_t v142 = _swiftEmptyArrayStorage;
      sub_10008979C(&qword_1000F7070, (void (*)(uint64_t))&type metadata accessor for LibraryMenuItem.Attributes);
    }
    swift_retain();
    sub_100025A08(&qword_1000F7078);
    sub_100089590();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    type metadata accessor for LibraryMenuItem();
    swift_allocObject();
    goto LABEL_18;
  }
  swift_bridgeObjectRelease();
  v21(v16, (uint64_t)v18, v12);
  (*(void (**)(char *, uint64_t))(v13 + 96))(v16, v12);
  uint64_t v23 = *((void *)v16 + 3);
  uint64_t v24 = *((void *)v16 + 5);
  uint64_t v25 = v13;
  if (*((void *)v16 + 1))
  {
    int v26 = (void *)*((void *)v16 + 4);
    uint64_t v27 = *((void *)v16 + 2);
    uint64_t v139 = v12;
    if (!v24) {
      int v26 = 0;
    }
    uint64_t v131 = v26;
    uint64_t v28 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v29 = (void (*)())swift_allocObject();
    unint64_t v30 = v132;
    *((void *)v29 + 2) = v28;
    *((void *)v29 + 3) = v30;
    *((void *)v29 + 4) = v27;
    *((void *)v29 + 5) = v23;
    uint64_t v31 = v136;
    uint64_t v32 = v137;
    *uint64_t v137 = sub_10008966C;
    v32[1] = v29;
    (*(void (**)(void (**)(), void, uint64_t))(v135 + 104))(v32, enum case for LibraryMenuItem.ItemVariant.button(_:), v31);
    uint64_t v142 = _swiftEmptyArrayStorage;
    sub_10008979C(&qword_1000F7070, (void (*)(uint64_t))&type metadata accessor for LibraryMenuItem.Attributes);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100025A08(&qword_1000F7078);
    sub_100089590();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    type metadata accessor for LibraryMenuItem();
    swift_allocObject();
    uint64_t v12 = v139;
    uint64_t v33 = LibraryMenuItem.init(title:symbolName:attributes:hasSeparator:variant:)();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v33 = 0;
  }
LABEL_83:
  uint64_t v125 = v140;
  *uint64_t v141 = v33;
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v125, v12);
}

void sub_1000868F0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = Strong;
    id v5 = [Strong view];
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = self;
      id v8 = [v6 window];

      id v9 = [v8 windowScene];
      [v7 activateSceneForWorkflowReference:a2 sender:v9];
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1000869E0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    type metadata accessor for LibraryViewController();
    sub_10008979C(&qword_1000F8470, (void (*)(uint64_t))type metadata accessor for LibraryViewController);
    LibraryOperations.duplicateWorkflows(_:completion:)();
  }
}

void sub_100086A94()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    if (swift_unknownObjectWeakLoadStrong())
    {
      swift_getObjectType();
      dispatch thunk of LibraryDelegate.renameObject(_:)();

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

void sub_100086B38(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = sub_100025A08(&qword_1000F5120);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v13 = Strong;
    id v14 = [Strong traitCollection];
    id v15 = [v14 horizontalSizeClass];

    if (v15 != (id)1)
    {
      sub_100021E68();
      type metadata accessor for LibraryDataSource();
      id v16 = (uint64_t (*)(void))method lookup function for LibraryDataSource();
      char v17 = v16();
      swift_release();
      if ((v17 & 1) == 0)
      {
        if (a3) {
          dispatch thunk of PopoverModel.displaySharingPrompt(_:)();
        }
        goto LABEL_4;
      }
      sub_100021E68();
      sub_1000AADBC();
      swift_release();
      if (sub_1000225EC((uint64_t)v7, 1, v8) == 1)
      {
        sub_100025E44((uint64_t)v7, &qword_1000F5120);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
        id v18 = sub_100026038();
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        id v20 = [v18 cellForItemAtIndexPath:isa];

        if (v20)
        {
          id v21 = v20;
          sub_100086E24(a2, v20, v13);

          (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
          return;
        }
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      }
    }
    sub_100086E24(a2, 0, v13);
LABEL_4:
  }
}

void sub_100086E24(void *a1, void *a2, void *a3)
{
  uint64_t v7 = type metadata accessor for Logger();
  __chkstk_darwin(v7);
  uint64_t v8 = *(void **)(v3 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_database);
  id v9 = [v8 conflictingReferenceForReference:a1];

  if (!v9)
  {
    sub_100029C7C(0, &qword_1000F5268);
    id v10 = a1;
    id v11 = sub_100048C7C(v10, v8);
    sub_100029C7C(0, (unint64_t *)&unk_1000F7090);
    id v12 = v11;
    if (a2)
    {
      [a2 bounds];
      char v17 = a2;
    }
    else
    {
      double v13 = 0.0;
      double v14 = 0.0;
      double v15 = 0.0;
      double v16 = 0.0;
      char v17 = 0;
    }
    id v18 = sub_1000882A8(v17, 0, v13, v14, v15, v16);
    uint64_t v35 = (uint64_t)_swiftEmptyArrayStorage;
    if ([self shortcutFileSharingEnabled])
    {
      id v19 = v18;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    id v20 = objc_allocWithZone((Class)type metadata accessor for AddToHomeScreenActivity());
    id v21 = v10;
    id v22 = (id)AddToHomeScreenActivity.init(reference:)();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    id v23 = objc_allocWithZone((Class)WFWorkflowActivityViewController);
    id v24 = sub_100088904(v11, v35);
    if (a2)
    {
      id v25 = a2;
      id v26 = [v24 popoverPresentationController];
      if (v26)
      {
        uint64_t v27 = v26;
        [v26 setSourceView:v25];
      }
      id v28 = [v24 popoverPresentationController];
      if (v28)
      {
        uint64_t v29 = v28;
        [v25 bounds];
        [v29 setSourceRect:];
      }
      uint64_t v30 = swift_allocObject();
      *(void *)(v30 + 16) = v24;
      *(void *)(v30 + 24) = v18;
      aBlock[4] = sub_10008981C;
      aBlock[5] = v30;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10000E51C;
      aBlock[3] = &unk_1000E7148;
      uint64_t v31 = _Block_copy(aBlock);
      id v32 = v18;
      id v33 = v24;
      swift_release();
      [a3 presentViewController:v33 animated:1 completion:v31];

      _Block_release(v31);
    }
    else
    {
      [a3 presentViewController:v24 animated:1 completion:0];
    }
  }
}

void sub_1000873CC(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    sub_10008742C(a2);
  }
}

void sub_10008742C(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_database);
  id v4 = [v3 conflictingReferenceForReference:a1];

  if (!v4)
  {
    sub_100029C7C(0, &qword_1000F5268);
    id v5 = sub_100048C7C(a1, v3);
    if (v5)
    {
      id v6 = v5;
      WFPresentWorkflowSettingsViewController();
    }
  }
}

void sub_100087554()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void **)(Strong + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_database);
    sub_100029C7C(0, (unint64_t *)&unk_1000F70A0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    NSString v4 = String._bridgeToObjectiveC()();
    id v8 = 0;
    unsigned int v5 = [v2 removeReferences:isa fromCollectionWithIdentifier:v4 error:&v8];

    if (v5)
    {
      id v6 = v8;
    }
    else
    {
      id v7 = v8;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRelease();
    }
  }
}

void sub_100087698()
{
  sub_100025AD4();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    v0(v1);
  }
}

uint64_t sub_1000876EC(uint64_t a1)
{
  uint64_t v3 = sub_100025A08(&qword_1000F5100);
  uint64_t v4 = sub_1000165CC(v3);
  __chkstk_darwin(v4);
  sub_10001888C();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for TaskPriority();
  sub_100021594(v7, 1, 1, v8);
  type metadata accessor for MainActor();
  id v9 = v1;
  swift_bridgeObjectRetain();
  uint64_t v10 = static MainActor.shared.getter();
  id v11 = (void *)swift_allocObject();
  _OWORD v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  v11[4] = v9;
  v11[5] = a1;
  sub_100008AD4(v7, (uint64_t)&unk_1000F70B8, (uint64_t)v11);
  return swift_release();
}

void sub_100087810()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    if (swift_unknownObjectWeakLoadStrong())
    {
      swift_getObjectType();
      dispatch thunk of LibraryDelegate.run(_:from:input:requestOutput:runViewSource:completionHandler:)();

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

void sub_1000878D0()
{
  uint64_t v0 = sub_100025A08((uint64_t *)&unk_1000F70F0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    if (swift_unknownObjectWeakLoadStrong())
    {
      swift_getObjectType();
      dispatch thunk of LibraryDelegate.runningWorkflow.getter();
      swift_unknownObjectRelease();
      uint64_t v5 = type metadata accessor for RunningWorkflow();
      if (sub_1000225EC((uint64_t)v2, 1, v5) == 1)
      {

        sub_100025E44((uint64_t)v2, (uint64_t *)&unk_1000F70F0);
      }
      else
      {
        uint64_t v6 = (void (*)(uint64_t))RunningWorkflow.stop.getter();
        uint64_t v7 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v2, v5);
        v6(v7);

        swift_release();
      }
    }
    else
    {
    }
  }
}

uint64_t sub_100087A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  sub_100025A08(&qword_1000F5120);
  v5[4] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for IndexPath();
  v5[5] = v6;
  void v5[6] = *(void *)(v6 - 8);
  v5[7] = swift_task_alloc();
  type metadata accessor for MainActor();
  void v5[8] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[9] = v8;
  v5[10] = v7;
  return _swift_task_switch(sub_100087B70, v8, v7);
}

uint64_t sub_100087B70()
{
  id v1 = sub_100026038();
  v0[11] = v1;
  sub_100021E68();
  type metadata accessor for LibraryDataSource();
  uint64_t v2 = (void (*)(void))method lookup function for LibraryDataSource();
  v2();
  swift_release();
  uint64_t v3 = LibraryLayoutMode.rawValue.getter();
  uint64_t v5 = v4;
  BOOL v7 = v3 == LibraryLayoutMode.rawValue.getter() && v5 == v6;
  if (v7)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0) {
      goto LABEL_14;
    }
  }
  uint64_t v10 = v0[4];
  uint64_t v9 = v0[5];
  id v12 = (void *)v0[2];
  unint64_t v11 = v0[3];
  id v13 = [v1 indexPathsForVisibleItems];
  uint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v15 = sub_1000814C0(v14);
  double v16 = sub_100080B30(v11, v12);
  swift_bridgeObjectRetain();
  sub_100080F00((uint64_t)v16, v15, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001B470(v10, 1, v9);
  if (v7)
  {
    sub_100025E44(v0[4], &qword_1000F5120);
LABEL_14:
    id v19 = 0;
    goto LABEL_15;
  }
  sub_100020698();
  v17();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v19 = [v1 cellForItemAtIndexPath:isa];

  if (v19)
  {
    [v1 bounds];
    CGFloat v21 = v20;
    CGFloat v23 = v22;
    CGFloat v25 = v24;
    CGFloat v27 = v26;
    [v19 frame];
    v44.origin.x = v28;
    v44.origin.y = v29;
    v44.size.width = v30;
    v44.size.height = v31;
    v43.origin.x = v21;
    v43.origin.y = v23;
    v43.size.width = v25;
    v43.size.height = v27;
    BOOL v32 = CGRectContainsRect(v43, v44);
    sub_1000189D8();
    v33();
    if (v32) {
      goto LABEL_15;
    }

    goto LABEL_14;
  }
  sub_1000189D8();
  v40();
LABEL_15:
  v0[12] = v19;
  uint64_t v34 = sub_1000206B4();
  v0[13] = v34;
  *(void *)(v34 + 16) = v19;
  id v35 = v19;
  unint64_t v36 = (void *)swift_task_alloc();
  v0[14] = v36;
  uint64_t v37 = type metadata accessor for LibraryViewController();
  uint64_t v38 = sub_10008979C(&qword_1000F8470, (void (*)(uint64_t))type metadata accessor for LibraryViewController);
  *unint64_t v36 = v0;
  v36[1] = sub_100087EE8;
  uint64_t v39 = v0[3];
  return LibraryOperations.deleteWorkflows(_:alertCustomizationBlock:)(v39, sub_100089A48, v34, v37, v38);
}

uint64_t sub_100087EE8()
{
  sub_10002348C();
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  sub_1000188C4();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  swift_release();
  uint64_t v4 = *(void *)(v1 + 80);
  uint64_t v5 = *(void *)(v1 + 72);
  return _swift_task_switch(sub_100088020, v5, v4);
}

uint64_t sub_100088020()
{
  sub_10002348C();
  uint64_t v1 = *(void **)(v0 + 96);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_1000880A8(void *a1, uint64_t a2)
{
  id v3 = [self sourceWithView:a2];
  [a1 setPresentationSource:v3];
}

void sub_100088124()
{
  sub_100025AD4();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = (void *)Strong;
    uint64_t v4 = Strong + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v5 = *(void *)(v4 + 8);
      uint64_t ObjectType = swift_getObjectType();
      v0(v1, ObjectType, v5);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

void sub_1000881C0(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  a2();
  unint64_t v5 = *(void *)(a4 + 16);
  id v6 = objc_allocWithZone((Class)type metadata accessor for ContextualActionEventTracker());
  id v7 = (id)sub_1000883BC(0x6374726F6853794DLL, 0xEB00000000737475, v5);
  sub_10008824C();
}

id sub_10008824C()
{
  [*(id *)(v0 + OBJC_IVAR____TtC9ShortcutsP33_F50140E0B90057F770640AD097868D8228ContextualActionEventTracker_event) track];
  id result = *(id *)(v0
                 + OBJC_IVAR____TtC9ShortcutsP33_F50140E0B90057F770640AD097868D8228ContextualActionEventTracker_invalidator);
  if (result)
  {
    return [result invalidate];
  }
  return result;
}

id sub_1000882A8(void *a1, void *a2, double a3, double a4, double a5, double a6)
{
  id v8 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithSourceView:a1 sourceRect:a2 barButtonItem:a3];

  return v8;
}

id sub_100088334(void *a1, void *a2)
{
  id result = [a1 popoverPresentationController];
  if (result)
  {
    uint64_t v4 = result;
    id v5 = [result arrowDirection];

    return [a2 setArrowDirection:v5];
  }
  return result;
}

uint64_t sub_1000883BC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v9 = OBJC_IVAR____TtC9ShortcutsP33_F50140E0B90057F770640AD097868D8228ContextualActionEventTracker_event;
  id v10 = objc_allocWithZone((Class)WFContextualActionMetricEvent);
  unint64_t v11 = v4;
  id v12 = [v10 init];
  *(void *)&v4[v9] = v12;
  *(void *)&v11[OBJC_IVAR____TtC9ShortcutsP33_F50140E0B90057F770640AD097868D8228ContextualActionEventTracker_invalidator] = 0;
  sub_10008C1AC(a1, a2, v12);
  if ((a3 & 0x8000000000000000) != 0 || HIDWORD(a3))
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    [v12 setItemCount:a3];

    v19.receiver = v11;
    v19.super_class = ObjectType;
    id v13 = [super init];
    uint64_t v14 = self;
    uint64_t v15 = (char *)v13;
    id v16 = [v14 sharedInstance];
    id v17 = [v16 addPointerDeviceObserver:v15];

    *(void *)&v15[OBJC_IVAR____TtC9ShortcutsP33_F50140E0B90057F770640AD097868D8228ContextualActionEventTracker_invalidator] = v17;
    swift_unknownObjectRelease();
    return (uint64_t)v15;
  }
  return result;
}

id sub_100088598()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC9ShortcutsP33_F50140E0B90057F770640AD097868D8228ContextualActionEventTracker_invalidator];
  if (v2) {
    [v2 invalidate];
  }
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return [super dealloc];
}

id sub_10008866C(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC9ShortcutsP33_F50140E0B90057F770640AD097868D8228ContextualActionEventTracker_event);
  BOOL v3 = !sub_1000886BC(a1);

  return [v2 setHasTrackpad:v3];
}

BOOL sub_1000886BC(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0) {
    uint64_t v1 = __CocoaSet.count.getter();
  }
  else {
    uint64_t v1 = *(void *)(a1 + 16);
  }
  return v1 == 0;
}

void sub_100088780()
{
}

uint64_t type metadata accessor for ContextualActionEventTracker()
{
  return self;
}

id sub_1000887F8(uint64_t a1, uint64_t a2)
{
  v6[4] = a1;
  v6[5] = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  uint64_t v6[2] = sub_10008889C;
  v6[3] = &unk_1000E72B0;
  BOOL v3 = _Block_copy(v6);
  id v4 = [v2 initWithDynamicProvider:v3];
  _Block_release(v3);
  swift_release();
  return v4;
}

id sub_10008889C(uint64_t a1, void *a2)
{
  BOOL v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  id v5 = (void *)v3();
  swift_release();

  return v5;
}

id sub_100088904(void *a1, uint64_t a2)
{
  if (a2)
  {
    sub_100029C7C(0, &qword_1000F5608);
    v4.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v4.super.Class isa = 0;
  }
  id v5 = [v2 initWithWorkflow:a1 applicationActivities:v4.super.isa];

  return v5;
}

uint64_t sub_100088994(uint64_t a1)
{
  if (a1 < 0)
  {
    sub_10002A0B8();
    uint64_t result = sub_1000226B4();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      type metadata accessor for IndexPath();
      uint64_t v2 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
      v2[2] = a1;
    }
    else
    {
      uint64_t v2 = _swiftEmptyArrayStorage;
    }
    uint64_t v3 = type metadata accessor for IndexPath();
    sub_10001C100(v3);
    return (uint64_t)v2;
  }
  return result;
}

uint64_t sub_100088A34(uint64_t a1)
{
  if (a1 < 0)
  {
    sub_10002A0B8();
    uint64_t result = sub_1000226B4();
    __break(1u);
  }
  else if (a1)
  {
    sub_100029C7C(0, &qword_1000F51D0);
    uint64_t result = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) = a1;
  }
  else
  {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_100088ACC()
{
  sub_100018A44();
  sub_10001C0E8();
  uint64_t v1 = *v0;
  sub_1000188C4();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

id sub_100088B94(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = (void *)v1(v2);
  swift_release();

  return v3;
}

void sub_100088BE4(char a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    sub_100016828();
    if (v7 != v8)
    {
      if (v6 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      sub_1000245C8();
    }
  }
  else
  {
    uint64_t v6 = a2;
  }
  uint64_t v9 = *(void *)(a4 + 16);
  if (v6 <= v9) {
    uint64_t v10 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v10 = v6;
  }
  if (v10)
  {
    sub_100025A08(&qword_1000F71A8);
    unint64_t v11 = (char *)swift_allocObject();
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 16);
  }
  else
  {
    unint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  id v13 = v11 + 32;
  if (a1)
  {
    sub_100089088((char *)(a4 + 32), v9, v13);
    *(void *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100088DEC(0, v9, (unint64_t)v13, a4);
  }
}

uint64_t sub_100088CC4(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_100029148(a1, a2, a3, a4, &qword_1000F5F10, (uint64_t (*)(void))&type metadata accessor for ShortcutsLibraryItem, (uint64_t (*)(void))&type metadata accessor for ShortcutsLibraryItem, (void (*)(void))&type metadata accessor for ShortcutsLibraryItem);
}

void sub_100088D0C(char a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    sub_100016828();
    if (v7 != v8)
    {
      if (v6 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      sub_1000245C8();
    }
  }
  else
  {
    uint64_t v6 = a2;
  }
  uint64_t v9 = *(void *)(a4 + 16);
  if (v6 <= v9) {
    uint64_t v10 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v10 = v6;
  }
  if (v10)
  {
    sub_100025A08((uint64_t *)&unk_1000F7188);
    unint64_t v11 = (char *)swift_allocObject();
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 8);
  }
  else
  {
    unint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  id v13 = v11 + 32;
  if (a1)
  {
    sub_1000891D8((char *)(a4 + 32), v9, v13);
    *(void *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100088F04(0, v9, v13, a4);
  }
}

uint64_t sub_100088DEC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_100025A08((uint64_t *)&unk_1000F71B0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_100088F04(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    unint64_t v6 = &__dst[8 * v4];
    if (v5 >= v6 || &v5[8 * v4] <= __dst)
    {
      memcpy(__dst, v5, 8 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_100088FF8(unint64_t a1, uint64_t a2, unint64_t a3)
{
}

void sub_100089010(unint64_t a1, uint64_t a2, unint64_t a3)
{
}

char *sub_10008902C(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_10002A0B8();
    uint64_t result = (char *)sub_100025F50();
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)sub_1000261C4(a3, result);
  }
  return result;
}

char *sub_100089088(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

void sub_10008911C(unint64_t a1, uint64_t a2, unint64_t a3)
{
}

void sub_100089134(unint64_t a1, uint64_t a2, unint64_t a3)
{
}

char *sub_10008914C(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_10002A0B8();
    uint64_t result = (char *)sub_100025F50();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)sub_1000261C4(a3, result);
  }
  return result;
}

void sub_1000891A8(unint64_t a1, uint64_t a2, unint64_t a3)
{
}

void sub_1000891C0(unint64_t a1, uint64_t a2, unint64_t a3)
{
}

char *sub_1000891D8(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[8 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 8 * a2);
  }
  return __src;
}

uint64_t sub_10008926C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_10000CBD8(a1, a2, a3);
}

uint64_t sub_100089284(uint64_t a1, uint64_t a2)
{
  return sub_1000892AC(a1, a2);
}

uint64_t sub_100089298(uint64_t a1, uint64_t a2)
{
  return sub_1000892AC(a1, a2);
}

uint64_t sub_1000892AC(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_10002A0B8();
    sub_1000220F0();
LABEL_11:
    uint64_t result = sub_1000249A0();
    __break(1u);
    return result;
  }
  sub_100020634();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    sub_10002A0B8();
    sub_100022F68();
    goto LABEL_11;
  }
  sub_100029C7C(0, v3);
  sub_10002200C();

  return swift_arrayInitWithCopy();
}

uint64_t sub_100089360(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_10000CBD8(a1, a2, a3);
}

uint64_t sub_100089378(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_10002A0B8();
    sub_1000220F0();
LABEL_11:
    uint64_t result = sub_1000249A0();
    __break(1u);
    return result;
  }
  sub_100024784();
  if (!v5 && v4)
  {
    BOOL v4 = v3 >= v2;
    BOOL v5 = v3 == v2;
  }
  else
  {
    BOOL v4 = 0;
    BOOL v5 = 0;
  }
  if (!v5 && v4)
  {
    sub_10002A0B8();
    sub_100022F68();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_10008941C(uint64_t a1, uint64_t a2)
{
  return sub_1000892AC(a1, a2);
}

uint64_t sub_100089430(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_10000CBD8(a1, a2, a3);
}

uint64_t sub_100089448(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_10002A0B8();
    sub_1000220F0();
LABEL_11:
    uint64_t result = sub_1000249A0();
    __break(1u);
    return result;
  }
  sub_100020634();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_10002A0B8();
    sub_100022F68();
    goto LABEL_11;
  }
  sub_100025A08((uint64_t *)&unk_1000F71D0);
  sub_10002200C();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1000894F8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_10000CBD8(a1, a2, a3);
}

unint64_t sub_100089514(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)(a3 + 16) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

unint64_t sub_100089534(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100089558()
{
  swift_unknownObjectWeakDestroy();
  uint64_t v0 = sub_10001B3C8();

  return _swift_deallocObject(v0, v1, v2);
}

void sub_100089588()
{
}

unint64_t sub_100089590()
{
  unint64_t result = qword_1000F7080;
  if (!qword_1000F7080)
  {
    sub_10001E8D0(&qword_1000F7078);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F7080);
  }
  return result;
}

void sub_1000895E8()
{
}

void sub_1000895F4()
{
}

uint64_t sub_100089624()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_10008966C()
{
}

void sub_10008967C()
{
}

void sub_1000896B0()
{
  sub_1000873CC(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1000896B8()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100089700()
{
  sub_100086B38(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

void sub_100089710()
{
}

uint64_t sub_10008971C()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_10001FB44();

  return _swift_deallocObject(v0, v1, v2);
}

void sub_100089754()
{
}

void sub_100089760()
{
  sub_1000868F0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_10008976C()
{
}

uint64_t sub_10008979C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000897E4()
{
  uint64_t v1 = sub_10001FB44();

  return _swift_deallocObject(v1, v2, v3);
}

id sub_10008981C()
{
  return sub_100088334(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100089824()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10008986C(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v7 = swift_task_alloc();
  char v8 = (void *)sub_100016658(v7);
  *char v8 = v9;
  v8[1] = sub_100089924;
  return sub_100087A4C(a1, v3, v4, v6, v5);
}

uint64_t sub_100089924()
{
  sub_100018A44();
  sub_10001C0E8();
  uint64_t v1 = *v0;
  sub_1000188C4();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_1000899E8()
{
  swift_release();
  uint64_t v0 = sub_10001FB44();

  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_100089A18()
{
  uint64_t v1 = sub_10001B3C8();

  return _swift_deallocObject(v1, v2, v3);
}

void sub_100089A48(void *a1)
{
  sub_1000880A8(a1, *(void *)(v1 + 16));
}

uint64_t sub_100089A50(uint64_t result, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

uint64_t sub_100089A6C(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v7 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  sub_100021608();
  if ((v10 & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_10008C928();
    id v26 = a2;
    sub_10008AAD8((uint64_t)v26, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v30;
    swift_bridgeObjectRelease();
    *a1 = v26;
    return 1;
  }
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;
  if (v11 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v13 == v14)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v16 = sub_100020584();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      uint64_t v17 = ~v8;
      do
      {
        unint64_t v9 = (v9 + 1) & v17;
        sub_100021608();
        if ((v18 & 1) == 0) {
          goto LABEL_15;
        }
        uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v21 = v20;
        if (v19 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v21 == v22) {
          goto LABEL_16;
        }
        char v24 = sub_100020584();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v24 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease();
  CGFloat v28 = *(void **)(*(void *)(*v3 + 48) + 8 * v9);
  *a1 = v28;
  id v29 = v28;
  return 0;
}

uint64_t sub_100089C44(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  sub_1000189B4();
  if (v11)
  {
    uint64_t v12 = *(void *)(v7 + 48);
    uint64_t v13 = (void *)(v12 + 16 * v10);
    BOOL v14 = *v13 == a2 && v13[1] == a3;
    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v18 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v18;
      sub_1000189B4();
      if ((v19 & 1) == 0) {
        break;
      }
      uint64_t v20 = (void *)(v12 + 16 * v10);
      BOOL v21 = *v20 == a2 && v20[1] == a3;
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_10008C928();
  swift_bridgeObjectRetain();
  sub_10008AD08(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v23;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_100089DD0(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_10008979C(&qword_1000F70D0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  swift_bridgeObjectRetain();
  id v33 = a2;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    CGFloat v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    Swift::Int v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    BOOL v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_10008979C(&qword_1000F70D8, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      BOOL v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    BOOL v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_10008AEA4((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_10008A0F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100025A08(&qword_1000F5E30);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v27 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v29 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v28 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
    {
      uint64_t v16 = *(void *)(*(void *)(v2 + 48) + 8 * i);
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      Hasher.init(_seed:)();
      String.hash(into:)();
      Swift::Int v17 = Hasher._finalize()();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v19 = v17 & ~v18;
      unint64_t v20 = v19 >> 6;
      if (((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6))) == 0)
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v18) >> 6;
        while (++v20 != v23 || (v22 & 1) == 0)
        {
          BOOL v24 = v20 == v23;
          if (v20 == v23) {
            unint64_t v20 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v8 + 8 * v20);
          if (v25 != -1)
          {
            unint64_t v21 = __clz(__rbit64(~v25)) + (v20 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v8 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      *(void *)(*(void *)(v4 + 48) + 8 * v21) = v16;
      ++*(void *)(v4 + 16);
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v13 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_38;
      }
      if (v13 >= v28) {
        goto LABEL_32;
      }
      unint64_t v14 = v29[v13];
      ++v10;
      if (!v14)
      {
        int64_t v10 = v13 + 1;
        if (v13 + 1 >= v28) {
          goto LABEL_32;
        }
        unint64_t v14 = v29[v10];
        if (!v14)
        {
          int64_t v10 = v13 + 2;
          if (v13 + 2 >= v28) {
            goto LABEL_32;
          }
          unint64_t v14 = v29[v10];
          if (!v14)
          {
            int64_t v15 = v13 + 3;
            if (v15 >= v28)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v27;
              uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
              if (v26 > 63) {
                sub_100089A50(0, (unint64_t)(v26 + 63) >> 6, v29);
              }
              else {
                *uint64_t v29 = -1 << v26;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v14 = v29[v15];
            if (!v14)
            {
              while (1)
              {
                int64_t v10 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_39;
                }
                if (v10 >= v28) {
                  goto LABEL_32;
                }
                unint64_t v14 = v29[v10];
                ++v15;
                if (v14) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v10 = v15;
          }
        }
      }
LABEL_20:
      unint64_t v7 = (v14 - 1) & v14;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_10008A404()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100025A08((uint64_t *)&unk_1000F7130);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      Swift::Int v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          BOOL v26 = v22 == v25;
          if (v22 == v25) {
            unint64_t v22 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      int64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
      void *v28 = v18;
      v28[1] = v19;
      ++*(void *)(v4 + 16);
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_38;
      }
      if (v14 >= v8) {
        goto LABEL_32;
      }
      unint64_t v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        int64_t v11 = v14 + 1;
        if (v14 + 1 >= v8) {
          goto LABEL_32;
        }
        unint64_t v15 = v30[v11];
        if (!v15)
        {
          int64_t v11 = v14 + 2;
          if (v14 + 2 >= v8) {
            goto LABEL_32;
          }
          unint64_t v15 = v30[v11];
          if (!v15)
          {
            int64_t v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
              if (v29 > 63) {
                sub_100089A50(0, (unint64_t)(v29 + 63) >> 6, v30);
              }
              else {
                *uint64_t v30 = -1 << v29;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                int64_t v11 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_39;
                }
                if (v11 >= v8) {
                  goto LABEL_32;
                }
                unint64_t v15 = v30[v11];
                ++v16;
                if (v15) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v11 = v16;
          }
        }
      }
LABEL_20:
      unint64_t v7 = (v15 - 1) & v15;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_10008A6E0()
{
  uint64_t v1 = v0;
  uint64_t v42 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  id v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_100025A08(&qword_1000F70E8);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    id v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    int64_t v14 = v41;
    uint64_t v15 = v42;
    if (!v10) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v16 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    int64_t v40 = v13;
    for (unint64_t i = v16 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v20 << 6))
    {
      uint64_t v22 = v4;
      uint64_t v23 = *(void *)(v4 + 48);
      uint64_t v24 = *(void *)(v39 + 72);
      unint64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v25(v14, v23 + v24 * i, v15);
      uint64_t v6 = v38;
      sub_10008979C(&qword_1000F70D0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v26 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) == 0)
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v26) >> 6;
        while (++v28 != v31 || (v30 & 1) == 0)
        {
          BOOL v32 = v28 == v31;
          if (v28 == v31) {
            unint64_t v28 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v28);
          if (v33 != -1)
          {
            unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(*(void *)(v6 + 48) + v29 * v24, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v22;
      int64_t v13 = v40;
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v18 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_38;
      }
      if (v18 >= v36) {
        goto LABEL_32;
      }
      unint64_t v19 = v37[v18];
      int64_t v20 = v13 + 1;
      if (!v19)
      {
        int64_t v20 = v13 + 2;
        if (v13 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v19 = v37[v20];
        if (!v19)
        {
          int64_t v20 = v13 + 3;
          if (v13 + 3 >= v36) {
            goto LABEL_32;
          }
          unint64_t v19 = v37[v20];
          if (!v19)
          {
            uint64_t v21 = v13 + 4;
            if (v13 + 4 >= v36)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v35;
              uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
              if (v34 > 63) {
                sub_100089A50(0, (unint64_t)(v34 + 63) >> 6, v37);
              }
              else {
                void *v37 = -1 << v34;
              }
              *(void *)(v4 + 16) = 0;
              break;
            }
            unint64_t v19 = v37[v21];
            if (!v19)
            {
              while (1)
              {
                int64_t v20 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_39;
                }
                if (v20 >= v36) {
                  goto LABEL_32;
                }
                unint64_t v19 = v37[v20];
                ++v21;
                if (v19) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v20 = v13 + 4;
          }
        }
      }
LABEL_20:
      unint64_t v10 = (v19 - 1) & v19;
      int64_t v40 = v20;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_10008AAD8(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_22;
  }
  if (a3)
  {
    sub_10008A0F4();
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (uint64_t)sub_10008B144();
LABEL_22:
      uint64_t v25 = *v4;
      *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(void *)(*(void *)(v25 + 48) + 8 * a2) = v6;
      uint64_t v26 = *(void *)(v25 + 16);
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (!v27)
      {
        *(void *)(v25 + 16) = v28;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_10008B754();
  }
  uint64_t v9 = *v3;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v10 = Hasher._finalize()();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;
  if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    uint64_t v18 = ~v11;
    do
    {
      a2 = (a2 + 1) & v18;
      if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_22;
      }
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v21 = v20;
      if (v19 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v21 == v22) {
        goto LABEL_25;
      }
      char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    while ((v24 & 1) == 0);
  }
LABEL_26:
  type metadata accessor for WFWorkflowTypeName(0);
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

Swift::Int sub_10008AD08(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_10008A404();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_10008B2F0();
      goto LABEL_22;
    }
    sub_10008BA30();
  }
  uint64_t v11 = *v4;
  Hasher.init(_seed:)();
  String.hash(into:)();
  uint64_t result = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_10008AEA4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_10008A6E0();
  }
  else
  {
    if (v11 > v10)
    {
      sub_10008B4A4();
      goto LABEL_12;
    }
    sub_10008BCDC();
  }
  uint64_t v12 = *v3;
  sub_10008979C(&qword_1000F70D0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  uint64_t v13 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_10008979C(&qword_1000F70D8, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

id sub_10008B144()
{
  uint64_t v1 = v0;
  sub_100025A08(&qword_1000F5E30);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    *(void *)(*(void *)(v4 + 48) + 8 * i) = v20;
    id result = v20;
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_10008B2F0()
{
  uint64_t v1 = v0;
  sub_100025A08((uint64_t *)&unk_1000F7130);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = (void *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v21 = v20[1];
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + 16 * i);
    *uint64_t v22 = *v20;
    v22[1] = v21;
    id result = (void *)swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_10008B4A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100025A08(&qword_1000F70E8);
  uint64_t v6 = *v0;
  uint64_t v7 = static _SetStorage.copy(original:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    id result = (void *)swift_release();
LABEL_30:
    *uint64_t v1 = v8;
    return result;
  }
  id result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  uint64_t v24 = v1;
  uint64_t v25 = (const void *)(v6 + 56);
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    id result = memmove(result, v25, 8 * v10);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = *(void *)(v6 + 56);
  uint64_t v15 = -1;
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  unint64_t v16 = v15 & v14;
  int64_t v26 = (unint64_t)(v13 + 63) >> 6;
  if ((v15 & v14) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v17 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v17 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v12 << 6))
  {
    unint64_t v22 = *(void *)(v3 + 72) * i;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v22, v2);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v22, v5, v2);
    if (v16) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v19 >= v26) {
      goto LABEL_28;
    }
    unint64_t v20 = *((void *)v25 + v19);
    ++v12;
    if (!v20)
    {
      int64_t v12 = v19 + 1;
      if (v19 + 1 >= v26) {
        goto LABEL_28;
      }
      unint64_t v20 = *((void *)v25 + v12);
      if (!v20)
      {
        int64_t v12 = v19 + 2;
        if (v19 + 2 >= v26) {
          goto LABEL_28;
        }
        unint64_t v20 = *((void *)v25 + v12);
        if (!v20) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v16 = (v20 - 1) & v20;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v26)
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_30;
  }
  unint64_t v20 = *((void *)v25 + v21);
  if (v20)
  {
    int64_t v12 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v12 >= v26) {
      goto LABEL_28;
    }
    unint64_t v20 = *((void *)v25 + v12);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_10008B754()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100025A08(&qword_1000F5E30);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v27 = v0;
  uint64_t v28 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  if (!v7) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    unint64_t v16 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    id v17 = v16;
    String.hash(into:)();
    Swift::Int v18 = Hasher._finalize()();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = v18 & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6))) == 0)
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v8 + 8 * v21);
        if (v26 != -1)
        {
          unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v8 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(void *)(*(void *)(v4 + 48) + 8 * v22) = v17;
    ++*(void *)(v4 + 16);
    if (v7) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_36;
    }
    if (v13 >= v29) {
      goto LABEL_32;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v29) {
        goto LABEL_32;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v29) {
          goto LABEL_32;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v10);
        if (!v14) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v7 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v29)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v27;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v29) {
      goto LABEL_32;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10008BA30()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100025A08((uint64_t *)&unk_1000F7130);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    id v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
    void *v28 = v18;
    v28[1] = v19;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10008BCDC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_100025A08(&qword_1000F70E8);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  if (!v12) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v17 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    uint64_t v22 = v6;
    uint64_t v23 = *(void *)(v6 + 48);
    uint64_t v24 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v23 + v24 * i, v2);
    sub_10008979C(&qword_1000F70D0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v25 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6))) == 0)
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v27);
        if (v32 != -1)
        {
          unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v13 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v28 * v24, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v22;
    if (v12) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v19 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_36;
    }
    if (v19 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v19);
    ++v16;
    if (!v20)
    {
      int64_t v16 = v19 + 1;
      if (v19 + 1 >= v36) {
        goto LABEL_32;
      }
      unint64_t v20 = *(void *)(v35 + 8 * v16);
      if (!v20)
      {
        int64_t v16 = v19 + 2;
        if (v19 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v35 + 8 * v16);
        if (!v20) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v20 - 1) & v20;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v36)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v35 + 8 * v21);
  if (v20)
  {
    int64_t v16 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v16 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_10008C08C()
{
}

uint64_t sub_10008C0A8()
{
  uint64_t v1 = type metadata accessor for AggregatedEntry();
  sub_100022284();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 24) & ~v6;
  uint64_t v8 = v7 + *(void *)(v5 + 64);
  uint64_t v9 = v6 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);

  return _swift_deallocObject(v0, v8, v9);
}

void sub_10008C14C()
{
}

void sub_10008C164()
{
  uint64_t v0 = type metadata accessor for AggregatedEntry();
  sub_10001C100(v0);
  sub_100088124();
}

void sub_10008C1AC(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 setSource:v4];
}

uint64_t sub_10008C210()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_10008C298(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5) {
    goto LABEL_9;
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    uint64_t result = sub_10008C338(result, a2, a3);
    if ((result & 1) == 0) {
      return result & 0xC | sub_10008C3A8(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
  }
  return result;
}

unint64_t sub_10008C338(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) == 4 << v5) {
    uint64_t result = sub_10003E078(result, a2, a3);
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16) {
    __break(1u);
  }
  return result;
}

unint64_t sub_10008C3A8(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    unint64_t v5 = result >> 16;
    if ((a3 & 0x1000000000000000) != 0)
    {
      uint64_t v10 = HIBYTE(a3) & 0xF;
      if ((a3 & 0x2000000000000000) == 0) {
        uint64_t v10 = a2 & 0xFFFFFFFFFFFFLL;
      }
      if (v5 != v10)
      {
        return _StringGuts.foreignScalarAlign(_:)();
      }
    }
    else
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((unsigned char *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            unint64_t v9 = v5 - 1;
            int v11 = *((unsigned char *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
        }
        else
        {
          unint64_t v9 = result >> 16;
        }
        unint64_t v5 = v9;
      }
      else
      {
        if ((a2 & 0x1000000000000000) != 0)
        {
          uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
          uint64_t v7 = a2 & 0xFFFFFFFFFFFFLL;
        }
        else
        {
          unint64_t v12 = result >> 16;
          uint64_t v6 = _StringObject.sharedUTF8.getter();
          unint64_t v5 = v12;
        }
        if (v5 != v7)
        {
          do
            int v8 = *(unsigned char *)(v6 + v5--) & 0xC0;
          while (v8 == 128);
          ++v5;
        }
      }
      return v5 << 16;
    }
  }
  return result;
}

uint64_t sub_10008C4B4(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  unint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_10008C594;
  return v5(v2 + 32);
}

uint64_t sub_10008C594()
{
  sub_100018A44();
  sub_10001C0E8();
  uint64_t v2 = v1;
  uint64_t v4 = *(unsigned char **)(v3 + 16);
  uint64_t v5 = *v0;
  sub_1000188C4();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  *uint64_t v4 = *(unsigned char *)(v2 + 32);
  uint64_t v7 = *(uint64_t (**)(void))(v5 + 8);
  return v7();
}

uint64_t sub_10008C678()
{
  sub_10002348C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_100016658(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100089924;
  uint64_t v3 = sub_10002A750();
  return v4(v3);
}

unint64_t sub_10008C710()
{
  unint64_t result = qword_1000F7148;
  if (!qword_1000F7148)
  {
    sub_100029C7C(255, &qword_1000F7140);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F7148);
  }
  return result;
}

uint64_t sub_10008C770()
{
  return sub_1000843CC();
}

uint64_t sub_10008C798()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_10001FB44();

  return _swift_deallocObject(v1, v2, v3);
}

Class sub_10008C7D0()
{
  return sub_100083468(*(void *)(v0 + 24));
}

uint64_t sub_10008C7FC()
{
  swift_release();

  uint64_t v1 = sub_10001FB44();

  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10008C834()
{
  return sub_100081BA4();
}

uint64_t sub_10008C83C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100025A08(&qword_1000F7110);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008C8A4()
{
  return sub_100083144();
}

uint64_t sub_10008C8AC()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10008C8EC(uint64_t a1)
{
  sub_1000881C0(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

void sub_10008C928()
{
  *uint64_t v0 = 0x8000000000000000;
}

void sub_10008C93C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9Shortcuts21SearchStateController_stateStore);
  if (*(void *)(v0 + OBJC_IVAR____TtC9Shortcuts21SearchStateController_pendingTraitCollection))
  {
    sub_10008CAB4();
  }
  else
  {
    uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_lockCounter);
    if (v2) {
      *(void *)(v1 + OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_lockCounter) = v2 - 1;
    }
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v4 = (void *)Strong;
      id v5 = sub_10001A768();
      sub_10001AA08(v5);
    }
  }
}

void sub_10008C9E8(void *a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC9Shortcuts21SearchStateController_pendingTraitCollection);
  *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21SearchStateController_pendingTraitCollection) = a1;
  id v3 = a1;

  sub_10008C93C();
}

id sub_10008CA40(uint64_t a1)
{
  return sub_10008CB0C(a1, type metadata accessor for SearchStateController);
}

void sub_10008CAB4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_lockCounter);
  BOOL v2 = __CFADD__(v1, 1);
  uint64_t v3 = v1 + 1;
  if (v2) {
    __break(1u);
  }
  else {
    *(void *)(v0 + OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_lockCounter) = v3;
  }
}

void sub_10008CAD4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_lockCounter);
  if (v1) {
    *(void *)(v0 + OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_lockCounter) = v1 - 1;
  }
}

id sub_10008CAF0()
{
  return sub_10008CB0C(0, type metadata accessor for SearchStateStore);
}

id sub_10008CB0C(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t sub_10008CB58()
{
  uint64_t v0 = (char *)sub_10001AD2C();
  if (!v0) {
    return 0;
  }
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_state];
  swift_bridgeObjectRetain();

  return v2;
}

void sub_10008CBB8(void *a1)
{
  uint64_t v3 = (unsigned __int8 *)sub_10001AD2C();
  if (v3)
  {
    objc_super v4 = v3;
    __int16 v5 = v3[OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_state + 16];
    int v6 = v3[OBJC_IVAR____TtC9ShortcutsP33_8EB4106E991E4BC479DE0B61E3FF388616SearchStateStore_state + 17];
    swift_bridgeObjectRetain();

    if (a1)
    {
      uint64_t v7 = sub_10009D994(a1);
      uint64_t v9 = v8;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v7 = 0;
      uint64_t v9 = 0;
    }
    if (v6) {
      __int16 v10 = 256;
    }
    else {
      __int16 v10 = 0;
    }
    sub_10001A8A0(v7, v9, v10 | v5);
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = v1 + OBJC_IVAR____TtC9Shortcuts16SearchController_viewController;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v13 = *(void *)(v11 + 8);
    id v15 = (id)Strong;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void *, uint64_t, uint64_t))(v13 + 32))(a1, ObjectType, v13);
  }
}

void sub_10008CCF4()
{
  id v0 = sub_10001A768();
  if (v0)
  {
    id v1 = v0;
    [v0 becomeFirstResponder];
  }
}

void sub_10008CD90()
{
}

void sub_10008CDD0(void *a1)
{
  id v1 = [a1 searchBar];
  sub_10008CBB8(v1);
}

void sub_10008CE84(void *a1)
{
  uint64_t v2 = sub_10009D994(a1);
  sub_10001A8A0(v2, v3, 257);
  swift_bridgeObjectRelease();
  id v4 = sub_10001A7B8();
  if (v4)
  {
  }
  else
  {
    sub_10008CBB8(a1);
  }
}

void sub_10008CF68(void *a1)
{
  id v2 = sub_10001A7B8();
  if (v2)
  {
  }
  else
  {
    sub_10008CBB8(a1);
  }
}

void sub_10008D02C(void *a1)
{
  __int16 v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9Shortcuts16SearchController_state + 16);
  int v4 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9Shortcuts16SearchController_state + 17);
  uint64_t v5 = sub_10009D994(a1);
  if (v4) {
    __int16 v7 = 256;
  }
  else {
    __int16 v7 = 0;
  }
  sub_10001A8A0(v5, v6, v7 | v3);
  swift_bridgeObjectRelease();
  id v8 = sub_10001A7B8();
  if (v8)
  {
  }
  else
  {
    sub_10008CBB8(a1);
  }
}

uint64_t sub_10008D13C(void *a1)
{
  [a1 resignFirstResponder];
  uint64_t v2 = sub_10009D994(a1);
  sub_10001A8A0(v2, v3, 256);

  return swift_bridgeObjectRelease();
}

void sub_10008D1F8(void *a1)
{
  sub_10001A8A0(0, 0xE000000000000000, 0);
  id v2 = sub_10001A7B8();
  if (v2)
  {
  }
  else
  {
    sub_10005C6D8(0, 0xE000000000000000, a1);
    if ([a1 isFirstResponder])
    {
      [a1 resignFirstResponder];
    }
    else
    {
      sub_10008CBB8(a1);
    }
  }
}

uint64_t destroy for SearchState()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s9Shortcuts11SearchStateVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

__n128 initializeWithTake for SearchState(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for SearchState(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchState(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 18))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 18) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchState()
{
  return &type metadata for SearchState;
}

uint64_t sub_10008D4C8()
{
  type metadata accessor for _AssistantIntent();
  sub_100022284();
  uint64_t v1 = v0;
  __chkstk_darwin(v2);
  sub_10001899C();
  OpenNavigationDestinationAction.init()();
  unint64_t v3 = sub_10005C1C4();
  sub_10002A0E4(v3, (uint64_t)sub_10008DB88, v4, (uint64_t)sub_10008E0F8, v5, (uint64_t)&type metadata for OpenNavigationDestinationAction, v3);
  uint64_t v106 = static _AssistantIntent.Builder.buildExpression(_:)();
  uint64_t v6 = *(void (**)(uint64_t))(v1 + 8);
  uint64_t v7 = sub_100025A84();
  v6(v7);
  OpenWorkflowAction.init()();
  unint64_t v8 = sub_10005C0D4();
  sub_10002A0E4(v8, (uint64_t)sub_10008E204, v9, (uint64_t)sub_10008E718, v10, (uint64_t)&type metadata for OpenWorkflowAction, v8);
  uint64_t v105 = static _AssistantIntent.Builder.buildExpression(_:)();
  uint64_t v11 = sub_100025A84();
  v6(v11);
  CreateWorkflowAction.init()();
  unint64_t v12 = sub_10005C05C();
  sub_10002A0E4(v12, (uint64_t)sub_10008E8DC, v13, (uint64_t)sub_10008ECA0, v14, (uint64_t)&type metadata for CreateWorkflowAction, v12);
  uint64_t v104 = static _AssistantIntent.Builder.buildExpression(_:)();
  uint64_t v15 = sub_100025A84();
  v6(v15);
  CreateFolderAction.init()();
  unint64_t v16 = sub_10005C178();
  sub_10002A0E4(v16, (uint64_t)sub_10008ECD4, v17, (uint64_t)sub_10008F0FC, v18, (uint64_t)&type metadata for CreateFolderAction, v16);
  uint64_t v103 = static _AssistantIntent.Builder.buildExpression(_:)();
  uint64_t v19 = sub_100025A84();
  v6(v19);
  MoveShortcutToFolderAction.init()();
  unint64_t v20 = sub_10005C210();
  sub_10002A0E4(v20, (uint64_t)sub_10008F2E4, v21, (uint64_t)sub_10008F938, v22, (uint64_t)&type metadata for MoveShortcutToFolderAction, v20);
  uint64_t v102 = static _AssistantIntent.Builder.buildExpression(_:)();
  uint64_t v23 = sub_100025A84();
  v6(v23);
  AddShortcutToHomeScreenAction.init()();
  unint64_t v24 = sub_10005C2B0();
  sub_10002A0E4(v24, (uint64_t)sub_10008FB58, v25, (uint64_t)sub_1000900D0, v26, (uint64_t)&type metadata for AddShortcutToHomeScreenAction, v24);
  uint64_t v101 = static _AssistantIntent.Builder.buildExpression(_:)();
  uint64_t v27 = sub_100025A84();
  v6(v27);
  RenameShortcutAction.init()();
  unint64_t v28 = sub_10005C3A4();
  sub_10002A0E4(v28, (uint64_t)sub_100090118, v29, (uint64_t)sub_100090690, v30, (uint64_t)&type metadata for RenameShortcutAction, v28);
  uint64_t v100 = static _AssistantIntent.Builder.buildExpression(_:)();
  uint64_t v31 = sub_100025A84();
  v6(v31);
  ChangeShortcutIconAction.init()();
  unint64_t v32 = sub_10005C3F8();
  sub_10002A0E4(v32, (uint64_t)sub_100090878, v33, (uint64_t)sub_100090CCC, v34, (uint64_t)&type metadata for ChangeShortcutIconAction, v32);
  uint64_t v99 = static _AssistantIntent.Builder.buildExpression(_:)();
  uint64_t v35 = sub_100025A84();
  v6(v35);
  GetShortcutAttributesAction.init()();
  unint64_t v36 = sub_10005C490();
  sub_10002A0E4(v36, (uint64_t)sub_100090D14, v37, (uint64_t)sub_1000912EC, v38, (uint64_t)&type metadata for GetShortcutAttributesAction, v36);
  uint64_t v98 = static _AssistantIntent.Builder.buildExpression(_:)();
  uint64_t v39 = sub_100025A84();
  v6(v39);
  SetShortcutAttributesAction.init()();
  sub_100022F78(v40, v41, v42, v43);
  unint64_t v44 = sub_10005C580();
  sub_100025F74(v44, (uint64_t)sub_100091334, v45, (uint64_t)sub_100091B6C);
  uint64_t v97 = static _AssistantIntent.Builder.buildExpression(_:)();
  uint64_t v46 = sub_100025A84();
  v6(v46);
  sub_1000224A8();
  uint64_t v51 = sub_100022F78(v47, v48, v49, v50);
  sub_100025F74(v51, (uint64_t)sub_100091BB4, v52, (uint64_t)sub_100091B6C);
  uint64_t v96 = static _AssistantIntent.Builder.buildExpression(_:)();
  uint64_t v53 = sub_100025A84();
  v6(v53);
  sub_1000224A8();
  uint64_t v58 = sub_100022F78(v54, v55, v56, v57);
  sub_100025F74(v58, (uint64_t)sub_100091FD0, v59, (uint64_t)sub_100091B6C);
  uint64_t v60 = static _AssistantIntent.Builder.buildExpression(_:)();
  uint64_t v61 = sub_100025A84();
  v6(v61);
  sub_1000224A8();
  uint64_t v66 = sub_100022F78(v62, v63, v64, v65);
  sub_100025F74(v66, (uint64_t)sub_1000923FC, v67, (uint64_t)sub_100091B6C);
  uint64_t v68 = static _AssistantIntent.Builder.buildExpression(_:)();
  uint64_t v69 = sub_100025A84();
  v6(v69);
  sub_1000224A8();
  uint64_t v74 = sub_100022F78(v70, v71, v72, v73);
  sub_100025F74(v74, (uint64_t)sub_100092830, v75, (uint64_t)sub_100091B6C);
  uint64_t v76 = static _AssistantIntent.Builder.buildExpression(_:)();
  uint64_t v77 = sub_100025A84();
  v6(v77);
  CreateShortcutiCloudLinkAction.init()();
  unint64_t v78 = sub_10005C5CC();
  sub_10002A0E4(v78, (uint64_t)sub_100092C60, v79, (uint64_t)sub_100093080, v80, (uint64_t)&type metadata for CreateShortcutiCloudLinkAction, v78);
  uint64_t v81 = static _AssistantIntent.Builder.buildExpression(_:)();
  uint64_t v82 = sub_100025A84();
  v6(v82);
  DeleteWorkflowAction.init()();
  unint64_t v83 = sub_10005E250();
  sub_10002A0E4(v83, (uint64_t)sub_1000930C8, v84, (uint64_t)sub_100093628, v85, (uint64_t)&type metadata for DeleteWorkflowAction, v83);
  uint64_t v86 = static _AssistantIntent.Builder.buildExpression(_:)();
  uint64_t v87 = sub_100025A84();
  v6(v87);
  SearchShortcutsAction.init()();
  unint64_t v88 = sub_10005C67C();
  sub_10002A0E4(v88, (uint64_t)sub_1000937C8, v89, (uint64_t)sub_100093D50, v90, (uint64_t)&type metadata for SearchShortcutsAction, v88);
  uint64_t v91 = static _AssistantIntent.Builder.buildExpression(_:)();
  uint64_t v92 = sub_100025A84();
  v6(v92);
  sub_100025A08(&qword_1000F7440);
  uint64_t v93 = swift_allocObject();
  *(_OWORD *)(v93 + 16) = xmmword_1000BE260;
  *(void *)(v93 + 32) = v106;
  *(void *)(v93 + 40) = v105;
  *(void *)(v93 + 48) = v104;
  *(void *)(v93 + 56) = v103;
  *(void *)(v93 + 64) = v102;
  *(void *)(v93 + 72) = v101;
  *(void *)(v93 + 80) = v100;
  *(void *)(v93 + 88) = v99;
  *(void *)(v93 + 96) = v98;
  *(void *)(v93 + 104) = v97;
  *(void *)(v93 + 112) = v96;
  *(void *)(v93 + 120) = v60;
  *(void *)(v93 + 128) = v68;
  *(void *)(v93 + 136) = v76;
  *(void *)(v93 + 144) = v81;
  *(void *)(v93 + 152) = v86;
  *(void *)(v93 + 160) = v91;
  uint64_t v94 = static _AssistantIntent.Builder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v94;
}

uint64_t sub_10008DB88(uint64_t a1)
{
  uint64_t v32 = a1;
  uint64_t v1 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v29 = *(void *)(v1 - 8);
  uint64_t v30 = v1;
  __chkstk_darwin(v1);
  unint64_t v28 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100025A08(&qword_1000F7590);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100025A08(&qword_1000F7598);
  __chkstk_darwin(v7);
  sub_10005C1C4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._countAndFlagsBits = 0x657461676976614ELL;
  v8._object = (void *)0xEC000000206F7420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  unint64_t v31 = sub_100094130();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v4 + 8);
  v10(v6, v3);
  uint64_t v25 = v10;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0x206F7420706D754ALL;
  v11._object = (void *)0xEC00000020656874;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0x6E6F697463657320;
  v12._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v26 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v13 = v3;
  v10(v6, v3);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 0x206F74206F47;
  v14._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 544106784;
  v15._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  uint64_t v17 = v28;
  uint64_t v16 = v29;
  uint64_t v18 = v30;
  (*(void (**)(char *, void, uint64_t))(v29 + 104))(v28, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v30);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v17, v18);
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v25(v6, v13);
  sub_100025A08((uint64_t *)&unk_1000F75A0);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1000BABF0;
  uint64_t v22 = v26;
  *(void *)(v21 + 32) = v27;
  *(void *)(v21 + 40) = v22;
  *(void *)(v21 + 48) = v20;
  uint64_t v23 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_10008E06C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NavigationDestinationEntity();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004B0EC(a1, (uint64_t)v4);
  return OpenNavigationDestinationAction.target.setter((uint64_t)v4);
}

uint64_t sub_10008E0F8(uint64_t a1)
{
  return sub_10008E760(a1, (uint64_t)&unk_1000BE580, (void (*)(void))sub_100094130, (void (*)(uint64_t))sub_10005C1C4);
}

uint64_t sub_10008E140()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_100025A08(&qword_1000F7438);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1000BABF0;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10008E204(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v32 = *(void *)(v2 - 8);
  uint64_t v33 = v2;
  __chkstk_darwin(v2);
  unint64_t v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100025A08(&qword_1000F7578);
  uint64_t v35 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100025A08(&qword_1000F7580);
  __chkstk_darwin(v6);
  sub_10005C0D4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._countAndFlagsBits = 0x206E65704FLL;
  v7._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  unint64_t v28 = sub_10002C798();
  uint64_t v29 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v35 + 8);
  uint64_t v34 = v9;
  v35 += 8;
  uint64_t v27 = v10;
  uint64_t v11 = v30;
  v10(v5, v30);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._countAndFlagsBits = 0x2074696445;
  v12._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 544106784;
  v13._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  Swift::String v15 = v31;
  uint64_t v14 = v32;
  uint64_t v16 = v33;
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v31, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v33);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v15, v16);
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v33 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v18 = v27;
  v27(v5, v11);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v19._object = (void *)0x80000001000C2120;
  v19._countAndFlagsBits = 0xD000000000000014;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v21 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v18(v5, v11);
  sub_100025A08(&qword_1000F7588);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1000BABF0;
  uint64_t v23 = v33;
  *(void *)(v22 + 32) = v34;
  *(void *)(v22 + 40) = v23;
  *(void *)(v22 + 48) = v21;
  uint64_t v24 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v24;
}

void sub_10008E6DC(id *a1)
{
  id v1 = *a1;

  AddShortcutToHomeScreenAction.shortcut.setter(v1);
}

uint64_t sub_10008E718(uint64_t a1)
{
  return sub_10008E760(a1, (uint64_t)&unk_1000BE558, (void (*)(void))sub_10002C798, (void (*)(uint64_t))sub_10005C0D4);
}

uint64_t sub_10008E760(uint64_t a1, uint64_t a2, void (*a3)(void), void (*a4)(uint64_t))
{
  uint64_t v6 = type metadata accessor for _AssistantIntent.Value();
  sub_100022284();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  a3();
  _AssistantIntent.IntentProjection.subscript.getter();
  uint64_t v12 = swift_release();
  a4(v12);
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v13 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
  sub_100025A08(&qword_1000F7450);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1000BAB00;
  *(void *)(v14 + 32) = v13;
  uint64_t v15 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_10008E8B0()
{
  return sub_100093D98();
}

uint64_t sub_10008E8DC(uint64_t a1)
{
  uint64_t v16 = a1;
  uint64_t v1 = sub_100025A08(&qword_1000F7560);
  __chkstk_darwin(v1);
  uint64_t v2 = sub_100025A08(&qword_1000F7568);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005C05C();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v19 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v3 + 8);
  v17(v5, v2);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v6._countAndFlagsBits = 0xD000000000000019;
  v6._object = (void *)0x80000001000C20E0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  swift_getKeyPath();
  sub_1000941D4(&qword_1000F7538, &qword_1000F7540, (void (*)(void))sub_100093FE8);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v8 = v17;
  v17(v5, v2);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 0xD00000000000001ALL;
  v9._object = (void *)0x80000001000C2100;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v11 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v8(v5, v2);
  sub_100025A08(&qword_1000F7570);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1000BABF0;
  uint64_t v13 = v18;
  *(void *)(v12 + 32) = v19;
  *(void *)(v12 + 40) = v13;
  *(void *)(v12 + 48) = v11;
  uint64_t v14 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_10008ECA0(uint64_t a1)
{
  return sub_10008F130(a1, (uint64_t)&unk_1000BE530, (void (*)(uint64_t))sub_10005C05C);
}

uint64_t sub_10008ECD4(uint64_t a1)
{
  uint64_t v16 = a1;
  uint64_t v1 = sub_100025A08(&qword_1000F7548);
  __chkstk_darwin(v1);
  uint64_t v2 = sub_100025A08(&qword_1000F7550);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005C178();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v19 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v3 + 8);
  v17(v5, v2);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v6._countAndFlagsBits = 0xD000000000000017;
  v6._object = (void *)0x80000001000C2080;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  swift_getKeyPath();
  sub_1000941D4(&qword_1000F7538, &qword_1000F7540, (void (*)(void))sub_100093FE8);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v8 = v17;
  v17(v5, v2);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 0xD000000000000018;
  v9._object = (void *)0x80000001000C20A0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v11 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v8(v5, v2);
  sub_100025A08(&qword_1000F7558);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1000BABF0;
  uint64_t v13 = v18;
  *(void *)(v12 + 32) = v19;
  *(void *)(v12 + 40) = v13;
  *(void *)(v12 + 48) = v11;
  uint64_t v14 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_10008F098(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v7 = *a2;
  swift_bridgeObjectRetain();

  return a5(v5, v6, v7);
}

uint64_t sub_10008F0FC(uint64_t a1)
{
  return sub_10008F130(a1, (uint64_t)&unk_1000BE508, (void (*)(uint64_t))sub_10005C178);
}

uint64_t sub_10008F130(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = type metadata accessor for _AssistantIntent.Value();
  sub_100022284();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  Swift::String v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1000941D4(&qword_1000F7538, &qword_1000F7540, (void (*)(void))sub_100093FE8);
  _AssistantIntent.IntentProjection.subscript.getter();
  uint64_t v10 = swift_release();
  a3(v10);
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v11 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
  sub_100025A08(&qword_1000F7450);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1000BAB00;
  *(void *)(v12 + 32) = v11;
  uint64_t v13 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_10008F2B0()
{
  return sub_100093D98();
}

uint64_t sub_10008F2E4()
{
  uint64_t v24 = sub_100025A08(&qword_1000F7520);
  uint64_t v26 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v1 = (char *)&v19 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100025A08(&qword_1000F7528);
  __chkstk_darwin(v2);
  sub_10005C210();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v3._countAndFlagsBits = 0x2065766F4DLL;
  v3._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  uint64_t v21 = sub_1000941D4(&qword_1000F7470, qword_1000F59D8, (void (*)(void))sub_10002C798);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v4._countAndFlagsBits = 544175136;
  v4._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v4);
  swift_getKeyPath();
  unint64_t v25 = sub_100094130();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v23 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v20 = *(void (**)(char *, uint64_t))(v26 + 8);
  v26 += 8;
  uint64_t v6 = v24;
  v20(v1, v24);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._countAndFlagsBits = 0x6F6D20732774654CLL;
  v7._object = (void *)0xEB00000000206576;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._countAndFlagsBits = 544175136;
  v8._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v22 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v10 = v20;
  v20(v1, v6);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0x20656C6946;
  v11._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0x207265646E7520;
  v12._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v14 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v10(v1, v24);
  sub_100025A08(&qword_1000F7530);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1000BABF0;
  uint64_t v16 = v22;
  *(void *)(v15 + 32) = v23;
  *(void *)(v15 + 40) = v16;
  *(void *)(v15 + 48) = v14;
  uint64_t v17 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_10008F830@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AddShortcutToHomeScreenAction.shortcut.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10008F860()
{
  swift_bridgeObjectRetain();

  return MoveShortcutToFolderAction.shortcuts.setter();
}

uint64_t sub_10008F8A0(void *a1)
{
  return MoveShortcutToFolderAction.folder.getter(*a1, a1[1]);
}

uint64_t sub_10008F8AC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NavigationDestinationEntity();
  __chkstk_darwin(v2 - 8);
  Swift::String v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004B0EC(a1, (uint64_t)v4);
  return MoveShortcutToFolderAction.folder.setter((uint64_t)v4);
}

uint64_t sub_10008F938()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1000941D4(&qword_1000F7470, qword_1000F59D8, (void (*)(void))sub_10002C798);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_10005C210();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  Swift::String v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_100094130();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_100025A08(&qword_1000F7450);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1000BABE0;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_10008FB58(uint64_t a1)
{
  uint64_t v30 = a1;
  uint64_t v1 = sub_100025A08(&qword_1000F7508);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v28 = v1;
  uint64_t v29 = v2;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100025A08(&qword_1000F7510);
  __chkstk_darwin(v5);
  sub_10005C2B0();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v6._countAndFlagsBits = 543450177;
  v6._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  swift_getKeyPath();
  unint64_t v23 = sub_10002C798();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v7._object = (void *)0x80000001000C1FA0;
  v7._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v8 = v28;
  uint64_t v9 = v29 + 8;
  uint64_t v24 = *(void (**)(char *, uint64_t))(v29 + 8);
  v24(v4, v28);
  uint64_t v29 = v9;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 0xD00000000000001ELL;
  v10._object = (void *)0x80000001000C1FC0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v26 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v12 = v24;
  v24(v4, v8);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._countAndFlagsBits = 0xD000000000000021;
  v13._object = (void *)0x80000001000C1FE0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v15 = v28;
  v12(v4, v28);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._countAndFlagsBits = 0xD000000000000022;
  v16._object = (void *)0x80000001000C2010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v12(v4, v15);
  sub_100025A08(&qword_1000F7518);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1000BABD0;
  uint64_t v20 = v26;
  *(void *)(v19 + 32) = v27;
  *(void *)(v19 + 40) = v20;
  *(void *)(v19 + 48) = v25;
  *(void *)(v19 + 56) = v18;
  uint64_t v21 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_10009004C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AddShortcutToHomeScreenAction.shortcut.getter();
  *a1 = result;
  return result;
}

void sub_100090080(id *a1)
{
  id v1 = *a1;

  AddShortcutToHomeScreenAction.shortcut.setter(v1);
}

uint64_t sub_1000900D0(uint64_t a1)
{
  return sub_10008E760(a1, (uint64_t)&unk_1000BE490, (void (*)(void))sub_10002C798, (void (*)(uint64_t))sub_10005C2B0);
}

uint64_t sub_100090118()
{
  uint64_t v24 = sub_100025A08(&qword_1000F74F0);
  uint64_t v26 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  id v1 = (char *)&v19 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100025A08(&qword_1000F74F8);
  __chkstk_darwin(v2);
  sub_10005C3A4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v3._countAndFlagsBits = 0x20656D616E6552;
  v3._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  unint64_t v21 = sub_10002C798();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v4._countAndFlagsBits = 544175136;
  v4._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v4);
  swift_getKeyPath();
  unint64_t v25 = sub_100093FE8();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v23 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v26 + 8);
  v26 += 8;
  uint64_t v6 = v24;
  v20(v1, v24);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._countAndFlagsBits = 0x20656D614ELL;
  v7._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._countAndFlagsBits = 32;
  v8._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v22 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v10 = v20;
  v20(v1, v6);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._object = (void *)0x80000001000C1F80;
  v11._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 544175136;
  v12._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v14 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v10(v1, v24);
  sub_100025A08(&qword_1000F7500);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1000BABF0;
  uint64_t v16 = v22;
  *(void *)(v15 + 32) = v23;
  *(void *)(v15 + 40) = v16;
  *(void *)(v15 + 48) = v14;
  uint64_t v17 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v17;
}

void sub_100090620(id *a1)
{
  id v1 = *a1;

  AddShortcutToHomeScreenAction.shortcut.setter(v1);
}

uint64_t sub_100090660@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AddShortcutToHomeScreenAction.title.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100090690()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_10002C798();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_10005C3A4();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  Swift::String v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_100093FE8();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_100025A08(&qword_1000F7450);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1000BABE0;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_100090878(uint64_t a1)
{
  uint64_t v21 = sub_100025A08(&qword_1000F74D8);
  uint64_t v23 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v3 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100025A08(&qword_1000F74E0);
  __chkstk_darwin(v4);
  sub_10005C3F8();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._object = (void *)0x80000001000C1F40;
  v5._countAndFlagsBits = 0xD000000000000014;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_10002C798();
  v19[1] = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v19[0] = *(void *)(v23 + 8);
  uint64_t v22 = v7;
  v23 += 8;
  uint64_t v8 = v21;
  ((void (*)(char *, uint64_t))v19[0])(v3, v21);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 0x20796669646F4DLL;
  v9._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 0x6E6F6369207327;
  v10._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v11 = (void (*)(char *, uint64_t))v19[0];
  ((void (*)(char *, uint64_t))v19[0])(v3, v8);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._countAndFlagsBits = 0xD000000000000015;
  v12._object = (void *)0x80000001000C1F60;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v14 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v11(v3, v8);
  sub_100025A08(&qword_1000F74E8);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1000BABF0;
  uint64_t v16 = v20;
  *(void *)(v15 + 32) = v22;
  *(void *)(v15 + 40) = v16;
  *(void *)(v15 + 48) = v14;
  uint64_t v17 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_100090C90(id *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  id v3 = *a1;

  return CreateShortcutiCloudLinkAction.shortcut.setter(v3, v2);
}

uint64_t sub_100090CCC(uint64_t a1)
{
  return sub_10008E760(a1, (uint64_t)&unk_1000BE418, (void (*)(void))sub_10002C798, (void (*)(uint64_t))sub_10005C3F8);
}

uint64_t sub_100090D14(uint64_t a1)
{
  uint64_t v2 = sub_100025A08(&qword_1000F74C0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v28 = v2;
  uint64_t v29 = v3;
  __chkstk_darwin(v2);
  Swift::String v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100025A08(&qword_1000F74C8);
  __chkstk_darwin(v6);
  sub_10005C490();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._object = (void *)0x80000001000C1F00;
  v7._countAndFlagsBits = 0xD000000000000011;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  unint64_t v26 = sub_10005DA34();
  v23[1] = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._countAndFlagsBits = 0x20726F6620;
  v8._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  sub_10002C798();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v10 = v28;
  uint64_t v24 = *(void (**)(char *, uint64_t))(v29 + 8);
  v29 += 8;
  v24(v5, v28);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0xD00000000000001DLL;
  v11._object = (void *)0x80000001000C1F20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0x20726F6620;
  v12._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 63;
  v13._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v14 = v24;
  v24(v5, v10);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v15._countAndFlagsBits = 0x2073692074616857;
  v15._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v16._countAndFlagsBits = 2126631;
  v16._object = (void *)0xE300000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 0x3F6F742074657320;
  v17._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v14(v5, v28);
  sub_100025A08(&qword_1000F74D0);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1000BABF0;
  uint64_t v20 = v25;
  *(void *)(v19 + 32) = v27;
  *(void *)(v19 + 40) = v20;
  *(void *)(v19 + 48) = v18;
  uint64_t v21 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_10009123C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = SetShortcutAttributesAction.operation.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10009126C()
{
  return GetShortcutAttributesAction.attribute.setter();
}

uint64_t sub_10009127C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = GetShortcutAttributesAction.shortcut.getter();
  *a1 = result;
  return result;
}

void sub_1000912AC(id *a1)
{
  id v1 = *a1;

  GetShortcutAttributesAction.shortcut.setter(v1);
}

uint64_t sub_1000912EC(uint64_t a1)
{
  return sub_10008E760(a1, (uint64_t)&unk_1000BE3C8, (void (*)(void))sub_10002C798, (void (*)(uint64_t))sub_10005C490);
}

uint64_t sub_100091334(uint64_t a1)
{
  uint64_t v2 = sub_100025A08(&qword_1000F74A8);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v37 = v2;
  uint64_t v38 = v3;
  __chkstk_darwin(v2);
  Swift::String v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100025A08(&qword_1000F74B0);
  __chkstk_darwin(v6);
  unint64_t v7 = sub_10005C580();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._object = (void *)0x80000001000C1EE0;
  v8._countAndFlagsBits = 0xD000000000000011;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  unint64_t v36 = sub_10005DA34();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0x20726F6620;
  v9._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  unint64_t v35 = sub_10002C798();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 544175136;
  v10._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  sub_10005C4E4();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v38 + 8);
  v38 += 8;
  v34(v5, v37);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._countAndFlagsBits = 544499027;
  v12._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 2126631;
  v13._object = (void *)0xE300000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  uint64_t v33 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0x676E697474657320;
  v14._object = (void *)0xEC000000206F7420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  unint64_t v29 = v7;
  uint64_t v31 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v16 = v37;
  Swift::String v17 = v34;
  v34(v5, v37);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v18._countAndFlagsBits = 0x20656C67676F54;
  v18._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v19._countAndFlagsBits = 2126631;
  v19._object = (void *)0xE300000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v20._countAndFlagsBits = 0x676E697474657320;
  v20._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v30 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v17(v5, v16);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v21._countAndFlagsBits = 0x20656C67676F54;
  v21._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v22._countAndFlagsBits = 0x20726F6620;
  v22._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v24 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v34(v5, v37);
  sub_100025A08(&qword_1000F74B8);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1000BABD0;
  uint64_t v26 = v31;
  *(void *)(v25 + 32) = v32;
  *(void *)(v25 + 40) = v26;
  *(void *)(v25 + 48) = v30;
  *(void *)(v25 + 56) = v24;
  uint64_t v27 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v27;
}

uint64_t sub_100091A50@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = SetShortcutAttributesAction.attribute.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100091A84()
{
  return SetShortcutAttributesAction.attribute.setter();
}

uint64_t sub_100091A98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SetShortcutAttributesAction.shortcut.getter();
  *a1 = result;
  return result;
}

void sub_100091ACC(id *a1)
{
  id v1 = *a1;

  SetShortcutAttributesAction.shortcut.setter(v1);
}

uint64_t sub_100091B20@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = SetShortcutAttributesAction.state.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100091B58()
{
  return SetShortcutAttributesAction.state.setter();
}

uint64_t sub_100091B6C(uint64_t a1)
{
  return sub_10008E760(a1, (uint64_t)&unk_1000BE350, (void (*)(void))sub_10002C798, (void (*)(uint64_t))sub_10005C580);
}

uint64_t sub_100091BB4(uint64_t a1)
{
  uint64_t v22 = sub_100025A08(&qword_1000F74A8);
  uint64_t v25 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v3 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100025A08(&qword_1000F74B0);
  __chkstk_darwin(v4);
  sub_10005C580();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0x20776F6853;
  v5._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_10002C798();
  v19[1] = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._object = (void *)0x80000001000C1EA0;
  Swift::String v23 = (void *)0x80000001000C1EA0;
  v6._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v20 = *(void (**)(char *, uint64_t))(v25 + 8);
  uint64_t v24 = v7;
  v25 += 8;
  uint64_t v8 = v22;
  v20(v3, v22);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 543450177;
  v9._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._object = (void *)0x80000001000C1EC0;
  v10._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v21 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v11 = v20;
  v20(v3, v8);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._countAndFlagsBits = 0x20656C62616E45;
  v12._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 0xD000000000000012;
  v13._object = v23;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v14 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v11(v3, v8);
  sub_100025A08(&qword_1000F74B8);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1000BABF0;
  uint64_t v16 = v21;
  *(void *)(v15 + 32) = v24;
  *(void *)(v15 + 40) = v16;
  *(void *)(v15 + 48) = v14;
  uint64_t v17 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_100091FD0(uint64_t a1)
{
  uint64_t v21 = sub_100025A08(&qword_1000F74A8);
  uint64_t v23 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v3 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100025A08(&qword_1000F74B0);
  __chkstk_darwin(v4);
  sub_10005C580();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0x20776F6853;
  v5._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_10002C798();
  v19[1] = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._object = (void *)0x80000001000C1E60;
  v6._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v19[0] = *(void *)(v23 + 8);
  uint64_t v22 = v7;
  v23 += 8;
  uint64_t v8 = v21;
  ((void (*)(char *, uint64_t))v19[0])(v3, v21);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 543450177;
  v9._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 0xD000000000000013;
  v10._object = (void *)0x80000001000C1E80;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v11 = (void (*)(char *, uint64_t))v19[0];
  ((void (*)(char *, uint64_t))v19[0])(v3, v8);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._countAndFlagsBits = 0x20656C62616E45;
  v12._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 0x72616873206E6920;
  v13._object = (void *)0xEB00000000676E69;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v14 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v11(v3, v8);
  sub_100025A08(&qword_1000F74B8);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1000BABF0;
  uint64_t v16 = v20;
  *(void *)(v15 + 32) = v22;
  *(void *)(v15 + 40) = v16;
  *(void *)(v15 + 48) = v14;
  uint64_t v17 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1000923FC()
{
  uint64_t v0 = sub_100025A08(&qword_1000F74A8);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v22 = v0;
  uint64_t v23 = v1;
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100025A08(&qword_1000F74B0);
  __chkstk_darwin(v4);
  sub_10005C580();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0x20776F6853;
  v5._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_10002C798();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0x6D20796D206E6920;
  v6._object = (void *)0xEF72616220756E65;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v21 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v7 = v22;
  Swift::String v19 = *(void (**)(char *, uint64_t))(v23 + 8);
  v23 += 8;
  v19(v3, v22);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._countAndFlagsBits = 543450177;
  v8._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0x4D20796D206F7420;
  v9._object = (void *)0xEE00726162206361;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v10 = v19;
  v19(v3, v7);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0x20656C62616E45;
  v11._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0x20656874206E6920;
  v12._object = (void *)0xEF72616220706F74;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v13 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v10(v3, v22);
  sub_100025A08(&qword_1000F74B8);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1000BABF0;
  uint64_t v15 = v20;
  *(void *)(v14 + 32) = v21;
  *(void *)(v14 + 40) = v15;
  *(void *)(v14 + 48) = v13;
  uint64_t v16 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_100092830()
{
  uint64_t v0 = sub_100025A08(&qword_1000F74A8);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v24 = v0;
  uint64_t v25 = v1;
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100025A08(&qword_1000F74B0);
  __chkstk_darwin(v4);
  sub_10005C580();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._object = (void *)0x80000001000C1E00;
  v5._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_10002C798();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0x6F6C206E65687720;
  v6._object = (void *)0xEC00000064656B63;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v23 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v7 = v24;
  Swift::String v8 = *(void (**)(char *, uint64_t))(v25 + 8);
  v25 += 8;
  uint64_t v21 = v8;
  v8(v3, v24);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 544109906;
  v9._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 0xD000000000000016;
  v10._object = (void *)0x80000001000C1E20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v22 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v11 = v7;
  Swift::String v12 = v21;
  v21(v3, v11);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._countAndFlagsBits = 0x20656C62616E45;
  v13._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0xD000000000000018;
  v14._object = (void *)0x80000001000C1E40;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v15 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v12(v3, v24);
  sub_100025A08(&qword_1000F74B8);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1000BABF0;
  uint64_t v17 = v22;
  *(void *)(v16 + 32) = v23;
  *(void *)(v16 + 40) = v17;
  *(void *)(v16 + 48) = v15;
  uint64_t v18 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_100092C60(uint64_t a1)
{
  uint64_t v23 = sub_100025A08(&qword_1000F7490);
  uint64_t v25 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100025A08(&qword_1000F7498);
  __chkstk_darwin(v4);
  sub_10005C5CC();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0xD00000000000001ALL;
  v5._object = (void *)0x80000001000C1DA0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_10002C798();
  v21[1] = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v21[0] = *(void *)(v25 + 8);
  uint64_t v24 = v7;
  v25 += 8;
  uint64_t v8 = v23;
  ((void (*)(char *, uint64_t))v21[0])(v3, v23);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._object = (void *)0x80000001000C1DC0;
  v9._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v22 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v11 = v8;
  uint64_t v12 = v8;
  Swift::String v13 = (void (*)(char *, uint64_t))v21[0];
  ((void (*)(char *, uint64_t))v21[0])(v3, v11);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 0xD000000000000019;
  v14._object = (void *)0x80000001000C1DE0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v16 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v13(v3, v12);
  sub_100025A08(&qword_1000F74A0);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1000BABF0;
  uint64_t v18 = v22;
  *(void *)(v17 + 32) = v24;
  *(void *)(v17 + 40) = v18;
  *(void *)(v17 + 48) = v16;
  uint64_t v19 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_100093080(uint64_t a1)
{
  return sub_10008E760(a1, (uint64_t)&unk_1000BE328, (void (*)(void))sub_10002C798, (void (*)(uint64_t))sub_10005C5CC);
}

uint64_t sub_1000930C8(uint64_t a1)
{
  uint64_t v28 = a1;
  uint64_t v1 = sub_100025A08(&qword_1000F7478);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v30 = v1;
  uint64_t v31 = v2;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100025A08(&qword_1000F7480);
  __chkstk_darwin(v9);
  sub_10005E250();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 0x206574656C6544;
  v10._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  uint64_t v27 = sub_1000941D4(&qword_1000F7470, qword_1000F59D8, (void (*)(void))sub_10002C798);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._countAndFlagsBits = 0x206D6F726620;
  v11._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v5);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v29 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v13 = v30;
  uint64_t v25 = *(void (**)(char *, uint64_t))(v31 + 8);
  v31 += 8;
  v25(v4, v30);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 0x2065766F6D6552;
  v14._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v26 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v16 = v25;
  v25(v4, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v17._countAndFlagsBits = 0x74206574656C6544;
  v17._object = (void *)0xEB00000000206568;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._countAndFlagsBits = 0x756374726F687320;
  v18._object = (void *)0xEA00000000007374;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v19 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v16(v4, v30);
  sub_100025A08(&qword_1000F7488);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1000BABF0;
  uint64_t v21 = v26;
  *(void *)(v20 + 32) = v29;
  *(void *)(v20 + 40) = v21;
  *(void *)(v20 + 48) = v19;
  uint64_t v22 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_1000935EC()
{
  swift_bridgeObjectRetain();

  return MoveShortcutToFolderAction.shortcuts.setter();
}

uint64_t sub_100093628()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1000941D4(&qword_1000F7470, qword_1000F59D8, (void (*)(void))sub_10002C798);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_10005E250();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_100025A08(&qword_1000F7450);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1000BAB00;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1000937C8()
{
  uint64_t v25 = sub_100025A08(&qword_1000F7458);
  uint64_t v27 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v1 = (char *)&v22 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100025A08(&qword_1000F7460);
  __chkstk_darwin(v6);
  sub_10005C67C();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._countAndFlagsBits = 0x20686372616553;
  v7._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v2);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v8._countAndFlagsBits = 0x736E6F6974636120;
  v8._object = (void *)0xED000020726F6620;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  unint64_t v22 = sub_100093FE8();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v10 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v27 + 8);
  uint64_t v26 = v10;
  v27 += 8;
  uint64_t v11 = v25;
  v23(v1, v25);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._object = (void *)0x80000001000C1D80;
  v12._countAndFlagsBits = 0xD000000000000016;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v24 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v14 = v23;
  v23(v1, v11);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v15._countAndFlagsBits = 0x20646E6946;
  v15._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v17 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v14(v1, v11);
  sub_100025A08(&qword_1000F7468);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1000BABF0;
  uint64_t v19 = v24;
  *(void *)(v18 + 32) = v26;
  *(void *)(v18 + 40) = v19;
  *(void *)(v18 + 48) = v17;
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_100093CB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SearchShortcutsAction.searchPhrase.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100093CE8(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  swift_bridgeObjectRetain();

  return a5(v5, v6, v7, v8);
}

uint64_t sub_100093D50(uint64_t a1)
{
  return sub_10008E760(a1, (uint64_t)&unk_1000BE2D8, (void (*)(void))sub_100093FE8, (void (*)(uint64_t))sub_10005C67C);
}

uint64_t sub_100093D98()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_100025A08(&qword_1000F7438);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1000BABE0;
  *(void *)(v2 + 32) = v0;
  *(void *)(v2 + 40) = v1;
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_100093E28()
{
  type metadata accessor for _AssistantIntent.NegativeAssistantIntentPhrases();
  sub_100022284();
  __chkstk_darwin(v0);
  sub_10001899C();
  sub_10005C1C4();
  _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)();
  uint64_t v1 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)();
  uint64_t v2 = sub_100025A84();
  v3(v2);
  sub_100025A08(&qword_1000F7430);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1000BAB00;
  *(void *)(v4 + 32) = v1;
  uint64_t v5 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_100093F1C()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_100025A08(&qword_1000F7438);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1000BAB00;
  *(void *)(v1 + 32) = v0;
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v2;
}

ValueMetadata *type metadata accessor for ShortcutsAssistantIntentsProvider()
{
  return &type metadata for ShortcutsAssistantIntentsProvider;
}

uint64_t sub_100093FBC(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100093CE8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))SearchShortcutsAction.searchPhrase.setter);
}

unint64_t sub_100093FE8()
{
  unint64_t result = qword_1000F7448;
  if (!qword_1000F7448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F7448);
  }
  return result;
}

uint64_t sub_100094034(uint64_t a1)
{
  sub_1000261E0(a1);
  uint64_t result = AddShortcutToHomeScreenAction.shortcut.getter();
  *uint64_t v1 = result;
  return result;
}

uint64_t sub_100094060(uint64_t a1)
{
  uint64_t v2 = sub_1000261E0(a1);
  uint64_t result = CreateShortcutiCloudLinkAction.shortcut.getter(v2);
  *uint64_t v1 = result;
  return result;
}

uint64_t sub_1000940B4(uint64_t a1)
{
  uint64_t v2 = sub_1000261E0(a1);
  uint64_t result = CreateShortcutiCloudLinkAction.shortcut.getter(v2);
  *uint64_t v1 = result;
  return result;
}

uint64_t sub_1000940EC(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100093CE8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))AddShortcutToHomeScreenAction.title.setter);
}

unint64_t sub_100094130()
{
  unint64_t result = qword_1000F56E0;
  if (!qword_1000F56E0)
  {
    type metadata accessor for NavigationDestinationEntity();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F56E0);
  }
  return result;
}

uint64_t sub_100094180(uint64_t a1)
{
  uint64_t v2 = sub_1000261E0(a1);
  uint64_t result = CreateWorkflowAction.name.getter(v2);
  *uint64_t v1 = result;
  v1[1] = v4;
  return result;
}

uint64_t sub_1000941A8(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_10008F098(a1, a2, a3, a4, CreateWorkflowAction.name.setter);
}

uint64_t sub_1000941D4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001E8D0(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100094240(uint64_t a1)
{
  uint64_t v2 = sub_1000261E0(a1);
  uint64_t result = CreateWorkflowAction.name.getter(v2);
  *uint64_t v1 = result;
  v1[1] = v4;
  return result;
}

uint64_t sub_100094268(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_10008F098(a1, a2, a3, a4, CreateWorkflowAction.name.setter);
}

uint64_t sub_100094294(uint64_t a1)
{
  sub_1000261E0(a1);
  uint64_t result = AddShortcutToHomeScreenAction.shortcut.getter();
  *uint64_t v1 = result;
  return result;
}

uint64_t sub_1000942C0()
{
  return OpenNavigationDestinationAction.target.getter();
}

void *sub_1000942CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100021E68();
  uint64_t v5 = (void *)sub_1000AA7C8(a3);
  swift_release();
  if (!v5) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v6 = *(void **)(v3 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_database);
  id v26 = 0;
  id v7 = [v6 recordWithDescriptor:v5 error:&v26];
  id v8 = v26;
  if (!v7)
  {
    id v24 = v26;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    return _swiftEmptyArrayStorage;
  }
  Swift::String v9 = v7;
  self;
  uint64_t v10 = (void *)swift_dynamicCastObjCClass();
  id v11 = v8;
  if (!v10)
  {

    return _swiftEmptyArrayStorage;
  }
  id v12 = [v10 fileRepresentation];
  id v13 = [objc_allocWithZone((Class)NSItemProvider) init];
  id v14 = [v5 name];
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

  sub_100096830(v15, v17, v13);
  [v13 registerObject:v12 visibility:3];
  [v13 registerObject:v5 visibility:3];
  uint64_t v18 = self;
  id v19 = [v18 existingSceneSessionForEditingWorkflowReference:v5];

  if (!v19)
  {
    id v20 = [v18 userActivityForEditingWorkflow:v5];
    [v13 registerObject:v20 visibility:0];
  }
  id v21 = [objc_allocWithZone((Class)UIDragItem) initWithItemProvider:v13];
  [v21 setLocalObject:v5];
  sub_100025A08(&qword_1000F5200);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1000BAC10;
  *(void *)(v22 + 32) = v21;
  id v26 = (id)v22;
  specialized Array._endMutation()();
  id v23 = v26;

  return v23;
}

void *sub_1000946E4(uint64_t a1, id a2)
{
  id v2 = [a2 items];
  sub_100029C7C(0, &qword_1000F7698);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62) {
    goto LABEL_19;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (v3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(v3 + 8 * v5);
      id v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      if ([v6 localObject])
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v17, 0, sizeof(v17));
      }
      sub_10009677C((uint64_t)v17, (uint64_t)v18, &qword_1000F7670);
      if (!v19)
      {
        sub_1000967DC((uint64_t)v18, &qword_1000F7670);
LABEL_16:
        swift_bridgeObjectRelease_n();

        return _swiftEmptyArrayStorage;
      }
      sub_100029C7C(0, (unint64_t *)&unk_1000F70A0);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_16;
      }

      ++v5;
      if (v8 == v4) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
LABEL_14:
  swift_bridgeObjectRelease_n();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v10 = [v14 collectionView:a1 itemsForBeginningDragSession:a2 atIndexPath:isa];

  uint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  return (void *)v11;
}

id sub_100094AA0()
{
  return sub_100094AA8();
}

id sub_100094AA8()
{
  id v0 = sub_10009C924();
  if (!v0) {
    return 0;
  }
  id v2 = v0;
  unint64_t v3 = v1;
  id v4 = [objc_allocWithZone((Class)UIDragPreviewParameters) init];
  [v4 setVisiblePath:v2];

  return v4;
}

id sub_100094B4C(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v8 = type metadata accessor for IndexPath();
  sub_100022284();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_10001888C();
  uint64_t v14 = v13 - v12;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v15 = a3;
  id v16 = a1;
  uint64_t v17 = (void *)a5();

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v14, v8);

  return v17;
}

id sub_100094C3C(uint64_t a1, void *a2)
{
  sub_100025A08(&qword_1000F52E0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1000BAB00;
  *(void *)(v3 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v3 + 40) = v4;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v6 = [a2 hasItemsConformingToTypeIdentifiers:isa];

  return v6;
}

id sub_100094D40(void *a1, void *a2, uint64_t a3)
{
  uint64_t v95 = a3;
  id v96 = a1;
  type metadata accessor for LibrarySectionOptions();
  sub_100022284();
  uint64_t v90 = v6;
  uint64_t v91 = v5;
  __chkstk_darwin(v5);
  sub_1000167F4();
  uint64_t v85 = v7;
  uint64_t v8 = sub_100025A08(&qword_1000F4B00);
  uint64_t v9 = sub_1000165CC(v8);
  __chkstk_darwin(v9);
  sub_1000167F4();
  uint64_t v92 = v10;
  uint64_t v88 = type metadata accessor for LibrarySectionOptions.SectionType();
  sub_100022284();
  uint64_t v86 = v11;
  __chkstk_darwin(v12);
  sub_1000167F4();
  uint64_t v87 = v13;
  uint64_t v14 = sub_100025A08(&qword_1000F7690);
  uint64_t v15 = sub_1000165CC(v14);
  __chkstk_darwin(v15);
  sub_10001888C();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = type metadata accessor for ShortcutsLibraryItem.ItemType();
  sub_100022284();
  uint64_t v89 = v20;
  __chkstk_darwin(v21);
  sub_10001888C();
  id v24 = (id *)(v23 - v22);
  uint64_t v25 = type metadata accessor for IndexPath();
  sub_100022284();
  uint64_t v97 = v26;
  __chkstk_darwin(v27);
  sub_1000206CC();
  uint64_t v93 = v28;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v83 - v30;
  uint64_t v32 = sub_100025A08(&qword_1000F5120);
  uint64_t v33 = sub_1000165CC(v32);
  uint64_t v34 = __chkstk_darwin(v33);
  unint64_t v36 = (char *)&v83 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v34);
  uint64_t v39 = (char *)&v83 - v38;
  uint64_t v40 = __chkstk_darwin(v37);
  uint64_t v42 = (char *)&v83 - v41;
  __chkstk_darwin(v40);
  uint64_t v98 = (uint64_t)&v83 - v43;
  uint64_t v94 = v3;
  if ((sub_1000073D0() & 1) == 0)
  {
    id v46 = [a2 localDragSession];
    swift_unknownObjectRelease();
    if (!v46)
    {
      id v44 = objc_allocWithZone((Class)UICollectionViewDropProposal);
      uint64_t v45 = 2;
      goto LABEL_9;
    }
    sub_100021594(v98, 1, 1, v25);
    id v47 = [a2 items];
    sub_100029C7C(0, &qword_1000F7698);
    unint64_t v48 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v48 >> 62)
    {
      sub_100022528();
      uint64_t v49 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v49 = *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v49 > 1)
    {
      uint64_t v50 = 0;
      uint64_t v51 = v97;
      uint64_t v52 = v98;
      goto LABEL_28;
    }
    sub_1000642C8(v95, (uint64_t)v42);
    sub_10001B470((uint64_t)v42, 1, v25);
    if (v56)
    {
      sub_1000967DC((uint64_t)v42, &qword_1000F5120);
      uint64_t v51 = v97;
    }
    else
    {
      uint64_t v51 = v97 + 32;
      uint64_t v84 = *(void (**)(uint64_t, char *, uint64_t))(v97 + 32);
      sub_100020698();
      v54();
      sub_100021E68();
      sub_100022110();
      swift_release();
      uint64_t v55 = type metadata accessor for ShortcutsLibraryItem();
      sub_10001B470(v18, 1, v55);
      if (v56)
      {
        sub_1000967DC(v18, &qword_1000F7690);
        uint64_t v57 = sub_100022F84();
        v58(v57);
      }
      else
      {
        ShortcutsLibraryItem.itemType.getter();
        sub_100012D7C();
        sub_100016618();
        v59();
        uint64_t v60 = v89;
        int v61 = (*(uint64_t (**)(id *, uint64_t))(v89 + 88))(v24, v19);
        if (v61 == enum case for ShortcutsLibraryItem.ItemType.emptyState(_:))
        {
          uint64_t v52 = v98;
          sub_1000967DC(v98, &qword_1000F5120);
          (*(void (**)(id *, uint64_t))(v60 + 96))(v24, v19);

          sub_100025A08((uint64_t *)&unk_1000F76A0);
          sub_100016618();
          v62();
          v84(v52, v31, v25);
          sub_100021594(v52, 0, 1, v25);
          uint64_t v50 = 2;
          uint64_t v51 = v97;
          goto LABEL_28;
        }
        uint64_t v63 = sub_100022F84();
        v64(v63);
        (*(void (**)(id *, uint64_t))(v60 + 8))(v24, v19);
      }
    }
    sub_1000642C8(v95, (uint64_t)v39);
    sub_10001B470((uint64_t)v39, 1, v25);
    if (v56)
    {
      sub_1000967DC((uint64_t)v39, &qword_1000F5120);
    }
    else
    {
      uint64_t v65 = v93;
      sub_100020698();
      v66();
      sub_100021E68();
      IndexPath.section.getter();
      uint64_t v67 = v92;
      sub_100025884();
      swift_release();
      uint64_t v68 = type metadata accessor for ShortcutsLibrarySection();
      sub_10001B470(v67, 1, v68);
      if (!v69)
      {
        ShortcutsLibrarySection.options.getter();
        sub_100012D7C();
        sub_100016618();
        v74();
        uint64_t v75 = v87;
        LibrarySectionOptions.sectionType.getter();
        sub_100016618();
        v76();
        uint64_t v77 = v86;
        uint64_t v78 = v88;
        int v79 = (*(uint64_t (**)(uint64_t, uint64_t))(v86 + 88))(v75, v88);
        uint64_t v52 = v98;
        if (v79 == enum case for LibrarySectionOptions.SectionType.appShortcuts(_:))
        {
          (*(void (**)(uint64_t, uint64_t))(v77 + 96))(v75, v78);
          type metadata accessor for AutoShortcutApp();
          sub_100012D7C();
          sub_100016618();
          v80();
          id v73 = [objc_allocWithZone((Class)UICollectionViewDropProposal) initWithDropOperation:1 intent:1];
          (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v65, v25);
LABEL_32:
          sub_1000967DC(v52, &qword_1000F5120);
          return v73;
        }
        uint64_t v81 = sub_100025EFC();
        v82(v81);
        (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v75, v78);
        uint64_t v50 = 1;
LABEL_28:
        sub_1000642C8(v52, (uint64_t)v36);
        sub_10001B470((uint64_t)v36, 1, v25);
        if (v56)
        {
          v72.super.Class isa = 0;
        }
        else
        {
          v72.super.Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
          (*(void (**)(char *, uint64_t))(v51 + 8))(v36, v25);
        }
        [v96 selectItemAtIndexPath:v72.super.isa animated:0 scrollPosition:0];

        id v73 = [objc_allocWithZone((Class)UICollectionViewDropProposal) initWithDropOperation:3 intent:v50];
        goto LABEL_32;
      }
      sub_1000967DC(v67, &qword_1000F4B00);
      uint64_t v70 = sub_100025EFC();
      v71(v70);
    }
    uint64_t v50 = 1;
    uint64_t v52 = v98;
    goto LABEL_28;
  }
  id v44 = objc_allocWithZone((Class)UICollectionViewDropProposal);
  uint64_t v45 = 0;
LABEL_9:

  return [v44 initWithDropOperation:v45 intent:1];
}

void sub_1000956D4(uint64_t a1, void *a2)
{
  uint64_t v109 = type metadata accessor for LibrarySectionOptions.SectionType();
  sub_100022284();
  uint64_t v115 = v8;
  __chkstk_darwin(v9);
  sub_1000206CC();
  sub_1000261EC();
  __chkstk_darwin(v10);
  uint64_t v114 = (char *)v108 - v11;
  uint64_t v12 = sub_100025A08(&qword_1000F4B00);
  uint64_t v13 = sub_1000165CC(v12);
  __chkstk_darwin(v13);
  sub_1000167F4();
  uint64_t v113 = v14;
  uint64_t v112 = type metadata accessor for LibrarySectionOptions();
  sub_100022284();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  sub_1000206CC();
  sub_1000261EC();
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)v108 - v19;
  uint64_t v21 = type metadata accessor for IndexPath();
  sub_100022284();
  uint64_t v117 = v22;
  __chkstk_darwin(v23);
  sub_1000206CC();
  sub_1000261EC();
  uint64_t v25 = __chkstk_darwin(v24);
  __chkstk_darwin(v25);
  uint64_t v126 = (char *)v108 - v26;
  uint64_t v27 = sub_100025A08(&qword_1000F5120);
  uint64_t v28 = sub_1000165CC(v27);
  __chkstk_darwin(v28);
  sub_1000206CC();
  sub_1000261EC();
  __chkstk_darwin(v29);
  sub_1000261EC();
  uint64_t v31 = __chkstk_darwin(v30);
  uint64_t v33 = (char *)v108 - v32;
  uint64_t v34 = __chkstk_darwin(v31);
  unint64_t v36 = (char *)v108 - v35;
  __chkstk_darwin(v34);
  uint64_t v38 = (char *)v108 - v37;
  id v122 = a2;
  id v39 = [a2 destinationIndexPath];
  uint64_t v111 = v16;
  int v110 = v20;
  if (v39)
  {
    uint64_t v40 = v39;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v41 = 0;
  }
  else
  {
    uint64_t v41 = 1;
  }
  sub_100021594((uint64_t)v36, v41, 1, v21);
  sub_10009677C((uint64_t)v36, (uint64_t)v38, &qword_1000F5120);
  uint64_t v118 = v38;
  sub_1000642C8((uint64_t)v38, (uint64_t)v33);
  uint64_t v127 = v21;
  int v42 = sub_1000225EC((uint64_t)v33, 1, v21);
  sub_1000967DC((uint64_t)v33, &qword_1000F5120);
  if (v42 == 1)
  {
    objc_msgSend(objc_msgSend(v122, "session"), "locationInView:", a1);
    CGFloat v121 = v43;
    CGFloat v120 = v44;
    swift_unknownObjectRelease();
    unint64_t v45 = (unint64_t)[(id)a1 numberOfSections];
    if ((v45 & 0x8000000000000000) != 0) {
      goto LABEL_79;
    }
    unint64_t v46 = v45;
    if (v45)
    {
      uint64_t v47 = 0;
      unint64_t v48 = (void (**)(void))(v117 + 8);
      unint64_t v119 = UICollectionElementKindSectionHeader;
      uint64_t v49 = &selRef_request;
      while (1)
      {
        if (v46 == v47)
        {
          __break(1u);
LABEL_77:
          __break(1u);
          goto LABEL_78;
        }
        uint64_t v21 = (uint64_t)[(id)a1 numberOfItemsInSection:v47];
        sub_10001C114();
        uint64_t v50 = v49;
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        uint64_t v52 = *v48;
        sub_1000249B8();
        v52();
        id v53 = [(id)a1 layoutAttributesForItemAtIndexPath:isa];

        uint64_t v49 = v50;
        if (v53)
        {
          [v53 v50[172]];
          sub_100025B00();
          if (__OFSUB__(v21, 1)) {
            goto LABEL_77;
          }
          IndexPath.init(item:section:)();
          Class v54 = IndexPath._bridgeToObjectiveC()().super.isa;
          sub_1000249B8();
          v52();
          id v55 = [(id)a1 layoutAttributesForItemAtIndexPath:v54];

          uint64_t v49 = v50;
          if (v55)
          {
            [v55 v50[172]];
            uint64_t v125 = v56;
            CGFloat v58 = v57;
            id v124 = v59;
            CGFloat v123 = v60;

            int v61 = v119;
            sub_10001C114();
            uint64_t v21 = (uint64_t)IndexPath._bridgeToObjectiveC()().super.isa;
            sub_1000249B8();
            v52();
            id v62 = [(id)a1 layoutAttributesForSupplementaryElementOfKind:v61 atIndexPath:v21];

            if (v62)
            {
              [v62 v50[172]];
              sub_100025B00();
            }
            uint64_t v49 = v50;
            v133.origin.x = v2;
            v133.origin.y = v3;
            v133.size.width = v4;
            v133.size.height = v5;
            CGFloat MinX = CGRectGetMinX(v133);
            double v64 = sub_100027BCC();
            [(id)a1 v50[172]];
            CGFloat Width = CGRectGetWidth(v134);
            *(void *)&v135.origin.x = v125;
            v135.origin.y = v58;
            *(void *)&v135.size.width = v124;
            v135.size.height = v123;
            double MaxY = CGRectGetMaxY(v135);
            v136.size.height = MaxY - sub_100027BCC() + 12.0;
            v136.origin.x = MinX;
            v136.origin.y = v64;
            v136.size.width = Width;
            v132.x = v121;
            v132.y = v120;
            if (CGRectContainsPoint(v136, v132)) {
              break;
            }
          }
        }
        if (v46 == ++v47) {
          goto LABEL_18;
        }
      }
      [(id)a1 numberOfItemsInSection:v47];
      uint64_t v67 = v108[1];
      IndexPath.init(item:section:)();
      uint64_t v68 = (uint64_t)v118;
      sub_1000967DC((uint64_t)v118, &qword_1000F5120);
      sub_100021594(v67, 0, 1, v127);
      sub_10009677C(v67, v68, &qword_1000F5120);
    }
  }
LABEL_18:
  uint64_t v69 = (uint64_t)v118;
  uint64_t v70 = v116;
  sub_1000642C8((uint64_t)v118, v116);
  sub_10001B470(v70, 1, v127);
  if (v71)
  {
    sub_1000967DC(v69, &qword_1000F5120);
    uint64_t v72 = v70;
    goto LABEL_75;
  }
  sub_100020698();
  v73();
  id v74 = [v122 items];
  uint64_t v125 = sub_100025A08((uint64_t *)&unk_1000F7680);
  a1 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if ((unint64_t)a1 >> 62) {
    goto LABEL_80;
  }
  uint64_t v75 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v76 = (id *)_swiftEmptyArrayStorage;
    if (v75)
    {
      v129[0] = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      if (v75 < 0)
      {
        __break(1u);
        goto LABEL_83;
      }
      uint64_t v77 = 0;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v78 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v78 = *(void **)(a1 + 8 * v77 + 32);
          swift_unknownObjectRetain();
        }
        ++v77;
        id v79 = [v78 dragItem];
        swift_unknownObjectRelease();
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        uint64_t v21 = *(void *)(v129[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      while (v75 != v77);
      unint64_t v80 = v129[0];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v80 = (unint64_t)_swiftEmptyArrayStorage;
    }
    unint64_t v131 = (unint64_t)_swiftEmptyArrayStorage;
    if (v80 >> 62)
    {
      sub_100022528();
      a1 = _CocoaArrayWrapper.endIndex.getter();
    }
    else
    {
      a1 = *(void *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    sub_100025BA0();
    if (a1) {
      break;
    }
    swift_bridgeObjectRelease();
LABEL_55:
    swift_bridgeObjectRelease();
    sub_100021E68();
    IndexPath.section.getter();
    uint64_t v84 = v113;
    sub_100025884();
    swift_release();
    uint64_t v85 = type metadata accessor for ShortcutsLibrarySection();
    sub_10001B470(v84, 1, v85);
    if (v71)
    {
      sub_1000967DC(v84, &qword_1000F4B00);
      swift_bridgeObjectRelease();
      goto LABEL_74;
    }
    ShortcutsLibrarySection.options.getter();
    sub_100012D7C();
    sub_100016618();
    v86();
    uint64_t v87 = v111;
    uint64_t v88 = v110;
    uint64_t v89 = v112;
    sub_100020698();
    v90();
    LibrarySectionOptions.sectionType.getter();
    uint64_t v91 = v109;
    int v92 = (*(uint64_t (**)(id *, uint64_t))(v21 + 88))(v76, v109);
    if (v92 != enum case for LibrarySectionOptions.SectionType.shortcuts(_:))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v87 + 8))(v88, v89);
      sub_10001FB54();
      sub_100016618();
      v97();
      sub_1000967DC((uint64_t)v118, &qword_1000F5120);
      (*(void (**)(id *, uint64_t))(v21 + 8))(v76, v91);
      return;
    }
    (*(void (**)(id *, uint64_t))(v21 + 96))(v76, v91);

    uint64_t v93 = v91;
    uint64_t v94 = (void *)LibrarySectionOptions.collection.getter();
    a1 = IndexPath.item.getter();
    uint64_t v95 = v108[2];
    LibrarySectionOptions.sectionType.getter();
    uint64_t v96 = LibrarySectionOptions.SectionType.count.getter();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v95, v93);
    if (__OFSUB__(v96, 1)) {
      goto LABEL_84;
    }
    if (v96 - 1 >= a1) {
      IndexPath.item.getter();
    }
    else {
      NSNotFound.getter();
    }
    sub_100021E68();
    LibraryDataSource.shortcutMoveService.getter();
    swift_release();
    LOBYTE(v129[0]) = 1;
    dispatch thunk of ShortcutMoveService.move(_:to:of:source:)();
    swift_release();
    swift_bridgeObjectRelease();
    sub_100021E68();
    sub_1000238D0();
    swift_release();
    id v98 = [v122 items];
    a1 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v124 = v94;
    if ((unint64_t)a1 >> 62) {
      goto LABEL_85;
    }
    uint64_t v99 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v99) {
      goto LABEL_73;
    }
LABEL_66:
    if (v99 < 1)
    {
      __break(1u);
      return;
    }
    uint64_t v21 = 0;
    uint64_t v100 = (void (**)(char *, uint64_t))(v117 + 8);
    uint64_t v101 = v126;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v102 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v102 = *(void **)(a1 + 8 * v21 + 32);
        swift_unknownObjectRetain();
      }
      id v103 = [v102 dragItem];
      if (__OFADD__(IndexPath.item.getter(), v21)) {
        break;
      }
      ++v21;
      IndexPath.section.getter();
      IndexPath.init(item:section:)();
      Class v104 = IndexPath._bridgeToObjectiveC()().super.isa;
      (*v100)(v101, v127);
      id v105 = [v122 dropItem:v103 toItemAtIndexPath:v104];
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();

      if (v99 == v21) {
        goto LABEL_73;
      }
    }
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    swift_bridgeObjectRetain();
    uint64_t v75 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (a1 >= 1)
  {
    uint64_t v81 = 0;
    uint64_t v76 = (id *)&qword_1000F7670;
    uint64_t v21 = (uint64_t)&type metadata for Any + 8;
    while (1)
    {
      if ((v80 & 0xC000000000000001) != 0) {
        id v82 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v82 = *(id *)(v80 + 8 * v81 + 32);
      }
      uint64_t v83 = v82;
      if ([v82 localObject])
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v128, 0, sizeof(v128));
      }
      sub_10009677C((uint64_t)v128, (uint64_t)v129, &qword_1000F7670);
      if (v129[3])
      {
        sub_100029C7C(0, (unint64_t *)&unk_1000F70A0);
        if (swift_dynamicCast()) {
          goto LABEL_48;
        }
      }
      else
      {
        sub_1000967DC((uint64_t)v129, &qword_1000F7670);
      }
      uint64_t v130 = 0;
LABEL_48:

      if (v130)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v131 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v131 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      if (a1 == ++v81)
      {
        swift_bridgeObjectRelease();
        sub_100025BA0();
        goto LABEL_55;
      }
    }
  }
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  swift_bridgeObjectRetain();
  uint64_t v99 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v99) {
    goto LABEL_66;
  }
LABEL_73:
  swift_bridgeObjectRelease();

  sub_100016618();
  v106();
  sub_10001FB54();
LABEL_74:
  sub_100016618();
  v107();
  uint64_t v72 = (uint64_t)v118;
LABEL_75:
  sub_1000967DC(v72, &qword_1000F5120);
}

void sub_100096620(int a1, id a2)
{
  if ([a2 localContext])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v3, 0, sizeof(v3));
  }
  sub_10009677C((uint64_t)v3, (uint64_t)v4, &qword_1000F7670);
  if (v5)
  {
    sub_100029C7C(0, &qword_1000F4AE0);
    if (swift_dynamicCast())
    {
      [v2 _setDropTarget:0];
    }
  }
  else
  {
    sub_1000967DC((uint64_t)v4, &qword_1000F7670);
  }
}

uint64_t sub_10009677C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100025A08(a3);
  sub_100012D7C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1000967DC(uint64_t a1, uint64_t *a2)
{
  sub_100025A08(a2);
  sub_100012D7C();
  sub_100016618();
  v3();
  return a1;
}

void sub_100096830(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 setSuggestedName:v4];
}

void *sub_100096898(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v5 = *(void *)(type metadata accessor for LibraryEditingOption() - 8);
    uint64_t v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    sub_100029C7C(0, &qword_1000F5ED8);
    sub_100029C7C(0, &qword_1000F5230);
    uint64_t v7 = *(void *)(v5 + 72);
    do
    {
      LibraryEditingOption.title.getter();
      LibraryEditingOption.symbolName.getter();
      sub_10009E774();
      sub_10009C800();
      sub_10009C38C();
      UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v6 += v7;
      --v3;
    }
    while (v3);
  }
  else
  {
  }
  return _swiftEmptyArrayStorage;
}

id sub_100096A70()
{
  return *(id *)(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_database);
}

BOOL sub_100096A80()
{
  type metadata accessor for IndexPath();
  sub_1000100DC((unint64_t *)&unk_1000F7828, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  return v2 == v1;
}

uint64_t sub_100096B1C(uint64_t a1, uint64_t a2)
{
  sub_100022328();
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for LibraryViewController.TableHostingController();
  [super setContentScrollView:a1 forEdge:a2];
  sub_100022328();
  return PassthroughSubject.send(_:)();
}

void sub_100096BC8(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v8 = a3;
  id v7 = a1;
  sub_100096B1C((uint64_t)a3, a4);
}

void sub_100096C38()
{
  id v1 = objc_allocWithZone(v0);
  sub_100096C6C();
}

void sub_100096C6C()
{
  sub_1000074D4();
  sub_100022328();
  sub_100025A64();
  __chkstk_darwin(v1);
  uint64_t v3 = *(void *)(v2 + 16);
  sub_100025A08((uint64_t *)&unk_1000F7808);
  sub_100018828();
  NSString v4 = v0;
  *(void *)&v0[v3] = PassthroughSubject.init()();

  sub_1000205E8();
  v5();
  UIHostingController.init(rootView:)();
  sub_100018D08();
  v6();
  sub_10002A68C();
}

void sub_100096D7C()
{
  id v1 = objc_allocWithZone(v0);
  sub_100021F6C();
  sub_100096DBC();
}

void sub_100096DBC()
{
  sub_10002066C();
  uint64_t v2 = v1;
  sub_100022328();
  uint64_t v4 = *(void *)(v3 + qword_1000FF160);
  sub_100025A64();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  uint64_t v9 = *(void *)(v8 + 16);
  sub_100025A08((uint64_t *)&unk_1000F7808);
  sub_100018828();
  uint64_t v10 = v0;
  *(void *)&v0[v9] = PassthroughSubject.init()();

  sub_1000205E8();
  v11();
  uint64_t v12 = (void *)UIHostingController.init(coder:rootView:)();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  id v14 = v12;
  v13(v2, v4);
  if (v12) {

  }
  sub_10001885C();
}

id sub_100096EE8(void *a1)
{
  sub_100022328();
  uint64_t v4 = *(void *)(qword_1000FF160 + v3 + 16);
  sub_100025A08((uint64_t *)&unk_1000F7808);
  sub_100018828();
  uint64_t v5 = v1;
  *(void *)&v1[v4] = PassthroughSubject.init()();

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for LibraryViewController.TableHostingController();
  id v6 = [super initWithCoder:a1];

  return v6;
}

id sub_100096FB4(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_100096EE8(a3);
}

uint64_t sub_100096FDC()
{
  return swift_release();
}

id sub_100097010()
{
  sub_100022328();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LibraryViewController.TableHostingController();
  return [super dealloc];
}

uint64_t sub_10009706C()
{
  return swift_release();
}

uint64_t sub_1000970B8()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_1000970EC()
{
  sub_100021F8C();
  type metadata accessor for LibraryConfiguration();
  sub_10001C094();
  uint64_t v0 = sub_10001019C();
  return v1(v0);
}

uint64_t sub_100097154(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v2 = type metadata accessor for LibraryConfiguration();
  sub_100021E0C();
  uint64_t v4 = v3;
  uint64_t v5 = sub_100021F6C();
  v6(v5);
  swift_endAccess();
  sub_10001EEA8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

void sub_1000972A4(uint64_t a1)
{
}

void sub_1000972B0(uint64_t *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v6 = (void *)Strong;
    sub_100021E68();
    type metadata accessor for LibraryDataSource();
    uint64_t v7 = (void (*)(void))method lookup function for LibraryDataSource();
    v7();
    swift_release();
    uint64_t v8 = LibraryLayoutMode.rawValue.getter();
    uint64_t v10 = v9;
    if (v8 == LibraryLayoutMode.rawValue.getter() && v10 == v11)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0) {
        goto LABEL_10;
      }
    }
    id v14 = [a3 contentScrollViewForEdge:v4];
    [v6 setContentScrollView:v14 forEdge:v4];

    id v6 = v14;
LABEL_10:
  }
}

uint64_t sub_100097400()
{
  uint64_t v1 = sub_100025A08((uint64_t *)&unk_1000F70F0);
  uint64_t v2 = sub_1000165CC(v1);
  __chkstk_darwin(v2);
  sub_100021FC4();
  if (swift_unknownObjectWeakLoadStrong())
  {
    swift_getObjectType();
    dispatch thunk of LibraryDelegate.runningWorkflow.getter();
    swift_unknownObjectRelease();
    uint64_t v3 = type metadata accessor for RunningWorkflow();
    if (sub_1000225EC(v0, 1, v3) != 1)
    {
      unsigned int v4 = 0;
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v5 = type metadata accessor for RunningWorkflow();
    sub_10009DEB8(v5);
  }
  unsigned int v4 = 1;
LABEL_6:
  sub_100025E44(v0, (uint64_t *)&unk_1000F70F0);
  sub_100021E68();
  sub_1000AAE78();
  uint64_t v7 = v6;
  swift_release();
  if (v7 > 0) {
    return v4;
  }
  else {
    return 0;
  }
}

void sub_100097500(void (*a1)(uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v3 = (void *)Strong;
  id v4 = [*(id *)(Strong + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_database) sortedVisibleFolders];
  id v5 = [v4 descriptors];

  sub_100029C7C(0, &qword_1000F51A0);
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v6 >> 62)
  {
    id v21 = v3;
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v8 = v3;
    if (v7)
    {
LABEL_4:
      specialized ContiguousArray.reserveCapacity(_:)();
      if (v7 < 0)
      {
        __break(1u);
        return;
      }
      uint64_t v9 = v3;
      unint64_t v30 = v6 & 0xC000000000000001;
      sub_100029C7C(0, &qword_1000F5ED8);
      uint64_t v10 = 0;
      unint64_t v11 = v6;
      do
      {
        if (v30) {
          id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v12 = *(id *)(v6 + 8 * v10 + 32);
        }
        char v13 = v12;
        uint64_t v14 = sub_10009DAA8(v12, (SEL *)&selRef_systemIconName);
        if (v15)
        {
          uint64_t v16 = v14;
          uint64_t v17 = v15;
          sub_100029C7C(0, &qword_1000F5230);
          sub_10001B4C0(v16, v17);
        }
        ++v10;
        id v18 = [v13 name:preferredElementSize v26._rawValue v27 v28 v29];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v19 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v20 = swift_allocObject();
        *(void *)(v20 + 16) = v19;
        *(void *)(v20 + 24) = v13;
        UIMenuElementSize preferredElementSize = UIMenuElementSizeSmall;
        v26._rawValue = 0;
        uint64_t v28 = sub_10009DD98;
        uint64_t v29 = v20;
        uint64_t v27 = 0;
        UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        unint64_t v6 = v11;
      }
      while (v7 != v10);
      uint64_t v3 = v9;

      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
  }

  swift_bridgeObjectRelease();
LABEL_15:
  sub_100025A08(&qword_1000F5200);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1000BAC10;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    sub_100029C7C(0, &qword_1000F5EA0);
    swift_bridgeObjectRetain();
    uint64_t v23 = (void *)_bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_100029C7C(0, &qword_1000F5EA0);
    uint64_t v23 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  sub_100029C7C(0, (unint64_t *)&unk_1000F7170);
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v31.value.super.Class isa = 0;
  v31.is_nil = 0;
  *(UIMenu *)(v22 + 32) = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v24, (Swift::String_optional)0, v31, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v23, v26);
  specialized Array._endMutation()();
  a1(v22);
  swift_bridgeObjectRelease();
}

uint64_t sub_100097948(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = type metadata accessor for LibraryWorkflowCreationBehavior();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v9 = (void *)result;
    *uint64_t v7 = a3;
    (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for LibraryWorkflowCreationBehavior.inFolder(_:), v4);
    type metadata accessor for LibraryViewController();
    sub_1000100DC(&qword_1000F8470, (void (*)(uint64_t))type metadata accessor for LibraryViewController);
    id v10 = a3;
    LibraryOperations.createWorkflow(from:withBehavior:)();

    return (*(uint64_t (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_100097AE8(uint64_t a1, void *aBlock)
{
  uint64_t v2 = *(void (**)(void (*)(uint64_t), uint64_t))(a1 + 32);
  uint64_t v3 = _Block_copy(aBlock);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  swift_retain();
  v2(sub_10009DD8C, v4);
  swift_release();

  return swift_release();
}

void sub_100097B7C(uint64_t a1, uint64_t a2)
{
  sub_100029C7C(0, &qword_1000F5EA0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, objc_class *))(a2 + 16))(a2, isa);
}

void sub_100097BF8(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage____editButtonItem);
  *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage____editButtonItem) = a1;
  sub_100026E90(v2);
}

void sub_100097C10(uint64_t a1)
{
}

id sub_100097C1C()
{
  uint64_t v1 = OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutButtonItem;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutButtonItem);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutButtonItem);
  }
  else
  {
    swift_getObjectType();
    id v4 = sub_100097C8C();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_100097C8C()
{
  id v0 = [self buttonWithType:1];
  sub_100021E68();
  type metadata accessor for LibraryDataSource();
  uint64_t v1 = (void (*)(void))method lookup function for LibraryDataSource();
  v1();
  swift_release();
  LibraryLayoutMode.symbolName.getter();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 setSymbolName:v2 pointSizeToWidthRatio:3.3];

  id v3 = v0;
  sub_100098E38();
  uint64_t v5 = v4;
  [v3 setMenu:v4];

  [v3 setShowsMenuAsPrimaryAction:1];
  id v6 = v3;
  sub_100021E68();
  uint64_t v7 = (void (*)(void))method lookup function for LibraryDataSource();
  v7();
  swift_release();
  uint64_t v8 = LibraryLayoutMode.accessibilityLabel.getter();
  sub_1000A1430(v8, v9, v6);

  id v10 = v6;
  sub_100097C10((uint64_t)v6);
  id v11 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v10];
  sub_100097E38((uint64_t)v11);

  return v11;
}

void sub_100097E38(uint64_t a1)
{
}

id sub_100097E44()
{
  return sub_100025FD4(&OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___overflowMenuButtonItem, (uint64_t (*)(uint64_t))sub_100097E64);
}

id sub_100097E64(void *a1)
{
  sub_100029C7C(0, &qword_1000F5230);
  sub_10001B4C0(0x73697370696C6C65, 0xEF656C637269632ELL);
  type metadata accessor for LibraryViewController();
  uint64_t v16 = a1;
  id v2 = objc_allocWithZone((Class)UIBarButtonItem);
  id v3 = a1;
  sub_1000A123C();
  uint64_t v5 = v4;
  id v6 = (void *)sub_100098E38(v4);
  Class isa = sub_100098CB0(v6).super.super.isa;

  [v5 setMenu:isa v16];
  id v8 = v5;
  NSString v9 = String._bridgeToObjectiveC()();
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = sub_1000248B0(v9);

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  sub_1000A1430(v12, v14, v8);
  v3[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_overflowMenuButtonExists] = 1;
  return v8;
}

uint64_t sub_100097FEC()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_libraryAccessibilityIdentifier);
  sub_100021F8C();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

void sub_10009803C(uint64_t a1)
{
}

void sub_100098048()
{
}

id sub_100098090(uint64_t a1)
{
  id v2 = [self buttonWithType:1];
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 setSymbolName:v3 pointSizeToWidthRatio:1.8];

  [v2 addTarget:a1 action:"syncUnavailableItemPressed:" forControlEvents:64];
  id v4 = v2;
  sub_10009803C((uint64_t)v2);
  id v5 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v4];

  return v5;
}

uint64_t sub_10009817C(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_lockedAppBundleIdCache) = a1;
  return swift_bridgeObjectRelease();
}

id sub_100098194()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  id v2 = self;
  id v3 = [v2 workflowUserDefaults];
  [v3 removeObserver:v0 forKeyPath:WFCloudKitSyncEnabledKey];

  id v4 = [v2 syncShortcutsUserDefaults];
  [v4 removeObserver:v0 forKeyPath:WFCloudKitLibraryFetchedKey];

  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for LibraryViewController();
  return [super dealloc];
}

uint64_t sub_1000984F4()
{
  return type metadata accessor for LibraryViewController();
}

void sub_1000984FC()
{
  *(void *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_hasLoadedInitialData] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___dataSource] = 0;
  sub_10002A5BC(OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutMetrics);
  *(void *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___editingItems] = 1;
  uint64_t v1 = OBJC_IVAR____TtC9Shortcuts21LibraryViewController_flowLayout;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UICollectionViewFlowLayout) init];
  *(void *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___collectionView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___tableView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_searchController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___toolbarViewController] = 1;
  *(void *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customPlusButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___createButtonItem] = 1;
  *(void *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customEditButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage____editButtonItem] = 1;
  *(void *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customLayoutButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___layoutButtonItem] = 0;
  v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_overflowMenuButtonExists] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___overflowMenuButtonItem] = 0;
  id v2 = &v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_libraryAccessibilityIdentifier];
  *id v2 = 0;
  v2[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customSyncUnavailableButtonItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController____lazy_storage___syncUnavailableButtonItem] = 1;
  *(void *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_cancellables] = &_swiftEmptySetSingleton;
  id v3 = &v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_tip];
  *(_OWORD *)id v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((void *)v3 + 4) = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_tipStatusObservation] = 0;
  uint64_t v4 = OBJC_IVAR____TtC9Shortcuts21LibraryViewController_lockedAppBundleIdCache;
  id v5 = [self lockedAppBundleIdentifiers];
  uint64_t v6 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  *(void *)&v0[v4] = v6;
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100098734()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100098C00(Strong);
  }
}

void sub_100098788(void *a1, id a2)
{
  id v3 = [a2 preferredContentSizeCategory];
  id v4 = [a1 traitCollection];
  id v5 = [v4 preferredContentSizeCategory];

  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;
  if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      sub_10000A45C();
      sub_100097BF8(v12);
    }
  }
  sub_1000255FC(&v16);
  uint64_t v13 = v16;
  swift_retain();
  uint64_t v14 = sub_10002582C(&v16);
  v13(v14);
  swift_release();
  sub_10000ADBC();
  id v15 = [self sharedContext];
  LOBYTE(v13) = WFApplicationContext.isIPadInSplitScreen.getter();

  if (v13) {
    [a1 setEditing:0 animated:1];
  }
}

uint64_t sub_10009891C(char a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for LibraryViewController();
  [super viewWillDisappear:a1 & 1];
  return sub_1000AF334();
}

uint64_t sub_1000989C0()
{
  sub_100021E68();
  sub_100018A80();

  return swift_release();
}

void sub_100098B1C(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  id v6 = [v3 contentScrollViewForEdge:1];
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = objc_allocWithZone((Class)RPTScrollViewTestParameters);
    id v9 = v7;
    swift_bridgeObjectRetain();
    id v10 = sub_10009D548(a1, a2, v9, 0, 0);
    [self runTestWithParameters:v10];
  }
}

uint64_t sub_100098C00(uint64_t a1)
{
  uint64_t v2 = sub_100098E38(a1);
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_customLayoutButton);
  uint64_t v7 = (void *)v2;
  if (v3) {
    [v3 setMenu:v2];
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_overflowMenuButtonExists) == 1)
  {
    id v4 = sub_100097E44();
    Class isa = sub_100098CB0(v7).super.super.isa;
    [v4 setMenu:isa];
  }

  return _objc_release_x2();
}

UIMenu sub_100098CB0(void *a1)
{
  sub_100025A08(&qword_1000F5200);
  UIMenuElementSize preferredElementSize = swift_allocObject();
  *(_OWORD *)(preferredElementSize + 16) = xmmword_1000BB390;
  sub_100029C7C(0, &qword_1000F5ED8);
  NSString v4 = String._bridgeToObjectiveC()();
  NSString v5 = sub_10009DED8();
  id v6 = sub_1000248B0(v4);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(sub_1000206B4() + 16) = v1;
  id v7 = v1;
  sub_100026C28();
  *(void *)(preferredElementSize + 32) = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  *(void *)(preferredElementSize + 40) = a1;
  specialized Array._endMutation()();
  sub_100029C7C(0, (unint64_t *)&unk_1000F7170);
  id v8 = a1;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v11.value.super.Class isa = 0;
  v11.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v9, (Swift::String_optional)0, v11, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, 0);
}

void sub_100098E38()
{
  sub_10002066C();
  uint64_t v2 = v0;
  uint64_t v64 = type metadata accessor for LibraryDataSource.SortType();
  sub_100022284();
  uint64_t v62 = v3;
  __chkstk_darwin(v4);
  uint64_t v67 = v5;
  uint64_t v63 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  UIMenuElementSize v74 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  NSString v6 = String._bridgeToObjectiveC()();
  String._bridgeToObjectiveC()();
  id v7 = sub_100020650();

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_100029C7C(0, &qword_1000F5230);
  uint64_t v8 = LibraryLayoutMode.symbolName.getter();
  sub_10001B4C0(v8, v9);
  sub_100021E68();
  id v72 = (id)sub_100015018();
  id v10 = (void (*)(void))method lookup function for LibraryDataSource();
  v10();
  swift_release();
  uint64_t v11 = LibraryLayoutMode.rawValue.getter();
  uint64_t v13 = v12;
  if (v11 == LibraryLayoutMode.rawValue.getter() && v13 == v14)
  {
    sub_1000234A8();
  }
  else
  {
    _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v16 = sub_100029C7C(0, &qword_1000F5ED8);
  sub_1000206B4();
  swift_unknownObjectWeakInit();
  uint64_t v17 = v16;
  sub_100026C28();
  id v18 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  sub_10009DEA4();
  if (v19) {
    sub_1000150B4();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  NSString v20 = String._bridgeToObjectiveC()();
  String._bridgeToObjectiveC()();
  id v21 = sub_100020650();

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = LibraryLayoutMode.symbolName.getter();
  sub_10001B4C0(v22, v23);
  sub_100021E68();
  Swift::String v24 = (void (*)(void))method lookup function for LibraryDataSource();
  v24();
  swift_release();
  uint64_t v25 = LibraryLayoutMode.rawValue.getter();
  uint64_t v27 = v26;
  if (v25 == LibraryLayoutMode.rawValue.getter() && v27 == v28)
  {
    sub_1000234A8();
  }
  else
  {
    _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1000206B4();
  swift_unknownObjectWeakInit();
  sub_10001B6DC();
  sub_100026C28();
  UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  sub_10009DEA4();
  if (v19) {
    sub_1000150B4();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  sub_100021E68();
  unint64_t v30 = (void (*)(void))method lookup function for LibraryDataSource();
  v30();
  swift_release();
  uint64_t v31 = LibraryLayoutMode.rawValue.getter();
  uint64_t v33 = v32;
  if (v31 == LibraryLayoutMode.rawValue.getter() && v33 == v34)
  {
    sub_1000234A8();
  }
  else
  {
    sub_10002913C();
    char v36 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v36 & 1) == 0) {
      goto LABEL_34;
    }
  }
  uint64_t v37 = static LibraryDataSource.SortType.allCases.getter();
  uint64_t v38 = *(void *)(v37 + 16);
  if (v38)
  {
    id v73 = _swiftEmptyArrayStorage;
    id v72 = v2;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v39 = *(unsigned __int8 *)(v62 + 80);
    uint64_t v61 = v37;
    uint64_t v40 = v37 + ((v39 + 32) & ~v39);
    uint64_t v41 = *(void *)(v62 + 72);
    uint64_t v70 = v62 + 8;
    uint64_t v71 = v41;
    uint64_t v69 = (void (**)(char *, uint64_t, uint64_t))(v62 + 16);
    v67 += (v39 + 24) & ~v39;
    uint64_t v68 = (v39 + 24) & ~v39;
    uint64_t v65 = v17;
    uint64_t v66 = v39 | 7;
    int v42 = (void (**)(uint64_t, char *, uint64_t))(v62 + 32);
    double v44 = v63;
    uint64_t v43 = v64;
    do
    {
      LibraryDataSource.SortType.displayName.getter();
      sub_100021E68();
      dispatch thunk of LibraryDataSource.sortType.getter();
      swift_release();
      static LibraryDataSource.SortType.== infix(_:_:)();
      sub_100016618();
      v46(v45);
      uint64_t v47 = sub_1000206B4();
      swift_unknownObjectWeakInit();
      (*v69)(v44, v40, v43);
      uint64_t v48 = swift_allocObject();
      *(void *)(v48 + 16) = v47;
      (*v42)(v48 + v68, v44, v43);
      sub_100026C28();
      UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v40 += v71;
      --v38;
    }
    while (v38);
    UIMenuElementSize v49 = (UIMenuElementSize)v73;

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    UIMenuElementSize v49 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  }
  if ((unint64_t)v49 >> 62)
  {
    sub_100029C7C(0, &qword_1000F5EA0);
    swift_bridgeObjectRetain();
    UIMenuElementSize v50 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_100029C7C(0, &qword_1000F5EA0);
    UIMenuElementSize v50 = v49;
  }
  swift_bridgeObjectRelease();
  sub_100029C7C(0, (unint64_t *)&unk_1000F7170);
  v51._countAndFlagsBits = sub_10009DE4C();
  UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v51, v52, v75, v53, v54, v50, v60);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1000150B4();
  }
  sub_100021F6C();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
LABEL_34:
  sub_100029C7C(0, (unint64_t *)&unk_1000F7170);
  UIMenuElementSize v59 = v74;
  v55._countAndFlagsBits = sub_10009DE4C();
  UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v55, v56, v76, v57, v58, v59, v60);
  sub_10001885C();
}

void sub_1000995E4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100021E68();

    type metadata accessor for LibraryDataSource();
    uint64_t v2 = (void (*)(void))method lookup function for LibraryDataSource();
    v2();
    uint64_t v3 = (void (*)(uint64_t))method lookup function for LibraryDataSource();
    v3(1);
    sub_1000AA270();
    swift_release();
  }
  swift_beginAccess();
  uint64_t v4 = swift_unknownObjectWeakLoadStrong();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    sub_100098C00(v4);
  }
}

void sub_1000996E0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100021E68();

    type metadata accessor for LibraryDataSource();
    uint64_t v2 = (void (*)(void))method lookup function for LibraryDataSource();
    v2();
    uint64_t v3 = (void (*)(void))method lookup function for LibraryDataSource();
    v3(0);
    sub_1000AA270();
    swift_release();
  }
  swift_beginAccess();
  uint64_t v4 = swift_unknownObjectWeakLoadStrong();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    sub_100098C00(v4);
  }
}

uint64_t sub_1000997DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for LibraryDataSource.SortType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v9 = (void *)result;
    sub_100021E68();

    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a3, v4);
    dispatch thunk of LibraryDataSource.sortType.setter();
    return swift_release();
  }
  return result;
}

void sub_1000998F4(void *a1)
{
  if ([a1 object])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_1000465D4((uint64_t)v9, (uint64_t)v10);
  if (v11)
  {
    sub_100029C7C(0, &qword_1000F53C0);
    if (swift_dynamicCast())
    {
      id v6 = [v1 view];
      if (v6)
      {
        [v8 keyboardFrameInView:v6];
        sub_100015144();
        double Height = 0.0;
        if ([v8 isVisible])
        {
          v12.origin.x = v2;
          v12.origin.y = v3;
          v12.size.width = v4;
          v12.size.height = v5;
          double Height = CGRectGetHeight(v12);
        }
        sub_100016680([v1 isEditing] ^ 1, Height);
      }
      else
      {
        __break(1u);
      }
    }
  }
  else
  {
    sub_100025E44((uint64_t)v10, &qword_1000F7670);
  }
}

void sub_100099ACC()
{
  sub_1000074D4();
  type metadata accessor for LibraryWorkflowCreationBehavior();
  sub_100022284();
  __chkstk_darwin(v1);
  sub_100027BEC();
  sub_100022284();
  __chkstk_darwin(v2);
  sub_10001899C();
  [v0 setEditing:0 animated:0];
  sub_100021F8C();
  uint64_t v3 = sub_10001C138();
  v4(v3);
  LibraryConfiguration.workflowCreationBehavior.getter();
  uint64_t v5 = sub_1000235C4();
  v6(v5);
  type metadata accessor for LibraryViewController();
  sub_1000100DC(&qword_1000F8470, (void (*)(uint64_t))type metadata accessor for LibraryViewController);
  sub_10009DEF8();
  sub_100018D08();
  v7();
  sub_10002A68C();
}

void sub_100099C84()
{
  sub_10002066C();
  uint64_t v3 = type metadata accessor for AutoShortcutsSettingView();
  uint64_t v4 = sub_1000165CC(v3);
  __chkstk_darwin(v4);
  sub_1000167F4();
  uint64_t v33 = v5;
  uint64_t v6 = type metadata accessor for LibraryEditingBehavior();
  sub_100022284();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_1000165D8();
  uint64_t v10 = type metadata accessor for LibraryConfiguration();
  sub_100022284();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_100021DD8();
  type metadata accessor for AutoShortcutApp();
  sub_100022284();
  uint64_t v31 = v15;
  uint64_t v32 = v14;
  uint64_t v16 = __chkstk_darwin(v14);
  __chkstk_darwin(v16);
  id v18 = (char *)&v30 - v17;
  uint64_t v34 = v1;
  sub_100021F8C();
  sub_1000205E8();
  v19();
  LibraryConfiguration.editingBehavior.getter();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0, v10);
  sub_100021DB4();
  if (v20() == enum case for LibraryEditingBehavior.autoShortcut(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 96))(v2, v6);
    uint64_t v22 = v31;
    uint64_t v21 = v32;
    sub_100020698();
    v23();
    sub_1000205E8();
    v24();
    uint64_t v25 = v34;
    uint64_t v26 = *(void **)&v34[OBJC_IVAR____TtC9Shortcuts21LibraryViewController_database];
    type metadata accessor for AutoShortcutsSettingView.Model();
    sub_100018828();
    id v27 = v26;
    AutoShortcutsSettingView.Model.init(app:database:)();
    AutoShortcutsSettingView.init(model:)();
    id v28 = objc_allocWithZone((Class)sub_100025A08(&qword_1000F7848));
    uint64_t v29 = (void *)UIHostingController.init(rootView:)();
    [v25 presentViewController:v29 animated:1 completion:0];

    (*(void (**)(char *, uint64_t))(v22 + 8))(v18, v21);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v2, v6);
  }
  sub_10001885C();
}

void sub_100099FB0()
{
  uint64_t v1 = v0;
  sub_100029C7C(0, &qword_1000F7838);
  NSString v2 = sub_1000223FC();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = sub_1000248B0(v2);

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  uint64_t v8 = sub_10003FA98();
  id v17 = sub_10009A160(v5, v7, v8, v9, 1);
  sub_100029C7C(0, &qword_1000F7840);
  NSString v10 = String._bridgeToObjectiveC()();
  NSString v11 = sub_10009DED8();
  id v12 = sub_1000248B0(v10);

  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  id v16 = sub_10009A218(v13, v15, 0, 0, 0);
  [v17 addAction:v16];

  [v1 presentViewController:v17 animated:1 completion:0];
}

id sub_10009A160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a2)
  {
    NSString v7 = 0;
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    NSString v8 = 0;
    goto LABEL_6;
  }
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_6:
  id v9 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:v7 message:v8 preferredStyle:a5];

  return v9;
}

id sub_10009A218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a2)
  {
    NSString v8 = 0;
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    id v9 = 0;
    goto LABEL_6;
  }
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  v12[4] = a4;
  v12[5] = a5;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  void v12[2] = sub_10009A320;
  void v12[3] = &unk_1000E7618;
  id v9 = _Block_copy(v12);
  swift_release();
LABEL_6:
  id v10 = [(id)swift_getObjCClassFromMetadata() actionWithTitle:v8 style:a3 handler:v9];
  _Block_release(v9);

  return v10;
}

void sub_10009A320(uint64_t a1, void *a2)
{
  NSString v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_10009A468()
{
  v31.receiver = v0;
  v31.super_class = (Class)type metadata accessor for LibraryViewController();
  [super keyCommands];
  if (v2)
  {
    NSString v3 = v2;
    sub_100029C7C(0, &qword_1000F5258);
    uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v4 = (uint64_t)_swiftEmptyArrayStorage;
  }
  uint64_t v32 = v4;
  id v5 = [v0 presentedViewController];

  if (!v5)
  {
    sub_10000823C();
    sub_100019898();
    if (v6) {
      uint64_t v7 = sub_10002A634();
    }
    else {
      uint64_t v7 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v7)
    {
      sub_10000823C();
      sub_100019898();
      if (v8) {
        uint64_t v9 = sub_10002A634();
      }
      else {
        uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v9 == 1)
      {
        sub_100029C7C(0, &qword_1000F5258);
        NSString v10 = String._bridgeToObjectiveC()();
        NSString v11 = String._bridgeToObjectiveC()();
        id v12 = sub_1000248B0(v10);

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_100012DE4();
        id v13 = (id)sub_10002161C();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        sub_1000189E8();
        if (v14) {
          sub_1000224C0();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        NSString v15 = sub_1000223FC();
        sub_1000223FC();
        id v16 = sub_100020650();

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_1000261FC();
        id v17 = (id)sub_10002161C();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        sub_1000189E8();
        if (v14) {
          sub_1000224C0();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      sub_100029C7C(0, &qword_1000F5258);
      NSString v18 = sub_1000223FC();
      NSString v19 = sub_1000223FC();
      id v20 = sub_1000248B0(v18);

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_100012DE4();
      id v21 = (id)sub_10002161C();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      sub_1000189E8();
      if (v14) {
        sub_1000224C0();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      NSString v22 = sub_1000223FC();
      sub_1000223FC();
      id v23 = sub_100020650();

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v1 = v24;

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1000261FC();
      id v25 = (id)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      sub_1000189E8();
      if (v14) {
        sub_1000224C0();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    sub_100029C7C(0, &qword_1000F5258);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v26 = (id)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    sub_10009DE90();
    if (v14) {
      sub_1000150B4();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    NSString v27 = String._bridgeToObjectiveC()();
    sub_1000223FC();
    id v28 = sub_100020650();

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1000261FC();
    id v29 = (id)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    sub_10009DE90();
    if (v14) {
      sub_1000150B4();
    }
    sub_100018D14();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    return v32;
  }
  return v4;
}

void sub_10009A9EC()
{
  sub_1000074D4();
  type metadata accessor for LibraryWorkflowCreationBehavior();
  sub_100022284();
  __chkstk_darwin(v0);
  sub_100027BEC();
  sub_100022284();
  __chkstk_darwin(v1);
  sub_10001899C();
  sub_100021F8C();
  uint64_t v2 = sub_10001C138();
  v3(v2);
  LibraryConfiguration.workflowCreationBehavior.getter();
  uint64_t v4 = sub_1000235C4();
  v5(v4);
  type metadata accessor for LibraryViewController();
  sub_1000100DC(&qword_1000F8470, (void (*)(uint64_t))type metadata accessor for LibraryViewController);
  sub_10009DEF8();
  sub_100018D08();
  v6();
  sub_10002A68C();
}

void sub_10009AB38()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_searchController);
  if (v1)
  {
    id v2 = v1;
    sub_10008CCF4();
  }
}

uint64_t sub_10009ABA0()
{
  sub_10000823C();
  type metadata accessor for LibraryViewController();
  sub_1000100DC(&qword_1000F8470, (void (*)(uint64_t))type metadata accessor for LibraryViewController);
  LibraryOperations.duplicateWorkflows(_:completion:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10009AC80()
{
  uint64_t v0 = sub_10000823C();
  sub_1000876EC((uint64_t)v0);

  return swift_bridgeObjectRelease();
}

void sub_10009AD04()
{
  sub_10000823C();
  sub_100019898();
  if (v2)
  {
    if (sub_10002A634()) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    sub_10009DE70();
    if (v1) {
      id v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v3 = *(id *)(v0 + 32);
    }
    id v4 = v3;
    swift_bridgeObjectRelease();
    sub_1000843CC();

    return;
  }

  swift_bridgeObjectRelease();
}

id sub_10009AE08()
{
  id result = [v0 isEditing];
  if (result)
  {
    return [v0 setEditing:0 animated:1];
  }
  return result;
}

void sub_10009AEA4()
{
  sub_10000823C();
  sub_100019898();
  if (v2)
  {
    if (sub_10002A634())
    {
LABEL_3:
      sub_10009DE70();
      if (v1) {
        id v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v3 = *(id *)(v0 + 32);
      }
      id v4 = v3;
      swift_bridgeObjectRelease();
      if (swift_unknownObjectWeakLoadStrong())
      {
        swift_getObjectType();
        dispatch thunk of LibraryDelegate.run(_:from:input:requestOutput:runViewSource:completionHandler:)();

        swift_unknownObjectRelease();
      }
      else
      {
      }
      return;
    }
  }
  else if (*(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }

  swift_bridgeObjectRelease();
}

void sub_10009B01C(uint64_t a1, uint64_t a2)
{
  if ([v2 isEditing]) {
    sub_10000ADBC();
  }
  id v12 = [objc_allocWithZone((Class)UISelectionFeedbackGenerator) init];
  sub_100021E68([v12 selectionChanged]);
  id v4 = (void *)sub_1000AA7C8(a2);
  uint64_t v5 = swift_release();
  if (v4)
  {
    sub_100021E68(v5);
    id v6 = v4;
    Swift::Int v7 = WFDatabaseObjectDescriptor.id.getter();
    Swift::Int v9 = v8;

    type metadata accessor for LibraryDataSource();
    NSString v10 = (uint64_t (*)(unsigned char *))method lookup function for LibraryDataSource();
    NSString v11 = (void (*)(unsigned char *, void))v10(v13);
    sub_100089C44(&v14, v7, v9);
    swift_bridgeObjectRelease();
    v11(v13, 0);
    sub_1000A9EAC();
    swift_release();
  }
  else
  {
  }
}

void sub_10009B1C0(uint64_t a1, uint64_t a2)
{
  id v4 = [v2 isEditing];
  if (v4) {
    id v4 = (id)sub_10000ADBC();
  }
  sub_100021E68(v4);
  uint64_t v5 = (void *)sub_1000AA7C8(a2);
  uint64_t v6 = swift_release();
  if (v5)
  {
    sub_100021E68(v6);
    id v7 = v5;
    WFDatabaseObjectDescriptor.id.getter();

    type metadata accessor for LibraryDataSource();
    Swift::Int v8 = (uint64_t (*)(unsigned char *))method lookup function for LibraryDataSource();
    Swift::Int v9 = (void (*)(unsigned char *, void))v8(v12);
    uint64_t v10 = sub_10001B6DC();
    sub_10009D648(v10, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9(v12, 0);
    sub_1000A9EAC();
    swift_release();
  }
}

void sub_10009B308()
{
  sub_1000074D4();
  sub_100024798();
  sub_100022284();
  __chkstk_darwin(v3);
  sub_100024604();
  id v4 = v1;
  id v5 = v2;
  v0();

  sub_100018D08();
  v6();
  sub_10002A68C();
}

void sub_10009B3AC()
{
  sub_10002066C();
  uint64_t v2 = sub_100025A08((uint64_t *)&unk_1000F70F0);
  uint64_t v3 = sub_1000165CC(v2);
  __chkstk_darwin(v3);
  sub_1000167F4();
  uint64_t v36 = v4;
  uint64_t v5 = type metadata accessor for ShortcutsLibraryItem.ItemType();
  sub_100022284();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_100021FC4();
  uint64_t v9 = sub_100025A08(&qword_1000F7690);
  uint64_t v10 = sub_1000165CC(v9);
  __chkstk_darwin(v10);
  sub_10002238C();
  uint64_t v11 = type metadata accessor for ShortcutsLibraryItem();
  sub_100022284();
  __chkstk_darwin(v12);
  sub_1000165D8();
  sub_100021E68();
  sub_100022110();
  swift_release();
  if (sub_1000225EC(v1, 1, v11) == 1)
  {
    sub_100025E44(v1, &qword_1000F7690);
  }
  else
  {
    sub_100020698();
    v13();
    ShortcutsLibraryItem.itemType.getter();
    sub_100021DB4();
    int v15 = v14();
    if (v15 == enum case for ShortcutsLibraryItem.ItemType.workflow(_:))
    {
      uint64_t v16 = sub_1000226D8();
      v17(v16);

      if (swift_unknownObjectWeakLoadStrong())
      {
        swift_getObjectType();
        uint64_t v18 = v36;
        dispatch thunk of LibraryDelegate.runningWorkflow.getter();
        swift_unknownObjectRelease();
        uint64_t v19 = sub_100018900();
        v20(v19);
        uint64_t v21 = type metadata accessor for RunningWorkflow();
        sub_1000225EC(v36, 1, v21);
      }
      else
      {
        uint64_t v33 = sub_100018900();
        v34(v33);
        uint64_t v35 = type metadata accessor for RunningWorkflow();
        uint64_t v18 = v36;
        sub_100021594(v36, 1, 1, v35);
      }
      sub_100025E44(v18, (uint64_t *)&unk_1000F70F0);
    }
    else
    {
      int v22 = v15;
      if (v15 == enum case for ShortcutsLibraryItem.ItemType.autoShortcut(_:))
      {
        uint64_t v23 = sub_100018900();
        v24(v23);
        uint64_t v25 = sub_1000226D8();
        v26(v25);
      }
      else
      {
        int v27 = enum case for ShortcutsLibraryItem.ItemType.emptyState(_:);
        uint64_t v28 = sub_100018900();
        v29(v28);
        if (v22 == v27)
        {
          uint64_t v30 = sub_1000226D8();
          v31(v30);

          sub_100025A08((uint64_t *)&unk_1000F76A0);
          type metadata accessor for LibrarySectionOptions();
          sub_10001C094();
          sub_100016618();
          v32();
        }
        else
        {
          (*(void (**)(id *, uint64_t))(v7 + 8))(v0, v5);
        }
      }
    }
  }
  sub_10001885C();
}

uint64_t sub_10009B70C()
{
  return [v0 isEditing] ^ 1;
}

void sub_10009B830()
{
  sub_1000074D4();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for Logger();
  sub_100022284();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_1000204E8();
  [v0 deselectAllCells];
  sub_100021E68();
  uint64_t v11 = sub_1000AA50C(v4);
  swift_release();
  if (v11)
  {
    uint64_t v12 = sub_10001B6E8();
    *(void *)(v12 + 16) = v2;
    *(void *)(v12 + 24) = v11;
    id v13 = (void (*)(void))sub_10009DBE4;
LABEL_11:
    int v22 = v13;
    id v23 = v2;
    if (([v6 hasActiveDrag] & 1) == 0)
    {
      id v24 = [v23 presentedViewController];

      if (!v24
        || (id v25 = [v23 presentedViewController]) != 0
        && (id v26 = v25, self, v27 = swift_dynamicCastObjCClass(), v26, v27))
      {
        v22();
        sub_10001EEA8();
      }
    }
    [objc_allocWithZone((Class)UISelectionFeedbackGenerator) init selectionChanged];
    swift_release();
    sub_10002A68C();

    return;
  }
  sub_100021E68();
  uint64_t v14 = sub_1000AA7C8(v4);
  swift_release();
  if (v14)
  {
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v16 = [v6 cellForItemAtIndexPath:isa];

    if (v16)
    {
      id v17 = [objc_allocWithZone((Class)WFWorkflowRunViewSource) initWithView:v16];
    }
    else
    {
      id v17 = 0;
    }
    uint64_t v21 = (void *)swift_allocObject();
    void v21[2] = v2;
    v21[3] = v14;
    v21[4] = v17;
    id v13 = sub_10009DBA0;
    goto LABEL_11;
  }
  static WFLog.subscript.getter();
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v18, v19))
  {
    id v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "No workflow or auto shortcut associated with this cell.", v20, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v7);
  sub_10002A68C();
}

uint64_t sub_10009BB50()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    swift_getObjectType();
    dispatch thunk of LibraryDelegate.run(_:)();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_10009BBD0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LibraryConfiguration();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (swift_unknownObjectWeakLoadStrong())
  {
    swift_getObjectType();
    uint64_t v6 = a1 + OBJC_IVAR____TtC9Shortcuts21LibraryViewController_configuration;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
    uint64_t v7 = (void *)LibraryConfiguration.runSource.getter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    dispatch thunk of LibraryDelegate.run(_:from:input:requestOutput:runViewSource:completionHandler:)();
    swift_unknownObjectRelease();
  }
}

void sub_10009BE74()
{
  sub_10002066C();
  type metadata accessor for ShortcutsLibraryItem.ItemType();
  sub_100022284();
  __chkstk_darwin(v2);
  sub_100021DD8();
  uint64_t v3 = sub_100025A08(&qword_1000F7690);
  uint64_t v4 = sub_1000165CC(v3);
  __chkstk_darwin(v4);
  sub_100018874();
  uint64_t v5 = type metadata accessor for ShortcutsLibraryItem();
  sub_100022284();
  __chkstk_darwin(v6);
  sub_1000204E8();
  if (sub_100096A80()) {
    goto LABEL_4;
  }
  sub_100021E68();
  sub_100022110();
  swift_release();
  if (sub_1000225EC(v1, 1, v5) == 1)
  {
    sub_100025E44(v1, &qword_1000F7690);
LABEL_4:
    sub_10001885C();
    return;
  }
  sub_100020698();
  v7();
  ShortcutsLibraryItem.itemType.getter();
  sub_100021DB4();
  int v9 = v8();
  if (v9 == enum case for ShortcutsLibraryItem.ItemType.workflow(_:)
    || v9 == enum case for ShortcutsLibraryItem.ItemType.autoShortcut(_:))
  {
    uint64_t v10 = sub_100025F14();
    v11(v10);
    uint64_t v12 = sub_10002432C();
    v13(v12);
    goto LABEL_4;
  }
  if (v9 == enum case for ShortcutsLibraryItem.ItemType.appShortcutTopHit(_:))
  {
    uint64_t v14 = sub_100025F14();
    v15(v14);
    uint64_t v16 = sub_100025DC4();
    v17(v16);
    type metadata accessor for AutoShortcutAppSection();
LABEL_12:
    sub_10001C094();
    sub_100016618();
    v22();
    goto LABEL_4;
  }
  if (v9 == enum case for ShortcutsLibraryItem.ItemType.emptyState(_:))
  {
    uint64_t v18 = sub_100025F14();
    v19(v18);
    uint64_t v20 = sub_100025DC4();
    v21(v20);

    sub_100025A08((uint64_t *)&unk_1000F76A0);
    type metadata accessor for LibrarySectionOptions();
    goto LABEL_12;
  }
  _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
}

void sub_10009C114()
{
  sub_1000074D4();
  sub_100024798();
  sub_100022284();
  __chkstk_darwin(v3);
  sub_100024604();
  id v4 = v1;
  id v5 = v2;
  v0();

  sub_100018D08();
  v6();
  sub_10002A68C();
}

id sub_10009C1C0(void *a1)
{
  sub_10009BE58();
  if (v4)
  {
    id v5 = [a1 isEditing];
    sub_100021E68();
    sub_1000AAE78();
    uint64_t v7 = v6;
    id result = (id)swift_release();
    if (v7 < 1) {
      return result;
    }
    int v9 = "setEditing:animated:";
    uint64_t v10 = v1;
    id v11 = v5;
    uint64_t v3 = 1;
  }
  else
  {
    int v9 = "setEditing:";
    uint64_t v10 = a1;
    id v11 = 0;
  }
  return [v10 v9:v11:v3];
}

void (*sub_10009C38C())()
{
  type metadata accessor for LibraryEditingOption();
  sub_100022284();
  __chkstk_darwin(v0);
  uint64_t v2 = (uint64_t *)((char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000205E8();
  v3();
  sub_100021DB4();
  int v5 = v4();
  if (v5 == enum case for LibraryEditingOption.selection(_:))
  {
    uint64_t v6 = sub_100025C8C();
    v7(v6);
    sub_1000206B4();
    swift_unknownObjectWeakInit();
    return sub_10009DB50;
  }
  else if (v5 == enum case for LibraryEditingOption.folderDetails(_:))
  {
    uint64_t v9 = sub_10001512C();
    v10(v9);
    uint64_t v11 = *v2;
    uint64_t v12 = sub_1000206B4();
    swift_unknownObjectWeakInit();
    uint64_t v13 = sub_10001B6E8();
    *(void *)(v13 + 16) = v12;
    *(void *)(v13 + 24) = v11;
    return sub_10009DB48;
  }
  else if (v5 == enum case for LibraryEditingOption.folderDeletion(_:))
  {
    uint64_t v14 = sub_10001512C();
    v15(v14);
    uint64_t v16 = *v2;
    uint64_t v17 = sub_1000206B4();
    swift_unknownObjectWeakInit();
    uint64_t v18 = sub_10001B6E8();
    *(void *)(v18 + 16) = v17;
    *(void *)(v18 + 24) = v16;
    return (void (*)())sub_10009DB3C;
  }
  else
  {
    uint64_t v19 = sub_100025C8C();
    v20(v19);
    return (void (*)())static NavigationDestinationEntity.defaultQuery.setter;
  }
}

void sub_10009C57C()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    [Strong startEditing];
  }
}

void sub_10009C5D8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      swift_getObjectType();
      dispatch thunk of LibraryDelegate.presentFolderEditor(_:)();
      swift_unknownObjectRelease();
    }
  }
}

void sub_10009C674(uint64_t a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    int v5 = (void *)Strong;
    uint64_t v6 = swift_unknownObjectWeakLoadStrong();

    if (v6)
    {
      swift_getObjectType();
      sub_100025A08(&qword_1000F5200);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1000BAC10;
      *(void *)(v7 + 32) = a3;
      specialized Array._endMutation()();
      id v8 = a3;
      dispatch thunk of LibraryDelegate.deleteCollections(_:alertCustomizationBlock:completion:)();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
  }
}

void sub_10009C784(void *a1)
{
  [a1 setPreferredStyle:1];
  id v2 = [objc_allocWithZone((Class)WFAlertPresentationSource) init];
  [a1 setPresentationSource:v2];
}

uint64_t sub_10009C800()
{
  type metadata accessor for LibraryEditingOption();
  sub_100022284();
  __chkstk_darwin(v0);
  id v2 = (id *)((char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000205E8();
  v3();
  sub_100021DB4();
  int v5 = v4();
  if (v5 == enum case for LibraryEditingOption.selection(_:))
  {
    uint64_t v6 = sub_10001512C();
    v7(v6);
    swift_bridgeObjectRelease();
    return (sub_100097400() & 1) == 0;
  }
  else if (v5 == enum case for LibraryEditingOption.folderDeletion(_:))
  {
    uint64_t v9 = sub_10001512C();
    v10(v9);

    return 2;
  }
  else
  {
    uint64_t v11 = sub_100025C8C();
    v12(v11);
    return 0;
  }
}

id sub_10009C924()
{
  id v0 = sub_100026038();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v2 = [v0 cellForItemAtIndexPath:isa];

  id result = 0;
  if (v2)
  {
    type metadata accessor for LibraryCell();
    if (swift_dynamicCastClass())
    {
      return sub_1000AD9A4();
    }
    else
    {

      return 0;
    }
  }
  return result;
}

uint64_t sub_10009CA0C(void *a1)
{
  uint64_t v4 = sub_100025A08(&qword_1000F5100);
  uint64_t v5 = sub_1000165CC(v4);
  __chkstk_darwin(v5);
  sub_100021FC4();
  uint64_t v6 = type metadata accessor for TaskPriority();
  sub_10009DEB8(v6);
  type metadata accessor for MainActor();
  id v7 = v1;
  id v8 = a1;
  uint64_t v9 = static MainActor.shared.getter();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = v7;
  v10[5] = v8;
  sub_100081300(v2, (uint64_t)&unk_1000F7820, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_10009CAF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  type metadata accessor for MainActor();
  v5[5] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  void v5[6] = v7;
  v5[7] = v6;
  return _swift_task_switch(sub_10009CB8C, v7, v6);
}

uint64_t sub_10009CB8C()
{
  uint64_t v1 = (void *)v0[4];
  sub_100025A08(&qword_1000F5200);
  uint64_t v2 = (__n128 *)swift_allocObject();
  sub_10009DF18(v2, (__n128)xmmword_1000BAC10);
  v0[8] = v7;
  id v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[9] = v4;
  uint64_t v5 = type metadata accessor for LibraryViewController();
  sub_1000100DC(&qword_1000F8470, (void (*)(uint64_t))type metadata accessor for LibraryViewController);
  *uint64_t v4 = v0;
  v4[1] = sub_10009CCC0;
  return LibraryOperations.deleteWorkflows(_:alertCustomizationBlock:)(v7, 0, 0, v5);
}

uint64_t sub_10009CCC0(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 80) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 56);
  uint64_t v4 = *(void *)(v2 + 48);
  return _swift_task_switch(sub_10009CE0C, v4, v3);
}

uint64_t sub_10009CE0C()
{
  char v1 = *(unsigned char *)(v0 + 80);
  uint64_t v2 = *(unsigned char **)(v0 + 16);
  swift_release();
  *uint64_t v2 = v1;
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_10009CED0(void *a1)
{
  sub_100025A08(&qword_1000F5200);
  uint64_t v2 = (__n128 *)swift_allocObject();
  sub_10009DF18(v2, (__n128)xmmword_1000BAC10);
  type metadata accessor for LibraryViewController();
  sub_1000100DC(&qword_1000F8470, (void (*)(uint64_t))type metadata accessor for LibraryViewController);
  id v3 = a1;
  LibraryOperations.duplicateWorkflows(_:completion:)();

  return swift_bridgeObjectRelease();
}

void sub_10009D004()
{
}

void (*sub_10009D060(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_10009D0C0;
}

void sub_10009D0C0(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_10002B9A4();
  }
}

void sub_10009D104(Swift::Bool a1)
{
  swift_getWitnessTable();

  LibraryView.reload(animated:)(a1);
}

uint64_t sub_10009D164(void *a1)
{
  if (a1)
  {
    uint64_t result = (uint64_t)sub_10002D8DC();
    if (result) {
      return result;
    }
    sub_10009DAA8(a1, (SEL *)&selRef_text);
  }
  type metadata accessor for LibraryDataSource();
  id v3 = (void *)static LibraryDataSource.searchPredicate(for:)();
  swift_bridgeObjectRelease();
  sub_100021E68();
  uint64_t v4 = (void *)dispatch thunk of LibraryDataSource.searchPredicate.getter();
  swift_release();
  if (v4)
  {
    if (!v3)
    {

      goto LABEL_13;
    }
    sub_100029C7C(0, &qword_1000F7800);
    id v5 = v3;
    id v6 = v4;
    char v7 = static NSObject.== infix(_:_:)();

    if ((v7 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  if (!v3)
  {
LABEL_11:
    sub_100021E68();
    sub_1000AB198(1);
    swift_release();
  }
LABEL_13:
  sub_100021E68();
  id v8 = v3;
  dispatch thunk of LibraryDataSource.searchPredicate.setter();
  swift_release();
  sub_100021E68();
  sub_100018A80();

  return swift_release();
}

uint64_t sub_10009D2EC()
{
  uint64_t v1 = v0;
  sub_100021E68();
  sub_100015018();
  uint64_t v2 = (void (*)(void))method lookup function for LibraryDataSource();
  v2();
  swift_release();
  uint64_t v3 = LibraryLayoutMode.rawValue.getter();
  id v5 = v4;
  if (v3 == LibraryLayoutMode.rawValue.getter() && v5 == v6)
  {
    sub_1000234A8();
LABEL_8:
    [sub_100025B20() contentSize];
    double v11 = v10;

    [sub_100025B20() bounds];
    double v13 = v12;

    [sub_100025B20() adjustedContentInset];
    double v15 = v14;
    double v17 = v16;

    double v18 = v11 - (v13 - v17 - v15);
    if (v18 <= 0.0)
    {
      uint64_t result = (uint64_t)[v1 navigationController];
      if (!result) {
        return result;
      }
    }
    else
    {
      if (v18 >= 64.0) {
        double v19 = v11 - v13 + v17;
      }
      else {
        double v19 = v11 - v13 + v17 + 4.0;
      }
      [sub_100025B20() contentOffset];
      double v21 = v20;

      if (vabdd_f64(v21, v19) >= 0.1)
      {
        id v23 = sub_100026038();
        [v23 setContentOffset:1 animated:0.0 v19];
LABEL_19:

        return 1;
      }
      uint64_t result = (uint64_t)[v1 navigationController];
      if (!result) {
        return result;
      }
    }
    uint64_t v22 = (void *)result;
    id v23 = [(id)result popViewControllerAnimated:1];

    if (!v23) {
      return 0;
    }
    goto LABEL_19;
  }
  sub_10002913C();
  char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  if (v8) {
    goto LABEL_8;
  }
  return result;
}

id sub_10009D548(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v6 = v5;
  if (!a2)
  {
    NSString v10 = 0;
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    double v11 = 0;
    goto LABEL_6;
  }
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  v14[4] = a4;
  v14[5] = a5;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  void v14[2] = sub_10000E51C;
  void v14[3] = &unk_1000E7690;
  double v11 = _Block_copy(v14);
  swift_release();
LABEL_6:
  id v12 = [v6 initWithTestName:v10 scrollView:a3 completionHandler:v11];

  _Block_release(v11);
  return v12;
}

uint64_t sub_10009D648(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  NSString v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      double v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10008B2F0();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_10009D7D8(v8);
  *uint64_t v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_10009D7D8(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v10 = Hasher._finalize()();
        swift_bridgeObjectRelease();
        Swift::Int v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 >= v9 && v2 >= v11)
          {
LABEL_15:
            uint64_t v14 = *(void *)(v3 + 48);
            uint64_t v15 = (_OWORD *)(v14 + 16 * v2);
            double v16 = (_OWORD *)(v14 + 16 * v6);
            BOOL v17 = v2 != v6 || v15 >= v16 + 1;
            int64_t v2 = v6;
            if (v17)
            {
              _OWORD *v15 = *v16;
              int64_t v2 = v6;
            }
          }
        }
        else if (v11 >= v9 || v2 >= v11)
        {
          goto LABEL_15;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_10009D994(void *a1)
{
  return sub_10009DAA8(a1, (SEL *)&selRef_text);
}

uint64_t sub_10009D9A0()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10009D9E8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100064588;
  return sub_10009CAF0(a1, v4, v5, v7, v6);
}

uint64_t sub_10009DAA8(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v4;
}

uint64_t sub_10009DB08()
{
  swift_unknownObjectWeakDestroy();
  uint64_t v0 = sub_10001B3C8();

  return _swift_deallocObject(v0, v1, v2);
}

void sub_10009DB3C(uint64_t a1)
{
  sub_10009C674(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_10009DB48()
{
}

void sub_10009DB50()
{
}

uint64_t sub_10009DB58()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_10009DBA0()
{
  sub_10009BBD0(*(void *)(v0 + 16));
}

uint64_t sub_10009DBAC()
{
  uint64_t v1 = sub_10001FB44();

  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10009DBE4()
{
  return sub_10009BB50();
}

void sub_10009DBEC()
{
}

void sub_10009DBF4()
{
}

uint64_t sub_10009DBFC()
{
  uint64_t v1 = type metadata accessor for LibraryDataSource.SortType();
  sub_100022284();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 24) & ~v6;
  uint64_t v8 = v7 + *(void *)(v5 + 64);
  uint64_t v9 = v6 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);

  return _swift_deallocObject(v0, v8, v9);
}

uint64_t sub_10009DCA0(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for LibraryDataSource.SortType() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1000997DC(a1, v4, v5);
}

uint64_t sub_10009DD14()
{
  uint64_t v1 = sub_10001B3C8();

  return _swift_deallocObject(v1, v2, v3);
}

id sub_10009DD44()
{
  return [*(id *)(v0 + 16) startEditing];
}

void sub_10009DD54(void (*a1)(uint64_t))
{
}

uint64_t sub_10009DD5C()
{
  _Block_release(*(const void **)(v0 + 16));
  uint64_t v1 = sub_10001B3C8();

  return _swift_deallocObject(v1, v2, v3);
}

void sub_10009DD8C(uint64_t a1)
{
  sub_100097B7C(a1, *(void *)(v1 + 16));
}

uint64_t sub_10009DD98(uint64_t a1)
{
  return sub_100097948(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_10009DDAC(uint64_t *a1)
{
  sub_1000972B0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10009DDB4()
{
  swift_release();
  uint64_t v0 = sub_10001FB44();

  return _swift_deallocObject(v0, v1, v2);
}

void sub_10009DDE4()
{
}

uint64_t sub_10009DDEC()
{
  uint64_t v0 = sub_10001B3C8();
  return _swift_deallocObject(v0, v1, v2);
}

void sub_10009DDFC(void *a1, id a2)
{
}

uint64_t sub_10009DE04()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10009DE4C()
{
  return 0;
}

unint64_t sub_10009DE70()
{
  return sub_100089510(0, (v0 & 0xC000000000000001) == 0, v0);
}

uint64_t sub_10009DEB8(uint64_t a1)
{
  return sub_100021594(v1, 1, 1, a1);
}

NSString sub_10009DED8()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_10009DEF8()
{
  return LibraryOperations.createWorkflow(from:withBehavior:)();
}

uint64_t sub_10009DF18(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = v2;
  return specialized Array._endMutation()();
}

void sub_10009DF38(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_100029C7C(0, (unint64_t *)&qword_1000F53D8);
    sub_1000A1460();
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v18;
    uint64_t v17 = v19;
    uint64_t v2 = v20;
    int64_t v3 = v21;
    unint64_t v4 = v22;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v3 = 0;
  }
  int64_t v16 = (unint64_t)(v2 + 64) >> 6;
  while (1)
  {
    int64_t v8 = v3;
    if ((v1 & 0x8000000000000000) == 0) {
      break;
    }
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_32;
    }
    sub_100029C7C(0, (unint64_t *)&qword_1000F53D8);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v11 = v23;
    swift_unknownObjectRelease();
    if (!v23) {
      goto LABEL_32;
    }
LABEL_31:
    id v15 = [v11 objectType];

    if (v15 == (id)2) {
      goto LABEL_32;
    }
  }
  if (v4)
  {
    unint64_t v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v10 = v9 | (v3 << 6);
LABEL_30:
    id v11 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v11) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  int64_t v12 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v12 >= v16) {
      goto LABEL_32;
    }
    unint64_t v13 = *(void *)(v17 + 8 * v12);
    ++v3;
    if (!v13)
    {
      int64_t v3 = v8 + 2;
      if (v8 + 2 >= v16) {
        goto LABEL_32;
      }
      unint64_t v13 = *(void *)(v17 + 8 * v3);
      if (!v13)
      {
        int64_t v3 = v8 + 3;
        if (v8 + 3 >= v16) {
          goto LABEL_32;
        }
        unint64_t v13 = *(void *)(v17 + 8 * v3);
        if (!v13)
        {
          int64_t v3 = v8 + 4;
          if (v8 + 4 >= v16) {
            goto LABEL_32;
          }
          unint64_t v13 = *(void *)(v17 + 8 * v3);
          if (!v13)
          {
            int64_t v3 = v8 + 5;
            if (v8 + 5 >= v16) {
              goto LABEL_32;
            }
            unint64_t v13 = *(void *)(v17 + 8 * v3);
            if (!v13)
            {
              int64_t v14 = v8 + 6;
              while (v14 < v16)
              {
                unint64_t v13 = *(void *)(v17 + 8 * v14++);
                if (v13)
                {
                  int64_t v3 = v14 - 1;
                  goto LABEL_29;
                }
              }
LABEL_32:
              sub_100047C40();
              return;
            }
          }
        }
      }
    }
LABEL_29:
    unint64_t v4 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v3 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

void sub_10009E21C(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_100029C7C(0, (unint64_t *)&qword_1000F53D8);
    sub_1000A1460();
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v18;
    uint64_t v17 = v19;
    uint64_t v2 = v20;
    int64_t v3 = v21;
    unint64_t v4 = v22;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v3 = 0;
  }
  int64_t v16 = (unint64_t)(v2 + 64) >> 6;
  while (1)
  {
    int64_t v8 = v3;
    if ((v1 & 0x8000000000000000) == 0) {
      break;
    }
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_32;
    }
    sub_100029C7C(0, (unint64_t *)&qword_1000F53D8);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v11 = v23;
    swift_unknownObjectRelease();
    if (!v23) {
      goto LABEL_32;
    }
LABEL_31:
    id v15 = [v11 objectType];

    if (!v15) {
      goto LABEL_32;
    }
  }
  if (v4)
  {
    unint64_t v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v10 = v9 | (v3 << 6);
LABEL_30:
    id v11 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v11) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  int64_t v12 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v12 >= v16) {
      goto LABEL_32;
    }
    unint64_t v13 = *(void *)(v17 + 8 * v12);
    ++v3;
    if (!v13)
    {
      int64_t v3 = v8 + 2;
      if (v8 + 2 >= v16) {
        goto LABEL_32;
      }
      unint64_t v13 = *(void *)(v17 + 8 * v3);
      if (!v13)
      {
        int64_t v3 = v8 + 3;
        if (v8 + 3 >= v16) {
          goto LABEL_32;
        }
        unint64_t v13 = *(void *)(v17 + 8 * v3);
        if (!v13)
        {
          int64_t v3 = v8 + 4;
          if (v8 + 4 >= v16) {
            goto LABEL_32;
          }
          unint64_t v13 = *(void *)(v17 + 8 * v3);
          if (!v13)
          {
            int64_t v3 = v8 + 5;
            if (v8 + 5 >= v16) {
              goto LABEL_32;
            }
            unint64_t v13 = *(void *)(v17 + 8 * v3);
            if (!v13)
            {
              int64_t v14 = v8 + 6;
              while (v14 < v16)
              {
                unint64_t v13 = *(void *)(v17 + 8 * v14++);
                if (v13)
                {
                  int64_t v3 = v14 - 1;
                  goto LABEL_29;
                }
              }
LABEL_32:
              sub_100047C40();
              return;
            }
          }
        }
      }
    }
LABEL_29:
    unint64_t v4 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v3 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

uint64_t sub_10009E4FC()
{
  return sub_10006FD64();
}

uint64_t sub_10009E520(uint64_t a1)
{
  uint64_t v2 = sub_100025A08(&qword_1000F5130);
  __chkstk_darwin(v2 - 8);
  sub_10001888C();
  uint64_t v5 = v4 - v3;
  sub_10000741C(a1, v4 - v3);
  return sub_10006FD78(v5);
}

void sub_10009E5A8()
{
  sub_10002066C();
  uint64_t v0 = type metadata accessor for RootNavigationDestination();
  sub_100025A64();
  uint64_t v2 = v1;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (id *)((char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  int64_t v8 = (char *)v18 - v7;
  uint64_t v9 = dispatch thunk of SidebarSection.destinations.getter();
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    v18[0] = v2;
    v18[1] = v9;
    unint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v2 + 16);
    uint64_t v11 = v2 + 16;
    int64_t v12 = v13;
    unint64_t v14 = v9 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    int v20 = enum case for RootNavigationDestination.folder(_:);
    uint64_t v19 = *(void *)(v11 + 56);
    while (1)
    {
      v12(v8, v14, v0);
      v12((char *)v6, (unint64_t)v8, v0);
      int v15 = (*(uint64_t (**)(id *, uint64_t))(v11 + 72))(v6, v0);
      if (v15 == v20) {
        break;
      }
      int64_t v16 = *(void (**)(void))(v11 - 8);
      sub_100018918();
      v16();
      sub_100018918();
      v16();
      v14 += v19;
      if (!--v10) {
        goto LABEL_5;
      }
    }
    (*(void (**)(id *, uint64_t))(v18[0] + 96))(v6, v0);

    sub_100018918();
    v17();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
  }
  sub_10001885C();
}

id sub_10009E774()
{
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v1 = [(id)swift_getObjCClassFromMetadata() systemImageNamed:v0];

  return v1;
}

id sub_10009E7D8()
{
  return *(id *)(v0 + OBJC_IVAR___WFSidebarViewController_database);
}

uint64_t sub_10009E7E8()
{
  return swift_unknownObjectWeakLoadStrong();
}

char *sub_10009E82C()
{
  uint64_t v1 = OBJC_IVAR___WFSidebarViewController____lazy_storage___toolbarViewController;
  uint64_t v2 = *(char **)(v0 + OBJC_IVAR___WFSidebarViewController____lazy_storage___toolbarViewController);
  uint64_t v3 = v2;
  if (v2 == (char *)1)
  {
    uint64_t v3 = sub_10009E89C();
    uint64_t v4 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v3;
    uint64_t v5 = v3;
    sub_100026E90(v4);
  }
  sub_100026E80(v2);
  return v3;
}

char *sub_10009E89C()
{
  uint64_t v0 = type metadata accessor for SidebarStyle();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for SidebarStyle.column(_:), v0);
  char v4 = static SidebarStyle.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t result = 0;
  if (v4)
  {
    sub_100025A08(&qword_1000F5200);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1000BAC10;
    sub_10009EA1C();
    uint64_t v8 = v7;
    uint64_t v10 = v9;

    *(void *)(v6 + 32) = v8;
    uint64_t v15 = v6;
    specialized Array._endMutation()();
    uint64_t v12 = v15;
    id v13 = objc_allocWithZone((Class)type metadata accessor for FloatingToolbarViewController());
    return sub_10000ABB0(v12, 1);
  }
  return result;
}

void sub_10009EA1C()
{
  sub_10002066C();
  uint64_t v1 = v0;
  uint64_t v2 = &v0[OBJC_IVAR___WFSidebarViewController____lazy_storage___barButtons];
  uint64_t v3 = *(void **)&v0[OBJC_IVAR___WFSidebarViewController____lazy_storage___barButtons];
  char v4 = *(void **)&v0[OBJC_IVAR___WFSidebarViewController____lazy_storage___barButtons + 8];
  uint64_t v5 = (void *)*((void *)v2 + 2);
  if (!v3)
  {
    uint64_t v6 = sub_10009EDB8(v1);
    uint64_t v8 = v7;
    uint64_t v10 = v9;
    id v11 = *(void **)v2;
    uint64_t v12 = (void *)*((void *)v2 + 1);
    id v13 = (void *)*((void *)v2 + 2);
    *(void *)uint64_t v2 = v6;
    *((void *)v2 + 1) = v7;
    *((void *)v2 + 2) = v9;
    v6;
    v8;
    v10;
    sub_1000A1390(v11, v12, v13);
  }
  sub_1000A13E0(v3, v4, v5);
  sub_10001885C();
}

const char *sub_10009EAD4()
{
  id v1 = objc_allocWithZone(v0);
  return sub_10009EB30();
}

const char *sub_10009EB30()
{
  uint64_t v5 = (objc_class *)sub_100022020();
  swift_unknownObjectWeakInit();
  v1[OBJC_IVAR___WFSidebarViewController_animateDataReload] = 2;
  *(void *)&v1[OBJC_IVAR___WFSidebarViewController____lazy_storage___toolbarViewController] = 1;
  uint64_t v6 = &v1[OBJC_IVAR___WFSidebarViewController____lazy_storage___barButtons];
  v6[1] = 0;
  uint64_t v6[2] = 0;
  *uint64_t v6 = 0;
  *(void *)&v1[OBJC_IVAR___WFSidebarViewController____lazy_storage___sidebarDataSource] = 0;
  type metadata accessor for SidebarStyle();
  sub_10002A104();
  uint64_t v8 = v7;
  sub_100025B3C();
  v9();
  *(void *)&v1[OBJC_IVAR___WFSidebarViewController_database] = v3;
  *(void *)&v1[OBJC_IVAR___WFSidebarViewController_sections] = v4;
  v1[OBJC_IVAR___WFSidebarViewController_isCompact] = 0;
  *(void *)&v1[OBJC_IVAR___WFSidebarViewController_shortcutMoveService] = v1;
  v26.receiver = v1;
  v26.super_class = v5;
  id v10 = v3;
  uint64_t v11 = swift_retain();
  id v19 = sub_100022548(v11, v12, v13, v14, v15, v16, v17, v18, v26);
  sub_100022FA4();
  NSString v20 = sub_10001C158();
  id v21 = sub_1000248B0(v5);

  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = v23;

  sub_1000287FC(v22, v24, "initWithNibName:bundle:", (SEL *)&selRef_setTitle_);
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0, v2);
  return "initWithNibName:bundle:";
}

void sub_10009ECE8()
{
  swift_unknownObjectWeakInit();
  v0[OBJC_IVAR___WFSidebarViewController_animateDataReload] = 2;
  *(void *)&v0[OBJC_IVAR___WFSidebarViewController____lazy_storage___toolbarViewController] = 1;
  id v1 = &v0[OBJC_IVAR___WFSidebarViewController____lazy_storage___barButtons];
  v1[1] = 0;
  v1[2] = 0;
  *id v1 = 0;
  *(void *)&v0[OBJC_IVAR___WFSidebarViewController____lazy_storage___sidebarDataSource] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void *sub_10009EDB8(void *a1)
{
  swift_getObjectType();
  id v2 = objc_allocWithZone((Class)UIBarButtonItem);
  id v3 = a1;
  sub_1000071E0();
  uint64_t v5 = v4;
  sub_100063E4C(0xD000000000000013, 0x80000001000C28A0, v4);
  sub_100029C7C(0, &qword_1000F5230);
  sub_10009E774();
  id v6 = objc_allocWithZone((Class)UIBarButtonItem);
  id v7 = v3;
  sub_1000A123C();
  uint64_t v9 = v8;
  sub_100063E4C(0xD000000000000018, 0x80000001000C28E0, v8);
  id v10 = v9;
  NSString v11 = String._bridgeToObjectiveC()();
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = sub_1000248B0(v11);

  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  sub_1000287FC(v14, v16, v10, (SEL *)&selRef_setAccessibilityLabel_);
  objc_allocWithZone((Class)UIBarButtonItem);
  id v17 = v7;
  sub_1000071E0();
  sub_100063E4C(0xD000000000000013, 0x80000001000C2900, v18);
  return v5;
}

void sub_10009F000()
{
  id v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_100025A08(&qword_1000F5130);
  sub_10001C094();
  uint64_t v4 = __chkstk_darwin(v3);
  id v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v36 - v7;
  uint64_t v9 = type metadata accessor for SidebarView(0);
  __chkstk_darwin(v9);
  sub_10001888C();
  NSString v12 = (uint64_t *)(v11 - v10);
  v36.receiver = v1;
  v36.super_class = ObjectType;
  [super viewDidLoad];
  sub_100006C28();
  type metadata accessor for SidebarView.DataSource(0);
  sub_10002B604(&qword_1000F68D0, (void (*)(uint64_t))type metadata accessor for SidebarView.DataSource);
  *NSString v12 = ObservedObject.init(wrappedValue:)();
  v12[1] = v13;
  uint64_t v14 = type metadata accessor for RootNavigationDestination();
  sub_100021594((uint64_t)v8, 1, 1, v14);
  sub_10000741C((uint64_t)v8, (uint64_t)v6);
  State.init(wrappedValue:)();
  sub_100012400((uint64_t)v8, &qword_1000F5130);
  id v15 = objc_allocWithZone((Class)sub_100025A08(&qword_1000F79F0));
  uint64_t v16 = (void *)UIHostingController.init(rootView:)();
  [v1 addChildViewController:v16];
  id v17 = [v16 view];
  if (!v17)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v18 = v17;
  [v17 setAutoresizingMask:18];

  id v19 = [v16 view];
  if (!v19)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  NSString v20 = v19;
  id v21 = [v1 view];
  if (!v21)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v22 = v21;
  [v21 frame];
  double v24 = v23;
  double v26 = v25;
  double v28 = v27;
  double v30 = v29;

  [v20 setFrame:v24, v26, v28, v30];
  id v31 = [v1 view];
  if (!v31)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v32 = v31;
  id v33 = [v16 view];
  if (v33)
  {
    uint64_t v34 = v33;
    [v32 addSubview:v33];

    [v16 didMoveToParentViewController:v1];
    sub_10009F398();
    sub_10009F3FC();
    sub_10009F530();
    id v35 = [self defaultCenter];
    [v35 addObserver:v1 selector:"keyboardWillChange:" name:WFKeyboardWillChangeNotification object:0];

    return;
  }
LABEL_11:
  __break(1u);
}

void sub_10009F398()
{
  id v1 = sub_10009E82C();
  if (v1)
  {
    id v2 = v1;
    sub_1000125E4(v0);
  }
}

void sub_10009F3FC()
{
  uint64_t v1 = sub_1000A0360();
  uint64_t v3 = v2;
  id v4 = [v0 navigationItem];
  if (v1)
  {
    sub_100029C7C(0, (unint64_t *)&unk_1000F7100);
    v5.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v5.super.Class isa = 0;
  }
  [v4 setLeftBarButtonItems:v5.super.isa];

  id v6 = [v0 navigationItem];
  if (v3)
  {
    sub_100029C7C(0, (unint64_t *)&unk_1000F7100);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    Class isa = 0;
  }
  [v6 setRightBarButtonItems:isa];
}

uint64_t sub_10009F530()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___WFSidebarViewController_sections);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = v1 + 40;
    do
    {
      swift_unknownObjectRetain();
      sub_10009FDB4();
      swift_unknownObjectRelease();
      v3 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }

  return sub_10009FE04();
}

id sub_10009F618()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v2 = [self defaultCenter];
  [v2 removeObserver:v0];

  v4.receiver = v0;
  v4.super_class = ObjectType;
  return [super dealloc];
}

uint64_t sub_10009F7A4()
{
  return type metadata accessor for SidebarViewController();
}

id sub_10009F7AC(char a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)swift_getObjectType();
  [super viewWillAppear:a1 & 1];
  return sub_10009F7FC(1);
}

id sub_10009F7FC(char a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___WFSidebarViewController_sections);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = v3 + 40;
    do
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      dispatch thunk of SidebarSection.observeChanges.setter();
      swift_unknownObjectRelease();
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  id v6 = *(void **)(v1 + OBJC_IVAR___WFSidebarViewController_database);
  uint64_t v7 = &selRef_addObjectObserver_;
  if ((a1 & 1) == 0) {
    uint64_t v7 = &selRef_removeObjectObserver_;
  }
  uint64_t v8 = *v7;

  return [v6 v8:v1];
}

uint64_t sub_10009F92C(char a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)swift_getObjectType();
  [super viewDidAppear:a1 & 1];
  return sub_10009F97C();
}

uint64_t sub_10009F97C()
{
  uint64_t v0 = sub_10009E82C();
  if (v0)
  {
    uint64_t v1 = v0;
    [*(id *)&v0[OBJC_IVAR____TtC9Shortcuts29FloatingToolbarViewController_toolbar] frame];
    CGRectGetHeight(v4);
  }
  sub_100006C28();
  sub_10007078C();

  return swift_release();
}

id sub_10009FA50(uint64_t a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)swift_getObjectType();
  [super didMoveToParentViewController:a1];
  if (!a1) {
    return sub_10009F7FC(0);
  }
  return result;
}

void sub_10009FB10(void *a1)
{
  if ([a1 object])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v13, 0, sizeof(v13));
  }
  sub_1000465D4((uint64_t)v13, (uint64_t)v14);
  if (v15)
  {
    sub_100029C7C(0, &qword_1000F53C0);
    if (swift_dynamicCast())
    {
      id v2 = [v1 view];
      if (v2)
      {
        uint64_t v3 = v2;
        [v12 keyboardFrameInView:v2];
        CGFloat v5 = v4;
        CGFloat v7 = v6;
        CGFloat v9 = v8;
        CGFloat v11 = v10;

        if ([v12 isVisible])
        {
          v16.origin.x = v5;
          v16.origin.y = v7;
          v16.size.width = v9;
          v16.size.height = v11;
          CGRectGetHeight(v16);
        }
        sub_10009F97C();
      }
      else
      {
        __break(1u);
      }
    }
  }
  else
  {
    sub_100012400((uint64_t)v14, &qword_1000F7670);
  }
}

void sub_10009FCD4()
{
  sub_10009FDB4();
  sub_100006C28();
  type metadata accessor for SidebarView.DataSource(0);
  sub_10002B604(&qword_1000F68D0, (void (*)(uint64_t))type metadata accessor for SidebarView.DataSource);
  ObservableObject<>.objectWillChange.getter();
  swift_release();
  ObservableObjectPublisher.send()();
  swift_release();
  sub_10009FE04();
  sub_100021F8C();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100034D60();
  }
}

void sub_10009FDB4()
{
  if (sub_1000A00C8())
  {
    sub_10009F3FC();
  }
  else
  {
    sub_1000A016C(0);
  }
}

uint64_t sub_10009FE04()
{
  uint64_t v0 = sub_100025A08(&qword_1000F5130);
  __chkstk_darwin(v0 - 8);
  id v2 = &v16[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = type metadata accessor for RootNavigationDestination();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  double v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for SidebarStyle();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  double v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 104))(v10, enum case for SidebarStyle.column(_:), v7);
  char v11 = static SidebarStyle.== infix(_:_:)();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  if (v11)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v14 = (void *)Strong;
      uint64_t v15 = Strong + OBJC_IVAR___WFMainViewController_currentDestination;
      swift_beginAccess();
      sub_10000741C(v15, (uint64_t)v2);

      if (sub_1000225EC((uint64_t)v2, 1, v3) != 1)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 32))(v6, v2, v3);
        sub_100011E20();
        return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
      }
    }
    else
    {
      sub_100021594((uint64_t)v2, 1, 1, v3);
    }
    return sub_100012400((uint64_t)v2, &qword_1000F5130);
  }
  return result;
}

uint64_t sub_1000A00C8()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___WFSidebarViewController_sections);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = v2 - 1;
    uint64_t v4 = v1 + 40;
    do
    {
      uint64_t v5 = v3;
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_10009E5A8();
      LOBYTE(v2) = v6;
      swift_unknownObjectRelease();
      if (v2) {
        break;
      }
      uint64_t v3 = v5 - 1;
      v4 += 16;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  return v2 & 1;
}

void sub_1000A016C(char a1)
{
  [v1 setEditing:a1 & 1 animated:1];
  static Animation.default.getter();
  withAnimation<A>(_:_:)();
  swift_release();
  sub_10009F3FC();
}

uint64_t sub_1000A0248(uint64_t a1, unsigned int *a2)
{
  uint64_t v4 = type metadata accessor for EditMode();
  sub_100025A64();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1000074A4();
  sub_100006C28();
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v2, *a2, v4);
  sub_100070424(v2);
  return swift_release();
}

uint64_t sub_1000A0360()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SidebarStyle();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v6 = [v1 isEditing];
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for SidebarStyle.compact(_:), v2);
  char v7 = static SidebarStyle.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    sub_100025A08(&qword_1000F5200);
    uint64_t v8 = swift_allocObject();
    long long v37 = xmmword_1000BAC10;
    *(_OWORD *)(v8 + 16) = xmmword_1000BAC10;
    sub_10009EA1C();
    double v10 = v9;
    uint64_t v12 = v11;

    *(void *)(v8 + 32) = v12;
    if (v7)
    {
      uint64_t v38 = v8;
      specialized Array._endMutation()();
      uint64_t v14 = v38;
      uint64_t v15 = swift_allocObject();
      uint64_t v16 = v15;
      long long v17 = v37;
LABEL_13:
      *(_OWORD *)(v15 + 16) = v17;
      sub_10009EA1C();
      uint64_t v32 = v31;
      uint64_t v34 = v33;

      *(void *)(v16 + 32) = v32;
      uint64_t v38 = v16;
      specialized Array._endMutation()();
      return v14;
    }
    uint64_t v38 = v8;
  }
  else
  {
    char v18 = sub_1000A00C8();
    if (v7)
    {
      if (v18)
      {
        sub_100025A08(&qword_1000F5200);
        uint64_t v19 = swift_allocObject();
        *(_OWORD *)(v19 + 16) = xmmword_1000BAC10;
        sub_10009EA1C();
        uint64_t v21 = v20;
        double v23 = v22;

        *(void *)(v19 + 32) = v21;
        uint64_t v38 = v19;
        specialized Array._endMutation()();
        uint64_t v14 = v38;
      }
      else
      {
        uint64_t v14 = 0;
      }
      sub_100025A08(&qword_1000F5200);
      uint64_t v15 = swift_allocObject();
      uint64_t v16 = v15;
      long long v17 = xmmword_1000BAC10;
      goto LABEL_13;
    }
    if ((v18 & 1) == 0) {
      return 0;
    }
    sub_100025A08(&qword_1000F5200);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1000BAC10;
    sub_10009EA1C();
    uint64_t v27 = v26;
    double v29 = v28;

    *(void *)(v25 + 32) = v27;
    uint64_t v38 = v25;
  }
  specialized Array._endMutation()();
  return 0;
}

void sub_1000A0634()
{
  swift_getObjectType();
  sub_10002B604(&qword_1000F5070, (void (*)(uint64_t))type metadata accessor for SidebarViewController);

  RootViewSidebar.createNewFolder()();
}

void sub_1000A06F0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100037068();
  }
}

void sub_1000A07B8()
{
}

void (*sub_1000A0818(void *a1))(id **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR___WFSidebarViewController_rootView;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  v3[3] = swift_unknownObjectWeakLoadStrong();
  return sub_1000A089C;
}

void sub_1000A089C(id **a1, char a2)
{
  uint64_t v3 = *a1;
  id v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if (a2)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();
  }

  free(v3);
}

void sub_1000A0920()
{
  sub_10002066C();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  sub_100025A64();
  uint64_t v28 = v10;
  __chkstk_darwin(v11);
  sub_10001888C();
  uint64_t v14 = v13 - v12;
  uint64_t v27 = type metadata accessor for DispatchQoS();
  sub_100025A64();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  sub_1000074A4();
  sub_10009DF38(v8);
  char v19 = v18;
  sub_10009E21C(v8);
  char v21 = v20;
  sub_10009E21C(v6);
  LOBYTE(v6) = v22;
  sub_10009E21C(v4);
  if (v6 & 1) != 0 || (v21 & 1) != 0 || (v19)
  {
    sub_100029C7C(0, &qword_1000F52B0);
    double v23 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v2;
    v29[4] = sub_1000A14F8;
    v29[5] = v24;
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 1107296256;
    void v29[2] = sub_10000E51C;
    v29[3] = &unk_1000E78F8;
    uint64_t v25 = _Block_copy(v29);
    id v26 = v2;
    swift_release();
    static DispatchQoS.unspecified.getter();
    v29[0] = _swiftEmptyArrayStorage;
    sub_10002B604((unint64_t *)&unk_1000F7860, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100025A08(&qword_1000F52B8);
    sub_1000A1500();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v25);

    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v14, v9);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v1, v27);
  }
  sub_10001885C();
}

uint64_t sub_1000A0BBC()
{
  sub_100006C28();
  type metadata accessor for SidebarView.DataSource(0);
  sub_10002B604(&qword_1000F68D0, (void (*)(uint64_t))type metadata accessor for SidebarView.DataSource);
  ObservableObject<>.objectWillChange.getter();
  swift_release();
  ObservableObjectPublisher.send()();

  return swift_release();
}

uint64_t sub_1000A0D4C()
{
  return sub_10002B604(&qword_1000F50F8, (void (*)(uint64_t))type metadata accessor for MainViewController);
}

void sub_1000A0D94()
{
  sub_100025F9C();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    type metadata accessor for MainViewController(0);
    sub_10002B604(&qword_1000F50F8, (void (*)(uint64_t))type metadata accessor for MainViewController);
    RootView.navigate(to:)();
  }
}

void sub_1000A0E34(Swift::OpaquePointer a1, char a2)
{
  sub_100025F9C();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    type metadata accessor for MainViewController(0);
    sub_10002B604(&qword_1000F50F8, (void (*)(uint64_t))type metadata accessor for MainViewController);
    RootView.deleteCollections(_:keepShortcuts:)(a1, a2 & 1);
  }
}

void sub_1000A0EE0(Swift::OpaquePointer a1@<X0>, Swift::Int a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  sub_100021F8C();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = (void *)Strong;
    type metadata accessor for MainViewController(0);
    sub_10002B604(&qword_1000F50F8, (void (*)(uint64_t))type metadata accessor for MainViewController);
    RootView.deleteAlertStrings(collections:shortcutsCount:exactCount:)(&v18, a1, a2, a3 & 1);
    uint64_t countAndFlagsBits = v18.title._countAndFlagsBits;
    object = v18.title._object;
    uint64_t v12 = v18.message._countAndFlagsBits;
    uint64_t v13 = v18.message._object;
    uint64_t v14 = v18.deleteTitle._countAndFlagsBits;
    uint64_t v15 = v18.deleteTitle._object;
    uint64_t v16 = v18.keepTitle._countAndFlagsBits;
    uint64_t v17 = v18.keepTitle._object;
  }
  else
  {
    uint64_t countAndFlagsBits = 0;
    object = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
  }
  *a4 = countAndFlagsBits;
  a4[1] = (uint64_t)object;
  a4[2] = v12;
  a4[3] = (uint64_t)v13;
  a4[4] = v14;
  a4[5] = (uint64_t)v15;
  a4[6] = v16;
  a4[7] = (uint64_t)v17;
}

void sub_1000A1000()
{
  sub_100025F9C();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100037068();
  }
}

void sub_1000A1050()
{
  uint64_t v1 = type metadata accessor for EditMode();
  sub_100025A64();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_10001888C();
  uint64_t v7 = v6 - v5;
  if (([v0 isEditing] & 1) == 0)
  {
    uint64_t v8 = sub_1000249C8();
    v9(v8);
    char v10 = static EditMode.== infix(_:_:)();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v1);
    if (v10)
    {
      char v11 = 1;
LABEL_7:
      sub_1000A016C(v11);
      return;
    }
  }
  if ([v0 isEditing])
  {
    uint64_t v12 = sub_1000249C8();
    v13(v12);
    char v14 = static EditMode.== infix(_:_:)();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v1);
    if (v14)
    {
      char v11 = 0;
      goto LABEL_7;
    }
  }
}

void sub_1000A11B8()
{
  sub_100021F8C();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = (void *)sub_100031964();

    if (v2)
    {
      sub_100021E68();

      sub_1000238D0();
      swift_release();
    }
  }
}

void sub_1000A123C()
{
  sub_10002066C();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = v1[3];
  if (v9)
  {
    uint64_t v10 = (uint64_t)v1;
    sub_10002A498(v1, v1[3]);
    sub_100025A64();
    uint64_t v12 = v11;
    __chkstk_darwin(v13);
    sub_10001888C();
    uint64_t v16 = v15 - v14;
    (*(void (**)(uint64_t))(v12 + 16))(v15 - v14);
    uint64_t v17 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v9);
    sub_1000149BC(v10);
  }
  else
  {
    uint64_t v17 = 0;
  }
  [v2 initWithImage:v8 style:v6 target:v17 action:v4];
  swift_unknownObjectRelease();

  sub_10001885C();
}

uint64_t sub_1000A1368()
{
  return sub_10006FD64();
}

void sub_1000A1390(void *a1, void *a2, void *a3)
{
  if (a1)
  {
  }
}

id sub_1000A13E0(id result, void *a2, void *a3)
{
  if (result)
  {
    id v4 = result;
    id v5 = a2;
    return a3;
  }
  return result;
}

void sub_1000A1430(uint64_t a1, uint64_t a2, void *a3)
{
}

uint64_t sub_1000A143C()
{
  return sub_1000A0248(*(void *)(v0 + 16), (unsigned int *)&enum case for EditMode.inactive(_:));
}

unint64_t sub_1000A1460()
{
  unint64_t result = qword_1000F53E0;
  if (!qword_1000F53E0)
  {
    sub_100029C7C(255, (unint64_t *)&qword_1000F53D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F53E0);
  }
  return result;
}

uint64_t sub_1000A14C0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000A14F8()
{
  return sub_1000A0BBC();
}

unint64_t sub_1000A1500()
{
  unint64_t result = qword_1000F7870;
  if (!qword_1000F7870)
  {
    sub_10001E8D0(&qword_1000F52B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F7870);
  }
  return result;
}

uint64_t sub_1000A1554()
{
  return sub_1000A0248(*(void *)(v0 + 16), (unsigned int *)&enum case for EditMode.active(_:));
}

void *sub_1000A1578@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  return sub_100017F94(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1000F5F90, &qword_1000F5F98);
}

uint64_t AppShortcutChiclet.init(section:isExpanded:containerWidth:chicletsPerRow:action:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  uint64_t v34 = type metadata accessor for TopHitCollectionViewStyle();
  sub_100022284();
  uint64_t v32 = v13;
  __chkstk_darwin(v14);
  sub_10001888C();
  uint64_t v17 = v16 - v15;
  uint64_t v35 = type metadata accessor for TopHitViewColorScheme();
  sub_100022284();
  uint64_t v33 = v18;
  __chkstk_darwin(v19);
  sub_10001888C();
  uint64_t v22 = v21 - v20;
  double v23 = (int *)type metadata accessor for AppShortcutChiclet(0);
  uint64_t v24 = (uint64_t *)(a6 + v23[10]);
  *uint64_t v24 = swift_getKeyPath();
  sub_100025A08(&qword_1000F8410);
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = (uint64_t *)(a6 + v23[11]);
  uint64_t *v25 = swift_getKeyPath();
  sub_100025A08(&qword_1000F4700);
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = type metadata accessor for AutoShortcutAppSection();
  sub_1000222C8();
  uint64_t v28 = v27;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(a6, a1, v26);
  *(unsigned char *)(a6 + v23[5]) = a2;
  *(double *)(a6 + v23[6]) = a7;
  *(void *)(a6 + v23[9]) = a3;
  double v29 = (void *)(a6 + v23[7]);
  *double v29 = a4;
  v29[1] = a5;
  swift_retain();
  AutoShortcutAppSection.bundleIdentifier.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v32 + 104))(v17, enum case for TopHitCollectionViewStyle.library(_:), v34);
  TopHitViewColorScheme.init(bundleIdentifier:style:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(a1, v26);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(a6 + v23[8], v22, v35);
}

uint64_t sub_1000A1844@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ColorScheme();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  uint64_t v6 = Image.init(_internalSystemName:)();
  type metadata accessor for AppShortcutChiclet(0);
  uint64_t v7 = (void *)TopHitViewColorScheme.sectionIconForegroundColor.getter();
  sub_1000A2A70(&qword_1000F8410, (void (*)(void))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, (uint64_t)v5);
  WFColor.luminanceAdjustedColor(in:)();

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v8 = Color.init(_:)();
  uint64_t result = swift_getKeyPath();
  *a1 = v6;
  a1[1] = result;
  a1[2] = v8;
  return result;
}

uint64_t sub_1000A19D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppShortcutChiclet(0);
  return (*(uint64_t (**)(uint64_t))(a1 + *(int *)(v4 + 28)))(a2);
}

void *initializeBufferWithCopyOfBuffer for AppShortcutChiclet(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (void *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for AutoShortcutAppSection();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    *(void *)((char *)a1 + v8) = *(void *)((char *)a2 + v8);
    uint64_t v9 = a3[7];
    uint64_t v10 = a3[8];
    uint64_t v11 = (void *)((char *)a1 + v9);
    uint64_t v12 = (void *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v13;
    uint64_t v14 = (char *)a1 + v10;
    uint64_t v15 = (char *)a2 + v10;
    uint64_t v16 = type metadata accessor for TopHitViewColorScheme();
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_retain();
    v17(v14, v15, v16);
    uint64_t v18 = a3[10];
    *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
    uint64_t v19 = (void *)((char *)a1 + v18);
    uint64_t v20 = (void *)((char *)a2 + v18);
    sub_100025A08(&qword_1000F8410);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *uint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = a3[11];
    uint64_t v24 = (void *)((char *)a1 + v23);
    uint64_t v25 = (void *)((char *)a2 + v23);
    sub_100025A08(&qword_1000F4700);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = type metadata accessor for UserInterfaceSizeClass();
      if (sub_1000225EC((uint64_t)v25, 1, v26))
      {
        uint64_t v27 = sub_100025A08(&qword_1000F4890);
        memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
        sub_100021594((uint64_t)v24, 0, 1, v26);
      }
    }
    else
    {
      *uint64_t v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t assignWithCopy for AppShortcutChiclet(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for AutoShortcutAppSection();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v7 = a3[7];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  uint64_t v11 = a3[8];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for TopHitViewColorScheme();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  if (a1 != a2)
  {
    uint64_t v15 = a3[10];
    uint64_t v16 = (void *)(a1 + v15);
    uint64_t v17 = (void *)(a2 + v15);
    sub_100025E44(a1 + v15, &qword_1000F8410);
    sub_100025A08(&qword_1000F8410);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      void *v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = a3[11];
    uint64_t v20 = (void *)(a1 + v19);
    uint64_t v21 = (void *)(a2 + v19);
    sub_100025E44(a1 + v19, &qword_1000F4700);
    sub_100025A08(&qword_1000F4700);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = type metadata accessor for UserInterfaceSizeClass();
      if (sub_1000225EC((uint64_t)v21, 1, v22))
      {
        uint64_t v23 = sub_100025A08(&qword_1000F4890);
        memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
        sub_100021594((uint64_t)v20, 0, 1, v22);
      }
    }
    else
    {
      *uint64_t v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for AppShortcutChiclet(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for AutoShortcutAppSection();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for TopHitViewColorScheme();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_100025A08(&qword_1000F8410);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  uint64_t v17 = a3[11];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  uint64_t v20 = sub_100025A08(&qword_1000F4700);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = type metadata accessor for UserInterfaceSizeClass();
    if (sub_1000225EC((uint64_t)v19, 1, v21))
    {
      uint64_t v22 = sub_100025A08(&qword_1000F4890);
      memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
      sub_100021594((uint64_t)v18, 0, 1, v21);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for AppShortcutChiclet(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for AutoShortcutAppSection();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  swift_release();
  uint64_t v8 = a3[8];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for TopHitViewColorScheme();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  if (a1 != a2)
  {
    uint64_t v12 = a3[10];
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (const void *)(a2 + v12);
    sub_100025E44(a1 + v12, &qword_1000F8410);
    uint64_t v15 = sub_100025A08(&qword_1000F8410);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    uint64_t v17 = a3[11];
    uint64_t v18 = (void *)(a1 + v17);
    uint64_t v19 = (const void *)(a2 + v17);
    sub_100025E44(a1 + v17, &qword_1000F4700);
    uint64_t v20 = sub_100025A08(&qword_1000F4700);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = type metadata accessor for UserInterfaceSizeClass();
      if (sub_1000225EC((uint64_t)v19, 1, v21))
      {
        uint64_t v22 = sub_100025A08(&qword_1000F4890);
        memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
        sub_100021594((uint64_t)v18, 0, 1, v21);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for AppShortcutChiclet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000A24F8);
}

uint64_t sub_1000A24F8(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for AutoShortcutAppSection();
  sub_1000222C8();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_13:
    return sub_1000225EC(v9, a2, v8);
  }
  if (a2 != 0x7FFFFFFF)
  {
    type metadata accessor for TopHitViewColorScheme();
    sub_1000222C8();
    if (*(_DWORD *)(v13 + 84) == a2)
    {
      uint64_t v8 = v12;
      uint64_t v14 = a3[8];
    }
    else
    {
      sub_100025A08(&qword_1000F7A08);
      sub_1000222C8();
      if (*(_DWORD *)(v16 + 84) == a2)
      {
        uint64_t v8 = v15;
        uint64_t v14 = a3[10];
      }
      else
      {
        uint64_t v8 = sub_100025A08(&qword_1000F7A10);
        uint64_t v14 = a3[11];
      }
    }
    uint64_t v9 = a1 + v14;
    goto LABEL_13;
  }
  unint64_t v10 = *(void *)(a1 + a3[7]);
  if (v10 >= 0xFFFFFFFF) {
    LODWORD(v10) = -1;
  }
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for AppShortcutChiclet(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000A260C);
}

void sub_1000A260C()
{
  sub_1000249E4();
  type metadata accessor for AutoShortcutAppSection();
  sub_1000222C8();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v1;
  }
  else
  {
    if (v3 == 0x7FFFFFFF)
    {
      *(void *)(v1 + v2[7]) = (v0 - 1);
      return;
    }
    type metadata accessor for TopHitViewColorScheme();
    sub_1000222C8();
    if (*(_DWORD *)(v9 + 84) == v3)
    {
      uint64_t v6 = v8;
      uint64_t v10 = v2[8];
    }
    else
    {
      sub_100025A08(&qword_1000F7A08);
      sub_1000222C8();
      if (*(_DWORD *)(v12 + 84) == v3)
      {
        uint64_t v6 = v11;
        uint64_t v10 = v2[10];
      }
      else
      {
        uint64_t v6 = sub_100025A08(&qword_1000F7A10);
        uint64_t v10 = v2[11];
      }
    }
    uint64_t v7 = v1 + v10;
  }

  sub_100021594(v7, v0, v0, v6);
}

uint64_t *sub_1000A26FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v7 = type metadata accessor for AggregatedEntry();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(v6 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)v10;
    LOBYTE(v6) = v10[8];
    sub_10001EAA8(*(void *)v10, v6);
    *(void *)uint64_t v9 = v11;
    unsigned char v9[8] = v6;
  }
  return a1;
}

uint64_t sub_1000A27E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AggregatedEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  return a1;
}

uint64_t sub_1000A2870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AggregatedEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  LOBYTE(v9) = *((unsigned char *)v9 + 8);
  uint64_t v11 = *(void *)v8;
  char v12 = *(unsigned char *)(v8 + 8);
  *(void *)uint64_t v8 = v10;
  *(unsigned char *)(v8 + 8) = (_BYTE)v9;
  sub_10001EA04(v11, v12);
  return a1;
}

uint64_t sub_1000A2908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000A291C);
}

uint64_t sub_1000A291C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for AggregatedEntry();
  sub_1000222C8();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return sub_1000225EC(a1, a2, v6);
  }
  else
  {
    unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
    if (v9 > 1) {
      return (v9 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1000A29A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000A29BC);
}

void sub_1000A29BC()
{
  sub_1000249E4();
  type metadata accessor for AggregatedEntry();
  sub_1000222C8();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    sub_100021594(v1, v0, v0, v4);
  }
  else
  {
    *(unsigned char *)(v1 + *(int *)(v2 + 20) + 8) = -(char)v0;
  }
}

uint64_t sub_1000A2A38@<X0>(uint64_t a1@<X8>)
{
  return sub_1000A2A70(&qword_1000F7C98, (void (*)(void))&type metadata accessor for ContentSizeCategory, 0xD000000000000013, 0x80000001000C29D0, a1);
}

uint64_t sub_1000A2A70@<X0>(uint64_t *a1@<X0>, void (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = v5;
  uint64_t v12 = type metadata accessor for EnvironmentValues();
  sub_100022284();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_100021FC4();
  sub_100025A08(a1);
  sub_10001C094();
  __chkstk_darwin(v16);
  sub_10001888C();
  uint64_t v19 = v18 - v17;
  sub_100025DE8(v10, v18 - v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    a2(0);
    sub_10001C094();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 32))(a5, v19);
  }
  else
  {
    os_log_type_t v22 = static os_log_type_t.fault.getter();
    uint64_t v23 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v23, v22))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 136315138;
      sub_10002D53C(a3, a4, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v23, v22, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v24, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v6, v12);
  }
}

uint64_t sub_1000A2CD8()
{
  uint64_t v1 = type metadata accessor for AppShortcutChiclet(0);
  sub_100026224();
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v6 = *(void *)(v5 + 64);
  type metadata accessor for AutoShortcutAppSection();
  sub_10001C094();
  sub_100016618();
  v7();
  swift_release();
  type metadata accessor for TopHitViewColorScheme();
  sub_10001C094();
  sub_100016618();
  v8();
  sub_100025A08(&qword_1000F8410);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for ColorScheme();
    sub_10001C094();
    sub_100016618();
    v9();
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = v0 + v4 + *(int *)(v1 + 44);
  sub_100025A08(&qword_1000F4700);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for UserInterfaceSizeClass();
    if (!sub_1000225EC(v10, 1, v11))
    {
      sub_100016618();
      v12();
    }
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, v4 + v6, v3 | 7);
}

uint64_t sub_1000A2EB0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000A1844(a1);
}

unint64_t sub_1000A2EBC()
{
  unint64_t result = qword_1000F7C58;
  if (!qword_1000F7C58)
  {
    sub_10001E8D0(&qword_1000F7C50);
    sub_10001E88C(&qword_1000F6008, &qword_1000F6010);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F7C58);
  }
  return result;
}

unint64_t sub_1000A2F64()
{
  unint64_t result = qword_1000F7C60;
  if (!qword_1000F7C60)
  {
    sub_10001E8D0(&qword_1000F7BF8);
    sub_10001E88C(&qword_1000F7C68, &qword_1000F7BF0);
    sub_10001E88C(&qword_1000F6000, &qword_1000F82E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F7C60);
  }
  return result;
}

uint64_t sub_1000A3028@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000A3054@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000A3080()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_1000A30B0()
{
  type metadata accessor for AggregatedEntry();
  sub_10001C094();
  v1 += 8;
  uint64_t v2 = *(unsigned __int8 *)(v1 + 72);
  uint64_t v3 = ((v2 + 16) & ~v2) + *(void *)(v1 + 56);
  uint64_t v4 = v2 | 7;
  sub_100016618();
  v5();

  return _swift_deallocObject(v0, v3, v4);
}

uint64_t sub_1000A3134()
{
  uint64_t v1 = type metadata accessor for AppShortcutChiclet(0);
  sub_100026224();
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v21 = *(void *)(v5 + 64);
  uint64_t v6 = type metadata accessor for AggregatedEntry();
  sub_100022284();
  uint64_t v8 = v7;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = *(void *)(v10 + 64);
  type metadata accessor for AutoShortcutAppSection();
  sub_10001C094();
  sub_100016618();
  v12();
  swift_release();
  type metadata accessor for TopHitViewColorScheme();
  sub_10001C094();
  sub_100016618();
  v13();
  sub_100025A08(&qword_1000F8410);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for ColorScheme();
    sub_10001C094();
    sub_100016618();
    v14();
  }
  else
  {
    swift_release();
  }
  uint64_t v15 = v0 + v4 + *(int *)(v1 + 44);
  sub_100025A08(&qword_1000F4700);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = type metadata accessor for UserInterfaceSizeClass();
    if (!sub_1000225EC(v15, 1, v16))
    {
      sub_100016618();
      v17();
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v18 = (v4 + v21 + v9) & ~v9;
  uint64_t v19 = v18 + v11;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v18, v6);

  return _swift_deallocObject(v0, v19, v3 | v9 | 7);
}