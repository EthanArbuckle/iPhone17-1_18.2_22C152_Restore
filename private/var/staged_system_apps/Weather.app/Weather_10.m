uint64_t sub_100645B74(uint64_t a1)
{
  uint64_t v2;
  uint64_t vars8;

  v2 = sub_10017DF08(&qword_100E66450);

  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
}

uint64_t sub_100645BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E66450);

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v4);
}

uint64_t type metadata accessor for HomeAndWorkRefinementInput()
{
  uint64_t result = qword_100E86110;
  if (!qword_100E86110) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100645C54()
{
  uint64_t result = type metadata accessor for Location();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for LocationOfInterest();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      swift_initEnumMetadataSinglePayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100645D1C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_100645D7C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_100645DDC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t *sub_100645E34(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_10017DF08(&qword_100E65310);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = a2[1];
      swift_retain();
      swift_retain();
      uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for PresentationMode();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[5];
    uint64_t v14 = a3[6];
    v15 = (uint64_t *)((char *)a1 + v13);
    v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    void *v15 = *v16;
    v15[1] = v17;
    v18 = (char *)a1 + v14;
    v19 = (char *)a2 + v14;
    uint64_t v20 = type metadata accessor for DayWeather();
    v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
    swift_bridgeObjectRetain();
    v21(v18, v19, v20);
    uint64_t v22 = a3[7];
    uint64_t v23 = a3[8];
    v24 = (uint64_t *)((char *)a1 + v22);
    v25 = (uint64_t *)((char *)a2 + v22);
    uint64_t v26 = v25[1];
    void *v24 = *v25;
    v24[1] = v26;
    v27 = (char *)a1 + v23;
    v28 = (char *)a2 + v23;
    swift_retain();
    v21(v27, v28, v20);
    uint64_t v29 = sub_10017DF08(&qword_100E86130);
    *(void *)&v27[*(int *)(v29 + 28)] = *(void *)&v28[*(int *)(v29 + 28)];
  }
  swift_retain();
  return a1;
}

uint64_t sub_100646038(uint64_t a1, uint64_t a2)
{
  sub_10017DF08(&qword_100E65310);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v5 = a1 + *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    uint64_t v6 = type metadata accessor for PresentationMode();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = type metadata accessor for DayWeather();
  v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  swift_release();
  v9(a1 + *(int *)(a2 + 32), v8);
  sub_10017DF08(&qword_100E86130);

  return swift_release();
}

void *sub_100646190(void *a1, void *a2, int *a3)
{
  sub_10017DF08(&qword_100E65310);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    uint64_t v7 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    uint64_t v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for PresentationMode();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[5];
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)((char *)a1 + v11);
  uint64_t v14 = (void *)((char *)a2 + v11);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  v16 = (char *)a1 + v12;
  uint64_t v17 = (char *)a2 + v12;
  uint64_t v18 = type metadata accessor for DayWeather();
  v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
  swift_bridgeObjectRetain();
  v19(v16, v17, v18);
  uint64_t v20 = a3[7];
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)((char *)a1 + v20);
  uint64_t v23 = (void *)((char *)a2 + v20);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  v25 = (char *)a1 + v21;
  uint64_t v26 = (char *)a2 + v21;
  swift_retain();
  v19(v25, v26, v18);
  uint64_t v27 = sub_10017DF08(&qword_100E86130);
  *(void *)&v25[*(int *)(v27 + 28)] = *(void *)&v26[*(int *)(v27 + 28)];
  swift_retain();
  return a1;
}

char *sub_100646348(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100178110((uint64_t)a1, &qword_100E65310);
    sub_10017DF08(&qword_100E65310);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(void *)a1 = *(void *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      *((void *)a1 + 1) = *((void *)a2 + 1);
      swift_retain();
      swift_retain();
      uint64_t v7 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
      uint64_t v8 = &a1[v7];
      v9 = &a2[v7];
      uint64_t v10 = type metadata accessor for PresentationMode();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  v16 = &a2[v14];
  uint64_t v17 = type metadata accessor for DayWeather();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24);
  v18(v15, v16, v17);
  uint64_t v19 = a3[7];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = *((void *)v21 + 1);
  *(void *)uint64_t v20 = *(void *)v21;
  *((void *)v20 + 1) = v22;
  swift_retain();
  swift_release();
  uint64_t v23 = a3[8];
  uint64_t v24 = &a1[v23];
  v25 = &a2[v23];
  v18(&a1[v23], v25, v17);
  uint64_t v26 = sub_10017DF08(&qword_100E86130);
  *(void *)&v24[*(int *)(v26 + 28)] = *(void *)&v25[*(int *)(v26 + 28)];
  swift_retain();
  swift_release();
  return a1;
}

void *sub_100646540(void *a1, void *a2, int *a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E65310);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for PresentationMode();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v12 = a3[6];
  *(_OWORD *)((char *)a1 + a3[5]) = *(_OWORD *)((char *)a2 + a3[5]);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for DayWeather();
  v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  uint64_t v17 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  v16((char *)a1 + v17, v19, v15);
  uint64_t v20 = sub_10017DF08(&qword_100E86130);
  *(void *)&v18[*(int *)(v20 + 28)] = *(void *)&v19[*(int *)(v20 + 28)];
  return a1;
}

void *sub_1006466D0(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100178110((uint64_t)a1, &qword_100E65310);
    uint64_t v6 = sub_10017DF08(&qword_100E65310);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
      v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for PresentationMode();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v12 = a3[5];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[6];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = type metadata accessor for DayWeather();
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 40);
  v21(v18, v19, v20);
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  swift_release();
  uint64_t v22 = a3[8];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  v21((char *)a1 + v22, v24, v20);
  uint64_t v25 = sub_10017DF08(&qword_100E86130);
  *(void *)&v23[*(int *)(v25 + 28)] = *(void *)&v24[*(int *)(v25 + 28)];
  swift_release();
  return a1;
}

uint64_t sub_1006468A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006468B8);
}

uint64_t sub_1006468B8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_10017DF08(&qword_100E669A8);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_11:
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  if (a2 != 0x7FFFFFFF)
  {
    type metadata accessor for DayWeather();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a2)
    {
      uint64_t v8 = v12;
      uint64_t v14 = a3[6];
    }
    else
    {
      uint64_t v8 = sub_10017DF08(&qword_100E86130);
      uint64_t v14 = a3[8];
    }
    uint64_t v9 = a1 + v14;
    goto LABEL_11;
  }
  unint64_t v10 = *(void *)(a1 + a3[5] + 8);
  if (v10 >= 0xFFFFFFFF) {
    LODWORD(v10) = -1;
  }
  return (v10 + 1);
}

uint64_t sub_100646998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006469AC);
}

void sub_1006469AC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_10017DF08(&qword_100E669A8);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(a1 + a4[5] + 8) = (a2 - 1);
      return;
    }
    type metadata accessor for DayWeather();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[6];
    }
    else
    {
      uint64_t v10 = sub_10017DF08(&qword_100E86130);
      uint64_t v14 = a4[8];
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for DayWeatherEditorView()
{
  uint64_t result = qword_100E86190;
  if (!qword_100E86190) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100646AD0()
{
  sub_1002307EC();
  if (v0 <= 0x3F)
  {
    type metadata accessor for DayWeather();
    if (v1 <= 0x3F)
    {
      sub_100646BE8();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_100646BE8()
{
  if (!qword_100E861A0)
  {
    type metadata accessor for DayWeather();
    unint64_t v0 = type metadata accessor for State();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E861A0);
    }
  }
}

uint64_t sub_100646C40()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_100646C5C()
{
  sub_100162EA0();
  v38[0] = v0;
  uint64_t v49 = v1;
  uint64_t v2 = type metadata accessor for DayWeatherEditorView();
  uint64_t v3 = v2 - 8;
  uint64_t v46 = *(void *)(v2 - 8);
  uint64_t v45 = *(void *)(v46 + 64);
  __chkstk_darwin(v2);
  uint64_t v43 = (uint64_t)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E65388);
  sub_100179C0C();
  uint64_t v47 = v5;
  uint64_t v48 = v6;
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v44 = v7;
  uint64_t v8 = type metadata accessor for InsetGroupedListStyle();
  sub_100179C0C();
  v38[1] = v9;
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v11 = sub_10017DF08(&qword_100E861E0);
  sub_100179C0C();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  sub_10017DF08(&qword_100E861E8);
  sub_100179C0C();
  uint64_t v39 = v18;
  uint64_t v40 = v19;
  __chkstk_darwin(v18);
  sub_1001626E0();
  sub_10017DF08(&qword_100E861F0);
  sub_100179C0C();
  uint64_t v41 = v20;
  uint64_t v42 = v21;
  __chkstk_darwin(v20);
  sub_100109314();
  uint64_t v50 = v22;
  uint64_t v51 = v0;
  sub_10017DF08(&qword_100E861F8);
  sub_1001246C8(&qword_100E86200, &qword_100E861F8);
  List<>.init(content:)();
  InsetGroupedListStyle.init()();
  uint64_t v23 = sub_1001246C8(&qword_100E86208, &qword_100E861E0);
  View.listStyle<A>(_:)();
  sub_100162F0C();
  v24();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v17, v11);
  uint64_t v25 = v38[0];
  uint64_t v26 = (uint64_t *)(v38[0] + *(int *)(v3 + 28));
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  uint64_t v56 = v28;
  uint64_t v57 = v27;
  uint64_t v52 = v11;
  v53 = (void *)v8;
  uint64_t v54 = v23;
  v55 = &protocol witness table for InsetGroupedListStyle;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unint64_t v30 = sub_10014A85C();
  uint64_t v31 = v39;
  View.navigationTitle<A>(_:)();
  sub_100162F0C();
  v32();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v33 = v43;
  sub_1006485D8(v25, v43);
  unint64_t v34 = (*(unsigned __int8 *)(v46 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  uint64_t v35 = swift_allocObject();
  sub_100648640(v33, v35 + v34);
  Button<>.init(_:action:)();
  uint64_t v52 = v31;
  v53 = &type metadata for String;
  uint64_t v54 = OpaqueTypeConformance2;
  v55 = (void *)v30;
  swift_getOpaqueTypeConformance2();
  sub_1001246C8(&qword_100E653A8, &qword_100E65388);
  View.navigationBarItems<A>(trailing:)();
  sub_100162F0C();
  v36();
  sub_100162F0C();
  v37();
  sub_100162694();
}

uint64_t sub_100647158@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E86210);
  uint64_t v37 = *(void *)(v3 - 8);
  uint64_t v38 = v3;
  __chkstk_darwin(v3);
  uint64_t v39 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v33 - v6;
  uint64_t v8 = sub_10017DF08(&qword_100E86218);
  uint64_t v36 = *(void *)(v8 - 8);
  uint64_t v9 = v36;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v33 - v13;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v43 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v44 = v15;
  char v45 = v16 & 1;
  uint64_t v46 = v17;
  uint64_t v42 = a1;
  sub_10017DF08(&qword_100E86220);
  sub_1001246C8(&qword_100E86228, &qword_100E86220);
  uint64_t v35 = v14;
  Section<>.init(header:content:)();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v43 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v44 = v18;
  char v45 = v19 & 1;
  uint64_t v46 = v20;
  uint64_t v41 = a1;
  sub_10017DF08(&qword_100E86230);
  sub_1001246C8(&qword_100E86238, &qword_100E86230);
  uint64_t v33 = v7;
  Section<>.init(header:content:)();
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  unint64_t v34 = v11;
  uint64_t v22 = v8;
  v21(v11, v14, v8);
  uint64_t v23 = v37;
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  uint64_t v25 = v39;
  uint64_t v26 = v7;
  uint64_t v27 = v38;
  v24(v39, v26, v38);
  uint64_t v28 = v40;
  v21(v40, v11, v22);
  uint64_t v29 = sub_10017DF08(&qword_100E86240);
  v24(&v28[*(int *)(v29 + 48)], v25, v27);
  unint64_t v30 = *(void (**)(char *, uint64_t))(v23 + 8);
  v30(v33, v27);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v36 + 8);
  v31(v35, v22);
  v30(v25, v27);
  return ((uint64_t (*)(char *, uint64_t))v31)(v34, v22);
}

uint64_t sub_10064757C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v2 = type metadata accessor for DayWeatherEditorView();
  uint64_t v21 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v21 + 64);
  __chkstk_darwin(v2);
  uint64_t v20 = (uint64_t)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DayWeather();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(qword_100E65268);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v19 - v12;
  DayWeather.highTemperature.getter();
  uint64_t v14 = sub_10017DF08(&qword_100E65250);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v14);
  sub_10017DF08(&qword_100E86130);
  State.wrappedValue.getter();
  DayWeather.highTemperature.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v14);
  uint64_t v15 = v20;
  sub_1006485D8(v1, v20);
  unint64_t v16 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v17 = swift_allocObject();
  sub_100648640(v15, v17 + v16);
  return sub_1009D25C8();
}

uint64_t sub_100647830@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v2 = type metadata accessor for DayWeatherEditorView();
  uint64_t v21 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v21 + 64);
  __chkstk_darwin(v2);
  uint64_t v20 = (uint64_t)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DayWeather();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(qword_100E65268);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v19 - v12;
  DayWeather.lowTemperature.getter();
  uint64_t v14 = sub_10017DF08(&qword_100E65250);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v14);
  sub_10017DF08(&qword_100E86130);
  State.wrappedValue.getter();
  DayWeather.lowTemperature.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v14);
  uint64_t v15 = v20;
  sub_1006485D8(v1, v20);
  unint64_t v16 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v17 = swift_allocObject();
  sub_100648640(v15, v17 + v16);
  return sub_1009D25C8();
}

void sub_100647AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_100162EA0();
  a19 = v20;
  a20 = v21;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v32 = sub_10017DF08(v28);
  __chkstk_darwin(v32 - 8);
  unint64_t v34 = (char *)&a9 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)&a9 - v36;
  __chkstk_darwin(v38);
  uint64_t v40 = (char *)&a9 - v39;
  __n128 v42 = __chkstk_darwin(v41);
  uint64_t v44 = (char *)&a9 - v43;
  uint64_t v45 = v27(v42);
  v25(v45);
  sub_1001262FC((uint64_t)v44, (uint64_t)v37, v29);
  sub_1001262FC((uint64_t)v40, (uint64_t)v34, v29);
  sub_1001262FC((uint64_t)v37, v31, v29);
  uint64_t v46 = sub_10017DF08(v23);
  sub_1001262FC((uint64_t)v34, v31 + *(int *)(v46 + 48), v29);
  sub_100178110((uint64_t)v40, v29);
  sub_100178110((uint64_t)v44, v29);
  sub_100178110((uint64_t)v34, v29);
  sub_100178110((uint64_t)v37, v29);
  sub_100162694();
}

uint64_t sub_100647C6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v2 = type metadata accessor for DayWeatherEditorView();
  uint64_t v21 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v21 + 64);
  __chkstk_darwin(v2);
  uint64_t v20 = (uint64_t)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DayWeather();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E7DDE8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v19 - v12;
  DayWeather.precipitationAmount.getter();
  uint64_t v14 = sub_10017DF08(&qword_100E6B648);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v14);
  sub_10017DF08(&qword_100E86130);
  State.wrappedValue.getter();
  DayWeather.precipitationAmount.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v14);
  uint64_t v15 = v20;
  sub_1006485D8(v1, v20);
  unint64_t v16 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v17 = swift_allocObject();
  sub_100648640(v15, v17 + v16);
  return sub_1009D235C();
}

uint64_t sub_100647F20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v2 = type metadata accessor for DayWeatherEditorView();
  uint64_t v21 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v21 + 64);
  __chkstk_darwin(v2);
  uint64_t v20 = (uint64_t)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DayWeather();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E7DDE8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v19 - v12;
  DayWeather.snowfallAmount.getter();
  uint64_t v14 = sub_10017DF08(&qword_100E6B648);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v14);
  sub_10017DF08(&qword_100E86130);
  State.wrappedValue.getter();
  DayWeather.snowfallAmount.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v14);
  uint64_t v15 = v20;
  sub_1006485D8(v1, v20);
  unint64_t v16 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v17 = swift_allocObject();
  sub_100648640(v15, v17 + v16);
  return sub_1009D235C();
}

uint64_t sub_1006481DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PresentationMode();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10017DF08(&qword_100E669A0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DayWeather();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void (**)(char *))(a1 + *(int *)(type metadata accessor for DayWeatherEditorView() + 28));
  sub_10017DF08(&qword_100E86130);
  State.wrappedValue.getter();
  v10(v9);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1005D1E94();
  Binding.wrappedValue.getter();
  PresentationMode.dismiss()();
  Binding.wrappedValue.setter();
  return sub_100178110((uint64_t)v5, &qword_100E669A0);
}

void sub_1006483C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_100162EA0();
  a19 = v20;
  a20 = v21;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v30 = type metadata accessor for DayWeather();
  __chkstk_darwin(v30 - 8);
  sub_1001626E0();
  uint64_t v31 = sub_10017DF08(v27);
  __chkstk_darwin(v31 - 8);
  sub_1001626E0();
  uint64_t v34 = v33 - v32;
  uint64_t v35 = sub_10017DF08(v25);
  sub_100179C0C();
  uint64_t v37 = v36;
  __chkstk_darwin(v38);
  uint64_t v40 = (char *)&a9 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  uint64_t v43 = (char *)&a9 - v42;
  sub_1001262FC(v29, v34, v27);
  if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v35) == 1)
  {
    sub_100178110(v34, v27);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v43, v34, v35);
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v40, v43, v35);
    type metadata accessor for DayWeatherEditorView();
    sub_10017DF08(&qword_100E86130);
    State.wrappedValue.getter();
    v23(v40);
    State.wrappedValue.setter();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v43, v35);
  }
  sub_100162694();
}

uint64_t sub_1006485D0@<X0>(char *a1@<X8>)
{
  return sub_100647158(*(void *)(v1 + 16), a1);
}

uint64_t sub_1006485D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DayWeatherEditorView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100648640(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DayWeatherEditorView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006486A4()
{
  uint64_t v1 = type metadata accessor for DayWeatherEditorView();
  sub_1001627C0(v1);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return sub_1006481DC(v3);
}

#error "10064872C: call analysis failed (funcsize=17)"

#error "100648780: call analysis failed (funcsize=17)"

uint64_t sub_100648790(uint64_t a1)
{
  return sub_10064883C(a1, &qword_100E7DDE8, &qword_100E6B648, &DayWeather.snowfallAmount.setter);
}

uint64_t sub_1006487BC(uint64_t a1)
{
  return sub_10064883C(a1, &qword_100E7DDE8, &qword_100E6B648, &DayWeather.rainfallAmount.setter);
}

uint64_t sub_1006487E8(uint64_t a1)
{
  return sub_10064883C(a1, qword_100E65268, &qword_100E65250, &DayWeather.lowTemperature.setter);
}

uint64_t sub_100648814(uint64_t a1)
{
  return sub_10064883C(a1, qword_100E65268, &qword_100E65250, &DayWeather.highTemperature.setter);
}

#error "100648890: call analysis failed (funcsize=27)"

uint64_t sub_1006488A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *sub_100648A14(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    uint64_t v10 = a2[9];
    a1[8] = a2[8];
    a1[9] = v10;
    uint64_t v11 = a2[11];
    a1[10] = a2[10];
    a1[11] = v11;
    uint64_t v12 = a2[13];
    a1[12] = a2[12];
    a1[13] = v12;
    uint64_t v13 = a2[15];
    a1[14] = a2[14];
    a1[15] = v13;
    uint64_t v14 = a2[17];
    a1[16] = a2[16];
    a1[17] = v14;
    uint64_t v15 = a2[19];
    a1[18] = a2[18];
    a1[19] = v15;
    uint64_t v16 = a2[21];
    a1[20] = a2[20];
    a1[21] = v16;
    uint64_t v17 = a2[23];
    a1[22] = a2[22];
    a1[23] = v17;
    uint64_t v18 = a2[25];
    uint64_t v19 = a3[5];
    uint64_t v57 = (uint64_t *)((char *)a1 + v19);
    uint64_t v20 = (uint64_t *)((char *)a2 + v19);
    a1[24] = a2[24];
    a1[25] = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v57, v20, v21);
    }
    else
    {
      *uint64_t v57 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = a3[6];
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = *(void *)v25;
    char v27 = v25[8];
    sub_100195B7C(*(void *)v25, v27);
    *(void *)uint64_t v24 = v26;
    v24[8] = v27;
    uint64_t v28 = a3[7];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    uint64_t v31 = *(void *)v30;
    char v32 = v30[8];
    sub_100195B7C(*(void *)v30, v32);
    *(void *)uint64_t v29 = v31;
    v29[8] = v32;
    uint64_t v33 = a3[8];
    uint64_t v34 = (uint64_t *)((char *)a1 + v33);
    uint64_t v35 = (uint64_t *)((char *)a2 + v33);
    sub_10017DF08(&qword_100E62D60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v36 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
    }
    else
    {
      *uint64_t v34 = *v35;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v37 = a3[9];
    uint64_t v38 = (char *)a1 + v37;
    uint64_t v39 = (char *)a2 + v37;
    uint64_t v40 = *(void *)v39;
    char v41 = v39[8];
    sub_100195B7C(*(void *)v39, v41);
    *(void *)uint64_t v38 = v40;
    v38[8] = v41;
    uint64_t v42 = a3[10];
    uint64_t v43 = (char *)a1 + v42;
    uint64_t v44 = (char *)a2 + v42;
    uint64_t v45 = *((void *)v44 + 1);
    uint64_t v46 = *((void *)v44 + 2);
    uint64_t v47 = *((void *)v44 + 3);
    uint64_t v48 = *((void *)v44 + 4);
    uint64_t v49 = *((void *)v44 + 5);
    uint64_t v50 = *((void *)v44 + 6);
    uint64_t v51 = *((void *)v44 + 7);
    uint64_t v58 = *(void *)v44;
    uint64_t v59 = *((void *)v44 + 8);
    char v60 = v44[72];
    sub_1001910C8(*(void *)v44, v45, v46, v47, v48, v49, v50, v51, v59, v60);
    *(void *)uint64_t v43 = v58;
    *((void *)v43 + 1) = v45;
    *((void *)v43 + 2) = v46;
    *((void *)v43 + 3) = v47;
    *((void *)v43 + 4) = v48;
    *((void *)v43 + 5) = v49;
    *((void *)v43 + 6) = v50;
    *((void *)v43 + 7) = v51;
    *((void *)v43 + 8) = v59;
    uint64_t v52 = a3[11];
    v53 = (char *)a1 + v52;
    uint64_t v54 = (char *)a2 + v52;
    v43[72] = v60;
    uint64_t v55 = type metadata accessor for Text.Measurements();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
  }
  return a1;
}

uint64_t sub_100648E04(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(a1 + a2[6]), *(unsigned char *)(a1 + a2[6] + 8));
  sub_10018F6D8(*(void *)(a1 + a2[7]), *(unsigned char *)(a1 + a2[7] + 8));
  uint64_t v6 = a1 + a2[8];
  sub_10017DF08(&qword_100E62D60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(a1 + a2[9]), *(unsigned char *)(a1 + a2[9] + 8));
  uint64_t v8 = a1 + a2[10];
  sub_10018CCC4(*(void *)v8, *(void *)(v8 + 8), *(void *)(v8 + 16), *(void *)(v8 + 24), *(void *)(v8 + 32), *(void *)(v8 + 40), *(void *)(v8 + 48), *(void *)(v8 + 56), *(void *)(v8 + 64), *(unsigned char *)(v8 + 72));
  uint64_t v9 = a1 + a2[11];
  uint64_t v10 = type metadata accessor for Text.Measurements();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

void *sub_10064902C(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  uint64_t v10 = a2[11];
  a1[10] = a2[10];
  a1[11] = v10;
  uint64_t v11 = a2[13];
  a1[12] = a2[12];
  a1[13] = v11;
  uint64_t v12 = a2[15];
  a1[14] = a2[14];
  a1[15] = v12;
  uint64_t v13 = a2[17];
  a1[16] = a2[16];
  a1[17] = v13;
  uint64_t v14 = a2[19];
  a1[18] = a2[18];
  a1[19] = v14;
  uint64_t v15 = a2[21];
  a1[20] = a2[20];
  a1[21] = v15;
  uint64_t v16 = a2[23];
  a1[22] = a2[22];
  a1[23] = v16;
  uint64_t v17 = a2[25];
  uint64_t v18 = a3[5];
  uint64_t v57 = (void *)((char *)a1 + v18);
  uint64_t v19 = (void *)((char *)a2 + v18);
  a1[24] = a2[24];
  a1[25] = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v57, v19, v20);
  }
  else
  {
    *uint64_t v57 = *v19;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = a3[6];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = *(void *)v23;
  char v25 = v23[8];
  sub_100195B7C(*(void *)v23, v25);
  *(void *)uint64_t v22 = v24;
  v22[8] = v25;
  uint64_t v26 = a3[7];
  char v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = *(void *)v28;
  char v30 = v28[8];
  sub_100195B7C(*(void *)v28, v30);
  *(void *)char v27 = v29;
  v27[8] = v30;
  uint64_t v31 = a3[8];
  char v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (void *)((char *)a2 + v31);
  sub_10017DF08(&qword_100E62D60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v34 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  }
  else
  {
    *char v32 = *v33;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v35 = a3[9];
  uint64_t v36 = (char *)a1 + v35;
  uint64_t v37 = (char *)a2 + v35;
  uint64_t v38 = *(void *)v37;
  char v39 = v37[8];
  sub_100195B7C(*(void *)v37, v39);
  *(void *)uint64_t v36 = v38;
  v36[8] = v39;
  uint64_t v40 = a3[10];
  char v41 = (char *)a1 + v40;
  uint64_t v42 = (char *)a2 + v40;
  uint64_t v43 = *((void *)v42 + 1);
  uint64_t v44 = *((void *)v42 + 2);
  uint64_t v45 = *((void *)v42 + 3);
  uint64_t v46 = *((void *)v42 + 4);
  uint64_t v47 = *((void *)v42 + 5);
  uint64_t v48 = *((void *)v42 + 6);
  uint64_t v49 = *((void *)v42 + 7);
  uint64_t v55 = *(void *)v42;
  uint64_t v56 = *((void *)v42 + 8);
  char v58 = v42[72];
  sub_1001910C8(*(void *)v42, v43, v44, v45, v46, v47, v48, v49, v56, v58);
  *(void *)char v41 = v55;
  *((void *)v41 + 1) = v43;
  *((void *)v41 + 2) = v44;
  *((void *)v41 + 3) = v45;
  *((void *)v41 + 4) = v46;
  *((void *)v41 + 5) = v47;
  *((void *)v41 + 6) = v48;
  *((void *)v41 + 7) = v49;
  *((void *)v41 + 8) = v56;
  uint64_t v50 = a3[11];
  uint64_t v51 = (char *)a1 + v50;
  uint64_t v52 = (char *)a2 + v50;
  v41[72] = v58;
  uint64_t v53 = type metadata accessor for Text.Measurements();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
  return a1;
}

void *sub_1006493CC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  a1[21] = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[22] = a2[22];
  a1[23] = a2[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[24] = a2[24];
  a1[25] = a2[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_100178110((uint64_t)a1 + v6, &qword_100E66E50);
    sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = *(void *)v12;
  char v14 = v12[8];
  sub_100195B7C(*(void *)v12, v14);
  uint64_t v15 = *(void *)v11;
  char v16 = v11[8];
  *(void *)uint64_t v11 = v13;
  v11[8] = v14;
  sub_10018F6D8(v15, v16);
  uint64_t v17 = a3[7];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = *(void *)v19;
  char v21 = v19[8];
  sub_100195B7C(*(void *)v19, v21);
  uint64_t v22 = *(void *)v18;
  char v23 = v18[8];
  *(void *)uint64_t v18 = v20;
  v18[8] = v21;
  sub_10018F6D8(v22, v23);
  if (a1 != a2)
  {
    uint64_t v24 = a3[8];
    char v25 = (void *)((char *)a1 + v24);
    uint64_t v26 = (void *)((char *)a2 + v24);
    sub_100178110((uint64_t)a1 + v24, &qword_100E62D60);
    sub_10017DF08(&qword_100E62D60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      void *v25 = *v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v28 = a3[9];
  uint64_t v29 = (char *)a1 + v28;
  char v30 = (char *)a2 + v28;
  uint64_t v31 = *(void *)v30;
  char v32 = v30[8];
  sub_100195B7C(*(void *)v30, v32);
  uint64_t v33 = *(void *)v29;
  char v34 = v29[8];
  *(void *)uint64_t v29 = v31;
  v29[8] = v32;
  sub_10018F6D8(v33, v34);
  uint64_t v35 = a3[10];
  uint64_t v36 = (char *)a1 + v35;
  uint64_t v37 = (char *)a2 + v35;
  uint64_t v38 = *(void *)v37;
  uint64_t v39 = *((void *)v37 + 1);
  v63 = a3;
  uint64_t v40 = *((void *)v37 + 2);
  uint64_t v41 = *((void *)v37 + 3);
  uint64_t v42 = *((void *)v37 + 4);
  uint64_t v43 = *((void *)v37 + 5);
  uint64_t v44 = *((void *)v37 + 6);
  uint64_t v60 = *((void *)v37 + 7);
  uint64_t v61 = *((void *)v37 + 8);
  char v62 = v37[72];
  sub_1001910C8(*(void *)v37, v39, v40, v41, v42, v43, v44, v60, v61, v62);
  uint64_t v45 = *(void *)v36;
  uint64_t v46 = *((void *)v36 + 1);
  uint64_t v47 = *((void *)v36 + 2);
  uint64_t v48 = *((void *)v36 + 3);
  uint64_t v49 = *((void *)v36 + 4);
  uint64_t v50 = *((void *)v36 + 5);
  uint64_t v51 = *((void *)v36 + 6);
  uint64_t v52 = *((void *)v36 + 7);
  uint64_t v53 = *((void *)v36 + 8);
  char v54 = v36[72];
  *(void *)uint64_t v36 = v38;
  *((void *)v36 + 1) = v39;
  *((void *)v36 + 2) = v40;
  *((void *)v36 + 3) = v41;
  *((void *)v36 + 4) = v42;
  *((void *)v36 + 5) = v43;
  *((void *)v36 + 6) = v44;
  *((void *)v36 + 7) = v60;
  *((void *)v36 + 8) = v61;
  v36[72] = v62;
  sub_10018CCC4(v45, v46, v47, v48, v49, v50, v51, v52, v53, v54);
  uint64_t v55 = v63[11];
  uint64_t v56 = (char *)a1 + v55;
  uint64_t v57 = (char *)a2 + v55;
  uint64_t v58 = type metadata accessor for Text.Measurements();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 24))(v56, v57, v58);
  return a1;
}

char *sub_100649898(char *a1, char *a2, int *a3)
{
  memcpy(a1, a2, 0xD0uLL);
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = &a1[v11];
  char v14 = &a2[v11];
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  uint64_t v15 = &a1[v12];
  char v16 = &a2[v12];
  *(void *)uint64_t v15 = *(void *)v16;
  v15[8] = v16[8];
  uint64_t v17 = a3[8];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = sub_10017DF08(&qword_100E62D60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  uint64_t v22 = a3[9];
  uint64_t v23 = a3[10];
  uint64_t v24 = &a1[v22];
  char v25 = &a2[v22];
  *(void *)uint64_t v24 = *(void *)v25;
  v24[8] = v25[8];
  memcpy(&a1[v23], &a2[v23], 0x49uLL);
  uint64_t v26 = a3[11];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  uint64_t v29 = type metadata accessor for Text.Measurements();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
  return a1;
}

void *sub_100649AC4(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[11];
  a1[10] = a2[10];
  a1[11] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a2[13];
  a1[12] = a2[12];
  a1[13] = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = a2[15];
  a1[14] = a2[14];
  a1[15] = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = a2[17];
  a1[16] = a2[16];
  a1[17] = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = a2[19];
  a1[18] = a2[18];
  a1[19] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = a2[21];
  a1[20] = a2[20];
  a1[21] = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = a2[23];
  a1[22] = a2[22];
  a1[23] = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = a2[25];
  a1[24] = a2[24];
  a1[25] = v18;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v19 = a3[5];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    sub_100178110((uint64_t)a1 + v19, &qword_100E66E50);
    uint64_t v22 = sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v20, v21, v23);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
  }
  uint64_t v24 = a3[6];
  char v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = *(void *)v26;
  LOBYTE(v26) = v26[8];
  uint64_t v28 = *(void *)v25;
  char v29 = v25[8];
  *(void *)char v25 = v27;
  v25[8] = (char)v26;
  sub_10018F6D8(v28, v29);
  uint64_t v30 = a3[7];
  uint64_t v31 = (char *)a1 + v30;
  char v32 = (char *)a2 + v30;
  uint64_t v33 = *(void *)v32;
  LOBYTE(v32) = v32[8];
  uint64_t v34 = *(void *)v31;
  char v35 = v31[8];
  *(void *)uint64_t v31 = v33;
  v31[8] = (char)v32;
  sub_10018F6D8(v34, v35);
  if (a1 != a2)
  {
    uint64_t v36 = a3[8];
    uint64_t v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    sub_100178110((uint64_t)a1 + v36, &qword_100E62D60);
    uint64_t v39 = sub_10017DF08(&qword_100E62D60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v40 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v37, v38, v40);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
  }
  uint64_t v41 = a3[9];
  uint64_t v42 = (char *)a1 + v41;
  uint64_t v43 = (char *)a2 + v41;
  uint64_t v44 = *(void *)v43;
  LOBYTE(v43) = v43[8];
  uint64_t v45 = *(void *)v42;
  char v46 = v42[8];
  *(void *)uint64_t v42 = v44;
  v42[8] = (char)v43;
  sub_10018F6D8(v45, v46);
  uint64_t v47 = a3[10];
  uint64_t v48 = (char *)a1 + v47;
  uint64_t v49 = (char *)a2 + v47;
  uint64_t v50 = *((void *)v49 + 8);
  char v51 = v49[72];
  uint64_t v52 = *(void *)v48;
  uint64_t v53 = *((void *)v48 + 1);
  uint64_t v54 = *((void *)v48 + 2);
  uint64_t v55 = *((void *)v48 + 3);
  uint64_t v56 = *((void *)v48 + 4);
  uint64_t v57 = *((void *)v48 + 5);
  uint64_t v58 = *((void *)v48 + 6);
  uint64_t v59 = *((void *)v48 + 7);
  uint64_t v60 = *((void *)v48 + 8);
  char v61 = v48[72];
  long long v62 = *((_OWORD *)v49 + 1);
  *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
  *((_OWORD *)v48 + 1) = v62;
  long long v63 = *((_OWORD *)v49 + 3);
  *((_OWORD *)v48 + 2) = *((_OWORD *)v49 + 2);
  *((_OWORD *)v48 + 3) = v63;
  *((void *)v48 + 8) = v50;
  v48[72] = v51;
  sub_10018CCC4(v52, v53, v54, v55, v56, v57, v58, v59, v60, v61);
  uint64_t v64 = a3[11];
  v65 = (char *)a1 + v64;
  v66 = (char *)a2 + v64;
  uint64_t v67 = type metadata accessor for Text.Measurements();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 40))(v65, v66, v67);
  return a1;
}

uint64_t sub_100649E58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100649E6C);
}

uint64_t sub_100649E6C(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_10017DF08(&qword_100E6D908);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a3[5];
    }
    else
    {
      sub_10017DF08(&qword_100E79530);
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a2)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a3[8];
      }
      else
      {
        uint64_t v10 = type metadata accessor for Text.Measurements();
        uint64_t v11 = a3[11];
      }
    }
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v11, a2, v10);
  }
}

uint64_t sub_100649F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100649F58);
}

uint64_t sub_100649F58(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_10017DF08(&qword_100E6D908);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[5];
    }
    else
    {
      sub_10017DF08(&qword_100E79530);
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[8];
      }
      else
      {
        uint64_t v10 = type metadata accessor for Text.Measurements();
        uint64_t v11 = a4[11];
      }
    }
    return _s7Weather24LocationCompositionStateOwst_0(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_10064A02C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10064A048@<X0>(uint64_t a1@<X8>)
{
  uint64_t v29 = a1;
  type metadata accessor for TypesettingLanguageAwareLineHeightRatio();
  sub_100179C0C();
  v26[6] = v2;
  v26[7] = v1;
  __chkstk_darwin(v1);
  sub_100109314();
  v26[3] = v3;
  v26[1] = sub_10017DF08(&qword_100E86308);
  sub_100162E4C();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E86310);
  sub_100179C0C();
  v26[4] = v8;
  v26[5] = v7;
  __chkstk_darwin(v7);
  sub_100109314();
  v26[2] = v9;
  uint64_t v28 = sub_10017DF08(&qword_100E86318);
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v27 = v11;
  uint64_t v12 = type metadata accessor for DynamicTypeSize();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E86320);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C33BA0;
  uint64_t v16 = *(void (**)(void))(v13 + 104);
  sub_1001A22CC();
  v16();
  sub_1001A22CC();
  v16();
  sub_1001A22CC();
  v16();
  type metadata accessor for AveragesComponentView();
  sub_1001CAA20();
  sub_100282C04(&qword_100E651F0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  char v17 = 1;
  if ((sub_1001A0BBC() & 1) == 0 && (sub_1001A0BBC() & 1) == 0) {
    char v17 = sub_1001A0BBC();
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  swift_setDeallocating();
  sub_1006BB234();
  *(void *)uint64_t v6 = static HorizontalAlignment.leading.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v18 = sub_10017DF08(&qword_100E86328);
  sub_10064A530(v30, v17 & 1, (uint64_t)&v6[*(int *)(v18 + 44)]);
  static TypesettingLanguageAwareLineHeightRatio.disable.getter();
  sub_1001246C8(&qword_100E86330, &qword_100E86308);
  View.typesettingLanguageAwareLineHeightRatio(_:isEnabled:)();
  sub_100162F0C();
  v19();
  sub_100178110((uint64_t)v6, &qword_100E86308);
  static Alignment.leading.getter();
  uint64_t v20 = v27;
  sub_100BD8378();
  sub_100162F0C();
  uint64_t v22 = v21();
  __chkstk_darwin(v22);
  sub_10017DF08(&qword_100E86338);
  sub_100650BD0();
  uint64_t v23 = sub_10018C6DC(&qword_100E86348);
  unint64_t v24 = sub_100650CAC();
  uint64_t v31 = v23;
  unint64_t v32 = v24;
  swift_getOpaqueTypeConformance2();
  View.accessibilityRepresentation<A>(representation:)();
  return sub_100178110(v20, &qword_100E86318);
}

uint64_t sub_10064A530@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v32 = a2;
  uint64_t v39 = sub_10017DF08(&qword_100E86368);
  __chkstk_darwin(v39);
  uint64_t v6 = &v31[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v33 = sub_10017DF08(&qword_100E86370);
  __chkstk_darwin(v33);
  uint64_t v8 = &v31[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v34 = sub_10017DF08(&qword_100E86378);
  __chkstk_darwin(v34);
  uint64_t v10 = &v31[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_10017DF08(&qword_100E86380);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = &v31[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  uint64_t v16 = &v31[-v15];
  sub_10064A968(v40);
  uint64_t v36 = v40[1];
  uint64_t v37 = v40[0];
  int v35 = v41;
  uint64_t v38 = v42;
  uint64_t v17 = a1 + *(int *)(type metadata accessor for AveragesComponentView() + 28);
  uint64_t v18 = *(void *)v17;
  char v19 = *(unsigned char *)(v17 + 8);
  sub_100195B7C(*(void *)v17, v19);
  sub_100147CF4();
  char v21 = v20;
  sub_10018F6D8(v18, v19);
  if (v21)
  {
    unsigned char *v10 = static Axis.Set.vertical.getter();
    uint64_t v25 = sub_10017DF08(&qword_100E863A8);
    sub_10064ADA0(v32 & 1, a1, (uint64_t)&v10[*(int *)(v25 + 44)]);
    uint64_t v23 = &qword_100E86378;
    sub_10006DF38((uint64_t)v10, (uint64_t)v8, &qword_100E86378);
    swift_storeEnumTagMultiPayload();
    sub_1001246C8(&qword_100E86390, &qword_100E86378);
    sub_1001246C8(&qword_100E86398, &qword_100E86368);
    _ConditionalContent<>.init(storage:)();
    uint64_t v24 = (uint64_t)v10;
  }
  else
  {
    *(void *)uint64_t v6 = static HorizontalAlignment.leading.getter();
    *((void *)v6 + 1) = 0;
    v6[16] = 0;
    uint64_t v22 = sub_10017DF08(&qword_100E86388);
    sub_10064C828(a1, (uint64_t)&v6[*(int *)(v22 + 44)]);
    uint64_t v23 = &qword_100E86368;
    sub_10006DF38((uint64_t)v6, (uint64_t)v8, &qword_100E86368);
    swift_storeEnumTagMultiPayload();
    sub_1001246C8(&qword_100E86390, &qword_100E86378);
    sub_1001246C8(&qword_100E86398, &qword_100E86368);
    _ConditionalContent<>.init(storage:)();
    uint64_t v24 = (uint64_t)v6;
  }
  sub_100178110(v24, v23);
  sub_10006DF38((uint64_t)v16, (uint64_t)v13, &qword_100E86380);
  uint64_t v27 = v36;
  uint64_t v26 = v37;
  *(void *)a3 = v37;
  *(void *)(a3 + 8) = v27;
  char v28 = v35;
  *(unsigned char *)(a3 + 16) = v35;
  *(void *)(a3 + 24) = v38;
  uint64_t v29 = sub_10017DF08(&qword_100E863A0);
  sub_10006DF38((uint64_t)v13, a3 + *(int *)(v29 + 48), &qword_100E86380);
  sub_100190CC4(v26, v27, v28);
  swift_bridgeObjectRetain();
  sub_100178110((uint64_t)v16, &qword_100E86380);
  sub_100178110((uint64_t)v13, &qword_100E86380);
  sub_100191924(v26, v27, v28);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10064A968@<X0>(uint64_t *a1@<X8>)
{
  v72 = a1;
  uint64_t v2 = sub_10017DF08(&qword_100E6D330);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v62[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v71 = &v62[-v6];
  uint64_t v7 = type metadata accessor for Text.Scale();
  __chkstk_darwin(v7);
  uint64_t v11 = &v62[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = v1[3];
  if (v12)
  {
    uint64_t v67 = v4;
    uint64_t v13 = v1[1];
    uint64_t v14 = v1[2];
    uint64_t v73 = *v1;
    uint64_t v74 = v13;
    uint64_t v69 = v9;
    uint64_t v70 = v8;
    sub_10014A85C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = Text.init<A>(_:)();
    uint64_t v64 = v16;
    uint64_t v65 = v15;
    uint64_t v66 = v17;
    int v63 = v18 & 1;
    uint64_t v73 = v14;
    uint64_t v74 = v12;
    uint64_t v19 = Text.init<A>(_:)();
    uint64_t v21 = v20;
    char v23 = v22 & 1;
    static Text.Scale.secondary.getter();
    uint64_t v24 = Text.textScale(_:isEnabled:)();
    uint64_t v26 = v25;
    char v28 = v27 & 1;
    sub_100191924(v19, v21, v23);
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v69 + 8))(v11, v70);
    uint64_t v29 = v64;
    uint64_t v30 = v65;
    char v31 = v63;
    uint64_t v32 = static Text.+ infix(_:_:)();
    uint64_t v68 = v33;
    uint64_t v69 = v32;
    char v35 = v34;
    uint64_t v70 = v36;
    sub_100191924(v24, v26, v28);
    uint64_t v4 = v67;
    swift_bridgeObjectRelease();
    sub_100191924(v30, v29, v31);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v37 = v1[1];
    uint64_t v73 = *v1;
    uint64_t v74 = v37;
    sub_10014A85C();
    swift_bridgeObjectRetain();
    uint64_t v38 = Text.init<A>(_:)();
    uint64_t v68 = v39;
    uint64_t v69 = v38;
    char v35 = v40;
    uint64_t v70 = v41;
  }
  char v42 = v35 & 1;
  uint64_t v43 = static Font.largeTitle.getter();
  uint64_t v44 = static Font.title2.getter();
  uint64_t v45 = (char *)v1 + *(int *)(type metadata accessor for AveragesComponentView() + 36);
  uint64_t v46 = *(void *)v45;
  char v47 = v45[8];
  sub_100195B7C(*(void *)v45, v47);
  sub_100149AE8();
  char v49 = v48;
  sub_10018F6D8(v46, v47);
  uint64_t v50 = enum case for Font.Leading.tight(_:);
  uint64_t v51 = type metadata accessor for Font.Leading();
  uint64_t v52 = (uint64_t)v71;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 104))(v71, v50, v51);
  _s7Weather24LocationCompositionStateOwst_0(v52, 0, 1, v51);
  sub_10006DF38(v52, (uint64_t)v4, &qword_100E6D330);
  swift_retain();
  swift_retain();
  sub_10014A8A8(v43, v44, v49 & 1, (uint64_t)v4);
  uint64_t v54 = v68;
  uint64_t v53 = v69;
  uint64_t v55 = Text.font(_:)();
  uint64_t v57 = v56;
  LODWORD(v66) = v58;
  uint64_t v67 = v59;
  swift_release();
  swift_release();
  swift_release();
  sub_100191924(v53, v54, v42);
  swift_bridgeObjectRelease();
  uint64_t result = sub_100178110(v52, &qword_100E6D330);
  char v61 = v72;
  uint64_t *v72 = v55;
  v61[1] = v57;
  *((unsigned char *)v61 + 16) = v66 & 1;
  v61[3] = (uint64_t)v67;
  return result;
}

uint64_t sub_10064ADA0@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v70 = a3;
  uint64_t v64 = sub_10017DF08(&qword_100E863B0);
  uint64_t v5 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v60 - v9;
  uint64_t v11 = sub_10017DF08(&qword_100E863B8);
  __chkstk_darwin(v11 - 8);
  uint64_t v69 = (uint64_t)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v60 - v14;
  uint64_t v16 = sub_10017DF08(&qword_100E863C0);
  __chkstk_darwin(v16 - 8);
  uint64_t v68 = (uint64_t)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v60 - v19;
  uint64_t v21 = sub_10017DF08(&qword_100E863C8);
  __chkstk_darwin(v21 - 8);
  uint64_t v67 = (uint64_t)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v60 - v24;
  uint64_t v26 = sub_10017DF08(&qword_100E863D0);
  __chkstk_darwin(v26 - 8);
  uint64_t v66 = (uint64_t)&v60 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v60 - v29;
  uint64_t v31 = sub_10017DF08(&qword_100E863D8);
  __chkstk_darwin(v31 - 8);
  uint64_t v65 = (uint64_t)&v60 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v71 = (uint64_t *)((char *)&v60 - v34);
  if (a1)
  {
    uint64_t v35 = sub_10017DF08(&qword_100E863E8);
    uint64_t v36 = v71;
    uint64_t v37 = 1;
  }
  else
  {
    uint64_t v38 = static HorizontalAlignment.leading.getter();
    uint64_t v39 = v71;
    uint64_t *v71 = v38;
    v39[1] = 0;
    *((unsigned char *)v39 + 16) = 0;
    uint64_t v40 = sub_10017DF08(&qword_100E863E0);
    sub_10064B3EC(a2, (uint64_t)v39 + *(int *)(v40 + 44));
    uint64_t v35 = sub_10017DF08(&qword_100E863E8);
    uint64_t v36 = v39;
    uint64_t v37 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, v37, 1, v35);
  *(void *)uint64_t v30 = static HorizontalAlignment.leading.getter();
  *((void *)v30 + 1) = 0;
  v30[16] = 0;
  uint64_t v41 = sub_10017DF08(&qword_100E863F0);
  sub_10064B958(a2, &v30[*(int *)(v41 + 44)]);
  *(void *)uint64_t v25 = static HorizontalAlignment.leading.getter();
  *((void *)v25 + 1) = 0;
  v25[16] = 0;
  uint64_t v42 = sub_10017DF08(&qword_100E863F8);
  sub_10064C204(a2, &v25[*(int *)(v42 + 44)]);
  *(void *)uint64_t v20 = static HorizontalAlignment.leading.getter();
  *((void *)v20 + 1) = 0;
  v20[16] = 0;
  uint64_t v43 = sub_10017DF08(&qword_100E86400);
  sub_10064C518(a2, &v20[*(int *)(v43 + 44)]);
  *(void *)uint64_t v15 = static HorizontalAlignment.leading.getter();
  *((void *)v15 + 1) = 0;
  v15[16] = 0;
  uint64_t v44 = *(int *)(sub_10017DF08(&qword_100E86408) + 44);
  uint64_t v60 = v20;
  char v61 = v15;
  uint64_t v45 = &v15[v44];
  sub_10064BC6C((uint64_t)v10);
  long long v62 = v25;
  int v63 = v30;
  uint64_t v46 = (uint64_t)v25;
  char v47 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  uint64_t v48 = v64;
  v47(v7, v10, v64);
  v47(v45, v7, v48);
  char v49 = &v45[*(int *)(sub_10017DF08(&qword_100E86410) + 48)];
  *(void *)char v49 = 0;
  v49[8] = 0;
  uint64_t v50 = *(void (**)(char *, uint64_t))(v5 + 8);
  v50(v10, v48);
  v50(v7, v48);
  uint64_t v51 = v65;
  sub_10006DF38((uint64_t)v71, v65, &qword_100E863D8);
  uint64_t v52 = v66;
  sub_10006DF38((uint64_t)v30, v66, &qword_100E863D0);
  uint64_t v53 = v67;
  sub_10006DF38(v46, v67, &qword_100E863C8);
  uint64_t v54 = v68;
  sub_10006DF38((uint64_t)v20, v68, &qword_100E863C0);
  uint64_t v55 = (uint64_t)v61;
  uint64_t v56 = v69;
  sub_10006DF38((uint64_t)v61, v69, &qword_100E863B8);
  uint64_t v57 = v70;
  sub_10006DF38(v51, v70, &qword_100E863D8);
  int v58 = (int *)sub_10017DF08(&qword_100E86418);
  sub_10006DF38(v52, v57 + v58[12], &qword_100E863D0);
  sub_10006DF38(v53, v57 + v58[16], &qword_100E863C8);
  sub_10006DF38(v54, v57 + v58[20], &qword_100E863C0);
  sub_10006DF38(v56, v57 + v58[24], &qword_100E863B8);
  sub_100178110(v55, &qword_100E863B8);
  sub_100178110((uint64_t)v60, &qword_100E863C0);
  sub_100178110((uint64_t)v62, &qword_100E863C8);
  sub_100178110((uint64_t)v63, &qword_100E863D0);
  sub_100178110((uint64_t)v71, &qword_100E863D8);
  sub_100178110(v56, &qword_100E863B8);
  sub_100178110(v54, &qword_100E863C0);
  sub_100178110(v53, &qword_100E863C8);
  sub_100178110(v52, &qword_100E863D0);
  return sub_100178110(v51, &qword_100E863D8);
}

uint64_t sub_10064B3EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E86490);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E86498);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v25 - v12;
  uint64_t v14 = sub_10064B640();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  *(void *)uint64_t v6 = static Alignment.leading.getter();
  *((void *)v6 + 1) = v21;
  *((void *)v6 + 2) = 0;
  v6[24] = 1;
  *((void *)v6 + 4) = 0;
  v6[40] = 0;
  uint64_t v22 = sub_10017DF08(&qword_100E864A0);
  sub_10064C048(a1, &qword_100E86438, (void (*)(uint64_t, __n128))sub_10064D594, (void (*)(uint64_t))sub_10064EA7C, &qword_100E864B0, (uint64_t)&v6[*(int *)(v22 + 44)]);
  sub_10006DF38((uint64_t)v6, (uint64_t)v10, &qword_100E86490);
  *(void *)&v10[*(int *)(v8 + 44)] = 0xBFF0000000000000;
  sub_100178110((uint64_t)v6, &qword_100E86490);
  sub_10020E72C((uint64_t)v10, (uint64_t)v13, &qword_100E86498);
  sub_10006DF38((uint64_t)v13, (uint64_t)v10, &qword_100E86498);
  *(void *)a2 = v14;
  *(void *)(a2 + 8) = v16;
  *(unsigned char *)(a2 + 16) = v20;
  *(void *)(a2 + 24) = v18;
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 40) = 0;
  uint64_t v23 = sub_10017DF08(&qword_100E864B8);
  sub_10006DF38((uint64_t)v10, a2 + *(int *)(v23 + 64), &qword_100E86498);
  sub_100190CC4(v14, v16, v20);
  swift_bridgeObjectRetain();
  sub_100178110((uint64_t)v13, &qword_100E86498);
  sub_100178110((uint64_t)v10, &qword_100E86498);
  sub_100191924(v14, v16, v20);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10064B640()
{
  uint64_t v1 = sub_10017DF08(&qword_100E6D330);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v29 - v5;
  uint64_t v7 = type metadata accessor for Font.TextStyle();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v0 + 40);
  uint64_t v33 = *(void *)(v0 + 32);
  uint64_t v34 = v11;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v12 = Text.init<A>(_:)();
  uint64_t v31 = v14;
  uint64_t v32 = v13;
  char v16 = v15 & 1;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for Font.TextStyle.subheadline(_:), v7);
  static Font.Weight.semibold.getter();
  uint64_t v17 = static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v18 = static Font.footnote.getter();
  uint64_t v19 = v0 + *(int *)(type metadata accessor for AveragesComponentView() + 36);
  uint64_t v20 = *(void *)v19;
  char v21 = *(unsigned char *)(v19 + 8);
  sub_100195B7C(*(void *)v19, v21);
  sub_100149AE8();
  LOBYTE(v11) = v22;
  sub_10018F6D8(v20, v21);
  uint64_t v23 = enum case for Font.Leading.tight(_:);
  uint64_t v24 = type metadata accessor for Font.Leading();
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104);
  uint64_t v30 = v6;
  v25(v6, v23, v24);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 0, 1, v24);
  sub_10006DF38((uint64_t)v6, (uint64_t)v3, &qword_100E6D330);
  swift_retain();
  swift_retain();
  sub_10014A8A8(v17, v18, v11 & 1, (uint64_t)v3);
  uint64_t v26 = v12;
  uint64_t v27 = v32;
  uint64_t v29 = Text.font(_:)();
  swift_release();
  swift_release();
  swift_release();
  sub_100191924(v26, v27, v16);
  swift_bridgeObjectRelease();
  sub_100178110((uint64_t)v30, &qword_100E6D330);
  return v29;
}

uint64_t sub_10064B958@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E86490);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E86498);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v28 - v12;
  uint64_t v14 = sub_10017DF08(&qword_100E863B0);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v28 - v19;
  sub_10064BC6C((uint64_t)&v28 - v19);
  *(void *)uint64_t v6 = static Alignment.leading.getter();
  *((void *)v6 + 1) = v21;
  *((void *)v6 + 2) = 0;
  v6[24] = 1;
  *((void *)v6 + 4) = 0;
  v6[40] = 0;
  uint64_t v22 = sub_10017DF08(&qword_100E864A0);
  sub_10064C048(a1, &qword_100E86438, (void (*)(uint64_t, __n128))sub_10064D594, (void (*)(uint64_t))sub_10064EA7C, &qword_100E864B0, (uint64_t)&v6[*(int *)(v22 + 44)]);
  sub_10006DF38((uint64_t)v6, (uint64_t)v10, &qword_100E86490);
  *(void *)&v10[*(int *)(v8 + 44)] = 0xBFF0000000000000;
  sub_100178110((uint64_t)v6, &qword_100E86490);
  sub_10020E72C((uint64_t)v10, (uint64_t)v13, &qword_100E86498);
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v23(v17, v20, v14);
  sub_10006DF38((uint64_t)v13, (uint64_t)v10, &qword_100E86498);
  v23(a2, v17, v14);
  uint64_t v24 = sub_10017DF08(&qword_100E864A8);
  uint64_t v25 = &a2[*(int *)(v24 + 48)];
  *(void *)uint64_t v25 = 0;
  v25[8] = 0;
  sub_10006DF38((uint64_t)v10, (uint64_t)&a2[*(int *)(v24 + 64)], &qword_100E86498);
  sub_100178110((uint64_t)v13, &qword_100E86498);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v15 + 8);
  v26(v20, v14);
  sub_100178110((uint64_t)v10, &qword_100E86498);
  return ((uint64_t (*)(char *, uint64_t))v26)(v17, v14);
}

uint64_t sub_10064BC6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v29 = sub_10017DF08(&qword_100E651D0);
  __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for Font.Leading();
  uint64_t v3 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Font.TextStyle();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v1 + 32);
  uint64_t v11 = *(void *)(v1 + 40);
  uint64_t v33 = v10;
  uint64_t v34 = v11;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v12 = Text.init<A>(_:)();
  uint64_t v14 = v13;
  char v16 = v15 & 1;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for Font.TextStyle.footnote(_:), v6);
  static Font.Weight.semibold.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v17 = v31;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Font.Leading.tight(_:), v31);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v17);
  uint64_t v18 = Text.font(_:)();
  uint64_t v20 = v19;
  LOBYTE(v5) = v21;
  uint64_t v23 = v22;
  uint64_t v24 = (uint64_t)v32;
  swift_release();
  sub_100191924(v12, v14, v16);
  swift_bridgeObjectRelease();
  uint64_t v33 = v18;
  uint64_t v34 = v20;
  char v35 = v5 & 1;
  uint64_t v36 = v23;
  uint64_t v25 = enum case for DynamicTypeSize.xLarge(_:);
  uint64_t v26 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v24, v25, v26);
  sub_100282C04(&qword_100E651F0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    sub_1001246C8((unint64_t *)&unk_100EAADB0, &qword_100E651D0);
    View.dynamicTypeSize<A>(_:)();
    sub_100178110(v24, &qword_100E651D0);
    sub_100191924(v33, v34, v35);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10064C048@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void (*a3)(uint64_t, __n128)@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v25 = a4;
  uint64_t v26 = a5;
  uint64_t v10 = sub_10017DF08(a2);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  char v15 = (char *)&v25 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v25 - v17;
  __n128 v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v25 - v21;
  *(void *)uint64_t v22 = 0;
  v22[8] = 1;
  a3(a1, v20);
  *(void *)uint64_t v18 = 0;
  v18[8] = 1;
  v25(a1);
  sub_10006DF38((uint64_t)v22, (uint64_t)v15, a2);
  sub_10006DF38((uint64_t)v18, (uint64_t)v12, a2);
  sub_10006DF38((uint64_t)v15, a6, a2);
  uint64_t v23 = sub_10017DF08(v26);
  sub_10006DF38((uint64_t)v12, a6 + *(int *)(v23 + 48), a2);
  sub_100178110((uint64_t)v18, a2);
  sub_100178110((uint64_t)v22, a2);
  sub_100178110((uint64_t)v12, a2);
  return sub_100178110((uint64_t)v15, a2);
}

uint64_t sub_10064C204@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E86458);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E86460);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v28 - v12;
  uint64_t v14 = sub_10017DF08(&qword_100E863B0);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  __n128 v20 = (char *)&v28 - v19;
  sub_10064BC6C((uint64_t)&v28 - v19);
  *(void *)uint64_t v6 = static Alignment.leading.getter();
  *((void *)v6 + 1) = v21;
  *((void *)v6 + 2) = 0;
  v6[24] = 1;
  *((void *)v6 + 4) = 0;
  v6[40] = 0;
  uint64_t v22 = sub_10017DF08(&qword_100E86468);
  sub_10064C048(a1, &qword_100E86478, (void (*)(uint64_t, __n128))sub_10064DFC0, (void (*)(uint64_t))sub_10064F4A8, &qword_100E86480, (uint64_t)&v6[*(int *)(v22 + 44)]);
  sub_10006DF38((uint64_t)v6, (uint64_t)v10, &qword_100E86458);
  *(void *)&v10[*(int *)(v8 + 44)] = 0xBFF0000000000000;
  sub_100178110((uint64_t)v6, &qword_100E86458);
  sub_10020E72C((uint64_t)v10, (uint64_t)v13, &qword_100E86460);
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v23(v17, v20, v14);
  sub_10006DF38((uint64_t)v13, (uint64_t)v10, &qword_100E86460);
  v23(a2, v17, v14);
  uint64_t v24 = sub_10017DF08(&qword_100E86470);
  uint64_t v25 = &a2[*(int *)(v24 + 48)];
  *(void *)uint64_t v25 = 0;
  v25[8] = 0;
  sub_10006DF38((uint64_t)v10, (uint64_t)&a2[*(int *)(v24 + 64)], &qword_100E86460);
  sub_100178110((uint64_t)v13, &qword_100E86460);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v15 + 8);
  v26(v20, v14);
  sub_100178110((uint64_t)v10, &qword_100E86460);
  return ((uint64_t (*)(char *, uint64_t))v26)(v17, v14);
}

uint64_t sub_10064C518@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E86420);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E86428);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v29 = (uint64_t)&v29 - v11;
  uint64_t v12 = sub_10017DF08(&qword_100E863B0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v29 - v17;
  sub_10064BC6C((uint64_t)&v29 - v17);
  *(void *)uint64_t v5 = static Alignment.leading.getter();
  *((void *)v5 + 1) = v19;
  *((void *)v5 + 2) = 0;
  v5[24] = 1;
  *((void *)v5 + 4) = 0;
  v5[40] = 0;
  __n128 v20 = &v5[*(int *)(sub_10017DF08(&qword_100E86430) + 44)];
  *(void *)__n128 v20 = 0;
  v20[8] = 1;
  uint64_t v21 = sub_10017DF08(&qword_100E86438);
  sub_10064EA7C(a1, (uint64_t)&v20[*(int *)(v21 + 36)]);
  sub_10006DF38((uint64_t)v5, (uint64_t)v9, &qword_100E86420);
  *(void *)&v9[*(int *)(v7 + 44)] = 0xBFF0000000000000;
  sub_100178110((uint64_t)v5, &qword_100E86420);
  uint64_t v22 = v29;
  sub_10020E72C((uint64_t)v9, v29, &qword_100E86428);
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v23(v15, v18, v12);
  sub_10006DF38(v22, (uint64_t)v9, &qword_100E86428);
  uint64_t v24 = v30;
  v23(v30, v15, v12);
  uint64_t v25 = sub_10017DF08(&qword_100E86440);
  uint64_t v26 = &v24[*(int *)(v25 + 48)];
  *(void *)uint64_t v26 = 0;
  void v26[8] = 0;
  sub_10006DF38((uint64_t)v9, (uint64_t)&v24[*(int *)(v25 + 64)], &qword_100E86428);
  sub_100178110(v22, &qword_100E86428);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v13 + 8);
  v27(v18, v12);
  sub_100178110((uint64_t)v9, &qword_100E86428);
  return ((uint64_t (*)(char *, uint64_t))v27)(v15, v12);
}

uint64_t sub_10064C828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E864C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v41 = &v33[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v40 = &v33[-v7];
  uint64_t v8 = sub_10017DF08(&qword_100E63DB8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = &v33[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v37 = sub_10064B640();
  uint64_t v36 = v11;
  int v34 = v12;
  uint64_t v39 = v13;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v35 = swift_getKeyPath();
  uint64_t v14 = type metadata accessor for AveragesComponentView();
  memcpy(__dst, (const void *)(a1 + *(int *)(v14 + 40)), 0x49uLL);
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
  sub_1001BEAF4();
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
  sub_10004D56C();
  if (qword_100E62248 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_10064B640();
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  uint64_t v20 = type metadata accessor for Text.WritingMode();
  uint64_t v21 = 1;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 1, 1, v20);
  unint64_t v22 = Text.Measurements.numberOfLines(of:in:writingMode:)();
  sub_100191924(v15, v17, v19);
  swift_bridgeObjectRelease();
  sub_100178110((uint64_t)v10, &qword_100E63DB8);
  uint64_t v23 = v40;
  if (v22 <= 2)
  {
    *uint64_t v23 = static Axis.Set.horizontal.getter();
    uint64_t v24 = sub_10017DF08(&qword_100E864C8);
    sub_10064CC2C(a1, (uint64_t)&v23[*(int *)(v24 + 44)]);
    uint64_t v21 = 0;
  }
  uint64_t v25 = sub_10017DF08(&qword_100E864D0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, v21, 1, v25);
  char v26 = v34 & 1;
  uint64_t v27 = v41;
  sub_10006DF38((uint64_t)v23, (uint64_t)v41, &qword_100E864C0);
  uint64_t v28 = v37;
  uint64_t v29 = v36;
  *(void *)a2 = v37;
  *(void *)(a2 + 8) = v29;
  *(unsigned char *)(a2 + 16) = v26;
  uint64_t v30 = KeyPath;
  *(void *)(a2 + 24) = v39;
  *(void *)(a2 + 32) = v30;
  *(void *)(a2 + 40) = 4;
  *(unsigned char *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = v35;
  *(void *)(a2 + 64) = 0x3FE0000000000000;
  *(void *)(a2 + 72) = 0;
  *(unsigned char *)(a2 + 80) = 0;
  uint64_t v31 = sub_10017DF08(&qword_100E864D8);
  sub_10006DF38((uint64_t)v27, a2 + *(int *)(v31 + 64), &qword_100E864C0);
  sub_100190CC4(v28, v29, v26);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_100178110((uint64_t)v23, &qword_100E864C0);
  sub_100178110((uint64_t)v27, &qword_100E864C0);
  sub_100191924(v28, v29, v26);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10064CC2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = type metadata accessor for AveragesComponentView();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E864E0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v33 - v10;
  uint64_t v12 = sub_10017DF08(&qword_100E864E8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v33 - v16;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v33 - v19;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v33 - v22;
  uint64_t v24 = static Font.subheadline.getter();
  sub_10064CF84(v24, 0, (uint64_t)v23);
  swift_release();
  uint64_t v25 = static Font.caption2.getter();
  sub_10064CF84(v25, 0, (uint64_t)v20);
  swift_release();
  uint64_t v26 = *(void *)(a1 + 168);
  sub_100650D84(a1, (uint64_t)v5, (void (*)(void))type metadata accessor for AveragesComponentView);
  if (v26)
  {
    sub_100650DD8((uint64_t)v5, (void (*)(void))type metadata accessor for AveragesComponentView);
  }
  else
  {
    uint64_t v27 = *((void *)v5 + 13);
    sub_100650DD8((uint64_t)v5, (void (*)(void))type metadata accessor for AveragesComponentView);
    if (!v27)
    {
      uint64_t v29 = 1;
      goto LABEL_5;
    }
  }
  uint64_t v28 = static Font.caption2.getter();
  sub_10064CF84(v28, 1, (uint64_t)v11);
  swift_release();
  uint64_t v29 = 0;
LABEL_5:
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, v29, 1, v12);
  sub_10006DF38((uint64_t)v23, (uint64_t)v17, &qword_100E864E8);
  sub_10006DF38((uint64_t)v20, (uint64_t)v14, &qword_100E864E8);
  sub_10006DF38((uint64_t)v11, (uint64_t)v8, &qword_100E864E0);
  uint64_t v30 = v34;
  sub_10006DF38((uint64_t)v17, v34, &qword_100E864E8);
  uint64_t v31 = sub_10017DF08(&qword_100E864F0);
  sub_10006DF38((uint64_t)v14, v30 + *(int *)(v31 + 48), &qword_100E864E8);
  sub_10006DF38((uint64_t)v8, v30 + *(int *)(v31 + 64), &qword_100E864E0);
  sub_100178110((uint64_t)v11, &qword_100E864E0);
  sub_100178110((uint64_t)v20, &qword_100E864E8);
  sub_100178110((uint64_t)v23, &qword_100E864E8);
  sub_100178110((uint64_t)v8, &qword_100E864E0);
  sub_100178110((uint64_t)v14, &qword_100E864E8);
  return sub_100178110((uint64_t)v17, &qword_100E864E8);
}

uint64_t sub_10064CF84@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for AveragesComponentView();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v22 - v11;
  uint64_t v13 = v3[12];
  uint64_t v14 = v3[13];
  sub_100650D84((uint64_t)v3, (uint64_t)&v22 - v11, (void (*)(void))type metadata accessor for AveragesComponentView);
  if (v14)
  {
    uint64_t v15 = v14;
  }
  else
  {
    uint64_t v13 = *((void *)v12 + 10);
    uint64_t v15 = *((void *)v12 + 11);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_100650DD8((uint64_t)v12, (void (*)(void))type metadata accessor for AveragesComponentView);
  uint64_t v16 = v3[20];
  uint64_t v17 = v3[21];
  sub_100650D84((uint64_t)v3, (uint64_t)v9, (void (*)(void))type metadata accessor for AveragesComponentView);
  if (v17)
  {
    uint64_t v18 = v17;
  }
  else
  {
    uint64_t v16 = *((void *)v9 + 18);
    uint64_t v18 = *((void *)v9 + 19);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_100650DD8((uint64_t)v9, (void (*)(void))type metadata accessor for AveragesComponentView);
  *(void *)a3 = static Alignment.leading.getter();
  *(void *)(a3 + 8) = v19;
  *(void *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 24) = 1;
  *(void *)(a3 + 32) = 0;
  *(unsigned char *)(a3 + 40) = 0;
  uint64_t v20 = sub_10017DF08(&qword_100E864F8);
  sub_10064FF64(v3, a2 & 1, v13, v15, a1, v16, v18, a3 + *(int *)(v20 + 44));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10064D148@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v23 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v21 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v19 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10017DF08(&qword_100E86348);
  __chkstk_darwin(v20);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = static HorizontalAlignment.center.getter();
  sub_10064D3E8((uint64_t)&v24);
  uint64_t v6 = v24;
  uint64_t v5 = v25;
  char v7 = v26;
  uint64_t v9 = v27;
  uint64_t v8 = v28;
  uint64_t v10 = v29;
  char v11 = v30;
  uint64_t v14 = v31;
  uint64_t v17 = v32;
  uint64_t v16 = v33;
  int v15 = v34;
  uint64_t v18 = v35;
  uint64_t v24 = v4;
  uint64_t v25 = 0;
  char v26 = 1;
  uint64_t v27 = v6;
  uint64_t v28 = v5;
  LOBYTE(v29) = v7;
  uint64_t v30 = v9;
  uint64_t v31 = v8;
  uint64_t v32 = v10;
  LOBYTE(v33) = v11;
  uint64_t v34 = v14;
  uint64_t v35 = v17;
  uint64_t v36 = v16;
  char v37 = v15;
  uint64_t v38 = v18;
  sub_10017DF08(&qword_100E86360);
  sub_1001246C8(&qword_100E86358, &qword_100E86360);
  View.accessibilityRespondsToUserInteraction(_:)();
  sub_100191924(v6, v5, v7);
  swift_bridgeObjectRelease();
  sub_100191924(v8, v10, v11);
  swift_bridgeObjectRelease();
  sub_100191924(v17, v16, v15);
  swift_bridgeObjectRelease();
  uint64_t v12 = v19;
  static AccessibilityChildBehavior.combine.getter();
  sub_100650CAC();
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v23);
  return sub_100178110((uint64_t)v3, &qword_100E86348);
}

uint64_t sub_10064D3E8@<X0>(uint64_t a1@<X8>)
{
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v22 = Text.init<A>(_:)();
  uint64_t v23 = v2;
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  swift_bridgeObjectRetain();
  uint64_t v7 = Text.init<A>(_:)();
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  char v13 = v12 & 1;
  swift_bridgeObjectRetain();
  uint64_t v14 = Text.init<A>(_:)();
  uint64_t v16 = v15;
  char v17 = v6;
  char v24 = v6;
  char v19 = v18 & 1;
  *(void *)a1 = v22;
  *(void *)(a1 + 8) = v23;
  *(unsigned char *)(a1 + 16) = v17;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v13;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v14;
  *(void *)(a1 + 72) = v15;
  *(unsigned char *)(a1 + 80) = v18 & 1;
  *(void *)(a1 + 88) = v20;
  sub_100190CC4(v22, v23, v17);
  swift_bridgeObjectRetain();
  sub_100190CC4(v7, v9, v13);
  swift_bridgeObjectRetain();
  sub_100190CC4(v14, v16, v19);
  swift_bridgeObjectRetain();
  sub_100191924(v14, v16, v19);
  swift_bridgeObjectRelease();
  sub_100191924(v7, v9, v13);
  swift_bridgeObjectRelease();
  sub_100191924(v22, v23, v24);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10064D594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v107 = a2;
  uint64_t v106 = type metadata accessor for Font.TextStyle();
  uint64_t v104 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  v103 = (char *)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for _BlendModeEffect();
  __chkstk_darwin(v4 - 8);
  uint64_t v113 = (uint64_t)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = type metadata accessor for BlendMode();
  uint64_t v99 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  v111 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for AveragesComponentView();
  __chkstk_darwin(v82);
  v83 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ColorSchemeContrast();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v81 - v13;
  uint64_t v15 = type metadata accessor for Font.Leading();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  char v18 = (char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = (uint64_t (**)(void))sub_10017DF08(&qword_100E86448);
  __chkstk_darwin(v85);
  uint64_t v105 = (uint64_t)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v81 - v21;
  __chkstk_darwin(v23);
  uint64_t v102 = (uint64_t)&v81 - v24;
  int v84 = static Axis.Set.horizontal.getter();
  sub_10064E9B8(a1);
  uint64_t v87 = v114;
  uint64_t v86 = v115;
  int v110 = v116;
  uint64_t v88 = v117;
  uint64_t v94 = v118;
  uint64_t v93 = v119;
  uint64_t v91 = v120;
  uint64_t v89 = v121;
  static Font.subheadline.getter();
  uint64_t v25 = *(void (**)(void))(v16 + 104);
  unsigned int v98 = enum case for Font.Leading.tight(_:);
  uint64_t v97 = v16 + 104;
  v96 = (void (*)(char *, void, uint64_t))v25;
  v25(v18);
  uint64_t v109 = Font.leading(_:)();
  swift_release();
  char v26 = *(void (**)(char *, uint64_t))(v16 + 8);
  v92 = v18;
  uint64_t v27 = v18;
  uint64_t v28 = v82;
  uint64_t v101 = v15;
  uint64_t v100 = v16 + 8;
  v95 = v26;
  v26(v27, v15);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v29 = a1;
  uint64_t v30 = (uint64_t)v83;
  sub_10014BB38();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for ColorSchemeContrast.increased(_:), v8);
  char v31 = static ColorSchemeContrast.== infix(_:_:)();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v9 + 8);
  v32(v11, v8);
  v32(v14, v8);
  uint64_t v90 = v29;
  sub_100650D84(v29, v30, (void (*)(void))type metadata accessor for AveragesComponentView);
  if (v31)
  {
    sub_100650DD8(v30, (void (*)(void))type metadata accessor for AveragesComponentView);
  }
  else
  {
    uint64_t v33 = v30 + *(int *)(v28 + 24);
    uint64_t v34 = *(void *)v33;
    char v35 = *(unsigned char *)(v33 + 8);
    sub_100195B7C(*(void *)v33, v35);
    sub_100149AE8();
    char v37 = v36;
    sub_10018F6D8(v34, v35);
    sub_100650DD8(v30, (void (*)(void))type metadata accessor for AveragesComponentView);
    if ((v37 & 1) == 0)
    {
      int v38 = static HierarchicalShapeStyle.tertiary.getter();
      goto LABEL_6;
    }
  }
  int v38 = static HierarchicalShapeStyle.primary.getter();
LABEL_6:
  LODWORD(v83) = v38;
  uint64_t v39 = v99;
  uint64_t v41 = v111;
  uint64_t v40 = v112;
  (*(void (**)(char *, void, uint64_t))(v99 + 104))(v111, enum case for BlendMode.plusLighter(_:), v112);
  uint64_t v42 = v113;
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 16))(v113, v41, v40);
  uint64_t v43 = (uint64_t)&v22[*((int *)v85 + 9)];
  v85 = &type metadata accessor for _BlendModeEffect;
  sub_100650D84(v42, v43, (void (*)(void))&type metadata accessor for _BlendModeEffect);
  *uint64_t v22 = v84;
  uint64_t v44 = v87;
  uint64_t v45 = v86;
  *((void *)v22 + 1) = v87;
  *((void *)v22 + 2) = v45;
  char v46 = v110;
  v22[24] = v110;
  char v47 = v46;
  *((void *)v22 + 4) = v88;
  uint64_t v48 = v94;
  uint64_t v49 = v93;
  *((void *)v22 + 5) = v94;
  *((void *)v22 + 6) = v49;
  char v50 = v91;
  uint64_t v51 = v89;
  *((void *)v22 + 7) = v91;
  *((void *)v22 + 8) = v51;
  uint64_t v52 = v109;
  *((void *)v22 + 9) = KeyPath;
  *((void *)v22 + 10) = v52;
  *((_DWORD *)v22 + 22) = v83;
  sub_100190CC4(v44, v45, v47);
  swift_bridgeObjectRetain();
  sub_100147E1C(v48, v49, v50, v51);
  swift_retain();
  swift_retain();
  sub_100650DD8(v113, (void (*)(void))v85);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v111, v112);
  sub_100191924(v44, v45, v110);
  swift_bridgeObjectRelease();
  sub_100147E60(v48, v49, v50, v51);
  swift_release();
  swift_release();
  uint64_t v53 = v102;
  sub_10020E72C((uint64_t)v22, v102, &qword_100E86448);
  uint64_t v54 = *(void *)(v90 + 120);
  uint64_t v114 = *(void *)(v90 + 112);
  uint64_t v115 = v54;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v55 = Text.init<A>(_:)();
  uint64_t v57 = v56;
  LOBYTE(v45) = v58 & 1;
  uint64_t v60 = v103;
  uint64_t v59 = v104;
  uint64_t v61 = v106;
  (*(void (**)(char *, void, uint64_t))(v104 + 104))(v103, enum case for Font.TextStyle.subheadline(_:), v106);
  static Font.Weight.bold.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
  long long v62 = v92;
  uint64_t v63 = v101;
  v96(v92, v98, v101);
  Font.leading(_:)();
  swift_release();
  v95(v62, v63);
  uint64_t v64 = Text.font(_:)();
  uint64_t v66 = v65;
  LOBYTE(v62) = v67;
  swift_release();
  sub_100191924(v55, v57, v45);
  swift_bridgeObjectRelease();
  uint64_t v68 = Text.monospacedDigit()();
  uint64_t v70 = v69;
  uint64_t v72 = v71;
  LOBYTE(v45) = v73 & 1;
  sub_100191924(v64, v66, v62 & 1);
  swift_bridgeObjectRelease();
  uint64_t v74 = swift_getKeyPath();
  uint64_t v75 = v105;
  sub_10006DF38(v53, v105, &qword_100E86448);
  uint64_t v76 = v107;
  sub_10006DF38(v75, v107, &qword_100E86448);
  uint64_t v77 = sub_10017DF08(&qword_100E86450);
  uint64_t v78 = v76 + *(int *)(v77 + 48);
  *(void *)uint64_t v78 = 0x4010000000000000;
  *(unsigned char *)(v78 + 8) = 0;
  uint64_t v79 = v76 + *(int *)(v77 + 64);
  *(void *)uint64_t v79 = v68;
  *(void *)(v79 + 8) = v70;
  *(unsigned char *)(v79 + 16) = v45;
  *(void *)(v79 + 24) = v72;
  *(void *)(v79 + 32) = v74;
  *(void *)(v79 + 40) = 0x3FE999999999999ALL;
  sub_100190CC4(v68, v70, v45);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100178110(v53, &qword_100E86448);
  sub_100191924(v68, v70, v45);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_100178110(v75, &qword_100E86448);
}

uint64_t sub_10064DFC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v107 = a2;
  uint64_t v3 = type metadata accessor for Font.TextStyle();
  uint64_t v105 = *(void *)(v3 - 8);
  uint64_t v106 = v3;
  __chkstk_darwin(v3);
  uint64_t v104 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for _BlendModeEffect();
  __chkstk_darwin(v5 - 8);
  uint64_t v113 = (uint64_t)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = type metadata accessor for BlendMode();
  uint64_t v99 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  v111 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for AveragesComponentView();
  __chkstk_darwin(v82);
  v83 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ColorSchemeContrast();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v81 - v14;
  uint64_t v16 = type metadata accessor for Font.Leading();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = (uint64_t (**)(void))sub_10017DF08(&qword_100E86448);
  __chkstk_darwin(v85);
  uint64_t v103 = (uint64_t)&v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v81 - v22;
  __chkstk_darwin(v24);
  uint64_t v102 = (uint64_t)&v81 - v25;
  int v84 = static Axis.Set.horizontal.getter();
  sub_10064E9B8(a1);
  uint64_t v87 = v114;
  uint64_t v86 = v115;
  int v110 = v116;
  uint64_t v88 = v117;
  uint64_t v94 = v118;
  uint64_t v93 = v119;
  uint64_t v91 = v120;
  uint64_t v89 = v121;
  static Font.caption2.getter();
  char v26 = *(void (**)(void))(v17 + 104);
  unsigned int v98 = enum case for Font.Leading.tight(_:);
  uint64_t v97 = v17 + 104;
  v96 = (void (*)(char *, void, uint64_t))v26;
  v26(v19);
  uint64_t v109 = Font.leading(_:)();
  swift_release();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v17 + 8);
  v92 = v19;
  uint64_t v28 = v19;
  uint64_t v29 = v82;
  uint64_t v101 = v16;
  uint64_t v100 = v17 + 8;
  v95 = v27;
  v27(v28, v16);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v30 = a1;
  uint64_t v31 = (uint64_t)v83;
  sub_10014BB38();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for ColorSchemeContrast.increased(_:), v9);
  char v32 = static ColorSchemeContrast.== infix(_:_:)();
  uint64_t v33 = *(void (**)(char *, uint64_t))(v10 + 8);
  v33(v12, v9);
  v33(v15, v9);
  uint64_t v90 = v30;
  sub_100650D84(v30, v31, (void (*)(void))type metadata accessor for AveragesComponentView);
  if (v32)
  {
    sub_100650DD8(v31, (void (*)(void))type metadata accessor for AveragesComponentView);
  }
  else
  {
    uint64_t v34 = v31 + *(int *)(v29 + 24);
    uint64_t v35 = *(void *)v34;
    char v36 = *(unsigned char *)(v34 + 8);
    sub_100195B7C(*(void *)v34, v36);
    sub_100149AE8();
    char v38 = v37;
    sub_10018F6D8(v35, v36);
    sub_100650DD8(v31, (void (*)(void))type metadata accessor for AveragesComponentView);
    if ((v38 & 1) == 0)
    {
      int v39 = static HierarchicalShapeStyle.tertiary.getter();
      goto LABEL_6;
    }
  }
  int v39 = static HierarchicalShapeStyle.primary.getter();
LABEL_6:
  LODWORD(v83) = v39;
  uint64_t v40 = v99;
  uint64_t v42 = v111;
  uint64_t v41 = v112;
  (*(void (**)(char *, void, uint64_t))(v99 + 104))(v111, enum case for BlendMode.plusLighter(_:), v112);
  uint64_t v43 = v113;
  (*(void (**)(uint64_t, char *, uint64_t))(v40 + 16))(v113, v42, v41);
  uint64_t v44 = (uint64_t)&v23[*((int *)v85 + 9)];
  v85 = &type metadata accessor for _BlendModeEffect;
  sub_100650D84(v43, v44, (void (*)(void))&type metadata accessor for _BlendModeEffect);
  *uint64_t v23 = v84;
  uint64_t v45 = v87;
  uint64_t v46 = v86;
  *((void *)v23 + 1) = v87;
  *((void *)v23 + 2) = v46;
  char v47 = v110;
  v23[24] = v110;
  char v48 = v47;
  *((void *)v23 + 4) = v88;
  uint64_t v49 = v94;
  uint64_t v50 = v93;
  *((void *)v23 + 5) = v94;
  *((void *)v23 + 6) = v50;
  char v51 = v91;
  uint64_t v52 = v89;
  *((void *)v23 + 7) = v91;
  *((void *)v23 + 8) = v52;
  uint64_t v53 = v109;
  *((void *)v23 + 9) = KeyPath;
  *((void *)v23 + 10) = v53;
  *((_DWORD *)v23 + 22) = v83;
  sub_100190CC4(v45, v46, v48);
  swift_bridgeObjectRetain();
  sub_100147E1C(v49, v50, v51, v52);
  swift_retain();
  swift_retain();
  sub_100650DD8(v113, (void (*)(void))v85);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v111, v112);
  sub_100191924(v45, v46, v110);
  swift_bridgeObjectRelease();
  sub_100147E60(v49, v50, v51, v52);
  swift_release();
  swift_release();
  uint64_t v54 = v102;
  sub_10020E72C((uint64_t)v23, v102, &qword_100E86448);
  uint64_t v55 = *(void *)(v90 + 120);
  uint64_t v114 = *(void *)(v90 + 112);
  uint64_t v115 = v55;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v56 = Text.init<A>(_:)();
  uint64_t v58 = v57;
  LOBYTE(v46) = v59 & 1;
  uint64_t v61 = v104;
  uint64_t v60 = v105;
  uint64_t v62 = v106;
  (*(void (**)(char *, void, uint64_t))(v105 + 104))(v104, enum case for Font.TextStyle.caption2(_:), v106);
  static Font.Weight.bold.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v62);
  uint64_t v63 = v92;
  uint64_t v64 = v101;
  v96(v92, v98, v101);
  Font.leading(_:)();
  swift_release();
  v95(v63, v64);
  uint64_t v65 = Text.font(_:)();
  uint64_t v67 = v66;
  LOBYTE(v63) = v68;
  swift_release();
  sub_100191924(v56, v58, v46);
  swift_bridgeObjectRelease();
  uint64_t v69 = Text.monospacedDigit()();
  uint64_t v71 = v70;
  uint64_t v73 = v72;
  LOBYTE(v46) = v74 & 1;
  sub_100191924(v65, v67, v63 & 1);
  swift_bridgeObjectRelease();
  uint64_t v75 = v103;
  sub_10006DF38(v54, v103, &qword_100E86448);
  uint64_t v76 = v107;
  sub_10006DF38(v75, v107, &qword_100E86448);
  uint64_t v77 = sub_10017DF08(&qword_100E86488);
  uint64_t v78 = v76 + *(int *)(v77 + 48);
  *(void *)uint64_t v78 = 0x4010000000000000;
  *(unsigned char *)(v78 + 8) = 0;
  uint64_t v79 = v76 + *(int *)(v77 + 64);
  *(void *)uint64_t v79 = v69;
  *(void *)(v79 + 8) = v71;
  *(unsigned char *)(v79 + 16) = v46;
  *(void *)(v79 + 24) = v73;
  sub_100190CC4(v69, v71, v46);
  swift_bridgeObjectRetain();
  sub_100178110(v54, &qword_100E86448);
  sub_100191924(v69, v71, v46);
  swift_bridgeObjectRelease();
  return sub_100178110(v75, &qword_100E86448);
}

uint64_t sub_10064E9B8(uint64_t a1)
{
  sub_10014A85C();
  swift_bridgeObjectRetain();
  sub_10019FE98();
  sub_100183D2C();
  if (*(void *)(a1 + 104))
  {
    swift_bridgeObjectRetain();
    sub_10019FE98();
    sub_10018928C();
  }
  else
  {
    sub_100181540();
  }
  sub_100180014();
  sub_1001D1B74();
  sub_100163718();
  sub_100191924(v1, v2, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10064EA7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v107 = a2;
  uint64_t v106 = type metadata accessor for Font.TextStyle();
  uint64_t v104 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v103 = (char *)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for _BlendModeEffect();
  __chkstk_darwin(v4 - 8);
  uint64_t v113 = (uint64_t)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = type metadata accessor for BlendMode();
  uint64_t v99 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  v111 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for AveragesComponentView();
  __chkstk_darwin(v82);
  v83 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ColorSchemeContrast();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v81 - v13;
  uint64_t v15 = type metadata accessor for Font.Leading();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = (uint64_t (**)(void))sub_10017DF08(&qword_100E86448);
  __chkstk_darwin(v85);
  uint64_t v105 = (uint64_t)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v81 - v21;
  __chkstk_darwin(v23);
  uint64_t v102 = (uint64_t)&v81 - v24;
  int v84 = static Axis.Set.horizontal.getter();
  sub_10064FEA0(a1);
  uint64_t v87 = v114;
  uint64_t v86 = v115;
  int v110 = v116;
  uint64_t v88 = v117;
  uint64_t v94 = v118;
  uint64_t v93 = v119;
  uint64_t v91 = v120;
  uint64_t v89 = v121;
  static Font.subheadline.getter();
  uint64_t v25 = *(void (**)(void))(v16 + 104);
  unsigned int v98 = enum case for Font.Leading.tight(_:);
  uint64_t v97 = v16 + 104;
  v96 = (void (*)(char *, void, uint64_t))v25;
  v25(v18);
  uint64_t v109 = Font.leading(_:)();
  swift_release();
  char v26 = *(void (**)(char *, uint64_t))(v16 + 8);
  v92 = v18;
  uint64_t v27 = v18;
  uint64_t v28 = v82;
  uint64_t v101 = v15;
  uint64_t v100 = v16 + 8;
  v95 = v26;
  v26(v27, v15);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v29 = a1;
  uint64_t v30 = (uint64_t)v83;
  sub_10014BB38();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for ColorSchemeContrast.increased(_:), v8);
  char v31 = static ColorSchemeContrast.== infix(_:_:)();
  char v32 = *(void (**)(char *, uint64_t))(v9 + 8);
  v32(v11, v8);
  v32(v14, v8);
  uint64_t v90 = v29;
  sub_100650D84(v29, v30, (void (*)(void))type metadata accessor for AveragesComponentView);
  if (v31)
  {
    sub_100650DD8(v30, (void (*)(void))type metadata accessor for AveragesComponentView);
  }
  else
  {
    uint64_t v33 = v30 + *(int *)(v28 + 24);
    uint64_t v34 = *(void *)v33;
    char v35 = *(unsigned char *)(v33 + 8);
    sub_100195B7C(*(void *)v33, v35);
    sub_100149AE8();
    char v37 = v36;
    sub_10018F6D8(v34, v35);
    sub_100650DD8(v30, (void (*)(void))type metadata accessor for AveragesComponentView);
    if ((v37 & 1) == 0)
    {
      int v38 = static HierarchicalShapeStyle.tertiary.getter();
      goto LABEL_6;
    }
  }
  int v38 = static HierarchicalShapeStyle.primary.getter();
LABEL_6:
  LODWORD(v83) = v38;
  uint64_t v39 = v99;
  uint64_t v41 = v111;
  uint64_t v40 = v112;
  (*(void (**)(char *, void, uint64_t))(v99 + 104))(v111, enum case for BlendMode.plusLighter(_:), v112);
  uint64_t v42 = v113;
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 16))(v113, v41, v40);
  uint64_t v43 = (uint64_t)&v22[*((int *)v85 + 9)];
  v85 = &type metadata accessor for _BlendModeEffect;
  sub_100650D84(v42, v43, (void (*)(void))&type metadata accessor for _BlendModeEffect);
  *uint64_t v22 = v84;
  uint64_t v44 = v87;
  uint64_t v45 = v86;
  *((void *)v22 + 1) = v87;
  *((void *)v22 + 2) = v45;
  char v46 = v110;
  v22[24] = v110;
  char v47 = v46;
  *((void *)v22 + 4) = v88;
  uint64_t v48 = v94;
  uint64_t v49 = v93;
  *((void *)v22 + 5) = v94;
  *((void *)v22 + 6) = v49;
  char v50 = v91;
  uint64_t v51 = v89;
  *((void *)v22 + 7) = v91;
  *((void *)v22 + 8) = v51;
  uint64_t v52 = v109;
  *((void *)v22 + 9) = KeyPath;
  *((void *)v22 + 10) = v52;
  *((_DWORD *)v22 + 22) = v83;
  sub_100190CC4(v44, v45, v47);
  swift_bridgeObjectRetain();
  sub_100147E1C(v48, v49, v50, v51);
  swift_retain();
  swift_retain();
  sub_100650DD8(v113, (void (*)(void))v85);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v111, v112);
  sub_100191924(v44, v45, v110);
  swift_bridgeObjectRelease();
  sub_100147E60(v48, v49, v50, v51);
  swift_release();
  swift_release();
  uint64_t v53 = v102;
  sub_10020E72C((uint64_t)v22, v102, &qword_100E86448);
  uint64_t v54 = *(void *)(v90 + 184);
  uint64_t v114 = *(void *)(v90 + 176);
  uint64_t v115 = v54;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v55 = Text.init<A>(_:)();
  uint64_t v57 = v56;
  LOBYTE(v45) = v58 & 1;
  uint64_t v60 = v103;
  uint64_t v59 = v104;
  uint64_t v61 = v106;
  (*(void (**)(char *, void, uint64_t))(v104 + 104))(v103, enum case for Font.TextStyle.subheadline(_:), v106);
  static Font.Weight.bold.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
  uint64_t v62 = v92;
  uint64_t v63 = v101;
  v96(v92, v98, v101);
  Font.leading(_:)();
  swift_release();
  v95(v62, v63);
  uint64_t v64 = Text.font(_:)();
  uint64_t v66 = v65;
  LOBYTE(v62) = v67;
  swift_release();
  sub_100191924(v55, v57, v45);
  swift_bridgeObjectRelease();
  uint64_t v68 = Text.monospacedDigit()();
  uint64_t v70 = v69;
  uint64_t v72 = v71;
  LOBYTE(v45) = v73 & 1;
  sub_100191924(v64, v66, v62 & 1);
  swift_bridgeObjectRelease();
  uint64_t v74 = swift_getKeyPath();
  uint64_t v75 = v105;
  sub_10006DF38(v53, v105, &qword_100E86448);
  uint64_t v76 = v107;
  sub_10006DF38(v75, v107, &qword_100E86448);
  uint64_t v77 = sub_10017DF08(&qword_100E86450);
  uint64_t v78 = v76 + *(int *)(v77 + 48);
  *(void *)uint64_t v78 = 0x4010000000000000;
  *(unsigned char *)(v78 + 8) = 0;
  uint64_t v79 = v76 + *(int *)(v77 + 64);
  *(void *)uint64_t v79 = v68;
  *(void *)(v79 + 8) = v70;
  *(unsigned char *)(v79 + 16) = v45;
  *(void *)(v79 + 24) = v72;
  *(void *)(v79 + 32) = v74;
  *(void *)(v79 + 40) = 0x3FE999999999999ALL;
  sub_100190CC4(v68, v70, v45);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100178110(v53, &qword_100E86448);
  sub_100191924(v68, v70, v45);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_100178110(v75, &qword_100E86448);
}

uint64_t sub_10064F4A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v107 = a2;
  uint64_t v3 = type metadata accessor for Font.TextStyle();
  uint64_t v105 = *(void *)(v3 - 8);
  uint64_t v106 = v3;
  __chkstk_darwin(v3);
  uint64_t v104 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for _BlendModeEffect();
  __chkstk_darwin(v5 - 8);
  uint64_t v113 = (uint64_t)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = type metadata accessor for BlendMode();
  uint64_t v99 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  v111 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for AveragesComponentView();
  __chkstk_darwin(v82);
  v83 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ColorSchemeContrast();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v81 - v14;
  uint64_t v16 = type metadata accessor for Font.Leading();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = (uint64_t (**)(void))sub_10017DF08(&qword_100E86448);
  __chkstk_darwin(v85);
  uint64_t v103 = (uint64_t)&v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v81 - v22;
  __chkstk_darwin(v24);
  uint64_t v102 = (uint64_t)&v81 - v25;
  int v84 = static Axis.Set.horizontal.getter();
  sub_10064FEA0(a1);
  uint64_t v87 = v114;
  uint64_t v86 = v115;
  int v110 = v116;
  uint64_t v88 = v117;
  uint64_t v94 = v118;
  uint64_t v93 = v119;
  uint64_t v91 = v120;
  uint64_t v89 = v121;
  static Font.caption2.getter();
  char v26 = *(void (**)(void))(v17 + 104);
  unsigned int v98 = enum case for Font.Leading.tight(_:);
  uint64_t v97 = v17 + 104;
  v96 = (void (*)(char *, void, uint64_t))v26;
  v26(v19);
  uint64_t v109 = Font.leading(_:)();
  swift_release();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v17 + 8);
  v92 = v19;
  uint64_t v28 = v19;
  uint64_t v29 = v82;
  uint64_t v101 = v16;
  uint64_t v100 = v17 + 8;
  v95 = v27;
  v27(v28, v16);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v30 = a1;
  uint64_t v31 = (uint64_t)v83;
  sub_10014BB38();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for ColorSchemeContrast.increased(_:), v9);
  char v32 = static ColorSchemeContrast.== infix(_:_:)();
  uint64_t v33 = *(void (**)(char *, uint64_t))(v10 + 8);
  v33(v12, v9);
  v33(v15, v9);
  uint64_t v90 = v30;
  sub_100650D84(v30, v31, (void (*)(void))type metadata accessor for AveragesComponentView);
  if (v32)
  {
    sub_100650DD8(v31, (void (*)(void))type metadata accessor for AveragesComponentView);
  }
  else
  {
    uint64_t v34 = v31 + *(int *)(v29 + 24);
    uint64_t v35 = *(void *)v34;
    char v36 = *(unsigned char *)(v34 + 8);
    sub_100195B7C(*(void *)v34, v36);
    sub_100149AE8();
    char v38 = v37;
    sub_10018F6D8(v35, v36);
    sub_100650DD8(v31, (void (*)(void))type metadata accessor for AveragesComponentView);
    if ((v38 & 1) == 0)
    {
      int v39 = static HierarchicalShapeStyle.tertiary.getter();
      goto LABEL_6;
    }
  }
  int v39 = static HierarchicalShapeStyle.primary.getter();
LABEL_6:
  LODWORD(v83) = v39;
  uint64_t v40 = v99;
  uint64_t v42 = v111;
  uint64_t v41 = v112;
  (*(void (**)(char *, void, uint64_t))(v99 + 104))(v111, enum case for BlendMode.plusLighter(_:), v112);
  uint64_t v43 = v113;
  (*(void (**)(uint64_t, char *, uint64_t))(v40 + 16))(v113, v42, v41);
  uint64_t v44 = (uint64_t)&v23[*((int *)v85 + 9)];
  v85 = &type metadata accessor for _BlendModeEffect;
  sub_100650D84(v43, v44, (void (*)(void))&type metadata accessor for _BlendModeEffect);
  *uint64_t v23 = v84;
  uint64_t v45 = v87;
  uint64_t v46 = v86;
  *((void *)v23 + 1) = v87;
  *((void *)v23 + 2) = v46;
  char v47 = v110;
  v23[24] = v110;
  char v48 = v47;
  *((void *)v23 + 4) = v88;
  uint64_t v49 = v94;
  uint64_t v50 = v93;
  *((void *)v23 + 5) = v94;
  *((void *)v23 + 6) = v50;
  char v51 = v91;
  uint64_t v52 = v89;
  *((void *)v23 + 7) = v91;
  *((void *)v23 + 8) = v52;
  uint64_t v53 = v109;
  *((void *)v23 + 9) = KeyPath;
  *((void *)v23 + 10) = v53;
  *((_DWORD *)v23 + 22) = v83;
  sub_100190CC4(v45, v46, v48);
  swift_bridgeObjectRetain();
  sub_100147E1C(v49, v50, v51, v52);
  swift_retain();
  swift_retain();
  sub_100650DD8(v113, (void (*)(void))v85);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v111, v112);
  sub_100191924(v45, v46, v110);
  swift_bridgeObjectRelease();
  sub_100147E60(v49, v50, v51, v52);
  swift_release();
  swift_release();
  uint64_t v54 = v102;
  sub_10020E72C((uint64_t)v23, v102, &qword_100E86448);
  uint64_t v55 = *(void *)(v90 + 184);
  uint64_t v114 = *(void *)(v90 + 176);
  uint64_t v115 = v55;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v56 = Text.init<A>(_:)();
  uint64_t v58 = v57;
  LOBYTE(v46) = v59 & 1;
  uint64_t v61 = v104;
  uint64_t v60 = v105;
  uint64_t v62 = v106;
  (*(void (**)(char *, void, uint64_t))(v105 + 104))(v104, enum case for Font.TextStyle.caption2(_:), v106);
  static Font.Weight.bold.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v62);
  uint64_t v63 = v92;
  uint64_t v64 = v101;
  v96(v92, v98, v101);
  Font.leading(_:)();
  swift_release();
  v95(v63, v64);
  uint64_t v65 = Text.font(_:)();
  uint64_t v67 = v66;
  LOBYTE(v63) = v68;
  swift_release();
  sub_100191924(v56, v58, v46);
  swift_bridgeObjectRelease();
  uint64_t v69 = Text.monospacedDigit()();
  uint64_t v71 = v70;
  uint64_t v73 = v72;
  LOBYTE(v46) = v74 & 1;
  sub_100191924(v65, v67, v63 & 1);
  swift_bridgeObjectRelease();
  uint64_t v75 = v103;
  sub_10006DF38(v54, v103, &qword_100E86448);
  uint64_t v76 = v107;
  sub_10006DF38(v75, v107, &qword_100E86448);
  uint64_t v77 = sub_10017DF08(&qword_100E86488);
  uint64_t v78 = v76 + *(int *)(v77 + 48);
  *(void *)uint64_t v78 = 0x4010000000000000;
  *(unsigned char *)(v78 + 8) = 0;
  uint64_t v79 = v76 + *(int *)(v77 + 64);
  *(void *)uint64_t v79 = v69;
  *(void *)(v79 + 8) = v71;
  *(unsigned char *)(v79 + 16) = v46;
  *(void *)(v79 + 24) = v73;
  sub_100190CC4(v69, v71, v46);
  swift_bridgeObjectRetain();
  sub_100178110(v54, &qword_100E86448);
  sub_100191924(v69, v71, v46);
  swift_bridgeObjectRelease();
  return sub_100178110(v75, &qword_100E86448);
}

uint64_t sub_10064FEA0(uint64_t a1)
{
  sub_10014A85C();
  swift_bridgeObjectRetain();
  sub_10019FE98();
  sub_100183D2C();
  if (*(void *)(a1 + 168))
  {
    swift_bridgeObjectRetain();
    sub_10019FE98();
    sub_10018928C();
  }
  else
  {
    sub_100181540();
  }
  sub_100180014();
  sub_1001D1B74();
  sub_100163718();
  sub_100191924(v1, v2, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10064FF64@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v40 = a6;
  uint64_t v41 = a8;
  uint64_t v42 = a3;
  uint64_t v43 = a5;
  uint64_t v12 = sub_10017DF08(&qword_100E86500);
  __chkstk_darwin(v12);
  uint64_t v39 = (uint64_t)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v38 = (uint64_t)&v38 - v15;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v38 - v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v38 - v20;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v38 - v23;
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v38 - v26;
  if ((a2 & 1) == 0)
  {
    a4 = a1[11];
    uint64_t v42 = a1[10];
  }
  swift_bridgeObjectRetain();
  uint64_t v28 = a1[14];
  uint64_t v29 = a1[15];
  *(void *)uint64_t v24 = 0;
  v24[8] = 1;
  sub_1006501FC(v42, a4, v43, (uint64_t)a1, v28, v29, (uint64_t)&v24[*(int *)(v12 + 36)]);
  swift_bridgeObjectRelease();
  sub_10020E72C((uint64_t)v24, (uint64_t)v27, &qword_100E86500);
  uint64_t v30 = v40;
  if ((a2 & 1) == 0)
  {
    uint64_t v30 = a1[18];
    a7 = a1[19];
  }
  swift_bridgeObjectRetain();
  uint64_t v31 = a1[22];
  uint64_t v32 = a1[23];
  *(void *)uint64_t v18 = 0;
  v18[8] = 1;
  sub_1006501FC(v30, a7, v43, (uint64_t)a1, v31, v32, (uint64_t)&v18[*(int *)(v12 + 36)]);
  swift_bridgeObjectRelease();
  sub_10020E72C((uint64_t)v18, (uint64_t)v21, &qword_100E86500);
  uint64_t v33 = v38;
  sub_10006DF38((uint64_t)v27, v38, &qword_100E86500);
  uint64_t v34 = v39;
  sub_10006DF38((uint64_t)v21, v39, &qword_100E86500);
  uint64_t v35 = v41;
  sub_10006DF38(v33, v41, &qword_100E86500);
  uint64_t v36 = sub_10017DF08(&qword_100E86508);
  sub_10006DF38(v34, v35 + *(int *)(v36 + 48), &qword_100E86500);
  sub_100178110((uint64_t)v21, &qword_100E86500);
  sub_100178110((uint64_t)v27, &qword_100E86500);
  sub_100178110(v34, &qword_100E86500);
  return sub_100178110(v33, &qword_100E86500);
}

uint64_t sub_1006501FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v126 = a5;
  uint64_t v127 = a6;
  uint64_t v109 = a4;
  uint64_t v130 = a7;
  uint64_t v10 = type metadata accessor for _BlendModeEffect();
  __chkstk_darwin(v10 - 8);
  uint64_t v121 = &v99[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for BlendMode();
  uint64_t v119 = *(void *)(v12 - 8);
  uint64_t v120 = v12;
  __chkstk_darwin(v12);
  uint64_t v118 = &v99[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v105 = type metadata accessor for AveragesComponentView();
  __chkstk_darwin(v105);
  uint64_t v107 = &v99[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v108 = type metadata accessor for ColorSchemeContrast();
  uint64_t v15 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v106 = &v99[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  uint64_t v104 = &v99[-v18];
  uint64_t v19 = type metadata accessor for Font.Leading();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = &v99[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v110 = sub_10017DF08(&qword_100E63F78);
  __chkstk_darwin(v110);
  uint64_t v24 = &v99[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v117 = sub_10017DF08(&qword_100E77070);
  __chkstk_darwin(v117);
  v128 = &v99[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v26);
  unsigned __int8 v116 = &v99[-v27];
  __chkstk_darwin(v28);
  v125 = &v99[-v29];
  uint64_t v131 = a1;
  uint64_t v132 = a2;
  unint64_t v30 = sub_10014A85C();
  swift_bridgeObjectRetain();
  unint64_t v115 = v30;
  uint64_t v31 = Text.init<A>(_:)();
  uint64_t v33 = v32;
  LOBYTE(v30) = v34 & 1;
  uint64_t v35 = *(void (**)(void))(v20 + 104);
  unsigned int v114 = enum case for Font.Leading.tight(_:);
  uint64_t v113 = v20 + 104;
  uint64_t v112 = (void (*)(unsigned char *, void, uint64_t))v35;
  v35(v22);
  uint64_t v129 = a3;
  Font.leading(_:)();
  uint64_t v36 = *(void (**)(unsigned char *, uint64_t))(v20 + 8);
  v122 = v22;
  uint64_t v124 = v19;
  uint64_t v37 = v19;
  uint64_t v38 = v105;
  uint64_t v123 = v20 + 8;
  v111 = v36;
  v36(v22, v37);
  uint64_t v102 = Text.font(_:)();
  uint64_t v101 = v39;
  int v100 = v40;
  uint64_t v103 = v41;
  swift_release();
  uint64_t v42 = v33;
  uint64_t v43 = (uint64_t)v107;
  sub_100191924(v31, v42, v30);
  swift_bridgeObjectRelease();
  uint64_t v44 = v109;
  uint64_t v45 = v104;
  sub_10014BB38();
  uint64_t v46 = v106;
  uint64_t v47 = v108;
  (*(void (**)(unsigned char *, void, uint64_t))(v15 + 104))(v106, enum case for ColorSchemeContrast.increased(_:), v108);
  char v48 = v46;
  LOBYTE(v46) = static ColorSchemeContrast.== infix(_:_:)();
  uint64_t v49 = *(void (**)(unsigned char *, uint64_t))(v15 + 8);
  v49(v48, v47);
  v49(v45, v47);
  sub_100650D84(v44, v43, (void (*)(void))type metadata accessor for AveragesComponentView);
  if (v46)
  {
    sub_100650DD8(v43, (void (*)(void))type metadata accessor for AveragesComponentView);
  }
  else
  {
    uint64_t v50 = v43 + *(int *)(v38 + 24);
    uint64_t v51 = *(void *)v50;
    char v52 = *(unsigned char *)(v50 + 8);
    sub_100195B7C(*(void *)v50, v52);
    sub_100149AE8();
    char v54 = v53;
    sub_10018F6D8(v51, v52);
    sub_100650DD8(v43, (void (*)(void))type metadata accessor for AveragesComponentView);
    if ((v54 & 1) == 0)
    {
      int v55 = static HierarchicalShapeStyle.tertiary.getter();
      goto LABEL_6;
    }
  }
  int v55 = static HierarchicalShapeStyle.primary.getter();
LABEL_6:
  char v56 = v100 & 1;
  LODWORD(v131) = v55;
  uint64_t v57 = v102;
  uint64_t v58 = v101;
  uint64_t v59 = Text.foregroundStyle<A>(_:)();
  uint64_t v61 = v60;
  uint64_t v63 = v62;
  char v65 = v64 & 1;
  sub_100191924(v57, v58, v56);
  swift_bridgeObjectRelease();
  uint64_t v67 = v118;
  uint64_t v66 = v119;
  uint64_t v68 = v120;
  (*(void (**)(unsigned char *, void, uint64_t))(v119 + 104))(v118, enum case for BlendMode.plusLighter(_:), v120);
  uint64_t v69 = (uint64_t)v121;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v66 + 16))(v121, v67, v68);
  sub_100650D84(v69, (uint64_t)&v24[*(int *)(v110 + 36)], (void (*)(void))&type metadata accessor for _BlendModeEffect);
  *(void *)uint64_t v24 = v59;
  *((void *)v24 + 1) = v61;
  v24[16] = v65;
  *((void *)v24 + 3) = v63;
  sub_100190CC4(v59, v61, v65);
  swift_bridgeObjectRetain();
  sub_100650DD8(v69, (void (*)(void))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(unsigned char *, uint64_t))(v66 + 8))(v67, v68);
  sub_100191924(v59, v61, v65);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v71 = v116;
  sub_10006DF38((uint64_t)v24, (uint64_t)v116, &qword_100E63F78);
  uint64_t v72 = &v71[*(int *)(v117 + 36)];
  *(void *)uint64_t v72 = KeyPath;
  *((void *)v72 + 1) = 1;
  v72[16] = 0;
  sub_100178110((uint64_t)v24, &qword_100E63F78);
  uint64_t v73 = v125;
  sub_10020E72C((uint64_t)v71, (uint64_t)v125, &qword_100E77070);
  uint64_t v131 = v126;
  uint64_t v132 = v127;
  swift_bridgeObjectRetain();
  uint64_t v74 = Text.init<A>(_:)();
  uint64_t v76 = v75;
  char v78 = v77 & 1;
  static Font.Weight.bold.getter();
  Font.weight(_:)();
  uint64_t v79 = v122;
  uint64_t v80 = v124;
  v112(v122, v114, v124);
  Font.leading(_:)();
  swift_release();
  v111(v79, v80);
  uint64_t v81 = Text.font(_:)();
  uint64_t v83 = v82;
  LOBYTE(v67) = v84;
  swift_release();
  sub_100191924(v74, v76, v78);
  swift_bridgeObjectRelease();
  uint64_t v85 = Text.monospacedDigit()();
  uint64_t v87 = v86;
  uint64_t v89 = v88;
  char v91 = v90 & 1;
  sub_100191924(v81, v83, v67 & 1);
  swift_bridgeObjectRelease();
  uint64_t v92 = swift_getKeyPath();
  uint64_t v93 = v128;
  sub_10006DF38((uint64_t)v73, (uint64_t)v128, &qword_100E77070);
  uint64_t v94 = v130;
  sub_10006DF38((uint64_t)v93, v130, &qword_100E77070);
  uint64_t v95 = sub_10017DF08(&qword_100E86510);
  uint64_t v96 = v94 + *(int *)(v95 + 48);
  *(void *)uint64_t v96 = 0x4010000000000000;
  *(unsigned char *)(v96 + 8) = 0;
  uint64_t v97 = v94 + *(int *)(v95 + 64);
  *(void *)uint64_t v97 = v85;
  *(void *)(v97 + 8) = v87;
  *(unsigned char *)(v97 + 16) = v91;
  *(void *)(v97 + 24) = v89;
  *(void *)(v97 + 32) = v92;
  *(void *)(v97 + 40) = 1;
  *(unsigned char *)(v97 + 48) = 0;
  sub_100190CC4(v85, v87, v91);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100178110((uint64_t)v73, &qword_100E77070);
  sub_100191924(v85, v87, v91);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_100178110((uint64_t)v93, &qword_100E77070);
}

uint64_t sub_100650BC8@<X0>(uint64_t a1@<X8>)
{
  return sub_10064D148(a1);
}

unint64_t sub_100650BD0()
{
  unint64_t result = qword_100E86340;
  if (!qword_100E86340)
  {
    sub_10018C6DC(&qword_100E86318);
    sub_10018C6DC(&qword_100E86308);
    sub_1001246C8(&qword_100E86330, &qword_100E86308);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86340);
  }
  return result;
}

unint64_t sub_100650CAC()
{
  unint64_t result = qword_100E86350;
  if (!qword_100E86350)
  {
    sub_10018C6DC(&qword_100E86348);
    sub_1001246C8(&qword_100E86358, &qword_100E86360);
    sub_100282C04((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86350);
  }
  return result;
}

uint64_t sub_100650D84(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_100650DD8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_100650E3C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100650EF0()
{
  uint64_t v0 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for ActivityAction();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10040B6B8();
  if (!v7)
  {
    sub_100187E28();
    goto LABEL_5;
  }
  uint64_t v8 = v6;
  uint64_t v9 = v7;
  type metadata accessor for WeatherLocation();
  if (sub_1007BFC08(v8, v9))
  {
    swift_bridgeObjectRelease();
    sub_100187E28();
LABEL_5:
    swift_storeEnumTagMultiPayload();
    char v10 = static LocationSearchEntityFromStringResolver.__derived_struct_equals(_:_:)();
    char v11 = variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
    sub_100389228((uint64_t)v5, v10 & 1, v11 & 1);
    return sub_1002AE148((uint64_t)v5);
  }
  v23[0] = v8;
  v23[1] = v9;
  sub_10014A85C();
  uint64_t v13 = StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)();
  swift_bridgeObjectRelease();
  if (*(void *)(v13 + 16) != 2) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = Double.init(_:)();
  if (v14) {
    return swift_bridgeObjectRelease();
  }
  if (*(void *)(v13 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    double v15 = *(double *)&result;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t result = Double.init(_:)();
    if ((v16 & 1) == 0)
    {
      double v17 = *(double *)&result;
      uint64_t v18 = sub_10040B6D4();
      unint64_t v20 = v19;
      uint64_t v21 = type metadata accessor for Date();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v2, 1, 1, v21);
      sub_1002AB8F0();
      uint64_t v22 = Dictionary.init(dictionaryLiteral:)();
      sub_1002AA938(v18, v20, 17, (uint64_t)v2, v22, v15, v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_1001E7540((uint64_t)v2);
    }
  }
  return result;
}

uint64_t type metadata accessor for NanoWeatherUserActivityHandler()
{
  return self;
}

uint64_t sub_1006511E0(void *a1, void *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1])
  {
    _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = sub_1001190E0();
    if ((v6 & 1) == 0) {
      return result;
    }
  }
  uint64_t v7 = a1[3];
  uint64_t v8 = a2[3];
  if (v7)
  {
    if (v8)
    {
      if (a1[2] != a2[2] || v7 != v8)
      {
        _stringCompareWithSmolCheck(_:_:expecting:)();
        uint64_t result = sub_1001190E0();
        if ((v10 & 1) == 0) {
          return result;
        }
      }
      goto LABEL_17;
    }
    return 0;
  }
  if (v8) {
    return 0;
  }
LABEL_17:
  BOOL v11 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = sub_1001190E0(), (v12 & 1) != 0))
  {
    BOOL v13 = a1[6] == a2[6] && a1[7] == a2[7];
    if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = sub_1001190E0(), (v14 & 1) != 0))
    {
      BOOL v15 = a1[8] == a2[8] && a1[9] == a2[9];
      if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = sub_1001190E0(), (v16 & 1) != 0))
      {
        BOOL v17 = a1[10] == a2[10] && a1[11] == a2[11];
        if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = sub_1001190E0(), (v18 & 1) != 0))
        {
          uint64_t v19 = a1[13];
          uint64_t v20 = a2[13];
          if (v19)
          {
            if (v20)
            {
              BOOL v21 = a1[12] == a2[12] && v19 == v20;
              if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
                return 1;
              }
            }
          }
          else if (!v20)
          {
            return 1;
          }
          return 0;
        }
      }
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationViewPreprocessedDataModel()
{
  return &type metadata for LocationViewPreprocessedDataModel;
}

uint64_t sub_10065134C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74617265706D6574 && a2 == 0xEB00000000657275;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x74617265706D6574 && a2 == 0xEF74696E55657275;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x8000000100CAC420 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = a1 == 0x706D655468676968 && a2 == 0xEF65727574617265;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        BOOL v8 = a1 == 0x65706D6554776F6CLL && a2 == 0xEE00657275746172;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0xD000000000000018 && a2 == 0x8000000100C9EA60 {
               || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        }
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else if (a1 == 0x5373736572646461 && a2 == 0xED0000676E697274)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else
        {
          char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v10) {
            return 6;
          }
          else {
            return 7;
          }
        }
      }
    }
  }
}

uint64_t sub_1006516B0()
{
  return 7;
}

unint64_t sub_1006516B8(char a1)
{
  unint64_t result = 0x74617265706D6574;
  switch(a1)
  {
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x706D655468676968;
      break;
    case 4:
      unint64_t result = 0x65706D6554776F6CLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000018;
      break;
    case 6:
      unint64_t result = 0x5373736572646461;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1006517D4(void *a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E865D0);
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  BOOL v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001B1E64(a1, a1[3]);
  sub_100651F68();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v10[15] = 0;
  sub_10017FFDC();
  if (!v1)
  {
    v10[14] = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v10[13] = 2;
    sub_10017FFDC();
    v10[12] = 3;
    sub_10017FFDC();
    v10[11] = 4;
    sub_10017FFDC();
    v10[10] = 5;
    sub_10017FFDC();
    v10[9] = 6;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v3);
}

uint64_t sub_100651998@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_10017DF08(&qword_100E865C0);
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  char v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a1, a1[3]);
  sub_100651F68();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  char v50 = 0;
  uint64_t v11 = sub_100180060();
  uint64_t v13 = v12;
  char v49 = 1;
  swift_bridgeObjectRetain();
  uint64_t v38 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v39 = v11;
  char v48 = 2;
  uint64_t v15 = v14;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_100180060();
  uint64_t v43 = v15;
  uint64_t v37 = v16;
  char v47 = 3;
  uint64_t v42 = v17;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_100180060();
  uint64_t v41 = v19;
  uint64_t v36 = v18;
  char v46 = 4;
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_100180060();
  char v45 = 5;
  uint64_t v40 = v20;
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_100180060();
  uint64_t v34 = v21;
  char v44 = 6;
  swift_bridgeObjectRetain();
  uint64_t v22 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v24 = v23;
  uint64_t v25 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v32 = v22;
  v25(v10, v5);
  swift_bridgeObjectRetain();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v26 = v34;
  swift_bridgeObjectRelease();
  uint64_t v27 = v40;
  swift_bridgeObjectRelease();
  uint64_t v28 = v41;
  swift_bridgeObjectRelease();
  uint64_t v29 = v42;
  swift_bridgeObjectRelease();
  uint64_t v30 = v43;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v39;
  a2[1] = v13;
  a2[2] = v38;
  a2[3] = v30;
  a2[4] = v37;
  a2[5] = v29;
  a2[6] = v36;
  a2[7] = v28;
  a2[8] = v35;
  a2[9] = v27;
  a2[10] = v33;
  a2[11] = v26;
  a2[12] = v32;
  a2[13] = v24;
  return result;
}

unint64_t sub_100651E30()
{
  return sub_1006516B8(*v0);
}

uint64_t sub_100651E38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10065134C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100651E60@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1006516B0();
  *a1 = result;
  return result;
}

uint64_t sub_100651E88(uint64_t a1)
{
  unint64_t v2 = sub_100651F68();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100651EC4(uint64_t a1)
{
  unint64_t v2 = sub_100651F68();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_100651F00@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = (void *)sub_100651998(a1, v5);
  if (!v2) {
    return memcpy(a2, v5, 0x70uLL);
  }
  return result;
}

uint64_t sub_100651F4C(void *a1)
{
  return sub_1006517D4(a1);
}

unint64_t sub_100651F68()
{
  unint64_t result = qword_100E865C8;
  if (!qword_100E865C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E865C8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LocationViewPreprocessedDataModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100652080);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationViewPreprocessedDataModel.CodingKeys()
{
  return &type metadata for LocationViewPreprocessedDataModel.CodingKeys;
}

unint64_t sub_1006520BC()
{
  unint64_t result = qword_100E865D8;
  if (!qword_100E865D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E865D8);
  }
  return result;
}

unint64_t sub_10065210C()
{
  unint64_t result = qword_100E865E0;
  if (!qword_100E865E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E865E0);
  }
  return result;
}

unint64_t sub_10065215C()
{
  unint64_t result = qword_100E865E8;
  if (!qword_100E865E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E865E8);
  }
  return result;
}

unsigned char *sub_1006521A8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100652274);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

void type metadata accessor for ReportWeatherDescription()
{
}

unsigned char *sub_1006522A8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100652374);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

void type metadata accessor for ReportWeatherOtherCondition()
{
}

void type metadata accessor for ReportWeatherAirQualityRating()
{
}

void type metadata accessor for ReportWeatherWindRating()
{
}

unsigned char *sub_1006523C4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100652490);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for ReportWeatherTemperatureRating()
{
}

uint64_t sub_1006524C4()
{
  return sub_10065438C(&qword_100E865F0, &qword_100E852C0);
}

Swift::Int sub_1006524EC(uint64_t a1)
{
  return sub_1006529F4(a1, (void (*)(uint64_t))sub_100235F78);
}

Swift::Int sub_100652504(char a1)
{
  return sub_1002C42D8(0, a1);
}

Swift::Int sub_100652510(uint64_t a1)
{
  return sub_1006529F4(a1, (void (*)(uint64_t))sub_100342FFC);
}

Swift::Int sub_100652528(uint64_t a1)
{
  return sub_10065293C(a1, (void (*)(unsigned char *, uint64_t))sub_1002C2374);
}

Swift::Int sub_100652540(uint64_t a1)
{
  return sub_1006529F4(a1, (void (*)(uint64_t))LocationAuthorizationState.rawValue.getter);
}

Swift::Int sub_100652558(uint64_t a1)
{
  return sub_10065293C(a1, (void (*)(unsigned char *, uint64_t))sub_1002C2C68);
}

Swift::Int sub_100652570(uint64_t a1)
{
  return sub_1006529F4(a1, (void (*)(uint64_t))sub_10038DF14);
}

Swift::Int sub_100652588(uint64_t a1)
{
  return sub_1006529F4(a1, (void (*)(uint64_t))sub_1003ADD20);
}

Swift::Int sub_1006525A4(uint64_t a1)
{
  return sub_10065293C(a1, (void (*)(unsigned char *, uint64_t))sub_1002C2A5C);
}

Swift::Int sub_1006525BC(uint64_t a1)
{
  return sub_1006529F4(a1, (void (*)(uint64_t))sub_10040B474);
}

Swift::Int sub_1006525D4()
{
  return sub_1002C3F84();
}

Swift::Int sub_1006525E0()
{
  return sub_1002C3FFC();
}

Swift::Int sub_1006525EC(uint64_t a1)
{
  return sub_1006529F4(a1, (void (*)(uint64_t))sub_1006A2180);
}

Swift::Int sub_100652604(uint64_t a1)
{
  return sub_1006529F4(a1, (void (*)(uint64_t))sub_1006B80C0);
}

Swift::Int sub_10065261C(char a1)
{
  return sub_1002C3D90(0, a1);
}

Swift::Int sub_100652628(char a1)
{
  return sub_1002C3E68(0, a1);
}

Swift::Int sub_100652634()
{
  return sub_1002C3EEC();
}

Swift::Int sub_100652640(Swift::UInt a1)
{
  return Hasher._finalize()();
}

Swift::Int sub_100652680()
{
  return sub_1002C40AC();
}

Swift::Int sub_10065268C(uint64_t a1)
{
  return sub_1006529F4(a1, (void (*)(uint64_t))sub_100A6C3F8);
}

Swift::Int sub_1006526A4()
{
  return sub_1002C4120();
}

Swift::Int sub_1006526B0(uint64_t a1)
{
  return sub_1006529F4(a1, (void (*)(uint64_t))DetailKind.rawValue.getter);
}

Swift::Int sub_1006526C8(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

Swift::Int sub_100652710()
{
  return sub_1002C41F8();
}

Swift::Int sub_10065271C()
{
  return sub_1002C4264();
}

Swift::Int sub_100652728(uint64_t a1)
{
  return sub_1006529F4(a1, (void (*)(uint64_t))sub_10094865C);
}

Swift::Int sub_100652740(uint64_t a1)
{
  return sub_1006529F4(a1, (void (*)(uint64_t))sub_100948878);
}

Swift::Int sub_100652758(uint64_t a1)
{
  return sub_1006529F4(a1, (void (*)(uint64_t))sub_10097E890);
}

Swift::Int sub_100652770()
{
  return sub_1002C43B4();
}

Swift::Int sub_10065277C(uint64_t a1)
{
  return sub_1006529F4(a1, (void (*)(uint64_t))sub_1005A0EEC);
}

Swift::Int sub_100652794(uint64_t a1)
{
  return sub_1006529F4(a1, (void (*)(uint64_t))sub_10081D834);
}

Swift::Int sub_1006527AC(uint64_t a1)
{
  return sub_10065293C(a1, (void (*)(unsigned char *, uint64_t))sub_1002C2CFC);
}

Swift::Int sub_1006527C4()
{
  return sub_1002C4494();
}

Swift::Int sub_1006527D0(uint64_t a1)
{
  return sub_10065293C(a1, (void (*)(unsigned char *, uint64_t))sub_1002C2AF8);
}

Swift::Int sub_1006527E8(char a1)
{
  return sub_1002C4530(0, a1);
}

Swift::Int sub_1006527F4()
{
  return sub_1002C45C0();
}

Swift::Int sub_100652800(uint64_t a1)
{
  return sub_10065293C(a1, (void (*)(unsigned char *, uint64_t))sub_1002C28AC);
}

Swift::Int sub_100652818()
{
  return sub_1002C4634();
}

Swift::Int sub_100652824(uint64_t a1)
{
  return sub_1006529F4(a1, (void (*)(uint64_t))sub_1009DAD0C);
}

Swift::Int sub_10065283C(char a1)
{
  char v1 = a1 & 1;
  sub_100163EB8();
  sub_1002C2718((uint64_t)v3, v1);
  return Hasher._finalize()();
}

Swift::Int sub_10065287C(uint64_t a1)
{
  return sub_10065293C(a1, (void (*)(unsigned char *, uint64_t))sub_1002C26E4);
}

Swift::Int sub_100652894(uint64_t a1)
{
  return sub_1006529F4(a1, (void (*)(uint64_t))sub_1001DEDB8);
}

Swift::Int sub_1006528AC()
{
  return sub_1002C4770();
}

Swift::Int sub_1006528B8(uint64_t a1)
{
  return sub_1006529F4(a1, (void (*)(uint64_t))sub_100B46BB4);
}

Swift::Int sub_1006528D0()
{
  return sub_1002C4814();
}

Swift::Int sub_1006528DC()
{
  return sub_100652A58();
}

Swift::Int sub_1006528F4(uint64_t a1)
{
  return sub_1006529F4(a1, (void (*)(uint64_t))sub_1004E684C);
}

Swift::Int sub_10065290C(uint64_t a1)
{
  return sub_1006529F4(a1, (void (*)(uint64_t))sub_1004E6B00);
}

Swift::Int sub_100652924(uint64_t a1)
{
  return sub_10065293C(a1, (void (*)(unsigned char *, uint64_t))sub_1002C21D8);
}

Swift::Int sub_10065293C(uint64_t a1, void (*a2)(unsigned char *, uint64_t))
{
  sub_100163EB8();
  a2(v5, a1);
  return Hasher._finalize()();
}

Swift::Int sub_100652984()
{
  return sub_1002C4960();
}

Swift::Int sub_100652990()
{
  return sub_100652A58();
}

Swift::Int sub_1006529A0()
{
  return sub_1002C49CC();
}

Swift::Int sub_1006529AC()
{
  return sub_1002C4A40();
}

Swift::Int sub_1006529B8()
{
  return sub_1002C4ACC();
}

Swift::Int sub_1006529C4(uint64_t a1)
{
  return sub_1006529F4(a1, (void (*)(uint64_t))sub_10098815C);
}

Swift::Int sub_1006529DC(uint64_t a1)
{
  return sub_1006529F4(a1, (void (*)(uint64_t))sub_100989C3C);
}

Swift::Int sub_1006529F4(uint64_t a1, void (*a2)(uint64_t))
{
  return Hasher._finalize()();
}

Swift::Int sub_100652A58()
{
  return Hasher._finalize()();
}

Swift::Int sub_100652AA0()
{
  return sub_1002C4C2C();
}

uint64_t sub_100652AAC(char a1)
{
  type metadata accessor for Locale.Language();
  sub_100179C0C();
  __chkstk_darwin(v2);
  unsigned int v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale();
  sub_100179C0C();
  __chkstk_darwin(v5);
  if (!a1)
  {
    static Locale.current.getter();
    Locale.language.getter();
    uint64_t v7 = sub_100185B94();
    v8(v7);
    Locale.Language.prefersObjectiveTemperatureTerminology.getter();
    uint64_t v9 = sub_1001A4738();
    v10(v9);
    id v11 = [self mainBundle];
    if (v4)
    {
      sub_1001631D8();
      sub_100164FD4();
LABEL_10:
      sub_10017C9F8();
      unint64_t v24 = 0xD00000000000003ELL;
      goto LABEL_11;
    }
LABEL_9:
    sub_1001A3328();
    goto LABEL_10;
  }
  if (a1 != 1)
  {
    static Locale.current.getter();
    Locale.language.getter();
    uint64_t v12 = sub_100185B94();
    v13(v12);
    Locale.Language.prefersObjectiveTemperatureTerminology.getter();
    uint64_t v14 = sub_1001A4738();
    v15(v14);
    id v16 = [self mainBundle];
    if (v4)
    {
      sub_1001631D8();
      sub_100164FD4();
      goto LABEL_8;
    }
    goto LABEL_9;
  }
  id v6 = [self mainBundle];
  sub_1001631D8();
  sub_10018007C();
LABEL_8:
  sub_10017C9F8();
LABEL_11:
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v17, *(Swift::String_optional *)&v19, v21, *(Swift::String *)&v22, *(Swift::String *)&v24);
  sub_100183D40();
  return sub_100163738();
}

uint64_t sub_100652D2C(char a1)
{
  if (a1)
  {
    if (a1 != 1)
    {
      id v11 = [self mainBundle];
      sub_10017C720();
      sub_100164FD4();
      sub_10017C9F8();
      goto LABEL_7;
    }
    id v1 = [self mainBundle];
    unint64_t v13 = 0x8000000100CAC760;
    sub_10018007C();
  }
  else
  {
    id v2 = [self mainBundle];
    sub_1001892A0();
  }
  sub_10017C9F8();
  unint64_t v10 = 0xD000000000000032;
LABEL_7:
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, *(Swift::String_optional *)&v5, v7, *(Swift::String *)&v8, *(Swift::String *)(&v13 - 1));
  sub_100183D40();
  return sub_100163738();
}

uint64_t sub_100652E58(char a1)
{
  if (a1)
  {
    if (a1 == 1)
    {
      id v1 = [self mainBundle];
      unint64_t v13 = 0x8000000100CAC680;
      sub_10018007C();
    }
    else
    {
      id v11 = [self mainBundle];
      sub_1001892A0();
    }
    sub_10017C9F8();
    unint64_t v10 = 0xD000000000000039;
  }
  else
  {
    id v2 = [self mainBundle];
    unint64_t v13 = 0x8000000100CAC6C0;
    sub_10017C9F8();
  }
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, *(Swift::String_optional *)&v5, v7, *(Swift::String *)&v8, *(Swift::String *)(&v13 - 1));
  sub_100183D40();
  return sub_100163738();
}

_UNKNOWN **sub_100652F94()
{
  return &off_100E07328;
}

uint64_t sub_100652FA0(char a1)
{
  switch(a1)
  {
    case 2:
    case 5:
      id v10 = [self mainBundle];
      sub_10018312C();
      sub_10017C9F8();
      unint64_t v9 = 0xD000000000000016;
      break;
    default:
      id v1 = [self mainBundle];
      sub_100181554();
      sub_10017C720();
      sub_10017C9F8();
      break;
  }
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v2, *(Swift::String_optional *)&v4, v6, *(Swift::String *)&v7, *(Swift::String *)(&v12 - 1));
  sub_100183D40();
  return sub_100163738();
}

uint64_t sub_1006531BC(char a1)
{
  uint64_t result = 0x2E776F626E696172;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6F622E64756F6C63;
      break;
    case 2:
      uint64_t result = 0x61682E64756F6C63;
      break;
    case 3:
      uint64_t result = 0x69662E656B6F6D73;
      break;
    case 4:
      uint64_t result = 0x6F662E64756F6C63;
      break;
    case 5:
      uint64_t result = 0x657A61682E6E7573;
      break;
    default:
      return result;
  }
  return result;
}

_UNKNOWN **sub_1006532E0()
{
  return &off_100E07350;
}

unint64_t sub_1006532EC(char a1)
{
  return 0x607040502030001uLL >> (8 * a1);
}

uint64_t sub_10065330C(char a1)
{
  switch(a1)
  {
    case 2:
    case 5:
      id v1 = [self mainBundle];
      sub_10017C720();
      sub_10017C9F8();
      unint64_t v9 = 0xD00000000000001DLL;
      break;
    case 4:
    case 6:
      id v10 = [self mainBundle];
      sub_100189F70();
      sub_10017C720();
      goto LABEL_5;
    default:
      id v11 = [self mainBundle];
      sub_1001D1B94();
      sub_10017C720();
LABEL_5:
      sub_10017C9F8();
      break;
  }
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v2, *(Swift::String_optional *)&v4, v6, *(Swift::String *)&v7, *(Swift::String *)(&v13 - 1));
  sub_100183D40();
  return sub_100163738();
}

uint64_t sub_1006535B8()
{
  sub_10018A998();
  switch(v0)
  {
    case 1:
    case 2:
      id v1 = [self mainBundle];
      sub_10017C720();
      sub_10017C9F8();
      unint64_t v9 = 0xD000000000000036;
      goto LABEL_4;
    case 3:
      id v10 = [self mainBundle];
      sub_10017C720();
      sub_10017C9F8();
LABEL_4:
      NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v2, *(Swift::String_optional *)&v4, v6, *(Swift::String *)&v7, *(Swift::String *)(&v12 - 1));
      sub_100183D40();
      break;
    default:
      return sub_100163738();
  }
  return sub_100163738();
}

void sub_10065371C()
{
  qword_100F519C0 = (uint64_t)&off_100E07378;
}

uint64_t sub_100653730()
{
  sub_1001A2D4C();
  v2._object = v0;
  _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E073A0, v2);
  sub_100182F1C();
  if (v1 >= 4) {
    return 4;
  }
  else {
    return v1;
  }
}

unint64_t sub_100653770(char a1)
{
  unint64_t result = 1701736302;
  switch(a1)
  {
    case 1:
      uint64_t v3 = 1953653104;
      goto LABEL_4;
    case 2:
      uint64_t v3 = 1953722221;
LABEL_4:
      unint64_t result = v3 & 0xFFFF0000FFFFFFFFLL | 0x796C00000000;
      break;
    case 3:
      unint64_t result = 0x796C6C7566;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1006537EC()
{
  return sub_10088C698();
}

uint64_t sub_1006537F8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100653730();
  *a1 = result;
  return result;
}

unint64_t sub_100653828()
{
  char v1 = sub_100166C48();
  unint64_t result = sub_100653770(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_100653850()
{
  return sub_1006535B8();
}

uint64_t sub_100653858()
{
  sub_10018A998();
  switch(v0)
  {
    case 1:
    case 7:
      id v4 = [self mainBundle];
      sub_1001A22DC();
      sub_10017C720();
      sub_100184AA8();
      goto LABEL_6;
    case 2:
    case 8:
      id v12 = [self mainBundle];
      sub_10017A66C();
      sub_10017C720();
      goto LABEL_8;
    case 3:
    case 9:
      id v14 = [self mainBundle];
      sub_1001A22DC();
      sub_10017C720();
      sub_100184AA8();
      goto LABEL_10;
    case 4:
      id v1 = [self mainBundle];
      sub_10017A66C();
      sub_10017C720();
      sub_100164FD4();
LABEL_6:
      sub_100186AA0();
      uint64_t v11 = 0x746867694CLL;
      goto LABEL_11;
    case 5:
      id v2 = [self mainBundle];
      sub_10017C720();
LABEL_8:
      sub_100164FD4();
      sub_100186AA0();
      uint64_t v11 = 0x6D756964654DLL;
      unint64_t v13 = 0xE600000000000000;
      goto LABEL_12;
    case 6:
      id v3 = [self mainBundle];
      sub_10017A66C();
      sub_10017C720();
      sub_100164FD4();
LABEL_10:
      sub_100186AA0();
      uint64_t v11 = 0x7976616548;
LABEL_11:
      unint64_t v13 = 0xE500000000000000;
LABEL_12:
      NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v5, *(Swift::String_optional *)&v7, v9, *(Swift::String *)&v11, *(Swift::String *)(&v16 - 1));
      sub_100183D40();
      break;
    default:
      return sub_100163738();
  }
  return sub_100163738();
}

void sub_100653B50()
{
  qword_100F519C8 = (uint64_t)&off_100E07420;
}

void sub_100653B64()
{
  qword_100F519D0 = (uint64_t)&off_100E07448;
}

void sub_100653B78()
{
  qword_100F519D8 = (uint64_t)&off_100E07470;
}

uint64_t sub_100653B8C()
{
  sub_1001A2D4C();
  v2._object = v0;
  _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E07498, v2);
  sub_100182F1C();
  if (v1 >= 0xA) {
    return 10;
  }
  else {
    return v1;
  }
}

uint64_t sub_100653BCC(char a1)
{
  uint64_t result = 1701736302;
  switch(a1)
  {
    case 1:
      uint64_t v3 = 0x52746867696CLL;
      return v3 & 0xFFFFFFFFFFFFLL | 0x6961000000000000;
    case 2:
      return 0x61526D756964656DLL;
    case 3:
      uint64_t v3 = 0x527976616568;
      return v3 & 0xFFFFFFFFFFFFLL | 0x6961000000000000;
    case 4:
      uint64_t v4 = 0x53746867696CLL;
      goto LABEL_9;
    case 5:
      return 0x6C536D756964656DLL;
    case 6:
      uint64_t v4 = 0x537976616568;
LABEL_9:
      uint64_t result = v4 & 0xFFFFFFFFFFFFLL | 0x656C000000000000;
      break;
    case 7:
      uint64_t result = 0x6F6E53746867696CLL;
      break;
    case 8:
      uint64_t result = 0x6E536D756964656DLL;
      break;
    case 9:
      uint64_t result = 0x6F6E537976616568;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100653D24()
{
  return sub_10088BDDC();
}

uint64_t sub_100653D30@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100653B8C();
  *a1 = result;
  return result;
}

uint64_t sub_100653D60()
{
  char v1 = sub_100166C48();
  uint64_t result = sub_100653BCC(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_100653D88()
{
  return sub_100653858();
}

uint64_t sub_100653D90(char a1)
{
  if (!a1) {
    return 0x72656D726177;
  }
  if (a1 == 1) {
    return 0x616365726F467361;
  }
  return 0x7265646C6F63;
}

void sub_100653DE4(char a1)
{
  if (!a1) {
    sub_100164FD4();
  }
}

uint64_t sub_100653E3C()
{
  sub_1001A2D4C();
  v3._rawValue = v2;
  v4._object = v0;
  _findStringSwitchCase(cases:string:)(v3, v4);
  sub_100182F1C();
  if (v1 >= 3) {
    return 3;
  }
  else {
    return v1;
  }
}

void sub_100653E78(char a1)
{
  if (!a1) {
    sub_100164FD4();
  }
}

uint64_t sub_100653ED0()
{
  sub_1001A2D4C();
  v2._object = v0;
  _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E076E0, v2);
  sub_100182F1C();
  if (v1 >= 6) {
    return 6;
  }
  else {
    return v1;
  }
}

uint64_t sub_100653F10(char a1)
{
  uint64_t result = 0x73776F626E696172;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6E696E746867696CLL;
      break;
    case 2:
      uint64_t result = 1818845544;
      break;
    case 3:
      uint64_t result = 0x656B6F6D73;
      break;
    case 4:
      uint64_t result = 6778726;
      break;
    case 5:
      uint64_t result = 1702519144;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100653FC4()
{
  sub_1001A2D4C();
  v2._object = v0;
  _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E07790, v2);
  sub_100182F1C();
  if (v1 >= 8) {
    return 8;
  }
  else {
    return v1;
  }
}

unint64_t sub_100654004(char a1)
{
  unint64_t result = 0x746E617361656C70;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x617361656C706E75;
      break;
    case 2:
      unint64_t result = 7630696;
      break;
    case 3:
      unint64_t result = 0x796C6C696863;
      break;
    case 4:
      uint64_t v3 = 1734833517;
      goto LABEL_8;
    case 5:
      unint64_t result = 7959140;
      break;
    case 6:
      uint64_t v3 = 1684957559;
LABEL_8:
      unint64_t result = v3 & 0xFFFF0000FFFFFFFFLL | 0x7900000000;
      break;
    case 7:
      unint64_t result = 1835819363;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1006540E4(unsigned __int8 *a1, char *a2)
{
  return sub_10088C078(*a1, *a2);
}

uint64_t sub_1006540F0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100653E3C();
  *a1 = result;
  return result;
}

uint64_t sub_100654128()
{
  char v1 = sub_100166C48();
  uint64_t result = sub_100653D90(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_100654150()
{
  return sub_100652AAC(*v0);
}

void sub_100654158(void *a1@<X8>)
{
  *a1 = &off_100E072B0;
}

uint64_t sub_100654168()
{
  return sub_10065438C(&qword_100E865F8, &qword_100E85218);
}

uint64_t sub_100654190()
{
  return sub_10088C16C();
}

uint64_t sub_10065419C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100653E3C();
  *a1 = result;
  return result;
}

void sub_1006541D4()
{
  char v1 = sub_100166C48();
  sub_100653DE4(v1);
  *uint64_t v0 = v2;
  v0[1] = v3;
}

uint64_t sub_1006541FC()
{
  return sub_100652D2C(*v0);
}

void sub_100654204(void *a1@<X8>)
{
  *a1 = &off_100E072D8;
}

uint64_t sub_100654214()
{
  return sub_10065438C(&qword_100E86600, &qword_100E85000);
}

uint64_t sub_10065423C(char *a1, char *a2)
{
  return sub_10088C224(*a1, *a2);
}

uint64_t sub_100654248@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100653E3C();
  *a1 = result;
  return result;
}

void sub_100654280()
{
  char v1 = sub_100166C48();
  sub_100653E78(v1);
  *uint64_t v0 = v2;
  v0[1] = v3;
}

uint64_t sub_1006542A8()
{
  return sub_100652E58(*v0);
}

void sub_1006542B0(void *a1@<X8>)
{
  *a1 = &off_100E07300;
}

uint64_t sub_1006542C0()
{
  return sub_10065438C(&qword_100E86608, &qword_100E85148);
}

uint64_t sub_1006542E8(unsigned __int8 *a1, char *a2)
{
  return sub_10088C4EC(*a1, *a2);
}

uint64_t sub_1006542F4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100653ED0();
  *a1 = result;
  return result;
}

uint64_t sub_100654324()
{
  char v1 = sub_100166C48();
  uint64_t result = sub_100653F10(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_10065434C()
{
  return sub_100652FA0(*v0);
}

void sub_100654354(void *a1@<X8>)
{
  *a1 = &off_100E07328;
}

uint64_t sub_100654364()
{
  return sub_10065438C(&qword_100E86610, &qword_100E86618);
}

uint64_t sub_10065438C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1006543DC(unsigned __int8 *a1, char *a2)
{
  return sub_10088C2E8(*a1, *a2);
}

uint64_t sub_1006543E8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100653FC4();
  *a1 = result;
  return result;
}

unint64_t sub_100654418()
{
  char v1 = sub_100166C48();
  unint64_t result = sub_100654004(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_100654440()
{
  return sub_10065330C(*v0);
}

void sub_100654448(void *a1@<X8>)
{
  *a1 = &off_100E07350;
}

Swift::Int sub_100654458()
{
  return sub_10065293C(*v0, (void (*)(unsigned char *, uint64_t))sub_1002C38B0);
}

uint64_t sub_100654488()
{
  return sub_1002C38B0();
}

Swift::Int sub_100654490(uint64_t a1)
{
  return sub_1002C3E38(a1, *v1);
}

Swift::Int sub_100654498()
{
  return sub_1006529F4(*v0, (void (*)(uint64_t))sub_100653BCC);
}

uint64_t sub_1006544C8()
{
  return sub_1002C355C();
}

Swift::Int sub_1006544D0(uint64_t a1)
{
  return sub_1002C3F6C(a1, *v1);
}

Swift::Int sub_1006544D8()
{
  return sub_100652634();
}

uint64_t sub_1006544E0(uint64_t a1)
{
  return sub_1002C36BC(a1, *v1);
}

Swift::Int sub_1006544E8()
{
  return sub_1002C3EEC();
}

Swift::Int sub_1006544F0()
{
  return sub_10065261C(*v0);
}

uint64_t sub_1006544F8(uint64_t a1)
{
  return sub_1002C3A64(a1, *v1);
}

Swift::Int sub_100654500(uint64_t a1)
{
  return sub_1002C3D90(a1, *v1);
}

Swift::Int sub_100654508()
{
  return sub_100652628(*v0);
}

uint64_t sub_100654510(uint64_t a1)
{
  return sub_1002C3738(a1, *v1);
}

Swift::Int sub_100654518(uint64_t a1)
{
  return sub_1002C3E68(a1, *v1);
}

Swift::Int sub_100654520()
{
  return sub_1006529F4(*v0, (void (*)(uint64_t))sub_100653F10);
}

uint64_t sub_100654550()
{
  return sub_1002C37C8();
}

Swift::Int sub_100654558(uint64_t a1)
{
  return sub_1002C3E50(a1, *v1);
}

Swift::Int sub_100654560()
{
  return sub_1006529F4(*v0, (void (*)(uint64_t))sub_100654004);
}

uint64_t sub_100654590()
{
  return sub_1002C3950();
}

Swift::Int sub_100654598(uint64_t a1)
{
  return sub_1002C3E20(a1, *v1);
}

uint64_t sub_1006545A0()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100654600()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100654650()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1006546B0()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100654700()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100654760()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1006547B0()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100654810()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100654860()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1006548C0()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100654910()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100654970()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1006549C0()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100654A20()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100654A70@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100899638();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_100654A9C(uint64_t a1)
{
  return sub_100899704(a1, *v1);
}

uint64_t sub_100654AB8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1008998B0();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_100654AE4()
{
  return sub_1008998C8();
}

uint64_t sub_100654B00@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = static MoonPhase.read(from:)();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_100654B2C()
{
  return MoonPhase.write(to:)();
}

unint64_t sub_100654B4C()
{
  unint64_t result = qword_100E86620;
  if (!qword_100E86620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86620);
  }
  return result;
}

unint64_t sub_100654B9C()
{
  unint64_t result = qword_100E86628;
  if (!qword_100E86628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86628);
  }
  return result;
}

unint64_t sub_100654BEC()
{
  unint64_t result = qword_100E86630;
  if (!qword_100E86630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86630);
  }
  return result;
}

unint64_t sub_100654C3C()
{
  unint64_t result = qword_100E86638;
  if (!qword_100E86638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86638);
  }
  return result;
}

unint64_t sub_100654C8C()
{
  unint64_t result = qword_100E86640;
  if (!qword_100E86640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86640);
  }
  return result;
}

unint64_t sub_100654CDC()
{
  unint64_t result = qword_100E86648;
  if (!qword_100E86648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86648);
  }
  return result;
}

unint64_t sub_100654D2C()
{
  unint64_t result = qword_100E86650;
  if (!qword_100E86650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86650);
  }
  return result;
}

unint64_t sub_100654D78()
{
  unint64_t result = qword_100E86658;
  if (!qword_100E86658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86658);
  }
  return result;
}

unint64_t sub_100654DC4()
{
  unint64_t result = qword_100E86660;
  if (!qword_100E86660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86660);
  }
  return result;
}

unint64_t sub_100654E10()
{
  unint64_t result = qword_100E86668;
  if (!qword_100E86668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86668);
  }
  return result;
}

unint64_t sub_100654E5C()
{
  unint64_t result = qword_100E86670;
  if (!qword_100E86670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86670);
  }
  return result;
}

unint64_t sub_100654EA8()
{
  unint64_t result = qword_100E86678;
  if (!qword_100E86678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86678);
  }
  return result;
}

unint64_t sub_100654EF4()
{
  unint64_t result = qword_100E86680;
  if (!qword_100E86680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86680);
  }
  return result;
}

unint64_t sub_100654F40()
{
  unint64_t result = qword_100E86688;
  if (!qword_100E86688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86688);
  }
  return result;
}

unsigned char *sub_100654F8C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100655058);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

void type metadata accessor for ReportWeatherPrecipitationIntensity()
{
}

unsigned char *sub_10065508C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100655158);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for ReportWeatherCloudCoverKind()
{
}

uint64_t LocationSearchEntityFromWeatherCoreResolver.resolve(from:context:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  return _swift_task_switch(sub_1006551AC, 0, 0);
}

uint64_t sub_1006551AC()
{
  uint64_t v17 = *(void *)(v0 + 104);
  *(void *)(v0 + 56) = LocationEntity.id.getter();
  *(void *)(v0 + 64) = v1;
  *(void *)(v0 + 72) = 44;
  *(void *)(v0 + 80) = 0xE100000000000000;
  *(void *)(v0 + 88) = 58;
  *(void *)(v0 + 96) = 0xE100000000000000;
  sub_10014A85C();
  uint64_t v2 = sub_100187E6C();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v5._countAndFlagsBits = 58;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 56) = LocationEntity.name.getter();
  *(void *)(v0 + 64) = v6;
  *(void *)(v0 + 72) = 58;
  *(void *)(v0 + 80) = 0xE100000000000000;
  *(void *)(v0 + 88) = 0;
  *(void *)(v0 + 96) = 0xE000000000000000;
  uint64_t v7 = sub_100187E6C();
  NSBundle v9 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v10._countAndFlagsBits = v7;
  v10._object = v9;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LocationEntity.name.getter();
  uint64_t v11 = (void *)LocationEntity.placemark.getter();
  LocationSearchEntity.init(id:name:placemark:isLocal:)(v2, v4, v11, 0, v0 + 16);
  uint64_t v12 = *(void *)(v0 + 40);
  char v13 = *(unsigned char *)(v0 + 48);
  long long v14 = *(_OWORD *)(v0 + 24);
  *(void *)uint64_t v17 = *(void *)(v0 + 16);
  *(_OWORD *)(v17 + 8) = v14;
  *(void *)(v17 + 24) = v12;
  *(unsigned char *)(v17 + 32) = v13;
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_1006553A0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 56) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 64) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100339F0C;
  return LocationSearchEntityFromWeatherCoreResolver.resolve(from:context:)(v2 + 16, a2);
}

unint64_t sub_100655448()
{
  unint64_t result = qword_100E86698;
  if (!qword_100E86698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86698);
  }
  return result;
}

unint64_t sub_100655498()
{
  unint64_t result = qword_100E866A0;
  if (!qword_100E866A0)
  {
    type metadata accessor for LocationEntity();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E866A0);
  }
  return result;
}

unint64_t sub_1006554EC()
{
  unint64_t result = qword_100E866B0;
  if (!qword_100E866B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E866B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationSearchEntityFromWeatherCoreResolver()
{
  return &type metadata for LocationSearchEntityFromWeatherCoreResolver;
}

uint64_t getEnumTagSinglePayload for Previous(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && a1[56])
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *a1;
      BOOL v4 = v3 >= 2;
      int v2 = v3 - 2;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Previous(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Previous()
{
  return &type metadata for Previous;
}

uint64_t sub_1006555E4()
{
  return *(void *)(v0 + 40);
}

double sub_1006555EC()
{
  return *(double *)(v0 + 48);
}

char *sub_1006555F4(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v10 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v10;
      uint64_t v11 = (int *)type metadata accessor for DetailChartSelection();
      uint64_t v12 = v11[5];
      char v13 = &a1[v12];
      long long v14 = &a2[v12];
      uint64_t v15 = type metadata accessor for Date();
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
      v16(&a1[v11[6]], &a2[v11[6]], v15);
      v16(&a1[v11[7]], &a2[v11[7]], v15);
      *(void *)&a1[v11[8]] = *(void *)&a2[v11[8]];
      uint64_t v17 = v11[9];
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      v18[8] = v19[8];
      *(void *)uint64_t v18 = *(void *)v19;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v20 = type metadata accessor for DetailCondition();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
      }
      uint64_t v8 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100655838(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    swift_bridgeObjectRelease();
    BOOL v4 = (int *)type metadata accessor for DetailChartSelection();
    uint64_t v5 = a1 + v4[5];
    uint64_t v6 = type metadata accessor for Date();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    ((void (*)(void *__return_ptr, uint64_t, uint64_t))v10)((void *)(v6 - 8), v5, v6);
    v10(a1 + v4[6], v6);
    uint64_t v7 = a1 + v4[7];
    uint64_t v8 = v6;
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))v10;
  }
  else
  {
    if (result == 1)
    {
      uint64_t v3 = type metadata accessor for DetailCondition();
    }
    else
    {
      if (result) {
        return result;
      }
      uint64_t v3 = type metadata accessor for Date();
    }
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    uint64_t v8 = v3;
    uint64_t v7 = a1;
  }

  return v9(v7, v8);
}

char *sub_100655974(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v8;
    uint64_t v9 = (int *)type metadata accessor for DetailChartSelection();
    uint64_t v10 = v9[5];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = type metadata accessor for Date();
    long long v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    v14(&a1[v9[6]], &a2[v9[6]], v13);
    v14(&a1[v9[7]], &a2[v9[7]], v13);
    *(void *)&a1[v9[8]] = *(void *)&a2[v9[8]];
    uint64_t v15 = v9[9];
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    v16[8] = v17[8];
    *(void *)uint64_t v16 = *(void *)v17;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v18 = type metadata accessor for DetailCondition();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_100655B74(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1006568A4((uint64_t)a1, (void (*)(void))type metadata accessor for ConditionDetailViewAction);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      uint64_t v8 = (int *)type metadata accessor for DetailChartSelection();
      uint64_t v9 = v8[5];
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      uint64_t v12 = type metadata accessor for Date();
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
      v13(&a1[v8[6]], &a2[v8[6]], v12);
      v13(&a1[v8[7]], &a2[v8[7]], v12);
      *(void *)&a1[v8[8]] = *(void *)&a2[v8[8]];
      uint64_t v14 = v8[9];
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      char v17 = v16[8];
      *(void *)uint64_t v15 = *(void *)v16;
      v15[8] = v17;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v18 = type metadata accessor for DetailCondition();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
      }
      uint64_t v7 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_100655DA0(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v8 = (int *)type metadata accessor for DetailChartSelection();
    uint64_t v9 = v8[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = type metadata accessor for Date();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
    v13(v10, v11, v12);
    v13(&a1[v8[6]], &a2[v8[6]], v12);
    v13(&a1[v8[7]], &a2[v8[7]], v12);
    *(void *)&a1[v8[8]] = *(void *)&a2[v8[8]];
    uint64_t v14 = v8[9];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    v15[8] = v16[8];
    *(void *)uint64_t v15 = *(void *)v16;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v17 = type metadata accessor for DetailCondition();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_100655F98(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1006568A4((uint64_t)a1, (void (*)(void))type metadata accessor for ConditionDetailViewAction);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v8 = (int *)type metadata accessor for DetailChartSelection();
      uint64_t v9 = v8[5];
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      uint64_t v12 = type metadata accessor for Date();
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
      v13(v10, v11, v12);
      v13(&a1[v8[6]], &a2[v8[6]], v12);
      v13(&a1[v8[7]], &a2[v8[7]], v12);
      *(void *)&a1[v8[8]] = *(void *)&a2[v8[8]];
      uint64_t v14 = v8[9];
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      v15[8] = v16[8];
      *(void *)uint64_t v15 = *(void *)v16;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v17 = type metadata accessor for DetailCondition();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
      }
      uint64_t v7 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1006561B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for DetailChartSelection();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = type metadata accessor for DetailCondition();
  sub_100179C0C();
  uint64_t v37 = v8;
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v36 = v14;
  __chkstk_darwin(v15);
  sub_1001626E0();
  uint64_t v18 = v17 - v16;
  type metadata accessor for ConditionDetailViewAction();
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_1001626E0();
  uint64_t v22 = v21 - v20;
  uint64_t v39 = sub_10017DF08(&qword_100E86768);
  sub_100179C0C();
  uint64_t v38 = v23;
  __chkstk_darwin(v24);
  sub_1001626E0();
  uint64_t v27 = v26 - v25;
  sub_100656844(v1, v22, (void (*)(void))type metadata accessor for ConditionDetailViewAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32))(v12, v22, v7);
      sub_10017DF08(&qword_100E635E0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100C251B0;
      *(void *)(inited + 32) = 0x6F697469646E6F63;
      *(void *)(inited + 40) = 0xE90000000000006ELL;
      *(void *)(inited + 72) = v7;
      uint64_t v31 = sub_100170694((uint64_t *)(inited + 48));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v37 + 16))(v31, v12, v7);
      Dictionary.init(dictionaryLiteral:)();
      ShortDescription.init(name:_:)();
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v12, v7);
      break;
    case 2u:
      sub_1004D7444(v22, v6);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v32 = swift_initStackObject();
      *(_OWORD *)(v32 + 16) = xmmword_100C251B0;
      *(void *)(v32 + 32) = 0xD000000000000011;
      *(void *)(v32 + 40) = 0x8000000100CACD00;
      *(void *)(v32 + 72) = v2;
      uint64_t v33 = sub_100170694((uint64_t *)(v32 + 48));
      sub_100656844(v6, (uint64_t)v33, (void (*)(void))type metadata accessor for DetailChartSelection);
      Dictionary.init(dictionaryLiteral:)();
      sub_10017F3A0();
      ShortDescription.init(name:_:)();
      sub_1006568A4(v6, (void (*)(void))type metadata accessor for DetailChartSelection);
      break;
    case 3u:
    case 4u:
      Dictionary.init(dictionaryLiteral:)();
      sub_10017F3A0();
      ShortDescription.init(name:_:)();
      break;
    default:
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(v18, v22, v13);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v28 = swift_initStackObject();
      *(_OWORD *)(v28 + 16) = xmmword_100C251B0;
      *(void *)(v28 + 32) = 1702125924;
      *(void *)(v28 + 40) = 0xE400000000000000;
      *(void *)(v28 + 72) = v13;
      uint64_t v29 = sub_100170694((uint64_t *)(v28 + 48));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v36 + 16))(v29, v18, v13);
      Dictionary.init(dictionaryLiteral:)();
      sub_10017F3A0();
      ShortDescription.init(name:_:)();
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v18, v13);
      break;
  }
  a1[3] = v39;
  a1[4] = sub_1006567F0();
  uint64_t v34 = sub_100170694(a1);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v38 + 32))(v34, v27, v39);
}

uint64_t sub_100656764()
{
  sub_1006568FC(&qword_100E86778);

  return ShortDescribable.description.getter();
}

uint64_t sub_1006567BC()
{
  return sub_1006568FC(&qword_100E86760);
}

unint64_t sub_1006567F0()
{
  unint64_t result = qword_100E86770;
  if (!qword_100E86770)
  {
    sub_10018C6DC(&qword_100E86768);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86770);
  }
  return result;
}

uint64_t sub_100656844(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1006568A4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1006568FC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ConditionDetailViewAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for VFXTestTracker()
{
  return &type metadata for VFXTestTracker;
}

uint64_t sub_100656950@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10017DF08(&qword_100E6B640);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v16 - v7;
  sub_10020D948(v1 + 16, (uint64_t)v21);
  v16[1] = 0;
  v16[2] = 0;
  char v17 = 1;
  swift_retain();
  sub_10017DF08(&qword_100E827E8);
  State.init(wrappedValue:)();
  char v9 = v19;
  uint64_t v10 = v20;
  *(_OWORD *)(a1 + 16) = v18;
  *(unsigned char *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  uint64_t v11 = (int *)type metadata accessor for SunriseSunsetDetailView(0);
  uint64_t v12 = type metadata accessor for DetailChartDataElement();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 1, 1, v12);
  sub_100656B38((uint64_t)v8, (uint64_t)v6);
  State.init(wrappedValue:)();
  sub_100656BA0((uint64_t)v8);
  uint64_t v13 = v11[7];
  swift_beginAccess();
  *(double *)(a1 + v13) = sub_100592380();
  *(unsigned char *)(a1 + v11[9]) = 0;
  sub_10017DF08(&qword_100E64BF8);
  sub_100656C00();
  *(void *)a1 = ObservedObject.init(wrappedValue:)();
  *(void *)(a1 + 8) = v14;
  return sub_1001262E4(v21, a1 + v11[8]);
}

uint64_t type metadata accessor for SunriseSunsetDetailModule()
{
  return self;
}

uint64_t sub_100656B38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6B640);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100656BA0(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E6B640);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100656C00()
{
  unint64_t result = qword_100E64C00;
  if (!qword_100E64C00)
  {
    sub_10018C6DC(&qword_100E64BF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E64C00);
  }
  return result;
}

uint64_t sub_100656C54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for MainAction();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v38 = (uint64_t)&v33 - v8;
  __chkstk_darwin(v9);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v33 - v11;
  __chkstk_darwin(v13);
  char v17 = (char *)&v33 - v16;
  uint64_t v18 = *(void *)(a1 + 40);
  uint64_t v19 = *(void *)(v18 + 16);
  if (!v19)
  {
    uint64_t v22 = _swiftEmptyArrayStorage;
    goto LABEL_25;
  }
  uint64_t v35 = a2;
  uint64_t v36 = v15;
  uint64_t v33 = v18;
  uint64_t v34 = a1;
  unint64_t v37 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v20 = v18 + v37;
  uint64_t v21 = *(void *)(v14 + 72);
  swift_bridgeObjectRetain();
  uint64_t v22 = _swiftEmptyArrayStorage;
  do
  {
    sub_10015B0C4(v20, (uint64_t)v17);
    sub_10015B0C4((uint64_t)v17, (uint64_t)v12);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v24 = v36;
      sub_10015B0C4((uint64_t)v12, v36);
      type metadata accessor for EnvironmentAction();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
LABEL_20:
        uint64_t v28 = type metadata accessor for MainAction;
        uint64_t v29 = (uint64_t)v17;
        goto LABEL_21;
      }
      uint64_t v25 = type metadata accessor for EnvironmentAction;
      uint64_t v26 = v24;
      goto LABEL_14;
    }
    if (EnumCaseMultiPayload != 3)
    {
      if (EnumCaseMultiPayload == 19) {
        goto LABEL_20;
      }
LABEL_15:
      sub_10015B0C4((uint64_t)v17, (uint64_t)v6);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v22 = (void *)sub_1001A6D34(0, v22[2] + 1, 1, (uint64_t)v22);
      }
      unint64_t v31 = v22[2];
      unint64_t v30 = v22[3];
      if (v31 >= v30 >> 1) {
        uint64_t v22 = (void *)sub_1001A6D34(v30 > 1, v31 + 1, 1, (uint64_t)v22);
      }
      v22[2] = v31 + 1;
      sub_10008FF6C((uint64_t)v6, (uint64_t)v22 + v37 + v31 * v21);
      goto LABEL_20;
    }
    sub_10015B0C4((uint64_t)v12, v38);
    type metadata accessor for LocationsAction();
    int v27 = swift_getEnumCaseMultiPayload();
    if (v27 == 2)
    {
      sub_100158E24((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for MainAction);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    if (v27)
    {
      uint64_t v25 = type metadata accessor for LocationsAction;
      uint64_t v26 = v38;
LABEL_14:
      sub_100158E24(v26, (uint64_t (*)(void))v25);
      goto LABEL_15;
    }
    sub_100158E24((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for MainAction);
    uint64_t v28 = (uint64_t (*)())&type metadata accessor for CurrentLocation;
    uint64_t v29 = v38;
LABEL_21:
    sub_100158E24(v29, (uint64_t (*)(void))v28);
LABEL_22:
    sub_100158E24((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for MainAction);
    v20 += v21;
    --v19;
  }
  while (v19);
  swift_bridgeObjectRelease();
  a1 = v34;
  a2 = v35;
LABEL_25:
  uint64_t result = sub_1001AB0B0(a1, a2);
  *(void *)(a2 + 40) = v22;
  *(unsigned char *)(a2 + 48) = 0;
  return result;
}

UIImage *sub_100657008()
{
  uint64_t v1 = type metadata accessor for Locale();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100657760(v0);
  unint64_t v7 = v6;
  if (String.count.getter() > 2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v46 = v2;
  uint64_t v47 = v1;
  id v8 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleBody];
  sub_10017DF08(&qword_100E868D8);
  uint64_t inited = swift_initStackObject();
  long long v48 = xmmword_100C251B0;
  *(_OWORD *)(inited + 16) = xmmword_100C251B0;
  *(void *)(inited + 32) = UIFontDescriptorTraitsAttribute;
  sub_10017DF08(&qword_100E868E0);
  uint64_t v10 = swift_initStackObject();
  *(_OWORD *)(v10 + 16) = v48;
  *(void *)(v10 + 32) = UIFontWeightTrait;
  *(UIFontWeight *)(v10 + 40) = UIFontWeightSemibold;
  type metadata accessor for TraitKey(0);
  sub_100657A44(&qword_100E63080, type metadata accessor for TraitKey);
  uint64_t v11 = UIFontDescriptorTraitsAttribute;
  uint64_t v12 = UIFontWeightTrait;
  uint64_t v13 = Dictionary.init(dictionaryLiteral:)();
  *(void *)(inited + 64) = sub_10017DF08(&qword_100E868E8);
  *(void *)(inited + 40) = v13;
  type metadata accessor for AttributeName(0);
  sub_100657A44(&qword_100E63090, type metadata accessor for AttributeName);
  Dictionary.init(dictionaryLiteral:)();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v15 = [v8 fontDescriptorByAddingAttributes:isa];

  id v16 = [self fontWithDescriptor:v15 size:0.0];
  sub_10017DF08(&qword_100E7B440);
  uint64_t v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = xmmword_100C25ED0;
  *(void *)(v17 + 32) = NSForegroundColorAttributeName;
  uint64_t v18 = self;
  uint64_t v19 = NSForegroundColorAttributeName;
  id v20 = [v18 whiteColor];
  uint64_t v21 = sub_1001ABC4C(0, (unint64_t *)&qword_100E7B3F8);
  *(void *)(v17 + 40) = v20;
  *(void *)(v17 + 64) = v21;
  *(void *)(v17 + 72) = NSFontAttributeName;
  *(void *)(v17 + 104) = sub_1001ABC4C(0, (unint64_t *)&qword_100E73CF0);
  *(void *)(v17 + 80) = v16;
  type metadata accessor for Key(0);
  sub_100657A44(&qword_100E63070, type metadata accessor for Key);
  uint64_t v22 = NSFontAttributeName;
  id v23 = v16;
  sub_100187EA0();
  uint64_t v24 = Dictionary.init(dictionaryLiteral:)();
  NSString v25 = String._bridgeToObjectiveC()();
  sub_100187EA0();
  Class v26 = Dictionary._bridgeToObjectiveC()().super.isa;
  [v25 sizeWithAttributes:v26];
  double v28 = v27;
  double v30 = v29;

  v51.width = v28;
  v51.height = v30;
  UIGraphicsBeginImageContextWithOptions(v51, 0, 0.0);
  unint64_t v31 = UIGraphicsGetCurrentContext();
  uint64_t v32 = v31;
  if (v31)
  {
    CGContextSetShouldAntialias(v31, 1);
    CGContextSetAllowsAntialiasing(v32, 1);
  }
  NSString v33 = String._bridgeToObjectiveC()();
  sub_100657968((v28 - v28) * 0.5, (v30 - v30) * 0.5, v24, v33);

  uint64_t v34 = UIGraphicsGetImageFromCurrentImageContext();
  UIGraphicsEndImageContext();
  if (!v34)
  {
    if (qword_100E62788 != -1) {
      swift_once();
    }
    uint64_t v36 = type metadata accessor for Logger();
    sub_1002102B0(v36, (uint64_t)qword_100F51DB0);
    swift_bridgeObjectRetain();
    unint64_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      *(void *)&long long v48 = swift_slowAlloc();
      uint64_t v50 = v48;
      *(_DWORD *)uint64_t v39 = 136446466;
      uint64_t v44 = v39 + 4;
      static Locale.current.getter();
      sub_100657A44(&qword_100E868F0, (void (*)(uint64_t))&type metadata accessor for Locale);
      id v45 = v23;
      uint64_t v40 = v47;
      uint64_t v41 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v43 = v42;
      (*(void (**)(char *, uint64_t))(v46 + 8))(v4, v40);
      uint64_t v49 = sub_10016414C(v41, v43, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_10016414C(v5, v7, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "UnitTemperature.localizedIcon generated image is nil. locale=%{public}s, symbolText=%{public}s", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }

  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_100657760(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [objc_allocWithZone((Class)NSMeasurementFormatter) init];
  static Locale.current.getter();
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  [v6 setLocale:isa];

  [v6 setUnitStyle:1];
  id v8 = [v6 stringFromUnit:a1];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  BOOL v12 = v9 == 45250 && v11 == 0xA200000000000000;
  if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    [v6 setUnitStyle:2];
    id v13 = [v6 stringFromUnit:a1];
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v15 = String.count.getter();
    swift_bridgeObjectRelease();
    if (v15 <= 2) {
      return v14;
    }
  }
  else
  {
  }
  return v9;
}

void sub_100657968(double a1, double a2, uint64_t a3, void *a4)
{
  type metadata accessor for Key(0);
  sub_100657A44(&qword_100E63070, type metadata accessor for Key);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a4 drawAtPoint:isa withAttributes:a1, a2];
}

uint64_t sub_100657A44(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_100657AC8(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100658590((uint64_t)a1, (void (*)(void))type metadata accessor for NotificationsAction);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v6 = type metadata accessor for LocationModel();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
        {
          uint64_t v7 = type metadata accessor for NotificationLocation();
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
        }
        uint64_t v18 = *(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48);
        uint64_t v19 = (char *)a1 + v18;
        id v20 = (char *)a2 + v18;
        uint64_t v21 = type metadata accessor for URL();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
        {
          uint64_t v22 = sub_10017DF08(&qword_100E749B0);
          memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
        }
        goto LABEL_13;
      case 2u:
        uint64_t v8 = type metadata accessor for NotificationSubscription.Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        uint64_t v9 = *(int *)(sub_10017DF08(&qword_100E6F630) + 48);
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = type metadata accessor for NotificationSubscription.Kind();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        goto LABEL_13;
      case 3u:
      case 4u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 5u:
        uint64_t v13 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        uint64_t v14 = *(int *)(sub_10017DF08(&qword_100E6F638) + 48);
        uint64_t v15 = (char *)a1 + v14;
        id v16 = (char *)a2 + v14;
        uint64_t v17 = type metadata accessor for NotificationSubscription.Kind();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
LABEL_13:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *sub_100657E64(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 5:
      uint64_t v9 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      uint64_t v10 = *(int *)(sub_10017DF08(&qword_100E6F638) + 48);
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      uint64_t v13 = type metadata accessor for NotificationSubscription.Kind();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 2:
      uint64_t v14 = type metadata accessor for NotificationSubscription.Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
      uint64_t v15 = *(int *)(sub_10017DF08(&qword_100E6F630) + 48);
      id v16 = &a1[v15];
      uint64_t v17 = &a2[v15];
      uint64_t v18 = type metadata accessor for NotificationSubscription.Kind();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      goto LABEL_13;
    case 1:
      uint64_t v7 = type metadata accessor for LocationModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
      {
        uint64_t v8 = type metadata accessor for NotificationLocation();
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
      }
      uint64_t v19 = *(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48);
      id v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      uint64_t v22 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
      {
        uint64_t v23 = sub_10017DF08(&qword_100E749B0);
        memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
      }
      goto LABEL_13;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_10065817C(char *a1, char *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_100658590((uint64_t)a1, (void (*)(void))type metadata accessor for NotificationsAction);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 5:
      uint64_t v9 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      uint64_t v10 = *(int *)(sub_10017DF08(&qword_100E6F638) + 48);
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      uint64_t v13 = type metadata accessor for NotificationSubscription.Kind();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 2:
      uint64_t v14 = type metadata accessor for NotificationSubscription.Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
      uint64_t v15 = *(int *)(sub_10017DF08(&qword_100E6F630) + 48);
      id v16 = &a1[v15];
      uint64_t v17 = &a2[v15];
      uint64_t v18 = type metadata accessor for NotificationSubscription.Kind();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      goto LABEL_14;
    case 1:
      uint64_t v7 = type metadata accessor for LocationModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
      {
        uint64_t v8 = type metadata accessor for NotificationLocation();
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
      }
      uint64_t v19 = *(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48);
      id v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      uint64_t v22 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
      {
        uint64_t v23 = sub_10017DF08(&qword_100E749B0);
        memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
      }
      goto LABEL_14;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

uint64_t sub_1006584D8()
{
  sub_10021FB70(&qword_100E869A8);

  return ShortDescribable.description.getter();
}

uint64_t sub_100658530(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E749B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100658590(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1006585E8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x8000000100CACE80)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_100658670()
{
  return 0xD000000000000013;
}

uint64_t sub_10065868C(void *a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E869D8);
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a1, a1[3]);
  sub_1006588B8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v2);
}

uint64_t sub_100658790(void *a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E869B0);
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v9 = sub_1001B1E64(a1, a1[3]);
  sub_1006588B8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    unsigned __int8 v9 = KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return v9 & 1;
}

unint64_t sub_1006588B8()
{
  unint64_t result = qword_100E869B8;
  if (!qword_100E869B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E869B8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ReportWeatherComponent.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1006589A0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReportWeatherComponent.CodingKeys()
{
  return &type metadata for ReportWeatherComponent.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ReportWeatherComponent(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100658AA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReportWeatherComponent()
{
  return &type metadata for ReportWeatherComponent;
}

uint64_t sub_100658AE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1006585E8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100658B0C(uint64_t a1)
{
  unint64_t v2 = sub_1006588B8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100658B48(uint64_t a1)
{
  unint64_t v2 = sub_1006588B8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100658B84@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100658790(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_100658BB4(void *a1)
{
  return sub_10065868C(a1);
}

unint64_t sub_100658BD4()
{
  unint64_t result = qword_100E869C0;
  if (!qword_100E869C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E869C0);
  }
  return result;
}

unint64_t sub_100658C24()
{
  unint64_t result = qword_100E869C8;
  if (!qword_100E869C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E869C8);
  }
  return result;
}

unint64_t sub_100658C74()
{
  unint64_t result = qword_100E869D0;
  if (!qword_100E869D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E869D0);
  }
  return result;
}

uint64_t sub_100658CC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10017DF08(&qword_100E85920);
  __chkstk_darwin(v4 - 8);
  unsigned int v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  unsigned __int8 v9 = &v13[-v8];
  uint64_t v10 = v2 + OBJC_IVAR____TtC7Weather40SunriseSunsetChartBackgroundModelFactory____lazy_storage___listAnimationKind;
  swift_beginAccess();
  sub_1006597E0(v10, (uint64_t)v9);
  uint64_t v11 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11) != 1) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, v9, v11);
  }
  sub_100659848((uint64_t)v9);
  static Settings.VFX.animatedBackgrounds.getter();
  Settings.VFX.AnimatedBackgrounds.listAnimationKind.getter();
  swift_release();
  sub_1006598A8();
  Configurable.setting<A>(_:)();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v6, a1, v11);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 0, 1, v11);
  swift_beginAccess();
  sub_10062E504((uint64_t)v6, v10);
  return swift_endAccess();
}

uint64_t sub_100658ED0@<X0>(uint64_t a1@<X1>, char *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v90 = a1;
  char v91 = a2;
  uint64_t v82 = a3;
  type metadata accessor for SkyBackgroundGradient();
  sub_100179C0C();
  uint64_t v88 = v4;
  uint64_t v89 = v3;
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v87 = v5;
  sub_100129064();
  uint64_t v6 = type metadata accessor for CloudAltitudeKind();
  __chkstk_darwin(v6 - 8);
  sub_100109314();
  uint64_t v86 = v7;
  sub_100129064();
  type metadata accessor for WeatherConditionGradientModel.PresentationContext();
  sub_100179C0C();
  uint64_t v83 = v9;
  uint64_t v84 = v8;
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v85 = v10;
  sub_100129064();
  uint64_t v80 = type metadata accessor for Elevation();
  sub_100179C0C();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_100109314();
  uint64_t v79 = v14;
  sub_100129064();
  type metadata accessor for WeatherCondition();
  sub_100179C0C();
  uint64_t v77 = v16;
  uint64_t v78 = v15;
  __chkstk_darwin(v15);
  uint64_t v76 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  sub_100129064();
  uint64_t v81 = type metadata accessor for WeatherConditionGradientModel();
  sub_100179C0C();
  uint64_t v20 = v19;
  __chkstk_darwin(v21);
  sub_100109314();
  uint64_t v92 = v22;
  sub_100129064();
  uint64_t v23 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind();
  sub_100179C0C();
  uint64_t v25 = v24;
  __chkstk_darwin(v26);
  double v28 = (char *)&v75 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for WeatherConditionGradientModel.AnimationContext();
  sub_100179C0C();
  uint64_t v31 = v30;
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v75 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100658CC0((uint64_t)v28);
  int v35 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v28, v23);
  uint64_t v93 = v29;
  if (v35 == enum case for Settings.VFX.AnimatedBackgrounds.AnimationKind.vfx(_:))
  {
    (*(void (**)(char *, void, uint64_t))(v31 + 104))(v34, enum case for WeatherConditionGradientModel.AnimationContext.vfx(_:), v29);
  }
  else
  {
    int v36 = v35;
    uint64_t v37 = v20;
    uint64_t v38 = v12;
    int v39 = enum case for Settings.VFX.AnimatedBackgrounds.AnimationKind.mica(_:);
    (*(void (**)(char *, void, uint64_t))(v31 + 104))(v34, enum case for WeatherConditionGradientModel.AnimationContext.mica(_:), v93);
    BOOL v49 = v36 == v39;
    uint64_t v12 = v38;
    uint64_t v20 = v37;
    uint64_t v29 = v93;
    if (!v49) {
      (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v23);
    }
  }
  CurrentWeather.condition.getter();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(v79, v91, v80);
  CurrentWeather.isDaylight.getter();
  uint64_t v40 = *(void (**)(uint64_t, char *, uint64_t))(v31 + 16);
  uint64_t v41 = v85;
  char v91 = v34;
  v40(v85, v34, v29);
  (*(void (**)(uint64_t, void, uint64_t))(v83 + 104))(v41, enum case for WeatherConditionGradientModel.PresentationContext.fullScreen(_:), v84);
  CurrentWeather.cloudCover.getter();
  CurrentWeather.predominateCloudAltitudeKind.getter();
  uint64_t v42 = v92;
  WeatherConditionGradientModel.init(conditionKind:elevation:isDaylight:presentation:cloudCover:cloudKind:)();
  type metadata accessor for WeatherConditionGradientManager();
  swift_allocObject();
  WeatherConditionGradientManager.init()();
  uint64_t v43 = v87;
  WeatherConditionGradientManager.load(for:)();
  SkyBackgroundGradient.gradient()();
  (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v43, v89);
  uint64_t v44 = v31;
  if (CurrentWeather.isDaylight.getter())
  {
    id v45 = v76;
    CurrentWeather.condition.getter();
    uint64_t v46 = v77;
    uint64_t v47 = v78;
    int v48 = (*(uint64_t (**)(char *, uint64_t))(v77 + 88))(v45, v78);
    BOOL v49 = v48 == enum case for WeatherCondition.blizzard(_:) || v48 == enum case for WeatherCondition.blowingDust(_:);
    if (!v49
      && v48 != enum case for WeatherCondition.blowingSnow(_:)
      && v48 != enum case for WeatherCondition.breezy(_:)
      && v48 != enum case for WeatherCondition.clear(_:))
    {
      BOOL v52 = v48 == enum case for WeatherCondition.cloudy(_:) || v48 == enum case for WeatherCondition.drizzle(_:);
      BOOL v53 = v52 || v48 == enum case for WeatherCondition.flurries(_:);
      BOOL v54 = v53 || v48 == enum case for WeatherCondition.foggy(_:);
      BOOL v55 = v54 || v48 == enum case for WeatherCondition.freezingDrizzle(_:);
      BOOL v56 = v55 || v48 == enum case for WeatherCondition.freezingRain(_:);
      if (!v56 && v48 != enum case for WeatherCondition.frigid(_:))
      {
        BOOL v57 = v48 == enum case for WeatherCondition.hail(_:) || v48 == enum case for WeatherCondition.haze(_:);
        BOOL v58 = v57 || v48 == enum case for WeatherCondition.heavyRain(_:);
        BOOL v59 = v58 || v48 == enum case for WeatherCondition.heavySnow(_:);
        if (!v59
          && v48 != enum case for WeatherCondition.hot(_:)
          && v48 != enum case for WeatherCondition.hurricane(_:)
          && v48 != enum case for WeatherCondition.isolatedThunderstorms(_:))
        {
          BOOL v61 = v48 == enum case for WeatherCondition.mostlyClear(_:)
             || v48 == enum case for WeatherCondition.mostlyCloudy(_:);
          if (!v61 && v48 != enum case for WeatherCondition.partlyCloudy(_:))
          {
            BOOL v71 = v48 == enum case for WeatherCondition.rain(_:)
               || v48 == enum case for WeatherCondition.scatteredThunderstorms(_:)
               || v48 == enum case for WeatherCondition.sleet(_:)
               || v48 == enum case for WeatherCondition.smoky(_:)
               || v48 == enum case for WeatherCondition.snow(_:)
               || v48 == enum case for WeatherCondition.strongStorms(_:)
               || v48 == enum case for WeatherCondition.sunFlurries(_:)
               || v48 == enum case for WeatherCondition.sunShowers(_:)
               || v48 == enum case for WeatherCondition.thunderstorms(_:)
               || v48 == enum case for WeatherCondition.tropicalStorm(_:);
            if (!v71
              && v48 != enum case for WeatherCondition.windy(_:)
              && v48 != enum case for WeatherCondition.wintryMix(_:))
            {
              (*(void (**)(char *, uint64_t))(v46 + 8))(v45, v47);
            }
          }
        }
      }
    }
  }
  uint64_t v72 = v82;
  SunriseSunsetChartBackground.init(gradient:opacity:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v42, v81);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v91, v93);
  uint64_t v73 = type metadata accessor for SunriseSunsetChartBackground();
  return _s7Weather24LocationCompositionStateOwst_0(v72, 0, 1, v73);
}

uint64_t sub_100659678()
{
  sub_100659848(v0 + OBJC_IVAR____TtC7Weather40SunriseSunsetChartBackgroundModelFactory____lazy_storage___listAnimationKind);

  return swift_deallocClassInstance();
}

uint64_t sub_1006596DC()
{
  return type metadata accessor for SunriseSunsetChartBackgroundModelFactory();
}

uint64_t type metadata accessor for SunriseSunsetChartBackgroundModelFactory()
{
  uint64_t result = qword_100E86A10;
  if (!qword_100E86A10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10065972C()
{
  sub_100013E14();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1006597BC@<X0>(uint64_t a1@<X1>, char *a2@<X2>, uint64_t a3@<X8>)
{
  return sub_100658ED0(a1, a2, a3);
}

uint64_t sub_1006597E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E85920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100659848(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E85920);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1006598A8()
{
  unint64_t result = qword_100E86A98;
  if (!qword_100E86A98)
  {
    type metadata accessor for SunriseSunsetChartBackgroundModelFactory();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86A98);
  }
  return result;
}

uint64_t type metadata accessor for MessageCoverInteractor()
{
  return self;
}

uint64_t *sub_10065991C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Elevation();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_10017DF08(&qword_100E63760);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for BackgroundMoonData();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
    {
      uint64_t v18 = sub_10017DF08(&qword_100E63768);
      memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
    }
  }
  return a1;
}

uint64_t sub_100659B2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Elevation();
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v13 = *(void *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_10017DF08(&qword_100E63760);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = type metadata accessor for BackgroundMoonData();
  int v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v18);
  int v20 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18);
  if (!v19)
  {
    uint64_t v21 = *(void *)(v18 - 8);
    if (!v20)
    {
      (*(void (**)(void *, const void *, uint64_t))(v21 + 24))(v16, v17, v18);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    uint64_t v22 = sub_10017DF08(&qword_100E63768);
    memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
  return a1;
}

uint64_t sub_100659DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Elevation();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E63760);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = type metadata accessor for BackgroundMoonData();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = sub_10017DF08(&qword_100E63768);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_100659FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Elevation();
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v13 = *(void *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_10017DF08(&qword_100E63760);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = type metadata accessor for BackgroundMoonData();
  int v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v18);
  int v20 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18);
  if (!v19)
  {
    uint64_t v21 = *(void *)(v18 - 8);
    if (!v20)
    {
      (*(void (**)(void *, const void *, uint64_t))(v21 + 40))(v16, v17, v18);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    uint64_t v22 = sub_10017DF08(&qword_100E63768);
    memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
  return a1;
}

uint64_t sub_10065A27C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10065A290);
}

uint64_t sub_10065A290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    sub_10017DF08(&qword_100E63760);
    sub_100162F30();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v8 = sub_10017DF08(&qword_100E63768);
      uint64_t v12 = *(int *)(a3 + 24);
    }
    uint64_t v9 = a1 + v12;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_10065A338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10065A34C);
}

uint64_t sub_10065A34C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_10017DF08(&qword_100E63760);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = *(int *)(a4 + 20);
    }
    else
    {
      uint64_t v10 = sub_10017DF08(&qword_100E63768);
      uint64_t v14 = *(int *)(a4 + 24);
    }
    uint64_t v11 = a1 + v14;
  }

  return _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

BOOL sub_10065A3FC(uint64_t a1, uint64_t a2)
{
  uint64_t v75 = a2;
  uint64_t v71 = type metadata accessor for BackgroundMoonData();
  sub_100179C0C();
  uint64_t v67 = v5;
  __chkstk_darwin(v6);
  sub_10017A130(v7, v60);
  uint64_t v69 = sub_10017DF08(&qword_100E86BE0);
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v70 = v9;
  uint64_t v10 = sub_10017DF08(&qword_100E63768);
  uint64_t v11 = sub_100109308(v10);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v68 = (uint64_t)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v60 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v60 - v17;
  uint64_t v74 = type metadata accessor for Elevation();
  sub_100179C0C();
  uint64_t v72 = v19;
  __chkstk_darwin(v20);
  sub_100109370();
  uint64_t v21 = sub_10017DF08(&qword_100E86BE8);
  sub_100162E4C();
  __chkstk_darwin(v22);
  sub_10012B938();
  uint64_t v23 = sub_10017DF08(&qword_100E63760);
  uint64_t v24 = sub_100109308(v23);
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v60 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v25);
  uint64_t v30 = (char *)&v60 - v29;
  __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v60 - v31;
  uint64_t v33 = a1;
  uint64_t v34 = v75;
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  char v65 = v18;
  uint64_t v66 = v27;
  uint64_t v63 = v3;
  char v64 = v16;
  uint64_t v35 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v36 = v33;
  sub_1001262FC(v33 + *(int *)(v35 + 20), (uint64_t)v32, &qword_100E63760);
  sub_1001262FC(v34 + *(int *)(v35 + 20), (uint64_t)v30, &qword_100E63760);
  uint64_t v37 = v2 + *(int *)(v21 + 48);
  sub_1001262FC((uint64_t)v32, v2, &qword_100E63760);
  sub_1001262FC((uint64_t)v30, v37, &qword_100E63760);
  uint64_t v38 = v74;
  sub_10012B520(v2, 1, v74);
  uint64_t v39 = (uint64_t)v32;
  if (v42)
  {
    uint64_t v62 = v36;
    sub_1001781AC((uint64_t)v30, &qword_100E63760);
    sub_1001781AC((uint64_t)v32, &qword_100E63760);
    sub_10012B520(v37, 1, v38);
    uint64_t v40 = v73;
    if (v42)
    {
      sub_1001781AC(v2, &qword_100E63760);
      goto LABEL_12;
    }
LABEL_10:
    uint64_t v43 = &qword_100E86BE8;
    uint64_t v44 = v2;
LABEL_21:
    sub_1001781AC(v44, v43);
    return 0;
  }
  uint64_t v41 = (uint64_t)v66;
  sub_1001262FC(v2, (uint64_t)v66, &qword_100E63760);
  sub_10012B520(v37, 1, v38);
  if (v42)
  {
    sub_1001781AC((uint64_t)v30, &qword_100E63760);
    sub_1001781AC((uint64_t)v32, &qword_100E63760);
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v41, v38);
    goto LABEL_10;
  }
  uint64_t v62 = v36;
  uint64_t v45 = v72;
  uint64_t v46 = v63;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 32))(v63, v37, v38);
  sub_1001E5798(&qword_100E6A700, (void (*)(uint64_t))&type metadata accessor for Elevation);
  int v61 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v47 = v41;
  int v48 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
  v48(v46, v38);
  sub_1001781AC((uint64_t)v30, &qword_100E63760);
  sub_1001781AC(v39, &qword_100E63760);
  v48(v47, v38);
  uint64_t v40 = v73;
  sub_1001781AC(v2, &qword_100E63760);
  if ((v61 & 1) == 0) {
    return 0;
  }
LABEL_12:
  uint64_t v49 = (uint64_t)v65;
  sub_1001262FC(v62 + *(int *)(v35 + 24), (uint64_t)v65, &qword_100E63768);
  uint64_t v50 = (uint64_t)v64;
  sub_1001262FC(v34 + *(int *)(v35 + 24), (uint64_t)v64, &qword_100E63768);
  uint64_t v51 = v70;
  uint64_t v52 = v70 + *(int *)(v69 + 48);
  sub_1001262FC(v49, v70, &qword_100E63768);
  sub_1001262FC(v50, v52, &qword_100E63768);
  uint64_t v53 = v71;
  sub_10012B520(v51, 1, v71);
  if (v42)
  {
    sub_1001781AC(v50, &qword_100E63768);
    sub_1001781AC(v49, &qword_100E63768);
    sub_10012B520(v52, 1, v53);
    if (v42)
    {
      sub_1001781AC(v51, &qword_100E63768);
      return 1;
    }
    goto LABEL_20;
  }
  uint64_t v54 = v68;
  sub_1001262FC(v51, v68, &qword_100E63768);
  sub_10012B520(v52, 1, v53);
  if (v55)
  {
    sub_1001781AC(v50, &qword_100E63768);
    sub_1001781AC(v49, &qword_100E63768);
    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v54, v53);
LABEL_20:
    uint64_t v43 = &qword_100E86BE0;
    uint64_t v44 = v51;
    goto LABEL_21;
  }
  uint64_t v57 = v67;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 32))(v40, v52, v53);
  sub_1001E5798(&qword_100E86BF0, (void (*)(uint64_t))&type metadata accessor for BackgroundMoonData);
  char v58 = dispatch thunk of static Equatable.== infix(_:_:)();
  BOOL v59 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
  v59(v40, v53);
  sub_1001781AC(v50, &qword_100E63768);
  sub_1001781AC(v49, &qword_100E63768);
  v59(v54, v53);
  sub_1001781AC(v51, &qword_100E63768);
  return (v58 & 1) != 0;
}

uint64_t sub_10065AAB4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6F69746176656C65 && a2 == 0xE90000000000006ELL;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x617461446E6F6F6DLL && a2 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_10065AC00(char a1)
{
  if (!a1) {
    return 1702125924;
  }
  if (a1 == 1) {
    return 0x6F69746176656C65;
  }
  return 0x617461446E6F6F6DLL;
}

uint64_t sub_10065AC54(void *a1)
{
  uint64_t v4 = sub_10017DF08(&qword_100E86C18);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10012B938();
  sub_1001B1E64(a1, a1[3]);
  sub_10065B3CC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for Date();
  sub_1001E5798(&qword_100E63968, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for WeatherConditionBackgroundTimeData();
    type metadata accessor for Elevation();
    sub_1001E5798(&qword_100E86C20, (void (*)(uint64_t))&type metadata accessor for Elevation);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    type metadata accessor for BackgroundMoonData();
    sub_1001E5798(&qword_100E86C28, (void (*)(uint64_t))&type metadata accessor for BackgroundMoonData);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t sub_10065AE98@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v5 = sub_10017DF08(&qword_100E63768);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v27 = v7;
  uint64_t v8 = sub_10017DF08(&qword_100E63760);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100109370();
  uint64_t v10 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v29 = v11;
  __chkstk_darwin(v12);
  sub_10017A130(v13, v26);
  uint64_t v30 = sub_10017DF08(&qword_100E86BF8);
  sub_100179C0C();
  uint64_t v28 = v14;
  __chkstk_darwin(v15);
  sub_10016279C();
  uint64_t v16 = type metadata accessor for WeatherConditionBackgroundTimeData();
  sub_100162E4C();
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a1, a1[3]);
  sub_10065B3CC();
  uint64_t v32 = v2;
  uint64_t v20 = v33;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v20) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  uint64_t v21 = v29;
  char v36 = 0;
  sub_1001E5798(&qword_100E63948, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 32);
  uint64_t v33 = v19;
  v22(v19, v31, v10);
  type metadata accessor for Elevation();
  char v35 = 1;
  sub_1001E5798(&qword_100E86C08, (void (*)(uint64_t))&type metadata accessor for Elevation);
  sub_1001D1BA4();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  sub_10020E72C(v3, (uint64_t)&v33[*(int *)(v16 + 20)], &qword_100E63760);
  type metadata accessor for BackgroundMoonData();
  char v34 = 2;
  sub_1001E5798(&qword_100E86C10, (void (*)(uint64_t))&type metadata accessor for BackgroundMoonData);
  uint64_t v23 = v27;
  sub_1001D1BA4();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v32, v30);
  uint64_t v24 = (uint64_t)v33;
  sub_10020E72C(v23, (uint64_t)&v33[*(int *)(v16 + 24)], &qword_100E63768);
  sub_10065B418(v24, v26);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return sub_10065B47C(v24);
}

uint64_t sub_10065B2EC()
{
  return sub_10065AC00(*v0);
}

uint64_t sub_10065B2F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10065AAB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10065B31C(uint64_t a1)
{
  unint64_t v2 = sub_10065B3CC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10065B358(uint64_t a1)
{
  unint64_t v2 = sub_10065B3CC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10065B394@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10065AE98(a1, a2);
}

uint64_t sub_10065B3AC(void *a1)
{
  return sub_10065AC54(a1);
}

unint64_t sub_10065B3CC()
{
  unint64_t result = qword_100E86C00;
  if (!qword_100E86C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86C00);
  }
  return result;
}

uint64_t sub_10065B418(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherConditionBackgroundTimeData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10065B47C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherConditionBackgroundTimeData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for WeatherConditionBackgroundTimeData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10065B5A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherConditionBackgroundTimeData.CodingKeys()
{
  return &type metadata for WeatherConditionBackgroundTimeData.CodingKeys;
}

unint64_t sub_10065B5E0()
{
  unint64_t result = qword_100E86C30;
  if (!qword_100E86C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86C30);
  }
  return result;
}

unint64_t sub_10065B630()
{
  unint64_t result = qword_100E86C38;
  if (!qword_100E86C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86C38);
  }
  return result;
}

unint64_t sub_10065B680()
{
  unint64_t result = qword_100E86C40[0];
  if (!qword_100E86C40[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100E86C40);
  }
  return result;
}

void sub_10065B6CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_10065B6D8()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 112);
  uint64_t v2 = type metadata accessor for Optional();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10065B788()
{
  sub_10065B6D8();

  return swift_deallocClassInstance();
}

void sub_10065B7DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_10065B7EC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 32))(a2) & 1;
}

uint64_t sub_10065B820(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  char v6 = *(unsigned char *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 96) = v6;
  sub_10018F6E4();
  return a1;
}

uint64_t sub_10065B8B4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 96) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 97) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 97) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t *assignWithCopy for AnyEquatable(uint64_t *a1, uint64_t *a2)
{
  sub_10065B954(a1, a2);
  uint64_t v4 = a2[5];
  a1[4] = a2[4];
  a1[5] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t *sub_10065B954(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    int v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *int v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *int v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

_OWORD *assignWithTake for AnyEquatable(_OWORD *a1, _OWORD *a2)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyEquatable(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyEquatable(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_10065BC4C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10065BC8C(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t initializeWithCopy for NotificationsState(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NotificationsState(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for NotificationsState(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for NotificationsState()
{
  return &type metadata for NotificationsState;
}

uint64_t sub_10065BDAC(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v4 = type metadata accessor for NotificationSubscription.Kind();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static NotificationSubscription.Kind.precipitation.getter();
  sub_10065CD6C(&qword_100E86D98, (void (*)(uint64_t))&type metadata accessor for NotificationSubscription.Kind);
  char v11 = sub_1001A22F0();
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v12 = v29(v10, v4);
  if (v11)
  {
    __chkstk_darwin(v12);
    sub_10017E758();
    sub_100A95BA4();
    sub_10017DF08(&qword_100E86DA0);
    uint64_t v13 = type metadata accessor for NotificationSubscription.Location();
    sub_100179C0C();
    uint64_t v15 = v14;
    uint64_t v16 = a1;
    unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_100C251B0;
    unint64_t v19 = v18 + v17;
    a1 = v16;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 16))(v19, v16, v13);
    sub_10037FC58(v18);
  }
  static NotificationSubscription.Kind.severe.getter();
  char v20 = sub_1001A22F0();
  uint64_t v21 = v29(v10, v4);
  if (v20)
  {
    __chkstk_darwin(v21);
    sub_10017E758();
    sub_100A95BA4();
    sub_10017DF08(&qword_100E86DA0);
    uint64_t v22 = type metadata accessor for NotificationSubscription.Location();
    sub_100179C0C();
    uint64_t v24 = v23;
    uint64_t v25 = a1;
    unint64_t v26 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_100C251B0;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v24 + 16))(v27 + v26, v25, v22);
    sub_10037FC58(v27);
  }
  return a3;
}

uint64_t sub_10065C0E4(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v19 = a3;
  int v20 = a6;
  type metadata accessor for NotificationSubscription.Kind();
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_1001626E0();
  swift_bridgeObjectRetain();
  v18[1] = a5;
  swift_bridgeObjectRetain();
  static NotificationSubscription.Kind.precipitation.getter();
  sub_10065CD6C(&qword_100E86D98, (void (*)(uint64_t))&type metadata accessor for NotificationSubscription.Kind);
  LOBYTE(a5) = dispatch thunk of SetAlgebra.isSuperset(of:)();
  char v11 = *(uint64_t (**)(uint64_t))(v9 + 8);
  uint64_t v12 = sub_10017E1D4();
  uint64_t v13 = v11(v12);
  v18[0] = a1;
  if (a5)
  {
    __chkstk_darwin(v13);
    v18[-2] = a1;
    sub_100A95BA4();
  }
  static NotificationSubscription.Kind.severe.getter();
  char v14 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  uint64_t v15 = sub_10017E1D4();
  uint64_t v16 = v11(v15);
  if (v14)
  {
    __chkstk_darwin(v16);
    v18[-2] = v18[0];
    sub_100A95BA4();
  }
  return v19;
}

uint64_t sub_10065C2D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4 = NotificationSubscription.Location.id.getter();
  uint64_t v6 = v5;
  if (v4 == a3() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    char v10 = 0;
  }
  else
  {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v10 = v9 ^ 1;
  }
  return v10 & 1;
}

uint64_t sub_10065C388(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x8000000100CACF20
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000100CACF40 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v5 = a1 == 0x6F4C657265766573 && a2 == 0xEF736E6F69746163;
    if (v5 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000019 && a2 == 0x8000000100CACF60)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v6) {
        return 3;
      }
      else {
        return 4;
      }
    }
  }
}

unint64_t sub_10065C550(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000016;
      break;
    case 2:
      unint64_t result = 0x6F4C657265766573;
      break;
    case 3:
      unint64_t result = 0xD000000000000019;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10065C5EC(void *a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E86D78);
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  sub_1001B1E64(a1, a1[3]);
  sub_10065CBF4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10065CC8C();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    sub_10017DF08(&qword_100E86D60);
    sub_10065CCD8(&qword_100E86D88, &qword_100E86D90);
    sub_10019EEC8();
    sub_10019EEC8();
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_10065C7D0(void *a1)
{
  sub_10017DF08(&qword_100E86D48);
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v4 = a1[4];
  sub_1001B1E64(a1, a1[3]);
  sub_10065CBF4();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_10065CC40();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v4 = v8;
    sub_10017DF08(&qword_100E86D60);
    sub_10065CCD8(&qword_100E86D68, &qword_100E86D70);
    sub_10017A684();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    swift_bridgeObjectRetain();
    sub_10017A684();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v6 = sub_1001800B8();
    v7(v6);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v4;
}

unint64_t sub_10065CA74()
{
  return sub_10065C550(*v0);
}

uint64_t sub_10065CA7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10065C388(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10065CAA4(uint64_t a1)
{
  unint64_t v2 = sub_10065CBF4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10065CAE0(uint64_t a1)
{
  unint64_t v2 = sub_10065CBF4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10065CB1C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_10065C7D0(a1);
  if (!v2)
  {
    *(unsigned char *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 24) = v7 & 1;
  }
  return result;
}

uint64_t sub_10065CB54(void *a1)
{
  return sub_10065C5EC(a1);
}

void sub_10065CB78(uint64_t a1@<X8>)
{
  sub_100899910();
  if (!v1)
  {
    *(unsigned char *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v5;
    *(unsigned char *)(a1 + 24) = v6 & 1;
  }
}

void sub_10065CBB0()
{
}

uint64_t sub_10065CBD4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100119604(*a1, *((void *)a1 + 1), *((void *)a1 + 2), a1[24], *a2, *((void *)a2 + 1), *((void *)a2 + 2), a2[24]);
}

unint64_t sub_10065CBF4()
{
  unint64_t result = qword_100E86D50;
  if (!qword_100E86D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86D50);
  }
  return result;
}

unint64_t sub_10065CC40()
{
  unint64_t result = qword_100E86D58;
  if (!qword_100E86D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86D58);
  }
  return result;
}

unint64_t sub_10065CC8C()
{
  unint64_t result = qword_100E86D80;
  if (!qword_100E86D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86D80);
  }
  return result;
}

uint64_t sub_10065CCD8(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(&qword_100E86D60);
    sub_10065CD6C(a2, (void (*)(uint64_t))&type metadata accessor for NotificationSubscription.Location);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10065CD6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10065CDB4(uint64_t a1)
{
  return sub_10065C2D8(a1, *(void *)(v1 + 16), (uint64_t (*)(void))&NotificationSubscription.Location.id.getter) & 1;
}

uint64_t sub_10065CDE8(uint64_t a1)
{
  return sub_10065C2D8(a1, *(void *)(v1 + 16), (uint64_t (*)(void))&Location.id.getter) & 1;
}

unsigned char *storeEnumTagSinglePayload for NotificationsState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10065CEE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationsState.CodingKeys()
{
  return &type metadata for NotificationsState.CodingKeys;
}

unint64_t sub_10065CF24()
{
  unint64_t result = qword_100E86DA8;
  if (!qword_100E86DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86DA8);
  }
  return result;
}

unint64_t sub_10065CF74()
{
  unint64_t result = qword_100E86DB0;
  if (!qword_100E86DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86DB0);
  }
  return result;
}

unint64_t sub_10065CFC4()
{
  unint64_t result = qword_100E86DB8;
  if (!qword_100E86DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86DB8);
  }
  return result;
}

uint64_t sub_10065D010(uint64_t a1)
{
  return sub_10065CDB4(a1) & 1;
}

uint64_t sub_10065D02C(uint64_t a1)
{
  return sub_10065CDE8(a1) & 1;
}

void type metadata accessor for NotificationsOptInFlowState()
{
}

uint64_t sub_10065D05C(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 4))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 2);
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10065D0A8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_DWORD *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 4) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 4) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 2) = a2 + 1;
    }
  }
  return result;
}

void type metadata accessor for NotificationsOptInViewModel()
{
}

void type metadata accessor for NotificationsOptInAlertState()
{
}

unint64_t sub_10065D108()
{
  unint64_t result = qword_100E86DC0;
  if (!qword_100E86DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86DC0);
  }
  return result;
}

uint64_t sub_10065D154(unsigned int a1, unsigned int a2)
{
  if (a2 != a1) {
    return 0;
  }
  if ((a1 & 0xFF00) == 0x600)
  {
    uint64_t v2 = 0;
    if (BYTE1(a2) != 6) {
      return v2;
    }
  }
  else
  {
    if (BYTE1(a2) == 6) {
      return 0;
    }
    uint64_t v2 = 0;
    if ((((unsigned __int16)a2 ^ (unsigned __int16)a1) & 0xFF00) != 0) {
      return v2;
    }
  }
  if (((a1 ^ a2) & 0x10000) != 0) {
    return v2;
  }
  unsigned int v4 = HIBYTE(a2);
  if (HIBYTE(a1) == 2)
  {
    if (v4 == 2) {
      return 1;
    }
  }
  else if (HIBYTE(a1) == 3)
  {
    if (v4 == 3) {
      return 1;
    }
  }
  else if (HIBYTE(a2) & 0xFE) != 2 && ((((a1 & 0x1000000) == 0) ^ ((a2 & 0x1000000) >> 24)))
  {
    return 1;
  }
  return 0;
}

uint64_t sub_10065D204(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74617453776F6C66 && a2 == 0xE900000000000065;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000100CACF80 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000100C9A680 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6573556E4974706FLL && a2 == 0xEF73757461745372)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_10065D3E0(char a1)
{
  unint64_t result = 0x74617453776F6C66;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0x6573556E4974706FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10065D490(void *a1)
{
  uint64_t v4 = sub_10017DF08(&qword_100E86F20);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10012B938();
  sub_1001B1E64(a1, a1[3]);
  sub_10065FF04();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10065FFE8();
  sub_1001854A4();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    sub_1001854A4();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    KeyedEncodingContainer.encode(_:forKey:)();
    sub_100660034();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

void sub_10065D634()
{
  sub_10016314C();
  uint64_t v1 = v0;
  sub_10017DF08(&qword_100E86F00);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_100125FF8();
  sub_1001B1E64(v1, v1[3]);
  sub_10065FF04();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  sub_10065FF50();
  sub_1001A1788();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  sub_1001A1788();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  KeyedDecodingContainer.decode(_:forKey:)();
  sub_10065FF9C();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v3 = sub_10017D214();
  v4(v3);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v1);
  sub_100163164();
}

unint64_t sub_10065D808()
{
  return sub_10065D3E0(*v0);
}

uint64_t sub_10065D810@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10065D204(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10065D838(uint64_t a1)
{
  unint64_t v2 = sub_10065FF04();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10065D874(uint64_t a1)
{
  unint64_t v2 = sub_10065FF04();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_10065D8B0(uint64_t a1@<X8>)
{
  sub_10065D634();
  if (!v1)
  {
    *(_WORD *)a1 = v3;
    *(unsigned char *)(a1 + 2) = BYTE2(v3) & 1;
    *(unsigned char *)(a1 + 3) = HIBYTE(v3);
  }
}

uint64_t sub_10065D8F4(void *a1)
{
  return sub_10065D490(a1);
}

uint64_t sub_10065D934(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1[2]) {
    int v2 = 0x10000;
  }
  else {
    int v2 = 0;
  }
  unsigned int v3 = v2 | (a1[3] << 24) | (a1[1] << 8) | *a1;
  if (a2[2]) {
    int v4 = 0x10000;
  }
  else {
    int v4 = 0;
  }
  return sub_10065D154(v3, v4 | (a2[3] << 24) | (a2[1] << 8) | *a2);
}

uint64_t sub_10065D984@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_100899B44();
  if (!v1)
  {
    *(_WORD *)a1 = result;
    *(unsigned char *)(a1 + 2) = BYTE2(result) & 1;
    *(unsigned char *)(a1 + 3) = BYTE3(result);
  }
  return result;
}

void sub_10065D9C8()
{
}

uint64_t sub_10065DA08@<X0>(int a1@<W0>, uint64_t *a2@<X8>)
{
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C33BA0;
  *(void *)(inited + 32) = 0x74617453776F6C66;
  *(void *)(inited + 40) = 0xE900000000000065;
  *(void *)(inited + 48) = String.init<A>(describing:)();
  *(void *)(inited + 56) = v5;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = 0xD000000000000011;
  *(void *)(inited + 88) = 0x8000000100CACF80;
  sub_10017DF08(&qword_100E86DD8);
  *(void *)(inited + 96) = String.init<A>(describing:)();
  *(void *)(inited + 104) = v6;
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 128) = 0xD000000000000014;
  uint64_t v7 = 1702195828;
  if ((a1 & 0x10000) == 0) {
    uint64_t v7 = 0x65736C6166;
  }
  unint64_t v8 = 0xE400000000000000;
  if ((a1 & 0x10000) == 0) {
    unint64_t v8 = 0xE500000000000000;
  }
  *(void *)(inited + 168) = &type metadata for String;
  *(void *)(inited + 136) = 0x8000000100C9A680;
  *(void *)(inited + 144) = v7;
  *(void *)(inited + 152) = v8;
  Dictionary.init(dictionaryLiteral:)();
  a2[3] = sub_10017DF08(&qword_100E86DE0);
  a2[4] = sub_10065FB20();
  sub_100170694(a2);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_10065DBB0@<X0>(uint64_t *a1@<X8>)
{
  if (v1[2]) {
    int v2 = 0x10000;
  }
  else {
    int v2 = 0;
  }
  return sub_10065DA08(v2 | (v1[3] << 24) | (v1[1] << 8) | *v1, a1);
}

uint64_t sub_10065DBDC()
{
  sub_10065FB74();

  return ShortDescribable.description.getter();
}

uint64_t sub_10065DC18(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10012B938();
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  __chkstk_darwin(active - 8);
  sub_100125FF8();
  if (*(void *)(a1 + *(int *)(type metadata accessor for ViewState(0) + 36) + 8) == 1
    && (swift_retain(), char v9 = sub_10001EE2C(), swift_release(), (v9 & 1) != 0)
    && (uint64_t v10 = sub_100987050()) != 0)
  {
    sub_10016ECAC(v10 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, v2);
    if (_s7Weather24LocationCompositionStateOwet_0(v2, 1, v4) == 1)
    {
      sub_10059BF64(a1);
      swift_release();
      return 1;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v1, v2, v4);
      Location.Identifier.kind.getter();
      uint64_t v12 = Location.Identifier.Kind.rawValue.getter();
      uint64_t v14 = v13;
      char v15 = 1;
      if (v12 != Location.Identifier.Kind.rawValue.getter() || v14 != v16) {
        char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_10059BF64(a1);
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
      return v15 & 1;
    }
  }
  else
  {
    sub_10059BF64(a1);
    return 2;
  }
}

uint64_t sub_10065DE2C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7461636F4C6B7361 && a2 == 0xEB000000006E6F69;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000100CACFC0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v6 = a1 == 0x72657665536B7361 && a2 == 0xE900000000000065;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = a1 == 0x6574656C706D6F63 && a2 == 0xE800000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        BOOL v8 = a1 == 0x6E6F697461636F6CLL && a2 == 0xEE006465696E6544;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0xD000000000000013 && a2 == 0x8000000100CACFA0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v9) {
            return 5;
          }
          else {
            return 6;
          }
        }
      }
    }
  }
}

unint64_t sub_10065E0E0(char a1)
{
  unint64_t result = 0x7461636F4C6B7361;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x72657665536B7361;
      break;
    case 3:
      unint64_t result = 0x6574656C706D6F63;
      break;
    case 4:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

void sub_10065E1D0()
{
  sub_10016314C();
  char v45 = v1;
  unsigned int v3 = v2;
  sub_10017DF08(&qword_100E86E68);
  sub_100179C0C();
  uint64_t v43 = v5;
  uint64_t v44 = v4;
  __chkstk_darwin(v4);
  sub_10017B2B0(v6, v29);
  sub_10017DF08(&qword_100E86E70);
  sub_100179C0C();
  uint64_t v40 = v8;
  uint64_t v41 = v7;
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v39 = v9;
  sub_10017DF08(&qword_100E86E78);
  sub_100179C0C();
  uint64_t v37 = v11;
  uint64_t v38 = v10;
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v36 = v12;
  sub_10017DF08(&qword_100E86E80);
  sub_100179C0C();
  uint64_t v34 = v14;
  uint64_t v35 = v13;
  __chkstk_darwin(v13);
  sub_100109314();
  uint64_t v33 = v15;
  sub_10017DF08(&qword_100E86E88);
  sub_100179C0C();
  uint64_t v31 = v17;
  uint64_t v32 = v16;
  __chkstk_darwin(v16);
  sub_1001626E0();
  uint64_t v20 = v19 - v18;
  uint64_t v21 = sub_10017DF08(&qword_100E86E90);
  sub_100179C0C();
  uint64_t v30 = v22;
  __chkstk_darwin(v23);
  sub_100109370();
  sub_10017DF08(&qword_100E86E98);
  sub_100179C0C();
  __chkstk_darwin(v24);
  sub_100125FF8();
  sub_1001B1E64(v3, v3[3]);
  sub_10065FBC0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  switch(v45)
  {
    case 1:
      sub_10065FD3C();
      sub_100178FC0();
      uint64_t v26 = v31;
      uint64_t v25 = v32;
      goto LABEL_8;
    case 2:
      sub_10065FCF0();
      uint64_t v20 = v33;
      sub_100178FC0();
      uint64_t v26 = v34;
      uint64_t v25 = v35;
      goto LABEL_8;
    case 3:
      sub_10065FCA4();
      uint64_t v20 = v36;
      sub_100178FC0();
      uint64_t v26 = v37;
      uint64_t v25 = v38;
      goto LABEL_8;
    case 4:
      sub_10065FC58();
      uint64_t v20 = v39;
      sub_100178FC0();
      uint64_t v26 = v40;
      uint64_t v25 = v41;
      goto LABEL_8;
    case 5:
      sub_10065FC0C();
      uint64_t v20 = v42;
      sub_100178FC0();
      uint64_t v26 = v43;
      uint64_t v25 = v44;
LABEL_8:
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v20, v25);
      break;
    default:
      sub_10065FD88();
      sub_100178FC0();
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v0, v21);
      break;
  }
  uint64_t v27 = sub_10017D214();
  v28(v27);
  sub_100163164();
}

void sub_10065E5A8()
{
  sub_10016314C();
  BOOL v2 = v1;
  sub_10017DF08(&qword_100E86DF8);
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_100109314();
  sub_10017DF08(&qword_100E86E00);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_10017EF38(v5, v36);
  sub_10017DF08(&qword_100E86E08);
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_10017B2B0(v7, v37);
  sub_10017DF08(&qword_100E86E10);
  sub_100179C0C();
  __chkstk_darwin(v8);
  sub_100109314();
  sub_10017DF08(&qword_100E86E18);
  sub_100179C0C();
  __chkstk_darwin(v9);
  sub_10016279C();
  sub_10017DF08(&qword_100E86E20);
  sub_100179C0C();
  __chkstk_darwin(v10);
  sub_100109370();
  uint64_t v11 = sub_10017DF08(&qword_100E86E28);
  sub_100179C0C();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  uint64_t v38 = v2;
  sub_1001B1E64(v2, v2[3]);
  sub_10065FBC0();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0) {
    goto LABEL_9;
  }
  uint64_t v39 = v13;
  uint64_t v18 = KeyedDecodingContainer.allKeys.getter();
  uint64_t v19 = *(void *)(v18 + 16);
  if (!v19)
  {
LABEL_8:
    uint64_t v26 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v28 = v27;
    sub_10017DF08(&qword_100E67280);
    void *v28 = &unk_100E1E3E8;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v26 - 8) + 104))(v28, enum case for DecodingError.typeMismatch(_:), v26);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v17, v11);
LABEL_9:
    uint64_t v29 = (uint64_t)v38;
    goto LABEL_10;
  }
  uint64_t v20 = v11;
  uint64_t v21 = *(unsigned __int8 *)(v18 + 32);
  sub_100723214(1, v19, v18, v18 + 32, 0, (2 * v19) | 1);
  uint64_t v23 = v22;
  unint64_t v25 = v24;
  swift_bridgeObjectRelease();
  if (v23 != v25 >> 1)
  {
    uint64_t v11 = v20;
    goto LABEL_8;
  }
  switch(v21)
  {
    case 1:
      sub_10065FD3C();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      goto LABEL_6;
    case 2:
      sub_10065FCF0();
      sub_10019EEF4();
      goto LABEL_6;
    case 3:
      sub_10065FCA4();
      sub_10019EEF4();
      goto LABEL_6;
    case 4:
      sub_10065FC58();
      sub_10019EEF4();
      goto LABEL_16;
    case 5:
      sub_10065FC0C();
      sub_10019EEF4();
      sub_100162F0C();
      v33();
      swift_unknownObjectRelease();
      uint64_t v34 = sub_10017A69C();
      v35(v34);
      uint64_t v29 = (uint64_t)v38;
      break;
    default:
      sub_10065FD88();
      sub_10019EEF4();
LABEL_6:
      sub_10012BF8C();
LABEL_16:
      sub_100162F0C();
      v30();
      swift_unknownObjectRelease();
      uint64_t v31 = sub_10017A69C();
      v32(v31);
      uint64_t v29 = (uint64_t)v38;
      break;
  }
LABEL_10:
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v29);
  sub_100163164();
}

uint64_t sub_10065EBAC(uint64_t a1)
{
  unint64_t v2 = sub_10065FD88();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10065EBE8(uint64_t a1)
{
  unint64_t v2 = sub_10065FD88();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10065EC24(uint64_t a1)
{
  unint64_t v2 = sub_10065FD3C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10065EC60(uint64_t a1)
{
  unint64_t v2 = sub_10065FD3C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10065EC9C(uint64_t a1)
{
  unint64_t v2 = sub_10065FCF0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10065ECD8(uint64_t a1)
{
  unint64_t v2 = sub_10065FCF0();

  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_10065ED14()
{
  return sub_10065E0E0(*v0);
}

uint64_t sub_10065ED1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10065DE2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10065ED44(uint64_t a1)
{
  unint64_t v2 = sub_10065FBC0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10065ED80(uint64_t a1)
{
  unint64_t v2 = sub_10065FBC0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10065EDBC(uint64_t a1)
{
  unint64_t v2 = sub_10065FCA4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10065EDF8(uint64_t a1)
{
  unint64_t v2 = sub_10065FCA4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10065EE34(uint64_t a1)
{
  unint64_t v2 = sub_10065FC58();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10065EE70(uint64_t a1)
{
  unint64_t v2 = sub_10065FC58();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10065EEAC(uint64_t a1)
{
  unint64_t v2 = sub_10065FC0C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10065EEE8(uint64_t a1)
{
  unint64_t v2 = sub_10065FC0C();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_10065EF24(unsigned char *a1@<X8>)
{
  sub_10065E5A8();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_10065EF50()
{
}

uint64_t sub_10065EF6C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6564646968 && a2 == 0xE600000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6E6F697461636F6CLL && a2 == 0xEE006465696E6544;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x8000000100CACFA0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v7) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_10065F0D8(char a1)
{
  if (!a1) {
    return 0x6E6564646968;
  }
  if (a1 == 1) {
    return 0x6E6F697461636F6CLL;
  }
  return 0xD000000000000013;
}

void sub_10065F13C()
{
  sub_10016314C();
  char v27 = v1;
  char v3 = v2;
  sub_10017DF08(&qword_100E86EE0);
  sub_100179C0C();
  uint64_t v25 = v5;
  uint64_t v26 = v4;
  __chkstk_darwin(v4);
  sub_10017EF38(v6, v21);
  sub_10017DF08(&qword_100E86EE8);
  sub_100179C0C();
  uint64_t v22 = v8;
  uint64_t v23 = v7;
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_10017DF08(&qword_100E86EF0);
  sub_100179C0C();
  __chkstk_darwin(v13);
  sub_10016279C();
  uint64_t v14 = sub_10017DF08(&qword_100E86EF8);
  sub_100179C0C();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  sub_100125FF8();
  sub_1001B1E64(v3, v3[3]);
  sub_10065FDD4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  if (!v27)
  {
    sub_10065FEB8();
    sub_100178FC0();
    uint64_t v18 = sub_10012BF8C();
    uint64_t v20 = v12;
LABEL_6:
    v19(v18, v20);
    goto LABEL_7;
  }
  if (v27 != 1)
  {
    sub_10065FE20();
    sub_100178FC0();
    uint64_t v20 = v26;
    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    uint64_t v18 = v24;
    goto LABEL_6;
  }
  sub_10065FE6C();
  sub_100178FC0();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v11, v23);
LABEL_7:
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v0, v14);
  sub_100163164();
}

void sub_10065F394()
{
  sub_10016314C();
  char v3 = v2;
  sub_10017DF08(&qword_100E86EA0);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_100109314();
  sub_10017DF08(&qword_100E86EA8);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_10012B938();
  sub_10017DF08(&qword_100E86EB0);
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_100125FF8();
  uint64_t v7 = sub_10017DF08(&qword_100E86EB8);
  sub_100179C0C();
  uint64_t v28 = v8;
  __chkstk_darwin(v9);
  sub_100109370();
  sub_1001B1E64(v3, v3[3]);
  sub_10065FDD4();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0) {
    goto LABEL_11;
  }
  uint64_t v29 = (uint64_t)v3;
  uint64_t v10 = v1;
  uint64_t v11 = KeyedDecodingContainer.allKeys.getter();
  uint64_t v12 = *(void *)(v11 + 16);
  if (!v12)
  {
LABEL_10:
    uint64_t v19 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v21 = v20;
    sub_10017DF08(&qword_100E67280);
    *uint64_t v21 = &unk_100E1E500;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v19 - 8) + 104))(v21, enum case for DecodingError.typeMismatch(_:), v19);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v10, v7);
    char v3 = (void *)v29;
LABEL_11:
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v3);
    goto LABEL_12;
  }
  uint64_t v13 = v1;
  int v14 = *(unsigned __int8 *)(v11 + 32);
  sub_100723214(1, v12, v11, v11 + 32, 0, (2 * v12) | 1);
  uint64_t v16 = v15;
  unint64_t v18 = v17;
  swift_bridgeObjectRelease();
  if (v16 != v18 >> 1)
  {
    uint64_t v10 = v13;
    goto LABEL_10;
  }
  if (v14)
  {
    if (v14 == 1)
    {
      sub_10065FE6C();
      sub_10018519C();
      sub_10012BF8C();
    }
    else
    {
      sub_10065FE20();
      sub_10018519C();
    }
    sub_100162F0C();
    v23(v22);
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v13, v7);
  }
  else
  {
    sub_10065FEB8();
    sub_10018519C();
    sub_10012BF8C();
    sub_100162F0C();
    v25(v24);
    swift_unknownObjectRelease();
    sub_100162F0C();
    v27(v26);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v29);
LABEL_12:
  sub_100163164();
}

uint64_t sub_10065F828()
{
  return sub_10065F0D8(*v0);
}

uint64_t sub_10065F830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10065EF6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10065F858(uint64_t a1)
{
  unint64_t v2 = sub_10065FDD4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10065F894(uint64_t a1)
{
  unint64_t v2 = sub_10065FDD4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10065F8D0(uint64_t a1)
{
  unint64_t v2 = sub_10065FEB8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10065F90C(uint64_t a1)
{
  unint64_t v2 = sub_10065FEB8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10065F948(uint64_t a1)
{
  unint64_t v2 = sub_10065FE6C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10065F984(uint64_t a1)
{
  unint64_t v2 = sub_10065FE6C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10065F9C0(uint64_t a1)
{
  unint64_t v2 = sub_10065FE20();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10065F9FC(uint64_t a1)
{
  unint64_t v2 = sub_10065FE20();

  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_10065FA3C()
{
  unint64_t result = qword_100E86DC8;
  if (!qword_100E86DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86DC8);
  }
  return result;
}

void sub_10065FA88(unsigned char *a1@<X8>)
{
  sub_10065F394();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_10065FAB4()
{
}

unint64_t sub_10065FAD4()
{
  unint64_t result = qword_100E86DD0;
  if (!qword_100E86DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86DD0);
  }
  return result;
}

unint64_t sub_10065FB20()
{
  unint64_t result = qword_100E86DE8;
  if (!qword_100E86DE8)
  {
    sub_10018C6DC(&qword_100E86DE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86DE8);
  }
  return result;
}

unint64_t sub_10065FB74()
{
  unint64_t result = qword_100E86DF0;
  if (!qword_100E86DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86DF0);
  }
  return result;
}

unint64_t sub_10065FBC0()
{
  unint64_t result = qword_100E86E30;
  if (!qword_100E86E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86E30);
  }
  return result;
}

unint64_t sub_10065FC0C()
{
  unint64_t result = qword_100E86E38;
  if (!qword_100E86E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86E38);
  }
  return result;
}

unint64_t sub_10065FC58()
{
  unint64_t result = qword_100E86E40;
  if (!qword_100E86E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86E40);
  }
  return result;
}

unint64_t sub_10065FCA4()
{
  unint64_t result = qword_100E86E48;
  if (!qword_100E86E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86E48);
  }
  return result;
}

unint64_t sub_10065FCF0()
{
  unint64_t result = qword_100E86E50;
  if (!qword_100E86E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86E50);
  }
  return result;
}

unint64_t sub_10065FD3C()
{
  unint64_t result = qword_100E86E58;
  if (!qword_100E86E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86E58);
  }
  return result;
}

unint64_t sub_10065FD88()
{
  unint64_t result = qword_100E86E60;
  if (!qword_100E86E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86E60);
  }
  return result;
}

unint64_t sub_10065FDD4()
{
  unint64_t result = qword_100E86EC0;
  if (!qword_100E86EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86EC0);
  }
  return result;
}

unint64_t sub_10065FE20()
{
  unint64_t result = qword_100E86EC8;
  if (!qword_100E86EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86EC8);
  }
  return result;
}

unint64_t sub_10065FE6C()
{
  unint64_t result = qword_100E86ED0;
  if (!qword_100E86ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86ED0);
  }
  return result;
}

unint64_t sub_10065FEB8()
{
  unint64_t result = qword_100E86ED8;
  if (!qword_100E86ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86ED8);
  }
  return result;
}

unint64_t sub_10065FF04()
{
  unint64_t result = qword_100E86F08;
  if (!qword_100E86F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86F08);
  }
  return result;
}

unint64_t sub_10065FF50()
{
  unint64_t result = qword_100E86F10;
  if (!qword_100E86F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86F10);
  }
  return result;
}

unint64_t sub_10065FF9C()
{
  unint64_t result = qword_100E86F18;
  if (!qword_100E86F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86F18);
  }
  return result;
}

unint64_t sub_10065FFE8()
{
  unint64_t result = qword_100E86F28;
  if (!qword_100E86F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86F28);
  }
  return result;
}

unint64_t sub_100660034()
{
  unint64_t result = qword_100E86F30;
  if (!qword_100E86F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86F30);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NotificationsOptInViewModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10066014CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationsOptInViewModel.CodingKeys()
{
  return &type metadata for NotificationsOptInViewModel.CodingKeys;
}

unsigned char *_s7Weather28NotificationsOptInAlertStateO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100660250);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationsOptInAlertState.CodingKeys()
{
  return &type metadata for NotificationsOptInAlertState.CodingKeys;
}

ValueMetadata *type metadata accessor for NotificationsOptInAlertState.HiddenCodingKeys()
{
  return &type metadata for NotificationsOptInAlertState.HiddenCodingKeys;
}

ValueMetadata *type metadata accessor for NotificationsOptInAlertState.LocationDeniedCodingKeys()
{
  return &type metadata for NotificationsOptInAlertState.LocationDeniedCodingKeys;
}

ValueMetadata *type metadata accessor for NotificationsOptInAlertState.NotificationsDeniedCodingKeys()
{
  return &type metadata for NotificationsOptInAlertState.NotificationsDeniedCodingKeys;
}

unsigned char *_s7Weather27NotificationsOptInFlowStateO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100660384);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationsOptInFlowState.CodingKeys()
{
  return &type metadata for NotificationsOptInFlowState.CodingKeys;
}

ValueMetadata *type metadata accessor for NotificationsOptInFlowState.AskLocationCodingKeys()
{
  return &type metadata for NotificationsOptInFlowState.AskLocationCodingKeys;
}

ValueMetadata *type metadata accessor for NotificationsOptInFlowState.AskNotificationsCodingKeys()
{
  return &type metadata for NotificationsOptInFlowState.AskNotificationsCodingKeys;
}

ValueMetadata *type metadata accessor for NotificationsOptInFlowState.AskSevereCodingKeys()
{
  return &type metadata for NotificationsOptInFlowState.AskSevereCodingKeys;
}

ValueMetadata *type metadata accessor for NotificationsOptInFlowState.CompleteCodingKeys()
{
  return &type metadata for NotificationsOptInFlowState.CompleteCodingKeys;
}

ValueMetadata *type metadata accessor for NotificationsOptInFlowState.LocationDeniedCodingKeys()
{
  return &type metadata for NotificationsOptInFlowState.LocationDeniedCodingKeys;
}

ValueMetadata *type metadata accessor for NotificationsOptInFlowState.NotificationsDeniedCodingKeys()
{
  return &type metadata for NotificationsOptInFlowState.NotificationsDeniedCodingKeys;
}

unint64_t sub_100660420()
{
  unint64_t result = qword_100E86F38;
  if (!qword_100E86F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86F38);
  }
  return result;
}

unint64_t sub_100660470()
{
  unint64_t result = qword_100E86F40;
  if (!qword_100E86F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86F40);
  }
  return result;
}

unint64_t sub_1006604C0()
{
  unint64_t result = qword_100E86F48;
  if (!qword_100E86F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86F48);
  }
  return result;
}

unint64_t sub_100660510()
{
  unint64_t result = qword_100E86F50;
  if (!qword_100E86F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86F50);
  }
  return result;
}

unint64_t sub_100660560()
{
  unint64_t result = qword_100E86F58;
  if (!qword_100E86F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86F58);
  }
  return result;
}

unint64_t sub_1006605B0()
{
  unint64_t result = qword_100E86F60;
  if (!qword_100E86F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86F60);
  }
  return result;
}

unint64_t sub_100660600()
{
  unint64_t result = qword_100E86F68;
  if (!qword_100E86F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86F68);
  }
  return result;
}

unint64_t sub_100660650()
{
  unint64_t result = qword_100E86F70;
  if (!qword_100E86F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86F70);
  }
  return result;
}

unint64_t sub_1006606A0()
{
  unint64_t result = qword_100E86F78;
  if (!qword_100E86F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86F78);
  }
  return result;
}

unint64_t sub_1006606F0()
{
  unint64_t result = qword_100E86F80;
  if (!qword_100E86F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86F80);
  }
  return result;
}

unint64_t sub_100660740()
{
  unint64_t result = qword_100E86F88;
  if (!qword_100E86F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86F88);
  }
  return result;
}

unint64_t sub_100660790()
{
  unint64_t result = qword_100E86F90;
  if (!qword_100E86F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86F90);
  }
  return result;
}

unint64_t sub_1006607E0()
{
  unint64_t result = qword_100E86F98;
  if (!qword_100E86F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86F98);
  }
  return result;
}

unint64_t sub_100660830()
{
  unint64_t result = qword_100E86FA0;
  if (!qword_100E86FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86FA0);
  }
  return result;
}

unint64_t sub_100660880()
{
  unint64_t result = qword_100E86FA8;
  if (!qword_100E86FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86FA8);
  }
  return result;
}

unint64_t sub_1006608D0()
{
  unint64_t result = qword_100E86FB0;
  if (!qword_100E86FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86FB0);
  }
  return result;
}

unint64_t sub_100660920()
{
  unint64_t result = qword_100E86FB8;
  if (!qword_100E86FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86FB8);
  }
  return result;
}

unint64_t sub_100660970()
{
  unint64_t result = qword_100E86FC0;
  if (!qword_100E86FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86FC0);
  }
  return result;
}

unint64_t sub_1006609C0()
{
  unint64_t result = qword_100E86FC8;
  if (!qword_100E86FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86FC8);
  }
  return result;
}

unint64_t sub_100660A10()
{
  unint64_t result = qword_100E86FD0;
  if (!qword_100E86FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86FD0);
  }
  return result;
}

unint64_t sub_100660A60()
{
  unint64_t result = qword_100E86FD8;
  if (!qword_100E86FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86FD8);
  }
  return result;
}

unint64_t sub_100660AB0()
{
  unint64_t result = qword_100E86FE0;
  if (!qword_100E86FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86FE0);
  }
  return result;
}

unint64_t sub_100660B00()
{
  unint64_t result = qword_100E86FE8;
  if (!qword_100E86FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86FE8);
  }
  return result;
}

unint64_t sub_100660B50()
{
  unint64_t result = qword_100E86FF0;
  if (!qword_100E86FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86FF0);
  }
  return result;
}

unint64_t sub_100660BA0()
{
  unint64_t result = qword_100E86FF8;
  if (!qword_100E86FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E86FF8);
  }
  return result;
}

unint64_t sub_100660BF0()
{
  unint64_t result = qword_100E87000;
  if (!qword_100E87000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E87000);
  }
  return result;
}

unint64_t sub_100660C40()
{
  unint64_t result = qword_100E87008;
  if (!qword_100E87008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E87008);
  }
  return result;
}

uint64_t sub_100660C8C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E870D0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v5 = v21;
  if (!v21)
  {
    __break(1u);
    goto LABEL_8;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64998);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v6 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E870E0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v7 = v19;
  if (!v19)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v13 = v20;
  uint64_t v14 = v22;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E870B8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v8 = v17;
  if (!v17)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v9 = v18;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E870F8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v16)
  {
    uint64_t v10 = sub_1000DF0C4((uint64_t)v15, v16);
    __chkstk_darwin(v10);
    (*(void (**)(void))(v11 + 16))();
    uint64_t v12 = sub_100662548(v5, v14, v6, v7, v13, v8, v9);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v15);
    uint64_t result = type metadata accessor for InteractiveMapModule();
    a2[3] = result;
    a2[4] = &off_100E316E8;
    *a2 = v12;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100660EF8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v5 = v25;
  if (v25)
  {
    uint64_t v6 = v26;
    uint64_t v20 = v27;
    uint64_t v21 = v28;
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E870F0);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v24)
    {
      uint64_t v7 = sub_1000DF0C4((uint64_t)v23, v24);
      __chkstk_darwin(v7);
      uint64_t v9 = (uint64_t *)((char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v10 + 16))(v9);
      uint64_t v11 = *v9;
      uint64_t v12 = type metadata accessor for ListViewModelFactory();
      v22[3] = v12;
      v22[4] = &off_100E1D558;
      v22[0] = v11;
      uint64_t v13 = type metadata accessor for LocationRowViewModelProvider();
      uint64_t v14 = (void *)swift_allocObject();
      uint64_t v15 = sub_1000DF0C4((uint64_t)v22, v12);
      __chkstk_darwin(v15);
      uint64_t v17 = (uint64_t *)((char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v18 + 16))(v17);
      uint64_t v19 = *v17;
      v14[9] = v12;
      v14[10] = &off_100E1D558;
      v14[2] = v5;
      v14[3] = v6;
      v14[4] = v20;
      v14[5] = v21;
      v14[6] = v19;
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v22);
      uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v23);
      a2[3] = v13;
      a2[4] = &off_100E1FB00;
      *a2 = v14;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_10066117C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for WeatherMapZoomController();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 24) = 0;
  swift_unknownObjectWeakInit();
  unint64_t result = sub_100662AE8();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1006611CC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for MapPerformanceTestConditionsProvider();
  swift_allocObject();
  uint64_t result = sub_1009202E4();
  *a1 = result;
  a1[1] = (uint64_t)&off_100E2E308;
  return result;
}

uint64_t sub_100661214()
{
  uint64_t v0 = type metadata accessor for Scope();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  ProxyContainer.public.getter();
  type metadata accessor for Tracker();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Scope.containerSingleton(_:), v0);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_10017DF08(&qword_100E870C0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E870C8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E870D0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E64998);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E870D8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E870E0);
  RegistrationContainer.register<A>(_:name:factory:)();
  return swift_release();
}

uint64_t sub_1006614C4(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for Tracker();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    uint64_t v2 = Tracker.chain(name:identifier:)();
    swift_release();
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100661544@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v5 == 2)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = type metadata accessor for InteractiveMapInputFactory();
    uint64_t result = swift_allocObject();
    *(unsigned char *)(result + 16) = v5 & 1;
    a2[3] = v4;
    a2[4] = (uint64_t)&off_100E13440;
    *a2 = result;
  }
  return result;
}

void sub_1006615E0(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for Tracker();
  if (dispatch thunk of ResolverType.resolve<A>(_:name:)())
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E6FC60);
    dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v4)
    {
      a2[3] = (uint64_t)&type metadata for InteractiveMapTracker;
      a2[4] = (uint64_t)&off_100E265D8;
      *a2 = swift_allocObject();
      sub_10074BAAC();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1006616E4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v5 = v32;
  if (!v32)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v6 = v33;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E870C8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v31)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1001B1E64(a1, a1[3]);
  uint64_t v7 = type metadata accessor for WeatherDataUpdater();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v29[3] = v7;
  v29[4] = &off_100E34EB0;
  v29[0] = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7C100);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v8 = v27;
  if (!v27)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v23 = v28;
  uint64_t v24 = a2;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7CD18);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v26)
  {
    uint64_t v9 = sub_1000DF0C4((uint64_t)v30, v31);
    __chkstk_darwin(v9);
    uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v12 + 16))(v11);
    uint64_t v13 = sub_1000DF0C4((uint64_t)v29, v7);
    __chkstk_darwin(v13);
    uint64_t v15 = (uint64_t *)((char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v16 + 16))(v15);
    uint64_t v17 = sub_1000DF0C4((uint64_t)v25, v26);
    __chkstk_darwin(v17);
    uint64_t v19 = (uint64_t **)((char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t **))(v20 + 16))(v19);
    uint64_t v21 = sub_100662794(v5, v6, (uint64_t)v11, *v15, v8, v23, *v19);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v25);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v29);
    uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v30);
    uint64_t v22 = v24;
    void *v24 = v21;
    v22[1] = &off_100E39D80;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100661AAC(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v3 = v18;
  if (!v18)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = v20;
  uint64_t v4 = v21;
  uint64_t v6 = v19;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E870C0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v17)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v7 = *sub_1001B1E64(v16, v17);
  uint64_t v14 = type metadata accessor for InteractiveMapInputFactory();
  uint64_t v15 = &off_100E13440;
  v13[0] = v7;
  sub_10020D948((uint64_t)v13, (uint64_t)v12);
  uint64_t v8 = swift_allocObject();
  sub_1001262E4(v12, v8 + 16);
  swift_retain();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v16);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_10066233C;
  *(void *)(v9 + 24) = v8;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E870D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v17)
  {
    uint64_t v10 = *sub_1001B1E64(v16, v17);
    uint64_t v14 = type metadata accessor for InteractiveMapViewModelFactory();
    uint64_t v15 = &off_100E175A0;
    v13[0] = v10;
    sub_10020D948((uint64_t)v13, (uint64_t)v12);
    uint64_t v11 = swift_allocObject();
    sub_1001262E4(v12, v11 + 16);
    swift_retain();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v16);
    sub_10017DF08(&qword_100E64998);
    swift_allocObject();
    return sub_10025A784(v3, v6, v5, v4, sub_10025969C, 0, sub_100137F50, v9, sub_10066237C, v11);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100661D30@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_1003AE7A0(a1, a3);
}

uint64_t sub_100661D7C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100477F1C(a1, a3);
}

uint64_t sub_100661DC8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for InteractiveMapViewModelFactory();
  uint64_t result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_100E175A0;
  *a1 = result;
  return result;
}

uint64_t sub_100661E10@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v46)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7C0E8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v45)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v33 = v47;
  uint64_t v34 = v48;
  uint64_t v35 = v49;
  uint64_t v36 = v46;
  uint64_t v37 = a2;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7C0F0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v43)
  {
    uint64_t v5 = sub_1000DF0C4((uint64_t)v44, v45);
    v32[1] = v32;
    __chkstk_darwin(v5);
    uint64_t v7 = (void *)((char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v8 + 16))(v7);
    uint64_t v9 = sub_1000DF0C4((uint64_t)v42, v43);
    v32[0] = v32;
    __chkstk_darwin(v9);
    uint64_t v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v12 + 16))(v11);
    uint64_t v13 = *v7;
    uint64_t v14 = type metadata accessor for LocationFinder();
    v41[3] = v14;
    v41[4] = &off_100E1F478;
    v41[0] = v13;
    uint64_t v39 = &type metadata for AddLocationContextHelper;
    uint64_t v40 = &off_100E1A6F8;
    uint64_t v15 = swift_allocObject();
    v38[0] = v15;
    long long v16 = *((_OWORD *)v11 + 1);
    *(_OWORD *)(v15 + 16) = *(_OWORD *)v11;
    *(_OWORD *)(v15 + 32) = v16;
    *(void *)(v15 + 48) = *((void *)v11 + 4);
    type metadata accessor for InteractiveMapLocationReader();
    uint64_t v17 = (void *)swift_allocObject();
    uint64_t v18 = sub_1000DF0C4((uint64_t)v41, v14);
    __chkstk_darwin(v18);
    uint64_t v20 = (void *)((char *)v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v21 + 16))(v20);
    uint64_t v22 = sub_1000DF0C4((uint64_t)v38, (uint64_t)v39);
    __chkstk_darwin(v22);
    uint64_t v24 = (char *)v32 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v25 + 16))(v24);
    uint64_t v26 = *v20;
    v17[9] = v14;
    v17[10] = &off_100E1F478;
    v17[6] = v26;
    v17[14] = &type metadata for AddLocationContextHelper;
    v17[15] = &off_100E1A6F8;
    uint64_t v27 = swift_allocObject();
    v17[11] = v27;
    long long v28 = *((_OWORD *)v24 + 1);
    *(_OWORD *)(v27 + 16) = *(_OWORD *)v24;
    *(_OWORD *)(v27 + 32) = v28;
    *(void *)(v27 + 48) = *((void *)v24 + 4);
    uint64_t v29 = v33;
    v17[2] = v36;
    v17[3] = v29;
    uint64_t v30 = v35;
    v17[4] = v34;
    v17[5] = v30;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v38);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v41);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v42);
    uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v44);
    uint64_t v31 = v37;
    *uint64_t v37 = v17;
    v31[1] = &off_100E358C0;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1006622FC()
{
  return sub_100661214();
}

uint64_t sub_100662304()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_10066233C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_100661D30(a1, (void *)(v2 + 16), a2);
}

uint64_t sub_100662344()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10066237C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100661D7C(a1, (void *)(v2 + 16), a2);
}

void *sub_100662384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  uint64_t v24 = a1;
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  long long v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v28 = &type metadata for ContentStatusBannerViewFactory;
  uint64_t v29 = &off_100E38A68;
  static Logger.map.getter();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = a4;
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Initializing fullscreen map module", v19, 2u);
    a4 = v23;
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v20 = v25;
  a8[2] = v24;
  a8[3] = v20;
  a8[4] = v26;
  a8[5] = a4;
  a8[6] = a5;
  a8[7] = a6;
  a8[8] = a7;
  sub_1001262E4(&v27, (uint64_t)(a8 + 9));
  return a8;
}

void *sub_100662548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v20 = &type metadata for ContentStatusBannerViewFactory;
  uint64_t v21 = &off_100E38A68;
  type metadata accessor for InteractiveMapModule();
  uint64_t v14 = (void *)swift_allocObject();
  uint64_t v15 = sub_1000DF0C4((uint64_t)v19, (uint64_t)&type metadata for ContentStatusBannerViewFactory);
  __chkstk_darwin(v15);
  (*(void (**)(void))(v16 + 16))();
  uint64_t v17 = sub_100662384(a1, a2, a3, a4, a5, a6, a7, v14);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v19);
  return v17;
}

void *sub_100662698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  a8[7] = &type metadata for InteractiveMapTracker;
  a8[8] = &off_100E265D8;
  uint64_t v16 = swift_allocObject();
  a8[4] = v16;
  long long v17 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v16 + 32) = v17;
  *(_OWORD *)(v16 + 48) = *(_OWORD *)(a3 + 32);
  *(unsigned char *)(v16 + 64) = *(unsigned char *)(a3 + 48);
  a8[12] = type metadata accessor for WeatherDataUpdater();
  a8[13] = &off_100E34EB0;
  a8[9] = a4;
  a8[19] = type metadata accessor for NetworkActivityManager();
  a8[20] = &off_100E175C0;
  a8[16] = a7;
  uint64_t v18 = (uint64_t)a8 + OBJC_IVAR____TtC7Weather24InteractiveMapInteractor_viewData;
  uint64_t v19 = type metadata accessor for ViewData();
  _s7Weather24LocationCompositionStateOwst_0(v18, 1, 1, v19);
  a8[2] = a1;
  a8[3] = a2;
  a8[14] = a5;
  a8[15] = a6;
  return a8;
}

void *sub_100662794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v14 = *a7;
  void v38[3] = &type metadata for InteractiveMapTracker;
  v38[4] = &off_100E265D8;
  uint64_t v15 = swift_allocObject();
  v38[0] = v15;
  long long v16 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v15 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v15 + 32) = v16;
  *(_OWORD *)(v15 + 48) = *(_OWORD *)(a3 + 32);
  *(unsigned char *)(v15 + 64) = *(unsigned char *)(a3 + 48);
  uint64_t v17 = type metadata accessor for WeatherDataUpdater();
  v37[3] = v17;
  v37[4] = &off_100E34EB0;
  v37[0] = a4;
  uint64_t v35 = v14;
  uint64_t v36 = &off_100E175C0;
  v34[0] = a7;
  type metadata accessor for InteractiveMapInteractor();
  uint64_t v18 = (void *)swift_allocObject();
  uint64_t v19 = sub_1000DF0C4((uint64_t)v38, (uint64_t)&type metadata for InteractiveMapTracker);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v34[-1] - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v22 + 16))(v21);
  uint64_t v23 = sub_1000DF0C4((uint64_t)v37, v17);
  __chkstk_darwin(v23);
  uint64_t v25 = (void *)((char *)&v34[-1] - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v26 + 16))(v25);
  uint64_t v27 = sub_1000DF0C4((uint64_t)v34, v35);
  __chkstk_darwin(v27);
  uint64_t v29 = (void *)((char *)&v34[-1] - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v30 + 16))(v29);
  uint64_t v31 = sub_100662698(a1, a2, (uint64_t)v21, *v25, a5, a6, *v29, v18);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v34);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v37);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v38);
  return v31;
}

uint64_t sub_100662AA8()
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 24);

  return swift_deallocObject();
}

unint64_t sub_100662AE8()
{
  unint64_t result = qword_100E870E8;
  if (!qword_100E870E8)
  {
    type metadata accessor for WeatherMapZoomController();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E870E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for Swipe()
{
  return &type metadata for Swipe;
}

uint64_t sub_100662B50()
{
  sub_1000A9DE8();
  v0[10] = v1;
  v0[11] = v2;
  v0[12] = type metadata accessor for MainActor();
  v0[13] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[14] = v4;
  v0[15] = v3;
  return _swift_task_switch(sub_100662BE8, v4, v3);
}

uint64_t sub_100662BE8()
{
  if (qword_100E62870 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1002102B0(v1, (uint64_t)qword_100F52058);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Performing Swipe instruction", v4, 2u);
    swift_slowDealloc();
  }

  uint64_t v5 = static MainActor.shared.getter();
  *(void *)(v0 + 128) = v5;
  if (v5)
  {
    swift_getObjectType();
    uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  return _swift_task_switch(sub_100662D38, v6, v8);
}

uint64_t sub_100662D38()
{
  uint64_t v1 = (uint64_t (*)(uint64_t, double, double, double, double))v0[10];
  v0[2] = v0;
  v0[3] = sub_1003849A0;
  uint64_t v2 = swift_continuation_init();
  sub_100662DDC(v2, v1);
  return _swift_continuation_await(v0 + 2);
}

void sub_100662DDC(uint64_t a1, uint64_t (*a2)(uint64_t, double, double, double, double))
{
  id v4 = [self sharedApplication];
  UIApplication.expectedWindow.getter();

  sub_1001B1E64(v46, v47);
  dispatch thunk of WindowType.bounds.getter();
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;
  uint64_t v13 = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v46);
  uint64_t v14 = a2(v13, v6, v8, v10, v12);
  uint64_t v15 = *(void *)(v14 + 16);
  if (v15)
  {
    long long v16 = self;
    uint64_t v17 = v14 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_10020D948(v17, (uint64_t)v46);
      uint64_t v18 = v47;
      uint64_t v19 = v48;
      sub_1001B1E64(v46, v47);
      double v20 = (*(double (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19);
      double v22 = v21;
      double v24 = v23;
      double v26 = v25;
      uint64_t v27 = v47;
      uint64_t v28 = v48;
      sub_1001B1E64(v46, v47);
      uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 24))(v27, v28);
      uint64_t v30 = v47;
      uint64_t v31 = v48;
      sub_1001B1E64(v46, v47);
      char v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v30, v31);
      id v33 = [v16 currentDevice];
      id v34 = [v33 userInterfaceIdiom];

      uint64_t v35 = 3;
      if (v32) {
        uint64_t v35 = 4;
      }
      uint64_t v36 = 5;
      if ((v32 & 1) == 0) {
        uint64_t v36 = 6;
      }
      if (v34 == (id)1) {
        uint64_t v37 = v35;
      }
      else {
        uint64_t v37 = v36;
      }
      id v38 = objc_allocWithZone((Class)RPTDirectionalSwipeTestParameters);
      id v39 = sub_1008FB790(v20, v22, v24, v26, 0, 0, v29, v37, 0, 0);
      uint64_t v40 = v47;
      uint64_t v41 = v48;
      sub_1001B1E64(v46, v47);
      id v42 = [objc_allocWithZone((Class)NSNumber) initWithDouble:((*(double (**)(uint64_t, uint64_t))(v41 + 32))(v40, v41));
      [v39 setSwipeSpeedFactor:v42];

      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v46);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      v17 += 40;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = a1;
  id v44 = objc_allocWithZone((Class)type metadata accessor for GroupTestParameters());
  id v45 = sub_10040D650((uint64_t)_swiftEmptyArrayStorage, (uint64_t)sub_100663338, v43);
  [self runTestWithParameters:v45];
}

uint64_t sub_1006631A0(uint64_t a1)
{
  if (qword_100E62870 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1002102B0(v2, (uint64_t)qword_100F52058);
  os_log_type_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    double v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)double v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Performed Swipe instruction", v5, 2u);
    swift_slowDealloc();
  }

  return _swift_continuation_throwingResume(a1);
}

uint64_t sub_100663290()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100352D7C;
  return sub_100662B50();
}

uint64_t sub_100663328()
{
  return swift_deallocObject();
}

uint64_t sub_100663338()
{
  return sub_1006631A0(*(void *)(v0 + 16));
}

uint64_t sub_100663340@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10017DF08((uint64_t *)&unk_100EAA530);
  __chkstk_darwin(v3 - 8);
  double v5 = (uint64_t *)((char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10020D948(v1 + 16, (uint64_t)v13);
  uint64_t v6 = *(void *)(v1 + 64);
  uint64_t v7 = *(void *)(v1 + 72);
  sub_10020D948(v1 + 80, (uint64_t)v12);
  *double v5 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BC8);
  swift_storeEnumTagMultiPayload();
  uint64_t KeyPath = swift_getKeyPath();
  type metadata accessor for ObservableResolver();
  sub_1006636C4();
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v9 = EnvironmentObject.init()();
  return sub_1003981BC((uint64_t)v5, KeyPath, 0, v9, v10, (uint64_t)sub_100391508, 0, a1, v13, v6, v7, v12);
}

uint64_t sub_1006634AC()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  swift_release();
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 80);
  return v0;
}

uint64_t sub_1006634E4()
{
  sub_1006634AC();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LocationPreviewModule()
{
  return self;
}

void *sub_10066353C(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v24 = a6;
  uint64_t v25 = a8;
  uint64_t v14 = sub_100170694(v23);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(v14, a1, a6);
  uint64_t v15 = (void *)swift_allocObject();
  uint64_t v16 = sub_1000DF0C4((uint64_t)v23, v24);
  __chkstk_darwin(v16);
  uint64_t v18 = (uint64_t *)((char *)&v23[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v19 + 16))(v18);
  uint64_t v20 = *v18;
  v15[5] = type metadata accessor for LocationPreviewInteractor();
  v15[6] = &off_100E3BA68;
  v15[2] = v20;
  v15[7] = a2;
  v15[8] = a3;
  v15[9] = a9;
  sub_1001262E4(a4, (uint64_t)(v15 + 10));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v23);
  return v15;
}

unint64_t sub_1006636C4()
{
  unint64_t result = qword_100E70FD0;
  if (!qword_100E70FD0)
  {
    type metadata accessor for ObservableResolver();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70FD0);
  }
  return result;
}

void *sub_100663714(char a1, char a2, uint64_t a3)
{
  uint64_t v95 = a3;
  uint64_t v6 = type metadata accessor for TipPriorityQueue.GridEntry();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100162EF8();
  uint64_t v94 = v8;
  __chkstk_darwin(v9);
  uint64_t v93 = (uint64_t)&v72 - v10;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v72 - v12;
  uint64_t v14 = sub_10017DF08(&qword_100E64E80);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_10008B8C0();
  uint64_t v16 = type metadata accessor for LocationComponentViewModel();
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  sub_10016278C();
  uint64_t v20 = v18 - v19;
  __chkstk_darwin(v21);
  double v23 = (char *)&v72 - v22;
  uint64_t v24 = sub_10017DF08(&qword_100E6CCD8);
  uint64_t v25 = sub_100109308(v24);
  __chkstk_darwin(v25);
  sub_100162EF8();
  uint64_t v92 = v26;
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v72 - v28;
  __chkstk_darwin(v30);
  char v32 = (char *)&v72 - v31;
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)&v72 - v34;
  if (a1)
  {
    if (a1 == 1)
    {
      if (a2)
      {
        uint64_t v36 = &qword_100E87558;
        goto LABEL_11;
      }
    }
    else if (a2)
    {
      uint64_t v36 = &qword_100E878E8;
      goto LABEL_11;
    }
    uint64_t v36 = &qword_100E87720;
  }
  else if (a2)
  {
    uint64_t v36 = &qword_100E871C8;
  }
  else
  {
    uint64_t v36 = &qword_100E87390;
  }
LABEL_11:
  char v37 = *((unsigned char *)v36 + 224);
  uint64_t v38 = *v36;
  uint64_t v78 = v36[1];
  uint64_t v79 = v38;
  uint64_t v77 = v36[2];
  uint64_t v76 = v36[3];
  uint64_t v39 = v36[8];
  uint64_t v82 = v36[9];
  uint64_t v83 = v39;
  uint64_t v40 = v36[10];
  uint64_t v80 = v36[11];
  uint64_t v81 = v40;
  uint64_t v75 = v36[24];
  uint64_t v74 = v36[25];
  uint64_t v73 = v36[26];
  uint64_t v72 = v36[27];
  uint64_t v41 = v36[45];
  uint64_t v86 = v36[46];
  uint64_t v87 = v41;
  uint64_t v42 = v36[47];
  uint64_t v84 = v36[48];
  uint64_t v85 = v42;
  uint64_t v43 = v36[53];
  uint64_t v90 = v36[54];
  uint64_t v91 = v43;
  uint64_t v44 = v95 + OBJC_IVAR____TtCV7Weather14DefaultContent8_Storage_map;
  uint64_t v46 = v36[55];
  uint64_t v45 = v36[56];
  uint64_t v88 = v46;
  uint64_t v89 = v45;
  swift_beginAccess();
  sub_10006DF38(v44, v3, &qword_100E64E80);
  uint64_t v47 = type metadata accessor for LocationComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0(v3, 1, v47) == 1)
  {
    sub_1001781AC(v3, &qword_100E64E80);
LABEL_16:
    uint64_t v48 = 1;
    goto LABEL_17;
  }
  sub_10031F6A8(v3 + *(int *)(v47 + 20), v20, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  sub_10031F75C(v3, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_10031F6FC(v20, (uint64_t)v23, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  if (v37)
  {
    sub_10031F75C((uint64_t)v23, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    goto LABEL_16;
  }
  sub_10031F6FC((uint64_t)v23, (uint64_t)v32, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v48 = 0;
  uint64_t v49 = &v32[*(int *)(v6 + 20)];
  uint64_t v50 = v74;
  *(void *)uint64_t v49 = v75;
  *((void *)v49 + 1) = v50;
  uint64_t v51 = v72;
  *((void *)v49 + 2) = v73;
  *((void *)v49 + 3) = v51;
LABEL_17:
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, v48, 1, v6);
  sub_10031F640((uint64_t)v32, (uint64_t)v35);
  sub_10031F6A8(v95 + *(int *)(v47 + 20) + OBJC_IVAR____TtCV7Weather14DefaultContent8_Storage_airQuality, (uint64_t)v29, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v52 = &v29[*(int *)(v6 + 20)];
  uint64_t v53 = v78;
  *(void *)uint64_t v52 = v79;
  *((void *)v52 + 1) = v53;
  uint64_t v54 = v76;
  *((void *)v52 + 2) = v77;
  *((void *)v52 + 3) = v54;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v6);
  uint64_t v55 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  sub_10031F6A8(v55, (uint64_t)v13, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  BOOL v56 = &v13[*(int *)(v6 + 20)];
  uint64_t v57 = v82;
  *(void *)BOOL v56 = v83;
  *((void *)v56 + 1) = v57;
  uint64_t v58 = v80;
  *((void *)v56 + 2) = v81;
  *((void *)v56 + 3) = v58;
  uint64_t v59 = v92;
  sub_10006DF38((uint64_t)v35, v92, &qword_100E6CCD8);
  uint64_t v60 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  uint64_t v61 = v93;
  sub_10031F6A8(v60, v93, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v62 = (uint64_t *)(v61 + *(int *)(v6 + 20));
  uint64_t v63 = v86;
  *uint64_t v62 = v87;
  v62[1] = v63;
  uint64_t v64 = v84;
  v62[2] = v85;
  v62[3] = v64;
  uint64_t v65 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  uint64_t v66 = v94;
  sub_10031F6A8(v65, v94, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v67 = (uint64_t *)(v66 + *(int *)(v6 + 20));
  uint64_t v68 = v90;
  *uint64_t v67 = v91;
  v67[1] = v68;
  uint64_t v69 = v89;
  v67[2] = v88;
  v67[3] = v69;
  uint64_t v70 = sub_100AD6D18((uint64_t)v29, (uint64_t)v13, v59, v61, v66);
  sub_1001781AC((uint64_t)v35, &qword_100E6CCD8);
  return v70;
}

uint64_t sub_100663CE8(uint64_t a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E64E80);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v108 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  sub_10008B8C0();
  uint64_t v9 = a1;
  uint64_t v10 = a1 + OBJC_IVAR____TtCV7Weather14DefaultContent8_Storage_map;
  swift_beginAccess();
  sub_10006DF38(v10, (uint64_t)v6, &qword_100E64E80);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7);
  uint64_t v113 = a1;
  if (v11 == 1)
  {
    sub_1001781AC((uint64_t)v6, &qword_100E64E80);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_100C34240;
    uint64_t v13 = sub_10017DF08(&qword_100E6CCD0);
    uint64_t v14 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v15 = (v14 + 32) & ~v14;
    uint64_t v16 = *(void *)(v8 + 72);
    uint64_t v17 = v13;
    uint64_t v18 = v14 | 7;
    uint64_t v19 = (__n128 *)swift_allocObject();
    uint64_t v20 = sub_100183900(v19, (__n128)xmmword_100C251B0);
    sub_10031F6A8(*(void *)(v9 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v20 + v15, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v12 + 32) = sub_1001F24CC((uint64_t)v19);
    *(void *)(v12 + 40) = v21;
    *(void *)(v12 + 48) = v22;
    uint64_t v23 = sub_100181354();
    *(_OWORD *)(v23 + 16) = v114;
    sub_10031F6A8(*(void *)(v9 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v23 + v15, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v12 + 56) = sub_1001F24CC(v23);
    *(void *)(v12 + 64) = v24;
    *(void *)(v12 + 72) = v25;
    uint64_t v111 = v18;
    uint64_t v112 = v17;
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = v114;
    sub_10031F6A8(v9 + OBJC_IVAR____TtCV7Weather14DefaultContent8_Storage_airQuality, v26 + v15, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v12 + 80) = sub_1001F24CC(v26);
    *(void *)(v12 + 88) = v27;
    *(void *)(v12 + 96) = v28;
    uint64_t v29 = v16;
    uint64_t v110 = v15 + 2 * v16;
    uint64_t v30 = (__n128 *)swift_allocObject();
    uint64_t v31 = (char *)sub_100183900(v30, (__n128)xmmword_100C25ED0) + v15;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
    uint64_t v109 = v29;
    sub_1001859A8((uint64_t)&v31[v29], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset);
    *(void *)(v12 + 104) = sub_1001F24CC((uint64_t)v30);
    *(void *)(v12 + 112) = v32;
    *(void *)(v12 + 120) = v33;
    uint64_t v34 = (__n128 *)swift_allocObject();
    sub_10016324C(v34);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_1001859A8((uint64_t)&v31[v29], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal);
    *(void *)(v12 + 128) = sub_1001F24CC((uint64_t)v30);
    *(void *)(v12 + 136) = v35;
    *(void *)(v12 + 144) = v36;
    char v37 = (__n128 *)sub_100181354();
    sub_10016324C(v37);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    uint64_t v38 = v109;
    sub_1001859A8((uint64_t)&v31[v109], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity);
    *(void *)(v12 + 152) = sub_1001F24CC((uint64_t)v30);
    *(void *)(v12 + 160) = v39;
    *(void *)(v12 + 168) = v40;
    uint64_t v41 = sub_100181354();
    *(_OWORD *)(v41 + 16) = v114;
    uint64_t v42 = v113;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    uint64_t v43 = v38;
    sub_1001859A8(v41 + v15 + v38, OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure);
    *(void *)(v12 + 176) = sub_1001F24CC(v41);
    *(void *)(v12 + 184) = v44;
    *(void *)(v12 + 192) = v45;
    uint64_t v46 = (__n128 *)sub_100181354();
    sub_100179F48(v46);
    uint64_t v48 = v47 + v15;
    uint64_t v49 = *(void *)(v42 + 16);
    sub_10031F6A8(v49 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v47 + v15, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v49 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v48 + v43, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v12 + 200) = sub_1001F24CC((uint64_t)v46);
    *(void *)(v12 + 208) = v50;
    *(void *)(v12 + 216) = v51;
  }
  else
  {
    sub_10031F6FC((uint64_t)v6, v1, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_100C367B0;
    sub_10017DF08(&qword_100E6CCD0);
    uint64_t v112 = *(void *)(v8 + 72);
    uint64_t v52 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v109 = v1;
    uint64_t v53 = (v52 + 32) & ~v52;
    uint64_t v54 = v52 | 7;
    uint64_t v55 = (__n128 *)swift_allocObject();
    BOOL v56 = sub_100183900(v55, (__n128)xmmword_100C251B0);
    sub_10031F6A8(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v56 + v53, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v12 + 32) = sub_1001F24CC((uint64_t)v55);
    *(void *)(v12 + 40) = v57;
    *(void *)(v12 + 48) = v58;
    uint64_t v59 = (__n128 *)sub_10017C984();
    sub_100179F54(v59);
    sub_10031F6A8(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v60, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v12 + 56) = sub_1001F24CC((uint64_t)v59);
    *(void *)(v12 + 64) = v61;
    *(void *)(v12 + 72) = v62;
    uint64_t v63 = (__n128 *)sub_10017C984();
    sub_100179F54(v63);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather14DefaultContent8_Storage_airQuality, v64, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v12 + 80) = sub_1001F24CC((uint64_t)v63);
    *(void *)(v12 + 88) = v65;
    *(void *)(v12 + 96) = v66;
    uint64_t v67 = (__n128 *)sub_10017C984();
    sub_100179F54(v67);
    sub_10031F6A8(v1, v68, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v12 + 104) = sub_1001F24CC((uint64_t)v67);
    *(void *)(v12 + 112) = v69;
    *(void *)(v12 + 120) = v70;
    uint64_t v71 = v112;
    uint64_t v108 = v53 + 2 * v112;
    uint64_t v110 = v54;
    uint64_t v72 = (__n128 *)swift_allocObject();
    uint64_t v73 = (char *)sub_100183900(v72, (__n128)xmmword_100C25ED0) + v53;
    uint64_t v111 = v53;
    uint64_t v74 = *(void *)(a1 + 16);
    sub_10031F6A8(v74 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v73, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v74 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v73[v71], (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v12 + 128) = sub_1001F24CC((uint64_t)v72);
    *(void *)(v12 + 136) = v75;
    *(void *)(v12 + 144) = v76;
    uint64_t v77 = (__n128 *)swift_allocObject();
    sub_100179F48(v77);
    uint64_t v79 = v78 + v53;
    uint64_t v80 = v113;
    uint64_t v81 = *(void *)(v113 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_10031F6A8(v81 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, v79 + v71, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v12 + 152) = sub_1001F24CC((uint64_t)v77);
    *(void *)(v12 + 160) = v82;
    *(void *)(v12 + 168) = v83;
    uint64_t v84 = (__n128 *)swift_allocObject();
    sub_100179F48(v84);
    uint64_t v86 = v85 + v111;
    uint64_t v87 = *(void *)(v80 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    uint64_t v88 = v112;
    sub_10031F6A8(v87 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, v86 + v112, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v12 + 176) = sub_1001F24CC((uint64_t)v84);
    *(void *)(v12 + 184) = v89;
    *(void *)(v12 + 192) = v90;
    uint64_t v91 = (__n128 *)swift_allocObject();
    sub_100179F48(v91);
    uint64_t v92 = v111;
    uint64_t v94 = v93 + v111;
    uint64_t v95 = v113;
    uint64_t v96 = *(void *)(v113 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    uint64_t v97 = v94 + v88;
    uint64_t v98 = v88;
    sub_10031F6A8(v96 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, v97, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v12 + 200) = sub_1001F24CC((uint64_t)v91);
    *(void *)(v12 + 208) = v99;
    *(void *)(v12 + 216) = v100;
    uint64_t v101 = (__n128 *)swift_allocObject();
    sub_100179F48(v101);
    uint64_t v103 = v102 + v92;
    uint64_t v104 = *(void *)(v95 + 16);
    sub_10031F6A8(v104 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v102 + v92, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v104 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v103 + v98, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v12 + 224) = sub_1001F24CC((uint64_t)v101);
    *(void *)(v12 + 232) = v105;
    *(void *)(v12 + 240) = v106;
    sub_10031F75C(v109, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  }
  return v12;
}

uint64_t sub_1006644FC(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v5 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_10016278C();
  uint64_t v9 = v7 - v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v27 - v11;
  uint64_t v13 = type metadata accessor for LocationViewComponent();
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_10008B8C0();
  uint64_t v15 = sub_10017DF08(&qword_100E64E80);
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_10016278C();
  uint64_t v19 = v17 - v18;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v27 - v21;
  uint64_t v23 = swift_retain();
  sub_1006E2E94(v23, a2);
  uint64_t v28 = v24;
  swift_release();
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather28LocationDefaultConfiguration8_Storage_map, v2, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v2);
  sub_10031F75C(v2, (void (*)(void))type metadata accessor for LocationViewComponent);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v5);
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather28LocationDefaultConfiguration8_Storage_airQuality, v2, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v2);
  sub_10031F75C(v2, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_10006DF38((uint64_t)v22, v19, &qword_100E64E80);
  sub_10031F6A8((uint64_t)v12, v9, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  type metadata accessor for DefaultContent._Storage(0);
  swift_allocObject();
  uint64_t v25 = sub_1002C4D28(v28, v19, v9);
  sub_10031F75C((uint64_t)v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_1001781AC((uint64_t)v22, &qword_100E64E80);
  return v25;
}

void sub_100664774(void *a1)
{
  id v3 = [a1 activityType];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v6 = v5;

  if (v4 == 0xD000000000000022 && (sub_10017D240((uint64_t)"com.apple.nanoweather.useractivity"), v7)
    || (sub_100187EB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_100650EF0();
  }
  else
  {
    BOOL v7 = v4 == 0x4972656874616557 && v6 == 0xED0000746E65746ELL;
    if (v7 || (sub_100187EB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_1001B1E64(v1 + 3, v1[6]);
      dispatch thunk of WeatherIntentHandlerType.handleActivity(_:)();
    }
    else if (v4 == 0xD00000000000001ELL && (sub_10019EF14(), v7) || (sub_100187EB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_1005A1554((char *)a1);
    }
    else
    {
      if (v4 == 0xD000000000000029)
      {
        sub_10017D240((uint64_t)"com.apple.weather.complication.moonEvents");
        if (v7) {
          goto LABEL_24;
        }
      }
      if (sub_100187EB4()) {
        goto LABEL_24;
      }
      if (v4 == 0xD000000000000028)
      {
        sub_10019EF14();
        if (v7) {
          goto LABEL_24;
        }
      }
      if (sub_100187EB4()) {
        goto LABEL_24;
      }
      if (v4 == 0xD000000000000029)
      {
        sub_10017D240((uint64_t)"com.apple.weather.complication.conditions");
        if (v7) {
          goto LABEL_24;
        }
      }
      if ((sub_100187EB4() & 1) != 0
        || v4 == 0xD000000000000027 && (sub_10019EF14(), v7)
        || (sub_100187EB4() & 1) != 0
        || v4 == 0xD000000000000023 && (sub_10017D240((uint64_t)"com.apple.weather.complication.rain"), v7)
        || (sub_100187EB4() & 1) != 0
        || v4 == 0xD00000000000002ALL && (sub_10019EF14(), v7)
        || (sub_100187EB4() & 1) != 0
        || v4 == 0xD000000000000022 && (sub_10017D240((uint64_t)"com.apple.weather.complication.aqi"), v7)
        || (sub_100187EB4() & 1) != 0
        || v4 == 0xD000000000000026 && (sub_10017D240((uint64_t)"com.apple.weather.complication.uvIndex"), v7)
        || (sub_100187EB4() & 1) != 0
        || v4 == 0xD000000000000023 && (sub_10017D240((uint64_t)"com.apple.weather.complication.wind"), v7)
        || (sub_100187EB4() & 1) != 0
        || v4 == 0xD000000000000026 && (sub_10017D240((uint64_t)"com.apple.weather.widget.sunriseSunset"), v7)
        || (sub_100187EB4() & 1) != 0)
      {
LABEL_24:
        swift_bridgeObjectRelease();
        sub_1001B1E64(v1 + 9, v1[12]);
        sub_100875524();
      }
      else
      {
        if (qword_100E62848 != -1) {
          swift_once();
        }
        uint64_t v8 = type metadata accessor for Logger();
        sub_1002102B0(v8, (uint64_t)qword_100F51FE0);
        swift_bridgeObjectRetain();
        uint64_t v9 = Logger.logObject.getter();
        os_log_type_t v10 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v9, v10))
        {
          uint64_t v11 = (uint8_t *)swift_slowAlloc();
          uint64_t v12 = swift_slowAlloc();
          *(_DWORD *)uint64_t v11 = 136446210;
          swift_bridgeObjectRetain();
          sub_10016414C(v4, v6, &v12);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v9, v10, "Unrecognized user activity type. activityType=%{public}s", v11, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
      }
    }
  }
}

uint64_t sub_100664C64()
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 24);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 72);
  return v0;
}

uint64_t sub_100664C9C()
{
  sub_100664C64();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ContinueUserActivityHandlerManager()
{
  return self;
}

uint64_t getEnumTagSinglePayload for WeatherURLContext(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WeatherURLContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_100664D98(uint64_t a1, uint64_t a2)
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  if (a2)
  {
    sub_1001B1E64(v2 + 13, v2[16]);
    sub_100478FEC();
  }
  uint64_t v8 = (uint64_t (*)(uint64_t))v2[6];
  type metadata accessor for LocationPreviewViewAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for ModalViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_1001A2310();
  swift_retain();
  sub_1001AAF58(v7, (uint64_t)v10, v8);
  sub_100016E7C((uint64_t)v10);
  sub_100158E84(v7, (void (*)(void))type metadata accessor for MainAction);
  return swift_release();
}

uint64_t sub_100664EC4()
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_10011BFD8();
  unint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 48);
  type metadata accessor for LocationViewerViewAction();
  sub_10017E6B0();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for ViewAction();
  sub_10017E6B0();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_1001A2310();
  swift_retain();
  sub_1001AAF58(v1, (uint64_t)v5, v3);
  sub_100016E7C((uint64_t)v5);
  sub_100158E84(v1, (void (*)(void))type metadata accessor for MainAction);
  return swift_release();
}

uint64_t sub_100664FB4()
{
  sub_10017C924();
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v1);
  sub_1001626E0();
  uint64_t v4 = v3 - v2;
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 48);
  *(unsigned char *)(v3 - v2) = 4;
  type metadata accessor for ModalViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_1001A2310();
  swift_retain();
  sub_1001AAF58(v4, (uint64_t)v7, v5);
  sub_100016E7C((uint64_t)v7);
  sub_100158E84(v4, (void (*)(void))type metadata accessor for MainAction);
  swift_release();
  if (qword_100E622A0 != -1) {
    swift_once();
  }
  sub_100665854(&qword_100E87C20);
  uint64_t result = Configurable.setting<A>(_:)();
  if ((v7[0] & 1) == 0)
  {
    swift_retain();
    asyncMain(block:)();
    return swift_release();
  }
  return result;
}

uint64_t sub_10066514C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MainAction();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(uint64_t (**)(uint64_t))(a1 + 48);
  type metadata accessor for NotificationsOptInAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = 0;
  memset(v7, 0, sizeof(v7));
  swift_retain();
  sub_1001AAF58((uint64_t)v4, (uint64_t)v7, v5);
  sub_100016E7C((uint64_t)v7);
  sub_100158E84((uint64_t)v4, (void (*)(void))type metadata accessor for MainAction);
  return swift_release();
}

uint64_t sub_100665248()
{
  uint64_t v2 = type metadata accessor for NotificationsOptInState();
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_10011BFD8();
  *uint64_t v1 = 0;
  type metadata accessor for ModalViewAction();
  sub_10017E6B0();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_1001D1BB8();
  sub_100181564();
  sub_100016E7C((uint64_t)v11);
  sub_100158E84((uint64_t)v1, (void (*)(void))type metadata accessor for MainAction);
  uint64_t v8 = swift_release();
  (*(void (**)(void *__return_ptr, uint64_t))(v0 + 16))(v11, v8);
  sub_1001C6DA8(v11[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn, v6);
  swift_release();
  int v9 = *(unsigned __int8 *)(v6 + *(int *)(v3 + 60));
  uint64_t result = sub_100158E84(v6, (void (*)(void))type metadata accessor for NotificationsOptInState);
  if (v9 == 1)
  {
    type metadata accessor for NotificationsOptInAction();
    sub_10017E6B0();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_1001D1BB8();
    sub_100181564();
    sub_100016E7C((uint64_t)v11);
    sub_100158E84((uint64_t)v1, (void (*)(void))type metadata accessor for MainAction);
    return swift_release();
  }
  return result;
}

uint64_t sub_100665410()
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_10011BFD8();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 48);
  *(void *)uint64_t v1 = 0xF000000000000006;
  type metadata accessor for ModalViewAction();
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(void *)(v1 + 88) = 0;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = 0;
  memset(v5, 0, sizeof(v5));
  swift_retain();
  sub_1001AAF58(v1, (uint64_t)v5, v3);
  sub_100016E7C((uint64_t)v5);
  sub_100158E84(v1, (void (*)(void))type metadata accessor for MainAction);
  return swift_release();
}

uint64_t sub_100665518()
{
  return sub_1001A0C00((void (*)(void))type metadata accessor for ModalViewAction);
}

uint64_t sub_100665534()
{
  return sub_1001A0C00((void (*)(void))type metadata accessor for ModalViewAction);
}

uint64_t sub_100665550(void (*a1)(void))
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v1 + 48);
  a1(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = 0;
  memset(v9, 0, sizeof(v9));
  swift_retain();
  sub_1001AAF58(v6, (uint64_t)v9, v7);
  sub_100016E7C((uint64_t)v9);
  sub_100158E84(v6, (void (*)(void))type metadata accessor for MainAction);
  return swift_release();
}

uint64_t sub_100665658()
{
  return sub_100665668(1);
}

uint64_t sub_100665660()
{
  return sub_100665668(0);
}

uint64_t sub_100665668(char a1)
{
  sub_10017C924();
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v1 + 48);
  *(unsigned char *)(v5 - v4) = a1;
  type metadata accessor for ViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = 0;
  memset(v9, 0, sizeof(v9));
  swift_retain();
  sub_1001AAF58(v6, (uint64_t)v9, v7);
  sub_100016E7C((uint64_t)v9);
  sub_100158E84(v6, (void (*)(void))type metadata accessor for MainAction);
  swift_release();
  if (qword_100E629F0 != -1) {
    swift_once();
  }
  LOBYTE(v9[0]) = a1;
  sub_100665854(&qword_100E87C28);
  return Updatable.save<A>(setting:value:)();
}

uint64_t sub_1006657E0()
{
  return sub_10017A6B4((void (*)(void))type metadata accessor for ViewAction);
}

uint64_t sub_1006657FC()
{
  return sub_10017A6B4((void (*)(void))type metadata accessor for ViewAction);
}

uint64_t sub_100665818()
{
  return sub_100665854(&qword_100E87C20);
}

uint64_t sub_10066584C()
{
  return sub_10066514C(v0);
}

uint64_t sub_100665854(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MainInteractor();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100665894(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TemperatureChartKind();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ConditionDetailChartFooterViewModel();
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (uint64_t *)((char *)&v26 - v12);
  uint64_t v14 = sub_10017DF08(&qword_100E87C30);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = &v17[*(int *)(v15 + 56)];
  sub_100665BC8(a1, (uint64_t)v17);
  sub_100665BC8(a2, (uint64_t)v18);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_100665BC8((uint64_t)v17, (uint64_t)v13);
    uint64_t v22 = *v13;
    uint64_t v21 = v13[1];
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      if (v22 == *(void *)v18 && v21 == *((void *)v18 + 1))
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v24 & 1) == 0)
        {
          sub_100665C8C((uint64_t)v17);
          goto LABEL_8;
        }
      }
      sub_100665C8C((uint64_t)v17);
      char v19 = 1;
      return v19 & 1;
    }
    swift_bridgeObjectRelease();
LABEL_7:
    sub_100665C2C((uint64_t)v17);
LABEL_8:
    char v19 = 0;
    return v19 & 1;
  }
  sub_100665BC8((uint64_t)v17, (uint64_t)v11);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v18, v4);
  char v19 = static TemperatureChartKind.== infix(_:_:)();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v5 + 8);
  v20(v7, v4);
  v20(v11, v4);
  sub_100665C8C((uint64_t)v17);
  return v19 & 1;
}

uint64_t type metadata accessor for ConditionDetailChartFooterViewModel()
{
  uint64_t result = qword_100E87CA8;
  if (!qword_100E87CA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100665BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConditionDetailChartFooterViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100665C2C(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E87C30);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100665C8C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ConditionDetailChartFooterViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_100665CE8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for TemperatureChartKind();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100665DE8(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for TemperatureChartKind();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

void *sub_100665E78(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for TemperatureChartKind();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100665F28(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_100665C8C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = type metadata accessor for TemperatureChartKind();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100665FF0(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for TemperatureChartKind();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1006660A8(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100665C8C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for TemperatureChartKind();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100666170()
{
  uint64_t result = type metadata accessor for TemperatureChartKind();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t destroy for MoonDetailView(uint64_t a1)
{
  swift_release();
  sub_10018F6D8(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  sub_10018F6D8(*(void *)(a1 + 32), *(unsigned char *)(a1 + 40));

  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 48);
}

uint64_t initializeWithCopy for MoonDetailView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  swift_retain();
  sub_100195B7C(v5, v6);
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_100195B7C(v7, v8);
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  long long v9 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 48, a2 + 48);
  return a1;
}

uint64_t assignWithCopy for MoonDetailView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  sub_100195B7C(v4, v5);
  uint64_t v6 = *(void *)(a1 + 16);
  char v7 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  sub_10018F6D8(v6, v7);
  uint64_t v8 = *(void *)(a2 + 32);
  char v9 = *(unsigned char *)(a2 + 40);
  sub_100195B7C(v8, v9);
  uint64_t v10 = *(void *)(a1 + 32);
  char v11 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v9;
  sub_10018F6D8(v10, v11);
  sub_1000C1E18((uint64_t *)(a1 + 48), (uint64_t *)(a2 + 48));
  return a1;
}

uint64_t assignWithTake for MoonDetailView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)(a1 + 16);
  char v7 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v5;
  sub_10018F6D8(v6, v7);
  char v8 = *(unsigned char *)(a2 + 40);
  uint64_t v9 = *(void *)(a1 + 32);
  char v10 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v8;
  sub_10018F6D8(v9, v10);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 48);
  long long v11 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v11;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

uint64_t sub_100666454()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100666470(uint64_t a1, char a2)
{
  int v3 = a2 & 1;
  uint64_t v4 = type metadata accessor for MoonCompactOverviewTableViewModel(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100673970(a1, (uint64_t)v6, (void (*)(void))type metadata accessor for MoonCompactOverviewTableViewModel);
  sub_10017DF08(&qword_100E87F38);
  swift_allocObject();
  return sub_1006669C0((uint64_t)v6, v3);
}

uint64_t sub_100666540(uint64_t a1, char a2)
{
  int v3 = a2 & 1;
  uint64_t v4 = type metadata accessor for OverviewTableViewModel();
  __n128 v5 = __chkstk_darwin(v4);
  char v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, a1, v5);
  sub_10017DF08(&qword_100E87FF8);
  swift_allocObject();
  return sub_1006673DC((uint64_t)v7, v3);
}

uint64_t sub_10066663C()
{
  return sub_1004D85AC();
}

uint64_t sub_100666660()
{
  sub_10017C83C();
  __n128 v1 = __chkstk_darwin(v0);
  int v3 = (char *)&v6 - v2;
  (*(void (**)(char *, __n128))(v4 + 16))((char *)&v6 - v2, v1);
  return sub_1004D889C((uint64_t)v3);
}

uint64_t sub_1006666FC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MoonCompactOverviewTableViewModel(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[2] = v5;
  uint64_t v6 = sub_100681CB8(&qword_100E87F78, (void (*)(uint64_t))type metadata accessor for MoonCompactOverviewTableViewModel);
  v8[3] = v6;
  swift_getKeyPath();
  v8[0] = v2;
  v8[1] = v6;
  swift_getKeyPath();
  sub_100673970(a1, (uint64_t)v4, (void (*)(void))type metadata accessor for MoonCompactOverviewTableViewModel);
  swift_retain();
  static Published.subscript.setter();
  return sub_1006739F4();
}

uint64_t sub_100666844(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OverviewTableViewModel();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  _OWORD v9[2] = v6;
  uint64_t v7 = sub_100681CB8((unint64_t *)&qword_100E7CB88, (void (*)(uint64_t))&type metadata accessor for OverviewTableViewModel);
  v9[3] = v7;
  swift_getKeyPath();
  v9[0] = v2;
  v9[1] = v7;
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  swift_retain();
  static Published.subscript.setter();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t sub_1006669C0(uint64_t a1, int a2)
{
  int v46 = a2 & 1;
  int v47 = a2;
  uint64_t v4 = sub_10017DF08(&qword_100E87F40);
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  __chkstk_darwin(v4);
  uint64_t v42 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E87F48);
  __chkstk_darwin(v6 - 8);
  uint64_t v41 = (uint64_t)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  uint64_t v52 = *(void *)(v8 - 8);
  uint64_t v53 = v8;
  __chkstk_darwin(v8);
  uint64_t v51 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E87F50);
  uint64_t v45 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100E87F58);
  uint64_t v49 = *(void *)(v13 - 8);
  uint64_t v50 = v13;
  __chkstk_darwin(v13);
  uint64_t v48 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100E87F60);
  uint64_t v39 = *(void *)(v15 - 8);
  uint64_t v40 = v15;
  __chkstk_darwin(v15);
  uint64_t v38 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for MoonCompactOverviewTableViewModel(0);
  __chkstk_darwin(v17);
  char v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v37 - v21;
  uint64_t v54 = (void *)(v2 + *(void *)(*(void *)v2 + 112));
  *uint64_t v54 = &_swiftEmptySetSingleton;
  sub_100673970(a1, (uint64_t)&v37 - v21, (void (*)(void))type metadata accessor for MoonCompactOverviewTableViewModel);
  swift_beginAccess();
  sub_100673970((uint64_t)v22, (uint64_t)v19, (void (*)(void))type metadata accessor for MoonCompactOverviewTableViewModel);
  Published.init(initialValue:)();
  sub_1006739F4();
  swift_endAccess();
  uint64_t v55 = a1;
  sub_100673970(a1, (uint64_t)v22, (void (*)(void))type metadata accessor for MoonCompactOverviewTableViewModel);
  swift_beginAccess();
  sub_100673970((uint64_t)v22, (uint64_t)v19, (void (*)(void))type metadata accessor for MoonCompactOverviewTableViewModel);
  Published.init(initialValue:)();
  sub_1006739F4();
  swift_endAccess();
  *(unsigned char *)(v2 + *(void *)(*(void *)v2 + 120)) = v46;
  uint64_t v23 = (void (**)(char *, uint64_t))(v45 + 8);
  if (v47)
  {
    swift_beginAccess();
    sub_10017DF08(&qword_100E87F68);
    Published.projectedValue.getter();
    swift_endAccess();
    sub_1001246C8(&qword_100E87F70, &qword_100E87F50);
    sub_100681CB8(&qword_100E87F78, (void (*)(uint64_t))type metadata accessor for MoonCompactOverviewTableViewModel);
    uint64_t v32 = v48;
    Publisher<>.removeDuplicates()();
    (*v23)(v12, v10);
    uint64_t v33 = v51;
    static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
    sub_1001AB3E0();
    uint64_t v34 = (void *)static OS_dispatch_queue.main.getter();
    id v56 = v34;
    sub_1001246C8(&qword_100E87F80, &qword_100E87F58);
    sub_100681CB8(&qword_100E87F88, (void (*)(uint64_t))sub_1001AB3E0);
    uint64_t v28 = v42;
    uint64_t v35 = v50;
    Publisher.throttle<A>(for:scheduler:latest:)();

    (*(void (**)(char *, uint64_t))(v52 + 8))(v33, v53);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v32, v35);
    swift_allocObject();
    swift_weakInit();
    sub_1001246C8(&qword_100E87F90, &qword_100E87F40);
    swift_retain();
    uint64_t v30 = v44;
    Publisher<>.sink(receiveValue:)();
    swift_release();
    uint64_t v31 = v43;
  }
  else
  {
    swift_beginAccess();
    sub_10017DF08(&qword_100E87F68);
    Published.projectedValue.getter();
    swift_endAccess();
    sub_1001246C8(&qword_100E87F70, &qword_100E87F50);
    sub_100681CB8(&qword_100E87F78, (void (*)(uint64_t))type metadata accessor for MoonCompactOverviewTableViewModel);
    char v24 = v48;
    Publisher<>.removeDuplicates()();
    (*v23)(v12, v10);
    uint64_t v25 = v51;
    static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
    sub_1001AB3E0();
    id v56 = (id)static OS_dispatch_queue.main.getter();
    uint64_t v26 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    uint64_t v27 = v41;
    _s7Weather24LocationCompositionStateOwst_0(v41, 1, 1, v26);
    sub_1001246C8(&qword_100E87F80, &qword_100E87F58);
    sub_100681CB8(&qword_100E87F88, (void (*)(uint64_t))sub_1001AB3E0);
    uint64_t v28 = v38;
    uint64_t v29 = v50;
    Publisher.debounce<A>(for:scheduler:options:)();
    sub_100178110(v27, &qword_100E87F48);

    (*(void (**)(char *, uint64_t))(v52 + 8))(v25, v53);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v24, v29);
    swift_allocObject();
    swift_weakInit();
    sub_1001246C8(&qword_100E87F98, &qword_100E87F60);
    swift_retain();
    uint64_t v30 = v40;
    Publisher<>.sink(receiveValue:)();
    swift_release();
    uint64_t v31 = v39;
  }
  (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  sub_1006739F4();
  return v2;
}

uint64_t sub_1006673DC(uint64_t a1, int a2)
{
  int v51 = a2 & 1;
  int v52 = a2;
  uint64_t v4 = sub_10017DF08(&qword_100E88000);
  uint64_t v48 = *(void *)(v4 - 8);
  uint64_t v49 = v4;
  __chkstk_darwin(v4);
  int v47 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E87F48);
  __chkstk_darwin(v6 - 8);
  uint64_t v46 = (uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  uint64_t v60 = *(void *)(v8 - 8);
  uint64_t v61 = v8;
  __chkstk_darwin(v8);
  uint64_t v59 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_10017DF08(&qword_100E88008);
  uint64_t v50 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v53 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E88010);
  uint64_t v57 = *(void *)(v11 - 8);
  uint64_t v58 = v11;
  __chkstk_darwin(v11);
  id v56 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_10017DF08(&qword_100E88018);
  uint64_t v44 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v43 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for OverviewTableViewModel();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v43 - v20;
  uint64_t v62 = (void *)(v2 + *(void *)(*(void *)v2 + 112));
  *uint64_t v62 = &_swiftEmptySetSingleton;
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16);
  v22((char *)&v43 - v20, a1, v14, v19);
  swift_beginAccess();
  ((void (*)(char *, char *, uint64_t))v22)(v17, v21, v14);
  Published.init(initialValue:)();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v15 + 8);
  v23(v21, v14);
  swift_endAccess();
  uint64_t v63 = a1;
  ((void (*)(char *, uint64_t, uint64_t))v22)(v21, a1, v14);
  swift_beginAccess();
  ((void (*)(char *, char *, uint64_t))v22)(v17, v21, v14);
  Published.init(initialValue:)();
  uint64_t v55 = (void (*)(uint64_t, uint64_t))v23;
  v23(v21, v14);
  swift_endAccess();
  *(unsigned char *)(v2 + *(void *)(*(void *)v2 + 120)) = v51;
  char v24 = (void (**)(char *, uint64_t))(v50 + 8);
  if (v52)
  {
    swift_beginAccess();
    sub_10017DF08(&qword_100E88020);
    uint64_t v34 = v53;
    Published.projectedValue.getter();
    swift_endAccess();
    sub_1001246C8(&qword_100E88028, &qword_100E88008);
    sub_100681CB8((unint64_t *)&qword_100E7CB88, (void (*)(uint64_t))&type metadata accessor for OverviewTableViewModel);
    uint64_t v35 = v56;
    uint64_t v36 = v54;
    Publisher<>.removeDuplicates()();
    (*v24)(v34, v36);
    uint64_t v37 = v59;
    static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
    sub_1001AB3E0();
    uint64_t v38 = (void *)static OS_dispatch_queue.main.getter();
    id v64 = v38;
    sub_1001246C8(&qword_100E88030, &qword_100E88010);
    sub_100681CB8(&qword_100E87F88, (void (*)(uint64_t))sub_1001AB3E0);
    uint64_t v39 = v47;
    uint64_t v40 = v58;
    Publisher.throttle<A>(for:scheduler:latest:)();

    (*(void (**)(char *, uint64_t))(v60 + 8))(v37, v61);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v35, v40);
    swift_allocObject();
    swift_weakInit();
    sub_1001246C8(&qword_100E88038, &qword_100E88000);
    swift_retain();
    uint64_t v41 = v49;
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v39, v41);
  }
  else
  {
    swift_beginAccess();
    sub_10017DF08(&qword_100E88020);
    uint64_t v25 = v53;
    Published.projectedValue.getter();
    swift_endAccess();
    sub_1001246C8(&qword_100E88028, &qword_100E88008);
    sub_100681CB8((unint64_t *)&qword_100E7CB88, (void (*)(uint64_t))&type metadata accessor for OverviewTableViewModel);
    uint64_t v26 = v56;
    uint64_t v27 = v54;
    Publisher<>.removeDuplicates()();
    (*v24)(v25, v27);
    uint64_t v28 = v59;
    static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
    sub_1001AB3E0();
    id v64 = (id)static OS_dispatch_queue.main.getter();
    uint64_t v29 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    uint64_t v30 = v46;
    _s7Weather24LocationCompositionStateOwst_0(v46, 1, 1, v29);
    sub_1001246C8(&qword_100E88030, &qword_100E88010);
    sub_100681CB8(&qword_100E87F88, (void (*)(uint64_t))sub_1001AB3E0);
    uint64_t v31 = v43;
    uint64_t v32 = v58;
    Publisher.debounce<A>(for:scheduler:options:)();
    sub_100178110(v30, &qword_100E87F48);

    (*(void (**)(char *, uint64_t))(v60 + 8))(v28, v61);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v26, v32);
    swift_allocObject();
    swift_weakInit();
    sub_1001246C8(&qword_100E88040, &qword_100E88018);
    swift_retain();
    uint64_t v33 = v45;
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v31, v33);
  }
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  v55(v63, v14);
  return v2;
}

uint64_t sub_100667E70()
{
  uint64_t v1 = sub_100127C8C();
  uint64_t v2 = type metadata accessor for MoonCompactOverviewTableViewModel(v1);
  __chkstk_darwin(v2 - 8);
  sub_1001626E0();
  uint64_t v5 = v4 - v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100673970(v0, v5, (void (*)(void))type metadata accessor for MoonCompactOverviewTableViewModel);
    sub_1006666FC(v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_100667F38()
{
  sub_100127C8C();
  uint64_t v1 = type metadata accessor for OverviewTableViewModel();
  sub_10017C83C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v7, v0, v1);
    sub_100666844(v7);
    return swift_release();
  }
  return result;
}

uint64_t sub_100668014()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MoonDetailViewModel.Model(0);
  __chkstk_darwin(v2);
  uint64_t v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for MoonDetailViewModel(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_retain();
  sub_10024E808();
  swift_release();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v2) == 1) {
    goto LABEL_6;
  }
  sub_100681A50((uint64_t)v7, (uint64_t)v4, (void (*)(void))type metadata accessor for MoonDetailViewModel.Model);
  int v8 = v4[*(int *)(v2 + 60)];
  sub_100668E44(v1, (uint64_t)v22);
  if (v8 != 1)
  {
    sub_1006739C4((uint64_t)v22);
    sub_1006739F4();
LABEL_6:
    char v13 = 0;
    return v13 & 1;
  }
  uint64_t v9 = v23;
  char v10 = v24;
  sub_100195B7C(v23, v24);
  sub_100149AE8();
  char v12 = v11;
  sub_10018F6D8(v9, v10);
  sub_100668E44((uint64_t)v22, (uint64_t)v19);
  if (v12)
  {
    char v13 = 0;
  }
  else
  {
    uint64_t v14 = v20;
    char v15 = v21;
    sub_100195B7C(v20, v21);
    sub_100149AE8();
    char v17 = v16;
    sub_10018F6D8(v14, v15);
    char v13 = v17 ^ 1;
  }
  sub_1006739C4((uint64_t)v19);
  sub_1006739C4((uint64_t)v22);
  sub_1006739F4();
  return v13 & 1;
}

uint64_t sub_100668224@<X0>(uint64_t a1@<X8>)
{
  uint64_t v83 = a1;
  uint64_t v79 = sub_10017DF08(&qword_100E87CE0);
  sub_10017C83C();
  uint64_t v78 = v2;
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v77 = v4;
  sub_100129064();
  uint64_t v74 = type metadata accessor for Location();
  sub_10017C83C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v72 = v8;
  sub_100129064();
  uint64_t v9 = type metadata accessor for DetailType();
  sub_10017C83C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v14 = v13;
  sub_100129064();
  uint64_t v71 = type metadata accessor for DetailViewVisibilityTrackerModel();
  sub_100162E4C();
  __chkstk_darwin(v15);
  sub_100109314();
  uint64_t v73 = v16;
  uint64_t v80 = sub_10017DF08(&qword_100E87CE8);
  sub_100162E4C();
  __chkstk_darwin(v17);
  __n128 v19 = (uint64_t *)((char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v20);
  uint64_t v76 = (uint64_t)&v65 - v21;
  uint64_t v22 = sub_100129064();
  uint64_t v23 = type metadata accessor for MoonDetailViewModel.Model(v22);
  sub_100162E4C();
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v65 - v28;
  uint64_t v81 = sub_10017DF08(&qword_100E87CF0);
  sub_100162E4C();
  __chkstk_darwin(v30);
  sub_100109314();
  uint64_t v82 = v31;
  uint64_t v32 = sub_100129064();
  uint64_t v33 = type metadata accessor for MoonDetailViewModel(v32);
  __chkstk_darwin(v33 - 8);
  sub_1001626E0();
  uint64_t v36 = v35 - v34;
  uint64_t v75 = v1;
  swift_retain();
  sub_10024E808();
  swift_release();
  if (_s7Weather24LocationCompositionStateOwet_0(v36, 1, v23) == 1)
  {
    swift_storeEnumTagMultiPayload();
    sub_1001246C8(&qword_100E87CF8, &qword_100E87CE8);
    return _ConditionalContent<>.init(storage:)();
  }
  else
  {
    uint64_t v68 = v29;
    sub_100681A50(v36, (uint64_t)v29, (void (*)(void))type metadata accessor for MoonDetailViewModel.Model);
    uint64_t v69 = type metadata accessor for MoonDetailViewModel.Model;
    uint64_t v67 = v26;
    sub_100673970((uint64_t)v29, (uint64_t)v26, (void (*)(void))type metadata accessor for MoonDetailViewModel.Model);
    uint64_t v38 = *(void (**)(uint64_t, void, uint64_t))(v11 + 104);
    uint64_t v65 = v14;
    v38(v14, enum case for DetailType.moonPhase(_:), v9);
    uint64_t v39 = v72;
    uint64_t v40 = v74;
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v72, &v26[*(int *)(v23 + 56)], v74);
    uint64_t v70 = type metadata accessor for MoonDetailViewModel.Model;
    sub_1006739F4();
    uint64_t v66 = v23;
    uint64_t v41 = v71;
    uint64_t v42 = v73 + *(int *)(v71 + 24);
    uint64_t v43 = v19;
    uint64_t v44 = v73;
    uint64_t v45 = enum case for DetailViewOrigin.component(_:);
    type metadata accessor for DetailViewOrigin();
    sub_100162E4C();
    (*(void (**)(uint64_t, uint64_t))(v46 + 104))(v42, v45);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v44, v65, v9);
    uint64_t v47 = v44;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v44 + *(int *)(v41 + 20), v39, v40);
    uint64_t v48 = (uint64_t)v75;
    uint64_t v49 = v75[9];
    uint64_t v50 = v75[10];
    sub_1001B1E64(v75 + 6, v49);
    v85[3] = v49;
    v85[4] = *(void *)(v50 + 8);
    sub_100170694(v85);
    sub_100162880();
    (*(void (**)(void))(v51 + 16))();
    uint64_t v52 = *(int *)(v66 + 24);
    uint64_t v53 = &v68[*(int *)(v66 + 20)];
    uint64_t v54 = *(void *)v53;
    uint64_t v55 = *((void *)v53 + 1);
    uint64_t v57 = *(void *)&v68[v52];
    uint64_t v56 = *(void *)&v68[v52 + 8];
    uint64_t v58 = (uint64_t)v67;
    sub_100673970((uint64_t)v68, (uint64_t)v67, (void (*)(void))v69);
    sub_100668E44(v48, (uint64_t)v84);
    *uint64_t v43 = swift_getKeyPath();
    sub_10017DF08(&qword_100E65310);
    swift_storeEnumTagMultiPayload();
    uint64_t v59 = (int *)v80;
    sub_100673970(v47, (uint64_t)v43 + *(int *)(v80 + 36), (void (*)(void))type metadata accessor for DetailViewVisibilityTrackerModel);
    sub_1001E9994((uint64_t)v85, (uint64_t)v43 + v59[10]);
    uint64_t v60 = (uint64_t *)((char *)v43 + v59[11]);
    *uint64_t v60 = v54;
    v60[1] = v55;
    uint64_t v61 = (uint64_t *)((char *)v43 + v59[12]);
    *uint64_t v61 = v57;
    v61[1] = v56;
    *((unsigned char *)v43 + v59[13]) = 0;
    uint64_t v62 = (uint64_t *)((char *)v43 + v59[14]);
    *uint64_t v62 = 0;
    v62[1] = 0;
    *((unsigned char *)v43 + v59[15]) = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v63 = v77;
    sub_100668990(v58, (uint64_t)v84);
    sub_1006739F4();
    sub_1006739C4((uint64_t)v84);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v85);
    sub_1006739F4();
    (*(void (**)(char *, uint64_t, uint64_t))(v78 + 32))((char *)v43 + v59[16], v63, v79);
    uint64_t v64 = v76;
    sub_10024D364((uint64_t)v43, v76, &qword_100E87CE8);
    sub_10006DF38(v64, v82, &qword_100E87CE8);
    swift_storeEnumTagMultiPayload();
    sub_1001246C8(&qword_100E87CF8, &qword_100E87CE8);
    _ConditionalContent<>.init(storage:)();
    sub_100178110(v64, &qword_100E87CE8);
    return sub_1006739F4();
  }
}

uint64_t sub_100668990(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E669A8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for MoonDetailViewModel.Model(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MoonDetailRootContentView(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100673970(a1, (uint64_t)v9, (void (*)(void))type metadata accessor for MoonDetailViewModel.Model);
  sub_1001E9994(a2 + 48, (uint64_t)v17);
  *uint64_t v6 = swift_getKeyPath();
  sub_10017DF08(&qword_100E65310);
  swift_storeEnumTagMultiPayload();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v14 = swift_getKeyPath();
  sub_100668BD4((uint64_t)v6, KeyPath, 0, v14, 0, (uint64_t)v9, v17, (uint64_t)v12);
  sub_100668014();
  sub_100681CB8(&qword_100E87D00, (void (*)(uint64_t))type metadata accessor for MoonDetailRootContentView);
  View.navigationBarHidden(_:)();
  return sub_1006739F4();
}

double sub_100668BD4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, long long *a7@<X6>, uint64_t a8@<X8>)
{
  sub_10024D364(a1, a8, &qword_100E669A8);
  uint64_t v15 = (int *)type metadata accessor for MoonDetailRootContentView(0);
  uint64_t v16 = a8 + v15[5];
  *(void *)uint64_t v16 = a2;
  *(unsigned char *)(v16 + 8) = a3 & 1;
  uint64_t v17 = a8 + v15[6];
  *(void *)uint64_t v17 = a4;
  *(unsigned char *)(v17 + 8) = a5 & 1;
  sub_100681A50(a6, a8 + v15[7], (void (*)(void))type metadata accessor for MoonDetailViewModel.Model);
  sub_1001262E4(a7, a8 + v15[8]);
  uint64_t v18 = (double *)(a8 + v15[9]);
  State.init(wrappedValue:)();
  double *v18 = v27;
  *((void *)v18 + 1) = v28;
  __n128 v19 = (double *)(a8 + v15[10]);
  State.init(wrappedValue:)();
  double *v19 = v27;
  *((void *)v19 + 1) = v28;
  uint64_t v20 = (double *)(a8 + v15[11]);
  State.init(wrappedValue:)();
  *uint64_t v20 = v27;
  *((void *)v20 + 1) = v28;
  uint64_t v21 = (double *)(a8 + v15[12]);
  State.init(wrappedValue:)();
  *uint64_t v21 = v27;
  *((void *)v21 + 1) = v28;
  uint64_t v22 = (double *)(a8 + v15[13]);
  State.init(wrappedValue:)();
  *uint64_t v22 = v27;
  *((void *)v22 + 1) = v28;
  uint64_t v23 = (double *)(a8 + v15[14]);
  State.init(wrappedValue:)();
  *uint64_t v23 = v27;
  *((void *)v23 + 1) = v28;
  uint64_t v24 = (double *)(a8 + v15[15]);
  State.init(wrappedValue:)();
  double result = v27;
  double *v24 = v27;
  *((void *)v24 + 1) = v28;
  uint64_t v26 = (void *)(a8 + v15[16]);
  *uint64_t v26 = 0xD000000000000014;
  v26[1] = 0x8000000100CAD1B0;
  return result;
}

uint64_t sub_100668E44(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100668E7C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MoonDetailRootContentView(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v22 - v6;
  uint64_t v9 = v1 + *(int *)(v8 + 28);
  LODWORD(v9) = *(unsigned __int8 *)(v9 + *(int *)(type metadata accessor for MoonDetailViewModel.Model(0) + 60));
  sub_100673970(v1, (uint64_t)v7, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  if (v9 == 1)
  {
    uint64_t v10 = &v7[*(int *)(v2 + 20)];
    uint64_t v11 = *(void *)v10;
    char v12 = v10[8];
    sub_100195B7C(*(void *)v10, v12);
    sub_100149AE8();
    char v14 = v13;
    sub_10018F6D8(v11, v12);
    sub_100673970((uint64_t)v7, (uint64_t)v4, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
    if (v14)
    {
      char v15 = 0;
    }
    else
    {
      uint64_t v16 = &v4[*(int *)(v2 + 24)];
      uint64_t v17 = *(void *)v16;
      char v18 = v16[8];
      sub_100195B7C(*(void *)v16, v18);
      sub_100149AE8();
      char v20 = v19;
      sub_10018F6D8(v17, v18);
      char v15 = v20 ^ 1;
    }
    sub_1006739F4();
  }
  else
  {
    char v15 = 0;
  }
  sub_1006739F4();
  return v15 & 1;
}

uint64_t sub_100669040@<X0>(uint64_t (**a1)@<X0>(uint64_t *a1@<X8>, double a2@<D0>)@<X8>)
{
  uint64_t v3 = type metadata accessor for MoonDetailRootContentView(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  sub_100673970(v1, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t result = sub_100681A50((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  *a1 = sub_100681AA4;
  a1[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>, double@<D0>))v7;
  return result;
}

uint64_t sub_10066915C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>, double a3@<D0>)
{
  *a2 = static Alignment.top.getter();
  a2[1] = v6;
  uint64_t v7 = sub_10017DF08(&qword_100E87DD8);
  return sub_1006691B4(a1, (uint64_t *)((char *)a2 + *(int *)(v7 + 44)), a3);
}

uint64_t sub_1006691B4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>, double a3@<D0>)
{
  uint64_t v6 = sub_10017DF08(&qword_100E87DE0);
  __chkstk_darwin(v6 - 8);
  uint64_t v63 = (uint64_t *)((char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v80 = sub_10017DF08(&qword_100E87DE8);
  __chkstk_darwin(v80);
  uint64_t v62 = (uint64_t)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E87DF0);
  __chkstk_darwin(v9 - 8);
  uint64_t v82 = (uint64_t)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v81 = (char *)&v62 - v12;
  uint64_t v13 = type metadata accessor for ScrollIndicatorVisibility();
  uint64_t v75 = *(void *)(v13 - 8);
  uint64_t v76 = v13;
  __chkstk_darwin(v13);
  char v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_10017DF08(&qword_100E87DF8);
  uint64_t v71 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10017DF08(&qword_100E87E00);
  uint64_t v73 = *(void *)(v18 - 8);
  uint64_t v74 = v18;
  __chkstk_darwin(v18);
  char v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_10017DF08(&qword_100E87E08);
  __chkstk_darwin(v64);
  uint64_t v79 = (uint64_t)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v62 - v23;
  __chkstk_darwin(v25);
  uint64_t v78 = (char *)&v62 - v26;
  uint64_t v27 = sub_100668E7C();
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  if (v27)
  {
    swift_beginAccess();
    uint64_t v28 = sub_1009D94A0();
    sub_1009D9570();
    sub_1009D9624();
    sub_1009D95AC();
    swift_endAccess();
    static Alignment.center.getter();
    uint64_t v27 = _FrameLayout.init(width:height:alignment:)();
    uint64_t v29 = v83;
    uint64_t v30 = v84;
    uint64_t v31 = v85;
    uint64_t v32 = v86;
    uint64_t v33 = v87;
    uint64_t v34 = v88;
  }
  uint64_t v65 = v34;
  uint64_t v66 = v33;
  uint64_t v67 = v32;
  uint64_t v68 = v31;
  uint64_t v69 = v30;
  uint64_t v70 = v29;
  uint64_t v77 = v28;
  __chkstk_darwin(v27);
  uint64_t v35 = a1;
  *(&v62 - 2) = a1;
  *((double *)&v62 - 1) = a3;
  static Axis.Set.vertical.getter();
  sub_10017DF08(&qword_100E87E10);
  sub_100681B10();
  ScrollView.init(_:showsIndicators:content:)();
  static ScrollIndicatorVisibility.never.getter();
  unsigned __int8 v36 = static Axis.Set.vertical.getter();
  unsigned __int8 v37 = static Axis.Set.horizontal.getter();
  Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v36) {
    Axis.Set.init(rawValue:)();
  }
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v37) {
    Axis.Set.init(rawValue:)();
  }
  uint64_t v38 = (uint64_t)v78;
  sub_1001246C8(&qword_100E87E30, &qword_100E87DF8);
  uint64_t v39 = v72;
  View.scrollIndicators(_:axes:)();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v15, v76);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v17, v39);
  uint64_t v40 = (uint64_t *)(v35 + *(int *)(type metadata accessor for MoonDetailRootContentView(0) + 64));
  uint64_t v42 = *v40;
  uint64_t v41 = v40[1];
  uint64_t v44 = v73;
  uint64_t v43 = v74;
  (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v24, v20, v74);
  uint64_t v45 = &v24[*(int *)(v64 + 36)];
  *(void *)uint64_t v45 = v42;
  *((void *)v45 + 1) = v41;
  uint64_t v46 = *(void (**)(char *, uint64_t))(v44 + 8);
  swift_bridgeObjectRetain();
  v46(v20, v43);
  sub_10024D364((uint64_t)v24, v38, &qword_100E87E08);
  char v47 = sub_100668E7C();
  uint64_t v48 = 1;
  uint64_t v49 = v80;
  uint64_t v50 = (uint64_t)v81;
  if (v47)
  {
    uint64_t v51 = static VerticalAlignment.top.getter();
    uint64_t v52 = (uint64_t)v63;
    uint64_t *v63 = v51;
    *(void *)(v52 + 8) = 0;
    *(unsigned char *)(v52 + 16) = 1;
    uint64_t v53 = sub_10017DF08(&qword_100E87E40);
    sub_10066F328(v35, (void *)(v52 + *(int *)(v53 + 44)));
    uint64_t v54 = v62;
    sub_10006DF38(v52, v62, &qword_100E87DE0);
    *(unsigned char *)(v54 + *(int *)(v49 + 36)) = 0;
    sub_100178110(v52, &qword_100E87DE0);
    sub_10024D364(v54, v50, &qword_100E87DE8);
    uint64_t v48 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0(v50, v48, 1, v49);
  uint64_t v55 = v79;
  sub_10006DF38(v38, v79, &qword_100E87E08);
  uint64_t v56 = v82;
  sub_10006DF38(v50, v82, &qword_100E87DF0);
  uint64_t v57 = v70;
  *a2 = v77;
  a2[1] = v57;
  uint64_t v58 = v68;
  a2[2] = v69;
  a2[3] = v58;
  uint64_t v59 = v66;
  a2[4] = v67;
  a2[5] = v59;
  a2[6] = v65;
  uint64_t v60 = sub_10017DF08(&qword_100E87E38);
  sub_10006DF38(v55, (uint64_t)a2 + *(int *)(v60 + 48), &qword_100E87E08);
  sub_10006DF38(v56, (uint64_t)a2 + *(int *)(v60 + 64), &qword_100E87DF0);
  swift_retain();
  sub_100178110(v50, &qword_100E87DF0);
  sub_100178110(v38, &qword_100E87E08);
  sub_100178110(v56, &qword_100E87DF0);
  sub_100178110(v55, &qword_100E87E08);
  return swift_release();
}

uint64_t sub_1006699A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6 = sub_10017DF08(&qword_100E87E28);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v8 = static HorizontalAlignment.center.getter();
  *((void *)v8 + 1) = 0;
  v8[16] = 0;
  uint64_t v9 = sub_10017DF08(&qword_100E87E80);
  sub_100669AE4(a1, (uint64_t)&v8[*(int *)(v9 + 44)], a3);
  char v10 = static Edge.Set.bottom.getter();
  swift_beginAccess();
  sub_10059263C();
  EdgeInsets.init(_all:)();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  sub_10006DF38((uint64_t)v8, a2, &qword_100E87E28);
  uint64_t v19 = a2 + *(int *)(sub_10017DF08(&qword_100E87E10) + 36);
  *(unsigned char *)uint64_t v19 = v10;
  *(void *)(v19 + 8) = v12;
  *(void *)(v19 + 16) = v14;
  *(void *)(v19 + 24) = v16;
  *(void *)(v19 + 32) = v18;
  *(unsigned char *)(v19 + 40) = 0;
  return sub_100178110((uint64_t)v8, &qword_100E87E28);
}

uint64_t sub_100669AE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v163 = a2;
  uint64_t v165 = sub_10017DF08(&qword_100E87E88);
  uint64_t v164 = *(void *)(v165 - 8);
  __chkstk_darwin(v165);
  v157 = (char *)&v134 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = sub_10017DF08(&qword_100E7B698);
  __chkstk_darwin(v161);
  v167 = (char *)&v134 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v166 = (uint64_t)&v134 - v8;
  uint64_t v158 = type metadata accessor for DetailNewsComponentView();
  __chkstk_darwin(v158);
  v140 = (uint64_t *)((char *)&v134 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_10017DF08(&qword_100E66E28);
  __chkstk_darwin(v10 - 8);
  uint64_t v172 = (uint64_t)&v134 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = type metadata accessor for DetailComponentContainerViewModel();
  __chkstk_darwin(v156);
  uint64_t v139 = (uint64_t)&v134 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v138 = (uint64_t)&v134 - v14;
  uint64_t v15 = sub_10017DF08(&qword_100E66E30);
  __chkstk_darwin(v15 - 8);
  uint64_t v162 = (uint64_t)&v134 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v160 = (uint64_t)&v134 - v18;
  uint64_t v153 = sub_10017DF08(&qword_100E87E90);
  __chkstk_darwin(v153);
  v155 = (char *)&v134 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_10017DF08(&qword_100E7B690);
  __chkstk_darwin(v154);
  uint64_t v178 = (uint64_t)&v134 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v177 = (uint64_t)&v134 - v22;
  uint64_t v23 = sub_10017DF08(&qword_100E87E98);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (uint64_t *)((char *)&v134 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v152 = sub_10017DF08(&qword_100E7B688);
  __chkstk_darwin(v152);
  uint64_t v159 = (uint64_t)&v134 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v151 = (uint64_t)&v134 - v28;
  __chkstk_darwin(v29);
  uint64_t v176 = (uint64_t)&v134 - v30;
  uint64_t v31 = sub_10017DF08(&qword_100E87EA0);
  __chkstk_darwin(v31 - 8);
  v150 = (uint64_t *)((char *)&v134 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v149 = sub_10017DF08(&qword_100E7B680);
  __chkstk_darwin(v149);
  uint64_t v175 = (uint64_t)&v134 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v148 = (uint64_t)&v134 - v35;
  __chkstk_darwin(v36);
  uint64_t v174 = (uint64_t)&v134 - v37;
  uint64_t v38 = sub_10017DF08(&qword_100E87EA8);
  __chkstk_darwin(v38 - 8);
  uint64_t v40 = (char *)&v134 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_10017DF08(&qword_100E87EB0);
  __chkstk_darwin(v141);
  uint64_t v146 = (uint64_t)&v134 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_10017DF08(&qword_100E87EB8);
  __chkstk_darwin(v143);
  uint64_t v144 = (uint64_t)&v134 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  uint64_t v145 = (uint64_t)&v134 - v44;
  uint64_t v142 = sub_10017DF08(&qword_100E7B678);
  __chkstk_darwin(v142);
  uint64_t v181 = (uint64_t)&v134 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  uint64_t v180 = (uint64_t)&v134 - v47;
  uint64_t v147 = type metadata accessor for MoonDetailRootContentView(0);
  uint64_t v168 = *(void *)(v147 - 8);
  __chkstk_darwin(v147);
  uint64_t v169 = v48;
  uint64_t v49 = (char *)&v134 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = sub_10017DF08(&qword_100E76908);
  uint64_t v136 = *(void *)(v137 - 8);
  __chkstk_darwin(v137);
  uint64_t v51 = (char *)&v134 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_10017DF08(&qword_100E87EC0);
  __chkstk_darwin(v52);
  uint64_t v54 = (char *)&v134 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_10017DF08(&qword_100E7B668);
  __chkstk_darwin(v55 - 8);
  uint64_t v173 = (uint64_t)&v134 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v57);
  uint64_t v59 = (char *)&v134 - v58;
  char v60 = sub_100668E7C();
  uint64_t v171 = a1;
  v179 = v59;
  v170 = v49;
  if (v60)
  {
    swift_beginAccess();
    uint64_t v61 = sub_1009D94A0();
    v135 = v25;
    uint64_t v62 = v61;
    sub_1009D9534();
    swift_endAccess();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    *(void *)&long long v182 = v62;
    *((void *)&v182 + 1) = v187;
    LOBYTE(v183) = v188;
    uint64_t v184 = v189;
    LOBYTE(v185) = v190;
    long long v186 = v191;
    sub_100673970(a1, (uint64_t)v49, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
    unint64_t v63 = (*(unsigned __int8 *)(v168 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v168 + 80);
    uint64_t v64 = swift_allocObject();
    sub_100681A50((uint64_t)v49, v64 + v63, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
    sub_10017DF08(&qword_100E64F58);
    sub_10017DF08(&qword_100E76918);
    sub_10027C9F0();
    uint64_t v65 = type metadata accessor for EmptyVisualEffect();
    uint64_t v66 = sub_100681CB8(&qword_100E76920, (void (*)(uint64_t))&type metadata accessor for EmptyVisualEffect);
    *(void *)&long long v192 = v65;
    *((void *)&v192 + 1) = v66;
    swift_getOpaqueTypeConformance2();
    uint64_t v49 = v170;
    uint64_t v59 = v179;
    a1 = v171;
    View.visualEffect<A>(_:)();
    uint64_t v25 = v135;
    swift_release();
    swift_release();
    uint64_t v67 = v136;
    uint64_t v68 = v137;
    (*(void (**)(char *, char *, uint64_t))(v136 + 16))(v54, v51, v137);
    *(void *)&v54[*(int *)(v52 + 36)] = 0x40C1940000000000;
    (*(void (**)(char *, uint64_t))(v67 + 8))(v51, v68);
    sub_10024D364((uint64_t)v54, (uint64_t)v59, &qword_100E87EC0);
    uint64_t v69 = 0;
  }
  else
  {
    uint64_t v69 = 1;
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, v69, 1, v52);
  *(void *)uint64_t v40 = static HorizontalAlignment.center.getter();
  *((void *)v40 + 1) = 0;
  v40[16] = 0;
  uint64_t v70 = sub_10017DF08(&qword_100E87EC8);
  sub_100670180(a1, (uint64_t)&v40[*(int *)(v70 + 44)]);
  swift_beginAccess();
  sub_1009D97AC();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v71 = v146;
  sub_10006DF38((uint64_t)v40, v146, &qword_100E87EA8);
  uint64_t v72 = (_OWORD *)(v71 + *(int *)(v141 + 36));
  long long v73 = v193;
  _OWORD *v72 = v192;
  v72[1] = v73;
  v72[2] = v194;
  sub_100178110((uint64_t)v40, &qword_100E87EA8);
  sub_100673970(a1, (uint64_t)v49, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  uint64_t v74 = *(unsigned __int8 *)(v168 + 80);
  uint64_t v75 = (v74 + 16) & ~v74;
  v169 += v75;
  uint64_t v168 = v74 | 7;
  uint64_t v76 = swift_allocObject();
  sub_100681A50((uint64_t)v49, v76 + v75, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  uint64_t v77 = v144;
  sub_10006DF38(v71, v144, &qword_100E87EB0);
  uint64_t v78 = (void *)(v77 + *(int *)(v143 + 36));
  *uint64_t v78 = sub_10066FCFC;
  v78[1] = 0;
  v78[2] = sub_100681C84;
  v78[3] = v76;
  sub_100178110(v71, &qword_100E87EB0);
  uint64_t v79 = v77;
  uint64_t v80 = v145;
  sub_10024D364(v79, v145, &qword_100E87EB8);
  uint64_t v81 = v181;
  sub_10006DF38(v80, v181, &qword_100E87EB8);
  *(void *)(v81 + *(int *)(v142 + 36)) = 0x40C3880000000000;
  sub_100178110(v80, &qword_100E87EB8);
  sub_10024D364(v81, v180, &qword_100E7B678);
  uint64_t v82 = static Alignment.top.getter();
  uint64_t v83 = (uint64_t)v150;
  uint64_t *v150 = v82;
  *(void *)(v83 + 8) = v84;
  uint64_t v85 = sub_10017DF08(&qword_100E87ED0);
  sub_10066B3CC(a1, (void *)(v83 + *(int *)(v85 + 44)), a3);
  uint64_t v86 = v148;
  sub_10006DF38(v83, v148, &qword_100E87EA0);
  *(void *)(v86 + *(int *)(v149 + 36)) = 0x40BF400000000000;
  sub_100178110(v83, &qword_100E87EA0);
  sub_10024D364(v86, v174, &qword_100E7B680);
  uint64_t *v25 = static Alignment.bottom.getter();
  v25[1] = v87;
  uint64_t v88 = sub_10017DF08(&qword_100E87ED8);
  sub_10066C100(a1, (uint64_t *)((char *)v25 + *(int *)(v88 + 44)));
  uint64_t v89 = v151;
  sub_10006DF38((uint64_t)v25, v151, &qword_100E87E98);
  *(void *)(v89 + *(int *)(v152 + 36)) = 0x40BB580000000000;
  sub_100178110((uint64_t)v25, &qword_100E87E98);
  sub_10024D364(v89, v176, &qword_100E7B688);
  uint64_t v90 = v147;
  uint64_t v91 = a1 + *(int *)(v147 + 28);
  uint64_t v92 = (int *)type metadata accessor for MoonDetailViewModel.Model(0);
  uint64_t v93 = v91 + v92[11];
  uint64_t v94 = (void *)(a1 + *(int *)(v90 + 32));
  uint64_t v95 = v94[3];
  uint64_t v96 = v94[4];
  uint64_t v97 = sub_1001B1E64(v94, v95);
  uint64_t v98 = (int *)v153;
  uint64_t v99 = (uint64_t)v155;
  uint64_t v100 = (uint64_t *)&v155[*(int *)(v153 + 40)];
  v100[3] = v95;
  v100[4] = *(void *)(v96 + 8);
  uint64_t v101 = sub_100170694(v100);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v95 - 8) + 16))(v101, v97, v95);
  sub_100673970(v93, v99, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  *(unsigned char *)(v99 + v98[9]) = 0;
  uint64_t v102 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v99 + v98[11]);
  *uint64_t v102 = sub_10066F050;
  v102[1] = 0;
  uint64_t v103 = v98[12];
  swift_beginAccess();
  *(double *)(v99 + v103) = sub_100592380();
  uint64_t v104 = v178;
  sub_10006DF38(v99, v178, &qword_100E87E90);
  *(void *)(v104 + *(int *)(v154 + 36)) = 0x40B7700000000000;
  sub_100178110(v99, &qword_100E87E90);
  sub_10024D364(v104, v177, &qword_100E7B690);
  uint64_t v105 = v172;
  sub_10006DF38(v91 + v92[13], v172, &qword_100E66E28);
  if (_s7Weather24LocationCompositionStateOwet_0(v105, 1, v156) == 1)
  {
    sub_100178110(v172, &qword_100E66E28);
    uint64_t v106 = 1;
    uint64_t v107 = v160;
    uint64_t v108 = v158;
  }
  else
  {
    uint64_t v109 = v138;
    sub_100681A50(v172, v138, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
    uint64_t v110 = v139;
    sub_100673970(v109, v139, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
    uint64_t v111 = v94[3];
    uint64_t v112 = v94[4];
    uint64_t v113 = sub_1001B1E64(v94, v111);
    uint64_t v184 = v111;
    uint64_t v185 = *(void *)(v112 + 8);
    long long v114 = sub_100170694((uint64_t *)&v182);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v111 - 8) + 16))(v114, v113, v111);
    sub_1006739F4();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v116 = (uint64_t)v140;
    uint64_t *v140 = KeyPath;
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    swift_storeEnumTagMultiPayload();
    uint64_t v108 = v158;
    sub_100681A50(v110, v116 + *(int *)(v158 + 20), (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
    sub_1001262E4(&v182, v116 + *(int *)(v108 + 24));
    *(unsigned char *)(v116 + *(int *)(v108 + 28)) = 0;
    uint64_t v107 = v160;
    sub_100681A50(v116, v160, (void (*)(void))type metadata accessor for DetailNewsComponentView);
    uint64_t v106 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0(v107, v106, 1, v108);
  *(void *)&long long v182 = *(void *)(v91 + v92[12]);
  uint64_t v117 = (uint64_t)v170;
  sub_100673970(v171, (uint64_t)v170, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  uint64_t v118 = swift_allocObject();
  sub_100681A50(v117, v118 + v75, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100E81F20);
  sub_10017DF08(&qword_100E66E38);
  sub_1001246C8(&qword_100E81F30, &qword_100E81F20);
  sub_1001246C8((unint64_t *)&qword_100E87EE0, &qword_100E66E38);
  sub_100681CB8(&qword_100E81F40, (void (*)(uint64_t))type metadata accessor for ConditionDetailPlatterViewModel);
  uint64_t v119 = v157;
  ForEach<>.init(_:content:)();
  uint64_t v120 = v164;
  uint64_t v121 = (uint64_t)v167;
  uint64_t v122 = v165;
  (*(void (**)(char *, char *, uint64_t))(v164 + 16))(v167, v119, v165);
  *(void *)(v121 + *(int *)(v161 + 36)) = 0x40B3880000000000;
  (*(void (**)(char *, uint64_t))(v120 + 8))(v119, v122);
  uint64_t v123 = v166;
  sub_10024D364(v121, v166, &qword_100E7B698);
  uint64_t v124 = v173;
  sub_10006DF38((uint64_t)v179, v173, &qword_100E7B668);
  *(void *)&long long v182 = v124;
  uint64_t v125 = v181;
  sub_10006DF38(v180, v181, &qword_100E7B678);
  *((void *)&v182 + 1) = v125;
  uint64_t v126 = v174;
  uint64_t v127 = v175;
  sub_10006DF38(v174, v175, &qword_100E7B680);
  uint64_t v183 = v127;
  uint64_t v128 = v176;
  uint64_t v129 = v159;
  sub_10006DF38(v176, v159, &qword_100E7B688);
  uint64_t v184 = v129;
  uint64_t v130 = v177;
  uint64_t v131 = v178;
  sub_10006DF38(v177, v178, &qword_100E7B690);
  uint64_t v185 = v131;
  uint64_t v132 = v162;
  sub_10006DF38(v107, v162, &qword_100E66E30);
  *(void *)&long long v186 = v132;
  sub_10006DF38(v123, v121, &qword_100E7B698);
  *((void *)&v186 + 1) = v121;
  sub_1004B9250((uint64_t)&v182);
  sub_100178110(v123, &qword_100E7B698);
  sub_100178110(v107, &qword_100E66E30);
  sub_100178110(v130, &qword_100E7B690);
  sub_100178110(v128, &qword_100E7B688);
  sub_100178110(v126, &qword_100E7B680);
  sub_100178110(v180, &qword_100E7B678);
  sub_100178110((uint64_t)v179, &qword_100E7B668);
  sub_100178110(v121, &qword_100E7B698);
  sub_100178110(v132, &qword_100E66E30);
  sub_100178110(v131, &qword_100E7B690);
  sub_100178110(v129, &qword_100E7B688);
  sub_100178110(v175, &qword_100E7B680);
  sub_100178110(v181, &qword_100E7B678);
  return sub_100178110(v173, &qword_100E7B668);
}

double sub_10066B170(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for MoonDetailRootContentView(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v30 - v14;
  uint64_t v17 = v5 + *(int *)(v16 + 28);
  LODWORD(v17) = *(unsigned __int8 *)(v17 + *(int *)(type metadata accessor for MoonDetailViewModel.Model(0) + 60));
  sub_100673970(v5, (uint64_t)v15, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  if (v17 != 1) {
    goto LABEL_4;
  }
  uint64_t v18 = &v15[*(int *)(v10 + 20)];
  uint64_t v19 = *(void *)v18;
  char v20 = v18[8];
  sub_100195B7C(*(void *)v18, v20);
  sub_100149AE8();
  char v22 = v21;
  sub_10018F6D8(v19, v20);
  sub_100673970((uint64_t)v15, (uint64_t)v12, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  if (v22)
  {
    sub_1006739F4();
LABEL_4:
    sub_1006739F4();
    return 0.0;
  }
  uint64_t v25 = &v12[*(int *)(v10 + 24)];
  uint64_t v26 = *(void *)v25;
  char v27 = v25[8];
  sub_100195B7C(*(void *)v25, v27);
  sub_100149AE8();
  char v29 = v28;
  sub_10018F6D8(v26, v27);
  sub_1006739F4();
  sub_1006739F4();
  double v23 = 0.0;
  if ((v29 & 1) == 0)
  {
    v31.origin.x = a1;
    v31.origin.y = a2;
    v31.size.width = a3;
    v31.size.height = a4;
    if (CGRectGetMinY(v31) < 0.0)
    {
      v32.origin.x = a1;
      v32.origin.y = a2;
      v32.size.width = a3;
      v32.size.height = a4;
      return 0.0 - CGRectGetMinY(v32);
    }
  }
  return v23;
}

uint64_t sub_10066B3CC@<X0>(uint64_t a1@<X0>, void *a2@<X8>, double a3@<D0>)
{
  uint64_t v6 = type metadata accessor for MoonDetailRootContentView(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = sub_10017DF08(&qword_100E88088);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v12);
  uint64_t v14 = &v27[-v13 - 8];
  sub_10066B7DC((uint64_t)v34, a3);
  if (sub_100668E7C())
  {
    swift_beginAccess();
    uint64_t v15 = sub_1009D94A0();
    sub_1009D9648();
    swift_endAccess();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    v29[0] = v15;
    v29[1] = v29[34];
    LOBYTE(v29[2]) = v30;
    v29[3] = v31;
    LOBYTE(v29[4]) = v32;
    *(_OWORD *)&void v29[5] = v33;
    sub_100673970(a1, (uint64_t)&v27[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], (void (*)(void))type metadata accessor for MoonDetailRootContentView);
    unint64_t v16 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v17 = swift_allocObject();
    sub_100681A50((uint64_t)&v27[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], v17 + v16, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
    sub_10017DF08(&qword_100E64F58);
    sub_10017DF08(&qword_100E76928);
    sub_10027C9F0();
    uint64_t v18 = sub_10018C6DC(&qword_100E76918);
    uint64_t v19 = type metadata accessor for EmptyVisualEffect();
    uint64_t v20 = sub_100681CB8(&qword_100E76920, (void (*)(uint64_t))&type metadata accessor for EmptyVisualEffect);
    v28[0] = v19;
    v28[1] = v20;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v28[0] = v18;
    v28[1] = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    View.visualEffect<A>(_:)();
    swift_release();
    swift_release();
    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v22 = 1;
  }
  uint64_t v23 = sub_10017DF08(&qword_100E76900);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, v22, 1, v23);
  memcpy(v27, v34, sizeof(v27));
  sub_10006DF38((uint64_t)v14, (uint64_t)v11, &qword_100E88088);
  memcpy(v28, v27, sizeof(v28));
  memcpy(a2, v27, 0x110uLL);
  uint64_t v24 = sub_10017DF08(&qword_100E88090);
  sub_10006DF38((uint64_t)v11, (uint64_t)a2 + *(int *)(v24 + 48), &qword_100E88088);
  sub_1006822F4((uint64_t)v28);
  sub_100178110((uint64_t)v14, &qword_100E88088);
  sub_100178110((uint64_t)v11, &qword_100E88088);
  memcpy(v29, v27, 0x110uLL);
  return sub_100682340((uint64_t)v29);
}

double sub_10066B7DC@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for MoonDetailRootContentView(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6 - 8);
  uint64_t v56 = static Alignment.center.getter();
  uint64_t v55 = v9;
  swift_beginAccess();
  double v44 = sub_1009D97DC();
  sub_1009D97DC();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v54 = v62;
  char v10 = v63;
  uint64_t v53 = v64;
  char v11 = v65;
  uint64_t v52 = v66;
  uint64_t v51 = v67;
  int v50 = static Edge.Set.top.getter();
  sub_100720F04();
  EdgeInsets.init(_all:)();
  uint64_t v49 = v12;
  uint64_t v48 = v13;
  uint64_t v47 = v14;
  uint64_t v46 = v15;
  int v45 = static Edge.Set.bottom.getter();
  sub_1009D9800();
  EdgeInsets.init(_all:)();
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  double v43 = v20;
  uint64_t v22 = v21;
  char v23 = static Edge.Set.horizontal.getter();
  sub_1009D97DC();
  EdgeInsets.init(_all:)();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  if (sub_100668E7C())
  {
    swift_beginAccess();
    uint64_t v32 = sub_1009D94A0();
    swift_endAccess();
  }
  else
  {
    uint64_t v32 = static Color.clear.getter();
  }
  char v60 = v63;
  double v33 = a2 - (v44 + v44);
  char v59 = v65;
  char v58 = 0;
  char v61 = 0;
  char v57 = 0;
  char v34 = static Edge.Set.all.getter();
  sub_100673970(v3, (uint64_t)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  unint64_t v35 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v36 = swift_allocObject();
  sub_100681A50((uint64_t)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v36 + v35, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  uint64_t v37 = v55;
  *(void *)a1 = v56;
  *(void *)(a1 + 8) = v37;
  *(double *)(a1 + 16) = v33;
  *(void *)(a1 + 24) = v54;
  *(unsigned char *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v53;
  *(unsigned char *)(a1 + 48) = v11;
  uint64_t v38 = v51;
  *(void *)(a1 + 56) = v52;
  *(void *)(a1 + 64) = v38;
  *(_WORD *)(a1 + 72) = 0;
  *(unsigned char *)(a1 + 80) = v50;
  uint64_t v39 = v48;
  *(void *)(a1 + 88) = v49;
  *(void *)(a1 + 96) = v39;
  uint64_t v40 = v46;
  *(void *)(a1 + 104) = v47;
  *(void *)(a1 + 112) = v40;
  *(unsigned char *)(a1 + 120) = 0;
  *(unsigned char *)(a1 + 128) = v45;
  *(void *)(a1 + 136) = v17;
  *(void *)(a1 + 144) = v19;
  double result = v43;
  *(double *)(a1 + 152) = v43;
  *(void *)(a1 + 160) = v22;
  *(unsigned char *)(a1 + 168) = 0;
  *(unsigned char *)(a1 + 176) = v23;
  *(void *)(a1 + 184) = v25;
  *(void *)(a1 + 192) = v27;
  *(void *)(a1 + 200) = v29;
  *(void *)(a1 + 208) = v31;
  *(unsigned char *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = v32;
  *(unsigned char *)(a1 + 232) = v34;
  *(void *)(a1 + 240) = sub_10066FCFC;
  *(void *)(a1 + 248) = 0;
  *(void *)(a1 + 256) = sub_1006823C0;
  *(void *)(a1 + 264) = v36;
  return result;
}

uint64_t sub_10066BBA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v64 = a1;
  uint64_t v70 = a4;
  uint64_t v6 = type metadata accessor for CoordinateSpace();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E76918);
  uint64_t v68 = *(void *)(v10 - 8);
  uint64_t v69 = v10;
  __chkstk_darwin(v10);
  uint64_t v71 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for MoonDetailRootContentView(0);
  uint64_t v13 = (uint64_t *)(a3 + *(int *)(v12 + 64));
  uint64_t v14 = v13[1];
  uint64_t v75 = *v13;
  uint64_t v76 = v14;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  uint64_t v15 = enum case for CoordinateSpace.named(_:);
  uint64_t v62 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v62(v9, enum case for CoordinateSpace.named(_:), v6);
  uint64_t v66 = a2;
  GeometryProxy.frame(in:)();
  CGFloat v17 = v16;
  CGFloat v19 = v18;
  CGFloat v21 = v20;
  CGFloat v23 = v22;
  uint64_t v24 = *(void (**)(char *, uint64_t))(v7 + 8);
  v24(v9, v6);
  swift_beginAccess();
  double v25 = sub_1009D9534();
  char v61 = (int *)v12;
  uint64_t v26 = (uint64_t *)(a3 + *(int *)(v12 + 44));
  uint64_t v27 = v26[1];
  uint64_t v72 = *v26;
  uint64_t v73 = v27;
  uint64_t v65 = sub_10017DF08(&qword_100E64490);
  State.wrappedValue.getter();
  double v28 = v74;
  uint64_t v67 = a3;
  if (sub_100668E7C())
  {
    v77.origin.x = v17;
    v77.origin.y = v19;
    v77.size.width = v21;
    v77.size.height = v23;
    if (CGRectGetMinY(v77) < v25 + v28)
    {
      v78.origin.x = v17;
      v78.origin.y = v19;
      v78.size.width = v21;
      v78.size.height = v23;
      CGRectGetMinY(v78);
    }
  }
  uint64_t v29 = type metadata accessor for EmptyVisualEffect();
  uint64_t v63 = sub_100681CB8(&qword_100E76920, (void (*)(uint64_t))&type metadata accessor for EmptyVisualEffect);
  VisualEffect.offset(x:y:)();
  uint64_t v30 = v13[1];
  uint64_t v72 = *v13;
  uint64_t v73 = v30;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  v62(v9, v15, v6);
  GeometryProxy.frame(in:)();
  CGFloat v32 = v31;
  CGFloat v34 = v33;
  CGFloat v36 = v35;
  CGFloat v38 = v37;
  v24(v9, v6);
  double v39 = sub_1009D9534();
  uint64_t v40 = v26[1];
  uint64_t v72 = *v26;
  uint64_t v73 = v40;
  State.wrappedValue.getter();
  double v41 = v74;
  uint64_t v42 = v67;
  if (sub_100668E7C())
  {
    v79.origin.x = v32;
    v79.origin.y = v34;
    v79.size.width = v36;
    v79.size.height = v38;
    if (CGRectGetMinY(v79) < v39 + v41)
    {
      v80.origin.x = v32;
      v80.origin.y = v34;
      v80.size.width = v36;
      v80.size.height = v38;
      CGRectGetMinY(v80);
      uint64_t v43 = v29;
      double v44 = v61;
      int v45 = (uint64_t *)(v42 + v61[10]);
      uint64_t v46 = *v45;
      uint64_t v47 = v45[1];
      uint64_t v72 = v46;
      uint64_t v73 = v47;
      State.wrappedValue.getter();
      uint64_t v48 = (uint64_t *)(v42 + v44[12]);
      uint64_t v49 = *v48;
      uint64_t v50 = v48[1];
      uint64_t v72 = v49;
      uint64_t v73 = v50;
      State.wrappedValue.getter();
      uint64_t v51 = (uint64_t *)(v42 + v44[13]);
      uint64_t v52 = *v51;
      uint64_t v53 = v51[1];
      uint64_t v72 = v52;
      uint64_t v73 = v53;
      State.wrappedValue.getter();
      uint64_t v54 = v44[14];
      uint64_t v29 = v43;
      uint64_t v55 = (uint64_t *)(v42 + v54);
      uint64_t v56 = *v55;
      uint64_t v57 = v55[1];
      uint64_t v72 = v56;
      uint64_t v73 = v57;
      State.wrappedValue.getter();
    }
  }
  uint64_t v72 = v29;
  uint64_t v73 = v63;
  swift_getOpaqueTypeConformance2();
  uint64_t v58 = v69;
  char v59 = v71;
  VisualEffect.opacity(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v59, v58);
}

uint64_t sub_10066C100@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v100 = a2;
  uint64_t v88 = sub_10017DF08(&qword_100E87EF0);
  __chkstk_darwin(v88);
  uint64_t v85 = (uint64_t (**)(uint64_t))((char *)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v99 = sub_10017DF08(&qword_100E87EF8);
  uint64_t v86 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v84 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E7CB90);
  __chkstk_darwin(v5 - 8);
  uint64_t v95 = (uint64_t)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = (void (*)(void))type metadata accessor for MoonCompactOverviewTableViewModel(0);
  uint64_t v80 = *((void *)v94 - 1);
  __chkstk_darwin(v94);
  uint64_t v82 = (uint64_t)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v83 = (uint64_t)&v80 - v9;
  uint64_t v81 = v10;
  __chkstk_darwin(v11);
  uint64_t v87 = (uint64_t)&v80 - v12;
  uint64_t v13 = sub_10017DF08(&qword_100E87F00);
  __chkstk_darwin(v13 - 8);
  uint64_t v98 = (uint64_t)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v97 = (char *)&v80 - v16;
  uint64_t v17 = type metadata accessor for MoonDetailRootContentView(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  __chkstk_darwin(v17);
  uint64_t v108 = (uint64_t)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for OverviewTableViewModel();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(void *)(v21 + 64);
  __chkstk_darwin(v20);
  CGFloat v23 = (char *)&v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v80 - v25;
  uint64_t v105 = sub_10017DF08(&qword_100E87F08);
  __chkstk_darwin(v105);
  uint64_t v93 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))((char *)&v80 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = sub_10017DF08(&qword_100E87F10);
  uint64_t v101 = *(void *)(v28 - 8);
  uint64_t v102 = v28;
  __chkstk_darwin(v28);
  uint64_t v106 = (char *)&v80 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v109 = (char *)&v80 - v31;
  uint64_t v32 = 0;
  if (sub_100668E7C())
  {
    swift_beginAccess();
    uint64_t v32 = sub_1009D94A0();
    swift_endAccess();
  }
  uint64_t v96 = v32;
  uint64_t v92 = a1 + *(int *)(v17 + 28);
  uint64_t v33 = v92;
  uint64_t v91 = type metadata accessor for MoonDetailViewModel.Model(0);
  uint64_t v34 = v33 + *(int *)(v91 + 36);
  uint64_t v107 = a1;
  double v35 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v35(v26, v34, v20);
  uint64_t v90 = type metadata accessor for MoonDetailRootContentView;
  uint64_t v36 = v108;
  sub_100673970(v107, v108, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  uint64_t v37 = *(unsigned __int8 *)(v18 + 80);
  CGFloat v38 = v26;
  double v39 = (uint64_t (*)(uint64_t))((v37 + 16) & ~v37);
  uint64_t v103 = v37 | 7;
  uint64_t v104 = (char *)v39 + v19;
  uint64_t v40 = swift_allocObject();
  uint64_t v89 = type metadata accessor for MoonDetailRootContentView;
  sub_100681A50(v36, (uint64_t)v39 + v40, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  uint64_t v41 = (uint64_t)v93;
  *uint64_t v93 = sub_100681D28;
  *(void *)(v41 + 8) = v40;
  v35((char *)(v41 + *(int *)(v105 + 56)), (uint64_t)v38, v20);
  v35(v23, (uint64_t)v38, v20);
  unint64_t v42 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v43 = v42 + v22;
  uint64_t v44 = swift_allocObject();
  unint64_t v45 = ((v42 + v22) & 0xFFFFFFFFFFFFFFF8) + v44;
  unint64_t v46 = v44 + v42;
  uint64_t v47 = v107;
  (*(void (**)(unint64_t, char *, uint64_t))(v21 + 32))(v46, v23, v20);
  *(unsigned char *)(v44 + v43) = 1;
  *(void *)(v45 + 8) = 0x3FB999999999999ALL;
  (*(void (**)(char *, uint64_t))(v21 + 8))(v38, v20);
  *(void *)(v41 + 16) = sub_100681E08;
  *(void *)(v41 + 24) = v44;
  *(unsigned char *)(v41 + 32) = 0;
  uint64_t v48 = v108;
  sub_100673970(v47, v108, (void (*)(void))v90);
  uint64_t v49 = swift_allocObject();
  uint64_t v90 = v39;
  sub_100681A50(v48, (uint64_t)v39 + v49, (void (*)(void))v89);
  sub_10017DF08(&qword_100E87F18);
  sub_1001246C8(&qword_100E87F20, &qword_100E87F08);
  uint64_t v50 = type metadata accessor for EmptyVisualEffect();
  uint64_t v51 = sub_100681CB8(&qword_100E76920, (void (*)(uint64_t))&type metadata accessor for EmptyVisualEffect);
  uint64_t v110 = v50;
  uint64_t v111 = v51;
  swift_getOpaqueTypeConformance2();
  uint64_t v52 = v106;
  View.visualEffect<A>(_:)();
  swift_release();
  sub_100178110(v41, &qword_100E87F08);
  uint64_t v53 = v101;
  uint64_t v54 = v102;
  (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v109, v52, v102);
  uint64_t v55 = v95;
  sub_10006DF38(v92 + *(int *)(v91 + 40), v95, &qword_100E7CB90);
  if (_s7Weather24LocationCompositionStateOwet_0(v55, 1, (uint64_t)v94) == 1)
  {
    sub_100178110(v55, &qword_100E7CB90);
LABEL_8:
    uint64_t v72 = 1;
    uint64_t v71 = v99;
    uint64_t v70 = (uint64_t)v97;
    goto LABEL_9;
  }
  uint64_t v105 = v51;
  uint64_t v56 = v87;
  sub_100681A50(v55, v87, (void (*)(void))type metadata accessor for MoonCompactOverviewTableViewModel);
  if ((sub_100668E7C() & 1) == 0)
  {
    sub_1006739F4();
    goto LABEL_8;
  }
  uint64_t v57 = v83;
  sub_100673970(v56, v83, (void (*)(void))type metadata accessor for MoonCompactOverviewTableViewModel);
  uint64_t v94 = (void (*)(void))type metadata accessor for MoonDetailRootContentView;
  uint64_t v58 = v108;
  sub_100673970(v47, v108, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  uint64_t v59 = swift_allocObject();
  sub_100681A50(v58, (uint64_t)v90 + v59, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  uint64_t v95 = v50;
  uint64_t v60 = (uint64_t)v85;
  *uint64_t v85 = sub_100681F08;
  *(void *)(v60 + 8) = v59;
  sub_100673970(v57, v60 + *(int *)(v88 + 56), (void (*)(void))type metadata accessor for MoonCompactOverviewTableViewModel);
  uint64_t v61 = v82;
  sub_100673970(v57, v82, (void (*)(void))type metadata accessor for MoonCompactOverviewTableViewModel);
  unint64_t v62 = (*(unsigned __int8 *)(v80 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
  uint64_t v63 = v62 + v81;
  unint64_t v64 = (v62 + v81) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v65 = swift_allocObject();
  sub_100681A50(v61, v65 + v62, (void (*)(void))type metadata accessor for MoonCompactOverviewTableViewModel);
  *(unsigned char *)(v65 + v63) = 1;
  *(void *)(v64 + v65 + 8) = 0x3FE0000000000000;
  sub_1006739F4();
  *(void *)(v60 + 16) = sub_1006820AC;
  *(void *)(v60 + 24) = v65;
  *(unsigned char *)(v60 + 32) = 0;
  uint64_t v53 = v101;
  sub_100673970(v107, v58, v94);
  uint64_t v66 = swift_allocObject();
  sub_100681A50(v58, (uint64_t)v90 + v66, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  sub_10017DF08(&qword_100E76928);
  sub_1001246C8(&qword_100E87F30, &qword_100E87EF0);
  uint64_t v67 = sub_10018C6DC(&qword_100E76918);
  uint64_t v110 = v95;
  uint64_t v111 = v105;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v110 = v67;
  uint64_t v111 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v69 = v84;
  uint64_t v54 = v102;
  View.visualEffect<A>(_:)();
  swift_release();
  sub_100178110(v60, &qword_100E87EF0);
  sub_1006739F4();
  uint64_t v70 = (uint64_t)v97;
  uint64_t v71 = v99;
  (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v97, v69, v99);
  uint64_t v72 = 0;
LABEL_9:
  _s7Weather24LocationCompositionStateOwst_0(v70, v72, 1, v71);
  uint64_t v73 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
  double v74 = v106;
  v73(v106, v109, v54);
  uint64_t v75 = v98;
  sub_10006DF38(v70, v98, &qword_100E87F00);
  uint64_t v76 = v100;
  *uint64_t v100 = v96;
  uint64_t v77 = sub_10017DF08(&qword_100E87F28);
  v73((char *)v76 + *(int *)(v77 + 48), v74, v54);
  sub_10006DF38(v75, (uint64_t)v76 + *(int *)(v77 + 64), &qword_100E87F00);
  swift_retain();
  sub_100178110(v70, &qword_100E87F00);
  CGRect v78 = *(void (**)(char *, uint64_t))(v53 + 8);
  v78(v109, v54);
  sub_100178110(v75, &qword_100E87F00);
  v78(v74, v54);
  return swift_release();
}

uint64_t sub_10066CDC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v51 = a1;
  uint64_t v63 = a2;
  uint64_t v2 = type metadata accessor for MoonDetailRootContentView(0);
  uint64_t v60 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v61 = v3;
  uint64_t v62 = (uint64_t)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OverviewTableViewModel();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_10017DF08(&qword_100E88048);
  __chkstk_darwin(v53);
  uint64_t v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_10017DF08(&qword_100E88050);
  uint64_t v10 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_10017DF08(&qword_100E88058);
  __chkstk_darwin(v52);
  uint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_10017DF08(&qword_100E88060);
  __chkstk_darwin(v54);
  uint64_t v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_10017DF08(&qword_100E88068);
  __chkstk_darwin(v56);
  uint64_t v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_10017DF08(&qword_100E88070);
  __chkstk_darwin(v57);
  uint64_t v58 = (uint64_t)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v9 = static HorizontalAlignment.center.getter();
  *((void *)v9 + 1) = 0;
  v9[16] = 0;
  sub_10017DF08(&qword_100E88078);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v51, v4);
  swift_beginAccess();
  sub_1009D9714();
  sub_1009D973C();
  OverviewTableView.init(model:rowVerticalPadding:rowHorizontalPadding:showDividerOnFirstRow:titleFont:valueFont:)();
  if (qword_100E62450 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_10058C830();
  sub_10058C87C();
  swift_endAccess();
  sub_1001246C8(&qword_100E88080, &qword_100E88048);
  View.overviewTableBackground(_:_:)();
  swift_release();
  sub_100178110((uint64_t)v9, &qword_100E88048);
  char v20 = static Edge.Set.horizontal.getter();
  sub_1009D96F4();
  EdgeInsets.init(_all:)();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v29 = v55;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v12, v55);
  uint64_t v30 = &v14[*(int *)(v52 + 36)];
  *uint64_t v30 = v20;
  *((void *)v30 + 1) = v22;
  *((void *)v30 + 2) = v24;
  *((void *)v30 + 3) = v26;
  *((void *)v30 + 4) = v28;
  v30[40] = 0;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v29);
  char v31 = static Edge.Set.bottom.getter();
  uint64_t v32 = v59;
  sub_100668E7C();
  EdgeInsets.init(_all:)();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  sub_10006DF38((uint64_t)v14, (uint64_t)v16, &qword_100E88058);
  uint64_t v41 = &v16[*(int *)(v54 + 36)];
  *uint64_t v41 = v31;
  *((void *)v41 + 1) = v34;
  *((void *)v41 + 2) = v36;
  *((void *)v41 + 3) = v38;
  *((void *)v41 + 4) = v40;
  v41[40] = 0;
  sub_100178110((uint64_t)v14, &qword_100E88058);
  if (sub_100668E7C())
  {
    swift_beginAccess();
    uint64_t v42 = sub_1009D94A0();
    swift_endAccess();
  }
  else
  {
    uint64_t v42 = static Color.clear.getter();
  }
  char v43 = static Edge.Set.all.getter();
  sub_10006DF38((uint64_t)v16, (uint64_t)v18, &qword_100E88060);
  uint64_t v44 = &v18[*(int *)(v56 + 36)];
  *(void *)uint64_t v44 = v42;
  v44[8] = v43;
  sub_100178110((uint64_t)v16, &qword_100E88060);
  uint64_t v45 = v62;
  sub_100673970(v32, v62, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  unint64_t v46 = (*(unsigned __int8 *)(v60 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  uint64_t v47 = swift_allocObject();
  sub_100681A50(v45, v47 + v46, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  uint64_t v48 = v58;
  sub_10006DF38((uint64_t)v18, v58, &qword_100E88068);
  uint64_t v49 = (void *)(v48 + *(int *)(v57 + 36));
  *uint64_t v49 = sub_10066FCFC;
  v49[1] = 0;
  v49[2] = sub_1006822DC;
  v49[3] = v47;
  sub_100178110((uint64_t)v18, &qword_100E88068);
  return sub_10024D364(v48, v63, &qword_100E88070);
}

uint64_t sub_10066D4D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for CoordinateSpace();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)(a3 + *(int *)(type metadata accessor for MoonDetailRootContentView(0) + 64));
  uint64_t v9 = v8[1];
  v19[0] = *v8;
  v19[1] = v9;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for CoordinateSpace.named(_:), v4);
  GeometryProxy.frame(in:)();
  CGFloat v11 = v10;
  CGFloat v13 = v12;
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_10066D6AC(v11, v13, v15, v17);
  type metadata accessor for EmptyVisualEffect();
  sub_100681CB8(&qword_100E76920, (void (*)(uint64_t))&type metadata accessor for EmptyVisualEffect);
  return VisualEffect.opacity(_:)();
}

double sub_10066D6AC(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  swift_beginAccess();
  double v7 = sub_1009D9534();
  type metadata accessor for MoonDetailRootContentView(0);
  sub_10017DF08(&qword_100E64490);
  State.wrappedValue.getter();
  State.wrappedValue.getter();
  double v8 = 1.0;
  if (sub_100668E7C())
  {
    double v9 = v7 + v15 + v15;
    v16.origin.x = a1;
    v16.origin.y = a2;
    v16.size.width = a3;
    v16.size.height = a4;
    if (CGRectGetMinY(v16) < v9)
    {
      v17.origin.x = a1;
      v17.origin.y = a2;
      v17.size.width = a3;
      v17.size.height = a4;
      double v10 = v9 - CGRectGetMinY(v17) + 0.0;
      State.wrappedValue.getter();
      State.wrappedValue.getter();
      State.wrappedValue.getter();
      State.wrappedValue.getter();
      double v11 = v10 - (v15 + v15 - v15 + v15) + sub_1009D9820();
      double v12 = 1.0 - v11 / sub_1009D9820();
      if (v12 > 0.0) {
        return v12;
      }
      else {
        return 0.0;
      }
    }
  }
  return v8;
}

uint64_t sub_10066D8E0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  *a2 = static Axis.Set.horizontal.getter();
  uint64_t v4 = sub_10017DF08(&qword_100E87FA0);
  return sub_10066D938(a1, (uint64_t)&a2[*(int *)(v4 + 44)]);
}

uint64_t sub_10066D938@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E7CAE0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OverviewTableViewModel();
  uint64_t v27 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  double v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E87FA8);
  __chkstk_darwin(v9 - 8);
  double v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  double v14 = (char *)&v27 - v13;
  uint64_t v15 = sub_10017DF08(&qword_100E87FB0);
  __chkstk_darwin(v15);
  CGRect v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  char v20 = (char *)&v27 - v19;
  sub_10066DC80(a1, (uint64_t)&v27 - v19);
  uint64_t v21 = type metadata accessor for MoonCompactOverviewTableViewModel(0);
  sub_10006DF38(a1 + *(int *)(v21 + 20), (uint64_t)v5, &qword_100E7CAE0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v6) == 1)
  {
    sub_100178110((uint64_t)v5, &qword_100E7CAE0);
    uint64_t v22 = 1;
  }
  else
  {
    uint64_t v23 = v27;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v8, v5, v6);
    sub_10066DC80((uint64_t)v8, (uint64_t)v17);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v6);
    sub_10024D364((uint64_t)v17, (uint64_t)v14, &qword_100E87FB0);
    uint64_t v22 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, v22, 1, v15);
  sub_10006DF38((uint64_t)v20, (uint64_t)v17, &qword_100E87FB0);
  sub_10006DF38((uint64_t)v14, (uint64_t)v11, &qword_100E87FA8);
  uint64_t v24 = v28;
  sub_10006DF38((uint64_t)v17, v28, &qword_100E87FB0);
  uint64_t v25 = sub_10017DF08(&qword_100E87FB8);
  sub_10006DF38((uint64_t)v11, v24 + *(int *)(v25 + 48), &qword_100E87FA8);
  sub_100178110((uint64_t)v14, &qword_100E87FA8);
  sub_100178110((uint64_t)v20, &qword_100E87FB0);
  sub_100178110((uint64_t)v11, &qword_100E87FA8);
  return sub_100178110((uint64_t)v17, &qword_100E87FB0);
}

uint64_t sub_10066DC80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v44 = a1;
  uint64_t v2 = type metadata accessor for MoonDetailRootContentView(0);
  uint64_t v46 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v46 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v45 = (uint64_t)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100E87FC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E87FC8);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E87FD0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100E87FD8);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  CGRect v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10017DF08(&qword_100E87FE0);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = static HorizontalAlignment.center.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v22 = sub_10017DF08(&qword_100E87FE8);
  sub_10066F8E8(v44, (uint64_t)&v6[*(int *)(v22 + 44)]);
  sub_10006DF38((uint64_t)v6, (uint64_t)v10, &qword_100E87FC0);
  *(_WORD *)&v10[*(int *)(v8 + 44)] = 256;
  sub_100178110((uint64_t)v6, &qword_100E87FC0);
  static Alignment.center.getter();
  sub_100BD83B0();
  sub_100178110((uint64_t)v10, &qword_100E87FC8);
  LOBYTE(v8) = static Edge.Set.horizontal.getter();
  swift_beginAccess();
  sub_1009D96F4();
  EdgeInsets.init(_all:)();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  sub_10006DF38((uint64_t)v13, (uint64_t)v17, &qword_100E87FD0);
  char v31 = &v17[*(int *)(v15 + 44)];
  *char v31 = v8;
  *((void *)v31 + 1) = v24;
  *((void *)v31 + 2) = v26;
  *((void *)v31 + 3) = v28;
  *((void *)v31 + 4) = v30;
  v31[40] = 0;
  sub_100178110((uint64_t)v13, &qword_100E87FD0);
  uint64_t v32 = static Alignment.center.getter();
  uint64_t v34 = v33;
  swift_beginAccess();
  uint64_t v35 = sub_1009D94A0();
  swift_endAccess();
  sub_10006DF38((uint64_t)v17, (uint64_t)v21, &qword_100E87FD8);
  uint64_t v36 = (uint64_t *)&v21[*(int *)(v19 + 44)];
  *uint64_t v36 = v35;
  v36[1] = v32;
  v36[2] = v34;
  sub_100178110((uint64_t)v17, &qword_100E87FD8);
  uint64_t v37 = v45;
  sub_100673970(v47, v45, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  unint64_t v38 = (*(unsigned __int8 *)(v46 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  uint64_t v39 = swift_allocObject();
  sub_100681A50(v37, v39 + v38, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  uint64_t v40 = v48;
  sub_10006DF38((uint64_t)v21, v48, &qword_100E87FE0);
  uint64_t v41 = (void *)(v40 + *(int *)(sub_10017DF08(&qword_100E87FB0) + 36));
  *uint64_t v41 = sub_10066FCFC;
  v41[1] = 0;
  v41[2] = sub_10068224C;
  v41[3] = v39;
  return sub_100178110((uint64_t)v21, &qword_100E87FE0);
}

uint64_t sub_10066E120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v41 = a1;
  uint64_t v44 = a4;
  uint64_t v5 = type metadata accessor for CoordinateSpace();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E76918);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v42 = v9;
  uint64_t v43 = v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t *)(a3 + *(int *)(type metadata accessor for MoonDetailRootContentView(0) + 64));
  uint64_t v37 = a3;
  uint64_t v14 = v13[1];
  uint64_t v45 = *v13;
  uint64_t v46 = v14;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  unsigned int v39 = enum case for CoordinateSpace.named(_:);
  unint64_t v38 = *(void (**)(char *))(v6 + 104);
  v38(v8);
  GeometryProxy.frame(in:)();
  CGFloat v16 = v15;
  CGFloat v18 = v17;
  CGFloat v20 = v19;
  CGFloat v22 = v21;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v6 + 8);
  v23(v8, v5);
  sub_10066E478(v16, v18, v20, v22);
  uint64_t v24 = type metadata accessor for EmptyVisualEffect();
  uint64_t v25 = sub_100681CB8(&qword_100E76920, (void (*)(uint64_t))&type metadata accessor for EmptyVisualEffect);
  VisualEffect.offset(x:y:)();
  uint64_t v26 = v13[1];
  uint64_t v45 = *v13;
  uint64_t v46 = v26;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  ((void (*)(char *, void, uint64_t))v38)(v8, v39, v5);
  GeometryProxy.frame(in:)();
  CGFloat v28 = v27;
  CGFloat v30 = v29;
  CGFloat v32 = v31;
  CGFloat v34 = v33;
  v23(v8, v5);
  sub_10066E990(v28, v30, v32, v34);
  uint64_t v45 = v24;
  uint64_t v46 = v25;
  swift_getOpaqueTypeConformance2();
  uint64_t v35 = v42;
  VisualEffect.opacity(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v12, v35);
}

double sub_10066E478(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = (int *)type metadata accessor for MoonDetailRootContentView(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  double v15 = (char *)&v66 - v14;
  uint64_t v17 = v5 + *(int *)(v16 + 28);
  LODWORD(v17) = *(unsigned __int8 *)(v17 + *(int *)(type metadata accessor for MoonDetailViewModel.Model(0) + 60));
  sub_100673970(v5, (uint64_t)v15, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  if (v17 != 1) {
    goto LABEL_4;
  }
  CGFloat v18 = &v15[v10[5]];
  uint64_t v19 = *(void *)v18;
  char v20 = v18[8];
  sub_100195B7C(*(void *)v18, v20);
  sub_100149AE8();
  char v22 = v21;
  sub_10018F6D8(v19, v20);
  sub_100673970((uint64_t)v15, (uint64_t)v12, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  if (v22)
  {
    sub_1006739F4();
LABEL_4:
    sub_1006739F4();
    return 0.0;
  }
  uint64_t v25 = &v12[v10[6]];
  uint64_t v26 = *(void *)v25;
  char v27 = v25[8];
  sub_100195B7C(*(void *)v25, v27);
  sub_100149AE8();
  char v29 = v28;
  sub_10018F6D8(v26, v27);
  sub_1006739F4();
  sub_1006739F4();
  double v23 = 0.0;
  if ((v29 & 1) == 0)
  {
    v73.origin.x = a1;
    v73.origin.y = a2;
    v73.size.width = a3;
    v73.size.height = a4;
    double MinY = CGRectGetMinY(v73);
    swift_beginAccess();
    double v30 = sub_1009D9534();
    uint64_t v31 = v5 + v10[11];
    uint64_t v32 = *(void *)(v31 + 8);
    double v67 = *(double *)v31;
    double v70 = v67;
    uint64_t v71 = v32;
    sub_10017DF08(&qword_100E64490);
    State.wrappedValue.getter();
    double v33 = v30 + v72;
    uint64_t v34 = v5 + v10[10];
    uint64_t v35 = *(void *)(v34 + 8);
    double v68 = *(double *)v34;
    double v70 = v68;
    uint64_t v71 = v35;
    State.wrappedValue.getter();
    double v36 = v33 + v72;
    uint64_t v37 = (double *)(v5 + v10[12]);
    double v38 = *v37;
    uint64_t v39 = *((void *)v37 + 1);
    double v70 = *v37;
    uint64_t v71 = v39;
    State.wrappedValue.getter();
    double v40 = v36 + v72;
    uint64_t v41 = (double *)(v5 + v10[13]);
    double v42 = *v41;
    uint64_t v43 = *((void *)v41 + 1);
    double v70 = *v41;
    uint64_t v71 = v43;
    State.wrappedValue.getter();
    if (MinY < v40 - v72)
    {
      v74.origin.x = a1;
      v74.origin.y = a2;
      v74.size.width = a3;
      v74.size.height = a4;
      double MinY = CGRectGetMinY(v74);
      double v44 = sub_1009D9534();
      double v70 = v67;
      uint64_t v71 = v32;
      State.wrappedValue.getter();
      double v45 = v44 + v72;
      double v46 = v68;
      double v70 = v68;
      uint64_t v71 = v35;
      State.wrappedValue.getter();
      double v47 = v45 + v72;
      double v70 = v38;
      uint64_t v71 = v39;
      State.wrappedValue.getter();
      double v48 = v47 + v72;
      double v70 = v42;
      uint64_t v71 = v43;
      State.wrappedValue.getter();
      double v67 = v48 - v72;
      double v70 = v46;
      uint64_t v71 = v35;
      State.wrappedValue.getter();
      double v68 = v72;
      double v70 = v38;
      uint64_t v71 = v39;
      State.wrappedValue.getter();
      double v49 = v72;
      double v70 = v42;
      uint64_t v71 = v43;
      State.wrappedValue.getter();
      double v50 = v72;
      uint64_t v51 = (double *)(v5 + v10[15]);
      double v52 = *v51;
      uint64_t v53 = *((void *)v51 + 1);
      double v70 = v52;
      uint64_t v71 = v53;
      State.wrappedValue.getter();
      double v54 = v72;
      double v55 = sub_1009D9534();
      double v56 = sub_1009D9570();
      uint64_t v57 = (double *)(v5 + v10[9]);
      double v58 = *v57;
      uint64_t v59 = *((void *)v57 + 1);
      double v70 = v58;
      uint64_t v71 = v59;
      State.wrappedValue.getter();
      double v60 = v72;
      double v61 = sub_1009D95AC();
      double v62 = sub_1009D95DC();
      sub_1009D95FC();
      double v64 = v63;
      if (v65) {
        double v64 = 0.0;
      }
      return fmax(v67 - MinY + 0.0 - (v68 + v49 - v50 + v54 + v55 - v56 + v60 - v61 - v62 - v64), 0.0);
    }
  }
  return v23;
}

double sub_10066E990(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = (int *)type metadata accessor for MoonDetailRootContentView(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  double v15 = (char *)&v86 - v14;
  uint64_t v17 = v5 + *(int *)(v16 + 28);
  LODWORD(v17) = *(unsigned __int8 *)(v17 + *(int *)(type metadata accessor for MoonDetailViewModel.Model(0) + 60));
  sub_100673970(v5, (uint64_t)v15, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  if (v17 != 1) {
    goto LABEL_4;
  }
  CGFloat v18 = &v15[v10[5]];
  uint64_t v19 = *(void *)v18;
  char v20 = v18[8];
  sub_100195B7C(*(void *)v18, v20);
  sub_100149AE8();
  char v22 = v21;
  sub_10018F6D8(v19, v20);
  sub_100673970((uint64_t)v15, (uint64_t)v12, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  if (v22)
  {
    sub_1006739F4();
LABEL_4:
    sub_1006739F4();
    return 0.0;
  }
  uint64_t v25 = &v12[v10[6]];
  uint64_t v26 = *(void *)v25;
  char v27 = v25[8];
  sub_100195B7C(*(void *)v25, v27);
  sub_100149AE8();
  char v29 = v28;
  sub_10018F6D8(v26, v27);
  sub_1006739F4();
  sub_1006739F4();
  double v23 = 0.0;
  if ((v29 & 1) == 0)
  {
    v97.origin.x = a1;
    v97.origin.y = a2;
    v97.size.width = a3;
    v97.size.height = a4;
    double MinY = CGRectGetMinY(v97);
    swift_beginAccess();
    double v31 = sub_1009D9534();
    uint64_t v32 = (uint64_t *)(v5 + v10[11]);
    uint64_t v33 = *v32;
    uint64_t v34 = v32[1];
    uint64_t v94 = *v32;
    uint64_t v95 = v34;
    sub_10017DF08(&qword_100E64490);
    State.wrappedValue.getter();
    double v35 = v31 + v96;
    double v36 = (uint64_t *)(v5 + v10[10]);
    uint64_t v37 = v36[1];
    uint64_t v93 = *v36;
    uint64_t v94 = v93;
    uint64_t v95 = v37;
    State.wrappedValue.getter();
    double v38 = v35 + v96;
    uint64_t v39 = (uint64_t *)(v5 + v10[12]);
    uint64_t v40 = v39[1];
    uint64_t v92 = *v39;
    uint64_t v94 = v92;
    uint64_t v95 = v40;
    State.wrappedValue.getter();
    double v41 = v38 + v96;
    double v42 = (uint64_t *)(v5 + v10[13]);
    uint64_t v43 = v42[1];
    uint64_t v91 = *v42;
    uint64_t v94 = v91;
    uint64_t v95 = v43;
    State.wrappedValue.getter();
    if (MinY < v41 - v96)
    {
      v98.origin.x = a1;
      v98.origin.y = a2;
      v98.size.width = a3;
      v98.size.height = a4;
      double v90 = CGRectGetMinY(v98);
      double v44 = sub_1009D9534();
      uint64_t v94 = v33;
      uint64_t v95 = v34;
      State.wrappedValue.getter();
      double v45 = v44 + v96;
      uint64_t v94 = v93;
      uint64_t v46 = v93;
      uint64_t v95 = v37;
      State.wrappedValue.getter();
      double v47 = v45 + v96;
      uint64_t v94 = v92;
      uint64_t v48 = v92;
      uint64_t v95 = v40;
      State.wrappedValue.getter();
      double v49 = v47 + v96;
      uint64_t v94 = v91;
      uint64_t v50 = v91;
      uint64_t v95 = v43;
      State.wrappedValue.getter();
      double v89 = v49 - v96;
      uint64_t v94 = v46;
      uint64_t v95 = v37;
      State.wrappedValue.getter();
      double v88 = v96;
      uint64_t v94 = v48;
      uint64_t v95 = v40;
      State.wrappedValue.getter();
      double v87 = v96;
      uint64_t v94 = v50;
      uint64_t v95 = v43;
      State.wrappedValue.getter();
      double v51 = v96;
      double v52 = (uint64_t *)(v5 + v10[15]);
      uint64_t v53 = *v52;
      uint64_t v54 = v52[1];
      uint64_t v94 = v53;
      uint64_t v95 = v54;
      State.wrappedValue.getter();
      double v55 = v96;
      double v56 = sub_1009D9534();
      double v57 = sub_1009D9570();
      double v58 = (uint64_t *)(v5 + v10[9]);
      uint64_t v59 = *v58;
      uint64_t v60 = v58[1];
      uint64_t v94 = v59;
      uint64_t v95 = v60;
      State.wrappedValue.getter();
      double v61 = v96;
      double v62 = sub_1009D95AC();
      double v63 = sub_1009D95DC();
      sub_1009D95FC();
      double v65 = v64;
      double v23 = 0.0;
      if (v66) {
        double v65 = 0.0;
      }
      double v67 = v88 + v87 - v51 + v55 + v56 - v57 + v61 - v62 - v63 - v65;
      uint64_t v68 = v93;
      uint64_t v94 = v93;
      uint64_t v95 = v37;
      State.wrappedValue.getter();
      double v69 = v96;
      uint64_t v70 = v92;
      uint64_t v94 = v92;
      uint64_t v95 = v40;
      State.wrappedValue.getter();
      double v71 = v69 + v96;
      uint64_t v72 = v91;
      uint64_t v94 = v91;
      uint64_t v95 = v43;
      State.wrappedValue.getter();
      double v73 = v71 - v96;
      CGRect v74 = (uint64_t *)(v5 + v10[14]);
      uint64_t v76 = v74[1];
      uint64_t v94 = *v74;
      uint64_t v75 = v94;
      uint64_t v95 = v76;
      State.wrappedValue.getter();
      double v77 = v67 - (v73 + v96);
      uint64_t v94 = v68;
      uint64_t v95 = v37;
      State.wrappedValue.getter();
      double v78 = v96;
      uint64_t v94 = v70;
      uint64_t v95 = v40;
      State.wrappedValue.getter();
      double v79 = v78 + v96;
      uint64_t v94 = v72;
      uint64_t v95 = v43;
      State.wrappedValue.getter();
      double v80 = v79 - v96;
      uint64_t v94 = v75;
      uint64_t v95 = v76;
      State.wrappedValue.getter();
      double v81 = v77 * 0.33 + v80 + v96;
      uint64_t v94 = v68;
      uint64_t v95 = v37;
      State.wrappedValue.getter();
      double v82 = v96;
      uint64_t v94 = v70;
      uint64_t v95 = v40;
      State.wrappedValue.getter();
      double v83 = v96;
      uint64_t v94 = v72;
      uint64_t v95 = v43;
      State.wrappedValue.getter();
      double v84 = v96;
      uint64_t v94 = v75;
      uint64_t v95 = v76;
      State.wrappedValue.getter();
      double v85 = v89 - v90 + 0.0 - v81;
      if (v85 > 0.0) {
        return fmin(v85 / (v77 * 0.67 + v82 + v83 - v84 + v96 - v81), 1.0);
      }
    }
  }
  return v23;
}

uint64_t sub_10066F050@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10017DF08(&qword_100E87EE8);
  *(void *)(a1 + 80) = sub_100874A70;
  *(void *)(a1 + 88) = 0;
  *(unsigned char *)(a1 + 96) = 0;
  *(void *)a1 = v2;
  if (qword_100E62290 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)&v4, &qword_100E6F2A0);
  if (v5)
  {
    sub_1001262E4(&v4, a1 + 24);
    *(void *)(a1 + 8) = sub_10066F158;
    *(void *)(a1 + 16) = 0;
    uint64_t result = Dictionary.init(dictionaryLiteral:)();
    *(void *)(a1 + 64) = _swiftEmptyArrayStorage;
    *(void *)(a1 + 72) = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10066F158@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100B9310C(a2);
}

uint64_t sub_10066F18C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100673970(a1, (uint64_t)v8, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  uint64_t v9 = (void *)(a2 + *(int *)(type metadata accessor for MoonDetailRootContentView(0) + 32));
  uint64_t v10 = v9[3];
  uint64_t v11 = v9[4];
  uint64_t v12 = sub_1001B1E64(v9, v10);
  v19[3] = v10;
  v19[4] = *(void *)(v11 + 8);
  uint64_t v13 = sub_100170694(v19);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v13, v12, v10);
  sub_100673970((uint64_t)v8, a3, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  uint64_t v14 = (int *)sub_10017DF08(&qword_100E66E38);
  sub_1001E9994((uint64_t)v19, a3 + v14[10]);
  *(unsigned char *)(a3 + v14[9]) = 0;
  double v15 = (void *)(a3 + v14[11]);
  void *v15 = 0;
  v15[1] = 0;
  uint64_t v16 = v14[12];
  swift_beginAccess();
  *(double *)(a3 + v16) = sub_100592380();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v19);
  return sub_1006739F4();
}

uint64_t sub_10066F328@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = type metadata accessor for MoonDetailRootContentView(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = sub_10017DF08(&qword_100E87E48);
  uint64_t v30 = *(void *)(v6 - 8);
  uint64_t v31 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E87E50);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_10017DF08(&qword_100E87E58) - 8;
  __chkstk_darwin(v29);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v28 = (uint64_t)&v28 - v16;
  sub_100673970(a1, (uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  unint64_t v17 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v18 = swift_allocObject();
  sub_100681A50((uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  uint64_t v33 = sub_100681BF4;
  uint64_t v34 = v18;
  __int16 v35 = 257;
  sub_10017DF08(&qword_100E87E60);
  sub_10017DF08(&qword_100E6F7B0);
  sub_10068402C((unint64_t *)&qword_100E87E68, &qword_100E87E60, (void (*)(void))sub_100681C34);
  sub_1001246C8(&qword_100E6F7B8, &qword_100E6F7B0);
  View.accessibilityShowsLargeContentViewer<A>(_:)();
  swift_release();
  LOBYTE(v18) = static Edge.Set.trailing.getter();
  uint64_t v20 = v30;
  uint64_t v19 = v31;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v12, v8, v31);
  char v21 = &v12[*(int *)(v10 + 44)];
  *char v21 = v18;
  *(_OWORD *)(v21 + 8) = 0u;
  *(_OWORD *)(v21 + 24) = 0u;
  v21[40] = 1;
  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v19);
  LOBYTE(v18) = static Edge.Set.top.getter();
  sub_10006DF38((uint64_t)v12, (uint64_t)v14, &qword_100E87E50);
  char v22 = &v14[*(int *)(v29 + 44)];
  *char v22 = v18;
  *(_OWORD *)(v22 + 8) = 0u;
  *(_OWORD *)(v22 + 24) = 0u;
  v22[40] = 1;
  sub_100178110((uint64_t)v12, &qword_100E87E50);
  uint64_t v23 = v28;
  sub_10024D364((uint64_t)v14, v28, &qword_100E87E58);
  sub_10006DF38(v23, (uint64_t)v14, &qword_100E87E58);
  uint64_t v24 = v32;
  *uint64_t v32 = 0;
  *((unsigned char *)v24 + 8) = 1;
  uint64_t v25 = v24;
  uint64_t v26 = sub_10017DF08(&qword_100E87E78);
  sub_10006DF38((uint64_t)v14, (uint64_t)v25 + *(int *)(v26 + 48), &qword_100E87E58);
  sub_100178110(v23, &qword_100E87E58);
  return sub_100178110((uint64_t)v14, &qword_100E87E58);
}

uint64_t sub_10066F77C()
{
  uint64_t v0 = type metadata accessor for PresentationMode();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10017DF08(&qword_100E669A0);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005D1E94();
  Binding.wrappedValue.getter();
  PresentationMode.dismiss()();
  Binding.wrappedValue.setter();
  return sub_100178110((uint64_t)v3, &qword_100E669A0);
}

uint64_t sub_10066F884()
{
  uint64_t v0 = LocalizedStringKey.init(stringLiteral:)();

  return Label<>.init(_:systemImage:)(v0);
}

uint64_t sub_10066F8E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for OverviewTableViewModel();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for CompactOverviewTableView();
  uint64_t v8 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v46 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v35 - v11;
  swift_beginAccess();
  uint64_t v45 = sub_1009D94A0();
  sub_1009D9668();
  swift_endAccess();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v44 = v52;
  char v13 = v53;
  uint64_t v43 = v54;
  int v40 = v55;
  uint64_t v42 = v56;
  uint64_t v41 = v57;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  sub_1009D968C();
  sub_1009D96B0();
  uint64_t v14 = v12;
  uint64_t v39 = v12;
  CompactOverviewTableView.init(model:columnSpacing:columnHorizontalPadding:showDividerOnFirstRow:)();
  swift_beginAccess();
  uint64_t v15 = sub_1009D94A0();
  sub_1009D96D0();
  swift_endAccess();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v38 = v58;
  char v16 = v59;
  uint64_t v17 = v60;
  LOBYTE(v7) = v61;
  uint64_t v37 = v62;
  uint64_t v36 = v63;
  char v51 = v13;
  char v50 = v40;
  uint64_t v18 = v8;
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  uint64_t v20 = v46;
  char v21 = v14;
  uint64_t v22 = v47;
  v19(v46, v21, v47);
  char v49 = v16;
  char v48 = (char)v7;
  char v23 = v51;
  char v24 = v50;
  uint64_t v25 = v44;
  *(void *)a2 = v45;
  *(void *)(a2 + 8) = v25;
  *(unsigned char *)(a2 + 16) = v23;
  *(void *)(a2 + 24) = v43;
  *(unsigned char *)(a2 + 32) = v24;
  uint64_t v26 = v41;
  *(void *)(a2 + 40) = v42;
  *(void *)(a2 + 48) = v26;
  uint64_t v27 = sub_10017DF08(&qword_100E87FF0);
  v19((char *)(a2 + *(int *)(v27 + 48)), v20, v22);
  uint64_t v28 = a2 + *(int *)(v27 + 64);
  char v29 = v49;
  char v30 = v48;
  uint64_t v31 = v38;
  *(void *)uint64_t v28 = v15;
  *(void *)(v28 + 8) = v31;
  *(unsigned char *)(v28 + 16) = v29;
  *(void *)(v28 + 24) = v17;
  *(unsigned char *)(v28 + 32) = v30;
  uint64_t v32 = v36;
  *(void *)(v28 + 40) = v37;
  *(void *)(v28 + 48) = v32;
  uint64_t v33 = *(void (**)(char *, uint64_t))(v18 + 8);
  swift_retain();
  swift_retain();
  v33(v39, v22);
  swift_release();
  v33(v20, v22);
  return swift_release();
}

uint64_t sub_10066FD00(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for MoonDetailRootContentView(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v27 - v8;
  uint64_t v10 = *a1;
  uint64_t v12 = a2 + *(int *)(v11 + 28);
  LODWORD(v12) = *(unsigned __int8 *)(v12 + *(int *)(type metadata accessor for MoonDetailViewModel.Model(0) + 60));
  sub_100673970(a2, (uint64_t)v9, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  if (v12 != 1) {
    return sub_1006739F4();
  }
  char v13 = &v9[v4[5]];
  uint64_t v14 = *(void *)v13;
  char v15 = v13[8];
  sub_100195B7C(*(void *)v13, v15);
  sub_100149AE8();
  char v17 = v16;
  sub_10018F6D8(v14, v15);
  sub_100673970((uint64_t)v9, (uint64_t)v6, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  if (v17)
  {
    sub_1006739F4();
    return sub_1006739F4();
  }
  uint64_t v19 = &v6[v4[6]];
  uint64_t v20 = *(void *)v19;
  char v21 = v19[8];
  sub_100195B7C(*(void *)v19, v21);
  sub_100149AE8();
  char v23 = v22;
  sub_10018F6D8(v20, v21);
  sub_1006739F4();
  uint64_t result = sub_1006739F4();
  if ((v23 & 1) == 0)
  {
    char v24 = (uint64_t *)(a2 + v4[13]);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    v27[1] = v10;
    v27[2] = v25;
    v27[3] = v26;
    sub_10017DF08(&qword_100E64490);
    return State.wrappedValue.setter();
  }
  return result;
}

uint64_t sub_10066FF40(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for MoonDetailRootContentView(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v27 - v8;
  uint64_t v10 = *a1;
  uint64_t v12 = a2 + *(int *)(v11 + 28);
  LODWORD(v12) = *(unsigned __int8 *)(v12 + *(int *)(type metadata accessor for MoonDetailViewModel.Model(0) + 60));
  sub_100673970(a2, (uint64_t)v9, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  if (v12 != 1) {
    return sub_1006739F4();
  }
  char v13 = &v9[v4[5]];
  uint64_t v14 = *(void *)v13;
  char v15 = v13[8];
  sub_100195B7C(*(void *)v13, v15);
  sub_100149AE8();
  char v17 = v16;
  sub_10018F6D8(v14, v15);
  sub_100673970((uint64_t)v9, (uint64_t)v6, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  if (v17)
  {
    sub_1006739F4();
    return sub_1006739F4();
  }
  uint64_t v19 = &v6[v4[6]];
  uint64_t v20 = *(void *)v19;
  char v21 = v19[8];
  sub_100195B7C(*(void *)v19, v21);
  sub_100149AE8();
  char v23 = v22;
  sub_10018F6D8(v20, v21);
  sub_1006739F4();
  uint64_t result = sub_1006739F4();
  if ((v23 & 1) == 0)
  {
    char v24 = (uint64_t *)(a2 + v4[12]);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    v27[1] = v10;
    v27[2] = v25;
    v27[3] = v26;
    sub_10017DF08(&qword_100E64490);
    return State.wrappedValue.setter();
  }
  return result;
}

uint64_t sub_100670180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v101 = a2;
  uint64_t v3 = type metadata accessor for MoonScrubberHeaderViewModel(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v102 = (uint64_t)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for MoonScrubberHeaderView() - 8;
  __chkstk_darwin(v97);
  uint64_t v100 = (uint64_t)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (void *)((char *)&v81 - v7);
  __chkstk_darwin(v9);
  uint64_t v99 = (uint64_t)&v81 - v10;
  uint64_t v11 = type metadata accessor for MoonDetailRootContentView(0);
  uint64_t v12 = (int *)(v11 - 8);
  uint64_t v13 = *(void *)(v11 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v11);
  char v15 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E88098);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (uint64_t *)((char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = sub_10017DF08(&qword_100E880A0);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  uint64_t v98 = (uint64_t)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  char v24 = (char *)&v81 - v23;
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v81 - v26;
  uint64_t v96 = (uint64_t)&v81 - v26;
  uint64_t *v18 = static Alignment.center.getter();
  v18[1] = v28;
  uint64_t v29 = sub_10017DF08(&qword_100E880A8);
  sub_100670AC4(a1, (uint64_t)v18 + *(int *)(v29 + 44));
  sub_100673970(a1, (uint64_t)v15, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  unint64_t v30 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v31 = swift_allocObject();
  sub_100681A50((uint64_t)v15, v31 + v30, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  sub_10006DF38((uint64_t)v18, (uint64_t)v24, &qword_100E88098);
  uint64_t v32 = &v24[*(int *)(v20 + 44)];
  *(void *)uint64_t v32 = sub_10066FCFC;
  *((void *)v32 + 1) = 0;
  *((void *)v32 + 2) = sub_1006823DC;
  *((void *)v32 + 3) = v31;
  sub_100178110((uint64_t)v18, &qword_100E88098);
  sub_10024D364((uint64_t)v24, (uint64_t)v27, &qword_100E880A0);
  uint64_t v33 = (double *)(a1 + v12[16]);
  double v34 = *v33;
  uint64_t v35 = *((void *)v33 + 1);
  double v106 = v34;
  uint64_t v107 = v35;
  sub_10017DF08(&qword_100E64490);
  State.projectedValue.getter();
  uint64_t v94 = *((void *)&v108 + 1);
  uint64_t v95 = v108;
  uint64_t v93 = v109;
  uint64_t v36 = (double *)(a1 + v12[17]);
  uint64_t v38 = *((void *)v36 + 1);
  double v106 = *v36;
  double v37 = v106;
  uint64_t v107 = v38;
  State.projectedValue.getter();
  uint64_t v90 = *((void *)&v108 + 1);
  uint64_t v91 = v108;
  uint64_t v92 = v109;
  sub_1001E9994(a1 + v12[10], (uint64_t)&v108);
  uint64_t v39 = v12[9];
  uint64_t v40 = type metadata accessor for MoonDetailViewModel.Model(0);
  sub_100673970(a1 + *(int *)(v40 + 32) + v39, v102, (void (*)(void))type metadata accessor for MoonScrubberHeaderViewModel);
  int v89 = sub_100668E7C();
  uint64_t v41 = (double *)(a1 + v12[11]);
  double v42 = *v41;
  uint64_t v86 = *((void *)v41 + 1);
  double v106 = v42;
  uint64_t v107 = v86;
  State.wrappedValue.getter();
  double v88 = v103;
  swift_beginAccess();
  double v87 = sub_1009D9534();
  uint64_t v43 = (double *)(a1 + v12[12]);
  uint64_t v45 = *((void *)v43 + 1);
  double v103 = *v43;
  double v44 = v103;
  uint64_t v104 = v45;
  State.wrappedValue.getter();
  double v85 = v105;
  uint64_t v46 = (double *)(a1 + v12[14]);
  uint64_t v48 = *((void *)v46 + 1);
  double v103 = *v46;
  double v47 = v103;
  uint64_t v104 = v48;
  State.wrappedValue.getter();
  double v84 = v105;
  char v49 = (double *)(a1 + v12[15]);
  uint64_t v51 = *((void *)v49 + 1);
  double v103 = *v49;
  double v50 = v103;
  uint64_t v104 = v51;
  State.wrappedValue.getter();
  double v83 = v105;
  double v103 = v37;
  uint64_t v104 = v38;
  State.wrappedValue.getter();
  double v82 = v105;
  double v103 = v44;
  uint64_t v104 = v45;
  State.wrappedValue.getter();
  double v81 = v105;
  double v103 = v47;
  uint64_t v104 = v48;
  State.wrappedValue.getter();
  double v52 = v105;
  double v103 = v50;
  uint64_t v104 = v51;
  State.wrappedValue.getter();
  double v53 = v105;
  double v103 = v37;
  uint64_t v104 = v38;
  State.wrappedValue.getter();
  double v54 = v105;
  double v55 = sub_1009D9534();
  double v56 = sub_1009D9570();
  double v103 = v42;
  uint64_t v104 = v86;
  State.wrappedValue.getter();
  double v57 = v105;
  double v58 = sub_1009D95AC();
  double v59 = sub_1009D95DC();
  sub_1009D95FC();
  double v61 = v60;
  if (v62) {
    double v61 = 0.0;
  }
  double v88 = v88 + v87;
  double v87 = v85 + v84 - v83 + v82;
  uint64_t v63 = (int *)v97;
  double v64 = (double *)(a1 + v12[18]);
  uint64_t v65 = *((void *)v64 + 1);
  double v66 = v81 + v52 - v53 + v54 + v55 - v56 + v57 - v58 - v59 - v61;
  double v67 = (char *)v8 + *(int *)(v97 + 56);
  double v103 = *v64;
  uint64_t v104 = v65;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  uint64_t v68 = enum case for CoordinateSpace.named(_:);
  uint64_t v69 = type metadata accessor for CoordinateSpace();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v69 - 8) + 104))(v67, v68, v69);
  uint64_t v70 = v94;
  *uint64_t v8 = v95;
  v8[1] = v70;
  v8[2] = v93;
  uint64_t v71 = v90;
  v8[3] = v91;
  void v8[4] = v71;
  v8[5] = v92;
  sub_1001262E4(&v108, (uint64_t)(v8 + 6));
  sub_100681A50(v102, (uint64_t)v8 + v63[9], (void (*)(void))type metadata accessor for MoonScrubberHeaderViewModel);
  *((unsigned char *)v8 + v63[10]) = v89 & 1;
  *(double *)((char *)v8 + v63[11]) = v88;
  *(double *)((char *)v8 + v63[12]) = v87;
  *(double *)((char *)v8 + v63[13]) = v66;
  uint64_t v72 = (double *)((char *)v8 + v63[15]);
  double v105 = 0.0;
  State.init(wrappedValue:)();
  uint64_t v73 = v104;
  double *v72 = v103;
  *((void *)v72 + 1) = v73;
  uint64_t v74 = v99;
  sub_100681A50((uint64_t)v8, v99, (void (*)(void))type metadata accessor for MoonScrubberHeaderView);
  uint64_t v75 = v96;
  uint64_t v76 = v98;
  sub_10006DF38(v96, v98, &qword_100E880A0);
  uint64_t v77 = v100;
  sub_100673970(v74, v100, (void (*)(void))type metadata accessor for MoonScrubberHeaderView);
  uint64_t v78 = v101;
  sub_10006DF38(v76, v101, &qword_100E880A0);
  uint64_t v79 = sub_10017DF08(&qword_100E880B0);
  sub_100673970(v77, v78 + *(int *)(v79 + 48), (void (*)(void))type metadata accessor for MoonScrubberHeaderView);
  sub_1006739F4();
  sub_100178110(v75, &qword_100E880A0);
  sub_1006739F4();
  return sub_100178110(v76, &qword_100E880A0);
}

uint64_t sub_100670AC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E880B8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v30 - v8;
  uint64_t v10 = type metadata accessor for MoonDetailRootContentView(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10 - 8);
  uint64_t v13 = sub_10017DF08(&qword_100E880C0);
  __chkstk_darwin(v13 - 8);
  char v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v30 - v17;
  if (sub_100668E7C())
  {
    swift_beginAccess();
    uint64_t v19 = sub_1009D94A0();
    swift_endAccess();
    v30[0] = v19;
    sub_100673970(a1, (uint64_t)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for MoonDetailRootContentView);
    unint64_t v20 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v21 = swift_allocObject();
    sub_100681A50((uint64_t)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v20, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
    sub_10017DF08(&qword_100E76918);
    uint64_t v22 = type metadata accessor for EmptyVisualEffect();
    uint64_t v23 = sub_100681CB8(&qword_100E76920, (void (*)(uint64_t))&type metadata accessor for EmptyVisualEffect);
    v30[1] = v22;
    v30[2] = v23;
    swift_getOpaqueTypeConformance2();
    View.visualEffect<A>(_:)();
    swift_release();
    swift_release();
    uint64_t v24 = sub_10017DF08(&qword_100E880C8);
    uint64_t v25 = (uint64_t)v18;
    uint64_t v26 = 0;
  }
  else
  {
    uint64_t v24 = sub_10017DF08(&qword_100E880C8);
    uint64_t v25 = (uint64_t)v18;
    uint64_t v26 = 1;
  }
  _s7Weather24LocationCompositionStateOwst_0(v25, v26, 1, v24);
  *(void *)uint64_t v9 = static HorizontalAlignment.center.getter();
  *((void *)v9 + 1) = 0;
  v9[16] = 0;
  uint64_t v27 = sub_10017DF08(&qword_100E880D0);
  sub_100671358(a1, &v9[*(int *)(v27 + 44)]);
  sub_10006DF38((uint64_t)v18, (uint64_t)v15, &qword_100E880C0);
  sub_10006DF38((uint64_t)v9, (uint64_t)v6, &qword_100E880B8);
  sub_10006DF38((uint64_t)v15, a2, &qword_100E880C0);
  uint64_t v28 = sub_10017DF08(&qword_100E880D8);
  sub_10006DF38((uint64_t)v6, a2 + *(int *)(v28 + 48), &qword_100E880B8);
  sub_100178110((uint64_t)v9, &qword_100E880B8);
  sub_100178110((uint64_t)v18, &qword_100E880C0);
  sub_100178110((uint64_t)v6, &qword_100E880B8);
  return sub_100178110((uint64_t)v15, &qword_100E880C0);
}

uint64_t sub_100670EA4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(double, double, double, double))
{
  uint64_t v5 = type metadata accessor for CoordinateSpace();
  sub_10017C83C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  type metadata accessor for MoonDetailRootContentView(0);
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v11, enum case for CoordinateSpace.named(_:), v5);
  GeometryProxy.frame(in:)();
  double v13 = v12;
  double v15 = v14;
  double v17 = v16;
  double v19 = v18;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
  a4(v13, v15, v17, v19);
  type metadata accessor for EmptyVisualEffect();
  sub_100681CB8(&qword_100E76920, (void (*)(uint64_t))&type metadata accessor for EmptyVisualEffect);
  return VisualEffect.offset(x:y:)();
}

double sub_10067105C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  swift_beginAccess();
  double v8 = sub_1009D9534();
  double v9 = 0.0;
  if (sub_100668E7C())
  {
    v22.origin.x = a1;
    v22.origin.y = a2;
    v22.size.width = a3;
    v22.size.height = a4;
    if (CGRectGetMinY(v22) < v8)
    {
      v23.origin.x = a1;
      v23.origin.y = a2;
      v23.size.width = a3;
      v23.size.height = a4;
      double MinY = CGRectGetMinY(v23);
      type metadata accessor for MoonDetailRootContentView(0);
      sub_10017DF08(&qword_100E64490);
      State.wrappedValue.getter();
      State.wrappedValue.getter();
      State.wrappedValue.getter();
      State.wrappedValue.getter();
      double v11 = v21 + v21 - v21 + v21;
      double v9 = v8 - MinY + 0.0;
      State.wrappedValue.getter();
      State.wrappedValue.getter();
      State.wrappedValue.getter();
      State.wrappedValue.getter();
      double v12 = sub_1009D9534();
      double v13 = sub_1009D9570();
      State.wrappedValue.getter();
      double v14 = sub_1009D95AC();
      double v15 = sub_1009D95DC();
      sub_1009D95FC();
      double v17 = v16;
      if (v18) {
        double v17 = 0.0;
      }
      if (v9 - v11 >= 0.0)
      {
        double v19 = v9 - (v21 + v21 - v21 + v21 + v12 - v13 + v21 - v14 - v15 - v17);
        if (v19 <= 0.0) {
          return v21 + v21 - v21 + v21;
        }
        else {
          return v11 + v19;
        }
      }
    }
  }
  return v9;
}

uint64_t sub_100671358@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v86 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E63BF0);
  __chkstk_darwin(v3 - 8);
  double v84 = (uint64_t *)((char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v88 = type metadata accessor for CoordinateSpace();
  uint64_t v87 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v6 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for MoonViewModel(0);
  __chkstk_darwin(v7 - 8);
  double v9 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for MoonContainerView(0);
  __chkstk_darwin(v10);
  uint64_t v85 = (uint64_t)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v89 = (uint64_t)&v76 - v13;
  if (sub_100668E7C())
  {
    swift_beginAccess();
    sub_1009D9624();
  }
  else
  {
    swift_beginAccess();
    sub_1009D95FC();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v83 = v95;
  int v82 = v96;
  uint64_t v81 = v97;
  int v80 = v98;
  uint64_t v79 = v99;
  uint64_t v78 = v100;
  double v14 = (int *)type metadata accessor for MoonDetailRootContentView(0);
  uint64_t v15 = a1 + v14[7];
  uint64_t v16 = type metadata accessor for MoonDetailViewModel.Model(0);
  sub_100673970(v15 + *(int *)(v16 + 28), (uint64_t)v9, (void (*)(void))type metadata accessor for MoonViewModel);
  sub_1001E9994(a1 + v14[8], (uint64_t)&v101);
  double v17 = (double *)(a1 + v14[10]);
  double v18 = *v17;
  uint64_t v77 = v9;
  uint64_t v19 = *((void *)v17 + 1);
  double v93 = v18;
  uint64_t v94 = v19;
  sub_10017DF08(&qword_100E64490);
  State.wrappedValue.getter();
  double v20 = v91;
  double v21 = (double *)(a1 + v14[12]);
  uint64_t v23 = *((void *)v21 + 1);
  double v93 = *v21;
  double v22 = v93;
  uint64_t v94 = v23;
  State.wrappedValue.getter();
  double v24 = v20 + v91;
  swift_beginAccess();
  double v25 = sub_1009D9534();
  double v26 = v25 + sub_1009D9624();
  uint64_t v27 = a1 + v14[16];
  uint64_t v28 = *(void *)(v27 + 8);
  double v91 = *(double *)v27;
  uint64_t v92 = v28;
  swift_bridgeObjectRetain();
  uint64_t v76 = v6;
  AnyHashable.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v87 + 104))(v6, enum case for CoordinateSpace.named(_:), v88);
  double v91 = v18;
  uint64_t v92 = v19;
  State.wrappedValue.getter();
  double v29 = v90;
  double v91 = v22;
  uint64_t v92 = v23;
  State.wrappedValue.getter();
  double v30 = v29 + v90;
  uint64_t v31 = a1 + v14[13];
  uint64_t v33 = *(void *)(v31 + 8);
  double v91 = *(double *)v31;
  double v32 = v91;
  uint64_t v92 = v33;
  State.wrappedValue.getter();
  double v34 = v30 - v90;
  uint64_t v35 = a1 + v14[15];
  uint64_t v37 = *(void *)(v35 + 8);
  double v91 = *(double *)v35;
  double v36 = v91;
  uint64_t v92 = v37;
  State.wrappedValue.getter();
  double v38 = v34 + v90;
  double v91 = v18;
  uint64_t v92 = v19;
  State.wrappedValue.getter();
  double v39 = v90;
  double v91 = v22;
  uint64_t v92 = v23;
  State.wrappedValue.getter();
  double v40 = v39 + v90;
  double v91 = v32;
  uint64_t v92 = v33;
  State.wrappedValue.getter();
  double v41 = v40 - v90;
  double v91 = v36;
  uint64_t v92 = v37;
  State.wrappedValue.getter();
  double v42 = v41 + v90;
  double v43 = v42 + sub_1009D9534();
  double v44 = v43 - sub_1009D9570();
  double v91 = v18;
  uint64_t v92 = v19;
  State.wrappedValue.getter();
  double v45 = v90;
  double v91 = v22;
  uint64_t v92 = v23;
  State.wrappedValue.getter();
  double v46 = v45 + v90;
  double v91 = v32;
  uint64_t v92 = v33;
  State.wrappedValue.getter();
  double v47 = v46 - v90;
  double v91 = v36;
  uint64_t v92 = v37;
  State.wrappedValue.getter();
  double v48 = v47 + v90;
  double v49 = v48 + sub_1009D9534();
  double v50 = v49 - sub_1009D9570();
  uint64_t v51 = (double *)(a1 + v14[9]);
  double v52 = *v51;
  uint64_t v53 = *((void *)v51 + 1);
  double v91 = v52;
  uint64_t v92 = v53;
  State.wrappedValue.getter();
  double v54 = v50 + v90;
  double v55 = v54 - sub_1009D95AC();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v57 = (uint64_t)v84;
  *double v84 = KeyPath;
  sub_10017DF08(&qword_100E62CB8);
  swift_storeEnumTagMultiPayload();
  uint64_t v58 = swift_getKeyPath();
  uint64_t v59 = swift_getKeyPath();
  uint64_t v60 = v89;
  sub_10024D364(v57, v89, &qword_100E63BF0);
  uint64_t v61 = v60 + v10[5];
  *(void *)uint64_t v61 = v58;
  *(unsigned char *)(v61 + 8) = 0;
  uint64_t v62 = v60 + v10[6];
  *(void *)uint64_t v62 = v59;
  *(unsigned char *)(v62 + 8) = 0;
  uint64_t v63 = v60 + v10[7];
  LOBYTE(v90) = 0;
  State.init(wrappedValue:)();
  uint64_t v64 = v92;
  *(unsigned char *)uint64_t v63 = LOBYTE(v91);
  *(void *)(v63 + 8) = v64;
  sub_100681A50((uint64_t)v77, v60 + v10[8], (void (*)(void))type metadata accessor for MoonViewModel);
  sub_1001262E4(&v101, v60 + v10[9]);
  *(double *)(v60 + v10[10]) = v24;
  *(double *)(v60 + v10[11]) = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v87 + 32))(v60 + v10[12], v76, v88);
  *(double *)(v60 + v10[13]) = v38;
  *(double *)(v60 + v10[14]) = v44;
  *(double *)(v60 + v10[15]) = v55;
  *(void *)(v60 + v10[16]) = 0;
  if (sub_100668E7C()) {
    sub_1009D9760();
  }
  else {
    sub_1009D9784();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v88 = v101;
  char v65 = BYTE8(v101);
  uint64_t v66 = v102;
  char v67 = v103;
  uint64_t v68 = v104;
  uint64_t v69 = v105;
  uint64_t v70 = v85;
  sub_100673970(v89, v85, (void (*)(void))type metadata accessor for MoonContainerView);
  uint64_t v71 = v86;
  *uint64_t v86 = 0;
  *((unsigned char *)v71 + 8) = 1;
  v71[2] = v83;
  *((unsigned char *)v71 + 24) = v82;
  v71[4] = v81;
  *((unsigned char *)v71 + 40) = v80;
  uint64_t v72 = v78;
  v71[6] = v79;
  v71[7] = v72;
  uint64_t v73 = sub_10017DF08(&qword_100E880E0);
  sub_100673970(v70, (uint64_t)v71 + *(int *)(v73 + 48), (void (*)(void))type metadata accessor for MoonContainerView);
  uint64_t v74 = (char *)v71 + *(int *)(v73 + 64);
  *(void *)uint64_t v74 = 0;
  v74[8] = 1;
  *((void *)v74 + 2) = v88;
  v74[24] = v65;
  *((void *)v74 + 4) = v66;
  v74[40] = v67;
  *((void *)v74 + 6) = v68;
  *((void *)v74 + 7) = v69;
  sub_1006739F4();
  return sub_1006739F4();
}

uint64_t sub_100671CE4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for MoonDetailRootContentView(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  double v9 = (char *)v27 - v8;
  uint64_t v10 = *a1;
  uint64_t v12 = a2 + *(int *)(v11 + 28);
  LODWORD(v12) = *(unsigned __int8 *)(v12 + *(int *)(type metadata accessor for MoonDetailViewModel.Model(0) + 60));
  sub_100673970(a2, (uint64_t)v9, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  if (v12 != 1) {
    return sub_1006739F4();
  }
  uint64_t v13 = &v9[v4[5]];
  uint64_t v14 = *(void *)v13;
  char v15 = v13[8];
  sub_100195B7C(*(void *)v13, v15);
  sub_100149AE8();
  char v17 = v16;
  sub_10018F6D8(v14, v15);
  sub_100673970((uint64_t)v9, (uint64_t)v6, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  if (v17)
  {
    sub_1006739F4();
    return sub_1006739F4();
  }
  uint64_t v19 = &v6[v4[6]];
  uint64_t v20 = *(void *)v19;
  char v21 = v19[8];
  sub_100195B7C(*(void *)v19, v21);
  sub_100149AE8();
  char v23 = v22;
  sub_10018F6D8(v20, v21);
  sub_1006739F4();
  uint64_t result = sub_1006739F4();
  if ((v23 & 1) == 0)
  {
    double v24 = (uint64_t *)(a2 + v4[9]);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    v27[1] = v10;
    v27[2] = v25;
    v27[3] = v26;
    sub_10017DF08(&qword_100E64490);
    return State.wrappedValue.setter();
  }
  return result;
}

uint64_t sub_100671F24(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for MoonDetailRootContentView(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  double v9 = (char *)v27 - v8;
  uint64_t v10 = *a1;
  uint64_t v12 = a2 + *(int *)(v11 + 28);
  LODWORD(v12) = *(unsigned __int8 *)(v12 + *(int *)(type metadata accessor for MoonDetailViewModel.Model(0) + 60));
  sub_100673970(a2, (uint64_t)v9, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  if (v12 != 1) {
    return sub_1006739F4();
  }
  uint64_t v13 = &v9[v4[5]];
  uint64_t v14 = *(void *)v13;
  char v15 = v13[8];
  sub_100195B7C(*(void *)v13, v15);
  sub_100149AE8();
  char v17 = v16;
  sub_10018F6D8(v14, v15);
  sub_100673970((uint64_t)v9, (uint64_t)v6, (void (*)(void))type metadata accessor for MoonDetailRootContentView);
  if (v17)
  {
    sub_1006739F4();
    return sub_1006739F4();
  }
  uint64_t v19 = &v6[v4[6]];
  uint64_t v20 = *(void *)v19;
  char v21 = v19[8];
  sub_100195B7C(*(void *)v19, v21);
  sub_100149AE8();
  char v23 = v22;
  sub_10018F6D8(v20, v21);
  sub_1006739F4();
  uint64_t result = sub_1006739F4();
  if ((v23 & 1) == 0)
  {
    double v24 = (uint64_t *)(a2 + v4[11]);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    v27[1] = v10;
    v27[2] = v25;
    v27[3] = v26;
    sub_10017DF08(&qword_100E64490);
    return State.wrappedValue.setter();
  }
  return result;
}

uint64_t sub_100672164@<X0>(void *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for LocalCoordinateSpace();
  sub_10017C83C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  static CoordinateSpaceProtocol<>.local.getter();
  GeometryProxy.frame<A>(in:)();
  uint64_t v10 = v9;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
  *a1 = v10;
  return result;
}

uint64_t sub_10067222C()
{
  return State.wrappedValue.setter();
}

uint64_t sub_1006722A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MoonContainerView(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v22 - v6;
  uint64_t v9 = v1 + *(int *)(v8 + 32);
  LODWORD(v9) = *(unsigned __int8 *)(v9 + *(int *)(type metadata accessor for MoonViewModel(0) + 32));
  sub_100673970(v1, (uint64_t)v7, (void (*)(void))type metadata accessor for MoonContainerView);
  if (v9 == 1)
  {
    uint64_t v10 = &v7[*(int *)(v2 + 20)];
    uint64_t v11 = *(void *)v10;
    char v12 = v10[8];
    sub_100195B7C(*(void *)v10, v12);
    sub_100149AE8();
    char v14 = v13;
    sub_10018F6D8(v11, v12);
    sub_100673970((uint64_t)v7, (uint64_t)v4, (void (*)(void))type metadata accessor for MoonContainerView);
    if (v14)
    {
      char v15 = 0;
    }
    else
    {
      char v16 = &v4[*(int *)(v2 + 24)];
      uint64_t v17 = *(void *)v16;
      char v18 = v16[8];
      sub_100195B7C(*(void *)v16, v18);
      sub_100149AE8();
      char v20 = v19;
      sub_10018F6D8(v17, v18);
      char v15 = v20 ^ 1;
    }
    sub_1006739F4();
  }
  else
  {
    char v15 = 0;
  }
  sub_1006739F4();
  return v15 & 1;
}

uint64_t sub_100672464@<X0>(uint64_t *a1@<X8>)
{
  *a1 = static Alignment.center.getter();
  a1[1] = v3;
  uint64_t v4 = sub_10017DF08(&qword_100E881C0);
  return sub_1006724A8(v1, (uint64_t)a1 + *(int *)(v4 + 44));
}

uint64_t sub_1006724A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for MoonContainerView(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = sub_10017DF08(&qword_100E881C8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  char v12 = (char *)&v19 - v11;
  *(void *)char v12 = static VerticalAlignment.center.getter();
  *((void *)v12 + 1) = 0;
  v12[16] = 1;
  uint64_t v13 = sub_10017DF08(&qword_100E881D0);
  sub_1006726E4(a1, &v12[*(int *)(v13 + 44)]);
  uint64_t v14 = static VerticalAlignment.center.getter();
  sub_100673970(a1, (uint64_t)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for MoonContainerView);
  unint64_t v15 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v16 = swift_allocObject();
  sub_100681A50((uint64_t)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, (void (*)(void))type metadata accessor for MoonContainerView);
  sub_10006DF38((uint64_t)v12, (uint64_t)v9, &qword_100E881C8);
  sub_10006DF38((uint64_t)v9, a2, &qword_100E881C8);
  uint64_t v17 = a2 + *(int *)(sub_10017DF08(&qword_100E881D8) + 48);
  *(void *)uint64_t v17 = v14;
  *(void *)(v17 + 8) = 0;
  *(unsigned char *)(v17 + 16) = 1;
  *(void *)(v17 + 24) = 0;
  *(unsigned char *)(v17 + 32) = 1;
  *(void *)(v17 + 40) = sub_100683DA8;
  *(void *)(v17 + 48) = v16;
  swift_retain();
  sub_100178110((uint64_t)v12, &qword_100E881C8);
  swift_release();
  return sub_100178110((uint64_t)v9, &qword_100E881C8);
}

uint64_t sub_1006726E4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v72 = a2;
  uint64_t v3 = type metadata accessor for MoonContainerView(0);
  uint64_t v4 = v3 - 8;
  uint64_t v64 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v66 = v5;
  uint64_t v68 = (uint64_t)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for MoonView.RenderBehavior();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for MoonView();
  uint64_t v59 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  unint64_t v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_10017DF08(&qword_100E881E0);
  __chkstk_darwin(v60);
  uint64_t v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_10017DF08(&qword_100E881E8);
  __chkstk_darwin(v63);
  uint64_t v65 = (uint64_t)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10017DF08(&qword_100E881F0);
  uint64_t v70 = *(void *)(v19 - 8);
  uint64_t v71 = v19;
  __chkstk_darwin(v19);
  uint64_t v69 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v62 = (char *)&v58 - v22;
  __n128 v24 = __chkstk_darwin(v23);
  char v67 = (char *)&v58 - v25;
  uint64_t v26 = a1 + *(int *)(v4 + 40);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v13, v26, v10, v24);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for MoonView.RenderBehavior.pauseAnimationWhenIdle(_:), v6);
  MoonView.init(date:renderBehavior:forceUpdateFlag:)();
  if (sub_1006722A0())
  {
    swift_beginAccess();
    sub_1009D9848();
  }
  else
  {
    swift_beginAccess();
    sub_1009D9870();
  }
  if (sub_1006722A0())
  {
    swift_beginAccess();
    sub_1009D9848();
  }
  else
  {
    swift_beginAccess();
    sub_1009D9870();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v27 = v59;
  uint64_t v28 = v61;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v17, v15, v61);
  double v29 = &v17[*(int *)(v60 + 36)];
  long long v30 = v76;
  *(_OWORD *)double v29 = v75;
  *((_OWORD *)v29 + 1) = v30;
  *((_OWORD *)v29 + 2) = v77;
  (*(void (**)(char *, uint64_t))(v27 + 8))(v15, v28);
  double v31 = *(double *)(v26 + *(int *)(type metadata accessor for MoonViewModel(0) + 20)) * 0.0174532925;
  static UnitPoint.center.getter();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v36 = v65;
  sub_10006DF38((uint64_t)v17, v65, &qword_100E881E0);
  uint64_t v37 = v36 + *(int *)(v63 + 36);
  *(double *)uint64_t v37 = v31;
  *(void *)(v37 + 8) = v33;
  *(void *)(v37 + 16) = v35;
  sub_100178110((uint64_t)v17, &qword_100E881E0);
  uint64_t v38 = a1;
  uint64_t v39 = v68;
  sub_100673970(v38, v68, (void (*)(void))type metadata accessor for MoonContainerView);
  unint64_t v40 = (*(unsigned __int8 *)(v64 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
  uint64_t v41 = swift_allocObject();
  sub_100681A50(v39, v41 + v40, (void (*)(void))type metadata accessor for MoonContainerView);
  sub_10017DF08(&qword_100E881F8);
  sub_10068402C(&qword_100E88200, &qword_100E881E8, (void (*)(void))sub_1006840A8);
  uint64_t v42 = sub_10018C6DC(&qword_100E88218);
  uint64_t v43 = type metadata accessor for EmptyVisualEffect();
  uint64_t v44 = sub_100681CB8(&qword_100E76920, (void (*)(uint64_t))&type metadata accessor for EmptyVisualEffect);
  uint64_t v73 = v43;
  uint64_t v74 = v44;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v73 = v42;
  uint64_t v74 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  double v46 = v62;
  View.visualEffect<A>(_:)();
  swift_release();
  sub_100178110(v36, &qword_100E881E8);
  uint64_t v47 = v70;
  double v48 = v67;
  double v49 = v46;
  uint64_t v50 = v71;
  (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v67, v49, v71);
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  double v52 = v69;
  v51(v69, v48, v50);
  uint64_t v53 = v72;
  void *v72 = 0;
  *((unsigned char *)v53 + 8) = 1;
  uint64_t v54 = sub_10017DF08(&qword_100E88220);
  v51((char *)v53 + *(int *)(v54 + 48), v52, v50);
  double v55 = (char *)v53 + *(int *)(v54 + 64);
  *(void *)double v55 = 0;
  v55[8] = 1;
  double v56 = *(void (**)(char *, uint64_t))(v47 + 8);
  v56(v48, v50);
  return ((uint64_t (*)(char *, uint64_t))v56)(v52, v50);
}

uint64_t sub_100672F20@<X0>(uint64_t a1@<X8>)
{
  v20[1] = a1;
  uint64_t v1 = sub_10017DF08(&qword_100E88218);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MoonContainerView(0);
  GeometryProxy.frame(in:)();
  sub_100673124(v5, v6, v7, v8);
  GeometryProxy.frame(in:)();
  sub_100673124(v9, v10, v11, v12);
  static UnitPoint.top.getter();
  uint64_t v13 = type metadata accessor for EmptyVisualEffect();
  uint64_t v14 = sub_100681CB8(&qword_100E76920, (void (*)(uint64_t))&type metadata accessor for EmptyVisualEffect);
  VisualEffect.scaleEffect(x:y:anchor:)();
  GeometryProxy.frame(in:)();
  sub_100673430(v15, v16, v17, v18);
  v20[2] = v13;
  v20[3] = v14;
  swift_getOpaqueTypeConformance2();
  VisualEffect.offset(x:y:)();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

double sub_100673124(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v5 = v4;
  CGFloat v10 = (int *)type metadata accessor for MoonContainerView(0);
  __chkstk_darwin(v10);
  CGFloat v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  CGFloat v15 = (char *)&v41 - v14;
  uint64_t v17 = v5 + *(int *)(v16 + 32);
  LODWORD(v17) = *(unsigned __int8 *)(v17 + *(int *)(type metadata accessor for MoonViewModel(0) + 32));
  sub_100673970(v5, (uint64_t)v15, (void (*)(void))type metadata accessor for MoonContainerView);
  if (v17 != 1) {
    goto LABEL_4;
  }
  CGFloat v18 = &v15[v10[5]];
  uint64_t v19 = *(void *)v18;
  char v20 = v18[8];
  sub_100195B7C(*(void *)v18, v20);
  sub_100149AE8();
  char v22 = v21;
  sub_10018F6D8(v19, v20);
  sub_100673970((uint64_t)v15, (uint64_t)v12, (void (*)(void))type metadata accessor for MoonContainerView);
  if (v22)
  {
    sub_1006739F4();
LABEL_4:
    sub_1006739F4();
    return 1.0;
  }
  uint64_t v25 = &v12[v10[6]];
  uint64_t v26 = *(void *)v25;
  char v27 = v25[8];
  sub_100195B7C(*(void *)v25, v27);
  sub_100149AE8();
  char v29 = v28;
  sub_10018F6D8(v26, v27);
  sub_1006739F4();
  sub_1006739F4();
  double v23 = 1.0;
  if ((v29 & 1) == 0)
  {
    v42.origin.x = a1;
    v42.origin.y = a2;
    v42.size.width = a3;
    v42.size.height = a4;
    CGFloat MinY = CGRectGetMinY(v42);
    double v31 = *(double *)(v5 + v10[11]);
    if (MinY < v31)
    {
      v43.origin.x = a1;
      v43.origin.y = a2;
      v43.size.width = a3;
      v43.size.height = a4;
      double v32 = CGRectGetMinY(v43);
      swift_beginAccess();
      double v33 = sub_1009D95AC();
      double v34 = *(double *)(v5 + v10[13]);
      double v35 = v31 - v32 + 0.0 - v34;
      if (v35 >= 0.0)
      {
        double v36 = *(double *)(v5 + v10[15]) - v34;
        if (sub_1006722A0()) {
          double v37 = sub_1009D9848();
        }
        else {
          double v37 = sub_1009D9870();
        }
        double v38 = fabs(v35 / v36);
        double v39 = 1.0 - v33 / v37;
        if (v38 > 1.0) {
          double v38 = 1.0;
        }
        double v40 = 0.0;
        if (v35 / v36 != 0.0) {
          double v40 = v38;
        }
        return 1.0 - v40 * v39;
      }
    }
  }
  return v23;
}

double sub_100673430(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  CGFloat v9 = (int *)type metadata accessor for MoonContainerView(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v33 - v13;
  uint64_t v16 = v4 + *(int *)(v15 + 32);
  LODWORD(v16) = *(unsigned __int8 *)(v16 + *(int *)(type metadata accessor for MoonViewModel(0) + 32));
  sub_100673970(v4, (uint64_t)v14, (void (*)(void))type metadata accessor for MoonContainerView);
  if (v16 != 1) {
    goto LABEL_4;
  }
  uint64_t v17 = &v14[v9[5]];
  uint64_t v18 = *(void *)v17;
  char v19 = v17[8];
  sub_100195B7C(*(void *)v17, v19);
  sub_100149AE8();
  char v21 = v20;
  sub_10018F6D8(v18, v19);
  sub_100673970((uint64_t)v14, (uint64_t)v11, (void (*)(void))type metadata accessor for MoonContainerView);
  if (v21)
  {
    sub_1006739F4();
LABEL_4:
    sub_1006739F4();
    return 0.0;
  }
  __n128 v24 = &v11[v9[6]];
  uint64_t v25 = *(void *)v24;
  char v26 = v24[8];
  sub_100195B7C(*(void *)v24, v26);
  sub_100149AE8();
  char v28 = v27;
  sub_10018F6D8(v25, v26);
  sub_1006739F4();
  sub_1006739F4();
  double v22 = 0.0;
  if ((v28 & 1) == 0)
  {
    v34.origin.x = a1;
    v34.origin.y = a2;
    v34.size.width = a3;
    v34.size.height = a4;
    CGFloat MinY = CGRectGetMinY(v34);
    double v30 = *(double *)(v4 + v9[11]);
    if (MinY < v30)
    {
      v35.origin.x = a1;
      v35.origin.y = a2;
      v35.size.width = a3;
      v35.size.height = a4;
      double v22 = v30 - CGRectGetMinY(v35) + 0.0;
      double v31 = *(double *)(v4 + v9[13]);
      if (v22 - v31 >= 0.0)
      {
        double v32 = *(double *)(v4 + v9[14]);
        if (v22 - v32 >= 0.0) {
          return v22 + v31 - v32;
        }
        else {
          return v22 - (v22 - v31);
        }
      }
    }
  }
  return v22;
}

uint64_t sub_1006736D4()
{
  return swift_release();
}

uint64_t sub_100673744()
{
  return State.wrappedValue.setter();
}

void *sub_1006737C4@<X0>(void *a1@<X8>, double a2@<D0>)
{
  uint64_t v4 = swift_allocObject();
  *(double *)(v4 + 16) = a2;
  __src[10] = sub_100874A7C;
  __src[11] = 0;
  LOBYTE(__src[12]) = 0;
  __src[0] = sub_10017DF08(&qword_100E881B8);
  if (qword_100E62290 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = (void *)sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)__dst, &qword_100E6F2A0);
  if (*(void *)&__dst[24])
  {
    sub_1001262E4((long long *)__dst, (uint64_t)&__src[3]);
    __src[1] = sub_100683D9C;
    __src[2] = v4;
    uint64_t v6 = Dictionary.init(dictionaryLiteral:)();
    __src[8] = _swiftEmptyArrayStorage;
    __src[9] = v6;
    memcpy(__dst, __src, sizeof(__dst));
    return memcpy(a1, __dst, 0x61uLL);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100673920@<X0>(void *a1@<X0>, uint64_t *a2@<X8>, double a3@<D0>)
{
  return sub_10092C590(a2, a3);
}

void *sub_100673964@<X0>(void *a1@<X8>)
{
  return sub_1006737C4(a1, *v1);
}

uint64_t sub_100673970(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_1006739C4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1006739F4()
{
  uint64_t v1 = sub_100127C8C();
  v2(v1);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return v0;
}

uint64_t type metadata accessor for MoonDetailRootContentView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E87D60);
}

void *sub_100673A6C(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    uint64_t v13 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v13;
  }
  sub_10017DF08(&qword_100E65310);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    CGFloat v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for PresentationMode();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = a3[5];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = *(void *)v16;
  char v18 = v16[8];
  sub_100195B7C(*(void *)v16, v18);
  *(void *)uint64_t v15 = v17;
  v15[8] = v18;
  uint64_t v19 = a3[6];
  char v20 = (char *)a1 + v19;
  char v21 = (char *)a2 + v19;
  uint64_t v22 = *(void *)v21;
  char v23 = v21[8];
  sub_100195B7C(*(void *)v21, v23);
  *(void *)char v20 = v22;
  v20[8] = v23;
  uint64_t v24 = a3[7];
  v409 = a1;
  uint64_t v25 = (char *)a1 + v24;
  char v26 = (char *)a2 + v24;
  type metadata accessor for MoonDetailSelectedDate();
  swift_getEnumCaseMultiPayload();
  uint64_t v27 = type metadata accessor for Date();
  char v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
  v28(v25, v26, v27);
  swift_storeEnumTagMultiPayload();
  char v29 = (int *)type metadata accessor for MoonDetailViewModel.Model(0);
  uint64_t v30 = v29[5];
  double v31 = &v25[v30];
  double v32 = &v26[v30];
  uint64_t v33 = *((void *)v32 + 1);
  *(void *)double v31 = *(void *)v32;
  *((void *)v31 + 1) = v33;
  uint64_t v34 = v29[6];
  CGRect v35 = &v25[v34];
  double v36 = &v26[v34];
  uint64_t v37 = *((void *)v36 + 1);
  *(void *)CGRect v35 = *(void *)v36;
  *((void *)v35 + 1) = v37;
  v414 = v25;
  v415 = v29;
  uint64_t v38 = v29[7];
  double v39 = &v25[v38];
  v416 = v26;
  double v40 = &v26[v38];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v28(v39, v40, v27);
  uint64_t v41 = (int *)type metadata accessor for MoonViewModel(0);
  *(void *)&v39[v41[5]] = *(void *)&v40[v41[5]];
  uint64_t v42 = v41[6];
  CGRect v43 = &v39[v42];
  uint64_t v44 = &v40[v42];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v40[v42], 1, v27))
  {
    uint64_t v45 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    v28(v43, v44, v27);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v27);
  }
  uint64_t v46 = v41[7];
  uint64_t v47 = &v39[v46];
  double v48 = &v40[v46];
  v410 = a3;
  v411 = a2;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v40[v46], 1, v27))
  {
    uint64_t v49 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    v28(v47, v48, v27);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v27);
  }
  uint64_t v50 = v27;
  v39[v41[8]] = v40[v41[8]];
  uint64_t v51 = v415[8];
  double v52 = &v414[v51];
  uint64_t v53 = &v416[v51];
  uint64_t v54 = *(void *)&v416[v51 + 8];
  *(void *)double v52 = *(void *)&v416[v51];
  *((void *)v52 + 1) = v54;
  uint64_t v55 = *(void *)&v416[v51 + 24];
  *((void *)v52 + 2) = *(void *)&v416[v51 + 16];
  *((void *)v52 + 3) = v55;
  uint64_t v56 = *(void *)&v416[v51 + 40];
  *((void *)v52 + 4) = *(void *)&v416[v51 + 32];
  *((void *)v52 + 5) = v56;
  v52[48] = v416[v51 + 48];
  uint64_t v57 = (int *)type metadata accessor for MoonScrubberHeaderViewModel(0);
  uint64_t v58 = v57[8];
  uint64_t v59 = &v52[v58];
  uint64_t v60 = &v53[v58];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v28(v59, v60, v50);
  v406 = v28;
  uint64_t v407 = v50;
  v28(&v52[v57[9]], &v53[v57[9]], v50);
  v52[v57[10]] = v53[v57[10]];
  uint64_t v61 = v415[9];
  uint64_t v62 = &v414[v61];
  uint64_t v63 = &v416[v61];
  uint64_t v64 = type metadata accessor for OverviewTableViewModel();
  uint64_t v65 = *(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16);
  v65(v62, v63, v64);
  uint64_t v66 = v415[10];
  char v67 = &v414[v66];
  uint64_t v68 = &v416[v66];
  uint64_t v69 = type metadata accessor for MoonCompactOverviewTableViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 1, v69))
  {
    uint64_t v70 = sub_10017DF08(&qword_100E7CB90);
    memcpy(v67, v68, *(void *)(*(void *)(v70 - 8) + 64));
  }
  else
  {
    v65(v67, v68, v64);
    uint64_t v71 = *(int *)(v69 + 20);
    uint64_t v72 = &v67[v71];
    uint64_t v73 = &v68[v71];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v68[v71], 1, v64))
    {
      uint64_t v74 = sub_10017DF08(&qword_100E7CAE0);
      memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
    }
    else
    {
      v65(v72, v73, v64);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v72, 0, 1, v64);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v67, 0, 1, v69);
  }
  uint64_t v75 = v415[11];
  long long v76 = &v414[v75];
  long long v77 = &v416[v75];
  uint64_t v78 = *(void *)&v416[v75];
  uint64_t v79 = *(void *)&v416[v75 + 8];
  unsigned __int8 v80 = v416[v75 + 16];
  sub_10018F6EC(v78, v79, v80);
  *(void *)long long v76 = v78;
  *((void *)v76 + 1) = v79;
  v76[16] = v80;
  uint64_t v81 = *((void *)v77 + 4);
  *((void *)v76 + 3) = *((void *)v77 + 3);
  *((void *)v76 + 4) = v81;
  int v82 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  uint64_t v83 = v82[6];
  double v84 = &v76[v83];
  uint64_t v85 = &v77[v83];
  uint64_t v86 = type metadata accessor for WeatherDescription();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v86))
  {
    uint64_t v87 = sub_10017DF08(&qword_100E63758);
    memcpy(v84, v85, *(void *)(*(void *)(v87 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(v84, v85, v86);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, v86);
  }
  uint64_t v88 = v82[7];
  uint64_t v89 = &v76[v88];
  double v90 = (uint64_t *)&v77[v88];
  uint64_t v91 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v92 = v90[1];
      *(void *)uint64_t v89 = *v90;
      *((void *)v89 + 1) = v92;
      swift_bridgeObjectRetain();
      goto LABEL_79;
    case 2u:
      uint64_t v93 = type metadata accessor for AttributedString();
      goto LABEL_31;
    case 3u:
      uint64_t v93 = sub_10017DF08(&qword_100E73808);
      goto LABEL_31;
    case 4u:
      uint64_t v94 = v90[1];
      v396 = v77;
      uint64_t v388 = v86;
      if (v94)
      {
        *(void *)uint64_t v89 = *v90;
        *((void *)v89 + 1) = v94;
        uint64_t v95 = v90[3];
        *((void *)v89 + 2) = v90[2];
        *((void *)v89 + 3) = v95;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v102 = *((_OWORD *)v90 + 1);
        *(_OWORD *)uint64_t v89 = *(_OWORD *)v90;
        *((_OWORD *)v89 + 1) = v102;
      }
      uint64_t v103 = type metadata accessor for DetailComponentContainerViewModel();
      uint64_t v104 = *(int *)(v103 + 20);
      uint64_t v105 = &v89[v104];
      double v106 = (uint64_t *)((char *)v90 + v104);
      uint64_t v107 = type metadata accessor for NewsArticleComponentViewModel(0);
      uint64_t v401 = v91;
      v404 = v82;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v387 = v103;
        v392 = v76;
        uint64_t v108 = v106[1];
        *(void *)uint64_t v105 = *v106;
        *((void *)v105 + 1) = v108;
        v384 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v109 = v384[5];
        uint64_t v110 = &v105[v109];
        uint64_t v111 = (char *)v106 + v109;
        uint64_t v112 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v111, 1, v112))
        {
          uint64_t v113 = sub_10017DF08(&qword_100E749B0);
          memcpy(v110, v111, *(void *)(*(void *)(v113 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16))(v110, v111, v112);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v110, 0, 1, v112);
        }
        uint64_t v136 = v384[6];
        uint64_t v137 = &v105[v136];
        uint64_t v138 = (void *)((char *)v106 + v136);
        uint64_t v139 = v138[1];
        *(void *)uint64_t v137 = *v138;
        *((void *)v137 + 1) = v139;
        uint64_t v140 = v384[7];
        uint64_t v141 = &v105[v140];
        uint64_t v142 = (char *)v106 + v140;
        uint64_t v143 = *(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v144 = v141;
        uint64_t v145 = v143;
        v143(v144, v142, v112);
        uint64_t v146 = v384[8];
        uint64_t v147 = &v105[v146];
        uint64_t v148 = (char *)v106 + v146;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v106 + v146, 1, v112))
        {
          uint64_t v149 = sub_10017DF08(&qword_100E749B0);
          memcpy(v147, v148, *(void *)(*(void *)(v149 - 8) + 64));
        }
        else
        {
          v145(v147, v148, v112);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v147, 0, 1, v112);
        }
        long long v76 = v392;
        uint64_t v103 = v387;
        v105[v384[9]] = *((unsigned char *)v106 + v384[9]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v105, v106, *(void *)(*(void *)(v107 - 8) + 64));
      }
      uint64_t v150 = *(int *)(v103 + 24);
      uint64_t v151 = &v89[v150];
      uint64_t v152 = (char *)v90 + v150;
      uint64_t v153 = type metadata accessor for DetailComponentAction();
      long long v77 = v396;
      uint64_t v86 = v388;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v152, 1, v153))
      {
        uint64_t v154 = sub_10017DF08(&qword_100E73810);
        memcpy(v151, v152, *(void *)(*(void *)(v154 - 8) + 64));
      }
      else
      {
        uint64_t v155 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 16))(v151, v152, v155);
        uint64_t v156 = sub_10017DF08(&qword_100E66478);
        v151[*(int *)(v156 + 48)] = v152[*(int *)(v156 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v151, 0, 1, v153);
      }
      uint64_t v91 = v401;
      int v82 = v404;
      goto LABEL_79;
    case 5u:
      v397 = v77;
      uint64_t v400 = v91;
      uint64_t v389 = v86;
      v391 = v76;
      v403 = v82;
      if (v90[3])
      {
        uint64_t v96 = *v90;
        uint64_t v97 = v90[1];
        char v98 = *((unsigned char *)v90 + 16);
        sub_100190CC4(*v90, v97, v98);
        *(void *)uint64_t v89 = v96;
        *((void *)v89 + 1) = v97;
        v89[16] = v98;
        *((void *)v89 + 3) = v90[3];
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v114 = *((_OWORD *)v90 + 1);
        *(_OWORD *)uint64_t v89 = *(_OWORD *)v90;
        *((_OWORD *)v89 + 1) = v114;
      }
      uint64_t v115 = v90[4];
      uint64_t v116 = v90[5];
      uint64_t v117 = v90[6];
      uint64_t v118 = v90[7];
      uint64_t v119 = v90[8];
      uint64_t v120 = v90[9];
      uint64_t v121 = v90[10];
      char v122 = *((unsigned char *)v90 + 89);
      uint64_t v123 = *((unsigned __int8 *)v90 + 88);
      sub_10033A9E8(v115, v116, v117, v118, v119, v120, v121, v123, v122);
      *((void *)v89 + 4) = v115;
      *((void *)v89 + 5) = v116;
      *((void *)v89 + 6) = v117;
      *((void *)v89 + 7) = v118;
      *((void *)v89 + 8) = v119;
      *((void *)v89 + 9) = v120;
      *((void *)v89 + 10) = v121;
      v89[88] = v123;
      v89[89] = v122;
      long long v76 = v391;
      long long v77 = v397;
      goto LABEL_78;
    case 6u:
      uint64_t v93 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_31:
      (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v93 - 8) + 16))(v89, v90, v93);
      goto LABEL_79;
    case 7u:
      uint64_t v99 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
      int v100 = swift_getEnumCaseMultiPayload();
      if (v100 != 1)
      {
        if (v100)
        {
          memcpy(v89, v90, *(void *)(*(void *)(v99 - 8) + 64));
        }
        else
        {
          uint64_t v101 = v90[1];
          *(void *)uint64_t v89 = *v90;
          *((void *)v89 + 1) = v101;
          *((void *)v89 + 2) = v90[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_79;
      }
      uint64_t v389 = v86;
      v393 = v76;
      uint64_t v400 = v91;
      v403 = v82;
      uint64_t v124 = v90[1];
      *(void *)uint64_t v89 = *v90;
      *((void *)v89 + 1) = v124;
      uint64_t v125 = type metadata accessor for ConditionDetailMapViewModel();
      uint64_t v126 = *(int *)(v125 + 20);
      uint64_t v127 = &v89[v126];
      uint64_t v128 = (uint64_t)v90 + v126;
      uint64_t v129 = type metadata accessor for Location();
      uint64_t v130 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v129 - 8) + 16);
      swift_bridgeObjectRetain();
      v130(v127, v128, v129);
      v386 = (int *)v125;
      uint64_t v131 = *(int *)(v125 + 24);
      uint64_t v132 = &v89[v131];
      v133 = (uint64_t *)((char *)v90 + v131);
      uint64_t v134 = (int *)type metadata accessor for WeatherData(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v133, 1, (uint64_t)v134))
      {
        uint64_t v135 = sub_10017DF08(&qword_100E63850);
        memcpy(v132, v133, *(void *)(*(void *)(v135 - 8) + 64));
        goto LABEL_77;
      }
      uint64_t v157 = v133[1];
      *(void *)uint64_t v132 = *v133;
      *((void *)v132 + 1) = v157;
      uint64_t v158 = v134[5];
      uint64_t v159 = &v132[v158];
      uint64_t v160 = v133;
      uint64_t v161 = (char *)v133 + v158;
      uint64_t v162 = type metadata accessor for Locale();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v161, 1, v162))
      {
        uint64_t v163 = sub_10017DF08(&qword_100E63730);
        memcpy(v159, v161, *(void *)(*(void *)(v163 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 16))(v159, v161, v162);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v159, 0, 1, v162);
      }
      uint64_t v164 = v134[6];
      uint64_t v165 = &v132[v164];
      uint64_t v166 = (char *)v160 + v164;
      uint64_t v167 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 16))(v165, v166, v167);
      uint64_t v168 = v134[7];
      uint64_t v169 = &v132[v168];
      v170 = (char *)v160 + v168;
      uint64_t v171 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v170, 1, v171))
      {
        uint64_t v172 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v169, v170, *(void *)(*(void *)(v172 - 8) + 64));
      }
      else
      {
        v406(v169, v170, v407);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v169, 0, 1, v171);
      }
      uint64_t v173 = v134[8];
      uint64_t v174 = &v132[v173];
      uint64_t v175 = (void *)((char *)v160 + v173);
      uint64_t v176 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      int v177 = swift_getEnumCaseMultiPayload();
      if (v177 == 1)
      {
        uint64_t v179 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v179 - 8) + 16))(v174, v175, v179);
        goto LABEL_65;
      }
      if (!v177)
      {
        uint64_t v178 = v175[1];
        *(void *)uint64_t v174 = *v175;
        *((void *)v174 + 1) = v178;
        swift_bridgeObjectRetain();
LABEL_65:
        swift_storeEnumTagMultiPayload();
        goto LABEL_67;
      }
      memcpy(v174, v175, *(void *)(*(void *)(v176 - 8) + 64));
LABEL_67:
      uint64_t v385 = (uint64_t)v134;
      uint64_t v180 = v134[9];
      uint64_t v181 = &v132[v180];
      long long v182 = (char *)v160 + v180;
      uint64_t v183 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v182, 1, v183))
      {
        uint64_t v184 = sub_10017DF08(&qword_100E63740);
        memcpy(v181, v182, *(void *)(*(void *)(v184 - 8) + 64));
      }
      else
      {
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v182, 1, v407))
        {
          uint64_t v185 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v181, v182, *(void *)(*(void *)(v185 - 8) + 64));
        }
        else
        {
          v406(v181, v182, v407);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v181, 0, 1, v407);
        }
        uint64_t v186 = *(int *)(v183 + 20);
        uint64_t v187 = &v181[v186];
        char v188 = &v182[v186];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v182[v186], 1, v407))
        {
          uint64_t v189 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v187, v188, *(void *)(*(void *)(v189 - 8) + 64));
        }
        else
        {
          v406(v187, v188, v407);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v187, 0, 1, v407);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v181, 0, 1, v183);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v132, 0, 1, v385);
LABEL_77:
      uint64_t v190 = v386[7];
      long long v191 = &v89[v190];
      long long v192 = (uint64_t *)((char *)v90 + v190);
      uint64_t v193 = v192[1];
      *(void *)long long v191 = *v192;
      *((void *)v191 + 1) = v193;
      uint64_t v194 = v386[8];
      v195 = &v89[v194];
      uint64_t v196 = (uint64_t)v90 + v194;
      uint64_t v197 = type metadata accessor for WeatherMapOverlayKind();
      v198 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v197 - 8) + 16);
      swift_bridgeObjectRetain();
      v198(v195, v196, v197);
      v89[v386[9]] = *((unsigned char *)v90 + v386[9]);
      swift_storeEnumTagMultiPayload();
      long long v76 = v393;
LABEL_78:
      uint64_t v91 = v400;
      int v82 = v403;
      uint64_t v86 = v389;
LABEL_79:
      swift_storeEnumTagMultiPayload();
      uint64_t v199 = v82[8];
      v200 = &v76[v199];
      v201 = (uint64_t *)&v77[v199];
      if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v77[v199], 1, v91))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v203 = v201[1];
            *(void *)v200 = *v201;
            *((void *)v200 + 1) = v203;
            swift_bridgeObjectRetain();
            goto LABEL_140;
          case 2u:
            uint64_t v204 = type metadata accessor for AttributedString();
            goto LABEL_91;
          case 3u:
            uint64_t v204 = sub_10017DF08(&qword_100E73808);
            goto LABEL_91;
          case 4u:
            uint64_t v205 = v201[1];
            v398 = v77;
            if (v205)
            {
              *(void *)v200 = *v201;
              *((void *)v200 + 1) = v205;
              uint64_t v206 = v201[3];
              *((void *)v200 + 2) = v201[2];
              *((void *)v200 + 3) = v206;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v213 = *((_OWORD *)v201 + 1);
              *(_OWORD *)v200 = *(_OWORD *)v201;
              *((_OWORD *)v200 + 1) = v213;
            }
            uint64_t v214 = type metadata accessor for DetailComponentContainerViewModel();
            uint64_t v215 = *(int *)(v214 + 20);
            v216 = &v200[v215];
            v217 = (uint64_t *)((char *)v201 + v215);
            uint64_t v218 = type metadata accessor for NewsArticleComponentViewModel(0);
            uint64_t v402 = v91;
            v405 = v82;
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v408 = v214;
              v395 = v76;
              uint64_t v219 = v217[1];
              *(void *)v216 = *v217;
              *((void *)v216 + 1) = v219;
              v412 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
              uint64_t v220 = v412[5];
              v221 = &v216[v220];
              v222 = (char *)v217 + v220;
              uint64_t v223 = type metadata accessor for URL();
              swift_bridgeObjectRetain();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v222, 1, v223))
              {
                uint64_t v224 = sub_10017DF08(&qword_100E749B0);
                memcpy(v221, v222, *(void *)(*(void *)(v224 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v223 - 8) + 16))(v221, v222, v223);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v221, 0, 1, v223);
              }
              uint64_t v247 = v412[6];
              v248 = &v216[v247];
              v249 = (void *)((char *)v217 + v247);
              uint64_t v250 = v249[1];
              *(void *)v248 = *v249;
              *((void *)v248 + 1) = v250;
              uint64_t v251 = v412[7];
              v252 = &v216[v251];
              v253 = (char *)v217 + v251;
              v254 = *(void (**)(char *, char *, uint64_t))(*(void *)(v223 - 8) + 16);
              swift_bridgeObjectRetain();
              v254(v252, v253, v223);
              uint64_t v255 = v412[8];
              v256 = &v216[v255];
              v257 = (char *)v217 + v255;
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v217 + v255, 1, v223))
              {
                uint64_t v258 = sub_10017DF08(&qword_100E749B0);
                memcpy(v256, v257, *(void *)(*(void *)(v258 - 8) + 64));
              }
              else
              {
                v254(v256, v257, v223);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v256, 0, 1, v223);
              }
              long long v76 = v395;
              uint64_t v214 = v408;
              v216[v412[9]] = *((unsigned char *)v217 + v412[9]);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v216, v217, *(void *)(*(void *)(v218 - 8) + 64));
            }
            uint64_t v259 = *(int *)(v214 + 24);
            v260 = &v200[v259];
            v261 = (char *)v201 + v259;
            uint64_t v262 = type metadata accessor for DetailComponentAction();
            long long v77 = v398;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v261, 1, v262))
            {
              uint64_t v263 = sub_10017DF08(&qword_100E73810);
              memcpy(v260, v261, *(void *)(*(void *)(v263 - 8) + 64));
            }
            else
            {
              uint64_t v264 = type metadata accessor for URL();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v264 - 8) + 16))(v260, v261, v264);
              uint64_t v265 = sub_10017DF08(&qword_100E66478);
              v260[*(int *)(v265 + 48)] = v261[*(int *)(v265 + 48)];
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v260, 0, 1, v262);
            }
            goto LABEL_139;
          case 5u:
            v399 = v77;
            uint64_t v402 = v91;
            v394 = v76;
            v405 = v82;
            if (v201[3])
            {
              uint64_t v207 = *v201;
              uint64_t v208 = v201[1];
              char v209 = *((unsigned char *)v201 + 16);
              sub_100190CC4(*v201, v208, v209);
              *(void *)v200 = v207;
              *((void *)v200 + 1) = v208;
              v200[16] = v209;
              *((void *)v200 + 3) = v201[3];
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v225 = *((_OWORD *)v201 + 1);
              *(_OWORD *)v200 = *(_OWORD *)v201;
              *((_OWORD *)v200 + 1) = v225;
            }
            uint64_t v226 = v201[4];
            uint64_t v227 = v201[5];
            uint64_t v228 = v201[6];
            uint64_t v229 = v201[7];
            uint64_t v230 = v201[8];
            uint64_t v231 = v201[9];
            uint64_t v232 = v201[10];
            char v233 = *((unsigned char *)v201 + 89);
            uint64_t v234 = *((unsigned __int8 *)v201 + 88);
            sub_10033A9E8(v226, v227, v228, v229, v230, v231, v232, v234, v233);
            *((void *)v200 + 4) = v226;
            *((void *)v200 + 5) = v227;
            *((void *)v200 + 6) = v228;
            *((void *)v200 + 7) = v229;
            *((void *)v200 + 8) = v230;
            *((void *)v200 + 9) = v231;
            *((void *)v200 + 10) = v232;
            v200[88] = v234;
            v200[89] = v233;
            goto LABEL_138;
          case 6u:
            uint64_t v204 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_91:
            (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v204 - 8) + 16))(v200, v201, v204);
            goto LABEL_140;
          case 7u:
            v399 = v77;
            uint64_t v210 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
            int v211 = swift_getEnumCaseMultiPayload();
            if (v211 != 1)
            {
              if (v211)
              {
                memcpy(v200, v201, *(void *)(*(void *)(v210 - 8) + 64));
              }
              else
              {
                uint64_t v212 = v201[1];
                *(void *)v200 = *v201;
                *((void *)v200 + 1) = v212;
                *((void *)v200 + 2) = v201[2];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_storeEnumTagMultiPayload();
              }
              long long v77 = v399;
              goto LABEL_140;
            }
            uint64_t v402 = v91;
            v405 = v82;
            v394 = v76;
            uint64_t v235 = v201[1];
            *(void *)v200 = *v201;
            *((void *)v200 + 1) = v235;
            uint64_t v236 = type metadata accessor for ConditionDetailMapViewModel();
            uint64_t v237 = *(int *)(v236 + 20);
            v238 = &v200[v237];
            uint64_t v239 = (uint64_t)v201 + v237;
            uint64_t v240 = type metadata accessor for Location();
            v241 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v240 - 8) + 16);
            swift_bridgeObjectRetain();
            v241(v238, v239, v240);
            v390 = (int *)v236;
            uint64_t v242 = *(int *)(v236 + 24);
            v243 = &v200[v242];
            v244 = (uint64_t *)((char *)v201 + v242);
            v245 = (int *)type metadata accessor for WeatherData(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v244, 1, (uint64_t)v245))
            {
              uint64_t v246 = sub_10017DF08(&qword_100E63850);
              memcpy(v243, v244, *(void *)(*(void *)(v246 - 8) + 64));
              goto LABEL_137;
            }
            uint64_t v266 = v244[1];
            *(void *)v243 = *v244;
            *((void *)v243 + 1) = v266;
            uint64_t v267 = v245[5];
            v268 = &v243[v267];
            v269 = (char *)v244 + v267;
            uint64_t v270 = type metadata accessor for Locale();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v269, 1, v270))
            {
              uint64_t v271 = sub_10017DF08(&qword_100E63730);
              memcpy(v268, v269, *(void *)(*(void *)(v271 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v270 - 8) + 16))(v268, v269, v270);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v268, 0, 1, v270);
            }
            uint64_t v272 = v245[6];
            v273 = &v243[v272];
            v274 = (char *)v244 + v272;
            uint64_t v275 = type metadata accessor for WeatherDataModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v275 - 8) + 16))(v273, v274, v275);
            uint64_t v276 = v245[7];
            v277 = &v243[v276];
            v278 = (char *)v244 + v276;
            uint64_t v279 = sub_10017DF08(&qword_100E63738);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v278, 1, v279))
            {
              uint64_t v280 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v277, v278, *(void *)(*(void *)(v280 - 8) + 64));
            }
            else
            {
              v406(v277, v278, v407);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v277, 0, 1, v279);
            }
            uint64_t v281 = v245[8];
            v282 = &v243[v281];
            v283 = (void *)((char *)v244 + v281);
            uint64_t v284 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            int v285 = swift_getEnumCaseMultiPayload();
            if (v285 == 1)
            {
              uint64_t v287 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(char *, void *, uint64_t))(*(void *)(v287 - 8) + 16))(v282, v283, v287);
            }
            else
            {
              if (v285)
              {
                memcpy(v282, v283, *(void *)(*(void *)(v284 - 8) + 64));
LABEL_127:
                uint64_t v288 = v245[9];
                v289 = &v243[v288];
                v290 = (char *)v244 + v288;
                uint64_t v291 = type metadata accessor for WeatherDataOverrides();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v290, 1, v291))
                {
                  uint64_t v292 = sub_10017DF08(&qword_100E63740);
                  memcpy(v289, v290, *(void *)(*(void *)(v292 - 8) + 64));
                }
                else
                {
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v290, 1, v407))
                  {
                    uint64_t v293 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v289, v290, *(void *)(*(void *)(v293 - 8) + 64));
                  }
                  else
                  {
                    v406(v289, v290, v407);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v289, 0, 1, v407);
                  }
                  uint64_t v294 = *(int *)(v291 + 20);
                  v295 = &v289[v294];
                  v296 = &v290[v294];
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v290[v294], 1, v407))
                  {
                    uint64_t v297 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v295, v296, *(void *)(*(void *)(v297 - 8) + 64));
                  }
                  else
                  {
                    v406(v295, v296, v407);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v295, 0, 1, v407);
                  }
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v289, 0, 1, v291);
                }
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v243, 0, 1, (uint64_t)v245);
LABEL_137:
                uint64_t v298 = v390[7];
                v299 = &v200[v298];
                v300 = (uint64_t *)((char *)v201 + v298);
                uint64_t v301 = v300[1];
                *(void *)v299 = *v300;
                *((void *)v299 + 1) = v301;
                uint64_t v302 = v390[8];
                v303 = &v200[v302];
                uint64_t v304 = (uint64_t)v201 + v302;
                uint64_t v305 = type metadata accessor for WeatherMapOverlayKind();
                v306 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v305 - 8) + 16);
                swift_bridgeObjectRetain();
                v306(v303, v304, v305);
                v200[v390[9]] = *((unsigned char *)v201 + v390[9]);
                swift_storeEnumTagMultiPayload();
LABEL_138:
                long long v76 = v394;
                long long v77 = v399;
LABEL_139:
                uint64_t v91 = v402;
                int v82 = v405;
LABEL_140:
                swift_storeEnumTagMultiPayload();
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v200, 0, 1, v91);
                goto LABEL_141;
              }
              uint64_t v286 = v283[1];
              *(void *)v282 = *v283;
              *((void *)v282 + 1) = v286;
              swift_bridgeObjectRetain();
            }
            swift_storeEnumTagMultiPayload();
            goto LABEL_127;
          default:
            (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v86 - 8) + 16))(v200, v201, v86);
            goto LABEL_140;
        }
      }
      uint64_t v202 = sub_10017DF08(&qword_100E73818);
      memcpy(v200, v201, *(void *)(*(void *)(v202 - 8) + 64));
LABEL_141:
      v76[v82[9]] = v77[v82[9]];
      v76[v82[10]] = v77[v82[10]];
      *(void *)&v414[v415[12]] = *(void *)&v416[v415[12]];
      uint64_t v307 = v415[13];
      v308 = &v414[v307];
      v309 = &v416[v307];
      uint64_t v310 = type metadata accessor for DetailComponentContainerViewModel();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v309, 1, v310))
      {
        uint64_t v311 = sub_10017DF08(&qword_100E66E28);
        memcpy(v308, v309, *(void *)(*(void *)(v311 - 8) + 64));
        v312 = v414;
        uint64_t v13 = v409;
      }
      else
      {
        uint64_t v313 = *((void *)v309 + 1);
        if (v313)
        {
          *(void *)v308 = *(void *)v309;
          *((void *)v308 + 1) = v313;
          uint64_t v314 = *((void *)v309 + 3);
          *((void *)v308 + 2) = *((void *)v309 + 2);
          *((void *)v308 + 3) = v314;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v315 = *((_OWORD *)v309 + 1);
          *(_OWORD *)v308 = *(_OWORD *)v309;
          *((_OWORD *)v308 + 1) = v315;
        }
        uint64_t v316 = *(int *)(v310 + 20);
        v317 = &v308[v316];
        v318 = &v309[v316];
        uint64_t v319 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v320 = *((void *)v318 + 1);
          *(void *)v317 = *(void *)v318;
          *((void *)v317 + 1) = v320;
          v413 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v321 = v413[5];
          v322 = &v317[v321];
          v323 = &v318[v321];
          uint64_t v324 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v323, 1, v324))
          {
            uint64_t v325 = sub_10017DF08(&qword_100E749B0);
            memcpy(v322, v323, *(void *)(*(void *)(v325 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v324 - 8) + 16))(v322, v323, v324);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v322, 0, 1, v324);
          }
          uint64_t v326 = v413[6];
          v327 = &v317[v326];
          v328 = &v318[v326];
          uint64_t v329 = *((void *)v328 + 1);
          *(void *)v327 = *(void *)v328;
          *((void *)v327 + 1) = v329;
          uint64_t v330 = v413[7];
          v331 = &v317[v330];
          v332 = &v318[v330];
          v333 = *(void (**)(char *, char *, uint64_t))(*(void *)(v324 - 8) + 16);
          swift_bridgeObjectRetain();
          v333(v331, v332, v324);
          uint64_t v334 = v413[8];
          v335 = &v317[v334];
          v336 = &v318[v334];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v318[v334], 1, v324))
          {
            uint64_t v337 = sub_10017DF08(&qword_100E749B0);
            memcpy(v335, v336, *(void *)(*(void *)(v337 - 8) + 64));
          }
          else
          {
            v333(v335, v336, v324);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v335, 0, 1, v324);
          }
          v317[v413[9]] = v318[v413[9]];
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v317, v318, *(void *)(*(void *)(v319 - 8) + 64));
        }
        uint64_t v338 = *(int *)(v310 + 24);
        v339 = &v308[v338];
        v340 = &v309[v338];
        uint64_t v341 = type metadata accessor for DetailComponentAction();
        uint64_t v13 = v409;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v340, 1, v341))
        {
          uint64_t v342 = sub_10017DF08(&qword_100E73810);
          memcpy(v339, v340, *(void *)(*(void *)(v342 - 8) + 64));
        }
        else
        {
          uint64_t v343 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v343 - 8) + 16))(v339, v340, v343);
          uint64_t v344 = sub_10017DF08(&qword_100E66478);
          v339[*(int *)(v344 + 48)] = v340[*(int *)(v344 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v339, 0, 1, v341);
        }
        v312 = v414;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v308, 0, 1, v310);
      }
      uint64_t v345 = v415[14];
      v346 = &v312[v345];
      v347 = &v416[v345];
      uint64_t v348 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v348 - 8) + 16))(v346, v347, v348);
      v312[v415[15]] = v416[v415[15]];
      uint64_t v349 = v410[8];
      long long v350 = *(_OWORD *)((char *)v411 + v349 + 24);
      *(_OWORD *)((char *)v13 + v349 + 24) = v350;
      (**(void (***)(void))(v350 - 8))();
      uint64_t v351 = v410[9];
      uint64_t v352 = v410[10];
      v353 = (void *)((char *)v13 + v351);
      v354 = (void *)((char *)v411 + v351);
      uint64_t v355 = v354[1];
      void *v353 = *v354;
      v353[1] = v355;
      v356 = (void *)((char *)v13 + v352);
      v357 = (void *)((char *)v411 + v352);
      uint64_t v358 = v357[1];
      void *v356 = *v357;
      v356[1] = v358;
      uint64_t v359 = v410[11];
      uint64_t v360 = v410[12];
      v361 = (void *)((char *)v13 + v359);
      v362 = (void *)((char *)v411 + v359);
      uint64_t v363 = v362[1];
      void *v361 = *v362;
      v361[1] = v363;
      v364 = (void *)((char *)v13 + v360);
      v365 = (void *)((char *)v411 + v360);
      uint64_t v366 = v365[1];
      void *v364 = *v365;
      v364[1] = v366;
      uint64_t v367 = v410[13];
      uint64_t v368 = v410[14];
      v369 = (void *)((char *)v13 + v367);
      v370 = (void *)((char *)v411 + v367);
      uint64_t v371 = v370[1];
      void *v369 = *v370;
      v369[1] = v371;
      v372 = (void *)((char *)v13 + v368);
      v373 = (void *)((char *)v411 + v368);
      uint64_t v374 = v373[1];
      void *v372 = *v373;
      v372[1] = v374;
      uint64_t v375 = v410[15];
      uint64_t v376 = v410[16];
      v377 = (void *)((char *)v13 + v375);
      v378 = (void *)((char *)v411 + v375);
      uint64_t v379 = v378[1];
      void *v377 = *v378;
      v377[1] = v379;
      v380 = (void *)((char *)v13 + v376);
      v381 = (void *)((char *)v411 + v376);
      uint64_t v382 = v381[1];
      void *v380 = *v381;
      v380[1] = v382;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      return v13;
    default:
      (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v86 - 8) + 16))(v89, v90, v86);
      goto LABEL_79;
  }
}

uint64_t sub_100675C08(uint64_t a1, int *a2)
{
  sub_10017DF08(&qword_100E65310);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v5 = a1 + *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    uint64_t v6 = type metadata accessor for PresentationMode();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  sub_10018F6D8(*(void *)(a1 + a2[5]), *(unsigned char *)(a1 + a2[5] + 8));
  sub_10018F6D8(*(void *)(a1 + a2[6]), *(unsigned char *)(a1 + a2[6] + 8));
  uint64_t v7 = a1 + a2[7];
  type metadata accessor for MoonDetailSelectedDate();
  if (swift_getEnumCaseMultiPayload() <= 2)
  {
    uint64_t v8 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  uint64_t v9 = type metadata accessor for MoonDetailViewModel.Model(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v7 + *(int *)(v9 + 28);
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  v12(v10, v11);
  uint64_t v13 = type metadata accessor for MoonViewModel(0);
  uint64_t v14 = v10 + *(int *)(v13 + 24);
  if (!_s7Weather24LocationCompositionStateOwet_0(v14, 1, v11)) {
    v12(v14, v11);
  }
  uint64_t v15 = v10 + *(int *)(v13 + 28);
  if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v11)) {
    v12(v15, v11);
  }
  uint64_t v118 = (int *)v9;
  uint64_t v16 = v7 + *(int *)(v9 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = type metadata accessor for MoonScrubberHeaderViewModel(0);
  v12(v16 + *(int *)(v17 + 32), v11);
  uint64_t v18 = v16 + *(int *)(v17 + 36);
  uint64_t v19 = v118;
  uint64_t v116 = v12;
  v12(v18, v11);
  uint64_t v20 = v7 + v118[9];
  uint64_t v21 = type metadata accessor for OverviewTableViewModel();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8);
  v22(v20, v21);
  uint64_t v23 = v7 + v118[10];
  uint64_t v24 = type metadata accessor for MoonCompactOverviewTableViewModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v23, 1, v24))
  {
    v22(v23, v21);
    uint64_t v25 = v23 + *(int *)(v24 + 20);
    if (!_s7Weather24LocationCompositionStateOwet_0(v25, 1, v21)) {
      v22(v25, v21);
    }
  }
  uint64_t v26 = v7 + v118[11];
  sub_10014D144(*(void *)v26, *(void *)(v26 + 8), *(unsigned char *)(v26 + 16));
  swift_bridgeObjectRelease();
  uint64_t v27 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  uint64_t v28 = v26 + v27[6];
  uint64_t v29 = type metadata accessor for WeatherDescription();
  if (!_s7Weather24LocationCompositionStateOwet_0(v28, 1, v29)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
  }
  uint64_t v30 = v26 + v27[7];
  uint64_t v31 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v30, v29);
      goto LABEL_52;
    case 1u:
      goto LABEL_36;
    case 2u:
      uint64_t v32 = type metadata accessor for AttributedString();
      goto LABEL_31;
    case 3u:
      uint64_t v32 = sub_10017DF08(&qword_100E73808);
      goto LABEL_31;
    case 4u:
      uint64_t v113 = v29;
      if (*(void *)(v30 + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v109 = type metadata accessor for DetailComponentContainerViewModel();
      uint64_t v33 = v30 + *(int *)(v109 + 20);
      type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        double v106 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v101 = v33 + v106[5];
        uint64_t v104 = type metadata accessor for URL();
        if (!_s7Weather24LocationCompositionStateOwet_0(v101, 1, v104)) {
          (*(void (**)(uint64_t))(*(void *)(v104 - 8) + 8))(v101);
        }
        swift_bridgeObjectRelease();
        int v100 = *(void (**)(uint64_t, uint64_t))(*(void *)(v104 - 8) + 8);
        v100(v33 + v106[7], v104);
        uint64_t v107 = v33 + v106[8];
        if (!_s7Weather24LocationCompositionStateOwet_0(v107, 1, v104)) {
          v100(v107, v104);
        }
      }
      v30 += *(int *)(v109 + 24);
      uint64_t v34 = type metadata accessor for DetailComponentAction();
      uint64_t v29 = v113;
      if (_s7Weather24LocationCompositionStateOwet_0(v30, 1, v34)) {
        goto LABEL_52;
      }
      uint64_t v32 = type metadata accessor for URL();
LABEL_31:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v30, v32);
LABEL_52:
      uint64_t v56 = v26 + v27[8];
      if (!_s7Weather24LocationCompositionStateOwet_0(v56, 1, v31))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v56, v29);
            break;
          case 1u:
            goto LABEL_75;
          case 2u:
            uint64_t v57 = type metadata accessor for AttributedString();
            goto LABEL_70;
          case 3u:
            uint64_t v57 = sub_10017DF08(&qword_100E73808);
            goto LABEL_70;
          case 4u:
            if (*(void *)(v56 + 8))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            uint64_t v58 = type metadata accessor for DetailComponentContainerViewModel();
            uint64_t v59 = v56 + *(int *)(v58 + 20);
            type metadata accessor for NewsArticleComponentViewModel(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              swift_bridgeObjectRelease();
              uint64_t v60 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
              uint64_t v61 = v59 + v60[5];
              uint64_t v62 = type metadata accessor for URL();
              if (!_s7Weather24LocationCompositionStateOwet_0(v61, 1, v62)) {
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8))(v61, v62);
              }
              swift_bridgeObjectRelease();
              uint64_t v63 = (void (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8);
              uint64_t v117 = *v63;
              (*v63)(v59 + v60[7], v62);
              uint64_t v64 = v59 + v60[8];
              if (!_s7Weather24LocationCompositionStateOwet_0(v64, 1, v62)) {
                v117(v64, v62);
              }
            }
            uint64_t v65 = v56 + *(int *)(v58 + 24);
            uint64_t v66 = type metadata accessor for DetailComponentAction();
            if (_s7Weather24LocationCompositionStateOwet_0(v65, 1, v66)) {
              break;
            }
            uint64_t v67 = type metadata accessor for URL();
            goto LABEL_104;
          case 5u:
            if (*(void *)(v56 + 24))
            {
              sub_100191924(*(void *)v56, *(void *)(v56 + 8), *(unsigned char *)(v56 + 16));
              swift_bridgeObjectRelease();
            }
            sub_10033AB48(*(void *)(v56 + 32), *(void *)(v56 + 40), *(void *)(v56 + 48), *(void *)(v56 + 56), *(void *)(v56 + 64), *(void *)(v56 + 72), *(void *)(v56 + 80), *(unsigned __int8 *)(v56 + 88), *(unsigned char *)(v56 + 89));
            break;
          case 6u:
            uint64_t v57 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_70:
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v57 - 8) + 8))(v56, v57);
            break;
          case 7u:
            type metadata accessor for ConditionDetailDynamicContentIdentifier();
            int v68 = swift_getEnumCaseMultiPayload();
            if (v68 == 1)
            {
              swift_bridgeObjectRelease();
              uint64_t v83 = (int *)type metadata accessor for ConditionDetailMapViewModel();
              uint64_t v84 = v56 + v83[5];
              uint64_t v85 = type metadata accessor for Location();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v85 - 8) + 8))(v84, v85);
              uint64_t v86 = v56 + v83[6];
              uint64_t v87 = (int *)type metadata accessor for WeatherData(0);
              if (!_s7Weather24LocationCompositionStateOwet_0(v86, 1, (uint64_t)v87))
              {
                uint64_t v115 = v83;
                swift_bridgeObjectRelease();
                uint64_t v88 = v86 + v87[5];
                uint64_t v89 = type metadata accessor for Locale();
                if (!_s7Weather24LocationCompositionStateOwet_0(v88, 1, v89)) {
                  (*(void (**)(uint64_t, uint64_t))(*(void *)(v89 - 8) + 8))(v88, v89);
                }
                uint64_t v90 = v86 + v87[6];
                uint64_t v91 = type metadata accessor for WeatherDataModel();
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v91 - 8) + 8))(v90, v91);
                uint64_t v92 = v86 + v87[7];
                uint64_t v93 = sub_10017DF08(&qword_100E63738);
                if (!_s7Weather24LocationCompositionStateOwet_0(v92, 1, v93)) {
                  v116(v92, v11);
                }
                uint64_t v94 = v86 + v87[8];
                type metadata accessor for WeatherData.WeatherStatisticsState(0);
                int v95 = swift_getEnumCaseMultiPayload();
                uint64_t v83 = v115;
                if (v95 == 1)
                {
                  uint64_t v96 = type metadata accessor for WeatherStatisticsModel();
                  (*(void (**)(uint64_t, uint64_t))(*(void *)(v96 - 8) + 8))(v94, v96);
                }
                else if (!v95)
                {
                  swift_bridgeObjectRelease();
                }
                uint64_t v97 = v86 + v87[9];
                uint64_t v98 = type metadata accessor for WeatherDataOverrides();
                if (!_s7Weather24LocationCompositionStateOwet_0(v97, 1, v98))
                {
                  if (!_s7Weather24LocationCompositionStateOwet_0(v97, 1, v11)) {
                    v116(v97, v11);
                  }
                  uint64_t v99 = v97 + *(int *)(v98 + 20);
                  if (!_s7Weather24LocationCompositionStateOwet_0(v99, 1, v11)) {
                    v116(v99, v11);
                  }
                }
              }
              swift_bridgeObjectRelease();
              uint64_t v65 = v56 + v83[8];
              uint64_t v67 = type metadata accessor for WeatherMapOverlayKind();
LABEL_104:
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v67 - 8) + 8))(v65, v67);
            }
            else if (!v68)
            {
              swift_bridgeObjectRelease();
LABEL_75:
              swift_bridgeObjectRelease();
            }
            break;
          default:
            break;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v69 = v7 + v118[13];
      uint64_t v70 = type metadata accessor for DetailComponentContainerViewModel();
      if (!_s7Weather24LocationCompositionStateOwet_0(v69, 1, v70))
      {
        if (*(void *)(v69 + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v71 = v69 + *(int *)(v70 + 20);
        type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v72 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v73 = v71 + v72[5];
          uint64_t v74 = type metadata accessor for URL();
          if (!_s7Weather24LocationCompositionStateOwet_0(v73, 1, v74)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v74 - 8) + 8))(v73, v74);
          }
          swift_bridgeObjectRelease();
          uint64_t v75 = *(void (**)(uint64_t, uint64_t))(*(void *)(v74 - 8) + 8);
          v75(v71 + v72[7], v74);
          uint64_t v76 = v71 + v72[8];
          if (!_s7Weather24LocationCompositionStateOwet_0(v76, 1, v74)) {
            v75(v76, v74);
          }
        }
        uint64_t v77 = v69 + *(int *)(v70 + 24);
        uint64_t v78 = type metadata accessor for DetailComponentAction();
        uint64_t v19 = v118;
        if (!_s7Weather24LocationCompositionStateOwet_0(v77, 1, v78))
        {
          uint64_t v79 = type metadata accessor for URL();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v77, v79);
        }
      }
      uint64_t v80 = v7 + v19[14];
      uint64_t v81 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v80, v81);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + a2[8]);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    case 5u:
      if (*(void *)(v30 + 24))
      {
        sub_100191924(*(void *)v30, *(void *)(v30 + 8), *(unsigned char *)(v30 + 16));
        swift_bridgeObjectRelease();
      }
      sub_10033AB48(*(void *)(v30 + 32), *(void *)(v30 + 40), *(void *)(v30 + 48), *(void *)(v30 + 56), *(void *)(v30 + 64), *(void *)(v30 + 72), *(void *)(v30 + 80), *(unsigned __int8 *)(v30 + 88), *(unsigned char *)(v30 + 89));
      goto LABEL_52;
    case 6u:
      uint64_t v32 = type metadata accessor for PrecipitationTotalPlatterViewModel();
      goto LABEL_31;
    case 7u:
      type metadata accessor for ConditionDetailDynamicContentIdentifier();
      int v35 = swift_getEnumCaseMultiPayload();
      if (v35 == 1)
      {
        uint64_t v114 = v29;
        swift_bridgeObjectRelease();
        uint64_t v36 = type metadata accessor for ConditionDetailMapViewModel();
        uint64_t v110 = v30 + *(int *)(v36 + 20);
        uint64_t v37 = type metadata accessor for Location();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v110, v37);
        uint64_t v108 = v36;
        uint64_t v38 = v30 + *(int *)(v36 + 24);
        uint64_t v39 = type metadata accessor for WeatherData(0);
        uint64_t v111 = v38;
        uint64_t v40 = v38;
        uint64_t v41 = (int *)v39;
        if (!_s7Weather24LocationCompositionStateOwet_0(v40, 1, v39))
        {
          swift_bridgeObjectRelease();
          uint64_t v105 = v41;
          uint64_t v42 = v111 + v41[5];
          uint64_t v102 = type metadata accessor for Locale();
          if (!_s7Weather24LocationCompositionStateOwet_0(v42, 1, v102)) {
            (*(void (**)(uint64_t))(*(void *)(v102 - 8) + 8))(v42);
          }
          uint64_t v103 = v111 + v105[6];
          uint64_t v43 = type metadata accessor for WeatherDataModel();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v103, v43);
          uint64_t v44 = v111 + v105[7];
          uint64_t v45 = sub_10017DF08(&qword_100E63738);
          if (!_s7Weather24LocationCompositionStateOwet_0(v44, 1, v45)) {
            v116(v44, v11);
          }
          uint64_t v46 = v111 + v105[8];
          type metadata accessor for WeatherData.WeatherStatisticsState(0);
          int v47 = swift_getEnumCaseMultiPayload();
          if (v47 == 1)
          {
            uint64_t v48 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v46, v48);
          }
          else if (!v47)
          {
            swift_bridgeObjectRelease();
          }
          uint64_t v49 = v111 + v105[9];
          uint64_t v50 = type metadata accessor for WeatherDataOverrides();
          uint64_t v112 = v49;
          uint64_t v51 = v49;
          uint64_t v52 = v50;
          if (!_s7Weather24LocationCompositionStateOwet_0(v51, 1, v50))
          {
            if (!_s7Weather24LocationCompositionStateOwet_0(v112, 1, v11)) {
              v116(v112, v11);
            }
            uint64_t v53 = v112 + *(int *)(v52 + 20);
            if (!_s7Weather24LocationCompositionStateOwet_0(v53, 1, v11)) {
              v116(v53, v11);
            }
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v54 = v30 + *(int *)(v108 + 32);
        uint64_t v55 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v55 - 8) + 8))(v54, v55);
        uint64_t v29 = v114;
      }
      else if (!v35)
      {
        swift_bridgeObjectRelease();
LABEL_36:
        swift_bridgeObjectRelease();
      }
      goto LABEL_52;
    default:
      goto LABEL_52;
  }
}

void *sub_100676DA0(void *a1, void *a2, int *a3)
{
  sub_10017DF08(&qword_100E65310);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    uint64_t v7 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for PresentationMode();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[5];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = v13[8];
  sub_100195B7C(*(void *)v13, v15);
  *(void *)uint64_t v12 = v14;
  v12[8] = v15;
  uint64_t v16 = a3[6];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = *(void *)v18;
  char v20 = v18[8];
  sub_100195B7C(*(void *)v18, v20);
  *(void *)uint64_t v17 = v19;
  v17[8] = v20;
  uint64_t v21 = a3[7];
  uint64_t v407 = a1;
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  type metadata accessor for MoonDetailSelectedDate();
  swift_getEnumCaseMultiPayload();
  uint64_t v24 = type metadata accessor for Date();
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
  v25(v22, v23, v24);
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = (int *)type metadata accessor for MoonDetailViewModel.Model(0);
  uint64_t v27 = v26[5];
  uint64_t v28 = &v22[v27];
  uint64_t v29 = &v23[v27];
  uint64_t v30 = *((void *)v29 + 1);
  *(void *)uint64_t v28 = *(void *)v29;
  *((void *)v28 + 1) = v30;
  uint64_t v31 = v26[6];
  uint64_t v32 = &v22[v31];
  uint64_t v33 = &v23[v31];
  uint64_t v34 = *((void *)v33 + 1);
  *(void *)uint64_t v32 = *(void *)v33;
  *((void *)v32 + 1) = v34;
  v411 = v22;
  v412 = v26;
  uint64_t v35 = v26[7];
  uint64_t v36 = &v22[v35];
  v413 = v23;
  uint64_t v37 = &v23[v35];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25(v36, v37, v24);
  uint64_t v38 = (int *)type metadata accessor for MoonViewModel(0);
  *(void *)&v36[v38[5]] = *(void *)&v37[v38[5]];
  uint64_t v39 = v38[6];
  uint64_t v40 = &v36[v39];
  uint64_t v41 = &v37[v39];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v37[v39], 1, v24))
  {
    uint64_t v42 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    v25(v40, v41, v24);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v24);
  }
  uint64_t v43 = v38[7];
  uint64_t v44 = &v36[v43];
  uint64_t v45 = &v37[v43];
  v405 = a3;
  v406 = a2;
  __dst = v25;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v37[v43], 1, v24))
  {
    uint64_t v46 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    v25(v44, v45, v24);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v24);
  }
  uint64_t v47 = v24;
  v36[v38[8]] = v37[v38[8]];
  uint64_t v48 = v412[8];
  uint64_t v49 = &v411[v48];
  uint64_t v50 = &v413[v48];
  uint64_t v51 = *(void *)&v413[v48 + 8];
  *(void *)uint64_t v49 = *(void *)&v413[v48];
  *((void *)v49 + 1) = v51;
  uint64_t v52 = *(void *)&v413[v48 + 24];
  *((void *)v49 + 2) = *(void *)&v413[v48 + 16];
  *((void *)v49 + 3) = v52;
  uint64_t v53 = *(void *)&v413[v48 + 40];
  *((void *)v49 + 4) = *(void *)&v413[v48 + 32];
  *((void *)v49 + 5) = v53;
  v49[48] = v413[v48 + 48];
  uint64_t v54 = (int *)type metadata accessor for MoonScrubberHeaderViewModel(0);
  uint64_t v55 = v54[8];
  uint64_t v56 = &v49[v55];
  uint64_t v57 = &v50[v55];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __dst(v56, v57, v47);
  uint64_t v403 = v47;
  __dst(&v49[v54[9]], &v50[v54[9]], v47);
  v49[v54[10]] = v50[v54[10]];
  uint64_t v58 = v412[9];
  uint64_t v59 = &v411[v58];
  uint64_t v60 = &v413[v58];
  uint64_t v61 = type metadata accessor for OverviewTableViewModel();
  uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
  v62(v59, v60, v61);
  uint64_t v63 = v412[10];
  uint64_t v64 = &v411[v63];
  uint64_t v65 = &v413[v63];
  uint64_t v66 = type metadata accessor for MoonCompactOverviewTableViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v66))
  {
    uint64_t v67 = sub_10017DF08(&qword_100E7CB90);
    memcpy(v64, v65, *(void *)(*(void *)(v67 - 8) + 64));
  }
  else
  {
    v62(v64, v65, v61);
    uint64_t v68 = *(int *)(v66 + 20);
    uint64_t v69 = &v64[v68];
    uint64_t v70 = &v65[v68];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v70, 1, v61))
    {
      uint64_t v71 = sub_10017DF08(&qword_100E7CAE0);
      memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
    }
    else
    {
      v62(v69, v70, v61);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v69, 0, 1, v61);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, v66);
  }
  uint64_t v72 = v412[11];
  uint64_t v73 = &v411[v72];
  uint64_t v74 = &v413[v72];
  uint64_t v75 = *(void *)&v413[v72];
  uint64_t v76 = *(void *)&v413[v72 + 8];
  unsigned __int8 v77 = v413[v72 + 16];
  sub_10018F6EC(v75, v76, v77);
  *(void *)uint64_t v73 = v75;
  *((void *)v73 + 1) = v76;
  v73[16] = v77;
  uint64_t v78 = *((void *)v74 + 4);
  *((void *)v73 + 3) = *((void *)v74 + 3);
  *((void *)v73 + 4) = v78;
  uint64_t v79 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  uint64_t v80 = v79[6];
  uint64_t v81 = &v73[v80];
  int v82 = &v74[v80];
  uint64_t v83 = type metadata accessor for WeatherDescription();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v83))
  {
    uint64_t v84 = sub_10017DF08(&qword_100E63758);
    memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16))(v81, v82, v83);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v83);
  }
  uint64_t v85 = v79[7];
  uint64_t v86 = &v73[v85];
  uint64_t v87 = (uint64_t *)&v74[v85];
  uint64_t v88 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v89 = v87[1];
      *(void *)uint64_t v86 = *v87;
      *((void *)v86 + 1) = v89;
      swift_bridgeObjectRetain();
      goto LABEL_77;
    case 2u:
      uint64_t v90 = type metadata accessor for AttributedString();
      goto LABEL_29;
    case 3u:
      uint64_t v90 = sub_10017DF08(&qword_100E73808);
      goto LABEL_29;
    case 4u:
      v393 = v74;
      uint64_t v91 = v87[1];
      uint64_t v385 = v83;
      if (v91)
      {
        *(void *)uint64_t v86 = *v87;
        *((void *)v86 + 1) = v91;
        uint64_t v92 = v87[3];
        *((void *)v86 + 2) = v87[2];
        *((void *)v86 + 3) = v92;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v99 = *((_OWORD *)v87 + 1);
        *(_OWORD *)uint64_t v86 = *(_OWORD *)v87;
        *((_OWORD *)v86 + 1) = v99;
      }
      uint64_t v100 = type metadata accessor for DetailComponentContainerViewModel();
      uint64_t v101 = *(int *)(v100 + 20);
      uint64_t v102 = &v86[v101];
      uint64_t v103 = (uint64_t *)((char *)v87 + v101);
      uint64_t v104 = type metadata accessor for NewsArticleComponentViewModel(0);
      uint64_t v398 = v88;
      uint64_t v401 = v79;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v384 = v100;
        uint64_t v389 = v73;
        uint64_t v105 = v103[1];
        *(void *)uint64_t v102 = *v103;
        *((void *)v102 + 1) = v105;
        double v106 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v107 = v106[5];
        uint64_t v108 = &v102[v107];
        uint64_t v109 = (char *)v103 + v107;
        uint64_t v110 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v109, 1, v110))
        {
          uint64_t v111 = sub_10017DF08(&qword_100E749B0);
          memcpy(v108, v109, *(void *)(*(void *)(v111 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 16))(v108, v109, v110);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v108, 0, 1, v110);
        }
        uint64_t v134 = v106[6];
        uint64_t v135 = &v102[v134];
        uint64_t v136 = (void *)((char *)v103 + v134);
        uint64_t v137 = v136[1];
        *(void *)uint64_t v135 = *v136;
        *((void *)v135 + 1) = v137;
        uint64_t v138 = v106[7];
        uint64_t v139 = &v102[v138];
        uint64_t v140 = (char *)v103 + v138;
        uint64_t v141 = *(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 16);
        swift_bridgeObjectRetain();
        v141(v139, v140, v110);
        uint64_t v142 = v106[8];
        uint64_t v143 = &v102[v142];
        uint64_t v144 = (char *)v103 + v142;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v103 + v142, 1, v110))
        {
          uint64_t v145 = sub_10017DF08(&qword_100E749B0);
          memcpy(v143, v144, *(void *)(*(void *)(v145 - 8) + 64));
        }
        else
        {
          v141(v143, v144, v110);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v143, 0, 1, v110);
        }
        uint64_t v73 = v389;
        v102[v106[9]] = *((unsigned char *)v103 + v106[9]);
        swift_storeEnumTagMultiPayload();
        uint64_t v74 = v393;
        uint64_t v100 = v384;
        uint64_t v83 = v385;
      }
      else
      {
        memcpy(v102, v103, *(void *)(*(void *)(v104 - 8) + 64));
        uint64_t v74 = v393;
        uint64_t v83 = v385;
      }
      uint64_t v146 = *(int *)(v100 + 24);
      uint64_t v147 = &v86[v146];
      uint64_t v148 = (char *)v87 + v146;
      uint64_t v149 = type metadata accessor for DetailComponentAction();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v148, 1, v149))
      {
        uint64_t v150 = sub_10017DF08(&qword_100E73810);
        memcpy(v147, v148, *(void *)(*(void *)(v150 - 8) + 64));
      }
      else
      {
        uint64_t v151 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 16))(v147, v148, v151);
        uint64_t v152 = sub_10017DF08(&qword_100E66478);
        v147[*(int *)(v152 + 48)] = v148[*(int *)(v152 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v147, 0, 1, v149);
      }
      uint64_t v88 = v398;
      uint64_t v79 = v401;
      goto LABEL_77;
    case 5u:
      v394 = v74;
      uint64_t v397 = v88;
      uint64_t v388 = v73;
      uint64_t v400 = v79;
      uint64_t v386 = v83;
      if (v87[3])
      {
        uint64_t v93 = *v87;
        uint64_t v94 = v87[1];
        char v95 = *((unsigned char *)v87 + 16);
        sub_100190CC4(*v87, v94, v95);
        *(void *)uint64_t v86 = v93;
        *((void *)v86 + 1) = v94;
        v86[16] = v95;
        *((void *)v86 + 3) = v87[3];
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v112 = *((_OWORD *)v87 + 1);
        *(_OWORD *)uint64_t v86 = *(_OWORD *)v87;
        *((_OWORD *)v86 + 1) = v112;
      }
      uint64_t v113 = v87[4];
      uint64_t v114 = v87[5];
      uint64_t v115 = v87[6];
      uint64_t v116 = v87[7];
      uint64_t v117 = v87[8];
      uint64_t v118 = v87[9];
      uint64_t v119 = v87[10];
      char v120 = *((unsigned char *)v87 + 89);
      uint64_t v121 = *((unsigned __int8 *)v87 + 88);
      sub_10033A9E8(v113, v114, v115, v116, v117, v118, v119, v121, v120);
      *((void *)v86 + 4) = v113;
      *((void *)v86 + 5) = v114;
      *((void *)v86 + 6) = v115;
      *((void *)v86 + 7) = v116;
      *((void *)v86 + 8) = v117;
      *((void *)v86 + 9) = v118;
      *((void *)v86 + 10) = v119;
      v86[88] = v121;
      v86[89] = v120;
      uint64_t v73 = v388;
      uint64_t v74 = v394;
      goto LABEL_76;
    case 6u:
      uint64_t v90 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_29:
      (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v90 - 8) + 16))(v86, v87, v90);
      goto LABEL_77;
    case 7u:
      uint64_t v96 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
      int v97 = swift_getEnumCaseMultiPayload();
      if (v97 != 1)
      {
        if (v97)
        {
          memcpy(v86, v87, *(void *)(*(void *)(v96 - 8) + 64));
        }
        else
        {
          uint64_t v98 = v87[1];
          *(void *)uint64_t v86 = *v87;
          *((void *)v86 + 1) = v98;
          *((void *)v86 + 2) = v87[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_77;
      }
      uint64_t v386 = v83;
      v390 = v73;
      uint64_t v397 = v88;
      uint64_t v400 = v79;
      uint64_t v122 = v87[1];
      *(void *)uint64_t v86 = *v87;
      *((void *)v86 + 1) = v122;
      uint64_t v123 = type metadata accessor for ConditionDetailMapViewModel();
      uint64_t v124 = *(int *)(v123 + 20);
      uint64_t v125 = &v86[v124];
      uint64_t v126 = (uint64_t)v87 + v124;
      uint64_t v127 = type metadata accessor for Location();
      uint64_t v128 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v127 - 8) + 16);
      swift_bridgeObjectRetain();
      v128(v125, v126, v127);
      v383 = (int *)v123;
      uint64_t v129 = *(int *)(v123 + 24);
      uint64_t v130 = &v86[v129];
      uint64_t v131 = (uint64_t *)((char *)v87 + v129);
      uint64_t v132 = (int *)type metadata accessor for WeatherData(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v131, 1, (uint64_t)v132))
      {
        uint64_t v133 = sub_10017DF08(&qword_100E63850);
        memcpy(v130, v131, *(void *)(*(void *)(v133 - 8) + 64));
        goto LABEL_75;
      }
      uint64_t v153 = v131[1];
      *(void *)uint64_t v130 = *v131;
      *((void *)v130 + 1) = v153;
      uint64_t v154 = v132[5];
      uint64_t v155 = &v130[v154];
      uint64_t v156 = (char *)v131 + v154;
      uint64_t v157 = type metadata accessor for Locale();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v156, 1, v157))
      {
        uint64_t v158 = sub_10017DF08(&qword_100E63730);
        memcpy(v155, v156, *(void *)(*(void *)(v158 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 16))(v155, v156, v157);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v155, 0, 1, v157);
      }
      uint64_t v159 = v132[6];
      uint64_t v160 = &v130[v159];
      uint64_t v161 = (char *)v131 + v159;
      uint64_t v162 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 16))(v160, v161, v162);
      uint64_t v163 = v132[7];
      uint64_t v164 = &v130[v163];
      uint64_t v165 = (char *)v131 + v163;
      uint64_t v166 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v165, 1, v166))
      {
        uint64_t v167 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v164, v165, *(void *)(*(void *)(v167 - 8) + 64));
      }
      else
      {
        __dst(v164, v165, v403);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v164, 0, 1, v166);
      }
      uint64_t v168 = v132[8];
      uint64_t v169 = &v130[v168];
      v170 = (void *)((char *)v131 + v168);
      uint64_t v171 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      int v172 = swift_getEnumCaseMultiPayload();
      uint64_t v173 = v131;
      if (v172 == 1)
      {
        uint64_t v175 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v175 - 8) + 16))(v169, v170, v175);
        goto LABEL_63;
      }
      if (!v172)
      {
        uint64_t v174 = v170[1];
        *(void *)uint64_t v169 = *v170;
        *((void *)v169 + 1) = v174;
        swift_bridgeObjectRetain();
LABEL_63:
        swift_storeEnumTagMultiPayload();
        goto LABEL_65;
      }
      memcpy(v169, v170, *(void *)(*(void *)(v171 - 8) + 64));
LABEL_65:
      uint64_t v176 = (uint64_t)v132;
      uint64_t v177 = v132[9];
      uint64_t v178 = &v130[v177];
      uint64_t v179 = (char *)v173 + v177;
      uint64_t v180 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v179, 1, v180))
      {
        uint64_t v181 = sub_10017DF08(&qword_100E63740);
        memcpy(v178, v179, *(void *)(*(void *)(v181 - 8) + 64));
      }
      else
      {
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v179, 1, v403))
        {
          uint64_t v182 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v178, v179, *(void *)(*(void *)(v182 - 8) + 64));
        }
        else
        {
          __dst(v178, v179, v403);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v178, 0, 1, v403);
        }
        uint64_t v183 = *(int *)(v180 + 20);
        uint64_t v184 = &v178[v183];
        uint64_t v185 = &v179[v183];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v179[v183], 1, v403))
        {
          uint64_t v186 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v184, v185, *(void *)(*(void *)(v186 - 8) + 64));
        }
        else
        {
          __dst(v184, v185, v403);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v184, 0, 1, v403);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v178, 0, 1, v180);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v130, 0, 1, v176);
LABEL_75:
      uint64_t v187 = v383[7];
      char v188 = &v86[v187];
      uint64_t v189 = (uint64_t *)((char *)v87 + v187);
      uint64_t v190 = v189[1];
      *(void *)char v188 = *v189;
      *((void *)v188 + 1) = v190;
      uint64_t v191 = v383[8];
      long long v192 = &v86[v191];
      uint64_t v193 = (uint64_t)v87 + v191;
      uint64_t v194 = type metadata accessor for WeatherMapOverlayKind();
      v195 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v194 - 8) + 16);
      swift_bridgeObjectRetain();
      v195(v192, v193, v194);
      v86[v383[9]] = *((unsigned char *)v87 + v383[9]);
      swift_storeEnumTagMultiPayload();
      uint64_t v73 = v390;
LABEL_76:
      uint64_t v88 = v397;
      uint64_t v79 = v400;
      uint64_t v83 = v386;
LABEL_77:
      swift_storeEnumTagMultiPayload();
      uint64_t v196 = v79[8];
      uint64_t v197 = &v73[v196];
      v198 = &v74[v196];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v74[v196], 1, v88))
      {
        uint64_t v199 = sub_10017DF08(&qword_100E73818);
        memcpy(v197, v198, *(void *)(*(void *)(v199 - 8) + 64));
        goto LABEL_139;
      }
      break;
    default:
      (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v83 - 8) + 16))(v86, v87, v83);
      goto LABEL_77;
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v200 = *((void *)v198 + 1);
      *(void *)uint64_t v197 = *(void *)v198;
      *((void *)v197 + 1) = v200;
      swift_bridgeObjectRetain();
      goto LABEL_138;
    case 2u:
      uint64_t v201 = type metadata accessor for AttributedString();
      goto LABEL_89;
    case 3u:
      uint64_t v201 = sub_10017DF08(&qword_100E73808);
      goto LABEL_89;
    case 4u:
      uint64_t v202 = *((void *)v198 + 1);
      v395 = v74;
      if (v202)
      {
        *(void *)uint64_t v197 = *(void *)v198;
        *((void *)v197 + 1) = v202;
        uint64_t v203 = *((void *)v198 + 3);
        *((void *)v197 + 2) = *((void *)v198 + 2);
        *((void *)v197 + 3) = v203;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v210 = *((_OWORD *)v198 + 1);
        *(_OWORD *)uint64_t v197 = *(_OWORD *)v198;
        *((_OWORD *)v197 + 1) = v210;
      }
      __dsta = (int *)type metadata accessor for DetailComponentContainerViewModel();
      uint64_t v211 = __dsta[5];
      uint64_t v212 = &v197[v211];
      long long v213 = &v198[v211];
      uint64_t v214 = type metadata accessor for NewsArticleComponentViewModel(0);
      uint64_t v399 = v88;
      uint64_t v402 = v79;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v392 = v73;
        uint64_t v215 = *((void *)v213 + 1);
        *(void *)uint64_t v212 = *(void *)v213;
        *((void *)v212 + 1) = v215;
        v404 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v216 = v404[5];
        v217 = &v212[v216];
        uint64_t v218 = &v213[v216];
        uint64_t v219 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v218, 1, v219))
        {
          uint64_t v220 = sub_10017DF08(&qword_100E749B0);
          memcpy(v217, v218, *(void *)(*(void *)(v220 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v219 - 8) + 16))(v217, v218, v219);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v217, 0, 1, v219);
        }
        uint64_t v243 = v404[6];
        v244 = &v212[v243];
        v245 = &v213[v243];
        uint64_t v246 = *((void *)v245 + 1);
        *(void *)v244 = *(void *)v245;
        *((void *)v244 + 1) = v246;
        uint64_t v247 = v404[7];
        v248 = &v212[v247];
        v249 = &v213[v247];
        uint64_t v250 = *(void (**)(char *, char *, uint64_t))(*(void *)(v219 - 8) + 16);
        swift_bridgeObjectRetain();
        v250(v248, v249, v219);
        uint64_t v251 = v404[8];
        v252 = &v212[v251];
        v253 = &v213[v251];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v213[v251], 1, v219))
        {
          uint64_t v254 = sub_10017DF08(&qword_100E749B0);
          memcpy(v252, v253, *(void *)(*(void *)(v254 - 8) + 64));
        }
        else
        {
          v250(v252, v253, v219);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v252, 0, 1, v219);
        }
        uint64_t v73 = v392;
        v212[v404[9]] = v213[v404[9]];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v212, v213, *(void *)(*(void *)(v214 - 8) + 64));
      }
      uint64_t v74 = v395;
      uint64_t v255 = __dsta[6];
      v256 = &v197[v255];
      v257 = &v198[v255];
      uint64_t v258 = type metadata accessor for DetailComponentAction();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v257, 1, v258))
      {
        uint64_t v259 = sub_10017DF08(&qword_100E73810);
        memcpy(v256, v257, *(void *)(*(void *)(v259 - 8) + 64));
      }
      else
      {
        uint64_t v260 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v260 - 8) + 16))(v256, v257, v260);
        uint64_t v261 = sub_10017DF08(&qword_100E66478);
        v256[*(int *)(v261 + 48)] = v257[*(int *)(v261 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v256, 0, 1, v258);
      }
      goto LABEL_137;
    case 5u:
      v391 = v73;
      v396 = v74;
      uint64_t v399 = v88;
      uint64_t v402 = v79;
      if (*((void *)v198 + 3))
      {
        uint64_t v204 = *(void *)v198;
        uint64_t v205 = *((void *)v198 + 1);
        char v206 = v198[16];
        sub_100190CC4(*(void *)v198, v205, v206);
        *(void *)uint64_t v197 = v204;
        *((void *)v197 + 1) = v205;
        v197[16] = v206;
        *((void *)v197 + 3) = *((void *)v198 + 3);
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v221 = *((_OWORD *)v198 + 1);
        *(_OWORD *)uint64_t v197 = *(_OWORD *)v198;
        *((_OWORD *)v197 + 1) = v221;
      }
      uint64_t v222 = *((void *)v198 + 4);
      uint64_t v223 = *((void *)v198 + 5);
      uint64_t v224 = *((void *)v198 + 6);
      uint64_t v225 = *((void *)v198 + 7);
      uint64_t v226 = *((void *)v198 + 8);
      uint64_t v227 = *((void *)v198 + 9);
      uint64_t v228 = *((void *)v198 + 10);
      char v229 = v198[89];
      uint64_t v230 = v198[88];
      sub_10033A9E8(v222, v223, v224, v225, v226, v227, v228, v230, v229);
      *((void *)v197 + 4) = v222;
      *((void *)v197 + 5) = v223;
      *((void *)v197 + 6) = v224;
      *((void *)v197 + 7) = v225;
      *((void *)v197 + 8) = v226;
      *((void *)v197 + 9) = v227;
      *((void *)v197 + 10) = v228;
      v197[88] = v230;
      v197[89] = v229;
      goto LABEL_136;
    case 6u:
      uint64_t v201 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_89:
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v201 - 8) + 16))(v197, v198, v201);
      goto LABEL_138;
    case 7u:
      v396 = v74;
      uint64_t v207 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
      int v208 = swift_getEnumCaseMultiPayload();
      if (v208 != 1)
      {
        if (v208)
        {
          memcpy(v197, v198, *(void *)(*(void *)(v207 - 8) + 64));
        }
        else
        {
          uint64_t v209 = *((void *)v198 + 1);
          *(void *)uint64_t v197 = *(void *)v198;
          *((void *)v197 + 1) = v209;
          *((void *)v197 + 2) = *((void *)v198 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        uint64_t v74 = v396;
        goto LABEL_138;
      }
      uint64_t v399 = v88;
      uint64_t v402 = v79;
      v391 = v73;
      uint64_t v231 = *((void *)v198 + 1);
      *(void *)uint64_t v197 = *(void *)v198;
      *((void *)v197 + 1) = v231;
      uint64_t v232 = type metadata accessor for ConditionDetailMapViewModel();
      uint64_t v233 = *(int *)(v232 + 20);
      uint64_t v234 = &v197[v233];
      uint64_t v235 = &v198[v233];
      uint64_t v236 = type metadata accessor for Location();
      uint64_t v237 = *(void (**)(char *, char *, uint64_t))(*(void *)(v236 - 8) + 16);
      swift_bridgeObjectRetain();
      v237(v234, v235, v236);
      uint64_t v387 = (int *)v232;
      uint64_t v238 = *(int *)(v232 + 24);
      uint64_t v239 = &v197[v238];
      uint64_t v240 = &v198[v238];
      v241 = (int *)type metadata accessor for WeatherData(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v240, 1, (uint64_t)v241))
      {
        uint64_t v242 = sub_10017DF08(&qword_100E63850);
        memcpy(v239, v240, *(void *)(*(void *)(v242 - 8) + 64));
        goto LABEL_135;
      }
      uint64_t v262 = *((void *)v240 + 1);
      *(void *)uint64_t v239 = *(void *)v240;
      *((void *)v239 + 1) = v262;
      uint64_t v263 = v241[5];
      uint64_t v264 = &v239[v263];
      uint64_t v265 = &v240[v263];
      uint64_t v266 = type metadata accessor for Locale();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v265, 1, v266))
      {
        uint64_t v267 = sub_10017DF08(&qword_100E63730);
        memcpy(v264, v265, *(void *)(*(void *)(v267 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v266 - 8) + 16))(v264, v265, v266);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v264, 0, 1, v266);
      }
      uint64_t v268 = v241[6];
      v269 = &v239[v268];
      uint64_t v270 = &v240[v268];
      uint64_t v271 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v271 - 8) + 16))(v269, v270, v271);
      uint64_t v272 = v241[7];
      v273 = &v239[v272];
      v274 = &v240[v272];
      uint64_t v275 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v274, 1, v275))
      {
        uint64_t v276 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v273, v274, *(void *)(*(void *)(v276 - 8) + 64));
      }
      else
      {
        __dst(v273, v274, v403);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v273, 0, 1, v275);
      }
      uint64_t v277 = v241[8];
      v278 = &v239[v277];
      uint64_t v279 = &v240[v277];
      uint64_t v280 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      int v281 = swift_getEnumCaseMultiPayload();
      if (v281 == 1)
      {
        uint64_t v283 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v283 - 8) + 16))(v278, v279, v283);
        goto LABEL_123;
      }
      if (!v281)
      {
        uint64_t v282 = *((void *)v279 + 1);
        *(void *)v278 = *(void *)v279;
        *((void *)v278 + 1) = v282;
        swift_bridgeObjectRetain();
LABEL_123:
        swift_storeEnumTagMultiPayload();
        goto LABEL_125;
      }
      memcpy(v278, v279, *(void *)(*(void *)(v280 - 8) + 64));
LABEL_125:
      uint64_t v284 = v241[9];
      int v285 = &v239[v284];
      uint64_t v286 = &v240[v284];
      uint64_t v287 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v286, 1, v287))
      {
        uint64_t v288 = sub_10017DF08(&qword_100E63740);
        memcpy(v285, v286, *(void *)(*(void *)(v288 - 8) + 64));
      }
      else
      {
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v286, 1, v403))
        {
          uint64_t v289 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v285, v286, *(void *)(*(void *)(v289 - 8) + 64));
        }
        else
        {
          __dst(v285, v286, v403);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v285, 0, 1, v403);
        }
        uint64_t v290 = *(int *)(v287 + 20);
        uint64_t v291 = &v285[v290];
        uint64_t v292 = &v286[v290];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v286[v290], 1, v403))
        {
          uint64_t v293 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v291, v292, *(void *)(*(void *)(v293 - 8) + 64));
        }
        else
        {
          __dst(v291, v292, v403);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v291, 0, 1, v403);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v285, 0, 1, v287);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v239, 0, 1, (uint64_t)v241);
LABEL_135:
      uint64_t v294 = v387[7];
      v295 = &v197[v294];
      v296 = &v198[v294];
      uint64_t v297 = *((void *)v296 + 1);
      *(void *)v295 = *(void *)v296;
      *((void *)v295 + 1) = v297;
      uint64_t v298 = v387[8];
      v299 = &v197[v298];
      v300 = &v198[v298];
      uint64_t v301 = type metadata accessor for WeatherMapOverlayKind();
      uint64_t v302 = *(void (**)(char *, char *, uint64_t))(*(void *)(v301 - 8) + 16);
      swift_bridgeObjectRetain();
      v302(v299, v300, v301);
      v197[v387[9]] = v198[v387[9]];
      swift_storeEnumTagMultiPayload();
LABEL_136:
      uint64_t v73 = v391;
      uint64_t v74 = v396;
LABEL_137:
      uint64_t v88 = v399;
      uint64_t v79 = v402;
LABEL_138:
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v197, 0, 1, v88);
LABEL_139:
      v73[v79[9]] = v74[v79[9]];
      v73[v79[10]] = v74[v79[10]];
      *(void *)&v411[v412[12]] = *(void *)&v413[v412[12]];
      uint64_t v303 = v412[13];
      uint64_t v304 = &v411[v303];
      uint64_t v305 = &v413[v303];
      uint64_t v306 = type metadata accessor for DetailComponentContainerViewModel();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v305, 1, v306))
      {
        uint64_t v307 = sub_10017DF08(&qword_100E66E28);
        memcpy(v304, v305, *(void *)(*(void *)(v307 - 8) + 64));
        v308 = v405;
        v309 = v406;
        uint64_t v310 = v411;
        uint64_t v311 = v407;
      }
      else
      {
        uint64_t v312 = *((void *)v305 + 1);
        if (v312)
        {
          *(void *)uint64_t v304 = *(void *)v305;
          *((void *)v304 + 1) = v312;
          uint64_t v313 = *((void *)v305 + 3);
          *((void *)v304 + 2) = *((void *)v305 + 2);
          *((void *)v304 + 3) = v313;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v314 = *((_OWORD *)v305 + 1);
          *(_OWORD *)uint64_t v304 = *(_OWORD *)v305;
          *((_OWORD *)v304 + 1) = v314;
        }
        uint64_t v315 = *(int *)(v306 + 20);
        uint64_t v316 = &v304[v315];
        v317 = &v305[v315];
        uint64_t v318 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v319 = *((void *)v317 + 1);
          *(void *)uint64_t v316 = *(void *)v317;
          *((void *)v316 + 1) = v319;
          uint64_t v320 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v321 = v320[5];
          __dstb = &v316[v321];
          v322 = &v317[v321];
          uint64_t v323 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v322, 1, v323))
          {
            uint64_t v324 = sub_10017DF08(&qword_100E749B0);
            memcpy(__dstb, v322, *(void *)(*(void *)(v324 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v323 - 8) + 16))(__dstb, v322, v323);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstb, 0, 1, v323);
          }
          uint64_t v325 = v320[6];
          uint64_t v326 = &v316[v325];
          v327 = &v317[v325];
          uint64_t v328 = *((void *)v327 + 1);
          *(void *)uint64_t v326 = *(void *)v327;
          *((void *)v326 + 1) = v328;
          uint64_t v329 = v320[7];
          uint64_t v330 = &v316[v329];
          v331 = &v317[v329];
          v332 = *(void (**)(char *, char *, uint64_t))(*(void *)(v323 - 8) + 16);
          swift_bridgeObjectRetain();
          v332(v330, v331, v323);
          uint64_t v333 = v320[8];
          uint64_t v334 = &v316[v333];
          v335 = &v317[v333];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v317[v333], 1, v323))
          {
            uint64_t v336 = sub_10017DF08(&qword_100E749B0);
            memcpy(v334, v335, *(void *)(*(void *)(v336 - 8) + 64));
          }
          else
          {
            v332(v334, v335, v323);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v334, 0, 1, v323);
          }
          v316[v320[9]] = v317[v320[9]];
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v316, v317, *(void *)(*(void *)(v318 - 8) + 64));
        }
        uint64_t v337 = *(int *)(v306 + 24);
        uint64_t v338 = &v304[v337];
        v339 = &v305[v337];
        uint64_t v340 = type metadata accessor for DetailComponentAction();
        uint64_t v311 = v407;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v339, 1, v340))
        {
          uint64_t v341 = sub_10017DF08(&qword_100E73810);
          memcpy(v338, v339, *(void *)(*(void *)(v341 - 8) + 64));
        }
        else
        {
          uint64_t v342 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v342 - 8) + 16))(v338, v339, v342);
          uint64_t v343 = sub_10017DF08(&qword_100E66478);
          v338[*(int *)(v343 + 48)] = v339[*(int *)(v343 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v338, 0, 1, v340);
        }
        uint64_t v310 = v411;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v304, 0, 1, v306);
        v308 = v405;
        v309 = v406;
      }
      uint64_t v344 = v412[14];
      uint64_t v345 = &v310[v344];
      v346 = &v413[v344];
      uint64_t v347 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v347 - 8) + 16))(v345, v346, v347);
      v310[v412[15]] = v413[v412[15]];
      uint64_t v348 = v308[8];
      long long v349 = *(_OWORD *)((char *)v309 + v348 + 24);
      *(_OWORD *)((char *)v311 + v348 + 24) = v349;
      (**(void (***)(void))(v349 - 8))();
      uint64_t v350 = v308[9];
      uint64_t v351 = v308[10];
      uint64_t v352 = (void *)((char *)v311 + v350);
      v353 = (void *)((char *)v309 + v350);
      uint64_t v354 = v353[1];
      *uint64_t v352 = *v353;
      v352[1] = v354;
      uint64_t v355 = (void *)((char *)v311 + v351);
      v356 = (void *)((char *)v309 + v351);
      uint64_t v357 = v356[1];
      *uint64_t v355 = *v356;
      v355[1] = v357;
      uint64_t v358 = v308[11];
      uint64_t v359 = v308[12];
      uint64_t v360 = (void *)((char *)v311 + v358);
      v361 = (void *)((char *)v309 + v358);
      uint64_t v362 = v361[1];
      *uint64_t v360 = *v361;
      v360[1] = v362;
      uint64_t v363 = (void *)((char *)v311 + v359);
      v364 = (void *)((char *)v309 + v359);
      uint64_t v365 = v364[1];
      *uint64_t v363 = *v364;
      v363[1] = v365;
      uint64_t v366 = v308[13];
      uint64_t v367 = v308[14];
      uint64_t v368 = (void *)((char *)v311 + v366);
      v369 = (void *)((char *)v309 + v366);
      uint64_t v370 = v369[1];
      *uint64_t v368 = *v369;
      v368[1] = v370;
      uint64_t v371 = (void *)((char *)v311 + v367);
      v372 = (void *)((char *)v309 + v367);
      uint64_t v373 = v372[1];
      *uint64_t v371 = *v372;
      v371[1] = v373;
      uint64_t v374 = v308[15];
      uint64_t v375 = v308[16];
      uint64_t v376 = (void *)((char *)v311 + v374);
      v377 = (void *)((char *)v309 + v374);
      uint64_t v378 = v377[1];
      *uint64_t v376 = *v377;
      v376[1] = v378;
      uint64_t v379 = (void *)((char *)v311 + v375);
      v380 = (void *)((char *)v309 + v375);
      uint64_t v381 = v380[1];
      *uint64_t v379 = *v380;
      v379[1] = v381;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      return v311;
    default:
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16))(v197, v198, v83);
      goto LABEL_138;
  }
}

void *sub_100678F08(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100178110((uint64_t)a1, &qword_100E65310);
    sub_10017DF08(&qword_100E65310);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = a2[1];
      swift_retain();
      swift_retain();
      uint64_t v7 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = type metadata accessor for PresentationMode();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[5];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = v13[8];
  sub_100195B7C(*(void *)v13, v15);
  uint64_t v16 = *(void *)v12;
  char v17 = v12[8];
  *(void *)uint64_t v12 = v14;
  v12[8] = v15;
  sub_10018F6D8(v16, v17);
  uint64_t v18 = a3[6];
  uint64_t v19 = (char *)a1 + v18;
  char v20 = (char *)a2 + v18;
  uint64_t v21 = *(void *)v20;
  char v22 = v20[8];
  sub_100195B7C(*(void *)v20, v22);
  uint64_t v23 = *(void *)v19;
  char v24 = v19[8];
  *(void *)uint64_t v19 = v21;
  v19[8] = v22;
  sub_10018F6D8(v23, v24);
  v546 = a3;
  uint64_t v25 = a3[7];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  v547 = a2;
  v548 = a1;
  if (a1 != a2)
  {
    sub_1006739F4();
    type metadata accessor for MoonDetailSelectedDate();
    swift_getEnumCaseMultiPayload();
    uint64_t v28 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v29 = (int *)type metadata accessor for MoonDetailViewModel.Model(0);
  uint64_t v30 = v29[5];
  uint64_t v31 = &v26[v30];
  uint64_t v32 = &v27[v30];
  *(void *)uint64_t v31 = *(void *)v32;
  *((void *)v31 + 1) = *((void *)v32 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = v29[6];
  uint64_t v34 = &v26[v33];
  uint64_t v35 = &v27[v33];
  *(void *)uint64_t v34 = *(void *)v35;
  *((void *)v34 + 1) = *((void *)v35 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v551 = v27;
  v552 = v29;
  uint64_t v36 = v29[7];
  uint64_t v37 = &v26[v36];
  uint64_t v38 = &v27[v36];
  uint64_t v39 = type metadata accessor for Date();
  uint64_t v40 = *(void *)(v39 - 8);
  v549 = *(void (**)(char *, char *, uint64_t))(v40 + 24);
  v549(v37, v38, v39);
  uint64_t v41 = (int *)type metadata accessor for MoonViewModel(0);
  *(void *)&v37[v41[5]] = *(void *)&v38[v41[5]];
  uint64_t v42 = v41[6];
  uint64_t v43 = &v37[v42];
  uint64_t v44 = &v38[v42];
  int v45 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v37[v42], 1, v39);
  int v46 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v39);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v43, v44, v39);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v39);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v43, v39);
LABEL_13:
    uint64_t v47 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_14;
  }
  v549(v43, v44, v39);
LABEL_14:
  uint64_t v48 = v41[7];
  uint64_t v49 = &v37[v48];
  uint64_t v50 = &v38[v48];
  int v51 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v37[v48], 1, v39);
  int v52 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v39);
  __src = (void (**)(void *, const void *, uint64_t))v40;
  if (v51)
  {
    if (!v52)
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v49, v50, v39);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v39);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v52)
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v49, v39);
LABEL_19:
    uint64_t v53 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
    goto LABEL_20;
  }
  v549(v49, v50, v39);
LABEL_20:
  v37[v41[8]] = v38[v41[8]];
  uint64_t v54 = v29[8];
  uint64_t v55 = &v26[v54];
  uint64_t v56 = &v551[v54];
  *(void *)uint64_t v55 = *(void *)&v551[v54];
  *((void *)v55 + 1) = *(void *)&v551[v54 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v55 + 2) = *((void *)v56 + 2);
  *((void *)v55 + 3) = *((void *)v56 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v55 + 4) = *((void *)v56 + 4);
  *((void *)v55 + 5) = *((void *)v56 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v55[48] = v56[48];
  uint64_t v57 = (int *)type metadata accessor for MoonScrubberHeaderViewModel(0);
  v549(&v55[v57[8]], &v56[v57[8]], v39);
  uint64_t v535 = v39;
  v549(&v55[v57[9]], &v56[v57[9]], v39);
  v55[v57[10]] = v56[v57[10]];
  uint64_t v58 = v29[9];
  uint64_t v59 = &v26[v58];
  uint64_t v60 = &v551[v58];
  uint64_t v61 = type metadata accessor for OverviewTableViewModel();
  v540 = *(void **)(v61 - 8);
  uint64_t v62 = (void (*)(char *, char *, uint64_t))v540[3];
  v62(v59, v60, v61);
  uint64_t v63 = v552[10];
  v550 = v26;
  uint64_t v64 = &v26[v63];
  uint64_t v65 = &v551[v63];
  uint64_t v66 = type metadata accessor for MoonCompactOverviewTableViewModel(0);
  LODWORD(v59) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v66);
  int v67 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v66);
  if (!v59)
  {
    if (v67)
    {
      sub_1006739F4();
      uint64_t v72 = sub_10017DF08(&qword_100E7CB90);
      memcpy(v64, v65, *(void *)(*(void *)(v72 - 8) + 64));
      uint64_t v70 = v550;
    }
    else
    {
      v62(v64, v65, v61);
      uint64_t v78 = *(int *)(v66 + 20);
      uint64_t v79 = &v64[v78];
      uint64_t v80 = &v65[v78];
      int v81 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v79, 1, v61);
      int v82 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v80, 1, v61);
      if (v81)
      {
        uint64_t v70 = v550;
        uint64_t v71 = v551;
        uint64_t v68 = v548;
        if (v82)
        {
          uint64_t v83 = sub_10017DF08(&qword_100E7CAE0);
          memcpy(v79, v80, *(void *)(*(void *)(v83 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v540[2])(v79, v80, v61);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v79, 0, 1, v61);
        }
        goto LABEL_35;
      }
      uint64_t v70 = v550;
      if (v82)
      {
        ((void (*)(char *, uint64_t))v540[1])(v79, v61);
        uint64_t v111 = sub_10017DF08(&qword_100E7CAE0);
        memcpy(v79, v80, *(void *)(*(void *)(v111 - 8) + 64));
      }
      else
      {
        v62(v79, v80, v61);
      }
    }
    uint64_t v71 = v551;
    uint64_t v68 = v548;
    goto LABEL_35;
  }
  uint64_t v68 = v548;
  if (v67)
  {
    uint64_t v69 = sub_10017DF08(&qword_100E7CB90);
    memcpy(v64, v65, *(void *)(*(void *)(v69 - 8) + 64));
    uint64_t v70 = v550;
    uint64_t v71 = v551;
  }
  else
  {
    uint64_t v73 = (void (*)(char *, char *, uint64_t))v540[2];
    v73(v64, v65, v61);
    uint64_t v74 = *(int *)(v66 + 20);
    uint64_t v75 = &v64[v74];
    uint64_t v76 = &v65[v74];
    uint64_t v71 = v551;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v76, 1, v61))
    {
      uint64_t v77 = sub_10017DF08(&qword_100E7CAE0);
      memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
    }
    else
    {
      v73(v75, v76, v61);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v75, 0, 1, v61);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, v66);
    uint64_t v70 = v550;
  }
LABEL_35:
  uint64_t v84 = v552[11];
  uint64_t v85 = &v70[v84];
  uint64_t v86 = &v71[v84];
  uint64_t v87 = *(void *)&v71[v84];
  uint64_t v88 = *(void *)&v71[v84 + 8];
  unsigned __int8 v89 = v71[v84 + 16];
  sub_10018F6EC(v87, v88, v89);
  uint64_t v90 = *(void *)v85;
  uint64_t v91 = *((void *)v85 + 1);
  *(void *)uint64_t v85 = v87;
  *((void *)v85 + 1) = v88;
  unsigned __int8 v92 = v85[16];
  v85[16] = v89;
  sub_10014D144(v90, v91, v92);
  *((void *)v85 + 3) = *((void *)v86 + 3);
  *((void *)v85 + 4) = *((void *)v86 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v93 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  uint64_t v94 = v93[6];
  char v95 = &v85[v94];
  uint64_t v96 = &v86[v94];
  uint64_t v97 = type metadata accessor for WeatherDescription();
  LODWORD(v87) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, v97);
  int v98 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v96, 1, v97);
  long long v99 = v547;
  v541 = (void *)v97;
  if (v87)
  {
    if (!v98)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16))(v95, v96, v97);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v95, 0, 1, v97);
      goto LABEL_41;
    }
    goto LABEL_40;
  }
  uint64_t v100 = *(void *)(v97 - 8);
  if (v98)
  {
    (*(void (**)(char *, uint64_t))(v100 + 8))(v95, v97);
LABEL_40:
    uint64_t v101 = sub_10017DF08(&qword_100E63758);
    memcpy(v95, v96, *(void *)(*(void *)(v101 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(char *, char *, uint64_t))(v100 + 24))(v95, v96, v97);
LABEL_41:
  if (v68 == v547) {
    goto LABEL_105;
  }
  uint64_t v102 = v93[7];
  uint64_t v103 = (uint64_t *)&v85[v102];
  uint64_t v104 = (uint64_t *)&v86[v102];
  sub_1006739F4();
  type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t *v103 = *v104;
      v103[1] = v104[1];
      swift_bridgeObjectRetain();
      goto LABEL_104;
    case 2u:
      uint64_t v106 = type metadata accessor for AttributedString();
      goto LABEL_53;
    case 3u:
      uint64_t v106 = sub_10017DF08(&qword_100E73808);
      goto LABEL_53;
    case 4u:
      if (v104[1])
      {
        uint64_t *v103 = *v104;
        v103[1] = v104[1];
        v103[2] = v104[2];
        v103[3] = v104[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v112 = *((_OWORD *)v104 + 1);
        *(_OWORD *)uint64_t v103 = *(_OWORD *)v104;
        *((_OWORD *)v103 + 1) = v112;
      }
      uint64_t v113 = type metadata accessor for DetailComponentContainerViewModel();
      uint64_t v114 = *(int *)(v113 + 20);
      __dsta = (uint64_t *)((char *)v103 + v114);
      v505 = v104;
      uint64_t v115 = (uint64_t *)((char *)v104 + v114);
      uint64_t v116 = type metadata accessor for NewsArticleComponentViewModel(0);
      v526 = v93;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v502 = v113;
        v509 = v103;
        void *__dsta = *v115;
        __dsta[1] = v115[1];
        v503 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v117 = v503[5];
        uint64_t v118 = (char *)__dsta + v117;
        uint64_t v119 = (char *)v115 + v117;
        uint64_t v120 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v119, 1, v120))
        {
          uint64_t v121 = sub_10017DF08(&qword_100E749B0);
          memcpy(v118, v119, *(void *)(*(void *)(v121 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 16))(v118, v119, v120);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v118, 0, 1, v120);
        }
        uint64_t v146 = v503[6];
        uint64_t v147 = (void *)((char *)__dsta + v146);
        uint64_t v148 = (void *)((char *)v115 + v146);
        *uint64_t v147 = *v148;
        v147[1] = v148[1];
        uint64_t v149 = v503[7];
        uint64_t v150 = (char *)__dsta + v149;
        uint64_t v151 = (char *)v115 + v149;
        uint64_t v152 = *(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 16);
        swift_bridgeObjectRetain();
        v152(v150, v151, v120);
        uint64_t v153 = v503[8];
        uint64_t v154 = (char *)__dsta + v153;
        uint64_t v155 = (char *)v115 + v153;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v115 + v153, 1, v120))
        {
          uint64_t v156 = sub_10017DF08(&qword_100E749B0);
          memcpy(v154, v155, *(void *)(*(void *)(v156 - 8) + 64));
        }
        else
        {
          v152(v154, v155, v120);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v154, 0, 1, v120);
        }
        long long v99 = v547;
        uint64_t v68 = v548;
        uint64_t v113 = v502;
        uint64_t v122 = v505;
        *((unsigned char *)__dsta + v503[9]) = *((unsigned char *)v115 + v503[9]);
        swift_storeEnumTagMultiPayload();
        uint64_t v103 = v509;
      }
      else
      {
        memcpy(__dsta, v115, *(void *)(*(void *)(v116 - 8) + 64));
        uint64_t v122 = v505;
      }
      uint64_t v157 = *(int *)(v113 + 24);
      uint64_t v158 = (char *)v103 + v157;
      uint64_t v159 = (char *)v122 + v157;
      uint64_t v160 = type metadata accessor for DetailComponentAction();
      uint64_t v70 = v550;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v159, 1, v160))
      {
        uint64_t v161 = sub_10017DF08(&qword_100E73810);
        memcpy(v158, v159, *(void *)(*(void *)(v161 - 8) + 64));
      }
      else
      {
        uint64_t v162 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 16))(v158, v159, v162);
        uint64_t v163 = sub_10017DF08(&qword_100E66478);
        v158[*(int *)(v163 + 48)] = v159[*(int *)(v163 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v158, 0, 1, v160);
      }
      uint64_t v93 = v526;
      goto LABEL_104;
    case 5u:
      v516 = v86;
      v525 = v93;
      v508 = v85;
      if (v104[3])
      {
        uint64_t v107 = *v104;
        uint64_t v108 = v104[1];
        char v109 = *((unsigned char *)v104 + 16);
        sub_100190CC4(*v104, v108, v109);
        uint64_t *v103 = v107;
        v103[1] = v108;
        *((unsigned char *)v103 + 16) = v109;
        v103[3] = v104[3];
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v123 = *((_OWORD *)v104 + 1);
        *(_OWORD *)uint64_t v103 = *(_OWORD *)v104;
        *((_OWORD *)v103 + 1) = v123;
      }
      uint64_t v124 = v104[4];
      uint64_t v125 = v104[5];
      uint64_t v126 = v104[6];
      uint64_t v127 = v104[7];
      uint64_t v128 = v104[8];
      uint64_t v129 = v104[9];
      uint64_t v130 = v104[10];
      char v131 = *((unsigned char *)v104 + 89);
      uint64_t v132 = *((unsigned __int8 *)v104 + 88);
      sub_10033A9E8(v124, v125, v126, v127, v128, v129, v130, v132, v131);
      v103[4] = v124;
      v103[5] = v125;
      v103[6] = v126;
      v103[7] = v127;
      v103[8] = v128;
      v103[9] = v129;
      v103[10] = v130;
      *((unsigned char *)v103 + 88) = v132;
      *((unsigned char *)v103 + 89) = v131;
      long long v99 = v547;
      uint64_t v68 = v548;
      uint64_t v70 = v550;
      uint64_t v86 = v516;
      uint64_t v93 = v525;
      uint64_t v85 = v508;
      goto LABEL_104;
    case 6u:
      uint64_t v106 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_53:
      uint64_t v105 = (void *)v106;
      goto LABEL_54;
    case 7u:
      __dst = (void *)type metadata accessor for ConditionDetailDynamicContentIdentifier();
      int v110 = swift_getEnumCaseMultiPayload();
      if (v110 == 1)
      {
        v527 = v93;
        uint64_t *v103 = *v104;
        v103[1] = v104[1];
        uint64_t v133 = type metadata accessor for ConditionDetailMapViewModel();
        uint64_t v134 = *(int *)(v133 + 20);
        uint64_t v135 = (char *)v103 + v134;
        uint64_t v136 = (uint64_t)v104 + v134;
        v510 = v103;
        uint64_t v137 = type metadata accessor for Location();
        uint64_t v138 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v137 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v139 = v135;
        uint64_t v140 = v510;
        v138(v139, v136, v137);
        v506 = (int *)v133;
        uint64_t v141 = *(int *)(v133 + 24);
        uint64_t v142 = (uint64_t *)((char *)v510 + v141);
        uint64_t v143 = (uint64_t *)((char *)v104 + v141);
        uint64_t v144 = (int *)type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v143, 1, (uint64_t)v144))
        {
          uint64_t v145 = sub_10017DF08(&qword_100E63850);
          memcpy(v142, v143, *(void *)(*(void *)(v145 - 8) + 64));
LABEL_103:
          uint64_t v195 = v506[7];
          uint64_t v196 = (uint64_t *)((char *)v140 + v195);
          uint64_t v197 = (uint64_t *)((char *)v104 + v195);
          *uint64_t v196 = *v197;
          v196[1] = v197[1];
          uint64_t v198 = v506[8];
          uint64_t v199 = (uint64_t)v140 + v198;
          uint64_t v200 = (uint64_t)v104 + v198;
          uint64_t v201 = type metadata accessor for WeatherMapOverlayKind();
          uint64_t v202 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v201 - 8) + 16);
          swift_bridgeObjectRetain();
          v202(v199, v200, v201);
          *((unsigned char *)v510 + v506[9]) = *((unsigned char *)v104 + v506[9]);
          swift_storeEnumTagMultiPayload();
          long long v99 = v547;
          uint64_t v68 = v548;
          uint64_t v70 = v550;
          uint64_t v93 = v527;
          goto LABEL_104;
        }
        *uint64_t v142 = *v143;
        v142[1] = v143[1];
        uint64_t v164 = v144[5];
        uint64_t v165 = (char *)v142 + v164;
        uint64_t v166 = v143;
        uint64_t v167 = (char *)v143 + v164;
        uint64_t v168 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v167, 1, v168))
        {
          uint64_t v169 = sub_10017DF08(&qword_100E63730);
          memcpy(v165, v167, *(void *)(*(void *)(v169 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 16))(v165, v167, v168);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v165, 0, 1, v168);
        }
        uint64_t v170 = v144[6];
        uint64_t v171 = (char *)v142 + v170;
        int v172 = (char *)v166 + v170;
        uint64_t v173 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 16))(v171, v172, v173);
        uint64_t v174 = v144[7];
        uint64_t v175 = (char *)v142 + v174;
        uint64_t v176 = (char *)v166 + v174;
        uint64_t v177 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v176, 1, v177))
        {
          uint64_t v178 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v175, v176, *(void *)(*(void *)(v178 - 8) + 64));
        }
        else
        {
          __src[2](v175, v176, v535);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v175, 0, 1, v177);
        }
        uint64_t v179 = v144[8];
        uint64_t v180 = (void *)((char *)v142 + v179);
        uint64_t v181 = (void *)((char *)v166 + v179);
        uint64_t v182 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int v183 = swift_getEnumCaseMultiPayload();
        if (v183 == 1)
        {
          uint64_t v184 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v184 - 8) + 16))(v180, v181, v184);
        }
        else
        {
          if (v183)
          {
            memcpy(v180, v181, *(void *)(*(void *)(v182 - 8) + 64));
            goto LABEL_93;
          }
          *uint64_t v180 = *v181;
          v180[1] = v181[1];
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
LABEL_93:
        uint64_t v504 = (uint64_t)v144;
        uint64_t v185 = v144[9];
        uint64_t v186 = (char *)v142 + v185;
        uint64_t v187 = (char *)v166 + v185;
        uint64_t v188 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v187, 1, v188))
        {
          uint64_t v189 = sub_10017DF08(&qword_100E63740);
          memcpy(v186, v187, *(void *)(*(void *)(v189 - 8) + 64));
        }
        else
        {
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v187, 1, v535))
          {
            uint64_t v190 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v186, v187, *(void *)(*(void *)(v190 - 8) + 64));
          }
          else
          {
            __src[2](v186, v187, v535);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v186, 0, 1, v535);
          }
          uint64_t v191 = *(int *)(v188 + 20);
          long long v192 = &v186[v191];
          uint64_t v193 = &v187[v191];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v193, 1, v535))
          {
            uint64_t v194 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v192, v193, *(void *)(*(void *)(v194 - 8) + 64));
          }
          else
          {
            __src[2](v192, v193, v535);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v192, 0, 1, v535);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v186, 0, 1, v188);
        }
        uint64_t v140 = v510;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v142, 0, 1, v504);
        goto LABEL_103;
      }
      if (v110)
      {
        memcpy(v103, v104, *(void *)(*(__dst - 1) + 64));
      }
      else
      {
        uint64_t *v103 = *v104;
        v103[1] = v104[1];
        v103[2] = v104[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
LABEL_104:
      swift_storeEnumTagMultiPayload();
LABEL_105:
      uint64_t v203 = v68;
      uint64_t v204 = v93[8];
      uint64_t v205 = (uint64_t)&v85[v204];
      uint64_t v206 = (uint64_t)&v86[v204];
      uint64_t v207 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
      int v208 = _s7Weather24LocationCompositionStateOwet_0(v205, 1, v207);
      int v209 = _s7Weather24LocationCompositionStateOwet_0(v206, 1, v207);
      if (!v208)
      {
        if (v209)
        {
          sub_1006739F4();
          goto LABEL_111;
        }
        if (v203 == v99) {
          goto LABEL_213;
        }
        sub_1006739F4();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *(void *)uint64_t v205 = *(void *)v206;
            *(void *)(v205 + 8) = *(void *)(v206 + 8);
            swift_bridgeObjectRetain();
            goto LABEL_179;
          case 2u:
            uint64_t v217 = type metadata accessor for AttributedString();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v217 - 8) + 16))(v205, v206, v217);
            goto LABEL_179;
          case 3u:
            uint64_t v218 = sub_10017DF08(&qword_100E73808);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v218 - 8) + 16))(v205, v206, v218);
            goto LABEL_179;
          case 4u:
            if (*(void *)(v206 + 8))
            {
              *(void *)uint64_t v205 = *(void *)v206;
              *(void *)(v205 + 8) = *(void *)(v206 + 8);
              *(void *)(v205 + 16) = *(void *)(v206 + 16);
              *(void *)(v205 + 24) = *(void *)(v206 + 24);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v273 = *(_OWORD *)(v206 + 16);
              *(_OWORD *)uint64_t v205 = *(_OWORD *)v206;
              *(_OWORD *)(v205 + 16) = v273;
            }
            uint64_t v274 = type metadata accessor for DetailComponentContainerViewModel();
            uint64_t v275 = *(int *)(v274 + 20);
            uint64_t v538 = v274;
            v542 = (void *)(v205 + v275);
            uint64_t v276 = (void *)(v206 + v275);
            uint64_t v277 = type metadata accessor for NewsArticleComponentViewModel(0);
            __srcb = v276;
            v530 = v93;
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              void *v542 = *v276;
              v542[1] = v276[1];
              v522 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
              uint64_t v278 = v522[5];
              uint64_t v279 = (char *)v542 + v278;
              uint64_t v280 = (char *)v276 + v278;
              uint64_t v281 = type metadata accessor for URL();
              swift_bridgeObjectRetain();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v280, 1, v281))
              {
                uint64_t v282 = sub_10017DF08(&qword_100E749B0);
                memcpy(v279, v280, *(void *)(*(void *)(v282 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v281 - 8) + 16))(v279, v280, v281);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v279, 0, 1, v281);
              }
              uint64_t v311 = v522[6];
              uint64_t v312 = (void *)((char *)v542 + v311);
              uint64_t v313 = (void *)((char *)v276 + v311);
              void *v312 = *v313;
              v312[1] = v313[1];
              uint64_t v314 = v522[7];
              v511 = (char *)v542 + v314;
              uint64_t v315 = (char *)v276 + v314;
              uint64_t v316 = *(void (**)(char *, char *, uint64_t))(*(void *)(v281 - 8) + 16);
              swift_bridgeObjectRetain();
              v316(v511, v315, v281);
              uint64_t v317 = v522[8];
              uint64_t v318 = (char *)v542 + v317;
              uint64_t v319 = &__srcb[v317];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&__srcb[v317], 1, v281))
              {
                uint64_t v320 = sub_10017DF08(&qword_100E749B0);
                memcpy(v318, v319, *(void *)(*(void *)(v320 - 8) + 64));
              }
              else
              {
                v316(v318, v319, v281);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v318, 0, 1, v281);
              }
              long long v99 = v547;
              uint64_t v283 = v538;
              *((unsigned char *)v542 + v522[9]) = __srcb[v522[9]];
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v542, v276, *(void *)(*(void *)(v277 - 8) + 64));
              uint64_t v283 = v538;
            }
            uint64_t v321 = *(int *)(v283 + 24);
            v322 = (void *)(v205 + v321);
            uint64_t v323 = (const void *)(v206 + v321);
            uint64_t v324 = type metadata accessor for DetailComponentAction();
            uint64_t v70 = v550;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v323, 1, v324))
            {
              uint64_t v325 = sub_10017DF08(&qword_100E73810);
              memcpy(v322, v323, *(void *)(*(void *)(v325 - 8) + 64));
            }
            else
            {
              uint64_t v326 = type metadata accessor for URL();
              (*(void (**)(void *, const void *, uint64_t))(*(void *)(v326 - 8) + 16))(v322, v323, v326);
              uint64_t v327 = sub_10017DF08(&qword_100E66478);
              *((unsigned char *)v322 + *(int *)(v327 + 48)) = *((unsigned char *)v323 + *(int *)(v327 + 48));
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v322, 0, 1, v324);
            }
            uint64_t v93 = v530;
            goto LABEL_179;
          case 5u:
            v529 = v93;
            v518 = v86;
            if (*(void *)(v206 + 24))
            {
              uint64_t v219 = *(void *)v206;
              uint64_t v220 = *(void *)(v206 + 8);
              char v221 = *(unsigned char *)(v206 + 16);
              sub_100190CC4(*(void *)v206, v220, v221);
              *(void *)uint64_t v205 = v219;
              *(void *)(v205 + 8) = v220;
              *(unsigned char *)(v205 + 16) = v221;
              *(void *)(v205 + 24) = *(void *)(v206 + 24);
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v284 = *(_OWORD *)(v206 + 16);
              *(_OWORD *)uint64_t v205 = *(_OWORD *)v206;
              *(_OWORD *)(v205 + 16) = v284;
            }
            uint64_t v285 = *(void *)(v206 + 32);
            uint64_t v286 = *(void *)(v206 + 40);
            uint64_t v287 = *(void *)(v206 + 48);
            uint64_t v288 = *(void *)(v206 + 56);
            uint64_t v289 = *(void *)(v206 + 64);
            uint64_t v290 = *(void *)(v206 + 72);
            uint64_t v291 = *(void *)(v206 + 80);
            char v543 = *(unsigned char *)(v206 + 89);
            uint64_t v292 = *(unsigned __int8 *)(v206 + 88);
            sub_10033A9E8(v285, v286, v287, v288, v289, v290, v291, v292, v543);
            *(void *)(v205 + 32) = v285;
            *(void *)(v205 + 40) = v286;
            *(void *)(v205 + 48) = v287;
            *(void *)(v205 + 56) = v288;
            *(void *)(v205 + 64) = v289;
            *(void *)(v205 + 72) = v290;
            *(void *)(v205 + 80) = v291;
            *(unsigned char *)(v205 + 88) = v292;
            *(unsigned char *)(v205 + 89) = v543;
            swift_storeEnumTagMultiPayload();
            long long v99 = v547;
            uint64_t v70 = v550;
            uint64_t v86 = v518;
            uint64_t v93 = v529;
            goto LABEL_213;
          case 6u:
            uint64_t v222 = type metadata accessor for PrecipitationTotalPlatterViewModel();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v222 - 8) + 16))(v205, v206, v222);
            goto LABEL_179;
          case 7u:
            uint64_t v223 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
            int v224 = swift_getEnumCaseMultiPayload();
            if (v224 != 1)
            {
              if (v224)
              {
                memcpy((void *)v205, (const void *)v206, *(void *)(*(void *)(v223 - 8) + 64));
              }
              else
              {
                *(void *)uint64_t v205 = *(void *)v206;
                *(void *)(v205 + 8) = *(void *)(v206 + 8);
                *(void *)(v205 + 16) = *(void *)(v206 + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_storeEnumTagMultiPayload();
              }
LABEL_275:
              swift_storeEnumTagMultiPayload();
              uint64_t v70 = v550;
              goto LABEL_213;
            }
            v531 = v93;
            v519 = v86;
            *(void *)uint64_t v205 = *(void *)v206;
            *(void *)(v205 + 8) = *(void *)(v206 + 8);
            uint64_t v293 = type metadata accessor for ConditionDetailMapViewModel();
            uint64_t v294 = *(int *)(v293 + 20);
            uint64_t v295 = v205 + v294;
            uint64_t v296 = v206 + v294;
            uint64_t v297 = type metadata accessor for Location();
            uint64_t v298 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v297 - 8) + 16);
            swift_bridgeObjectRetain();
            v298(v295, v296, v297);
            v299 = (int *)v293;
            uint64_t v300 = *(int *)(v293 + 24);
            uint64_t v301 = (void *)(v205 + v300);
            uint64_t v302 = (void *)(v206 + v300);
            uint64_t v303 = type metadata accessor for WeatherData(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v302, 1, v303))
            {
              uint64_t v304 = sub_10017DF08(&qword_100E63850);
              memcpy(v301, v302, *(void *)(*(void *)(v304 - 8) + 64));
LABEL_274:
              uint64_t v494 = v299[7];
              v495 = (void *)(v205 + v494);
              v496 = (void *)(v206 + v494);
              void *v495 = *v496;
              v495[1] = v496[1];
              uint64_t v497 = v299[8];
              uint64_t v498 = v205 + v497;
              uint64_t v499 = v206 + v497;
              uint64_t v500 = type metadata accessor for WeatherMapOverlayKind();
              v501 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v500 - 8) + 16);
              swift_bridgeObjectRetain();
              v501(v498, v499, v500);
              *(unsigned char *)(v205 + v299[9]) = *(unsigned char *)(v206 + v299[9]);
              swift_storeEnumTagMultiPayload();
              long long v99 = v547;
              uint64_t v86 = v519;
              uint64_t v93 = v531;
              goto LABEL_275;
            }
            *uint64_t v301 = *v302;
            v301[1] = v302[1];
            v523 = (int *)v303;
            uint64_t v328 = *(int *)(v303 + 20);
            uint64_t v329 = (char *)v301 + v328;
            uint64_t v330 = v302;
            v331 = (char *)v302 + v328;
            uint64_t v332 = type metadata accessor for Locale();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v331, 1, v332))
            {
              uint64_t v333 = sub_10017DF08(&qword_100E63730);
              memcpy(v329, v331, *(void *)(*(void *)(v333 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v332 - 8) + 16))(v329, v331, v332);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v329, 0, 1, v332);
            }
            uint64_t v356 = v523[6];
            uint64_t v357 = (char *)v301 + v356;
            uint64_t v358 = (char *)v330 + v356;
            uint64_t v359 = type metadata accessor for WeatherDataModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v359 - 8) + 16))(v357, v358, v359);
            uint64_t v360 = v523[7];
            v361 = (char *)v301 + v360;
            uint64_t v362 = (char *)v330 + v360;
            uint64_t v363 = sub_10017DF08(&qword_100E63738);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v362, 1, v363))
            {
              uint64_t v364 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v361, v362, *(void *)(*(void *)(v364 - 8) + 64));
            }
            else
            {
              __src[2](v361, v362, v535);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v361, 0, 1, v363);
            }
            uint64_t v369 = v523[8];
            uint64_t v370 = (void *)((char *)v301 + v369);
            uint64_t v371 = (void *)((char *)v330 + v369);
            uint64_t v372 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            int v373 = swift_getEnumCaseMultiPayload();
            if (v373 == 1)
            {
              uint64_t v482 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v482 - 8) + 16))(v370, v371, v482);
            }
            else
            {
              if (v373)
              {
                memcpy(v370, v371, *(void *)(*(void *)(v372 - 8) + 64));
                goto LABEL_264;
              }
              void *v370 = *v371;
              v370[1] = v371[1];
              swift_bridgeObjectRetain();
            }
            swift_storeEnumTagMultiPayload();
LABEL_264:
            uint64_t v483 = v523[9];
            uint64_t v484 = (uint64_t)v301;
            v485 = (char *)v301 + v483;
            v486 = (char *)v330 + v483;
            uint64_t v487 = type metadata accessor for WeatherDataOverrides();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v486, 1, v487))
            {
              uint64_t v488 = sub_10017DF08(&qword_100E63740);
              memcpy(v485, v486, *(void *)(*(void *)(v488 - 8) + 64));
            }
            else
            {
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v486, 1, v535))
              {
                uint64_t v489 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v485, v486, *(void *)(*(void *)(v489 - 8) + 64));
              }
              else
              {
                __src[2](v485, v486, v535);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v485, 0, 1, v535);
              }
              uint64_t v490 = *(int *)(v487 + 20);
              v491 = &v485[v490];
              v492 = &v486[v490];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v492, 1, v535))
              {
                uint64_t v493 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v491, v492, *(void *)(*(void *)(v493 - 8) + 64));
              }
              else
              {
                __src[2](v491, v492, v535);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v491, 0, 1, v535);
              }
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v485, 0, 1, v487);
            }
            _s7Weather24LocationCompositionStateOwst_0(v484, 0, 1, (uint64_t)v523);
            goto LABEL_274;
          default:
            (*(void (**)(uint64_t, uint64_t))(*(v541 - 1) + 16))(v205, v206);
LABEL_179:
            swift_storeEnumTagMultiPayload();
            goto LABEL_213;
        }
      }
      if (v209)
      {
LABEL_111:
        uint64_t v211 = sub_10017DF08(&qword_100E73818);
        memcpy((void *)v205, (const void *)v206, *(void *)(*(void *)(v211 - 8) + 64));
        goto LABEL_213;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(void *)uint64_t v205 = *(void *)v206;
          *(void *)(v205 + 8) = *(void *)(v206 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_212;
        case 2u:
          uint64_t v212 = type metadata accessor for AttributedString();
          goto LABEL_123;
        case 3u:
          uint64_t v212 = sub_10017DF08(&qword_100E73808);
          goto LABEL_123;
        case 4u:
          if (*(void *)(v206 + 8))
          {
            *(void *)uint64_t v205 = *(void *)v206;
            *(void *)(v205 + 8) = *(void *)(v206 + 8);
            *(void *)(v205 + 16) = *(void *)(v206 + 16);
            *(void *)(v205 + 24) = *(void *)(v206 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v225 = *(_OWORD *)(v206 + 16);
            *(_OWORD *)uint64_t v205 = *(_OWORD *)v206;
            *(_OWORD *)(v205 + 16) = v225;
          }
          uint64_t v521 = type metadata accessor for DetailComponentContainerViewModel();
          uint64_t v226 = *(int *)(v521 + 20);
          v536 = (void *)(v205 + v226);
          uint64_t v227 = (void *)(v206 + v226);
          uint64_t v228 = type metadata accessor for NewsArticleComponentViewModel(0);
          __srca = v227;
          uint64_t v524 = v207;
          v528 = v93;
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            void *v536 = *v227;
            v536[1] = v227[1];
            __dstb = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
            uint64_t v229 = __dstb[5];
            uint64_t v230 = (char *)v536 + v229;
            uint64_t v231 = (char *)v227 + v229;
            uint64_t v232 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v231, 1, v232))
            {
              uint64_t v233 = sub_10017DF08(&qword_100E749B0);
              memcpy(v230, v231, *(void *)(*(void *)(v233 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v232 - 8) + 16))(v230, v231, v232);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v230, 0, 1, v232);
            }
            uint64_t v256 = __dstb[6];
            v257 = (void *)((char *)v536 + v256);
            uint64_t v258 = (void *)((char *)v227 + v256);
            void *v257 = *v258;
            v257[1] = v258[1];
            uint64_t v259 = __dstb[7];
            v507 = (char *)v536 + v259;
            uint64_t v260 = (char *)v227 + v259;
            uint64_t v261 = *(void (**)(char *, char *, uint64_t))(*(void *)(v232 - 8) + 16);
            swift_bridgeObjectRetain();
            v261(v507, v260, v232);
            uint64_t v262 = __dstb[8];
            uint64_t v263 = (char *)v536 + v262;
            uint64_t v264 = &__srca[v262];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&__srca[v262], 1, v232))
            {
              uint64_t v265 = sub_10017DF08(&qword_100E749B0);
              memcpy(v263, v264, *(void *)(*(void *)(v265 - 8) + 64));
            }
            else
            {
              v261(v263, v264, v232);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v263, 0, 1, v232);
            }
            long long v99 = v547;
            uint64_t v234 = v521;
            *((unsigned char *)v536 + __dstb[9]) = __srca[__dstb[9]];
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v536, v227, *(void *)(*(void *)(v228 - 8) + 64));
            uint64_t v234 = v521;
          }
          uint64_t v266 = *(int *)(v234 + 24);
          uint64_t v267 = (void *)(v205 + v266);
          uint64_t v268 = (const void *)(v206 + v266);
          uint64_t v269 = type metadata accessor for DetailComponentAction();
          uint64_t v70 = v550;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v268, 1, v269))
          {
            uint64_t v270 = sub_10017DF08(&qword_100E73810);
            memcpy(v267, v268, *(void *)(*(void *)(v270 - 8) + 64));
          }
          else
          {
            uint64_t v271 = type metadata accessor for URL();
            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v271 - 8) + 16))(v267, v268, v271);
            uint64_t v272 = sub_10017DF08(&qword_100E66478);
            *((unsigned char *)v267 + *(int *)(v272 + 48)) = *((unsigned char *)v268 + *(int *)(v272 + 48));
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v267, 0, 1, v269);
          }
          goto LABEL_211;
        case 5u:
          uint64_t v524 = v207;
          v528 = v93;
          v517 = v86;
          if (*(void *)(v206 + 24))
          {
            uint64_t v213 = *(void *)v206;
            uint64_t v214 = *(void *)(v206 + 8);
            char v215 = *(unsigned char *)(v206 + 16);
            sub_100190CC4(*(void *)v206, v214, v215);
            *(void *)uint64_t v205 = v213;
            *(void *)(v205 + 8) = v214;
            *(unsigned char *)(v205 + 16) = v215;
            *(void *)(v205 + 24) = *(void *)(v206 + 24);
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v235 = *(_OWORD *)(v206 + 16);
            *(_OWORD *)uint64_t v205 = *(_OWORD *)v206;
            *(_OWORD *)(v205 + 16) = v235;
          }
          uint64_t v236 = *(void *)(v206 + 32);
          uint64_t v237 = *(void *)(v206 + 40);
          uint64_t v238 = *(void *)(v206 + 48);
          uint64_t v239 = *(void *)(v206 + 56);
          uint64_t v240 = *(void *)(v206 + 64);
          uint64_t v241 = *(void *)(v206 + 72);
          uint64_t v242 = *(void *)(v206 + 80);
          char v537 = *(unsigned char *)(v206 + 89);
          uint64_t v243 = *(unsigned __int8 *)(v206 + 88);
          sub_10033A9E8(v236, v237, v238, v239, v240, v241, v242, v243, v537);
          *(void *)(v205 + 32) = v236;
          *(void *)(v205 + 40) = v237;
          *(void *)(v205 + 48) = v238;
          *(void *)(v205 + 56) = v239;
          *(void *)(v205 + 64) = v240;
          *(void *)(v205 + 72) = v241;
          *(void *)(v205 + 80) = v242;
          *(unsigned char *)(v205 + 88) = v243;
          *(unsigned char *)(v205 + 89) = v537;
          goto LABEL_210;
        case 6u:
          uint64_t v212 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_123:
          long long v210 = (void *)v212;
          goto LABEL_124;
        case 7u:
          uint64_t v520 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
          int v216 = swift_getEnumCaseMultiPayload();
          if (v216 != 1)
          {
            if (v216)
            {
              memcpy((void *)v205, (const void *)v206, *(void *)(*(void *)(v520 - 8) + 64));
            }
            else
            {
              *(void *)uint64_t v205 = *(void *)v206;
              *(void *)(v205 + 8) = *(void *)(v206 + 8);
              *(void *)(v205 + 16) = *(void *)(v206 + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
            uint64_t v70 = v550;
            goto LABEL_212;
          }
          uint64_t v524 = v207;
          v528 = v93;
          v517 = v86;
          *(void *)uint64_t v205 = *(void *)v206;
          *(void *)(v205 + 8) = *(void *)(v206 + 8);
          uint64_t v244 = type metadata accessor for ConditionDetailMapViewModel();
          uint64_t v245 = *(int *)(v244 + 20);
          uint64_t v246 = v205 + v245;
          uint64_t v247 = v206 + v245;
          uint64_t v248 = type metadata accessor for Location();
          v249 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v248 - 8) + 16);
          swift_bridgeObjectRetain();
          v249(v246, v247, v248);
          uint64_t v250 = (int *)v244;
          uint64_t v251 = *(int *)(v244 + 24);
          v252 = (void *)(v205 + v251);
          v253 = (void *)(v206 + v251);
          uint64_t v254 = type metadata accessor for WeatherData(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v253, 1, v254))
          {
            uint64_t v255 = sub_10017DF08(&qword_100E63850);
            memcpy(v252, v253, *(void *)(*(void *)(v255 - 8) + 64));
            goto LABEL_209;
          }
          void *v252 = *v253;
          v252[1] = v253[1];
          __dstc = (int *)v254;
          uint64_t v305 = *(int *)(v254 + 20);
          uint64_t v306 = (char *)v252 + v305;
          uint64_t v307 = v253;
          v308 = (char *)v253 + v305;
          uint64_t v309 = type metadata accessor for Locale();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v308, 1, v309))
          {
            uint64_t v310 = sub_10017DF08(&qword_100E63730);
            memcpy(v306, v308, *(void *)(*(void *)(v310 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v309 - 8) + 16))(v306, v308, v309);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v306, 0, 1, v309);
          }
          uint64_t v334 = __dstc[6];
          v335 = (char *)v252 + v334;
          uint64_t v336 = (char *)v307 + v334;
          uint64_t v337 = type metadata accessor for WeatherDataModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v337 - 8) + 16))(v335, v336, v337);
          uint64_t v338 = __dstc[7];
          v339 = (char *)v252 + v338;
          uint64_t v340 = (char *)v307 + v338;
          uint64_t v341 = sub_10017DF08(&qword_100E63738);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v340, 1, v341))
          {
            uint64_t v342 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v339, v340, *(void *)(*(void *)(v342 - 8) + 64));
          }
          else
          {
            __src[2](v339, v340, v535);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v339, 0, 1, v341);
          }
          uint64_t v343 = __dstc[8];
          uint64_t v344 = (void *)((char *)v252 + v343);
          uint64_t v345 = (void *)((char *)v307 + v343);
          uint64_t v346 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          int v347 = swift_getEnumCaseMultiPayload();
          if (v347 == 1)
          {
            uint64_t v348 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v348 - 8) + 16))(v344, v345, v348);
            goto LABEL_190;
          }
          if (!v347)
          {
            *uint64_t v344 = *v345;
            v344[1] = v345[1];
            swift_bridgeObjectRetain();
LABEL_190:
            swift_storeEnumTagMultiPayload();
            goto LABEL_192;
          }
          memcpy(v344, v345, *(void *)(*(void *)(v346 - 8) + 64));
LABEL_192:
          uint64_t v349 = __dstc[9];
          uint64_t v350 = (uint64_t)v252;
          uint64_t v351 = (char *)v252 + v349;
          uint64_t v352 = (char *)v307 + v349;
          uint64_t v353 = type metadata accessor for WeatherDataOverrides();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v352, 1, v353))
          {
            uint64_t v354 = sub_10017DF08(&qword_100E63740);
            memcpy(v351, v352, *(void *)(*(void *)(v354 - 8) + 64));
          }
          else
          {
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v352, 1, v535))
            {
              uint64_t v355 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v351, v352, *(void *)(*(void *)(v355 - 8) + 64));
            }
            else
            {
              __src[2](v351, v352, v535);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v351, 0, 1, v535);
            }
            uint64_t v365 = *(int *)(v353 + 20);
            uint64_t v366 = &v351[v365];
            uint64_t v367 = &v352[v365];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v367, 1, v535))
            {
              uint64_t v368 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v366, v367, *(void *)(*(void *)(v368 - 8) + 64));
            }
            else
            {
              __src[2](v366, v367, v535);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v366, 0, 1, v535);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v351, 0, 1, v353);
          }
          _s7Weather24LocationCompositionStateOwst_0(v350, 0, 1, (uint64_t)__dstc);
LABEL_209:
          uint64_t v374 = v250[7];
          uint64_t v375 = (void *)(v205 + v374);
          uint64_t v376 = (void *)(v206 + v374);
          *uint64_t v375 = *v376;
          v375[1] = v376[1];
          uint64_t v377 = v250[8];
          uint64_t v378 = v205 + v377;
          uint64_t v379 = v206 + v377;
          uint64_t v380 = type metadata accessor for WeatherMapOverlayKind();
          uint64_t v381 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v380 - 8) + 16);
          swift_bridgeObjectRetain();
          v381(v378, v379, v380);
          *(unsigned char *)(v205 + v250[9]) = *(unsigned char *)(v206 + v250[9]);
          swift_storeEnumTagMultiPayload();
LABEL_210:
          long long v99 = v547;
          uint64_t v70 = v550;
          uint64_t v86 = v517;
LABEL_211:
          uint64_t v207 = v524;
          uint64_t v93 = v528;
LABEL_212:
          swift_storeEnumTagMultiPayload();
          _s7Weather24LocationCompositionStateOwst_0(v205, 0, 1, v207);
          break;
        default:
          long long v210 = v541;
LABEL_124:
          (*(void (**)(uint64_t, uint64_t))(*(v210 - 1) + 16))(v205, v206);
          goto LABEL_212;
      }
LABEL_213:
      v85[v93[9]] = v86[v93[9]];
      v85[v93[10]] = v86[v93[10]];
      uint64_t v382 = v551;
      *(void *)&v70[v552[12]] = *(void *)&v551[v552[12]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v383 = v552[13];
      uint64_t v384 = &v70[v383];
      uint64_t v385 = &v551[v383];
      uint64_t v386 = type metadata accessor for DetailComponentContainerViewModel();
      int v387 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v384, 1, v386);
      int v388 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v385, 1, v386);
      if (!v387)
      {
        if (v388)
        {
          sub_1006739F4();
          goto LABEL_219;
        }
        uint64_t v392 = *((void *)v385 + 1);
        if (*((void *)v384 + 1))
        {
          if (v392)
          {
            *(void *)uint64_t v384 = *(void *)v385;
            *((void *)v384 + 1) = *((void *)v385 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *((void *)v384 + 2) = *((void *)v385 + 2);
            *((void *)v384 + 3) = *((void *)v385 + 3);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_1004B70A8((uint64_t)v384);
            long long v421 = *((_OWORD *)v385 + 1);
            *(_OWORD *)uint64_t v384 = *(_OWORD *)v385;
            *((_OWORD *)v384 + 1) = v421;
          }
        }
        else if (v392)
        {
          *(void *)uint64_t v384 = *(void *)v385;
          *((void *)v384 + 1) = *((void *)v385 + 1);
          *((void *)v384 + 2) = *((void *)v385 + 2);
          *((void *)v384 + 3) = *((void *)v385 + 3);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v422 = *((_OWORD *)v385 + 1);
          *(_OWORD *)uint64_t v384 = *(_OWORD *)v385;
          *((_OWORD *)v384 + 1) = v422;
        }
        if (v548 != v99)
        {
          uint64_t v423 = *(int *)(v386 + 20);
          v424 = &v384[v423];
          v425 = &v385[v423];
          sub_1006739F4();
          uint64_t v426 = type metadata accessor for NewsArticleComponentViewModel(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *(void *)v424 = *(void *)v425;
            *((void *)v424 + 1) = *((void *)v425 + 1);
            v545 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
            uint64_t v427 = v545[5];
            v428 = &v424[v427];
            v429 = &v425[v427];
            uint64_t v430 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v429, 1, v430))
            {
              uint64_t v431 = sub_10017DF08(&qword_100E749B0);
              memcpy(v428, v429, *(void *)(*(void *)(v431 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v430 - 8) + 16))(v428, v429, v430);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v428, 0, 1, v430);
            }
            uint64_t v432 = v545[6];
            v433 = &v424[v432];
            v434 = &v425[v432];
            *(void *)v433 = *(void *)v434;
            *((void *)v433 + 1) = *((void *)v434 + 1);
            uint64_t v435 = v545[7];
            v436 = &v424[v435];
            v539 = &v425[v435];
            v437 = *(void (**)(char *, char *, uint64_t))(*(void *)(v430 - 8) + 16);
            swift_bridgeObjectRetain();
            v437(v436, v539, v430);
            uint64_t v438 = v545[8];
            v439 = &v424[v438];
            v440 = &v425[v438];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v425[v438], 1, v430))
            {
              uint64_t v441 = sub_10017DF08(&qword_100E749B0);
              memcpy(v439, v440, *(void *)(*(void *)(v441 - 8) + 64));
            }
            else
            {
              v437(v439, v440, v430);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v439, 0, 1, v430);
            }
            v424[v545[9]] = v425[v545[9]];
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v424, v425, *(void *)(*(void *)(v426 - 8) + 64));
          }
          uint64_t v382 = v551;
        }
        uint64_t v442 = *(int *)(v386 + 24);
        v443 = &v384[v442];
        v444 = &v385[v442];
        uint64_t v445 = type metadata accessor for DetailComponentAction();
        int v446 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v443, 1, v445);
        int v447 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v444, 1, v445);
        if (v446)
        {
          v390 = v548;
          v391 = v546;
          if (!v447)
          {
            uint64_t v448 = type metadata accessor for URL();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v448 - 8) + 16))(v443, v444, v448);
            uint64_t v449 = sub_10017DF08(&qword_100E66478);
            v443[*(int *)(v449 + 48)] = v444[*(int *)(v449 + 48)];
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v443, 0, 1, v445);
LABEL_258:
            long long v99 = v547;
            goto LABEL_259;
          }
        }
        else
        {
          v390 = v548;
          v391 = v546;
          if (!v447)
          {
            uint64_t v480 = type metadata accessor for URL();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v480 - 8) + 24))(v443, v444, v480);
            uint64_t v481 = sub_10017DF08(&qword_100E66478);
            v443[*(int *)(v481 + 48)] = v444[*(int *)(v481 + 48)];
            goto LABEL_258;
          }
          sub_1006739F4();
        }
        uint64_t v450 = sub_10017DF08(&qword_100E73810);
        memcpy(v443, v444, *(void *)(*(void *)(v450 - 8) + 64));
        goto LABEL_258;
      }
      if (v388)
      {
LABEL_219:
        uint64_t v389 = sub_10017DF08(&qword_100E66E28);
        memcpy(v384, v385, *(void *)(*(void *)(v389 - 8) + 64));
        v390 = v548;
        v391 = v546;
        goto LABEL_259;
      }
      if (*((void *)v385 + 1))
      {
        *(void *)uint64_t v384 = *(void *)v385;
        *((void *)v384 + 1) = *((void *)v385 + 1);
        *((void *)v384 + 2) = *((void *)v385 + 2);
        *((void *)v384 + 3) = *((void *)v385 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v393 = *((_OWORD *)v385 + 1);
        *(_OWORD *)uint64_t v384 = *(_OWORD *)v385;
        *((_OWORD *)v384 + 1) = v393;
      }
      uint64_t v394 = *(int *)(v386 + 20);
      v395 = &v384[v394];
      v396 = &v385[v394];
      uint64_t v397 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)v395 = *(void *)v396;
        *((void *)v395 + 1) = *((void *)v396 + 1);
        v544 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v398 = v544[5];
        uint64_t v399 = &v395[v398];
        uint64_t v400 = &v396[v398];
        uint64_t v401 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v400, 1, v401))
        {
          uint64_t v402 = sub_10017DF08(&qword_100E749B0);
          memcpy(v399, v400, *(void *)(*(void *)(v402 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v401 - 8) + 16))(v399, v400, v401);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v399, 0, 1, v401);
        }
        uint64_t v403 = v544[6];
        v404 = &v395[v403];
        v405 = &v396[v403];
        *(void *)v404 = *(void *)v405;
        *((void *)v404 + 1) = *((void *)v405 + 1);
        uint64_t v406 = v544[7];
        uint64_t v407 = &v395[v406];
        uint64_t v408 = &v396[v406];
        v409 = *(void (**)(char *, char *, uint64_t))(*(void *)(v401 - 8) + 16);
        swift_bridgeObjectRetain();
        v409(v407, v408, v401);
        uint64_t v410 = v544[8];
        v411 = &v395[v410];
        v412 = &v396[v410];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v396[v410], 1, v401))
        {
          uint64_t v413 = sub_10017DF08(&qword_100E749B0);
          memcpy(v411, v412, *(void *)(*(void *)(v413 - 8) + 64));
        }
        else
        {
          v409(v411, v412, v401);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v411, 0, 1, v401);
        }
        long long v99 = v547;
        v395[v544[9]] = v396[v544[9]];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v395, v396, *(void *)(*(void *)(v397 - 8) + 64));
      }
      uint64_t v414 = *(int *)(v386 + 24);
      v415 = &v384[v414];
      v416 = &v385[v414];
      uint64_t v417 = type metadata accessor for DetailComponentAction();
      uint64_t v382 = v551;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v416, 1, v417))
      {
        uint64_t v418 = sub_10017DF08(&qword_100E73810);
        memcpy(v415, v416, *(void *)(*(void *)(v418 - 8) + 64));
      }
      else
      {
        uint64_t v419 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v419 - 8) + 16))(v415, v416, v419);
        uint64_t v420 = sub_10017DF08(&qword_100E66478);
        v415[*(int *)(v420 + 48)] = v416[*(int *)(v420 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v415, 0, 1, v417);
      }
      v391 = v546;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v384, 0, 1, v386);
      v390 = v548;
LABEL_259:
      uint64_t v451 = v552[14];
      v452 = &v550[v451];
      v453 = &v382[v451];
      uint64_t v454 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v454 - 8) + 24))(v452, v453, v454);
      v550[v552[15]] = v382[v552[15]];
      sub_1000C1E18((void *)((char *)v390 + v391[8]), (void *)((char *)v99 + v391[8]));
      uint64_t v455 = v391[9];
      v456 = (void *)((char *)v390 + v455);
      v457 = (void *)((char *)v99 + v455);
      void *v456 = *v457;
      v456[1] = v457[1];
      swift_retain();
      swift_release();
      uint64_t v458 = v391[10];
      v459 = (void *)((char *)v390 + v458);
      v460 = (void *)((char *)v99 + v458);
      void *v459 = *v460;
      v459[1] = v460[1];
      swift_retain();
      swift_release();
      uint64_t v461 = v391[11];
      v462 = (void *)((char *)v390 + v461);
      v463 = (void *)((char *)v99 + v461);
      void *v462 = *v463;
      v462[1] = v463[1];
      swift_retain();
      swift_release();
      uint64_t v464 = v391[12];
      v465 = (void *)((char *)v390 + v464);
      v466 = (void *)((char *)v99 + v464);
      void *v465 = *v466;
      v465[1] = v466[1];
      swift_retain();
      swift_release();
      uint64_t v467 = v391[13];
      v468 = (void *)((char *)v390 + v467);
      v469 = (void *)((char *)v99 + v467);
      void *v468 = *v469;
      v468[1] = v469[1];
      swift_retain();
      swift_release();
      uint64_t v470 = v391[14];
      v471 = (void *)((char *)v390 + v470);
      v472 = (void *)((char *)v99 + v470);
      void *v471 = *v472;
      v471[1] = v472[1];
      swift_retain();
      swift_release();
      uint64_t v473 = v391[15];
      v474 = (void *)((char *)v390 + v473);
      v475 = (void *)((char *)v99 + v473);
      void *v474 = *v475;
      v474[1] = v475[1];
      swift_retain();
      swift_release();
      uint64_t v476 = v391[16];
      v477 = (void *)((char *)v390 + v476);
      v478 = (void *)((char *)v99 + v476);
      void *v477 = *v478;
      v477[1] = v478[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return v390;
    default:
      uint64_t v105 = v541;
LABEL_54:
      (*(void (**)(uint64_t *, uint64_t *))(*(v105 - 1) + 16))(v103, v104);
      goto LABEL_104;
  }
}

void *sub_10067C6A4(void *a1, void *a2, int *a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E65310);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for PresentationMode();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v12 = a3[5];
  uint64_t v13 = a3[6];
  uint64_t v14 = (char *)a1 + v12;
  char v15 = (char *)a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = (char *)a1 + v13;
  char v17 = (char *)a2 + v13;
  *(void *)uint64_t v16 = *(void *)v17;
  v16[8] = v17[8];
  uint64_t v280 = a3;
  uint64_t v18 = a3[7];
  uint64_t v19 = (char *)a1 + v18;
  char v20 = (char *)a2 + v18;
  type metadata accessor for MoonDetailSelectedDate();
  swift_getEnumCaseMultiPayload();
  uint64_t v21 = type metadata accessor for Date();
  char v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32);
  v22(v19, v20, v21);
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = (int *)type metadata accessor for MoonDetailViewModel.Model(0);
  *(_OWORD *)&v19[v23[5]] = *(_OWORD *)&v20[v23[5]];
  *(_OWORD *)&v19[v23[6]] = *(_OWORD *)&v20[v23[6]];
  uint64_t v283 = v23;
  uint64_t v24 = v23[7];
  long long v284 = v20;
  uint64_t v285 = v19;
  uint64_t v25 = &v19[v24];
  uint64_t v26 = &v20[v24];
  v22(v25, v26, v21);
  uint64_t v27 = (int *)type metadata accessor for MoonViewModel(0);
  *(void *)&v25[v27[5]] = *(void *)&v26[v27[5]];
  uint64_t v28 = v27[6];
  uint64_t v29 = &v25[v28];
  uint64_t v30 = &v26[v28];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v26[v28], 1, v21))
  {
    uint64_t v31 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    v22(v29, v30, v21);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v21);
  }
  uint64_t v32 = v27[7];
  uint64_t v33 = &v25[v32];
  uint64_t v34 = &v26[v32];
  uint64_t v278 = a2;
  uint64_t v279 = a1;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v26[v32], 1, v21))
  {
    uint64_t v35 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    v22(v33, v34, v21);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v21);
  }
  v25[v27[8]] = v26[v27[8]];
  uint64_t v36 = v283[8];
  uint64_t v37 = &v285[v36];
  uint64_t v38 = &v284[v36];
  long long v39 = *(_OWORD *)&v284[v36 + 16];
  *(_OWORD *)uint64_t v37 = *(_OWORD *)&v284[v36];
  *((_OWORD *)v37 + 1) = v39;
  *((_OWORD *)v37 + 2) = *(_OWORD *)&v284[v36 + 32];
  v37[48] = v284[v36 + 48];
  uint64_t v40 = (int *)type metadata accessor for MoonScrubberHeaderViewModel(0);
  v22(&v37[v40[8]], &v38[v40[8]], v21);
  uint64_t v271 = (void (*)(void *, char *, void *))v22;
  long long v273 = (void *)v21;
  v22(&v37[v40[9]], &v38[v40[9]], v21);
  v37[v40[10]] = v38[v40[10]];
  uint64_t v41 = v283[9];
  uint64_t v42 = &v285[v41];
  uint64_t v43 = &v284[v41];
  uint64_t v44 = type metadata accessor for OverviewTableViewModel();
  int v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32);
  v45(v42, v43, v44);
  uint64_t v46 = v283[10];
  uint64_t v47 = &v285[v46];
  uint64_t v48 = &v284[v46];
  uint64_t v49 = type metadata accessor for MoonCompactOverviewTableViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49))
  {
    uint64_t v50 = sub_10017DF08(&qword_100E7CB90);
    memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    v45(v47, v48, v44);
    uint64_t v51 = *(int *)(v49 + 20);
    int v52 = &v47[v51];
    uint64_t v53 = &v48[v51];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v48[v51], 1, v44))
    {
      uint64_t v54 = sub_10017DF08(&qword_100E7CAE0);
      memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      v45(v52, v53, v44);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v44);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v49);
  }
  uint64_t v55 = v283[11];
  uint64_t v56 = &v285[v55];
  uint64_t v57 = &v284[v55];
  *(_OWORD *)uint64_t v56 = *(_OWORD *)&v284[v55];
  v56[16] = v284[v55 + 16];
  *(_OWORD *)(v56 + 24) = *(_OWORD *)&v284[v55 + 24];
  uint64_t v58 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  uint64_t v59 = v58[6];
  uint64_t v60 = &v56[v59];
  uint64_t v61 = &v57[v59];
  uint64_t v62 = type metadata accessor for WeatherDescription();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62))
  {
    uint64_t v63 = sub_10017DF08(&qword_100E63758);
    memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v62);
  }
  uint64_t v64 = v58[7];
  uint64_t v65 = &v56[v64];
  uint64_t v66 = &v57[v64];
  uint64_t v67 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v65, v66, v62);
      goto LABEL_61;
    case 2u:
      uint64_t v68 = type metadata accessor for AttributedString();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v65, v66, v68);
      goto LABEL_61;
    case 3u:
      uint64_t v69 = sub_10017DF08(&qword_100E73808);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 32))(v65, v66, v69);
      goto LABEL_61;
    case 4u:
      uint64_t v263 = v62;
      long long v70 = *((_OWORD *)v66 + 1);
      *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
      *((_OWORD *)v65 + 1) = v70;
      uint64_t v71 = type metadata accessor for DetailComponentContainerViewModel();
      uint64_t v72 = *(int *)(v71 + 20);
      uint64_t v73 = &v65[v72];
      uint64_t v74 = &v66[v72];
      uint64_t v75 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v267 = v67;
        *(_OWORD *)uint64_t v73 = *(_OWORD *)v74;
        uint64_t v76 = type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v77 = *(int *)(v76 + 20);
        __dst = &v73[v77];
        uint64_t v260 = (int *)v76;
        uint64_t v78 = &v74[v77];
        uint64_t v79 = type metadata accessor for URL();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v78, 1, v79))
        {
          uint64_t v80 = sub_10017DF08(&qword_100E749B0);
          memcpy(__dst, v78, *(void *)(*(void *)(v80 - 8) + 64));
          uint64_t v81 = *(void *)(v79 - 8);
        }
        else
        {
          uint64_t v252 = *(void *)(v79 - 8);
          (*(void (**)(char *, char *, uint64_t))(v252 + 32))(__dst, v78, v79);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v79);
          uint64_t v81 = v252;
        }
        *(_OWORD *)&v73[v260[6]] = *(_OWORD *)&v74[v260[6]];
        v253 = *(void (**)(char *, char *, uint64_t))(v81 + 32);
        v253(&v73[v260[7]], &v74[v260[7]], v79);
        uint64_t v94 = v260[8];
        __dsta = &v73[v94];
        char v95 = &v74[v94];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v74[v94], 1, v79))
        {
          uint64_t v96 = sub_10017DF08(&qword_100E749B0);
          memcpy(__dsta, v95, *(void *)(*(void *)(v96 - 8) + 64));
        }
        else
        {
          v253(__dsta, v95, v79);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v79);
        }
        uint64_t v67 = v267;
        v73[v260[9]] = v74[v260[9]];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
      }
      uint64_t v62 = v263;
      uint64_t v102 = *(int *)(v71 + 24);
      uint64_t v103 = &v65[v102];
      uint64_t v104 = &v66[v102];
      uint64_t v105 = type metadata accessor for DetailComponentAction();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v104, 1, v105))
      {
        uint64_t v106 = sub_10017DF08(&qword_100E73810);
        memcpy(v103, v104, *(void *)(*(void *)(v106 - 8) + 64));
      }
      else
      {
        uint64_t v107 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 32))(v103, v104, v107);
        uint64_t v108 = sub_10017DF08(&qword_100E66478);
        v103[*(int *)(v108 + 48)] = v104[*(int *)(v108 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v103, 0, 1, v105);
      }
      goto LABEL_61;
    case 6u:
      uint64_t v82 = type metadata accessor for PrecipitationTotalPlatterViewModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 32))(v65, v66, v82);
      goto LABEL_61;
    case 7u:
      uint64_t v83 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v268 = v67;
        *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
        uint64_t v84 = (int *)type metadata accessor for ConditionDetailMapViewModel();
        uint64_t v85 = v84[5];
        uint64_t v86 = &v65[v85];
        uint64_t v87 = &v66[v85];
        uint64_t v88 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 32))(v86, v87, v88);
        uint64_t v89 = v84[6];
        uint64_t v90 = &v65[v89];
        uint64_t v91 = &v66[v89];
        uint64_t v92 = type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v91, 1, v92))
        {
          uint64_t v93 = sub_10017DF08(&qword_100E63850);
          memcpy(v90, v91, *(void *)(*(void *)(v93 - 8) + 64));
        }
        else
        {
          uint64_t v255 = v84;
          uint64_t v256 = (uint64_t)v90;
          *(_OWORD *)uint64_t v90 = *(_OWORD *)v91;
          uint64_t v261 = (int *)v92;
          uint64_t v264 = v91;
          uint64_t v97 = *(int *)(v92 + 20);
          int v98 = &v90[v97];
          long long v99 = &v91[v97];
          uint64_t v100 = type metadata accessor for Locale();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v99, 1, v100))
          {
            uint64_t v101 = sub_10017DF08(&qword_100E63730);
            memcpy(v98, v99, *(void *)(*(void *)(v101 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 32))(v98, v99, v100);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 0, 1, v100);
          }
          uint64_t v109 = v261[6];
          uint64_t v110 = v256 + v109;
          uint64_t v111 = &v91[v109];
          uint64_t v112 = type metadata accessor for WeatherDataModel();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v112 - 8) + 32))(v110, v111, v112);
          uint64_t v113 = v261[7];
          uint64_t v114 = (void *)(v256 + v113);
          uint64_t v115 = &v91[v113];
          uint64_t v116 = sub_10017DF08(&qword_100E63738);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v115, 1, v116))
          {
            uint64_t v117 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v114, v115, *(void *)(*(void *)(v117 - 8) + 64));
          }
          else
          {
            v271(v114, v115, v273);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v114, 0, 1, v116);
          }
          uint64_t v118 = v261[8];
          uint64_t v119 = (void *)(v256 + v118);
          uint64_t v120 = &v91[v118];
          uint64_t v121 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v122 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v122 - 8) + 32))(v119, v120, v122);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v119, v120, *(void *)(*(void *)(v121 - 8) + 64));
          }
          uint64_t v123 = v261[9];
          uint64_t v124 = (char *)(v256 + v123);
          uint64_t v125 = (char *)v264 + v123;
          uint64_t v126 = type metadata accessor for WeatherDataOverrides();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v125, 1, v126))
          {
            uint64_t v127 = sub_10017DF08(&qword_100E63740);
            memcpy(v124, v125, *(void *)(*(void *)(v127 - 8) + 64));
          }
          else
          {
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v125, 1, (uint64_t)v273))
            {
              uint64_t v128 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v124, v125, *(void *)(*(void *)(v128 - 8) + 64));
            }
            else
            {
              v271(v124, v125, v273);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v124, 0, 1, (uint64_t)v273);
            }
            uint64_t v129 = *(int *)(v126 + 20);
            uint64_t v130 = &v124[v129];
            char v131 = &v125[v129];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v131, 1, (uint64_t)v273))
            {
              uint64_t v132 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v130, v131, *(void *)(*(void *)(v132 - 8) + 64));
            }
            else
            {
              v271(v130, v131, v273);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v130, 0, 1, (uint64_t)v273);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v124, 0, 1, v126);
          }
          uint64_t v84 = v255;
          _s7Weather24LocationCompositionStateOwst_0(v256, 0, 1, (uint64_t)v261);
        }
        *(_OWORD *)&v65[v84[7]] = *(_OWORD *)&v66[v84[7]];
        uint64_t v133 = v84[8];
        uint64_t v134 = &v65[v133];
        uint64_t v135 = &v66[v133];
        uint64_t v136 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 32))(v134, v135, v136);
        v65[v84[9]] = v66[v84[9]];
        swift_storeEnumTagMultiPayload();
        uint64_t v67 = v268;
      }
      else
      {
        memcpy(v65, v66, *(void *)(*(void *)(v83 - 8) + 64));
      }
LABEL_61:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
      break;
  }
  uint64_t v137 = v58[8];
  uint64_t v138 = &v56[v137];
  uint64_t v139 = &v57[v137];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v57[v137], 1, v67))
  {
    uint64_t v140 = sub_10017DF08(&qword_100E73818);
    memcpy(v138, v139, *(void *)(*(void *)(v140 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v138, v139, v62);
        goto LABEL_106;
      case 2u:
        uint64_t v141 = type metadata accessor for AttributedString();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 32))(v138, v139, v141);
        goto LABEL_106;
      case 3u:
        uint64_t v142 = sub_10017DF08(&qword_100E73808);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v138, v139, v142);
        goto LABEL_106;
      case 4u:
        long long v143 = *((_OWORD *)v139 + 1);
        *(_OWORD *)uint64_t v138 = *(_OWORD *)v139;
        *((_OWORD *)v138 + 1) = v143;
        uint64_t v144 = type metadata accessor for DetailComponentContainerViewModel();
        uint64_t v145 = *(int *)(v144 + 20);
        uint64_t v146 = &v138[v145];
        uint64_t v147 = &v139[v145];
        uint64_t v148 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v272 = v58;
          *(_OWORD *)uint64_t v146 = *(_OWORD *)v147;
          uint64_t v281 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v149 = v281[5];
          uint64_t v274 = &v146[v149];
          uint64_t v150 = &v147[v149];
          uint64_t v151 = type metadata accessor for URL();
          uint64_t v265 = v144;
          uint64_t v269 = v67;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v150, 1, v151))
          {
            uint64_t v152 = sub_10017DF08(&qword_100E749B0);
            memcpy(v274, v150, *(void *)(*(void *)(v152 - 8) + 64));
            uint64_t v153 = *(void *)(v151 - 8);
          }
          else
          {
            uint64_t v153 = *(void *)(v151 - 8);
            (*(void (**)(char *, char *, uint64_t))(v153 + 32))(v274, v150, v151);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v274, 0, 1, v151);
          }
          *(_OWORD *)&v146[v281[6]] = *(_OWORD *)&v147[v281[6]];
          uint64_t v166 = *(void (**)(char *, char *, uint64_t))(v153 + 32);
          v166(&v146[v281[7]], &v147[v281[7]], v151);
          uint64_t v167 = v281[8];
          uint64_t v275 = &v146[v167];
          uint64_t v168 = &v147[v167];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v147[v167], 1, v151))
          {
            uint64_t v169 = sub_10017DF08(&qword_100E749B0);
            memcpy(v275, v168, *(void *)(*(void *)(v169 - 8) + 64));
          }
          else
          {
            v166(v275, v168, v151);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v275, 0, 1, v151);
          }
          uint64_t v67 = v269;
          uint64_t v58 = v272;
          uint64_t v144 = v265;
          v146[v281[9]] = v147[v281[9]];
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v146, v147, *(void *)(*(void *)(v148 - 8) + 64));
        }
        uint64_t v175 = *(int *)(v144 + 24);
        uint64_t v176 = &v138[v175];
        uint64_t v177 = &v139[v175];
        uint64_t v178 = type metadata accessor for DetailComponentAction();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v177, 1, v178))
        {
          uint64_t v179 = sub_10017DF08(&qword_100E73810);
          memcpy(v176, v177, *(void *)(*(void *)(v179 - 8) + 64));
        }
        else
        {
          uint64_t v180 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v180 - 8) + 32))(v176, v177, v180);
          uint64_t v181 = sub_10017DF08(&qword_100E66478);
          v176[*(int *)(v181 + 48)] = v177[*(int *)(v181 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v176, 0, 1, v178);
        }
        goto LABEL_106;
      case 6u:
        uint64_t v154 = type metadata accessor for PrecipitationTotalPlatterViewModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v154 - 8) + 32))(v138, v139, v154);
        goto LABEL_106;
      case 7u:
        uint64_t v155 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v270 = v67;
          *(_OWORD *)uint64_t v138 = *(_OWORD *)v139;
          uint64_t v156 = (int *)type metadata accessor for ConditionDetailMapViewModel();
          uint64_t v157 = v156[5];
          uint64_t v158 = &v138[v157];
          uint64_t v159 = &v139[v157];
          uint64_t v160 = type metadata accessor for Location();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 32))(v158, v159, v160);
          uint64_t v161 = v156[6];
          uint64_t v162 = &v138[v161];
          uint64_t v163 = &v139[v161];
          uint64_t v164 = type metadata accessor for WeatherData(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v163, 1, v164))
          {
            uint64_t v165 = sub_10017DF08(&qword_100E63850);
            memcpy(v162, v163, *(void *)(*(void *)(v165 - 8) + 64));
          }
          else
          {
            uint64_t v262 = (uint64_t)v162;
            *(_OWORD *)uint64_t v162 = *(_OWORD *)v163;
            uint64_t v266 = (int *)v164;
            uint64_t v170 = *(int *)(v164 + 20);
            uint64_t v171 = &v162[v170];
            int v172 = &v163[v170];
            uint64_t v173 = type metadata accessor for Locale();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v172, 1, v173))
            {
              uint64_t v174 = sub_10017DF08(&qword_100E63730);
              memcpy(v171, v172, *(void *)(*(void *)(v174 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 32))(v171, v172, v173);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v171, 0, 1, v173);
            }
            uint64_t v182 = v266[6];
            uint64_t v254 = v262 + v182;
            int v183 = &v163[v182];
            uint64_t v184 = type metadata accessor for WeatherDataModel();
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v184 - 8) + 32))(v254, v183, v184);
            uint64_t v185 = v266[7];
            uint64_t v186 = (void *)(v262 + v185);
            uint64_t v187 = &v163[v185];
            uint64_t v188 = sub_10017DF08(&qword_100E63738);
            v257 = v156;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v187, 1, v188))
            {
              uint64_t v189 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v186, v187, *(void *)(*(void *)(v189 - 8) + 64));
            }
            else
            {
              v271(v186, v187, v273);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v186, 0, 1, v188);
            }
            uint64_t v190 = v266[8];
            uint64_t v191 = (void *)(v262 + v190);
            long long v192 = &v163[v190];
            uint64_t v193 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v194 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(void *, char *, uint64_t))(*(void *)(v194 - 8) + 32))(v191, v192, v194);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v191, v192, *(void *)(*(void *)(v193 - 8) + 64));
            }
            uint64_t v195 = v266[9];
            uint64_t v196 = (char *)(v262 + v195);
            uint64_t v197 = &v163[v195];
            uint64_t v198 = type metadata accessor for WeatherDataOverrides();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v197, 1, v198))
            {
              uint64_t v199 = sub_10017DF08(&qword_100E63740);
              memcpy(v196, v197, *(void *)(*(void *)(v199 - 8) + 64));
            }
            else
            {
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v197, 1, (uint64_t)v273))
              {
                uint64_t v200 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v196, v197, *(void *)(*(void *)(v200 - 8) + 64));
              }
              else
              {
                v271(v196, v197, v273);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v196, 0, 1, (uint64_t)v273);
              }
              uint64_t v201 = *(int *)(v198 + 20);
              uint64_t v202 = &v196[v201];
              uint64_t v203 = &v197[v201];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v203, 1, (uint64_t)v273))
              {
                uint64_t v204 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v202, v203, *(void *)(*(void *)(v204 - 8) + 64));
              }
              else
              {
                v271(v202, v203, v273);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v202, 0, 1, (uint64_t)v273);
              }
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v196, 0, 1, v198);
            }
            _s7Weather24LocationCompositionStateOwst_0(v262, 0, 1, (uint64_t)v266);
            uint64_t v156 = v257;
          }
          *(_OWORD *)&v138[v156[7]] = *(_OWORD *)&v139[v156[7]];
          uint64_t v205 = v156[8];
          uint64_t v206 = &v138[v205];
          uint64_t v207 = &v139[v205];
          uint64_t v208 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v208 - 8) + 32))(v206, v207, v208);
          v138[v156[9]] = v139[v156[9]];
          swift_storeEnumTagMultiPayload();
          uint64_t v67 = v270;
        }
        else
        {
          memcpy(v138, v139, *(void *)(*(void *)(v155 - 8) + 64));
        }
LABEL_106:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v138, v139, *(void *)(*(void *)(v67 - 8) + 64));
        break;
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v138, 0, 1, v67);
  }
  v56[v58[9]] = v57[v58[9]];
  v56[v58[10]] = v57[v58[10]];
  *(void *)&v285[v283[12]] = *(void *)&v284[v283[12]];
  uint64_t v209 = v283[13];
  long long v210 = &v285[v209];
  uint64_t v211 = &v284[v209];
  uint64_t v212 = type metadata accessor for DetailComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v211, 1, v212))
  {
    uint64_t v213 = sub_10017DF08(&qword_100E66E28);
    memcpy(v210, v211, *(void *)(*(void *)(v213 - 8) + 64));
    uint64_t v214 = v278;
    char v215 = v279;
  }
  else
  {
    long long v216 = *((_OWORD *)v211 + 1);
    *(_OWORD *)long long v210 = *(_OWORD *)v211;
    *((_OWORD *)v210 + 1) = v216;
    uint64_t v217 = *(int *)(v212 + 20);
    uint64_t v218 = &v210[v217];
    uint64_t v219 = &v211[v217];
    uint64_t v220 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v218 = *(_OWORD *)v219;
      uint64_t v282 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v221 = v282[5];
      uint64_t v222 = &v218[v221];
      uint64_t v223 = &v219[v221];
      uint64_t v224 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v223, 1, v224))
      {
        uint64_t v225 = sub_10017DF08(&qword_100E749B0);
        memcpy(v222, v223, *(void *)(*(void *)(v225 - 8) + 64));
        uint64_t v226 = *(void *)(v224 - 8);
      }
      else
      {
        uint64_t v227 = v222;
        uint64_t v276 = v222;
        uint64_t v226 = *(void *)(v224 - 8);
        (*(void (**)(char *, char *, uint64_t))(v226 + 32))(v227, v223, v224);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v276, 0, 1, v224);
      }
      *(_OWORD *)&v218[v282[6]] = *(_OWORD *)&v219[v282[6]];
      uint64_t v228 = *(void (**)(char *, char *, uint64_t))(v226 + 32);
      v228(&v218[v282[7]], &v219[v282[7]], v224);
      uint64_t v229 = v282[8];
      uint64_t v277 = &v218[v229];
      uint64_t v230 = &v219[v229];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v219[v229], 1, v224))
      {
        uint64_t v231 = sub_10017DF08(&qword_100E749B0);
        memcpy(v277, v230, *(void *)(*(void *)(v231 - 8) + 64));
      }
      else
      {
        v228(v277, v230, v224);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v277, 0, 1, v224);
      }
      v218[v282[9]] = v219[v282[9]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v218, v219, *(void *)(*(void *)(v220 - 8) + 64));
    }
    uint64_t v214 = v278;
    uint64_t v232 = *(int *)(v212 + 24);
    uint64_t v233 = &v210[v232];
    uint64_t v234 = &v211[v232];
    uint64_t v235 = type metadata accessor for DetailComponentAction();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v234, 1, v235))
    {
      uint64_t v236 = sub_10017DF08(&qword_100E73810);
      memcpy(v233, v234, *(void *)(*(void *)(v236 - 8) + 64));
    }
    else
    {
      uint64_t v237 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v237 - 8) + 32))(v233, v234, v237);
      uint64_t v238 = sub_10017DF08(&qword_100E66478);
      v233[*(int *)(v238 + 48)] = v234[*(int *)(v238 + 48)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v233, 0, 1, v235);
    }
    char v215 = v279;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v210, 0, 1, v212);
  }
  uint64_t v239 = v283[14];
  uint64_t v240 = &v285[v239];
  uint64_t v241 = &v284[v239];
  uint64_t v242 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v242 - 8) + 32))(v240, v241, v242);
  v285[v283[15]] = v284[v283[15]];
  uint64_t v243 = v280[8];
  uint64_t v244 = v280[9];
  uint64_t v245 = (uint64_t)v215 + v243;
  uint64_t v246 = (uint64_t)v214 + v243;
  *(void *)(v245 + 32) = *(void *)(v246 + 32);
  long long v247 = *(_OWORD *)(v246 + 16);
  *(_OWORD *)uint64_t v245 = *(_OWORD *)v246;
  *(_OWORD *)(v245 + 16) = v247;
  *(_OWORD *)((char *)v215 + v244) = *(_OWORD *)((char *)v214 + v244);
  uint64_t v248 = v280[11];
  *(_OWORD *)((char *)v215 + v280[10]) = *(_OWORD *)((char *)v214 + v280[10]);
  *(_OWORD *)((char *)v215 + v248) = *(_OWORD *)((char *)v214 + v248);
  uint64_t v249 = v280[13];
  *(_OWORD *)((char *)v215 + v280[12]) = *(_OWORD *)((char *)v214 + v280[12]);
  *(_OWORD *)((char *)v215 + v249) = *(_OWORD *)((char *)v214 + v249);
  uint64_t v250 = v280[15];
  *(_OWORD *)((char *)v215 + v280[14]) = *(_OWORD *)((char *)v214 + v280[14]);
  *(_OWORD *)((char *)v215 + v250) = *(_OWORD *)((char *)v214 + v250);
  *(_OWORD *)((char *)v215 + v280[16]) = *(_OWORD *)((char *)v214 + v280[16]);
  return v215;
}

uint64_t sub_10067E534(uint64_t a1, void *a2, int *a3)
{
  uint64_t v5 = (void *)a1;
  if ((void *)a1 != a2)
  {
    sub_100178110(a1, &qword_100E65310);
    uint64_t v6 = sub_10017DF08(&qword_100E65310);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = a2[1];
      *uint64_t v5 = *a2;
      v5[1] = v7;
      uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
      uint64_t v9 = (char *)v5 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for PresentationMode();
      uint64_t v5 = (void *)a1;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v5, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v12 = a3[5];
  uint64_t v13 = (char *)v5 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = *(void *)v14;
  LOBYTE(v14) = v14[8];
  uint64_t v16 = *(void *)v13;
  char v17 = v13[8];
  *(void *)uint64_t v13 = v15;
  v13[8] = (char)v14;
  sub_10018F6D8(v16, v17);
  uint64_t v18 = a3[6];
  uint64_t v19 = (char *)v5 + v18;
  char v20 = (char *)a2 + v18;
  uint64_t v21 = *(void *)v20;
  LOBYTE(v20) = v20[8];
  uint64_t v22 = *(void *)v19;
  char v23 = v19[8];
  *(void *)uint64_t v19 = v21;
  v19[8] = (char)v20;
  sub_10018F6D8(v22, v23);
  uint64_t v467 = a3;
  uint64_t v24 = a3[7];
  uint64_t v25 = (char *)v5 + v24;
  uint64_t v26 = (char *)a2 + v24;
  v474 = a2;
  if (v5 != a2)
  {
    sub_1006739F4();
    type metadata accessor for MoonDetailSelectedDate();
    swift_getEnumCaseMultiPayload();
    uint64_t v27 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v28 = (int *)type metadata accessor for MoonDetailViewModel.Model(0);
  uint64_t v29 = v28[5];
  uint64_t v30 = &v25[v29];
  uint64_t v31 = &v26[v29];
  uint64_t v33 = *(void *)v31;
  uint64_t v32 = *((void *)v31 + 1);
  *(void *)uint64_t v30 = v33;
  *((void *)v30 + 1) = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = v28[6];
  uint64_t v35 = &v25[v34];
  uint64_t v36 = &v26[v34];
  uint64_t v38 = *(void *)v36;
  uint64_t v37 = *((void *)v36 + 1);
  *(void *)uint64_t v35 = v38;
  *((void *)v35 + 1) = v37;
  swift_bridgeObjectRelease();
  v475 = v25;
  uint64_t v476 = v28;
  uint64_t v39 = v28[7];
  uint64_t v40 = &v25[v39];
  uint64_t v41 = &v26[v39];
  uint64_t v42 = type metadata accessor for Date();
  uint64_t v43 = *(void *)(v42 - 8);
  v468 = *(void (**)(char *, char *, uint64_t))(v43 + 40);
  v468(v40, v41, v42);
  uint64_t v44 = (int *)type metadata accessor for MoonViewModel(0);
  *(void *)&v40[v44[5]] = *(void *)&v41[v44[5]];
  uint64_t v45 = v44[6];
  uint64_t v46 = &v40[v45];
  uint64_t v47 = &v41[v45];
  int v48 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v40[v45], 1, v42);
  int v49 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v42);
  if (v48)
  {
    if (!v49)
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v46, v47, v42);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v46, 0, 1, v42);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v49)
  {
    (*(void (**)(char *, uint64_t))(v43 + 8))(v46, v42);
LABEL_12:
    uint64_t v50 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
    goto LABEL_13;
  }
  v468(v46, v47, v42);
LABEL_13:
  uint64_t v51 = v44[7];
  int v52 = &v40[v51];
  uint64_t v53 = &v41[v51];
  int v54 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v40[v51], 1, v42);
  int v55 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v42);
  uint64_t v473 = v26;
  v456 = (void (**)(void *, const void *, void *))v43;
  if (v54)
  {
    if (!v55)
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v52, v53, v42);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v42);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v55)
  {
    (*(void (**)(char *, uint64_t))(v43 + 8))(v52, v42);
LABEL_18:
    uint64_t v56 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64));
    goto LABEL_19;
  }
  v468(v52, v53, v42);
LABEL_19:
  uint64_t v57 = (void *)v42;
  v40[v44[8]] = v41[v44[8]];
  uint64_t v58 = v476[8];
  uint64_t v59 = &v475[v58];
  uint64_t v60 = &v26[v58];
  uint64_t v61 = *(void *)&v26[v58 + 8];
  *(void *)uint64_t v59 = *(void *)&v26[v58];
  *((void *)v59 + 1) = v61;
  swift_bridgeObjectRelease();
  uint64_t v62 = *((void *)v60 + 3);
  *((void *)v59 + 2) = *((void *)v60 + 2);
  *((void *)v59 + 3) = v62;
  swift_bridgeObjectRelease();
  uint64_t v63 = *((void *)v60 + 5);
  *((void *)v59 + 4) = *((void *)v60 + 4);
  *((void *)v59 + 5) = v63;
  swift_bridgeObjectRelease();
  v59[48] = v60[48];
  uint64_t v64 = (int *)type metadata accessor for MoonScrubberHeaderViewModel(0);
  v468(&v59[v64[8]], &v60[v64[8]], (uint64_t)v57);
  uint64_t v461 = v57;
  v468(&v59[v64[9]], &v60[v64[9]], (uint64_t)v57);
  v59[v64[10]] = v60[v64[10]];
  uint64_t v65 = v476[9];
  uint64_t v66 = &v475[v65];
  uint64_t v67 = &v26[v65];
  uint64_t v68 = type metadata accessor for OverviewTableViewModel();
  uint64_t v69 = *(void *)(v68 - 8);
  long long v70 = *(void (**)(char *, char *, uint64_t))(v69 + 40);
  v70(v66, v67, v68);
  uint64_t v71 = v476[10];
  uint64_t v72 = (uint64_t)&v475[v71];
  uint64_t v73 = (uint64_t)&v26[v71];
  uint64_t v74 = type metadata accessor for MoonCompactOverviewTableViewModel(0);
  LODWORD(v66) = _s7Weather24LocationCompositionStateOwet_0(v72, 1, v74);
  int v75 = _s7Weather24LocationCompositionStateOwet_0(v73, 1, v74);
  if (v66)
  {
    if (!v75)
    {
      uint64_t v76 = *(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 32);
      v76(v72, v73, v68);
      uint64_t v77 = *(int *)(v74 + 20);
      uint64_t v78 = (void *)(v72 + v77);
      uint64_t v79 = (const void *)(v73 + v77);
      uint64_t v80 = v475;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v79, 1, v68))
      {
        uint64_t v81 = sub_10017DF08(&qword_100E7CAE0);
        memcpy(v78, v79, *(void *)(*(void *)(v81 - 8) + 64));
      }
      else
      {
        v76((uint64_t)v78, (uint64_t)v79, v68);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v78, 0, 1, v68);
      }
      uint64_t v85 = v474;
      _s7Weather24LocationCompositionStateOwst_0(v72, 0, 1, v74);
      goto LABEL_39;
    }
    goto LABEL_25;
  }
  if (v75)
  {
    sub_1006739F4();
LABEL_25:
    size_t v82 = *(void *)(*(void *)(sub_10017DF08(&qword_100E7CB90) - 8) + 64);
    uint64_t v83 = (void *)v72;
    uint64_t v84 = (const void *)v73;
    goto LABEL_26;
  }
  v70((char *)v72, (char *)v73, v68);
  uint64_t v86 = *(int *)(v74 + 20);
  uint64_t v87 = (char *)(v72 + v86);
  uint64_t v88 = (char *)(v73 + v86);
  int v89 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v87, 1, v68);
  int v90 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v88, 1, v68);
  if (!v89)
  {
    if (!v90)
    {
      v70(v87, v88, v68);
      goto LABEL_27;
    }
    (*(void (**)(char *, uint64_t))(v69 + 8))(v87, v68);
    size_t v82 = *(void *)(*(void *)(sub_10017DF08(&qword_100E7CAE0) - 8) + 64);
    uint64_t v83 = v87;
    uint64_t v84 = v88;
LABEL_26:
    memcpy(v83, v84, v82);
LABEL_27:
    uint64_t v85 = v474;
    uint64_t v80 = v475;
    goto LABEL_39;
  }
  uint64_t v80 = v475;
  if (v90)
  {
    uint64_t v91 = sub_10017DF08(&qword_100E7CAE0);
    memcpy(v87, v88, *(void *)(*(void *)(v91 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v87, v88, v68);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v87, 0, 1, v68);
  }
  uint64_t v85 = v474;
LABEL_39:
  uint64_t v92 = v476[11];
  uint64_t v93 = &v80[v92];
  uint64_t v94 = &v26[v92];
  LOBYTE(v92) = v26[v92 + 16];
  uint64_t v95 = *(void *)v93;
  uint64_t v96 = *((void *)v93 + 1);
  *(_OWORD *)uint64_t v93 = *(_OWORD *)v94;
  unsigned __int8 v97 = v93[16];
  v93[16] = v92;
  sub_10014D144(v95, v96, v97);
  uint64_t v98 = *((void *)v94 + 4);
  *((void *)v93 + 3) = *((void *)v94 + 3);
  *((void *)v93 + 4) = v98;
  swift_bridgeObjectRelease();
  uint64_t v469 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  uint64_t v99 = *(int *)(v469 + 24);
  uint64_t v100 = &v93[v99];
  uint64_t v101 = &v94[v99];
  uint64_t v102 = type metadata accessor for WeatherDescription();
  int v103 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v100, 1, v102);
  int v104 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v101, 1, v102);
  if (v103)
  {
    if (!v104)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(v100, v101, v102);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v100, 0, 1, v102);
      goto LABEL_45;
    }
    goto LABEL_44;
  }
  uint64_t v105 = *(void *)(v102 - 8);
  if (v104)
  {
    (*(void (**)(char *, uint64_t))(v105 + 8))(v100, v102);
LABEL_44:
    uint64_t v106 = sub_10017DF08(&qword_100E63758);
    memcpy(v100, v101, *(void *)(*(void *)(v106 - 8) + 64));
    goto LABEL_45;
  }
  (*(void (**)(char *, char *, uint64_t))(v105 + 40))(v100, v101, v102);
LABEL_45:
  uint64_t v107 = a1;
  BOOL v108 = a1 == (void)v85;
  uint64_t v109 = (int *)v469;
  if (!v108)
  {
    uint64_t v110 = *(int *)(v469 + 28);
    uint64_t v111 = &v93[v110];
    uint64_t v112 = &v94[v110];
    sub_1006739F4();
    uint64_t v113 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(v111, v112, v102);
        goto LABEL_91;
      case 2u:
        uint64_t v114 = type metadata accessor for AttributedString();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 32))(v111, v112, v114);
        goto LABEL_91;
      case 3u:
        uint64_t v115 = sub_10017DF08(&qword_100E73808);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 32))(v111, v112, v115);
        goto LABEL_91;
      case 4u:
        long long v116 = *((_OWORD *)v112 + 1);
        *(_OWORD *)uint64_t v111 = *(_OWORD *)v112;
        *((_OWORD *)v111 + 1) = v116;
        uint64_t v117 = type metadata accessor for DetailComponentContainerViewModel();
        uint64_t v118 = *(int *)(v117 + 20);
        uint64_t v119 = &v111[v118];
        uint64_t v120 = &v112[v118];
        uint64_t v121 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v447 = v117;
          *(_OWORD *)uint64_t v119 = *(_OWORD *)v120;
          v453 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v122 = v453[5];
          uint64_t v123 = &v119[v122];
          uint64_t v124 = &v120[v122];
          uint64_t v125 = type metadata accessor for URL();
          v433 = v112;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v124, 1, v125))
          {
            uint64_t v126 = sub_10017DF08(&qword_100E749B0);
            memcpy(v123, v124, *(void *)(*(void *)(v126 - 8) + 64));
            uint64_t v127 = *(void *)(v125 - 8);
          }
          else
          {
            uint64_t v127 = *(void *)(v125 - 8);
            (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v123, v124, v125);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v123, 0, 1, v125);
          }
          *(_OWORD *)&v119[v453[6]] = *(_OWORD *)&v120[v453[6]];
          uint64_t v140 = v453[7];
          uint64_t v141 = &v119[v140];
          uint64_t v142 = v119;
          long long v143 = *(void (**)(char *, char *, uint64_t))(v127 + 32);
          v143(v141, &v120[v140], v125);
          uint64_t v144 = v453[8];
          v443 = v142;
          uint64_t v145 = (char *)v142 + v144;
          uint64_t v146 = &v120[v144];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v120[v144], 1, v125))
          {
            uint64_t v147 = sub_10017DF08(&qword_100E749B0);
            memcpy(v145, v146, *(void *)(*(void *)(v147 - 8) + 64));
          }
          else
          {
            v143(v145, v146, v125);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v145, 0, 1, v125);
          }
          uint64_t v109 = (int *)v469;
          uint64_t v112 = v433;
          *((unsigned char *)v443 + v453[9]) = v120[v453[9]];
          swift_storeEnumTagMultiPayload();
          uint64_t v117 = v447;
        }
        else
        {
          memcpy(v119, v120, *(void *)(*(void *)(v121 - 8) + 64));
          uint64_t v109 = (int *)v469;
        }
        uint64_t v26 = v473;
        uint64_t v154 = *(int *)(v117 + 24);
        uint64_t v155 = &v111[v154];
        uint64_t v156 = &v112[v154];
        uint64_t v157 = type metadata accessor for DetailComponentAction();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v156, 1, v157))
        {
          uint64_t v158 = sub_10017DF08(&qword_100E73810);
          memcpy(v155, v156, *(void *)(*(void *)(v158 - 8) + 64));
        }
        else
        {
          uint64_t v159 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v159 - 8) + 32))(v155, v156, v159);
          uint64_t v160 = sub_10017DF08(&qword_100E66478);
          v155[*(int *)(v160 + 48)] = v156[*(int *)(v160 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v155, 0, 1, v157);
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v107 = a1;
        break;
      case 6u:
        uint64_t v128 = type metadata accessor for PrecipitationTotalPlatterViewModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 32))(v111, v112, v128);
        goto LABEL_91;
      case 7u:
        uint64_t v129 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_OWORD *)uint64_t v111 = *(_OWORD *)v112;
          uint64_t v130 = type metadata accessor for ConditionDetailMapViewModel();
          uint64_t v131 = *(int *)(v130 + 20);
          uint64_t v132 = &v111[v131];
          uint64_t v133 = &v112[v131];
          uint64_t v134 = type metadata accessor for Location();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 32))(v132, v133, v134);
          uint64_t v448 = (int *)v130;
          uint64_t v135 = *(int *)(v130 + 24);
          uint64_t v136 = &v111[v135];
          uint64_t v137 = &v112[v135];
          uint64_t v138 = type metadata accessor for WeatherData(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v137, 1, v138))
          {
            uint64_t v139 = sub_10017DF08(&qword_100E63850);
            memcpy(v136, v137, *(void *)(*(void *)(v139 - 8) + 64));
          }
          else
          {
            *(_OWORD *)uint64_t v136 = *(_OWORD *)v137;
            uint64_t v148 = *(int *)(v138 + 20);
            uint64_t v149 = v137;
            uint64_t v150 = &v136[v148];
            __dst = v149;
            v444 = (int *)v138;
            uint64_t v151 = &v149[v148];
            uint64_t v152 = type metadata accessor for Locale();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v151, 1, v152))
            {
              uint64_t v153 = sub_10017DF08(&qword_100E63730);
              memcpy(v150, v151, *(void *)(*(void *)(v153 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 32))(v150, v151, v152);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v150, 0, 1, v152);
            }
            uint64_t v161 = v444[6];
            v434 = &v136[v161];
            uint64_t v162 = &__dst[v161];
            uint64_t v163 = type metadata accessor for WeatherDataModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v163 - 8) + 32))(v434, v162, v163);
            uint64_t v164 = v444[7];
            uint64_t v165 = &v136[v164];
            uint64_t v166 = &__dst[v164];
            uint64_t v167 = sub_10017DF08(&qword_100E63738);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v166, 1, v167))
            {
              uint64_t v168 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v165, v166, *(void *)(*(void *)(v168 - 8) + 64));
            }
            else
            {
              v456[4](v165, v166, v461);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v165, 0, 1, v167);
            }
            uint64_t v169 = v444[8];
            uint64_t v170 = &v136[v169];
            uint64_t v171 = &__dst[v169];
            uint64_t v172 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v173 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 32))(v170, v171, v173);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v170, v171, *(void *)(*(void *)(v172 - 8) + 64));
            }
            uint64_t v174 = v444[9];
            uint64_t v175 = &v136[v174];
            uint64_t v176 = &__dst[v174];
            uint64_t v177 = type metadata accessor for WeatherDataOverrides();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v176, 1, v177))
            {
              uint64_t v178 = sub_10017DF08(&qword_100E63740);
              memcpy(v175, v176, *(void *)(*(void *)(v178 - 8) + 64));
            }
            else
            {
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v176, 1, (uint64_t)v461))
              {
                uint64_t v179 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v175, v176, *(void *)(*(void *)(v179 - 8) + 64));
              }
              else
              {
                v456[4](v175, v176, v461);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v175, 0, 1, (uint64_t)v461);
              }
              uint64_t v180 = *(int *)(v177 + 20);
              __dsta = &v175[v180];
              uint64_t v181 = &v176[v180];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v181, 1, (uint64_t)v461))
              {
                uint64_t v182 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(__dsta, v181, *(void *)(*(void *)(v182 - 8) + 64));
              }
              else
              {
                v456[4](__dsta, v181, v461);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, (uint64_t)v461);
              }
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v175, 0, 1, v177);
            }
            uint64_t v107 = a1;
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v136, 0, 1, (uint64_t)v444);
          }
          *(_OWORD *)&v111[v448[7]] = *(_OWORD *)&v112[v448[7]];
          uint64_t v183 = v448[8];
          uint64_t v184 = &v111[v183];
          uint64_t v185 = &v112[v183];
          uint64_t v186 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v186 - 8) + 32))(v184, v185, v186);
          v111[v448[9]] = v112[v448[9]];
          swift_storeEnumTagMultiPayload();
          uint64_t v26 = v473;
        }
        else
        {
          memcpy(v111, v112, *(void *)(*(void *)(v129 - 8) + 64));
        }
LABEL_91:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v111, v112, *(void *)(*(void *)(v113 - 8) + 64));
        break;
    }
  }
  uint64_t v187 = v109[8];
  uint64_t v188 = &v93[v187];
  uint64_t v189 = &v94[v187];
  uint64_t v190 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  int v191 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v188, 1, v190);
  int v192 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v189, 1, v190);
  if (v191)
  {
    if (!v192)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(v188, v189, v102);
          goto LABEL_176;
        case 2u:
          uint64_t v194 = type metadata accessor for AttributedString();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v194 - 8) + 32))(v188, v189, v194);
          goto LABEL_176;
        case 3u:
          uint64_t v195 = sub_10017DF08(&qword_100E73808);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 32))(v188, v189, v195);
          goto LABEL_176;
        case 4u:
          uint64_t v454 = v190;
          long long v196 = *((_OWORD *)v189 + 1);
          *(_OWORD *)uint64_t v188 = *(_OWORD *)v189;
          *((_OWORD *)v188 + 1) = v196;
          uint64_t v197 = type metadata accessor for DetailComponentContainerViewModel();
          uint64_t v198 = *(int *)(v197 + 20);
          uint64_t v199 = &v188[v198];
          uint64_t v200 = &v189[v198];
          uint64_t v201 = type metadata accessor for NewsArticleComponentViewModel(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v449 = v197;
            *(_OWORD *)uint64_t v199 = *(_OWORD *)v200;
            v462 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
            uint64_t v202 = v462[5];
            uint64_t v203 = &v199[v202];
            uint64_t v204 = &v200[v202];
            uint64_t v205 = type metadata accessor for URL();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v204, 1, v205))
            {
              uint64_t v206 = sub_10017DF08(&qword_100E749B0);
              memcpy(v203, v204, *(void *)(*(void *)(v206 - 8) + 64));
              uint64_t v207 = *(void (***)(void *, const void *, uint64_t))(v205 - 8);
            }
            else
            {
              v457 = *(void (***)(void *, const void *, uint64_t))(v205 - 8);
              v457[4](v203, v204, v205);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v203, 0, 1, v205);
              uint64_t v207 = v457;
            }
            *(_OWORD *)&v199[v462[6]] = *(_OWORD *)&v200[v462[6]];
            uint64_t v246 = v207[4];
            v246(&v199[v462[7]], &v200[v462[7]], v205);
            uint64_t v247 = v462[8];
            uint64_t v458 = &v199[v247];
            uint64_t v248 = &v200[v247];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v200[v247], 1, v205))
            {
              uint64_t v249 = sub_10017DF08(&qword_100E749B0);
              memcpy(v458, v248, *(void *)(*(void *)(v249 - 8) + 64));
            }
            else
            {
              v246(v458, v248, v205);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v458, 0, 1, v205);
            }
            uint64_t v26 = v473;
            uint64_t v109 = (int *)v469;
            uint64_t v197 = v449;
            v199[v462[9]] = v200[v462[9]];
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v199, v200, *(void *)(*(void *)(v201 - 8) + 64));
          }
          uint64_t v255 = *(int *)(v197 + 24);
          uint64_t v256 = &v188[v255];
          v257 = &v189[v255];
          uint64_t v258 = type metadata accessor for DetailComponentAction();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v257, 1, v258))
          {
            uint64_t v259 = sub_10017DF08(&qword_100E73810);
            memcpy(v256, v257, *(void *)(*(void *)(v259 - 8) + 64));
          }
          else
          {
            uint64_t v260 = type metadata accessor for URL();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v260 - 8) + 32))(v256, v257, v260);
            uint64_t v261 = sub_10017DF08(&qword_100E66478);
            v256[*(int *)(v261 + 48)] = v257[*(int *)(v261 + 48)];
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v256, 0, 1, v258);
          }
          uint64_t v190 = v454;
          swift_storeEnumTagMultiPayload();
          uint64_t v107 = a1;
          break;
        case 6u:
          uint64_t v208 = type metadata accessor for PrecipitationTotalPlatterViewModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v208 - 8) + 32))(v188, v189, v208);
          goto LABEL_176;
        case 7u:
          uint64_t v209 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v455 = v190;
            *(_OWORD *)uint64_t v188 = *(_OWORD *)v189;
            uint64_t v210 = type metadata accessor for ConditionDetailMapViewModel();
            uint64_t v211 = *(int *)(v210 + 20);
            uint64_t v212 = &v188[v211];
            uint64_t v213 = &v189[v211];
            uint64_t v214 = type metadata accessor for Location();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 32))(v212, v213, v214);
            uint64_t v450 = (int *)v210;
            uint64_t v215 = *(int *)(v210 + 24);
            long long v216 = &v188[v215];
            uint64_t v217 = &v189[v215];
            uint64_t v218 = type metadata accessor for WeatherData(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v217, 1, v218))
            {
              uint64_t v219 = sub_10017DF08(&qword_100E63850);
              memcpy(v216, v217, *(void *)(*(void *)(v219 - 8) + 64));
            }
            else
            {
              *(_OWORD *)long long v216 = *(_OWORD *)v217;
              __dstb = v216;
              uint64_t v445 = (int *)v218;
              uint64_t v250 = *(int *)(v218 + 20);
              uint64_t v251 = &v216[v250];
              uint64_t v252 = &v217[v250];
              uint64_t v253 = type metadata accessor for Locale();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v252, 1, v253))
              {
                uint64_t v254 = sub_10017DF08(&qword_100E63730);
                memcpy(v251, v252, *(void *)(*(void *)(v254 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v253 - 8) + 32))(v251, v252, v253);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v251, 0, 1, v253);
              }
              uint64_t v271 = v445[6];
              uint64_t v435 = &__dstb[v271];
              uint64_t v272 = &v217[v271];
              uint64_t v273 = type metadata accessor for WeatherDataModel();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v273 - 8) + 32))(v435, v272, v273);
              uint64_t v274 = v445[7];
              uint64_t v275 = &__dstb[v274];
              uint64_t v276 = &v217[v274];
              uint64_t v277 = sub_10017DF08(&qword_100E63738);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v276, 1, v277))
              {
                uint64_t v278 = type metadata accessor for WeatherData.CachingState(0);
                memcpy(v275, v276, *(void *)(*(void *)(v278 - 8) + 64));
              }
              else
              {
                v456[4](v275, v276, v461);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v275, 0, 1, v277);
              }
              uint64_t v286 = v445[8];
              uint64_t v287 = &__dstb[v286];
              uint64_t v288 = &v217[v286];
              uint64_t v289 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                uint64_t v290 = type metadata accessor for WeatherStatisticsModel();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v290 - 8) + 32))(v287, v288, v290);
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(v287, v288, *(void *)(*(void *)(v289 - 8) + 64));
              }
              uint64_t v291 = (uint64_t)__dstb;
              uint64_t v292 = v445[9];
              uint64_t v293 = &__dstb[v292];
              uint64_t v294 = &v217[v292];
              uint64_t v295 = type metadata accessor for WeatherDataOverrides();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v294, 1, v295))
              {
                uint64_t v296 = sub_10017DF08(&qword_100E63740);
                memcpy(v293, v294, *(void *)(*(void *)(v296 - 8) + 64));
              }
              else
              {
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v294, 1, (uint64_t)v461))
                {
                  uint64_t v297 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v293, v294, *(void *)(*(void *)(v297 - 8) + 64));
                }
                else
                {
                  v456[4](v293, v294, v461);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v293, 0, 1, (uint64_t)v461);
                }
                uint64_t v306 = *(int *)(v295 + 20);
                v437 = &v293[v306];
                uint64_t v307 = &v294[v306];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v307, 1, (uint64_t)v461))
                {
                  uint64_t v308 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v437, v307, *(void *)(*(void *)(v308 - 8) + 64));
                }
                else
                {
                  v456[4](v437, v307, v461);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v437, 0, 1, (uint64_t)v461);
                }
                uint64_t v291 = (uint64_t)__dstb;
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v293, 0, 1, v295);
              }
              uint64_t v107 = a1;
              _s7Weather24LocationCompositionStateOwst_0(v291, 0, 1, (uint64_t)v445);
            }
            *(_OWORD *)&v188[v450[7]] = *(_OWORD *)&v189[v450[7]];
            uint64_t v320 = v450[8];
            uint64_t v321 = &v188[v320];
            v322 = &v189[v320];
            uint64_t v323 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v323 - 8) + 32))(v321, v322, v323);
            v188[v450[9]] = v189[v450[9]];
            swift_storeEnumTagMultiPayload();
            uint64_t v190 = v455;
          }
          else
          {
            memcpy(v188, v189, *(void *)(*(void *)(v209 - 8) + 64));
          }
LABEL_176:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v188, v189, *(void *)(*(void *)(v190 - 8) + 64));
          break;
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v188, 0, 1, v190);
      goto LABEL_188;
    }
    goto LABEL_98;
  }
  if (v192)
  {
    sub_1006739F4();
LABEL_98:
    size_t v193 = *(void *)(*(void *)(sub_10017DF08(&qword_100E73818) - 8) + 64);
LABEL_99:
    memcpy(v188, v189, v193);
    goto LABEL_188;
  }
  if ((void *)v107 != v474)
  {
    sub_1006739F4();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(v188, v189, v102);
        goto LABEL_187;
      case 2u:
        uint64_t v220 = type metadata accessor for AttributedString();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v220 - 8) + 32))(v188, v189, v220);
        goto LABEL_187;
      case 3u:
        uint64_t v221 = sub_10017DF08(&qword_100E73808);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v221 - 8) + 32))(v188, v189, v221);
        goto LABEL_187;
      case 4u:
        long long v222 = *((_OWORD *)v189 + 1);
        *(_OWORD *)uint64_t v188 = *(_OWORD *)v189;
        *((_OWORD *)v188 + 1) = v222;
        uint64_t v223 = type metadata accessor for DetailComponentContainerViewModel();
        uint64_t v224 = *(int *)(v223 + 20);
        uint64_t v225 = &v188[v224];
        uint64_t v226 = &v189[v224];
        uint64_t v227 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v451 = v223;
          *(_OWORD *)uint64_t v225 = *(_OWORD *)v226;
          v463 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v228 = v463[5];
          uint64_t v229 = &v225[v228];
          uint64_t v230 = &v226[v228];
          uint64_t v231 = type metadata accessor for URL();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v230, 1, v231))
          {
            uint64_t v232 = sub_10017DF08(&qword_100E749B0);
            memcpy(v229, v230, *(void *)(*(void *)(v232 - 8) + 64));
            uint64_t v233 = *(void (***)(void *, const void *, uint64_t))(v231 - 8);
          }
          else
          {
            v459 = *(void (***)(void *, const void *, uint64_t))(v231 - 8);
            v459[4](v229, v230, v231);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v229, 0, 1, v231);
            uint64_t v233 = v459;
          }
          *(_OWORD *)&v225[v463[6]] = *(_OWORD *)&v226[v463[6]];
          uint64_t v262 = v233[4];
          v262(&v225[v463[7]], &v226[v463[7]], v231);
          uint64_t v263 = v463[8];
          v460 = &v225[v263];
          uint64_t v264 = &v226[v263];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v226[v263], 1, v231))
          {
            uint64_t v265 = sub_10017DF08(&qword_100E749B0);
            memcpy(v460, v264, *(void *)(*(void *)(v265 - 8) + 64));
          }
          else
          {
            v262(v460, v264, v231);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v460, 0, 1, v231);
          }
          uint64_t v26 = v473;
          uint64_t v109 = (int *)v469;
          uint64_t v223 = v451;
          v225[v463[9]] = v226[v463[9]];
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v225, v226, *(void *)(*(void *)(v227 - 8) + 64));
        }
        uint64_t v279 = *(int *)(v223 + 24);
        uint64_t v280 = &v188[v279];
        uint64_t v281 = &v189[v279];
        uint64_t v282 = type metadata accessor for DetailComponentAction();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v281, 1, v282))
        {
          uint64_t v283 = sub_10017DF08(&qword_100E73810);
          memcpy(v280, v281, *(void *)(*(void *)(v283 - 8) + 64));
        }
        else
        {
          uint64_t v284 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v284 - 8) + 32))(v280, v281, v284);
          uint64_t v285 = sub_10017DF08(&qword_100E66478);
          v280[*(int *)(v285 + 48)] = v281[*(int *)(v285 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v280, 0, 1, v282);
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v107 = a1;
        break;
      case 6u:
        uint64_t v234 = type metadata accessor for PrecipitationTotalPlatterViewModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v234 - 8) + 32))(v188, v189, v234);
        goto LABEL_187;
      case 7u:
        uint64_t v235 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_OWORD *)uint64_t v188 = *(_OWORD *)v189;
          uint64_t v236 = type metadata accessor for ConditionDetailMapViewModel();
          uint64_t v237 = *(int *)(v236 + 20);
          uint64_t v238 = &v188[v237];
          uint64_t v239 = &v189[v237];
          uint64_t v240 = type metadata accessor for Location();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v240 - 8) + 32))(v238, v239, v240);
          v452 = (int *)v236;
          uint64_t v241 = *(int *)(v236 + 24);
          uint64_t v242 = &v188[v241];
          uint64_t v243 = &v189[v241];
          uint64_t v244 = type metadata accessor for WeatherData(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v243, 1, v244))
          {
            uint64_t v245 = sub_10017DF08(&qword_100E63850);
            memcpy(v242, v243, *(void *)(*(void *)(v245 - 8) + 64));
          }
          else
          {
            *(_OWORD *)uint64_t v242 = *(_OWORD *)v243;
            __dstc = v242;
            int v446 = (int *)v244;
            uint64_t v266 = *(int *)(v244 + 20);
            uint64_t v267 = &v242[v266];
            uint64_t v268 = &v243[v266];
            uint64_t v269 = type metadata accessor for Locale();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v268, 1, v269))
            {
              uint64_t v270 = sub_10017DF08(&qword_100E63730);
              memcpy(v267, v268, *(void *)(*(void *)(v270 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v269 - 8) + 32))(v267, v268, v269);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v267, 0, 1, v269);
            }
            uint64_t v298 = v446[6];
            v436 = &__dstc[v298];
            v299 = &v243[v298];
            uint64_t v300 = type metadata accessor for WeatherDataModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v300 - 8) + 32))(v436, v299, v300);
            uint64_t v301 = v446[7];
            uint64_t v302 = &__dstc[v301];
            uint64_t v303 = &v243[v301];
            uint64_t v304 = sub_10017DF08(&qword_100E63738);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v303, 1, v304))
            {
              uint64_t v305 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v302, v303, *(void *)(*(void *)(v305 - 8) + 64));
            }
            else
            {
              v456[4](v302, v303, v461);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v302, 0, 1, v304);
            }
            uint64_t v309 = v446[8];
            uint64_t v310 = &__dstc[v309];
            uint64_t v311 = &v243[v309];
            uint64_t v312 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v313 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v313 - 8) + 32))(v310, v311, v313);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v310, v311, *(void *)(*(void *)(v312 - 8) + 64));
            }
            uint64_t v314 = (uint64_t)__dstc;
            uint64_t v315 = v446[9];
            uint64_t v316 = &__dstc[v315];
            uint64_t v317 = &v243[v315];
            uint64_t v318 = type metadata accessor for WeatherDataOverrides();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v317, 1, v318))
            {
              uint64_t v319 = sub_10017DF08(&qword_100E63740);
              memcpy(v316, v317, *(void *)(*(void *)(v319 - 8) + 64));
            }
            else
            {
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v317, 1, (uint64_t)v461))
              {
                uint64_t v324 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v316, v317, *(void *)(*(void *)(v324 - 8) + 64));
              }
              else
              {
                v456[4](v316, v317, v461);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v316, 0, 1, (uint64_t)v461);
              }
              uint64_t v325 = *(int *)(v318 + 20);
              uint64_t v438 = &v316[v325];
              uint64_t v326 = &v317[v325];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v326, 1, (uint64_t)v461))
              {
                uint64_t v327 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v438, v326, *(void *)(*(void *)(v327 - 8) + 64));
              }
              else
              {
                v456[4](v438, v326, v461);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v438, 0, 1, (uint64_t)v461);
              }
              uint64_t v314 = (uint64_t)__dstc;
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v316, 0, 1, v318);
            }
            uint64_t v107 = a1;
            _s7Weather24LocationCompositionStateOwst_0(v314, 0, 1, (uint64_t)v446);
          }
          *(_OWORD *)&v188[v452[7]] = *(_OWORD *)&v189[v452[7]];
          uint64_t v328 = v452[8];
          uint64_t v329 = &v188[v328];
          uint64_t v330 = &v189[v328];
          uint64_t v331 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v331 - 8) + 32))(v329, v330, v331);
          v188[v452[9]] = v189[v452[9]];
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v188, v189, *(void *)(*(void *)(v235 - 8) + 64));
        }
LABEL_187:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        size_t v193 = *(void *)(*(void *)(v190 - 8) + 64);
        goto LABEL_99;
    }
  }
LABEL_188:
  v93[v109[9]] = v94[v109[9]];
  v93[v109[10]] = v94[v109[10]];
  uint64_t v332 = v475;
  *(void *)&v475[v476[12]] = *(void *)&v26[v476[12]];
  swift_bridgeObjectRelease();
  uint64_t v333 = v476[13];
  uint64_t v334 = &v475[v333];
  v335 = &v26[v333];
  uint64_t v336 = type metadata accessor for DetailComponentContainerViewModel();
  int v337 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v334, 1, v336);
  int v338 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v335, 1, v336);
  if (!v337)
  {
    if (v338)
    {
      sub_1006739F4();
      goto LABEL_195;
    }
    if (*((void *)v334 + 1))
    {
      uint64_t v353 = *((void *)v335 + 1);
      if (v353)
      {
        *(void *)uint64_t v334 = *(void *)v335;
        *((void *)v334 + 1) = v353;
        swift_bridgeObjectRelease();
        uint64_t v354 = *((void *)v335 + 3);
        *((void *)v334 + 2) = *((void *)v335 + 2);
        *((void *)v334 + 3) = v354;
        swift_bridgeObjectRelease();
        goto LABEL_213;
      }
      sub_1004B70A8((uint64_t)v334);
    }
    long long v402 = *((_OWORD *)v335 + 1);
    *(_OWORD *)uint64_t v334 = *(_OWORD *)v335;
    *((_OWORD *)v334 + 1) = v402;
LABEL_213:
    if ((void *)v107 != v474)
    {
      uint64_t v403 = *(int *)(v336 + 20);
      v404 = &v334[v403];
      v405 = &v335[v403];
      sub_1006739F4();
      uint64_t v406 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(_OWORD *)v404 = *(_OWORD *)v405;
        v471 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v407 = v471[5];
        uint64_t v408 = &v404[v407];
        v409 = &v405[v407];
        uint64_t v410 = type metadata accessor for URL();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v409, 1, v410))
        {
          uint64_t v411 = sub_10017DF08(&qword_100E749B0);
          memcpy(v408, v409, *(void *)(*(void *)(v411 - 8) + 64));
          uint64_t v412 = *(void *)(v410 - 8);
        }
        else
        {
          uint64_t v413 = v408;
          v465 = v408;
          uint64_t v412 = *(void *)(v410 - 8);
          (*(void (**)(char *, char *, uint64_t))(v412 + 32))(v413, v409, v410);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v465, 0, 1, v410);
        }
        *(_OWORD *)&v404[v471[6]] = *(_OWORD *)&v405[v471[6]];
        uint64_t v414 = v471[7];
        v415 = &v405[v414];
        v416 = v405;
        uint64_t v417 = *(void (**)(char *, char *, uint64_t))(v412 + 32);
        v417(&v404[v414], v415, v410);
        uint64_t v418 = v471[8];
        uint64_t v419 = &v404[v418];
        v466 = v416;
        uint64_t v420 = (char *)v416 + v418;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v420, 1, v410))
        {
          uint64_t v421 = sub_10017DF08(&qword_100E749B0);
          memcpy(v419, v420, *(void *)(*(void *)(v421 - 8) + 64));
        }
        else
        {
          v417(v419, v420, v410);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v419, 0, 1, v410);
        }
        v404[v471[9]] = v466[v471[9]];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v404, v405, *(void *)(*(void *)(v406 - 8) + 64));
      }
      uint64_t v332 = v475;
    }
    uint64_t v422 = *(int *)(v336 + 24);
    uint64_t v423 = &v334[v422];
    v424 = &v335[v422];
    uint64_t v425 = type metadata accessor for DetailComponentAction();
    int v426 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v423, 1, v425);
    int v427 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v424, 1, v425);
    if (v426)
    {
      uint64_t v351 = v474;
      uint64_t v352 = v467;
      uint64_t v366 = v473;
      if (!v427)
      {
        uint64_t v428 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v428 - 8) + 32))(v423, v424, v428);
        uint64_t v429 = sub_10017DF08(&qword_100E66478);
        v423[*(int *)(v429 + 48)] = v424[*(int *)(v429 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v423, 0, 1, v425);
LABEL_230:
        uint64_t v107 = a1;
        goto LABEL_210;
      }
    }
    else
    {
      uint64_t v351 = v474;
      uint64_t v352 = v467;
      uint64_t v366 = v473;
      if (!v427)
      {
        uint64_t v431 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v431 - 8) + 40))(v423, v424, v431);
        uint64_t v432 = sub_10017DF08(&qword_100E66478);
        v423[*(int *)(v432 + 48)] = v424[*(int *)(v432 + 48)];
        goto LABEL_230;
      }
      sub_1006739F4();
    }
    uint64_t v430 = sub_10017DF08(&qword_100E73810);
    memcpy(v423, v424, *(void *)(*(void *)(v430 - 8) + 64));
    goto LABEL_230;
  }
  if (!v338)
  {
    long long v339 = *((_OWORD *)v335 + 1);
    *(_OWORD *)uint64_t v334 = *(_OWORD *)v335;
    *((_OWORD *)v334 + 1) = v339;
    uint64_t v340 = *(int *)(v336 + 20);
    uint64_t v341 = &v334[v340];
    uint64_t v342 = &v335[v340];
    uint64_t v343 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v341 = *(_OWORD *)v342;
      uint64_t v470 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v344 = v470[5];
      uint64_t v345 = &v341[v344];
      uint64_t v346 = &v342[v344];
      uint64_t v347 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v346, 1, v347))
      {
        uint64_t v348 = sub_10017DF08(&qword_100E749B0);
        memcpy(v345, v346, *(void *)(*(void *)(v348 - 8) + 64));
        uint64_t v349 = *(void *)(v347 - 8);
      }
      else
      {
        uint64_t v349 = *(void *)(v347 - 8);
        (*(void (**)(char *, char *, uint64_t))(v349 + 32))(v345, v346, v347);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v345, 0, 1, v347);
      }
      *(_OWORD *)&v341[v470[6]] = *(_OWORD *)&v342[v470[6]];
      uint64_t v355 = *(void (**)(char *, char *, uint64_t))(v349 + 32);
      v355(&v341[v470[7]], &v342[v470[7]], v347);
      uint64_t v356 = v470[8];
      uint64_t v464 = &v341[v356];
      uint64_t v357 = &v342[v356];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v342[v356], 1, v347))
      {
        uint64_t v358 = sub_10017DF08(&qword_100E749B0);
        memcpy(v464, v357, *(void *)(*(void *)(v358 - 8) + 64));
      }
      else
      {
        v355(v464, v357, v347);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v464, 0, 1, v347);
      }
      v341[v470[9]] = v342[v470[9]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v341, v342, *(void *)(*(void *)(v343 - 8) + 64));
    }
    uint64_t v359 = *(int *)(v336 + 24);
    uint64_t v360 = &v334[v359];
    v361 = &v335[v359];
    uint64_t v362 = type metadata accessor for DetailComponentAction();
    uint64_t v332 = v475;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v361, 1, v362))
    {
      uint64_t v363 = sub_10017DF08(&qword_100E73810);
      memcpy(v360, v361, *(void *)(*(void *)(v363 - 8) + 64));
    }
    else
    {
      uint64_t v364 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v364 - 8) + 32))(v360, v361, v364);
      uint64_t v365 = sub_10017DF08(&qword_100E66478);
      v360[*(int *)(v365 + 48)] = v361[*(int *)(v365 + 48)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v360, 0, 1, v362);
    }
    uint64_t v352 = v467;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v334, 0, 1, v336);
    uint64_t v107 = a1;
    uint64_t v351 = v474;
    goto LABEL_209;
  }
LABEL_195:
  uint64_t v350 = sub_10017DF08(&qword_100E66E28);
  memcpy(v334, v335, *(void *)(*(void *)(v350 - 8) + 64));
  uint64_t v351 = v474;
  uint64_t v352 = v467;
LABEL_209:
  uint64_t v366 = v473;
LABEL_210:
  uint64_t v367 = v476[14];
  uint64_t v368 = &v332[v367];
  uint64_t v369 = &v366[v367];
  uint64_t v370 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v370 - 8) + 40))(v368, v369, v370);
  v332[v476[15]] = v366[v476[15]];
  uint64_t v371 = v352[8];
  uint64_t v372 = v107 + v371;
  uint64_t v373 = (uint64_t)v351 + v371;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v107 + v371);
  long long v374 = *(_OWORD *)(v373 + 16);
  *(_OWORD *)uint64_t v372 = *(_OWORD *)v373;
  *(_OWORD *)(v372 + 16) = v374;
  *(void *)(v372 + 32) = *(void *)(v373 + 32);
  uint64_t v375 = v352[9];
  uint64_t v376 = (void *)(v107 + v375);
  uint64_t v377 = (void *)((char *)v351 + v375);
  *uint64_t v376 = *v377;
  v376[1] = v377[1];
  swift_release();
  uint64_t v378 = v352[10];
  uint64_t v379 = (void *)(v107 + v378);
  uint64_t v380 = (void *)((char *)v351 + v378);
  *uint64_t v379 = *v380;
  v379[1] = v380[1];
  swift_release();
  uint64_t v381 = v352[11];
  uint64_t v382 = (void *)(v107 + v381);
  uint64_t v383 = (void *)((char *)v351 + v381);
  *uint64_t v382 = *v383;
  v382[1] = v383[1];
  swift_release();
  uint64_t v384 = v352[12];
  uint64_t v385 = (void *)(v107 + v384);
  uint64_t v386 = (void *)((char *)v351 + v384);
  *uint64_t v385 = *v386;
  v385[1] = v386[1];
  swift_release();
  uint64_t v387 = v352[13];
  int v388 = (void *)(v107 + v387);
  uint64_t v389 = (void *)((char *)v351 + v387);
  *int v388 = *v389;
  v388[1] = v389[1];
  swift_release();
  uint64_t v390 = v352[14];
  v391 = (void *)(v107 + v390);
  uint64_t v392 = (void *)((char *)v351 + v390);
  void *v391 = *v392;
  v391[1] = v392[1];
  swift_release();
  uint64_t v393 = v352[15];
  uint64_t v394 = (void *)(v107 + v393);
  v395 = (void *)((char *)v351 + v393);
  void *v394 = *v395;
  v394[1] = v395[1];
  swift_release();
  uint64_t v396 = v352[16];
  uint64_t v397 = (void *)(v107 + v396);
  uint64_t v398 = (void *)((char *)v351 + v396);
  uint64_t v400 = *v398;
  uint64_t v399 = v398[1];
  void *v397 = v400;
  v397[1] = v399;
  swift_bridgeObjectRelease();
  return v107;
}

uint64_t sub_100681714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100681728);
}

uint64_t sub_100681728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10017DF08(&qword_100E669A8);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    type metadata accessor for MoonDetailViewModel.Model(0);
    sub_100162F30();
    if (*(_DWORD *)(v11 + 84) != a2) {
      return sub_1001A4754(*(int *)(a3 + 32));
    }
    uint64_t v8 = v10;
    uint64_t v9 = a1 + *(int *)(a3 + 28);
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_1006817D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006817E4);
}

void sub_1006817E4()
{
  sub_100150288();
  sub_10017DF08(&qword_100E669A8);
  sub_100162F30();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v1;
  }
  else
  {
    type metadata accessor for MoonDetailViewModel.Model(0);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) != v3)
    {
      *(void *)(v1 + *(int *)(v2 + 32) + 24) = (v0 - 1);
      return;
    }
    uint64_t v6 = v8;
    uint64_t v7 = v1 + *(int *)(v2 + 28);
  }

  _s7Weather24LocationCompositionStateOwst_0(v7, v0, v0, v6);
}

void sub_100681890()
{
  sub_1002307EC();
  if (v0 <= 0x3F)
  {
    type metadata accessor for MoonDetailViewModel.Model(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_100681990()
{
  unint64_t result = qword_100E87DC8;
  if (!qword_100E87DC8)
  {
    sub_10018C6DC(&qword_100E87DD0);
    sub_1001246C8(&qword_100E87CF8, &qword_100E87CE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E87DC8);
  }
  return result;
}

uint64_t sub_100681A30()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100681A50(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_100681AA4@<X0>(uint64_t *a1@<X8>, double a2@<D0>)
{
  uint64_t v5 = type metadata accessor for MoonDetailRootContentView(0);
  sub_1001627C0(v5);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_10066915C(v7, a1, a2);
}

uint64_t sub_100681B04@<X0>(uint64_t a1@<X8>)
{
  return sub_1006699A0(*(void *)(v1 + 16), a1, *(double *)(v1 + 24));
}

unint64_t sub_100681B10()
{
  unint64_t result = qword_100E87E18;
  if (!qword_100E87E18)
  {
    sub_10018C6DC(&qword_100E87E10);
    sub_1001246C8(&qword_100E87E20, &qword_100E87E28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E87E18);
  }
  return result;
}

uint64_t sub_100681BF4()
{
  uint64_t v0 = type metadata accessor for MoonDetailRootContentView(0);
  sub_1001627C0(v0);

  return sub_10066F77C();
}

unint64_t sub_100681C34()
{
  unint64_t result = qword_100E87E70;
  if (!qword_100E87E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E87E70);
  }
  return result;
}

uint64_t sub_100681C84(uint64_t a1)
{
  return sub_100682264(a1, (uint64_t (*)(uint64_t))sub_100671F24);
}

uint64_t sub_100681CA0(uint64_t a1)
{
  return sub_100681F20(a1, (uint64_t (*)(uint64_t))sub_10066F18C);
}

uint64_t sub_100681CB8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100681D0C(uint64_t a1, uint64_t a2)
{
  return sub_100682410(a1, a2, (void (*)(double, double, double, double))sub_10066B170);
}

uint64_t sub_100681D28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for MoonDetailRootContentView(0);
  sub_1001627C0(v4);
  return sub_10066CDC8(a1, a2);
}

uint64_t sub_100681D7C()
{
  type metadata accessor for OverviewTableViewModel();
  sub_100162E4C();
  sub_100162F0C();
  v0();

  return swift_deallocObject();
}

uint64_t sub_100681E08()
{
  return sub_1006820D8((uint64_t (*)(void))&type metadata accessor for OverviewTableViewModel, (uint64_t (*)(unint64_t, uint64_t, __n128))sub_100666540);
}

uint64_t sub_100681E38(uint64_t a1, uint64_t a2)
{
  return sub_100681E64(a1, a2, type metadata accessor for MoonDetailRootContentView, sub_10066D4D4);
}

uint64_t sub_100681E64(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(a3(0) - 8);
  uint64_t v8 = v4 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return a4(a1, a2, v8);
}

uint64_t sub_100681F08(uint64_t a1)
{
  return sub_100681F20(a1, (uint64_t (*)(uint64_t))sub_10066D8E0);
}

uint64_t sub_100681F20(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = type metadata accessor for MoonDetailRootContentView(0);
  sub_1001627C0(v3);
  sub_10017B22C();

  return a2(a1);
}

uint64_t sub_100681F8C()
{
  uint64_t v1 = (int *)(type metadata accessor for MoonCompactOverviewTableViewModel(0) - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  uint64_t v3 = type metadata accessor for OverviewTableViewModel();
  sub_100162E4C();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(v2, v3);
  uint64_t v6 = v2 + v1[7];
  if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v3)) {
    v5(v6, v3);
  }

  return swift_deallocObject();
}

uint64_t sub_1006820AC()
{
  return sub_1006820D8(type metadata accessor for MoonCompactOverviewTableViewModel, (uint64_t (*)(unint64_t, uint64_t, __n128))sub_100666470);
}

uint64_t sub_1006820D8(uint64_t (*a1)(void), uint64_t (*a2)(unint64_t, uint64_t, __n128))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  uint64_t v6 = *(unsigned __int8 *)(v2 + v5);
  v7.n128_u64[0] = *(void *)((v5 & 0xFFFFFFFFFFFFFFF8) + v2 + 8);

  return a2(v2 + v4, v6, v7);
}

uint64_t sub_100682188(uint64_t a1, uint64_t a2)
{
  return sub_100681E64(a1, a2, type metadata accessor for MoonDetailRootContentView, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10066E120);
}

uint64_t sub_1006821B4()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1006821EC()
{
  return sub_100667E70();
}

uint64_t sub_100682208()
{
  return sub_1004D85AC();
}

uint64_t sub_100682230()
{
  return 16;
}

__n128 sub_10068223C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10068224C(uint64_t a1)
{
  return sub_100682264(a1, (uint64_t (*)(uint64_t))sub_10066FD00);
}

uint64_t sub_100682264(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = sub_100127C8C();
  uint64_t v4 = type metadata accessor for MoonDetailRootContentView(v3);
  sub_1001627C0(v4);
  sub_10017B22C();

  return a2(v2);
}

uint64_t sub_1006822BC()
{
  return sub_100667F38();
}

uint64_t sub_1006822DC(uint64_t a1)
{
  return sub_100682264(a1, (uint64_t (*)(uint64_t))sub_10066FF40);
}

uint64_t sub_1006822F4(uint64_t a1)
{
  return a1;
}

uint64_t sub_100682340(uint64_t a1)
{
  return a1;
}

uint64_t sub_100682390(uint64_t a1, uint64_t a2)
{
  return sub_100681E64(a1, a2, type metadata accessor for MoonDetailRootContentView, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10066BBA0);
}

uint64_t sub_1006823C0(uint64_t a1)
{
  return sub_100682264(a1, (uint64_t (*)(uint64_t))sub_10067222C);
}

uint64_t sub_1006823DC(uint64_t a1)
{
  return sub_100682264(a1, (uint64_t (*)(uint64_t))sub_100671CE4);
}

uint64_t sub_1006823F8(uint64_t a1, uint64_t a2)
{
  return sub_100682410(a1, a2, (void (*)(double, double, double, double))sub_10067105C);
}

uint64_t sub_100682410(uint64_t a1, uint64_t a2, void (*a3)(double, double, double, double))
{
  uint64_t v7 = type metadata accessor for MoonDetailRootContentView(0);
  sub_1001627C0(v7);
  return sub_100670EA4(a1, a2, v3 + ((*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), a3);
}

uint64_t type metadata accessor for MoonContainerView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E88140);
}

ValueMetadata *type metadata accessor for MoonScrubberContainerView()
{
  return &type metadata for MoonScrubberContainerView;
}

uint64_t *sub_1006824B4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for LayoutDirection();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(void *)v11;
    char v13 = v11[8];
    sub_100195B7C(*(void *)v11, v13);
    *(void *)uint64_t v10 = v12;
    v10[8] = v13;
    uint64_t v14 = a3[6];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = *(void *)v16;
    char v18 = v16[8];
    sub_100195B7C(*(void *)v16, v18);
    *(void *)uint64_t v15 = v17;
    v15[8] = v18;
    uint64_t v19 = a3[7];
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v19;
    uint64_t v22 = (char *)a2 + v19;
    *uint64_t v21 = *v22;
    *((void *)v21 + 1) = *((void *)v22 + 1);
    char v23 = (char *)a1 + v20;
    uint64_t v24 = (char *)a2 + v20;
    uint64_t v25 = type metadata accessor for Date();
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
    swift_retain();
    v26(v23, v24, v25);
    uint64_t v27 = (int *)type metadata accessor for MoonViewModel(0);
    *(void *)&v23[v27[5]] = *(void *)&v24[v27[5]];
    uint64_t v28 = v27[6];
    uint64_t v29 = &v23[v28];
    uint64_t v30 = &v24[v28];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v24[v28], 1, v25))
    {
      uint64_t v31 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      v26(v29, v30, v25);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v25);
    }
    uint64_t v32 = v27[7];
    uint64_t v33 = &v23[v32];
    uint64_t v34 = &v24[v32];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v24[v32], 1, v25))
    {
      uint64_t v35 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      v26(v33, v34, v25);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v25);
    }
    v23[v27[8]] = v24[v27[8]];
    uint64_t v36 = a3[9];
    long long v37 = *(_OWORD *)((char *)a2 + v36 + 24);
    *(_OWORD *)((char *)a1 + v36 + 24) = v37;
    (**(void (***)(void))(v37 - 8))();
    uint64_t v38 = a3[11];
    *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *(uint64_t *)((char *)a1 + v38) = *(uint64_t *)((char *)a2 + v38);
    uint64_t v39 = a3[12];
    uint64_t v40 = (char *)a1 + v39;
    uint64_t v41 = (char *)a2 + v39;
    uint64_t v42 = type metadata accessor for CoordinateSpace();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
    uint64_t v43 = a3[14];
    *(uint64_t *)((char *)a1 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    *(uint64_t *)((char *)a1 + v43) = *(uint64_t *)((char *)a2 + v43);
    uint64_t v44 = a3[16];
    *(uint64_t *)((char *)a1 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
    *(uint64_t *)((char *)a1 + v44) = *(uint64_t *)((char *)a2 + v44);
  }
  return a1;
}

uint64_t sub_100682898(uint64_t a1, int *a2)
{
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for LayoutDirection();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(a1 + a2[5]), *(unsigned char *)(a1 + a2[5] + 8));
  sub_10018F6D8(*(void *)(a1 + a2[6]), *(unsigned char *)(a1 + a2[6] + 8));
  swift_release();
  uint64_t v5 = a1 + a2[8];
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  uint64_t v8 = type metadata accessor for MoonViewModel(0);
  uint64_t v9 = v5 + *(int *)(v8 + 24);
  if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v6)) {
    v7(v9, v6);
  }
  uint64_t v10 = v5 + *(int *)(v8 + 28);
  if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, v6)) {
    v7(v10, v6);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + a2[9]);
  uint64_t v11 = a1 + a2[12];
  uint64_t v12 = type metadata accessor for CoordinateSpace();
  char v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

void *sub_100682A78(void *a1, void *a2, int *a3)
{
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_100195B7C(*(void *)v9, v11);
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  uint64_t v12 = a3[6];
  char v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = *(void *)v14;
  char v16 = v14[8];
  sub_100195B7C(*(void *)v14, v16);
  *(void *)char v13 = v15;
  v13[8] = v16;
  uint64_t v17 = a3[7];
  uint64_t v18 = a3[8];
  uint64_t v19 = (char *)a1 + v17;
  uint64_t v20 = (char *)a2 + v17;
  char *v19 = *v20;
  *((void *)v19 + 1) = *((void *)v20 + 1);
  uint64_t v21 = (char *)a1 + v18;
  uint64_t v22 = (char *)a2 + v18;
  uint64_t v23 = type metadata accessor for Date();
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
  swift_retain();
  v24(v21, v22, v23);
  uint64_t v25 = (int *)type metadata accessor for MoonViewModel(0);
  *(void *)&v21[v25[5]] = *(void *)&v22[v25[5]];
  uint64_t v26 = v25[6];
  uint64_t v27 = &v21[v26];
  uint64_t v28 = &v22[v26];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v22[v26], 1, v23))
  {
    uint64_t v29 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    v24(v27, v28, v23);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v23);
  }
  uint64_t v30 = v25[7];
  uint64_t v31 = &v21[v30];
  uint64_t v32 = &v22[v30];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v22[v30], 1, v23))
  {
    uint64_t v33 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    v24(v31, v32, v23);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v23);
  }
  v21[v25[8]] = v22[v25[8]];
  uint64_t v34 = a3[9];
  long long v35 = *(_OWORD *)((char *)a2 + v34 + 24);
  *(_OWORD *)((char *)a1 + v34 + 24) = v35;
  (**(void (***)(void))(v35 - 8))();
  uint64_t v36 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v36) = *(void *)((char *)a2 + v36);
  uint64_t v37 = a3[12];
  uint64_t v38 = (char *)a1 + v37;
  uint64_t v39 = (char *)a2 + v37;
  uint64_t v40 = type metadata accessor for CoordinateSpace();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
  uint64_t v41 = a3[14];
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  *(void *)((char *)a1 + v41) = *(void *)((char *)a2 + v41);
  uint64_t v42 = a3[16];
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  *(void *)((char *)a1 + v42) = *(void *)((char *)a2 + v42);
  return a1;
}

void *sub_100682E0C(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100178110((uint64_t)a1, &qword_100E62CB8);
    sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_100195B7C(*(void *)v9, v11);
  uint64_t v12 = *(void *)v8;
  char v13 = v8[8];
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  sub_10018F6D8(v12, v13);
  uint64_t v14 = a3[6];
  uint64_t v15 = (char *)a1 + v14;
  char v16 = (char *)a2 + v14;
  uint64_t v17 = *(void *)v16;
  char v18 = v16[8];
  sub_100195B7C(*(void *)v16, v18);
  uint64_t v19 = *(void *)v15;
  char v20 = v15[8];
  *(void *)uint64_t v15 = v17;
  v15[8] = v18;
  sub_10018F6D8(v19, v20);
  uint64_t v21 = a3[7];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  *uint64_t v22 = *v23;
  *((void *)v22 + 1) = *((void *)v23 + 1);
  swift_retain();
  swift_release();
  uint64_t v24 = a3[8];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = type metadata accessor for Date();
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 24);
  uint64_t v47 = *(void *)(v27 - 8);
  v46(v25, v26, v27);
  uint64_t v28 = type metadata accessor for MoonViewModel(0);
  *(void *)&v25[*(int *)(v28 + 20)] = *(void *)&v26[*(int *)(v28 + 20)];
  uint64_t v48 = v28;
  uint64_t v29 = *(int *)(v28 + 24);
  uint64_t v30 = &v25[v29];
  uint64_t v31 = &v26[v29];
  int v32 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v25[v29], 1, v27);
  int v33 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v27);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v30, v31, v27);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v27);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v30, v27);
LABEL_11:
    uint64_t v34 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_12;
  }
  v46(v30, v31, v27);
LABEL_12:
  uint64_t v35 = *(int *)(v48 + 28);
  uint64_t v36 = &v25[v35];
  uint64_t v37 = &v26[v35];
  int v38 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v25[v35], 1, v27);
  int v39 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v27);
  if (!v38)
  {
    if (!v39)
    {
      v46(v36, v37, v27);
      goto LABEL_18;
    }
    (*(void (**)(char *, uint64_t))(v47 + 8))(v36, v27);
    goto LABEL_17;
  }
  if (v39)
  {
LABEL_17:
    uint64_t v40 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v36, v37, v27);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v27);
LABEL_18:
  v25[*(int *)(v48 + 32)] = v26[*(int *)(v48 + 32)];
  sub_1000C1E18((void *)((char *)a1 + a3[9]), (void *)((char *)a2 + a3[9]));
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  uint64_t v41 = a3[12];
  uint64_t v42 = (char *)a1 + v41;
  uint64_t v43 = (char *)a2 + v41;
  uint64_t v44 = type metadata accessor for CoordinateSpace();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 24))(v42, v43, v44);
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  return a1;
}

char *sub_100683280(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for LayoutDirection();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  char v11 = &a2[v8];
  *(void *)uint64_t v10 = *(void *)v11;
  v10[8] = v11[8];
  uint64_t v12 = &a1[v9];
  char v13 = &a2[v9];
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  uint64_t v14 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  uint64_t v15 = &a1[v14];
  char v16 = &a2[v14];
  uint64_t v17 = type metadata accessor for Date();
  char v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32);
  v18(v15, v16, v17);
  uint64_t v19 = (int *)type metadata accessor for MoonViewModel(0);
  *(void *)&v15[v19[5]] = *(void *)&v16[v19[5]];
  uint64_t v20 = v19[6];
  uint64_t v21 = &v15[v20];
  uint64_t v22 = &v16[v20];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v16[v20], 1, v17))
  {
    uint64_t v23 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    v18(v21, v22, v17);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v17);
  }
  uint64_t v24 = v19[7];
  uint64_t v25 = &v15[v24];
  uint64_t v26 = &v16[v24];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v16[v24], 1, v17))
  {
    uint64_t v27 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    v18(v25, v26, v17);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v17);
  }
  v15[v19[8]] = v16[v19[8]];
  uint64_t v28 = a3[9];
  uint64_t v29 = a3[10];
  uint64_t v30 = &a1[v28];
  uint64_t v31 = &a2[v28];
  long long v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
  *((void *)v30 + 4) = *((void *)v31 + 4);
  *(void *)&a1[v29] = *(void *)&a2[v29];
  uint64_t v33 = a3[12];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  uint64_t v36 = type metadata accessor for CoordinateSpace();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
  uint64_t v37 = a3[14];
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  *(void *)&a1[v37] = *(void *)&a2[v37];
  uint64_t v38 = a3[16];
  *(void *)&a1[a3[15]] = *(void *)&a2[a3[15]];
  *(void *)&a1[v38] = *(void *)&a2[v38];
  return a1;
}

char *sub_1006835C0(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100178110((uint64_t)a1, &qword_100E62CB8);
    uint64_t v6 = sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for LayoutDirection();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(void *)v10;
  LOBYTE(v10) = v10[8];
  uint64_t v12 = *(void *)v9;
  char v13 = v9[8];
  *(void *)uint64_t v9 = v11;
  v9[8] = (char)v10;
  sub_10018F6D8(v12, v13);
  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  char v16 = &a2[v14];
  uint64_t v17 = *(void *)v16;
  LOBYTE(v16) = v16[8];
  uint64_t v18 = *(void *)v15;
  char v19 = v15[8];
  *(void *)uint64_t v15 = v17;
  v15[8] = (char)v16;
  sub_10018F6D8(v18, v19);
  uint64_t v20 = a3[7];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  *uint64_t v21 = *v22;
  *((void *)v21 + 1) = *((void *)v22 + 1);
  swift_release();
  uint64_t v23 = a3[8];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = type metadata accessor for Date();
  int v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 40);
  uint64_t v53 = *(void *)(v26 - 8);
  v52(v24, v25, v26);
  uint64_t v27 = type metadata accessor for MoonViewModel(0);
  *(void *)&v24[*(int *)(v27 + 20)] = *(void *)&v25[*(int *)(v27 + 20)];
  uint64_t v54 = v27;
  uint64_t v28 = *(int *)(v27 + 24);
  uint64_t v29 = &v24[v28];
  uint64_t v30 = &v25[v28];
  int v31 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v24[v28], 1, v26);
  int v32 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v26);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v29, v30, v26);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v26);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v53 + 8))(v29, v26);
LABEL_10:
    uint64_t v33 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_11;
  }
  v52(v29, v30, v26);
LABEL_11:
  uint64_t v34 = *(int *)(v54 + 28);
  uint64_t v35 = &v24[v34];
  uint64_t v36 = &v25[v34];
  int v37 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v24[v34], 1, v26);
  int v38 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v26);
  if (!v37)
  {
    if (!v38)
    {
      v52(v35, v36, v26);
      goto LABEL_17;
    }
    (*(void (**)(char *, uint64_t))(v53 + 8))(v35, v26);
    goto LABEL_16;
  }
  if (v38)
  {
LABEL_16:
    uint64_t v39 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v35, v36, v26);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v26);
LABEL_17:
  v24[*(int *)(v54 + 32)] = v25[*(int *)(v54 + 32)];
  uint64_t v40 = a3[9];
  uint64_t v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&a1[v40]);
  long long v43 = *((_OWORD *)v42 + 1);
  *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
  *((_OWORD *)v41 + 1) = v43;
  *((void *)v41 + 4) = *((void *)v42 + 4);
  uint64_t v44 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  *(void *)&a1[v44] = *(void *)&a2[v44];
  uint64_t v45 = a3[12];
  uint64_t v46 = &a1[v45];
  uint64_t v47 = &a2[v45];
  uint64_t v48 = type metadata accessor for CoordinateSpace();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 40))(v46, v47, v48);
  uint64_t v49 = a3[14];
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  *(void *)&a1[v49] = *(void *)&a2[v49];
  uint64_t v50 = a3[16];
  *(void *)&a1[a3[15]] = *(void *)&a2[a3[15]];
  *(void *)&a1[v50] = *(void *)&a2[v50];
  return a1;
}

uint64_t sub_100683A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100683A38);
}

uint64_t sub_100683A38(uint64_t a1, uint64_t a2, int *a3)
{
  sub_10017DF08(&qword_100E63BF0);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    type metadata accessor for MoonViewModel(0);
    sub_100162F30();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = a3[8];
    }
    else
    {
      if (a2 == 0x7FFFFFFF) {
        return sub_1001A4754(a3[9]);
      }
      uint64_t v8 = type metadata accessor for CoordinateSpace();
      uint64_t v12 = a3[12];
    }
    uint64_t v9 = a1 + v12;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_100683B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100683B14);
}

void sub_100683B14()
{
  sub_100150288();
  sub_10017DF08(&qword_100E63BF0);
  sub_100162F30();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v1;
  }
  else
  {
    type metadata accessor for MoonViewModel(0);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == v3)
    {
      uint64_t v6 = v8;
      uint64_t v10 = v2[8];
    }
    else
    {
      if (v3 == 0x7FFFFFFF)
      {
        *(void *)(v1 + v2[9] + 24) = (v0 - 1);
        return;
      }
      uint64_t v6 = type metadata accessor for CoordinateSpace();
      uint64_t v10 = v2[12];
    }
    uint64_t v7 = v1 + v10;
  }

  _s7Weather24LocationCompositionStateOwst_0(v7, v0, v0, v6);
}

void sub_100683BE0()
{
  sub_10000CE24();
  if (v0 <= 0x3F)
  {
    type metadata accessor for MoonViewModel(319);
    if (v1 <= 0x3F)
    {
      type metadata accessor for CoordinateSpace();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_100683D18()
{
  return sub_1001246C8(&qword_100E881A8, &qword_100E881B0);
}

uint64_t sub_100683D54()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100683D70()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100683D8C()
{
  return swift_deallocObject();
}

uint64_t sub_100683D9C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100673920(a1, a2, *(double *)(v2 + 16));
}

uint64_t sub_100683DA8()
{
  uint64_t v0 = type metadata accessor for MoonContainerView(0);
  sub_1001627C0(v0);
  sub_10017B22C();

  return sub_1006736D4();
}

uint64_t sub_100683DF0()
{
  return sub_100673744();
}

uint64_t sub_100683E14()
{
  type metadata accessor for MoonContainerView(0);
  sub_100179CD4();
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for LayoutDirection();
    sub_100162E4C();
    sub_100162F0C();
    v4();
  }
  else
  {
    swift_release();
  }
  sub_10019FEB0();
  sub_100183D58();
  uint64_t v5 = v3 + *(int *)(v0 + 32);
  uint64_t v6 = type metadata accessor for Date();
  sub_100162E4C();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  uint64_t v9 = type metadata accessor for MoonViewModel(0);
  uint64_t v10 = v5 + *(int *)(v9 + 24);
  if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, v6)) {
    v8(v10, v6);
  }
  uint64_t v11 = v5 + *(int *)(v9 + 28);
  if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v6)) {
    v8(v11, v6);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v3 + *(int *)(v0 + 36));
  type metadata accessor for CoordinateSpace();
  sub_100162E4C();
  sub_100162F0C();
  v12();

  return swift_deallocObject();
}

uint64_t sub_100684000(uint64_t a1, uint64_t a2)
{
  return sub_100681E64(a1, a2, type metadata accessor for MoonContainerView, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100672F20);
}

uint64_t sub_10068402C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1006840A8()
{
  unint64_t result = qword_100E88208;
  if (!qword_100E88208)
  {
    sub_10018C6DC(&qword_100E881E0);
    sub_100681CB8(&qword_100E88210, (void (*)(uint64_t))&type metadata accessor for MoonView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E88208);
  }
  return result;
}

uint64_t sub_100684154()
{
  return sub_1001246C8(&qword_100E88228, &qword_100E88230);
}

uint64_t sub_100684190()
{
  return sub_1001246C8(&qword_100E88238, &qword_100E88240);
}

uint64_t sub_1006841D0()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t sub_1006842A8()
{
  if ((static Location.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  type metadata accessor for SunriseSunsetDetailViewDataCache.ElevationCacheKey();

  return static Date.== infix(_:_:)();
}

Swift::Int sub_100684308()
{
  return Hasher._finalize()();
}

Swift::Int sub_1006843F8()
{
  return Hasher._finalize()();
}

uint64_t sub_1006844E4()
{
  swift_retain();
  Cache.subscript.getter();

  return swift_release();
}

uint64_t sub_10068453C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_10017DF08(&qword_100E656E0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Location();
  __chkstk_darwin(v8);
  sub_10016279C();
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v2, a1);
  sub_100685288(a2, (uint64_t)v7, (void (*)(void))type metadata accessor for SunriseSunsetMonthlyViewModel);
  uint64_t v10 = type metadata accessor for SunriseSunsetMonthlyViewModel();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v10);
  swift_retain();
  Cache.subscript.setter();
  return swift_release();
}

uint64_t sub_100684698()
{
  uint64_t v1 = type metadata accessor for SunriseSunsetDetailViewDataCache.ElevationCacheKey();
  __chkstk_darwin(v1);
  sub_10016279C();
  type metadata accessor for Location();
  sub_100187D24();
  sub_10008B8B4();
  v2();
  type metadata accessor for Date();
  sub_100187D24();
  sub_10008B8B4();
  v3();
  swift_retain();
  Cache.subscript.getter();
  swift_release();
  sub_10068522C(v0);
  return v5;
}

uint64_t sub_100684798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for SunriseSunsetDetailViewDataCache.ElevationCacheKey();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v13 - v8;
  type metadata accessor for Location();
  sub_100187D24();
  sub_10008B8B4();
  v10();
  type metadata accessor for Date();
  sub_100187D24();
  sub_10008B8B4();
  v11();
  sub_100685288((uint64_t)v9, (uint64_t)v6, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewDataCache.ElevationCacheKey);
  v13[1] = a3;
  swift_retain();
  swift_bridgeObjectRetain();
  Cache.subscript.setter();
  swift_release();
  return sub_10068522C((uint64_t)v9);
}

uint64_t sub_1006848FC()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_100684924()
{
  sub_1006848FC();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SunriseSunsetDetailViewDataCache()
{
  return self;
}

uint64_t *sub_10068497C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Location();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_100684A84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_100684B2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_100684BE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_100684C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_100684D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_100684E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100684E20);
}

uint64_t sub_100684E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Location();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_100684E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100684EB0);
}

uint64_t sub_100684EB0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Location();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    uint64_t v10 = type metadata accessor for Date();
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  return _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for SunriseSunsetDetailViewDataCache.ElevationCacheKey()
{
  uint64_t result = qword_100E88348;
  if (!qword_100E88348) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100684F7C()
{
  uint64_t result = type metadata accessor for Location();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100685044()
{
  return sub_1006851E4(&qword_100E88380, (void (*)(uint64_t))type metadata accessor for SunriseSunsetDetailViewDataCache.ElevationCacheKey);
}

uint64_t sub_10068508C()
{
  type metadata accessor for Location();
  type metadata accessor for SunriseSunsetMonthlyViewModel();
  sub_1006851E4(&qword_100E639A0, (void (*)(uint64_t))&type metadata accessor for Location);
  Dictionary.init(dictionaryLiteral:)();
  sub_10017DF08(&qword_100E88388);
  swift_allocObject();
  *(void *)(v0 + 16) = Cache.init(_:)();
  type metadata accessor for SunriseSunsetDetailViewDataCache.ElevationCacheKey();
  sub_10017DF08(&qword_100E65768);
  sub_1006851E4(&qword_100E88390, (void (*)(uint64_t))type metadata accessor for SunriseSunsetDetailViewDataCache.ElevationCacheKey);
  Dictionary.init(dictionaryLiteral:)();
  sub_10017DF08(&qword_100E88398);
  swift_allocObject();
  *(void *)(v0 + 24) = Cache.init(_:)();
  return v0;
}

uint64_t sub_1006851E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10068522C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SunriseSunsetDetailViewDataCache.ElevationCacheKey();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100685288(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100187D24();
  sub_10008B8B4();
  v4();
  return a2;
}

uint64_t *sub_1006852E0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for CurrentWeather();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1006853B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100685430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1006854BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100685538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1006855BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006855D0);
}

uint64_t sub_1006855D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for CurrentWeather();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_10068565C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100685670);
}

void sub_100685670(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for CurrentWeather();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

void sub_1006856F8()
{
  if (static CurrentWeather.== infix(_:_:)())
  {
    type metadata accessor for DailyForecastComponent();
    sub_100BDC6A0();
  }
}

uint64_t sub_100685758(void *a1)
{
  uint64_t v4 = sub_10017DF08(&qword_100E88448);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10012B938();
  sub_1001B1E64(a1, a1[3]);
  sub_100685C38();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for CurrentWeather();
  sub_1004EFF30(&qword_100E7CDF0);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for DailyForecastComponent();
    sub_100685D90();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t sub_1006858D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v26 = type metadata accessor for CurrentWeather();
  sub_100179C0C();
  uint64_t v24 = v5;
  __chkstk_darwin(v6);
  sub_10012B938();
  uint64_t v27 = sub_10017DF08(&qword_100E88430);
  sub_100179C0C();
  uint64_t v25 = v7;
  __chkstk_darwin(v8);
  uint64_t v9 = type metadata accessor for DailyForecastComponent();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a1, a1[3]);
  sub_100685C38();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  uint64_t v12 = v11;
  uint64_t v13 = v24;
  char v30 = 0;
  sub_1004EFF30(&qword_100E7CDD8);
  uint64_t v14 = v26;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 32);
  uint64_t v22 = (uint64_t)v12;
  v15(v12, v3, v14);
  char v29 = 1;
  sub_100685C84();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v16 = sub_10019EF24();
  v17(v16);
  uint64_t v19 = v22;
  uint64_t v18 = v23;
  *(void *)(v22 + *(int *)(v9 + 20)) = v28;
  sub_100685CD0(v19, v18);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return sub_100685D34(v19);
}

uint64_t sub_100685B8C(uint64_t a1)
{
  unint64_t v2 = sub_100685C38();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100685BC8(uint64_t a1)
{
  unint64_t v2 = sub_100685C38();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100685C04@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1006858D8(a1, a2);
}

uint64_t sub_100685C1C(void *a1)
{
  return sub_100685758(a1);
}

unint64_t sub_100685C38()
{
  unint64_t result = qword_100E88438;
  if (!qword_100E88438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E88438);
  }
  return result;
}

unint64_t sub_100685C84()
{
  unint64_t result = qword_100E88440;
  if (!qword_100E88440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E88440);
  }
  return result;
}

uint64_t sub_100685CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DailyForecastComponent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100685D34(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DailyForecastComponent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100685D90()
{
  unint64_t result = qword_100E88450;
  if (!qword_100E88450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E88450);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DailyForecastComponent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100685EA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DailyForecastComponent.CodingKeys()
{
  return &type metadata for DailyForecastComponent.CodingKeys;
}

unint64_t sub_100685EE4()
{
  unint64_t result = qword_100E88458;
  if (!qword_100E88458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E88458);
  }
  return result;
}

unint64_t sub_100685F34()
{
  unint64_t result = qword_100E88460;
  if (!qword_100E88460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E88460);
  }
  return result;
}

unint64_t sub_100685F84()
{
  unint64_t result = qword_100E88468;
  if (!qword_100E88468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E88468);
  }
  return result;
}

uint64_t sub_100685FD0(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E88520);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v19)
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for PerformanceTestRunner();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v3 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E88518);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v17)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E88510);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v15)
  {
    uint64_t v4 = sub_1000DF0C4((uint64_t)v16, v17);
    __chkstk_darwin(v4);
    unsigned int v6 = (uint64_t *)&v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *))(v7 + 16))(v6);
    uint64_t v8 = sub_1000DF0C4((uint64_t)v14, v15);
    __chkstk_darwin(v8);
    uint64_t v10 = (uint64_t **)&v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t **))(v11 + 16))(v10);
    uint64_t v12 = sub_100686870(&v18, v3, *v6, *v10);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v14);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v16);
    return (uint64_t)v12;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100686268()
{
  sub_10017DF08(&qword_100E88510);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E88518);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  type metadata accessor for PerformanceTestRunner();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E88520);
  RegistrationContainer.register<A>(_:name:factory:)();

  return swift_release();
}

uint64_t sub_100686370@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v10)
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for StubPPTWeatherDataManager();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v5 = result;
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for WeatherDataUpdater();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v6 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E807C8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v9)
  {
    uint64_t v7 = type metadata accessor for LegacyPerformanceTestRunner();
    swift_allocObject();
    uint64_t result = sub_1008F07D8(v10, v11, v5, v6, &v8);
    a2[3] = v7;
    a2[4] = (uint64_t)&off_100E2D198;
    *a2 = result;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1006864F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for LegacyPerformanceTestManager();
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 33;
  a1[3] = v2;
  a1[4] = (uint64_t)&off_100E13428;
  *a1 = result;
  return result;
}

void *sub_100686540(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = (void *)dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v3 = v15;
  if (!v15)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v4 = v16;
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for StubPPTWeatherDataManager();
  uint64_t result = (void *)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v5 = (uint64_t)result;
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for WeatherDataUpdater();
  uint64_t result = (void *)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v6 = (uint64_t)result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E807C8);
  uint64_t result = (void *)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v14)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E81B08);
  uint64_t result = (void *)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v7 = (uint64_t)result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E870B8);
  uint64_t result = (void *)dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v8 = v11;
  if (v11)
  {
    uint64_t v9 = v12;
    sub_10020D948((uint64_t)a1, (uint64_t)v10);
    type metadata accessor for PerformanceTestRunner();
    swift_allocObject();
    return sub_1007338AC(v3, v4, v5, v6, &v13, v7, v8, v9, v10);
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_10068674C@<X0>(uint64_t *a1@<X8>)
{
  id v2 = [self currentDevice];
  id v3 = [v2 userInterfaceIdiom];

  if (v3 == (id)5)
  {
    uint64_t v4 = type metadata accessor for PerformanceTestDefinitions_Mac();
    uint64_t v5 = &off_100E0CD00;
    goto LABEL_7;
  }
  if (v3 == (id)1)
  {
    uint64_t v4 = type metadata accessor for PerformanceTestDefinitions_iPad();
    uint64_t v5 = &off_100E30578;
LABEL_7:
    uint64_t result = swift_allocObject();
    a1[3] = v4;
    a1[4] = (uint64_t)v5;
    *a1 = result;
    return result;
  }
  if (!v3)
  {
    uint64_t v4 = type metadata accessor for PerformanceTestDefinitions_iPhone();
    uint64_t v5 = &off_100E268F8;
    goto LABEL_7;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_100686870(long long *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = *a4;
  uint64_t v9 = type metadata accessor for LegacyPerformanceTestManager();
  v25[3] = v9;
  v25[4] = &off_100E13428;
  v25[0] = a3;
  uint64_t v23 = v8;
  uint64_t v24 = &off_100E2D198;
  v22[0] = a4;
  type metadata accessor for PerformanceTestManager();
  uint64_t v10 = (void *)swift_allocObject();
  uint64_t v11 = sub_1000DF0C4((uint64_t)v25, v9);
  __chkstk_darwin(v11);
  long long v13 = (void *)((char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v14 + 16))(v13);
  uint64_t v15 = sub_1000DF0C4((uint64_t)v22, v23);
  __chkstk_darwin(v15);
  uint64_t v17 = (void *)((char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v18 + 16))(v17);
  uint64_t v19 = *v13;
  uint64_t v20 = *v17;
  v10[11] = v9;
  v10[12] = &off_100E13428;
  v10[8] = v19;
  unsigned char v10[16] = v8;
  v10[17] = &off_100E2D198;
  v10[13] = v20;
  sub_1001262E4(a1, (uint64_t)(v10 + 2));
  v10[7] = a2;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v22);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v25);
  return v10;
}

double sub_100686A98()
{
  double result = 4.0;
  xmmword_100F519E0 = xmmword_100C4D500;
  return result;
}

double sub_100686AAC()
{
  double result = 4.0;
  xmmword_100F519F0 = xmmword_100C4D510;
  return result;
}

uint64_t sub_100686AC0(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E885C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_100686B20(char a1, char a2, uint64_t a3)
{
  uint64_t v94 = a3;
  uint64_t v6 = type metadata accessor for TipPriorityQueue.GridEntry();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100162EF8();
  uint64_t v93 = v8;
  __chkstk_darwin(v9);
  uint64_t v92 = (uint64_t)&v71 - v10;
  __chkstk_darwin(v11);
  long long v13 = (char *)&v71 - v12;
  uint64_t v14 = sub_10017DF08(&qword_100E64E80);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_10008B8C0();
  uint64_t v16 = type metadata accessor for LocationComponentViewModel();
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v71 - v21;
  uint64_t v23 = sub_10017DF08(&qword_100E6CCD8);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100162EF8();
  uint64_t v91 = v25;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v71 - v27;
  __chkstk_darwin(v29);
  int v31 = (char *)&v71 - v30;
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v71 - v33;
  if (a1)
  {
    if (a1 == 1)
    {
      if (a2)
      {
        uint64_t v35 = &qword_100E88998;
        goto LABEL_11;
      }
    }
    else if (a2)
    {
      uint64_t v35 = &qword_100E88D68;
      goto LABEL_11;
    }
    uint64_t v35 = &qword_100E88B80;
  }
  else if (a2)
  {
    uint64_t v35 = &qword_100E885C8;
  }
  else
  {
    uint64_t v35 = &qword_100E887B0;
  }
LABEL_11:
  char v36 = *((unsigned char *)v35 + 224);
  uint64_t v37 = *v35;
  uint64_t v77 = v35[1];
  uint64_t v78 = v37;
  uint64_t v76 = v35[2];
  uint64_t v75 = v35[3];
  uint64_t v38 = v35[8];
  uint64_t v81 = v35[9];
  uint64_t v82 = v38;
  uint64_t v39 = v35[10];
  uint64_t v79 = v35[11];
  uint64_t v80 = v39;
  uint64_t v74 = v35[24];
  uint64_t v73 = v35[25];
  uint64_t v72 = v35[26];
  uint64_t v71 = v35[27];
  uint64_t v40 = v35[49];
  uint64_t v85 = v35[50];
  uint64_t v86 = v40;
  uint64_t v41 = v35[51];
  uint64_t v83 = v35[52];
  uint64_t v84 = v41;
  uint64_t v42 = v35[57];
  uint64_t v89 = v35[58];
  uint64_t v90 = v42;
  uint64_t v43 = v94 + OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_map;
  uint64_t v45 = v35[59];
  uint64_t v44 = v35[60];
  uint64_t v87 = v45;
  uint64_t v88 = v44;
  swift_beginAccess();
  sub_10006DF38(v43, v3, &qword_100E64E80);
  uint64_t v46 = type metadata accessor for LocationComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0(v3, 1, v46) == 1)
  {
    sub_1001781AC(v3, &qword_100E64E80);
LABEL_16:
    uint64_t v47 = 1;
    goto LABEL_17;
  }
  sub_10031F6A8(v3 + *(int *)(v46 + 20), (uint64_t)v19, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  sub_10031F75C(v3, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_10031F6FC((uint64_t)v19, (uint64_t)v22, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  if (v36)
  {
    sub_10031F75C((uint64_t)v22, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    goto LABEL_16;
  }
  sub_10031F6FC((uint64_t)v22, (uint64_t)v31, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v47 = 0;
  uint64_t v48 = &v31[*(int *)(v6 + 20)];
  uint64_t v49 = v73;
  *(void *)uint64_t v48 = v74;
  *((void *)v48 + 1) = v49;
  uint64_t v50 = v71;
  *((void *)v48 + 2) = v72;
  *((void *)v48 + 3) = v50;
LABEL_17:
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, v47, 1, v6);
  sub_10031F640((uint64_t)v31, (uint64_t)v34);
  sub_10031F6A8(v94 + *(int *)(v46 + 20) + OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_airQuality, (uint64_t)v28, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v51 = &v28[*(int *)(v6 + 20)];
  uint64_t v52 = v77;
  *(void *)uint64_t v51 = v78;
  *((void *)v51 + 1) = v52;
  uint64_t v53 = v75;
  *((void *)v51 + 2) = v76;
  *((void *)v51 + 3) = v53;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v6);
  uint64_t v54 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  sub_10031F6A8(v54, (uint64_t)v13, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  int v55 = &v13[*(int *)(v6 + 20)];
  uint64_t v56 = v81;
  *(void *)int v55 = v82;
  *((void *)v55 + 1) = v56;
  uint64_t v57 = v79;
  *((void *)v55 + 2) = v80;
  *((void *)v55 + 3) = v57;
  uint64_t v58 = v91;
  sub_10006DF38((uint64_t)v34, v91, &qword_100E6CCD8);
  uint64_t v59 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  uint64_t v60 = v92;
  sub_10031F6A8(v59, v92, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v61 = (uint64_t *)(v60 + *(int *)(v6 + 20));
  uint64_t v62 = v85;
  *uint64_t v61 = v86;
  v61[1] = v62;
  uint64_t v63 = v83;
  v61[2] = v84;
  v61[3] = v63;
  uint64_t v64 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  uint64_t v65 = v93;
  sub_10031F6A8(v64, v93, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v66 = (uint64_t *)(v65 + *(int *)(v6 + 20));
  uint64_t v67 = v89;
  uint64_t *v66 = v90;
  v66[1] = v67;
  uint64_t v68 = v88;
  v66[2] = v87;
  v66[3] = v68;
  uint64_t v69 = sub_100AD6D18((uint64_t)v28, (uint64_t)v13, v58, v60, v65);
  sub_1001781AC((uint64_t)v34, &qword_100E6CCD8);
  return v69;
}

uint64_t sub_1006870FC(uint64_t a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E64E80);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_10008B8C0();
  uint64_t v10 = a1 + OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_map;
  swift_beginAccess();
  sub_10006DF38(v10, v7, &qword_100E64E80);
  uint64_t v106 = a1;
  if (_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8) == 1)
  {
    sub_1001781AC(v7, &qword_100E64E80);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C367B0;
    sub_10017DF08(&qword_100E6CCD0);
    unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v13 = *(void *)(v9 + 72);
    uint64_t v14 = (__n128 *)swift_allocObject();
    uint64_t v15 = sub_100183900(v14, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_airQuality, (uint64_t)v15 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 40) = v16;
    *(void *)(v11 + 48) = v17;
    uint64_t v18 = (__n128 *)swift_allocObject();
    sub_100163264(v18);
    sub_10031F6A8(v19 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v20, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 64) = v21;
    *(void *)(v11 + 72) = v22;
    uint64_t v23 = (__n128 *)sub_100163204();
    sub_100163264(v23);
    sub_10031F6A8(v24 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v25, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 88) = v26;
    *(void *)(v11 + 96) = v27;
    uint64_t v28 = sub_100163204();
    *(_OWORD *)(v28 + 16) = v107;
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_severeAlert, v28 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC(v28);
    *(void *)(v11 + 112) = v29;
    *(void *)(v11 + 120) = v30;
    uint64_t v31 = v13;
    uint64_t v32 = (__n128 *)swift_allocObject();
    uint64_t v33 = (char *)sub_100183900(v32, (__n128)xmmword_100C25ED0) + v12;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
    sub_1001859A8((uint64_t)&v33[v31], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset);
    *(void *)(v11 + 128) = sub_1001F24CC((uint64_t)v32);
    *(void *)(v11 + 136) = v34;
    *(void *)(v11 + 144) = v35;
    char v36 = (__n128 *)swift_allocObject();
    sub_10016324C(v36);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_1001859A8((uint64_t)&v33[v31], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v32);
    *(void *)(v11 + 160) = v37;
    *(void *)(v11 + 168) = v38;
    uint64_t v39 = (__n128 *)swift_allocObject();
    sub_10016324C(v39);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_1001859A8((uint64_t)&v33[v31], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v32);
    *(void *)(v11 + 184) = v40;
    *(void *)(v11 + 192) = v41;
    uint64_t v42 = sub_100163204();
    *(_OWORD *)(v42 + 16) = v107;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_1001859A8(v42 + v12 + v31, OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure);
    *(void *)(v11 + 200) = sub_1001F24CC(v42);
    *(void *)(v11 + 208) = v43;
    *(void *)(v11 + 216) = v44;
    uint64_t v45 = (__n128 *)swift_allocObject();
    sub_100179F48(v45);
    uint64_t v47 = v46 + v12;
    uint64_t v48 = *(void *)(a1 + 16);
    sub_10031F6A8(v48 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v46 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v48 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v47 + v31, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 224) = sub_1001F24CC((uint64_t)v45);
    *(void *)(v11 + 232) = v49;
    *(void *)(v11 + 240) = v50;
  }
  else
  {
    sub_10031F6FC(v7, v1, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C28110;
    sub_10017DF08(&qword_100E6CCD0);
    uint64_t v105 = *(void *)(v9 + 72);
    uint64_t v104 = v1;
    unint64_t v51 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v52 = (__n128 *)swift_allocObject();
    uint64_t v53 = sub_100183900(v52, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_airQuality, (uint64_t)v53 + v51, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v52);
    *(void *)(v11 + 40) = v54;
    *(void *)(v11 + 48) = v55;
    uint64_t v56 = (__n128 *)sub_10017C984();
    sub_10017E198(v56);
    sub_10031F6A8(v57 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v58, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC((uint64_t)v52);
    *(void *)(v11 + 64) = v59;
    *(void *)(v11 + 72) = v60;
    uint64_t v61 = (__n128 *)sub_10017C984();
    sub_10017E198(v61);
    sub_10031F6A8(v62 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v63, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC((uint64_t)v52);
    *(void *)(v11 + 88) = v64;
    *(void *)(v11 + 96) = v65;
    uint64_t v66 = sub_10017C984();
    *(_OWORD *)(v66 + 16) = v107;
    sub_10031F6A8(v1, v66 + v51, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC(v66);
    *(void *)(v11 + 112) = v67;
    *(void *)(v11 + 120) = v68;
    uint64_t v69 = sub_10017C984();
    *(_OWORD *)(v69 + 16) = v107;
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_severeAlert, v69 + v51, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 128) = sub_1001F24CC(v69);
    *(void *)(v11 + 136) = v70;
    *(void *)(v11 + 144) = v71;
    uint64_t v72 = (__n128 *)swift_allocObject();
    uint64_t v73 = (char *)sub_100183900(v72, (__n128)xmmword_100C25ED0) + v51;
    uint64_t v74 = a1;
    uint64_t v75 = *(void *)(a1 + 16);
    uint64_t v76 = v74;
    sub_10031F6A8(v75 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v73, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v75 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v73[v105], (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v72);
    *(void *)(v11 + 160) = v77;
    *(void *)(v11 + 168) = v78;
    uint64_t v79 = (__n128 *)swift_allocObject();
    sub_100179F48(v79);
    uint64_t v81 = v80 + v51;
    uint64_t v82 = *(void *)(v76 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_10031F6A8(v82 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, v81 + v105, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v79);
    *(void *)(v11 + 184) = v83;
    *(void *)(v11 + 192) = v84;
    uint64_t v85 = (__n128 *)swift_allocObject();
    sub_100179F48(v85);
    uint64_t v87 = v86 + v51;
    uint64_t v88 = *(void *)(v106 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_10031F6A8(v88 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, v87 + v105, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 200) = sub_1001F24CC((uint64_t)v85);
    *(void *)(v11 + 208) = v89;
    *(void *)(v11 + 216) = v90;
    uint64_t v91 = (__n128 *)swift_allocObject();
    sub_100179F48(v91);
    uint64_t v93 = v92 + v51;
    uint64_t v94 = *(void *)(v106 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_10031F6A8(v94 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, v93 + v105, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 224) = sub_1001F24CC((uint64_t)v91);
    *(void *)(v11 + 232) = v95;
    *(void *)(v11 + 240) = v96;
    unsigned __int8 v97 = (__n128 *)swift_allocObject();
    sub_100179F48(v97);
    uint64_t v99 = v98 + v51;
    uint64_t v100 = *(void *)(v106 + 16);
    sub_10031F6A8(v100 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v98 + v51, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v100 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v99 + v105, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 248) = sub_1001F24CC((uint64_t)v97);
    *(void *)(v11 + 256) = v101;
    *(void *)(v11 + 264) = v102;
    sub_10031F75C(v104, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  }
  return v11;
}

void sub_100687968(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100162E4C();
  uint64_t v6 = __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  uint64_t v7 = type metadata accessor for LocationViewComponent();
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_10017DF08(&qword_100E64E80);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = swift_retain();
  sub_1006E2E94(v17, a2);
  swift_release();
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather42LocationElevatedAqiMinorAlertConfiguration8_Storage_map, v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v11);
  sub_10031F75C(v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  _s7Weather24LocationCompositionStateOwst_0(v16, 0, 1, v4);
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather42LocationElevatedAqiMinorAlertConfiguration8_Storage_airQuality, v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v11);
  sub_10031F75C(v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather42LocationElevatedAqiMinorAlertConfiguration8_Storage_severeAlert, v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v11);
  sub_10031F75C(v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_1002C5A94();
}

uint64_t sub_100687B94(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)a1 = *a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[2];
    char v9 = *((unsigned char *)a2 + 24);
    swift_bridgeObjectRetain();
    sub_100195B7C(v8, v9);
    *(void *)(a1 + 16) = v8;
    *(unsigned char *)(a1 + 24) = v9;
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = (uint64_t *)(a1 + v10);
    uint64_t v12 = (uint64_t *)((char *)a2 + v10);
    type metadata accessor for AutomationInfo(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v17 = *v12;
      uint64_t v18 = v12[1];
      unsigned __int8 v19 = *((unsigned char *)v12 + 16);
      sub_10018F6EC(v17, v18, v19);
      *uint64_t v11 = v17;
      v11[1] = v18;
      *((unsigned char *)v11 + 16) = v19;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v14 = type metadata accessor for AutomationCellInfo(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 7u:
        case 0xAu:
          uint64_t v15 = v12[1];
          *uint64_t v11 = *v12;
          v11[1] = v15;
          swift_bridgeObjectRetain();
          goto LABEL_17;
        case 6u:
          uint64_t v23 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v11, v12, v23);
          goto LABEL_17;
        case 8u:
          uint64_t v24 = v12[1];
          *uint64_t v11 = *v12;
          v11[1] = v24;
          uint64_t v25 = v12[3];
          v11[2] = v12[2];
          v11[3] = v25;
          uint64_t v26 = v12[4];
          uint64_t v27 = v12[5];
          v11[4] = v26;
          v11[5] = v27;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_17;
        case 9u:
        case 0xBu:
          uint64_t v28 = v12[1];
          *uint64_t v11 = *v12;
          v11[1] = v28;
          uint64_t v29 = v12[2];
          uint64_t v30 = v12[3];
          v11[2] = v29;
          v11[3] = v30;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_17:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
          break;
      }
    }
    else
    {
      uint64_t v20 = type metadata accessor for AutomationViewInfo(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 3u:
          uint64_t v22 = v12[1];
          *uint64_t v11 = *v12;
          v11[1] = v22;
          swift_bridgeObjectRetain();
          goto LABEL_12;
        case 2u:
          uint64_t v21 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v11, v12, v21);
LABEL_12:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v11, v12, *(void *)(*(void *)(v20 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10068803C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  sub_10018F6D8(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  type metadata accessor for AutomationInfo(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 2:
      uint64_t v6 = *(void *)v4;
      uint64_t v7 = *(void *)(v4 + 8);
      unsigned __int8 v8 = *(unsigned char *)(v4 + 16);
      return sub_10014D144(v6, v7, v8);
    case 1:
      type metadata accessor for AutomationCellInfo(0);
      uint64_t result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 7:
        case 10:
          goto LABEL_9;
        case 6:
LABEL_13:
          uint64_t v9 = type metadata accessor for WeatherMapOverlayKind();
          uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
          return v10(v4, v9);
        case 8:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_9;
        case 9:
        case 11:
          swift_bridgeObjectRelease();
LABEL_9:
          uint64_t result = swift_bridgeObjectRelease();
          break;
        default:
          return result;
      }
      break;
    case 0:
      type metadata accessor for AutomationViewInfo(0);
      uint64_t result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
        case 1:
        case 3:
          goto LABEL_9;
        case 2:
          goto LABEL_13;
        default:
          return result;
      }
  }
  return result;
}

uint64_t sub_100688220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 16);
  char v8 = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  sub_100195B7C(v7, v8);
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = v8;
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (uint64_t *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  type metadata accessor for AutomationInfo(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v15 = *(void *)v11;
    uint64_t v16 = *((void *)v11 + 1);
    unsigned __int8 v17 = *((unsigned char *)v11 + 16);
    sub_10018F6EC(v15, v16, v17);
    uint64_t *v10 = v15;
    v10[1] = v16;
    *((unsigned char *)v10 + 16) = v17;
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v13 = type metadata accessor for AutomationCellInfo(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 3u:
        case 4u:
        case 5u:
        case 7u:
        case 0xAu:
          goto LABEL_7;
        case 2u:
          uint64_t v14 = *((void *)v11 + 1);
          uint64_t *v10 = *(void *)v11;
          v10[1] = v14;
          swift_bridgeObjectRetain();
          goto LABEL_14;
        case 6u:
          uint64_t v20 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(uint64_t *, const void *, uint64_t))(*(void *)(v20 - 8) + 16))(v10, v11, v20);
          goto LABEL_14;
        case 8u:
          uint64_t v21 = *((void *)v11 + 1);
          uint64_t *v10 = *(void *)v11;
          v10[1] = v21;
          uint64_t v22 = *((void *)v11 + 3);
          long long v10[2] = *((void *)v11 + 2);
          v10[3] = v22;
          uint64_t v23 = *((void *)v11 + 4);
          uint64_t v24 = *((void *)v11 + 5);
          v10[4] = v23;
          v10[5] = v24;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_14;
        case 9u:
        case 0xBu:
          uint64_t v25 = *((void *)v11 + 1);
          uint64_t *v10 = *(void *)v11;
          v10[1] = v25;
          uint64_t v26 = *((void *)v11 + 2);
          uint64_t v27 = *((void *)v11 + 3);
          long long v10[2] = v26;
          v10[3] = v27;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_14;
        default:
          goto LABEL_8;
      }
    }
    uint64_t v13 = type metadata accessor for AutomationViewInfo(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 3u:
LABEL_7:
        uint64_t v18 = *((void *)v11 + 1);
        uint64_t *v10 = *(void *)v11;
        v10[1] = v18;
        swift_bridgeObjectRetain();
        goto LABEL_14;
      case 2u:
        uint64_t v19 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(uint64_t *, const void *, uint64_t))(*(void *)(v19 - 8) + 16))(v10, v11, v19);
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      default:
LABEL_8:
        memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
        break;
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1006885E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_100195B7C(v6, v7);
  uint64_t v8 = *(void *)(a1 + 16);
  char v9 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  sub_10018F6D8(v8, v9);
  if (a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = (uint64_t *)(a1 + v10);
    uint64_t v12 = (const void *)(a2 + v10);
    sub_10014CE78(a1 + v10, type metadata accessor for AutomationInfo);
    type metadata accessor for AutomationInfo(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v15 = *(void *)v12;
      uint64_t v16 = *((void *)v12 + 1);
      unsigned __int8 v17 = *((unsigned char *)v12 + 16);
      sub_10018F6EC(v15, v16, v17);
      *uint64_t v11 = v15;
      v11[1] = v16;
      *((unsigned char *)v11 + 16) = v17;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v14 = type metadata accessor for AutomationCellInfo(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 3u:
          case 4u:
          case 5u:
          case 7u:
          case 0xAu:
            goto LABEL_8;
          case 2u:
            *uint64_t v11 = *(void *)v12;
            v11[1] = *((void *)v12 + 1);
            swift_bridgeObjectRetain();
            goto LABEL_15;
          case 6u:
            uint64_t v19 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(uint64_t *, const void *, uint64_t))(*(void *)(v19 - 8) + 16))(v11, v12, v19);
            goto LABEL_15;
          case 8u:
            *uint64_t v11 = *(void *)v12;
            v11[1] = *((void *)v12 + 1);
            v11[2] = *((void *)v12 + 2);
            v11[3] = *((void *)v12 + 3);
            v11[4] = *((void *)v12 + 4);
            v11[5] = *((void *)v12 + 5);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_15;
          case 9u:
          case 0xBu:
            *uint64_t v11 = *(void *)v12;
            v11[1] = *((void *)v12 + 1);
            v11[2] = *((void *)v12 + 2);
            v11[3] = *((void *)v12 + 3);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_15;
          default:
            goto LABEL_9;
        }
      }
      uint64_t v14 = type metadata accessor for AutomationViewInfo(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 3u:
LABEL_8:
          *uint64_t v11 = *(void *)v12;
          v11[1] = *((void *)v12 + 1);
          swift_bridgeObjectRetain();
          goto LABEL_15;
        case 2u:
          uint64_t v18 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(uint64_t *, const void *, uint64_t))(*(void *)(v18 - 8) + 16))(v11, v12, v18);
LABEL_15:
          swift_storeEnumTagMultiPayload();
          break;
        default:
LABEL_9:
          memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100688A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  int v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = type metadata accessor for AutomationInfo(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v9 = type metadata accessor for AutomationCellInfo(0);
    if (swift_getEnumCaseMultiPayload() == 6)
    {
LABEL_6:
      uint64_t v10 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v5, v6, v10);
      swift_storeEnumTagMultiPayload();
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
LABEL_8:
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
    goto LABEL_9;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v9 = type metadata accessor for AutomationViewInfo(0);
    if (swift_getEnumCaseMultiPayload() == 2) {
      goto LABEL_6;
    }
    goto LABEL_8;
  }
  memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  return a1;
}

uint64_t sub_100688C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  char v7 = *(unsigned char *)(a2 + 24);
  uint64_t v8 = *(void *)(a1 + 16);
  char v9 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v7;
  sub_10018F6D8(v8, v9);
  if (a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (const void *)(a2 + v10);
    sub_10014CE78(a1 + v10, type metadata accessor for AutomationInfo);
    uint64_t v13 = type metadata accessor for AutomationInfo(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = type metadata accessor for AutomationCellInfo(0);
      if (swift_getEnumCaseMultiPayload() == 6)
      {
LABEL_7:
        uint64_t v16 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v11, v12, v16);
        swift_storeEnumTagMultiPayload();
LABEL_10:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_9:
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      goto LABEL_10;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v15 = type metadata accessor for AutomationViewInfo(0);
      if (swift_getEnumCaseMultiPayload() == 2) {
        goto LABEL_7;
      }
      goto LABEL_9;
    }
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100688E64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for AutomationInfo(0);
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_100688EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100688F00);
}

uint64_t sub_100688F00(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for AutomationInfo(0);
    uint64_t v8 = v5 + *(int *)(a4 + 24);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_100688F80()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for AutomationInfoProperty();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100689188((uint64_t)v1, (uint64_t)v5);
  uint64_t v6 = *((void *)v5 + 2);
  char v7 = v5[24];
  sub_100195B7C(v6, v7);
  sub_100149AE8();
  char v9 = v8;
  sub_10018F6D8(v6, v7);
  sub_10014CE78((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for AutomationInfoProperty);
  if (v9)
  {
    type metadata accessor for JSONEncoder();
    swift_allocObject();
    JSONEncoder.init()();
    type metadata accessor for AutomationInfo(0);
    sub_1006891EC();
    uint64_t v10 = dispatch thunk of JSONEncoder.encode<A>(_:)();
    unint64_t v12 = v11;
    swift_release();
    static String.Encoding.utf8.getter();
    uint64_t v13 = String.init(data:encoding:)();
    uint64_t v15 = v14;
    sub_100318440(v10, v12);
    if (v15)
    {
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v1 = v13;
      v1[1] = v15;
    }
    else
    {
      __break(1u);
      uint64_t result = swift_unexpectedError();
      __break(1u);
    }
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = 0;
    v1[1] = 0xE000000000000000;
  }
  return result;
}

uint64_t sub_100689188(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AutomationInfoProperty();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1006891EC()
{
  unint64_t result = qword_100E88FE8;
  if (!qword_100E88FE8)
  {
    type metadata accessor for AutomationInfo(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E88FE8);
  }
  return result;
}

uint64_t sub_10068923C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E89098);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v22)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E649D0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v5 = result;
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for NextHourPrecipitationStringBuilder();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = sub_1000DF0C4((uint64_t)v21, v22);
    __chkstk_darwin(v7);
    char v9 = (void *)((char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v10 + 16))(v9);
    uint64_t v11 = *v9;
    uint64_t HourPrecipitationDetailInteractor = type metadata accessor for NextHourPrecipitationDetailInteractor();
    v20[3] = HourPrecipitationDetailInteractor;
    void v20[4] = &off_100E238F0;
    v20[0] = v11;
    uint64_t HourPrecipitationDetailModule = type metadata accessor for NextHourPrecipitationDetailModule();
    uint64_t v14 = (void *)swift_allocObject();
    uint64_t v15 = sub_1000DF0C4((uint64_t)v20, HourPrecipitationDetailInteractor);
    __chkstk_darwin(v15);
    uint64_t v17 = (void *)((char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v18 + 16))(v17);
    uint64_t v19 = *v17;
    v14[5] = HourPrecipitationDetailInteractor;
    v14[6] = &off_100E238F0;
    v14[2] = v19;
    v14[7] = v5;
    v14[8] = v6;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v20);
    uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v21);
    a2[3] = HourPrecipitationDetailModule;
    a2[4] = &off_100E2C2E8;
    *a2 = v14;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1006894E0@<X0>(uint64_t *a1@<X8>)
{
  return sub_100689AF8((uint64_t (*)(void))type metadata accessor for NextHourPrecipitationDetailViewStateReducer, (uint64_t)&off_100E188A8, a1);
}

uint64_t sub_100689500()
{
  sub_10017DF08(&qword_100E89090);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E89098);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E890A0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E890A8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E890B0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  type metadata accessor for NextHourPrecipitationStringBuilder();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E890B8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E649D0);
  RegistrationContainer.register<A>(_:name:factory:)();

  return swift_release();
}

uint64_t sub_1006896E8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for Tracker();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  if (result)
  {
    uint64_t v5 = Tracker.chain(name:identifier:)();
    swift_release();
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E647E0);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v8)
    {
      a2[3] = (uint64_t)&type metadata for NextHourPrecipitationDetailTracker;
      a2[4] = (uint64_t)&off_100E39F10;
      uint64_t v6 = swift_allocObject();
      *a2 = v6;
      *(void *)(v6 + 16) = v5;
      return sub_1001262E4(&v7, v6 + 24);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100689824@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v5 = v25;
  if (v25)
  {
    uint64_t v21 = v26;
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E89090);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v24)
    {
      uint64_t v6 = sub_1000DF0C4((uint64_t)v23, v24);
      __chkstk_darwin(v6);
      uint64_t v8 = (_OWORD *)((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(_OWORD *))(v9 + 16))(v8);
      void v22[3] = &type metadata for NextHourPrecipitationDetailTracker;
      v22[4] = &off_100E39F10;
      uint64_t v10 = (_OWORD *)swift_allocObject();
      v22[0] = v10;
      long long v11 = v8[1];
      v10[1] = *v8;
      long long v10[2] = v11;
      v10[3] = v8[2];
      uint64_t HourPrecipitationDetailInteractor = type metadata accessor for NextHourPrecipitationDetailInteractor();
      uint64_t v13 = (void *)swift_allocObject();
      uint64_t v14 = sub_1000DF0C4((uint64_t)v22, (uint64_t)&type metadata for NextHourPrecipitationDetailTracker);
      __chkstk_darwin(v14);
      uint64_t v16 = (_OWORD *)((char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(_OWORD *))(v17 + 16))(v16);
      v13[7] = &type metadata for NextHourPrecipitationDetailTracker;
      v13[8] = &off_100E39F10;
      uint64_t v18 = (_OWORD *)swift_allocObject();
      long long v19 = v16[1];
      v18[1] = *v16;
      void v18[2] = v19;
      v18[3] = v16[2];
      void v13[2] = v5;
      void v13[3] = v21;
      v13[4] = v18;
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v22);
      uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v23);
      a2[3] = HourPrecipitationDetailInteractor;
      a2[4] = &off_100E238F0;
      *a2 = v13;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100689AD8@<X0>(uint64_t *a1@<X8>)
{
  return sub_100689AF8((uint64_t (*)(void))type metadata accessor for NextHourPrecipitationDetailInputFactory, (uint64_t)&off_100E138D0, a1);
}

uint64_t sub_100689AF8@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1(0);
  uint64_t result = swift_allocObject();
  a3[3] = v5;
  a3[4] = a2;
  *a3 = result;
  return result;
}

uint64_t sub_100689B48@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v5)
  {
    unint64_t v4 = sub_10068A0F4();
    a2[3] = (uint64_t)&type metadata for NextHourPrecipitationLeadingValueRule;
    a2[4] = v4;
    uint64_t result = swift_allocObject();
    *a2 = result;
    *(void *)(result + 16) = v5;
    *(_OWORD *)(result + 24) = v6;
    *(void *)(result + 40) = v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100689BF8()
{
  return NextHourPrecipitationStringBuilder.init()();
}

uint64_t sub_100689C30@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E890A8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v9)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for NextHourPrecipitationStringBuilder();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v5 = result;
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for WeatherForecastDescriptionStringBuilder();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    uint64_t v6 = result;
    uint64_t HourPrecipitationDetailViewModelFactory = type metadata accessor for NextHourPrecipitationDetailViewModelFactory();
    swift_allocObject();
    uint64_t result = sub_100350F7C(&v8, v5, v6);
    a2[3] = HourPrecipitationDetailViewModelFactory;
    a2[4] = (uint64_t)&off_100E11F38;
    *a2 = result;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100689D58(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v3 = v18;
  if (!v18)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = v20;
  uint64_t v4 = v21;
  uint64_t v6 = v19;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E890A0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v17)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v7 = *sub_1001B1E64(v16, v17);
  uint64_t HourPrecipitationDetailInputFactory = type metadata accessor for NextHourPrecipitationDetailInputFactory();
  uint64_t v15 = &off_100E138D0;
  v13[0] = v7;
  sub_10020D948((uint64_t)v13, (uint64_t)v12);
  uint64_t v8 = swift_allocObject();
  sub_1001262E4(v12, v8 + 16);
  swift_retain();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v16);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_10068A0AC;
  *(void *)(v9 + 24) = v8;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E890B8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v17)
  {
    uint64_t v10 = *sub_1001B1E64(v16, v17);
    uint64_t HourPrecipitationDetailInputFactory = type metadata accessor for NextHourPrecipitationDetailViewModelFactory();
    uint64_t v15 = &off_100E11F38;
    v13[0] = v10;
    sub_10020D948((uint64_t)v13, (uint64_t)v12);
    uint64_t v11 = swift_allocObject();
    sub_1001262E4(v12, v11 + 16);
    swift_retain();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v16);
    sub_10017DF08(&qword_100E649D0);
    swift_allocObject();
    return sub_10025A918(v3, v6, v5, v4, sub_10025969C, 0, sub_100137F50, v9, sub_10068A0EC, v11);
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_100689FDC(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
}

uint64_t sub_10068A028@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100350FB8(a1, a3);
}

uint64_t sub_10068A074()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);

  return swift_deallocObject();
}

void sub_10068A0AC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100689FDC(a1, (void *)(v2 + 16), a2);
}

uint64_t sub_10068A0B4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10068A0EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10068A028(a1, (void *)(v2 + 16), a2);
}

unint64_t sub_10068A0F4()
{
  unint64_t result = qword_100E890C0;
  if (!qword_100E890C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E890C0);
  }
  return result;
}

uint64_t sub_10068A140()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10068A180()
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 24);

  return swift_deallocObject();
}

id sub_10068A1C4()
{
  sub_10020D948(v0, (uint64_t)v4);
  char v1 = *(unsigned char *)(v0 + 40);
  id v2 = objc_allocWithZone((Class)type metadata accessor for SevereWeatherFeatureView.Coordinator());
  return sub_10068A888((uint64_t)v4, v1);
}

id sub_10068A210()
{
  id v0 = [self systemFontOfSize:60.0];
  char v1 = self;
  id v2 = [v1 configurationWithFont:v0 scale:-1];

  id v3 = [self systemBlueColor];
  id v37 = [v1 configurationWithHierarchicalColor:v3];

  sub_10013CAA4();
  id v39 = v2;
  id v38 = sub_1003C55B4(0x6461622E6C6C6562, 0xEF6C6C69662E6567, v2);
  id v4 = [v38 imageByApplyingSymbolConfiguration:v37];
  uint64_t v5 = self;
  id v6 = [v5 mainBundle];
  sub_10017C720();
  uint64_t v9 = sub_100187EFC(v7, v8, (uint64_t)"Introducing Severe Weather Alerts");
  uint64_t v11 = v10;

  id v12 = [v5 mainBundle];
  sub_10017C720();
  uint64_t v15 = sub_100187EFC(v13, v14, (uint64_t)"Get notifications about important weather events, like flash floods and tornadoes. Available for select countries and regions.");
  uint64_t v17 = v16;

  id v18 = objc_allocWithZone((Class)OBWelcomeController);
  id v36 = v4;
  id v19 = sub_1003C59A8(v9, v11, v15, v17, v4);
  id v20 = [self boldButton];
  uint64_t v21 = sub_10068A6B0();
  sub_1003C5A48(v21, v22, 0, v20);
  sub_10017DF08(&qword_100E89108);
  UIViewControllerRepresentableContext.coordinator.getter();
  [v20 addTarget:v40 action:"continueButtonTapped" forControlEvents:64];

  id v23 = [v19 buttonTray];
  [v23 addButton:v20];

  id v24 = [self linkButton];
  id v25 = [v5 mainBundle];
  sub_10017C720();
  v26._countAndFlagsBits = 0x776F4E20746F4ELL;
  v26._object = (void *)0xE700000000000000;
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  Swift::String v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, (Swift::String_optional)0, (NSBundle)v25, v27, *(Swift::String *)(&v35 - 1));

  sub_1003C5A48(v28._countAndFlagsBits, (uint64_t)v28._object, 0, v24);
  UIViewControllerRepresentableContext.coordinator.getter();
  [v24 addTarget:v40 action:"notNowButtonTapped" forControlEvents:64];

  id v29 = [v19 buttonTray];
  [v29 addButton:v24];

  uint64_t v30 = self;
  NSString v31 = String._bridgeToObjectiveC()();
  id v32 = [v30 linkWithBundleIdentifier:v31];

  id v33 = [v19 buttonTray];
  [v33 setPrivacyLinkController:v32];

  [v19 setModalPresentationStyle:2];
  return v19;
}

uint64_t sub_10068A6B0()
{
  id v0 = [self mainBundle];
  v5._object = (void *)0x8000000100CAD800;
  v1._uint64_t countAndFlagsBits = 0x776F6C6C41;
  v1._object = (void *)0xE500000000000000;
  v2._uint64_t countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v5._uint64_t countAndFlagsBits = 0xD00000000000004DLL;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

id sub_10068A758()
{
  return sub_10068A210();
}

id sub_10068A770@<X0>(void *a1@<X8>)
{
  id result = sub_10068A1C4();
  *a1 = result;
  return result;
}

uint64_t sub_10068A798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10068AC24();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10068A7FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10068AC24();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10068A860()
{
}

id sub_10068A888(uint64_t a1, char a2)
{
  ObjectType = (objc_class *)swift_getObjectType();
  sub_10020D948(a1, (uint64_t)&v2[OBJC_IVAR____TtCV7Weather24SevereWeatherFeatureView11Coordinator_interactor]);
  v2[OBJC_IVAR____TtCV7Weather24SevereWeatherFeatureView11Coordinator_optInUserStatus] = a2;
  v8.receiver = v2;
  v8.super_class = ObjectType;
  id v6 = [super init];
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  return v6;
}

uint64_t sub_10068A90C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtCV7Weather24SevereWeatherFeatureView11Coordinator_interactor + 24);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtCV7Weather24SevereWeatherFeatureView11Coordinator_interactor + 32);
  sub_1001B1E64((void *)(v0 + OBJC_IVAR____TtCV7Weather24SevereWeatherFeatureView11Coordinator_interactor), v1);
  return (*(uint64_t (**)(void, uint64_t, uint64_t))(v2 + 8))(*(unsigned __int8 *)(v0 + OBJC_IVAR____TtCV7Weather24SevereWeatherFeatureView11Coordinator_optInUserStatus), v1, v2);
}

uint64_t sub_10068A9C0()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtCV7Weather24SevereWeatherFeatureView11Coordinator_interactor + 24);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtCV7Weather24SevereWeatherFeatureView11Coordinator_interactor + 32);
  sub_1001B1E64((void *)(v0 + OBJC_IVAR____TtCV7Weather24SevereWeatherFeatureView11Coordinator_interactor), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t type metadata accessor for SevereWeatherFeatureView.Coordinator()
{
  return self;
}

uint64_t initializeWithCopy for SevereWeatherFeatureView(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t assignWithCopy for SevereWeatherFeatureView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for SevereWeatherFeatureView(uint64_t a1, uint64_t a2)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for SevereWeatherFeatureView(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 41))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SevereWeatherFeatureView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)id result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SevereWeatherFeatureView()
{
  return &type metadata for SevereWeatherFeatureView;
}

unint64_t sub_10068AC24()
{
  unint64_t result = qword_100E89100;
  if (!qword_100E89100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89100);
  }
  return result;
}

uint64_t sub_10068AC70()
{
  sub_10068B6CC(v0 + OBJC_IVAR____TtC7Weather19MoonScrubberStorage_selectedDate);

  return swift_deallocClassInstance();
}

uint64_t sub_10068ACD4()
{
  return type metadata accessor for MoonScrubberStorage();
}

uint64_t type metadata accessor for MoonScrubberStorage()
{
  uint64_t result = qword_100E89138;
  if (!qword_100E89138) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10068AD24()
{
  sub_10068ADBC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10068ADBC()
{
  if (!qword_100E74F78)
  {
    type metadata accessor for MoonDetailSelectedDate();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E74F78);
    }
  }
}

uint64_t sub_10068AE14(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x647261776B636162 && a2 == 0xE800000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x64726177726F66 && a2 == 0xE700000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 1701736302 && a2 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_10068AF54(char a1)
{
  if (!a1) {
    return 0x647261776B636162;
  }
  if (a1 == 1) {
    return 0x64726177726F66;
  }
  return 1701736302;
}

uint64_t sub_10068AFA4(void *a1, char a2)
{
  sub_10017DF08(&qword_100E89210);
  sub_100179C0C();
  uint64_t v27 = v5;
  uint64_t v28 = v4;
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v26 = v6;
  sub_10017DF08(&qword_100E89218);
  sub_100179C0C();
  uint64_t v24 = v8;
  uint64_t v25 = v7;
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_10017DF08(&qword_100E89220);
  sub_100179C0C();
  uint64_t v23 = v13;
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = sub_10017DF08(&qword_100E89228);
  sub_100179C0C();
  uint64_t v20 = v19;
  __chkstk_darwin(v21);
  sub_100125FF8();
  sub_1001B1E64(a1, a1[3]);
  sub_10068B9E8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  if (a2)
  {
    if (a2 == 1)
    {
      sub_10068BA80();
      sub_100178FC0();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v11, v25);
    }
    else
    {
      sub_10068BA34();
      sub_100178FC0();
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    }
  }
  else
  {
    sub_10068BACC();
    sub_100178FC0();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v17, v12);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v2, v18);
}

char *sub_10068B220(void *a1)
{
  uint64_t v36 = sub_10017DF08(&qword_100E891D0);
  sub_100179C0C();
  uint64_t v39 = v3;
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v41 = v5;
  sub_10017DF08(&qword_100E891D8);
  sub_100179C0C();
  uint64_t v37 = v7;
  uint64_t v38 = v6;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_10017DF08(&qword_100E891E0);
  sub_100179C0C();
  uint64_t v35 = v12;
  __chkstk_darwin(v13);
  sub_100125FF8();
  uint64_t v14 = sub_10017DF08(&qword_100E891E8);
  sub_100179C0C();
  uint64_t v40 = v15;
  __chkstk_darwin(v16);
  sub_1001626E0();
  uint64_t v19 = (char *)(v18 - v17);
  sub_1001B1E64(a1, a1[3]);
  sub_10068B9E8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v42) {
    goto LABEL_9;
  }
  uint64_t v43 = (uint64_t)a1;
  uint64_t v20 = KeyedDecodingContainer.allKeys.getter();
  uint64_t v21 = *(void *)(v20 + 16);
  if (!v21
    || (uint64_t v22 = v19,
        uint64_t v19 = (char *)*(unsigned __int8 *)(v20 + 32),
        sub_100723214(1, v21, v20, v20 + 32, 0, (2 * v21) | 1),
        uint64_t v24 = v23,
        unint64_t v26 = v25,
        swift_bridgeObjectRelease(),
        v24 != v26 >> 1))
  {
    uint64_t v27 = type metadata accessor for DecodingError();
    swift_allocError();
    id v29 = v28;
    uint64_t v19 = (char *)v28 + *(int *)(sub_10017DF08(&qword_100E67280) + 48);
    *id v29 = &type metadata for MoonScrubberHeaderArrowKind;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, enum case for DecodingError.typeMismatch(_:), v27);
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v30 = sub_100179EA4();
    v31(v30);
    a1 = (void *)v43;
LABEL_9:
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
    return v19;
  }
  if (v19)
  {
    if (v19 == 1)
    {
      sub_10068BA80();
      sub_10018519C();
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v10, v38);
    }
    else
    {
      sub_10068BA34();
      sub_10018519C();
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v36);
    }
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v22, v14);
  }
  else
  {
    sub_10068BACC();
    sub_10018519C();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v1, v11);
    swift_unknownObjectRelease();
    uint64_t v33 = sub_100179EA4();
    v34(v33);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v43);
  return v19;
}

uint64_t sub_10068B6CC(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E67240);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for MoonScrubberHeaderArrowKind()
{
  return &type metadata for MoonScrubberHeaderArrowKind;
}

uint64_t sub_10068B740(uint64_t a1)
{
  unint64_t v2 = sub_10068BACC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10068B77C(uint64_t a1)
{
  unint64_t v2 = sub_10068BACC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10068B7B8()
{
  return sub_10068AF54(*v0);
}

uint64_t sub_10068B7C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10068AE14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10068B7E8(uint64_t a1)
{
  unint64_t v2 = sub_10068B9E8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10068B824(uint64_t a1)
{
  unint64_t v2 = sub_10068B9E8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10068B860(uint64_t a1)
{
  unint64_t v2 = sub_10068BA80();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10068B89C(uint64_t a1)
{
  unint64_t v2 = sub_10068BA80();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10068B8D8(uint64_t a1)
{
  unint64_t v2 = sub_10068BA34();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10068B914(uint64_t a1)
{
  unint64_t v2 = sub_10068BA34();

  return CodingKey.debugDescription.getter(a1, v2);
}

char *sub_10068B950@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10068B220(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_10068B97C(void *a1)
{
  return sub_10068AFA4(a1, *v1);
}

unint64_t sub_10068B99C()
{
  unint64_t result = qword_100E891C8;
  if (!qword_100E891C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E891C8);
  }
  return result;
}

unint64_t sub_10068B9E8()
{
  unint64_t result = qword_100E891F0;
  if (!qword_100E891F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E891F0);
  }
  return result;
}

unint64_t sub_10068BA34()
{
  unint64_t result = qword_100E891F8;
  if (!qword_100E891F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E891F8);
  }
  return result;
}

unint64_t sub_10068BA80()
{
  unint64_t result = qword_100E89200;
  if (!qword_100E89200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89200);
  }
  return result;
}

unint64_t sub_10068BACC()
{
  unint64_t result = qword_100E89208;
  if (!qword_100E89208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89208);
  }
  return result;
}

unsigned char *_s7Weather27MoonScrubberHeaderArrowKindOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10068BBE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MoonScrubberHeaderArrowKind.CodingKeys()
{
  return &type metadata for MoonScrubberHeaderArrowKind.CodingKeys;
}

ValueMetadata *type metadata accessor for MoonScrubberHeaderArrowKind.BackwardCodingKeys()
{
  return &type metadata for MoonScrubberHeaderArrowKind.BackwardCodingKeys;
}

ValueMetadata *type metadata accessor for MoonScrubberHeaderArrowKind.ForwardCodingKeys()
{
  return &type metadata for MoonScrubberHeaderArrowKind.ForwardCodingKeys;
}

ValueMetadata *type metadata accessor for MoonScrubberHeaderArrowKind.NoneCodingKeys()
{
  return &type metadata for MoonScrubberHeaderArrowKind.NoneCodingKeys;
}

unint64_t sub_10068BC50()
{
  unint64_t result = qword_100E89230;
  if (!qword_100E89230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89230);
  }
  return result;
}

unint64_t sub_10068BCA0()
{
  unint64_t result = qword_100E89238;
  if (!qword_100E89238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89238);
  }
  return result;
}

unint64_t sub_10068BCF0()
{
  unint64_t result = qword_100E89240;
  if (!qword_100E89240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89240);
  }
  return result;
}

unint64_t sub_10068BD40()
{
  unint64_t result = qword_100E89248;
  if (!qword_100E89248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89248);
  }
  return result;
}

unint64_t sub_10068BD90()
{
  unint64_t result = qword_100E89250;
  if (!qword_100E89250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89250);
  }
  return result;
}

unint64_t sub_10068BDE0()
{
  unint64_t result = qword_100E89258;
  if (!qword_100E89258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89258);
  }
  return result;
}

unint64_t sub_10068BE30()
{
  unint64_t result = qword_100E89260;
  if (!qword_100E89260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89260);
  }
  return result;
}

unint64_t sub_10068BE80()
{
  unint64_t result = qword_100E89268;
  if (!qword_100E89268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89268);
  }
  return result;
}

unint64_t sub_10068BED0()
{
  unint64_t result = qword_100E89270;
  if (!qword_100E89270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89270);
  }
  return result;
}

uint64_t sub_10068BF1C()
{
  Location.coordinate.getter();
  Location.coordinate.getter();

  return LocationData.init(latitudeDouble:longitudeDouble:)();
}

uint64_t sub_10068BF88(char *a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E89318);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_10016278C();
  uint64_t v6 = v4 - v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v18 - v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v18 - v11;
  uint64_t v13 = sub_10017DF08(&qword_100E89320);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_1001626E0();
  sub_10068C0E0(a1[72], a1[73], v16 - v15);
  sub_10068C1EC(a1[112], a1[113], (uint64_t)v12);
  sub_10068C1EC(a1[152], a1[153], (uint64_t)v9);
  sub_10068C1EC(a1[192], a1[193], v6);
  return ConditionsFeedbackData.init(sunnyReport:cloudCoverReport:rainReport:sleetReport:snowReport:)();
}

uint64_t sub_10068C0E0@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  if (a1)
  {
    switch(a2)
    {
      case 1:
        uint64_t v4 = (unsigned int *)&enum case for CloudCover.partly(_:);
        break;
      case 2:
        uint64_t v4 = (unsigned int *)&enum case for CloudCover.mostly(_:);
        break;
      case 3:
        uint64_t v4 = (unsigned int *)&enum case for CloudCover.overcast(_:);
        break;
      default:
        uint64_t v4 = (unsigned int *)&enum case for CloudCover.enabled(_:);
        break;
    }
    uint64_t v8 = *v4;
    uint64_t v9 = type metadata accessor for CloudCover();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(a3, v8, v9);
    uint64_t v6 = a3;
    uint64_t v7 = 0;
    uint64_t v5 = v9;
  }
  else
  {
    uint64_t v5 = type metadata accessor for CloudCover();
    uint64_t v6 = a3;
    uint64_t v7 = 1;
  }

  return _s7Weather24LocationCompositionStateOwst_0(v6, v7, 1, v5);
}

uint64_t sub_10068C1EC@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  if (a1)
  {
    switch(a2)
    {
      case 1:
      case 4:
      case 7:
        uint64_t v4 = (unsigned int *)&enum case for PrecipitationIntensity.light(_:);
        break;
      case 2:
      case 5:
      case 8:
        uint64_t v4 = (unsigned int *)&enum case for PrecipitationIntensity.moderate(_:);
        break;
      case 3:
      case 6:
      case 9:
        uint64_t v4 = (unsigned int *)&enum case for PrecipitationIntensity.heavy(_:);
        break;
      default:
        uint64_t v4 = (unsigned int *)&enum case for PrecipitationIntensity.enabled(_:);
        break;
    }
    uint64_t v8 = *v4;
    uint64_t v9 = type metadata accessor for PrecipitationIntensity();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(a3, v8, v9);
    uint64_t v6 = a3;
    uint64_t v7 = 0;
    uint64_t v5 = v9;
  }
  else
  {
    uint64_t v5 = type metadata accessor for PrecipitationIntensity();
    uint64_t v6 = a3;
    uint64_t v7 = 1;
  }

  return _s7Weather24LocationCompositionStateOwst_0(v6, v7, 1, v5);
}

uint64_t sub_10068C310@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v27[1] = a3;
  v27[2] = a2;
  uint64_t v28 = sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_10016279C();
  uint64_t v9 = type metadata accessor for CurrentWeather();
  sub_100179C0C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_10017E3A0();
  uint64_t v13 = type metadata accessor for TemperatureFeedback();
  sub_100179C0C();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  sub_10016278C();
  __n128 v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)v27 - v19;
  (*(void (**)(char *, void, uint64_t, __n128))(v15 + 104))((char *)v27 - v19, *(unsigned int *)*(&off_100E1F278 + a1), v13, v18);
  sub_100162808();
  v21();
  WeatherDataModel.currentWeather.getter();
  CurrentWeather.dewPoint.getter();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v4, v9);
  uint64_t v22 = v28;
  Measurement.value.getter();
  double v24 = v23;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v3, v22);
  double v26 = round(v24);
  if ((~*(void *)&v26 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v26 <= -2147483650.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v26 < 2147483650.0)
  {
    TemperatureFeedbackData.init(reportedTemperature:currrentDewPoint:)();
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v20, v13);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_10068C55C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v60 = a1;
  v53[1] = a3;
  uint64_t v62 = type metadata accessor for WindFeedback();
  sub_100179C0C();
  uint64_t v66 = v4;
  __chkstk_darwin(v5);
  sub_100162EF8();
  uint64_t v64 = v6;
  sub_1001626D4();
  __chkstk_darwin(v7);
  uint64_t v65 = (char *)v53 - v8;
  uint64_t v9 = sub_10017DF08(&qword_100E6ECB0);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = type metadata accessor for Wind();
  sub_100179C0C();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v58 = v18;
  sub_1001626D4();
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)v53 - v20;
  uint64_t v22 = type metadata accessor for CurrentWeather();
  sub_100179C0C();
  uint64_t v24 = v23;
  __chkstk_darwin(v25);
  sub_100162EF8();
  uint64_t v56 = v26;
  sub_1001626D4();
  __chkstk_darwin(v27);
  id v29 = (char *)v53 - v28;
  uint64_t v30 = sub_10017DF08(&qword_100E6D0A8);
  sub_100179C0C();
  uint64_t v63 = v31;
  __chkstk_darwin(v32);
  sub_100162EF8();
  uint64_t v55 = v33;
  sub_1001626D4();
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)v53 - v35;
  uint64_t v61 = a2;
  WeatherDataModel.currentWeather.getter();
  CurrentWeather.wind.getter();
  uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  uint64_t v57 = v22;
  uint64_t v54 = v37;
  v37((uint64_t)v29, v22);
  Wind.gust.getter();
  uint64_t v38 = *(void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v59 = v14;
  v38(v21, v14);
  int v39 = _s7Weather24LocationCompositionStateOwet_0(v13, 1, v30);
  if (v39 == 1)
  {
    sub_1000F3400(v13, &qword_100E6ECB0);
    v53[0] = 0;
    uint64_t v40 = v63;
    goto LABEL_7;
  }
  uint64_t v40 = v63;
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v36, v13, v30);
  Measurement.value.getter();
  double v42 = v41;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v36, v30);
  if ((~*(void *)&v42 & 0x7FF0000000000000) == 0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v42 <= -2147483650.0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v42 < 2147483650.0)
  {
    v53[0] = (int)v42;
LABEL_7:
    uint64_t v44 = v62;
    (*(void (**)(char *, void, uint64_t))(v66 + 104))(v65, *(unsigned int *)*(&off_100E1F290 + (char)v60), v62);
    sub_100162808();
    v47(v45, v46);
    uint64_t v48 = v56;
    WeatherDataModel.currentWeather.getter();
    uint64_t v49 = v58;
    CurrentWeather.wind.getter();
    v54(v48, v57);
    uint64_t v50 = v55;
    Wind.speed.getter();
    v38(v49, v59);
    Measurement.value.getter();
    double v52 = v51;
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8))(v50, v30);
    if ((~*(void *)&v52 & 0x7FF0000000000000) != 0)
    {
      if (v52 > -2147483650.0)
      {
        if (v52 < 2147483650.0)
        {
          BOOL v67 = v39 == 1;
          WindFeedbackData.init(reportedWind:currrentWind:currrentWindGust:)();
          return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v65, v44);
        }
        goto LABEL_13;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_10068CA0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  v31[0] = a1;
  uint64_t v5 = type metadata accessor for AQIFeedback();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_100162EF8();
  v31[1] = v9;
  sub_1001626D4();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v31 - v11;
  uint64_t v13 = sub_10017DF08(&qword_100E71950);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_10016279C();
  uint64_t v15 = sub_10017DF08(&qword_100E85FB8);
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_10017E3A0();
  uint64_t v17 = type metadata accessor for AQIData();
  sub_100179C0C();
  uint64_t v19 = v18;
  __chkstk_darwin(v20);
  sub_10016278C();
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)v31 - v22;
  uint64_t v24 = type metadata accessor for WeatherDataModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v3, v32, v24);
  _s7Weather24LocationCompositionStateOwst_0(v3, 0, 1, v24);
  sub_10087B12C(v3, v4);
  if (_s7Weather24LocationCompositionStateOwet_0(v4, 1, v17) == 1)
  {
    sub_1000F3400(v4, &qword_100E85FB8);
    uint64_t v25 = 1;
    uint64_t v26 = v33;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(v23, v4, v17);
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v12, *(unsigned int *)*(&off_100E1F2A8 + SLOBYTE(v31[0])), v5);
    sub_100162808();
    v27();
    sub_100162808();
    v28();
    uint64_t v26 = v33;
    AQIFeedbackData.init(reportedAQI:currentAQI:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v5);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v23, v17);
    uint64_t v25 = 0;
  }
  uint64_t v29 = type metadata accessor for AQIFeedbackData();
  return _s7Weather24LocationCompositionStateOwst_0(v26, v25, 1, v29);
}

uint64_t sub_10068CD10(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    char v8 = 0;
    char v9 = 0;
    char v6 = 0;
LABEL_26:
    char v14 = 0;
LABEL_27:
    char v16 = 0;
LABEL_28:
    char v17 = 0;
    goto LABEL_29;
  }
  Hasher.init(_seed:)();
  String.hash(into:)();
  Hasher._finalize()();
  sub_100162AC4();
  sub_1001854B8();
  if ((v4 >> v1))
  {
    uint64_t v5 = ~v3;
    while (2)
    {
      switch(*(unsigned char *)(*(void *)(a1 + 48) + v1))
      {
        case 1:
          goto LABEL_9;
        case 2:
          sub_1001A4770();
          goto LABEL_9;
        case 3:
          sub_10019FEEC();
          goto LABEL_9;
        case 4:
          sub_10019D70C();
          goto LABEL_9;
        case 5:
          sub_1001892DC();
LABEL_9:
          char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v6) {
            goto LABEL_14;
          }
          uint64_t v1 = (v1 + 1) & v5;
          sub_100186AC8();
          if (((v7 >> v1) & 1) == 0) {
            goto LABEL_14;
          }
          continue;
        default:
          swift_bridgeObjectRelease();
          char v6 = 1;
          goto LABEL_14;
      }
    }
  }
  char v6 = 0;
LABEL_14:
  if (!*(void *)(a1 + 16))
  {
    char v8 = 0;
    char v9 = 0;
    goto LABEL_26;
  }
  sub_1001D1BD8();
  String.hash(into:)();
  Swift::Int v10 = Hasher._finalize()() & ~(-1 << *(unsigned char *)(a1 + 32));
  sub_1001854B8();
  if ((v12 >> v10))
  {
    uint64_t v13 = ~v11;
    while (2)
    {
      switch(*(unsigned char *)(*(void *)(a1 + 48) + v10))
      {
        case 1:
          swift_bridgeObjectRelease();
          char v14 = 1;
          goto LABEL_33;
        case 2:
          sub_1001A4770();
          goto LABEL_22;
        case 3:
          sub_10019FEEC();
          goto LABEL_22;
        case 4:
          sub_10019D70C();
          goto LABEL_22;
        case 5:
          sub_1001892DC();
          goto LABEL_22;
        default:
LABEL_22:
          char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v14) {
            goto LABEL_33;
          }
          Swift::Int v10 = (v10 + 1) & v13;
          sub_100186AC8();
          if (((v15 >> v10) & 1) == 0) {
            goto LABEL_33;
          }
          continue;
      }
    }
  }
  char v14 = 0;
LABEL_33:
  if (!*(void *)(a1 + 16))
  {
    char v8 = 0;
    char v9 = 0;
    goto LABEL_27;
  }
  sub_1001D1BD8();
  String.hash(into:)();
  Swift::Int v18 = Hasher._finalize()() & ~(-1 << *(unsigned char *)(a1 + 32));
  sub_1001854B8();
  if ((v20 >> v18))
  {
    uint64_t v21 = ~v19;
    while (2)
    {
      switch(*(unsigned char *)(*(void *)(a1 + 48) + v18))
      {
        case 1:
          sub_10018A9B8();
          goto LABEL_41;
        case 2:
          sub_1001A4770();
          goto LABEL_41;
        case 3:
          sub_10019FEEC();
          goto LABEL_41;
        case 4:
          swift_bridgeObjectRelease();
          char v9 = 1;
          goto LABEL_46;
        case 5:
          sub_1001892DC();
          goto LABEL_41;
        default:
LABEL_41:
          char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v9) {
            goto LABEL_46;
          }
          Swift::Int v18 = (v18 + 1) & v21;
          sub_100186AC8();
          if (((v22 >> v18) & 1) == 0) {
            goto LABEL_46;
          }
          continue;
      }
    }
  }
  char v9 = 0;
LABEL_46:
  if (!*(void *)(a1 + 16))
  {
    char v8 = 0;
    goto LABEL_27;
  }
  sub_1001D1BD8();
  String.hash(into:)();
  Swift::Int v23 = Hasher._finalize()() & ~(-1 << *(unsigned char *)(a1 + 32));
  sub_1001854B8();
  if ((v25 >> v23))
  {
    int v26 = ~v24;
    while (2)
    {
      sub_100185BAC();
      switch(v27)
      {
        case 1:
          sub_10017F4D8();
          goto LABEL_54;
        case 2:
          swift_bridgeObjectRelease();
          char v16 = 1;
          goto LABEL_59;
        case 3:
          sub_10019FEEC();
          goto LABEL_54;
        case 4:
          sub_10019D70C();
          goto LABEL_54;
        case 5:
          sub_1001892DC();
          goto LABEL_54;
        default:
LABEL_54:
          char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v16) {
            goto LABEL_59;
          }
          LODWORD(v23) = (v23 + 1) & v26;
          sub_100186AC8();
          if (((v28 >> v23) & 1) == 0) {
            goto LABEL_59;
          }
          continue;
      }
    }
  }
  char v16 = 0;
LABEL_59:
  if (!*(void *)(a1 + 16))
  {
    char v8 = 0;
    goto LABEL_28;
  }
  sub_1001D1BD8();
  String.hash(into:)();
  Swift::Int v29 = Hasher._finalize()() & ~(-1 << *(unsigned char *)(a1 + 32));
  sub_1001854B8();
  if ((v31 >> v29))
  {
    uint64_t v32 = ~v30;
    while (2)
    {
      switch(*(unsigned char *)(*(void *)(a1 + 48) + v29))
      {
        case 1:
          sub_10018A9B8();
          goto LABEL_67;
        case 2:
          sub_1001A4770();
          goto LABEL_67;
        case 3:
          swift_bridgeObjectRelease();
          char v8 = 1;
          goto LABEL_73;
        case 4:
          sub_10019D70C();
          goto LABEL_67;
        case 5:
          sub_1001892DC();
          goto LABEL_67;
        default:
LABEL_67:
          char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v8) {
            goto LABEL_73;
          }
          Swift::Int v29 = (v29 + 1) & v32;
          sub_100186AC8();
          if (((v33 >> v29) & 1) == 0) {
            goto LABEL_73;
          }
          continue;
      }
    }
  }
  char v8 = 0;
LABEL_73:
  if (*(void *)(a1 + 16))
  {
    sub_1001D1BD8();
    String.hash(into:)();
    Swift::Int v34 = Hasher._finalize()() & ~(-1 << *(unsigned char *)(a1 + 32));
    sub_1001854B8();
    if ((v36 >> v34))
    {
      uint64_t v39 = ~v35;
      while (2)
      {
        switch(*(unsigned char *)(*(void *)(a1 + 48) + v34))
        {
          case 1:
            sub_10017F4D8();
            goto LABEL_78;
          case 5:
            swift_bridgeObjectRelease();
            char v17 = 1;
            goto LABEL_29;
          default:
LABEL_78:
            char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v17) {
              goto LABEL_29;
            }
            Swift::Int v34 = (v34 + 1) & v39;
            sub_100186AC8();
            if (((v37 >> v34) & 1) == 0) {
              goto LABEL_29;
            }
            continue;
        }
      }
    }
  }
  char v17 = 0;
LABEL_29:

  return OtherConditionsFeedbackData.init(rainbowsReport:lightningReport:fogReport:hailReport:smokeReport:hazeReport:)(v6 & 1, v14 & 1, v9 & 1, v16 & 1, v8 & 1, v17 & 1);
}

uint64_t sub_10068D4B4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    char v7 = 0;
    char v40 = 0;
    char v8 = 0;
    char v6 = 0;
LABEL_48:
    char v17 = 0;
LABEL_49:
    char v41 = 0;
    goto LABEL_50;
  }
  sub_1001D1BD8();
  String.hash(into:)();
  Hasher._finalize()();
  sub_100162AC4();
  uint64_t v4 = a1 + 56;
  if ((*(void *)(a1 + 56 + ((v1 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v1))
  {
    uint64_t v5 = ~v3;
    while (2)
    {
      switch(*(unsigned char *)(*(void *)(a1 + 48) + v1))
      {
        case 1:
          goto LABEL_12;
        case 2:
          sub_100163760();
          goto LABEL_12;
        case 3:
          sub_10019EF40();
          goto LABEL_12;
        case 4:
          sub_100183D70();
          goto LABEL_12;
        case 5:
          sub_1001A2334();
          goto LABEL_12;
        case 6:
          sub_10017E76C();
          goto LABEL_12;
        case 7:
          sub_100181584();
LABEL_12:
          char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v6) {
            goto LABEL_17;
          }
          unint64_t v1 = (v1 + 1) & v5;
          if (((*(void *)(v4 + ((v1 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v1) & 1) == 0) {
            goto LABEL_17;
          }
          continue;
        default:
          swift_bridgeObjectRelease();
          char v6 = 1;
          goto LABEL_17;
      }
    }
  }
  char v6 = 0;
LABEL_17:
  if (!*(void *)(a1 + 16))
  {
    char v7 = 0;
    char v40 = 0;
    char v8 = 0;
    goto LABEL_48;
  }
  sub_1001D1BD8();
  String.hash(into:)();
  Swift::Int v9 = Hasher._finalize()();
  uint64_t v10 = -1 << *(unsigned char *)(a1 + 32);
  unint64_t v11 = v9 & ~v10;
  if ((*(void *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
  {
    uint64_t v12 = ~v10;
    while (2)
    {
      switch(*(unsigned char *)(*(void *)(a1 + 48) + v11))
      {
        case 1:
          swift_bridgeObjectRelease();
          char v8 = 1;
          goto LABEL_33;
        case 2:
          sub_100163760();
          goto LABEL_28;
        case 3:
          sub_10019EF40();
          goto LABEL_28;
        case 4:
          sub_100183D70();
          goto LABEL_28;
        case 5:
          sub_1001A2334();
          goto LABEL_28;
        case 6:
          sub_10017E76C();
          goto LABEL_28;
        case 7:
          sub_100181584();
          goto LABEL_28;
        default:
LABEL_28:
          char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v8) {
            goto LABEL_33;
          }
          unint64_t v11 = (v11 + 1) & v12;
          if (((*(void *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
            goto LABEL_33;
          }
          continue;
      }
    }
  }
  char v8 = 0;
LABEL_33:
  if (!*(void *)(a1 + 16))
  {
    char v7 = 0;
    char v40 = 0;
    goto LABEL_48;
  }
  sub_1001D1BD8();
  String.hash(into:)();
  Swift::Int v13 = Hasher._finalize()();
  uint64_t v14 = -1 << *(unsigned char *)(a1 + 32);
  unint64_t v15 = v13 & ~v14;
  if ((*(void *)(v4 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
  {
    uint64_t v16 = ~v14;
    while (2)
    {
      switch(*(unsigned char *)(*(void *)(a1 + 48) + v15))
      {
        case 1:
          sub_1001A0C08();
          goto LABEL_44;
        case 2:
          swift_bridgeObjectRelease();
          char v17 = 1;
          goto LABEL_69;
        case 3:
          sub_10019EF40();
          goto LABEL_44;
        case 4:
          sub_100183D70();
          goto LABEL_44;
        case 5:
          sub_1001A2334();
          goto LABEL_44;
        case 6:
          sub_10017E76C();
          goto LABEL_44;
        case 7:
          sub_100181584();
          goto LABEL_44;
        default:
LABEL_44:
          char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v17) {
            goto LABEL_69;
          }
          unint64_t v15 = (v15 + 1) & v16;
          if (((*(void *)(v4 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            goto LABEL_69;
          }
          continue;
      }
    }
  }
  char v17 = 0;
LABEL_69:
  if (!*(void *)(a1 + 16))
  {
    char v7 = 0;
    char v40 = 0;
    goto LABEL_49;
  }
  sub_1001D1BD8();
  String.hash(into:)();
  Hasher._finalize()();
  sub_10017D250();
  if (v25)
  {
    while (2)
    {
      sub_100185BAC();
      switch(v26)
      {
        case 1:
          sub_1001A2D70();
          goto LABEL_79;
        case 2:
          sub_100163760();
          goto LABEL_79;
        case 3:
          swift_bridgeObjectRelease();
          char v27 = 1;
          goto LABEL_84;
        case 4:
          sub_100183D70();
          goto LABEL_79;
        case 5:
          sub_1001A2334();
          goto LABEL_79;
        case 6:
          sub_10017E76C();
          goto LABEL_79;
        case 7:
          sub_100181584();
          goto LABEL_79;
        default:
LABEL_79:
          char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_84;
          }
          sub_10017A6BC();
          if ((v28 & 1) == 0) {
            goto LABEL_84;
          }
          continue;
      }
    }
  }
  char v27 = 0;
LABEL_84:
  char v40 = v27;
  if (!*(void *)(a1 + 16))
  {
    char v7 = 0;
    goto LABEL_49;
  }
  sub_1001D1BD8();
  String.hash(into:)();
  Hasher._finalize()();
  sub_10017D250();
  if (v29)
  {
    while (2)
    {
      sub_100185BAC();
      switch(v30)
      {
        case 1:
          sub_1001A0C08();
          goto LABEL_93;
        case 2:
          sub_100163760();
          goto LABEL_93;
        case 3:
          sub_10019EF40();
          goto LABEL_93;
        case 4:
          swift_bridgeObjectRelease();
          char v41 = 1;
          goto LABEL_98;
        case 5:
          sub_1001A2334();
          goto LABEL_93;
        case 6:
          sub_10017E76C();
          goto LABEL_93;
        case 7:
          sub_100181584();
          goto LABEL_93;
        default:
LABEL_93:
          char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          char v41 = v31;
          if (v31) {
            goto LABEL_98;
          }
          sub_10017A6BC();
          if ((v32 & 1) == 0) {
            goto LABEL_98;
          }
          continue;
      }
    }
  }
  char v41 = 0;
LABEL_98:
  if (*(void *)(a1 + 16))
  {
    sub_1001D1BD8();
    String.hash(into:)();
    Hasher._finalize()();
    sub_10017D250();
    if (v33)
    {
      while (2)
      {
        sub_100185BAC();
        switch(v34)
        {
          case 1:
            sub_1001A0C08();
            goto LABEL_108;
          case 2:
            goto LABEL_108;
          case 3:
            sub_10019EF40();
            goto LABEL_108;
          case 4:
            sub_100183D70();
            goto LABEL_108;
          case 5:
            swift_bridgeObjectRelease();
            char v7 = 1;
            goto LABEL_115;
          case 6:
            sub_10017E76C();
            goto LABEL_108;
          case 7:
            sub_100181584();
            goto LABEL_108;
          default:
            sub_100183140();
LABEL_108:
            char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v7) {
              goto LABEL_115;
            }
            sub_10017A6BC();
            if ((v35 & 1) == 0) {
              goto LABEL_115;
            }
            continue;
        }
      }
    }
    char v7 = 0;
LABEL_115:
    if (*(void *)(a1 + 16))
    {
      sub_1001D1BD8();
      String.hash(into:)();
      Hasher._finalize()();
      sub_10017D250();
      if (v36)
      {
        while (2)
        {
          sub_100185BAC();
          switch(v37)
          {
            case 1:
              sub_1001A0C08();
              goto LABEL_124;
            case 2:
              sub_100163760();
              goto LABEL_124;
            case 3:
              sub_10019EF40();
              goto LABEL_124;
            case 4:
              goto LABEL_124;
            case 5:
              sub_1001A2334();
              goto LABEL_124;
            case 6:
              swift_bridgeObjectRelease();
              char v18 = 1;
              goto LABEL_51;
            case 7:
              sub_100181584();
              goto LABEL_124;
            default:
              sub_100183140();
LABEL_124:
              char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              if (v18) {
                goto LABEL_51;
              }
              sub_10017A6BC();
              if ((v38 & 1) == 0) {
                goto LABEL_51;
              }
              continue;
          }
        }
      }
    }
  }
  else
  {
    char v7 = 0;
  }
LABEL_50:
  char v18 = 0;
LABEL_51:
  if (*(void *)(a1 + 16))
  {
    sub_1001D1BD8();
    String.hash(into:)();
    Swift::Int v19 = Hasher._finalize()();
    uint64_t v20 = -1 << *(unsigned char *)(a1 + 32);
    unint64_t v21 = v19 & ~v20;
    if ((*(void *)(a1 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21))
    {
      uint64_t v22 = ~v20;
      while (2)
      {
        sub_100185BAC();
        switch(v23)
        {
          case 1:
            sub_1001A2D70();
            goto LABEL_61;
          case 2:
            sub_100163760();
            goto LABEL_61;
          case 3:
            sub_10019EF40();
            goto LABEL_61;
          case 4:
            sub_100183D70();
            goto LABEL_61;
          case 5:
            sub_1001A2334();
            goto LABEL_61;
          case 6:
            sub_10017E76C();
            goto LABEL_61;
          case 7:
            swift_bridgeObjectRelease();
            char v24 = 1;
            goto LABEL_65;
          default:
LABEL_61:
            char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v24) {
              goto LABEL_65;
            }
            unint64_t v21 = (v21 + 1) & v22;
            if (((*(void *)(a1 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
              goto LABEL_65;
            }
            continue;
        }
      }
    }
  }
  char v24 = 0;
LABEL_65:

  return DescriptionFeedbackData.init(pleasantReport:unpleasantReport:hotReport:chillyReport:muggyReport:dryReport:windyReport:calmReport:)(v6 & 1, v8 & 1, v17 & 1, v40 & 1, v41 & 1, v7 & 1, v18 & 1, v24 & 1);
}

uint64_t sub_10068DEC4@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for WeatherDataModel();
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_100162EF8();
  sub_1001626D4();
  __chkstk_darwin(v3);
  uint64_t v4 = type metadata accessor for String.Encoding();
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v6 = type metadata accessor for JSONEncoder.OutputFormatting();
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_1001626E0();
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  static JSONEncoder.OutputFormatting.prettyPrinted.getter();
  dispatch thunk of JSONEncoder.outputFormatting.setter();
  sub_10068E29C();
  uint64_t v8 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  unint64_t v10 = v9;
  static String.Encoding.utf8.getter();
  uint64_t result = String.init(data:encoding:)();
  if (v12)
  {
    WeatherJSONData.init(json:)();
    sub_100318440(v8, v10);
    swift_release();
    uint64_t v13 = type metadata accessor for WeatherJSONData();
    return _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, v13);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for ReportWeatherDataFactory()
{
  return self;
}

unint64_t sub_10068E29C()
{
  unint64_t result = qword_100E89310;
  if (!qword_100E89310)
  {
    type metadata accessor for WeatherDataModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89310);
  }
  return result;
}

uint64_t sub_10068E2EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10017DF08(&qword_100E85920);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  unint64_t v9 = &v13[-v8];
  uint64_t v10 = v2 + OBJC_IVAR____TtC7Weather31LocationPreviewViewModelFactory____lazy_storage___locationAnimationKind;
  swift_beginAccess();
  sub_10006DF38(v10, (uint64_t)v9, &qword_100E85920);
  uint64_t v11 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11) != 1) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, v9, v11);
  }
  sub_100178110((uint64_t)v9, &qword_100E85920);
  static Settings.VFX.animatedBackgrounds.getter();
  Settings.VFX.AnimatedBackgrounds.locationAnimationKind.getter();
  swift_release();
  sub_1006904BC();
  Configurable.setting<A>(_:)();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v7, a1, v11);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v11);
  swift_beginAccess();
  sub_1001DF004((uint64_t)v7, v10, &qword_100E85920);
  return swift_endAccess();
}

uint64_t sub_10068E51C()
{
  uint64_t v1 = OBJC_IVAR____TtC7Weather31LocationPreviewViewModelFactory____lazy_storage___permitDuplicateLocations;
  int v2 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC7Weather31LocationPreviewViewModelFactory____lazy_storage___permitDuplicateLocations);
  if (v2 != 2) {
    return v2 & 1;
  }
  if (qword_100E62A60 != -1) {
    swift_once();
  }
  sub_1006904BC();
  Configurable.setting<A>(_:)();
  uint64_t result = v4;
  *(unsigned char *)(v0 + v1) = v4;
  return result;
}

uint64_t sub_10068E5E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v96 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v93 = v5;
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v95 = v7;
  type metadata accessor for LocationPreviewModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v10 = sub_100109328(v9);
  type metadata accessor for LocationPreviewModalViewModel(v10);
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_100109314();
  sub_100109328(v12);
  uint64_t v13 = type metadata accessor for WeatherConditionBackgroundModel();
  sub_100179C0C();
  uint64_t v87 = v14;
  __chkstk_darwin(v15);
  sub_100109314();
  sub_100109328(v16);
  uint64_t v17 = type metadata accessor for PreviewLocation();
  __chkstk_darwin(v17 - 8);
  sub_100109314();
  sub_100109328(v18);
  type metadata accessor for WeatherConditionBackgroundOptions.DisplayLocation();
  sub_100179C0C();
  __chkstk_darwin(v19);
  sub_100109314();
  sub_100109328(v20);
  type metadata accessor for WeatherConditionBackgroundConfig.CameraPositionType();
  sub_100179C0C();
  __chkstk_darwin(v21);
  sub_100109314();
  sub_100109328(v22);
  type metadata accessor for VFXEffectViewID();
  sub_100179C0C();
  __chkstk_darwin(v23);
  sub_100109314();
  sub_100109328(v24);
  type metadata accessor for WeatherConditionBackgroundOptions();
  sub_100179C0C();
  __chkstk_darwin(v25);
  sub_100109314();
  uint64_t v90 = v26;
  uint64_t v27 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind();
  sub_100179C0C();
  uint64_t v29 = v28;
  __chkstk_darwin(v30);
  sub_1001626E0();
  uint64_t v33 = v32 - v31;
  type metadata accessor for BackgroundAnimationKind();
  sub_100179C0C();
  __chkstk_darwin(v34);
  sub_100109314();
  uint64_t v91 = v35;
  uint64_t v36 = type metadata accessor for LocationPreviewInput(0);
  __chkstk_darwin(v36 - 8);
  sub_1001626E0();
  uint64_t v39 = v38 - v37;
  uint64_t v40 = type metadata accessor for LocationPreviewContentInput(0);
  sub_100162E4C();
  __chkstk_darwin(v41);
  sub_1001626E0();
  uint64_t v44 = v43 - v42;
  sub_100690408(a1, v39, (void (*)(void))type metadata accessor for LocationPreviewInput);
  uint64_t v89 = v40;
  if (_s7Weather24LocationCompositionStateOwet_0(v39, 1, v40) == 1)
  {
    sub_10069050C(v39, (void (*)(void))type metadata accessor for LocationPreviewInput);
    uint64_t v45 = type metadata accessor for LocationPreviewViewContentModel(0);
    uint64_t v46 = a2;
    uint64_t v47 = 1;
  }
  else
  {
    sub_10069045C(v39, v44, (void (*)(void))type metadata accessor for LocationPreviewContentInput);
    sub_10068E2EC(v33);
    int v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 88))(v33, v27);
    uint64_t v81 = v2;
    if (v48 == enum case for Settings.VFX.AnimatedBackgrounds.AnimationKind.vfx(_:))
    {
      uint64_t v49 = v40;
      *uint64_t v91 = (*(unsigned char *)(v44 + *(int *)(v40 + 24)) & 1) == 0;
      sub_1001A0C24();
      v51();
    }
    else
    {
      if (v48 == enum case for Settings.VFX.AnimatedBackgrounds.AnimationKind.mica(_:))
      {
        sub_1001A0C24();
        v50();
      }
      else
      {
        *uint64_t v91 = 1;
        sub_1001A0C24();
        v52();
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v33, v27);
      }
      uint64_t v49 = v40;
    }
    uint64_t v82 = v13;
    uint64_t v83 = (void *)v44;
    uint64_t v53 = *(void *)(v44 + *(int *)(v49 + 28));
    uint64_t v54 = *(void *)(v53 + 16);
    if (v54)
    {
      uint64_t v80 = a2;
      v98[0] = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_1001EA6A0(0, v54, 0);
      uint64_t v55 = v93 + 16;
      uint64_t v94 = *(void (**)(uint64_t, uint64_t, uint64_t))(v93 + 16);
      uint64_t v56 = v53 + ((*(unsigned __int8 *)(v55 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 64));
      uint64_t v92 = *(void *)(v55 + 56);
      uint64_t v57 = (void (**)(uint64_t, uint64_t))(v55 - 8);
      do
      {
        v94(v95, v56, v96);
        uint64_t v58 = Location.Identifier.uniqueID.getter();
        uint64_t v60 = v59;
        (*v57)(v95, v96);
        uint64_t v61 = v98[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1001EA6A0(0, *(void *)(v98[0] + 16) + 1, 1);
          uint64_t v61 = v98[0];
        }
        unint64_t v63 = *(void *)(v61 + 16);
        unint64_t v62 = *(void *)(v61 + 24);
        if (v63 >= v62 >> 1)
        {
          sub_1001EA6A0(v62 > 1, v63 + 1, 1);
          uint64_t v61 = v98[0];
        }
        *(void *)(v61 + 16) = v63 + 1;
        uint64_t v64 = v61 + 16 * v63;
        *(void *)(v64 + 32) = v58;
        *(void *)(v64 + 40) = v60;
        v56 += v92;
        --v54;
      }
      while (v54);
      swift_bridgeObjectRelease();
      a2 = v80;
    }
    sub_10017E1B0();
    v65();
    sub_10017E1B0();
    v66();
    sub_10017E1B0();
    v67();
    uint64_t v68 = self;
    id v69 = [v68 sharedApplication];
    UIApplication.expectedWindow.getter();

    sub_1001B1E64(v98, v98[3]);
    dispatch thunk of WindowType.bounds.getter();
    id v70 = [v68 sharedApplication];
    UIApplication.expectedWindow.getter();

    sub_1001B1E64(v97, v97[3]);
    dispatch thunk of WindowType.displayScale.getter();
    WeatherConditionBackgroundOptions.init(locationIDs:applyMask:applyLegibilityScrim:effectViewID:canShowCollisionLayer:cameraPositionType:displayLocation:windowBounds:displayScale:locationViewerOrientation:)();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v97);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v98);
    sub_100690408((uint64_t)v83, v85, (void (*)(void))type metadata accessor for PreviewLocation);
    sub_10068F1C8(v83, v81, (uint64_t)v91, v90, v86);
    char v71 = sub_10069000C(v81);
    char v72 = *((unsigned char *)v83 + *(int *)(v89 + 36)) ^ 1;
    sub_100690408((uint64_t)v83 + *(int *)(v89 + 20), v84, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 7u:
      case 8u:
        sub_1001800E4();
        swift_storeEnumTagMultiPayload();
        sub_10069050C(v84, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
        goto LABEL_26;
      case 6u:
        sub_10069045C(v84, v88, (void (*)(void))type metadata accessor for NewsArticle);
        sub_1001800E4();
        goto LABEL_25;
      case 9u:
        sub_1001800E4();
        goto LABEL_25;
      default:
        type metadata accessor for URL();
        sub_100162E4C();
        (*(void (**)())(v73 + 32))();
        sub_1001800E4();
LABEL_25:
        swift_storeEnumTagMultiPayload();
LABEL_26:
        sub_1001B1E64((void *)(v81 + 176), *(void *)(v81 + 200));
        swift_bridgeObjectRetain();
        BOOL v74 = sub_10056D6D4(v85);
        swift_bridgeObjectRelease();
        sub_100162F0C();
        v75();
        sub_100162F0C();
        v76();
        sub_10069050C((uint64_t)v83, (void (*)(void))type metadata accessor for LocationPreviewContentInput);
        sub_10069045C(v85, a2, (void (*)(void))type metadata accessor for PreviewLocation);
        uint64_t v77 = (int *)type metadata accessor for LocationPreviewViewContentModel(0);
        *(unsigned char *)(a2 + v77[5]) = v71 & 1;
        *(unsigned char *)(a2 + v77[6]) = v74;
        *(unsigned char *)(a2 + v77[7]) = v72 & 1;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 32))(a2 + v77[8], v86, v82);
        sub_10069045C(v88, a2 + v77[9], (void (*)(void))type metadata accessor for LocationPreviewModalViewModel);
        uint64_t v46 = a2;
        uint64_t v47 = 0;
        uint64_t v45 = (uint64_t)v77;
        break;
    }
  }
  _s7Weather24LocationCompositionStateOwst_0(v46, v47, 1, v45);
  uint64_t v78 = type metadata accessor for LocationPreviewViewModel(0);
  return _s7Weather24LocationCompositionStateOwst_0(a2, 0, 1, v78);
}

uint64_t sub_10068F1C8@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v97 = a4;
  uint64_t v113 = a3;
  uint64_t v107 = a2;
  uint64_t v104 = a1;
  uint64_t v116 = a5;
  uint64_t v5 = sub_10017DF08(&qword_100E63740);
  __chkstk_darwin(v5 - 8);
  uint64_t v114 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v7 - 8);
  uint64_t v115 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E71950);
  __chkstk_darwin(v9 - 8);
  uint64_t v128 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = type metadata accessor for WeatherConditionGradientModel.PresentationContext();
  uint64_t v108 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v127 = (char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = type metadata accessor for WeatherConditionBackgroundOptions();
  uint64_t v105 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v126 = (char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100E63768);
  __chkstk_darwin(v13 - 8);
  uint64_t v125 = (uint64_t)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100E63760);
  __chkstk_darwin(v15 - 8);
  uint64_t v124 = (uint64_t)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = type metadata accessor for Date();
  uint64_t v102 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v123 = (char *)&v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = type metadata accessor for BackgroundAnimationKind();
  uint64_t v99 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v122 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = type metadata accessor for WeatherConditionBackgroundModelFactoryInput();
  uint64_t v111 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  uint64_t v110 = (char *)&v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = type metadata accessor for WeatherConditionBackgroundTimeData();
  __chkstk_darwin(v98);
  uint64_t v121 = (uint64_t)&v89 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10017DF08(&qword_100E63770);
  __chkstk_darwin(v21 - 8);
  uint64_t v94 = (char *)&v89 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = type metadata accessor for Location.Identifier();
  uint64_t v91 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v24 = (char *)&v89 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for Location();
  uint64_t v93 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v95 = (char *)&v89 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_10017DF08(&qword_100E63850);
  uint64_t v28 = __chkstk_darwin(v27 - 8);
  uint64_t v30 = (char *)&v89 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v28);
  uint64_t v90 = (uint64_t)&v89 - v32;
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v89 - v33;
  uint64_t v35 = sub_10017DF08(&qword_100E63A50);
  uint64_t v36 = __chkstk_darwin(v35 - 8);
  uint64_t v103 = (uint64_t)&v89 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v40 = (char *)&v89 - v39;
  __chkstk_darwin(v38);
  uint64_t v42 = (char *)&v89 - v41;
  uint64_t v43 = sub_10017DF08(&qword_100E639E8);
  uint64_t v44 = __chkstk_darwin(v43 - 8);
  uint64_t v101 = (uint64_t)&v89 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __chkstk_darwin(v44);
  int v48 = (char *)&v89 - v47;
  __chkstk_darwin(v46);
  uint64_t v50 = (char *)&v89 - v49;
  sub_10081B708((uint64_t)&v89 - v49);
  uint64_t v51 = type metadata accessor for WeatherCondition();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 1, 1, v51);
  uint64_t v52 = type metadata accessor for WeatherData(0);
  uint64_t v119 = v34;
  uint64_t v117 = v52;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 1, 1, v52);
  uint64_t v120 = v50;
  sub_10006DF38((uint64_t)v50, (uint64_t)v48, &qword_100E639E8);
  uint64_t v96 = v25;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v25) == 1)
  {
    uint64_t v53 = (uint64_t)v42;
    uint64_t v54 = v104;
    sub_100178110((uint64_t)v48, &qword_100E639E8);
    uint64_t v55 = v97;
    uint64_t v56 = (uint64_t)v119;
  }
  else
  {
    uint64_t v57 = v93;
    (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v95, v48, v96);
    uint64_t v58 = type metadata accessor for LocationPreviewContentInput(0);
    uint64_t v59 = v104;
    uint64_t v60 = *(void *)((char *)v104 + *(int *)(v58 + 44) + 8);
    Location.identifier.getter();
    uint64_t v61 = Location.Identifier.id.getter();
    sub_100141760(v61, v62, v60);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v91 + 8))(v24, v92);
    sub_100178110((uint64_t)v42, &qword_100E63A50);
    sub_10039C118((uint64_t)v40, (uint64_t)v42);
    uint64_t v63 = *(void *)((char *)v59 + *(int *)(v58 + 56) + 16);
    uint64_t v64 = Location.id.getter();
    uint64_t v65 = (uint64_t)v94;
    sub_1001BBE9C(v64, v66, v63);
    swift_bridgeObjectRelease();
    uint64_t v67 = type metadata accessor for LocationWeatherDataState(0);
    uint64_t v54 = v59;
    if (_s7Weather24LocationCompositionStateOwet_0(v65, 1, v67) == 1)
    {
      (*(void (**)(char *, uint64_t))(v57 + 8))(v95, v96);
      sub_100178110(v65, &qword_100E63770);
      uint64_t v68 = v90;
      _s7Weather24LocationCompositionStateOwst_0(v90, 1, 1, v117);
    }
    else
    {
      uint64_t v68 = v90;
      sub_1001177B0(v90);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v95, v96);
      sub_10069050C(v65, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    }
    uint64_t v55 = v97;
    uint64_t v56 = (uint64_t)v119;
    uint64_t v53 = (uint64_t)v42;
    sub_1001DF004(v68, (uint64_t)v119, &qword_100E63850);
  }
  uint64_t v69 = v107;
  sub_1001B1E64((void *)(v107 + 96), *(void *)(v107 + 120));
  sub_10006DF38(v56, (uint64_t)v30, &qword_100E63850);
  uint64_t v70 = type metadata accessor for LocationPreviewContentInput(0);
  uint64_t v71 = (uint64_t)v120;
  uint64_t v72 = v121;
  sub_10020D9C0((uint64_t)v120, (uint64_t)v30, (void (*)(void))((char *)v54 + *(int *)(v70 + 48)), v121);
  sub_100178110((uint64_t)v30, &qword_100E63850);
  sub_10020D948(v69 + 56, (uint64_t)v129);
  uint64_t v107 = v129[4];
  uint64_t v104 = sub_1001B1E64(v129, v129[3]);
  (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v122, v113, v100);
  (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v123, v72, v118);
  uint64_t v73 = v98;
  sub_10006DF38(v72 + *(int *)(v98 + 20), v124, &qword_100E63760);
  uint64_t v74 = v72 + *(int *)(v73 + 24);
  uint64_t v75 = (uint64_t)v119;
  sub_10006DF38(v74, v125, &qword_100E63768);
  sub_10006DF38(v53, v103, &qword_100E63A50);
  sub_10006DF38(v71, v101, &qword_100E639E8);
  (*(void (**)(char *, uint64_t, uint64_t))(v105 + 16))(v126, v55, v106);
  uint64_t v76 = v127;
  BackgroundAnimationKind.gradientContext.getter();
  (*(void (**)(char *, void, uint64_t))(v108 + 104))(v76, enum case for WeatherConditionGradientModel.PresentationContext.fullScreen(_:), v109);
  uint64_t v77 = v117;
  if (_s7Weather24LocationCompositionStateOwet_0(v75, 1, v117))
  {
    uint64_t v78 = type metadata accessor for WeatherDataModel();
    uint64_t v79 = (uint64_t)v128;
    uint64_t v80 = 1;
  }
  else
  {
    uint64_t v81 = v75 + *(int *)(v77 + 24);
    uint64_t v82 = type metadata accessor for WeatherDataModel();
    uint64_t v83 = v128;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v82 - 8) + 16))(v128, v81, v82);
    uint64_t v79 = (uint64_t)v83;
    uint64_t v80 = 0;
    uint64_t v78 = v82;
  }
  _s7Weather24LocationCompositionStateOwst_0(v79, v80, 1, v78);
  uint64_t v85 = (uint64_t)v114;
  uint64_t v84 = (uint64_t)v115;
  if (!_s7Weather24LocationCompositionStateOwet_0(v75, 1, v77))
  {
    sub_10006DF38(v75 + *(int *)(v77 + 36), v85, &qword_100E63740);
    uint64_t v86 = type metadata accessor for WeatherDataOverrides();
    if (_s7Weather24LocationCompositionStateOwet_0(v85, 1, v86) != 1)
    {
      sub_10006DF38(v85 + *(int *)(v86 + 20), v84, (uint64_t *)&unk_100E73CA0);
      sub_10069050C(v85, (void (*)(void))type metadata accessor for WeatherDataOverrides);
      goto LABEL_15;
    }
    sub_100178110(v85, &qword_100E63740);
  }
  _s7Weather24LocationCompositionStateOwst_0(v84, 1, 1, v118);
LABEL_15:
  uint64_t v87 = v110;
  WeatherConditionBackgroundModelFactoryInput.init(animationKind:currentTime:elevation:moonData:debugConditionOverride:isReduceMotionEnabled:location:options:presentationContext:weatherData:conditionBackgroundDateOverride:)();
  dispatch thunk of WeatherConditionBackgroundModelFactoryType.makeModel(from:)();
  (*(void (**)(char *, uint64_t))(v111 + 8))(v87, v112);
  sub_10069050C(v121, (void (*)(void))type metadata accessor for WeatherConditionBackgroundTimeData);
  sub_100178110(v53, &qword_100E63A50);
  sub_100178110((uint64_t)v120, &qword_100E639E8);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v129);
  return sub_100178110(v75, &qword_100E63850);
}

uint64_t sub_10069000C(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E66678);
  __chkstk_darwin(v2 - 8);
  unsigned __int8 v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E639E8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Location();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_10068E51C()) {
    return 1;
  }
  sub_10081B708((uint64_t)v7);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8) == 1)
  {
    sub_100178110((uint64_t)v7, &qword_100E639E8);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    sub_1001B1E64((void *)(a1 + 16), *(void *)(a1 + 40));
    Location.coordinate.getter();
    uint64_t v13 = Location.name.getter();
    sub_100694CE4(v13, v14, (uint64_t)v4);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v15 = type metadata accessor for SavedLocation();
    BOOL v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v15) == 1;
    sub_100178110((uint64_t)v4, &qword_100E66678);
  }
  return v12;
}

uint64_t sub_10069025C()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 56);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 96);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 136);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 176);
  sub_100178110(v0 + OBJC_IVAR____TtC7Weather31LocationPreviewViewModelFactory____lazy_storage___locationAnimationKind, &qword_100E85920);
  return v0;
}

uint64_t sub_1006902B4()
{
  sub_10069025C();

  return swift_deallocClassInstance();
}

uint64_t sub_10069030C()
{
  return type metadata accessor for LocationPreviewViewModelFactory();
}

uint64_t type metadata accessor for LocationPreviewViewModelFactory()
{
  uint64_t result = qword_100E89360;
  if (!qword_100E89360) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10069035C()
{
  sub_100013E14();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_100690408(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_10069045C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

unint64_t sub_1006904BC()
{
  unint64_t result = qword_100E89418;
  if (!qword_100E89418)
  {
    type metadata accessor for LocationPreviewViewModelFactory();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89418);
  }
  return result;
}

uint64_t sub_10069050C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_100690560(int a1, int a2, uint64_t a3, unsigned __int8 a4, char a5, int a6, unsigned int a7, int a8, char a9)
{
  int v32 = a8;
  int v33 = a6;
  uint64_t v36 = a3;
  int v34 = a2;
  int v37 = a1;
  uint64_t v12 = type metadata accessor for Calendar();
  sub_100179C0C();
  uint64_t v35 = v13;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v19 = v18;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v30 - v24;
  if (a9 == 2) {
    return 0;
  }
  sub_10017D274();
  unsigned int v31 = a7;
  switch(a4)
  {
    case 2u:
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 4u:
      sub_10019EF54();
      break;
    default:
      break;
  }
  char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v27)
  {
LABEL_7:
    if (a5 == 1)
    {
      uint64_t result = 0;
      if (v31 & 1) == 0 || (v32) {
        return result;
      }
    }
  }
  static Calendar.current.getter();
  Date.wc_addDays(_:calendar:)();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v16, v12);
  Date.init()();
  char v28 = static Date.> infix(_:_:)();
  uint64_t v29 = *(void (**)(char *, uint64_t))(v19 + 8);
  v29(v22, v17);
  v29(v25, v17);
  uint64_t result = 0;
  if ((v37 & 1) == 0 && (v28 & 1) == 0 && (v34 & 1) == 0) {
    return (a4 - 1 < 2) & (v33 | v31);
  }
  return result;
}

uint64_t sub_100690844(int a1, char a2, int a3, uint64_t a4, char a5, int a6, int a7, unsigned __int8 a8)
{
  int v41 = a6;
  int v42 = a7;
  uint64_t v40 = a4;
  int v12 = a8;
  uint64_t v13 = type metadata accessor for Calendar();
  sub_100179C0C();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  uint64_t v18 = &v35[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for Date();
  sub_100179C0C();
  __chkstk_darwin(v19);
  uint64_t v21 = &v35[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v22);
  uint64_t v26 = &v35[-v25];
  if (v12 == 2)
  {
LABEL_10:
    char v30 = 0;
    return v30 & 1;
  }
  uint64_t v37 = v23;
  uint64_t v38 = v24;
  uint64_t v39 = v13;
  int v36 = a3;
  uint64_t v27 = v15;
  char v28 = v42;
  if (v41 != 1) {
    goto LABEL_9;
  }
  sub_10017D274();
  switch(a5)
  {
    case 2:
      swift_bridgeObjectRelease();
      if (v28) {
        goto LABEL_10;
      }
      goto LABEL_9;
    case 4:
      sub_10019EF54();
      break;
    default:
      break;
  }
  int v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((a1 & ~v29 & 1) != 0 || (char v30 = 0, (v28 & 1) == 0))
  {
LABEL_9:
    static Calendar.current.getter();
    Date.wc_addDays(_:calendar:)();
    (*(void (**)(unsigned char *, uint64_t))(v27 + 8))(v18, v39);
    Date.init()();
    char v31 = static Date.> infix(_:_:)();
    uint64_t v32 = v37;
    int v33 = *(void (**)(unsigned char *, uint64_t))(v38 + 8);
    v33(v21, v37);
    v33(v26, v32);
    if ((a2 & 1) == 0)
    {
      char v30 = (v36 | v31) ^ 1;
      return v30 & 1;
    }
    goto LABEL_10;
  }
  return v30 & 1;
}

uint64_t type metadata accessor for NotificationsOptInStatusFactory()
{
  return self;
}

uint64_t sub_100690B38(int a1, int a2, uint64_t a3, unsigned __int8 a4, char a5, int a6, unsigned int a7, int a8, char a9)
{
  return sub_100690560(a1, a2, a3, a4, a5, a6, a7, a8, a9) & 1;
}

uint64_t sub_100690B64(int a1, char a2, int a3, uint64_t a4, char a5, int a6, int a7, unsigned __int8 a8)
{
  return sub_100690844(a1, a2, a3, a4, a5, a6, a7, a8) & 1;
}

uint64_t sub_100690B80()
{
  uint64_t v0 = type metadata accessor for News();
  sub_100097814(v0, qword_100F51A10);
  uint64_t v1 = sub_1002102B0(v0, (uint64_t)qword_100F51A10);
  return sub_100690BCC(v1);
}

uint64_t sub_100690BCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ArticlePlacementLocation();
  uint64_t v92 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v93 = (char *)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ArticlePlacement();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v79 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v91 = (char *)&v79 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v90 = (char *)&v79 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v89 = (char *)&v79 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v82 = (char *)&v79 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v88 = (char *)&v79 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v87 = (char *)&v79 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v86 = (char *)&v79 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v85 = (char *)&v79 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v84 = (char *)&v79 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v83 = (char *)&v79 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  int v34 = (char *)&v79 - v33;
  uint64_t v35 = __chkstk_darwin(v32);
  uint64_t v37 = (char *)&v79 - v36;
  __chkstk_darwin(v35);
  uint64_t v39 = (char *)&v79 - v38;
  if (qword_100E62718 != -1) {
    swift_once();
  }
  if (dispatch thunk of SettingGroup.isEnabled.getter())
  {
    uint64_t v94 = type metadata accessor for SettingReader();
    static SettingReader.shared.getter();
    if (qword_100E626A0 != -1) {
      swift_once();
    }
    uint64_t v80 = v11;
    uint64_t v81 = v8;
    SettingReader.read<A>(_:)();
    swift_release();
    uint64_t v40 = v4;
    if (v109 == 1)
    {
      uint64_t v79 = a1;
      sub_10017DF08(&qword_100E89550);
      type metadata accessor for Article();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C251B0;
      sub_100692AF0();
      (*(void (**)(char *, void, uint64_t))(v92 + 104))(v93, enum case for ArticlePlacementLocation.airQualityDetail(_:), v2);
      ArticlePlacement.init(articles:location:)();
      int v41 = (void *)sub_1007E9FD4(0, 1, 1, (uint64_t)&_swiftEmptyArrayStorage);
      unint64_t v43 = v41[2];
      unint64_t v42 = v41[3];
      if (v43 >= v42 >> 1) {
        int v41 = (void *)sub_1007E9FD4(v42 > 1, v43 + 1, 1, (uint64_t)v41);
      }
      v41[2] = v43 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v41+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v43, v39, v40);
    }
    else
    {
      int v41 = &_swiftEmptyArrayStorage;
    }
    static SettingReader.shared.getter();
    if (qword_100E626A8 != -1) {
      swift_once();
    }
    SettingReader.read<A>(_:)();
    swift_release();
    if (v108 == 1)
    {
      sub_10017DF08(&qword_100E89550);
      type metadata accessor for Article();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C251B0;
      sub_100692AF0();
      (*(void (**)(char *, void, uint64_t))(v92 + 104))(v93, enum case for ArticlePlacementLocation.feelsLikeDetail(_:), v2);
      ArticlePlacement.init(articles:location:)();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v41 = (void *)sub_1007E9FD4(0, v41[2] + 1, 1, (uint64_t)v41);
      }
      unint64_t v46 = v41[2];
      unint64_t v45 = v41[3];
      if (v46 >= v45 >> 1) {
        int v41 = (void *)sub_1007E9FD4(v45 > 1, v46 + 1, 1, (uint64_t)v41);
      }
      v41[2] = v46 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v41+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v46, v37, v40);
    }
    static SettingReader.shared.getter();
    uint64_t v47 = v2;
    if (qword_100E626B0 != -1) {
      swift_once();
    }
    SettingReader.read<A>(_:)();
    swift_release();
    uint64_t v48 = v92;
    if (v107 == 1)
    {
      sub_10017DF08(&qword_100E89550);
      type metadata accessor for Article();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C251B0;
      sub_100692AF0();
      (*(void (**)(char *, void, uint64_t))(v48 + 104))(v93, enum case for ArticlePlacementLocation.humidityDetail(_:), v47);
      ArticlePlacement.init(articles:location:)();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v41 = (void *)sub_1007E9FD4(0, v41[2] + 1, 1, (uint64_t)v41);
      }
      unint64_t v50 = v41[2];
      unint64_t v49 = v41[3];
      if (v50 >= v49 >> 1) {
        int v41 = (void *)sub_1007E9FD4(v49 > 1, v50 + 1, 1, (uint64_t)v41);
      }
      v41[2] = v50 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v41+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v50, v34, v40);
    }
    static SettingReader.shared.getter();
    uint64_t v51 = v93;
    if (qword_100E626B8 != -1) {
      swift_once();
    }
    SettingReader.read<A>(_:)();
    swift_release();
    if (v106 == 1)
    {
      sub_10017DF08(&qword_100E89550);
      type metadata accessor for Article();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C251B0;
      sub_100692AF0();
      (*(void (**)(char *, void, uint64_t))(v48 + 104))(v51, enum case for ArticlePlacementLocation.moonDetail(_:), v47);
      ArticlePlacement.init(articles:location:)();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v41 = (void *)sub_1007E9FD4(0, v41[2] + 1, 1, (uint64_t)v41);
      }
      unint64_t v53 = v41[2];
      unint64_t v52 = v41[3];
      if (v53 >= v52 >> 1) {
        int v41 = (void *)sub_1007E9FD4(v52 > 1, v53 + 1, 1, (uint64_t)v41);
      }
      v41[2] = v53 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v41+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v53, v83, v40);
    }
    static SettingReader.shared.getter();
    if (qword_100E626C0 != -1) {
      swift_once();
    }
    SettingReader.read<A>(_:)();
    swift_release();
    if (v105 == 1)
    {
      sub_10017DF08(&qword_100E89550);
      type metadata accessor for Article();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C251B0;
      sub_100692AF0();
      (*(void (**)(char *, void, uint64_t))(v48 + 104))(v51, enum case for ArticlePlacementLocation.precipitationDetail(_:), v47);
      ArticlePlacement.init(articles:location:)();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v41 = (void *)sub_1007E9FD4(0, v41[2] + 1, 1, (uint64_t)v41);
      }
      unint64_t v55 = v41[2];
      unint64_t v54 = v41[3];
      if (v55 >= v54 >> 1) {
        int v41 = (void *)sub_1007E9FD4(v54 > 1, v55 + 1, 1, (uint64_t)v41);
      }
      v41[2] = v55 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v41+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v55, v84, v40);
    }
    static SettingReader.shared.getter();
    if (qword_100E626C8 != -1) {
      swift_once();
    }
    SettingReader.read<A>(_:)();
    swift_release();
    if (v104 == 1)
    {
      sub_10017DF08(&qword_100E89550);
      type metadata accessor for Article();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C251B0;
      sub_100692AF0();
      (*(void (**)(char *, void, uint64_t))(v48 + 104))(v51, enum case for ArticlePlacementLocation.precipitationAveragesDetail(_:), v47);
      ArticlePlacement.init(articles:location:)();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v41 = (void *)sub_1007E9FD4(0, v41[2] + 1, 1, (uint64_t)v41);
      }
      unint64_t v57 = v41[2];
      unint64_t v56 = v41[3];
      uint64_t v58 = &OBJC_INSTANCE_METHODS__TtC7Weather27LocalSearchCompleterManager;
      if (v57 >= v56 >> 1) {
        int v41 = (void *)sub_1007E9FD4(v56 > 1, v57 + 1, 1, (uint64_t)v41);
      }
      v41[2] = v57 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v41+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v57, v85, v40);
    }
    else
    {
      uint64_t v58 = &OBJC_INSTANCE_METHODS__TtC7Weather27LocalSearchCompleterManager;
    }
    static SettingReader.shared.getter();
    if (qword_100E626D0 != -1) {
      swift_once();
    }
    SettingReader.read<A>(_:)();
    swift_release();
    if (v103 == 1)
    {
      sub_10017DF08(&qword_100E89550);
      type metadata accessor for Article();
      *(_OWORD *)(swift_allocObject() + 16) = *(_OWORD *)&v58[54].entrysize;
      sub_100692AF0();
      (*(void (**)(char *, void, uint64_t))(v48 + 104))(v51, enum case for ArticlePlacementLocation.pressureDetail(_:), v47);
      ArticlePlacement.init(articles:location:)();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v41 = (void *)sub_1007E9FD4(0, v41[2] + 1, 1, (uint64_t)v41);
      }
      unint64_t v60 = v41[2];
      unint64_t v59 = v41[3];
      if (v60 >= v59 >> 1) {
        int v41 = (void *)sub_1007E9FD4(v59 > 1, v60 + 1, 1, (uint64_t)v41);
      }
      v41[2] = v60 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v41+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v60, v86, v40);
    }
    static SettingReader.shared.getter();
    if (qword_100E626D8 != -1) {
      swift_once();
    }
    SettingReader.read<A>(_:)();
    swift_release();
    if (v102 == 1)
    {
      sub_10017DF08(&qword_100E89550);
      type metadata accessor for Article();
      *(_OWORD *)(swift_allocObject() + 16) = *(_OWORD *)&v58[54].entrysize;
      sub_100692AF0();
      (*(void (**)(char *, void, uint64_t))(v48 + 104))(v51, enum case for ArticlePlacementLocation.severe(_:), v47);
      ArticlePlacement.init(articles:location:)();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v41 = (void *)sub_1007E9FD4(0, v41[2] + 1, 1, (uint64_t)v41);
      }
      unint64_t v62 = v41[2];
      unint64_t v61 = v41[3];
      if (v62 >= v61 >> 1) {
        int v41 = (void *)sub_1007E9FD4(v61 > 1, v62 + 1, 1, (uint64_t)v41);
      }
      v41[2] = v62 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v41+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v62, v87, v40);
    }
    static SettingReader.shared.getter();
    if (qword_100E626E0 != -1) {
      swift_once();
    }
    SettingReader.read<A>(_:)();
    swift_release();
    if (v101 == 1)
    {
      sub_10017DF08(&qword_100E89550);
      type metadata accessor for Article();
      *(_OWORD *)(swift_allocObject() + 16) = *(_OWORD *)&v58[54].entrysize;
      sub_100692AF0();
      (*(void (**)(char *, void, uint64_t))(v48 + 104))(v51, enum case for ArticlePlacementLocation.sunriseSunsetDetail(_:), v47);
      ArticlePlacement.init(articles:location:)();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v41 = (void *)sub_1007E9FD4(0, v41[2] + 1, 1, (uint64_t)v41);
      }
      unint64_t v64 = v41[2];
      unint64_t v63 = v41[3];
      if (v64 >= v63 >> 1) {
        int v41 = (void *)sub_1007E9FD4(v63 > 1, v64 + 1, 1, (uint64_t)v41);
      }
      v41[2] = v64 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v41+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v64, v88, v40);
    }
    static SettingReader.shared.getter();
    if (qword_100E626E8 != -1) {
      swift_once();
    }
    SettingReader.read<A>(_:)();
    swift_release();
    if (v100 == 1)
    {
      sub_10017DF08(&qword_100E89550);
      type metadata accessor for Article();
      *(_OWORD *)(swift_allocObject() + 16) = *(_OWORD *)&v58[54].entrysize;
      sub_100692AF0();
      (*(void (**)(char *, void, uint64_t))(v48 + 104))(v51, enum case for ArticlePlacementLocation.temperatureDetail(_:), v47);
      uint64_t v65 = v82;
      ArticlePlacement.init(articles:location:)();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v41 = (void *)sub_1007E9FD4(0, v41[2] + 1, 1, (uint64_t)v41);
      }
      unint64_t v67 = v41[2];
      unint64_t v66 = v41[3];
      if (v67 >= v66 >> 1) {
        int v41 = (void *)sub_1007E9FD4(v66 > 1, v67 + 1, 1, (uint64_t)v41);
      }
      v41[2] = v67 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v41+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v67, v65, v40);
    }
    static SettingReader.shared.getter();
    if (qword_100E626F0 != -1) {
      swift_once();
    }
    SettingReader.read<A>(_:)();
    swift_release();
    if (v99 == 1)
    {
      sub_10017DF08(&qword_100E89550);
      type metadata accessor for Article();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C251B0;
      sub_100692AF0();
      (*(void (**)(char *, void, uint64_t))(v48 + 104))(v51, enum case for ArticlePlacementLocation.temperatureAveragesDetail(_:), v47);
      ArticlePlacement.init(articles:location:)();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v41 = (void *)sub_1007E9FD4(0, v41[2] + 1, 1, (uint64_t)v41);
      }
      unint64_t v69 = v41[2];
      unint64_t v68 = v41[3];
      if (v69 >= v68 >> 1) {
        int v41 = (void *)sub_1007E9FD4(v68 > 1, v69 + 1, 1, (uint64_t)v41);
      }
      v41[2] = v69 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v41+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v69, v89, v40);
    }
    static SettingReader.shared.getter();
    if (qword_100E626F8 != -1) {
      swift_once();
    }
    SettingReader.read<A>(_:)();
    swift_release();
    if (v98 == 1)
    {
      sub_10017DF08(&qword_100E89550);
      type metadata accessor for Article();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C251B0;
      sub_100692AF0();
      (*(void (**)(char *, void, uint64_t))(v48 + 104))(v51, enum case for ArticlePlacementLocation.trend(_:), v47);
      ArticlePlacement.init(articles:location:)();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v41 = (void *)sub_1007E9FD4(0, v41[2] + 1, 1, (uint64_t)v41);
      }
      unint64_t v71 = v41[2];
      unint64_t v70 = v41[3];
      uint64_t v72 = &OBJC_INSTANCE_METHODS__TtC7Weather27LocalSearchCompleterManager;
      if (v71 >= v70 >> 1) {
        int v41 = (void *)sub_1007E9FD4(v70 > 1, v71 + 1, 1, (uint64_t)v41);
      }
      v41[2] = v71 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v41+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v71, v90, v40);
    }
    else
    {
      uint64_t v72 = &OBJC_INSTANCE_METHODS__TtC7Weather27LocalSearchCompleterManager;
    }
    static SettingReader.shared.getter();
    if (qword_100E62700 != -1) {
      swift_once();
    }
    SettingReader.read<A>(_:)();
    swift_release();
    if (v97 == 1)
    {
      sub_10017DF08(&qword_100E89550);
      type metadata accessor for Article();
      *(_OWORD *)(swift_allocObject() + 16) = *(_OWORD *)&v72[54].entrysize;
      sub_100692AF0();
      (*(void (**)(char *, void, uint64_t))(v48 + 104))(v51, enum case for ArticlePlacementLocation.uvIndexDetail(_:), v47);
      ArticlePlacement.init(articles:location:)();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v41 = (void *)sub_1007E9FD4(0, v41[2] + 1, 1, (uint64_t)v41);
      }
      unint64_t v74 = v41[2];
      unint64_t v73 = v41[3];
      if (v74 >= v73 >> 1) {
        int v41 = (void *)sub_1007E9FD4(v73 > 1, v74 + 1, 1, (uint64_t)v41);
      }
      v41[2] = v74 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v41+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v74, v91, v40);
    }
    static SettingReader.shared.getter();
    if (qword_100E62708 != -1) {
      swift_once();
    }
    SettingReader.read<A>(_:)();
    swift_release();
    if (v96 == 1)
    {
      sub_10017DF08(&qword_100E89550);
      type metadata accessor for Article();
      *(_OWORD *)(swift_allocObject() + 16) = *(_OWORD *)&v72[54].entrysize;
      sub_100692AF0();
      (*(void (**)(char *, void, uint64_t))(v48 + 104))(v51, enum case for ArticlePlacementLocation.visibilityDetail(_:), v47);
      ArticlePlacement.init(articles:location:)();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v41 = (void *)sub_1007E9FD4(0, v41[2] + 1, 1, (uint64_t)v41);
      }
      unint64_t v76 = v41[2];
      unint64_t v75 = v41[3];
      if (v76 >= v75 >> 1) {
        int v41 = (void *)sub_1007E9FD4(v75 > 1, v76 + 1, 1, (uint64_t)v41);
      }
      v41[2] = v76 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v41+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v76, v80, v40);
    }
    static SettingReader.shared.getter();
    if (qword_100E62710 != -1) {
      swift_once();
    }
    SettingReader.read<A>(_:)();
    swift_release();
    if (v95 == 1)
    {
      sub_10017DF08(&qword_100E89550);
      type metadata accessor for Article();
      *(_OWORD *)(swift_allocObject() + 16) = *(_OWORD *)&v72[54].entrysize;
      sub_100692AF0();
      (*(void (**)(char *, void, uint64_t))(v48 + 104))(v51, enum case for ArticlePlacementLocation.windDetail(_:), v47);
      ArticlePlacement.init(articles:location:)();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v41 = (void *)sub_1007E9FD4(0, v41[2] + 1, 1, (uint64_t)v41);
      }
      unint64_t v78 = v41[2];
      unint64_t v77 = v41[3];
      if (v78 >= v77 >> 1) {
        int v41 = (void *)sub_1007E9FD4(v77 > 1, v78 + 1, 1, (uint64_t)v41);
      }
      v41[2] = v78 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v41+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v78, v81, v40);
    }
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  return News.init(placements:)();
}

uint64_t sub_100692AF0()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  swift_bridgeObjectRetain();
  Locale.init(identifier:)();
  return Article.init(id:supportedStorefronts:locale:headlineOverride:phenomena:alertIds:)();
}

BOOL sub_100692BB8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 48) & 1) != 0
    || (*(unsigned char *)(a1 + 88) & 1) != 0
    || (*(unsigned char *)(a1 + 128) & 1) != 0
    || (*(unsigned char *)(a1 + 168) & 1) != 0
    || (*(unsigned char *)(a1 + 208) & 1) != 0)
  {
    return 1;
  }
  if (*(unsigned char *)(a1 + 232) && *(unsigned char *)(a1 + 232) == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v2 = sub_10017D288();
    swift_bridgeObjectRelease();
    if ((v2 & 1) == 0) {
      return 1;
    }
  }
  if (*(unsigned char *)(a1 + 256) && *(unsigned char *)(a1 + 256) == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v3 = sub_10017D288();
    swift_bridgeObjectRelease();
    if ((v3 & 1) == 0) {
      return 1;
    }
  }
  if (*(unsigned char *)(a1 + 296) && *(unsigned char *)(a1 + 296) == 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  char v4 = sub_10017D288();
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0) {
    return 1;
  }
LABEL_18:
  if (*(void *)(*(void *)(a1 + 304) + 16)) {
    return 1;
  }
  return *(void *)(*(void *)(a1 + 312) + 16) != 0;
}

uint64_t sub_100692D3C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C28110;
  sub_100162AD8();
  *(void *)(v5 + 32) = 0xD000000000000013;
  *(void *)(v5 + 40) = v6;
  memcpy(__dst, (const void *)(a1 + 16), 0xC2uLL);
  *(void *)(inited + 72) = &type metadata for ReportWeatherConditionsViewModel;
  uint64_t v7 = swift_allocObject();
  *(void *)(inited + 48) = v7;
  memcpy((void *)(v7 + 16), __dst, 0xC2uLL);
  sub_100162AD8();
  *(void *)(inited + 80) = v9;
  *(void *)(inited + 88) = v8;
  uint64_t v10 = *(void *)(a1 + 224);
  *(void *)(inited + 96) = *(void *)(a1 + 216);
  *(void *)(inited + 104) = v10;
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 128) = 0xD000000000000011;
  sub_100162AD8();
  *(void *)(inited + 136) = v11;
  *(unsigned char *)(inited + 144) = *(unsigned char *)(a1 + 232);
  *(void *)(inited + 168) = &unk_100E1DC28;
  *(void *)(inited + 176) = 0xD000000000000013;
  sub_100162AD8();
  *(void *)(inited + 184) = v12;
  uint64_t v13 = *(void *)(a1 + 248);
  *(void *)(inited + 192) = *(void *)(a1 + 240);
  *(void *)(inited + 200) = v13;
  *(void *)(inited + 216) = &type metadata for String;
  *(void *)(inited + 224) = 0x69746152646E6977;
  *(void *)(inited + 232) = 0xEA0000000000676ELL;
  *(unsigned char *)(inited + 240) = *(unsigned char *)(a1 + 256);
  *(void *)(inited + 264) = &unk_100E1DB98;
  *(void *)(inited + 272) = 0x696C617551726961;
  *(void *)(inited + 280) = 0xEF656C7469547974;
  uint64_t v14 = *(void *)(a1 + 264);
  if (*(void *)(a1 + 272))
  {
    unint64_t v15 = *(void *)(a1 + 272);
  }
  else
  {
    uint64_t v14 = 7104878;
    unint64_t v15 = 0xE300000000000000;
  }
  *(void *)(inited + 288) = v14;
  *(void *)(inited + 296) = v15;
  *(void *)(inited + 312) = &type metadata for String;
  *(void *)(inited + 320) = 0xD000000000000019;
  sub_100162AD8();
  *(void *)(inited + 328) = v18;
  uint64_t v19 = *(void *)(a1 + 280);
  if (*(void *)(a1 + 288))
  {
    uint64_t v20 = *(void *)(a1 + 288);
  }
  else
  {
    uint64_t v19 = v16;
    uint64_t v20 = v17;
  }
  *(void *)(inited + 336) = v19;
  *(void *)(inited + 344) = v20;
  *(void *)(inited + 360) = &type metadata for String;
  *(void *)(inited + 368) = 0xD000000000000010;
  sub_100162AD8();
  *(void *)(inited + 376) = v21;
  *(unsigned char *)(inited + 384) = *(unsigned char *)(a1 + 296);
  *(void *)(inited + 408) = &unk_100E1DB08;
  *(void *)(inited + 416) = 0x6E6F43726568746FLL;
  *(void *)(inited + 424) = 0xEF736E6F69746964;
  uint64_t v22 = *(void *)(a1 + 304);
  uint64_t v23 = sub_10017DF08(&qword_100E6A628);
  *(void *)(inited + 432) = v22;
  *(void *)(inited + 456) = v23;
  strcpy((char *)(inited + 464), "descriptions");
  *(unsigned char *)(inited + 477) = 0;
  *(_WORD *)(inited + 478) = -5120;
  uint64_t v24 = *(void *)(a1 + 312);
  *(void *)(inited + 504) = sub_10017DF08(&qword_100E6A640);
  *(void *)(inited + 480) = v24;
  sub_1002E728C((uint64_t)__dst);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Dictionary.init(dictionaryLiteral:)();
  a2[3] = sub_10017DF08(&qword_100E89568);
  a2[4] = sub_100693894();
  sub_100170694(a2);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_100693060(uint64_t *a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, char a17, uint64_t a18)
{
  uint64_t v90 = a8;
  uint64_t v91 = a2;
  sub_100693674((uint64_t)a1, (uint64_t)v95);
  sub_100693674((uint64_t)v95, (uint64_t)v98);
  uint64_t v24 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v24 - 8);
  uint64_t v26 = (char *)&v49 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for URL();
  uint64_t v93 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v84 = (char *)&v49 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v92 = (char *)&v49 - v30;
  unint64_t v76 = a1;
  sub_100693674((uint64_t)a1, (uint64_t)v96);
  if (sub_1002812A4((uint64_t)v96) == 1)
  {
    memcpy(v97, (const void *)(a18 + 16), 0xC2uLL);
    sub_100187F28();
    sub_1002E728C((uint64_t)v97);
    if (a3)
    {
LABEL_3:
      uint64_t v82 = a3;
      goto LABEL_6;
    }
  }
  else
  {
    sub_100693674((uint64_t)v98, (uint64_t)v97);
    sub_100187F28();
    if (a3) {
      goto LABEL_3;
    }
  }
  uint64_t v31 = *(void *)(a18 + 224);
  uint64_t v91 = *(void *)(a18 + 216);
  uint64_t v82 = v31;
  swift_bridgeObjectRetain();
LABEL_6:
  if (a4 == 3) {
    a4 = *(unsigned __int8 *)(a18 + 232);
  }
  if (a6)
  {
    uint64_t v81 = a6;
  }
  else
  {
    a5 = *(void *)(a18 + 240);
    uint64_t v81 = *(void *)(a18 + 248);
    swift_bridgeObjectRetain();
  }
  uint64_t v85 = a5;
  if (a7 == 3) {
    a7 = *(unsigned __int8 *)(a18 + 256);
  }
  uint64_t v89 = a10;
  uint64_t v88 = a9;
  if (!a9)
  {
    uint64_t v32 = *(void *)(a18 + 272);
    uint64_t v90 = *(void *)(a18 + 264);
    uint64_t v88 = v32;
    swift_bridgeObjectRetain();
  }
  uint64_t v77 = a3;
  int v33 = a12;
  uint64_t v87 = a11;
  if (!a11)
  {
    uint64_t v34 = *(void *)(a18 + 288);
    uint64_t v89 = *(void *)(a18 + 280);
    uint64_t v87 = v34;
    swift_bridgeObjectRetain();
    int v33 = a12;
  }
  uint64_t v94 = v27;
  unsigned int v86 = a7;
  if (v33 == 3) {
    int v33 = *(unsigned __int8 *)(a18 + 296);
  }
  int v80 = v33;
  if (a13)
  {
    uint64_t v35 = (uint64_t)v26;
    uint64_t v79 = a13;
  }
  else
  {
    uint64_t v79 = *(void *)(a18 + 304);
    swift_bridgeObjectRetain();
    uint64_t v35 = (uint64_t)v26;
  }
  unsigned int v83 = a4;
  if (a14)
  {
    uint64_t v78 = a14;
  }
  else
  {
    uint64_t v78 = *(void *)(a18 + 312);
    swift_bridgeObjectRetain();
    uint64_t v35 = (uint64_t)v26;
  }
  uint64_t v36 = v35;
  sub_1000F32E4(a15, v35);
  uint64_t v37 = v94;
  if (_s7Weather24LocationCompositionStateOwet_0(v36, 1, v94) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v92, a18 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_onlineFeedbackURL, v37);
    sub_1006936DC(v76);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100658530(v36);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v93 + 32))(v92, v36, v37);
    sub_1006936DC(v76);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  if (a16 == 2) {
    char v38 = *(unsigned char *)(a18 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_showOnlineFeedbackSafariView);
  }
  else {
    char v38 = a16 & 1;
  }
  if (a17 == 2) {
    char v39 = *(unsigned char *)(a18 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_entrySource);
  }
  else {
    char v39 = a17 & 1;
  }
  v97[0] = v73;
  v97[1] = v72;
  v97[2] = v50;
  v97[3] = v74;
  LOBYTE(v97[4]) = v75;
  v97[5] = v52;
  v97[6] = v51;
  v97[7] = v54;
  v97[8] = v53;
  LOBYTE(v97[9]) = v55;
  BYTE1(v97[9]) = BYTE4(v55);
  v97[10] = v57;
  v97[11] = v56;
  v97[12] = v59;
  v97[13] = v58;
  LOBYTE(v97[14]) = v60;
  BYTE1(v97[14]) = BYTE4(v60);
  v97[15] = v62;
  v97[16] = v61;
  v97[17] = v64;
  v97[18] = v63;
  LOBYTE(v97[19]) = v65;
  BYTE1(v97[19]) = BYTE4(v65);
  v97[20] = v67;
  v97[21] = v66;
  v97[22] = v69;
  v97[23] = v68;
  LOBYTE(v97[24]) = v70;
  BYTE1(v97[24]) = v71;
  int v41 = v92;
  uint64_t v40 = v93;
  uint64_t v42 = (uint64_t)v84;
  uint64_t v43 = v94;
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v84, v92, v94);
  type metadata accessor for ReportWeatherContentViewModel._Storage(0);
  swift_allocObject();
  BYTE1(v48) = v39;
  LOBYTE(v48) = v38;
  LOBYTE(v47) = v80;
  sub_1002DEAEC((uint64_t)v97, v91, v82, v83, v85, v81, v86, v90, v88, v89, v87, v47, v79, v78, v42, v48, v49, v50, v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57,
    v58,
    v59,
    v60,
    v61,
    v62,
    v63,
    v64,
    v65,
    v66,
    SBYTE1(v66));
  uint64_t v45 = v44;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v43);
  return v45;
}

uint64_t sub_1006935E0@<X0>(uint64_t *a1@<X8>)
{
  return sub_100692D3C(*v1, a1);
}

uint64_t sub_1006935E8()
{
  sub_1006938E8();

  return ShortDescribable.description.getter();
}

unint64_t sub_100693628()
{
  unint64_t result = qword_100E89558;
  if (!qword_100E89558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89558);
  }
  return result;
}

uint64_t sub_100693674(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E89560);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1006936DC(uint64_t *a1)
{
  return a1;
}

uint64_t sub_100693750(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100693814()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

unint64_t sub_100693894()
{
  unint64_t result = qword_100E89570;
  if (!qword_100E89570)
  {
    sub_10018C6DC(&qword_100E89568);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89570);
  }
  return result;
}

unint64_t sub_1006938E8()
{
  unint64_t result = qword_100E89578;
  if (!qword_100E89578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89578);
  }
  return result;
}

void sub_100693934(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_100E62858 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_1002102B0(v5, (uint64_t)qword_100F52010);
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    oslog = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 141558531;
      uint64_t v17 = v8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v7 + 12) = 2081;
      swift_bridgeObjectRetain();
      sub_10016414C(a2, a3, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v7 + 22) = 2082;
      swift_errorRetain();
      sub_10017DF08(&qword_100E77F30);
      uint64_t v9 = String.init<A>(describing:)();
      sub_10016414C(v9, v10, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, "Failed to donate location interaction. persistentIdentifier=%{private,mask.hash}s, error=%{public}s", (uint8_t *)v7, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    if (qword_100E62858 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_1002102B0(v11, (uint64_t)qword_100F52010);
    swift_bridgeObjectRetain_n();
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 141558275;
      uint64_t v17 = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v14 + 12) = 2081;
      swift_bridgeObjectRetain();
      sub_10016414C(a2, a3, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Successfully donated location interaction. persistentIdentifier=%{private,mask.hash}s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_100693D60(uint64_t a1, void *a2)
{
  char v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_100693DCC()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  sub_100179C0C();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v19 = type metadata accessor for DispatchQoS();
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = Location.Identifier.intentIdentifier.getter();
  uint64_t v15 = v14;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v13;
  *(void *)(v16 + 24) = v15;
  aBlock[4] = sub_100694794;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10010A4D4;
  aBlock[3] = &unk_100E1F400;
  uint64_t v17 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter();
  sub_100128C74((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10017DF08(&qword_100E75530);
  sub_10012470C((unint64_t *)&qword_100EA0210, &qword_100E75530);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v0);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v12, v19);
  return swift_release();
}

void sub_100694024(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = self;
  sub_10017DF08(&qword_100E66F98);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100C251B0;
  *(void *)(v5 + 32) = a1;
  *(void *)(v5 + 40) = a2;
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  void v9[4] = sub_10069479C;
  v9[5] = v7;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  _OWORD v9[2] = sub_100693D60;
  v9[3] = &unk_100E1F450;
  uint64_t v8 = _Block_copy(v9);
  swift_bridgeObjectRetain();
  swift_release();
  [v4 deleteInteractionsWithIdentifiers:isa completion:v8];
  _Block_release(v8);
}

void sub_100694174(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_100E62858 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_1002102B0(v5, (uint64_t)qword_100F52010);
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    oslog = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 141558531;
      uint64_t v18 = v8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v7 + 12) = 2081;
      swift_bridgeObjectRetain();
      sub_10016414C(a2, a3, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v7 + 22) = 2082;
      swift_errorRetain();
      sub_10017DF08(&qword_100E77F30);
      uint64_t v9 = String.init<A>(describing:)();
      sub_10016414C(v9, v10, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, "Failed to delete donated location interaction. persistentIdentifier=%{private,mask.hash}s, error=%{public}s", (uint8_t *)v7, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    if (qword_100E62858 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_1002102B0(v11, (uint64_t)qword_100F52010);
    swift_bridgeObjectRetain_n();
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315651;
      swift_bridgeObjectRetain();
      sub_10016414C(a2, a3, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v14 + 12) = 2160;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v14 + 22) = 2081;
      sub_10017DF08(&qword_100E89658);
      uint64_t v15 = String.init<A>(describing:)();
      sub_10016414C(v15, v16, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Successfully deleted donated location interaction. persistentIdentifier=%s, error=%{private,mask.hash}s", (uint8_t *)v14, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_1006945FC()
{
  swift_release();
  swift_release();
  sub_100178110(v0 + OBJC_IVAR____TtC7Weather26InteractionDonationManager_previousDonatedLocationIdentifier, &qword_100E6DC08);

  return v0;
}

uint64_t sub_100694658()
{
  sub_1006945FC();

  return swift_deallocClassInstance();
}

uint64_t sub_1006946B0()
{
  return type metadata accessor for InteractionDonationManager();
}

uint64_t sub_1006946B8()
{
  type metadata accessor for Location.Identifier();
  sub_100162E4C();
  sub_100162F0C();
  v0();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_100694754(uint64_t a1)
{
  sub_100693934(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10069475C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_100694794()
{
  sub_100694024(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_10069479C(uint64_t a1)
{
  sub_100694174(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1006947BC()
{
  sub_100165170();
  v42[1] = v2;
  v42[2] = v3;
  uint64_t v4 = sub_10017DF08(&qword_100E639E8);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v45 = v6;
  type metadata accessor for Location();
  sub_10017C83C();
  uint64_t v43 = v8;
  uint64_t v44 = v7;
  __chkstk_darwin(v7);
  sub_10016279C();
  uint64_t v9 = sub_10017DF08(&qword_100EAC4A0);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v46 = v11;
  uint64_t v12 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = type metadata accessor for LocationsState();
  sub_100162E4C();
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)v42 - v23;
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)v42 - v25;
  uint64_t v27 = *(void (**)(void))(v0 + 16);
  sub_1001A2344();
  v27();
  sub_10011A150(v47 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)v26, (void (*)(void))type metadata accessor for LocationsState);
  swift_release();
  sub_10013B3F0((uint64_t)v26, v16);
  sub_100695634((uint64_t)v26, (void (*)(void))type metadata accessor for LocationsState);
  uint64_t v28 = type metadata accessor for CurrentLocation();
  LODWORD(v26) = _s7Weather24LocationCompositionStateOwet_0(v16, 1, v28);
  sub_1001781AC(v16, (uint64_t *)&unk_100EADD50);
  if (v26 != 1)
  {
    uint64_t v29 = (uint64_t)v21;
    uint64_t v31 = v44;
    uint64_t v30 = v45;
    v42[0] = v0;
    uint64_t v32 = v43;
    sub_1001A2344();
    v27();
    sub_10011A150(v47 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)v24, (void (*)(void))type metadata accessor for LocationsState);
    swift_release();
    uint64_t v33 = *(void *)&v24[*(int *)(v17 + 24)];
    swift_bridgeObjectRetain();
    sub_100695634((uint64_t)v24, (void (*)(void))type metadata accessor for LocationsState);
    uint64_t v34 = v46;
    sub_10013C9C4(v33, v46);
    swift_bridgeObjectRelease();
    uint64_t v35 = type metadata accessor for LocationModel();
    if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v35) == 1)
    {
      uint64_t v36 = &qword_100EAC4A0;
      uint64_t v37 = v34;
    }
    else
    {
      sub_10017C83C();
      uint64_t v39 = v38;
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v40 + 88))(v34, v35) != enum case for LocationModel.current(_:))
      {
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v34, v35);
        goto LABEL_9;
      }
      (*(void (**)(uint64_t, uint64_t))(v39 + 96))(v34, v35);
      uint64_t v41 = v34 + *(int *)(sub_10017DF08(&qword_100E63878) + 48);
      sub_100695634(v34, (void (*)(void))&type metadata accessor for CurrentLocation);
      sub_1001781AC(v41, &qword_100E63508);
      sub_1001A2344();
      v27();
      sub_10011A150(v47 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, v29, (void (*)(void))type metadata accessor for LocationsState);
      swift_release();
      sub_100901260();
      sub_100695634(v29, (void (*)(void))type metadata accessor for LocationsState);
      if (_s7Weather24LocationCompositionStateOwet_0(v30, 1, v31) != 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v1, v30, v31);
        sub_1001B1E64((void *)(v42[0] + 48), *(void *)(v42[0] + 72));
        Location.name.getter();
        Location.coordinate.getter();
        sub_10016378C();
        dispatch thunk of LocationMatchHelperType.isSameLocation(first:second:)();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v1, v31);
        goto LABEL_9;
      }
      uint64_t v36 = &qword_100E639E8;
      uint64_t v37 = v30;
    }
    sub_1001781AC(v37, v36);
  }
LABEL_9:
  sub_100179F2C();
}

uint64_t sub_100694CE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3;
  uint64_t v49 = a1;
  uint64_t v50 = a2;
  uint64_t v48 = type metadata accessor for Location.Identifier();
  sub_10017C83C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_100166B4C();
  uint64_t v10 = type metadata accessor for SavedLocation();
  sub_10017C83C();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = type metadata accessor for LocationsState();
  uint64_t v18 = v17 - 8;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = v10;
  uint64_t v43 = a3;
  uint64_t v21 = _s7Weather24LocationCompositionStateOwst_0(a3, 1, 1, v10);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(v5 + 16))(&v51, v21);
  sub_10011A150(v51 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)v20, (void (*)(void))type metadata accessor for LocationsState);
  swift_release();
  uint64_t v22 = *(void *)&v20[*(int *)(v18 + 28)];
  swift_bridgeObjectRetain();
  sub_100695634((uint64_t)v20, (void (*)(void))type metadata accessor for LocationsState);
  uint64_t v23 = *(void *)(v22 + 16);
  if (v23)
  {
    unint64_t v24 = sub_1006955F4();
    uint64_t v25 = *(unsigned __int8 *)(v12 + 80);
    v41[1] = v22;
    uint64_t v26 = v22 + ((v25 + 32) & ~v25);
    uint64_t v27 = *(void *)(v12 + 72);
    uint64_t v46 = (void (**)(uint64_t, uint64_t))(v8 + 8);
    uint64_t v47 = (void *)(v5 + 48);
    double v28 = INFINITY;
    uint64_t v29 = &_s7SwiftUI4ViewP6ChartsE15chartBackground9alignment7contentQrAA9AlignmentV_qd__AD10ChartProxyVctAaBRd__lFQOMQ_ptr;
    uint64_t v44 = v27;
    unint64_t v45 = v24;
    do
    {
      sub_10011A150(v26, v16, (void (*)(void))&type metadata accessor for SavedLocation);
      SavedLocation.identifier.getter();
      uint64_t v30 = (void *)CLLocation.init(_:)();
      id v31 = objc_allocWithZone((Class)v29[496]);
      double v32 = sub_10016378C();
      id v35 = [v33 v34:v32];
      [v30 distanceFromLocation:v35];
      double v37 = v36;

      if (v37 >= v28)
      {
        sub_100695634(v16, (void (*)(void))&type metadata accessor for SavedLocation);
        double v37 = v28;
      }
      else
      {
        sub_1001B1E64(v47, *(void *)(v5 + 72));
        SavedLocation.identifier.getter();
        Location.Identifier.name.getter();
        (*v46)(v4, v48);
        char v38 = dispatch thunk of LocationMatchHelperType.isSameLocation(firstName:secondName:distance:)();
        swift_bridgeObjectRelease();
        if (v38)
        {
          uint64_t v39 = v43;
          sub_1001781AC(v43, &qword_100E66678);
          sub_10016E114(v16, v39, (void (*)(void))&type metadata accessor for SavedLocation);
          _s7Weather24LocationCompositionStateOwst_0(v39, 0, 1, v42);
        }
        else
        {
          sub_100695634(v16, (void (*)(void))&type metadata accessor for SavedLocation);
          double v37 = v28;
        }
        uint64_t v27 = v44;
        uint64_t v29 = &_s7SwiftUI4ViewP6ChartsE15chartBackground9alignment7contentQrAA9AlignmentV_qd__AD10ChartProxyVctAaBRd__lFQOMQ_ptr;
      }
      v26 += v27;
      double v28 = v37;
      --v23;
    }
    while (v23);
  }
  return swift_bridgeObjectRelease();
}

void sub_1006950B0()
{
  sub_100165170();
  uint64_t v4 = v3;
  type metadata accessor for ModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v5);
  uint64_t v6 = sub_100163770();
  uint64_t v7 = type metadata accessor for LocationPreviewViewState(v6);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_10016279C();
  if (v4)
  {
    uint64_t v9 = v4;
  }
  else
  {
    sub_1001A2344();
    v10();
    uint64_t v9 = v11;
  }
  sub_10011A150(v9 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, v2, (void (*)(void))type metadata accessor for ModalViewState);
  if (swift_getEnumCaseMultiPayload())
  {
    swift_retain();
    swift_release();
    sub_100695634(v2, (void (*)(void))type metadata accessor for ModalViewState);
  }
  else
  {
    sub_10016E114(v2, v1, (void (*)(void))type metadata accessor for LocationPreviewViewState);
    sub_1001B1E64((void *)(v0 + 48), *(void *)(v0 + 72));
    swift_retain();
    sub_10081BCB4();
    sub_10081BFBC();
    sub_10016378C();
    dispatch thunk of LocationMatchHelperType.isSameLocation(first:second:)();
    swift_release();
    swift_bridgeObjectRelease();
    sub_100695634(v1, (void (*)(void))type metadata accessor for LocationPreviewViewState);
  }
  sub_100179F2C();
}

void sub_100695298()
{
  sub_100165170();
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  uint64_t v5 = sub_100109308(active);
  __chkstk_darwin(v5);
  sub_100166B4C();
  uint64_t v6 = type metadata accessor for Location.Identifier();
  sub_10017C83C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_10016279C();
  type metadata accessor for ViewState.SecondaryViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v10);
  uint64_t v11 = sub_100163770();
  uint64_t v12 = type metadata accessor for ViewState(v11);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  sub_1001A2344();
  v17();
  sub_10011A150(v20 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v16, (void (*)(void))type metadata accessor for ViewState);
  swift_release();
  sub_10011A150(v16 + *(int *)(v13 + 28), (uint64_t)v3, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
  sub_100695634(v16, (void (*)(void))type metadata accessor for ViewState);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = (void (*)(void))type metadata accessor for ViewState.SecondaryViewState;
    uint64_t v19 = (uint64_t)v3;
  }
  else
  {
    sub_10011A150(*v3 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, v2, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
    if (_s7Weather24LocationCompositionStateOwet_0(v2, 1, v6) != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v1, v2, v6);
      sub_1001B1E64((void *)(v0 + 48), *(void *)(v0 + 72));
      Location.Identifier.name.getter();
      Location.Identifier.coordinate.getter();
      sub_10016378C();
      dispatch thunk of LocationMatchHelperType.isSameLocation(first:second:)();
      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v6);
      goto LABEL_7;
    }
    swift_release();
    uint64_t v18 = (void (*)(void))type metadata accessor for LocationViewerActiveLocationState;
    uint64_t v19 = v2;
  }
  sub_100695634(v19, v18);
LABEL_7:
  sub_100179F2C();
}

uint64_t sub_100695584()
{
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 48);
  return v0;
}

uint64_t sub_1006955C0()
{
  sub_100695584();

  return swift_deallocClassInstance();
}

unint64_t sub_1006955F4()
{
  unint64_t result = qword_100E89708;
  if (!qword_100E89708)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100E89708);
  }
  return result;
}

uint64_t sub_100695634(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10069568C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E897A0);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_10012B614();
  __chkstk_darwin(v6);
  uint64_t v8 = &v12[-v7];
  sub_100183158();
  sub_1006980A0(v2, (uint64_t)v8, &qword_100E897A0);
  uint64_t v9 = sub_10017DF08(&qword_100E7F6A0);
  sub_10012B520((uint64_t)v8, 1, v9);
  if (!v10) {
    return sub_100698130((uint64_t)v8, a1, &qword_100E7F6A0);
  }
  sub_100178110((uint64_t)v8, &qword_100E897A0);
  sub_100695954();
  sub_1006980A0(a1, v1, &qword_100E7F6A0);
  sub_10019D71C();
  sub_1006980E8(v1, v2, &qword_100E897A0);
  return swift_endAccess();
}

uint64_t sub_1006957F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E89798);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_10012B614();
  __chkstk_darwin(v6);
  uint64_t v8 = &v12[-v7];
  sub_100183158();
  sub_1006980A0(v2, (uint64_t)v8, &qword_100E89798);
  uint64_t v9 = sub_10017DF08(&qword_100E89780);
  sub_10012B520((uint64_t)v8, 1, v9);
  if (!v10) {
    return sub_100698130((uint64_t)v8, a1, &qword_100E89780);
  }
  sub_100178110((uint64_t)v8, &qword_100E89798);
  sub_100695954();
  sub_1006980A0(a1, v1, &qword_100E89780);
  sub_10019D71C();
  sub_1006980E8(v1, v2, &qword_100E89798);
  return swift_endAccess();
}

void sub_100695954()
{
  sub_100162EA0();
  uint64_t v1 = v0;
  uint64_t v2 = sub_10017DF08(&qword_100E73CB8);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for Expression();
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_1001626E0();
  v1();
  dispatch thunk of Table.query.getter();
  swift_release();
  SubscriptionEntity.id.getter();
  dispatch thunk of Column.value.getter();
  swift_release();
  if (v15)
  {
    uint64_t v18 = &type metadata for String;
    uint64_t v19 = &protocol witness table for String;
    uint64_t v16 = v14;
    uint64_t v17 = v15;
    sub_1001A0C40();
    sub_100181594();
    *uint64_t v5 = v7;
    v5[1] = v8;
    uint64_t v9 = enum case for OrderBy.descending(_:);
    uint64_t v10 = type metadata accessor for OrderBy();
    sub_100162E4C();
    (*(void (**)(void *, uint64_t, uint64_t))(v11 + 104))(v5, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v10);
    dispatch thunk of Query.first(_:orderBy:)();
    swift_release();
    sub_100178110((uint64_t)v5, &qword_100E73CB8);
    uint64_t v12 = sub_10018C4BC();
    v13(v12);
    sub_100162694();
  }
  else
  {
    __break(1u);
  }
}

id sub_100695B90()
{
  uint64_t v1 = OBJC_IVAR____TtC7Weather43DebugNotificationSubscriptionViewController____lazy_storage___dateFormatter;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC7Weather43DebugNotificationSubscriptionViewController____lazy_storage___dateFormatter);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC7Weather43DebugNotificationSubscriptionViewController____lazy_storage___dateFormatter);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)NSDateFormatter) init];
    sub_1001824FC((uint64_t)[v4 setDateStyle:1], "setTimeStyle:");
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_100695C24(uint64_t a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E7F6A0);
  sub_100187DB4(v3);
  uint64_t v4 = sub_10017DF08(&qword_100E89780);
  sub_100187DB4(v4);
  *(void *)&v1[OBJC_IVAR____TtC7Weather43DebugNotificationSubscriptionViewController____lazy_storage___dateFormatter] = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Weather43DebugNotificationSubscriptionViewController_notificationStore] = a1;
  type metadata accessor for SubscriptionEntity();
  sub_100162808();
  v5();
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for DebugNotificationSubscriptionViewController();
  id v6 = [super initWithStyle:2];
  sub_10016285C();
  v7();
  return v6;
}

void sub_100695D4C()
{
  uint64_t v1 = sub_10017DF08(&qword_100E7F6A0);
  sub_1001633C8(v1);
  uint64_t v2 = sub_10017DF08(&qword_100E89780);
  sub_1001633C8(v2);
  *(void *)&v0[OBJC_IVAR____TtC7Weather43DebugNotificationSubscriptionViewController____lazy_storage___dateFormatter] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100695E08()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_10012B938();
  uint64_t v7 = sub_10017DF08(&qword_100E7F6A8);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  v22.receiver = v0;
  v22.super_class = (Class)type metadata accessor for DebugNotificationSubscriptionViewController();
  [super viewDidLoad];
  id v12 = [v0 tableView];
  if (v12)
  {
    uint64_t v13 = v12;
    sub_10056AF64();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    NSString v15 = String._bridgeToObjectiveC()();
    [v13 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v15];

    SubscriptionEntity.location.getter();
    dispatch thunk of Column.value.getter();
    swift_release();
    uint64_t v16 = sub_10017DF08(&qword_100E7F6B0);
    sub_10012B520(v11, 1, v16);
    if (!v17)
    {
      JSON.value.getter();
      sub_100162880();
      sub_100162F0C();
      v18();
      uint64_t v19 = Location.name.getter();
      uint64_t v21 = v20;
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
      sub_10040BF9C(v19, v21, v2);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100696054(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_10017DF08(&qword_100E89780);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_100162E88();
  uint64_t v7 = sub_10017DF08(&qword_100E7F6A0);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_10012B938();
  switch(a2)
  {
    case 0:
      return 8;
    case 2:
      sub_1006957F0(v2);
      uint64_t v12 = type metadata accessor for DeliveryScheduleEntity();
      int v13 = _s7Weather24LocationCompositionStateOwet_0(v2, 1, v12);
      sub_100178110(v2, &qword_100E89780);
      if (v13 == 1) {
        return 1;
      }
      else {
        return 2;
      }
    case 1:
      sub_10069568C(v3);
      uint64_t ScheduleEntity = type metadata accessor for FetchScheduleEntity();
      int v10 = _s7Weather24LocationCompositionStateOwet_0(v3, 1, ScheduleEntity);
      sub_100178110(v3, &qword_100E7F6A0);
      if (v10 == 1) {
        return 1;
      }
      else {
        return 2;
      }
    default:
      return 0;
  }
}

unint64_t sub_1006961E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = 0x6353206863746546;
  uint64_t v3 = 0x6E6F697461636F4CLL;
  if (a2) {
    uint64_t v3 = 0;
  }
  if (a2 != 1) {
    uint64_t v2 = v3;
  }
  if (a2 == 2) {
    return 0xD000000000000012;
  }
  else {
    return v2;
  }
}

id sub_1006962B0(void *a1)
{
  NSString v2 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v4 = [a1 dequeueReusableCellWithIdentifier:v2 forIndexPath:isa];

  if (IndexPath.section.getter())
  {
    if (IndexPath.section.getter() == 1)
    {
      IndexPath.row.getter();
      sub_100188AB8();
      sub_100697350();
    }
    else if (IndexPath.section.getter() == 2)
    {
      IndexPath.row.getter();
      sub_100188AB8();
      sub_100697840();
    }
  }
  else
  {
    IndexPath.row.getter();
    sub_100188AB8();
    sub_100696C8C();
  }
  return v4;
}

void sub_100696494()
{
  sub_100162EA0();
  uint64_t v62 = v1;
  uint64_t v3 = sub_10017DF08(&qword_100E89780);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_100162E88();
  type metadata accessor for DeliveryScheduleEntity();
  sub_100179C0C();
  uint64_t v57 = v6;
  uint64_t v58 = v5;
  __chkstk_darwin(v5);
  __chkstk_darwin(v7);
  uint64_t v56 = (char *)&v55 - v8;
  uint64_t v9 = sub_10017DF08(&qword_100E73CB8);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  sub_10018105C();
  type metadata accessor for Expression();
  sub_100179C0C();
  uint64_t v60 = v15;
  uint64_t v61 = v14;
  __chkstk_darwin(v14);
  uint64_t v59 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v55 - v18;
  type metadata accessor for IndexPath();
  sub_100179C0C();
  __chkstk_darwin(v20);
  sub_1001626E0();
  uint64_t v21 = IndexPath.section.getter();
  sub_100162808();
  v22();
  if (v21 == 1)
  {
    uint64_t v23 = IndexPath.row.getter();
    uint64_t v24 = sub_1001871EC();
    v25(v24);
    if (v23 == 1)
    {
      uint64_t v26 = v62;
      NotificationStore.fetchSchedules.getter();
      dispatch thunk of Table.query.getter();
      swift_release();
      SubscriptionEntity.id.getter();
      dispatch thunk of Column.value.getter();
      swift_release();
      if (v64)
      {
        uint64_t v67 = &type metadata for String;
        uint64_t v68 = &protocol witness table for String;
        uint64_t v65 = v63;
        uint64_t v66 = v64;
        sub_1001A0C40();
        sub_100181594();
        *NSString v2 = v27;
        v2[1] = v28;
        uint64_t v29 = type metadata accessor for OrderBy();
        sub_100162E4C();
        sub_10018B0D0();
        v30();
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v2, 0, 1, v29);
        uint64_t v31 = dispatch thunk of Query.where(_:orderBy:limit:)();
        swift_release();
        sub_100178110((uint64_t)v2, &qword_100E73CB8);
        sub_100162F0C();
        v32();
        objc_allocWithZone((Class)type metadata accessor for DebugNotificationFetchSchedulesViewController());
        id v33 = sub_100B51924(v31);
        id v34 = [v26 navigationController];
        goto LABEL_14;
      }
      __break(1u);
      goto LABEL_22;
    }
  }
  else
  {
    uint64_t v35 = sub_1001871EC();
    v36(v35);
  }
  if (IndexPath.section.getter() != 2) {
    goto LABEL_17;
  }
  if (!IndexPath.row.getter())
  {
    double v37 = v62;
    sub_1006957F0(v0);
    uint64_t v38 = v58;
    sub_10012B520(v0, 1, v58);
    if (!v39)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v56, v0, v38);
      sub_100162808();
      v49();
      objc_allocWithZone((Class)type metadata accessor for DebugNotificationDeliveryScheduleViewController());
      sub_1008FC554();
      id v33 = v50;
      id v51 = [v37 navigationController];
      if (v51)
      {
        uint64_t v52 = v51;
        [v51 pushViewController:v33 animated:1];

        sub_10016285C();
        v53();
        goto LABEL_17;
      }
      sub_10016285C();
      v54();
      goto LABEL_16;
    }
    sub_100178110(v0, &qword_100E89780);
  }
  if (IndexPath.row.getter() != 1)
  {
LABEL_17:
    sub_100162694();
    return;
  }
  uint64_t v40 = v62;
  NotificationStore.deliverySchedules.getter();
  dispatch thunk of Table.query.getter();
  swift_release();
  SubscriptionEntity.id.getter();
  dispatch thunk of Column.value.getter();
  swift_release();
  if (v64)
  {
    uint64_t v67 = &type metadata for String;
    uint64_t v68 = &protocol witness table for String;
    uint64_t v65 = v63;
    uint64_t v66 = v64;
    sub_1001A0C40();
    sub_100181594();
    *uint64_t v12 = v41;
    v12[1] = v42;
    uint64_t v43 = type metadata accessor for OrderBy();
    sub_100162E4C();
    sub_10018B0D0();
    v44();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v43);
    uint64_t v45 = dispatch thunk of Query.where(_:orderBy:limit:)();
    swift_release();
    sub_100178110((uint64_t)v12, &qword_100E73CB8);
    sub_100162F0C();
    v46();
    objc_allocWithZone((Class)type metadata accessor for DebugNotificationDeliverySchedulesViewController());
    id v33 = sub_1008CFF08(v45);
    id v34 = [v40 navigationController];
LABEL_14:
    id v47 = v34;
    if (v47)
    {
      uint64_t v48 = v47;
      [v47 pushViewController:v33 animated:1];
    }
LABEL_16:

    goto LABEL_17;
  }
LABEL_22:
  __break(1u);
  swift_release();
  sub_100178110((uint64_t)v2, &qword_100E73CB8);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v19, v61);
  swift_unexpectedError();
  __break(1u);
}

void sub_100696C8C()
{
  sub_100162EA0();
  uint64_t v4 = v3;
  uint64_t v56 = v5;
  type metadata accessor for NotificationSubscription.Kind();
  sub_100179C0C();
  v48[2] = v7;
  v48[3] = v6;
  __chkstk_darwin(v6);
  sub_1001626E0();
  v48[1] = v9 - v8;
  type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v49 = v11;
  uint64_t v50 = v10;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_10012B614();
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v48 - v17;
  type metadata accessor for UIListContentConfiguration();
  sub_100179C0C();
  uint64_t v54 = v20;
  uint64_t v55 = v19;
  __chkstk_darwin(v19);
  sub_10012B938();
  uint64_t v21 = sub_10017DF08(&qword_100E7F6A8);
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_1001626E0();
  uint64_t v25 = v24 - v23;
  type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v52 = v27;
  uint64_t v53 = v26;
  __chkstk_darwin(v26);
  uint64_t v51 = v1;
  SubscriptionEntity.location.getter();
  dispatch thunk of Column.value.getter();
  swift_release();
  uint64_t v28 = sub_10017DF08(&qword_100E7F6B0);
  sub_10012B520(v25, 1, v28);
  if (v29)
  {
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    JUMPOUT(0x100697330);
  }
  JSON.value.getter();
  sub_100162880();
  sub_100162F0C();
  v30();
  static UIListContentConfiguration.valueCell()();
  switch(v4)
  {
    case 0:
      UIListContentConfiguration.text.setter();
      Location.id.getter();
      goto LABEL_17;
    case 1:
      UIListContentConfiguration.text.setter();
      Location.name.getter();
      goto LABEL_17;
    case 2:
      UIListContentConfiguration.text.setter();
      id v31 = sub_100695B90();
      SubscriptionEntity.created.getter();
      dispatch thunk of Column.value.getter();
      swift_release();
      uint64_t v32 = type metadata accessor for Date();
      sub_10012B520((uint64_t)v18, 1, v32);
      if (v29) {
        goto LABEL_20;
      }
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      sub_100162880();
      sub_100162F0C();
      uint64_t v35 = v34();
      id v36 = sub_100189094(v35, "stringFromDate:");

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      goto LABEL_17;
    case 3:
      sub_10017F4EC();
      id v37 = sub_100695B90();
      SubscriptionEntity.modified.getter();
      dispatch thunk of Column.value.getter();
      swift_release();
      uint64_t v38 = type metadata accessor for Date();
      sub_10012B520(v0, 1, v38);
      if (v29) {
        goto LABEL_21;
      }
      Class v39 = Date._bridgeToObjectiveC()().super.isa;
      sub_100162880();
      sub_100162F0C();
      v40();
      id v41 = [v37 stringFromDate:v39];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      goto LABEL_17;
    case 4:
      sub_10017F4EC();
      Location.timeZone.getter();
      TimeZone.identifier.getter();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v13, v50);
      goto LABEL_17;
    case 5:
      sub_10017F4EC();
      uint64_t v58 = 0;
      unint64_t v59 = 0xE000000000000000;
      Location.coordinate.getter();
      goto LABEL_16;
    case 6:
      UIListContentConfiguration.text.setter();
      uint64_t v58 = 0;
      unint64_t v59 = 0xE000000000000000;
      Location.coordinate.getter();
LABEL_16:
      Double.write<A>(to:)();
LABEL_17:
      UIListContentConfiguration.secondaryText.setter();
      goto LABEL_18;
    case 7:
      SubscriptionEntity.precipitation.getter();
      dispatch thunk of Column.value.getter();
      swift_release();
      if (v58 == 3) {
        goto LABEL_22;
      }
      SubscriptionEntity.severe.getter();
      dispatch thunk of Column.value.getter();
      swift_release();
      if (v57 == 3) {
        goto LABEL_23;
      }
      NotificationSubscription.Kind.init(precipitation:severe:)();
      UIListContentConfiguration.text.setter();
      NotificationSubscription.Kind.description.getter();
      UIListContentConfiguration.secondaryText.setter();
      sub_100162F0C();
      v42();
LABEL_18:
      uint64_t v43 = v55;
      uint64_t v60 = v55;
      uint64_t v61 = &protocol witness table for UIListContentConfiguration;
      sub_100170694(&v58);
      uint64_t v44 = v54;
      sub_100162808();
      v45();
      uint64_t v46 = v56;
      UITableViewCell.contentConfiguration.setter();
      [v46 setSelectionStyle:0];
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v2, v43);
      sub_100162F0C();
      v47();
      sub_100162694();
      return;
    default:
      goto LABEL_18;
  }
}

void sub_100697350()
{
  sub_100162EA0();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_1001A3344(v9, v54);
  __chkstk_darwin(v10);
  sub_100164AF0();
  __chkstk_darwin(v11);
  sub_10018105C();
  uint64_t v12 = sub_10017DF08(&qword_100E7F6A0);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_10017E3A0();
  type metadata accessor for FetchScheduleEntity();
  sub_100179C0C();
  uint64_t v57 = v14;
  __chkstk_darwin(v14);
  uint64_t v15 = sub_10018A9D4();
  sub_100179C0C();
  __chkstk_darwin(v16);
  sub_100189E18();
  if (v4 == 1)
  {
    uint64_t v19 = sub_1001A2D8C();
    sub_1001824FC(v19, "setAccessoryType:");
    uint64_t v18 = 3;
    goto LABEL_18;
  }
  if (v4)
  {
LABEL_19:
    v59[3] = v15;
    v59[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
    sub_100170694(v59);
    sub_100162808();
    v52();
    UITableViewCell.contentConfiguration.setter();
    sub_10016285C();
    v53();
    sub_100162694();
    return;
  }
  sub_10069568C(v2);
  sub_10012B520(v2, 1, v57);
  if (v17)
  {
    sub_100178110(v2, &qword_100E7F6A0);
    sub_10017F0A8();
    uint64_t v18 = 0;
LABEL_18:
    [v6 setSelectionStyle:v18];
    goto LABEL_19;
  }
  uint64_t v20 = sub_10019FF00();
  v21(v20);
  sub_1001844A4();
  FetchScheduleEntity.valid.getter();
  dispatch thunk of Column.value.getter();
  swift_release();
  if (v58 == 2)
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v58) {
    uint64_t v22 = 0x64696C6156;
  }
  else {
    uint64_t v22 = 0x64696C61766E49;
  }
  if (v58) {
    uint64_t v23 = (void *)0xE500000000000000;
  }
  else {
    uint64_t v23 = (void *)0xE700000000000000;
  }
  uint64_t v24 = v23;
  String.append(_:)(*(Swift::String *)&v22);
  swift_bridgeObjectRelease();
  v25._uint64_t countAndFlagsBits = 8285;
  v25._object = (void *)0xE200000000000000;
  String.append(_:)(v25);
  sub_100695B90();
  sub_100182B04();
  FetchScheduleEntity.date.getter();
  dispatch thunk of Column.value.getter();
  swift_release();
  uint64_t v26 = type metadata accessor for Date();
  sub_10012B520(v0, 1, v26);
  if (v17) {
    goto LABEL_21;
  }
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  sub_100162880();
  uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v0, v26);
  id v30 = sub_100189094(v29, "stringFromDate:");

  id v31 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v33 = v32;

  v34._uint64_t countAndFlagsBits = (uint64_t)v31;
  v34._object = v33;
  String.append(_:)(v34);
  swift_bridgeObjectRelease();
  UIListContentConfiguration.text.setter();
  sub_10019DED8();
  swift_bridgeObjectRelease();
  sub_100183D80();
  sub_100182B04();
  FetchScheduleEntity.created.getter();
  dispatch thunk of Column.value.getter();
  swift_release();
  sub_10012B520(v1, 1, v26);
  if (v17)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  Class v35 = Date._bridgeToObjectiveC()().super.isa;
  sub_100162F0C();
  uint64_t v37 = v36();
  id v38 = sub_100189094(v37, "stringFromDate:");

  Class v39 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v41 = v40;

  v42._uint64_t countAndFlagsBits = (uint64_t)v39;
  v42._object = v41;
  String.append(_:)(v42);
  swift_bridgeObjectRelease();
  sub_1001854C4();
  sub_100695B90();
  sub_100182B04();
  FetchScheduleEntity.modified.getter();
  dispatch thunk of Column.value.getter();
  swift_release();
  sub_10012B520(v56, 1, v26);
  if (!v17)
  {
    Class v43 = Date._bridgeToObjectiveC()().super.isa;
    sub_100162F0C();
    uint64_t v45 = v44();
    id v46 = sub_100189094(v45, "stringFromDate:");

    uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v49 = v48;

    v50._uint64_t countAndFlagsBits = v47;
    v50._object = v49;
    String.append(_:)(v50);
    swift_bridgeObjectRelease();
    UIListContentConfiguration.secondaryText.setter();
    sub_100162F0C();
    v51();
    uint64_t v18 = 0;
    uint64_t v6 = v55;
    goto LABEL_18;
  }
LABEL_23:
  __break(1u);
}

void sub_100697840()
{
  sub_100162EA0();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_1001A3344(v10, v54);
  __chkstk_darwin(v11);
  sub_100164AF0();
  __chkstk_darwin(v12);
  sub_10018105C();
  uint64_t v13 = sub_10017DF08(&qword_100E89780);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_10017E3A0();
  type metadata accessor for DeliveryScheduleEntity();
  sub_100179C0C();
  uint64_t v57 = v16;
  uint64_t v58 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = sub_10018A9D4();
  sub_100179C0C();
  __chkstk_darwin(v18);
  sub_100189E18();
  if (v5 == 1)
  {
    uint64_t v19 = sub_1001A2D8C();
    sub_1001824FC(v19, "setAccessoryType:");
    [v7 setSelectionStyle:3];
    goto LABEL_12;
  }
  if (v5)
  {
LABEL_12:
    v59[3] = v17;
    v59[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
    sub_100170694(v59);
    sub_100162808();
    v52();
    UITableViewCell.contentConfiguration.setter();
    sub_10016285C();
    v53();
    sub_100162694();
    return;
  }
  sub_1006957F0(v3);
  sub_10012B520(v3, 1, v58);
  if (v26)
  {
    sub_100178110(v3, &qword_100E89780);
    sub_10017F0A8();
    [v7 setSelectionStyle:0];
    goto LABEL_12;
  }
  uint64_t v20 = sub_10019FF00();
  v21(v20);
  sub_1001844A4();
  uint64_t v22 = (void *)DeliveryScheduleEntity.state.getter();
  sub_10017DF08(&qword_100E89788);
  sub_10069804C();
  v23._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v23);
  swift_release();
  swift_bridgeObjectRelease();
  v24._uint64_t countAndFlagsBits = 8285;
  v24._object = (void *)0xE200000000000000;
  String.append(_:)(v24);
  sub_100695B90();
  sub_100182B04();
  DeliveryScheduleEntity.date.getter();
  dispatch thunk of Column.value.getter();
  swift_release();
  uint64_t v25 = type metadata accessor for Date();
  sub_10012B520(v1, 1, v25);
  if (v26)
  {
    __break(1u);
    goto LABEL_14;
  }
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  sub_100162880();
  uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v1, v25);
  id v30 = sub_100189094(v29, "stringFromDate:");

  id v31 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v33 = v32;

  v34._uint64_t countAndFlagsBits = (uint64_t)v31;
  v34._object = v33;
  String.append(_:)(v34);
  swift_bridgeObjectRelease();
  UIListContentConfiguration.text.setter();
  sub_10019DED8();
  swift_bridgeObjectRelease();
  sub_100183D80();
  sub_100182B04();
  DeliveryScheduleEntity.created.getter();
  dispatch thunk of Column.value.getter();
  swift_release();
  sub_10012B520(v2, 1, v25);
  if (v26)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  Class v35 = Date._bridgeToObjectiveC()().super.isa;
  sub_100162F0C();
  uint64_t v37 = v36();
  id v38 = sub_100189094(v37, "stringFromDate:");

  Class v39 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v41 = v40;

  v42._uint64_t countAndFlagsBits = (uint64_t)v39;
  v42._object = v41;
  String.append(_:)(v42);
  swift_bridgeObjectRelease();
  sub_1001854C4();
  sub_100695B90();
  sub_100182B04();
  DeliveryScheduleEntity.modified.getter();
  dispatch thunk of Column.value.getter();
  swift_release();
  sub_10012B520(v56, 1, v25);
  if (!v26)
  {
    Class v43 = Date._bridgeToObjectiveC()().super.isa;
    sub_100162F0C();
    uint64_t v45 = v44();
    id v46 = sub_100189094(v45, "stringFromDate:");

    uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v49 = v48;

    v50._uint64_t countAndFlagsBits = v47;
    v50._object = v49;
    String.append(_:)(v50);
    swift_bridgeObjectRelease();
    uint64_t v51 = UIListContentConfiguration.secondaryText.setter();
    sub_1001824FC(v51, "setAccessoryType:");
    [v55 setSelectionStyle:3];
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v0, v58);
    goto LABEL_12;
  }
LABEL_15:
  __break(1u);
}

void sub_100697D3C()
{
}

void sub_100697D7C()
{
}

id sub_100697DD4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DebugNotificationSubscriptionViewController();
  return [super dealloc];
}

uint64_t sub_100697EC0()
{
  return type metadata accessor for DebugNotificationSubscriptionViewController();
}

uint64_t type metadata accessor for DebugNotificationSubscriptionViewController()
{
  uint64_t result = qword_100E89760;
  if (!qword_100E89760) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100697F10()
{
  type metadata accessor for SubscriptionEntity();
  if (v0 <= 0x3F)
  {
    sub_100017E34(319, &qword_100E89770, &qword_100E7F6A0);
    if (v1 <= 0x3F)
    {
      sub_100017E34(319, &qword_100E89778, &qword_100E89780);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

unint64_t sub_10069804C()
{
  unint64_t result = qword_100E89790;
  if (!qword_100E89790)
  {
    sub_10018C6DC(&qword_100E89788);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89790);
  }
  return result;
}

uint64_t sub_1006980A0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100163E60(a1, a2, a3);
  sub_100162E4C();
  uint64_t v4 = sub_10016518C();
  v5(v4);
  return v3;
}

uint64_t sub_1006980E8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100163E60(a1, a2, a3);
  sub_100162E4C();
  uint64_t v4 = sub_10016518C();
  v5(v4);
  return v3;
}

uint64_t sub_100698130(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100163E60(a1, a2, a3);
  sub_100162E4C();
  uint64_t v4 = sub_10016518C();
  v5(v4);
  return v3;
}

uint64_t getEnumTagSinglePayload for OptInUserStatus(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD)
  {
    unsigned int v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 3;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100698228);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 < 2) {
    return 0;
  }
  unsigned int v8 = (v7 + 2147483646) & 0x7FFFFFFF;
  uint64_t result = v8 - 1;
  if (v8 <= 1) {
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for OptInUserStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFD) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v7 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x100698310);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_100698338(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

unsigned char *sub_100698354(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for OptInUserStatus()
{
  return &type metadata for OptInUserStatus;
}

uint64_t sub_10069837C(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  unsigned int v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __chkstk_darwin(v3);
  unsigned int v8 = &v20[-v7];
  __chkstk_darwin(v6);
  uint64_t v10 = &v20[-v9];
  uint64_t v22 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
  sub_10013B3F0(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)&v20[-v9]);
  uint64_t v11 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn;
  int v23 = *(unsigned __int8 *)(v11 + *(int *)(type metadata accessor for NotificationsOptInState() + 56));
  sub_10013B3F0((uint64_t)v10, (uint64_t)v8);
  uint64_t v12 = type metadata accessor for CurrentLocation();
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13 == 1)
  {
    sub_100563488((uint64_t)v8);
  }
  else
  {
    CurrentLocation.id.getter();
    sub_10013C8C4((uint64_t)v8);
  }
  sub_1001815C0();
  sub_10013F4E8();
  int v21 = v14;
  swift_bridgeObjectRelease();
  sub_10013B3F0((uint64_t)v10, (uint64_t)v5);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v12) == 1)
  {
    sub_100563488((uint64_t)v5);
  }
  else
  {
    CurrentLocation.id.getter();
    sub_10013C8C4((uint64_t)v5);
  }
  sub_1001815C0();
  sub_10013F4D0();
  char v16 = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess();
  uint64_t v18 = sub_10013D94C(v23, v21 & 1, v16 & 1, *(unsigned char *)(v17 + 1), *(unsigned char *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications));
  swift_release();
  sub_100563488((uint64_t)v10);
  return v18;
}

uint64_t sub_100698620(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7265735577656ELL && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6E49646574706FLL && a2 == 0xE700000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x64656E696C636564 && a2 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_100698778(char a1)
{
  if (!a1) {
    return 0x7265735577656ELL;
  }
  if (a1 == 1) {
    return 0x6E49646574706FLL;
  }
  return 0x64656E696C636564;
}

uint64_t sub_1006987D0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7265766F4377656ELL && a2 == 0xEB00000000656761)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_100698870()
{
  return 0x7265766F4377656ELL;
}

uint64_t sub_100698890(void *a1, unsigned __int8 a2)
{
  int v14 = a2;
  sub_10017DF08(&qword_100E897E8);
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_100109314();
  sub_10017DF08(&qword_100E897F0);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_1001626E0();
  sub_10017DF08(&qword_100E897F8);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_1001626E0();
  sub_10017DF08(&qword_100E89800);
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_1001626E0();
  sub_1001B1E64(a1, a1[3]);
  sub_1006992D8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  if (v14 == 2)
  {
    sub_100699370();
    sub_100178FC0();
    goto LABEL_5;
  }
  if (v14 == 3)
  {
    sub_100699324();
    sub_100178FC0();
    sub_100184704();
LABEL_5:
    sub_100162F0C();
    v7();
    uint64_t v8 = sub_10017E77C();
    return v9(v8);
  }
  sub_1006993BC();
  sub_100178FC0();
  KeyedEncodingContainer.encode(_:forKey:)();
  sub_100184704();
  sub_100162F0C();
  v11();
  uint64_t v12 = sub_10017E77C();
  return v13(v12);
}

uint64_t sub_100698B38(void *a1)
{
  sub_10017DF08(&qword_100E897A8);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_100109314();
  sub_10017DF08(&qword_100E897B0);
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_1001626E0();
  sub_10017DF08(&qword_100E897B8);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v5 = sub_10017DF08(&qword_100E897C0);
  sub_100179C0C();
  uint64_t v32 = v6;
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = (uint64_t)sub_1001B1E64(a1, a1[3]);
  sub_1006992D8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v33) {
    goto LABEL_12;
  }
  uint64_t v34 = (uint64_t)a1;
  uint64_t v11 = v10;
  uint64_t v12 = KeyedDecodingContainer.allKeys.getter();
  uint64_t v13 = *(void *)(v12 + 16);
  uint64_t v14 = v5;
  if (!v13)
  {
    uint64_t v22 = v32;
LABEL_9:
    uint64_t v23 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v25 = v24;
    sub_10017DF08(&qword_100E67280);
    void *v25 = &type metadata for OptInUserStatus;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v23 - 8) + 104))(v25, enum case for DecodingError.typeMismatch(_:), v23);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v11, v14);
    a1 = (void *)v34;
LABEL_12:
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
    return v11;
  }
  int v15 = *(unsigned __int8 *)(v12 + 32);
  sub_100723214(1, v13, v12, v12 + 32, 0, (2 * v13) | 1);
  uint64_t v17 = v16;
  unint64_t v19 = v18;
  swift_bridgeObjectRelease();
  if (v17 != v19 >> 1)
  {
    uint64_t v22 = v32;
    uint64_t v11 = v10;
    goto LABEL_9;
  }
  if (v15)
  {
    if (v15 == 1)
    {
      sub_100699370();
      sub_100163798();
      sub_100162F0C();
      v20();
      swift_unknownObjectRelease();
      sub_100162F0C();
      v21();
      uint64_t v11 = 2;
    }
    else
    {
      sub_100699324();
      sub_100163798();
      sub_100162F0C();
      v27();
      swift_unknownObjectRelease();
      sub_100162F0C();
      v28();
      uint64_t v11 = 3;
    }
  }
  else
  {
    sub_1006993BC();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    char v29 = KeyedDecodingContainer.decode(_:forKey:)();
    sub_100162F0C();
    v30();
    swift_unknownObjectRelease();
    sub_100184704();
    sub_100162F0C();
    v31();
    uint64_t v11 = v29 & 1;
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v34);
  return v11;
}

uint64_t sub_100699044()
{
  return sub_100698778(*v0);
}

uint64_t sub_10069904C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100698620(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100699074(uint64_t a1)
{
  unint64_t v2 = sub_1006992D8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006990B0(uint64_t a1)
{
  unint64_t v2 = sub_1006992D8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006990EC(uint64_t a1)
{
  unint64_t v2 = sub_100699324();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100699128(uint64_t a1)
{
  unint64_t v2 = sub_100699324();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100699168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1006987D0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100699194(uint64_t a1)
{
  unint64_t v2 = sub_1006993BC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006991D0(uint64_t a1)
{
  unint64_t v2 = sub_1006993BC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10069920C(uint64_t a1)
{
  unint64_t v2 = sub_100699370();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100699248(uint64_t a1)
{
  unint64_t v2 = sub_100699370();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100699284(char *a1, char *a2)
{
  return sub_100222164(*a1, *a2);
}

uint64_t sub_100699290@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100698B38(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1006992BC(void *a1)
{
  return sub_100698890(a1, *v1);
}

unint64_t sub_1006992D8()
{
  unint64_t result = qword_100E897C8;
  if (!qword_100E897C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E897C8);
  }
  return result;
}

unint64_t sub_100699324()
{
  unint64_t result = qword_100E897D0;
  if (!qword_100E897D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E897D0);
  }
  return result;
}

unint64_t sub_100699370()
{
  unint64_t result = qword_100E897D8;
  if (!qword_100E897D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E897D8);
  }
  return result;
}

unint64_t sub_1006993BC()
{
  unint64_t result = qword_100E897E0;
  if (!qword_100E897E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E897E0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for OptInUserStatus.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1006994D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OptInUserStatus.CodingKeys()
{
  return &type metadata for OptInUserStatus.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for OptInUserStatus.NewUserCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1006995A8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for OptInUserStatus.NewUserCodingKeys()
{
  return &type metadata for OptInUserStatus.NewUserCodingKeys;
}

ValueMetadata *type metadata accessor for OptInUserStatus.OptedInCodingKeys()
{
  return &type metadata for OptInUserStatus.OptedInCodingKeys;
}

ValueMetadata *type metadata accessor for OptInUserStatus.DeclinedCodingKeys()
{
  return &type metadata for OptInUserStatus.DeclinedCodingKeys;
}

unint64_t sub_100699604()
{
  unint64_t result = qword_100E89808;
  if (!qword_100E89808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89808);
  }
  return result;
}

unint64_t sub_100699654()
{
  unint64_t result = qword_100E89810;
  if (!qword_100E89810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89810);
  }
  return result;
}

unint64_t sub_1006996A4()
{
  unint64_t result = qword_100E89818;
  if (!qword_100E89818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89818);
  }
  return result;
}

unint64_t sub_1006996F4()
{
  unint64_t result = qword_100E89820;
  if (!qword_100E89820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89820);
  }
  return result;
}

unint64_t sub_100699744()
{
  unint64_t result = qword_100E89828;
  if (!qword_100E89828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89828);
  }
  return result;
}

unint64_t sub_100699794()
{
  unint64_t result = qword_100E89830;
  if (!qword_100E89830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89830);
  }
  return result;
}

unint64_t sub_1006997E4()
{
  unint64_t result = qword_100E89838;
  if (!qword_100E89838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89838);
  }
  return result;
}

unint64_t sub_100699834()
{
  unint64_t result = qword_100E89840;
  if (!qword_100E89840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89840);
  }
  return result;
}

unint64_t sub_100699884()
{
  unint64_t result = qword_100E89848;
  if (!qword_100E89848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89848);
  }
  return result;
}

unint64_t sub_1006998D4()
{
  unint64_t result = qword_100E89850;
  if (!qword_100E89850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89850);
  }
  return result;
}

ValueMetadata *type metadata accessor for MoonDetailTracker()
{
  return &type metadata for MoonDetailTracker;
}

BOOL static MKCoordinateRegion.== infix(_:_:)(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  BOOL v8 = a1 == a5;
  if (a2 != a6) {
    BOOL v8 = 0;
  }
  if (a4 != a8) {
    BOOL v8 = 0;
  }
  return a3 == a7 && v8;
}

BOOL sub_100699954(double *a1, double *a2)
{
  return static MKCoordinateRegion.== infix(_:_:)(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

char *sub_100699968(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    type metadata accessor for ArticleModel();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v7;
      uint64_t v8 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v8;
      uint64_t v9 = (int *)type metadata accessor for NewsArticle();
      uint64_t v10 = v9[6];
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      uint64_t v13 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
      {
        uint64_t v14 = sub_10017DF08(&qword_100E749B0);
        memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
      }
      uint64_t v17 = v9[7];
      unint64_t v18 = &a1[v17];
      unint64_t v19 = &a2[v17];
      uint64_t v20 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      int v21 = (void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      uint64_t v32 = *v21;
      (*v21)(&a1[v9[8]], &a2[v9[8]], v13);
      uint64_t v22 = v9[9];
      uint64_t v23 = &a1[v22];
      Swift::String v24 = &a2[v22];
      uint64_t v25 = *(void *)&a2[v22 + 8];
      *(void *)uint64_t v23 = *(void *)&a2[v22];
      *((void *)v23 + 1) = v25;
      uint64_t v26 = *(void *)&a2[v22 + 24];
      *((void *)v23 + 2) = *(void *)&a2[v22 + 16];
      *((void *)v23 + 3) = v26;
      uint64_t v27 = *(int *)(type metadata accessor for NewsChannel() + 24);
      uint64_t v28 = &v23[v27];
      char v29 = &v24[v27];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v13))
      {
        uint64_t v30 = sub_10017DF08(&qword_100E749B0);
        memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        v32(v28, v29, v13);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v13);
      }
      *(void *)&a1[v9[10]] = *(void *)&a2[v9[10]];
      *(void *)&a1[v9[11]] = *(void *)&a2[v9[11]];
      *(void *)&a1[v9[12]] = *(void *)&a2[v9[12]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v16 = type metadata accessor for Article();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
    }
    swift_storeEnumTagMultiPayload();
    a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  }
  return a1;
}

uint64_t sub_100699CD8(uint64_t a1)
{
  type metadata accessor for ArticleModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = (int *)type metadata accessor for NewsArticle();
    uint64_t v3 = a1 + v2[6];
    uint64_t v4 = type metadata accessor for URL();
    if (!_s7Weather24LocationCompositionStateOwet_0(v3, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
    }
    uint64_t v5 = a1 + v2[7];
    uint64_t v6 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    v7(a1 + v2[8], v4);
    uint64_t v8 = a1 + v2[9];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = v8 + *(int *)(type metadata accessor for NewsChannel() + 24);
    if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v4)) {
      v7(v9, v4);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = type metadata accessor for Article();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
    return v12(a1, v11);
  }
}

char *sub_100699EE4(char *a1, char *a2, uint64_t a3)
{
  type metadata accessor for ArticleModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v6;
    uint64_t v7 = *((void *)a2 + 3);
    *((void *)a1 + 2) = *((void *)a2 + 2);
    *((void *)a1 + 3) = v7;
    uint64_t v8 = (int *)type metadata accessor for NewsArticle();
    uint64_t v9 = v8[6];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v30 = a3;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
    {
      uint64_t v13 = sub_10017DF08(&qword_100E749B0);
      memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
    }
    uint64_t v15 = v8[7];
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    uint64_t v18 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    unint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    v19(&a1[v8[8]], &a2[v8[8]], v12);
    uint64_t v20 = v8[9];
    int v21 = &a1[v20];
    uint64_t v22 = &a2[v20];
    uint64_t v23 = *(void *)&a2[v20 + 8];
    *(void *)int v21 = *(void *)&a2[v20];
    *((void *)v21 + 1) = v23;
    uint64_t v24 = *(void *)&a2[v20 + 24];
    *((void *)v21 + 2) = *(void *)&a2[v20 + 16];
    *((void *)v21 + 3) = v24;
    uint64_t v25 = *(int *)(type metadata accessor for NewsChannel() + 24);
    uint64_t v26 = &v21[v25];
    uint64_t v27 = &v22[v25];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v12))
    {
      uint64_t v28 = sub_10017DF08(&qword_100E749B0);
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      v19(v26, v27, v12);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v12);
    }
    a3 = v30;
    *(void *)&a1[v8[10]] = *(void *)&a2[v8[10]];
    *(void *)&a1[v8[11]] = *(void *)&a2[v8[11]];
    *(void *)&a1[v8[12]] = *(void *)&a2[v8[12]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v14 = type metadata accessor for Article();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
  }
  swift_storeEnumTagMultiPayload();
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_10069A200(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10069B3D0((uint64_t)a1, (void (*)(void))type metadata accessor for ArticleModel);
    type metadata accessor for ArticleModel();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = *((void *)a2 + 3);
      uint64_t v6 = (int *)type metadata accessor for NewsArticle();
      uint64_t v7 = v6[6];
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v26 = a3;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
      {
        uint64_t v11 = sub_10017DF08(&qword_100E749B0);
        memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
      }
      uint64_t v13 = v6[7];
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      uint64_t v16 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
      v17(&a1[v6[8]], &a2[v6[8]], v10);
      uint64_t v18 = v6[9];
      unint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      *(void *)unint64_t v19 = *(void *)&a2[v18];
      *((void *)v19 + 1) = *(void *)&a2[v18 + 8];
      *((void *)v19 + 2) = *(void *)&a2[v18 + 16];
      *((void *)v19 + 3) = *(void *)&a2[v18 + 24];
      uint64_t v21 = *(int *)(type metadata accessor for NewsChannel() + 24);
      uint64_t v22 = &v19[v21];
      uint64_t v23 = &v20[v21];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v10))
      {
        uint64_t v24 = sub_10017DF08(&qword_100E749B0);
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        v17(v22, v23, v10);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v10);
      }
      a3 = v26;
      *(void *)&a1[v6[10]] = *(void *)&a2[v6[10]];
      *(void *)&a1[v6[11]] = *(void *)&a2[v6[11]];
      *(void *)&a1[v6[12]] = *(void *)&a2[v6[12]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v12 = type metadata accessor for Article();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_10069A560(char *a1, char *a2, uint64_t a3)
{
  type metadata accessor for ArticleModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v6;
    uint64_t v7 = (int *)type metadata accessor for NewsArticle();
    uint64_t v8 = v7[6];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = type metadata accessor for URL();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_10017DF08(&qword_100E749B0);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v14 = v7[7];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    uint64_t v17 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32);
    v18(&a1[v7[8]], &a2[v7[8]], v11);
    uint64_t v19 = v7[9];
    uint64_t v20 = &a1[v19];
    uint64_t v21 = &a2[v19];
    long long v22 = *(_OWORD *)&a2[v19 + 16];
    *(_OWORD *)uint64_t v20 = *(_OWORD *)&a2[v19];
    *((_OWORD *)v20 + 1) = v22;
    uint64_t v23 = *(int *)(type metadata accessor for NewsChannel() + 24);
    uint64_t v24 = &v20[v23];
    uint64_t v25 = &v21[v23];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v11))
    {
      uint64_t v26 = sub_10017DF08(&qword_100E749B0);
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      v18(v24, v25, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v11);
    }
    *(void *)&a1[v7[10]] = *(void *)&a2[v7[10]];
    *(void *)&a1[v7[11]] = *(void *)&a2[v7[11]];
    *(void *)&a1[v7[12]] = *(void *)&a2[v7[12]];
  }
  else
  {
    uint64_t v13 = type metadata accessor for Article();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
  }
  swift_storeEnumTagMultiPayload();
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_10069A828(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10069B3D0((uint64_t)a1, (void (*)(void))type metadata accessor for ArticleModel);
    type metadata accessor for ArticleModel();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v6 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v6;
      uint64_t v7 = (int *)type metadata accessor for NewsArticle();
      uint64_t v8 = v7[6];
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
      {
        uint64_t v12 = sub_10017DF08(&qword_100E749B0);
        memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
      }
      uint64_t v14 = v7[7];
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      uint64_t v17 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32);
      v18(&a1[v7[8]], &a2[v7[8]], v11);
      uint64_t v19 = v7[9];
      uint64_t v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      long long v22 = *(_OWORD *)&a2[v19 + 16];
      *(_OWORD *)uint64_t v20 = *(_OWORD *)&a2[v19];
      *((_OWORD *)v20 + 1) = v22;
      uint64_t v23 = *(int *)(type metadata accessor for NewsChannel() + 24);
      uint64_t v24 = &v20[v23];
      uint64_t v25 = &v21[v23];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v11))
      {
        uint64_t v26 = sub_10017DF08(&qword_100E749B0);
        memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        v18(v24, v25, v11);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v11);
      }
      *(void *)&a1[v7[10]] = *(void *)&a2[v7[10]];
      *(void *)&a1[v7[11]] = *(void *)&a2[v7[11]];
      *(void *)&a1[v7[12]] = *(void *)&a2[v7[12]];
    }
    else
    {
      uint64_t v13 = type metadata accessor for Article();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  return a1;
}

uint64_t sub_10069AB14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10069AB28);
}

uint64_t sub_10069AB28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for ArticleModel();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  }
  else
  {
    unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 2) {
      return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_10069ABC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10069ABD8);
}

void sub_10069ABD8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for ArticleModel();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
}

uint64_t sub_10069AC60(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C6369747261 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000100CADDA0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_10069AD50(char a1)
{
  if (a1) {
    return 0xD000000000000011;
  }
  else {
    return 0x656C6369747261;
  }
}

uint64_t sub_10069AD8C(void *a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E89900);
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  sub_1001B1E64(a1, a1[3]);
  sub_10069B2BC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for ArticleModel();
  sub_10069B428(&qword_100E89908);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for NewsArticleComponent();
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_10069AEFC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for ArticleModel();
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v21 = v6 - v5;
  uint64_t v22 = sub_10017DF08(&qword_100E898E8);
  sub_100179C0C();
  uint64_t v20 = v7;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = type metadata accessor for NewsArticleComponent();
  sub_100162E4C();
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  sub_1001B1E64(a1, a1[3]);
  sub_10069B2BC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  sub_10069B428(&qword_100E898F8);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  sub_10069B308(v21, v16);
  char v17 = KeyedDecodingContainer.decode(_:forKey:)();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v11, v22);
  *(unsigned char *)(v16 + *(int *)(v12 + 20)) = v17 & 1;
  sub_10069B36C(v16, a2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return sub_10069B3D0(v16, (void (*)(void))type metadata accessor for NewsArticleComponent);
}

uint64_t sub_10069B184(uint64_t a1, uint64_t a2)
{
  if (sub_10069C894(a1, a2))
  {
    uint64_t v4 = type metadata accessor for NewsArticleComponent();
    char v5 = *(unsigned char *)(a1 + *(int *)(v4 + 20)) ^ *(unsigned char *)(a2 + *(int *)(v4 + 20)) ^ 1;
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_10069B1E0()
{
  return sub_10069AD50(*v0);
}

uint64_t sub_10069B1E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10069AC60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10069B210(uint64_t a1)
{
  unint64_t v2 = sub_10069B2BC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10069B24C(uint64_t a1)
{
  unint64_t v2 = sub_10069B2BC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10069B288@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10069AEFC(a1, a2);
}

uint64_t sub_10069B2A0(void *a1)
{
  return sub_10069AD8C(a1);
}

unint64_t sub_10069B2BC()
{
  unint64_t result = qword_100E898F0;
  if (!qword_100E898F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E898F0);
  }
  return result;
}

uint64_t sub_10069B308(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ArticleModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10069B36C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewsArticleComponent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10069B3D0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10069B428(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ArticleModel();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NewsArticleComponent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10069B538);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsArticleComponent.CodingKeys()
{
  return &type metadata for NewsArticleComponent.CodingKeys;
}

unint64_t sub_10069B574()
{
  unint64_t result = qword_100E89910;
  if (!qword_100E89910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89910);
  }
  return result;
}

unint64_t sub_10069B5C4()
{
  unint64_t result = qword_100E89918;
  if (!qword_100E89918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89918);
  }
  return result;
}

unint64_t sub_10069B614()
{
  unint64_t result = qword_100E89920;
  if (!qword_100E89920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89920);
  }
  return result;
}

char *sub_10069B660(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v6;
      uint64_t v7 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v7;
      uint64_t v8 = (int *)type metadata accessor for NewsArticle();
      uint64_t v9 = v8[6];
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      uint64_t v12 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
      {
        uint64_t v13 = sub_10017DF08(&qword_100E749B0);
        memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
      }
      uint64_t v16 = v8[7];
      char v17 = &a1[v16];
      uint64_t v18 = &a2[v16];
      uint64_t v19 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      uint64_t v20 = (void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      id v31 = *v20;
      (*v20)(&a1[v8[8]], &a2[v8[8]], v12);
      uint64_t v21 = v8[9];
      uint64_t v22 = &a1[v21];
      uint64_t v23 = &a2[v21];
      uint64_t v24 = *(void *)&a2[v21 + 8];
      *(void *)uint64_t v22 = *(void *)&a2[v21];
      *((void *)v22 + 1) = v24;
      uint64_t v25 = *(void *)&a2[v21 + 24];
      *((void *)v22 + 2) = *(void *)&a2[v21 + 16];
      *((void *)v22 + 3) = v25;
      uint64_t v26 = *(int *)(type metadata accessor for NewsChannel() + 24);
      uint64_t v27 = &v22[v26];
      uint64_t v28 = &v23[v26];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v12))
      {
        uint64_t v29 = sub_10017DF08(&qword_100E749B0);
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        v31(v27, v28, v12);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v12);
      }
      *(void *)&a1[v8[10]] = *(void *)&a2[v8[10]];
      *(void *)&a1[v8[11]] = *(void *)&a2[v8[11]];
      *(void *)&a1[v8[12]] = *(void *)&a2[v8[12]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v15 = type metadata accessor for Article();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10069B9B4(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v2 = (int *)type metadata accessor for NewsArticle();
    uint64_t v3 = a1 + v2[6];
    uint64_t v4 = type metadata accessor for URL();
    if (!_s7Weather24LocationCompositionStateOwet_0(v3, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
    }
    uint64_t v5 = a1 + v2[7];
    uint64_t v6 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    v7(a1 + v2[8], v4);
    uint64_t v8 = a1 + v2[9];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = v8 + *(int *)(type metadata accessor for NewsChannel() + 24);
    if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v4)) {
      v7(v9, v4);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = type metadata accessor for Article();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
    return v12(a1, v11);
  }
}

char *sub_10069BBB0(char *a1, char *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v4;
    uint64_t v5 = *((void *)a2 + 3);
    *((void *)a1 + 2) = *((void *)a2 + 2);
    *((void *)a1 + 3) = v5;
    uint64_t v6 = (int *)type metadata accessor for NewsArticle();
    uint64_t v7 = v6[6];
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = sub_10017DF08(&qword_100E749B0);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
    }
    uint64_t v13 = v6[7];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    uint64_t v16 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    char v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v17(&a1[v6[8]], &a2[v6[8]], v10);
    uint64_t v18 = v6[9];
    uint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    uint64_t v21 = *(void *)&a2[v18 + 8];
    *(void *)uint64_t v19 = *(void *)&a2[v18];
    *((void *)v19 + 1) = v21;
    uint64_t v22 = *(void *)&a2[v18 + 24];
    *((void *)v19 + 2) = *(void *)&a2[v18 + 16];
    *((void *)v19 + 3) = v22;
    uint64_t v23 = *(int *)(type metadata accessor for NewsChannel() + 24);
    uint64_t v24 = &v19[v23];
    uint64_t v25 = &v20[v23];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v10))
    {
      uint64_t v26 = sub_10017DF08(&qword_100E749B0);
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      v17(v24, v25, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v10);
    }
    *(void *)&a1[v6[10]] = *(void *)&a2[v6[10]];
    *(void *)&a1[v6[11]] = *(void *)&a2[v6[11]];
    *(void *)&a1[v6[12]] = *(void *)&a2[v6[12]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v12 = type metadata accessor for Article();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_10069BEB0(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_10069D758((uint64_t)a1, (void (*)(void))type metadata accessor for ArticleModel);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = *((void *)a2 + 3);
      uint64_t v4 = (int *)type metadata accessor for NewsArticle();
      uint64_t v5 = v4[6];
      uint64_t v6 = &a1[v5];
      uint64_t v7 = &a2[v5];
      uint64_t v8 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8))
      {
        uint64_t v9 = sub_10017DF08(&qword_100E749B0);
        memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 0, 1, v8);
      }
      uint64_t v11 = v4[7];
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
      v15(&a1[v4[8]], &a2[v4[8]], v8);
      uint64_t v16 = v4[9];
      char v17 = &a1[v16];
      uint64_t v18 = &a2[v16];
      *(void *)char v17 = *(void *)&a2[v16];
      *((void *)v17 + 1) = *(void *)&a2[v16 + 8];
      *((void *)v17 + 2) = *(void *)&a2[v16 + 16];
      *((void *)v17 + 3) = *(void *)&a2[v16 + 24];
      uint64_t v19 = *(int *)(type metadata accessor for NewsChannel() + 24);
      uint64_t v20 = &v17[v19];
      uint64_t v21 = &v18[v19];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v8))
      {
        uint64_t v22 = sub_10017DF08(&qword_100E749B0);
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        v15(v20, v21, v8);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v8);
      }
      *(void *)&a1[v4[10]] = *(void *)&a2[v4[10]];
      *(void *)&a1[v4[11]] = *(void *)&a2[v4[11]];
      *(void *)&a1[v4[12]] = *(void *)&a2[v4[12]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v10 = type metadata accessor for Article();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_10069C1F4(char *a1, char *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v4 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v4;
    uint64_t v5 = (int *)type metadata accessor for NewsArticle();
    uint64_t v6 = v5[6];
    uint64_t v7 = &a1[v6];
    uint64_t v8 = &a2[v6];
    uint64_t v9 = type metadata accessor for URL();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
    {
      uint64_t v10 = sub_10017DF08(&qword_100E749B0);
      memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
    }
    uint64_t v12 = v5[7];
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    uint64_t v15 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
    v16(&a1[v5[8]], &a2[v5[8]], v9);
    uint64_t v17 = v5[9];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    long long v20 = *(_OWORD *)&a2[v17 + 16];
    *(_OWORD *)uint64_t v18 = *(_OWORD *)&a2[v17];
    *((_OWORD *)v18 + 1) = v20;
    uint64_t v21 = *(int *)(type metadata accessor for NewsChannel() + 24);
    uint64_t v22 = &v18[v21];
    uint64_t v23 = &v19[v21];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v9))
    {
      uint64_t v24 = sub_10017DF08(&qword_100E749B0);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      v16(v22, v23, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v9);
    }
    *(void *)&a1[v5[10]] = *(void *)&a2[v5[10]];
    *(void *)&a1[v5[11]] = *(void *)&a2[v5[11]];
    *(void *)&a1[v5[12]] = *(void *)&a2[v5[12]];
  }
  else
  {
    uint64_t v11 = type metadata accessor for Article();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_10069C4A4(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_10069D758((uint64_t)a1, (void (*)(void))type metadata accessor for ArticleModel);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v4 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v4;
      uint64_t v5 = (int *)type metadata accessor for NewsArticle();
      uint64_t v6 = v5[6];
      uint64_t v7 = &a1[v6];
      uint64_t v8 = &a2[v6];
      uint64_t v9 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
      {
        uint64_t v10 = sub_10017DF08(&qword_100E749B0);
        memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
      }
      uint64_t v12 = v5[7];
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      uint64_t v15 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
      v16(&a1[v5[8]], &a2[v5[8]], v9);
      uint64_t v17 = v5[9];
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      long long v20 = *(_OWORD *)&a2[v17 + 16];
      *(_OWORD *)uint64_t v18 = *(_OWORD *)&a2[v17];
      *((_OWORD *)v18 + 1) = v20;
      uint64_t v21 = *(int *)(type metadata accessor for NewsChannel() + 24);
      uint64_t v22 = &v18[v21];
      uint64_t v23 = &v19[v21];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v9))
      {
        uint64_t v24 = sub_10017DF08(&qword_100E749B0);
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        v16(v22, v23, v9);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v9);
      }
      *(void *)&a1[v5[10]] = *(void *)&a2[v5[10]];
      *(void *)&a1[v5[11]] = *(void *)&a2[v5[11]];
      *(void *)&a1[v5[12]] = *(void *)&a2[v5[12]];
    }
    else
    {
      uint64_t v11 = type metadata accessor for Article();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10069C778(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x676E6964616F6CLL && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646564616F6CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_10069C860(char a1)
{
  if (a1) {
    return 0x646564616F6CLL;
  }
  else {
    return 0x676E6964616F6CLL;
  }
}

uint64_t sub_10069C894(uint64_t a1, uint64_t a2)
{
  uint64_t v28 = a2;
  uint64_t v4 = type metadata accessor for NewsArticle();
  __chkstk_darwin(v4 - 8);
  sub_1001626E0();
  char v7 = (void *)(v6 - v5);
  uint64_t v8 = type metadata accessor for Article();
  sub_100179C0C();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  type metadata accessor for ArticleModel();
  sub_100162E4C();
  __chkstk_darwin(v15);
  uint64_t v17 = (uint64_t *)((char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  long long v20 = (char *)&v27 - v19;
  uint64_t v21 = sub_10017DF08(&qword_100E899D0);
  __chkstk_darwin(v21 - 8);
  sub_100162E88();
  uint64_t v23 = v2 + *(int *)(v22 + 56);
  sub_10069D6F4(a1, v2);
  sub_10069D6F4(v28, v23);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10069D6F4(v2, (uint64_t)v17);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_10069D8A4(v23, (uint64_t)v7, (void (*)(void))type metadata accessor for NewsArticle);
      char v24 = sub_100A6A8B0(v17, v7);
      sub_10069D758((uint64_t)v7, (void (*)(void))type metadata accessor for NewsArticle);
      sub_10069D758((uint64_t)v17, (void (*)(void))type metadata accessor for NewsArticle);
LABEL_9:
      sub_10069D758(v2, (void (*)(void))type metadata accessor for ArticleModel);
      return v24 & 1;
    }
    sub_10069D758((uint64_t)v17, (void (*)(void))type metadata accessor for NewsArticle);
  }
  else
  {
    sub_10069D6F4(v2, (uint64_t)v20);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v14, v23, v8);
      char v24 = static Article.== infix(_:_:)();
      uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      v25(v14, v8);
      v25((uint64_t)v20, v8);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v20, v8);
  }
  sub_10069D7AC(v2);
  char v24 = 0;
  return v24 & 1;
}

uint64_t sub_10069CB98(void *a1)
{
  sub_10017DF08(&qword_100E89A10);
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_100109314();
  type metadata accessor for NewsArticle();
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v24 = v5;
  sub_10017DF08(&qword_100E89A18);
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_100162E88();
  uint64_t v23 = type metadata accessor for Article();
  sub_100179C0C();
  uint64_t v26 = v7;
  __chkstk_darwin(v8);
  sub_1001A2350();
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v27 = sub_10017DF08(&qword_100E89A20);
  sub_100179C0C();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_1001626E0();
  uint64_t v18 = v17 - v16;
  sub_1001B1E64(a1, a1[3]);
  sub_10069D80C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10069D6F4(v25, v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10069D8A4(v12, v24, (void (*)(void))type metadata accessor for NewsArticle);
    sub_10069D858();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    sub_10069D950(&qword_100E7C320, (void (*)(uint64_t))type metadata accessor for NewsArticle);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_100162F0C();
    v19();
    sub_10069D758(v24, (void (*)(void))type metadata accessor for NewsArticle);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v1, v12, v23);
    sub_10069D904();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    sub_10069D950(&qword_100E89A28, (void (*)(uint64_t))&type metadata accessor for Article);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_100162F0C();
    v21();
    sub_100162F0C();
    v22();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v18, v27);
}

uint64_t sub_10069CFC4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  sub_10017DF08(&qword_100E899D8);
  sub_100179C0C();
  uint64_t v53 = v3;
  uint64_t v54 = v4;
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v56 = v5;
  sub_10017DF08(&qword_100E899E0);
  sub_100179C0C();
  uint64_t v51 = v7;
  uint64_t v52 = v6;
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v55 = v8;
  sub_10017DF08(&qword_100E899E8);
  sub_100179C0C();
  uint64_t v57 = v10;
  uint64_t v58 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = sub_1001A2350();
  sub_100162E4C();
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v46 - v16;
  __chkstk_darwin(v18);
  long long v20 = (char *)&v46 - v19;
  sub_1001B1E64(a1, a1[3]);
  sub_10069D80C();
  uint64_t v21 = v59;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v21) {
    goto LABEL_8;
  }
  uint64_t v47 = v14;
  uint64_t v48 = v17;
  id v46 = v20;
  uint64_t v49 = v11;
  unint64_t v59 = a1;
  uint64_t v22 = KeyedDecodingContainer.allKeys.getter();
  uint64_t v23 = *(void *)(v22 + 16);
  if (!v23
    || (char v24 = *(unsigned char *)(v22 + 32),
        sub_100723214(1, v23, v22, v22 + 32, 0, (2 * v23) | 1),
        uint64_t v26 = v25,
        unint64_t v28 = v27,
        swift_bridgeObjectRelease(),
        v26 != v28 >> 1))
  {
    uint64_t v30 = v49;
    uint64_t v31 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v33 = v32;
    sub_10017DF08(&qword_100E67280);
    *uint64_t v33 = v30;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v31 - 8) + 104))(v33, enum case for DecodingError.typeMismatch(_:), v31);
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v34 = sub_1001800F4();
    v35(v34);
    a1 = v59;
LABEL_8:
    uint64_t v36 = (uint64_t)a1;
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v36);
  }
  if (v24)
  {
    char v61 = 1;
    sub_10069D858();
    sub_1001815D4();
    type metadata accessor for NewsArticle();
    sub_10069D950(&qword_100E7C2C8, (void (*)(uint64_t))type metadata accessor for NewsArticle);
    uint64_t v29 = (uint64_t)v47;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_1001D1BF0();
    sub_100162F0C();
    v38();
    swift_unknownObjectRelease();
    uint64_t v39 = sub_1001800F4();
    v40(v39);
    swift_storeEnumTagMultiPayload();
    uint64_t v41 = v29;
  }
  else
  {
    char v60 = 0;
    sub_10069D904();
    sub_1001815D4();
    type metadata accessor for Article();
    sub_10069D950(&qword_100E89A08, (void (*)(uint64_t))&type metadata accessor for Article);
    uint64_t v41 = (uint64_t)v48;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_1001637B8();
    sub_100162F0C();
    v42();
    swift_unknownObjectRelease();
    uint64_t v43 = sub_1001800F4();
    v44(v43);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v45 = (uint64_t)v46;
  sub_10069D8A4(v41, (uint64_t)v46, (void (*)(void))type metadata accessor for ArticleModel);
  sub_10069D8A4(v45, v50, (void (*)(void))type metadata accessor for ArticleModel);
  uint64_t v36 = (uint64_t)v59;
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v36);
}

uint64_t sub_10069D528()
{
  return sub_10069C860(*v0);
}

uint64_t sub_10069D530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10069C778(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10069D558(uint64_t a1)
{
  unint64_t v2 = sub_10069D80C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10069D594(uint64_t a1)
{
  unint64_t v2 = sub_10069D80C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10069D5D0(uint64_t a1)
{
  unint64_t v2 = sub_10069D858();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10069D60C(uint64_t a1)
{
  unint64_t v2 = sub_10069D858();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10069D648(uint64_t a1)
{
  unint64_t v2 = sub_10069D904();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10069D684(uint64_t a1)
{
  unint64_t v2 = sub_10069D904();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10069D6C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10069CFC4(a1, a2);
}

uint64_t sub_10069D6DC(void *a1)
{
  return sub_10069CB98(a1);
}

uint64_t sub_10069D6F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ArticleModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10069D758(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_10069D7AC(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E899D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10069D80C()
{
  unint64_t result = qword_100E899F0;
  if (!qword_100E899F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E899F0);
  }
  return result;
}

unint64_t sub_10069D858()
{
  unint64_t result = qword_100E899F8;
  if (!qword_100E899F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E899F8);
  }
  return result;
}

uint64_t sub_10069D8A4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

unint64_t sub_10069D904()
{
  unint64_t result = qword_100E89A00;
  if (!qword_100E89A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89A00);
  }
  return result;
}

uint64_t sub_10069D950(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ArticleModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10069DA64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArticleModel.CodingKeys()
{
  return &type metadata for ArticleModel.CodingKeys;
}

ValueMetadata *type metadata accessor for ArticleModel.LoadingCodingKeys()
{
  return &type metadata for ArticleModel.LoadingCodingKeys;
}

unsigned char *_s7Weather12ArticleModelO17LoadingCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10069DB4CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArticleModel.LoadedCodingKeys()
{
  return &type metadata for ArticleModel.LoadedCodingKeys;
}

unint64_t sub_10069DB88()
{
  unint64_t result = qword_100E89A30;
  if (!qword_100E89A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89A30);
  }
  return result;
}

unint64_t sub_10069DBD8()
{
  unint64_t result = qword_100E89A38;
  if (!qword_100E89A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89A38);
  }
  return result;
}

unint64_t sub_10069DC28()
{
  unint64_t result = qword_100E89A40;
  if (!qword_100E89A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89A40);
  }
  return result;
}

unint64_t sub_10069DC78()
{
  unint64_t result = qword_100E89A48;
  if (!qword_100E89A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89A48);
  }
  return result;
}

unint64_t sub_10069DCC8()
{
  unint64_t result = qword_100E89A50;
  if (!qword_100E89A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89A50);
  }
  return result;
}

unint64_t sub_10069DD18()
{
  unint64_t result = qword_100E89A58;
  if (!qword_100E89A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89A58);
  }
  return result;
}

unint64_t sub_10069DD68()
{
  unint64_t result = qword_100E89A60;
  if (!qword_100E89A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89A60);
  }
  return result;
}

unint64_t sub_10069DDB8()
{
  unint64_t result = qword_100E89A68;
  if (!qword_100E89A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89A68);
  }
  return result;
}

unint64_t sub_10069DE08()
{
  unint64_t result = qword_100E89A70;
  if (!qword_100E89A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89A70);
  }
  return result;
}

void **sub_10069DEFC(void **a1, void **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100220CD0((uint64_t)a1, (void (*)(void))type metadata accessor for EnvironmentAction);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        uint64_t v6 = type metadata accessor for Locale();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_33;
      case 3u:
        uint64_t v7 = type metadata accessor for ActivityAction();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          type metadata accessor for PreviewLocation();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v15 = type metadata accessor for LocationOfInterest();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
              break;
            case 2u:
              uint64_t v16 = *a2;
              *a1 = *a2;
              a1[1] = a2[1];
              a1[2] = a2[2];
              a1[3] = a2[3];
              a1[4] = a2[4];
              a1[5] = a2[5];
              a1[6] = a2[6];
              uint64_t v17 = type metadata accessor for SearchLocation();
              uint64_t v18 = *(int *)(v17 + 32);
              __dst = (char *)a1 + v18;
              uint64_t v29 = v17;
              unint64_t v27 = (char *)a2 + v18;
              uint64_t v19 = type metadata accessor for Location();
              id v20 = v16;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v19))
              {
                uint64_t v21 = sub_10017DF08(&qword_100E639E8);
                memcpy(__dst, v27, *(void *)(*(void *)(v21 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(__dst, v27, v19);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v19);
              }
              uint64_t v22 = *(int *)(v29 + 36);
              uint64_t v23 = (char *)a1 + v22;
              char v24 = (char *)a2 + v22;
              long long v25 = *(_OWORD *)v24;
              v23[16] = v24[16];
              *(_OWORD *)uint64_t v23 = v25;
              break;
            case 3u:
              *(_OWORD *)a1 = *(_OWORD *)a2;
              a1[2] = a2[2];
              a1[3] = a2[3];
              swift_bridgeObjectRetain();
              break;
            default:
              uint64_t v12 = type metadata accessor for Location();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
              break;
          }
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          if (EnumCaseMultiPayload) {
            goto LABEL_18;
          }
          type metadata accessor for SavedLocation();
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v9 = type metadata accessor for SavedLocation.Placeholder();
          }
          else {
            uint64_t v9 = type metadata accessor for Location();
          }
          (*(void (**)(void **, void **))(*(void *)(v9 - 8) + 16))(a1, a2);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_32;
      case 4u:
        goto LABEL_4;
      case 9u:
        if ((unint64_t)a2[1] >= 2)
        {
LABEL_4:
          *a1 = *a2;
          a1[1] = a2[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
        }
        goto LABEL_33;
      case 0xBu:
        uint64_t v7 = type metadata accessor for ConfiguredUnitsAction();
        int v10 = swift_getEnumCaseMultiPayload();
        if (v10 == 1)
        {
          uint64_t v13 = type metadata accessor for UnitConfiguration.Temperature();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v13))
          {
            uint64_t v14 = sub_10017DF08(&qword_100E6F620);
            memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
          }
          else
          {
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v13);
          }
        }
        else
        {
          if (v10)
          {
LABEL_18:
            memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
            goto LABEL_33;
          }
          uint64_t v11 = type metadata accessor for ConfiguredUnit();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        }
LABEL_32:
        swift_storeEnumTagMultiPayload();
LABEL_33:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

void *sub_10069E53C(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 11:
      uint64_t v8 = type metadata accessor for ConfiguredUnitsAction();
      int v9 = swift_getEnumCaseMultiPayload();
      if (v9 == 1)
      {
        uint64_t v13 = type metadata accessor for UnitConfiguration.Temperature();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v13))
        {
          uint64_t v14 = sub_10017DF08(&qword_100E6F620);
          memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v13);
        }
      }
      else
      {
        if (v9) {
          goto LABEL_20;
        }
        uint64_t v10 = type metadata accessor for ConfiguredUnit();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      }
      goto LABEL_31;
    case 3:
      uint64_t v8 = type metadata accessor for ActivityAction();
      int v11 = swift_getEnumCaseMultiPayload();
      if (v11 != 1)
      {
        if (!v11)
        {
          type metadata accessor for SavedLocation();
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v12 = type metadata accessor for SavedLocation.Placeholder();
          }
          else {
            uint64_t v12 = type metadata accessor for Location();
          }
          (*(void (**)(void *, void *))(*(void *)(v12 - 8) + 32))(a1, a2);
          swift_storeEnumTagMultiPayload();
          goto LABEL_31;
        }
LABEL_20:
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        goto LABEL_32;
      }
      uint64_t v15 = type metadata accessor for PreviewLocation();
      int v16 = swift_getEnumCaseMultiPayload();
      switch(v16)
      {
        case 2:
          *a1 = *a2;
          *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
          *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
          *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
          uint64_t v18 = type metadata accessor for SearchLocation();
          uint64_t v19 = *(int *)(v18 + 32);
          id v20 = (char *)a1 + v19;
          uint64_t v21 = (char *)a2 + v19;
          uint64_t v22 = type metadata accessor for Location();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
          {
            uint64_t v23 = sub_10017DF08(&qword_100E639E8);
            memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
          }
          uint64_t v25 = *(int *)(v18 + 36);
          uint64_t v26 = (char *)a1 + v25;
          unint64_t v27 = (char *)a2 + v25;
          *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
          v26[16] = v27[16];
          goto LABEL_30;
        case 1:
          uint64_t v24 = type metadata accessor for LocationOfInterest();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 32))(a1, a2, v24);
          goto LABEL_30;
        case 0:
          uint64_t v17 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
LABEL_30:
          swift_storeEnumTagMultiPayload();
          goto LABEL_31;
      }
      memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
LABEL_31:
      swift_storeEnumTagMultiPayload();
      goto LABEL_32;
    case 2:
      uint64_t v7 = type metadata accessor for Locale();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_32:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *sub_10069EA48(void *a1, void *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_100220CD0((uint64_t)a1, (void (*)(void))type metadata accessor for EnvironmentAction);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 11:
      uint64_t v8 = type metadata accessor for ConfiguredUnitsAction();
      int v9 = swift_getEnumCaseMultiPayload();
      if (v9 == 1)
      {
        uint64_t v13 = type metadata accessor for UnitConfiguration.Temperature();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v13))
        {
          uint64_t v14 = sub_10017DF08(&qword_100E6F620);
          memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v13);
        }
      }
      else
      {
        if (v9) {
          goto LABEL_21;
        }
        uint64_t v10 = type metadata accessor for ConfiguredUnit();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      }
      goto LABEL_32;
    case 3:
      uint64_t v8 = type metadata accessor for ActivityAction();
      int v11 = swift_getEnumCaseMultiPayload();
      if (v11 != 1)
      {
        if (!v11)
        {
          type metadata accessor for SavedLocation();
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v12 = type metadata accessor for SavedLocation.Placeholder();
          }
          else {
            uint64_t v12 = type metadata accessor for Location();
          }
          (*(void (**)(void *, void *))(*(void *)(v12 - 8) + 32))(a1, a2);
          swift_storeEnumTagMultiPayload();
          goto LABEL_32;
        }
LABEL_21:
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        goto LABEL_33;
      }
      uint64_t v15 = type metadata accessor for PreviewLocation();
      int v16 = swift_getEnumCaseMultiPayload();
      switch(v16)
      {
        case 2:
          *a1 = *a2;
          *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
          *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
          *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
          uint64_t v18 = type metadata accessor for SearchLocation();
          uint64_t v19 = *(int *)(v18 + 32);
          id v20 = (char *)a1 + v19;
          uint64_t v21 = (char *)a2 + v19;
          uint64_t v22 = type metadata accessor for Location();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
          {
            uint64_t v23 = sub_10017DF08(&qword_100E639E8);
            memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
          }
          uint64_t v25 = *(int *)(v18 + 36);
          uint64_t v26 = (char *)a1 + v25;
          unint64_t v27 = (char *)a2 + v25;
          *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
          v26[16] = v27[16];
          goto LABEL_31;
        case 1:
          uint64_t v24 = type metadata accessor for LocationOfInterest();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 32))(a1, a2, v24);
          goto LABEL_31;
        case 0:
          uint64_t v17 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
LABEL_31:
          swift_storeEnumTagMultiPayload();
          goto LABEL_32;
      }
      memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
LABEL_32:
      swift_storeEnumTagMultiPayload();
      goto LABEL_33;
    case 2:
      uint64_t v7 = type metadata accessor for Locale();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_33:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

uint64_t sub_10069EFB0()
{
  sub_100220D80(&qword_100E89B28);

  return ShortDescribable.description.getter();
}

uint64_t sub_10069F008(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

ValueMetadata *type metadata accessor for VisibilityComponentPreprocessedDataModel()
{
  return &type metadata for VisibilityComponentPreprocessedDataModel;
}

uint64_t sub_10069F078(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000018 && a2 == 0x8000000100C9EA60)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v7) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_10069F1D8(char a1)
{
  if (!a1) {
    return 0x656C746974;
  }
  if (a1 == 1) {
    return 0x7470697263736564;
  }
  return 0xD000000000000018;
}

uint64_t sub_10069F238(void *a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E89B40);
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001B1E64(a1, a1[3]);
  sub_10069F6C4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v10[15] = 0;
  sub_10019EA44();
  if (!v1)
  {
    v10[14] = 1;
    sub_10019EA44();
    v10[13] = 2;
    sub_10019EA44();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v3);
}

uint64_t sub_10069F374@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_10017DF08(&qword_100E89B30);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_1001B1E64(a1, a1[3]);
  sub_10069F6C4();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  uint64_t v6 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v8 = v7;
  uint64_t v21 = v6;
  swift_bridgeObjectRetain();
  uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v11 = v10;
  uint64_t v19 = v9;
  swift_bridgeObjectRetain();
  uint64_t v20 = v11;
  uint64_t v12 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v14 = v13;
  uint64_t v15 = v12;
  uint64_t v16 = sub_10017D2B4();
  v17(v16);
  swift_bridgeObjectRetain();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v21;
  a2[1] = v8;
  a2[2] = v19;
  a2[3] = v20;
  a2[4] = v15;
  a2[5] = v14;
  return result;
}

uint64_t sub_10069F5C0()
{
  return sub_10069F1D8(*v0);
}

uint64_t sub_10069F5C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10069F078(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10069F5F0(uint64_t a1)
{
  unint64_t v2 = sub_10069F6C4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10069F62C(uint64_t a1)
{
  unint64_t v2 = sub_10069F6C4();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_10069F668@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_10069F374(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_10069F6AC(void *a1)
{
  return sub_10069F238(a1);
}

unint64_t sub_10069F6C4()
{
  unint64_t result = qword_100E89B38;
  if (!qword_100E89B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89B38);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for VisibilityComponentPreprocessedDataModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10069F7DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisibilityComponentPreprocessedDataModel.CodingKeys()
{
  return &type metadata for VisibilityComponentPreprocessedDataModel.CodingKeys;
}

unint64_t sub_10069F818()
{
  unint64_t result = qword_100E89B48;
  if (!qword_100E89B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89B48);
  }
  return result;
}

unint64_t sub_10069F868()
{
  unint64_t result = qword_100E89B50;
  if (!qword_100E89B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89B50);
  }
  return result;
}

unint64_t sub_10069F8B8()
{
  unint64_t result = qword_100E89B58[0];
  if (!qword_100E89B58[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100E89B58);
  }
  return result;
}

uint64_t type metadata accessor for SevereNewsContentView()
{
  return sub_100109098();
}

uint64_t sub_10069F91C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10069F960@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v57 = a7;
  uint64_t v58 = a6;
  uint64_t v45 = a4;
  uint64_t v52 = a3;
  v70[3] = a5;
  int v9 = a2;
  unsigned int v10 = a2 & 0x100;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  v70[7] = a5;
  sub_10017C794();
  uint64_t v50 = sub_10017F7C0();
  uint64_t v56 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v53 = v11;
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v55 = v13;
  __chkstk_darwin(v14);
  uint64_t v54 = (uint64_t)&v41 - v15;
  v70[0] = a5;
  v70[1] = a5;
  v70[2] = a5;
  v70[3] = type metadata accessor for Optional();
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  v70[7] = a5;
  sub_10017C794();
  sub_10017F7C0();
  uint64_t v51 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v49 = v16;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v59 = v18;
  __chkstk_darwin(v19);
  uint64_t v60 = (uint64_t)&v41 - v20;
  if (v9)
  {
    if (v9 == 1)
    {
      if (v10)
      {
        uint64_t v21 = &qword_100E6C6B0;
        goto LABEL_11;
      }
    }
    else if (v10)
    {
      uint64_t v21 = &qword_100E6CAC0;
      goto LABEL_11;
    }
    uint64_t v21 = &qword_100E6C8B8;
    goto LABEL_11;
  }
  if (v10) {
    uint64_t v21 = &qword_100E6C2A0;
  }
  else {
    uint64_t v21 = &qword_100E6C4A8;
  }
LABEL_11:
  memcpy(v70, v21, sizeof(v70));
  uint64_t v22 = memcpy(v69, v70, sizeof(v69));
  __chkstk_darwin(v22);
  uint64_t v23 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v23;
  *(&v41 - 6) = a1;
  *((unsigned char *)&v41 - 40) = v9;
  uint64_t v44 = a1;
  int v42 = v9;
  unsigned int v43 = v10 >> 8;
  *((unsigned char *)&v41 - 39) = BYTE1(v10);
  uint64_t v24 = v45;
  *(&v41 - 4) = v52;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v26 = v59;
  Group<A>.init(content:)();
  uint64_t v68 = WitnessTable;
  uint64_t v27 = v51;
  uint64_t v46 = swift_getWitnessTable();
  sub_100121584(v26, v27, v60);
  uint64_t v28 = v49;
  uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8);
  uint64_t v48 = v49 + 8;
  uint64_t v29 = v47(v26, v27);
  __chkstk_darwin(v29);
  uint64_t v30 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v30;
  *(&v41 - 6) = v44;
  *((unsigned char *)&v41 - 40) = v42;
  *((unsigned char *)&v41 - 39) = v43;
  *(&v41 - 4) = v31;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v55;
  Group<A>.init(content:)();
  uint64_t v67 = v32;
  uint64_t v34 = v56;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v35 = v54;
  sub_100121584(v33, v34, v54);
  uint64_t v36 = v53;
  uint64_t v37 = *(void (**)(void))(v53 + 8);
  sub_10017C768();
  v37();
  uint64_t v38 = v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v59, v60, v27);
  uint64_t v65 = v38;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v33, v35, v34);
  uint64_t v66 = v33;
  uint64_t v63 = v27;
  uint64_t v64 = v34;
  uint64_t v61 = v46;
  uint64_t v62 = v58;
  sub_1006E9080();
  sub_10017C768();
  v37();
  uint64_t v39 = v47;
  v47(v60, v27);
  sub_10017C768();
  v37();
  return v39(v38, v27);
}

uint64_t sub_10069FE20@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v101 = a6;
  uint64_t v102 = a5;
  uint64_t v10 = sub_10017DF08(&qword_100E64E80);
  __chkstk_darwin(v10 - 8);
  uint64_t v99 = (uint64_t)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for Optional();
  uint64_t v112 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  uint64_t v119 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v118 = (char *)&v94 - v14;
  uint64_t v98 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v98);
  uint64_t v95 = (uint64_t)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v94 - v17;
  uint64_t v105 = *(void *)(a4 - 8);
  __chkstk_darwin(v19);
  char v100 = (char *)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v111 = (char *)&v94 - v22;
  __chkstk_darwin(v23);
  uint64_t v110 = (char *)&v94 - v24;
  __chkstk_darwin(v25);
  char v108 = (char *)&v94 - v26;
  __chkstk_darwin(v27);
  char v109 = (char *)&v94 - v28;
  __chkstk_darwin(v29);
  char v106 = (char *)&v94 - v30;
  __chkstk_darwin(v31);
  char v107 = (char *)&v94 - v32;
  __chkstk_darwin(v33);
  char v104 = (char *)&v94 - v34;
  __chkstk_darwin(v35);
  uint64_t v114 = (char *)&v94 - v36;
  __chkstk_darwin(v37);
  uint64_t v122 = (char *)&v94 - v38;
  __chkstk_darwin(v39);
  uint64_t v116 = (char *)&v94 - v40;
  __chkstk_darwin(v41);
  uint64_t v115 = (char *)&v94 - v42;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v94 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v94 - v47;
  uint64_t v117 = a1;
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather17SevereNewsContent8_Storage_severeAlert, (uint64_t)v18);
  char v96 = a3;
  uint64_t v49 = a3[45];
  uint64_t v50 = a3[46];
  uint64_t v51 = a3[47];
  uint64_t v52 = a3[48];
  uint64_t v123 = a2;
  a2(v18, v49, v50, v51, v52);
  sub_1001F2B74((uint64_t)v18);
  char v103 = v48;
  sub_100121584((uint64_t)v45, a4, (uint64_t)v48);
  uint64_t v53 = v105 + 8;
  uint64_t v124 = *(void (**)(char *, uint64_t))(v105 + 8);
  v124(v45, a4);
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather17SevereNewsContent8_Storage_newsArticle, (uint64_t)v18);
  uint64_t v54 = v96;
  a2(v18, v96[33], v96[34], v96[35], v96[36]);
  sub_1001F2B74((uint64_t)v18);
  uint64_t v55 = v54;
  sub_100121584((uint64_t)v45, a4, (uint64_t)v115);
  uint64_t v56 = v124;
  v124(v45, a4);
  uint64_t v57 = v117;
  sub_1001F3734(v117 + OBJC_IVAR____TtCV7Weather17SevereNewsContent8_Storage_airQuality, (uint64_t)v18);
  v123(v18, *v55, v55[1], v55[2], v55[3]);
  char v97 = v18;
  sub_1001F2B74((uint64_t)v18);
  sub_100121584((uint64_t)v45, a4, (uint64_t)v116);
  uint64_t v121 = v45;
  uint64_t v113 = v53;
  v56(v45, a4);
  uint64_t v58 = v57 + OBJC_IVAR____TtCV7Weather17SevereNewsContent8_Storage_map;
  swift_beginAccess();
  uint64_t v59 = v58;
  uint64_t v60 = v99;
  sub_10027A764(v59, v99);
  if (_s7Weather24LocationCompositionStateOwet_0(v60, 1, v98) == 1)
  {
    sub_10027A7CC(v60);
  }
  else
  {
    uint64_t v61 = v95;
    sub_10027A82C(v60, v95);
    sub_10027A890((uint64_t)(v55 + 24), (uint64_t)v150);
    sub_10027A890((uint64_t)v150, (uint64_t)v151);
    if (v152 != 1)
    {
      uint64_t v65 = (uint64_t)v122;
      v123((char *)v61, v151[0], v151[1], v151[2], v151[3]);
      sub_1001F2B74(v61);
      uint64_t v66 = (uint64_t)v121;
      sub_100121584(v65, a4, (uint64_t)v121);
      uint64_t v67 = (void (*)(uint64_t, uint64_t))v124;
      v124((char *)v65, a4);
      uint64_t v62 = (uint64_t)v119;
      sub_100121584(v66, a4, (uint64_t)v119);
      v67(v66, a4);
      uint64_t v63 = v62;
      uint64_t v64 = 0;
      goto LABEL_7;
    }
    sub_1001F2B74(v61);
  }
  uint64_t v62 = (uint64_t)v119;
  uint64_t v63 = (uint64_t)v119;
  uint64_t v64 = 1;
LABEL_7:
  _s7Weather24LocationCompositionStateOwst_0(v63, v64, 1, a4);
  sub_1000CA354();
  uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v112 + 8);
  uint64_t v99 = (v112 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v68(v62, v120);
  uint64_t v69 = a4;
  uint64_t v70 = v117;
  uint64_t v71 = (uint64_t)v97;
  sub_1001F3734(*(void *)(v117 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v97);
  uint64_t v72 = (void (*)(uint64_t, void, void, void, void))v123;
  uint64_t v73 = (uint64_t)v122;
  v123((char *)v71, v55[16], v55[17], v55[18], v55[19]);
  sub_1001F2B74(v71);
  sub_100121584(v73, v69, (uint64_t)v121);
  v124((char *)v73, v69);
  sub_1001F3734(*(void *)(v70 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v71);
  uint64_t v74 = (uint64_t)v114;
  v72(v71, v55[8], v55[9], v55[10], v55[11]);
  sub_1001F2B74(v71);
  sub_100121584(v74, v69, v73);
  v124((char *)v74, v69);
  sub_1001F3734(*(void *)(v70 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, v71);
  uint64_t v75 = (uint64_t)v104;
  v72(v71, v55[53], v55[54], v55[55], v55[56]);
  sub_1001F2B74(v71);
  uint64_t v76 = v102;
  sub_100121584(v75, v69, v74);
  uint64_t v77 = v124;
  v124((char *)v75, v69);
  sub_1001F3734(*(void *)(v117 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, v71);
  uint64_t v78 = (uint64_t)v107;
  v123((char *)v71, v55[49], v55[50], v55[51], v55[52]);
  sub_1001F2B74(v71);
  sub_100121584(v78, v69, v75);
  uint64_t v79 = v77;
  v77((char *)v78, v69);
  int v80 = *(void (**)(uint64_t, char *, uint64_t))(v105 + 16);
  v80(v78, v103, v69);
  uint64_t v142 = v78;
  uint64_t v81 = v106;
  v80((uint64_t)v106, v115, v69);
  long long v143 = v81;
  uint64_t v82 = v109;
  v80((uint64_t)v109, v116, v69);
  uint64_t v144 = v82;
  uint64_t v83 = v112 + 16;
  uint64_t v84 = (uint64_t)v119;
  (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v119, v118, v120);
  uint64_t v145 = v84;
  uint64_t v85 = v108;
  v80((uint64_t)v108, v121, v69);
  uint64_t v146 = v85;
  unsigned int v86 = v110;
  v80((uint64_t)v110, v122, v69);
  uint64_t v147 = v86;
  uint64_t v87 = v111;
  v80((uint64_t)v111, v114, v69);
  uint64_t v148 = v87;
  uint64_t v88 = v100;
  uint64_t v89 = v104;
  v80((uint64_t)v100, v104, v69);
  uint64_t v149 = v88;
  uint64_t v90 = v88;
  uint64_t v134 = v69;
  uint64_t v135 = v69;
  uint64_t v91 = v120;
  uint64_t v136 = v69;
  uint64_t v137 = v120;
  uint64_t v138 = v69;
  uint64_t v139 = v69;
  uint64_t v140 = v69;
  uint64_t v141 = v69;
  uint64_t v126 = v76;
  uint64_t v127 = v76;
  uint64_t v128 = v76;
  uint64_t v125 = v76;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v130 = v76;
  uint64_t v131 = v76;
  uint64_t v132 = v76;
  uint64_t v133 = v76;
  sub_1006E9080();
  v79(v89, v69);
  v79(v114, v69);
  v79(v122, v69);
  v79(v121, v69);
  uint64_t v92 = *(void (**)(char *, uint64_t))(v83 - 8);
  v92(v118, v91);
  v79(v116, v69);
  v79(v115, v69);
  v79(v103, v69);
  v79(v90, v69);
  v79(v111, v69);
  v79(v110, v69);
  v79(v108, v69);
  v92(v119, v91);
  v79(v109, v69);
  v79(v106, v69);
  return ((uint64_t (*)(char *, uint64_t))v79)(v107, v69);
}

uint64_t sub_1006A0990@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v102 = a5;
  uint64_t v84 = a6;
  uint64_t v10 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = *(void *)(a4 - 8);
  uint64_t v13 = v82;
  __chkstk_darwin(v14);
  uint64_t v83 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v98 = (char *)&v82 - v17;
  __chkstk_darwin(v18);
  char v97 = (char *)&v82 - v19;
  __chkstk_darwin(v20);
  char v96 = (char *)&v82 - v21;
  __chkstk_darwin(v22);
  uint64_t v95 = (char *)&v82 - v23;
  __chkstk_darwin(v24);
  uint64_t v93 = (char *)&v82 - v25;
  __chkstk_darwin(v26);
  uint64_t v92 = (char *)&v82 - v27;
  __chkstk_darwin(v28);
  uint64_t v90 = (char *)&v82 - v29;
  __chkstk_darwin(v30);
  uint64_t v89 = (char *)&v82 - v31;
  __chkstk_darwin(v32);
  uint64_t v101 = (char *)&v82 - v33;
  __chkstk_darwin(v34);
  uint64_t v87 = (char *)&v82 - v35;
  __chkstk_darwin(v36);
  unsigned int v86 = (char *)&v82 - v37;
  __chkstk_darwin(v38);
  char v100 = (char *)&v82 - v39;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v82 - v41;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v82 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v82 - v47;
  uint64_t v94 = (char *)&v82 - v47;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v12);
  uint64_t v49 = a3[61];
  uint64_t v50 = a3[62];
  uint64_t v51 = a3[63];
  uint64_t v52 = a3[64];
  uint64_t v99 = a2;
  a2(v12, v49, v50, v51, v52);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v45, a4, (uint64_t)v48);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v91 = v45;
  v53(v45, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)v12);
  a2(v12, a3[41], a3[42], a3[43], a3[44]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v42, a4, (uint64_t)v45);
  uint64_t v88 = v42;
  v53(v42, a4);
  uint64_t v85 = a1;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v12);
  uint64_t v54 = (uint64_t)v100;
  v99(v12, a3[12], a3[13], a3[14], a3[15]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v54, a4, (uint64_t)v42);
  uint64_t v55 = v54;
  v53((char *)v54, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)v12);
  uint64_t v56 = (uint64_t)v86;
  uint64_t v57 = v99;
  v99(v12, a3[20], a3[21], a3[22], a3[23]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v56, a4, v55);
  v53((char *)v56, a4);
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v12);
  uint64_t v58 = (uint64_t)v87;
  v57(v12, a3[57], a3[58], a3[59], a3[60]);
  sub_1001F2B74((uint64_t)v12);
  uint64_t v59 = v58;
  sub_100121584(v58, a4, v56);
  v53((char *)v58, a4);
  uint64_t v60 = v85;
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)v12);
  uint64_t v61 = (uint64_t)v101;
  uint64_t v62 = v99;
  v99(v12, a3[37], a3[38], a3[39], a3[40]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v61, a4, v59);
  v53((char *)v61, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, (uint64_t)v12);
  uint64_t v63 = (uint64_t)v89;
  v62(v12, a3[29], a3[30], a3[31], a3[32]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v63, a4, (uint64_t)v101);
  v53((char *)v63, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, (uint64_t)v12);
  uint64_t v64 = a3[4];
  uint64_t v65 = a3[5];
  uint64_t v66 = a3[6];
  uint64_t v67 = a3[7];
  uint64_t v68 = (uint64_t)v90;
  v62(v12, v64, v65, v66, v67);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v68, a4, v63);
  v53((char *)v68, a4);
  uint64_t v69 = *(void (**)(uint64_t, char *, uint64_t))(v82 + 16);
  v69(v68, v94, a4);
  uint64_t v119 = v68;
  uint64_t v70 = v92;
  v69((uint64_t)v92, v91, a4);
  uint64_t v120 = v70;
  uint64_t v71 = v93;
  v69((uint64_t)v93, v88, a4);
  uint64_t v121 = v71;
  uint64_t v72 = v95;
  v69((uint64_t)v95, v100, a4);
  uint64_t v122 = v72;
  uint64_t v73 = v96;
  uint64_t v74 = v86;
  v69((uint64_t)v96, v86, a4);
  uint64_t v123 = v73;
  uint64_t v75 = v97;
  uint64_t v76 = v87;
  v69((uint64_t)v97, v87, a4);
  uint64_t v124 = v75;
  uint64_t v77 = v98;
  uint64_t v78 = (uint64_t)v101;
  v69((uint64_t)v98, v101, a4);
  uint64_t v125 = v77;
  uint64_t v79 = v83;
  int v80 = v89;
  v69((uint64_t)v83, v89, a4);
  uint64_t v126 = v79;
  uint64_t v111 = a4;
  uint64_t v112 = a4;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v115 = a4;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v103 = v102;
  uint64_t v104 = v102;
  uint64_t v105 = v102;
  uint64_t v106 = v102;
  uint64_t v107 = v102;
  uint64_t v108 = v102;
  uint64_t v109 = v102;
  uint64_t v110 = v102;
  sub_1006E9080();
  v53(v80, a4);
  v53((char *)v78, a4);
  v53(v76, a4);
  v53(v74, a4);
  v53(v100, a4);
  v53(v88, a4);
  v53(v91, a4);
  v53(v94, a4);
  v53(v79, a4);
  v53(v98, a4);
  v53(v97, a4);
  v53(v96, a4);
  v53(v95, a4);
  v53(v93, a4);
  v53(v92, a4);
  return ((uint64_t (*)(char *, uint64_t))v53)(v90, a4);
}

uint64_t sub_1006A13D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + 9)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_10069F960(*(void *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_1006A1404()
{
  return sub_1006A1434((uint64_t (*)(void, void, void, void, void, void, void))sub_10069FE20);
}

uint64_t sub_1006A141C()
{
  return sub_1006A1434((uint64_t (*)(void, void, void, void, void, void, void))sub_1006A0990);
}

uint64_t sub_1006A1434(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  if (*(unsigned char *)(v1 + 41)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return a1(*(void *)(v1 + 32), v2 | *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1006A1468@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v109 = a1;
  uint64_t v5 = type metadata accessor for ViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v103 = v9;
  __chkstk_darwin(v10);
  sub_100162EF8();
  uint64_t v105 = v11;
  __chkstk_darwin(v12);
  uint64_t v104 = (void (*)(uint64_t, unint64_t, uint64_t))((char *)&v76 - v13);
  sub_100129064();
  uint64_t v95 = type metadata accessor for LocationOfInterest();
  sub_100179C0C();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  sub_100109314();
  uint64_t v81 = v17;
  uint64_t v18 = sub_100129064();
  uint64_t v88 = type metadata accessor for ModalViewState(v18);
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v85 = v20;
  sub_100129064();
  uint64_t v98 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v91 = v21;
  __chkstk_darwin(v22);
  sub_100109314();
  uint64_t v97 = v23;
  sub_100129064();
  uint64_t v24 = type metadata accessor for TimeState();
  __chkstk_darwin(v24 - 8);
  sub_100109314();
  uint64_t v84 = v25;
  sub_100129064();
  uint64_t v108 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v27 = v26;
  __chkstk_darwin(v28);
  sub_100109314();
  uint64_t v107 = v29;
  sub_100129064();
  uint64_t v30 = type metadata accessor for LocationModel();
  sub_100179C0C();
  uint64_t v32 = v31;
  __chkstk_darwin(v33);
  sub_100109314();
  uint64_t v96 = v34;
  uint64_t v35 = sub_10017DF08(&qword_100E63508);
  __chkstk_darwin(v35 - 8);
  sub_100162EF8();
  uint64_t v83 = v36;
  __n128 v38 = __chkstk_darwin(v37);
  uint64_t v99 = (uint64_t)&v76 - v39;
  (*(void (**)(uint64_t *__return_ptr, __n128))(v2 + 16))(&v110, v38);
  uint64_t v40 = v110;
  uint64_t v41 = v110 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
  uint64_t v42 = type metadata accessor for LocationsState();
  uint64_t v43 = *(int *)(v42 + 28);
  uint64_t v82 = v41;
  uint64_t v44 = *(void *)(v41 + v43);
  uint64_t v45 = *(void *)(v44 + 16);
  uint64_t v93 = v5;
  uint64_t v94 = a2;
  uint64_t v92 = v8;
  uint64_t v90 = v30;
  uint64_t v89 = v32;
  uint64_t v87 = v40;
  uint64_t v86 = v42;
  if (v45)
  {
    uint64_t v80 = v3;
    uint64_t v77 = v15;
    uint64_t v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
    uint64_t v46 = v15 + 16;
    uint64_t v102 = v47;
    uint64_t v48 = v44 + ((*(unsigned __int8 *)(v46 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 64));
    uint64_t v79 = v27;
    uint64_t v49 = (void (**)(void (*)(uint64_t, unint64_t, uint64_t), uint64_t))(v103 + 8);
    uint64_t v32 = (void (**)(uint64_t, uint64_t))(v46 - 8);
    uint64_t v103 = v46;
    uint64_t v100 = *(void *)(v46 + 56);
    uint64_t v101 = (void (**)(uint64_t, uint64_t))(v27 + 8);
    uint64_t v78 = v44;
    swift_bridgeObjectRetain();
    uint64_t v50 = v95;
    uint64_t v30 = v81;
    uint64_t v51 = v104;
    while (1)
    {
      v102(v30, v48, v50);
      uint64_t v52 = v107;
      LocationOfInterest.location.getter();
      Location.identifier.getter();
      (*v101)(v52, v108);
      uint64_t v53 = v105;
      Location.identifier.getter();
      char v54 = static Location.Identifier.== infix(_:_:)();
      uint64_t v55 = *v49;
      uint64_t v56 = v53;
      uint64_t v57 = v106;
      (*v49)(v56, v106);
      v55(v51, v57);
      if (v54) {
        break;
      }
      (*v32)(v30, v50);
      v48 += v100;
      if (!--v45) {
        goto LABEL_8;
      }
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 32))(v99, v30, v50);
LABEL_8:
    uint64_t v58 = v85;
    uint64_t v3 = v80;
    uint64_t v59 = v84;
    uint64_t v27 = v79;
    sub_10017A720();
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v58 = v85;
    uint64_t v59 = v84;
    sub_10017A720();
  }
  uint64_t v61 = v99;
  _s7Weather24LocationCompositionStateOwst_0(v99, v60, 1, v95);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, void *, uint64_t))(v27 + 16))(v107, v109, v108);
  sub_1006A1CBC(v61, v30);
  LocationModel.init(location:locationOfInterest:)();
  uint64_t v109 = sub_1001B1E64((void *)(v3 + 48), *(void *)(v3 + 72));
  uint64_t v105 = *(void (**)(uint64_t, unint64_t, uint64_t))((char *)v32 + *(int *)(v86 + 36));
  uint64_t v62 = v87;
  sub_1001B99D0(v87 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v59, (void (*)(void))type metadata accessor for TimeState);
  uint64_t v63 = v91;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v91 + 32))(v97, v59, v98);
  LODWORD(v108) = *(unsigned __int8 *)(v62 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState);
  uint64_t v64 = *(void *)(v62 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState + 8);
  uint64_t v107 = *(void *)(v62 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
  uint64_t v65 = *(void *)(v62 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  uint64_t v66 = *(void *)(v62 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 24);
  uint64_t v67 = v62 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess();
  LODWORD(v106) = *(unsigned __int8 *)(v67 + *(int *)(type metadata accessor for EnvironmentState() + 36));
  sub_1001B99D0(v62 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, v58, (void (*)(void))type metadata accessor for ModalViewState);
  BOOL v68 = swift_getEnumCaseMultiPayload() == 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1006A1D24(v58, (void (*)(void))type metadata accessor for ModalViewState);
  LOBYTE(v67) = *(unsigned char *)(v67 + 2) == 4;
  uint64_t v69 = (uint64_t)v92;
  sub_1001B99D0(v62 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (uint64_t)v92, (void (*)(void))type metadata accessor for ViewState);
  uint64_t v70 = *(void *)(v69 + *(int *)(v93 + 36) + 8);
  sub_1006A1D24(v69, (void (*)(void))type metadata accessor for ViewState);
  uint64_t v75 = v70;
  char v74 = v68;
  uint64_t v71 = v96;
  uint64_t v72 = v97;
  sub_100638F34(v96, v105, v97, v64, v65, v94, v66, v106, 0, 0, 1u, v74, v67, v75);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v72, v98);
  v89[1](v71, v90);
  return sub_1006A1D7C(v99);
}

uint64_t type metadata accessor for LocationRowViewModelProvider()
{
  return self;
}

uint64_t sub_1006A1CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E63508);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006A1D24(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1006A1D7C(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E63508);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1006A1DDC@<X0>(uint64_t *a1@<X8>)
{
  sub_10020D948(v1 + 16, (uint64_t)(a1 + 2));
  swift_retain();
  sub_10017DF08(&qword_100E64C78);
  sub_1006A1E68();
  uint64_t result = ObservedObject.init(wrappedValue:)();
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t type metadata accessor for HomeAndWorkRefinementModule()
{
  return self;
}

unint64_t sub_1006A1E68()
{
  unint64_t result = qword_100E64C80;
  if (!qword_100E64C80)
  {
    sub_10018C6DC(&qword_100E64C78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E64C80);
  }
  return result;
}

uint64_t sub_1006A1EBC(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1006A1F1C(a2);
    return swift_release();
  }
  return result;
}

void sub_1006A1F1C(void *a1)
{
  id v2 = [a1 rootViewController];
  if (v2)
  {
    id v9 = v2;
    uint64_t v3 = sub_1006A2030(v2);
    if (v3)
    {
      uint64_t v4 = v3;
      sub_1001B1E64((void *)(v1 + 16), *(void *)(v1 + 40));
      type metadata accessor for DebugNavigationController();
      uint64_t v5 = (void *)dispatch thunk of ResolverType.resolve<A>(_:)();
      if (v5)
      {
        uint64_t v6 = v5;
        [v5 setModalPresentationStyle:2];
        [v6 setModalInPresentation:1];
        [v4 presentViewController:v6 animated:1 completion:0];

        uint64_t v7 = v4;
        uint64_t v4 = v6;
      }
      else
      {
        uint64_t v7 = v9;
      }

      uint64_t v8 = v4;
    }
    else
    {
      uint64_t v8 = v9;
    }
  }
}

void *sub_1006A2030(void *a1)
{
  type metadata accessor for DebugNavigationController();
  unsigned __int8 v2 = [a1 isKindOfClass:swift_getObjCClassFromMetadata()];
  uint64_t result = 0;
  if ((v2 & 1) == 0)
  {
    id v4 = [a1 presentedViewController];
    if (v4)
    {
      uint64_t v5 = v4;
      a1 = (void *)sub_1006A2030();
    }
    else
    {
      id v6 = a1;
    }
    return a1;
  }
  return result;
}

uint64_t sub_1006A20B4()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1006A20EC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006A212C()
{
  return sub_1006A1EBC(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

unint64_t sub_1006A2134(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E078A0, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 7) {
    return 7;
  }
  else {
    return v3;
  }
}

uint64_t sub_1006A2180(char a1)
{
  uint64_t result = 0x746C7561666564;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x7261656C63;
      break;
    case 2:
      uint64_t result = 0x7964756F6C63;
      break;
    case 3:
      uint64_t result = 0x6C43796C74736F6DLL;
      break;
    case 4:
      uint64_t result = 1852399986;
      break;
    case 5:
      uint64_t result = 0x537265646E756874;
      break;
    case 6:
      uint64_t result = 0x7453657265766573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1006A2270(unsigned __int8 *a1, char *a2)
{
  return sub_10088CA40(*a1, *a2);
}

Swift::Int sub_1006A227C()
{
  return sub_1006525EC(*v0);
}

uint64_t sub_1006A2284()
{
  return sub_1002C3C38();
}

Swift::Int sub_1006A228C(uint64_t a1)
{
  return sub_1002C3D5C(a1, *v1);
}

unint64_t sub_1006A2294@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1006A2134(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1006A22C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1006A2180(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1006A22F0(uint64_t a1)
{
  unint64_t v2 = sub_10058BBD8();

  return static RawRepresentable<>.dataType.getter(a1, v2, &protocol witness table for String);
}

uint64_t sub_1006A2344(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10058BBD8();

  return static RawRepresentable<>.convert(from:)(a1, a2, v4, &protocol witness table for String);
}

uint64_t sub_1006A23A0(uint64_t a1)
{
  unint64_t v2 = sub_10058BBD8();

  return RawRepresentable<>.toData()(a1, v2, &protocol witness table for String);
}

uint64_t sub_1006A23F4()
{
  uint64_t v2 = type metadata accessor for Domain();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_10017FDD0();
  uint64_t v6 = type metadata accessor for Access();
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_10011BFD8();
  sub_10017DF08(&qword_100E89E18);
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v1, enum case for Access.protected(_:), v6);
  sub_10017DF08(&qword_100E89E20);
  sub_10017DF08(&qword_100E89E28);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C34ED0;
  sub_10019EF68();
  sub_10019EF68();
  sub_10019EF68();
  sub_10019EF68();
  sub_10019EF68();
  sub_10019EF68();
  sub_10019EF68();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v0, enum case for Domain.standard(_:), v2);
  sub_1006A289C();
  uint64_t result = Setting<>.init(_:defaultValue:domain:access:options:)();
  qword_100F51A28 = result;
  return result;
}

uint64_t sub_1006A2710()
{
  uint64_t v2 = type metadata accessor for Access();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_10017FDD0();
  type metadata accessor for Domain();
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_10011BFD8();
  (*(void (**)(uint64_t, void))(v7 + 104))(v1, enum case for Domain.standard(_:));
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v0, enum case for Access.public(_:), v2);
  sub_10017DF08(&qword_100E70818);
  swift_allocObject();
  uint64_t result = Setting.init(_:defaultValue:domain:access:)();
  qword_100F51A30 = result;
  return result;
}

uint64_t sub_1006A284C(uint64_t a1)
{
  return sub_10017D2C8(a1, &enum case for FeatureState.enabled(_:), 45, 0x8000000100CAE130, &qword_100F51A38);
}

uint64_t sub_1006A2874(uint64_t a1)
{
  return sub_10017D2C8(a1, &enum case for FeatureState.enabled(_:), 48, 0x8000000100CAE0F0, &qword_100F51A40);
}

unint64_t sub_1006A289C()
{
  unint64_t result = qword_100E89E30;
  if (!qword_100E89E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89E30);
  }
  return result;
}

uint64_t sub_1006A28E8(uint64_t a1)
{
  return sub_10017D2C8(a1, (unsigned int *)&enum case for FeatureState.default(_:), 45, 0x8000000100CAE090, &qword_100F51A68);
}

ValueMetadata *_s15PerformanceTestVMa()
{
  return &_s15PerformanceTestVN;
}

unsigned char *_s15PerformanceTestV24StubWeatherDataConditionOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1006A29ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *_s15PerformanceTestV24StubWeatherDataConditionOMa()
{
  return &_s15PerformanceTestV24StubWeatherDataConditionON;
}

unint64_t sub_1006A2A28()
{
  unint64_t result = qword_100E89E38;
  if (!qword_100E89E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E89E38);
  }
  return result;
}

void *sub_1006A2A74(char a1, char a2, uint64_t a3)
{
  uint64_t v92 = a3;
  uint64_t v6 = type metadata accessor for TipPriorityQueue.GridEntry();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100162EF8();
  uint64_t v91 = v8;
  sub_1001626D4();
  __chkstk_darwin(v9);
  uint64_t v90 = (uint64_t)&v69 - v10;
  sub_1001626D4();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v69 - v12;
  uint64_t v14 = sub_10017DF08(&qword_100E64E80);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_10008B8C0();
  uint64_t v16 = type metadata accessor for LocationComponentViewModel();
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v69 - v21;
  uint64_t v23 = sub_10017DF08(&qword_100E6CCD8);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100162EF8();
  uint64_t v89 = v25;
  sub_1001626D4();
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v69 - v27;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v69 - v30;
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v69 - v33;
  if (a1)
  {
    if (a1 == 1)
    {
      if (a2)
      {
        uint64_t v35 = &qword_100E8A290;
        goto LABEL_11;
      }
    }
    else if (a2)
    {
      uint64_t v35 = &qword_100E8A6E0;
      goto LABEL_11;
    }
    uint64_t v35 = &qword_100E8A4B8;
  }
  else if (a2)
  {
    uint64_t v35 = &qword_100E89E40;
  }
  else
  {
    uint64_t v35 = &qword_100E8A068;
  }
LABEL_11:
  char v36 = *((unsigned char *)v35 + 224);
  uint64_t v37 = *v35;
  uint64_t v75 = v35[1];
  uint64_t v76 = v37;
  uint64_t v74 = v35[2];
  uint64_t v73 = v35[3];
  uint64_t v38 = v35[8];
  uint64_t v79 = v35[9];
  uint64_t v80 = v38;
  uint64_t v39 = v35[10];
  uint64_t v77 = v35[11];
  uint64_t v78 = v39;
  uint64_t v72 = v35[24];
  uint64_t v71 = v35[25];
  uint64_t v70 = v35[26];
  uint64_t v69 = v35[27];
  uint64_t v40 = v35[57];
  uint64_t v83 = v35[58];
  uint64_t v84 = v40;
  uint64_t v41 = v35[59];
  uint64_t v81 = v35[60];
  uint64_t v82 = v41;
  uint64_t v42 = v35[65];
  uint64_t v87 = v35[66];
  uint64_t v88 = v42;
  uint64_t v86 = v35[67];
  uint64_t v43 = v92 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_map;
  uint64_t v85 = v35[68];
  swift_beginAccess();
  sub_10006DF38(v43, v3, &qword_100E64E80);
  uint64_t v44 = type metadata accessor for LocationComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0(v3, 1, v44) == 1)
  {
    sub_1001781AC(v3, &qword_100E64E80);
LABEL_16:
    uint64_t v45 = 1;
    goto LABEL_17;
  }
  sub_10031F6A8(v3 + *(int *)(v44 + 20), (uint64_t)v19, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  sub_10031F75C(v3, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_10031F6FC((uint64_t)v19, (uint64_t)v22, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  if (v36)
  {
    sub_10031F75C((uint64_t)v22, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    goto LABEL_16;
  }
  sub_10031F6FC((uint64_t)v22, (uint64_t)v31, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v45 = 0;
  uint64_t v46 = &v31[*(int *)(v6 + 20)];
  uint64_t v47 = v71;
  *(void *)uint64_t v46 = v72;
  *((void *)v46 + 1) = v47;
  uint64_t v48 = v69;
  *((void *)v46 + 2) = v70;
  *((void *)v46 + 3) = v48;
LABEL_17:
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, v45, 1, v6);
  sub_10031F640((uint64_t)v31, (uint64_t)v34);
  sub_10031F6A8(v92 + *(int *)(v44 + 20) + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_airQuality, (uint64_t)v28, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v49 = &v28[*(int *)(v6 + 20)];
  uint64_t v50 = v75;
  *(void *)uint64_t v49 = v76;
  *((void *)v49 + 1) = v50;
  uint64_t v51 = v73;
  *((void *)v49 + 2) = v74;
  *((void *)v49 + 3) = v51;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v6);
  uint64_t v52 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  sub_10031F6A8(v52, (uint64_t)v13, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v53 = &v13[*(int *)(v6 + 20)];
  uint64_t v54 = v79;
  *(void *)uint64_t v53 = v80;
  *((void *)v53 + 1) = v54;
  uint64_t v55 = v77;
  *((void *)v53 + 2) = v78;
  *((void *)v53 + 3) = v55;
  uint64_t v56 = v89;
  sub_10006DF38((uint64_t)v34, v89, &qword_100E6CCD8);
  uint64_t v57 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  uint64_t v58 = v90;
  sub_10031F6A8(v57, v90, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v59 = (uint64_t *)(v58 + *(int *)(v6 + 20));
  uint64_t v60 = v83;
  *uint64_t v59 = v84;
  v59[1] = v60;
  uint64_t v61 = v81;
  v59[2] = v82;
  v59[3] = v61;
  uint64_t v62 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  uint64_t v63 = v91;
  sub_10031F6A8(v62, v91, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v64 = (uint64_t *)(v63 + *(int *)(v6 + 20));
  uint64_t v65 = v87;
  *uint64_t v64 = v88;
  v64[1] = v65;
  uint64_t v66 = v85;
  v64[2] = v86;
  v64[3] = v66;
  uint64_t v67 = sub_100AD6D18((uint64_t)v28, (uint64_t)v13, v56, v58, v63);
  sub_1001781AC((uint64_t)v34, &qword_100E6CCD8);
  return v67;
}

uint64_t sub_1006A304C(uint64_t a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E64E80);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_10008B8C0();
  uint64_t v10 = a1 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_map;
  swift_beginAccess();
  sub_10006DF38(v10, v7, &qword_100E64E80);
  uint64_t v126 = a1;
  if (_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8) == 1)
  {
    sub_1001781AC(v7, &qword_100E64E80);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C31F20;
    sub_10017DF08(&qword_100E6CCD0);
    unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v13 = *(void *)(v9 + 72);
    uint64_t v14 = (__n128 *)swift_allocObject();
    uint64_t v15 = sub_100183900(v14, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_severeAlert, (uint64_t)v15 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 40) = v16;
    *(void *)(v11 + 48) = v17;
    uint64_t v18 = (__n128 *)swift_allocObject();
    sub_100181608(v18);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_nextHourPrecipitation, v19, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC((uint64_t)v18);
    *(void *)(v11 + 64) = v20;
    *(void *)(v11 + 72) = v21;
    uint64_t v22 = (__n128 *)sub_100163204();
    sub_100181608(v22);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_newsArticle, v23, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC((uint64_t)v22);
    *(void *)(v11 + 88) = v24;
    *(void *)(v11 + 96) = v25;
    uint64_t v26 = (__n128 *)sub_100163204();
    sub_100163264(v26);
    sub_10031F6A8(v27 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v28, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC((uint64_t)v22);
    *(void *)(v11 + 112) = v29;
    *(void *)(v11 + 120) = v30;
    uint64_t v31 = (__n128 *)sub_100163204();
    sub_100163264(v31);
    sub_10031F6A8(v32 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v33, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 128) = sub_1001F24CC((uint64_t)v22);
    *(void *)(v11 + 136) = v34;
    *(void *)(v11 + 144) = v35;
    char v36 = (__n128 *)sub_100163204();
    sub_100181608(v36);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_airQuality, v37, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v36);
    *(void *)(v11 + 160) = v38;
    *(void *)(v11 + 168) = v39;
    uint64_t v40 = v13;
    uint64_t v41 = (__n128 *)swift_allocObject();
    uint64_t v42 = (char *)sub_100183900(v41, (__n128)xmmword_100C25ED0) + v12;
    uint64_t v43 = *(void *)(a1 + 16);
    sub_10018010C(v43 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
    sub_1001859A8((uint64_t)&v42[v40], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v41);
    *(void *)(v11 + 184) = v44;
    *(void *)(v11 + 192) = v45;
    uint64_t v46 = (__n128 *)swift_allocObject();
    sub_10016324C(v46);
    sub_10018010C(v43 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_1001859A8((uint64_t)&v42[v40], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal);
    *(void *)(v11 + 200) = sub_1001F24CC((uint64_t)v41);
    *(void *)(v11 + 208) = v47;
    *(void *)(v11 + 216) = v48;
    uint64_t v49 = (__n128 *)swift_allocObject();
    sub_10016324C(v49);
    sub_10018010C(v43 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_1001859A8((uint64_t)&v42[v40], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity);
    *(void *)(v11 + 224) = sub_1001F24CC((uint64_t)v41);
    *(void *)(v11 + 232) = v50;
    *(void *)(v11 + 240) = v51;
    uint64_t v52 = sub_100163204();
    *(_OWORD *)(v52 + 16) = v127;
    sub_10018010C(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_1001859A8(v52 + v12 + v40, OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure);
    *(void *)(v11 + 248) = sub_1001F24CC(v52);
    *(void *)(v11 + 256) = v53;
    *(void *)(v11 + 264) = v54;
    uint64_t v55 = (__n128 *)swift_allocObject();
    sub_100179F48(v55);
    uint64_t v57 = v56 + v12;
    uint64_t v58 = *(void *)(a1 + 16);
    sub_10031F6A8(v58 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v56 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v58 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v57 + v40, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 272) = sub_1001F24CC((uint64_t)v55);
    *(void *)(v11 + 280) = v59;
    *(void *)(v11 + 288) = v60;
  }
  else
  {
    sub_10031F6FC(v7, v1, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C4F040;
    sub_10017DF08(&qword_100E6CCD0);
    uint64_t v125 = *(void *)(v9 + 72);
    uint64_t v124 = v1;
    unint64_t v61 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v62 = (__n128 *)swift_allocObject();
    uint64_t v63 = sub_100183900(v62, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_severeAlert, (uint64_t)v63 + v61, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v62);
    *(void *)(v11 + 40) = v64;
    *(void *)(v11 + 48) = v65;
    uint64_t v66 = (__n128 *)sub_10017C984();
    sub_100179F54(v66);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_nextHourPrecipitation, v67, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC((uint64_t)v66);
    *(void *)(v11 + 64) = v68;
    *(void *)(v11 + 72) = v69;
    uint64_t v70 = (__n128 *)sub_10017C984();
    sub_100179F54(v70);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_newsArticle, v71, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC((uint64_t)v70);
    *(void *)(v11 + 88) = v72;
    *(void *)(v11 + 96) = v73;
    uint64_t v74 = (__n128 *)sub_10017C984();
    sub_10017E198(v74);
    sub_10031F6A8(v75 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v76, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC((uint64_t)v70);
    *(void *)(v11 + 112) = v77;
    *(void *)(v11 + 120) = v78;
    uint64_t v79 = (__n128 *)sub_10017C984();
    sub_10017E198(v79);
    sub_10031F6A8(v80 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v81, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 128) = sub_1001F24CC((uint64_t)v70);
    *(void *)(v11 + 136) = v82;
    *(void *)(v11 + 144) = v83;
    uint64_t v84 = (__n128 *)sub_10017C984();
    sub_100179F54(v84);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_airQuality, v85, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v84);
    *(void *)(v11 + 160) = v86;
    *(void *)(v11 + 168) = v87;
    uint64_t v88 = (__n128 *)sub_10017C984();
    sub_100179F54(v88);
    sub_10031F6A8(v1, v89, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v88);
    *(void *)(v11 + 184) = v90;
    *(void *)(v11 + 192) = v91;
    uint64_t v92 = (__n128 *)swift_allocObject();
    uint64_t v93 = (char *)sub_100183900(v92, (__n128)xmmword_100C25ED0) + v61;
    uint64_t v94 = a1;
    uint64_t v95 = *(void *)(a1 + 16);
    uint64_t v96 = v94;
    sub_10031F6A8(v95 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v93, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v95 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v93[v125], (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 200) = sub_1001F24CC((uint64_t)v92);
    *(void *)(v11 + 208) = v97;
    *(void *)(v11 + 216) = v98;
    uint64_t v99 = (__n128 *)swift_allocObject();
    sub_100179F48(v99);
    uint64_t v101 = v100 + v61;
    uint64_t v102 = *(void *)(v96 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_10031F6A8(v102 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, v101 + v125, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 224) = sub_1001F24CC((uint64_t)v99);
    *(void *)(v11 + 232) = v103;
    *(void *)(v11 + 240) = v104;
    uint64_t v105 = (__n128 *)swift_allocObject();
    sub_100179F48(v105);
    uint64_t v107 = v106 + v61;
    uint64_t v108 = *(void *)(v126 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_10031F6A8(v108 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, v107 + v125, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 248) = sub_1001F24CC((uint64_t)v105);
    *(void *)(v11 + 256) = v109;
    *(void *)(v11 + 264) = v110;
    uint64_t v111 = (__n128 *)swift_allocObject();
    sub_100179F48(v111);
    uint64_t v113 = v112 + v61;
    uint64_t v114 = *(void *)(v126 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_10031F6A8(v114 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, v113 + v125, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 272) = sub_1001F24CC((uint64_t)v111);
    *(void *)(v11 + 280) = v115;
    *(void *)(v11 + 288) = v116;
    uint64_t v117 = (__n128 *)swift_allocObject();
    sub_100179F48(v117);
    uint64_t v119 = v118 + v61;
    uint64_t v120 = *(void *)(v126 + 16);
    sub_10031F6A8(v120 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v118 + v61, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v120 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v119 + v125, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 296) = sub_1001F24CC((uint64_t)v117);
    *(void *)(v11 + 304) = v121;
    *(void *)(v11 + 312) = v122;
    sub_10031F75C(v124, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  }
  return v11;
}

void sub_1006A3980(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100162EF8();
  sub_1001626D4();
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v8 = __chkstk_darwin(v7);
  __chkstk_darwin(v8);
  uint64_t v9 = type metadata accessor for LocationViewComponent();
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_10017DF08(&qword_100E64E80);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_1001626E0();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = swift_retain();
  sub_1006E2E94(v19, a2);
  swift_release();
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_map, v13, (void (*)(void))type metadata accessor for LocationViewComponent);
  uint64_t v20 = sub_1001637CC();
  a2(v20);
  sub_1001D1C18();
  _s7Weather24LocationCompositionStateOwst_0(v18, 0, 1, v4);
  sub_10018010C(a1 + OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_airQuality);
  uint64_t v21 = sub_1001637CC();
  a2(v21);
  sub_1001D1C18();
  sub_10018010C(a1 + OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_newsArticle);
  uint64_t v22 = sub_1001637CC();
  a2(v22);
  sub_1001D1C18();
  sub_10018010C(a1 + OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_nextHourPrecipitation);
  uint64_t v23 = sub_1001637CC();
  a2(v23);
  sub_1001D1C18();
  sub_10018010C(a1 + OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_severeAlert);
  uint64_t v24 = sub_1001637CC();
  a2(v24);
  sub_1001D1C18();
  sub_1002E3930();
}

uint64_t sub_1006A3C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TaskPriority();
  if (_s7Weather24LocationCompositionStateOwet_0(a1, 1, v5) == 1)
  {
    sub_100178254(a1, &qword_100E634B0);
  }
  else
  {
    TaskPriority.rawValue.getter();
    sub_100162880();
    uint64_t v6 = sub_1001A17A0();
    v7(v6);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_1006A3D3C()
{
  uint64_t v12 = v0;
  if (qword_100E627A8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1002102B0(v1, (uint64_t)qword_100F51E10);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[5];
  if (v4)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446210;
    v0[2] = v5;
    swift_errorRetain();
    sub_10017DF08(&qword_100E77F30);
    uint64_t v7 = String.init<A>(describing:)();
    v0[3] = sub_10016414C(v7, v8, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Can't get home and work location due to error:%{public}s", v6, 0xCu);
    swift_arrayDestroy();
    sub_100162EE0();
    sub_100162EE0();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_1001627B4();
  return v9();
}

uint64_t sub_1006A3F50()
{
  sub_100179DB4();
  *(unsigned char *)(*(void *)(v0 + 112) + 208) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1001627B4();
  return v1();
}

uint64_t sub_1006A3FF4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10017DF08(&qword_100E634B0);
  __chkstk_darwin(v2 - 8);
  sub_1001626E0();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = type metadata accessor for TaskPriority();
  _s7Weather24LocationCompositionStateOwst_0(v5, 1, 1, v6);
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  int v8 = _s7Weather24LocationCompositionStateOwet_0(v5, 1, v6);
  swift_retain();
  if (v8 == 1)
  {
    sub_100178254(v5, &qword_100E634B0);
  }
  else
  {
    TaskPriority.rawValue.getter();
    sub_100162880();
    uint64_t v9 = sub_1001A17A0();
    v10(v9);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      dispatch thunk of Actor.unownedExecutor.getter();
      swift_unknownObjectRelease();
    }
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1006A41BC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100218DF8;
  return sub_1000323FC();
}

uint64_t sub_1006A424C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Location();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocationOfInterest();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100E627A8 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_1002102B0(v12, (uint64_t)qword_100F51E10);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  HIDWORD(v37) = v14;
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v35 = a2;
    uint64_t v16 = v15;
    uint64_t v34 = swift_slowAlloc();
    uint64_t v41 = v34;
    *(_DWORD *)uint64_t v16 = 141558275;
    uint64_t v39 = 1752392040;
    uint64_t v32 = &v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 12) = 2081;
    uint64_t v31 = v16 + 14;
    os_log_t v33 = v13;
    LocationOfInterest.location.getter();
    sub_10023102C((unint64_t *)&qword_100E66470, 255, (void (*)(uint64_t))&type metadata accessor for Location);
    uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v36 = a1;
    uint64_t v18 = v5;
    uint64_t v19 = v4;
    unint64_t v21 = v20;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v19);
    uint64_t v39 = sub_10016414C(v17, v21, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v4 = v19;
    uint64_t v5 = v18;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    os_log_t v22 = v33;
    _os_log_impl((void *)&_mh_execute_header, v33, BYTE4(v37), "Fetch weather for location of interest %{private,mask.hash}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  LocationOfInterest.location.getter();
  sub_100A41D0C((uint64_t)v7, 0, v23, v24, v25, v26, v27, v28, v30, v31, (uint64_t)v32, (uint64_t)v33, v34, v35, v36, v37, v38, v39, v40,
    v41);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1006A4620()
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 128);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 168);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 224);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 264);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 304);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 344);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1006A4680()
{
  sub_1006A4620();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_1006A46AC()
{
  return v0;
}

uint64_t sub_1006A46B8()
{
  return sub_1006A46AC();
}

uint64_t sub_1006A46D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10017DF08(&qword_100E634B0);
  __chkstk_darwin(v2 - 8);
  sub_1001626E0();
  uint64_t v5 = v4 - v3;
  if (qword_100E627A8 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1002102B0(v6, (uint64_t)qword_100F51E10);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Fetch weather data for locations of interest due to savedLocations did update.", v9, 2u);
    sub_100162EE0();
  }

  uint64_t v10 = type metadata accessor for TaskPriority();
  _s7Weather24LocationCompositionStateOwst_0(v5, 1, 1, v10);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = v1;
  swift_retain();
  sub_1001BCCF0(v5, (uint64_t)&unk_100E8AA18, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_1006A4860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_1006A4880, a4, 0);
}

uint64_t sub_1006A4880()
{
  sub_1000A9DE8();
  sub_100026A1C();
  sub_1001627B4();
  return v0();
}

uint64_t sub_1006A48E0()
{
  sub_100109790();
  sub_100183DB4();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_100162FCC(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100218DF8;
  sub_10019EF84();
  return sub_1006A41BC();
}

uint64_t sub_1006A4974()
{
  sub_100109790();
  sub_100183DB4();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_100162FCC(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100218DF8;
  uint64_t v3 = sub_10019EF84();
  return sub_1006A4860(v3, v4, v5, v6);
}

uint64_t sub_1006A4A08(uint64_t a1, char a2)
{
  uint64_t v6 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E6F620);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UnitConfiguration.Temperature();
  sub_10017CE00();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  sub_10011BFD8();
  sub_1006A7A1C(a1, (uint64_t)v13);
  sub_10017A364((uint64_t)v13);
  if (v17)
  {
    sub_1000F3400((uint64_t)v13, &qword_100E6F620);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 1, 1, v2);
    uint64_t v18 = sub_1006A4CA0();
    sub_1006A7AE8((uint64_t)v9);
  }
  else
  {
    sub_100181630();
    v19();
    id v20 = [self mainBundle];
    v32._object = (void *)0x8000000100CAE400;
    sub_100189170();
    v21._uint64_t countAndFlagsBits = 0xD000000000000017;
    v32._uint64_t countAndFlagsBits = 0x10000000000000A0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v20, v21, v32);

    sub_10017DF08(&qword_100E64020);
    uint64_t v24 = swift_allocObject();
    uint64_t v25 = (void *)v24;
    *(_OWORD *)(v24 + 16) = xmmword_100C251B0;
    if (a2) {
      uint64_t v26 = UnitConfiguration.Temperature.description.getter();
    }
    else {
      uint64_t v26 = UnitConfiguration.Temperature.symbol.getter();
    }
    uint64_t v28 = v26;
    uint64_t v29 = v27;
    v25[7] = &type metadata for String;
    v25[8] = sub_10012B7C0();
    v25[4] = v28;
    void v25[5] = v29;
    uint64_t v18 = String.init(format:_:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v3, v2);
  }
  return v18;
}

uint64_t sub_1006A4CA0()
{
  type metadata accessor for UnitConfiguration.Temperature();
  sub_10017CE00();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  uint64_t v6 = sub_1001A0C6C();
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_10011BFD8();
  sub_1006A7A84(v1, v2);
  sub_10017A364(v2);
  if (v8)
  {
    id v9 = [self mainBundle];
    v21._object = (void *)0x8000000100CAE2B0;
    sub_100189170();
    v10._uint64_t countAndFlagsBits = 0xD000000000000012;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v9, v10, v21)._countAndFlagsBits;
  }
  else
  {
    sub_100181630();
    v13();
    uint64_t v14 = UnitConfiguration.Temperature.description.getter();
    uint64_t v16 = v15;
    uint64_t v17 = UnitConfiguration.Temperature.symbol.getter();
    uint64_t countAndFlagsBits = sub_1006A7368(v14, v16, v17, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v0);
  }
  return countAndFlagsBits;
}

uint64_t sub_1006A4E5C()
{
  type metadata accessor for UnitConfiguration.Temperature();
  sub_10017CE00();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  uint64_t v5 = sub_1001A0C6C();
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  char v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  Swift::String v11 = (char *)&v16 - v10;
  sub_1006A7A84(v1, (uint64_t)&v16 - v10);
  sub_10017A364((uint64_t)v11);
  if (v12)
  {
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 1, 1, v0);
    uint64_t v14 = sub_1006A4CA0();
    sub_1006A7AE8((uint64_t)v8);
  }
  else
  {
    sub_100181630();
    v13();
    uint64_t v14 = UnitConfiguration.Temperature.description.getter();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
  }
  return v14;
}

uint64_t sub_1006A4FB0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6F620);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v102 = v6;
  uint64_t v7 = sub_10017DF08(&qword_100E775E8);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v101 = v9;
  uint64_t v10 = sub_10017DF08(&qword_100E77818);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_100162EF8();
  uint64_t v100 = v12;
  sub_1001626D4();
  __chkstk_darwin(v13);
  sub_100128F8C();
  uint64_t v107 = v14;
  uint64_t v15 = sub_10017DF08(&qword_100E77810);
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_100162EF8();
  uint64_t v96 = v17;
  sub_1001626D4();
  __chkstk_darwin(v18);
  sub_100128F8C();
  uint64_t v106 = v19;
  uint64_t v20 = sub_10017DF08(&qword_100E77808);
  uint64_t v21 = sub_100109308(v20);
  __chkstk_darwin(v21);
  sub_100162EF8();
  uint64_t v99 = v22;
  sub_1001626D4();
  __chkstk_darwin(v23);
  sub_100128F8C();
  uint64_t v105 = v24;
  uint64_t v25 = sub_10017DF08(&qword_100E77800);
  uint64_t v26 = sub_100109308(v25);
  __chkstk_darwin(v26);
  sub_100162EF8();
  uint64_t v98 = v27;
  sub_1001626D4();
  __chkstk_darwin(v28);
  sub_100128F8C();
  uint64_t v104 = v29;
  uint64_t v30 = sub_10017DF08(&qword_100E777F8);
  uint64_t v31 = sub_100109308(v30);
  __chkstk_darwin(v31);
  sub_100162EF8();
  uint64_t v97 = v32;
  sub_1001626D4();
  __chkstk_darwin(v33);
  sub_100128F8C();
  uint64_t v103 = v34;
  uint64_t v35 = *(void *)(a1 + 48);
  if (*(unsigned char *)(a1 + 56))
  {
    if (*(unsigned char *)(a1 + 56) == 1)
    {
      uint64_t v89 = (uint64_t)a2;
      sub_10017DF08(&qword_100E77670);
      sub_100181514();
      uint64_t v95 = v36;
      _s7Weather24LocationCompositionStateOwst_0(v37, v38, v39, v36);
      sub_10017DF08(&qword_100E77648);
      sub_100181514();
      uint64_t v94 = v40;
      _s7Weather24LocationCompositionStateOwst_0(v41, v42, v43, v40);
      sub_10017DF08(&qword_100E77630);
      sub_100181514();
      uint64_t v93 = v44;
      _s7Weather24LocationCompositionStateOwst_0(v45, v46, v47, v44);
      type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
      sub_100181514();
      uint64_t v92 = v48;
      _s7Weather24LocationCompositionStateOwst_0(v49, v50, v51, v48);
      sub_10017DF08(&qword_100E775E0);
      sub_100181514();
      uint64_t v91 = v52;
      _s7Weather24LocationCompositionStateOwst_0(v53, v54, v55, v52);
      uint64_t v56 = v35 + 56;
      uint64_t v57 = 1 << *(unsigned char *)(v35 + 32);
      uint64_t v58 = -1;
      if (v57 < 64) {
        uint64_t v58 = ~(-1 << v57);
      }
      unint64_t v59 = v58 & *(void *)(v35 + 56);
      int64_t v60 = (unint64_t)(v57 + 63) >> 6;
      swift_bridgeObjectRetain();
      int64_t v61 = 0;
      uint64_t v90 = v35;
      while (1)
      {
        if (v59)
        {
          unint64_t v62 = __clz(__rbit64(v59));
          v59 &= v59 - 1;
          unint64_t v63 = v62 | (v61 << 6);
        }
        else
        {
          int64_t v64 = v61 + 1;
          if (__OFADD__(v61, 1))
          {
            __break(1u);
            goto LABEL_41;
          }
          if (v64 >= v60) {
            goto LABEL_35;
          }
          unint64_t v65 = *(void *)(v56 + 8 * v64);
          ++v61;
          if (!v65)
          {
            int64_t v61 = v64 + 1;
            if (v64 + 1 >= v60) {
              goto LABEL_35;
            }
            unint64_t v65 = *(void *)(v56 + 8 * v61);
            if (!v65)
            {
              int64_t v61 = v64 + 2;
              if (v64 + 2 >= v60) {
                goto LABEL_35;
              }
              unint64_t v65 = *(void *)(v56 + 8 * v61);
              if (!v65)
              {
                int64_t v66 = v64 + 3;
                if (v66 >= v60)
                {
LABEL_35:
                  swift_release();
                  sub_1006A7954(v103, v89, &qword_100E777F8);
                  uint64_t v83 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
                  sub_1006A7954(v104, v89 + v83[5], &qword_100E77800);
                  sub_1006A7954(v105, v89 + v83[6], &qword_100E77808);
                  sub_1006A7954(v106, v89 + v83[7], &qword_100E77810);
                  sub_1006A7954(v107, v89 + v83[8], &qword_100E77818);
                  type metadata accessor for UnitsConfigurationViewModel.Representation(0);
                  swift_storeEnumTagMultiPayload();
                  uint64_t v84 = type metadata accessor for UnitsConfigurationViewModel(0);
                  return _s7Weather24LocationCompositionStateOwst_0(v89, 0, 1, v84);
                }
                unint64_t v65 = *(void *)(v56 + 8 * v66);
                if (!v65)
                {
                  while (1)
                  {
                    int64_t v61 = v66 + 1;
                    if (__OFADD__(v66, 1)) {
                      break;
                    }
                    if (v61 >= v60) {
                      goto LABEL_35;
                    }
                    unint64_t v65 = *(void *)(v56 + 8 * v61);
                    ++v66;
                    if (v65) {
                      goto LABEL_21;
                    }
                  }
LABEL_41:
                  __break(1u);
                  JUMPOUT(0x1006A5850);
                }
                int64_t v61 = v66;
              }
            }
          }
LABEL_21:
          unint64_t v59 = (v65 - 1) & v65;
          unint64_t v63 = __clz(__rbit64(v65)) + (v61 << 6);
        }
        switch(*(unsigned char *)(*(void *)(v35 + 48) + v63))
        {
          case 1:
            uint64_t v67 = v98;
            sub_10019D760();
            sub_1006A5DD8(v75);
            uint64_t v69 = v104;
            uint64_t v70 = &qword_100E77800;
            sub_1000F3400(v104, &qword_100E77800);
            uint64_t v71 = sub_100180148();
            uint64_t v74 = v94;
            goto LABEL_28;
          case 2:
            uint64_t v67 = v99;
            sub_10019D760();
            sub_1006A6338(v76);
            uint64_t v69 = v105;
            uint64_t v70 = &qword_100E77808;
            sub_1000F3400(v105, &qword_100E77808);
            uint64_t v71 = sub_100180148();
            uint64_t v74 = v93;
            goto LABEL_28;
          case 3:
            sub_1006A6898(v101);
            type metadata accessor for UnitManager();
            static UnitManager.standard.getter();
            UnitManager.systemWideTemperatureUnit.getter();
            swift_release();
            sub_1000F3400(v106, &qword_100E77810);
            sub_1006A7954((uint64_t)v101, v96, &qword_100E775E8);
            sub_1006A7954(v102, v96 + *(int *)(v92 + 20), &qword_100E6F620);
            _s7Weather24LocationCompositionStateOwst_0(v96, 0, 1, v92);
            uint64_t v35 = v90;
            sub_1006A7954(v96, v106, &qword_100E77810);
            continue;
          case 4:
            uint64_t v67 = v100;
            sub_10019D760();
            sub_1006A6E08(v77);
            uint64_t v69 = v107;
            uint64_t v70 = &qword_100E77818;
            sub_1000F3400(v107, &qword_100E77818);
            uint64_t v71 = sub_100180148();
            uint64_t v74 = v91;
            goto LABEL_28;
          default:
            uint64_t v67 = v97;
            sub_10019D760();
            sub_1006A5878(v68);
            uint64_t v69 = v103;
            uint64_t v70 = &qword_100E777F8;
            sub_1000F3400(v103, &qword_100E777F8);
            uint64_t v71 = sub_100180148();
            uint64_t v74 = v95;
LABEL_28:
            _s7Weather24LocationCompositionStateOwst_0(v71, v72, v73, v74);
            sub_1006A7954(v67, v69, v70);
            break;
        }
      }
    }
    sub_1006A5878(a2);
    uint64_t v78 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.Full(0);
    sub_1006A5DD8((uint64_t *)((char *)a2 + v78[5]));
    sub_1006A6338((uint64_t *)((char *)a2 + v78[6]));
    sub_1006A6898((uint64_t *)((char *)a2 + v78[7]));
    type metadata accessor for UnitManager();
    static UnitManager.standard.getter();
    type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
    UnitManager.systemWideTemperatureUnit.getter();
    swift_release();
    sub_1006A6E08((uint64_t *)((char *)a2 + v78[8]));
    static UnitManager.standard.getter();
    char v79 = UnitManager.hasPreferredUnits.getter();
    swift_release();
    char v80 = *(unsigned char *)(a1 + 57);
    *((unsigned char *)a2 + v78[9]) = (v79 & 1) == 0;
    *((unsigned char *)a2 + v78[10]) = v80;
    type metadata accessor for UnitsConfigurationViewModel.Representation(0);
    sub_10017A734();
  }
  else
  {
    switch(*(void *)(a1 + 48))
    {
      case 1u:
        sub_1001A4780();
        sub_1006A5DD8(v85);
        type metadata accessor for UnitsConfigurationViewModel.Representation(0);
        sub_10017A734();
        break;
      case 2u:
        sub_1001A4780();
        sub_1006A6338(v86);
        type metadata accessor for UnitsConfigurationViewModel.Representation(0);
        sub_10017A734();
        break;
      case 3u:
        sub_1001A4780();
        sub_1006A6898(v87);
        type metadata accessor for UnitManager();
        static UnitManager.standard.getter();
        type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
        UnitManager.systemWideTemperatureUnit.getter();
        swift_release();
        type metadata accessor for UnitsConfigurationViewModel.Representation(0);
        sub_10017A734();
        break;
      case 4u:
        sub_1001A4780();
        sub_1006A6E08(v88);
        type metadata accessor for UnitsConfigurationViewModel.Representation(0);
        sub_10017A734();
        break;
      default:
        sub_1006A5878(a2);
        type metadata accessor for UnitsConfigurationViewModel.Representation(0);
        sub_10017A734();
        break;
    }
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v81 = type metadata accessor for UnitsConfigurationViewModel(0);

  return _s7Weather24LocationCompositionStateOwst_0((uint64_t)a2, 0, 1, v81);
}

uint64_t sub_1006A5878@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v53 = a1;
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v50 = v1;
  uint64_t v51 = v2;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E77758);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v44 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v44 - v12;
  uint64_t v14 = type metadata accessor for UnitConfiguration.Distance();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v44 - v19;
  type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  uint64_t v52 = UnitManager.availableDistanceUnits.getter();
  swift_release();
  static UnitManager.standard.getter();
  UnitManager.preferredDistanceUnit.getter();
  swift_release();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14) != 1)
  {
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v38(v20, v13, v14);
LABEL_7:
    uint64_t v40 = v52;
    uint64_t v39 = v53;
    goto LABEL_13;
  }
  uint64_t v49 = v20;
  uint64_t v21 = v51;
  sub_1000F3400((uint64_t)v13, &qword_100E77758);
  static UnitManager.standard.getter();
  UnitManager.visibility.getter();
  swift_release();
  UnitConfiguration.Distance.init(_:)();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v14) != 1)
  {
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    uint64_t v20 = v49;
    v38(v49, v11, v14);
    goto LABEL_7;
  }
  sub_1000F3400((uint64_t)v11, &qword_100E77758);
  uint64_t v22 = v4;
  static Logger.locale.getter();
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.error.getter();
  uint64_t v25 = v18;
  uint64_t v26 = (uint64_t)v8;
  uint64_t v27 = v21;
  if (os_log_type_enabled(v23, v24))
  {
    os_log_t v47 = v23;
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    uint64_t v55 = v46;
    uint64_t v48 = v22;
    *(_DWORD *)uint64_t v28 = 136315138;
    uint64_t v44 = v28 + 4;
    uint64_t v45 = v28;
    static UnitManager.standard.getter();
    uint64_t v29 = (void *)UnitManager.visibility.getter();
    swift_release();
    id v30 = [v29 symbol];

    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v32 = v25;
    os_log_type_t v33 = v24;
    unint64_t v35 = v34;

    uint64_t v54 = sub_10016414C(v31, v35, &v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    os_log_t v36 = v47;
    os_log_type_t v37 = v33;
    uint64_t v25 = v32;
    _os_log_impl((void *)&_mh_execute_header, v47, v37, "Encountered unsupported selectable unit for distance. unit=%s", v45, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v27 + 8))(v48, v50);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v50);
  }
  uint64_t v40 = v52;
  sub_10043F73C(v52, v26);
  int v41 = _s7Weather24LocationCompositionStateOwet_0(v26, 1, v14);
  uint64_t v39 = v53;
  uint64_t v20 = v49;
  if (v41 == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v25, enum case for UnitConfiguration.Distance.miles(_:), v14);
    sub_1000F3400(v26, &qword_100E77758);
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  }
  else
  {
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v38(v25, (char *)v26, v14);
  }
  v38(v20, v25, v14);
LABEL_13:
  *uint64_t v39 = v40;
  uint64_t v42 = sub_10017DF08(&qword_100E77670);
  return ((uint64_t (*)(char *, char *, uint64_t))v38)((char *)v39 + *(int *)(v42 + 36), v20, v14);
}

uint64_t sub_1006A5DD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v53 = a1;
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v50 = v1;
  uint64_t v51 = v2;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E77760);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v44 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v44 - v12;
  uint64_t v14 = type metadata accessor for UnitConfiguration.Precipitation();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v44 - v19;
  type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  uint64_t v52 = UnitManager.availablePrecipitationUnits.getter();
  swift_release();
  static UnitManager.standard.getter();
  UnitManager.preferredPrecipitationUnit.getter();
  swift_release();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14) != 1)
  {
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v38(v20, v13, v14);
LABEL_7:
    uint64_t v40 = v52;
    uint64_t v39 = v53;
    goto LABEL_13;
  }
  uint64_t v49 = v20;
  uint64_t v21 = v51;
  sub_1000F3400((uint64_t)v13, &qword_100E77760);
  static UnitManager.standard.getter();
  UnitManager.precipitationRainfall.getter();
  swift_release();
  UnitConfiguration.Precipitation.init(_:)();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v14) != 1)
  {
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    uint64_t v20 = v49;
    v38(v49, v11, v14);
    goto LABEL_7;
  }
  sub_1000F3400((uint64_t)v11, &qword_100E77760);
  uint64_t v22 = v4;
  static Logger.locale.getter();
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.error.getter();
  uint64_t v25 = v18;
  uint64_t v26 = (uint64_t)v8;
  uint64_t v27 = v21;
  if (os_log_type_enabled(v23, v24))
  {
    os_log_t v47 = v23;
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    uint64_t v55 = v46;
    uint64_t v48 = v22;
    *(_DWORD *)uint64_t v28 = 136315138;
    uint64_t v44 = v28 + 4;
    uint64_t v45 = v28;
    static UnitManager.standard.getter();
    uint64_t v29 = (void *)UnitManager.precipitationRainfall.getter();
    swift_release();
    id v30 = [v29 symbol];

    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v32 = v25;
    os_log_type_t v33 = v24;
    unint64_t v35 = v34;

    uint64_t v54 = sub_10016414C(v31, v35, &v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    os_log_t v36 = v47;
    os_log_type_t v37 = v33;
    uint64_t v25 = v32;
    _os_log_impl((void *)&_mh_execute_header, v47, v37, "Encountered unsupported selectable unit for precipitation. unit=%s", v45, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v27 + 8))(v48, v50);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v50);
  }
  uint64_t v40 = v52;
  sub_10043F754(v52, v26);
  int v41 = _s7Weather24LocationCompositionStateOwet_0(v26, 1, v14);
  uint64_t v39 = v53;
  uint64_t v20 = v49;
  if (v41 == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v25, enum case for UnitConfiguration.Precipitation.inches(_:), v14);
    sub_1000F3400(v26, &qword_100E77760);
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  }
  else
  {
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v38(v25, (char *)v26, v14);
  }
  v38(v20, v25, v14);
LABEL_13:
  *uint64_t v39 = v40;
  uint64_t v42 = sub_10017DF08(&qword_100E77648);
  return ((uint64_t (*)(char *, char *, uint64_t))v38)((char *)v39 + *(int *)(v42 + 36), v20, v14);
}

uint64_t sub_1006A6338@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v53 = a1;
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v50 = v1;
  uint64_t v51 = v2;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E77768);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v44 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v44 - v12;
  uint64_t v14 = type metadata accessor for UnitConfiguration.Pressure();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v44 - v19;
  type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  uint64_t v52 = UnitManager.availablePressureUnits.getter();
  swift_release();
  static UnitManager.standard.getter();
  UnitManager.preferredPressureUnit.getter();
  swift_release();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14) != 1)
  {
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v38(v20, v13, v14);
LABEL_7:
    uint64_t v40 = v52;
    uint64_t v39 = v53;
    goto LABEL_13;
  }
  uint64_t v49 = v20;
  uint64_t v21 = v51;
  sub_1000F3400((uint64_t)v13, &qword_100E77768);
  static UnitManager.standard.getter();
  UnitManager.pressure.getter();
  swift_release();
  UnitConfiguration.Pressure.init(_:)();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v14) != 1)
  {
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    uint64_t v20 = v49;
    v38(v49, v11, v14);
    goto LABEL_7;
  }
  sub_1000F3400((uint64_t)v11, &qword_100E77768);
  uint64_t v22 = v4;
  static Logger.locale.getter();
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.error.getter();
  uint64_t v25 = v18;
  uint64_t v26 = (uint64_t)v8;
  uint64_t v27 = v21;
  if (os_log_type_enabled(v23, v24))
  {
    os_log_t v47 = v23;
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    uint64_t v55 = v46;
    uint64_t v48 = v22;
    *(_DWORD *)uint64_t v28 = 136315138;
    uint64_t v44 = v28 + 4;
    uint64_t v45 = v28;
    static UnitManager.standard.getter();
    uint64_t v29 = (void *)UnitManager.pressure.getter();
    swift_release();
    id v30 = [v29 symbol];

    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v32 = v25;
    os_log_type_t v33 = v24;
    unint64_t v35 = v34;

    uint64_t v54 = sub_10016414C(v31, v35, &v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    os_log_t v36 = v47;
    os_log_type_t v37 = v33;
    uint64_t v25 = v32;
    _os_log_impl((void *)&_mh_execute_header, v47, v37, "Encountered unsupported selectable unit for pressure. unit=%s", v45, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v27 + 8))(v48, v50);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v50);
  }
  uint64_t v40 = v52;
  sub_10043F76C(v52, v26);
  int v41 = _s7Weather24LocationCompositionStateOwet_0(v26, 1, v14);
  uint64_t v39 = v53;
  uint64_t v20 = v49;
  if (v41 == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v25, enum case for UnitConfiguration.Pressure.millibars(_:), v14);
    sub_1000F3400(v26, &qword_100E77768);
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  }
  else
  {
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v38(v25, (char *)v26, v14);
  }
  v38(v20, v25, v14);
LABEL_13:
  *uint64_t v39 = v40;
  uint64_t v42 = sub_10017DF08(&qword_100E77630);
  return ((uint64_t (*)(char *, char *, uint64_t))v38)((char *)v39 + *(int *)(v42 + 36), v20, v14);
}

uint64_t sub_1006A6898@<X0>(void *a1@<X8>)
{
  uint64_t v50 = a1;
  uint64_t v1 = sub_10017DF08(&qword_100E6F620);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v49 = (uint64_t)v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v42 - v4;
  uint64_t v6 = sub_10017DF08(&qword_100E8AAF8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for UnitConfiguration.Temperature();
  uint64_t v9 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v54 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
  uint64_t v11 = *(void *)(v48 - 8);
  uint64_t v12 = __chkstk_darwin(v48);
  uint64_t v14 = (char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v42 - v15;
  uint64_t v47 = type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  uint64_t v17 = UnitManager.availableTemperatureUnits.getter();
  swift_release();
  uint64_t v18 = *(void *)(v17 + 16);
  uint64_t v46 = v9;
  if (v18)
  {
    uint64_t v53 = v11;
    uint64_t v43 = v14;
    uint64_t v44 = v5;
    uint64_t v45 = v8;
    uint64_t v56 = _swiftEmptyArrayStorage;
    sub_1007F368C();
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    uint64_t v19 = v9 + 16;
    uint64_t v21 = *(unsigned __int8 *)(v19 + 64);
    v42[1] = v17;
    uint64_t v22 = v17 + ((v21 + 32) & ~v21);
    uint64_t v51 = *(void *)(v19 + 56);
    uint64_t v52 = v20;
    do
    {
      os_log_type_t v24 = v54;
      uint64_t v23 = v55;
      uint64_t v25 = v52;
      v52(v54, (char *)v22, v55);
      v25(v16, v24, v23);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v23);
      (*(void (**)(char *, uint64_t))(v19 - 8))(v24, v23);
      uint64_t v26 = v56;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1007F368C();
        uint64_t v26 = v56;
      }
      unint64_t v27 = v26[2];
      if (v27 >= v26[3] >> 1)
      {
        sub_1007F368C();
        uint64_t v26 = v56;
      }
      v26[2] = v27 + 1;
      unint64_t v28 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
      sub_1006A79B8((uint64_t)v16, (uint64_t)v26 + v28 + *(void *)(v53 + 72) * v27);
      v22 += v51;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
    uint64_t v5 = v44;
    uint64_t v8 = v45;
    uint64_t v14 = v43;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v28 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v26 = _swiftEmptyArrayStorage;
  }
  sub_10017DF08(&qword_100E8AB00);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_100C251B0;
  uint64_t v30 = 1;
  uint64_t v31 = v55;
  _s7Weather24LocationCompositionStateOwst_0(v29 + v28, 1, 1, v55);
  uint64_t v56 = v26;
  sub_10037FC18(v29);
  uint64_t v32 = v56;
  static UnitManager.standard.getter();
  UnitManager.preferredTemperatureUnit.getter();
  swift_release();
  uint64_t v33 = v49;
  sub_1006A7A1C((uint64_t)v5, v49);
  if (_s7Weather24LocationCompositionStateOwet_0(v33, 1, v31) != 1)
  {
    uint64_t v34 = v46;
    os_log_t v36 = v54;
    uint64_t v35 = v55;
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 32))(v54, v33, v55);
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v8, v36, v35);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v35);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v35);
    uint64_t v30 = 0;
  }
  uint64_t v37 = v30;
  uint64_t v38 = v48;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, v37, 1, v48);
  sub_1000F3400((uint64_t)v5, &qword_100E6F620);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v38) == 1)
  {
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 1, 1, v55);
    sub_1000F3400((uint64_t)v8, &qword_100E8AAF8);
  }
  else
  {
    sub_1006A79B8((uint64_t)v8, (uint64_t)v14);
  }
  uint64_t v39 = v50;
  *uint64_t v50 = v32;
  uint64_t v40 = sub_10017DF08(&qword_100E775E8);
  return sub_1006A79B8((uint64_t)v14, (uint64_t)v39 + *(int *)(v40 + 36));
}

uint64_t sub_1006A6E08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v53 = a1;
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v50 = v1;
  uint64_t v51 = v2;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(qword_100E77770);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v44 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v44 - v12;
  uint64_t v14 = type metadata accessor for UnitConfiguration.WindSpeed();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v44 - v19;
  type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  uint64_t v52 = UnitManager.availableWindSpeedUnits.getter();
  swift_release();
  static UnitManager.standard.getter();
  UnitManager.preferredWindUnit.getter();
  swift_release();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14) != 1)
  {
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v38(v20, v13, v14);
LABEL_7:
    uint64_t v40 = v52;
    uint64_t v39 = v53;
    goto LABEL_13;
  }
  uint64_t v49 = v20;
  uint64_t v21 = v51;
  sub_1000F3400((uint64_t)v13, qword_100E77770);
  static UnitManager.standard.getter();
  UnitManager.windSpeed.getter();
  swift_release();
  UnitConfiguration.WindSpeed.init(_:)();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v14) != 1)
  {
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    uint64_t v20 = v49;
    v38(v49, v11, v14);
    goto LABEL_7;
  }
  sub_1000F3400((uint64_t)v11, qword_100E77770);
  uint64_t v22 = v4;
  static Logger.locale.getter();
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.error.getter();
  uint64_t v25 = v18;
  uint64_t v26 = (uint64_t)v8;
  uint64_t v27 = v21;
  if (os_log_type_enabled(v23, v24))
  {
    os_log_t v47 = v23;
    unint64_t v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    uint64_t v55 = v46;
    uint64_t v48 = v22;
    *(_DWORD *)unint64_t v28 = 136315138;
    uint64_t v44 = v28 + 4;
    uint64_t v45 = v28;
    static UnitManager.standard.getter();
    uint64_t v29 = (void *)UnitManager.windSpeed.getter();
    swift_release();
    id v30 = [v29 symbol];

    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v32 = v25;
    os_log_type_t v33 = v24;
    unint64_t v35 = v34;

    uint64_t v54 = sub_10016414C(v31, v35, &v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    os_log_t v36 = v47;
    os_log_type_t v37 = v33;
    uint64_t v25 = v32;
    _os_log_impl((void *)&_mh_execute_header, v47, v37, "Encountered unsupported selectable unit for wind. unit=%s", v45, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v27 + 8))(v48, v50);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v50);
  }
  uint64_t v40 = v52;
  sub_10043F784(v52, v26);
  int v41 = _s7Weather24LocationCompositionStateOwet_0(v26, 1, v14);
  uint64_t v39 = v53;
  uint64_t v20 = v49;
  if (v41 == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v25, enum case for UnitConfiguration.WindSpeed.milesPerHour(_:), v14);
    sub_1000F3400(v26, qword_100E77770);
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  }
  else
  {
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v38(v25, (char *)v26, v14);
  }
  v38(v20, v25, v14);
LABEL_13:
  *uint64_t v39 = v40;
  uint64_t v42 = sub_10017DF08(&qword_100E775E0);
  return ((uint64_t (*)(char *, char *, uint64_t))v38)((char *)v39 + *(int *)(v42 + 36), v20, v14);
}

uint64_t sub_1006A7368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = [self mainBundle];
  v15._uint64_t countAndFlagsBits = 0xD000000000000065;
  v15._object = (void *)0x8000000100CAE330;
  v9._object = (void *)0x8000000100CAE310;
  v9._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v10._uint64_t countAndFlagsBits = 0x29402528204025;
  v10._object = (void *)0xE700000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v15);

  sub_10017DF08(&qword_100E64020);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_100C25ED0;
  *(void *)(v11 + 56) = &type metadata for String;
  unint64_t v12 = sub_10012B7C0();
  *(void *)(v11 + 32) = a1;
  *(void *)(v11 + 40) = a2;
  *(void *)(v11 + 96) = &type metadata for String;
  *(void *)(v11 + 104) = v12;
  *(void *)(v11 + 64) = v12;
  *(void *)(v11 + 72) = a3;
  *(void *)(v11 + 80) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1006A74D4()
{
  return sub_1006A776C((uint64_t (*)(void))&UnitConfiguration.Distance.description.getter, (uint64_t (*)(void))&UnitConfiguration.Distance.symbol.getter);
}

uint64_t sub_1006A7518(uint64_t a1)
{
  uint64_t result = sub_1006A790C(&qword_100E8AA38, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Distance);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1006A757C()
{
  return sub_1006A776C((uint64_t (*)(void))&UnitConfiguration.Precipitation.description.getter, (uint64_t (*)(void))&UnitConfiguration.Precipitation.symbol.getter);
}

uint64_t sub_1006A75C0(uint64_t a1)
{
  uint64_t result = sub_1006A790C(&qword_100E8AA40, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Precipitation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1006A7624()
{
  return sub_1006A776C((uint64_t (*)(void))&UnitConfiguration.Pressure.description.getter, (uint64_t (*)(void))&UnitConfiguration.Pressure.symbol.getter);
}

uint64_t sub_1006A7668(uint64_t a1)
{
  uint64_t result = sub_1006A790C(&qword_100E8AA48, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Pressure);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1006A76CC()
{
  return sub_1006A776C((uint64_t (*)(void))&UnitConfiguration.Temperature.description.getter, (uint64_t (*)(void))&UnitConfiguration.Temperature.symbol.getter);
}

uint64_t sub_1006A7710(uint64_t a1)
{
  uint64_t result = sub_1006A790C(&qword_100E8AA50, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Temperature);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1006A776C(uint64_t (*a1)(void), uint64_t (*a2)(void))
{
  uint64_t v3 = a1();
  uint64_t v5 = v4;
  uint64_t v6 = a2();
  uint64_t v8 = sub_1006A7368(v3, v5, v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1006A77EC()
{
  return sub_1006A776C((uint64_t (*)(void))&UnitConfiguration.WindSpeed.description.getter, (uint64_t (*)(void))&UnitConfiguration.WindSpeed.symbol.getter);
}

uint64_t sub_1006A7830(uint64_t a1)
{
  uint64_t result = sub_1006A790C(&qword_100E8AA58, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.WindSpeed);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for UnitsConfigurationViewModelFactory()
{
  return self;
}

uint64_t sub_1006A78B4(uint64_t a1)
{
  uint64_t result = sub_1006A790C(&qword_100E77D68, (void (*)(uint64_t))type metadata accessor for UnitsConfigurationViewModel.Temperature);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1006A790C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1006A7954(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10017DF08(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1006A79B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006A7A1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6F620);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006A7A84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006A7AE8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1006A7B44(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E07968, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

uint64_t sub_1006A7B90(unsigned __int8 a1)
{
  if (a1) {
    return sub_10018317C(a1);
  }
  else {
    return 0x72656874616577;
  }
}

uint64_t sub_1006A7BCC()
{
  return sub_10088BBAC();
}

Swift::Int sub_1006A7BD8()
{
  return sub_100652680();
}

uint64_t sub_1006A7BE0(uint64_t a1)
{
  return sub_1002C3410(a1, *v1);
}

Swift::Int sub_1006A7BE8()
{
  return sub_1002C40AC();
}

unint64_t sub_1006A7BF0@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1006A7B44(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1006A7C20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1006A7B90(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1006A7CD8(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = v2;
  swift_retain();
  Atomic.wrappedValue.getter();
  swift_release();
  if (v19 == 1)
  {
    sub_10018C4D0();
    uint64_t v7 = (void *)Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (sub_100187200(v8))
    {
      Swift::String v9 = (_DWORD *)swift_slowAlloc();
      sub_10016EEA8();
      sub_10019AAB4();
      _DWORD *v9 = 136446210;
      uint64_t v11 = *(void *)(v4 + 16);
      unint64_t v10 = *(void *)(v4 + 24);
      swift_bridgeObjectRetain();
      sub_10016414C(v11, v10, &v19);
      sub_10019B148();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_100182050();
      swift_bridgeObjectRelease();
      sub_100184728((void *)&_mh_execute_header, v12, v13, "Unexpected failure call for WeatherData Update Request, already finished before. uuid=%{public}s");
      sub_10018874C();
      sub_100162EE0();
      sub_100162EE0();
    }
    else
    {
      sub_100182050();
    }
  }
  LOBYTE(v19) = 1;
  swift_retain();
  Atomic.wrappedValue.setter();
  swift_release();
  sub_10018C4D0();
  swift_bridgeObjectRetain_n();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (sub_100187200(v15))
  {
    uint64_t v16 = swift_slowAlloc();
    sub_100189F84();
    sub_10019AAB4();
    *(_DWORD *)uint64_t v16 = 136380931;
    swift_bridgeObjectRetain();
    sub_10016414C(a1, a2, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 2082;
    uint64_t v17 = *(void *)(v4 + 16);
    unint64_t v18 = *(void *)(v4 + 24);
    swift_bridgeObjectRetain();
    sub_10016414C(v17, v18, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_100182050();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v3, "WeatherData Update Request failed. message=%{private}s, uuid=%{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    sub_100162EE0();
    sub_100162EE0();
  }
  else
  {
    sub_100182050();
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1006A7F90()
{
  return type metadata accessor for WeatherDataUpdateRequestLog(0);
}

unsigned char *storeEnumTagSinglePayload for WeatherDataUpdateRequestLog.Kind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1006A8064);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherDataUpdateRequestLog.Kind()
{
  return &type metadata for WeatherDataUpdateRequestLog.Kind;
}

unint64_t sub_1006A80A0()
{
  unint64_t result = qword_100E8AC08;
  if (!qword_100E8AC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8AC08);
  }
  return result;
}

uint64_t sub_1006A80EC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1006A8120()
{
  return Error.localizedDescription.getter();
}

uint64_t sub_1006A8168()
{
  return sub_10017D164();
}

uint64_t sub_1006A8198()
{
  return sub_10017D164();
}

uint64_t sub_1006A81AC()
{
  swift_release();
  sub_100180160();

  return swift_deallocObject();
}

uint64_t sub_1006A81F8()
{
  return sub_10017D164();
}

uint64_t sub_1006A8214()
{
  swift_errorRelease();

  return swift_deallocObject();
}

uint64_t sub_1006A8254()
{
  return sub_10017D164();
}

uint64_t sub_1006A82F0()
{
  return sub_1001792A0((uint64_t (*)(void))&Location.name.getter);
}

uint64_t sub_1006A8310()
{
  return sub_10017D164();
}

uint64_t sub_1006A833C()
{
  return sub_10017D164();
}

uint64_t sub_1006A8358()
{
  return sub_10017D164();
}

uint64_t sub_1006A837C()
{
  return sub_10017D164();
}

uint64_t sub_1006A8398()
{
  return sub_1006A8120();
}

uint64_t sub_1006A83C4()
{
  if (*(void *)(v0 + 24) != 1) {
    swift_bridgeObjectRelease();
  }
  sub_100180160();

  return swift_deallocObject();
}

uint64_t sub_1006A8428()
{
  return sub_10017D164();
}

uint64_t sub_1006A8434()
{
  return sub_10017D164();
}

uint64_t sub_1006A8448()
{
  return sub_10017D164();
}

uint64_t sub_1006A8478()
{
  return sub_10017D164();
}

uint64_t sub_1006A848C()
{
  return sub_10017D164();
}

uint64_t sub_1006A84BC()
{
  return sub_10017D164();
}

uint64_t sub_1006A84FC()
{
  swift_bridgeObjectRelease();
  sub_100180160();

  return swift_deallocObject();
}

uint64_t sub_1006A852C()
{
  return sub_1006A80EC(*(void *)(v0 + 16));
}

uint64_t sub_1006A853C()
{
  return sub_10017D164();
}

void *sub_1006A8570(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        swift_bridgeObjectRetain();
        goto LABEL_15;
      case 2u:
      case 0xAu:
      case 0xEu:
        uint64_t v21 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
        goto LABEL_15;
      case 3u:
        uint64_t v9 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        uint64_t v10 = sub_10017DF08(&qword_100E8AC28);
        *(void *)((char *)a1 + *(int *)(v10 + 48)) = *(void *)((char *)a2 + *(int *)(v10 + 48));
        goto LABEL_15;
      case 4u:
        uint64_t v11 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        uint64_t v12 = sub_10017DF08(&qword_100E8AC20);
        *(void *)((char *)a1 + *(int *)(v12 + 48)) = *(void *)((char *)a2 + *(int *)(v12 + 48));
        *(void *)((char *)a1 + *(int *)(v12 + 64)) = *(void *)((char *)a2 + *(int *)(v12 + 64));
        goto LABEL_15;
      case 5u:
        uint64_t v19 = a2[1];
        if (v19 == 1)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
        }
        else
        {
          *a1 = *a2;
          a1[1] = v19;
          swift_bridgeObjectRetain();
        }
        goto LABEL_15;
      case 6u:
      case 7u:
        uint64_t v13 = *a2;
        swift_errorRetain();
        *a1 = v13;
        goto LABEL_15;
      case 0xCu:
        uint64_t v20 = a2[1];
        *a1 = *a2;
        a1[1] = v20;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        swift_bridgeObjectRetain();
        goto LABEL_15;
      case 0xFu:
      case 0x10u:
        uint64_t v14 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
        uint64_t v15 = *(int *)(sub_10017DF08(&qword_100E8AC10) + 48);
        uint64_t v16 = (void *)((char *)a1 + v15);
        uint64_t v17 = (void *)((char *)a2 + v15);
        uint64_t v18 = v17[1];
        void *v16 = *v17;
        v16[1] = v18;
        swift_bridgeObjectRetain();
LABEL_15:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void *sub_1006A8A5C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1006A8EB4((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        goto LABEL_12;
      case 2u:
      case 0xAu:
      case 0xEu:
        uint64_t v15 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
        goto LABEL_13;
      case 3u:
        uint64_t v6 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = sub_10017DF08(&qword_100E8AC28);
        *(void *)((char *)a1 + *(int *)(v7 + 48)) = *(void *)((char *)a2 + *(int *)(v7 + 48));
        goto LABEL_13;
      case 4u:
        uint64_t v8 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        uint64_t v9 = sub_10017DF08(&qword_100E8AC20);
        *(void *)((char *)a1 + *(int *)(v9 + 48)) = *(void *)((char *)a2 + *(int *)(v9 + 48));
        *(void *)((char *)a1 + *(int *)(v9 + 64)) = *(void *)((char *)a2 + *(int *)(v9 + 64));
        goto LABEL_13;
      case 5u:
        if (a2[1] == 1)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
        }
        else
        {
LABEL_12:
          *a1 = *a2;
          a1[1] = a2[1];
          swift_bridgeObjectRetain();
        }
        goto LABEL_13;
      case 6u:
      case 7u:
        uint64_t v10 = *a2;
        swift_errorRetain();
        *a1 = v10;
        goto LABEL_13;
      case 0xCu:
        *a1 = *a2;
        a1[1] = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 0xFu:
      case 0x10u:
        uint64_t v11 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        uint64_t v12 = *(int *)(sub_10017DF08(&qword_100E8AC10) + 48);
        uint64_t v13 = (void *)((char *)a1 + v12);
        uint64_t v14 = (void *)((char *)a2 + v12);
        *uint64_t v13 = *v14;
        v13[1] = v14[1];
        swift_bridgeObjectRetain();
LABEL_13:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1006A8EB4(uint64_t a1)
{
  uint64_t updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(updated - 8) + 8))(a1, updated);
  return a1;
}

char *sub_1006A8F10(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
    case 0xAu:
    case 0xEu:
      uint64_t v12 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
      goto LABEL_7;
    case 3u:
      uint64_t v6 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = sub_10017DF08(&qword_100E8AC28);
      *(void *)&a1[*(int *)(v7 + 48)] = *(void *)&a2[*(int *)(v7 + 48)];
      goto LABEL_7;
    case 4u:
      uint64_t v8 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      uint64_t v9 = sub_10017DF08(&qword_100E8AC20);
      *(void *)&a1[*(int *)(v9 + 48)] = *(void *)&a2[*(int *)(v9 + 48)];
      *(void *)&a1[*(int *)(v9 + 64)] = *(void *)&a2[*(int *)(v9 + 64)];
      goto LABEL_7;
    case 0xFu:
    case 0x10u:
      uint64_t v10 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      uint64_t v11 = sub_10017DF08(&qword_100E8AC10);
      *(_OWORD *)&a1[*(int *)(v11 + 48)] = *(_OWORD *)&a2[*(int *)(v11 + 48)];
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_1006A925C(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1006A8EB4((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 0xAu:
      case 0xEu:
        uint64_t v6 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        goto LABEL_8;
      case 3u:
        uint64_t v7 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        uint64_t v8 = sub_10017DF08(&qword_100E8AC28);
        *(void *)&a1[*(int *)(v8 + 48)] = *(void *)&a2[*(int *)(v8 + 48)];
        goto LABEL_8;
      case 4u:
        uint64_t v9 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
        uint64_t v10 = sub_10017DF08(&qword_100E8AC20);
        *(void *)&a1[*(int *)(v10 + 48)] = *(void *)&a2[*(int *)(v10 + 48)];
        *(void *)&a1[*(int *)(v10 + 64)] = *(void *)&a2[*(int *)(v10 + 64)];
        goto LABEL_8;
      case 0xFu:
      case 0x10u:
        uint64_t v11 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
        uint64_t v12 = sub_10017DF08(&qword_100E8AC10);
        *(_OWORD *)&a1[*(int *)(v12 + 48)] = *(_OWORD *)&a2[*(int *)(v12 + 48)];
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *sub_1006A97F4(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = &v9[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for PreviewLocation();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v11 = type metadata accessor for LocationOfInterest();
          (*(void (**)(char *, char **, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
          break;
        case 2u:
          uint64_t v13 = *a2;
          uint64_t v12 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v12;
          uint64_t v14 = a2[3];
          *((void *)a1 + 2) = a2[2];
          *((void *)a1 + 3) = v14;
          uint64_t v15 = a2[5];
          *((void *)a1 + 4) = a2[4];
          *((void *)a1 + 5) = v15;
          *((void *)a1 + 6) = a2[6];
          uint64_t v16 = type metadata accessor for SearchLocation();
          uint64_t v17 = *(int *)(v16 + 32);
          __dst = &a1[v17];
          uint64_t v28 = v16;
          uint64_t v18 = (char *)a2 + v17;
          uint64_t v19 = type metadata accessor for Location();
          uint64_t v20 = v13;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
          {
            uint64_t v21 = sub_10017DF08(&qword_100E639E8);
            memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(__dst, v18, v19);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v19);
          }
          uint64_t v23 = *(int *)(v28 + 36);
          os_log_type_t v24 = &a1[v23];
          uint64_t v25 = (char *)a2 + v23;
          *(_OWORD *)os_log_type_t v24 = *(_OWORD *)v25;
          v24[16] = v25[16];
          break;
        case 3u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v22 = a2[3];
          *((void *)a1 + 2) = a2[2];
          *((void *)a1 + 3) = v22;
          swift_bridgeObjectRetain();
          break;
        default:
          uint64_t v10 = type metadata accessor for Location();
          (*(void (**)(char *, char **, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
          break;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_19;
    }
    if (!EnumCaseMultiPayload)
    {
      type metadata accessor for SavedLocation();
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v8 = type metadata accessor for SavedLocation.Placeholder();
      }
      else {
        uint64_t v8 = type metadata accessor for Location();
      }
      (*(void (**)(char *, char **))(*(void *)(v8 - 8) + 16))(a1, a2);
      swift_storeEnumTagMultiPayload();
LABEL_19:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t sub_1006A9B94(id *a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    type metadata accessor for PreviewLocation();
    uint64_t result = swift_getEnumCaseMultiPayload();
    switch((int)result)
    {
      case 0:
        goto LABEL_6;
      case 1:
        uint64_t v3 = type metadata accessor for LocationOfInterest();
        goto LABEL_8;
      case 2:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v7 = (uint64_t)a1 + *(int *)(type metadata accessor for SearchLocation() + 32);
        uint64_t v8 = type metadata accessor for Location();
        uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v7, 1, v8);
        if (result) {
          return result;
        }
        unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
        uint64_t v6 = v7;
        uint64_t v5 = v8;
        break;
      case 3:
        return swift_bridgeObjectRelease();
      default:
        return result;
    }
  }
  else
  {
    if (result) {
      return result;
    }
    type metadata accessor for SavedLocation();
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v3 = type metadata accessor for SavedLocation.Placeholder();
    }
    else {
LABEL_6:
    }
      uint64_t v3 = type metadata accessor for Location();
LABEL_8:
    unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    uint64_t v5 = v3;
    uint64_t v6 = (uint64_t)a1;
  }

  return v4(v6, v5);
}

void **sub_1006A9D30(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for PreviewLocation();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v9 = type metadata accessor for LocationOfInterest();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        break;
      case 2u:
        uint64_t v11 = *a2;
        uint64_t v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        uint64_t v12 = a2[3];
        a1[2] = a2[2];
        a1[3] = v12;
        uint64_t v13 = a2[5];
        a1[4] = a2[4];
        a1[5] = v13;
        a1[6] = a2[6];
        uint64_t v14 = type metadata accessor for SearchLocation();
        uint64_t v15 = *(int *)(v14 + 32);
        uint64_t v25 = v14;
        __dst = (char *)a1 + v15;
        uint64_t v16 = (char *)a2 + v15;
        uint64_t v17 = type metadata accessor for Location();
        id v18 = v11;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
        {
          uint64_t v19 = sub_10017DF08(&qword_100E639E8);
          memcpy(__dst, v16, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(__dst, v16, v17);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v17);
        }
        uint64_t v21 = *(int *)(v25 + 36);
        uint64_t v22 = (char *)a1 + v21;
        uint64_t v23 = (char *)a2 + v21;
        *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
        unsigned char v22[16] = v23[16];
        break;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v20 = a2[3];
        a1[2] = a2[2];
        a1[3] = v20;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v8 = type metadata accessor for Location();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        break;
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_17;
  }
  if (!EnumCaseMultiPayload)
  {
    type metadata accessor for SavedLocation();
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v7 = type metadata accessor for SavedLocation.Placeholder();
    }
    else {
      uint64_t v7 = type metadata accessor for Location();
    }
    (*(void (**)(void **, void **))(*(void *)(v7 - 8) + 16))(a1, a2);
    swift_storeEnumTagMultiPayload();
LABEL_17:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void **sub_1006AA08C(void **a1, void **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1002AE148((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for PreviewLocation();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v9 = type metadata accessor for LocationOfInterest();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
          break;
        case 2u:
          uint64_t v10 = *a2;
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          a1[3] = a2[3];
          a1[4] = a2[4];
          a1[5] = a2[5];
          a1[6] = a2[6];
          uint64_t v11 = type metadata accessor for SearchLocation();
          uint64_t v12 = *(int *)(v11 + 32);
          __dst = (char *)a1 + v12;
          uint64_t v23 = v11;
          uint64_t v13 = (char *)a2 + v12;
          uint64_t v14 = type metadata accessor for Location();
          id v15 = v10;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
          {
            uint64_t v16 = sub_10017DF08(&qword_100E639E8);
            memcpy(__dst, v13, *(void *)(*(void *)(v16 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(__dst, v13, v14);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v14);
          }
          uint64_t v17 = *(int *)(v23 + 36);
          id v18 = (char *)a1 + v17;
          uint64_t v19 = (char *)a2 + v17;
          long long v20 = *(_OWORD *)v19;
          v18[16] = v19[16];
          *(_OWORD *)id v18 = v20;
          break;
        case 3u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          a1[2] = a2[2];
          a1[3] = a2[3];
          swift_bridgeObjectRetain();
          break;
        default:
          uint64_t v8 = type metadata accessor for Location();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
          break;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_18;
    }
    if (!EnumCaseMultiPayload)
    {
      type metadata accessor for SavedLocation();
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v7 = type metadata accessor for SavedLocation.Placeholder();
      }
      else {
        uint64_t v7 = type metadata accessor for Location();
      }
      (*(void (**)(void **, void **))(*(void *)(v7 - 8) + 16))(a1, a2);
      swift_storeEnumTagMultiPayload();
LABEL_18:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_1006AA418(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = type metadata accessor for PreviewLocation();
    int v9 = swift_getEnumCaseMultiPayload();
    if (v9 == 2)
    {
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      uint64_t v11 = type metadata accessor for SearchLocation();
      uint64_t v12 = *(int *)(v11 + 32);
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      uint64_t v15 = type metadata accessor for Location();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
      {
        uint64_t v16 = sub_10017DF08(&qword_100E639E8);
        memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
      }
      uint64_t v18 = *(int *)(v11 + 36);
      uint64_t v19 = &a1[v18];
      long long v20 = &a2[v18];
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      v19[16] = v20[16];
    }
    else if (v9 == 1)
    {
      uint64_t v17 = type metadata accessor for LocationOfInterest();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
    }
    else
    {
      if (v9)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
LABEL_19:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      uint64_t v10 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_19;
  }
  if (!EnumCaseMultiPayload)
  {
    type metadata accessor for SavedLocation();
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v7 = type metadata accessor for SavedLocation.Placeholder();
    }
    else {
      uint64_t v7 = type metadata accessor for Location();
    }
    (*(void (**)(char *, char *))(*(void *)(v7 - 8) + 32))(a1, a2);
    swift_storeEnumTagMultiPayload();
    goto LABEL_19;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_1006AA720(char *a1, char *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_1002AE148((uint64_t)a1);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = type metadata accessor for PreviewLocation();
    int v9 = swift_getEnumCaseMultiPayload();
    if (v9 == 2)
    {
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      uint64_t v11 = type metadata accessor for SearchLocation();
      uint64_t v12 = *(int *)(v11 + 32);
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      uint64_t v15 = type metadata accessor for Location();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
      {
        uint64_t v16 = sub_10017DF08(&qword_100E639E8);
        memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
      }
      uint64_t v18 = *(int *)(v11 + 36);
      uint64_t v19 = &a1[v18];
      long long v20 = &a2[v18];
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      v19[16] = v20[16];
    }
    else if (v9 == 1)
    {
      uint64_t v17 = type metadata accessor for LocationOfInterest();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
    }
    else
    {
      if (v9)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
LABEL_20:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      uint64_t v10 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_20;
  }
  if (!EnumCaseMultiPayload)
  {
    type metadata accessor for SavedLocation();
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v7 = type metadata accessor for SavedLocation.Placeholder();
    }
    else {
      uint64_t v7 = type metadata accessor for Location();
    }
    (*(void (**)(char *, char *))(*(void *)(v7 - 8) + 32))(a1, a2);
    swift_storeEnumTagMultiPayload();
    goto LABEL_20;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

uint64_t sub_1006AAA38@<X0>(uint64_t *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  char v10 = *((unsigned char *)a1 + 16);
  uint64_t v11 = a1[4];
  uint64_t v12 = a1[6];
  uint64_t v19 = a1[5];
  uint64_t v20 = a1[3];
  uint64_t v13 = a1[8];
  uint64_t v18 = a1[7];
  sub_100249E9C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v14 = DeviceIsSlow() ^ 1;
  uint64_t v15 = static Color.primary.getter();
  uint64_t v16 = (uint64_t *)(a7 + *(int *)(type metadata accessor for TipView(0) + 32));
  uint64_t *v16 = swift_getKeyPath();
  sub_10017DF08(&qword_100E62CB8);
  swift_storeEnumTagMultiPayload();
  *(void *)(a7 + 32) = v8;
  *(void *)(a7 + 40) = v9;
  *(unsigned char *)(a7 + 48) = v10;
  *(void *)(a7 + 56) = v20;
  *(void *)(a7 + 64) = v11;
  *(void *)(a7 + 72) = v19;
  *(void *)(a7 + 80) = v12;
  *(void *)(a7 + 88) = v18;
  *(void *)(a7 + 96) = v13;
  *(unsigned char *)a7 = v14;
  *(void *)(a7 + 8) = 0x4040800000000000;
  *(void *)(a7 + 16) = v15;
  *(unsigned char *)(a7 + 24) = a2;
  *(unsigned char *)(a7 + 25) = 1;
  *(void *)(a7 + 104) = a3;
  *(void *)(a7 + 112) = a4;
  *(void *)(a7 + 120) = a5;
  *(void *)(a7 + 128) = a6;
  swift_retain();

  return swift_retain();
}

uint64_t type metadata accessor for ReportWeatherTipViewFactory()
{
  return self;
}

void *sub_1006AABB0(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100EA0250);
      uint64_t v11 = *(int *)(v10 + 48);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      *((unsigned char *)a1 + *(int *)(v10 + 64)) = *((unsigned char *)a2 + *(int *)(v10 + 64));
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
      }
      uint64_t v8 = type metadata accessor for DetailCondition();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1006AAD34(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    a1 += *(int *)(sub_10017DF08((uint64_t *)&unk_100EA0250) + 48);
    uint64_t v3 = type metadata accessor for WeatherMapOverlayKind();
  }
  else
  {
    if (result) {
      return result;
    }
    uint64_t v3 = type metadata accessor for DetailCondition();
  }
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(a1, v3);
}

void *sub_1006AADD4(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100EA0250);
    uint64_t v9 = *(int *)(v8 + 48);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for WeatherMapOverlayKind();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    *((unsigned char *)a1 + *(int *)(v8 + 64)) = *((unsigned char *)a2 + *(int *)(v8 + 64));
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    uint64_t v7 = type metadata accessor for DetailCondition();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1006AAF14(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1006AC7C8((uint64_t)a1, type metadata accessor for Navigate.Destination);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100EA0250);
      uint64_t v9 = *(int *)(v8 + 48);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
      *((unsigned char *)a1 + *(int *)(v8 + 64)) = *((unsigned char *)a2 + *(int *)(v8 + 64));
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
      }
      uint64_t v7 = type metadata accessor for DetailCondition();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for Navigate.Destination(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E8AE98);
}

void *sub_1006AB098(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100EA0250);
    uint64_t v9 = *(int *)(v8 + 48);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for WeatherMapOverlayKind();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    *((unsigned char *)a1 + *(int *)(v8 + 64)) = *((unsigned char *)a2 + *(int *)(v8 + 64));
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    uint64_t v7 = type metadata accessor for DetailCondition();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1006AB1D8(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1006AC7C8((uint64_t)a1, type metadata accessor for Navigate.Destination);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100EA0250);
      uint64_t v9 = *(int *)(v8 + 48);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
      *((unsigned char *)a1 + *(int *)(v8 + 64)) = *((unsigned char *)a2 + *(int *)(v8 + 64));
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
      }
      uint64_t v7 = type metadata accessor for DetailCondition();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1006AB33C()
{
  uint64_t result = type metadata accessor for DetailCondition();
  if (v1 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8) + 64;
    int v5 = (char *)&value witness table for Builtin.Int64 + 64;
    uint64_t result = type metadata accessor for WeatherMapOverlayKind();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout3();
      uint64_t v6 = &v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_1006AB42C(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = type metadata accessor for Navigate.Destination(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100EA0250);
      uint64_t v12 = *(int *)(v11 + 48);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      *((unsigned char *)a1 + *(int *)(v11 + 64)) = *((unsigned char *)a2 + *(int *)(v11 + 64));
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        goto LABEL_9;
      }
      uint64_t v9 = type metadata accessor for DetailCondition();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    }
    swift_storeEnumTagMultiPayload();
LABEL_9:
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    return a1;
  }
  uint64_t v10 = *a2;
  *a1 = *a2;
  a1 = (void *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t sub_1006AB5DC(uint64_t a1)
{
  type metadata accessor for Navigate.Destination(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    a1 += *(int *)(sub_10017DF08((uint64_t *)&unk_100EA0250) + 48);
    uint64_t v3 = type metadata accessor for WeatherMapOverlayKind();
  }
  else
  {
    if (result) {
      return result;
    }
    uint64_t v3 = type metadata accessor for DetailCondition();
  }
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(a1, v3);
}

void *sub_1006AB68C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Navigate.Destination(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    uint64_t v9 = sub_10017DF08((uint64_t *)&unk_100EA0250);
    uint64_t v10 = *(int *)(v9 + 48);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = type metadata accessor for WeatherMapOverlayKind();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    *((unsigned char *)a1 + *(int *)(v9 + 64)) = *((unsigned char *)a2 + *(int *)(v9 + 64));
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_7;
    }
    uint64_t v8 = type metadata accessor for DetailCondition();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
  }
  swift_storeEnumTagMultiPayload();
LABEL_7:
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_1006AB7EC(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1006AC7C8((uint64_t)a1, type metadata accessor for Navigate.Destination);
    uint64_t v6 = type metadata accessor for Navigate.Destination(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      uint64_t v9 = sub_10017DF08((uint64_t *)&unk_100EA0250);
      uint64_t v10 = *(int *)(v9 + 48);
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      *((unsigned char *)a1 + *(int *)(v9 + 64)) = *((unsigned char *)a2 + *(int *)(v9 + 64));
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        goto LABEL_8;
      }
      uint64_t v8 = type metadata accessor for DetailCondition();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_8:
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_1006AB970(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Navigate.Destination(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    uint64_t v9 = sub_10017DF08((uint64_t *)&unk_100EA0250);
    uint64_t v10 = *(int *)(v9 + 48);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = type metadata accessor for WeatherMapOverlayKind();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    *((unsigned char *)a1 + *(int *)(v9 + 64)) = *((unsigned char *)a2 + *(int *)(v9 + 64));
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_7;
    }
    uint64_t v8 = type metadata accessor for DetailCondition();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
  }
  swift_storeEnumTagMultiPayload();
LABEL_7:
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_1006ABAD0(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1006AC7C8((uint64_t)a1, type metadata accessor for Navigate.Destination);
    uint64_t v6 = type metadata accessor for Navigate.Destination(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      uint64_t v9 = sub_10017DF08((uint64_t *)&unk_100EA0250);
      uint64_t v10 = *(int *)(v9 + 48);
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      *((unsigned char *)a1 + *(int *)(v9 + 64)) = *((unsigned char *)a2 + *(int *)(v9 + 64));
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        goto LABEL_8;
      }
      uint64_t v8 = type metadata accessor for DetailCondition();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_8:
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1006ABC54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006ABC68);
}

uint64_t sub_1006ABC68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Navigate.Destination(0);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  }
  else
  {
    unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 2) {
      return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1006ABD04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006ABD18);
}

void sub_1006ABD18(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Navigate.Destination(0);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
}

uint64_t type metadata accessor for Navigate(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E8AF28);
}

uint64_t sub_1006ABDC0()
{
  uint64_t result = type metadata accessor for Navigate.Destination(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1006ABE54(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  v2[5] = type metadata accessor for Navigate.Destination(0);
  v2[6] = swift_task_alloc();
  v2[7] = type metadata accessor for Navigate(0);
  v2[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[9] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1006ABF4C, v4, v3);
}

uint64_t sub_1006ABF4C()
{
  uint64_t v18 = v0;
  swift_release();
  if (qword_100E62870 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[4];
  uint64_t v3 = type metadata accessor for Logger();
  sub_1002102B0(v3, (uint64_t)qword_100F52058);
  sub_1006AC850(v2, v1, type metadata accessor for Navigate);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[8];
  if (v6)
  {
    uint64_t v8 = v0[6];
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446210;
    sub_1006AC850(v7, v8, type metadata accessor for Navigate.Destination);
    uint64_t v10 = String.init<A>(describing:)();
    v0[2] = sub_10016414C(v10, v11, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1006AC7C8(v7, type metadata accessor for Navigate);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Performing Navigate instruction: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1006AC7C8(v0[8], type metadata accessor for Navigate);
  }

  uint64_t v12 = v0[3];
  uint64_t v13 = v0[4];
  if (*(unsigned char *)(v13 + *(int *)(v0[7] + 20)) == 1)
  {
    uint64_t v14 = swift_task_alloc();
    *(void *)(v14 + 16) = v13;
    *(void *)(v14 + 24) = v12;
    static Animation.default.getter();
    withAnimation<A>(_:_:)();
    swift_release();
    swift_task_dealloc();
  }
  else
  {
    sub_1006AC25C(v0[3]);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_1006AC25C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v30 = *(void *)(v4 - 8);
  uint64_t v31 = v4;
  __chkstk_darwin(v4);
  BOOL v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DetailCondition();
  uint64_t v29 = *(uint64_t (**)(uint64_t))(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MainAction();
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for Navigate.Destination(0);
  __chkstk_darwin(v13);
  uint64_t v15 = (uint64_t *)((char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1006AC850(v2, (uint64_t)v15, type metadata accessor for Navigate.Destination);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v27 = *v15;
      uint64_t v26 = *(uint64_t (**)(uint64_t))(a1 + 16);
      *uint64_t v12 = v27;
      type metadata accessor for PerformanceTestAction();
      goto LABEL_6;
    case 2u:
      uint64_t v28 = *v15;
      uint64_t v19 = sub_10017DF08((uint64_t *)&unk_100EA0250);
      uint64_t v20 = (char *)v15 + *(int *)(v19 + 48);
      char v21 = *((unsigned char *)v15 + *(int *)(v19 + 64));
      uint64_t v23 = v30;
      uint64_t v22 = v31;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v6, v20, v31);
      uint64_t v29 = *(uint64_t (**)(uint64_t))(a1 + 16);
      os_log_type_t v24 = (char *)v12 + *(int *)(v19 + 48);
      uint64_t v25 = *(int *)(v19 + 64);
      *uint64_t v12 = v28;
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v24, v6, v22);
      *((unsigned char *)v12 + v25) = v21;
      type metadata accessor for PerformanceTestAction();
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      uint64_t v34 = 0;
      long long v32 = 0u;
      long long v33 = 0u;
      swift_retain();
      sub_1001AAF58((uint64_t)v12, (uint64_t)&v32, v29);
      sub_100016E7C((uint64_t)&v32);
      sub_1006AC7C8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for MainAction);
      swift_release();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v6, v22);
      break;
    case 3u:
      uint64_t v26 = *(uint64_t (**)(uint64_t))(a1 + 16);
      type metadata accessor for PerformanceTestAction();
LABEL_6:
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      uint64_t v34 = 0;
      long long v32 = 0u;
      long long v33 = 0u;
      swift_retain();
      sub_1001AAF58((uint64_t)v12, (uint64_t)&v32, v26);
      sub_100016E7C((uint64_t)&v32);
      sub_1006AC7C8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for MainAction);
      uint64_t result = swift_release();
      break;
    default:
      uint64_t v16 = v29;
      (*((void (**)(char *, void *, uint64_t))v29 + 4))(v9, v15, v7);
      uint64_t v17 = *(uint64_t (**)(uint64_t))(a1 + 16);
      (*((void (**)(void *, char *, uint64_t))v16 + 2))(v12, v9, v7);
      type metadata accessor for PerformanceTestAction();
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      uint64_t v34 = 0;
      long long v32 = 0u;
      long long v33 = 0u;
      swift_retain();
      sub_1001AAF58((uint64_t)v12, (uint64_t)&v32, v17);
      sub_100016E7C((uint64_t)&v32);
      sub_1006AC7C8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for MainAction);
      swift_release();
      uint64_t result = (*((uint64_t (**)(char *, uint64_t))v16 + 1))(v9, v7);
      break;
  }
  return result;
}

uint64_t sub_1006AC734(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1002205C0;
  return sub_1006ABE54(a1);
}

uint64_t sub_1006AC7C8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1006AC828()
{
  return sub_1006AC25C(*(void *)(v0 + 24));
}

uint64_t sub_1006AC850(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t *sub_1006AC8B8(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v30 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = type metadata accessor for UVIndexComponentViewModel();
    uint64_t v9 = *(int *)(v8 + 28);
    uint64_t v10 = (char *)v4 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for WeatherDescription();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    *(uint64_t *)((char *)v4 + *(int *)(v8 + 32)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 32));
    uint64_t v14 = a3[5];
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = *(void *)v16;
    LOBYTE(v8) = v16[8];
    swift_bridgeObjectRetain();
    sub_100195B7C(v17, v8);
    *(void *)uint64_t v15 = v17;
    v15[8] = v8;
    uint64_t v18 = a3[6];
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = *(void *)v20;
    LOBYTE(v8) = v20[8];
    sub_100195B7C(*(void *)v20, v8);
    *(void *)uint64_t v19 = v21;
    v19[8] = v8;
    uint64_t v22 = a3[7];
    uint64_t v23 = (char *)v4 + v22;
    os_log_type_t v24 = (char *)a2 + v22;
    uint64_t v25 = *(void *)v24;
    LOBYTE(v8) = v24[8];
    sub_100195B7C(*(void *)v24, v8);
    *(void *)uint64_t v23 = v25;
    v23[8] = v8;
    uint64_t v26 = a3[8];
    uint64_t v27 = (uint64_t *)((char *)v4 + v26);
    uint64_t v28 = (uint64_t *)((char *)a2 + v26);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v29 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    }
    else
    {
      void *v27 = *v28;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v31 = a3[9];
    long long v32 = (char *)v4 + v31;
    long long v33 = (char *)a2 + v31;
    uint64_t v34 = sub_10017DF08(&qword_100E7DDF0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  }
  return v4;
}

uint64_t sub_1006ACB28(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(type metadata accessor for UVIndexComponentViewModel() + 28);
  uint64_t v5 = type metadata accessor for WeatherDescription();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  sub_10018F6D8(*(void *)(a1 + a2[5]), *(unsigned char *)(a1 + a2[5] + 8));
  sub_10018F6D8(*(void *)(a1 + a2[6]), *(unsigned char *)(a1 + a2[6] + 8));
  sub_10018F6D8(*(void *)(a1 + a2[7]), *(unsigned char *)(a1 + a2[7] + 8));
  uint64_t v6 = a1 + a2[8];
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = a1 + a2[9];
  uint64_t v9 = sub_10017DF08(&qword_100E7DDF0);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);

  return v10(v8, v9);
}

uint64_t sub_1006ACCAC(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = type metadata accessor for UVIndexComponentViewModel();
  uint64_t v8 = *(int *)(v7 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for WeatherDescription();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  *(void *)(a1 + *(int *)(v7 + 32)) = *(void *)(a2 + *(int *)(v7 + 32));
  uint64_t v13 = a3[5];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)v15;
  LOBYTE(v7) = *(unsigned char *)(v15 + 8);
  swift_bridgeObjectRetain();
  sub_100195B7C(v16, v7);
  *(void *)uint64_t v14 = v16;
  *(unsigned char *)(v14 + 8) = v7;
  uint64_t v17 = a3[6];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void *)v19;
  LOBYTE(v7) = *(unsigned char *)(v19 + 8);
  sub_100195B7C(*(void *)v19, v7);
  *(void *)uint64_t v18 = v20;
  *(unsigned char *)(v18 + 8) = v7;
  uint64_t v21 = a3[7];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = *(void *)v23;
  LOBYTE(v7) = *(unsigned char *)(v23 + 8);
  sub_100195B7C(*(void *)v23, v7);
  *(void *)uint64_t v22 = v24;
  *(unsigned char *)(v22 + 8) = v7;
  uint64_t v25 = a3[8];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v28 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  }
  else
  {
    *uint64_t v26 = *v27;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v29 = a3[9];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  uint64_t v32 = sub_10017DF08(&qword_100E7DDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
  return a1;
}

void *sub_1006ACECC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for UVIndexComponentViewModel();
  uint64_t v7 = *(int *)(v6 + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for WeatherDescription();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(v6 + 32)) = *(void *)((char *)a2 + *(int *)(v6 + 32));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[5];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  LOBYTE(v8) = v13[8];
  sub_100195B7C(*(void *)v13, (char)v8);
  uint64_t v15 = *(void *)v12;
  char v16 = v12[8];
  *(void *)uint64_t v12 = v14;
  v12[8] = (char)v8;
  sub_10018F6D8(v15, v16);
  uint64_t v17 = a3[6];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = *(void *)v19;
  LOBYTE(v8) = v19[8];
  sub_100195B7C(*(void *)v19, (char)v8);
  uint64_t v21 = *(void *)v18;
  char v22 = v18[8];
  *(void *)uint64_t v18 = v20;
  v18[8] = (char)v8;
  sub_10018F6D8(v21, v22);
  uint64_t v23 = a3[7];
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = *(void *)v25;
  LOBYTE(v8) = v25[8];
  sub_100195B7C(*(void *)v25, (char)v8);
  uint64_t v27 = *(void *)v24;
  char v28 = v24[8];
  *(void *)uint64_t v24 = v26;
  v24[8] = (char)v8;
  sub_10018F6D8(v27, v28);
  if (a1 != a2)
  {
    uint64_t v29 = a3[8];
    uint64_t v30 = (void *)((char *)a1 + v29);
    uint64_t v31 = (void *)((char *)a2 + v29);
    sub_100178110((uint64_t)a1 + v29, &qword_100E63BC8);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v32 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
    }
    else
    {
      *uint64_t v30 = *v31;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v33 = a3[9];
  uint64_t v34 = (char *)a1 + v33;
  unint64_t v35 = (char *)a2 + v33;
  uint64_t v36 = sub_10017DF08(&qword_100E7DDF0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 24))(v34, v35, v36);
  return a1;
}

_OWORD *sub_1006AD138(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = type metadata accessor for UVIndexComponentViewModel();
  uint64_t v8 = *(int *)(v7 + 28);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for WeatherDescription();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  *(void *)((char *)a1 + *(int *)(v7 + 32)) = *(void *)((char *)a2 + *(int *)(v7 + 32));
  uint64_t v12 = a3[5];
  uint64_t v13 = a3[6];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  v14[8] = v15[8];
  *(void *)uint64_t v14 = *(void *)v15;
  char v16 = (char *)a1 + v13;
  uint64_t v17 = (char *)a2 + v13;
  v16[8] = v17[8];
  *(void *)char v16 = *(void *)v17;
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = (char *)a1 + v18;
  uint64_t v21 = (char *)a2 + v18;
  *(void *)uint64_t v20 = *(void *)v21;
  v20[8] = v21[8];
  char v22 = (char *)a1 + v19;
  uint64_t v23 = (char *)a2 + v19;
  uint64_t v24 = sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v22, v23, v25);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  uint64_t v26 = a3[9];
  uint64_t v27 = (char *)a1 + v26;
  char v28 = (char *)a2 + v26;
  uint64_t v29 = sub_10017DF08(&qword_100E7DDF0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
  return a1;
}

void *sub_1006AD314(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = type metadata accessor for UVIndexComponentViewModel();
  uint64_t v8 = *(int *)(v7 + 28);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for WeatherDescription();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  *(void *)((char *)a1 + *(int *)(v7 + 32)) = *(void *)((char *)a2 + *(int *)(v7 + 32));
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[5];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = *(void *)v14;
  LOBYTE(v14) = v14[8];
  uint64_t v16 = *(void *)v13;
  char v17 = v13[8];
  *(void *)uint64_t v13 = v15;
  v13[8] = (char)v14;
  sub_10018F6D8(v16, v17);
  uint64_t v18 = a3[6];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = *(void *)v20;
  LOBYTE(v20) = v20[8];
  uint64_t v22 = *(void *)v19;
  char v23 = v19[8];
  *(void *)uint64_t v19 = v21;
  v19[8] = (char)v20;
  sub_10018F6D8(v22, v23);
  uint64_t v24 = a3[7];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = *(void *)v26;
  LOBYTE(v26) = v26[8];
  uint64_t v28 = *(void *)v25;
  char v29 = v25[8];
  *(void *)uint64_t v25 = v27;
  v25[8] = (char)v26;
  sub_10018F6D8(v28, v29);
  if (a1 != a2)
  {
    uint64_t v30 = a3[8];
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    sub_100178110((uint64_t)a1 + v30, &qword_100E63BC8);
    uint64_t v33 = sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v34 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v31, v32, v34);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
  }
  uint64_t v35 = a3[9];
  uint64_t v36 = (char *)a1 + v35;
  os_log_type_t v37 = (char *)a2 + v35;
  uint64_t v38 = sub_10017DF08(&qword_100E7DDF0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  return a1;
}

uint64_t sub_1006AD554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006AD568);
}

uint64_t sub_1006AD568(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for UVIndexComponentViewModel();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    if (a2 == 254)
    {
      unsigned int v10 = *(unsigned __int8 *)(a1 + a3[5] + 8);
      if (v10 > 1) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
    sub_10017DF08((uint64_t *)&unk_100EAA530);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a2)
    {
      uint64_t v8 = v12;
      uint64_t v14 = a3[8];
    }
    else
    {
      uint64_t v8 = sub_10017DF08(&qword_100E7DDF0);
      uint64_t v14 = a3[9];
    }
    uint64_t v9 = a1 + v14;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_1006AD640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006AD654);
}

void sub_1006AD654(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for UVIndexComponentViewModel();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 254)
    {
      *(unsigned char *)(a1 + a4[5] + 8) = -(char)a2;
      return;
    }
    sub_10017DF08((uint64_t *)&unk_100EAA530);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[8];
    }
    else
    {
      uint64_t v10 = sub_10017DF08(&qword_100E7DDF0);
      uint64_t v14 = a4[9];
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t sub_1006AD72C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006AD748@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v32 = a1;
  uint64_t v31 = type metadata accessor for Font.Leading();
  uint64_t v29 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for WeatherDescription();
  uint64_t v28 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ContentSizeCategory();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v27 - v12;
  uint64_t v14 = type metadata accessor for UVIndexComponentView();
  sub_10014E6E8();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for ContentSizeCategory.extraExtraLarge(_:), v7);
  BOOL v15 = sub_1006ADAC0((uint64_t)v13, (uint64_t)v10);
  uint64_t v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v10, v7);
  v16(v13, v7);
  uint64_t v17 = v1 + *(int *)(v14 + 28);
  uint64_t v18 = *(void *)v17;
  LOBYTE(v7) = *(unsigned char *)(v17 + 8);
  sub_100195B7C(*(void *)v17, v7);
  sub_100149AE8();
  char v20 = v19;
  sub_10018F6D8(v18, v7);
  if (!v15)
  {
    if ((v20 & 1) == 0)
    {
      static Font.subheadline.getter();
      goto LABEL_7;
    }
    goto LABEL_5;
  }
  if (v20)
  {
LABEL_5:
    static Font.footnote.getter();
    goto LABEL_7;
  }
  static Font.caption2.getter();
LABEL_7:
  uint64_t v21 = v2 + *(int *)(type metadata accessor for UVIndexComponentViewModel() + 28);
  uint64_t v22 = v28;
  uint64_t v23 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v6, v21, v30);
  uint64_t v24 = v29;
  uint64_t v25 = v31;
  (*(void (**)(char *, void, uint64_t))(v29 + 104))(v4, enum case for Font.Leading.tight(_:), v31);
  Font.leading(_:)();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v25);
  WeatherDescription.formatted(font:color:)();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v6, v23);
}

BOOL sub_1006ADAC0(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = a1;
  uint64_t v3 = type metadata accessor for ContentSizeCategory();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
  v13((char *)&v21 - v11, a2, v3, v10);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t))(v5 + 88);
  int v15 = v14(v12, v3);
  unint64_t v16 = 0;
  int v17 = enum case for ContentSizeCategory.extraSmall(_:);
  if (v15 != enum case for ContentSizeCategory.extraSmall(_:))
  {
    if (v15 == enum case for ContentSizeCategory.small(_:))
    {
      unint64_t v16 = 1;
      goto LABEL_24;
    }
    if (v15 == enum case for ContentSizeCategory.medium(_:))
    {
      unint64_t v16 = 2;
      goto LABEL_24;
    }
    if (v15 == enum case for ContentSizeCategory.large(_:)) {
      goto LABEL_7;
    }
    if (v15 == enum case for ContentSizeCategory.extraLarge(_:))
    {
      unint64_t v16 = 4;
    }
    else if (v15 == enum case for ContentSizeCategory.extraExtraLarge(_:))
    {
      unint64_t v16 = 5;
    }
    else if (v15 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
    {
      unint64_t v16 = 6;
    }
    else if (v15 == enum case for ContentSizeCategory.accessibilityMedium(_:))
    {
      unint64_t v16 = 7;
    }
    else if (v15 == enum case for ContentSizeCategory.accessibilityLarge(_:))
    {
      unint64_t v16 = 8;
    }
    else if (v15 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
    {
      unint64_t v16 = 9;
    }
    else if (v15 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
    {
      unint64_t v16 = 10;
    }
    else
    {
      if (v15 != enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v3);
LABEL_7:
        unint64_t v16 = 3;
        goto LABEL_24;
      }
      unint64_t v16 = 11;
    }
  }
LABEL_24:
  ((void (*)(char *, uint64_t, uint64_t))v13)(v8, v22, v3);
  int v18 = v14(v8, v3);
  if (v18 == v17)
  {
    unint64_t v19 = 0;
  }
  else if (v18 == enum case for ContentSizeCategory.small(_:))
  {
    unint64_t v19 = 1;
  }
  else if (v18 == enum case for ContentSizeCategory.medium(_:))
  {
    unint64_t v19 = 2;
  }
  else
  {
    if (v18 != enum case for ContentSizeCategory.large(_:))
    {
      if (v18 == enum case for ContentSizeCategory.extraLarge(_:))
      {
        unint64_t v19 = 4;
        return v16 < v19;
      }
      if (v18 == enum case for ContentSizeCategory.extraExtraLarge(_:))
      {
        unint64_t v19 = 5;
        return v16 < v19;
      }
      if (v18 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
      {
        unint64_t v19 = 6;
        return v16 < v19;
      }
      if (v18 == enum case for ContentSizeCategory.accessibilityMedium(_:))
      {
        unint64_t v19 = 7;
        return v16 < v19;
      }
      if (v18 == enum case for ContentSizeCategory.accessibilityLarge(_:))
      {
        unint64_t v19 = 8;
        return v16 < v19;
      }
      if (v18 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
      {
        unint64_t v19 = 9;
        return v16 < v19;
      }
      if (v18 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
      {
        unint64_t v19 = 10;
        return v16 < v19;
      }
      if (v18 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        unint64_t v19 = 11;
        return v16 < v19;
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
    }
    unint64_t v19 = 3;
  }
  return v16 < v19;
}

uint64_t sub_1006ADEB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v55 = a1;
  uint64_t v61 = type metadata accessor for AutomationInfo(0);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v62 = v4;
  type metadata accessor for AccessibilityChildBehavior();
  sub_100179C0C();
  uint64_t v60 = v5;
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v56 = v7;
  uint64_t v57 = sub_10017DF08(&qword_100E8B010);
  sub_100162E4C();
  __chkstk_darwin(v8);
  __n128 v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E8B018);
  sub_100179C0C();
  uint64_t v58 = v12;
  uint64_t v59 = v11;
  __chkstk_darwin(v11);
  sub_100109314();
  uint64_t v54 = v13;
  uint64_t v14 = sub_10017DF08(&qword_100E7A070);
  sub_100162E4C();
  __chkstk_darwin(v15);
  int v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  char v20 = (char *)&v52 - v19;
  uint64_t v21 = type metadata accessor for UVIndexComponentView();
  sub_100162E4C();
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v25 = [self wu_systemUsesExuberatedLineHeight];
  sub_1006AF8DC((uint64_t)v2, (uint64_t)v24, (void (*)(void))type metadata accessor for UVIndexComponentView);
  if (v25)
  {
    uint64_t v26 = &v24[*(int *)(v21 + 20)];
    uint64_t v27 = *(void *)v26;
    char v28 = v26[8];
    sub_100195B7C(*(void *)v26, v28);
    sub_1005D1EBC();
    uint64_t v53 = v14;
    char v30 = v29;
    sub_10018F6D8(v27, v28);
    sub_1006AF930((uint64_t)v24, (void (*)(void))type metadata accessor for UVIndexComponentView);
    if (v30) {
      double v31 = 0.0;
    }
    else {
      double v31 = -4.0;
    }
    if (v30) {
      double v32 = 1.0;
    }
    else {
      double v32 = 2.0;
    }
  }
  else
  {
    sub_1006AF930((uint64_t)v24, (void (*)(void))type metadata accessor for UVIndexComponentView);
    double v32 = 2.0;
    double v31 = -4.0;
  }
  *(void *)__n128 v10 = static HorizontalAlignment.leading.getter();
  *((void *)v10 + 1) = 0;
  unsigned char v10[16] = 0;
  uint64_t v33 = sub_10017DF08(&qword_100E8B020);
  sub_1006AE35C(v2, (uint64_t)&v10[*(int *)(v33 + 44)], v31, v32);
  static AccessibilityChildBehavior.ignore.getter();
  unint64_t v34 = sub_1006AF888();
  uint64_t v35 = v57;
  View.accessibilityElement(children:)();
  sub_100162F0C();
  v36();
  sub_100178110((uint64_t)v10, &qword_100E8B010);
  uint64_t v64 = v35;
  unint64_t v65 = v34;
  swift_getOpaqueTypeConformance2();
  View.accessibilityRespondsToUserInteraction(_:)();
  sub_100162F0C();
  v37();
  uint64_t v64 = sub_100B64734();
  unint64_t v65 = v38;
  sub_10014A85C();
  uint64_t v39 = Text.init<A>(_:)();
  uint64_t v41 = v40;
  LOBYTE(v35) = v42 & 1;
  ModifiedContent<>.accessibilityLabel(_:)();
  sub_100191924(v39, v41, v35);
  swift_bridgeObjectRelease();
  sub_100178110((uint64_t)v17, &qword_100E7A070);
  type metadata accessor for AutomationCellInfo(0);
  uint64_t v43 = v62;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_10048D428(v43, v44, v45, v46, v47, v48, v49, v50, v52, v53, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63);
  sub_1006AF930(v43, (void (*)(void))type metadata accessor for AutomationInfo);
  return sub_100178110((uint64_t)v20, &qword_100E7A070);
}

uint64_t sub_1006AE35C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v151 = a2;
  uint64_t v7 = type metadata accessor for AttributedString();
  __chkstk_darwin(v7 - 8);
  uint64_t v122 = (uint64_t)&v122 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UVIndexComponentView();
  __chkstk_darwin(v9);
  uint64_t KeyPath = (uint64_t)&v122 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = type metadata accessor for ContentSizeCategory();
  uint64_t v147 = *(void *)(v148 - 8);
  __chkstk_darwin(v148);
  uint64_t v146 = (char *)&v122 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v145 = (char *)&v122 - v13;
  uint64_t v143 = type metadata accessor for HorizontalBarPointView();
  uint64_t v142 = *(void *)(v143 - 8);
  __chkstk_darwin(v143);
  uint64_t v141 = (char *)&v122 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = sub_10017DF08(&qword_100E7B498);
  __chkstk_darwin(v140);
  uint64_t v156 = (uint64_t *)((char *)&v122 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  uint64_t v144 = (uint64_t)&v122 - v17;
  uint64_t v135 = type metadata accessor for FontWithSmallVariantModifier() - 8;
  __chkstk_darwin(v135);
  uint64_t v134 = (uint64_t *)((char *)&v122 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v131 = type metadata accessor for Font.TextStyle();
  uint64_t v130 = *(void *)(v131 - 8);
  __chkstk_darwin(v131);
  uint64_t v129 = (char *)&v122 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = sub_10017DF08(&qword_100E8B030);
  __chkstk_darwin(v133);
  uint64_t v132 = (char *)&v122 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = sub_10017DF08(&qword_100E7B630);
  uint64_t v158 = *(void *)(v161 - 8);
  __chkstk_darwin(v161);
  uint64_t v160 = (uint64_t *)((char *)&v122 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v22);
  uint64_t v157 = (char *)&v122 - v23;
  uint64_t v155 = type metadata accessor for TypesettingLanguageAwareLineHeightRatio();
  uint64_t v159 = *(void *)(v155 - 8);
  __chkstk_darwin(v155);
  uint64_t v154 = (char *)&v122 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10017DF08(&qword_100E6D330);
  __chkstk_darwin(v25 - 8);
  uint64_t v27 = (uint64_t)&v122 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  char v30 = (char *)&v122 - v29;
  uint64_t v31 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v31 - 8);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v32._uint64_t countAndFlagsBits = 0;
  v32._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v32);
  uint64_t v33 = a1;
  uint64_t v153 = a1;
  uint64_t v162 = *a1;
  LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)();
  v34._uint64_t countAndFlagsBits = 0;
  v34._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v34);
  LocalizedStringKey.init(stringInterpolation:)();
  uint64_t v35 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v138 = v36;
  uint64_t v139 = v37;
  char v39 = v38 & 1;
  uint64_t v40 = static Font.largeTitle.getter();
  uint64_t v41 = static Font.title2.getter();
  uint64_t v150 = v9;
  uint64_t v128 = (char *)v33 + *(int *)(v9 + 28);
  uint64_t v42 = *(void *)v128;
  LOBYTE(v9) = v128[8];
  sub_100195B7C(*(void *)v128, v9);
  sub_100149AE8();
  char v44 = v43;
  sub_10018F6D8(v42, v9);
  uint64_t v45 = enum case for Font.Leading.tight(_:);
  unsigned int v126 = enum case for Font.Leading.tight(_:);
  uint64_t v46 = type metadata accessor for Font.Leading();
  uint64_t v47 = *(void *)(v46 - 8);
  uint64_t v125 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 104);
  uint64_t v127 = v47 + 104;
  char v152 = v30;
  uint64_t v123 = v46;
  v125(v30, v45, v46);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v46);
  sub_10006DF38((uint64_t)v30, v27, &qword_100E6D330);
  swift_retain();
  swift_retain();
  sub_10014A8A8(v40, v41, v44 & 1, v27);
  uint64_t v48 = v138;
  uint64_t v49 = Text.font(_:)();
  uint64_t v51 = v50;
  LOBYTE(v27) = v52;
  uint64_t v124 = v53;
  swift_release();
  swift_release();
  swift_release();
  sub_100191924(v35, v48, v39);
  swift_bridgeObjectRelease();
  sub_100178110((uint64_t)v152, &qword_100E6D330);
  uint64_t v54 = v154;
  static TypesettingLanguageAwareLineHeightRatio.disable.getter();
  uint64_t v138 = Text.typesettingLanguageAwareLineHeightRatio(_:isEnabled:)();
  uint64_t v137 = v55;
  int v136 = v56;
  uint64_t v139 = v57;
  sub_100191924(v49, v51, v27 & 1);
  swift_bridgeObjectRelease();
  uint64_t v58 = *(void (**)(char *, uint64_t))(v159 + 8);
  v159 += 8;
  uint64_t v124 = v58;
  v58(v54, v155);
  uint64_t v59 = v153[3];
  uint64_t v162 = v153[2];
  uint64_t v163 = v59;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v60 = Text.init<A>(_:)();
  uint64_t v62 = v61;
  uint64_t v64 = v63;
  LOBYTE(v51) = v65 & 1;
  uint64_t v66 = v130;
  uint64_t v67 = v129;
  uint64_t v68 = v131;
  (*(void (**)(char *, void, uint64_t))(v130 + 104))(v129, enum case for Font.TextStyle.title3(_:), v131);
  static Font.Weight.semibold.getter();
  uint64_t v69 = static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v68);
  uint64_t v70 = static Font.headline.getter();
  uint64_t v71 = *(void *)v128;
  LOBYTE(v67) = v128[8];
  sub_100195B7C(*(void *)v128, (char)v67);
  sub_100149AE8();
  char v73 = v72;
  sub_10018F6D8(v71, (char)v67);
  uint64_t v74 = (uint64_t)v152;
  uint64_t v75 = v123;
  v125(v152, v126, v123);
  _s7Weather24LocationCompositionStateOwst_0(v74, 0, 1, v75);
  uint64_t v76 = v135;
  uint64_t v77 = v134;
  sub_10006DF38(v74, (uint64_t)v134 + *(int *)(v135 + 32), &qword_100E6D330);
  *uint64_t v77 = v69;
  v77[1] = v70;
  uint64_t v78 = (uint64_t)v153;
  *((unsigned char *)v77 + *(int *)(v76 + 36)) = v73 & 1;
  uint64_t v79 = (uint64_t)v132;
  sub_1006AF8DC((uint64_t)v77, (uint64_t)&v132[*(int *)(v133 + 36)], (void (*)(void))type metadata accessor for FontWithSmallVariantModifier);
  *(void *)uint64_t v79 = v60;
  *(void *)(v79 + 8) = v62;
  *(unsigned char *)(v79 + 16) = v51;
  *(void *)(v79 + 24) = v64;
  *(void *)(v79 + 32) = 0;
  *(double *)(v79 + 40) = a3;
  sub_100190CC4(v60, v62, v51);
  swift_bridgeObjectRetain();
  sub_1006AF930((uint64_t)v77, (void (*)(void))type metadata accessor for FontWithSmallVariantModifier);
  sub_100178110(v74, &qword_100E6D330);
  sub_100191924(v60, v62, v51);
  swift_bridgeObjectRelease();
  char v80 = v154;
  static TypesettingLanguageAwareLineHeightRatio.disable.getter();
  sub_1006AF984();
  uint64_t v81 = v160;
  View.typesettingLanguageAwareLineHeightRatio(_:isEnabled:)();
  v124(v80, v155);
  sub_100178110(v79, &qword_100E8B030);
  (*(void (**)(char *, uint64_t *, uint64_t))(v158 + 32))(v157, v81, v161);
  if (qword_100E62978 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  static Color.white.getter();
  uint64_t v82 = v141;
  HorizontalBarPointView.init(point:pointColor:gradient:)();
  uint64_t v83 = v150;
  sub_10017DF08(&qword_100E7DDF0);
  ScaledValue.wrappedValue.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v84 = v142;
  uint64_t v85 = (uint64_t)v156;
  uint64_t v86 = v143;
  (*(void (**)(uint64_t *, char *, uint64_t))(v142 + 16))(v156, v82, v143);
  uint64_t v87 = (_OWORD *)(v85 + *(int *)(v140 + 36));
  long long v88 = v180;
  *uint64_t v87 = v179;
  v87[1] = v88;
  v87[2] = v181;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v82, v86);
  uint64_t v89 = v144;
  sub_1006AFA30(v85, v144);
  uint64_t v90 = (uint64_t)v145;
  sub_10014E6E8();
  uint64_t v91 = v147;
  uint64_t v92 = (uint64_t)v146;
  uint64_t v93 = v148;
  (*(void (**)(char *, void, uint64_t))(v147 + 104))(v146, enum case for ContentSizeCategory.extraExtraLarge(_:), v148);
  LOBYTE(v86) = sub_1006AF46C(v90, v92);
  uint64_t v94 = *(void (**)(uint64_t, uint64_t))(v91 + 8);
  v94(v92, v93);
  v94(v90, v93);
  uint64_t v95 = KeyPath;
  sub_1006AF8DC(v78, KeyPath, (void (*)(void))type metadata accessor for UVIndexComponentView);
  if (v86)
  {
    sub_1006AF930(v95, (void (*)(void))type metadata accessor for UVIndexComponentView);
  }
  else
  {
    uint64_t v96 = v95 + *(int *)(v83 + 24);
    uint64_t v97 = *(void *)v96;
    char v98 = *(unsigned char *)(v96 + 8);
    sub_100195B7C(*(void *)v96, v98);
    sub_100147CF4();
    char v100 = v99;
    sub_10018F6D8(v97, v98);
    sub_1006AF930(v95, (void (*)(void))type metadata accessor for UVIndexComponentView);
    if (v100)
    {
      uint64_t v159 = 0;
      uint64_t v155 = 0;
      char v152 = 0;
      uint64_t v154 = 0;
      uint64_t KeyPath = 0;
      uint64_t v110 = 0;
      int v109 = 0;
      goto LABEL_8;
    }
  }
  sub_1006AD748(v122);
  uint64_t v159 = Text.init(_:)();
  uint64_t v155 = v101;
  uint64_t v154 = v102;
  char v152 = (char *)(v103 & 1);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v104 = v78 + *(int *)(v83 + 24);
  uint64_t v105 = *(void *)v104;
  char v106 = *(unsigned char *)(v104 + 8);
  sub_100195B7C(*(void *)v104, v106);
  sub_100147CF4();
  int v108 = v107 & 1;
  sub_10018F6D8(v105, v106);
  int v109 = (v108 << 16) ^ 0x10000;
  uint64_t v110 = 3;
LABEL_8:
  char v111 = v136 & 1;
  uint64_t v112 = v138;
  uint64_t v113 = v137;
  uint64_t v174 = v138;
  uint64_t v175 = v137;
  char v176 = v136 & 1;
  uint64_t v177 = v139;
  v178[0] = &v174;
  uint64_t v114 = v158;
  uint64_t v115 = v160;
  uint64_t v116 = v157;
  (*(void (**)(void))(v158 + 16))();
  double v172 = a4;
  char v173 = 0;
  v178[1] = v115;
  v178[2] = (uint64_t *)&v172;
  uint64_t v117 = v156;
  sub_10006DF38(v89, (uint64_t)v156, &qword_100E7B498);
  double v170 = a4;
  char v171 = 0;
  v178[3] = v117;
  v178[4] = (uint64_t *)&v170;
  uint64_t v162 = v159;
  uint64_t v163 = v155;
  uint64_t v164 = (uint64_t)v152;
  uint64_t v165 = v154;
  uint64_t v166 = KeyPath;
  uint64_t v167 = v110;
  char v169 = BYTE2(v109);
  __int16 v168 = v109;
  v178[5] = &v162;
  sub_1004B92FC(v178, v151);
  sub_100190CC4(v112, v113, v111);
  swift_bridgeObjectRetain();
  sub_100178110(v89, &qword_100E7B498);
  uint64_t v118 = *(void (**)(char *, uint64_t))(v114 + 8);
  uint64_t v119 = v116;
  uint64_t v120 = v161;
  v118(v119, v161);
  sub_100191924(v112, v113, v111);
  swift_bridgeObjectRelease();
  sub_1006AFA98(v162, v163, v164, (uint64_t)v165);
  sub_100178110((uint64_t)v117, &qword_100E7B498);
  v118((char *)v160, v120);
  sub_100191924(v174, v175, v176);
  return swift_bridgeObjectRelease();
}

BOOL sub_1006AF46C(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a2;
  uint64_t v3 = type metadata accessor for ContentSizeCategory();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16);
  v11((char *)&v19 - v9, a1, v3, v8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t))(v4 + 88);
  int v13 = v12(v10, v3);
  unint64_t v14 = 0;
  int v15 = enum case for ContentSizeCategory.extraSmall(_:);
  if (v13 != enum case for ContentSizeCategory.extraSmall(_:))
  {
    if (v13 == enum case for ContentSizeCategory.small(_:))
    {
      unint64_t v14 = 1;
      goto LABEL_24;
    }
    if (v13 == enum case for ContentSizeCategory.medium(_:))
    {
      unint64_t v14 = 2;
      goto LABEL_24;
    }
    if (v13 == enum case for ContentSizeCategory.large(_:)) {
      goto LABEL_7;
    }
    if (v13 == enum case for ContentSizeCategory.extraLarge(_:))
    {
      unint64_t v14 = 4;
    }
    else if (v13 == enum case for ContentSizeCategory.extraExtraLarge(_:))
    {
      unint64_t v14 = 5;
    }
    else if (v13 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
    {
      unint64_t v14 = 6;
    }
    else if (v13 == enum case for ContentSizeCategory.accessibilityMedium(_:))
    {
      unint64_t v14 = 7;
    }
    else if (v13 == enum case for ContentSizeCategory.accessibilityLarge(_:))
    {
      unint64_t v14 = 8;
    }
    else if (v13 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
    {
      unint64_t v14 = 9;
    }
    else if (v13 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
    {
      unint64_t v14 = 10;
    }
    else
    {
      if (v13 != enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
LABEL_7:
        unint64_t v14 = 3;
        goto LABEL_24;
      }
      unint64_t v14 = 11;
    }
  }
LABEL_24:
  ((void (*)(char *, uint64_t, uint64_t))v11)(v6, v20, v3);
  int v16 = v12(v6, v3);
  if (v16 == v15)
  {
    unint64_t v17 = 0;
  }
  else if (v16 == enum case for ContentSizeCategory.small(_:))
  {
    unint64_t v17 = 1;
  }
  else if (v16 == enum case for ContentSizeCategory.medium(_:))
  {
    unint64_t v17 = 2;
  }
  else
  {
    if (v16 != enum case for ContentSizeCategory.large(_:))
    {
      if (v16 == enum case for ContentSizeCategory.extraLarge(_:))
      {
        unint64_t v17 = 4;
        return v14 < v17;
      }
      if (v16 == enum case for ContentSizeCategory.extraExtraLarge(_:))
      {
        unint64_t v17 = 5;
        return v14 < v17;
      }
      if (v16 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
      {
        unint64_t v17 = 6;
        return v14 < v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityMedium(_:))
      {
        unint64_t v17 = 7;
        return v14 < v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityLarge(_:))
      {
        unint64_t v17 = 8;
        return v14 < v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
      {
        unint64_t v17 = 9;
        return v14 < v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
      {
        unint64_t v17 = 10;
        return v14 < v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        unint64_t v17 = 11;
        return v14 < v17;
      }
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
    unint64_t v17 = 3;
  }
  return v14 < v17;
}

unint64_t sub_1006AF888()
{
  unint64_t result = qword_100E8B028;
  if (!qword_100E8B028)
  {
    sub_10018C6DC(&qword_100E8B010);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B028);
  }
  return result;
}

uint64_t sub_1006AF8DC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_1006AF930(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

unint64_t sub_1006AF984()
{
  unint64_t result = qword_100E8B038;
  if (!qword_100E8B038)
  {
    sub_10018C6DC(&qword_100E8B030);
    sub_10032D96C();
    sub_1006AFC80(&qword_100E7DF80, (void (*)(uint64_t))type metadata accessor for FontWithSmallVariantModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B038);
  }
  return result;
}

uint64_t sub_1006AFA30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E7B498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006AFA98(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100191924(result, a2, a3 & 1);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1006AFAF4()
{
  unint64_t result = qword_100E8B040;
  if (!qword_100E8B040)
  {
    sub_10018C6DC(&qword_100E7A078);
    sub_1006AFBA0();
    sub_1006AFC80((unint64_t *)&qword_100E66BF8, (void (*)(uint64_t))type metadata accessor for AutomationInfoViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B040);
  }
  return result;
}

unint64_t sub_1006AFBA0()
{
  unint64_t result = qword_100E8B048;
  if (!qword_100E8B048)
  {
    sub_10018C6DC(&qword_100E7A070);
    sub_10018C6DC(&qword_100E8B010);
    sub_1006AF888();
    swift_getOpaqueTypeConformance2();
    sub_1006AFC80((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B048);
  }
  return result;
}

uint64_t sub_1006AFC80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_1006AFCC8(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    __n128 v8 = *a2;
    *(void *)a1 = *a2;
    a1 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = type metadata accessor for CodableError();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_14;
      case 1u:
        *(void *)a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_14;
      case 2u:
        uint64_t v9 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v9;
        swift_bridgeObjectRetain();
        goto LABEL_14;
      case 3u:
      case 6u:
        uint64_t v10 = type metadata accessor for Location();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        goto LABEL_14;
      case 4u:
        uint64_t v11 = type metadata accessor for LocationOfInterest();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        goto LABEL_14;
      case 5u:
        int v13 = *a2;
        uint64_t v12 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v12;
        unint64_t v14 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v14;
        int v15 = a2[5];
        *((void *)a1 + 4) = a2[4];
        *((void *)a1 + 5) = v15;
        *((void *)a1 + 6) = a2[6];
        uint64_t v16 = type metadata accessor for SearchLocation();
        uint64_t v17 = *(int *)(v16 + 32);
        __dst = &a1[v17];
        uint64_t v18 = (char *)a2 + v17;
        uint64_t v19 = type metadata accessor for Location();
        uint64_t v20 = v13;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
        {
          uint64_t v21 = sub_10017DF08(&qword_100E639E8);
          memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(__dst, v18, v19);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v19);
        }
        uint64_t v22 = *(int *)(v16 + 36);
        uint64_t v23 = &a1[v22];
        uint64_t v24 = (char *)a2 + v22;
        *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
        v23[16] = v24[16];
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1006B0060(id *a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = type metadata accessor for CodableError();
      goto LABEL_8;
    case 1:
    case 2:
      return swift_bridgeObjectRelease();
    case 3:
    case 6:
      uint64_t v3 = type metadata accessor for Location();
      goto LABEL_8;
    case 4:
      uint64_t v3 = type metadata accessor for LocationOfInterest();
LABEL_8:
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t v5 = v3;
      uint64_t v6 = (uint64_t)a1;
      goto LABEL_9;
    case 5:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = (uint64_t)a1 + *(int *)(type metadata accessor for SearchLocation() + 32);
      uint64_t v8 = type metadata accessor for Location();
      uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v7, 1, v8);
      if (result) {
        return result;
      }
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
      uint64_t v6 = v7;
      uint64_t v5 = v8;
LABEL_9:
      return v4(v6, v5);
    default:
      return result;
  }
}

void *sub_1006B01D4(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = type metadata accessor for CodableError();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_12;
    case 1u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 2u:
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 3u:
    case 6u:
      uint64_t v8 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      goto LABEL_12;
    case 4u:
      uint64_t v9 = type metadata accessor for LocationOfInterest();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      goto LABEL_12;
    case 5u:
      uint64_t v11 = (void *)*a2;
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v12 = a2[3];
      a1[2] = a2[2];
      a1[3] = v12;
      uint64_t v13 = a2[5];
      a1[4] = a2[4];
      a1[5] = v13;
      a1[6] = a2[6];
      uint64_t v14 = type metadata accessor for SearchLocation();
      uint64_t v15 = *(int *)(v14 + 32);
      __dst = (char *)a1 + v15;
      uint64_t v16 = (char *)a2 + v15;
      uint64_t v17 = type metadata accessor for Location();
      id v18 = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
      {
        uint64_t v19 = sub_10017DF08(&qword_100E639E8);
        memcpy(__dst, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(__dst, v16, v17);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v17);
      }
      uint64_t v20 = *(int *)(v14 + 36);
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
      v21[16] = v22[16];
LABEL_12:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_1006B0528(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1006B5048((uint64_t)a1, (void (*)(void))type metadata accessor for SearchViewAction);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for CodableError();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_13;
      case 1u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 3u:
      case 6u:
        uint64_t v7 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_13;
      case 4u:
        uint64_t v8 = type metadata accessor for LocationOfInterest();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        goto LABEL_13;
      case 5u:
        uint64_t v9 = (void *)*a2;
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        uint64_t v10 = type metadata accessor for SearchLocation();
        uint64_t v11 = *(int *)(v10 + 32);
        __dst = (char *)a1 + v11;
        uint64_t v12 = (char *)a2 + v11;
        uint64_t v13 = type metadata accessor for Location();
        id v14 = v9;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
        {
          uint64_t v15 = sub_10017DF08(&qword_100E639E8);
          memcpy(__dst, v12, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(__dst, v12, v13);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v13);
        }
        uint64_t v16 = *(int *)(v10 + 36);
        uint64_t v17 = (char *)a1 + v16;
        id v18 = (char *)a2 + v16;
        long long v19 = *(_OWORD *)v18;
        v17[16] = v18[16];
        *(_OWORD *)uint64_t v17 = v19;
LABEL_13:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *sub_1006B08C0(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = type metadata accessor for CodableError();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_10;
    case 3u:
    case 6u:
      uint64_t v7 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      goto LABEL_10;
    case 4u:
      uint64_t v8 = type metadata accessor for LocationOfInterest();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      goto LABEL_10;
    case 5u:
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      uint64_t v9 = type metadata accessor for SearchLocation();
      uint64_t v10 = *(int *)(v9 + 32);
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      uint64_t v13 = type metadata accessor for Location();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
      {
        uint64_t v14 = sub_10017DF08(&qword_100E639E8);
        memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
      }
      uint64_t v15 = *(int *)(v9 + 36);
      uint64_t v16 = &a1[v15];
      uint64_t v17 = &a2[v15];
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      v16[16] = v17[16];
LABEL_10:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_1006B0BA8(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1006B5048((uint64_t)a1, (void (*)(void))type metadata accessor for SearchViewAction);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for CodableError();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        goto LABEL_11;
      case 3u:
      case 6u:
        uint64_t v7 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        goto LABEL_11;
      case 4u:
        uint64_t v8 = type metadata accessor for LocationOfInterest();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
        goto LABEL_11;
      case 5u:
        *(void *)a1 = *(void *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        uint64_t v9 = type metadata accessor for SearchLocation();
        uint64_t v10 = *(int *)(v9 + 32);
        uint64_t v11 = &a1[v10];
        uint64_t v12 = &a2[v10];
        uint64_t v13 = type metadata accessor for Location();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
        {
          uint64_t v14 = sub_10017DF08(&qword_100E639E8);
          memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
        }
        uint64_t v15 = *(int *)(v9 + 36);
        uint64_t v16 = &a1[v15];
        uint64_t v17 = &a2[v15];
        *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
        v16[16] = v17[16];
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1006B0EB4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x5164657261656C63 && a2 == 0xEC00000079726575;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6465766965636572 && a2 == 0xED0000726F727245;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6465766965636572 && a2 == 0xEF73746C75736552;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6465686372616573 && a2 == 0xE800000000000000;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6944646570706174 && a2 == 0xED0000776569566DLL;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x6F4C646570706174 && a2 == 0xEE006E6F69746163;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0xD000000000000018 && a2 == 0x8000000100CAE620 {
                   || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            }
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else if (a1 == 0xD000000000000014 && a2 == 0x8000000100CAE640 {
                   || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            }
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else
            {
              BOOL v11 = a1 == 0x65536C65636E6163 && a2 == 0xEC00000068637261;
              if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 8;
              }
              else if (a1 == 0xD000000000000011 && a2 == 0x8000000100C959E0 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 9;
              }
              else if (a1 == 0xD000000000000010 && a2 == 0x8000000100CAE600 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 10;
              }
              else if (a1 == 0xD000000000000012 && a2 == 0x8000000100CAE5E0 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 11;
              }
              else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000100CAE5C0 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 12;
              }
              else if (a1 == 0xD000000000000011 && a2 == 0x8000000100CAE5A0 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 13;
              }
              else if (a1 == 0xD000000000000015 && a2 == 0x8000000100CAE580 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 14;
              }
              else if (a1 == 0xD000000000000016 && a2 == 0x8000000100CAE560 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 15;
              }
              else if (a1 == 0xD000000000000010 && a2 == 0x8000000100CAE540)
              {
                swift_bridgeObjectRelease();
                return 16;
              }
              else
              {
                char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v12) {
                  return 16;
                }
                else {
                  return 17;
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1006B15A8()
{
  return 17;
}

uint64_t sub_1006B15B0(char a1)
{
  uint64_t result = 0x5164657261656C63;
  switch(a1)
  {
    case 1:
    case 2:
      uint64_t v3 = 0x766965636572;
      goto LABEL_4;
    case 3:
      uint64_t v3 = 0x686372616573;
LABEL_4:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6465000000000000;
      break;
    case 4:
      uint64_t result = 0x6944646570706174;
      break;
    case 5:
      uint64_t result = 0x6F4C646570706174;
      break;
    case 6:
      uint64_t result = 0xD000000000000018;
      break;
    case 7:
      uint64_t result = 0xD000000000000014;
      break;
    case 8:
      uint64_t result = 0x65536C65636E6163;
      break;
    case 9:
      uint64_t result = 0xD000000000000011;
      break;
    case 10:
    case 16:
      uint64_t result = 0xD000000000000010;
      break;
    case 11:
      uint64_t result = 0xD000000000000012;
      break;
    case 12:
      uint64_t result = 0xD00000000000001DLL;
      break;
    case 13:
      uint64_t result = 0xD000000000000011;
      break;
    case 14:
      uint64_t result = 0xD000000000000015;
      break;
    case 15:
      uint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1006B17E4(uint64_t a1)
{
  unint64_t v2 = sub_1006B53A8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006B1820(uint64_t a1)
{
  unint64_t v2 = sub_1006B53A8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006B185C(uint64_t a1)
{
  unint64_t v2 = sub_1006B522C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006B1898(uint64_t a1)
{
  unint64_t v2 = sub_1006B522C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006B18D4(uint64_t a1)
{
  unint64_t v2 = sub_1006B5194();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006B1910(uint64_t a1)
{
  unint64_t v2 = sub_1006B5194();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006B194C(uint64_t a1)
{
  unint64_t v2 = sub_1006B5608();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006B1988(uint64_t a1)
{
  unint64_t v2 = sub_1006B5608();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006B19C4()
{
  return sub_1006B15B0(*v0);
}

uint64_t sub_1006B19CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1006B0EB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1006B19F4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1006B15A8();
  *a1 = result;
  return result;
}

uint64_t sub_1006B1A1C(uint64_t a1)
{
  unint64_t v2 = sub_1006B509C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006B1A58(uint64_t a1)
{
  unint64_t v2 = sub_1006B509C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006B1A94(uint64_t a1)
{
  unint64_t v2 = sub_1006B50E8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006B1AD0(uint64_t a1)
{
  unint64_t v2 = sub_1006B50E8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006B1B0C(uint64_t a1)
{
  unint64_t v2 = sub_1006B5310();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006B1B48(uint64_t a1)
{
  unint64_t v2 = sub_1006B5310();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006B1B84(uint64_t a1)
{
  unint64_t v2 = sub_1006B535C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006B1BC0(uint64_t a1)
{
  unint64_t v2 = sub_1006B535C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006B1BFC(uint64_t a1)
{
  unint64_t v2 = sub_1006B55BC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006B1C38(uint64_t a1)
{
  unint64_t v2 = sub_1006B55BC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006B1C74(uint64_t a1)
{
  unint64_t v2 = sub_1006B5570();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006B1CB0(uint64_t a1)
{
  unint64_t v2 = sub_1006B5570();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006B1CEC(uint64_t a1)
{
  unint64_t v2 = sub_1006B5278();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006B1D28(uint64_t a1)
{
  unint64_t v2 = sub_1006B5278();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006B1D64(uint64_t a1)
{
  unint64_t v2 = sub_1006B51E0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006B1DA0(uint64_t a1)
{
  unint64_t v2 = sub_1006B51E0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006B1DDC(uint64_t a1)
{
  unint64_t v2 = sub_1006B5524();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006B1E18(uint64_t a1)
{
  unint64_t v2 = sub_1006B5524();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006B1E54(uint64_t a1)
{
  unint64_t v2 = sub_1006B54D8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006B1E90(uint64_t a1)
{
  unint64_t v2 = sub_1006B54D8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006B1ECC(uint64_t a1)
{
  unint64_t v2 = sub_1006B548C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006B1F08(uint64_t a1)
{
  unint64_t v2 = sub_1006B548C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006B1F44(uint64_t a1)
{
  unint64_t v2 = sub_1006B5440();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006B1F80(uint64_t a1)
{
  unint64_t v2 = sub_1006B5440();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006B1FBC(uint64_t a1)
{
  unint64_t v2 = sub_1006B53F4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006B1FF8(uint64_t a1)
{
  unint64_t v2 = sub_1006B53F4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006B2034(uint64_t a1)
{
  unint64_t v2 = sub_1006B52C4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006B2070(uint64_t a1)
{
  unint64_t v2 = sub_1006B52C4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006B20AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v4 = v1;
  type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v49 = v6;
  unint64_t v50 = v5;
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v48 = v7;
  type metadata accessor for LocationOfInterest();
  sub_100179C0C();
  unint64_t v46 = v8;
  uint64_t v47 = v9;
  __chkstk_darwin(v8);
  sub_100162F18();
  uint64_t v10 = type metadata accessor for SearchLocation();
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_10008B8C0();
  uint64_t v12 = type metadata accessor for CodableError();
  sub_100179C0C();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_1001626E0();
  uint64_t v18 = v17 - v16;
  type metadata accessor for SearchViewAction();
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_1001626E0();
  uint64_t v22 = (uint64_t *)(v21 - v20);
  sub_10017DF08(&qword_100E8B100);
  sub_100179C0C();
  uint64_t v51 = v24;
  uint64_t v52 = v23;
  __chkstk_darwin(v23);
  sub_100109314();
  sub_1006B4FE8(v4, (uint64_t)v22, (void (*)(void))type metadata accessor for SearchViewAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v29 = *v22;
      sub_10017DF08(&qword_100E635E0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100C251B0;
      *(void *)(inited + 32) = 0x73746C75736572;
      *(void *)(inited + 40) = 0xE700000000000000;
      *(void *)(inited + 72) = sub_10017DF08(&qword_100E662D0);
      *(void *)(inited + 48) = v29;
      Dictionary.init(dictionaryLiteral:)();
      sub_1001854FC();
      goto LABEL_19;
    case 2u:
      swift_bridgeObjectRelease();
      Dictionary.init(dictionaryLiteral:)();
      sub_100162AF0();
      goto LABEL_19;
    case 3u:
      Dictionary.init(dictionaryLiteral:)();
      sub_1001A2DB4();
      ShortDescription.init(name:_:)();
      uint64_t v31 = type metadata accessor for SearchViewAction;
      uint64_t v32 = (uint64_t)v22;
      goto LABEL_8;
    case 4u:
      sub_10019DF04();
      sub_1001627D4();
      v33();
      sub_10017DF08(&qword_100E635E0);
      Swift::String v34 = (__n128 *)swift_initStackObject();
      uint64_t v35 = sub_1001844C4(v34, (__n128)xmmword_100C251B0);
      v34[2].n128_u64[0] = 0xD000000000000012;
      v34[2].n128_u64[1] = 0x8000000100C960A0;
      v34[4].n128_u64[1] = v46;
      uint64_t v36 = sub_100170694((uint64_t *)v35);
      (*(void (**)(uint64_t *, uint64_t, unint64_t))(v47 + 16))(v36, v2, v46);
      Dictionary.init(dictionaryLiteral:)();
      sub_100188AE4();
      (*(void (**)(uint64_t, unint64_t))(v47 + 8))(v2, v46);
      break;
    case 5u:
      sub_1006B5134((uint64_t)v22, v3, (void (*)(void))type metadata accessor for SearchLocation);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v37 = (__n128 *)swift_initStackObject();
      char v38 = sub_1001844C4(v37, (__n128)xmmword_100C251B0);
      strcpy((char *)&v37[2], "searchLocation");
      v37[2].n128_u8[15] = -18;
      v37[4].n128_u64[1] = v10;
      char v39 = sub_100170694((uint64_t *)v38);
      sub_1006B4FE8(v3, (uint64_t)v39, (void (*)(void))type metadata accessor for SearchLocation);
      Dictionary.init(dictionaryLiteral:)();
      sub_100181F94();
      sub_100188AE4();
      uint64_t v32 = v3;
      uint64_t v31 = type metadata accessor for SearchLocation;
LABEL_8:
      sub_1006B5048(v32, (void (*)(void))v31);
      break;
    case 6u:
      sub_10019DF04();
      sub_1001627D4();
      v40();
      sub_10017DF08(&qword_100E635E0);
      uint64_t v41 = (__n128 *)swift_initStackObject();
      uint64_t v42 = sub_1001844C4(v41, (__n128)xmmword_100C251B0);
      v41[2].n128_u64[0] = 0x6E6F697461636F6CLL;
      v41[2].n128_u64[1] = 0xE800000000000000;
      v41[4].n128_u64[1] = v50;
      char v43 = sub_100170694((uint64_t *)v42);
      (*(void (**)(uint64_t *, uint64_t, unint64_t))(v49 + 16))(v43, v48, v50);
      Dictionary.init(dictionaryLiteral:)();
      sub_100182B20();
      ShortDescription.init(name:_:)();
      (*(void (**)(uint64_t, unint64_t))(v49 + 8))(v48, v50);
      break;
    case 7u:
    case 9u:
      Dictionary.init(dictionaryLiteral:)();
      sub_100162AF0();
      goto LABEL_19;
    case 8u:
      Dictionary.init(dictionaryLiteral:)();
      sub_1001A2DB4();
      goto LABEL_19;
    case 0xAu:
    case 0xEu:
      Dictionary.init(dictionaryLiteral:)();
      sub_10018B0F0();
      goto LABEL_18;
    case 0xBu:
    case 0x10u:
      Dictionary.init(dictionaryLiteral:)();
      goto LABEL_18;
    case 0xCu:
    case 0xFu:
      Dictionary.init(dictionaryLiteral:)();
      sub_100181F94();
      goto LABEL_18;
    case 0xDu:
      Dictionary.init(dictionaryLiteral:)();
LABEL_18:
      sub_100182B20();
LABEL_19:
      ShortDescription.init(name:_:)();
      break;
    default:
      sub_1001627D4();
      v25();
      sub_10017DF08(&qword_100E635E0);
      uint64_t v26 = (__n128 *)swift_initStackObject();
      uint64_t v27 = sub_1001844C4(v26, (__n128)xmmword_100C251B0);
      v26[2].n128_u64[0] = 0x726F727265;
      v26[2].n128_u64[1] = 0xE500000000000000;
      v26[4].n128_u64[1] = v12;
      uint64_t v28 = sub_100170694((uint64_t *)v27);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v14 + 16))(v28, v18, v12);
      Dictionary.init(dictionaryLiteral:)();
      sub_1001854FC();
      ShortDescription.init(name:_:)();
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v18, v12);
      break;
  }
  a1[3] = v52;
  a1[4] = sub_1006B4F94();
  char v44 = sub_100170694(a1);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v51 + 32))(v44, v10, v52);
}

uint64_t sub_1006B2A8C(void *a1)
{
  sub_10017DF08(&qword_100E8B240);
  sub_100179C0C();
  uint64_t v150 = v5;
  uint64_t v151 = v4;
  __chkstk_darwin(v4);
  sub_100189F04(v6, v109[0]);
  uint64_t v146 = sub_10017DF08(&qword_100E8B248);
  sub_100179C0C();
  uint64_t v145 = v7;
  __chkstk_darwin(v8);
  sub_10011BA64(v9, v109[0]);
  sub_10017DF08(&qword_100E8B250);
  sub_100179C0C();
  uint64_t v148 = v11;
  uint64_t v149 = v10;
  __chkstk_darwin(v10);
  sub_100163F64(v12, v109[0]);
  sub_10017DF08(&qword_100E8B258);
  sub_100179C0C();
  uint64_t v142 = v14;
  uint64_t v143 = v13;
  __chkstk_darwin(v13);
  sub_1001629A4(v15, v109[0]);
  sub_10017DF08(&qword_100E8B260);
  sub_100179C0C();
  uint64_t v139 = v17;
  uint64_t v140 = v16;
  __chkstk_darwin(v16);
  sub_100109338((uint64_t)v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v137 = sub_10017DF08(&qword_100E8B268);
  sub_100179C0C();
  uint64_t v136 = v19;
  __chkstk_darwin(v20);
  sub_100109338((uint64_t)v109 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v135 = sub_10017DF08(&qword_100E8B270);
  sub_100179C0C();
  uint64_t v134 = v22;
  __chkstk_darwin(v23);
  sub_100109314();
  sub_100109338(v24);
  uint64_t v133 = sub_10017DF08(&qword_100E8B278);
  sub_100179C0C();
  uint64_t v132 = v25;
  __chkstk_darwin(v26);
  sub_100109314();
  sub_100109338(v27);
  uint64_t v129 = sub_10017DF08(&qword_100E8B280);
  sub_100179C0C();
  uint64_t v128 = v28;
  __chkstk_darwin(v29);
  sub_100109314();
  sub_100109338(v30);
  uint64_t v131 = sub_10017DF08(&qword_100E8B288);
  sub_100179C0C();
  uint64_t v130 = v31;
  __chkstk_darwin(v32);
  sub_100109314();
  sub_100109328(v33);
  uint64_t v125 = type metadata accessor for SearchLocation();
  sub_100162E4C();
  __chkstk_darwin(v34);
  sub_100109314();
  sub_100109338(v35);
  uint64_t v126 = sub_10017DF08(&qword_100E8B290);
  sub_100179C0C();
  uint64_t v124 = v36;
  __chkstk_darwin(v37);
  sub_100109314();
  sub_100109328(v38);
  uint64_t v123 = type metadata accessor for LocationOfInterest();
  sub_100179C0C();
  uint64_t v122 = v39;
  __chkstk_darwin(v40);
  sub_100109314();
  sub_100109338(v41);
  uint64_t v121 = sub_10017DF08(&qword_100E8B298);
  sub_100179C0C();
  uint64_t v120 = v42;
  __chkstk_darwin(v43);
  sub_100109314();
  sub_100109328(v44);
  type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v152 = v46;
  uint64_t v153 = v45;
  __chkstk_darwin(v45);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v47);
  sub_100109338((uint64_t)v109 - v48);
  uint64_t v119 = sub_10017DF08(&qword_100E8B2A0);
  sub_100179C0C();
  uint64_t v118 = v49;
  __chkstk_darwin(v50);
  sub_100109314();
  sub_100109338(v51);
  uint64_t v117 = sub_10017DF08(&qword_100E8B2A8);
  sub_100179C0C();
  uint64_t v116 = v52;
  __chkstk_darwin(v53);
  sub_100109314();
  sub_100109338(v54);
  uint64_t v115 = sub_10017DF08(&qword_100E8B2B0);
  sub_100179C0C();
  uint64_t v114 = v55;
  __chkstk_darwin(v56);
  sub_100109314();
  sub_100109338(v57);
  uint64_t v113 = sub_10017DF08(&qword_100E8B2B8);
  sub_100179C0C();
  uint64_t v112 = v58;
  __chkstk_darwin(v59);
  sub_100109314();
  sub_100109328(v60);
  uint64_t v111 = type metadata accessor for CodableError();
  sub_100179C0C();
  uint64_t v110 = v61;
  __chkstk_darwin(v62);
  sub_10008B8C0();
  uint64_t v63 = sub_10017DF08(&qword_100E8B2C0);
  sub_100179C0C();
  v109[0] = v64;
  __chkstk_darwin(v65);
  sub_1001626E0();
  type metadata accessor for SearchViewAction();
  sub_100162E4C();
  __chkstk_darwin(v66);
  sub_1001626E0();
  uint64_t v69 = (void *)(v68 - v67);
  sub_10017DF08(&qword_100E8B2C8);
  sub_100179C0C();
  uint64_t v155 = v70;
  uint64_t v156 = v71;
  __chkstk_darwin(v70);
  sub_100162F18();
  uint64_t v72 = a1[3];
  sub_1001B1E64(a1, v72);
  sub_1006B509C();
  uint64_t v154 = v1;
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_1006B4FE8(v157[1], (uint64_t)v69, (void (*)(void))type metadata accessor for SearchViewAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v77 = *v69;
      LOBYTE(v158) = 2;
      sub_1006B5570();
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v158 = v77;
      sub_10017DF08(&qword_100E662D0);
      sub_1006B5654(&qword_100E709E8, &qword_100E709F0);
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      sub_1001831B0();
      sub_100162F0C();
      v78();
      sub_10017F0E8();
      sub_100162F0C();
      v79();
      return swift_bridgeObjectRelease();
    case 2u:
      LOBYTE(v158) = 3;
      sub_1006B5524();
      uint64_t v82 = v154;
      uint64_t v81 = v155;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      KeyedEncodingContainer.encode(_:forKey:)();
      swift_bridgeObjectRelease();
      sub_1001831B0();
      sub_100162F0C();
      v83();
      sub_10017F0E8();
      uint64_t v85 = v82;
      uint64_t v86 = v81;
      goto LABEL_11;
    case 3u:
      uint64_t v88 = v152;
      uint64_t v87 = v153;
      sub_1001651BC();
      sub_1001627D4();
      v89();
      LOBYTE(v158) = 5;
      sub_1006B548C();
      sub_10019FF48();
      sub_1006B56E8(&qword_100E6F9F8, (void (*)(uint64_t))&type metadata accessor for Location);
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      sub_100162F0C();
      v90();
      (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v1, v87);
      goto LABEL_10;
    case 4u:
      uint64_t v91 = v122;
      sub_10019DF04();
      sub_1001651BC();
      uint64_t v92 = v123;
      sub_1001627D4();
      v93();
      LOBYTE(v158) = 6;
      sub_1006B5440();
      sub_10019FF48();
      sub_1006B56E8(&qword_100E8B2D0, (void (*)(uint64_t))&type metadata accessor for LocationOfInterest);
      sub_10017F520();
      sub_100162F0C();
      v94();
      (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v1, v92);
      goto LABEL_10;
    case 5u:
      uint64_t v95 = v127;
      sub_1006B5134((uint64_t)v69, v127, (void (*)(void))type metadata accessor for SearchLocation);
      LOBYTE(v158) = 7;
      sub_1006B53F4();
      sub_10019FF48();
      sub_1006B56E8(&qword_100E709F0, (void (*)(uint64_t))type metadata accessor for SearchLocation);
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      sub_100162F0C();
      v96();
      sub_1006B5048(v95, (void (*)(void))type metadata accessor for SearchLocation);
      goto LABEL_10;
    case 6u:
      uint64_t v98 = v152;
      uint64_t v97 = v153;
      sub_1001651BC();
      sub_1001627D4();
      v99();
      LOBYTE(v158) = 14;
      sub_1006B51E0();
      sub_10019FF48();
      sub_1006B56E8(&qword_100E6F9F8, (void (*)(uint64_t))&type metadata accessor for Location);
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      sub_100162F0C();
      v100();
      (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v1, v97);
      goto LABEL_10;
    case 7u:
      LOBYTE(v158) = 0;
      sub_1006B5608();
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v101 = sub_1001831B0();
      uint64_t v103 = v63;
      goto LABEL_24;
    case 8u:
      LOBYTE(v158) = 4;
      sub_1006B54D8();
      sub_10017E57C();
      uint64_t v101 = sub_10018138C();
      uint64_t v104 = &v141;
      goto LABEL_18;
    case 9u:
      LOBYTE(v158) = 8;
      sub_1006B53A8();
      sub_10017E57C();
      uint64_t v101 = sub_10018138C();
      uint64_t v104 = v157;
      goto LABEL_18;
    case 0xAu:
      LOBYTE(v158) = 9;
      sub_1006B535C();
      sub_10017E57C();
      uint64_t v101 = sub_10018138C();
      uint64_t v104 = &v159;
      goto LABEL_18;
    case 0xBu:
      LOBYTE(v158) = 10;
      sub_1006B5310();
      sub_10017E57C();
      uint64_t v101 = sub_10018138C();
      uint64_t v104 = &v160;
      goto LABEL_18;
    case 0xCu:
      LOBYTE(v158) = 11;
      sub_1006B52C4();
      sub_10017E57C();
      uint64_t v101 = sub_10018138C();
      uint64_t v104 = &v161;
LABEL_18:
      uint64_t v103 = *(v104 - 32);
      goto LABEL_24;
    case 0xDu:
      LOBYTE(v158) = 12;
      sub_1006B5278();
      uint64_t v105 = v138;
      sub_10017E57C();
      uint64_t v106 = v139;
      uint64_t v103 = v140;
      goto LABEL_23;
    case 0xEu:
      LOBYTE(v158) = 13;
      sub_1006B522C();
      uint64_t v105 = v141;
      sub_10017E57C();
      uint64_t v106 = v142;
      uint64_t v103 = v143;
      goto LABEL_23;
    case 0xFu:
      LOBYTE(v158) = 15;
      sub_1006B5194();
      uint64_t v107 = v144;
      sub_10017E57C();
      (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v107, v146);
      goto LABEL_25;
    case 0x10u:
      LOBYTE(v158) = 16;
      sub_1006B50E8();
      uint64_t v105 = v147;
      sub_10017E57C();
      uint64_t v106 = v150;
      uint64_t v103 = v151;
LABEL_23:
      uint64_t v102 = *(void (**)(uint64_t, uint64_t))(v106 + 8);
      uint64_t v101 = v105;
LABEL_24:
      v102(v101, v103);
LABEL_25:
      sub_10017F0E8();
      sub_100162F0C();
      uint64_t result = v108();
      break;
    default:
      uint64_t v73 = v110;
      sub_10019DF04();
      uint64_t v74 = v111;
      sub_1001627D4();
      v75();
      LOBYTE(v158) = 1;
      sub_1006B55BC();
      sub_10019FF48();
      sub_1006B56E8(&qword_100E709F8, (void (*)(uint64_t))&type metadata accessor for CodableError);
      sub_10017F520();
      sub_100162F0C();
      v76();
      (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v2, v74);
LABEL_10:
      sub_10017F0E8();
      uint64_t v85 = v72;
      uint64_t v86 = v69;
LABEL_11:
      uint64_t result = v84(v85, v86);
      break;
  }
  return result;
}

uint64_t sub_1006B3AB4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v201 = a2;
  sub_10017DF08(&qword_100E8B118);
  sub_100179C0C();
  uint64_t v203 = v4;
  uint64_t v204 = v3;
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v200 = v5;
  uint64_t v191 = sub_10017DF08(&qword_100E8B120);
  sub_100179C0C();
  uint64_t v190 = v6;
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v199 = v8;
  uint64_t v192 = sub_10017DF08(&qword_100E8B128);
  sub_100179C0C();
  uint64_t v202 = v9;
  __chkstk_darwin(v10);
  sub_100189F04(v11, v157);
  uint64_t v189 = sub_10017DF08(&qword_100E8B130);
  sub_100179C0C();
  uint64_t v188 = v12;
  __chkstk_darwin(v13);
  sub_100163F64(v14, v157);
  uint64_t v187 = sub_10017DF08(&qword_100E8B138);
  sub_100179C0C();
  uint64_t v186 = v15;
  __chkstk_darwin(v16);
  sub_100109314();
  uint64_t v198 = v17;
  uint64_t v185 = sub_10017DF08(&qword_100E8B140);
  sub_100179C0C();
  uint64_t v184 = v18;
  __chkstk_darwin(v19);
  sub_10011BA64(v20, v157);
  uint64_t v183 = sub_10017DF08(&qword_100E8B148);
  sub_100179C0C();
  uint64_t v182 = v21;
  __chkstk_darwin(v22);
  sub_100109314();
  uint64_t v197 = v23;
  uint64_t v181 = sub_10017DF08(&qword_100E8B150);
  sub_100179C0C();
  uint64_t v180 = v24;
  __chkstk_darwin(v25);
  sub_100109314();
  uint64_t v196 = v26;
  uint64_t v178 = sub_10017DF08(&qword_100E8B158);
  sub_100179C0C();
  uint64_t v177 = v27;
  __chkstk_darwin(v28);
  sub_1001629A4(v29, v157);
  uint64_t v179 = sub_10017DF08(&qword_100E8B160);
  sub_100179C0C();
  uint64_t v167 = v30;
  __chkstk_darwin(v31);
  sub_100109314();
  uint64_t v208 = v32;
  uint64_t v176 = sub_10017DF08(&qword_100E8B168);
  sub_100179C0C();
  uint64_t v162 = v33;
  __chkstk_darwin(v34);
  sub_100109314();
  uint64_t v195 = v35;
  uint64_t v175 = sub_10017DF08(&qword_100E8B170);
  sub_100179C0C();
  uint64_t v166 = v36;
  __chkstk_darwin(v37);
  sub_100109314();
  uint64_t v194 = v38;
  uint64_t v173 = sub_10017DF08(&qword_100E8B178);
  sub_100179C0C();
  uint64_t v171 = v39;
  __chkstk_darwin(v40);
  sub_100109338((uint64_t)&v157 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v174 = sub_10017DF08(&qword_100E8B180);
  sub_100179C0C();
  uint64_t v165 = v42;
  __chkstk_darwin(v43);
  sub_100109314();
  sub_100109338(v44);
  uint64_t v172 = sub_10017DF08(&qword_100E8B188);
  sub_100179C0C();
  uint64_t v164 = v45;
  __chkstk_darwin(v46);
  sub_100109314();
  sub_100109338(v47);
  uint64_t v170 = sub_10017DF08(&qword_100E8B190);
  sub_100179C0C();
  uint64_t v163 = v48;
  __chkstk_darwin(v49);
  sub_100109338((uint64_t)&v157 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v169 = sub_10017DF08(&qword_100E8B198);
  sub_100179C0C();
  uint64_t v168 = v51;
  __chkstk_darwin(v52);
  sub_100109314();
  sub_100109338(v53);
  sub_10017DF08(&qword_100E8B1A0);
  sub_100179C0C();
  uint64_t v206 = v55;
  uint64_t v207 = v54;
  __chkstk_darwin(v54);
  sub_1001626E0();
  uint64_t v58 = v57 - v56;
  uint64_t v205 = type metadata accessor for SearchViewAction();
  sub_100162E4C();
  __chkstk_darwin(v59);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v60);
  sub_100179C90();
  __chkstk_darwin(v61);
  sub_100179C90();
  __chkstk_darwin(v62);
  uint64_t v64 = (char *)&v157 - v63;
  __chkstk_darwin(v65);
  uint64_t v67 = (uint64_t *)((char *)&v157 - v66);
  __chkstk_darwin(v68);
  uint64_t v70 = (char *)&v157 - v69;
  __chkstk_darwin(v71);
  uint64_t v73 = (char *)&v157 - v72;
  __chkstk_darwin(v74);
  uint64_t v76 = (char *)&v157 - v75;
  uint64_t v77 = a1[3];
  uint64_t v209 = a1;
  sub_1001B1E64(a1, v77);
  sub_1006B509C();
  uint64_t v78 = (uint64_t)v210;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v78) {
    goto LABEL_24;
  }
  uint64_t v158 = v67;
  uint64_t v160 = v73;
  uint64_t v159 = v70;
  uint64_t v161 = v64;
  uint64_t v80 = v207;
  uint64_t v79 = v208;
  uint64_t v210 = v76;
  uint64_t v81 = v58;
  uint64_t v82 = KeyedDecodingContainer.allKeys.getter();
  uint64_t v83 = *(void *)(v82 + 16);
  if (!v83)
  {
LABEL_7:
    uint64_t v95 = v205;
    uint64_t v96 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v98 = v97;
    sub_10017DF08(&qword_100E67280);
    *uint64_t v98 = v95;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v96 - 8) + 104))(v98, enum case for DecodingError.typeMismatch(_:), v96);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v206 + 8))(v81, v80);
LABEL_24:
    uint64_t v134 = (uint64_t)v209;
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v134);
  }
  uint64_t v157 = 0;
  uint64_t v84 = *(unsigned __int8 *)(v82 + 32);
  sub_100723214(1, v83, v82, v82 + 32, 0, (2 * v83) | 1);
  uint64_t v86 = v85;
  unint64_t v88 = v87;
  swift_bridgeObjectRelease();
  if (v86 != v88 >> 1)
  {
    uint64_t v81 = v58;
    goto LABEL_7;
  }
  uint64_t v89 = v84;
  uint64_t v91 = v203;
  uint64_t v90 = v204;
  switch(v89)
  {
    case 1:
      LOBYTE(v211) = 1;
      sub_1006B55BC();
      sub_100180170();
      type metadata accessor for CodableError();
      sub_1006B56E8(&qword_100E709D0, (void (*)(uint64_t))&type metadata accessor for CodableError);
      sub_1001A17B4();
      sub_1001D1C40();
      sub_10018721C();
      sub_100162F0C();
      v99();
      swift_unknownObjectRelease();
      uint64_t v100 = sub_1001A23A8();
      v101(v100);
      sub_10018C4EC();
      goto LABEL_27;
    case 2:
      LOBYTE(v211) = 2;
      sub_1006B5570();
      sub_100180170();
      sub_10017DF08(&qword_100E662D0);
      sub_1006B5654(&qword_100E709C0, &qword_100E709C8);
      sub_1001D1C40();
      sub_10018721C();
      sub_100162F0C();
      v102();
      swift_unknownObjectRelease();
      uint64_t v103 = sub_1001A23A8();
      v104(v103);
      uint64_t v105 = v159;
      *uint64_t v159 = v211;
      goto LABEL_28;
    case 3:
      LOBYTE(v211) = 3;
      sub_1006B5524();
      sub_100180170();
      uint64_t v138 = KeyedDecodingContainer.decode(_:forKey:)();
      uint64_t v140 = v139;
      sub_100162F0C();
      v141();
      swift_unknownObjectRelease();
      uint64_t v142 = sub_10019B5BC();
      v143(v142);
      uint64_t v144 = v158;
      *uint64_t v158 = v138;
      v144[1] = v140;
      swift_storeEnumTagMultiPayload();
      uint64_t v145 = (uint64_t)v144;
      goto LABEL_29;
    case 4:
      LOBYTE(v211) = 4;
      sub_1006B54D8();
      sub_100180170();
      sub_10018139C();
      sub_100162F0C();
      v106();
      swift_unknownObjectRelease();
      uint64_t v107 = sub_10019EFBC();
      v108(v107);
      sub_10017E7D8();
      goto LABEL_26;
    case 5:
      LOBYTE(v211) = 5;
      sub_1006B548C();
      sub_100180170();
      type metadata accessor for Location();
      sub_1006B56E8(&qword_100E6F9D0, (void (*)(uint64_t))&type metadata accessor for Location);
      sub_1001A17B4();
      sub_1001D1C40();
      sub_10018721C();
      sub_100162F0C();
      v109();
      swift_unknownObjectRelease();
      uint64_t v110 = sub_1001A23A8();
      v111(v110);
      sub_10018C4EC();
      goto LABEL_27;
    case 6:
      LOBYTE(v211) = 6;
      sub_1006B5440();
      sub_100180170();
      type metadata accessor for LocationOfInterest();
      sub_1006B56E8(&qword_100E8B208, (void (*)(uint64_t))&type metadata accessor for LocationOfInterest);
      sub_1001A17B4();
      sub_1001D1C40();
      sub_100162F0C();
      v146();
      swift_unknownObjectRelease();
      uint64_t v147 = sub_10019EFBC();
      v148(v147);
      sub_10018C4EC();
      goto LABEL_27;
    case 7:
      LOBYTE(v211) = 7;
      sub_1006B53F4();
      sub_100180170();
      type metadata accessor for SearchLocation();
      sub_1006B56E8(&qword_100E709C8, (void (*)(uint64_t))type metadata accessor for SearchLocation);
      sub_1001A17B4();
      sub_1001D1C40();
      sub_10018721C();
      sub_100162F0C();
      v149();
      swift_unknownObjectRelease();
      uint64_t v150 = sub_1001A23A8();
      v151(v150);
      sub_10018C4EC();
LABEL_27:
      swift_storeEnumTagMultiPayload();
      uint64_t v145 = v79;
      goto LABEL_29;
    case 8:
      LOBYTE(v211) = 8;
      sub_1006B53A8();
      sub_100180170();
      sub_10018139C();
      sub_100162F0C();
      v112();
      swift_unknownObjectRelease();
      uint64_t v113 = sub_10019EFBC();
      v114(v113);
      sub_10017E7D8();
      goto LABEL_26;
    case 9:
      LOBYTE(v211) = 9;
      sub_1006B535C();
      sub_100180170();
      sub_10018139C();
      sub_100162F0C();
      v115();
      swift_unknownObjectRelease();
      uint64_t v116 = sub_10019EFBC();
      v117(v116);
      sub_10017E7D8();
      goto LABEL_26;
    case 10:
      LOBYTE(v211) = 10;
      sub_1006B5310();
      sub_100180170();
      sub_10018139C();
      sub_100162F0C();
      v118();
      swift_unknownObjectRelease();
      uint64_t v119 = sub_10019EFBC();
      v120(v119);
      sub_10017E7D8();
      goto LABEL_26;
    case 11:
      LOBYTE(v211) = 11;
      sub_1006B52C4();
      sub_100180170();
      sub_10018139C();
      sub_100162F0C();
      v121();
      swift_unknownObjectRelease();
      uint64_t v122 = sub_10019EFBC();
      v123(v122);
      sub_10017E7D8();
      goto LABEL_26;
    case 12:
      LOBYTE(v211) = 12;
      sub_1006B5278();
      sub_100180170();
      sub_10018139C();
      sub_100162F0C();
      v124();
      swift_unknownObjectRelease();
      uint64_t v125 = sub_10019EFBC();
      v126(v125);
      sub_10017E7D8();
      goto LABEL_26;
    case 13:
      LOBYTE(v211) = 13;
      sub_1006B522C();
      sub_100180170();
      sub_10018139C();
      sub_100162F0C();
      v127();
      swift_unknownObjectRelease();
      uint64_t v128 = sub_10019EFBC();
      v129(v128);
      sub_10017E7D8();
      goto LABEL_26;
    case 14:
      LOBYTE(v211) = 14;
      sub_1006B51E0();
      sub_100180170();
      type metadata accessor for Location();
      sub_1006B56E8(&qword_100E6F9D0, (void (*)(uint64_t))&type metadata accessor for Location);
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      sub_10018721C();
      uint64_t v152 = sub_1001D0EB4();
      v153(v152);
      swift_unknownObjectRelease();
      uint64_t v154 = sub_1001A23A8();
      v155(v154);
      uint64_t v105 = v193;
LABEL_28:
      swift_storeEnumTagMultiPayload();
      uint64_t v145 = (uint64_t)v105;
LABEL_29:
      unint64_t v88 = (unint64_t)v210;
      sub_1006B5134(v145, (uint64_t)v210, (void (*)(void))type metadata accessor for SearchViewAction);
      goto LABEL_30;
    case 15:
      LOBYTE(v211) = 15;
      sub_1006B5194();
      sub_100180170();
      sub_10018139C();
      sub_100162F0C();
      v130();
      swift_unknownObjectRelease();
      uint64_t v131 = sub_10019EFBC();
      v132(v131);
      sub_10017E7D8();
      goto LABEL_26;
    case 16:
      LOBYTE(v211) = 16;
      sub_1006B50E8();
      uint64_t v133 = v200;
      sub_100180170();
      (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v133, v90);
      swift_unknownObjectRelease();
      uint64_t v136 = sub_10019EFBC();
      v137(v136);
      sub_10017E7D8();
      goto LABEL_26;
    default:
      LOBYTE(v211) = 0;
      sub_1006B5608();
      sub_100180170();
      sub_10018139C();
      sub_100162F0C();
      v92();
      swift_unknownObjectRelease();
      uint64_t v93 = sub_10019EFBC();
      v94(v93);
      sub_10017E7D8();
LABEL_26:
      swift_storeEnumTagMultiPayload();
LABEL_30:
      uint64_t v156 = (uint64_t)v209;
      sub_1006B5134(v88, v201, (void (*)(void))type metadata accessor for SearchViewAction);
      uint64_t v134 = v156;
      break;
  }
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v134);
}

uint64_t sub_1006B4EB0()
{
  sub_1006B56E8(&qword_100E8B110, (void (*)(uint64_t))type metadata accessor for SearchViewAction);

  return ShortDescribable.description.getter();
}

uint64_t sub_1006B4F1C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1006B3AB4(a1, a2);
}

uint64_t sub_1006B4F34(void *a1)
{
  return sub_1006B2A8C(a1);
}

uint64_t sub_1006B4F4C()
{
  return sub_1006B56E8(&qword_100E8B0F8, (void (*)(uint64_t))type metadata accessor for SearchViewAction);
}

unint64_t sub_1006B4F94()
{
  unint64_t result = qword_100E8B108;
  if (!qword_100E8B108)
  {
    sub_10018C6DC(&qword_100E8B100);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B108);
  }
  return result;
}

uint64_t sub_1006B4FE8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1006B5048(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

unint64_t sub_1006B509C()
{
  unint64_t result = qword_100E8B1A8;
  if (!qword_100E8B1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B1A8);
  }
  return result;
}

unint64_t sub_1006B50E8()
{
  unint64_t result = qword_100E8B1B0;
  if (!qword_100E8B1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B1B0);
  }
  return result;
}

uint64_t sub_1006B5134(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

unint64_t sub_1006B5194()
{
  unint64_t result = qword_100E8B1B8;
  if (!qword_100E8B1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B1B8);
  }
  return result;
}

unint64_t sub_1006B51E0()
{
  unint64_t result = qword_100E8B1C0;
  if (!qword_100E8B1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B1C0);
  }
  return result;
}

unint64_t sub_1006B522C()
{
  unint64_t result = qword_100E8B1C8;
  if (!qword_100E8B1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B1C8);
  }
  return result;
}

unint64_t sub_1006B5278()
{
  unint64_t result = qword_100E8B1D0;
  if (!qword_100E8B1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B1D0);
  }
  return result;
}

unint64_t sub_1006B52C4()
{
  unint64_t result = qword_100E8B1D8;
  if (!qword_100E8B1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B1D8);
  }
  return result;
}

unint64_t sub_1006B5310()
{
  unint64_t result = qword_100E8B1E0;
  if (!qword_100E8B1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B1E0);
  }
  return result;
}

unint64_t sub_1006B535C()
{
  unint64_t result = qword_100E8B1E8;
  if (!qword_100E8B1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B1E8);
  }
  return result;
}

unint64_t sub_1006B53A8()
{
  unint64_t result = qword_100E8B1F0;
  if (!qword_100E8B1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B1F0);
  }
  return result;
}

unint64_t sub_1006B53F4()
{
  unint64_t result = qword_100E8B1F8;
  if (!qword_100E8B1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B1F8);
  }
  return result;
}

unint64_t sub_1006B5440()
{
  unint64_t result = qword_100E8B200;
  if (!qword_100E8B200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B200);
  }
  return result;
}

unint64_t sub_1006B548C()
{
  unint64_t result = qword_100E8B210;
  if (!qword_100E8B210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B210);
  }
  return result;
}

unint64_t sub_1006B54D8()
{
  unint64_t result = qword_100E8B218;
  if (!qword_100E8B218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B218);
  }
  return result;
}

unint64_t sub_1006B5524()
{
  unint64_t result = qword_100E8B220;
  if (!qword_100E8B220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B220);
  }
  return result;
}

unint64_t sub_1006B5570()
{
  unint64_t result = qword_100E8B228;
  if (!qword_100E8B228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B228);
  }
  return result;
}

unint64_t sub_1006B55BC()
{
  unint64_t result = qword_100E8B230;
  if (!qword_100E8B230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B230);
  }
  return result;
}

unint64_t sub_1006B5608()
{
  unint64_t result = qword_100E8B238;
  if (!qword_100E8B238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B238);
  }
  return result;
}

uint64_t sub_1006B5654(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(&qword_100E662D0);
    sub_1006B56E8(a2, (void (*)(uint64_t))type metadata accessor for SearchLocation);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1006B56E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DetailKind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF0)
  {
    if (a2 + 16 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 16) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 17;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v5 = v6 - 17;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for SearchViewAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *uint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1006B5884);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchViewAction.CodingKeys()
{
  return &type metadata for SearchViewAction.CodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.ClearedQueryCodingKeys()
{
  return &type metadata for SearchViewAction.ClearedQueryCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.ReceivedErrorCodingKeys()
{
  return &type metadata for SearchViewAction.ReceivedErrorCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.ReceivedResultsCodingKeys()
{
  return &type metadata for SearchViewAction.ReceivedResultsCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.SearchedCodingKeys()
{
  return &type metadata for SearchViewAction.SearchedCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.TappedDimViewCodingKeys()
{
  return &type metadata for SearchViewAction.TappedDimViewCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.TappedLocationCodingKeys()
{
  return &type metadata for SearchViewAction.TappedLocationCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.TappedLocationOfInterestCodingKeys()
{
  return &type metadata for SearchViewAction.TappedLocationOfInterestCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.TappedSearchLocationCodingKeys()
{
  return &type metadata for SearchViewAction.TappedSearchLocationCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.CancelSearchCodingKeys()
{
  return &type metadata for SearchViewAction.CancelSearchCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.HideSearchResultsCodingKeys()
{
  return &type metadata for SearchViewAction.HideSearchResultsCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.FocusSearchFieldCodingKeys()
{
  return &type metadata for SearchViewAction.FocusSearchFieldCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.UnfocusSearchFieldCodingKeys()
{
  return &type metadata for SearchViewAction.UnfocusSearchFieldCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.RemoveSearchFieldFocusRequestCodingKeys()
{
  return &type metadata for SearchViewAction.RemoveSearchFieldFocusRequestCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.CannotAddLocationCodingKeys()
{
  return &type metadata for SearchViewAction.CannotAddLocationCodingKeys;
}

unsigned char *_s7Weather16SearchViewActionO23ReceivedErrorCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1006B5A3CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchViewAction.SaveLastAddedLocationCodingKeys()
{
  return &type metadata for SearchViewAction.SaveLastAddedLocationCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.ClearLastAddedLocationCodingKeys()
{
  return &type metadata for SearchViewAction.ClearLastAddedLocationCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewAction.EnterZeroKeywordCodingKeys()
{
  return &type metadata for SearchViewAction.EnterZeroKeywordCodingKeys;
}

unint64_t sub_1006B5A98()
{
  unint64_t result = qword_100E8B2D8;
  if (!qword_100E8B2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B2D8);
  }
  return result;
}

unint64_t sub_1006B5AE8()
{
  unint64_t result = qword_100E8B2E0;
  if (!qword_100E8B2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B2E0);
  }
  return result;
}

unint64_t sub_1006B5B38()
{
  unint64_t result = qword_100E8B2E8;
  if (!qword_100E8B2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B2E8);
  }
  return result;
}

unint64_t sub_1006B5B88()
{
  unint64_t result = qword_100E8B2F0;
  if (!qword_100E8B2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B2F0);
  }
  return result;
}

unint64_t sub_1006B5BD8()
{
  unint64_t result = qword_100E8B2F8;
  if (!qword_100E8B2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B2F8);
  }
  return result;
}

unint64_t sub_1006B5C28()
{
  unint64_t result = qword_100E8B300;
  if (!qword_100E8B300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B300);
  }
  return result;
}

unint64_t sub_1006B5C78()
{
  unint64_t result = qword_100E8B308;
  if (!qword_100E8B308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B308);
  }
  return result;
}

unint64_t sub_1006B5CC8()
{
  unint64_t result = qword_100E8B310;
  if (!qword_100E8B310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B310);
  }
  return result;
}

unint64_t sub_1006B5D18()
{
  unint64_t result = qword_100E8B318;
  if (!qword_100E8B318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B318);
  }
  return result;
}

unint64_t sub_1006B5D68()
{
  unint64_t result = qword_100E8B320;
  if (!qword_100E8B320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B320);
  }
  return result;
}

unint64_t sub_1006B5DB8()
{
  unint64_t result = qword_100E8B328;
  if (!qword_100E8B328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B328);
  }
  return result;
}

unint64_t sub_1006B5E08()
{
  unint64_t result = qword_100E8B330;
  if (!qword_100E8B330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B330);
  }
  return result;
}

unint64_t sub_1006B5E58()
{
  unint64_t result = qword_100E8B338;
  if (!qword_100E8B338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B338);
  }
  return result;
}

unint64_t sub_1006B5EA8()
{
  unint64_t result = qword_100E8B340;
  if (!qword_100E8B340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B340);
  }
  return result;
}

unint64_t sub_1006B5EF8()
{
  unint64_t result = qword_100E8B348;
  if (!qword_100E8B348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B348);
  }
  return result;
}

unint64_t sub_1006B5F48()
{
  unint64_t result = qword_100E8B350;
  if (!qword_100E8B350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B350);
  }
  return result;
}

unint64_t sub_1006B5F98()
{
  unint64_t result = qword_100E8B358;
  if (!qword_100E8B358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B358);
  }
  return result;
}

unint64_t sub_1006B5FE8()
{
  unint64_t result = qword_100E8B360;
  if (!qword_100E8B360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B360);
  }
  return result;
}

unint64_t sub_1006B6038()
{
  unint64_t result = qword_100E8B368;
  if (!qword_100E8B368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B368);
  }
  return result;
}

unint64_t sub_1006B6088()
{
  unint64_t result = qword_100E8B370;
  if (!qword_100E8B370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B370);
  }
  return result;
}

unint64_t sub_1006B60D8()
{
  unint64_t result = qword_100E8B378;
  if (!qword_100E8B378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B378);
  }
  return result;
}

unint64_t sub_1006B6128()
{
  unint64_t result = qword_100E8B380;
  if (!qword_100E8B380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B380);
  }
  return result;
}

unint64_t sub_1006B6178()
{
  unint64_t result = qword_100E8B388;
  if (!qword_100E8B388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B388);
  }
  return result;
}

unint64_t sub_1006B61C8()
{
  unint64_t result = qword_100E8B390;
  if (!qword_100E8B390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B390);
  }
  return result;
}

unint64_t sub_1006B6218()
{
  unint64_t result = qword_100E8B398;
  if (!qword_100E8B398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B398);
  }
  return result;
}

unint64_t sub_1006B6268()
{
  unint64_t result = qword_100E8B3A0;
  if (!qword_100E8B3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B3A0);
  }
  return result;
}

unint64_t sub_1006B62B8()
{
  unint64_t result = qword_100E8B3A8;
  if (!qword_100E8B3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B3A8);
  }
  return result;
}

unint64_t sub_1006B6308()
{
  unint64_t result = qword_100E8B3B0;
  if (!qword_100E8B3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B3B0);
  }
  return result;
}

unint64_t sub_1006B6358()
{
  unint64_t result = qword_100E8B3B8;
  if (!qword_100E8B3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B3B8);
  }
  return result;
}

unint64_t sub_1006B63A8()
{
  unint64_t result = qword_100E8B3C0;
  if (!qword_100E8B3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B3C0);
  }
  return result;
}

unint64_t sub_1006B63F8()
{
  unint64_t result = qword_100E8B3C8;
  if (!qword_100E8B3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B3C8);
  }
  return result;
}

unint64_t sub_1006B6448()
{
  unint64_t result = qword_100E8B3D0;
  if (!qword_100E8B3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B3D0);
  }
  return result;
}

unint64_t sub_1006B6498()
{
  unint64_t result = qword_100E8B3D8;
  if (!qword_100E8B3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B3D8);
  }
  return result;
}

unint64_t sub_1006B64E8()
{
  unint64_t result = qword_100E8B3E0;
  if (!qword_100E8B3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B3E0);
  }
  return result;
}

unint64_t sub_1006B6538()
{
  unint64_t result = qword_100E8B3E8;
  if (!qword_100E8B3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B3E8);
  }
  return result;
}

unint64_t sub_1006B6588()
{
  unint64_t result = qword_100E8B3F0;
  if (!qword_100E8B3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B3F0);
  }
  return result;
}

unint64_t sub_1006B65D8()
{
  unint64_t result = qword_100E8B3F8;
  if (!qword_100E8B3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B3F8);
  }
  return result;
}

unint64_t sub_1006B6628()
{
  unint64_t result = qword_100E8B400;
  if (!qword_100E8B400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B400);
  }
  return result;
}

unint64_t sub_1006B6678()
{
  unint64_t result = qword_100E8B408;
  if (!qword_100E8B408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B408);
  }
  return result;
}

unint64_t sub_1006B66C8()
{
  unint64_t result = qword_100E8B410;
  if (!qword_100E8B410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B410);
  }
  return result;
}

unint64_t sub_1006B6718()
{
  unint64_t result = qword_100E8B418;
  if (!qword_100E8B418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B418);
  }
  return result;
}

unint64_t sub_1006B6768()
{
  unint64_t result = qword_100E8B420;
  if (!qword_100E8B420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B420);
  }
  return result;
}

unint64_t sub_1006B67B8()
{
  unint64_t result = qword_100E8B428;
  if (!qword_100E8B428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B428);
  }
  return result;
}

unint64_t sub_1006B6808()
{
  unint64_t result = qword_100E8B430[0];
  if (!qword_100E8B430[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100E8B430);
  }
  return result;
}

ValueMetadata *type metadata accessor for Rotate()
{
  return &type metadata for Rotate;
}

uint64_t sub_1006B6864()
{
  sub_1000A9DE8();
  v0[15] = v1;
  type metadata accessor for MainActor();
  v0[16] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[17] = v3;
  v0[18] = v2;
  return _swift_task_switch(sub_1006B68F8, v3, v2);
}

uint64_t sub_1006B68F8()
{
  uint64_t v14 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 10;
  if (qword_100E62870 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_1002102B0(v3, (uint64_t)qword_100F52058);
  unsigned int v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    unsigned int v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)unsigned int v6 = 136315138;
    uint64_t v7 = UIInterfaceOrientation.description.getter();
    v1[10] = sub_10016414C(v7, v8, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Performing Rotate instruction: %s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v9 = v1[15];
  id v10 = [self sharedApplication];
  v1[19] = v10;
  v1[2] = v1;
  v1[7] = v1 + 20;
  v1[3] = sub_1006B6B78;
  uint64_t v11 = swift_continuation_init();
  v1[10] = _NSConcreteStackBlock;
  v1[11] = 0x40000000;
  v1[12] = sub_1006B6C58;
  v1[13] = &unk_100E23528;
  v1[14] = v11;
  [v10 rotateIfNeeded:v9 completion:v2];
  return _swift_continuation_await(v1 + 2);
}

uint64_t sub_1006B6B78()
{
  sub_1000A9DE8();
  sub_100119470();
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 136);
  return _swift_task_switch(sub_100352B54, v2, v1);
}

uint64_t sub_1006B6C58(uint64_t a1, char a2)
{
  return sub_1006B6C60(*(void *)(a1 + 32), a2);
}

uint64_t sub_1006B6C60(uint64_t a1, char a2)
{
  **(unsigned char **)(*(void *)(a1 + 64) + 40) = a2;
  return _swift_continuation_resume();
}

uint64_t sub_1006B6C80()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100321064;
  return sub_1006B6864();
}

void *sub_1006B6D14(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Location();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for NotificationsOptInComponentViewModel();
    *((unsigned char *)a1 + *(int *)(v8 + 20)) = *((unsigned char *)a2 + *(int *)(v8 + 20));
    *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
    swift_unknownObjectRetain();
  }
  return a1;
}

uint64_t sub_1006B6DFC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_unknownObjectRelease();
}

uint64_t sub_1006B6E70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for NotificationsOptInComponentViewModel();
  *(unsigned char *)(a1 + *(int *)(v7 + 20)) = *(unsigned char *)(a2 + *(int *)(v7 + 20));
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_1006B6F08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for NotificationsOptInComponentViewModel();
  *(unsigned char *)(a1 + *(int *)(v7 + 20)) = *(unsigned char *)(a2 + *(int *)(v7 + 20));
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  id v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v9[1] = v11;
  return a1;
}

uint64_t sub_1006B6FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for NotificationsOptInComponentViewModel();
  *(unsigned char *)(a1 + *(int *)(v7 + 20)) = *(unsigned char *)(a2 + *(int *)(v7 + 20));
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1006B7044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for NotificationsOptInComponentViewModel();
  *(unsigned char *)(a1 + *(int *)(v7 + 20)) = *(unsigned char *)(a2 + *(int *)(v7 + 20));
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  id v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  swift_unknownObjectRelease();
  v9[1] = v11;
  return a1;
}

uint64_t sub_1006B70E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006B70FC);
}

uint64_t sub_1006B70FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for NotificationsOptInComponentViewModel();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_1006B7188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006B719C);
}

void sub_1006B719C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for NotificationsOptInComponentViewModel();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t sub_1006B7224()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006B7240@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v28 = a1;
  uint64_t v3 = type metadata accessor for NotificationsOptInComponentView();
  uint64_t v27 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v27 + 64);
  __chkstk_darwin(v3 - 8);
  int v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v26 - v7;
  uint64_t v9 = type metadata accessor for NotificationsOptInComponentViewModel();
  sub_100162E4C();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1006B7654(v2, (uint64_t)v12, (void (*)(void))type metadata accessor for NotificationsOptInComponentViewModel);
  Location.kind.getter();
  type metadata accessor for Location();
  sub_100162E4C();
  (*(void (**)(char *))(v13 + 8))(v12);
  uint64_t v14 = Location.Identifier.Kind.rawValue.getter();
  uint64_t v16 = v15;
  BOOL v18 = v14 == Location.Identifier.Kind.rawValue.getter() && v16 == v17;
  char v19 = 1;
  if (!v18) {
    char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for NotificationsOptInTipViewFactory();
  uint64_t inited = swift_initStackObject();
  *(unsigned char *)(inited + 16) = v19 & 1;
  *(unsigned char *)(inited + 17) = 1;
  uint64_t v21 = *(unsigned __int8 *)(v2 + *(int *)(v9 + 20));
  sub_1006B7654(v2, (uint64_t)v8, (void (*)(void))type metadata accessor for NotificationsOptInComponentView);
  unint64_t v22 = (*(unsigned __int8 *)(v27 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  uint64_t v23 = swift_allocObject();
  sub_1006B76B8((uint64_t)v8, v23 + v22);
  sub_1006B7654(v2, (uint64_t)v5, (void (*)(void))type metadata accessor for NotificationsOptInComponentView);
  uint64_t v24 = swift_allocObject();
  sub_1006B76B8((uint64_t)v5, v24 + v22);
  sub_1007FD2DC(v21, (uint64_t)sub_1006B771C, v23, (uint64_t)sub_1006B7738, v24, v28);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1006B752C()
{
  return sub_1008CF3D0();
}

uint64_t sub_1006B7570(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NotificationsOptInComponentViewModel();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NotificationsOptInComponentView();
  sub_1006B7654(a1, (uint64_t)v4, (void (*)(void))type metadata accessor for NotificationsOptInComponentViewModel);
  sub_1008CE654((uint64_t)v4);
  uint64_t v5 = type metadata accessor for Location();
  return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_1006B7654(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1006B76B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NotificationsOptInComponentView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006B771C()
{
  return sub_1006B7750((uint64_t (*)(uint64_t))sub_1006B752C);
}

uint64_t sub_1006B7738()
{
  return sub_1006B7750(sub_1006B7570);
}

uint64_t sub_1006B7750(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for NotificationsOptInComponentView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

unsigned char *storeEnumTagSinglePayload for ScrollDirection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1006B7894);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrollDirection()
{
  return &type metadata for ScrollDirection;
}

unint64_t sub_1006B78D0()
{
  unint64_t result = qword_100E8B578;
  if (!qword_100E8B578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B578);
  }
  return result;
}

uint64_t DynamicTypeSize.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v5 = sub_10017DF08(&qword_100E8B580);
  sub_100179C0C();
  uint64_t v19 = v6;
  __chkstk_darwin(v7);
  sub_100109370();
  uint64_t v8 = type metadata accessor for DynamicTypeSize();
  sub_100179C0C();
  uint64_t v17 = v9;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a1, a1[3]);
  sub_1006B7AF0();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v2)
  {
    uint64_t v14 = v17;
    uint64_t v13 = v18;
    sub_1006B7B3C();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v3, v5);
    (*(void (**)(char *, void, uint64_t))(v14 + 104))(v12, *(unsigned int *)*(&off_100E23740 + v20), v8);
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v13, v12, v8);
  }
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
}

unint64_t sub_1006B7AF0()
{
  unint64_t result = qword_100E8B588;
  if (!qword_100E8B588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B588);
  }
  return result;
}

unint64_t sub_1006B7B3C()
{
  unint64_t result = qword_100E8B590;
  if (!qword_100E8B590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B590);
  }
  return result;
}

uint64_t DynamicTypeSize.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for DynamicTypeSize();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_100109370();
  uint64_t v7 = sub_10017DF08(&qword_100E8B598);
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a1, a1[3]);
  sub_1006B7AF0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 16))(v1, v15[1], v3);
  int v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(v1, v3);
  if (v13 == enum case for DynamicTypeSize.xSmall(_:))
  {
    char v16 = 0;
    sub_1006B7FC4();
LABEL_5:
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v7);
  }
  if (v13 == enum case for DynamicTypeSize.small(_:))
  {
    char v17 = 1;
    sub_1006B7FC4();
    goto LABEL_5;
  }
  if (v13 == enum case for DynamicTypeSize.medium(_:))
  {
    char v18 = 2;
    sub_1006B7FC4();
  }
  else if (v13 == enum case for DynamicTypeSize.large(_:))
  {
    char v19 = 3;
    sub_1006B7FC4();
  }
  else if (v13 == enum case for DynamicTypeSize.xLarge(_:))
  {
    char v20 = 4;
    sub_1006B7FC4();
  }
  else if (v13 == enum case for DynamicTypeSize.xxLarge(_:))
  {
    char v21 = 5;
    sub_1006B7FC4();
  }
  else if (v13 == enum case for DynamicTypeSize.xxxLarge(_:))
  {
    char v22 = 6;
    sub_1006B7FC4();
  }
  else if (v13 == enum case for DynamicTypeSize.accessibility1(_:))
  {
    char v23 = 7;
    sub_1006B7FC4();
  }
  else if (v13 == enum case for DynamicTypeSize.accessibility2(_:))
  {
    char v24 = 8;
    sub_1006B7FC4();
  }
  else if (v13 == enum case for DynamicTypeSize.accessibility3(_:))
  {
    char v25 = 9;
    sub_1006B7FC4();
  }
  else if (v13 == enum case for DynamicTypeSize.accessibility4(_:))
  {
    char v26 = 10;
    sub_1006B7FC4();
  }
  else
  {
    if (v13 != enum case for DynamicTypeSize.accessibility5(_:))
    {
      uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      return result;
    }
    char v27 = 11;
    sub_1006B7FC4();
  }
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v7);
}

unint64_t sub_1006B7FC4()
{
  unint64_t result = qword_100E8B5A0;
  if (!qword_100E8B5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B5A0);
  }
  return result;
}

BOOL sub_1006B8010(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E079D0, v2);
  swift_bridgeObjectRelease();
  return v3 != 0;
}

BOOL sub_1006B8058(Swift::String a1)
{
  return sub_1006B8010(a1);
}

unint64_t sub_1006B8074(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E07A08, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 0xC) {
    return 12;
  }
  else {
    return v3;
  }
}

uint64_t sub_1006B80C0(char a1)
{
  uint64_t result = 0x6C6C616D5378;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6C6C616D73;
      break;
    case 2:
      uint64_t result = 0x6D756964656DLL;
      break;
    case 3:
      uint64_t result = 0x656772616CLL;
      break;
    case 4:
      uint64_t result = 0x656772614C78;
      break;
    case 5:
      uint64_t result = 0x656772614C7878;
      break;
    case 6:
      uint64_t result = 0x656772614C787878;
      break;
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      uint64_t result = 0x6269737365636361;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_1006B8204@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_1006B8010(*a1);
  *a2 = result;
  return result;
}

BOOL sub_1006B8238@<W0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_1006B8058(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1006B8264(uint64_t a1)
{
  unint64_t v2 = sub_1006B7AF0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006B82A0(uint64_t a1)
{
  unint64_t v2 = sub_1006B7AF0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006B82DC(unsigned __int8 *a1, char *a2)
{
  return sub_10088C7CC(*a1, *a2);
}

Swift::Int sub_1006B82E8()
{
  return sub_100652604(*v0);
}

uint64_t sub_1006B82F0(uint64_t a1)
{
  return sub_1002C3ADC(a1, *v1);
}

Swift::Int sub_1006B82F8(uint64_t a1)
{
  return sub_1002C3D74(a1, *v1);
}

unint64_t sub_1006B8300@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1006B8074(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1006B8330@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1006B80C0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1006B835C()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1006B83BC()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1006B840C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DynamicTypeSize.init(from:)(a1, a2);
}

uint64_t sub_1006B8424(void *a1)
{
  return DynamicTypeSize.encode(to:)(a1);
}

unsigned char *_s10CodingTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1006B8508);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10CodingTypeOMa()
{
  return &_s10CodingTypeON;
}

unsigned char *_s10CodingKeysOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1006B85DCLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s10CodingKeysOMa()
{
  return &_s10CodingKeysON;
}

unint64_t sub_1006B8618()
{
  unint64_t result = qword_100E8B5A8;
  if (!qword_100E8B5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B5A8);
  }
  return result;
}

unint64_t sub_1006B8668()
{
  unint64_t result = qword_100E8B5B0;
  if (!qword_100E8B5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B5B0);
  }
  return result;
}

unint64_t sub_1006B86B8()
{
  unint64_t result = qword_100E8B5B8;
  if (!qword_100E8B5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B5B8);
  }
  return result;
}

unint64_t sub_1006B8708()
{
  unint64_t result = qword_100E8B5C0;
  if (!qword_100E8B5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B5C0);
  }
  return result;
}

unint64_t sub_1006B8754()
{
  unint64_t result = qword_100E8B5C8;
  if (!qword_100E8B5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8B5C8);
  }
  return result;
}

void *sub_1006B87A0(char a1, char a2, uint64_t a3)
{
  uint64_t v94 = a3;
  uint64_t v6 = type metadata accessor for TipPriorityQueue.GridEntry();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100162EF8();
  uint64_t v93 = v8;
  __chkstk_darwin(v9);
  uint64_t v92 = (uint64_t)&v71 - v10;
  __chkstk_darwin(v11);
  int v13 = (char *)&v71 - v12;
  uint64_t v14 = sub_10017DF08(&qword_100E64E80);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_10008B8C0();
  uint64_t v16 = type metadata accessor for LocationComponentViewModel();
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  char v19 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  char v22 = (char *)&v71 - v21;
  uint64_t v23 = sub_10017DF08(&qword_100E6CCD8);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100162EF8();
  uint64_t v91 = v25;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v71 - v27;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v71 - v30;
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v71 - v33;
  if (a1)
  {
    if (a1 == 1)
    {
      if (a2)
      {
        uint64_t v35 = &qword_100E8B9E0;
        goto LABEL_11;
      }
    }
    else if (a2)
    {
      uint64_t v35 = &qword_100E8BDF0;
      goto LABEL_11;
    }
    uint64_t v35 = &qword_100E8BBE8;
  }
  else if (a2)
  {
    uint64_t v35 = &qword_100E8B5D0;
  }
  else
  {
    uint64_t v35 = &qword_100E8B7D8;
  }
LABEL_11:
  char v36 = *((unsigned char *)v35 + 224);
  uint64_t v37 = *v35;
  uint64_t v77 = v35[1];
  uint64_t v78 = v37;
  uint64_t v76 = v35[2];
  uint64_t v75 = v35[3];
  uint64_t v38 = v35[8];
  uint64_t v81 = v35[9];
  uint64_t v82 = v38;
  uint64_t v39 = v35[10];
  uint64_t v79 = v35[11];
  uint64_t v80 = v39;
  uint64_t v74 = v35[24];
  uint64_t v73 = v35[25];
  uint64_t v72 = v35[26];
  uint64_t v71 = v35[27];
  uint64_t v40 = v35[53];
  uint64_t v85 = v35[54];
  uint64_t v86 = v40;
  uint64_t v41 = v35[55];
  uint64_t v83 = v35[56];
  uint64_t v84 = v41;
  uint64_t v42 = v35[61];
  uint64_t v89 = v35[62];
  uint64_t v90 = v42;
  uint64_t v43 = v94 + OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_map;
  uint64_t v45 = v35[63];
  uint64_t v44 = v35[64];
  uint64_t v87 = v45;
  uint64_t v88 = v44;
  swift_beginAccess();
  sub_10006DF38(v43, v3, &qword_100E64E80);
  uint64_t v46 = type metadata accessor for LocationComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0(v3, 1, v46) == 1)
  {
    sub_1001781AC(v3, &qword_100E64E80);
LABEL_16:
    uint64_t v47 = 1;
    goto LABEL_17;
  }
  sub_10031F6A8(v3 + *(int *)(v46 + 20), (uint64_t)v19, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  sub_10031F75C(v3, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_10031F6FC((uint64_t)v19, (uint64_t)v22, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  if (v36)
  {
    sub_10031F75C((uint64_t)v22, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    goto LABEL_16;
  }
  sub_10031F6FC((uint64_t)v22, (uint64_t)v31, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v47 = 0;
  uint64_t v48 = &v31[*(int *)(v6 + 20)];
  uint64_t v49 = v73;
  *(void *)uint64_t v48 = v74;
  *((void *)v48 + 1) = v49;
  uint64_t v50 = v71;
  *((void *)v48 + 2) = v72;
  *((void *)v48 + 3) = v50;
LABEL_17:
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, v47, 1, v6);
  sub_10031F640((uint64_t)v31, (uint64_t)v34);
  sub_10031F6A8(v94 + *(int *)(v46 + 20) + OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_airQuality, (uint64_t)v28, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v51 = &v28[*(int *)(v6 + 20)];
  uint64_t v52 = v77;
  *(void *)uint64_t v51 = v78;
  *((void *)v51 + 1) = v52;
  uint64_t v53 = v75;
  *((void *)v51 + 2) = v76;
  *((void *)v51 + 3) = v53;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v6);
  uint64_t v54 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  sub_10031F6A8(v54, (uint64_t)v13, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v55 = &v13[*(int *)(v6 + 20)];
  uint64_t v56 = v81;
  *(void *)uint64_t v55 = v82;
  *((void *)v55 + 1) = v56;
  uint64_t v57 = v79;
  *((void *)v55 + 2) = v80;
  *((void *)v55 + 3) = v57;
  uint64_t v58 = v91;
  sub_10006DF38((uint64_t)v34, v91, &qword_100E6CCD8);
  uint64_t v59 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  uint64_t v60 = v92;
  sub_10031F6A8(v59, v92, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v61 = (uint64_t *)(v60 + *(int *)(v6 + 20));
  uint64_t v62 = v85;
  *uint64_t v61 = v86;
  v61[1] = v62;
  uint64_t v63 = v83;
  v61[2] = v84;
  v61[3] = v63;
  uint64_t v64 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  uint64_t v65 = v93;
  sub_10031F6A8(v64, v93, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v66 = (uint64_t *)(v65 + *(int *)(v6 + 20));
  uint64_t v67 = v89;
  uint64_t *v66 = v90;
  v66[1] = v67;
  uint64_t v68 = v88;
  v66[2] = v87;
  v66[3] = v68;
  uint64_t v69 = sub_100AD6D18((uint64_t)v28, (uint64_t)v13, v58, v60, v65);
  sub_1001781AC((uint64_t)v34, &qword_100E6CCD8);
  return v69;
}

uint64_t sub_1006B8D7C(uint64_t a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E64E80);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_10008B8C0();
  uint64_t v10 = a1 + OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_map;
  swift_beginAccess();
  sub_10006DF38(v10, v7, &qword_100E64E80);
  uint64_t v111 = a1;
  if (_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8) == 1)
  {
    sub_1001781AC(v7, &qword_100E64E80);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C28110;
    sub_10017DF08(&qword_100E6CCD0);
    unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v13 = *(void *)(v9 + 72);
    uint64_t v14 = (__n128 *)swift_allocObject();
    uint64_t v15 = sub_100183900(v14, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_nextHourPrecipitation, (uint64_t)v15 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 40) = v16;
    *(void *)(v11 + 48) = v17;
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = v112;
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_newsArticle, v18 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC(v18);
    *(void *)(v11 + 64) = v19;
    *(void *)(v11 + 72) = v20;
    uint64_t v21 = (__n128 *)sub_100163204();
    sub_100163264(v21);
    sub_10031F6A8(v22 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v23, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC(v18);
    *(void *)(v11 + 88) = v24;
    *(void *)(v11 + 96) = v25;
    uint64_t v26 = (__n128 *)sub_100163204();
    sub_100163264(v26);
    sub_10031F6A8(v27 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v28, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC(v18);
    *(void *)(v11 + 112) = v29;
    *(void *)(v11 + 120) = v30;
    uint64_t v31 = sub_100163204();
    *(_OWORD *)(v31 + 16) = v112;
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_airQuality, v31 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 128) = sub_1001F24CC(v31);
    *(void *)(v11 + 136) = v32;
    *(void *)(v11 + 144) = v33;
    uint64_t v34 = v13;
    uint64_t v35 = (__n128 *)swift_allocObject();
    char v36 = (char *)sub_100183900(v35, (__n128)xmmword_100C25ED0) + v12;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
    sub_1001859A8((uint64_t)&v36[v34], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v35);
    *(void *)(v11 + 160) = v37;
    *(void *)(v11 + 168) = v38;
    uint64_t v39 = (__n128 *)swift_allocObject();
    sub_10016324C(v39);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_1001859A8((uint64_t)&v36[v34], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v35);
    *(void *)(v11 + 184) = v40;
    *(void *)(v11 + 192) = v41;
    uint64_t v42 = (__n128 *)swift_allocObject();
    sub_10016324C(v42);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_1001859A8((uint64_t)&v36[v34], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity);
    *(void *)(v11 + 200) = sub_1001F24CC((uint64_t)v35);
    *(void *)(v11 + 208) = v43;
    *(void *)(v11 + 216) = v44;
    uint64_t v45 = sub_100163204();
    *(_OWORD *)(v45 + 16) = v112;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_1001859A8(v45 + v12 + v34, OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure);
    *(void *)(v11 + 224) = sub_1001F24CC(v45);
    *(void *)(v11 + 232) = v46;
    *(void *)(v11 + 240) = v47;
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = v112;
    uint64_t v49 = *(void *)(a1 + 16);
    sub_10031F6A8(v49 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v48 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v49 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v48 + v12 + v34, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 248) = sub_1001F24CC(v48);
    *(void *)(v11 + 256) = v50;
    *(void *)(v11 + 264) = v51;
  }
  else
  {
    sub_10031F6FC(v7, v1, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C31F20;
    sub_10017DF08(&qword_100E6CCD0);
    uint64_t v110 = *(void *)(v9 + 72);
    uint64_t v109 = v1;
    unint64_t v52 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v53 = (__n128 *)swift_allocObject();
    uint64_t v54 = sub_100183900(v53, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_nextHourPrecipitation, (uint64_t)v54 + v52, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v53);
    *(void *)(v11 + 40) = v55;
    *(void *)(v11 + 48) = v56;
    uint64_t v57 = (__n128 *)sub_10017C984();
    sub_100179F54(v57);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_newsArticle, v58, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC((uint64_t)v57);
    *(void *)(v11 + 64) = v59;
    *(void *)(v11 + 72) = v60;
    uint64_t v61 = (__n128 *)sub_10017C984();
    sub_10017E198(v61);
    sub_10031F6A8(v62 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v63, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC((uint64_t)v57);
    *(void *)(v11 + 88) = v64;
    *(void *)(v11 + 96) = v65;
    uint64_t v66 = (__n128 *)sub_10017C984();
    sub_10017E198(v66);
    sub_10031F6A8(v67 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v68, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC((uint64_t)v57);
    *(void *)(v11 + 112) = v69;
    *(void *)(v11 + 120) = v70;
    uint64_t v71 = (__n128 *)sub_10017C984();
    sub_100179F54(v71);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_airQuality, v72, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 128) = sub_1001F24CC((uint64_t)v71);
    *(void *)(v11 + 136) = v73;
    *(void *)(v11 + 144) = v74;
    uint64_t v75 = (__n128 *)sub_10017C984();
    sub_100179F54(v75);
    sub_10031F6A8(v1, v76, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v75);
    *(void *)(v11 + 160) = v77;
    *(void *)(v11 + 168) = v78;
    uint64_t v79 = (__n128 *)swift_allocObject();
    uint64_t v80 = (char *)sub_100183900(v79, (__n128)xmmword_100C25ED0) + v52;
    uint64_t v81 = a1;
    uint64_t v82 = *(void *)(a1 + 16);
    uint64_t v83 = v81;
    sub_10031F6A8(v82 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v80, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v82 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v80[v110], (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v79);
    *(void *)(v11 + 184) = v84;
    *(void *)(v11 + 192) = v85;
    uint64_t v86 = (__n128 *)swift_allocObject();
    sub_10017A334(v86);
    uint64_t v88 = v87 + v52;
    uint64_t v89 = *(void *)(v83 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_10031F6A8(v89 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, v88 + v110, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 200) = sub_1001F24CC((uint64_t)v79);
    *(void *)(v11 + 208) = v90;
    *(void *)(v11 + 216) = v91;
    uint64_t v92 = (__n128 *)swift_allocObject();
    sub_10017A334(v92);
    uint64_t v94 = v93 + v52;
    uint64_t v95 = *(void *)(v111 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_10031F6A8(v95 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, v94 + v110, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 224) = sub_1001F24CC((uint64_t)v79);
    *(void *)(v11 + 232) = v96;
    *(void *)(v11 + 240) = v97;
    uint64_t v98 = (__n128 *)swift_allocObject();
    sub_10017A334(v98);
    uint64_t v100 = v99 + v52;
    uint64_t v101 = *(void *)(v111 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_10031F6A8(v101 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, v100 + v110, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 248) = sub_1001F24CC((uint64_t)v79);
    *(void *)(v11 + 256) = v102;
    *(void *)(v11 + 264) = v103;
    uint64_t v104 = swift_allocObject();
    *(_OWORD *)(v104 + 16) = v112;
    uint64_t v105 = *(void *)(v111 + 16);
    sub_10031F6A8(v105 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v104 + v52, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v105 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v104 + v52 + v110, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 272) = sub_1001F24CC(v104);
    *(void *)(v11 + 280) = v106;
    *(void *)(v11 + 288) = v107;
    sub_10031F75C(v109, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  }
  return v11;
}

void sub_1006B9644(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100162E4C();
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v7 = __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  uint64_t v8 = type metadata accessor for LocationViewComponent();
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_10017DF08(&qword_100E64E80);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = swift_retain();
  sub_1006E2E94(v18, a2);
  swift_release();
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather28LocationNhpNewsConfiguration8_Storage_map, v12, (void (*)(void))type metadata accessor for LocationViewComponent);
  uint64_t v19 = sub_10018297C();
  a2(v19);
  sub_100185204();
  _s7Weather24LocationCompositionStateOwst_0(v17, 0, 1, v4);
  sub_10016327C(OBJC_IVAR____TtCV7Weather28LocationNhpNewsConfiguration8_Storage_airQuality);
  uint64_t v20 = sub_10018297C();
  a2(v20);
  sub_100185204();
  sub_10016327C(OBJC_IVAR____TtCV7Weather28LocationNhpNewsConfiguration8_Storage_newsArticle);
  uint64_t v21 = sub_10018297C();
  a2(v21);
  sub_100185204();
  sub_10016327C(OBJC_IVAR____TtCV7Weather28LocationNhpNewsConfiguration8_Storage_nextHourPrecipitation);
  uint64_t v22 = sub_10018297C();
  a2(v22);
  sub_100185204();
  sub_1002DBD50();
}

uint64_t sub_1006B987C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1006B98A4()
{
  sub_1006B987C();

  return swift_deallocClassInstance();
}

uint64_t *sub_1006B98D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
    uint64_t v7 = (char *)v4 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
    {
      uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
    }
  }
  return v4;
}

uint64_t sub_1006B9A0C(uint64_t a1)
{
  uint64_t v1 = a1 + *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  uint64_t v2 = type metadata accessor for Date();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v1, 1, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v4(v1, v2);
  }
  return result;
}

void *sub_1006B9AA8(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  int v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7))
  {
    uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

void *sub_1006B9B90(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  int v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v7);
  int v9 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7);
  if (!v8)
  {
    uint64_t v10 = *(void *)(v7 - 8);
    if (!v9)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v9)
  {
LABEL_6:
    uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v5, v6, *(void *)(*(void *)(v11 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v7);
  return a1;
}

void *sub_1006B9D00(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  int v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7))
  {
    uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

void *sub_1006B9DE8(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  int v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v7);
  int v9 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7);
  if (!v8)
  {
    uint64_t v10 = *(void *)(v7 - 8);
    if (!v9)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v9)
  {
LABEL_6:
    uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v5, v6, *(void *)(*(void *)(v11 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v7);
  return a1;
}

uint64_t sub_1006B9F58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6BF00);

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_1006B9FA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E6BF00);

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a3, v6);
}

uint64_t type metadata accessor for ChartDateStep()
{
  uint64_t result = qword_100E8C100;
  if (!qword_100E8C100) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1006BA048(uint64_t a1)
{
  sub_1000159D8();
  if (v2 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSingleCase();
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = v3;
  }
}

BOOL sub_1006BA108(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v39 = *(void *)(v4 - 8);
  uint64_t v40 = v4;
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = sub_10017DF08(&qword_100E64D60);
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v39 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v39 - v19;
  uint64_t v21 = sub_10017DF08(&qword_100E8C110);
  __chkstk_darwin(v21 - 8);
  sub_1001626E0();
  uint64_t v24 = (uint64_t *)(v23 - v22);
  uint64_t v26 = (uint64_t *)(v23 - v22 + *(int *)(v25 + 56));
  sub_1006BA4FC(a1, v23 - v22);
  sub_1006BA4FC(a2, (uint64_t)v26);
  uint64_t v27 = *v24;
  uint64_t v28 = *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  uint64_t v29 = *v26;
  uint64_t v30 = (uint64_t)v26 + v28;
  sub_100246A0C((uint64_t)v24 + v28, (uint64_t)v20);
  sub_100246A0C(v30, (uint64_t)v18);
  if (v27 != v29)
  {
    sub_1000F3400((uint64_t)v18, (uint64_t *)&unk_100E73CA0);
    uint64_t v34 = (uint64_t)v20;
    uint64_t v35 = (uint64_t *)&unk_100E73CA0;
LABEL_9:
    sub_1000F3400(v34, v35);
    return 0;
  }
  uint64_t v31 = v39;
  uint64_t v32 = v11 + *(int *)(v8 + 48);
  sub_1001C7278((uint64_t)v20, v11);
  sub_1001C7278((uint64_t)v18, v32);
  uint64_t v33 = v40;
  if (_s7Weather24LocationCompositionStateOwet_0(v11, 1, v40) == 1)
  {
    sub_1000F3400((uint64_t)v18, (uint64_t *)&unk_100E73CA0);
    sub_1000F3400((uint64_t)v20, (uint64_t *)&unk_100E73CA0);
    if (_s7Weather24LocationCompositionStateOwet_0(v32, 1, v33) == 1)
    {
      sub_1000F3400(v11, (uint64_t *)&unk_100E73CA0);
      return 1;
    }
    goto LABEL_8;
  }
  sub_1001C7278(v11, (uint64_t)v15);
  if (_s7Weather24LocationCompositionStateOwet_0(v32, 1, v33) == 1)
  {
    sub_1000F3400((uint64_t)v18, (uint64_t *)&unk_100E73CA0);
    sub_1000F3400((uint64_t)v20, (uint64_t *)&unk_100E73CA0);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v33);
LABEL_8:
    uint64_t v35 = &qword_100E64D60;
    uint64_t v34 = v11;
    goto LABEL_9;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v7, v32, v33);
  sub_1006BA560();
  char v37 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
  v38(v7, v33);
  sub_1000F3400((uint64_t)v18, (uint64_t *)&unk_100E73CA0);
  sub_1000F3400((uint64_t)v20, (uint64_t *)&unk_100E73CA0);
  v38((uint64_t)v15, v33);
  sub_1000F3400(v11, (uint64_t *)&unk_100E73CA0);
  return (v37 & 1) != 0;
}

uint64_t sub_1006BA4FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ChartDateStep();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1006BA560()
{
  unint64_t result = qword_100E63980;
  if (!qword_100E63980)
  {
    type metadata accessor for Date();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E63980);
  }
  return result;
}

uint64_t sub_1006BA5B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = (int *)type metadata accessor for NewsArticle();
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  type metadata accessor for ArticleModel();
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_10017DF08(&qword_100E7AF78);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v48 - v18;
  uint64_t v56 = type metadata accessor for NewsArticleComponentViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v20);
  sub_1001626E0();
  uint64_t v23 = (void *)(v22 - v21);
  uint64_t v57 = a1;
  sub_10069D6F4(a1, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1006BB1C8(v13, v9, (void (*)(void))type metadata accessor for NewsArticle);
    uint64_t v24 = *(void *)(v9 + 24);
    uint64_t v54 = *(void *)(v9 + 16);
    uint64_t v25 = v9 + v5[6];
    uint64_t v26 = type metadata accessor for NewsArticleComponentContentViewModel(0);
    uint64_t v55 = v19;
    uint64_t v27 = (int *)v26;
    sub_1000F32E4(v25, (uint64_t)v23 + *(int *)(v26 + 20));
    uint64_t v28 = v5[8];
    uint64_t v29 = v9 + v5[9];
    uint64_t v30 = *(void *)(v29 + 16);
    uint64_t v49 = *(void *)(v29 + 24);
    uint64_t v50 = v30;
    uint64_t v31 = v9 + v28;
    uint64_t v52 = v9 + v28;
    uint64_t v32 = (char *)v23 + v27[7];
    uint64_t v51 = type metadata accessor for URL();
    uint64_t v33 = *(void *)(v51 - 8);
    uint64_t v53 = v17;
    uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 16);
    v34(v32, v31, v51);
    uint64_t v35 = (uint64_t)v23 + v27[8];
    swift_bridgeObjectRetain();
    uint64_t v36 = v49;
    swift_bridgeObjectRetain();
    sub_1006BA9E8(v9, v35);
    char v37 = *(unsigned char *)(v57 + *(int *)(type metadata accessor for NewsArticleComponent() + 20));
    *uint64_t v23 = v54;
    v23[1] = v24;
    uint64_t v38 = (void *)((char *)v23 + v27[6]);
    *uint64_t v38 = v50;
    v38[1] = v36;
    uint64_t v39 = v27[9];
    uint64_t v19 = v55;
    *((unsigned char *)v23 + v39) = v37;
    swift_storeEnumTagMultiPayload();
    uint64_t v40 = *(int *)(sub_10017DF08(&qword_100E66478) + 48);
    uint64_t v41 = (uint64_t)v53;
    v34(v53, v52, v51);
    sub_1006BB030(v9, (void (*)(void))type metadata accessor for NewsArticle);
    *(unsigned char *)(v41 + v40) = 0;
    uint64_t v42 = type metadata accessor for LocationComponentAction(0);
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0(v41, 0, 1, v42);
    sub_1006BB160(v41, (uint64_t)v19);
  }
  else
  {
    *(unsigned char *)uint64_t v23 = *(unsigned char *)(v57 + *(int *)(type metadata accessor for NewsArticleComponent() + 20));
    swift_storeEnumTagMultiPayload();
    uint64_t v43 = type metadata accessor for LocationComponentAction(0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 1, 1, v43);
    sub_1006BB030(v13, (void (*)(void))type metadata accessor for ArticleModel);
  }
  uint64_t v44 = *(void *)(v2 + 16);
  uint64_t v45 = *(void *)(v2 + 24);
  *(void *)a2 = v44;
  *(void *)(a2 + 8) = v45;
  *(void *)(a2 + 16) = 1937204590;
  *(void *)(a2 + 24) = 0xE400000000000000;
  *(unsigned char *)(a2 + 32) = 0;
  type metadata accessor for LocationComponentHeaderViewModel(0);
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  swift_storeEnumTagMultiPayload();
  uint64_t v46 = (int *)type metadata accessor for LocationComponentContainerViewModel();
  sub_1006BB1C8((uint64_t)v23, a2 + v46[5], (void (*)(void))type metadata accessor for NewsArticleComponentViewModel);
  type metadata accessor for LocationComponentViewModel();
  swift_storeEnumTagMultiPayload();
  *(_WORD *)(a2 + v46[6]) = 256;
  sub_1006BB160((uint64_t)v19, a2 + v46[7]);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1006BA9E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_100E62720 != -1) {
    swift_once();
  }
  sub_1006BB088();
  Configurable.setting<A>(_:)();
  if (v8 == 1)
  {
    uint64_t v4 = type metadata accessor for URL();
    return _s7Weather24LocationCompositionStateOwst_0(a2, 1, 1, v4);
  }
  else
  {
    uint64_t v6 = a1 + *(int *)(type metadata accessor for NewsArticle() + 36);
    uint64_t v7 = type metadata accessor for NewsChannel();
    return sub_1000F32E4(v6 + *(int *)(v7 + 24), a2);
  }
}

uint64_t sub_1006BAAF0@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v3 = type metadata accessor for NewsArticle();
  __chkstk_darwin(v3 - 8);
  sub_1001626E0();
  uint64_t v30 = v5 - v4;
  uint64_t v6 = sub_10017DF08(&qword_100E855B8);
  __chkstk_darwin(v6 - 8);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = type metadata accessor for ArticleModel();
  sub_100162E4C();
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v29 - v15;
  sub_10017DF08(&qword_100E855C8);
  uint64_t v17 = type metadata accessor for ArticlePlacementLocation();
  uint64_t v18 = *(void *)(v17 - 8);
  unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_100C251B0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v18 + 16))(v20 + v19, a1, v17);
  uint64_t v21 = sub_1001E870C((void *)v20);
  swift_setDeallocating();
  sub_1001A6D7C((void (*)(void))&type metadata accessor for ArticlePlacementLocation);
  sub_10043F684((uint64_t)v21, v9);
  swift_bridgeObjectRelease();
  if (_s7Weather24LocationCompositionStateOwet_0(v9, 1, v10) == 1)
  {
    sub_1006BAFD0(v9);
    uint64_t v22 = type metadata accessor for NewsArticleComponentViewModel(0);
    uint64_t v23 = (uint64_t)v31;
    uint64_t v24 = 1;
  }
  else
  {
    uint64_t v25 = v31;
    sub_1006BB1C8(v9, (uint64_t)v16, (void (*)(void))type metadata accessor for ArticleModel);
    sub_10069D6F4((uint64_t)v16, (uint64_t)v14);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = v30;
      sub_1006BB1C8((uint64_t)v14, v30, (void (*)(void))type metadata accessor for NewsArticle);
      sub_1006BAE74(v26, v25);
      sub_1006BB030(v26, (void (*)(void))type metadata accessor for NewsArticle);
      sub_1006BB030((uint64_t)v16, (void (*)(void))type metadata accessor for ArticleModel);
      uint64_t v22 = type metadata accessor for NewsArticleComponentViewModel(0);
      uint64_t v23 = (uint64_t)v25;
      uint64_t v24 = 0;
    }
    else
    {
      sub_1006BB030((uint64_t)v16, (void (*)(void))type metadata accessor for ArticleModel);
      sub_1006BB030((uint64_t)v14, (void (*)(void))type metadata accessor for ArticleModel);
      *(unsigned char *)uint64_t v25 = 0;
      uint64_t v27 = type metadata accessor for NewsArticleComponentViewModel(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v23 = (uint64_t)v25;
      uint64_t v24 = 0;
      uint64_t v22 = v27;
    }
  }
  return _s7Weather24LocationCompositionStateOwst_0(v23, v24, 1, v22);
}

uint64_t sub_1006BAE74@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v6 = (int *)type metadata accessor for NewsArticle();
  uint64_t v7 = a1 + v6[6];
  uint64_t v8 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
  sub_1000F32E4(v7, (uint64_t)a2 + v8[5]);
  uint64_t v9 = v6[8];
  uint64_t v10 = a1 + v6[9];
  uint64_t v12 = *(void *)(v10 + 16);
  uint64_t v11 = *(void *)(v10 + 24);
  uint64_t v13 = a1 + v9;
  uint64_t v14 = (char *)a2 + v8[7];
  uint64_t v15 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v14, v13, v15);
  uint64_t v16 = (uint64_t)a2 + v8[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1006BA9E8(a1, v16);
  *a2 = v5;
  a2[1] = v4;
  uint64_t v17 = (void *)((char *)a2 + v8[6]);
  *uint64_t v17 = v12;
  v17[1] = v11;
  *((unsigned char *)a2 + v8[9]) = 0;
  type metadata accessor for NewsArticleComponentViewModel(0);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1006BAFA0()
{
  swift_bridgeObjectRelease();
  sub_100180160();

  return swift_deallocClassInstance();
}

uint64_t sub_1006BAFD0(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E855B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1006BB030(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t sub_1006BB088()
{
  unint64_t result = qword_100E8C1B8;
  if (!qword_100E8C1B8)
  {
    type metadata accessor for NewsArticleComponentViewModelFactory();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8C1B8);
  }
  return result;
}

uint64_t sub_1006BB0D4()
{
  return sub_1001A6D7C((void (*)(void))&type metadata accessor for Tips.Action);
}

uint64_t sub_1006BB0EC()
{
  return sub_1006BB110(&qword_100E6B640);
}

uint64_t sub_1006BB0F8()
{
  return sub_1006BB110(&qword_100E6CCD8);
}

uint64_t sub_1006BB104()
{
  return sub_1006BB110(&qword_100E66E40);
}

uint64_t sub_1006BB110(uint64_t *a1)
{
  sub_10017DF08(a1);
  sub_100187FE0();
  sub_10017A758();
  sub_100180160();

  return swift_deallocClassInstance();
}

uint64_t sub_1006BB148()
{
  return sub_100126518(&qword_100E65F18);
}

uint64_t sub_1006BB154()
{
  return sub_100126518(&qword_100E78290);
}

uint64_t sub_1006BB160(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E7AF78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006BB1C8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1006BB228()
{
  return sub_100126518(&qword_100E8C1C0);
}

uint64_t sub_1006BB234()
{
  return sub_1001A6D7C((void (*)(void))&type metadata accessor for DynamicTypeSize);
}

uint64_t sub_1006BB24C()
{
  return sub_1001A6D7C((void (*)(void))&type metadata accessor for Location);
}

uint64_t sub_1006BB264(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for NotificationSubscription();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for NotificationSubscription.Location();
  uint64_t v8 = *(void *)(v71 - 8);
  uint64_t v9 = __chkstk_darwin(v71);
  uint64_t v65 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v73 = (char *)&v59 - v12;
  __chkstk_darwin(v11);
  uint64_t v78 = (char *)&v59 - v13;
  uint64_t v70 = type metadata accessor for Location();
  uint64_t v14 = __chkstk_darwin(v70);
  uint64_t v69 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v64 = (char *)&v59 - v17;
  __chkstk_darwin(v16);
  uint64_t v63 = (char *)&v59 - v19;
  uint64_t v77 = *(void *)(a1 + 16);
  if (!v77)
  {
    swift_bridgeObjectRelease();
    return (uint64_t)&_swiftEmptyArrayStorage;
  }
  uint64_t v76 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v75 = *(void *)(v5 + 72);
  uint64_t v20 = (void (**)(void, void))(v8 + 8);
  uint64_t v66 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v67 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v62 = v18;
  uint64_t v68 = (void (**)(char *, char *, uint64_t))(v18 + 32);
  uint64_t v59 = a1;
  swift_bridgeObjectRetain();
  uint64_t v21 = 0;
  uint64_t v60 = a2 + 7;
  uint64_t v74 = &_swiftEmptyArrayStorage;
  uint64_t v22 = v71;
  uint64_t v72 = v20;
  uint64_t v61 = v4;
  while (1)
  {
    uint64_t v79 = v21;
    uint64_t v23 = v78;
    uint64_t v81 = v76 + v75 * v21;
    NotificationSubscription.location.getter();
    NotificationSubscription.Location.kind.getter();
    uint64_t v80 = (void (*)(char *, uint64_t))*v20;
    v80(v23, v22);
    uint64_t v24 = Location.Identifier.Kind.rawValue.getter();
    uint64_t v26 = v25;
    BOOL v28 = v24 == Location.Identifier.Kind.rawValue.getter() && v26 == v27;
    if (v28)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v29 & 1) == 0) {
        goto LABEL_18;
      }
    }
    uint64_t v30 = v73;
    NotificationSubscription.location.getter();
    uint64_t v31 = NotificationSubscription.Location.id.getter();
    uint64_t v33 = v32;
    v80(v30, v22);
    uint64_t v34 = a2[2];
    if (v34)
    {
      BOOL v35 = a2[4] == v31 && a2[5] == v33;
      if (v35 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
      {
        swift_bridgeObjectRelease();
LABEL_17:
        uint64_t v20 = v72;
        goto LABEL_18;
      }
      if (v34 != 1) {
        break;
      }
    }
LABEL_29:
    swift_bridgeObjectRelease();
    uint64_t v45 = v81;
    char v46 = NotificationSubscription.precipitationEnabled.getter();
    (*v67)(v7, v45, v4);
    if (v46)
    {
      (*v66)(v7, v4);
      uint64_t v20 = v72;
LABEL_32:
      uint64_t v48 = v65;
      NotificationSubscription.location.getter();
      uint64_t v49 = v64;
      NotificationSubscription.Location.location.getter();
      v80(v48, v22);
      uint64_t v50 = *v68;
      uint64_t v51 = v63;
      uint64_t v52 = v70;
      (*v68)(v63, v49, v70);
      v50(v69, v51, v52);
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v53 = v62;
        uint64_t v54 = v74;
      }
      else
      {
        uint64_t v54 = (void *)sub_1001D262C(0, v74[2] + 1, 1, (uint64_t)v74);
        uint64_t v53 = v62;
      }
      uint64_t v4 = v61;
      uint64_t v37 = v79;
      unint64_t v56 = v54[2];
      unint64_t v55 = v54[3];
      if (v56 >= v55 >> 1)
      {
        uint64_t v58 = sub_1001D262C(v55 > 1, v56 + 1, 1, (uint64_t)v54);
        uint64_t v53 = v62;
        uint64_t v54 = (void *)v58;
      }
      v54[2] = v56 + 1;
      unint64_t v57 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
      uint64_t v74 = v54;
      v50((char *)v54 + v57 + *(void *)(v53 + 72) * v56, v69, v70);
      goto LABEL_37;
    }
    char v47 = NotificationSubscription.severeEnabled.getter();
    (*v66)(v7, v4);
    uint64_t v20 = v72;
    if (v47) {
      goto LABEL_32;
    }
LABEL_18:
    uint64_t v37 = v79;
LABEL_37:
    uint64_t v21 = v37 + 1;
    if (v21 == v77)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v74;
    }
  }
  uint64_t v38 = v60;
  uint64_t v39 = 1;
  while (1)
  {
    uint64_t v40 = v7;
    uint64_t v41 = v4;
    uint64_t v42 = a2;
    uint64_t v43 = v39 + 1;
    if (__OFADD__(v39, 1)) {
      break;
    }
    BOOL v44 = *(v38 - 1) == v31 && *v38 == v33;
    if (v44 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
      swift_bridgeObjectRelease();
      a2 = v42;
      uint64_t v4 = v41;
      uint64_t v7 = v40;
      uint64_t v22 = v71;
      goto LABEL_17;
    }
    v38 += 2;
    ++v39;
    BOOL v28 = v43 == v34;
    a2 = v42;
    uint64_t v4 = v41;
    uint64_t v7 = v40;
    uint64_t v22 = v71;
    if (v28) {
      goto LABEL_29;
    }
  }
  __break(1u);
  return result;
}

char *sub_1006BB8D4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_10017DF08(&qword_100E85428);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for NotificationSubscription.Location();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  char v29 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v27 = (char *)&v23 - v12;
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v14 = *(void *)(type metadata accessor for NotificationSubscription() - 8);
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v25 = v9;
    BOOL v28 = (void (**)(char *, char *, uint64_t))(v9 + 32);
    uint64_t v16 = *(void *)(v14 + 72);
    uint64_t v23 = a1;
    swift_bridgeObjectRetain();
    uint64_t v17 = (char *)&_swiftEmptyArrayStorage;
    uint64_t v26 = a2;
    uint64_t v24 = v16;
    while (1)
    {
      sub_1006BDA7C(v15, a2, (uint64_t)v7);
      if (v2) {
        break;
      }
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8) == 1)
      {
        sub_1001781AC((uint64_t)v7, &qword_100E85428);
      }
      else
      {
        uint64_t v18 = v27;
        uint64_t v19 = *v28;
        (*v28)(v27, v7, v8);
        v19(v29, v18, v8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v17 = (char *)sub_100092180(0, *((void *)v17 + 2) + 1, 1, (uint64_t)v17);
        }
        unint64_t v21 = *((void *)v17 + 2);
        unint64_t v20 = *((void *)v17 + 3);
        if (v21 >= v20 >> 1) {
          uint64_t v17 = (char *)sub_100092180(v20 > 1, v21 + 1, 1, (uint64_t)v17);
        }
        *((void *)v17 + 2) = v21 + 1;
        v19(&v17[((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v21], v29, v8);
        a2 = v26;
        uint64_t v16 = v24;
      }
      v15 += v16;
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v17;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return (char *)&_swiftEmptyArrayStorage;
  }
  return v17;
}

uint64_t sub_1006BBC04()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 56);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 96);
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1006BBC44()
{
  sub_1006BBC04();

  return swift_deallocClassInstance();
}

uint64_t sub_1006BBD1C(uint64_t result, uint64_t a2)
{
  switch((char)result)
  {
    case 1:
    case 3:
    case 4:
      sub_1006BCD54();
      uint64_t result = sub_1006BCDB0();
      break;
    case 2:
      uint64_t result = sub_10003B1D8(a2);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1006BBDE8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v44 = type metadata accessor for Location.Identifier();
  uint64_t v4 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v43 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SavedLocation();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for NotificationSubscription.Kind();
  uint64_t v39 = *(void *)(v10 - 8);
  uint64_t v40 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100E627D8 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = sub_1002102B0(v13, (uint64_t)qword_100F51EA0);
  swift_bridgeObjectRetain_n();
  v37[1] = v14;
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v41 = v2;
  uint64_t v38 = v12;
  if (v17)
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    char v46 = (void *)v42;
    *(_DWORD *)uint64_t v18 = 141558275;
    uint64_t v45 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v18 + 12) = 2081;
    v37[0] = v18 + 14;
    swift_bridgeObjectRetain();
    uint64_t v19 = Array.description.getter();
    unint64_t v21 = v20;
    swift_bridgeObjectRelease();
    uint64_t v45 = sub_10016414C(v19, v21, (uint64_t *)&v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Synchronizing notification subscriptions with locations: %{private,mask.hash}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v22 = *(void *)(a1 + 16);
  uint64_t v23 = &_swiftEmptyArrayStorage;
  if (v22)
  {
    char v46 = &_swiftEmptyArrayStorage;
    sub_1001EA6A0(0, v22, 0);
    uint64_t v24 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v42 = *(void *)(v7 + 72);
    uint64_t v25 = (void (**)(char *, uint64_t))(v4 + 8);
    do
    {
      sub_100166618(v24, (uint64_t)v9, (void (*)(void))&type metadata accessor for SavedLocation);
      uint64_t v26 = v43;
      SavedLocation.identifier.getter();
      uint64_t v27 = Location.Identifier.id.getter();
      uint64_t v29 = v28;
      (*v25)(v26, v44);
      sub_100158EDC((uint64_t)v9, (void (*)(void))&type metadata accessor for SavedLocation);
      uint64_t v23 = v46;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001EA6A0(0, v23[2] + 1, 1);
        uint64_t v23 = v46;
      }
      unint64_t v31 = v23[2];
      unint64_t v30 = v23[3];
      if (v31 >= v30 >> 1)
      {
        sub_1001EA6A0(v30 > 1, v31 + 1, 1);
        uint64_t v23 = v46;
      }
      void v23[2] = v31 + 1;
      uint64_t v32 = &v23[2 * v31];
      v32[4] = v27;
      v32[5] = v29;
      v24 += v42;
      --v22;
    }
    while (v22);
  }
  sub_1001B1E64((void *)(v41 + 16), *(void *)(v41 + 40));
  uint64_t v33 = v38;
  static NotificationSubscription.Kind.all.getter();
  uint64_t v34 = dispatch thunk of NotificationSubscriptionManagerType.subscriptions(of:)();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v33, v40);
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_1006BB264(v34, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v35 + 16)) {
    sub_1006BE560(v35);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1006BC54C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for NotificationSubscription.Kind();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64((void *)(v1 + 16), *(void *)(v1 + 40));
  static NotificationSubscription.Kind.all.getter();
  uint64_t v7 = dispatch thunk of NotificationSubscriptionManagerType.subscriptions(of:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1006BB8D4(v7, a1);
  swift_bridgeObjectRelease();
  if (!*((void *)v8 + 2)) {
    return swift_bridgeObjectRelease();
  }
  sub_1000395EC((uint64_t)v8);
  swift_bridgeObjectRelease();
  sub_1006BCD54();
  return sub_1006BCDB0();
}

uint64_t sub_1006BC908(uint64_t a1, uint64_t a2, void (*a3)(void), void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a5, uint64_t a6)
{
  v24[1] = a5;
  v24[2] = a6;
  a3(0);
  sub_100179C0C();
  v24[5] = v11;
  v24[6] = v10;
  __chkstk_darwin(v10);
  v24[4] = (char *)v24 - v12;
  type metadata accessor for NotificationSubscription.Kind();
  sub_100179C0C();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_1001626E0();
  uint64_t v16 = v6[5];
  uint64_t v17 = v6[6];
  sub_1001B1E64(v6 + 2, v16);
  v24[3] = a1;
  a4(a2, a1, v16, v17);
  static NotificationSubscription.Kind.precipitation.getter();
  char v18 = NotificationSubscription.Kind.containsAny(_:)();
  uint64_t v19 = *(void (**)(uint64_t))(v14 + 8);
  uint64_t v20 = sub_10017E1D4();
  v19(v20);
  if (v18) {
    sub_1006BCD54();
  }
  static NotificationSubscription.Kind.severe.getter();
  char v21 = NotificationSubscription.Kind.containsAny(_:)();
  uint64_t v22 = sub_10017E1D4();
  uint64_t result = ((uint64_t (*)(uint64_t))v19)(v22);
  if (v21) {
    return sub_1006BCDB0();
  }
  return result;
}

uint64_t sub_1006BCD54()
{
  swift_retain();
  Debouncer.execute(_:)();

  return swift_release();
}

uint64_t sub_1006BCDB0()
{
  swift_retain();
  Debouncer.execute(_:)();

  return swift_release();
}

void sub_1006BCE0C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  uint64_t v68 = *(void *)(v6 - 8);
  uint64_t v69 = v6;
  __chkstk_darwin(v6);
  uint64_t v67 = (char *)v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E8C288);
  __chkstk_darwin(v8 - 8);
  uint64_t v73 = (char *)v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for NotificationSubscription();
  uint64_t v71 = *(void *)(v10 - 8);
  uint64_t v72 = v10;
  __chkstk_darwin(v10);
  uint64_t v70 = (char *)v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = type metadata accessor for NotificationSubscription.Kind();
  uint64_t v12 = *(void *)(v75 - 8);
  uint64_t v13 = __chkstk_darwin(v75);
  uint64_t v15 = (char *)v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v76 = (uint64_t)v65 - v16;
  uint64_t v17 = sub_10017DF08(&qword_100EAC4A0);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for LocationModel();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a3 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
  uint64_t v25 = *(void *)(v24 + *(int *)(type metadata accessor for LocationsState() + 40));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v77 = a1;
  sub_100A039EC(a1, a2, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20) == 1)
  {
    sub_1001781AC((uint64_t)v19, &qword_100EAC4A0);
    if (qword_100E627D8 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_1002102B0(v26, (uint64_t)qword_100F51EA0);
    swift_bridgeObjectRetain_n();
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 141558275;
      uint64_t v78 = 1752392040;
      v79[0] = v30;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v29 + 12) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v78 = sub_10016414C(v77, a2, v79);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Failed to obtain a Location instance of a location for which next hour forecasts are not available. locationID=%{private,mask.hash}s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return;
  }
  uint64_t v66 = v21;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v19, v20);
  LocationModel.kind.getter();
  uint64_t v31 = Location.Identifier.Kind.rawValue.getter();
  uint64_t v33 = v32;
  if (v31 == Location.Identifier.Kind.rawValue.getter() && v33 == v34)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  char v36 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v36)
  {
LABEL_15:
    (*(void (**)(char *, uint64_t))(v66 + 8))(v23, v20);
    return;
  }
  uint64_t v37 = v76;
  sub_1006BEC08(v76);
  static NotificationSubscription.Kind.none.getter();
  sub_1006BF8B4(&qword_100E8C298, 255, (void (*)(uint64_t))&type metadata accessor for NotificationSubscription.Kind);
  uint64_t v38 = v75;
  char v39 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  uint64_t v41 = v12 + 8;
  uint64_t v40 = v42;
  v42((uint64_t)v15, v38);
  if (v39)
  {
    v40(v37, v38);
    goto LABEL_15;
  }
  v65[0] = v40;
  v65[1] = v41;
  sub_1001B1E64((void *)(v74 + 16), *(void *)(v74 + 40));
  LocationModel.id.getter();
  uint64_t v43 = (uint64_t)v73;
  dispatch thunk of NotificationSubscriptionManagerType.subscription(with:)();
  swift_bridgeObjectRelease();
  uint64_t v44 = v72;
  if (_s7Weather24LocationCompositionStateOwet_0(v43, 1, v72) == 1)
  {
    ((void (*)(uint64_t, uint64_t))v65[0])(v76, v75);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v23, v20);
    sub_1001781AC(v43, &qword_100E8C288);
  }
  else
  {
    uint64_t v45 = v70;
    uint64_t v46 = v71;
    (*(void (**)(char *, uint64_t, uint64_t))(v71 + 32))(v70, v43, v44);
    NotificationSubscription.kind.getter();
    uint64_t v47 = v76;
    char v48 = NotificationSubscription.Kind.containsAny(_:)();
    uint64_t v49 = v15;
    uint64_t v50 = v75;
    uint64_t v51 = (void (*)(uint64_t, uint64_t))v65[0];
    ((void (*)(char *, uint64_t))v65[0])(v49, v75);
    if (v48)
    {
      uint64_t v52 = v50;
      uint64_t v53 = v66;
      if (qword_100E627D8 != -1) {
        swift_once();
      }
      uint64_t v54 = type metadata accessor for Logger();
      sub_1002102B0(v54, (uint64_t)qword_100F51EA0);
      swift_bridgeObjectRetain_n();
      unint64_t v55 = Logger.logObject.getter();
      os_log_type_t v56 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v55, v56))
      {
        uint64_t v57 = swift_slowAlloc();
        uint64_t v58 = swift_slowAlloc();
        *(_DWORD *)uint64_t v57 = 141558275;
        uint64_t v78 = 1752392040;
        v79[0] = v58;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v57 + 12) = 2081;
        swift_bridgeObjectRetain();
        uint64_t v78 = sub_10016414C(v77, a2, v79);
        uint64_t v59 = v75;
        uint64_t v53 = v66;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v55, v56, "A location was found for which the user had previously subscribed to recieve notifications, but which currently does not support this. Quitely unsubscribe on behalf of the user. locationID=%{private,mask.hash}s", (uint8_t *)v57, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v52 = v59;
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v62 = v70;
      uint64_t v61 = v71;
      uint64_t v63 = (uint64_t)v67;
      LocationModel.identifier.getter();
      uint64_t v64 = v76;
      sub_1006BC908(v63, v76, (void (*)(void))&type metadata accessor for Location.Identifier, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))&dispatch thunk of NotificationSubscriptionManagerType.unsubscribe(from:for:), (uint64_t)&Location.Identifier.id.getter, (uint64_t)"Failed to unsubscribe from notifications for location: %{private,mask.hash}s with error: %{public}s %@");
      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v63, v69);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v72);
      ((void (*)(uint64_t, uint64_t))v65[0])(v64, v52);
      (*(void (**)(char *, uint64_t))(v53 + 8))(v23, v20);
    }
    else
    {
      uint64_t v60 = v66;
      (*(void (**)(char *, uint64_t))(v46 + 8))(v45, v72);
      v51(v47, v50);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v23, v20);
    }
  }
}

uint64_t sub_1006BDA7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v115 = a3;
  uint64_t v111 = a2;
  uint64_t v4 = sub_10017DF08(&qword_100E63508);
  __chkstk_darwin(v4 - 8);
  uint64_t v104 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E639E8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v100 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v99 = (char *)&v91 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v105 = (void (*)(char *, uint64_t))((char *)&v91 - v12);
  __chkstk_darwin(v11);
  uint64_t v106 = (char *)&v91 - v13;
  uint64_t v14 = type metadata accessor for Location();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v107 = (void (*)(char *, uint64_t, uint64_t))v14;
  uint64_t v108 = v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v98 = (char *)&v91 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v101 = (char *)&v91 - v19;
  __chkstk_darwin(v18);
  uint64_t v109 = (char *)&v91 - v20;
  uint64_t v21 = sub_10017DF08(&qword_100EAC4A0);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = type metadata accessor for LocationModel();
  uint64_t v110 = *(void *)(v113 - 8);
  uint64_t v24 = __chkstk_darwin(v113);
  uint64_t v103 = (char *)&v91 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v114 = (char *)&v91 - v26;
  uint64_t v117 = type metadata accessor for NotificationSubscription.Location();
  uint64_t v27 = *(void *)(v117 - 8);
  uint64_t v28 = __chkstk_darwin(v117);
  uint64_t v102 = (char *)&v91 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v91 - v31;
  __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v91 - v33;
  uint64_t v35 = type metadata accessor for NotificationSubscription();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v97 = (char *)&v91 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v40 = (char *)&v91 - v39;
  char v41 = NotificationSubscription.precipitationEnabled.getter();
  uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 16);
  uint64_t v116 = a1;
  uint64_t v96 = v36 + 16;
  uint64_t v95 = v42;
  v42(v40, a1, v35);
  if (v41)
  {
    uint64_t v43 = *(void (**)(char *, uint64_t))(v36 + 8);
    v43(v40, v35);
  }
  else
  {
    char v44 = NotificationSubscription.severeEnabled.getter();
    uint64_t v43 = *(void (**)(char *, uint64_t))(v36 + 8);
    v43(v40, v35);
    if ((v44 & 1) == 0)
    {
LABEL_24:
      uint64_t v77 = 1;
      uint64_t v78 = v115;
      return _s7Weather24LocationCompositionStateOwst_0(v78, v77, 1, v117);
    }
  }
  NotificationSubscription.location.getter();
  NotificationSubscription.Location.kind.getter();
  uint64_t v46 = *(void (**)(char *, uint64_t))(v27 + 8);
  uint64_t v45 = v27 + 8;
  long long v112 = v46;
  v46(v34, v117);
  uint64_t v47 = Location.Identifier.Kind.rawValue.getter();
  uint64_t v49 = v48;
  if (v47 == Location.Identifier.Kind.rawValue.getter() && v49 == v50)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v52 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v52 & 1) == 0) {
      goto LABEL_24;
    }
  }
  NotificationSubscription.location.getter();
  uint64_t v53 = NotificationSubscription.Location.id.getter();
  uint64_t v55 = v54;
  v112(v32, v117);
  sub_100A039EC(v53, v55, v111);
  swift_bridgeObjectRelease();
  uint64_t v56 = v113;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v113) == 1)
  {
    uint64_t v57 = &qword_100EAC4A0;
    uint64_t v58 = (uint64_t)v23;
LABEL_13:
    sub_1001781AC(v58, v57);
    goto LABEL_24;
  }
  uint64_t v93 = v43;
  uint64_t v92 = v35;
  uint64_t v111 = v45;
  uint64_t v94 = v36;
  uint64_t v59 = v110;
  (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v114, v23, v56);
  uint64_t v60 = (uint64_t)v104;
  LocationModel.locationOfInterest.getter();
  uint64_t v61 = type metadata accessor for LocationOfInterest();
  if (_s7Weather24LocationCompositionStateOwet_0(v60, 1, v61) == 1)
  {
    sub_1001781AC(v60, &qword_100E63508);
    uint64_t v62 = 1;
    uint64_t v64 = (uint64_t)v107;
    uint64_t v63 = v108;
    uint64_t v65 = v109;
    uint64_t v66 = (uint64_t)v105;
  }
  else
  {
    uint64_t v66 = (uint64_t)v105;
    LocationOfInterest.location.getter();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v61 - 8) + 8))(v60, v61);
    uint64_t v62 = 0;
    uint64_t v64 = (uint64_t)v107;
    uint64_t v63 = v108;
    uint64_t v65 = v109;
  }
  _s7Weather24LocationCompositionStateOwst_0(v66, v62, 1, v64);
  uint64_t v67 = v103;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v103, v114, v56);
  if (_s7Weather24LocationCompositionStateOwet_0(v66, 1, v64) == 1)
  {
    uint64_t v68 = (uint64_t)v106;
    LocationModel.location.getter();
    uint64_t v69 = *(void (**)(char *, uint64_t))(v59 + 8);
    v69(v67, v56);
    sub_1001781AC(v66, &qword_100E639E8);
    if (_s7Weather24LocationCompositionStateOwet_0(v68, 1, v64) == 1)
    {
      v69(v114, v56);
      uint64_t v57 = &qword_100E639E8;
      uint64_t v58 = v68;
      goto LABEL_13;
    }
    uint64_t v71 = v63;
    uint64_t v70 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 32);
    uint64_t v65 = v109;
  }
  else
  {
    uint64_t v69 = *(void (**)(char *, uint64_t))(v59 + 8);
    v69(v67, v56);
    uint64_t v70 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 32);
    uint64_t v68 = (uint64_t)v106;
    v70(v106, v66, v64);
    _s7Weather24LocationCompositionStateOwst_0(v68, 0, 1, v64);
    uint64_t v71 = v63;
  }
  uint64_t v107 = v70;
  v70(v65, v68, v64);
  Location.coordinate.getter();
  uint64_t v72 = v102;
  uint64_t v73 = v116;
  NotificationSubscription.location.getter();
  uint64_t v74 = v101;
  NotificationSubscription.Location.locationOverride.getter();
  v112(v72, v117);
  Location.coordinate.getter();
  uint64_t v75 = v65;
  uint64_t v76 = *(void (**)(char *, uint64_t))(v71 + 8);
  v76(v74, v64);
  if (static CLLocationCoordinate2D.== infix(_:_:)())
  {
    v76(v75, v64);
    v69(v114, v113);
    goto LABEL_24;
  }
  uint64_t v105 = v76;
  uint64_t v106 = (char *)v69;
  uint64_t v80 = v107;
  uint64_t v81 = (uint64_t)v99;
  LocationModel.location.getter();
  uint64_t v82 = v97;
  uint64_t v83 = v92;
  v95(v97, v73, v92);
  uint64_t v84 = v108;
  int v85 = _s7Weather24LocationCompositionStateOwet_0(v81, 1, v64);
  uint64_t v86 = v98;
  if (v85 == 1)
  {
    uint64_t v87 = v102;
    NotificationSubscription.location.getter();
    NotificationSubscription.Location.location.getter();
    v112(v87, v117);
    v93(v82, v83);
    sub_1001781AC(v81, &qword_100E639E8);
  }
  else
  {
    v93(v82, v83);
    v80(v86, v81, v64);
  }
  uint64_t v88 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
  uint64_t v89 = (uint64_t)v100;
  uint64_t v90 = v109;
  v88(v100, v109, v64);
  _s7Weather24LocationCompositionStateOwst_0(v89, 0, 1, v64);
  uint64_t v78 = v115;
  NotificationSubscription.Location.init(location:locationOverride:)();
  v105(v90, v64);
  ((void (*)(char *, uint64_t))v106)(v114, v113);
  uint64_t v77 = 0;
  return _s7Weather24LocationCompositionStateOwst_0(v78, v77, 1, v117);
}

uint64_t sub_1006BE560(uint64_t a1)
{
  uint64_t v32 = type metadata accessor for Location.Identifier();
  uint64_t v3 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for NotificationSubscription.Kind();
  uint64_t v6 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Location();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  __chkstk_darwin(v11);
  uint64_t v23 = (char *)v22 - v13;
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    v22[1] = v12;
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    uint64_t v15 = v10 + 16;
    uint64_t v30 = v16;
    unint64_t v17 = (*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64);
    uint64_t v35 = v8;
    uint64_t v18 = a1 + v17;
    uint64_t v27 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v28 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v25 = v1 + 2;
    uint64_t v26 = (void (**)(char *, uint64_t))(v15 - 8);
    uint64_t v24 = *(void *)(v15 + 56);
    v22[2] = a1;
    swift_bridgeObjectRetain();
    uint64_t v19 = v23;
    uint64_t v29 = v15;
    do
    {
      uint64_t v33 = v14;
      v30(v19, v18, v9);
      uint64_t v20 = v1[5];
      uint64_t v34 = v1[6];
      sub_1001B1E64(v25, v20);
      static NotificationSubscription.Kind.all.getter();
      Location.identifier.getter();
      dispatch thunk of NotificationSubscriptionManagerType.unsubscribe(from:for:)();
      (*v27)(v5, v32);
      (*v28)(v35, v31);
      (*v26)(v19, v9);
      v18 += v24;
      uint64_t v14 = v33 - 1;
    }
    while (v33 != 1);
    swift_bridgeObjectRelease();
  }
  sub_1006BCD54();
  return sub_1006BCDB0();
}

uint64_t sub_1006BEC08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for NotificationSubscription.Kind();
  uint64_t v14 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E8C2A0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = &_swiftEmptyArrayStorage;
  sub_1006BF8B4(&qword_100E86D98, 255, (void (*)(uint64_t))&type metadata accessor for NotificationSubscription.Kind);
  sub_10017DF08(&qword_100E8C2A8);
  sub_1006BF8FC();
  uint64_t v15 = a1;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10013F4E8();
  char v9 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
    static NotificationSubscription.Kind.precipitation.getter();
    sub_1006BEEEC((uint64_t)v4, (uint64_t)v7);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v2);
    sub_1001781AC((uint64_t)v7, &qword_100E8C2A0);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10013F4D0();
  char v11 = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
  {
    static NotificationSubscription.Kind.severe.getter();
    sub_1006BEEEC((uint64_t)v4, (uint64_t)v7);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v2);
    return sub_1001781AC((uint64_t)v7, &qword_100E8C2A0);
  }
  return result;
}

uint64_t sub_1006BEEEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for NotificationSubscription.Kind();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  char v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v16 - v11;
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v13(v10, v3, v6);
  sub_1006BF8B4(&qword_100E86D98, 255, (void (*)(uint64_t))&type metadata accessor for NotificationSubscription.Kind);
  dispatch thunk of SetAlgebra.intersection(_:)();
  v13(v10, a1, v6);
  dispatch thunk of SetAlgebra.formUnion(_:)();
  if (dispatch thunk of SetAlgebra.isEmpty.getter())
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    uint64_t v14 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a2, v12, v6);
    uint64_t v14 = 0;
  }
  return _s7Weather24LocationCompositionStateOwst_0(a2, v14, 1, v6);
}

uint64_t sub_1006BF0D0(uint64_t a1)
{
  uint64_t v2 = *v1;
  *v1 |= a1;
  return v2 & a1;
}

void sub_1006BF0E8()
{
  sub_10017DF08((uint64_t *)&unk_100E73CA0);
  firstly<A>(closure:)();
  uint64_t v0 = (void *)zalgo.getter();
  Promise.then<A>(on:closure:)();
  swift_release();

  id v1 = (id)zalgo.getter();
  Promise.error(on:closure:)();
  swift_release();
  swift_release();
}

void sub_1006BF1D0(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100E627D8 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_1002102B0(v5, (uint64_t)qword_100F51EA0);
  sub_10006DF38(a1, (uint64_t)v4, (uint64_t *)&unk_100E73CA0);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446210;
    uint64_t v9 = sub_100633140();
    v11[1] = sub_10016414C(v9, v10, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1001781AC((uint64_t)v4, (uint64_t *)&unk_100E73CA0);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Next fetch attempt scheduled for: %{public}s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1001781AC((uint64_t)v4, (uint64_t *)&unk_100E73CA0);
  }
}

void sub_1006BF3E0(uint64_t a1)
{
}

void sub_1006BF3EC()
{
  firstly<A>(closure:)();
  id v0 = (id)zalgo.getter();
  Promise.error(on:closure:)();
  swift_release();
  swift_release();
}

uint64_t sub_1006BF480(void *a1, const char *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (qword_100E627D8 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1002102B0(v6, (uint64_t)qword_100F51EA0);
  os_log_type_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, a2, v9, 2u);
    swift_slowDealloc();
  }

  unint64_t v10 = a1 + 7;
  uint64_t v12 = a1[10];
  uint64_t v11 = a1[11];
  sub_1001B1E64(v10, v12);
  return a3(v12, v11);
}

void sub_1006BF59C(uint64_t a1)
{
}

void sub_1006BF5A8(uint64_t a1, const char *a2)
{
  if (qword_100E627D8 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_1002102B0(v3, (uint64_t)qword_100F51EA0);
  swift_errorRetain();
  swift_errorRetain();
  swift_errorRetain();
  swift_errorRetain();
  oslog = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446466;
    swift_getErrorValue();
    uint64_t v7 = Error.logSafeDescription.getter();
    sub_10016414C(v7, v8, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v5 + 12) = 2112;
    swift_errorRetain();
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v6 = v10;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v4, a2, (uint8_t *)v5, 0x16u);
    sub_10017DF08(&qword_100EAC3F0);
    swift_arrayDestroy();
    sub_100162EE0();
    swift_arrayDestroy();
    sub_100162EE0();
    sub_100162EE0();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
}

void sub_1006BF834()
{
}

uint64_t sub_1006BF83C()
{
  return sub_1006BF480(v0, "Requesting rescheduling of notification subscription fetching", (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of NotificationsManagerProxyType.schedule());
}

void sub_1006BF874()
{
}

uint64_t sub_1006BF87C()
{
  return sub_1006BF480(v0, "Requesting validation of channel subscriptions", (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of NotificationsManagerProxyType.validate());
}

uint64_t sub_1006BF8B4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1006BF8FC()
{
  unint64_t result = qword_100E8C2B0;
  if (!qword_100E8C2B0)
  {
    sub_10018C6DC(&qword_100E8C2A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8C2B0);
  }
  return result;
}

uint64_t sub_1006BF954(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *(void *)a1 = *a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[4];
    char v10 = *((unsigned char *)a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100195B7C(v9, v10);
    *(void *)(a1 + 32) = v9;
    *(unsigned char *)(a1 + 40) = v10;
    uint64_t v11 = a2[6];
    LOBYTE(v9) = *((unsigned char *)a2 + 56);
    sub_100195B7C(v11, v9);
    *(void *)(a1 + 48) = v11;
    *(unsigned char *)(a1 + 56) = v9;
    uint64_t v12 = a2[8];
    LOBYTE(v9) = *((unsigned char *)a2 + 72);
    sub_100195B7C(v12, v9);
    *(void *)(a1 + 64) = v12;
    *(unsigned char *)(a1 + 72) = v9;
    uint64_t v13 = *(int *)(a3 + 32);
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1006BFAE8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10018F6D8(*(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  sub_10018F6D8(*(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
  sub_10018F6D8(*(void *)(a1 + 64), *(unsigned char *)(a1 + 72));
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ColorSchemeContrast();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_1006BFBCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 32);
  char v9 = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100195B7C(v8, v9);
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v9;
  uint64_t v10 = *(void *)(a2 + 48);
  LOBYTE(v8) = *(unsigned char *)(a2 + 56);
  sub_100195B7C(v10, v8);
  *(void *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 56) = v8;
  uint64_t v11 = *(void *)(a2 + 64);
  LOBYTE(v8) = *(unsigned char *)(a2 + 72);
  sub_100195B7C(v11, v8);
  *(void *)(a1 + 64) = v11;
  *(unsigned char *)(a1 + 72) = v8;
  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    *uint64_t v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1006BFD08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  char v7 = *(unsigned char *)(a2 + 40);
  sub_100195B7C(v6, v7);
  uint64_t v8 = *(void *)(a1 + 32);
  char v9 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v7;
  sub_10018F6D8(v8, v9);
  uint64_t v10 = *(void *)(a2 + 48);
  char v11 = *(unsigned char *)(a2 + 56);
  sub_100195B7C(v10, v11);
  uint64_t v12 = *(void *)(a1 + 48);
  char v13 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 56) = v11;
  sub_10018F6D8(v12, v13);
  uint64_t v14 = *(void *)(a2 + 64);
  char v15 = *(unsigned char *)(a2 + 72);
  sub_100195B7C(v14, v15);
  uint64_t v16 = *(void *)(a1 + 64);
  char v17 = *(unsigned char *)(a1 + 72);
  *(void *)(a1 + 64) = v14;
  *(unsigned char *)(a1 + 72) = v15;
  sub_10018F6D8(v16, v17);
  if (a1 != a2)
  {
    uint64_t v18 = *(int *)(a3 + 32);
    uint64_t v19 = (void *)(a1 + v18);
    uint64_t v20 = (void *)(a2 + v18);
    sub_1000F3400(a1 + v18, &qword_100E66E50);
    sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      void *v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1006BFEA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = (const void *)(a2 + v5);
  char v7 = (void *)(a1 + v5);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v8 = sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v6, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1006BFFA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  char v8 = *(unsigned char *)(a2 + 40);
  uint64_t v9 = *(void *)(a1 + 32);
  char v10 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v8;
  sub_10018F6D8(v9, v10);
  char v11 = *(unsigned char *)(a2 + 56);
  uint64_t v12 = *(void *)(a1 + 48);
  char v13 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = v11;
  sub_10018F6D8(v12, v13);
  char v14 = *(unsigned char *)(a2 + 72);
  uint64_t v15 = *(void *)(a1 + 64);
  char v16 = *(unsigned char *)(a1 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = v14;
  sub_10018F6D8(v15, v16);
  if (a1 != a2)
  {
    uint64_t v17 = *(int *)(a3 + 32);
    uint64_t v18 = (void *)(a1 + v17);
    uint64_t v19 = (const void *)(a2 + v17);
    sub_1000F3400(a1 + v17, &qword_100E66E50);
    uint64_t v20 = sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1006C0108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006C011C);
}

uint64_t sub_1006C011C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10017DF08(&qword_100E6D908);
    uint64_t v9 = a1 + *(int *)(a3 + 32);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_1006C01A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006C01BC);
}

uint64_t sub_1006C01BC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10017DF08(&qword_100E6D908);
    uint64_t v8 = v5 + *(int *)(a4 + 32);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for DetailComponentHeaderView()
{
  uint64_t result = qword_100E8C310;
  if (!qword_100E8C310) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1006C0288()
{
  sub_10000F5F8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1006C032C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006C0348@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static VerticalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v3 = sub_10017DF08(&qword_100E8C358);
  return sub_1006C0394(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_1006C0394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v81 = a1;
  uint64_t v100 = a2;
  uint64_t v98 = type metadata accessor for BlendMode();
  uint64_t v97 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  uint64_t v96 = (char *)&v74 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = type metadata accessor for DetailComponentHeaderView() - 8;
  __chkstk_darwin(v89);
  uint64_t v99 = (uint64_t)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v83 = (char *)&v74 - v5;
  uint64_t v87 = type metadata accessor for ColorSchemeContrast();
  uint64_t v86 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  int v85 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v84 = (char *)&v74 - v8;
  uint64_t v9 = sub_10017DF08(&qword_100E65370);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_10017DF08(&qword_100E65378);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E8C360);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_10017DF08(&qword_100E8C368);
  __chkstk_darwin(v88);
  uint64_t v90 = (uint64_t)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_10017DF08(&qword_100E8C370);
  __chkstk_darwin(v94);
  uint64_t v92 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10017DF08(&qword_100E8C378);
  __chkstk_darwin(v22 - 8);
  uint64_t v95 = (uint64_t)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v91 = (char *)&v74 - v25;
  __chkstk_darwin(v26);
  uint64_t v93 = (uint64_t)&v74 - v27;
  uint64_t v28 = static VerticalAlignment.center.getter();
  sub_1006C0D38((uint64_t)__src);
  uint64_t v30 = __src[0];
  uint64_t v29 = __src[1];
  uint64_t v31 = __src[2];
  uint64_t v77 = __src[3];
  uint64_t v76 = __src[4];
  int v80 = LOBYTE(__src[5]);
  uint64_t v79 = __src[6];
  uint64_t v78 = __src[7];
  uint64_t v32 = __src[8];
  uint64_t v75 = __src[10];
  uint64_t v33 = __src[11];
  char v34 = __src[12];
  uint64_t v35 = __src[13];
  char v104 = 0;
  char v103 = __src[5];
  char v102 = __src[9];
  char v101 = __src[14];
  __src[0] = v28;
  __src[1] = 0x4010000000000000;
  LOBYTE(__src[2]) = 0;
  __src[3] = v30;
  __src[4] = v29;
  __src[5] = v31;
  __src[6] = v77;
  __src[7] = v76;
  LOBYTE(__src[8]) = v80;
  __src[9] = v79;
  __src[10] = v78;
  __src[11] = v32;
  LOBYTE(__src[12]) = v102;
  void __src[13] = v75;
  __src[14] = v33;
  LOBYTE(__src[15]) = v34;
  BYTE1(__src[15]) = BYTE1(__src[12]);
  __src[16] = v35;
  LOBYTE(__src[17]) = v101;
  uint64_t v36 = enum case for Text.Case.uppercase(_:);
  uint64_t v37 = type metadata accessor for Text.Case();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 104))(v15, v36, v37);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v37);
  uint64_t KeyPath = swift_getKeyPath();
  sub_1000F350C((uint64_t)v15, (uint64_t)v12 + *(int *)(v10 + 36), &qword_100E65378);
  *uint64_t v12 = KeyPath;
  uint64_t v39 = *(int *)(v17 + 44);
  uint64_t v40 = (uint64_t)v83;
  sub_1000F350C((uint64_t)v12, (uint64_t)&v19[v39], &qword_100E65370);
  uint64_t v82 = v19;
  memcpy(v19, __src, 0x89uLL);
  sub_1006C0F64((uint64_t)__src);
  sub_1000F3400((uint64_t)v12, &qword_100E65370);
  uint64_t v41 = (uint64_t)v15;
  uint64_t v42 = v81;
  sub_1000F3400(v41, &qword_100E65378);
  swift_release();
  swift_release();
  swift_release();
  sub_100191924(v77, v76, v80);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v43 = v84;
  sub_10014BB38();
  uint64_t v44 = v86;
  uint64_t v45 = v85;
  uint64_t v46 = v87;
  (*(void (**)(char *, void, uint64_t))(v86 + 104))(v85, enum case for ColorSchemeContrast.increased(_:), v87);
  uint64_t v47 = v45;
  LOBYTE(v45) = static ColorSchemeContrast.== infix(_:_:)();
  uint64_t v48 = *(void (**)(char *, uint64_t))(v44 + 8);
  v48(v47, v46);
  v48(v43, v46);
  sub_1006C0FFC(v42, v40);
  if (v45)
  {
    sub_1006C1060(v40);
LABEL_4:
    int v53 = static HierarchicalShapeStyle.primary.getter();
    goto LABEL_6;
  }
  uint64_t v49 = *(void *)(v40 + 64);
  char v50 = *(unsigned char *)(v40 + 72);
  sub_100195B7C(v49, v50);
  sub_100149AE8();
  char v52 = v51;
  sub_10018F6D8(v49, v50);
  sub_1006C1060(v40);
  if (v52) {
    goto LABEL_4;
  }
  int v53 = static HierarchicalShapeStyle.tertiary.getter();
LABEL_6:
  int v54 = v53;
  uint64_t v55 = v94;
  uint64_t v56 = (uint64_t)v92;
  uint64_t v57 = (uint64_t)v82;
  uint64_t v58 = v90;
  sub_1000F350C((uint64_t)v82, v90, &qword_100E8C360);
  *(_DWORD *)(v58 + *(int *)(v88 + 36)) = v54;
  sub_1000F3400(v57, &qword_100E8C360);
  uint64_t v59 = v97;
  uint64_t v60 = v96;
  uint64_t v61 = v98;
  (*(void (**)(char *, void, uint64_t))(v97 + 104))(v96, enum case for BlendMode.plusLighter(_:), v98);
  (*(void (**)(uint64_t, char *, uint64_t))(v59 + 16))(v56 + *(int *)(v55 + 36), v60, v61);
  sub_1000F350C(v58, v56, &qword_100E8C368);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
  sub_1000F3400(v58, &qword_100E8C368);
  uint64_t v62 = *(void *)(v42 + 32);
  LOBYTE(v61) = *(unsigned char *)(v42 + 40);
  sub_100195B7C(v62, v61);
  sub_100149AE8();
  LOBYTE(v59) = v63;
  sub_10018F6D8(v62, v61);
  uint64_t v64 = v42;
  uint64_t v65 = v99;
  sub_1006C0FFC(v64, v99);
  if ((v59 & 1) == 0)
  {
    uint64_t v66 = *(void *)(v65 + 48);
    char v67 = *(unsigned char *)(v65 + 56);
    sub_100195B7C(v66, v67);
    sub_100149AE8();
    sub_10018F6D8(v66, v67);
  }
  sub_1006C1060(v65);
  sub_1006C10BC();
  uint64_t v68 = (uint64_t)v91;
  View.accessibilityHidden(_:)();
  sub_1000F3400(v56, &qword_100E8C370);
  uint64_t v69 = v93;
  sub_1006C129C(v68, v93);
  uint64_t v70 = v95;
  sub_1000F350C(v69, v95, &qword_100E8C378);
  uint64_t v71 = v100;
  sub_1000F350C(v70, v100, &qword_100E8C378);
  uint64_t v72 = v71 + *(int *)(sub_10017DF08(&qword_100E8C3A8) + 48);
  *(void *)uint64_t v72 = 0;
  *(unsigned char *)(v72 + 8) = 0;
  sub_1000F3400(v69, &qword_100E8C378);
  return sub_1000F3400(v70, &qword_100E8C378);
}

uint64_t sub_1006C0D38@<X0>(uint64_t a1@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t v19 = Image.init(_internalSystemName:)();
  static Font.footnote.getter();
  static Font.Weight.medium.getter();
  uint64_t v18 = Font.weight(_:)();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static Font.footnote.getter();
  static Font.Weight.medium.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v7 = Text.font(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  swift_release();
  sub_100191924(v2, v4, v6);
  swift_bridgeObjectRelease();
  uint64_t v14 = swift_getKeyPath();
  uint64_t v15 = swift_getKeyPath();
  *(void *)a1 = v19;
  *(void *)(a1 + 8) = KeyPath;
  *(void *)(a1 + 16) = v18;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v9;
  *(unsigned char *)(a1 + 40) = v11 & 1;
  *(void *)(a1 + 48) = v13;
  *(void *)(a1 + 56) = v14;
  *(void *)(a1 + 64) = 1;
  *(unsigned char *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = v15;
  *(void *)(a1 + 88) = 0x3FE0000000000000;
  *(_WORD *)(a1 + 96) = 256;
  *(void *)(a1 + 104) = 0;
  *(unsigned char *)(a1 + 112) = 0;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100190CC4(v7, v9, v11 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_100191924(v7, v9, v11 & 1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1006C0F64(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  char v4 = *(unsigned char *)(a1 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100190CC4(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1006C0FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DetailComponentHeaderView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006C1060(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DetailComponentHeaderView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1006C10BC()
{
  unint64_t result = qword_100E8C380;
  if (!qword_100E8C380)
  {
    sub_10018C6DC(&qword_100E8C370);
    sub_1006C1138();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8C380);
  }
  return result;
}

unint64_t sub_1006C1138()
{
  unint64_t result = qword_100E8C388;
  if (!qword_100E8C388)
  {
    sub_10018C6DC(&qword_100E8C368);
    sub_1006C11D8();
    sub_1001246C8(&qword_100E63EC8, &qword_100E63ED0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8C388);
  }
  return result;
}

unint64_t sub_1006C11D8()
{
  unint64_t result = qword_100E8C390;
  if (!qword_100E8C390)
  {
    sub_10018C6DC(&qword_100E8C360);
    sub_1001246C8(&qword_100E8C398, &qword_100E8C3A0);
    sub_1001246C8(&qword_100E65368, &qword_100E65370);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8C390);
  }
  return result;
}

uint64_t sub_1006C129C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E8C378);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006C131C()
{
  return sub_1001246C8(&qword_100E8C3B0, &qword_100E8C3B8);
}

char *sub_1006C1358(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *(void *)a1 = *a2;
    a1 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
    return a1;
  }
  uint64_t v6 = *(void *)(a3 - 8);
  uint64_t v7 = (int *)type metadata accessor for LocationPreviewViewContentModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v7))
  {
    type metadata accessor for PreviewLocation();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v10 = type metadata accessor for LocationOfInterest();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        break;
      case 2u:
        uint64_t v12 = *a2;
        char v11 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v11;
        uint64_t v13 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v13;
        uint64_t v14 = a2[5];
        *((void *)a1 + 4) = a2[4];
        *((void *)a1 + 5) = v14;
        *((void *)a1 + 6) = a2[6];
        uint64_t v15 = type metadata accessor for SearchLocation();
        uint64_t v16 = *(int *)(v15 + 32);
        uint64_t v56 = (int *)v15;
        __dst = &a1[v16];
        uint64_t v17 = (char *)a2 + v16;
        uint64_t v18 = type metadata accessor for Location();
        uint64_t v19 = v12;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
        {
          uint64_t v20 = sub_10017DF08(&qword_100E639E8);
          memcpy(__dst, v17, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(__dst, v17, v18);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v18);
        }
        uint64_t v22 = v56[9];
        uint64_t v23 = &a1[v22];
        uint64_t v24 = (char *)a2 + v22;
        *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
        v23[16] = v24[16];
        break;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v21 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v21;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v9 = type metadata accessor for Location();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        break;
    }
    swift_storeEnumTagMultiPayload();
    a1[v7[5]] = *((unsigned char *)a2 + v7[5]);
    a1[v7[6]] = *((unsigned char *)a2 + v7[6]);
    a1[v7[7]] = *((unsigned char *)a2 + v7[7]);
    uint64_t v25 = v7[8];
    uint64_t v26 = &a1[v25];
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = type metadata accessor for WeatherConditionBackgroundModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    uint64_t v29 = v7[9];
    uint64_t v30 = &a1[v29];
    uint64_t v31 = (char *)a2 + v29;
    uint64_t v32 = type metadata accessor for LocationPreviewModalViewModel(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v35 = *((void *)v31 + 1);
      *(void *)uint64_t v30 = *(void *)v31;
      *((void *)v30 + 1) = v35;
      uint64_t v36 = *((void *)v31 + 3);
      *((void *)v30 + 2) = *((void *)v31 + 2);
      *((void *)v30 + 3) = v36;
      uint64_t v37 = (int *)type metadata accessor for NewsArticle();
      uint64_t v38 = v37[6];
      __dsta = &v30[v38];
      uint64_t v39 = &v31[v38];
      uint64_t v40 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
      {
        uint64_t v41 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dsta, v39, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(__dsta, v39, v40);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v40);
      }
      uint64_t v42 = v37[7];
      uint64_t v43 = &v30[v42];
      uint64_t v44 = &v31[v42];
      uint64_t v45 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
      uint64_t v55 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
      v55(&v30[v37[8]], &v31[v37[8]], v40);
      __dstb = v37;
      uint64_t v46 = v37[9];
      uint64_t v47 = &v30[v46];
      uint64_t v48 = &v31[v46];
      uint64_t v49 = *(void *)&v31[v46 + 8];
      *(void *)uint64_t v47 = *(void *)&v31[v46];
      *((void *)v47 + 1) = v49;
      uint64_t v50 = *(void *)&v31[v46 + 24];
      *((void *)v47 + 2) = *(void *)&v31[v46 + 16];
      *((void *)v47 + 3) = v50;
      uint64_t v51 = *(int *)(type metadata accessor for NewsChannel() + 24);
      uint64_t v57 = &v47[v51];
      char v52 = &v48[v51];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v40))
      {
        uint64_t v53 = sub_10017DF08(&qword_100E749B0);
        memcpy(v57, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        v55(v57, v52, v40);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 0, 1, v40);
      }
      *(void *)&v30[__dstb[10]] = *(void *)&v31[__dstb[10]];
      *(void *)&v30[__dstb[11]] = *(void *)&v31[__dstb[11]];
      *(void *)&v30[__dstb[12]] = *(void *)&v31[__dstb[12]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
LABEL_25:
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v7);
        return a1;
      }
      uint64_t v34 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v30, v31, v34);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_25;
  }
  memcpy(a1, a2, *(void *)(v6 + 64));
  return a1;
}

uint64_t type metadata accessor for LocationPreviewViewContentModel(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E8C540);
}

uint64_t type metadata accessor for LocationPreviewModalViewModel(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E8C4B0);
}

uint64_t sub_1006C1A1C(id *a1)
{
  uint64_t v2 = type metadata accessor for LocationPreviewViewContentModel(0);
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v2);
  if (!result)
  {
    type metadata accessor for PreviewLocation();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v4 = type metadata accessor for Location();
        goto LABEL_6;
      case 1u:
        uint64_t v4 = type metadata accessor for LocationOfInterest();
LABEL_6:
        (*(void (**)(id *, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
        break;
      case 2u:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v5 = (uint64_t)a1 + *(int *)(type metadata accessor for SearchLocation() + 32);
        uint64_t v6 = type metadata accessor for Location();
        if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
        }
        break;
      case 3u:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
    uint64_t v7 = (char *)a1 + *(int *)(v2 + 32);
    uint64_t v8 = type metadata accessor for WeatherConditionBackgroundModel();
    (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    uint64_t v9 = (char *)a1 + *(int *)(v2 + 36);
    type metadata accessor for LocationPreviewModalViewModel(0);
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = (int *)type metadata accessor for NewsArticle();
      uint64_t v13 = (uint64_t)&v9[v12[6]];
      uint64_t v14 = type metadata accessor for URL();
      if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v14)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
      }
      uint64_t v15 = &v9[v12[7]];
      uint64_t v16 = type metadata accessor for Date();
      (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
      uint64_t v17 = *(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8);
      v17(&v9[v12[8]], v14);
      uint64_t v18 = &v9[v12[9]];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = (uint64_t)&v18[*(int *)(type metadata accessor for NewsChannel() + 24)];
      if (!_s7Weather24LocationCompositionStateOwet_0(v19, 1, v14)) {
        v17((char *)v19, v14);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else if (!result)
    {
      uint64_t v10 = type metadata accessor for URL();
      char v11 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8);
      return v11(v9, v10);
    }
  }
  return result;
}

void *sub_1006C1DC0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for LocationPreviewViewContentModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6))
  {
    type metadata accessor for PreviewLocation();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v8 = type metadata accessor for LocationOfInterest();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        break;
      case 2u:
        uint64_t v10 = (void *)*a2;
        uint64_t v9 = a2[1];
        *a1 = *a2;
        a1[1] = v9;
        uint64_t v11 = a2[3];
        a1[2] = a2[2];
        a1[3] = v11;
        uint64_t v12 = a2[5];
        a1[4] = a2[4];
        a1[5] = v12;
        a1[6] = a2[6];
        uint64_t v13 = type metadata accessor for SearchLocation();
        uint64_t v14 = *(int *)(v13 + 32);
        __dst = (char *)a1 + v14;
        uint64_t v56 = (int *)v13;
        uint64_t v15 = (char *)a2 + v14;
        uint64_t v16 = type metadata accessor for Location();
        id v17 = v10;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
        {
          uint64_t v18 = sub_10017DF08(&qword_100E639E8);
          memcpy(__dst, v15, *(void *)(*(void *)(v18 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(__dst, v15, v16);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v16);
        }
        uint64_t v20 = v56[9];
        uint64_t v21 = (char *)a1 + v20;
        uint64_t v22 = (char *)a2 + v20;
        *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
        v21[16] = v22[16];
        break;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v19 = a2[3];
        a1[2] = a2[2];
        a1[3] = v19;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v7 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        break;
    }
    swift_storeEnumTagMultiPayload();
    *((unsigned char *)a1 + v6[5]) = *((unsigned char *)a2 + v6[5]);
    *((unsigned char *)a1 + v6[6]) = *((unsigned char *)a2 + v6[6]);
    *((unsigned char *)a1 + v6[7]) = *((unsigned char *)a2 + v6[7]);
    uint64_t v23 = v6[8];
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = type metadata accessor for WeatherConditionBackgroundModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    uint64_t v27 = v6[9];
    uint64_t v28 = (char *)a1 + v27;
    uint64_t v29 = (char *)a2 + v27;
    uint64_t v30 = type metadata accessor for LocationPreviewModalViewModel(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v33 = *((void *)v29 + 1);
      *(void *)uint64_t v28 = *(void *)v29;
      *((void *)v28 + 1) = v33;
      uint64_t v34 = *((void *)v29 + 3);
      *((void *)v28 + 2) = *((void *)v29 + 2);
      *((void *)v28 + 3) = v34;
      uint64_t v35 = (int *)type metadata accessor for NewsArticle();
      uint64_t v36 = v35[6];
      uint64_t v57 = &v28[v36];
      uint64_t v37 = &v29[v36];
      uint64_t v38 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v38))
      {
        uint64_t v39 = sub_10017DF08(&qword_100E749B0);
        memcpy(v57, v37, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v57, v37, v38);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 0, 1, v38);
      }
      uint64_t v40 = v35[7];
      uint64_t v41 = &v28[v40];
      uint64_t v42 = &v29[v40];
      uint64_t v43 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
      uint64_t v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
      v53(&v28[v35[8]], &v29[v35[8]], v38);
      uint64_t v58 = v35;
      uint64_t v44 = v35[9];
      uint64_t v45 = &v28[v44];
      uint64_t v46 = &v29[v44];
      uint64_t v47 = *(void *)&v29[v44 + 8];
      *(void *)uint64_t v45 = *(void *)&v29[v44];
      *((void *)v45 + 1) = v47;
      uint64_t v48 = *(void *)&v29[v44 + 24];
      *((void *)v45 + 2) = *(void *)&v29[v44 + 16];
      *((void *)v45 + 3) = v48;
      uint64_t v49 = *(int *)(type metadata accessor for NewsChannel() + 24);
      __dsta = &v45[v49];
      uint64_t v50 = &v46[v49];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v38))
      {
        uint64_t v51 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dsta, v50, *(void *)(*(void *)(v51 - 8) + 64));
      }
      else
      {
        v53(__dsta, v50, v38);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v38);
      }
      *(void *)&v28[v58[10]] = *(void *)&v29[v58[10]];
      *(void *)&v28[v58[11]] = *(void *)&v29[v58[11]];
      *(void *)&v28[v58[12]] = *(void *)&v29[v58[12]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
LABEL_23:
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
        return a1;
      }
      uint64_t v32 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v28, v29, v32);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_23;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *sub_1006C2408(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for LocationPreviewViewContentModel(0);
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, (uint64_t)v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6);
  if (v7)
  {
    if (!v8)
    {
      type metadata accessor for PreviewLocation();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v14 = type metadata accessor for LocationOfInterest();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
          break;
        case 2u:
          uint64_t v15 = (void *)*a2;
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          a1[3] = a2[3];
          a1[4] = a2[4];
          a1[5] = a2[5];
          a1[6] = a2[6];
          uint64_t v16 = type metadata accessor for SearchLocation();
          uint64_t v17 = *(int *)(v16 + 32);
          __dst = (char *)a1 + v17;
          uint64_t v95 = (int *)v16;
          uint64_t v18 = (char *)a2 + v17;
          uint64_t v19 = type metadata accessor for Location();
          id v20 = v15;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
          {
            uint64_t v21 = sub_10017DF08(&qword_100E639E8);
            memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(__dst, v18, v19);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v19);
          }
          uint64_t v30 = v95[9];
          uint64_t v31 = (char *)a1 + v30;
          uint64_t v32 = (char *)a2 + v30;
          long long v33 = *(_OWORD *)v32;
          v31[16] = v32[16];
          *(_OWORD *)uint64_t v31 = v33;
          break;
        case 3u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          a1[2] = a2[2];
          a1[3] = a2[3];
          swift_bridgeObjectRetain();
          break;
        default:
          uint64_t v9 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
          break;
      }
      swift_storeEnumTagMultiPayload();
      *((unsigned char *)a1 + v6[5]) = *((unsigned char *)a2 + v6[5]);
      *((unsigned char *)a1 + v6[6]) = *((unsigned char *)a2 + v6[6]);
      *((unsigned char *)a1 + v6[7]) = *((unsigned char *)a2 + v6[7]);
      uint64_t v34 = v6[8];
      uint64_t v35 = (char *)a1 + v34;
      uint64_t v36 = (char *)a2 + v34;
      uint64_t v37 = type metadata accessor for WeatherConditionBackgroundModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
      uint64_t v38 = v6[9];
      uint64_t v39 = (char *)a1 + v38;
      uint64_t v40 = (char *)a2 + v38;
      uint64_t v41 = type metadata accessor for LocationPreviewModalViewModel(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        *(void *)uint64_t v39 = *(void *)v40;
        *((void *)v39 + 1) = *((void *)v40 + 1);
        *((void *)v39 + 2) = *((void *)v40 + 2);
        *((void *)v39 + 3) = *((void *)v40 + 3);
        uint64_t v44 = (int *)type metadata accessor for NewsArticle();
        uint64_t v45 = v44[6];
        uint64_t v97 = &v39[v45];
        uint64_t v46 = &v40[v45];
        uint64_t v47 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v47))
        {
          uint64_t v48 = sub_10017DF08(&qword_100E749B0);
          memcpy(v97, v46, *(void *)(*(void *)(v48 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v97, v46, v47);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v97, 0, 1, v47);
        }
        uint64_t v49 = v44[7];
        uint64_t v50 = &v39[v49];
        uint64_t v51 = &v40[v49];
        uint64_t v52 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
        uint64_t v91 = *(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16);
        v91(&v39[v44[8]], &v40[v44[8]], v47);
        uint64_t v98 = v44;
        uint64_t v53 = v44[9];
        int v54 = &v39[v53];
        uint64_t v55 = &v40[v53];
        *(void *)int v54 = *(void *)&v40[v53];
        *((void *)v54 + 1) = *(void *)&v40[v53 + 8];
        *((void *)v54 + 2) = *(void *)&v40[v53 + 16];
        *((void *)v54 + 3) = *(void *)&v40[v53 + 24];
        uint64_t v56 = *(int *)(type metadata accessor for NewsChannel() + 24);
        __dstb = &v54[v56];
        uint64_t v57 = &v55[v56];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v47))
        {
          uint64_t v58 = sub_10017DF08(&qword_100E749B0);
          memcpy(__dstb, v57, *(void *)(*(void *)(v58 - 8) + 64));
        }
        else
        {
          v91(__dstb, v57, v47);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstb, 0, 1, v47);
        }
        *(void *)&v39[v98[10]] = *(void *)&v40[v98[10]];
        *(void *)&v39[v98[11]] = *(void *)&v40[v98[11]];
        *(void *)&v39[v98[12]] = *(void *)&v40[v98[12]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
LABEL_34:
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
          return a1;
        }
        uint64_t v43 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v39, v40, v43);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_34;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_1006C30D4((uint64_t)a1, (void (*)(void))type metadata accessor for LocationPreviewViewContentModel);
LABEL_7:
    size_t v10 = *(void *)(*(void *)(a3 - 8) + 64);
    uint64_t v11 = (char *)a1;
    uint64_t v12 = (char *)a2;
LABEL_8:
    memcpy(v11, v12, v10);
    return a1;
  }
  if (a1 != a2)
  {
    sub_1006C30D4((uint64_t)a1, (void (*)(void))type metadata accessor for PreviewLocation);
    type metadata accessor for PreviewLocation();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v22 = type metadata accessor for LocationOfInterest();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
        break;
      case 2u:
        uint64_t v23 = (void *)*a2;
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        uint64_t v24 = type metadata accessor for SearchLocation();
        uint64_t v25 = *(int *)(v24 + 32);
        __dsta = (char *)a1 + v25;
        uint64_t v96 = (int *)v24;
        uint64_t v26 = (char *)a2 + v25;
        uint64_t v27 = type metadata accessor for Location();
        id v28 = v23;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27))
        {
          uint64_t v29 = sub_10017DF08(&qword_100E639E8);
          memcpy(__dsta, v26, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(__dsta, v26, v27);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v27);
        }
        uint64_t v60 = v96[9];
        uint64_t v61 = (char *)a1 + v60;
        uint64_t v62 = (char *)a2 + v60;
        long long v63 = *(_OWORD *)v62;
        v61[16] = v62[16];
        *(_OWORD *)uint64_t v61 = v63;
        break;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v13 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)a1 + v6[5]) = *((unsigned char *)a2 + v6[5]);
  *((unsigned char *)a1 + v6[6]) = *((unsigned char *)a2 + v6[6]);
  *((unsigned char *)a1 + v6[7]) = *((unsigned char *)a2 + v6[7]);
  uint64_t v64 = v6[8];
  uint64_t v65 = (char *)a1 + v64;
  uint64_t v66 = (char *)a2 + v64;
  uint64_t v67 = type metadata accessor for WeatherConditionBackgroundModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 24))(v65, v66, v67);
  if (a1 != a2)
  {
    uint64_t v68 = v6[9];
    uint64_t v69 = (char *)a1 + v68;
    uint64_t v70 = (char *)a2 + v68;
    sub_1006C30D4((uint64_t)a1 + v68, (void (*)(void))type metadata accessor for LocationPreviewModalViewModel);
    uint64_t v71 = type metadata accessor for LocationPreviewModalViewModel(0);
    int v72 = swift_getEnumCaseMultiPayload();
    if (v72 == 1)
    {
      *(void *)uint64_t v69 = *(void *)v70;
      *((void *)v69 + 1) = *((void *)v70 + 1);
      *((void *)v69 + 2) = *((void *)v70 + 2);
      *((void *)v69 + 3) = *((void *)v70 + 3);
      uint64_t v74 = (int *)type metadata accessor for NewsArticle();
      uint64_t v75 = v74[6];
      uint64_t v76 = &v69[v75];
      uint64_t v77 = &v70[v75];
      uint64_t v78 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v77, 1, v78))
      {
        uint64_t v79 = sub_10017DF08(&qword_100E749B0);
        memcpy(v76, v77, *(void *)(*(void *)(v79 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16))(v76, v77, v78);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v76, 0, 1, v78);
      }
      uint64_t v80 = v74[7];
      uint64_t v81 = &v69[v80];
      uint64_t v82 = &v70[v80];
      uint64_t v83 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16))(v81, v82, v83);
      uint64_t v99 = *(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16);
      v99(&v69[v74[8]], &v70[v74[8]], v78);
      uint64_t v84 = v74[9];
      int v85 = &v69[v84];
      uint64_t v86 = &v70[v84];
      *(void *)int v85 = *(void *)&v70[v84];
      *((void *)v85 + 1) = *(void *)&v70[v84 + 8];
      *((void *)v85 + 2) = *(void *)&v70[v84 + 16];
      *((void *)v85 + 3) = *(void *)&v70[v84 + 24];
      uint64_t v87 = *(int *)(type metadata accessor for NewsChannel() + 24);
      uint64_t v88 = &v85[v87];
      uint64_t v89 = &v86[v87];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v89, 1, v78))
      {
        uint64_t v90 = sub_10017DF08(&qword_100E749B0);
        memcpy(v88, v89, *(void *)(*(void *)(v90 - 8) + 64));
      }
      else
      {
        v99(v88, v89, v78);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v88, 0, 1, v78);
      }
      *(void *)&v69[v74[10]] = *(void *)&v70[v74[10]];
      *(void *)&v69[v74[11]] = *(void *)&v70[v74[11]];
      *(void *)&v69[v74[12]] = *(void *)&v70[v74[12]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      if (v72)
      {
        size_t v10 = *(void *)(*(void *)(v71 - 8) + 64);
        uint64_t v11 = v69;
        uint64_t v12 = v70;
        goto LABEL_8;
      }
      uint64_t v73 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v69, v70, v73);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1006C30D4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

char *sub_1006C312C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for LocationPreviewViewContentModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6))
  {
    uint64_t v7 = type metadata accessor for PreviewLocation();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      uint64_t v10 = type metadata accessor for SearchLocation();
      uint64_t v11 = *(int *)(v10 + 32);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = type metadata accessor for Location();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
      {
        uint64_t v15 = sub_10017DF08(&qword_100E639E8);
        memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
      }
      uint64_t v17 = *(int *)(v10 + 36);
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
      v18[16] = v19[16];
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v16 = type metadata accessor for LocationOfInterest();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        goto LABEL_14;
      }
      uint64_t v9 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    }
    swift_storeEnumTagMultiPayload();
LABEL_14:
    a1[v6[5]] = a2[v6[5]];
    a1[v6[6]] = a2[v6[6]];
    a1[v6[7]] = a2[v6[7]];
    uint64_t v20 = v6[8];
    uint64_t v21 = &a1[v20];
    uint64_t v22 = &a2[v20];
    uint64_t v23 = type metadata accessor for WeatherConditionBackgroundModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
    uint64_t v24 = v6[9];
    uint64_t v25 = &a1[v24];
    uint64_t v26 = &a2[v24];
    uint64_t v27 = type metadata accessor for LocationPreviewModalViewModel(0);
    int v28 = swift_getEnumCaseMultiPayload();
    if (v28 == 1)
    {
      long long v30 = *((_OWORD *)v26 + 1);
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v30;
      uint64_t v31 = (int *)type metadata accessor for NewsArticle();
      uint64_t v32 = v31[6];
      long long v33 = &v25[v32];
      uint64_t v34 = &v26[v32];
      uint64_t v35 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35))
      {
        uint64_t v36 = sub_10017DF08(&qword_100E749B0);
        memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v35);
      }
      uint64_t v37 = v31[7];
      uint64_t v38 = &v25[v37];
      uint64_t v39 = &v26[v37];
      uint64_t v40 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
      uint64_t v41 = (void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32);
      uint64_t v51 = *v41;
      (*v41)(&v25[v31[8]], &v26[v31[8]], v35);
      uint64_t v42 = v31[9];
      uint64_t v43 = &v25[v42];
      uint64_t v44 = &v26[v42];
      long long v45 = *(_OWORD *)&v26[v42 + 16];
      *(_OWORD *)uint64_t v43 = *(_OWORD *)&v26[v42];
      *((_OWORD *)v43 + 1) = v45;
      uint64_t v46 = *(int *)(type metadata accessor for NewsChannel() + 24);
      uint64_t v47 = &v43[v46];
      uint64_t v48 = &v44[v46];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v35))
      {
        uint64_t v49 = sub_10017DF08(&qword_100E749B0);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        v51(v47, v48, v35);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v35);
      }
      *(void *)&v25[v31[10]] = *(void *)&v26[v31[10]];
      *(void *)&v25[v31[11]] = *(void *)&v26[v31[11]];
      *(void *)&v25[v31[12]] = *(void *)&v26[v31[12]];
    }
    else
    {
      if (v28)
      {
        memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
LABEL_26:
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
        return a1;
      }
      uint64_t v29 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v25, v26, v29);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_26;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

uint64_t sub_1006C36D4(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for LocationPreviewViewContentModel(0);
  int v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, (uint64_t)v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = type metadata accessor for PreviewLocation();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(void *)a1 = *(void *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)((char *)a2 + 8);
        *(_OWORD *)(a1 + 24) = *(_OWORD *)((char *)a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        uint64_t v17 = type metadata accessor for SearchLocation();
        uint64_t v18 = *(int *)(v17 + 32);
        uint64_t v19 = (void *)(a1 + v18);
        uint64_t v20 = (char *)a2 + v18;
        uint64_t v21 = type metadata accessor for Location();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
        {
          uint64_t v22 = sub_10017DF08(&qword_100E639E8);
          memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
        }
        uint64_t v31 = *(int *)(v17 + 36);
        uint64_t v32 = a1 + v31;
        long long v33 = (char *)a2 + v31;
        *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
        *(unsigned char *)(v32 + 16) = v33[16];
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v23 = type metadata accessor for LocationOfInterest();
        (*(void (**)(uint64_t, _OWORD *, uint64_t))(*(void *)(v23 - 8) + 32))(a1, a2, v23);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy((void *)a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
          goto LABEL_27;
        }
        uint64_t v11 = type metadata accessor for Location();
        (*(void (**)(uint64_t, _OWORD *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      }
      swift_storeEnumTagMultiPayload();
LABEL_27:
      *(unsigned char *)(a1 + v6[5]) = *((unsigned char *)a2 + v6[5]);
      *(unsigned char *)(a1 + v6[6]) = *((unsigned char *)a2 + v6[6]);
      *(unsigned char *)(a1 + v6[7]) = *((unsigned char *)a2 + v6[7]);
      uint64_t v34 = v6[8];
      uint64_t v35 = a1 + v34;
      uint64_t v36 = (char *)a2 + v34;
      uint64_t v37 = type metadata accessor for WeatherConditionBackgroundModel();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
      uint64_t v38 = v6[9];
      uint64_t v39 = (char *)(a1 + v38);
      uint64_t v40 = (char *)a2 + v38;
      uint64_t v41 = type metadata accessor for LocationPreviewModalViewModel(0);
      int v42 = swift_getEnumCaseMultiPayload();
      if (v42 == 1)
      {
        long long v44 = *((_OWORD *)v40 + 1);
        *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
        *((_OWORD *)v39 + 1) = v44;
        long long v45 = (int *)type metadata accessor for NewsArticle();
        uint64_t v46 = v45[6];
        uint64_t v47 = &v39[v46];
        uint64_t v48 = &v40[v46];
        uint64_t v49 = type metadata accessor for URL();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49))
        {
          uint64_t v50 = sub_10017DF08(&qword_100E749B0);
          memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v49);
        }
        uint64_t v51 = v45[7];
        uint64_t v52 = &v39[v51];
        uint64_t v53 = &v40[v51];
        uint64_t v54 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
        uint64_t v55 = (void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32);
        uint64_t v97 = *v55;
        (*v55)(&v39[v45[8]], &v40[v45[8]], v49);
        uint64_t v56 = v45[9];
        uint64_t v57 = &v39[v56];
        uint64_t v58 = &v40[v56];
        long long v59 = *(_OWORD *)&v40[v56 + 16];
        *(_OWORD *)uint64_t v57 = *(_OWORD *)&v40[v56];
        *((_OWORD *)v57 + 1) = v59;
        uint64_t v60 = *(int *)(type metadata accessor for NewsChannel() + 24);
        uint64_t v61 = &v57[v60];
        uint64_t v62 = &v58[v60];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, v49))
        {
          uint64_t v63 = sub_10017DF08(&qword_100E749B0);
          memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
        }
        else
        {
          v97(v61, v62, v49);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v61, 0, 1, v49);
        }
        *(void *)&v39[v45[10]] = *(void *)&v40[v45[10]];
        *(void *)&v39[v45[11]] = *(void *)&v40[v45[11]];
        *(void *)&v39[v45[12]] = *(void *)&v40[v45[12]];
      }
      else
      {
        if (v42)
        {
          memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
LABEL_39:
          _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, (uint64_t)v6);
          return a1;
        }
        uint64_t v43 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v39, v40, v43);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_39;
    }
    goto LABEL_9;
  }
  if (!v8)
  {
    if ((_OWORD *)a1 == a2) {
      goto LABEL_44;
    }
    sub_1006C30D4(a1, (void (*)(void))type metadata accessor for PreviewLocation);
    uint64_t v14 = type metadata accessor for PreviewLocation();
    int v15 = swift_getEnumCaseMultiPayload();
    if (v15 == 2)
    {
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)((char *)a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)((char *)a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      uint64_t v24 = type metadata accessor for SearchLocation();
      uint64_t v25 = *(int *)(v24 + 32);
      uint64_t v26 = (void *)(a1 + v25);
      uint64_t v27 = (char *)a2 + v25;
      uint64_t v28 = type metadata accessor for Location();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
      {
        uint64_t v29 = sub_10017DF08(&qword_100E639E8);
        memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
      }
      uint64_t v65 = *(int *)(v24 + 36);
      uint64_t v66 = a1 + v65;
      uint64_t v67 = (char *)a2 + v65;
      *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
      *(unsigned char *)(v66 + 16) = v67[16];
    }
    else if (v15 == 1)
    {
      uint64_t v30 = type metadata accessor for LocationOfInterest();
      (*(void (**)(uint64_t, _OWORD *, uint64_t))(*(void *)(v30 - 8) + 32))(a1, a2, v30);
    }
    else
    {
      if (v15)
      {
        memcpy((void *)a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
        goto LABEL_44;
      }
      uint64_t v16 = type metadata accessor for Location();
      (*(void (**)(uint64_t, _OWORD *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
    }
    swift_storeEnumTagMultiPayload();
LABEL_44:
    *(unsigned char *)(a1 + v6[5]) = *((unsigned char *)a2 + v6[5]);
    *(unsigned char *)(a1 + v6[6]) = *((unsigned char *)a2 + v6[6]);
    *(unsigned char *)(a1 + v6[7]) = *((unsigned char *)a2 + v6[7]);
    uint64_t v68 = v6[8];
    uint64_t v69 = a1 + v68;
    uint64_t v70 = (char *)a2 + v68;
    uint64_t v71 = type metadata accessor for WeatherConditionBackgroundModel();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v71 - 8) + 40))(v69, v70, v71);
    if ((_OWORD *)a1 == a2) {
      return a1;
    }
    uint64_t v72 = v6[9];
    uint64_t v73 = (char *)(a1 + v72);
    a2 = (_OWORD *)((char *)a2 + v72);
    sub_1006C30D4(a1 + v72, (void (*)(void))type metadata accessor for LocationPreviewModalViewModel);
    uint64_t v74 = type metadata accessor for LocationPreviewModalViewModel(0);
    int v75 = swift_getEnumCaseMultiPayload();
    if (v75 == 1)
    {
      long long v77 = a2[1];
      *(_OWORD *)uint64_t v73 = *a2;
      *((_OWORD *)v73 + 1) = v77;
      uint64_t v78 = (int *)type metadata accessor for NewsArticle();
      uint64_t v79 = v78[6];
      uint64_t v80 = &v73[v79];
      uint64_t v81 = (char *)a2 + v79;
      uint64_t v82 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v81, 1, v82))
      {
        uint64_t v83 = sub_10017DF08(&qword_100E749B0);
        memcpy(v80, v81, *(void *)(*(void *)(v83 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 32))(v80, v81, v82);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v80, 0, 1, v82);
      }
      uint64_t v84 = v78[7];
      int v85 = &v73[v84];
      uint64_t v86 = (char *)a2 + v84;
      uint64_t v87 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 32))(v85, v86, v87);
      uint64_t v88 = *(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 32);
      v88(&v73[v78[8]], (char *)a2 + v78[8], v82);
      uint64_t v89 = v78[9];
      uint64_t v90 = &v73[v89];
      uint64_t v91 = (char *)a2 + v89;
      long long v92 = *(_OWORD *)((char *)a2 + v89 + 16);
      *(_OWORD *)uint64_t v90 = *(_OWORD *)((char *)a2 + v89);
      *((_OWORD *)v90 + 1) = v92;
      uint64_t v93 = *(int *)(type metadata accessor for NewsChannel() + 24);
      uint64_t v94 = &v90[v93];
      uint64_t v95 = &v91[v93];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, v82))
      {
        uint64_t v96 = sub_10017DF08(&qword_100E749B0);
        memcpy(v94, v95, *(void *)(*(void *)(v96 - 8) + 64));
      }
      else
      {
        v88(v94, v95, v82);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v94, 0, 1, v82);
      }
      *(void *)&v73[v78[10]] = *(void *)((char *)a2 + v78[10]);
      *(void *)&v73[v78[11]] = *(void *)((char *)a2 + v78[11]);
      *(void *)&v73[v78[12]] = *(void *)((char *)a2 + v78[12]);
    }
    else
    {
      if (v75)
      {
        size_t v12 = *(void *)(*(void *)(v74 - 8) + 64);
        uint64_t v13 = v73;
        goto LABEL_10;
      }
      uint64_t v76 = type metadata accessor for URL();
      (*(void (**)(char *, _OWORD *, uint64_t))(*(void *)(v76 - 8) + 32))(v73, a2, v76);
    }
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  sub_1006C30D4(a1, (void (*)(void))type metadata accessor for LocationPreviewViewContentModel);
LABEL_9:
  size_t v12 = *(void *)(*(void *)(a3 - 8) + 64);
  uint64_t v13 = (void *)a1;
LABEL_10:
  memcpy(v13, a2, v12);
  return a1;
}

uint64_t sub_1006C41EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006C4200);
}

uint64_t sub_1006C4200(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationPreviewViewContentModel(0);
  unsigned int v5 = _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1006C4248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006C425C);
}

uint64_t sub_1006C425C(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for LocationPreviewViewContentModel(0);

  return _s7Weather24LocationCompositionStateOwst_0(a1, v5, a3, v6);
}

uint64_t sub_1006C42B8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LocationPreviewViewContentModel(0);

  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
}

uint64_t sub_1006C42FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationPreviewViewContentModel(0);

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v4);
}

uint64_t type metadata accessor for LocationPreviewViewModel(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E8C430);
}

uint64_t sub_1006C4368()
{
  uint64_t result = type metadata accessor for LocationPreviewViewContentModel(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

char *sub_1006C43E0(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v10;
      uint64_t v11 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v11;
      size_t v12 = (int *)type metadata accessor for NewsArticle();
      uint64_t v13 = v12[6];
      uint64_t v14 = &a1[v13];
      int v15 = &a2[v13];
      uint64_t v16 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
      {
        uint64_t v17 = sub_10017DF08(&qword_100E749B0);
        memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
      }
      uint64_t v18 = v12[7];
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      uint64_t v21 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
      uint64_t v22 = (void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      long long v33 = *v22;
      (*v22)(&a1[v12[8]], &a2[v12[8]], v16);
      uint64_t v23 = v12[9];
      uint64_t v24 = &a1[v23];
      uint64_t v25 = &a2[v23];
      uint64_t v26 = *(void *)&a2[v23 + 8];
      *(void *)uint64_t v24 = *(void *)&a2[v23];
      *((void *)v24 + 1) = v26;
      uint64_t v27 = *(void *)&a2[v23 + 24];
      *((void *)v24 + 2) = *(void *)&a2[v23 + 16];
      *((void *)v24 + 3) = v27;
      uint64_t v28 = *(int *)(type metadata accessor for NewsChannel() + 24);
      uint64_t v29 = &v24[v28];
      uint64_t v30 = &v25[v28];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v16))
      {
        uint64_t v31 = sub_10017DF08(&qword_100E749B0);
        memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        v33(v29, v30, v16);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v16);
      }
      *(void *)&a1[v12[10]] = *(void *)&a2[v12[10]];
      *(void *)&a1[v12[11]] = *(void *)&a2[v12[11]];
      *(void *)&a1[v12[12]] = *(void *)&a2[v12[12]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_14;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v8 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t sub_1006C4750(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v5 = (int *)type metadata accessor for NewsArticle();
    uint64_t v6 = a1 + v5[6];
    uint64_t v7 = type metadata accessor for URL();
    if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    }
    uint64_t v8 = a1 + v5[7];
    uint64_t v9 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    v10(a1 + v5[8], v7);
    uint64_t v11 = a1 + v5[9];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = v11 + *(int *)(type metadata accessor for NewsChannel() + 24);
    if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v7)) {
      v10(v12, v7);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    uint64_t v3 = type metadata accessor for URL();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

char *sub_1006C4964(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v8;
    uint64_t v9 = *((void *)a2 + 3);
    *((void *)a1 + 2) = *((void *)a2 + 2);
    *((void *)a1 + 3) = v9;
    uint64_t v10 = (int *)type metadata accessor for NewsArticle();
    uint64_t v11 = v10[6];
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    uint64_t v14 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
    {
      uint64_t v15 = sub_10017DF08(&qword_100E749B0);
      memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
    }
    uint64_t v16 = v10[7];
    uint64_t v17 = &a1[v16];
    uint64_t v18 = &a2[v16];
    uint64_t v19 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = (void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    uint64_t v31 = *v20;
    (*v20)(&a1[v10[8]], &a2[v10[8]], v14);
    uint64_t v21 = v10[9];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    uint64_t v24 = *(void *)&a2[v21 + 8];
    *(void *)uint64_t v22 = *(void *)&a2[v21];
    *((void *)v22 + 1) = v24;
    uint64_t v25 = *(void *)&a2[v21 + 24];
    *((void *)v22 + 2) = *(void *)&a2[v21 + 16];
    *((void *)v22 + 3) = v25;
    uint64_t v26 = *(int *)(type metadata accessor for NewsChannel() + 24);
    uint64_t v27 = &v22[v26];
    uint64_t v28 = &v23[v26];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v14))
    {
      uint64_t v29 = sub_10017DF08(&qword_100E749B0);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      v31(v27, v28, v14);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v14);
    }
    *(void *)&a1[v10[10]] = *(void *)&a2[v10[10]];
    *(void *)&a1[v10[11]] = *(void *)&a2[v10[11]];
    *(void *)&a1[v10[12]] = *(void *)&a2[v10[12]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_12;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
LABEL_12:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_1006C4C90(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1006C30D4((uint64_t)a1, (void (*)(void))type metadata accessor for LocationPreviewModalViewModel);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = *((void *)a2 + 3);
      uint64_t v8 = (int *)type metadata accessor for NewsArticle();
      uint64_t v9 = v8[6];
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      uint64_t v12 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
      {
        uint64_t v13 = sub_10017DF08(&qword_100E749B0);
        memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
      }
      uint64_t v14 = v8[7];
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      uint64_t v17 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      uint64_t v18 = (void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      uint64_t v27 = *v18;
      (*v18)(&a1[v8[8]], &a2[v8[8]], v12);
      uint64_t v19 = v8[9];
      uint64_t v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      *(void *)uint64_t v20 = *(void *)&a2[v19];
      *((void *)v20 + 1) = *(void *)&a2[v19 + 8];
      *((void *)v20 + 2) = *(void *)&a2[v19 + 16];
      *((void *)v20 + 3) = *(void *)&a2[v19 + 24];
      uint64_t v22 = *(int *)(type metadata accessor for NewsChannel() + 24);
      uint64_t v23 = &v20[v22];
      uint64_t v24 = &v21[v22];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v12))
      {
        uint64_t v25 = sub_10017DF08(&qword_100E749B0);
        memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        v27(v23, v24, v12);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v12);
      }
      *(void *)&a1[v8[10]] = *(void *)&a2[v8[10]];
      *(void *)&a1[v8[11]] = *(void *)&a2[v8[11]];
      *(void *)&a1[v8[12]] = *(void *)&a2[v8[12]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_13;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_1006C5000(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    long long v8 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v8;
    uint64_t v9 = (int *)type metadata accessor for NewsArticle();
    uint64_t v10 = v9[6];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = type metadata accessor for URL();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
    {
      uint64_t v14 = sub_10017DF08(&qword_100E749B0);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
    }
    uint64_t v15 = v9[7];
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    uint64_t v18 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
    v19(&a1[v9[8]], &a2[v9[8]], v13);
    uint64_t v20 = v9[9];
    uint64_t v21 = &a1[v20];
    uint64_t v22 = &a2[v20];
    long long v23 = *(_OWORD *)&a2[v20 + 16];
    *(_OWORD *)uint64_t v21 = *(_OWORD *)&a2[v20];
    *((_OWORD *)v21 + 1) = v23;
    uint64_t v24 = *(int *)(type metadata accessor for NewsChannel() + 24);
    uint64_t v25 = &v21[v24];
    uint64_t v26 = &v22[v24];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v13))
    {
      uint64_t v27 = sub_10017DF08(&qword_100E749B0);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      v19(v25, v26, v13);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v13);
    }
    *(void *)&a1[v9[10]] = *(void *)&a2[v9[10]];
    *(void *)&a1[v9[11]] = *(void *)&a2[v9[11]];
    *(void *)&a1[v9[12]] = *(void *)&a2[v9[12]];
    goto LABEL_12;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_12:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_1006C52D8(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1006C30D4((uint64_t)a1, (void (*)(void))type metadata accessor for LocationPreviewModalViewModel);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      long long v8 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v8;
      uint64_t v9 = (int *)type metadata accessor for NewsArticle();
      uint64_t v10 = v9[6];
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      uint64_t v13 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
      {
        uint64_t v14 = sub_10017DF08(&qword_100E749B0);
        memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
      }
      uint64_t v15 = v9[7];
      uint64_t v16 = &a1[v15];
      uint64_t v17 = &a2[v15];
      uint64_t v18 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
      v19(&a1[v9[8]], &a2[v9[8]], v13);
      uint64_t v20 = v9[9];
      uint64_t v21 = &a1[v20];
      uint64_t v22 = &a2[v20];
      long long v23 = *(_OWORD *)&a2[v20 + 16];
      *(_OWORD *)uint64_t v21 = *(_OWORD *)&a2[v20];
      *((_OWORD *)v21 + 1) = v23;
      uint64_t v24 = *(int *)(type metadata accessor for NewsChannel() + 24);
      uint64_t v25 = &v21[v24];
      uint64_t v26 = &v22[v24];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v13))
      {
        uint64_t v27 = sub_10017DF08(&qword_100E749B0);
        memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        v19(v25, v26, v13);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v13);
      }
      *(void *)&a1[v9[10]] = *(void *)&a2[v9[10]];
      *(void *)&a1[v9[11]] = *(void *)&a2[v9[11]];
      *(void *)&a1[v9[12]] = *(void *)&a2[v9[12]];
      goto LABEL_13;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1006C55D4()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for NewsArticle();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

char *sub_1006C5698(char *a1, char **a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    long long v8 = *a2;
    *(void *)a1 = *a2;
    a1 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    type metadata accessor for PreviewLocation();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v9 = type metadata accessor for LocationOfInterest();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        break;
      case 2u:
        uint64_t v11 = *a2;
        uint64_t v10 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v10;
        uint64_t v12 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v12;
        uint64_t v13 = a2[5];
        *((void *)a1 + 4) = a2[4];
        *((void *)a1 + 5) = v13;
        *((void *)a1 + 6) = a2[6];
        uint64_t v14 = type metadata accessor for SearchLocation();
        uint64_t v15 = *(int *)(v14 + 32);
        uint64_t v57 = v14;
        __dst = &a1[v15];
        uint64_t v16 = (char *)a2 + v15;
        uint64_t v17 = type metadata accessor for Location();
        uint64_t v18 = v11;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
        {
          uint64_t v19 = sub_10017DF08(&qword_100E639E8);
          memcpy(__dst, v16, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(__dst, v16, v17);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v17);
        }
        uint64_t v21 = *(int *)(v57 + 36);
        uint64_t v22 = &a1[v21];
        long long v23 = (char *)a2 + v21;
        *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
        unsigned char v22[16] = v23[16];
        break;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v20 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v20;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v7 = type metadata accessor for Location();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        break;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v24 = a3[6];
    a1[a3[5]] = *((unsigned char *)a2 + a3[5]);
    a1[v24] = *((unsigned char *)a2 + v24);
    uint64_t v25 = a3[8];
    a1[a3[7]] = *((unsigned char *)a2 + a3[7]);
    uint64_t v26 = &a1[v25];
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = type metadata accessor for WeatherConditionBackgroundModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    uint64_t v29 = a3[9];
    uint64_t v30 = &a1[v29];
    uint64_t v31 = (char *)a2 + v29;
    uint64_t v32 = type metadata accessor for LocationPreviewModalViewModel(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v35 = *((void *)v31 + 1);
      *(void *)uint64_t v30 = *(void *)v31;
      *((void *)v30 + 1) = v35;
      uint64_t v36 = *((void *)v31 + 3);
      *((void *)v30 + 2) = *((void *)v31 + 2);
      *((void *)v30 + 3) = v36;
      uint64_t v37 = (int *)type metadata accessor for NewsArticle();
      uint64_t v38 = v37[6];
      uint64_t v39 = &v30[v38];
      uint64_t v40 = &v31[v38];
      uint64_t v41 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
      {
        uint64_t v42 = sub_10017DF08(&qword_100E749B0);
        memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
      }
      uint64_t v43 = v37[7];
      long long v44 = &v30[v43];
      long long v45 = &v31[v43];
      uint64_t v46 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
      __dsta = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
      __dsta(&v30[v37[8]], &v31[v37[8]], v41);
      uint64_t v47 = v37[9];
      uint64_t v48 = &v30[v47];
      uint64_t v49 = &v31[v47];
      uint64_t v50 = *(void *)&v31[v47 + 8];
      *(void *)uint64_t v48 = *(void *)&v31[v47];
      *((void *)v48 + 1) = v50;
      uint64_t v51 = *(void *)&v31[v47 + 24];
      *((void *)v48 + 2) = *(void *)&v31[v47 + 16];
      *((void *)v48 + 3) = v51;
      uint64_t v52 = *(int *)(type metadata accessor for NewsChannel() + 24);
      uint64_t v53 = &v48[v52];
      uint64_t v54 = &v49[v52];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v41))
      {
        uint64_t v55 = sub_10017DF08(&qword_100E749B0);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        __dsta(v53, v54, v41);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v41);
      }
      *(void *)&v30[v37[10]] = *(void *)&v31[v37[10]];
      *(void *)&v30[v37[11]] = *(void *)&v31[v37[11]];
      *(void *)&v30[v37[12]] = *(void *)&v31[v37[12]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_22;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v34 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v30, v31, v34);
LABEL_22:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1006C5CB8(id *a1, uint64_t a2)
{
  type metadata accessor for PreviewLocation();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v4 = type metadata accessor for Location();
      goto LABEL_4;
    case 1u:
      uint64_t v4 = type metadata accessor for LocationOfInterest();
LABEL_4:
      (*(void (**)(id *, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
      break;
    case 2u:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = (uint64_t)a1 + *(int *)(type metadata accessor for SearchLocation() + 32);
      uint64_t v6 = type metadata accessor for Location();
      if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
      }
      break;
    case 3u:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  uint64_t v7 = (char *)a1 + *(int *)(a2 + 32);
  uint64_t v8 = type metadata accessor for WeatherConditionBackgroundModel();
  (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = (char *)a1 + *(int *)(a2 + 36);
  type metadata accessor for LocationPreviewModalViewModel(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = (int *)type metadata accessor for NewsArticle();
    uint64_t v14 = (uint64_t)&v9[v13[6]];
    uint64_t v15 = type metadata accessor for URL();
    if (!_s7Weather24LocationCompositionStateOwet_0(v14, 1, v15)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
    }
    uint64_t v16 = &v9[v13[7]];
    uint64_t v17 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
    uint64_t v18 = *(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8);
    v18(&v9[v13[8]], v15);
    uint64_t v19 = &v9[v13[9]];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = (uint64_t)&v19[*(int *)(type metadata accessor for NewsChannel() + 24)];
    if (!_s7Weather24LocationCompositionStateOwet_0(v20, 1, v15)) {
      v18((char *)v20, v15);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    uint64_t v11 = type metadata accessor for URL();
    uint64_t v12 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8);
    return v12(v9, v11);
  }
  return result;
}

void *sub_1006C6040(void *a1, uint64_t a2, int *a3)
{
  type metadata accessor for PreviewLocation();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v7 = type metadata accessor for LocationOfInterest();
      (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      break;
    case 2u:
      uint64_t v9 = *(void **)a2;
      uint64_t v8 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v8;
      uint64_t v10 = *(void *)(a2 + 24);
      a1[2] = *(void *)(a2 + 16);
      a1[3] = v10;
      uint64_t v11 = *(void *)(a2 + 40);
      a1[4] = *(void *)(a2 + 32);
      a1[5] = v11;
      a1[6] = *(void *)(a2 + 48);
      uint64_t v12 = type metadata accessor for SearchLocation();
      uint64_t v13 = *(int *)(v12 + 32);
      uint64_t v55 = v12;
      __dst = (char *)a1 + v13;
      uint64_t v14 = (const void *)(a2 + v13);
      uint64_t v15 = type metadata accessor for Location();
      id v16 = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
      {
        uint64_t v17 = sub_10017DF08(&qword_100E639E8);
        memcpy(__dst, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(void *)(v15 - 8) + 16))(__dst, v14, v15);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v15);
      }
      uint64_t v19 = *(int *)(v55 + 36);
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = a2 + v19;
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
      v20[16] = *(unsigned char *)(v21 + 16);
      break;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v18 = *(void *)(a2 + 24);
      a1[2] = *(void *)(a2 + 16);
      a1[3] = v18;
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v6 = type metadata accessor for Location();
      (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      break;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *((unsigned char *)a1 + v22) = *(unsigned char *)(a2 + v22);
  uint64_t v23 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = type metadata accessor for WeatherConditionBackgroundModel();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[9];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)(a2 + v27);
  uint64_t v30 = type metadata accessor for LocationPreviewModalViewModel(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v33 = *((void *)v29 + 1);
    *(void *)uint64_t v28 = *(void *)v29;
    *((void *)v28 + 1) = v33;
    uint64_t v34 = *((void *)v29 + 3);
    *((void *)v28 + 2) = *((void *)v29 + 2);
    *((void *)v28 + 3) = v34;
    uint64_t v35 = (int *)type metadata accessor for NewsArticle();
    uint64_t v36 = v35[6];
    uint64_t v37 = &v28[v36];
    uint64_t v38 = &v29[v36];
    uint64_t v39 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
    {
      uint64_t v40 = sub_10017DF08(&qword_100E749B0);
      memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
    }
    uint64_t v41 = v35[7];
    uint64_t v42 = &v28[v41];
    uint64_t v43 = &v29[v41];
    uint64_t v44 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
    __dsta = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
    __dsta(&v28[v35[8]], &v29[v35[8]], v39);
    uint64_t v45 = v35[9];
    uint64_t v46 = &v28[v45];
    uint64_t v47 = &v29[v45];
    uint64_t v48 = *(void *)&v29[v45 + 8];
    *(void *)uint64_t v46 = *(void *)&v29[v45];
    *((void *)v46 + 1) = v48;
    uint64_t v49 = *(void *)&v29[v45 + 24];
    *((void *)v46 + 2) = *(void *)&v29[v45 + 16];
    *((void *)v46 + 3) = v49;
    uint64_t v50 = *(int *)(type metadata accessor for NewsChannel() + 24);
    uint64_t v51 = &v46[v50];
    uint64_t v52 = &v47[v50];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v39))
    {
      uint64_t v53 = sub_10017DF08(&qword_100E749B0);
      memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      __dsta(v51, v52, v39);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v51, 0, 1, v39);
    }
    *(void *)&v28[v35[10]] = *(void *)&v29[v35[10]];
    *(void *)&v28[v35[11]] = *(void *)&v29[v35[11]];
    *(void *)&v28[v35[12]] = *(void *)&v29[v35[12]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_20;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v32 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v28, v29, v32);
LABEL_20:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  return a1;
}

void *sub_1006C6610(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1006C30D4((uint64_t)a1, (void (*)(void))type metadata accessor for PreviewLocation);
    type metadata accessor for PreviewLocation();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v7 = type metadata accessor for LocationOfInterest();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        break;
      case 2u:
        uint64_t v8 = (void *)*a2;
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        uint64_t v9 = type metadata accessor for SearchLocation();
        uint64_t v10 = *(int *)(v9 + 32);
        __dst = (char *)a1 + v10;
        uint64_t v48 = v9;
        uint64_t v11 = (char *)a2 + v10;
        uint64_t v12 = type metadata accessor for Location();
        id v13 = v8;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
        {
          uint64_t v14 = sub_10017DF08(&qword_100E639E8);
          memcpy(__dst, v11, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(__dst, v11, v12);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v12);
        }
        uint64_t v15 = *(int *)(v48 + 36);
        id v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        long long v18 = *(_OWORD *)v17;
        v16[16] = v17[16];
        *(_OWORD *)id v16 = v18;
        break;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v6 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  uint64_t v19 = a3[8];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = type metadata accessor for WeatherConditionBackgroundModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  if (a1 != a2)
  {
    uint64_t v23 = a3[9];
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    sub_1006C30D4((uint64_t)a1 + v23, (void (*)(void))type metadata accessor for LocationPreviewModalViewModel);
    uint64_t v26 = type metadata accessor for LocationPreviewModalViewModel(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *(void *)uint64_t v24 = *(void *)v25;
      *((void *)v24 + 1) = *((void *)v25 + 1);
      *((void *)v24 + 2) = *((void *)v25 + 2);
      *((void *)v24 + 3) = *((void *)v25 + 3);
      uint64_t v29 = (int *)type metadata accessor for NewsArticle();
      uint64_t v30 = v29[6];
      uint64_t v31 = &v24[v30];
      uint64_t v32 = &v25[v30];
      uint64_t v33 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v33))
      {
        uint64_t v34 = sub_10017DF08(&qword_100E749B0);
        memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v33);
      }
      uint64_t v35 = v29[7];
      uint64_t v36 = &v24[v35];
      uint64_t v37 = &v25[v35];
      uint64_t v38 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
      uint64_t v49 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
      v49(&v24[v29[8]], &v25[v29[8]], v33);
      uint64_t v39 = v29[9];
      uint64_t v40 = &v24[v39];
      uint64_t v41 = &v25[v39];
      *(void *)uint64_t v40 = *(void *)&v25[v39];
      *((void *)v40 + 1) = *(void *)&v25[v39 + 8];
      *((void *)v40 + 2) = *(void *)&v25[v39 + 16];
      *((void *)v40 + 3) = *(void *)&v25[v39 + 24];
      uint64_t v42 = *(int *)(type metadata accessor for NewsChannel() + 24);
      uint64_t v43 = &v40[v42];
      uint64_t v44 = &v41[v42];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v33))
      {
        uint64_t v45 = sub_10017DF08(&qword_100E749B0);
        memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        v49(v43, v44, v33);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v33);
      }
      *(void *)&v24[v29[10]] = *(void *)&v25[v29[10]];
      *(void *)&v24[v29[11]] = *(void *)&v25[v29[11]];
      *(void *)&v24[v29[12]] = *(void *)&v25[v29[12]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_23;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v28 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v24, v25, v28);
LABEL_23:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
  return a1;
}

char *sub_1006C6C70(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for PreviewLocation();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(void *)a1 = *(void *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    uint64_t v9 = type metadata accessor for SearchLocation();
    uint64_t v10 = *(int *)(v9 + 32);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = type metadata accessor for Location();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
    {
      uint64_t v14 = sub_10017DF08(&qword_100E639E8);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
    }
    uint64_t v16 = *(int *)(v9 + 36);
    uint64_t v17 = &a1[v16];
    long long v18 = &a2[v16];
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    v17[16] = v18[16];
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v15 = type metadata accessor for LocationOfInterest();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_12;
    }
    uint64_t v8 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
  }
  swift_storeEnumTagMultiPayload();
LABEL_12:
  uint64_t v19 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  a1[v19] = a2[v19];
  uint64_t v20 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = type metadata accessor for WeatherConditionBackgroundModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  uint64_t v24 = a3[9];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = type metadata accessor for LocationPreviewModalViewModel(0);
  int v28 = swift_getEnumCaseMultiPayload();
  if (v28 == 1)
  {
    long long v30 = *((_OWORD *)v26 + 1);
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    *((_OWORD *)v25 + 1) = v30;
    uint64_t v31 = (int *)type metadata accessor for NewsArticle();
    uint64_t v32 = v31[6];
    uint64_t v33 = &v25[v32];
    uint64_t v34 = &v26[v32];
    uint64_t v35 = type metadata accessor for URL();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35))
    {
      uint64_t v36 = sub_10017DF08(&qword_100E749B0);
      memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v35);
    }
    uint64_t v37 = v31[7];
    uint64_t v38 = &v25[v37];
    uint64_t v39 = &v26[v37];
    uint64_t v40 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
    uint64_t v41 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32);
    v41(&v25[v31[8]], &v26[v31[8]], v35);
    uint64_t v42 = v31[9];
    uint64_t v43 = &v25[v42];
    uint64_t v44 = &v26[v42];
    long long v45 = *(_OWORD *)&v26[v42 + 16];
    *(_OWORD *)uint64_t v43 = *(_OWORD *)&v26[v42];
    *((_OWORD *)v43 + 1) = v45;
    uint64_t v46 = *(int *)(type metadata accessor for NewsChannel() + 24);
    uint64_t v47 = &v43[v46];
    uint64_t v48 = &v44[v46];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v35))
    {
      uint64_t v49 = sub_10017DF08(&qword_100E749B0);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      v41(v47, v48, v35);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v35);
    }
    *(void *)&v25[v31[10]] = *(void *)&v26[v31[10]];
    *(void *)&v25[v31[11]] = *(void *)&v26[v31[11]];
    *(void *)&v25[v31[12]] = *(void *)&v26[v31[12]];
    goto LABEL_23;
  }
  if (!v28)
  {
    uint64_t v29 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v25, v26, v29);
LABEL_23:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  return a1;
}

char *sub_1006C71A8(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1006C30D4((uint64_t)a1, (void (*)(void))type metadata accessor for PreviewLocation);
    uint64_t v6 = type metadata accessor for PreviewLocation();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      uint64_t v9 = type metadata accessor for SearchLocation();
      uint64_t v10 = *(int *)(v9 + 32);
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      uint64_t v13 = type metadata accessor for Location();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
      {
        uint64_t v14 = sub_10017DF08(&qword_100E639E8);
        memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
      }
      uint64_t v16 = *(int *)(v9 + 36);
      uint64_t v17 = &a1[v16];
      long long v18 = &a2[v16];
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      v17[16] = v18[16];
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = type metadata accessor for LocationOfInterest();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        goto LABEL_13;
      }
      uint64_t v8 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_13:
  uint64_t v19 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  a1[v19] = a2[v19];
  uint64_t v20 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = type metadata accessor for WeatherConditionBackgroundModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  if (a1 != a2)
  {
    uint64_t v24 = a3[9];
    uint64_t v25 = &a1[v24];
    uint64_t v26 = &a2[v24];
    sub_1006C30D4((uint64_t)&a1[v24], (void (*)(void))type metadata accessor for LocationPreviewModalViewModel);
    uint64_t v27 = type metadata accessor for LocationPreviewModalViewModel(0);
    int v28 = swift_getEnumCaseMultiPayload();
    if (v28 == 1)
    {
      long long v30 = *((_OWORD *)v26 + 1);
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v30;
      uint64_t v31 = (int *)type metadata accessor for NewsArticle();
      uint64_t v32 = v31[6];
      uint64_t v33 = &v25[v32];
      uint64_t v34 = &v26[v32];
      uint64_t v35 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35))
      {
        uint64_t v36 = sub_10017DF08(&qword_100E749B0);
        memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v35);
      }
      uint64_t v37 = v31[7];
      uint64_t v38 = &v25[v37];
      uint64_t v39 = &v26[v37];
      uint64_t v40 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
      uint64_t v41 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32);
      v41(&v25[v31[8]], &v26[v31[8]], v35);
      uint64_t v42 = v31[9];
      uint64_t v43 = &v25[v42];
      uint64_t v44 = &v26[v42];
      long long v45 = *(_OWORD *)&v26[v42 + 16];
      *(_OWORD *)uint64_t v43 = *(_OWORD *)&v26[v42];
      *((_OWORD *)v43 + 1) = v45;
      uint64_t v46 = *(int *)(type metadata accessor for NewsChannel() + 24);
      uint64_t v47 = &v43[v46];
      uint64_t v48 = &v44[v46];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v35))
      {
        uint64_t v49 = sub_10017DF08(&qword_100E749B0);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        v41(v47, v48, v35);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v35);
      }
      *(void *)&v25[v31[10]] = *(void *)&v26[v31[10]];
      *(void *)&v25[v31[11]] = *(void *)&v26[v31[11]];
      *(void *)&v25[v31[12]] = *(void *)&v26[v31[12]];
      goto LABEL_25;
    }
    if (!v28)
    {
      uint64_t v29 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v25, v26, v29);
LABEL_25:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1006C7728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006C773C);
}

uint64_t sub_1006C773C(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for PreviewLocation();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    if (a2 == 254)
    {
      unsigned int v10 = *(unsigned __int8 *)(a1 + a3[5]);
      if (v10 >= 2) {
        return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
      }
      else {
        return 0;
      }
    }
    type metadata accessor for WeatherConditionBackgroundModel();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a2)
    {
      uint64_t v8 = v12;
      uint64_t v14 = a3[8];
    }
    else
    {
      uint64_t v8 = type metadata accessor for LocationPreviewModalViewModel(0);
      uint64_t v14 = a3[9];
    }
    uint64_t v9 = a1 + v14;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_1006C781C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006C7830);
}

void sub_1006C7830(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for PreviewLocation();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 254)
    {
      *(unsigned char *)(a1 + a4[5]) = a2 + 1;
      return;
    }
    type metadata accessor for WeatherConditionBackgroundModel();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[8];
    }
    else
    {
      uint64_t v10 = type metadata accessor for LocationPreviewModalViewModel(0);
      uint64_t v14 = a4[9];
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t sub_1006C78FC()
{
  uint64_t result = type metadata accessor for PreviewLocation();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for WeatherConditionBackgroundModel();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for LocationPreviewModalViewModel(319);
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1006C7A0C()
{
  uint64_t v1 = v0;
  type metadata accessor for LocationPreviewModalViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LocationPreviewViewContentModel(0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LocationPreviewViewModel(0);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  sub_1006C8EA8(v1, v12 - v11, (void (*)(void))type metadata accessor for LocationPreviewViewModel);
  if (_s7Weather24LocationCompositionStateOwet_0(v13, 1, v5) == 1) {
    return 0;
  }
  sub_1006C8F08(v13, (uint64_t)v8, (void (*)(void))type metadata accessor for LocationPreviewViewContentModel);
  sub_1006C8EA8((uint64_t)&v8[*(int *)(v5 + 36)], (uint64_t)v4, (void (*)(void))type metadata accessor for LocationPreviewModalViewModel);
  uint64_t v14 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1006C30D4((uint64_t)v4, (void (*)(void))type metadata accessor for LocationPreviewModalViewModel);
      goto LABEL_4;
    case 2u:
      break;
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
    case 8u:
    case 9u:
LABEL_4:
      uint64_t v14 = 1;
      break;
    default:
      sub_1006C30D4((uint64_t)v4, (void (*)(void))type metadata accessor for LocationPreviewModalViewModel);
      uint64_t v14 = 0;
      break;
  }
  sub_1006C30D4((uint64_t)v8, (void (*)(void))type metadata accessor for LocationPreviewViewContentModel);
  return v14;
}

uint64_t sub_1006C7C48(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = type metadata accessor for LocationPreviewViewContentModel(0);
  sub_100162E4C();
  __chkstk_darwin(v7);
  uint64_t v8 = sub_1001A23C0();
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_10017DF08(&qword_100E8C5A0);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_10017A790();
  uint64_t v16 = v2 + v15;
  sub_1006C8EA8(a1, v2, (void (*)(void))type metadata accessor for LocationPreviewViewModel);
  sub_1006C8EA8(a2, v16, (void (*)(void))type metadata accessor for LocationPreviewViewModel);
  sub_100179F0C(v2);
  if (v18)
  {
    sub_100179F0C(v16);
    if (v18)
    {
LABEL_5:
      sub_1006C30D4(v2, (void (*)(void))type metadata accessor for LocationPreviewViewModel);
      return 1;
    }
    goto LABEL_9;
  }
  sub_1006C8EA8(v2, v12, (void (*)(void))type metadata accessor for LocationPreviewViewModel);
  sub_100179F0C(v16);
  if (v18)
  {
    sub_1006C30D4(v12, (void (*)(void))type metadata accessor for LocationPreviewViewContentModel);
LABEL_9:
    sub_1001781AC(v2, &qword_100E8C5A0);
    return 0;
  }
  sub_1006C8F08(v16, v3, (void (*)(void))type metadata accessor for LocationPreviewViewContentModel);
  char v19 = sub_10081C338(v12, v3);
  if (v19)
  {
    sub_100181680();
    if (v18)
    {
      sub_100181680();
      if (v18)
      {
        sub_100181680();
        if (v18)
        {
          if ((static WeatherConditionBackgroundModel.== infix(_:_:)() & 1) != 0
            && (sub_1006C7F90(v12 + *(int *)(v6 + 36), v3 + *(int *)(v6 + 36)) & 1) != 0)
          {
            sub_1006C30D4(v3, (void (*)(void))type metadata accessor for LocationPreviewViewContentModel);
            sub_1006C30D4(v12, (void (*)(void))type metadata accessor for LocationPreviewViewContentModel);
            goto LABEL_5;
          }
        }
      }
    }
  }
  sub_1006C30D4(v3, (void (*)(void))type metadata accessor for LocationPreviewViewContentModel);
  sub_1006C30D4(v12, (void (*)(void))type metadata accessor for LocationPreviewViewContentModel);
  sub_1006C30D4(v2, (void (*)(void))type metadata accessor for LocationPreviewViewModel);
  return 0;
}

uint64_t sub_1006C7EE8(uint64_t a1, uint64_t a2)
{
  if ((sub_10081C338(a1, a2) & 1) == 0) {
    return 0;
  }
  type metadata accessor for LocationPreviewViewContentModel(0);
  sub_10011C778();
  if (!v5) {
    return 0;
  }
  uint64_t v6 = v4;
  sub_10011C778();
  if (!v5) {
    return 0;
  }
  sub_10011C778();
  if (!v5 || (static WeatherConditionBackgroundModel.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v7 = *(int *)(v6 + 36);

  return sub_1006C7F90(a1 + v7, a2 + v7);
}

uint64_t sub_1006C7F90(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = type metadata accessor for NewsArticle();
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_1001626E0();
  int v28 = (void *)(v9 - v8);
  uint64_t v10 = type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v29 = v11;
  __chkstk_darwin(v12);
  sub_1001A0CA4();
  sub_100162E4C();
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (void **)((char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  char v18 = (char *)&v28 - v17;
  uint64_t v19 = sub_10017DF08(&qword_100E8C5A8);
  uint64_t v20 = sub_100109308(v19);
  __chkstk_darwin(v20);
  sub_10017A790();
  uint64_t v22 = v2 + v21;
  sub_1006C8EA8(a1, v2, (void (*)(void))type metadata accessor for LocationPreviewModalViewModel);
  sub_1006C8EA8(a2, v22, (void (*)(void))type metadata accessor for LocationPreviewModalViewModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1006C8EA8(v2, (uint64_t)v16, (void (*)(void))type metadata accessor for LocationPreviewModalViewModel);
      if (sub_100180190() == 1)
      {
        uint64_t v23 = v28;
        sub_1006C8F08(v22, (uint64_t)v28, (void (*)(void))type metadata accessor for NewsArticle);
        char v24 = sub_100A6A8B0(v16, v23);
        sub_1006C30D4((uint64_t)v23, (void (*)(void))type metadata accessor for NewsArticle);
        sub_1006C30D4((uint64_t)v16, (void (*)(void))type metadata accessor for NewsArticle);
        goto LABEL_26;
      }
      sub_1006C30D4((uint64_t)v16, (void (*)(void))type metadata accessor for NewsArticle);
      goto LABEL_23;
    case 2u:
      if (sub_100180190() != 2) {
        goto LABEL_23;
      }
      goto LABEL_21;
    case 3u:
      if (sub_100180190() != 3) {
        goto LABEL_23;
      }
      goto LABEL_21;
    case 4u:
      if (sub_100180190() != 4) {
        goto LABEL_23;
      }
      goto LABEL_21;
    case 5u:
      if (sub_100180190() != 5) {
        goto LABEL_23;
      }
      goto LABEL_21;
    case 6u:
      if (sub_100180190() != 6) {
        goto LABEL_23;
      }
      goto LABEL_21;
    case 7u:
      if (sub_100180190() != 7) {
        goto LABEL_23;
      }
      goto LABEL_21;
    case 8u:
      if (sub_100180190() != 8) {
        goto LABEL_23;
      }
      goto LABEL_21;
    case 9u:
      if (sub_100180190() != 9) {
        goto LABEL_23;
      }
LABEL_21:
      sub_1006C30D4(v2, (void (*)(void))type metadata accessor for LocationPreviewModalViewModel);
      char v24 = 1;
      break;
    default:
      sub_1006C8EA8(v2, (uint64_t)v18, (void (*)(void))type metadata accessor for LocationPreviewModalViewModel);
      if (sub_100180190())
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v18, v10);
LABEL_23:
        sub_1001781AC(v2, &qword_100E8C5A8);
        char v24 = 0;
      }
      else
      {
        uint64_t v26 = v29;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v3, v22, v10);
        char v24 = static URL.== infix(_:_:)();
        uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
        v27(v3, v10);
        v27((uint64_t)v18, v10);
LABEL_26:
        sub_1006C30D4(v2, (void (*)(void))type metadata accessor for LocationPreviewModalViewModel);
      }
      break;
  }
  return v24 & 1;
}

uint64_t sub_1006C83B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for LocationPreviewViewContentModel(0);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_1001A23C0();
  sub_100162E4C();
  __chkstk_darwin(v5);
  uint64_t v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1006C8EA8(v1, (uint64_t)v7, (void (*)(void))type metadata accessor for LocationPreviewViewModel);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v3) == 1)
  {
    unint64_t v8 = 0xED0000676E697765;
    uint64_t v9 = 0x6976657250746F6ELL;
  }
  else
  {
    sub_1006C8F08((uint64_t)v7, v1, (void (*)(void))type metadata accessor for LocationPreviewViewContentModel);
    sub_1006C8E18(&qword_100E8C5C0, (void (*)(uint64_t))type metadata accessor for LocationPreviewViewContentModel);
    uint64_t v9 = ShortDescribable.description.getter();
    unint64_t v8 = v10;
    sub_1006C30D4(v1, (void (*)(void))type metadata accessor for LocationPreviewViewContentModel);
  }
  sub_10017DF08(&qword_100E635E0);
  *(_OWORD *)(swift_initStackObject() + 16) = xmmword_100C251B0;
  sub_100162AD8();
  v11[4] = 0xD000000000000018;
  v11[5] = v12;
  v11[9] = &type metadata for String;
  void v11[6] = v9;
  v11[7] = v8;
  Dictionary.init(dictionaryLiteral:)();
  a1[3] = sub_10017DF08(&qword_100E8C5B0);
  a1[4] = sub_100047B30(&qword_100E8C5B8, &qword_100E8C5B0);
  sub_10023C310(a1);
  return sub_10017E7E8();
}

uint64_t sub_1006C85E8()
{
  sub_1006C8E18(&qword_100E8C5C8, (void (*)(uint64_t))type metadata accessor for LocationPreviewViewModel);

  return ShortDescribable.description.getter();
}

uint64_t sub_1006C8654@<X0>(uint64_t *a1@<X8>)
{
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C31880;
  *(void *)(inited + 32) = 0x4C77656976657270;
  *(void *)(inited + 40) = 0xEF6E6F697461636FLL;
  *(void *)(inited + 72) = type metadata accessor for PreviewLocation();
  uint64_t v4 = sub_10023C310((uint64_t *)(inited + 48));
  sub_1006C8EA8(v1, (uint64_t)v4, (void (*)(void))type metadata accessor for PreviewLocation);
  sub_100162AD8();
  *(void *)(inited + 80) = 0xD000000000000019;
  *(void *)(inited + 88) = v5;
  *(unsigned char *)(inited + 96) = *(unsigned char *)(v1
                                     + *(int *)(type metadata accessor for LocationPreviewViewContentModel(0) + 20));
  *(void *)(inited + 120) = &type metadata for Bool;
  *(void *)(inited + 128) = 0xD000000000000021;
  sub_100162AD8();
  *(void *)(inited + 136) = v6;
  *(unsigned char *)(inited + 144) = *(unsigned char *)(v1 + *(int *)(v7 + 28));
  *(void *)(inited + 168) = v8;
  *(void *)(inited + 176) = 0xD00000000000001ALL;
  sub_100162AD8();
  *(void *)(inited + 184) = v9;
  uint64_t v11 = v1 + *(int *)(v10 + 32);
  uint64_t v12 = type metadata accessor for WeatherConditionBackgroundModel();
  *(void *)(inited + 216) = v12;
  uint64_t v13 = sub_10023C310((uint64_t *)(inited + 192));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v13, v11, v12);
  strcpy((char *)(inited + 224), "modalViewModel");
  *(unsigned char *)(inited + 239) = -18;
  type metadata accessor for LocationPreviewModalViewModel(0);
  sub_1006C8E18(&qword_100E8C5D0, (void (*)(uint64_t))type metadata accessor for LocationPreviewModalViewModel);
  uint64_t v14 = ShortDescribable.description.getter();
  *(void *)(inited + 264) = &type metadata for String;
  *(void *)(inited + 240) = v14;
  *(void *)(inited + 248) = v15;
  Dictionary.init(dictionaryLiteral:)();
  a1[3] = sub_10017DF08(&qword_100E8C5D8);
  a1[4] = sub_100047B30(&qword_100E8C5E0, &qword_100E8C5D8);
  sub_10023C310(a1);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_1006C88EC()
{
  sub_1006C8E18(&qword_100E8C5C0, (void (*)(uint64_t))type metadata accessor for LocationPreviewViewContentModel);

  return ShortDescribable.description.getter();
}

uint64_t sub_1006C8958@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1001A0CA4();
  sub_100162E4C();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1006C8EA8(v3, (uint64_t)v11, (void (*)(void))type metadata accessor for LocationPreviewModalViewModel);
  unint64_t v12 = 0xE400000000000000;
  unint64_t v13 = 1701736302;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1006C30D4((uint64_t)v11, (void (*)(void))type metadata accessor for LocationPreviewModalViewModel);
      unint64_t v12 = 0xE700000000000000;
      unint64_t v13 = 0x656C6369747261;
      break;
    case 2u:
      break;
    case 3u:
      unint64_t v12 = 0xEF6C69617465446ELL;
      unint64_t v13 = 0x6F697469646E6F63;
      break;
    case 4u:
      unint64_t v12 = 0x8000000100C95BC0;
      unint64_t v13 = 0xD000000000000010;
      break;
    case 5u:
      unint64_t v13 = 0xD00000000000001BLL;
      uint64_t v16 = "nextHourPrecipitationDetail";
      goto LABEL_11;
    case 6u:
      unint64_t v13 = 0xD000000000000013;
      uint64_t v16 = "sunriseSunsetDetail";
      goto LABEL_11;
    case 7u:
      unint64_t v12 = 0xEA00000000006C69;
      unint64_t v13 = 0x617465446E6F6F6DLL;
      break;
    case 8u:
      unint64_t v12 = 0xEE006C6961746544;
      unint64_t v13 = 0x7365676172657661;
      break;
    case 9u:
      unint64_t v13 = 0xD000000000000015;
      uint64_t v16 = "homeAndWorkRefinement";
LABEL_11:
      unint64_t v12 = (unint64_t)(v16 - 32) | 0x8000000000000000;
      break;
    default:
      (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v2, v11, v5);
      v19[0] = 0;
      v19[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(16);
      swift_bridgeObjectRelease();
      strcpy((char *)v19, "callToAction(");
      HIWORD(v19[1]) = -4864;
      sub_1006C8E18(&qword_100E6D580, (void (*)(uint64_t))&type metadata accessor for URL);
      v14._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v14);
      swift_bridgeObjectRelease();
      v15._uint64_t countAndFlagsBits = 41;
      v15._object = (void *)0xE100000000000000;
      String.append(_:)(v15);
      unint64_t v13 = v19[0];
      unint64_t v12 = v19[1];
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v5);
      break;
  }
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C251B0;
  *(void *)(inited + 32) = 0x657669746361;
  *(void *)(inited + 40) = 0xE600000000000000;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v13;
  *(void *)(inited + 56) = v12;
  Dictionary.init(dictionaryLiteral:)();
  a1[3] = sub_10017DF08(&qword_100E8C5E8);
  a1[4] = sub_100047B30(&qword_100E8C5F0, &qword_100E8C5E8);
  sub_10023C310(a1);
  return sub_10017E7E8();
}

uint64_t sub_1006C8D1C()
{
  sub_1006C8E18(&qword_100E8C5D0, (void (*)(uint64_t))type metadata accessor for LocationPreviewModalViewModel);

  return ShortDescribable.description.getter();
}

uint64_t sub_1006C8D88()
{
  return sub_1006C8E18(&qword_100E8C588, (void (*)(uint64_t))type metadata accessor for LocationPreviewModalViewModel);
}

uint64_t sub_1006C8DD0()
{
  return sub_1006C8E18(&qword_100E8C590, (void (*)(uint64_t))type metadata accessor for LocationPreviewViewContentModel);
}

uint64_t sub_1006C8E18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1006C8E60()
{
  return sub_1006C8E18(&qword_100E8C598, (void (*)(uint64_t))type metadata accessor for LocationPreviewViewModel);
}

uint64_t sub_1006C8EA8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1006C8F08(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1006C8F68@<X0>(uint64_t *a1@<X8>)
{
  sub_10020D948(v1 + 16, (uint64_t)(a1 + 2));
  swift_retain();
  sub_10017DF08(&qword_100E64790);
  sub_1006C8FF4();
  uint64_t result = ObservedObject.init(wrappedValue:)();
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t type metadata accessor for AirQualityDetailModule()
{
  return self;
}

unint64_t sub_1006C8FF4()
{
  unint64_t result = qword_100E647C0;
  if (!qword_100E647C0)
  {
    sub_10018C6DC(&qword_100E64790);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E647C0);
  }
  return result;
}

uint64_t sub_1006C9048(uint64_t a1, uint64_t a2)
{
  uint64_t v90 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v84 = v6;
  __chkstk_darwin(v7);
  sub_100125FF8();
  uint64_t v86 = sub_10017DF08(&qword_100E6DD18);
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v89 = v10 - v9;
  uint64_t v11 = sub_10017DF08(&qword_100E6DC08);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_10016278C();
  uint64_t v85 = v13 - v14;
  __chkstk_darwin(v15);
  uint64_t v87 = (uint64_t)&v80 - v16;
  __chkstk_darwin(v17);
  uint64_t v88 = (uint64_t)&v80 - v18;
  uint64_t v19 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v91 = v20;
  __chkstk_darwin(v21);
  sub_10011BFD8();
  uint64_t v22 = sub_10017DF08(&qword_100E6EEC0);
  sub_100162E4C();
  __chkstk_darwin(v23);
  sub_1001626E0();
  uint64_t v26 = v25 - v24;
  uint64_t v27 = sub_10017DF08(&qword_100E639E8);
  uint64_t v28 = sub_100109308(v27);
  __chkstk_darwin(v28);
  sub_10016278C();
  uint64_t v31 = v29 - v30;
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v80 - v33;
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)&v80 - v36;
  sub_10011990C();
  if ((v38 & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v80 = v3;
  uint64_t v39 = type metadata accessor for WeatherMenuInput();
  uint64_t v40 = *(int *)(v39 + 20);
  uint64_t v82 = a1;
  sub_1001B7204(a1 + v40, (uint64_t)v37, &qword_100E639E8);
  uint64_t v81 = (int *)v39;
  uint64_t v41 = *(int *)(v39 + 20);
  uint64_t v83 = a2;
  sub_1001B7204(a2 + v41, (uint64_t)v34, &qword_100E639E8);
  uint64_t v42 = v26 + *(int *)(v22 + 48);
  sub_1001B7204((uint64_t)v37, v26, &qword_100E639E8);
  sub_1001B7204((uint64_t)v34, v42, &qword_100E639E8);
  sub_10012B520(v26, 1, v19);
  if (v43)
  {
    sub_1001781AC((uint64_t)v34, &qword_100E639E8);
    sub_1001781AC((uint64_t)v37, &qword_100E639E8);
    sub_10012B520(v42, 1, v19);
    if (v43)
    {
      sub_1001781AC(v26, &qword_100E639E8);
      goto LABEL_12;
    }
LABEL_10:
    uint64_t v44 = &qword_100E6EEC0;
    uint64_t v45 = v26;
LABEL_21:
    sub_1001781AC(v45, v44);
    goto LABEL_22;
  }
  sub_1001B7204(v26, v31, &qword_100E639E8);
  sub_10012B520(v42, 1, v19);
  if (v43)
  {
    sub_1001781AC((uint64_t)v34, &qword_100E639E8);
    sub_1001781AC((uint64_t)v37, &qword_100E639E8);
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v31, v19);
    goto LABEL_10;
  }
  uint64_t v46 = v91;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v91 + 32))(v2, v42, v19);
  sub_1002310BC((unint64_t *)&qword_100E639A8, (void (*)(uint64_t))&type metadata accessor for Location);
  char v47 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
  v48(v2, v19);
  sub_1001781AC((uint64_t)v34, &qword_100E639E8);
  sub_1001781AC((uint64_t)v37, &qword_100E639E8);
  v48(v31, v19);
  sub_1001781AC(v26, &qword_100E639E8);
  if ((v47 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_12:
  uint64_t v50 = v81;
  uint64_t v49 = v82;
  uint64_t v51 = v88;
  sub_1001B7204(v82 + v81[6], v88, &qword_100E6DC08);
  uint64_t v52 = v83;
  uint64_t v53 = v87;
  sub_1001B7204(v83 + v50[6], v87, &qword_100E6DC08);
  uint64_t v54 = v89;
  uint64_t v55 = v89 + *(int *)(v86 + 48);
  sub_1001B7204(v51, v89, &qword_100E6DC08);
  sub_1001B7204(v53, v55, &qword_100E6DC08);
  uint64_t v56 = v90;
  sub_10012B520(v54, 1, v90);
  if (v43)
  {
    sub_1001781AC(v53, &qword_100E6DC08);
    sub_1001781AC(v51, &qword_100E6DC08);
    sub_10012B520(v55, 1, v56);
    if (v43)
    {
      sub_1001781AC(v54, &qword_100E6DC08);
      goto LABEL_25;
    }
    goto LABEL_20;
  }
  uint64_t v57 = v85;
  sub_1001B7204(v54, v85, &qword_100E6DC08);
  sub_10012B520(v55, 1, v56);
  if (v58)
  {
    sub_1001781AC(v53, &qword_100E6DC08);
    sub_1001781AC(v51, &qword_100E6DC08);
    (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v57, v56);
LABEL_20:
    uint64_t v44 = &qword_100E6DD18;
    uint64_t v45 = v54;
    goto LABEL_21;
  }
  uint64_t v61 = v84;
  uint64_t v62 = v80;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 32))(v80, v55, v56);
  sub_1002310BC((unint64_t *)&qword_100E63A30, (void (*)(uint64_t))&type metadata accessor for Location.Identifier);
  LODWORD(v91) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v63 = v51;
  uint64_t v64 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
  v64(v62, v56);
  sub_1001781AC(v53, &qword_100E6DC08);
  sub_1001781AC(v63, &qword_100E6DC08);
  uint64_t v49 = v82;
  v64(v57, v56);
  uint64_t v52 = v83;
  sub_1001781AC(v54, &qword_100E6DC08);
  if ((v91 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_25:
  if ((sub_100212308(*(unsigned char *)(v49 + v50[7]), *(unsigned char *)(v52 + v50[7])) & 1) == 0
    || (static WeatherMapOverlayKind.== infix(_:_:)() & 1) == 0)
  {
    goto LABEL_22;
  }
  uint64_t v65 = v50[9];
  uint64_t v66 = *(void *)(v49 + v65);
  uint64_t v67 = *(void *)(v49 + v65 + 8);
  uint64_t v68 = (void *)(v52 + v65);
  BOOL v69 = v66 == *v68 && v67 == v68[1];
  if (v69 || (v70 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v59 = 0, (v70 & 1) != 0))
  {
    sub_10011AD08();
    if (v71)
    {
      sub_10011A5D0();
      if (v72)
      {
        uint64_t v73 = v50[10];
        uint64_t v74 = *(void **)(v49 + v73);
        int v75 = *(void **)(v52 + v73);
        if (v74)
        {
          if (v75)
          {
            sub_10011CB48();
            id v76 = v75;
            id v77 = v74;
            char v78 = static NSObject.== infix(_:_:)();

            if (v78)
            {
LABEL_39:
              sub_100126FF0();
              if (v79)
              {
                char v59 = *(unsigned char *)(v49 + v50[12]) ^ *(unsigned char *)(v52 + v50[12]) ^ 1;
                return v59 & 1;
              }
            }
          }
        }
        else if (!v75)
        {
          goto LABEL_39;
        }
      }
    }
LABEL_22:
    char v59 = 0;
  }
  return v59 & 1;
}

uint64_t sub_1006C97F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = sub_10017DF08(&qword_100E6DC08);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_10011BFD8();
  uint64_t v60 = type metadata accessor for LocationsState();
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_10017DF08(&qword_100E639E8);
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  sub_100125FF8();
  uint64_t v19 = type metadata accessor for ModalViewState(0);
  uint64_t v20 = sub_100109308(v19);
  __chkstk_darwin(v20);
  sub_1001626E0();
  uint64_t v23 = v22 - v21;
  uint64_t v24 = sub_10017DF08(&qword_100E71640);
  uint64_t v25 = sub_100109308(v24);
  __chkstk_darwin(v25);
  sub_10016278C();
  uint64_t v28 = v26 - v27;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v56 - v30;
  sub_100B3044C((uint64_t)&v56 - v30);
  uint64_t v58 = v23;
  sub_10011A1B0(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, v23, (void (*)(void))type metadata accessor for ModalViewState);
  uint64_t v32 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
  sub_10011A1B0(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, v11, (void (*)(void))type metadata accessor for LocationsState);
  sub_1001B7204(v11, v16, (uint64_t *)&unk_100EADD50);
  sub_1006D7660(v11, (void (*)(void))type metadata accessor for LocationsState);
  uint64_t v33 = type metadata accessor for CurrentLocation();
  sub_10012B520(v16, 1, v33);
  if (v34)
  {
    sub_1001781AC(v16, (uint64_t *)&unk_100EADD50);
    uint64_t v35 = type metadata accessor for Location();
    _s7Weather24LocationCompositionStateOwst_0(v3, 1, 1, v35);
  }
  else
  {
    CurrentLocation.location.getter();
    sub_1006D7660(v16, (void (*)(void))&type metadata accessor for CurrentLocation);
  }
  sub_10020E72C((uint64_t)v31, v28, &qword_100E71640);
  uint64_t v36 = type metadata accessor for PresentedLocation();
  sub_10012B520(v28, 1, v36);
  uint64_t v59 = v3;
  uint64_t v57 = v2;
  if (v34)
  {
    sub_1001781AC(v28, &qword_100E71640);
    uint64_t v41 = type metadata accessor for Location.Identifier();
    uint64_t v39 = v2;
    uint64_t v40 = 1;
  }
  else
  {
    uint64_t v37 = type metadata accessor for Location.Identifier();
    sub_100162E4C();
    sub_10008B8B4();
    v38();
    sub_1006D7660(v28, (void (*)(void))type metadata accessor for PresentedLocation);
    uint64_t v39 = v2;
    uint64_t v40 = 0;
    uint64_t v41 = v37;
  }
  _s7Weather24LocationCompositionStateOwst_0(v39, v40, 1, v41);
  uint64_t v42 = OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
  char v43 = *(unsigned char *)(a1 + *(int *)(type metadata accessor for ViewState(0) + 40) + v42 + 1);
  type metadata accessor for WeatherMapPresentationState(0);
  uint64_t v44 = (int *)type metadata accessor for WeatherMenuInput();
  type metadata accessor for WeatherMapOverlayKind();
  sub_100162E4C();
  sub_10008B8B4();
  v45();
  uint64_t v46 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
  uint64_t v47 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 8);
  uint64_t v49 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  uint64_t v48 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 24);
  uint64_t v50 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess();
  uint64_t v51 = *(void **)(v50 + *(int *)(type metadata accessor for EnvironmentState() + 68) + 16);
  uint64_t v52 = *(void *)(v32 + *(int *)(v60 + 28));
  LOBYTE(v50) = *(unsigned char *)(v50 + 2) == 4;
  sub_1006D75FC(v58, a2);
  sub_10020E72C(v59, a2 + v44[5], &qword_100E639E8);
  sub_10020E72C(v57, a2 + v44[6], &qword_100E6DC08);
  *(unsigned char *)(a2 + v44[7]) = v43;
  uint64_t v53 = (void *)(a2 + v44[9]);
  void *v53 = v46;
  v53[1] = v47;
  void v53[2] = v49;
  v53[3] = v48;
  *(void *)(a2 + v44[10]) = v51;
  *(void *)(a2 + v44[11]) = v52;
  *(unsigned char *)(a2 + v44[12]) = v50;
  _s7Weather24LocationCompositionStateOwst_0(a2, 0, 1, (uint64_t)v44);
  id v54 = v51;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for WeatherMenuInputFactory()
{
  return self;
}

char *sub_1006C9D30(char *a1, char **a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = &v9[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for ModalViewState(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        type metadata accessor for PreviewLocation();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v24 = type metadata accessor for LocationOfInterest();
            (*(void (**)(char *, char **, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
            break;
          case 2u:
            uint64_t v26 = *a2;
            uint64_t v25 = a2[1];
            *(void *)a1 = *a2;
            *((void *)a1 + 1) = v25;
            uint64_t v27 = a2[3];
            *((void *)a1 + 2) = a2[2];
            *((void *)a1 + 3) = v27;
            uint64_t v28 = a2[5];
            *((void *)a1 + 4) = a2[4];
            *((void *)a1 + 5) = v28;
            *((void *)a1 + 6) = a2[6];
            uint64_t v29 = type metadata accessor for SearchLocation();
            uint64_t v30 = *(int *)(v29 + 32);
            __dst = &a1[v30];
            uint64_t v397 = v29;
            uint64_t v31 = (char *)a2 + v30;
            uint64_t v32 = type metadata accessor for Location();
            uint64_t v33 = v26;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v32))
            {
              uint64_t v34 = sub_10017DF08(&qword_100E639E8);
              memcpy(__dst, v31, *(void *)(*(void *)(v34 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(__dst, v31, v32);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v32);
            }
            uint64_t v90 = *(int *)(v397 + 36);
            uint64_t v91 = &a1[v90];
            long long v92 = (char *)a2 + v90;
            *(_OWORD *)uint64_t v91 = *(_OWORD *)v92;
            v91[16] = v92[16];
            break;
          case 3u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            uint64_t v35 = a2[3];
            *((void *)a1 + 2) = a2[2];
            *((void *)a1 + 3) = v35;
            swift_bridgeObjectRetain();
            break;
          default:
            uint64_t v8 = type metadata accessor for Location();
            (*(void (**)(char *, char **, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
            break;
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v93 = *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
        uint64_t v94 = &a1[v93];
        uint64_t v95 = (char **)((char *)a2 + v93);
        uint64_t v96 = type metadata accessor for LocationPreviewModalViewState(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v97 = type metadata accessor for URL();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v97 - 8) + 16))(v94, v95, v97);
            goto LABEL_78;
          case 1u:
            uint64_t v98 = type metadata accessor for DetailCondition();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v98 - 8) + 16))(v94, v95, v98);
            uint64_t v99 = type metadata accessor for ConditionDetailViewState();
            uint64_t v100 = *(int *)(v99 + 20);
            char v101 = &v94[v100];
            char v102 = (char *)v95 + v100;
            uint64_t v103 = type metadata accessor for Location();
            char v104 = v101;
            uint64_t v105 = (int *)v99;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 16))(v104, v102, v103);
            uint64_t v106 = *(int *)(v99 + 24);
            __dstb = &v94[v106];
            uint64_t v107 = (char *)v95 + v106;
            uint64_t v108 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v107, 1, v108))
            {
              uint64_t v109 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(__dstb, v107, *(void *)(*(void *)(v109 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16))(__dstb, v107, v108);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstb, 0, 1, v108);
            }
            uint64_t v191 = v108;
            uint64_t v192 = v105[7];
            size_t v193 = &v94[v192];
            uint64_t v194 = (char *)v95 + v192;
            long long v195 = *((_OWORD *)v194 + 1);
            *(_OWORD *)size_t v193 = *(_OWORD *)v194;
            *((_OWORD *)v193 + 1) = v195;
            v193[32] = v194[32];
            uint64_t v196 = v105[8];
            uint64_t v197 = &v94[v196];
            uint64_t v198 = (void *)((char *)v95 + v196);
            uint64_t v199 = (int *)type metadata accessor for DetailChartSelection();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v198, 1, (uint64_t)v199))
            {
              uint64_t v200 = sub_10017DF08(&qword_100E711F8);
              memcpy(v197, v198, *(void *)(*(void *)(v200 - 8) + 64));
            }
            else
            {
              uint64_t v226 = v198[1];
              *(void *)uint64_t v197 = *v198;
              *((void *)v197 + 1) = v226;
              uint64_t v227 = v199[5];
              uint64_t v377 = (char *)v198 + v227;
              uint64_t v381 = &v197[v227];
              __dstg = v105;
              uint64_t v228 = v191;
              uint64_t v229 = *(void (**)(char *, char *, uint64_t))(*(void *)(v191 - 8) + 16);
              swift_bridgeObjectRetain();
              v229(v381, v377, v228);
              v229(&v197[v199[6]], (char *)v198 + v199[6], v228);
              v229(&v197[v199[7]], (char *)v198 + v199[7], v228);
              uint64_t v105 = __dstg;
              *(void *)&v197[v199[8]] = *(void *)((char *)v198 + v199[8]);
              uint64_t v230 = v199[9];
              uint64_t v231 = &v197[v230];
              uint64_t v232 = (char *)v198 + v230;
              v231[8] = v232[8];
              *(void *)uint64_t v231 = *(void *)v232;
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v197, 0, 1, (uint64_t)v199);
            }
            v94[v105[9]] = *((unsigned char *)v95 + v105[9]);
            goto LABEL_81;
          case 2u:
            uint64_t v110 = type metadata accessor for Location();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v110 - 8) + 16))(v94, v95, v110);
            uint64_t v111 = type metadata accessor for AirQualityDetailViewState();
            v94[*(int *)(v111 + 20)] = *((unsigned char *)v95 + *(int *)(v111 + 20));
            uint64_t v112 = *(int *)(v111 + 24);
            uint64_t v113 = &v94[v112];
            uint64_t v114 = (char *)v95 + v112;
            v113[32] = v114[32];
            long long v115 = *((_OWORD *)v114 + 1);
            *(_OWORD *)uint64_t v113 = *(_OWORD *)v114;
            *((_OWORD *)v113 + 1) = v115;
            goto LABEL_78;
          case 3u:
            uint64_t v116 = type metadata accessor for Location();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v116 - 8) + 16))(v94, v95, v116);
            uint64_t v117 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
            uint64_t v118 = &v94[v117];
            uint64_t v119 = (char *)v95 + v117;
            long long v120 = *((_OWORD *)v119 + 1);
            *(_OWORD *)uint64_t v118 = *(_OWORD *)v119;
            *((_OWORD *)v118 + 1) = v120;
            v118[32] = v119[32];
            goto LABEL_78;
          case 4u:
            uint64_t v121 = type metadata accessor for Location();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v121 - 8) + 16))(v94, v95, v121);
            uint64_t v122 = type metadata accessor for SunriseSunsetDetailViewState();
            uint64_t v123 = *(int *)(v122 + 20);
            uint64_t v124 = &v94[v123];
            uint64_t v125 = (char *)v95 + v123;
            long long v126 = *((_OWORD *)v125 + 1);
            *(_OWORD *)uint64_t v124 = *(_OWORD *)v125;
            *((_OWORD *)v124 + 1) = v126;
            v124[32] = v125[32];
            v94[*(int *)(v122 + 24)] = *((unsigned char *)v95 + *(int *)(v122 + 24));
            goto LABEL_78;
          case 5u:
            uint64_t v127 = type metadata accessor for Location();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v127 - 8) + 16))(v94, v95, v127);
            uint64_t v128 = (int *)type metadata accessor for MoonDetailViewState();
            uint64_t v129 = v128[5];
            uint64_t v130 = &v94[v129];
            uint64_t v131 = (char *)v95 + v129;
            uint64_t v132 = type metadata accessor for MoonDetailSelectedDate();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v131, 1, v132))
            {
              uint64_t v133 = sub_10017DF08(&qword_100E67240);
              memcpy(v130, v131, *(void *)(*(void *)(v133 - 8) + 64));
            }
            else
            {
              swift_getEnumCaseMultiPayload();
              uint64_t v201 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v201 - 8) + 16))(v130, v131, v201);
              swift_storeEnumTagMultiPayload();
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v130, 0, 1, v132);
            }
            uint64_t v202 = v128[6];
            uint64_t v203 = &v94[v202];
            uint64_t v204 = (char *)v95 + v202;
            uint64_t v205 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v204, 1, v205))
            {
              uint64_t v206 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v203, v204, *(void *)(*(void *)(v206 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v205 - 8) + 16))(v203, v204, v205);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v203, 0, 1, v205);
            }
            uint64_t v233 = v128[7];
            uint64_t v234 = &v94[v233];
            uint64_t v235 = (char *)v95 + v233;
            long long v236 = *((_OWORD *)v235 + 1);
            *(_OWORD *)uint64_t v234 = *(_OWORD *)v235;
            *((_OWORD *)v234 + 1) = v236;
            v234[32] = v235[32];
            v94[v128[8]] = *((unsigned char *)v95 + v128[8]);
            goto LABEL_78;
          case 6u:
            uint64_t v134 = v95[1];
            *(void *)uint64_t v94 = *v95;
            *((void *)v94 + 1) = v134;
            uint64_t v135 = v95[3];
            *((void *)v94 + 2) = v95[2];
            *((void *)v94 + 3) = v135;
            uint64_t v136 = (int *)type metadata accessor for NewsArticle();
            uint64_t v137 = v136[6];
            __dstc = &v94[v137];
            uint64_t v138 = (char *)v95 + v137;
            uint64_t v139 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v138, 1, v139))
            {
              uint64_t v140 = sub_10017DF08(&qword_100E749B0);
              memcpy(__dstc, v138, *(void *)(*(void *)(v140 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v139 - 8) + 16))(__dstc, v138, v139);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstc, 0, 1, v139);
            }
            uint64_t v207 = v136[7];
            uint64_t v208 = &v94[v207];
            uint64_t v209 = (char *)v95 + v207;
            uint64_t v210 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v210 - 8) + 16))(v208, v209, v210);
            uint64_t v380 = *(void (**)(char *, char *, uint64_t))(*(void *)(v139 - 8) + 16);
            v380(&v94[v136[8]], (char *)v95 + v136[8], v139);
            __dstd = v136;
            uint64_t v211 = v136[9];
            uint64_t v212 = &v94[v211];
            uint64_t v213 = (char *)v95 + v211;
            uint64_t v214 = *(void *)((char *)v95 + v211 + 8);
            *(void *)uint64_t v212 = *(void *)((char *)v95 + v211);
            *((void *)v212 + 1) = v214;
            uint64_t v215 = *(void *)((char *)v95 + v211 + 24);
            *((void *)v212 + 2) = *(void *)((char *)v95 + v211 + 16);
            *((void *)v212 + 3) = v215;
            uint64_t v216 = *(int *)(type metadata accessor for NewsChannel() + 24);
            uint64_t v386 = &v212[v216];
            uint64_t v217 = &v213[v216];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v217, 1, v139))
            {
              uint64_t v218 = sub_10017DF08(&qword_100E749B0);
              memcpy(v386, v217, *(void *)(*(void *)(v218 - 8) + 64));
            }
            else
            {
              v380(v386, v217, v139);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v386, 0, 1, v139);
            }
            *(void *)&v94[__dstd[10]] = *(void *)((char *)v95 + __dstd[10]);
            *(void *)&v94[__dstd[11]] = *(void *)((char *)v95 + __dstd[11]);
            *(void *)&v94[__dstd[12]] = *(void *)((char *)v95 + __dstd[12]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_81;
          case 7u:
            uint64_t v141 = type metadata accessor for Location();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v141 - 8) + 16))(v94, v95, v141);
            uint64_t v142 = (int *)type metadata accessor for AveragesDetailViewState();
            v94[v142[5]] = *((unsigned char *)v95 + v142[5]);
            uint64_t v143 = v142[6];
            uint64_t v144 = &v94[v143];
            uint64_t v145 = (void *)((char *)v95 + v143);
            uint64_t v146 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v145, 1, (uint64_t)v146))
            {
              uint64_t v147 = sub_10017DF08(&qword_100E6B670);
              memcpy(v144, v145, *(void *)(*(void *)(v147 - 8) + 64));
            }
            else
            {
              *(void *)uint64_t v144 = *v145;
              uint64_t v219 = v146[5];
              uint64_t v220 = &v144[v219];
              __dstf = (char *)v145 + v219;
              uint64_t v221 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v221 - 8) + 16))(v220, __dstf, v221);
              *(void *)&v144[v146[6]] = *(void *)((char *)v145 + v146[6]);
              *(void *)&v144[v146[7]] = *(void *)((char *)v145 + v146[7]);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v144, 0, 1, (uint64_t)v146);
            }
            uint64_t v222 = v142[7];
            uint64_t v223 = &v94[v222];
            uint64_t v224 = (char *)v95 + v222;
            long long v225 = *((_OWORD *)v224 + 1);
            *(_OWORD *)uint64_t v223 = *(_OWORD *)v224;
            *((_OWORD *)v223 + 1) = v225;
            v223[32] = v224[32];
LABEL_81:
            swift_storeEnumTagMultiPayload();
            break;
          case 8u:
            uint64_t v148 = type metadata accessor for Location();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v148 - 8) + 16))(v94, v95, v148);
            uint64_t v149 = type metadata accessor for HomeAndWorkRefinementViewState();
            uint64_t v150 = *(int *)(v149 + 20);
            uint64_t v151 = &v94[v150];
            uint64_t v152 = (char *)v95 + v150;
            uint64_t v153 = type metadata accessor for LocationOfInterest();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v153 - 8) + 16))(v151, v152, v153);
            uint64_t v154 = *(int *)(v149 + 24);
            uint64_t v155 = &v94[v154];
            uint64_t v156 = (char *)v95 + v154;
            long long v157 = *((_OWORD *)v156 + 1);
            *(_OWORD *)uint64_t v155 = *(_OWORD *)v156;
            *((_OWORD *)v155 + 1) = v157;
            v155[32] = v156[32];
            goto LABEL_78;
          default:
            memcpy(v94, v95, *(void *)(*(void *)(v96 - 8) + 64));
            break;
        }
        goto LABEL_119;
      case 2u:
      case 3u:
        *(void *)a1 = *a2;
        swift_retain();
        goto LABEL_119;
      case 4u:
        uint64_t v10 = type metadata accessor for ModalViewState.MapViewModal(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v10))
        {
          uint64_t v11 = sub_10017DF08(&qword_100E663E8);
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
        }
        else
        {
          type metadata accessor for PreviewLocation();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v78 = type metadata accessor for LocationOfInterest();
              (*(void (**)(char *, char **, uint64_t))(*(void *)(v78 - 8) + 16))(a1, a2, v78);
              goto LABEL_32;
            case 2u:
              uint64_t v398 = v10;
              uint64_t v80 = *a2;
              char v79 = a2[1];
              *(void *)a1 = *a2;
              *((void *)a1 + 1) = v79;
              uint64_t v81 = a2[3];
              *((void *)a1 + 2) = a2[2];
              *((void *)a1 + 3) = v81;
              uint64_t v82 = a2[5];
              *((void *)a1 + 4) = a2[4];
              *((void *)a1 + 5) = v82;
              *((void *)a1 + 6) = a2[6];
              uint64_t v83 = type metadata accessor for SearchLocation();
              uint64_t v84 = *(int *)(v83 + 32);
              uint64_t v384 = (int *)v83;
              __dsta = &a1[v84];
              uint64_t v85 = (char *)a2 + v84;
              uint64_t v86 = type metadata accessor for Location();
              uint64_t v87 = v80;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v86))
              {
                uint64_t v88 = sub_10017DF08(&qword_100E639E8);
                memcpy(__dsta, v85, *(void *)(*(void *)(v88 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(__dsta, v85, v86);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v86);
              }
              uint64_t v237 = v384[9];
              uint64_t v238 = &a1[v237];
              uint64_t v239 = (char *)a2 + v237;
              *(_OWORD *)uint64_t v238 = *(_OWORD *)v239;
              v238[16] = v239[16];
              swift_storeEnumTagMultiPayload();
              uint64_t v10 = v398;
              goto LABEL_85;
            case 3u:
              *(_OWORD *)a1 = *(_OWORD *)a2;
              uint64_t v89 = a2[3];
              *((void *)a1 + 2) = a2[2];
              *((void *)a1 + 3) = v89;
              swift_bridgeObjectRetain();
              goto LABEL_32;
            default:
              uint64_t v23 = type metadata accessor for Location();
              (*(void (**)(char *, char **, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
LABEL_32:
              swift_storeEnumTagMultiPayload();
LABEL_85:
              uint64_t v240 = *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
              uint64_t v241 = &a1[v240];
              uint64_t v242 = (char **)((char *)a2 + v240);
              uint64_t v243 = type metadata accessor for LocationPreviewModalViewState(0);
              switch(swift_getEnumCaseMultiPayload())
              {
                case 0u:
                  uint64_t v244 = type metadata accessor for URL();
                  (*(void (**)(char *, void *, uint64_t))(*(void *)(v244 - 8) + 16))(v241, v242, v244);
                  goto LABEL_117;
                case 1u:
                  uint64_t v399 = v10;
                  uint64_t v245 = type metadata accessor for DetailCondition();
                  (*(void (**)(char *, void *, uint64_t))(*(void *)(v245 - 8) + 16))(v241, v242, v245);
                  uint64_t v246 = type metadata accessor for ConditionDetailViewState();
                  uint64_t v247 = *(int *)(v246 + 20);
                  uint64_t v248 = &v241[v247];
                  uint64_t v249 = (char *)v242 + v247;
                  uint64_t v250 = type metadata accessor for Location();
                  uint64_t v251 = v249;
                  uint64_t v252 = (int *)v246;
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v250 - 8) + 16))(v248, v251, v250);
                  uint64_t v253 = *(int *)(v246 + 24);
                  uint64_t v254 = &v241[v253];
                  uint64_t v255 = (char *)v242 + v253;
                  uint64_t v256 = type metadata accessor for Date();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v255, 1, v256))
                  {
                    uint64_t v257 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v254, v255, *(void *)(*(void *)(v257 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v256 - 8) + 16))(v254, v255, v256);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v254, 0, 1, v256);
                  }
                  uint64_t v306 = v252[7];
                  uint64_t v307 = &v241[v306];
                  uint64_t v308 = (char *)v242 + v306;
                  long long v309 = *((_OWORD *)v308 + 1);
                  *(_OWORD *)uint64_t v307 = *(_OWORD *)v308;
                  *((_OWORD *)v307 + 1) = v309;
                  v307[32] = v308[32];
                  uint64_t v310 = v252[8];
                  uint64_t v311 = &v241[v310];
                  uint64_t v312 = (void *)((char *)v242 + v310);
                  uint64_t v313 = (int *)type metadata accessor for DetailChartSelection();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v312, 1, (uint64_t)v313))
                  {
                    uint64_t v314 = sub_10017DF08(&qword_100E711F8);
                    memcpy(v311, v312, *(void *)(*(void *)(v314 - 8) + 64));
                  }
                  else
                  {
                    uint64_t v342 = v312[1];
                    *(void *)uint64_t v311 = *v312;
                    *((void *)v311 + 1) = v342;
                    uint64_t v343 = v313[5];
                    uint64_t v376 = (char *)v312 + v343;
                    uint64_t v379 = &v311[v343];
                    uint64_t v375 = *(void (**)(char *, char *, uint64_t))(*(void *)(v256 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v375(v379, v376, v256);
                    v375(&v311[v313[6]], (char *)v312 + v313[6], v256);
                    v375(&v311[v313[7]], (char *)v312 + v313[7], v256);
                    *(void *)&v311[v313[8]] = *(void *)((char *)v312 + v313[8]);
                    uint64_t v344 = v313[9];
                    uint64_t v345 = &v311[v344];
                    uint64_t v346 = (char *)v312 + v344;
                    v345[8] = v346[8];
                    *(void *)uint64_t v345 = *(void *)v346;
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v311, 0, 1, (uint64_t)v313);
                  }
                  v241[v252[9]] = *((unsigned char *)v242 + v252[9]);
                  swift_storeEnumTagMultiPayload();
                  uint64_t v10 = v399;
                  break;
                case 2u:
                  uint64_t v258 = type metadata accessor for Location();
                  (*(void (**)(char *, void *, uint64_t))(*(void *)(v258 - 8) + 16))(v241, v242, v258);
                  uint64_t v259 = type metadata accessor for AirQualityDetailViewState();
                  v241[*(int *)(v259 + 20)] = *((unsigned char *)v242 + *(int *)(v259 + 20));
                  uint64_t v260 = *(int *)(v259 + 24);
                  uint64_t v261 = &v241[v260];
                  uint64_t v262 = (char *)v242 + v260;
                  v261[32] = v262[32];
                  long long v263 = *((_OWORD *)v262 + 1);
                  *(_OWORD *)uint64_t v261 = *(_OWORD *)v262;
                  *((_OWORD *)v261 + 1) = v263;
                  goto LABEL_117;
                case 3u:
                  uint64_t v264 = type metadata accessor for Location();
                  (*(void (**)(char *, void *, uint64_t))(*(void *)(v264 - 8) + 16))(v241, v242, v264);
                  uint64_t v265 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
                  uint64_t v266 = &v241[v265];
                  uint64_t v267 = (char *)v242 + v265;
                  long long v268 = *((_OWORD *)v267 + 1);
                  *(_OWORD *)uint64_t v266 = *(_OWORD *)v267;
                  *((_OWORD *)v266 + 1) = v268;
                  v266[32] = v267[32];
                  goto LABEL_117;
                case 4u:
                  uint64_t v269 = type metadata accessor for Location();
                  (*(void (**)(char *, void *, uint64_t))(*(void *)(v269 - 8) + 16))(v241, v242, v269);
                  uint64_t v270 = type metadata accessor for SunriseSunsetDetailViewState();
                  uint64_t v271 = *(int *)(v270 + 20);
                  uint64_t v272 = &v241[v271];
                  uint64_t v273 = (char *)v242 + v271;
                  long long v274 = *((_OWORD *)v273 + 1);
                  *(_OWORD *)uint64_t v272 = *(_OWORD *)v273;
                  *((_OWORD *)v272 + 1) = v274;
                  v272[32] = v273[32];
                  v241[*(int *)(v270 + 24)] = *((unsigned char *)v242 + *(int *)(v270 + 24));
                  goto LABEL_117;
                case 5u:
                  uint64_t v400 = v10;
                  uint64_t v275 = type metadata accessor for Location();
                  (*(void (**)(char *, void *, uint64_t))(*(void *)(v275 - 8) + 16))(v241, v242, v275);
                  uint64_t v276 = (int *)type metadata accessor for MoonDetailViewState();
                  uint64_t v277 = v276[5];
                  uint64_t v278 = &v241[v277];
                  uint64_t v279 = (char *)v242 + v277;
                  uint64_t v280 = type metadata accessor for MoonDetailSelectedDate();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v279, 1, v280))
                  {
                    uint64_t v281 = sub_10017DF08(&qword_100E67240);
                    memcpy(v278, v279, *(void *)(*(void *)(v281 - 8) + 64));
                  }
                  else
                  {
                    swift_getEnumCaseMultiPayload();
                    uint64_t v315 = type metadata accessor for Date();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v315 - 8) + 16))(v278, v279, v315);
                    swift_storeEnumTagMultiPayload();
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v278, 0, 1, v280);
                  }
                  uint64_t v316 = v276[6];
                  uint64_t v317 = &v241[v316];
                  uint64_t v318 = (char *)v242 + v316;
                  uint64_t v319 = type metadata accessor for Date();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v318, 1, v319))
                  {
                    uint64_t v320 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v317, v318, *(void *)(*(void *)(v320 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v319 - 8) + 16))(v317, v318, v319);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v317, 0, 1, v319);
                  }
                  uint64_t v347 = v276[7];
                  uint64_t v348 = &v241[v347];
                  uint64_t v349 = (char *)v242 + v347;
                  long long v350 = *((_OWORD *)v349 + 1);
                  *(_OWORD *)uint64_t v348 = *(_OWORD *)v349;
                  *((_OWORD *)v348 + 1) = v350;
                  v348[32] = v349[32];
                  v241[v276[8]] = *((unsigned char *)v242 + v276[8]);
                  swift_storeEnumTagMultiPayload();
                  uint64_t v10 = v400;
                  break;
                case 6u:
                  uint64_t v282 = v242[1];
                  *(void *)uint64_t v241 = *v242;
                  *((void *)v241 + 1) = v282;
                  uint64_t v283 = v242[3];
                  *((void *)v241 + 2) = v242[2];
                  *((void *)v241 + 3) = v283;
                  uint64_t v284 = type metadata accessor for NewsArticle();
                  uint64_t v285 = *(int *)(v284 + 24);
                  uint64_t v382 = &v241[v285];
                  uint64_t v387 = (int *)v284;
                  uint64_t v286 = (char *)v242 + v285;
                  uint64_t v287 = type metadata accessor for URL();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  uint64_t v401 = v10;
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v286, 1, v287))
                  {
                    uint64_t v288 = sub_10017DF08(&qword_100E749B0);
                    memcpy(v382, v286, *(void *)(*(void *)(v288 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v287 - 8) + 16))(v382, v286, v287);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v382, 0, 1, v287);
                  }
                  uint64_t v321 = v387[7];
                  v322 = &v241[v321];
                  uint64_t v323 = (char *)v242 + v321;
                  uint64_t v324 = type metadata accessor for Date();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v324 - 8) + 16))(v322, v323, v324);
                  uint64_t v378 = *(void (**)(char *, char *, uint64_t))(*(void *)(v287 - 8) + 16);
                  v378(&v241[v387[8]], (char *)v242 + v387[8], v287);
                  uint64_t v325 = v387[9];
                  uint64_t v326 = &v241[v325];
                  uint64_t v327 = (char *)v242 + v325;
                  uint64_t v328 = *(void *)((char *)v242 + v325 + 8);
                  *(void *)uint64_t v326 = *(void *)((char *)v242 + v325);
                  *((void *)v326 + 1) = v328;
                  uint64_t v329 = *(void *)((char *)v242 + v325 + 24);
                  *((void *)v326 + 2) = *(void *)((char *)v242 + v325 + 16);
                  *((void *)v326 + 3) = v329;
                  uint64_t v330 = *(int *)(type metadata accessor for NewsChannel() + 24);
                  uint64_t v383 = &v326[v330];
                  uint64_t v331 = &v327[v330];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v331, 1, v287))
                  {
                    uint64_t v332 = sub_10017DF08(&qword_100E749B0);
                    memcpy(v383, v331, *(void *)(*(void *)(v332 - 8) + 64));
                  }
                  else
                  {
                    v378(v383, v331, v287);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v383, 0, 1, v287);
                  }
                  uint64_t v10 = v401;
                  *(void *)&v241[v387[10]] = *(void *)((char *)v242 + v387[10]);
                  *(void *)&v241[v387[11]] = *(void *)((char *)v242 + v387[11]);
                  *(void *)&v241[v387[12]] = *(void *)((char *)v242 + v387[12]);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  goto LABEL_117;
                case 7u:
                  uint64_t v402 = v10;
                  uint64_t v289 = type metadata accessor for Location();
                  (*(void (**)(char *, void *, uint64_t))(*(void *)(v289 - 8) + 16))(v241, v242, v289);
                  uint64_t v290 = (int *)type metadata accessor for AveragesDetailViewState();
                  v241[v290[5]] = *((unsigned char *)v242 + v290[5]);
                  uint64_t v291 = v290[6];
                  uint64_t v292 = &v241[v291];
                  uint64_t v293 = (void *)((char *)v242 + v291);
                  uint64_t v294 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v293, 1, (uint64_t)v294))
                  {
                    uint64_t v295 = sub_10017DF08(&qword_100E6B670);
                    memcpy(v292, v293, *(void *)(*(void *)(v295 - 8) + 64));
                  }
                  else
                  {
                    *(void *)uint64_t v292 = *v293;
                    uint64_t v333 = v294[5];
                    int v388 = v290;
                    uint64_t v334 = &v292[v333];
                    v335 = (char *)v293 + v333;
                    uint64_t v336 = type metadata accessor for Date();
                    int v337 = v335;
                    uint64_t v290 = v388;
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v336 - 8) + 16))(v334, v337, v336);
                    *(void *)&v292[v294[6]] = *(void *)((char *)v293 + v294[6]);
                    *(void *)&v292[v294[7]] = *(void *)((char *)v293 + v294[7]);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v292, 0, 1, (uint64_t)v294);
                  }
                  uint64_t v10 = v402;
                  uint64_t v338 = v290[7];
                  long long v339 = &v241[v338];
                  uint64_t v340 = (char *)v242 + v338;
                  long long v341 = *((_OWORD *)v340 + 1);
                  *(_OWORD *)long long v339 = *(_OWORD *)v340;
                  *((_OWORD *)v339 + 1) = v341;
                  v339[32] = v340[32];
                  swift_storeEnumTagMultiPayload();
                  break;
                case 8u:
                  uint64_t v296 = type metadata accessor for Location();
                  (*(void (**)(char *, void *, uint64_t))(*(void *)(v296 - 8) + 16))(v241, v242, v296);
                  uint64_t v297 = type metadata accessor for HomeAndWorkRefinementViewState();
                  uint64_t v298 = *(int *)(v297 + 20);
                  v299 = &v241[v298];
                  uint64_t v300 = (char *)v242 + v298;
                  uint64_t v301 = type metadata accessor for LocationOfInterest();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v301 - 8) + 16))(v299, v300, v301);
                  uint64_t v302 = *(int *)(v297 + 24);
                  uint64_t v303 = &v241[v302];
                  uint64_t v304 = (char *)v242 + v302;
                  long long v305 = *((_OWORD *)v304 + 1);
                  *(_OWORD *)uint64_t v303 = *(_OWORD *)v304;
                  *((_OWORD *)v303 + 1) = v305;
                  v303[32] = v304[32];
LABEL_117:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v241, v242, *(void *)(*(void *)(v243 - 8) + 64));
                  break;
              }
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v10);
              break;
          }
        }
        goto LABEL_119;
      case 5u:
        type metadata accessor for ModalViewState.LocationDetailModal(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v36 = type metadata accessor for Location();
            (*(void (**)(char *, char **, uint64_t))(*(void *)(v36 - 8) + 16))(a1, a2, v36);
            uint64_t v37 = type metadata accessor for AirQualityDetailViewState();
            a1[*(int *)(v37 + 20)] = *((unsigned char *)a2 + *(int *)(v37 + 20));
            uint64_t v38 = *(int *)(v37 + 24);
            uint64_t v39 = &a1[v38];
            uint64_t v40 = (char *)a2 + v38;
            v39[32] = v40[32];
            long long v41 = *((_OWORD *)v40 + 1);
            *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
            *((_OWORD *)v39 + 1) = v41;
            break;
          case 2u:
            uint64_t v42 = type metadata accessor for Location();
            (*(void (**)(char *, char **, uint64_t))(*(void *)(v42 - 8) + 16))(a1, a2, v42);
            uint64_t v43 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
            uint64_t v44 = &a1[v43];
            uint64_t v45 = (char *)a2 + v43;
            long long v46 = *((_OWORD *)v45 + 1);
            *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
            *((_OWORD *)v44 + 1) = v46;
            v44[32] = v45[32];
            break;
          case 3u:
            uint64_t v47 = type metadata accessor for Location();
            (*(void (**)(char *, char **, uint64_t))(*(void *)(v47 - 8) + 16))(a1, a2, v47);
            uint64_t v48 = type metadata accessor for SunriseSunsetDetailViewState();
            uint64_t v49 = *(int *)(v48 + 20);
            uint64_t v50 = &a1[v49];
            uint64_t v51 = (char *)a2 + v49;
            long long v52 = *((_OWORD *)v51 + 1);
            *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
            *((_OWORD *)v50 + 1) = v52;
            v50[32] = v51[32];
            a1[*(int *)(v48 + 24)] = *((unsigned char *)a2 + *(int *)(v48 + 24));
            break;
          case 4u:
            uint64_t v53 = type metadata accessor for Location();
            (*(void (**)(char *, char **, uint64_t))(*(void *)(v53 - 8) + 16))(a1, a2, v53);
            id v54 = (int *)type metadata accessor for MoonDetailViewState();
            uint64_t v55 = v54[5];
            uint64_t v56 = &a1[v55];
            uint64_t v57 = (char *)a2 + v55;
            uint64_t v58 = type metadata accessor for MoonDetailSelectedDate();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v58))
            {
              uint64_t v59 = sub_10017DF08(&qword_100E67240);
              memcpy(v56, v57, *(void *)(*(void *)(v59 - 8) + 64));
            }
            else
            {
              swift_getEnumCaseMultiPayload();
              uint64_t v167 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 16))(v56, v57, v167);
              swift_storeEnumTagMultiPayload();
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, 0, 1, v58);
            }
            uint64_t v168 = v54[6];
            uint64_t v169 = &a1[v168];
            uint64_t v170 = (char *)a2 + v168;
            uint64_t v171 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v170, 1, v171))
            {
              uint64_t v172 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v169, v170, *(void *)(*(void *)(v172 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 16))(v169, v170, v171);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v169, 0, 1, v171);
            }
            uint64_t v187 = v54[7];
            uint64_t v188 = &a1[v187];
            uint64_t v189 = (char *)a2 + v187;
            long long v190 = *((_OWORD *)v189 + 1);
            *(_OWORD *)uint64_t v188 = *(_OWORD *)v189;
            *((_OWORD *)v188 + 1) = v190;
            v188[32] = v189[32];
            a1[v54[8]] = *((unsigned char *)a2 + v54[8]);
            break;
          case 5u:
            uint64_t v60 = type metadata accessor for Location();
            (*(void (**)(char *, char **, uint64_t))(*(void *)(v60 - 8) + 16))(a1, a2, v60);
            uint64_t v61 = (int *)type metadata accessor for AveragesDetailViewState();
            a1[v61[5]] = *((unsigned char *)a2 + v61[5]);
            uint64_t v62 = v61[6];
            uint64_t v63 = &a1[v62];
            uint64_t v64 = (char **)((char *)a2 + v62);
            uint64_t v65 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, (uint64_t)v65))
            {
              uint64_t v66 = sub_10017DF08(&qword_100E6B670);
              memcpy(v63, v64, *(void *)(*(void *)(v66 - 8) + 64));
            }
            else
            {
              *(void *)uint64_t v63 = *v64;
              uint64_t v173 = v65[5];
              uint64_t v174 = &v63[v173];
              uint64_t v175 = (char *)v64 + v173;
              uint64_t v176 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 16))(v174, v175, v176);
              *(void *)&v63[v65[6]] = *(void *)((char *)v64 + v65[6]);
              *(void *)&v63[v65[7]] = *(void *)((char *)v64 + v65[7]);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v63, 0, 1, (uint64_t)v65);
            }
            uint64_t v177 = v61[7];
            uint64_t v178 = &a1[v177];
            uint64_t v179 = (char *)a2 + v177;
            long long v180 = *((_OWORD *)v179 + 1);
            *(_OWORD *)uint64_t v178 = *(_OWORD *)v179;
            *((_OWORD *)v178 + 1) = v180;
            v178[32] = v179[32];
            break;
          case 6u:
            uint64_t v67 = type metadata accessor for URL();
            (*(void (**)(char *, char **, uint64_t))(*(void *)(v67 - 8) + 16))(a1, a2, v67);
            break;
          case 7u:
            uint64_t v68 = type metadata accessor for Location();
            (*(void (**)(char *, char **, uint64_t))(*(void *)(v68 - 8) + 16))(a1, a2, v68);
            uint64_t v69 = type metadata accessor for HomeAndWorkRefinementViewState();
            uint64_t v70 = *(int *)(v69 + 20);
            char v71 = &a1[v70];
            char v72 = (char *)a2 + v70;
            uint64_t v73 = type metadata accessor for LocationOfInterest();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
            uint64_t v74 = *(int *)(v69 + 24);
            int v75 = &a1[v74];
            id v76 = (char *)a2 + v74;
            long long v77 = *((_OWORD *)v76 + 1);
            *(_OWORD *)int v75 = *(_OWORD *)v76;
            *((_OWORD *)v75 + 1) = v77;
            v75[32] = v76[32];
            break;
          default:
            uint64_t v12 = type metadata accessor for DetailCondition();
            (*(void (**)(char *, char **, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
            uint64_t v13 = (int *)type metadata accessor for ConditionDetailViewState();
            uint64_t v14 = v13[5];
            uint64_t v15 = &a1[v14];
            uint64_t v16 = (char *)a2 + v14;
            uint64_t v17 = type metadata accessor for Location();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
            uint64_t v18 = v13[6];
            uint64_t v19 = &a1[v18];
            uint64_t v20 = (char *)a2 + v18;
            uint64_t v21 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
            {
              uint64_t v22 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
            }
            uint64_t v158 = v13[7];
            uint64_t v159 = &a1[v158];
            uint64_t v160 = (char *)a2 + v158;
            long long v161 = *((_OWORD *)v160 + 1);
            *(_OWORD *)uint64_t v159 = *(_OWORD *)v160;
            *((_OWORD *)v159 + 1) = v161;
            v159[32] = v160[32];
            uint64_t v162 = v13[8];
            uint64_t v163 = &a1[v162];
            uint64_t v164 = (char **)((char *)a2 + v162);
            uint64_t v165 = (int *)type metadata accessor for DetailChartSelection();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v164, 1, (uint64_t)v165))
            {
              uint64_t v166 = sub_10017DF08(&qword_100E711F8);
              memcpy(v163, v164, *(void *)(*(void *)(v166 - 8) + 64));
            }
            else
            {
              uint64_t v181 = v164[1];
              *(void *)uint64_t v163 = *v164;
              *((void *)v163 + 1) = v181;
              uint64_t v182 = v165[5];
              uint64_t v385 = (char *)v164 + v182;
              __dste = &v163[v182];
              uint64_t v183 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
              swift_bridgeObjectRetain();
              v183(__dste, v385, v21);
              v183(&v163[v165[6]], (char *)v164 + v165[6], v21);
              v183(&v163[v165[7]], (char *)v164 + v165[7], v21);
              *(void *)&v163[v165[8]] = *(void *)((char *)v164 + v165[8]);
              uint64_t v184 = v165[9];
              uint64_t v185 = &v163[v184];
              uint64_t v186 = (char *)v164 + v184;
              v185[8] = v186[8];
              *(void *)uint64_t v185 = *(void *)v186;
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v163, 0, 1, (uint64_t)v165);
            }
            a1[v13[9]] = *((unsigned char *)a2 + v13[9]);
            break;
        }
LABEL_78:
        swift_storeEnumTagMultiPayload();
LABEL_119:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        break;
    }
    uint64_t v351 = a3[5];
    uint64_t v352 = &a1[v351];
    uint64_t v353 = (char *)a2 + v351;
    uint64_t v354 = type metadata accessor for Location();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v353, 1, v354))
    {
      uint64_t v355 = sub_10017DF08(&qword_100E639E8);
      memcpy(v352, v353, *(void *)(*(void *)(v355 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v354 - 8) + 16))(v352, v353, v354);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v352, 0, 1, v354);
    }
    uint64_t v356 = a3[6];
    uint64_t v357 = &a1[v356];
    uint64_t v358 = (char *)a2 + v356;
    uint64_t v359 = type metadata accessor for Location.Identifier();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v358, 1, v359))
    {
      uint64_t v360 = sub_10017DF08(&qword_100E6DC08);
      memcpy(v357, v358, *(void *)(*(void *)(v360 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v359 - 8) + 16))(v357, v358, v359);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v357, 0, 1, v359);
    }
    uint64_t v361 = a3[8];
    a1[a3[7]] = *((unsigned char *)a2 + a3[7]);
    uint64_t v362 = &a1[v361];
    uint64_t v363 = (char *)a2 + v361;
    uint64_t v364 = type metadata accessor for WeatherMapOverlayKind();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v364 - 8) + 16))(v362, v363, v364);
    uint64_t v365 = a3[9];
    uint64_t v366 = a3[10];
    uint64_t v367 = &a1[v365];
    uint64_t v368 = (char **)((char *)a2 + v365);
    uint64_t v369 = v368[1];
    *(void *)uint64_t v367 = *v368;
    *((void *)v367 + 1) = v369;
    uint64_t v370 = v368[3];
    *((void *)v367 + 2) = v368[2];
    *((void *)v367 + 3) = v370;
    uint64_t v371 = *(char **)((char *)a2 + v366);
    *(void *)&a1[v366] = v371;
    uint64_t v372 = a3[12];
    *(void *)&a1[a3[11]] = *(char **)((char *)a2 + a3[11]);
    a1[v372] = *((unsigned char *)a2 + v372);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v373 = v371;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1006CC578(id *a1, int *a2)
{
  type metadata accessor for ModalViewState(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for PreviewLocation();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v4 = type metadata accessor for Location();
          goto LABEL_11;
        case 1u:
          uint64_t v4 = type metadata accessor for LocationOfInterest();
LABEL_11:
          (*(void (**)(id *, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
          break;
        case 2u:

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v8 = (uint64_t)a1 + *(int *)(type metadata accessor for SearchLocation() + 32);
          uint64_t v9 = type metadata accessor for Location();
          if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
          }
          break;
        case 3u:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
      uint64_t v10 = (char *)a1 + *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
      type metadata accessor for LocationPreviewModalViewState(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          goto LABEL_37;
        case 1u:
          goto LABEL_38;
        case 2u:
        case 3u:
        case 4u:
          goto LABEL_36;
        case 5u:
          goto LABEL_43;
        case 6u:
          goto LABEL_49;
        case 7u:
          goto LABEL_54;
        case 8u:
          goto LABEL_57;
        default:
          goto LABEL_60;
      }
    case 2u:
    case 3u:
      swift_release();
      break;
    case 4u:
      uint64_t v5 = type metadata accessor for ModalViewState.MapViewModal(0);
      if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v5))
      {
        type metadata accessor for PreviewLocation();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v6 = type metadata accessor for Location();
            goto LABEL_30;
          case 1u:
            uint64_t v6 = type metadata accessor for LocationOfInterest();
LABEL_30:
            (*(void (**)(id *, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
            break;
          case 2u:

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v31 = (uint64_t)a1 + *(int *)(type metadata accessor for SearchLocation() + 32);
            uint64_t v32 = type metadata accessor for Location();
            if (!_s7Weather24LocationCompositionStateOwet_0(v31, 1, v32)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
            }
            break;
          case 3u:
            swift_bridgeObjectRelease();
            break;
          default:
            break;
        }
        uint64_t v10 = (char *)a1 + *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
        type metadata accessor for LocationPreviewModalViewState(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
LABEL_37:
            uint64_t v33 = type metadata accessor for URL();
            goto LABEL_59;
          case 1u:
LABEL_38:
            uint64_t v34 = type metadata accessor for DetailCondition();
            (*(void (**)(char *, uint64_t))(*(void *)(v34 - 8) + 8))(v10, v34);
            uint64_t v35 = (int *)type metadata accessor for ConditionDetailViewState();
            uint64_t v36 = &v10[v35[5]];
            uint64_t v37 = type metadata accessor for Location();
            (*(void (**)(char *, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
            uint64_t v38 = (uint64_t)&v10[v35[6]];
            uint64_t v39 = type metadata accessor for Date();
            if (!_s7Weather24LocationCompositionStateOwet_0(v38, 1, v39)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v38, v39);
            }
            uint64_t v40 = (uint64_t)&v10[v35[8]];
            long long v41 = (int *)type metadata accessor for DetailChartSelection();
            if (_s7Weather24LocationCompositionStateOwet_0(v40, 1, (uint64_t)v41)) {
              goto LABEL_60;
            }
            swift_bridgeObjectRelease();
            uint64_t v19 = *(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8);
            v19(v40 + v41[5], v39);
            v19(v40 + v41[6], v39);
            uint64_t v20 = v40 + v41[7];
            uint64_t v21 = v39;
            break;
          case 2u:
          case 3u:
          case 4u:
LABEL_36:
            uint64_t v33 = type metadata accessor for Location();
            goto LABEL_59;
          case 5u:
LABEL_43:
            uint64_t v42 = type metadata accessor for Location();
            (*(void (**)(char *, uint64_t))(*(void *)(v42 - 8) + 8))(v10, v42);
            uint64_t v43 = type metadata accessor for MoonDetailViewState();
            uint64_t v44 = (uint64_t)&v10[*(int *)(v43 + 20)];
            uint64_t v45 = type metadata accessor for MoonDetailSelectedDate();
            if (!_s7Weather24LocationCompositionStateOwet_0(v44, 1, v45)
              && swift_getEnumCaseMultiPayload() <= 2)
            {
              uint64_t v46 = type metadata accessor for Date();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v46 - 8) + 8))(v44, v46);
            }
            uint64_t v27 = (uint64_t)&v10[*(int *)(v43 + 24)];
            goto LABEL_47;
          case 6u:
LABEL_49:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v48 = (int *)type metadata accessor for NewsArticle();
            uint64_t v49 = (uint64_t)&v10[v48[6]];
            uint64_t v50 = type metadata accessor for URL();
            if (!_s7Weather24LocationCompositionStateOwet_0(v49, 1, v50)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v49, v50);
            }
            uint64_t v51 = &v10[v48[7]];
            uint64_t v52 = type metadata accessor for Date();
            (*(void (**)(char *, uint64_t))(*(void *)(v52 - 8) + 8))(v51, v52);
            uint64_t v53 = *(void (**)(char *, uint64_t))(*(void *)(v50 - 8) + 8);
            v53(&v10[v48[8]], v50);
            id v54 = &v10[v48[9]];
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v55 = (uint64_t)&v54[*(int *)(type metadata accessor for NewsChannel() + 24)];
            if (!_s7Weather24LocationCompositionStateOwet_0(v55, 1, v50)) {
              v53((char *)v55, v50);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_60;
          case 7u:
LABEL_54:
            uint64_t v56 = type metadata accessor for Location();
            (*(void (**)(char *, uint64_t))(*(void *)(v56 - 8) + 8))(v10, v56);
            uint64_t v29 = (uint64_t)&v10[*(int *)(type metadata accessor for AveragesDetailViewState() + 24)];
            goto LABEL_55;
          case 8u:
LABEL_57:
            uint64_t v58 = type metadata accessor for Location();
            (*(void (**)(char *, uint64_t))(*(void *)(v58 - 8) + 8))(v10, v58);
            v10 += *(int *)(type metadata accessor for HomeAndWorkRefinementViewState() + 20);
            goto LABEL_58;
          default:
            goto LABEL_60;
        }
LABEL_42:
        v19(v20, v21);
      }
      break;
    case 5u:
      type metadata accessor for ModalViewState.LocationDetailModal(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v11 = type metadata accessor for DetailCondition();
          (*(void (**)(id *, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
          uint64_t v12 = (int *)type metadata accessor for ConditionDetailViewState();
          uint64_t v13 = (char *)a1 + v12[5];
          uint64_t v14 = type metadata accessor for Location();
          (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
          uint64_t v15 = (uint64_t)a1 + v12[6];
          uint64_t v16 = type metadata accessor for Date();
          if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v16)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
          }
          uint64_t v17 = (uint64_t)a1 + v12[8];
          uint64_t v18 = (int *)type metadata accessor for DetailChartSelection();
          if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, (uint64_t)v18))
          {
            swift_bridgeObjectRelease();
            uint64_t v19 = *(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
            v19(v17 + v18[5], v16);
            v19(v17 + v18[6], v16);
            uint64_t v20 = v17 + v18[7];
            uint64_t v21 = v16;
            goto LABEL_42;
          }
          goto LABEL_60;
        case 1u:
        case 2u:
        case 3u:
          uint64_t v7 = type metadata accessor for Location();
          goto LABEL_27;
        case 4u:
          uint64_t v22 = type metadata accessor for Location();
          (*(void (**)(id *, uint64_t))(*(void *)(v22 - 8) + 8))(a1, v22);
          uint64_t v23 = type metadata accessor for MoonDetailViewState();
          uint64_t v24 = (uint64_t)a1 + *(int *)(v23 + 20);
          uint64_t v25 = type metadata accessor for MoonDetailSelectedDate();
          if (!_s7Weather24LocationCompositionStateOwet_0(v24, 1, v25)
            && swift_getEnumCaseMultiPayload() <= 2)
          {
            uint64_t v26 = type metadata accessor for Date();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v24, v26);
          }
          uint64_t v27 = (uint64_t)a1 + *(int *)(v23 + 24);
LABEL_47:
          uint64_t v47 = type metadata accessor for Date();
          if (!_s7Weather24LocationCompositionStateOwet_0(v27, 1, v47)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v27, v47);
          }
          goto LABEL_60;
        case 5u:
          uint64_t v28 = type metadata accessor for Location();
          (*(void (**)(id *, uint64_t))(*(void *)(v28 - 8) + 8))(a1, v28);
          uint64_t v29 = (uint64_t)a1 + *(int *)(type metadata accessor for AveragesDetailViewState() + 24);
LABEL_55:
          uint64_t v57 = type metadata accessor for DetailHeroChartLollipopPosition(0);
          if (_s7Weather24LocationCompositionStateOwet_0(v29, 1, v57)) {
            goto LABEL_60;
          }
          uint64_t v10 = (char *)(v29 + *(int *)(v57 + 20));
          uint64_t v33 = type metadata accessor for Date();
LABEL_59:
          (*(void (**)(char *, uint64_t))(*(void *)(v33 - 8) + 8))(v10, v33);
          break;
        case 6u:
          uint64_t v7 = type metadata accessor for URL();
LABEL_27:
          (*(void (**)(id *, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
          goto LABEL_60;
        case 7u:
          uint64_t v30 = type metadata accessor for Location();
          (*(void (**)(id *, uint64_t))(*(void *)(v30 - 8) + 8))(a1, v30);
          uint64_t v10 = (char *)a1 + *(int *)(type metadata accessor for HomeAndWorkRefinementViewState() + 20);
LABEL_58:
          uint64_t v33 = type metadata accessor for LocationOfInterest();
          goto LABEL_59;
        default:
          goto LABEL_60;
      }
      break;
    default:
      break;
  }
LABEL_60:
  uint64_t v59 = (uint64_t)a1 + a2[5];
  uint64_t v60 = type metadata accessor for Location();
  if (!_s7Weather24LocationCompositionStateOwet_0(v59, 1, v60)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v60 - 8) + 8))(v59, v60);
  }
  uint64_t v61 = (uint64_t)a1 + a2[6];
  uint64_t v62 = type metadata accessor for Location.Identifier();
  if (!_s7Weather24LocationCompositionStateOwet_0(v61, 1, v62)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8))(v61, v62);
  }
  uint64_t v63 = (char *)a1 + a2[8];
  uint64_t v64 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(char *, uint64_t))(*(void *)(v64 - 8) + 8))(v63, v64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void **sub_1006CD2D0(void **a1, void **a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ModalViewState(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for PreviewLocation();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v22 = type metadata accessor for LocationOfInterest();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
          break;
        case 2u:
          uint64_t v24 = *a2;
          uint64_t v23 = a2[1];
          *a1 = *a2;
          a1[1] = v23;
          uint64_t v25 = a2[3];
          a1[2] = a2[2];
          a1[3] = v25;
          uint64_t v26 = a2[5];
          a1[4] = a2[4];
          a1[5] = v26;
          a1[6] = a2[6];
          uint64_t v27 = type metadata accessor for SearchLocation();
          uint64_t v28 = *(int *)(v27 + 32);
          __dst = (char *)a1 + v28;
          uint64_t v395 = v27;
          uint64_t v29 = (char *)a2 + v28;
          uint64_t v30 = type metadata accessor for Location();
          id v31 = v24;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
          {
            uint64_t v32 = sub_10017DF08(&qword_100E639E8);
            memcpy(__dst, v29, *(void *)(*(void *)(v32 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(__dst, v29, v30);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v30);
          }
          uint64_t v88 = *(int *)(v395 + 36);
          uint64_t v89 = (char *)a1 + v88;
          uint64_t v90 = (char *)a2 + v88;
          *(_OWORD *)uint64_t v89 = *(_OWORD *)v90;
          v89[16] = v90[16];
          break;
        case 3u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v33 = a2[3];
          a1[2] = a2[2];
          a1[3] = v33;
          swift_bridgeObjectRetain();
          break;
        default:
          uint64_t v7 = type metadata accessor for Location();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
          break;
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v91 = *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
      long long v92 = (void **)((char *)a1 + v91);
      uint64_t v93 = (void **)((char *)a2 + v91);
      uint64_t v94 = type metadata accessor for LocationPreviewModalViewState(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v95 = type metadata accessor for URL();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v95 - 8) + 16))(v92, v93, v95);
          goto LABEL_76;
        case 1u:
          uint64_t v96 = type metadata accessor for DetailCondition();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v96 - 8) + 16))(v92, v93, v96);
          uint64_t v97 = type metadata accessor for ConditionDetailViewState();
          uint64_t v98 = *(int *)(v97 + 20);
          uint64_t v99 = (char *)v92 + v98;
          uint64_t v100 = (char *)v93 + v98;
          uint64_t v101 = type metadata accessor for Location();
          char v102 = v99;
          uint64_t v103 = (int *)v97;
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16))(v102, v100, v101);
          uint64_t v104 = *(int *)(v97 + 24);
          __dstb = (char *)v92 + v104;
          uint64_t v105 = (char *)v93 + v104;
          uint64_t v106 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v105, 1, v106))
          {
            uint64_t v107 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(__dstb, v105, *(void *)(*(void *)(v107 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 16))(__dstb, v105, v106);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstb, 0, 1, v106);
          }
          uint64_t v189 = v106;
          uint64_t v190 = v103[7];
          uint64_t v191 = (char *)v92 + v190;
          uint64_t v192 = (char *)v93 + v190;
          long long v193 = *((_OWORD *)v192 + 1);
          *(_OWORD *)uint64_t v191 = *(_OWORD *)v192;
          *((_OWORD *)v191 + 1) = v193;
          v191[32] = v192[32];
          uint64_t v194 = v103[8];
          long long v195 = (void *)((char *)v92 + v194);
          uint64_t v196 = (void *)((char *)v93 + v194);
          uint64_t v197 = (int *)type metadata accessor for DetailChartSelection();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v196, 1, (uint64_t)v197))
          {
            uint64_t v198 = sub_10017DF08(&qword_100E711F8);
            memcpy(v195, v196, *(void *)(*(void *)(v198 - 8) + 64));
          }
          else
          {
            uint64_t v224 = v196[1];
            void *v195 = *v196;
            v195[1] = v224;
            uint64_t v225 = v197[5];
            uint64_t v375 = (char *)v196 + v225;
            uint64_t v379 = (char *)v195 + v225;
            __dstg = v103;
            uint64_t v226 = v189;
            uint64_t v227 = *(void (**)(char *, char *, uint64_t))(*(void *)(v189 - 8) + 16);
            swift_bridgeObjectRetain();
            v227(v379, v375, v226);
            v227((char *)v195 + v197[6], (char *)v196 + v197[6], v226);
            v227((char *)v195 + v197[7], (char *)v196 + v197[7], v226);
            uint64_t v103 = __dstg;
            *(void *)((char *)v195 + v197[8]) = *(void *)((char *)v196 + v197[8]);
            uint64_t v228 = v197[9];
            uint64_t v229 = (char *)v195 + v228;
            uint64_t v230 = (char *)v196 + v228;
            v229[8] = v230[8];
            *(void *)uint64_t v229 = *(void *)v230;
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v195, 0, 1, (uint64_t)v197);
          }
          *((unsigned char *)v92 + v103[9]) = *((unsigned char *)v93 + v103[9]);
          goto LABEL_79;
        case 2u:
          uint64_t v108 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v108 - 8) + 16))(v92, v93, v108);
          uint64_t v109 = type metadata accessor for AirQualityDetailViewState();
          *((unsigned char *)v92 + *(int *)(v109 + 20)) = *((unsigned char *)v93 + *(int *)(v109 + 20));
          uint64_t v110 = *(int *)(v109 + 24);
          uint64_t v111 = (char *)v92 + v110;
          uint64_t v112 = (char *)v93 + v110;
          v111[32] = v112[32];
          long long v113 = *((_OWORD *)v112 + 1);
          *(_OWORD *)uint64_t v111 = *(_OWORD *)v112;
          *((_OWORD *)v111 + 1) = v113;
          goto LABEL_76;
        case 3u:
          uint64_t v114 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v114 - 8) + 16))(v92, v93, v114);
          uint64_t v115 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
          uint64_t v116 = (char *)v92 + v115;
          uint64_t v117 = (char *)v93 + v115;
          long long v118 = *((_OWORD *)v117 + 1);
          *(_OWORD *)uint64_t v116 = *(_OWORD *)v117;
          *((_OWORD *)v116 + 1) = v118;
          v116[32] = v117[32];
          goto LABEL_76;
        case 4u:
          uint64_t v119 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v119 - 8) + 16))(v92, v93, v119);
          uint64_t v120 = type metadata accessor for SunriseSunsetDetailViewState();
          uint64_t v121 = *(int *)(v120 + 20);
          uint64_t v122 = (char *)v92 + v121;
          uint64_t v123 = (char *)v93 + v121;
          long long v124 = *((_OWORD *)v123 + 1);
          *(_OWORD *)uint64_t v122 = *(_OWORD *)v123;
          *((_OWORD *)v122 + 1) = v124;
          v122[32] = v123[32];
          *((unsigned char *)v92 + *(int *)(v120 + 24)) = *((unsigned char *)v93 + *(int *)(v120 + 24));
          goto LABEL_76;
        case 5u:
          uint64_t v125 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v125 - 8) + 16))(v92, v93, v125);
          long long v126 = (int *)type metadata accessor for MoonDetailViewState();
          uint64_t v127 = v126[5];
          uint64_t v128 = (char *)v92 + v127;
          uint64_t v129 = (char *)v93 + v127;
          uint64_t v130 = type metadata accessor for MoonDetailSelectedDate();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v129, 1, v130))
          {
            uint64_t v131 = sub_10017DF08(&qword_100E67240);
            memcpy(v128, v129, *(void *)(*(void *)(v131 - 8) + 64));
          }
          else
          {
            swift_getEnumCaseMultiPayload();
            uint64_t v199 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v199 - 8) + 16))(v128, v129, v199);
            swift_storeEnumTagMultiPayload();
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v128, 0, 1, v130);
          }
          uint64_t v200 = v126[6];
          uint64_t v201 = (char *)v92 + v200;
          uint64_t v202 = (char *)v93 + v200;
          uint64_t v203 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v202, 1, v203))
          {
            uint64_t v204 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v201, v202, *(void *)(*(void *)(v204 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v203 - 8) + 16))(v201, v202, v203);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v201, 0, 1, v203);
          }
          uint64_t v231 = v126[7];
          uint64_t v232 = (char *)v92 + v231;
          uint64_t v233 = (char *)v93 + v231;
          long long v234 = *((_OWORD *)v233 + 1);
          *(_OWORD *)uint64_t v232 = *(_OWORD *)v233;
          *((_OWORD *)v232 + 1) = v234;
          v232[32] = v233[32];
          *((unsigned char *)v92 + v126[8]) = *((unsigned char *)v93 + v126[8]);
          goto LABEL_76;
        case 6u:
          uint64_t v132 = v93[1];
          void *v92 = *v93;
          v92[1] = v132;
          uint64_t v133 = v93[3];
          v92[2] = v93[2];
          v92[3] = v133;
          uint64_t v134 = (int *)type metadata accessor for NewsArticle();
          uint64_t v135 = v134[6];
          __dstc = (char *)v92 + v135;
          uint64_t v136 = (char *)v93 + v135;
          uint64_t v137 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v136, 1, v137))
          {
            uint64_t v138 = sub_10017DF08(&qword_100E749B0);
            memcpy(__dstc, v136, *(void *)(*(void *)(v138 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16))(__dstc, v136, v137);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstc, 0, 1, v137);
          }
          uint64_t v205 = v134[7];
          uint64_t v206 = (char *)v92 + v205;
          uint64_t v207 = (char *)v93 + v205;
          uint64_t v208 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v208 - 8) + 16))(v206, v207, v208);
          uint64_t v378 = *(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16);
          v378((char *)v92 + v134[8], (char *)v93 + v134[8], v137);
          __dstd = v134;
          uint64_t v209 = v134[9];
          uint64_t v210 = (void *)((char *)v92 + v209);
          uint64_t v211 = (char *)v93 + v209;
          uint64_t v212 = *(void *)((char *)v93 + v209 + 8);
          *uint64_t v210 = *(void *)((char *)v93 + v209);
          v210[1] = v212;
          uint64_t v213 = *(void *)((char *)v93 + v209 + 24);
          v210[2] = *(void *)((char *)v93 + v209 + 16);
          v210[3] = v213;
          uint64_t v214 = *(int *)(type metadata accessor for NewsChannel() + 24);
          uint64_t v384 = (char *)v210 + v214;
          uint64_t v215 = &v211[v214];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v215, 1, v137))
          {
            uint64_t v216 = sub_10017DF08(&qword_100E749B0);
            memcpy(v384, v215, *(void *)(*(void *)(v216 - 8) + 64));
          }
          else
          {
            v378(v384, v215, v137);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v384, 0, 1, v137);
          }
          *(void *)((char *)v92 + __dstd[10]) = *(void *)((char *)v93 + __dstd[10]);
          *(void *)((char *)v92 + __dstd[11]) = *(void *)((char *)v93 + __dstd[11]);
          *(void *)((char *)v92 + __dstd[12]) = *(void *)((char *)v93 + __dstd[12]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_79;
        case 7u:
          uint64_t v139 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v139 - 8) + 16))(v92, v93, v139);
          uint64_t v140 = (int *)type metadata accessor for AveragesDetailViewState();
          *((unsigned char *)v92 + v140[5]) = *((unsigned char *)v93 + v140[5]);
          uint64_t v141 = v140[6];
          uint64_t v142 = (void *)((char *)v92 + v141);
          uint64_t v143 = (void *)((char *)v93 + v141);
          uint64_t v144 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v143, 1, (uint64_t)v144))
          {
            uint64_t v145 = sub_10017DF08(&qword_100E6B670);
            memcpy(v142, v143, *(void *)(*(void *)(v145 - 8) + 64));
          }
          else
          {
            *uint64_t v142 = *v143;
            uint64_t v217 = v144[5];
            uint64_t v218 = (char *)v142 + v217;
            __dstf = (char *)v143 + v217;
            uint64_t v219 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v219 - 8) + 16))(v218, __dstf, v219);
            *(void *)((char *)v142 + v144[6]) = *(void *)((char *)v143 + v144[6]);
            *(void *)((char *)v142 + v144[7]) = *(void *)((char *)v143 + v144[7]);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v142, 0, 1, (uint64_t)v144);
          }
          uint64_t v220 = v140[7];
          uint64_t v221 = (char *)v92 + v220;
          uint64_t v222 = (char *)v93 + v220;
          long long v223 = *((_OWORD *)v222 + 1);
          *(_OWORD *)uint64_t v221 = *(_OWORD *)v222;
          *((_OWORD *)v221 + 1) = v223;
          v221[32] = v222[32];
LABEL_79:
          swift_storeEnumTagMultiPayload();
          break;
        case 8u:
          uint64_t v146 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v146 - 8) + 16))(v92, v93, v146);
          uint64_t v147 = type metadata accessor for HomeAndWorkRefinementViewState();
          uint64_t v148 = *(int *)(v147 + 20);
          uint64_t v149 = (char *)v92 + v148;
          uint64_t v150 = (char *)v93 + v148;
          uint64_t v151 = type metadata accessor for LocationOfInterest();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 16))(v149, v150, v151);
          uint64_t v152 = *(int *)(v147 + 24);
          uint64_t v153 = (char *)v92 + v152;
          uint64_t v154 = (char *)v93 + v152;
          long long v155 = *((_OWORD *)v154 + 1);
          *(_OWORD *)uint64_t v153 = *(_OWORD *)v154;
          *((_OWORD *)v153 + 1) = v155;
          v153[32] = v154[32];
          goto LABEL_76;
        default:
          memcpy(v92, v93, *(void *)(*(void *)(v94 - 8) + 64));
          break;
      }
      goto LABEL_117;
    case 2u:
    case 3u:
      *a1 = *a2;
      swift_retain();
      goto LABEL_117;
    case 4u:
      uint64_t v8 = type metadata accessor for ModalViewState.MapViewModal(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v8))
      {
        uint64_t v9 = sub_10017DF08(&qword_100E663E8);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        type metadata accessor for PreviewLocation();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v76 = type metadata accessor for LocationOfInterest();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v76 - 8) + 16))(a1, a2, v76);
            goto LABEL_30;
          case 2u:
            uint64_t v396 = v8;
            uint64_t v78 = *a2;
            long long v77 = a2[1];
            *a1 = *a2;
            a1[1] = v77;
            char v79 = a2[3];
            a1[2] = a2[2];
            a1[3] = v79;
            uint64_t v80 = a2[5];
            a1[4] = a2[4];
            a1[5] = v80;
            a1[6] = a2[6];
            uint64_t v81 = type metadata accessor for SearchLocation();
            uint64_t v82 = *(int *)(v81 + 32);
            uint64_t v382 = (int *)v81;
            __dsta = (char *)a1 + v82;
            uint64_t v83 = (char *)a2 + v82;
            uint64_t v84 = type metadata accessor for Location();
            id v85 = v78;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, v84))
            {
              uint64_t v86 = sub_10017DF08(&qword_100E639E8);
              memcpy(__dsta, v83, *(void *)(*(void *)(v86 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16))(__dsta, v83, v84);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v84);
            }
            uint64_t v235 = v382[9];
            long long v236 = (char *)a1 + v235;
            uint64_t v237 = (char *)a2 + v235;
            *(_OWORD *)long long v236 = *(_OWORD *)v237;
            v236[16] = v237[16];
            swift_storeEnumTagMultiPayload();
            uint64_t v8 = v396;
            goto LABEL_83;
          case 3u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            uint64_t v87 = a2[3];
            a1[2] = a2[2];
            a1[3] = v87;
            swift_bridgeObjectRetain();
            goto LABEL_30;
          default:
            uint64_t v21 = type metadata accessor for Location();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
LABEL_30:
            swift_storeEnumTagMultiPayload();
LABEL_83:
            uint64_t v238 = *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
            uint64_t v239 = (void **)((char *)a1 + v238);
            uint64_t v240 = (void **)((char *)a2 + v238);
            uint64_t v241 = type metadata accessor for LocationPreviewModalViewState(0);
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                uint64_t v242 = type metadata accessor for URL();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v242 - 8) + 16))(v239, v240, v242);
                goto LABEL_115;
              case 1u:
                uint64_t v397 = v8;
                uint64_t v243 = type metadata accessor for DetailCondition();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v243 - 8) + 16))(v239, v240, v243);
                uint64_t v244 = type metadata accessor for ConditionDetailViewState();
                uint64_t v245 = *(int *)(v244 + 20);
                uint64_t v246 = (char *)v239 + v245;
                uint64_t v247 = (char *)v240 + v245;
                uint64_t v248 = type metadata accessor for Location();
                uint64_t v249 = v247;
                uint64_t v250 = (int *)v244;
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v248 - 8) + 16))(v246, v249, v248);
                uint64_t v251 = *(int *)(v244 + 24);
                uint64_t v252 = (char *)v239 + v251;
                uint64_t v253 = (char *)v240 + v251;
                uint64_t v254 = type metadata accessor for Date();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v253, 1, v254))
                {
                  uint64_t v255 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v252, v253, *(void *)(*(void *)(v255 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v254 - 8) + 16))(v252, v253, v254);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v252, 0, 1, v254);
                }
                uint64_t v304 = v250[7];
                long long v305 = (char *)v239 + v304;
                uint64_t v306 = (char *)v240 + v304;
                long long v307 = *((_OWORD *)v306 + 1);
                *(_OWORD *)long long v305 = *(_OWORD *)v306;
                *((_OWORD *)v305 + 1) = v307;
                v305[32] = v306[32];
                uint64_t v308 = v250[8];
                long long v309 = (void *)((char *)v239 + v308);
                uint64_t v310 = (void *)((char *)v240 + v308);
                uint64_t v311 = (int *)type metadata accessor for DetailChartSelection();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v310, 1, (uint64_t)v311))
                {
                  uint64_t v312 = sub_10017DF08(&qword_100E711F8);
                  memcpy(v309, v310, *(void *)(*(void *)(v312 - 8) + 64));
                }
                else
                {
                  uint64_t v340 = v310[1];
                  void *v309 = *v310;
                  v309[1] = v340;
                  uint64_t v341 = v311[5];
                  long long v374 = (char *)v310 + v341;
                  uint64_t v377 = (char *)v309 + v341;
                  id v373 = *(void (**)(char *, char *, uint64_t))(*(void *)(v254 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v373(v377, v374, v254);
                  v373((char *)v309 + v311[6], (char *)v310 + v311[6], v254);
                  v373((char *)v309 + v311[7], (char *)v310 + v311[7], v254);
                  *(void *)((char *)v309 + v311[8]) = *(void *)((char *)v310 + v311[8]);
                  uint64_t v342 = v311[9];
                  uint64_t v343 = (char *)v309 + v342;
                  uint64_t v344 = (char *)v310 + v342;
                  v343[8] = v344[8];
                  *(void *)uint64_t v343 = *(void *)v344;
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v309, 0, 1, (uint64_t)v311);
                }
                *((unsigned char *)v239 + v250[9]) = *((unsigned char *)v240 + v250[9]);
                swift_storeEnumTagMultiPayload();
                uint64_t v8 = v397;
                break;
              case 2u:
                uint64_t v256 = type metadata accessor for Location();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v256 - 8) + 16))(v239, v240, v256);
                uint64_t v257 = type metadata accessor for AirQualityDetailViewState();
                *((unsigned char *)v239 + *(int *)(v257 + 20)) = *((unsigned char *)v240 + *(int *)(v257 + 20));
                uint64_t v258 = *(int *)(v257 + 24);
                uint64_t v259 = (char *)v239 + v258;
                uint64_t v260 = (char *)v240 + v258;
                v259[32] = v260[32];
                long long v261 = *((_OWORD *)v260 + 1);
                *(_OWORD *)uint64_t v259 = *(_OWORD *)v260;
                *((_OWORD *)v259 + 1) = v261;
                goto LABEL_115;
              case 3u:
                uint64_t v262 = type metadata accessor for Location();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v262 - 8) + 16))(v239, v240, v262);
                uint64_t v263 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
                uint64_t v264 = (char *)v239 + v263;
                uint64_t v265 = (char *)v240 + v263;
                long long v266 = *((_OWORD *)v265 + 1);
                *(_OWORD *)uint64_t v264 = *(_OWORD *)v265;
                *((_OWORD *)v264 + 1) = v266;
                v264[32] = v265[32];
                goto LABEL_115;
              case 4u:
                uint64_t v267 = type metadata accessor for Location();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v267 - 8) + 16))(v239, v240, v267);
                uint64_t v268 = type metadata accessor for SunriseSunsetDetailViewState();
                uint64_t v269 = *(int *)(v268 + 20);
                uint64_t v270 = (char *)v239 + v269;
                uint64_t v271 = (char *)v240 + v269;
                long long v272 = *((_OWORD *)v271 + 1);
                *(_OWORD *)uint64_t v270 = *(_OWORD *)v271;
                *((_OWORD *)v270 + 1) = v272;
                v270[32] = v271[32];
                *((unsigned char *)v239 + *(int *)(v268 + 24)) = *((unsigned char *)v240 + *(int *)(v268 + 24));
                goto LABEL_115;
              case 5u:
                uint64_t v398 = v8;
                uint64_t v273 = type metadata accessor for Location();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v273 - 8) + 16))(v239, v240, v273);
                long long v274 = (int *)type metadata accessor for MoonDetailViewState();
                uint64_t v275 = v274[5];
                uint64_t v276 = (char *)v239 + v275;
                uint64_t v277 = (char *)v240 + v275;
                uint64_t v278 = type metadata accessor for MoonDetailSelectedDate();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v277, 1, v278))
                {
                  uint64_t v279 = sub_10017DF08(&qword_100E67240);
                  memcpy(v276, v277, *(void *)(*(void *)(v279 - 8) + 64));
                }
                else
                {
                  swift_getEnumCaseMultiPayload();
                  uint64_t v313 = type metadata accessor for Date();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v313 - 8) + 16))(v276, v277, v313);
                  swift_storeEnumTagMultiPayload();
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v276, 0, 1, v278);
                }
                uint64_t v314 = v274[6];
                uint64_t v315 = (char *)v239 + v314;
                uint64_t v316 = (char *)v240 + v314;
                uint64_t v317 = type metadata accessor for Date();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v316, 1, v317))
                {
                  uint64_t v318 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v315, v316, *(void *)(*(void *)(v318 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v317 - 8) + 16))(v315, v316, v317);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v315, 0, 1, v317);
                }
                uint64_t v345 = v274[7];
                uint64_t v346 = (char *)v239 + v345;
                uint64_t v347 = (char *)v240 + v345;
                long long v348 = *((_OWORD *)v347 + 1);
                *(_OWORD *)uint64_t v346 = *(_OWORD *)v347;
                *((_OWORD *)v346 + 1) = v348;
                v346[32] = v347[32];
                *((unsigned char *)v239 + v274[8]) = *((unsigned char *)v240 + v274[8]);
                swift_storeEnumTagMultiPayload();
                uint64_t v8 = v398;
                break;
              case 6u:
                uint64_t v280 = v240[1];
                *uint64_t v239 = *v240;
                v239[1] = v280;
                uint64_t v281 = v240[3];
                v239[2] = v240[2];
                v239[3] = v281;
                uint64_t v282 = type metadata accessor for NewsArticle();
                uint64_t v283 = *(int *)(v282 + 24);
                uint64_t v380 = (char *)v239 + v283;
                uint64_t v385 = (int *)v282;
                uint64_t v284 = (char *)v240 + v283;
                uint64_t v285 = type metadata accessor for URL();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                uint64_t v399 = v8;
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v284, 1, v285))
                {
                  uint64_t v286 = sub_10017DF08(&qword_100E749B0);
                  memcpy(v380, v284, *(void *)(*(void *)(v286 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v285 - 8) + 16))(v380, v284, v285);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v380, 0, 1, v285);
                }
                uint64_t v319 = v385[7];
                uint64_t v320 = (char *)v239 + v319;
                uint64_t v321 = (char *)v240 + v319;
                uint64_t v322 = type metadata accessor for Date();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v322 - 8) + 16))(v320, v321, v322);
                uint64_t v376 = *(void (**)(char *, char *, uint64_t))(*(void *)(v285 - 8) + 16);
                v376((char *)v239 + v385[8], (char *)v240 + v385[8], v285);
                uint64_t v323 = v385[9];
                uint64_t v324 = (void *)((char *)v239 + v323);
                uint64_t v325 = (char *)v240 + v323;
                uint64_t v326 = *(void *)((char *)v240 + v323 + 8);
                *uint64_t v324 = *(void *)((char *)v240 + v323);
                v324[1] = v326;
                uint64_t v327 = *(void *)((char *)v240 + v323 + 24);
                v324[2] = *(void *)((char *)v240 + v323 + 16);
                v324[3] = v327;
                uint64_t v328 = *(int *)(type metadata accessor for NewsChannel() + 24);
                uint64_t v381 = (char *)v324 + v328;
                uint64_t v329 = &v325[v328];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v329, 1, v285))
                {
                  uint64_t v330 = sub_10017DF08(&qword_100E749B0);
                  memcpy(v381, v329, *(void *)(*(void *)(v330 - 8) + 64));
                }
                else
                {
                  v376(v381, v329, v285);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v381, 0, 1, v285);
                }
                uint64_t v8 = v399;
                *(void *)((char *)v239 + v385[10]) = *(void *)((char *)v240 + v385[10]);
                *(void *)((char *)v239 + v385[11]) = *(void *)((char *)v240 + v385[11]);
                *(void *)((char *)v239 + v385[12]) = *(void *)((char *)v240 + v385[12]);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                goto LABEL_115;
              case 7u:
                uint64_t v400 = v8;
                uint64_t v287 = type metadata accessor for Location();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v287 - 8) + 16))(v239, v240, v287);
                uint64_t v288 = (int *)type metadata accessor for AveragesDetailViewState();
                *((unsigned char *)v239 + v288[5]) = *((unsigned char *)v240 + v288[5]);
                uint64_t v289 = v288[6];
                uint64_t v290 = (void *)((char *)v239 + v289);
                uint64_t v291 = (void *)((char *)v240 + v289);
                uint64_t v292 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v291, 1, (uint64_t)v292))
                {
                  uint64_t v293 = sub_10017DF08(&qword_100E6B670);
                  memcpy(v290, v291, *(void *)(*(void *)(v293 - 8) + 64));
                }
                else
                {
                  void *v290 = *v291;
                  uint64_t v331 = v292[5];
                  uint64_t v386 = v288;
                  uint64_t v332 = (char *)v290 + v331;
                  uint64_t v333 = (char *)v291 + v331;
                  uint64_t v334 = type metadata accessor for Date();
                  v335 = v333;
                  uint64_t v288 = v386;
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v334 - 8) + 16))(v332, v335, v334);
                  *(void *)((char *)v290 + v292[6]) = *(void *)((char *)v291 + v292[6]);
                  *(void *)((char *)v290 + v292[7]) = *(void *)((char *)v291 + v292[7]);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v290, 0, 1, (uint64_t)v292);
                }
                uint64_t v8 = v400;
                uint64_t v336 = v288[7];
                int v337 = (char *)v239 + v336;
                uint64_t v338 = (char *)v240 + v336;
                long long v339 = *((_OWORD *)v338 + 1);
                *(_OWORD *)int v337 = *(_OWORD *)v338;
                *((_OWORD *)v337 + 1) = v339;
                v337[32] = v338[32];
                swift_storeEnumTagMultiPayload();
                break;
              case 8u:
                uint64_t v294 = type metadata accessor for Location();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v294 - 8) + 16))(v239, v240, v294);
                uint64_t v295 = type metadata accessor for HomeAndWorkRefinementViewState();
                uint64_t v296 = *(int *)(v295 + 20);
                uint64_t v297 = (char *)v239 + v296;
                uint64_t v298 = (char *)v240 + v296;
                uint64_t v299 = type metadata accessor for LocationOfInterest();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v299 - 8) + 16))(v297, v298, v299);
                uint64_t v300 = *(int *)(v295 + 24);
                uint64_t v301 = (char *)v239 + v300;
                uint64_t v302 = (char *)v240 + v300;
                long long v303 = *((_OWORD *)v302 + 1);
                *(_OWORD *)uint64_t v301 = *(_OWORD *)v302;
                *((_OWORD *)v301 + 1) = v303;
                v301[32] = v302[32];
LABEL_115:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v239, v240, *(void *)(*(void *)(v241 - 8) + 64));
                break;
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v8);
            break;
        }
      }
      goto LABEL_117;
    case 5u:
      type metadata accessor for ModalViewState.LocationDetailModal(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v34 = type metadata accessor for Location();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v34 - 8) + 16))(a1, a2, v34);
          uint64_t v35 = type metadata accessor for AirQualityDetailViewState();
          *((unsigned char *)a1 + *(int *)(v35 + 20)) = *((unsigned char *)a2 + *(int *)(v35 + 20));
          uint64_t v36 = *(int *)(v35 + 24);
          uint64_t v37 = (char *)a1 + v36;
          uint64_t v38 = (char *)a2 + v36;
          v37[32] = v38[32];
          long long v39 = *((_OWORD *)v38 + 1);
          *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
          *((_OWORD *)v37 + 1) = v39;
          break;
        case 2u:
          uint64_t v40 = type metadata accessor for Location();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v40 - 8) + 16))(a1, a2, v40);
          uint64_t v41 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
          uint64_t v42 = (char *)a1 + v41;
          uint64_t v43 = (char *)a2 + v41;
          long long v44 = *((_OWORD *)v43 + 1);
          *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
          *((_OWORD *)v42 + 1) = v44;
          v42[32] = v43[32];
          break;
        case 3u:
          uint64_t v45 = type metadata accessor for Location();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v45 - 8) + 16))(a1, a2, v45);
          uint64_t v46 = type metadata accessor for SunriseSunsetDetailViewState();
          uint64_t v47 = *(int *)(v46 + 20);
          uint64_t v48 = (char *)a1 + v47;
          uint64_t v49 = (char *)a2 + v47;
          long long v50 = *((_OWORD *)v49 + 1);
          *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
          *((_OWORD *)v48 + 1) = v50;
          v48[32] = v49[32];
          *((unsigned char *)a1 + *(int *)(v46 + 24)) = *((unsigned char *)a2 + *(int *)(v46 + 24));
          break;
        case 4u:
          uint64_t v51 = type metadata accessor for Location();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v51 - 8) + 16))(a1, a2, v51);
          uint64_t v52 = (int *)type metadata accessor for MoonDetailViewState();
          uint64_t v53 = v52[5];
          id v54 = (char *)a1 + v53;
          uint64_t v55 = (char *)a2 + v53;
          uint64_t v56 = type metadata accessor for MoonDetailSelectedDate();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v55, 1, v56))
          {
            uint64_t v57 = sub_10017DF08(&qword_100E67240);
            memcpy(v54, v55, *(void *)(*(void *)(v57 - 8) + 64));
          }
          else
          {
            swift_getEnumCaseMultiPayload();
            uint64_t v165 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 16))(v54, v55, v165);
            swift_storeEnumTagMultiPayload();
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v54, 0, 1, v56);
          }
          uint64_t v166 = v52[6];
          uint64_t v167 = (char *)a1 + v166;
          uint64_t v168 = (char *)a2 + v166;
          uint64_t v169 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v168, 1, v169))
          {
            uint64_t v170 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v167, v168, *(void *)(*(void *)(v170 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v169 - 8) + 16))(v167, v168, v169);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v167, 0, 1, v169);
          }
          uint64_t v185 = v52[7];
          uint64_t v186 = (char *)a1 + v185;
          uint64_t v187 = (char *)a2 + v185;
          long long v188 = *((_OWORD *)v187 + 1);
          *(_OWORD *)uint64_t v186 = *(_OWORD *)v187;
          *((_OWORD *)v186 + 1) = v188;
          v186[32] = v187[32];
          *((unsigned char *)a1 + v52[8]) = *((unsigned char *)a2 + v52[8]);
          break;
        case 5u:
          uint64_t v58 = type metadata accessor for Location();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v58 - 8) + 16))(a1, a2, v58);
          uint64_t v59 = (int *)type metadata accessor for AveragesDetailViewState();
          *((unsigned char *)a1 + v59[5]) = *((unsigned char *)a2 + v59[5]);
          uint64_t v60 = v59[6];
          uint64_t v61 = (void **)((char *)a1 + v60);
          uint64_t v62 = (void **)((char *)a2 + v60);
          uint64_t v63 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, (uint64_t)v63))
          {
            uint64_t v64 = sub_10017DF08(&qword_100E6B670);
            memcpy(v61, v62, *(void *)(*(void *)(v64 - 8) + 64));
          }
          else
          {
            *uint64_t v61 = *v62;
            uint64_t v171 = v63[5];
            uint64_t v172 = (char *)v61 + v171;
            uint64_t v173 = (char *)v62 + v171;
            uint64_t v174 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v174 - 8) + 16))(v172, v173, v174);
            *(void *)((char *)v61 + v63[6]) = *(void *)((char *)v62 + v63[6]);
            *(void *)((char *)v61 + v63[7]) = *(void *)((char *)v62 + v63[7]);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v61, 0, 1, (uint64_t)v63);
          }
          uint64_t v175 = v59[7];
          uint64_t v176 = (char *)a1 + v175;
          uint64_t v177 = (char *)a2 + v175;
          long long v178 = *((_OWORD *)v177 + 1);
          *(_OWORD *)uint64_t v176 = *(_OWORD *)v177;
          *((_OWORD *)v176 + 1) = v178;
          v176[32] = v177[32];
          break;
        case 6u:
          uint64_t v65 = type metadata accessor for URL();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v65 - 8) + 16))(a1, a2, v65);
          break;
        case 7u:
          uint64_t v66 = type metadata accessor for Location();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v66 - 8) + 16))(a1, a2, v66);
          uint64_t v67 = type metadata accessor for HomeAndWorkRefinementViewState();
          uint64_t v68 = *(int *)(v67 + 20);
          uint64_t v69 = (char *)a1 + v68;
          uint64_t v70 = (char *)a2 + v68;
          uint64_t v71 = type metadata accessor for LocationOfInterest();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
          uint64_t v72 = *(int *)(v67 + 24);
          uint64_t v73 = (char *)a1 + v72;
          uint64_t v74 = (char *)a2 + v72;
          long long v75 = *((_OWORD *)v74 + 1);
          *(_OWORD *)uint64_t v73 = *(_OWORD *)v74;
          *((_OWORD *)v73 + 1) = v75;
          v73[32] = v74[32];
          break;
        default:
          uint64_t v10 = type metadata accessor for DetailCondition();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
          uint64_t v11 = (int *)type metadata accessor for ConditionDetailViewState();
          uint64_t v12 = v11[5];
          uint64_t v13 = (char *)a1 + v12;
          uint64_t v14 = (char *)a2 + v12;
          uint64_t v15 = type metadata accessor for Location();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
          uint64_t v16 = v11[6];
          uint64_t v17 = (char *)a1 + v16;
          uint64_t v18 = (char *)a2 + v16;
          uint64_t v19 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
          {
            uint64_t v20 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
          }
          uint64_t v156 = v11[7];
          long long v157 = (char *)a1 + v156;
          uint64_t v158 = (char *)a2 + v156;
          long long v159 = *((_OWORD *)v158 + 1);
          *(_OWORD *)long long v157 = *(_OWORD *)v158;
          *((_OWORD *)v157 + 1) = v159;
          v157[32] = v158[32];
          uint64_t v160 = v11[8];
          long long v161 = (void **)((char *)a1 + v160);
          uint64_t v162 = (void **)((char *)a2 + v160);
          uint64_t v163 = (int *)type metadata accessor for DetailChartSelection();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v162, 1, (uint64_t)v163))
          {
            uint64_t v164 = sub_10017DF08(&qword_100E711F8);
            memcpy(v161, v162, *(void *)(*(void *)(v164 - 8) + 64));
          }
          else
          {
            uint64_t v179 = v162[1];
            *long long v161 = *v162;
            v161[1] = v179;
            uint64_t v180 = v163[5];
            uint64_t v383 = (char *)v162 + v180;
            __dste = (char *)v161 + v180;
            uint64_t v181 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
            swift_bridgeObjectRetain();
            v181(__dste, v383, v19);
            v181((char *)v161 + v163[6], (char *)v162 + v163[6], v19);
            v181((char *)v161 + v163[7], (char *)v162 + v163[7], v19);
            *(void *)((char *)v161 + v163[8]) = *(void *)((char *)v162 + v163[8]);
            uint64_t v182 = v163[9];
            uint64_t v183 = (char *)v161 + v182;
            uint64_t v184 = (char *)v162 + v182;
            v183[8] = v184[8];
            *(void *)uint64_t v183 = *(void *)v184;
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v161, 0, 1, (uint64_t)v163);
          }
          *((unsigned char *)a1 + v11[9]) = *((unsigned char *)a2 + v11[9]);
          break;
      }
LABEL_76:
      swift_storeEnumTagMultiPayload();
LABEL_117:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      break;
  }
  uint64_t v349 = a3[5];
  long long v350 = (char *)a1 + v349;
  uint64_t v351 = (char *)a2 + v349;
  uint64_t v352 = type metadata accessor for Location();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v351, 1, v352))
  {
    uint64_t v353 = sub_10017DF08(&qword_100E639E8);
    memcpy(v350, v351, *(void *)(*(void *)(v353 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v352 - 8) + 16))(v350, v351, v352);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v350, 0, 1, v352);
  }
  uint64_t v354 = a3[6];
  uint64_t v355 = (char *)a1 + v354;
  uint64_t v356 = (char *)a2 + v354;
  uint64_t v357 = type metadata accessor for Location.Identifier();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v356, 1, v357))
  {
    uint64_t v358 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v355, v356, *(void *)(*(void *)(v358 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v357 - 8) + 16))(v355, v356, v357);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v355, 0, 1, v357);
  }
  uint64_t v359 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  uint64_t v360 = (char *)a1 + v359;
  uint64_t v361 = (char *)a2 + v359;
  uint64_t v362 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v362 - 8) + 16))(v360, v361, v362);
  uint64_t v363 = a3[9];
  uint64_t v364 = a3[10];
  uint64_t v365 = (void **)((char *)a1 + v363);
  uint64_t v366 = (void **)((char *)a2 + v363);
  uint64_t v367 = v366[1];
  void *v365 = *v366;
  v365[1] = v367;
  uint64_t v368 = v366[3];
  v365[2] = v366[2];
  v365[3] = v368;
  uint64_t v369 = *(void **)((char *)a2 + v364);
  *(void **)((char *)a1 + v364) = v369;
  uint64_t v370 = a3[12];
  *(void **)((char *)a1 + a3[11]) = *(void **)((char *)a2 + a3[11]);
  *((unsigned char *)a1 + v370) = *((unsigned char *)a2 + v370);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v371 = v369;
  swift_bridgeObjectRetain();
  return a1;
}

void **sub_1006CFAC8(void **a1, void **a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1006D7660((uint64_t)a1, (void (*)(void))type metadata accessor for ModalViewState);
    uint64_t v6 = type metadata accessor for ModalViewState(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        type metadata accessor for PreviewLocation();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v22 = type metadata accessor for LocationOfInterest();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
            break;
          case 2u:
            uint64_t v23 = *a2;
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            a1[3] = a2[3];
            a1[4] = a2[4];
            a1[5] = a2[5];
            a1[6] = a2[6];
            uint64_t v24 = type metadata accessor for SearchLocation();
            uint64_t v25 = *(int *)(v24 + 32);
            __dst = (char *)a1 + v25;
            uint64_t v406 = v24;
            uint64_t v26 = (char *)a2 + v25;
            uint64_t v27 = type metadata accessor for Location();
            id v28 = v23;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27))
            {
              uint64_t v29 = sub_10017DF08(&qword_100E639E8);
              memcpy(__dst, v26, *(void *)(*(void *)(v29 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(__dst, v26, v27);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v27);
            }
            uint64_t v84 = *(int *)(v406 + 36);
            id v85 = (char *)a1 + v84;
            uint64_t v86 = (char *)a2 + v84;
            long long v87 = *(_OWORD *)v86;
            v85[16] = v86[16];
            *(_OWORD *)id v85 = v87;
            break;
          case 3u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            a1[2] = a2[2];
            a1[3] = a2[3];
            swift_bridgeObjectRetain();
            break;
          default:
            uint64_t v7 = type metadata accessor for Location();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
            break;
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v88 = *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
        uint64_t v89 = (void **)((char *)a1 + v88);
        uint64_t v90 = (void **)((char *)a2 + v88);
        uint64_t v91 = type metadata accessor for LocationPreviewModalViewState(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v92 = type metadata accessor for URL();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v92 - 8) + 16))(v89, v90, v92);
            goto LABEL_77;
          case 1u:
            uint64_t v93 = type metadata accessor for DetailCondition();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v93 - 8) + 16))(v89, v90, v93);
            uint64_t v94 = type metadata accessor for ConditionDetailViewState();
            uint64_t v95 = *(int *)(v94 + 20);
            uint64_t v96 = (char *)v89 + v95;
            uint64_t v97 = (char *)v90 + v95;
            uint64_t v98 = type metadata accessor for Location();
            uint64_t v99 = v96;
            uint64_t v100 = (int *)v94;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16))(v99, v97, v98);
            uint64_t v101 = *(int *)(v94 + 24);
            __dstb = (char *)v89 + v101;
            char v102 = (char *)v90 + v101;
            uint64_t v103 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v102, 1, v103))
            {
              uint64_t v104 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(__dstb, v102, *(void *)(*(void *)(v104 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 16))(__dstb, v102, v103);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstb, 0, 1, v103);
            }
            uint64_t v191 = v103;
            uint64_t v192 = v100[7];
            long long v193 = (char *)v89 + v192;
            uint64_t v194 = (char *)v90 + v192;
            long long v195 = *(_OWORD *)v194;
            long long v196 = *((_OWORD *)v194 + 1);
            v193[32] = v194[32];
            *(_OWORD *)long long v193 = v195;
            *((_OWORD *)v193 + 1) = v196;
            uint64_t v197 = v100[8];
            uint64_t v198 = (void *)((char *)v89 + v197);
            uint64_t v199 = (void *)((char *)v90 + v197);
            uint64_t v200 = (int *)type metadata accessor for DetailChartSelection();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v199, 1, (uint64_t)v200))
            {
              uint64_t v201 = sub_10017DF08(&qword_100E711F8);
              memcpy(v198, v199, *(void *)(*(void *)(v201 - 8) + 64));
            }
            else
            {
              void *v198 = *v199;
              v198[1] = v199[1];
              uint64_t v226 = v200[5];
              uint64_t v386 = (char *)v199 + v226;
              uint64_t v390 = (char *)v198 + v226;
              __dstg = v100;
              uint64_t v227 = v191;
              uint64_t v228 = *(void (**)(char *, char *, uint64_t))(*(void *)(v191 - 8) + 16);
              swift_bridgeObjectRetain();
              v228(v390, v386, v227);
              v228((char *)v198 + v200[6], (char *)v199 + v200[6], v227);
              v228((char *)v198 + v200[7], (char *)v199 + v200[7], v227);
              uint64_t v100 = __dstg;
              *(void *)((char *)v198 + v200[8]) = *(void *)((char *)v199 + v200[8]);
              uint64_t v229 = v200[9];
              uint64_t v230 = (char *)v198 + v229;
              uint64_t v231 = (char *)v199 + v229;
              char v232 = v231[8];
              *(void *)uint64_t v230 = *(void *)v231;
              v230[8] = v232;
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v198, 0, 1, (uint64_t)v200);
            }
            *((unsigned char *)v89 + v100[9]) = *((unsigned char *)v90 + v100[9]);
            goto LABEL_80;
          case 2u:
            uint64_t v105 = type metadata accessor for Location();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v105 - 8) + 16))(v89, v90, v105);
            uint64_t v106 = type metadata accessor for AirQualityDetailViewState();
            *((unsigned char *)v89 + *(int *)(v106 + 20)) = *((unsigned char *)v90 + *(int *)(v106 + 20));
            uint64_t v107 = *(int *)(v106 + 24);
            uint64_t v108 = (char *)v89 + v107;
            uint64_t v109 = (char *)v90 + v107;
            char v110 = v109[32];
            long long v111 = *((_OWORD *)v109 + 1);
            *(_OWORD *)uint64_t v108 = *(_OWORD *)v109;
            *((_OWORD *)v108 + 1) = v111;
            v108[32] = v110;
            goto LABEL_77;
          case 3u:
            uint64_t v112 = type metadata accessor for Location();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v112 - 8) + 16))(v89, v90, v112);
            uint64_t v113 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
            uint64_t v114 = (char *)v89 + v113;
            uint64_t v115 = (char *)v90 + v113;
            long long v116 = *(_OWORD *)v115;
            long long v117 = *((_OWORD *)v115 + 1);
            v114[32] = v115[32];
            *(_OWORD *)uint64_t v114 = v116;
            *((_OWORD *)v114 + 1) = v117;
            goto LABEL_77;
          case 4u:
            uint64_t v118 = type metadata accessor for Location();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v118 - 8) + 16))(v89, v90, v118);
            uint64_t v119 = type metadata accessor for SunriseSunsetDetailViewState();
            uint64_t v120 = *(int *)(v119 + 20);
            uint64_t v121 = (char *)v89 + v120;
            uint64_t v122 = (char *)v90 + v120;
            long long v123 = *(_OWORD *)v122;
            long long v124 = *((_OWORD *)v122 + 1);
            v121[32] = v122[32];
            *(_OWORD *)uint64_t v121 = v123;
            *((_OWORD *)v121 + 1) = v124;
            *((unsigned char *)v89 + *(int *)(v119 + 24)) = *((unsigned char *)v90 + *(int *)(v119 + 24));
            goto LABEL_77;
          case 5u:
            uint64_t v125 = type metadata accessor for Location();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v125 - 8) + 16))(v89, v90, v125);
            long long v126 = (int *)type metadata accessor for MoonDetailViewState();
            uint64_t v127 = v126[5];
            uint64_t v128 = (char *)v89 + v127;
            uint64_t v129 = (char *)v90 + v127;
            uint64_t v130 = type metadata accessor for MoonDetailSelectedDate();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v129, 1, v130))
            {
              uint64_t v131 = sub_10017DF08(&qword_100E67240);
              memcpy(v128, v129, *(void *)(*(void *)(v131 - 8) + 64));
            }
            else
            {
              swift_getEnumCaseMultiPayload();
              uint64_t v202 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 16))(v128, v129, v202);
              swift_storeEnumTagMultiPayload();
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v128, 0, 1, v130);
            }
            uint64_t v203 = v126[6];
            uint64_t v204 = (char *)v89 + v203;
            uint64_t v205 = (char *)v90 + v203;
            uint64_t v206 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v205, 1, v206))
            {
              uint64_t v207 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v204, v205, *(void *)(*(void *)(v207 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v206 - 8) + 16))(v204, v205, v206);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v204, 0, 1, v206);
            }
            uint64_t v233 = v126[7];
            long long v234 = (char *)v89 + v233;
            uint64_t v235 = (char *)v90 + v233;
            long long v236 = *(_OWORD *)v235;
            long long v237 = *((_OWORD *)v235 + 1);
            v234[32] = v235[32];
            *(_OWORD *)long long v234 = v236;
            *((_OWORD *)v234 + 1) = v237;
            *((unsigned char *)v89 + v126[8]) = *((unsigned char *)v90 + v126[8]);
            goto LABEL_77;
          case 6u:
            *uint64_t v89 = *v90;
            v89[1] = v90[1];
            v89[2] = v90[2];
            v89[3] = v90[3];
            uint64_t v132 = (int *)type metadata accessor for NewsArticle();
            uint64_t v133 = v132[6];
            __dstc = (char *)v89 + v133;
            uint64_t v134 = (char *)v90 + v133;
            uint64_t v135 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v134, 1, v135))
            {
              uint64_t v136 = sub_10017DF08(&qword_100E749B0);
              memcpy(__dstc, v134, *(void *)(*(void *)(v136 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 16))(__dstc, v134, v135);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstc, 0, 1, v135);
            }
            uint64_t v208 = v132[7];
            uint64_t v209 = (char *)v89 + v208;
            uint64_t v210 = (char *)v90 + v208;
            uint64_t v211 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v211 - 8) + 16))(v209, v210, v211);
            uint64_t v389 = *(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 16);
            v389((char *)v89 + v132[8], (char *)v90 + v132[8], v135);
            __dstd = v132;
            uint64_t v212 = v132[9];
            uint64_t v213 = (void *)((char *)v89 + v212);
            uint64_t v214 = (char *)v90 + v212;
            *uint64_t v213 = *(void *)((char *)v90 + v212);
            v213[1] = *(void *)((char *)v90 + v212 + 8);
            v213[2] = *(void *)((char *)v90 + v212 + 16);
            v213[3] = *(void *)((char *)v90 + v212 + 24);
            uint64_t v215 = *(int *)(type metadata accessor for NewsChannel() + 24);
            uint64_t v395 = (char *)v213 + v215;
            uint64_t v216 = &v214[v215];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v216, 1, v135))
            {
              uint64_t v217 = sub_10017DF08(&qword_100E749B0);
              memcpy(v395, v216, *(void *)(*(void *)(v217 - 8) + 64));
            }
            else
            {
              v389(v395, v216, v135);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v395, 0, 1, v135);
            }
            *(void *)((char *)v89 + __dstd[10]) = *(void *)((char *)v90 + __dstd[10]);
            *(void *)((char *)v89 + __dstd[11]) = *(void *)((char *)v90 + __dstd[11]);
            *(void *)((char *)v89 + __dstd[12]) = *(void *)((char *)v90 + __dstd[12]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_80;
          case 7u:
            uint64_t v137 = type metadata accessor for Location();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v137 - 8) + 16))(v89, v90, v137);
            uint64_t v138 = (int *)type metadata accessor for AveragesDetailViewState();
            *((unsigned char *)v89 + v138[5]) = *((unsigned char *)v90 + v138[5]);
            uint64_t v139 = v138[6];
            uint64_t v140 = (void *)((char *)v89 + v139);
            uint64_t v141 = (void *)((char *)v90 + v139);
            uint64_t v142 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v141, 1, (uint64_t)v142))
            {
              uint64_t v143 = sub_10017DF08(&qword_100E6B670);
              memcpy(v140, v141, *(void *)(*(void *)(v143 - 8) + 64));
            }
            else
            {
              void *v140 = *v141;
              uint64_t v218 = v142[5];
              uint64_t v219 = (char *)v140 + v218;
              __dstf = (char *)v141 + v218;
              uint64_t v220 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v220 - 8) + 16))(v219, __dstf, v220);
              *(void *)((char *)v140 + v142[6]) = *(void *)((char *)v141 + v142[6]);
              *(void *)((char *)v140 + v142[7]) = *(void *)((char *)v141 + v142[7]);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v140, 0, 1, (uint64_t)v142);
            }
            uint64_t v221 = v138[7];
            uint64_t v222 = (char *)v89 + v221;
            long long v223 = (char *)v90 + v221;
            long long v224 = *(_OWORD *)v223;
            long long v225 = *((_OWORD *)v223 + 1);
            v222[32] = v223[32];
            *(_OWORD *)uint64_t v222 = v224;
            *((_OWORD *)v222 + 1) = v225;
LABEL_80:
            swift_storeEnumTagMultiPayload();
            break;
          case 8u:
            uint64_t v144 = type metadata accessor for Location();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v144 - 8) + 16))(v89, v90, v144);
            uint64_t v145 = type metadata accessor for HomeAndWorkRefinementViewState();
            uint64_t v146 = *(int *)(v145 + 20);
            uint64_t v147 = (char *)v89 + v146;
            uint64_t v148 = (char *)v90 + v146;
            uint64_t v149 = type metadata accessor for LocationOfInterest();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 16))(v147, v148, v149);
            uint64_t v150 = *(int *)(v145 + 24);
            uint64_t v151 = (char *)v89 + v150;
            uint64_t v152 = (char *)v90 + v150;
            long long v153 = *(_OWORD *)v152;
            long long v154 = *((_OWORD *)v152 + 1);
            v151[32] = v152[32];
            *(_OWORD *)uint64_t v151 = v153;
            *((_OWORD *)v151 + 1) = v154;
            goto LABEL_77;
          default:
            memcpy(v89, v90, *(void *)(*(void *)(v91 - 8) + 64));
            break;
        }
        goto LABEL_118;
      case 2u:
      case 3u:
        *a1 = *a2;
        swift_retain();
        goto LABEL_118;
      case 4u:
        uint64_t v8 = type metadata accessor for ModalViewState.MapViewModal(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v8))
        {
          uint64_t v9 = sub_10017DF08(&qword_100E663E8);
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        }
        else
        {
          type metadata accessor for PreviewLocation();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v76 = type metadata accessor for LocationOfInterest();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v76 - 8) + 16))(a1, a2, v76);
              goto LABEL_31;
            case 2u:
              uint64_t v407 = v8;
              long long v77 = *a2;
              *a1 = *a2;
              a1[1] = a2[1];
              a1[2] = a2[2];
              a1[3] = a2[3];
              a1[4] = a2[4];
              a1[5] = a2[5];
              a1[6] = a2[6];
              uint64_t v78 = type metadata accessor for SearchLocation();
              uint64_t v79 = *(int *)(v78 + 32);
              uint64_t v393 = (char *)a1 + v79;
              __dsta = (int *)v78;
              uint64_t v80 = (char *)a2 + v79;
              uint64_t v81 = type metadata accessor for Location();
              id v82 = v77;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v80, 1, v81))
              {
                uint64_t v83 = sub_10017DF08(&qword_100E639E8);
                memcpy(v393, v80, *(void *)(*(void *)(v83 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16))(v393, v80, v81);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v393, 0, 1, v81);
              }
              uint64_t v238 = __dsta[9];
              uint64_t v239 = (char *)a1 + v238;
              uint64_t v240 = (char *)a2 + v238;
              long long v241 = *(_OWORD *)v240;
              v239[16] = v240[16];
              *(_OWORD *)uint64_t v239 = v241;
              swift_storeEnumTagMultiPayload();
              uint64_t v8 = v407;
              goto LABEL_84;
            case 3u:
              *(_OWORD *)a1 = *(_OWORD *)a2;
              a1[2] = a2[2];
              a1[3] = a2[3];
              swift_bridgeObjectRetain();
              goto LABEL_31;
            default:
              uint64_t v21 = type metadata accessor for Location();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
LABEL_31:
              swift_storeEnumTagMultiPayload();
LABEL_84:
              uint64_t v242 = *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
              uint64_t v243 = (void **)((char *)a1 + v242);
              uint64_t v244 = (void **)((char *)a2 + v242);
              uint64_t v245 = type metadata accessor for LocationPreviewModalViewState(0);
              switch(swift_getEnumCaseMultiPayload())
              {
                case 0u:
                  uint64_t v246 = type metadata accessor for URL();
                  (*(void (**)(void *, void *, uint64_t))(*(void *)(v246 - 8) + 16))(v243, v244, v246);
                  goto LABEL_116;
                case 1u:
                  uint64_t v408 = v8;
                  uint64_t v247 = type metadata accessor for DetailCondition();
                  (*(void (**)(void *, void *, uint64_t))(*(void *)(v247 - 8) + 16))(v243, v244, v247);
                  uint64_t v248 = type metadata accessor for ConditionDetailViewState();
                  uint64_t v249 = *(int *)(v248 + 20);
                  uint64_t v250 = (char *)v243 + v249;
                  uint64_t v251 = (char *)v244 + v249;
                  uint64_t v252 = type metadata accessor for Location();
                  uint64_t v253 = v251;
                  uint64_t v254 = (int *)v248;
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v252 - 8) + 16))(v250, v253, v252);
                  uint64_t v255 = *(int *)(v248 + 24);
                  uint64_t v256 = (char *)v243 + v255;
                  uint64_t v257 = (char *)v244 + v255;
                  uint64_t v258 = type metadata accessor for Date();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v257, 1, v258))
                  {
                    uint64_t v259 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v256, v257, *(void *)(*(void *)(v259 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v258 - 8) + 16))(v256, v257, v258);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v256, 0, 1, v258);
                  }
                  uint64_t v310 = v254[7];
                  uint64_t v311 = (char *)v243 + v310;
                  uint64_t v312 = (char *)v244 + v310;
                  long long v313 = *(_OWORD *)v312;
                  long long v314 = *((_OWORD *)v312 + 1);
                  v311[32] = v312[32];
                  *(_OWORD *)uint64_t v311 = v313;
                  *((_OWORD *)v311 + 1) = v314;
                  uint64_t v315 = v254[8];
                  uint64_t v316 = (void *)((char *)v243 + v315);
                  uint64_t v317 = (void *)((char *)v244 + v315);
                  uint64_t v318 = (int *)type metadata accessor for DetailChartSelection();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v317, 1, (uint64_t)v318))
                  {
                    uint64_t v319 = sub_10017DF08(&qword_100E711F8);
                    memcpy(v316, v317, *(void *)(*(void *)(v319 - 8) + 64));
                  }
                  else
                  {
                    *uint64_t v316 = *v317;
                    v316[1] = v317[1];
                    uint64_t v336 = v318[5];
                    uint64_t v385 = (char *)v317 + v336;
                    uint64_t v387 = (char *)v316 + v336;
                    uint64_t v384 = *(void (**)(char *, char *, uint64_t))(*(void *)(v258 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v384(v387, v385, v258);
                    v384((char *)v316 + v318[6], (char *)v317 + v318[6], v258);
                    v384((char *)v316 + v318[7], (char *)v317 + v318[7], v258);
                    *(void *)((char *)v316 + v318[8]) = *(void *)((char *)v317 + v318[8]);
                    uint64_t v337 = v318[9];
                    uint64_t v338 = (char *)v316 + v337;
                    long long v339 = (char *)v317 + v337;
                    char v340 = v339[8];
                    *(void *)uint64_t v338 = *(void *)v339;
                    v338[8] = v340;
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v316, 0, 1, (uint64_t)v318);
                  }
                  *((unsigned char *)v243 + v254[9]) = *((unsigned char *)v244 + v254[9]);
                  swift_storeEnumTagMultiPayload();
                  uint64_t v8 = v408;
                  break;
                case 2u:
                  uint64_t v260 = type metadata accessor for Location();
                  (*(void (**)(void *, void *, uint64_t))(*(void *)(v260 - 8) + 16))(v243, v244, v260);
                  uint64_t v261 = type metadata accessor for AirQualityDetailViewState();
                  *((unsigned char *)v243 + *(int *)(v261 + 20)) = *((unsigned char *)v244 + *(int *)(v261 + 20));
                  uint64_t v262 = *(int *)(v261 + 24);
                  uint64_t v263 = (char *)v243 + v262;
                  uint64_t v264 = (char *)v244 + v262;
                  char v265 = v264[32];
                  long long v266 = *((_OWORD *)v264 + 1);
                  *(_OWORD *)uint64_t v263 = *(_OWORD *)v264;
                  *((_OWORD *)v263 + 1) = v266;
                  v263[32] = v265;
                  goto LABEL_116;
                case 3u:
                  uint64_t v267 = type metadata accessor for Location();
                  (*(void (**)(void *, void *, uint64_t))(*(void *)(v267 - 8) + 16))(v243, v244, v267);
                  uint64_t v268 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
                  uint64_t v269 = (char *)v243 + v268;
                  uint64_t v270 = (char *)v244 + v268;
                  long long v271 = *(_OWORD *)v270;
                  long long v272 = *((_OWORD *)v270 + 1);
                  v269[32] = v270[32];
                  *(_OWORD *)uint64_t v269 = v271;
                  *((_OWORD *)v269 + 1) = v272;
                  goto LABEL_116;
                case 4u:
                  uint64_t v273 = type metadata accessor for Location();
                  (*(void (**)(void *, void *, uint64_t))(*(void *)(v273 - 8) + 16))(v243, v244, v273);
                  uint64_t v274 = type metadata accessor for SunriseSunsetDetailViewState();
                  uint64_t v275 = *(int *)(v274 + 20);
                  uint64_t v276 = (char *)v243 + v275;
                  uint64_t v277 = (char *)v244 + v275;
                  long long v278 = *(_OWORD *)v277;
                  long long v279 = *((_OWORD *)v277 + 1);
                  v276[32] = v277[32];
                  *(_OWORD *)uint64_t v276 = v278;
                  *((_OWORD *)v276 + 1) = v279;
                  *((unsigned char *)v243 + *(int *)(v274 + 24)) = *((unsigned char *)v244 + *(int *)(v274 + 24));
                  goto LABEL_116;
                case 5u:
                  uint64_t v409 = v8;
                  uint64_t v280 = type metadata accessor for Location();
                  (*(void (**)(void *, void *, uint64_t))(*(void *)(v280 - 8) + 16))(v243, v244, v280);
                  uint64_t v281 = (int *)type metadata accessor for MoonDetailViewState();
                  uint64_t v282 = v281[5];
                  uint64_t v283 = (char *)v243 + v282;
                  uint64_t v284 = (char *)v244 + v282;
                  uint64_t v285 = type metadata accessor for MoonDetailSelectedDate();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v284, 1, v285))
                  {
                    uint64_t v286 = sub_10017DF08(&qword_100E67240);
                    memcpy(v283, v284, *(void *)(*(void *)(v286 - 8) + 64));
                  }
                  else
                  {
                    swift_getEnumCaseMultiPayload();
                    uint64_t v320 = type metadata accessor for Date();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v320 - 8) + 16))(v283, v284, v320);
                    swift_storeEnumTagMultiPayload();
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v283, 0, 1, v285);
                  }
                  uint64_t v321 = v281[6];
                  uint64_t v322 = (char *)v243 + v321;
                  uint64_t v323 = (char *)v244 + v321;
                  uint64_t v324 = type metadata accessor for Date();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v323, 1, v324))
                  {
                    uint64_t v325 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v322, v323, *(void *)(*(void *)(v325 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v324 - 8) + 16))(v322, v323, v324);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v322, 0, 1, v324);
                  }
                  uint64_t v341 = v281[7];
                  uint64_t v342 = (char *)v243 + v341;
                  uint64_t v343 = (char *)v244 + v341;
                  long long v344 = *(_OWORD *)v343;
                  long long v345 = *((_OWORD *)v343 + 1);
                  v342[32] = v343[32];
                  *(_OWORD *)uint64_t v342 = v344;
                  *((_OWORD *)v342 + 1) = v345;
                  *((unsigned char *)v243 + v281[8]) = *((unsigned char *)v244 + v281[8]);
                  swift_storeEnumTagMultiPayload();
                  uint64_t v8 = v409;
                  break;
                case 6u:
                  void *v243 = *v244;
                  v243[1] = v244[1];
                  v243[2] = v244[2];
                  v243[3] = v244[3];
                  uint64_t v287 = type metadata accessor for NewsArticle();
                  uint64_t v288 = *(int *)(v287 + 24);
                  v391 = (char *)v243 + v288;
                  uint64_t v396 = (int *)v287;
                  uint64_t v289 = (char *)v244 + v288;
                  uint64_t v290 = type metadata accessor for URL();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  uint64_t v410 = v8;
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v289, 1, v290))
                  {
                    uint64_t v291 = sub_10017DF08(&qword_100E749B0);
                    memcpy(v391, v289, *(void *)(*(void *)(v291 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v290 - 8) + 16))(v391, v289, v290);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v391, 0, 1, v290);
                  }
                  uint64_t v346 = v396[7];
                  uint64_t v347 = (char *)v243 + v346;
                  long long v348 = (char *)v244 + v346;
                  uint64_t v349 = type metadata accessor for Date();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v349 - 8) + 16))(v347, v348, v349);
                  int v388 = *(void (**)(char *, char *, uint64_t))(*(void *)(v290 - 8) + 16);
                  v388((char *)v243 + v396[8], (char *)v244 + v396[8], v290);
                  uint64_t v350 = v396[9];
                  uint64_t v351 = (void *)((char *)v243 + v350);
                  uint64_t v352 = (char *)v244 + v350;
                  *uint64_t v351 = *(void *)((char *)v244 + v350);
                  v351[1] = *(void *)((char *)v244 + v350 + 8);
                  v351[2] = *(void *)((char *)v244 + v350 + 16);
                  v351[3] = *(void *)((char *)v244 + v350 + 24);
                  uint64_t v353 = *(int *)(type metadata accessor for NewsChannel() + 24);
                  uint64_t v392 = (char *)v351 + v353;
                  uint64_t v354 = &v352[v353];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v354, 1, v290))
                  {
                    uint64_t v355 = sub_10017DF08(&qword_100E749B0);
                    memcpy(v392, v354, *(void *)(*(void *)(v355 - 8) + 64));
                  }
                  else
                  {
                    v388(v392, v354, v290);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v392, 0, 1, v290);
                  }
                  uint64_t v8 = v410;
                  *(void *)((char *)v243 + v396[10]) = *(void *)((char *)v244 + v396[10]);
                  *(void *)((char *)v243 + v396[11]) = *(void *)((char *)v244 + v396[11]);
                  *(void *)((char *)v243 + v396[12]) = *(void *)((char *)v244 + v396[12]);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  goto LABEL_116;
                case 7u:
                  uint64_t v411 = v8;
                  uint64_t v292 = type metadata accessor for Location();
                  (*(void (**)(void *, void *, uint64_t))(*(void *)(v292 - 8) + 16))(v243, v244, v292);
                  uint64_t v293 = (int *)type metadata accessor for AveragesDetailViewState();
                  *((unsigned char *)v243 + v293[5]) = *((unsigned char *)v244 + v293[5]);
                  uint64_t v294 = v293[6];
                  uint64_t v295 = (void *)((char *)v243 + v294);
                  uint64_t v296 = (void *)((char *)v244 + v294);
                  uint64_t v297 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v296, 1, (uint64_t)v297))
                  {
                    uint64_t v298 = sub_10017DF08(&qword_100E6B670);
                    memcpy(v295, v296, *(void *)(*(void *)(v298 - 8) + 64));
                  }
                  else
                  {
                    void *v295 = *v296;
                    uint64_t v326 = v297[5];
                    uint64_t v397 = v293;
                    uint64_t v327 = (char *)v295 + v326;
                    uint64_t v328 = (char *)v296 + v326;
                    uint64_t v329 = type metadata accessor for Date();
                    uint64_t v330 = v328;
                    uint64_t v293 = v397;
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v329 - 8) + 16))(v327, v330, v329);
                    *(void *)((char *)v295 + v297[6]) = *(void *)((char *)v296 + v297[6]);
                    *(void *)((char *)v295 + v297[7]) = *(void *)((char *)v296 + v297[7]);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v295, 0, 1, (uint64_t)v297);
                  }
                  uint64_t v8 = v411;
                  uint64_t v331 = v293[7];
                  uint64_t v332 = (char *)v243 + v331;
                  uint64_t v333 = (char *)v244 + v331;
                  long long v334 = *(_OWORD *)v333;
                  long long v335 = *((_OWORD *)v333 + 1);
                  v332[32] = v333[32];
                  *(_OWORD *)uint64_t v332 = v334;
                  *((_OWORD *)v332 + 1) = v335;
                  swift_storeEnumTagMultiPayload();
                  break;
                case 8u:
                  uint64_t v299 = type metadata accessor for Location();
                  (*(void (**)(void *, void *, uint64_t))(*(void *)(v299 - 8) + 16))(v243, v244, v299);
                  uint64_t v300 = type metadata accessor for HomeAndWorkRefinementViewState();
                  uint64_t v301 = *(int *)(v300 + 20);
                  uint64_t v302 = (char *)v243 + v301;
                  long long v303 = (char *)v244 + v301;
                  uint64_t v304 = type metadata accessor for LocationOfInterest();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v304 - 8) + 16))(v302, v303, v304);
                  uint64_t v305 = *(int *)(v300 + 24);
                  uint64_t v306 = (char *)v243 + v305;
                  long long v307 = (char *)v244 + v305;
                  long long v308 = *(_OWORD *)v307;
                  long long v309 = *((_OWORD *)v307 + 1);
                  v306[32] = v307[32];
                  *(_OWORD *)uint64_t v306 = v308;
                  *((_OWORD *)v306 + 1) = v309;
LABEL_116:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v243, v244, *(void *)(*(void *)(v245 - 8) + 64));
                  break;
              }
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v8);
              break;
          }
        }
        goto LABEL_118;
      case 5u:
        type metadata accessor for ModalViewState.LocationDetailModal(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v30 = type metadata accessor for Location();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
            uint64_t v31 = type metadata accessor for AirQualityDetailViewState();
            *((unsigned char *)a1 + *(int *)(v31 + 20)) = *((unsigned char *)a2 + *(int *)(v31 + 20));
            uint64_t v32 = *(int *)(v31 + 24);
            uint64_t v33 = (char *)a1 + v32;
            uint64_t v34 = (char *)a2 + v32;
            char v35 = v34[32];
            long long v36 = *((_OWORD *)v34 + 1);
            *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
            *((_OWORD *)v33 + 1) = v36;
            v33[32] = v35;
            break;
          case 2u:
            uint64_t v37 = type metadata accessor for Location();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v37 - 8) + 16))(a1, a2, v37);
            uint64_t v38 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
            long long v39 = (char *)a1 + v38;
            uint64_t v40 = (char *)a2 + v38;
            long long v41 = *(_OWORD *)v40;
            long long v42 = *((_OWORD *)v40 + 1);
            v39[32] = v40[32];
            *(_OWORD *)long long v39 = v41;
            *((_OWORD *)v39 + 1) = v42;
            break;
          case 3u:
            uint64_t v43 = type metadata accessor for Location();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v43 - 8) + 16))(a1, a2, v43);
            uint64_t v44 = type metadata accessor for SunriseSunsetDetailViewState();
            uint64_t v45 = *(int *)(v44 + 20);
            uint64_t v46 = (char *)a1 + v45;
            uint64_t v47 = (char *)a2 + v45;
            long long v48 = *(_OWORD *)v47;
            long long v49 = *((_OWORD *)v47 + 1);
            v46[32] = v47[32];
            *(_OWORD *)uint64_t v46 = v48;
            *((_OWORD *)v46 + 1) = v49;
            *((unsigned char *)a1 + *(int *)(v44 + 24)) = *((unsigned char *)a2 + *(int *)(v44 + 24));
            break;
          case 4u:
            uint64_t v50 = type metadata accessor for Location();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v50 - 8) + 16))(a1, a2, v50);
            uint64_t v51 = (int *)type metadata accessor for MoonDetailViewState();
            uint64_t v52 = v51[5];
            uint64_t v53 = (char *)a1 + v52;
            id v54 = (char *)a2 + v52;
            uint64_t v55 = type metadata accessor for MoonDetailSelectedDate();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v55))
            {
              uint64_t v56 = sub_10017DF08(&qword_100E67240);
              memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
            }
            else
            {
              swift_getEnumCaseMultiPayload();
              uint64_t v165 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 16))(v53, v54, v165);
              swift_storeEnumTagMultiPayload();
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v55);
            }
            uint64_t v166 = v51[6];
            uint64_t v167 = (char *)a1 + v166;
            uint64_t v168 = (char *)a2 + v166;
            uint64_t v169 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v168, 1, v169))
            {
              uint64_t v170 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v167, v168, *(void *)(*(void *)(v170 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v169 - 8) + 16))(v167, v168, v169);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v167, 0, 1, v169);
            }
            uint64_t v186 = v51[7];
            uint64_t v187 = (char *)a1 + v186;
            long long v188 = (char *)a2 + v186;
            long long v189 = *(_OWORD *)v188;
            long long v190 = *((_OWORD *)v188 + 1);
            v187[32] = v188[32];
            *(_OWORD *)uint64_t v187 = v189;
            *((_OWORD *)v187 + 1) = v190;
            *((unsigned char *)a1 + v51[8]) = *((unsigned char *)a2 + v51[8]);
            break;
          case 5u:
            uint64_t v57 = type metadata accessor for Location();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v57 - 8) + 16))(a1, a2, v57);
            uint64_t v58 = (int *)type metadata accessor for AveragesDetailViewState();
            *((unsigned char *)a1 + v58[5]) = *((unsigned char *)a2 + v58[5]);
            uint64_t v59 = v58[6];
            uint64_t v60 = (void **)((char *)a1 + v59);
            uint64_t v61 = (void **)((char *)a2 + v59);
            uint64_t v62 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, (uint64_t)v62))
            {
              uint64_t v63 = sub_10017DF08(&qword_100E6B670);
              memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
            }
            else
            {
              *uint64_t v60 = *v61;
              uint64_t v171 = v62[5];
              uint64_t v172 = (char *)v60 + v171;
              uint64_t v173 = (char *)v61 + v171;
              uint64_t v174 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v174 - 8) + 16))(v172, v173, v174);
              *(void *)((char *)v60 + v62[6]) = *(void *)((char *)v61 + v62[6]);
              *(void *)((char *)v60 + v62[7]) = *(void *)((char *)v61 + v62[7]);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, (uint64_t)v62);
            }
            uint64_t v175 = v58[7];
            uint64_t v176 = (char *)a1 + v175;
            uint64_t v177 = (char *)a2 + v175;
            long long v178 = *(_OWORD *)v177;
            long long v179 = *((_OWORD *)v177 + 1);
            v176[32] = v177[32];
            *(_OWORD *)uint64_t v176 = v178;
            *((_OWORD *)v176 + 1) = v179;
            break;
          case 6u:
            uint64_t v64 = type metadata accessor for URL();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v64 - 8) + 16))(a1, a2, v64);
            break;
          case 7u:
            uint64_t v65 = type metadata accessor for Location();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v65 - 8) + 16))(a1, a2, v65);
            uint64_t v66 = type metadata accessor for HomeAndWorkRefinementViewState();
            uint64_t v67 = *(int *)(v66 + 20);
            uint64_t v68 = (char *)a1 + v67;
            uint64_t v69 = (char *)a2 + v67;
            uint64_t v70 = type metadata accessor for LocationOfInterest();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16))(v68, v69, v70);
            uint64_t v71 = *(int *)(v66 + 24);
            uint64_t v72 = (char *)a1 + v71;
            uint64_t v73 = (char *)a2 + v71;
            long long v74 = *(_OWORD *)v73;
            long long v75 = *((_OWORD *)v73 + 1);
            v72[32] = v73[32];
            *(_OWORD *)uint64_t v72 = v74;
            *((_OWORD *)v72 + 1) = v75;
            break;
          default:
            uint64_t v10 = type metadata accessor for DetailCondition();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
            uint64_t v11 = (int *)type metadata accessor for ConditionDetailViewState();
            uint64_t v12 = v11[5];
            uint64_t v13 = (char *)a1 + v12;
            uint64_t v14 = (char *)a2 + v12;
            uint64_t v15 = type metadata accessor for Location();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
            uint64_t v16 = v11[6];
            uint64_t v17 = (char *)a1 + v16;
            uint64_t v18 = (char *)a2 + v16;
            uint64_t v19 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
            {
              uint64_t v20 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
            }
            uint64_t v155 = v11[7];
            uint64_t v156 = (char *)a1 + v155;
            long long v157 = (char *)a2 + v155;
            long long v158 = *(_OWORD *)v157;
            long long v159 = *((_OWORD *)v157 + 1);
            v156[32] = v157[32];
            *(_OWORD *)uint64_t v156 = v158;
            *((_OWORD *)v156 + 1) = v159;
            uint64_t v160 = v11[8];
            long long v161 = (void **)((char *)a1 + v160);
            uint64_t v162 = (void **)((char *)a2 + v160);
            uint64_t v163 = (int *)type metadata accessor for DetailChartSelection();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v162, 1, (uint64_t)v163))
            {
              uint64_t v164 = sub_10017DF08(&qword_100E711F8);
              memcpy(v161, v162, *(void *)(*(void *)(v164 - 8) + 64));
            }
            else
            {
              *long long v161 = *v162;
              v161[1] = v162[1];
              uint64_t v180 = v163[5];
              uint64_t v394 = (char *)v162 + v180;
              __dste = (char *)v161 + v180;
              uint64_t v181 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
              swift_bridgeObjectRetain();
              v181(__dste, v394, v19);
              v181((char *)v161 + v163[6], (char *)v162 + v163[6], v19);
              v181((char *)v161 + v163[7], (char *)v162 + v163[7], v19);
              *(void *)((char *)v161 + v163[8]) = *(void *)((char *)v162 + v163[8]);
              uint64_t v182 = v163[9];
              uint64_t v183 = (char *)v161 + v182;
              uint64_t v184 = (char *)v162 + v182;
              char v185 = v184[8];
              *(void *)uint64_t v183 = *(void *)v184;
              v183[8] = v185;
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v161, 0, 1, (uint64_t)v163);
            }
            *((unsigned char *)a1 + v11[9]) = *((unsigned char *)a2 + v11[9]);
            break;
        }
LABEL_77:
        swift_storeEnumTagMultiPayload();
LABEL_118:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
  }
  uint64_t v356 = a3[5];
  uint64_t v357 = (char *)a1 + v356;
  uint64_t v358 = (char *)a2 + v356;
  uint64_t v359 = type metadata accessor for Location();
  int v360 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v357, 1, v359);
  int v361 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v358, 1, v359);
  if (v360)
  {
    if (!v361)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v359 - 8) + 16))(v357, v358, v359);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v357, 0, 1, v359);
      goto LABEL_125;
    }
    goto LABEL_124;
  }
  uint64_t v362 = *(void *)(v359 - 8);
  if (v361)
  {
    (*(void (**)(char *, uint64_t))(v362 + 8))(v357, v359);
LABEL_124:
    uint64_t v363 = sub_10017DF08(&qword_100E639E8);
    memcpy(v357, v358, *(void *)(*(void *)(v363 - 8) + 64));
    goto LABEL_125;
  }
  (*(void (**)(char *, char *, uint64_t))(v362 + 24))(v357, v358, v359);
LABEL_125:
  uint64_t v364 = a3[6];
  uint64_t v365 = (char *)a1 + v364;
  uint64_t v366 = (char *)a2 + v364;
  uint64_t v367 = type metadata accessor for Location.Identifier();
  int v368 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v365, 1, v367);
  int v369 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v366, 1, v367);
  if (!v368)
  {
    uint64_t v370 = *(void *)(v367 - 8);
    if (!v369)
    {
      (*(void (**)(char *, char *, uint64_t))(v370 + 24))(v365, v366, v367);
      goto LABEL_131;
    }
    (*(void (**)(char *, uint64_t))(v370 + 8))(v365, v367);
    goto LABEL_130;
  }
  if (v369)
  {
LABEL_130:
    uint64_t v371 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v365, v366, *(void *)(*(void *)(v371 - 8) + 64));
    goto LABEL_131;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v367 - 8) + 16))(v365, v366, v367);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v365, 0, 1, v367);
LABEL_131:
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  uint64_t v372 = a3[8];
  id v373 = (char *)a1 + v372;
  long long v374 = (char *)a2 + v372;
  uint64_t v375 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v375 - 8) + 24))(v373, v374, v375);
  uint64_t v376 = a3[9];
  uint64_t v377 = (void **)((char *)a1 + v376);
  uint64_t v378 = (char *)a2 + v376;
  void *v377 = *(void **)((char *)a2 + v376);
  v377[1] = *(void **)((char *)a2 + v376 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v377[2] = *((void *)v378 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v377[3] = *((void *)v378 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v379 = a3[10];
  uint64_t v380 = *(void **)((char *)a1 + v379);
  uint64_t v381 = *(void **)((char *)a2 + v379);
  *(void **)((char *)a1 + v379) = v381;
  id v382 = v381;

  *(void **)((char *)a1 + a3[11]) = *(void **)((char *)a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  return a1;
}

void *sub_1006D24C4(void *a1, void *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ModalViewState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 5)
  {
    type metadata accessor for ModalViewState.LocationDetailModal(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v34 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 32))(a1, a2, v34);
        uint64_t v35 = type metadata accessor for AirQualityDetailViewState();
        *((unsigned char *)a1 + *(int *)(v35 + 20)) = *((unsigned char *)a2 + *(int *)(v35 + 20));
        uint64_t v36 = *(int *)(v35 + 24);
        uint64_t v37 = (char *)a1 + v36;
        uint64_t v38 = (char *)a2 + v36;
        v37[32] = v38[32];
        long long v39 = *((_OWORD *)v38 + 1);
        *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
        *((_OWORD *)v37 + 1) = v39;
        break;
      case 2u:
        uint64_t v40 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v40 - 8) + 32))(a1, a2, v40);
        uint64_t v41 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
        long long v42 = (char *)a1 + v41;
        uint64_t v43 = (char *)a2 + v41;
        long long v44 = *((_OWORD *)v43 + 1);
        *(_OWORD *)long long v42 = *(_OWORD *)v43;
        *((_OWORD *)v42 + 1) = v44;
        v42[32] = v43[32];
        break;
      case 3u:
        uint64_t v45 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v45 - 8) + 32))(a1, a2, v45);
        uint64_t v46 = type metadata accessor for SunriseSunsetDetailViewState();
        uint64_t v47 = *(int *)(v46 + 20);
        long long v48 = (char *)a1 + v47;
        long long v49 = (char *)a2 + v47;
        long long v50 = *((_OWORD *)v49 + 1);
        *(_OWORD *)long long v48 = *(_OWORD *)v49;
        *((_OWORD *)v48 + 1) = v50;
        v48[32] = v49[32];
        *((unsigned char *)a1 + *(int *)(v46 + 24)) = *((unsigned char *)a2 + *(int *)(v46 + 24));
        break;
      case 4u:
        uint64_t v51 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v51 - 8) + 32))(a1, a2, v51);
        uint64_t v52 = (int *)type metadata accessor for MoonDetailViewState();
        uint64_t v53 = v52[5];
        id v54 = (char *)a1 + v53;
        uint64_t v55 = (char *)a2 + v53;
        uint64_t v56 = type metadata accessor for MoonDetailSelectedDate();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v55, 1, v56))
        {
          uint64_t v57 = sub_10017DF08(&qword_100E67240);
          memcpy(v54, v55, *(void *)(*(void *)(v57 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          uint64_t v158 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 32))(v54, v55, v158);
          swift_storeEnumTagMultiPayload();
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v54, 0, 1, v56);
        }
        uint64_t v159 = v52[6];
        uint64_t v160 = (char *)a1 + v159;
        long long v161 = (char *)a2 + v159;
        uint64_t v162 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v161, 1, v162))
        {
          uint64_t v163 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v160, v161, *(void *)(*(void *)(v163 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 32))(v160, v161, v162);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v160, 0, 1, v162);
        }
        uint64_t v177 = v52[7];
        long long v178 = (char *)a1 + v177;
        long long v179 = (char *)a2 + v177;
        long long v180 = *((_OWORD *)v179 + 1);
        *(_OWORD *)long long v178 = *(_OWORD *)v179;
        *((_OWORD *)v178 + 1) = v180;
        v178[32] = v179[32];
        *((unsigned char *)a1 + v52[8]) = *((unsigned char *)a2 + v52[8]);
        break;
      case 5u:
        uint64_t v58 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v58 - 8) + 32))(a1, a2, v58);
        uint64_t v59 = (int *)type metadata accessor for AveragesDetailViewState();
        *((unsigned char *)a1 + v59[5]) = *((unsigned char *)a2 + v59[5]);
        uint64_t v60 = v59[6];
        uint64_t v61 = (void *)((char *)a1 + v60);
        uint64_t v62 = (void *)((char *)a2 + v60);
        uint64_t v63 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, (uint64_t)v63))
        {
          uint64_t v64 = sub_10017DF08(&qword_100E6B670);
          memcpy(v61, v62, *(void *)(*(void *)(v64 - 8) + 64));
        }
        else
        {
          *uint64_t v61 = *v62;
          uint64_t v164 = v63[5];
          uint64_t v165 = (char *)v61 + v164;
          int v369 = (char *)v62 + v164;
          uint64_t v166 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v166 - 8) + 32))(v165, v369, v166);
          *(void *)((char *)v61 + v63[6]) = *(void *)((char *)v62 + v63[6]);
          *(void *)((char *)v61 + v63[7]) = *(void *)((char *)v62 + v63[7]);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v61, 0, 1, (uint64_t)v63);
        }
        uint64_t v167 = v59[7];
        uint64_t v168 = (char *)a1 + v167;
        uint64_t v169 = (char *)a2 + v167;
        long long v170 = *((_OWORD *)v169 + 1);
        *(_OWORD *)uint64_t v168 = *(_OWORD *)v169;
        *((_OWORD *)v168 + 1) = v170;
        v168[32] = v169[32];
        break;
      case 6u:
        uint64_t v65 = type metadata accessor for URL();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v65 - 8) + 32))(a1, a2, v65);
        break;
      case 7u:
        uint64_t v66 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v66 - 8) + 32))(a1, a2, v66);
        uint64_t v67 = type metadata accessor for HomeAndWorkRefinementViewState();
        uint64_t v68 = *(int *)(v67 + 20);
        uint64_t v69 = (char *)a1 + v68;
        uint64_t v70 = (char *)a2 + v68;
        uint64_t v71 = type metadata accessor for LocationOfInterest();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v69, v70, v71);
        uint64_t v72 = *(int *)(v67 + 24);
        uint64_t v73 = (char *)a1 + v72;
        long long v74 = (char *)a2 + v72;
        long long v75 = *((_OWORD *)v74 + 1);
        *(_OWORD *)uint64_t v73 = *(_OWORD *)v74;
        *((_OWORD *)v73 + 1) = v75;
        v73[32] = v74[32];
        break;
      default:
        uint64_t v11 = type metadata accessor for DetailCondition();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
        uint64_t v12 = (int *)type metadata accessor for ConditionDetailViewState();
        uint64_t v13 = v12[5];
        uint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        uint64_t v16 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
        uint64_t v17 = v12[6];
        uint64_t v18 = (char *)a1 + v17;
        uint64_t v19 = (char *)a2 + v17;
        uint64_t v20 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
        {
          uint64_t v21 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
        }
        uint64_t v149 = v12[7];
        uint64_t v150 = (char *)a1 + v149;
        uint64_t v151 = (char *)a2 + v149;
        long long v152 = *((_OWORD *)v151 + 1);
        *(_OWORD *)uint64_t v150 = *(_OWORD *)v151;
        *((_OWORD *)v150 + 1) = v152;
        v150[32] = v151[32];
        uint64_t v153 = v12[8];
        long long v154 = (_OWORD *)((char *)a1 + v153);
        uint64_t v155 = (_OWORD *)((char *)a2 + v153);
        uint64_t v156 = (int *)type metadata accessor for DetailChartSelection();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v155, 1, (uint64_t)v156))
        {
          uint64_t v157 = sub_10017DF08(&qword_100E711F8);
          memcpy(v154, v155, *(void *)(*(void *)(v157 - 8) + 64));
        }
        else
        {
          *long long v154 = *v155;
          __dsti = v12;
          uint64_t v370 = v20;
          uint64_t v171 = v20;
          uint64_t v172 = (void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
          uint64_t v173 = *v172;
          (*v172)((char *)v154 + v156[5], (char *)v155 + v156[5], v171);
          v173((char *)v154 + v156[6], (char *)v155 + v156[6], v370);
          v173((char *)v154 + v156[7], (char *)v155 + v156[7], v370);
          uint64_t v12 = __dsti;
          *(void *)((char *)v154 + v156[8]) = *(void *)((char *)v155 + v156[8]);
          uint64_t v174 = v156[9];
          uint64_t v175 = (char *)v154 + v174;
          uint64_t v176 = (char *)v155 + v174;
          v175[8] = v176[8];
          *(void *)uint64_t v175 = *(void *)v176;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v154, 0, 1, (uint64_t)v156);
        }
        *((unsigned char *)a1 + v12[9]) = *((unsigned char *)a2 + v12[9]);
        break;
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_122;
  }
  if (EnumCaseMultiPayload != 4)
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_123;
    }
    uint64_t v8 = type metadata accessor for PreviewLocation();
    int v9 = swift_getEnumCaseMultiPayload();
    if (v9 == 2)
    {
      *a1 = *a2;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
      *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      uint64_t v27 = type metadata accessor for SearchLocation();
      uint64_t v28 = *(int *)(v27 + 32);
      uint64_t v29 = (char *)a1 + v28;
      uint64_t v30 = (char *)a2 + v28;
      uint64_t v31 = type metadata accessor for Location();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31))
      {
        uint64_t v32 = sub_10017DF08(&qword_100E639E8);
        memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
      }
      uint64_t v83 = *(int *)(v27 + 36);
      uint64_t v84 = (char *)a1 + v83;
      id v85 = (char *)a2 + v83;
      *(_OWORD *)uint64_t v84 = *(_OWORD *)v85;
      v84[16] = v85[16];
    }
    else if (v9 == 1)
    {
      uint64_t v33 = type metadata accessor for LocationOfInterest();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 32))(a1, a2, v33);
    }
    else
    {
      if (v9)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        goto LABEL_38;
      }
      uint64_t v10 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
    }
    swift_storeEnumTagMultiPayload();
LABEL_38:
    uint64_t v86 = *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
    long long v87 = (_OWORD *)((char *)a1 + v86);
    uint64_t v88 = (_OWORD *)((char *)a2 + v86);
    uint64_t v89 = type metadata accessor for LocationPreviewModalViewState(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v90 = type metadata accessor for URL();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v90 - 8) + 32))(v87, v88, v90);
        goto LABEL_83;
      case 1u:
        uint64_t v91 = type metadata accessor for DetailCondition();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v91 - 8) + 32))(v87, v88, v91);
        uint64_t v92 = (int *)type metadata accessor for ConditionDetailViewState();
        uint64_t v93 = v92[5];
        uint64_t v94 = (char *)v87 + v93;
        uint64_t v95 = (char *)v88 + v93;
        uint64_t v96 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 32))(v94, v95, v96);
        uint64_t v97 = v92[6];
        __dst = (char *)v87 + v97;
        uint64_t v98 = (char *)v88 + v97;
        uint64_t v99 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v98, 1, v99))
        {
          uint64_t v100 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(__dst, v98, *(void *)(*(void *)(v100 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 32))(__dst, v98, v99);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v99);
        }
        uint64_t v181 = v99;
        uint64_t v182 = v92[7];
        uint64_t v183 = (char *)v87 + v182;
        uint64_t v184 = (char *)v88 + v182;
        long long v185 = *((_OWORD *)v184 + 1);
        *(_OWORD *)uint64_t v183 = *(_OWORD *)v184;
        *((_OWORD *)v183 + 1) = v185;
        v183[32] = v184[32];
        __dstb = v92;
        uint64_t v186 = v92[8];
        uint64_t v187 = (_OWORD *)((char *)v87 + v186);
        long long v188 = (_OWORD *)((char *)v88 + v186);
        long long v189 = (int *)type metadata accessor for DetailChartSelection();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v188, 1, (uint64_t)v189))
        {
          uint64_t v190 = sub_10017DF08(&qword_100E711F8);
          memcpy(v187, v188, *(void *)(*(void *)(v190 - 8) + 64));
        }
        else
        {
          *uint64_t v187 = *v188;
          uint64_t v351 = *(void (**)(char *, char *, uint64_t))(*(void *)(v181 - 8) + 32);
          v351((char *)v187 + v189[5], (char *)v188 + v189[5], v181);
          v351((char *)v187 + v189[6], (char *)v188 + v189[6], v181);
          v351((char *)v187 + v189[7], (char *)v188 + v189[7], v181);
          *(void *)((char *)v187 + v189[8]) = *(void *)((char *)v188 + v189[8]);
          uint64_t v215 = v189[9];
          uint64_t v216 = (char *)v187 + v215;
          uint64_t v217 = (char *)v188 + v215;
          v216[8] = v217[8];
          *(void *)uint64_t v216 = *(void *)v217;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v187, 0, 1, (uint64_t)v189);
        }
        *((unsigned char *)v87 + __dstb[9]) = *((unsigned char *)v88 + __dstb[9]);
        goto LABEL_83;
      case 2u:
        uint64_t v101 = type metadata accessor for Location();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v101 - 8) + 32))(v87, v88, v101);
        uint64_t v102 = type metadata accessor for AirQualityDetailViewState();
        *((unsigned char *)v87 + *(int *)(v102 + 20)) = *((unsigned char *)v88 + *(int *)(v102 + 20));
        uint64_t v103 = *(int *)(v102 + 24);
        uint64_t v104 = (char *)v87 + v103;
        uint64_t v105 = (char *)v88 + v103;
        v104[32] = v105[32];
        long long v106 = *((_OWORD *)v105 + 1);
        *(_OWORD *)uint64_t v104 = *(_OWORD *)v105;
        *((_OWORD *)v104 + 1) = v106;
        goto LABEL_83;
      case 3u:
        uint64_t v107 = type metadata accessor for Location();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v107 - 8) + 32))(v87, v88, v107);
        uint64_t v108 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
        uint64_t v109 = (char *)v87 + v108;
        char v110 = (char *)v88 + v108;
        long long v111 = *((_OWORD *)v110 + 1);
        *(_OWORD *)uint64_t v109 = *(_OWORD *)v110;
        *((_OWORD *)v109 + 1) = v111;
        v109[32] = v110[32];
        goto LABEL_83;
      case 4u:
        uint64_t v112 = type metadata accessor for Location();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v112 - 8) + 32))(v87, v88, v112);
        uint64_t v113 = type metadata accessor for SunriseSunsetDetailViewState();
        uint64_t v114 = *(int *)(v113 + 20);
        uint64_t v115 = (char *)v87 + v114;
        long long v116 = (char *)v88 + v114;
        long long v117 = *((_OWORD *)v116 + 1);
        *(_OWORD *)uint64_t v115 = *(_OWORD *)v116;
        *((_OWORD *)v115 + 1) = v117;
        v115[32] = v116[32];
        *((unsigned char *)v87 + *(int *)(v113 + 24)) = *((unsigned char *)v88 + *(int *)(v113 + 24));
        goto LABEL_83;
      case 5u:
        uint64_t v118 = type metadata accessor for Location();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v118 - 8) + 32))(v87, v88, v118);
        uint64_t v119 = type metadata accessor for MoonDetailViewState();
        uint64_t v120 = *(int *)(v119 + 20);
        uint64_t v121 = (char *)v87 + v120;
        uint64_t v122 = (char *)v88 + v120;
        uint64_t v123 = type metadata accessor for MoonDetailSelectedDate();
        __dsta = (int *)v119;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v122, 1, v123))
        {
          uint64_t v124 = sub_10017DF08(&qword_100E67240);
          memcpy(v121, v122, *(void *)(*(void *)(v124 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          uint64_t v191 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v191 - 8) + 32))(v121, v122, v191);
          swift_storeEnumTagMultiPayload();
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v121, 0, 1, v123);
        }
        uint64_t v192 = *(int *)(v119 + 24);
        long long v193 = (char *)v87 + v192;
        uint64_t v194 = (char *)v88 + v192;
        uint64_t v195 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v194, 1, v195))
        {
          uint64_t v196 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v193, v194, *(void *)(*(void *)(v196 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 32))(v193, v194, v195);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v193, 0, 1, v195);
        }
        uint64_t v218 = __dsta[7];
        uint64_t v219 = (char *)v87 + v218;
        uint64_t v220 = (char *)v88 + v218;
        long long v221 = *((_OWORD *)v220 + 1);
        *(_OWORD *)uint64_t v219 = *(_OWORD *)v220;
        *((_OWORD *)v219 + 1) = v221;
        v219[32] = v220[32];
        *((unsigned char *)v87 + __dsta[8]) = *((unsigned char *)v88 + __dsta[8]);
        goto LABEL_83;
      case 6u:
        long long v125 = v88[1];
        *long long v87 = *v88;
        v87[1] = v125;
        long long v126 = (int *)type metadata accessor for NewsArticle();
        uint64_t v127 = v126[6];
        uint64_t v128 = (char *)v87 + v127;
        uint64_t v129 = (char *)v88 + v127;
        uint64_t v130 = type metadata accessor for URL();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v129, 1, v130))
        {
          uint64_t v131 = sub_10017DF08(&qword_100E749B0);
          memcpy(v128, v129, *(void *)(*(void *)(v131 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 32))(v128, v129, v130);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v128, 0, 1, v130);
        }
        uint64_t v197 = v126[7];
        uint64_t v198 = (char *)v87 + v197;
        uint64_t v199 = (char *)v88 + v197;
        uint64_t v200 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 32))(v198, v199, v200);
        __dstc = *(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 32);
        __dstc((char *)v87 + v126[8], (char *)v88 + v126[8], v130);
        uint64_t v201 = v126[9];
        uint64_t v202 = (_OWORD *)((char *)v87 + v201);
        uint64_t v203 = (char *)v88 + v201;
        long long v204 = *(_OWORD *)((char *)v88 + v201 + 16);
        *uint64_t v202 = *(_OWORD *)((char *)v88 + v201);
        v202[1] = v204;
        uint64_t v205 = *(int *)(type metadata accessor for NewsChannel() + 24);
        uint64_t v206 = (char *)v202 + v205;
        uint64_t v207 = &v203[v205];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v207, 1, v130))
        {
          uint64_t v208 = sub_10017DF08(&qword_100E749B0);
          memcpy(v206, v207, *(void *)(*(void *)(v208 - 8) + 64));
        }
        else
        {
          __dstc(v206, v207, v130);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v206, 0, 1, v130);
        }
        *(void *)((char *)v87 + v126[10]) = *(void *)((char *)v88 + v126[10]);
        *(void *)((char *)v87 + v126[11]) = *(void *)((char *)v88 + v126[11]);
        *(void *)((char *)v87 + v126[12]) = *(void *)((char *)v88 + v126[12]);
        goto LABEL_83;
      case 7u:
        uint64_t v132 = type metadata accessor for Location();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v132 - 8) + 32))(v87, v88, v132);
        uint64_t v133 = (int *)type metadata accessor for AveragesDetailViewState();
        *((unsigned char *)v87 + v133[5]) = *((unsigned char *)v88 + v133[5]);
        uint64_t v134 = v133[6];
        uint64_t v135 = (void *)((char *)v87 + v134);
        uint64_t v136 = (void *)((char *)v88 + v134);
        uint64_t v137 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v136, 1, (uint64_t)v137))
        {
          uint64_t v138 = sub_10017DF08(&qword_100E6B670);
          memcpy(v135, v136, *(void *)(*(void *)(v138 - 8) + 64));
        }
        else
        {
          void *v135 = *v136;
          uint64_t v209 = v137[5];
          uint64_t v354 = (char *)v136 + v209;
          __dstj = (char *)v135 + v209;
          uint64_t v210 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v210 - 8) + 32))(__dstj, v354, v210);
          *(void *)((char *)v135 + v137[6]) = *(void *)((char *)v136 + v137[6]);
          *(void *)((char *)v135 + v137[7]) = *(void *)((char *)v136 + v137[7]);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v135, 0, 1, (uint64_t)v137);
        }
        uint64_t v211 = v133[7];
        uint64_t v212 = (char *)v87 + v211;
        uint64_t v213 = (char *)v88 + v211;
        long long v214 = *((_OWORD *)v213 + 1);
        *(_OWORD *)uint64_t v212 = *(_OWORD *)v213;
        *((_OWORD *)v212 + 1) = v214;
        v212[32] = v213[32];
        goto LABEL_83;
      case 8u:
        uint64_t v139 = type metadata accessor for Location();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v139 - 8) + 32))(v87, v88, v139);
        uint64_t v140 = type metadata accessor for HomeAndWorkRefinementViewState();
        uint64_t v141 = *(int *)(v140 + 20);
        uint64_t v142 = (char *)v87 + v141;
        uint64_t v143 = (char *)v88 + v141;
        uint64_t v144 = type metadata accessor for LocationOfInterest();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 32))(v142, v143, v144);
        uint64_t v145 = *(int *)(v140 + 24);
        uint64_t v146 = (char *)v87 + v145;
        uint64_t v147 = (char *)v88 + v145;
        long long v148 = *((_OWORD *)v147 + 1);
        *(_OWORD *)uint64_t v146 = *(_OWORD *)v147;
        *((_OWORD *)v146 + 1) = v148;
        v146[32] = v147[32];
LABEL_83:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v87, v88, *(void *)(*(void *)(v89 - 8) + 64));
        break;
    }
    goto LABEL_122;
  }
  uint64_t v22 = type metadata accessor for ModalViewState.MapViewModal(0);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v22))
  {
    uint64_t v24 = type metadata accessor for PreviewLocation();
    int v25 = swift_getEnumCaseMultiPayload();
    if (v25 == 2)
    {
      *a1 = *a2;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
      *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      uint64_t v76 = type metadata accessor for SearchLocation();
      uint64_t v77 = *(int *)(v76 + 32);
      uint64_t v78 = (char *)a1 + v77;
      uint64_t v79 = (char *)a2 + v77;
      uint64_t v80 = type metadata accessor for Location();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v79, 1, v80))
      {
        uint64_t v81 = sub_10017DF08(&qword_100E639E8);
        memcpy(v78, v79, *(void *)(*(void *)(v81 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(v78, v79, v80);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v78, 0, 1, v80);
      }
      uint64_t v222 = *(int *)(v76 + 36);
      long long v223 = (char *)a1 + v222;
      long long v224 = (char *)a2 + v222;
      *(_OWORD *)long long v223 = *(_OWORD *)v224;
      v223[16] = v224[16];
    }
    else if (v25 == 1)
    {
      uint64_t v82 = type metadata accessor for LocationOfInterest();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v82 - 8) + 32))(a1, a2, v82);
    }
    else
    {
      if (v25)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v24 - 8) + 64));
LABEL_88:
        uint64_t v225 = *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
        uint64_t v226 = (_OWORD *)((char *)a1 + v225);
        uint64_t v227 = (_OWORD *)((char *)a2 + v225);
        uint64_t v228 = type metadata accessor for LocationPreviewModalViewState(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v229 = type metadata accessor for URL();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v229 - 8) + 32))(v226, v227, v229);
            goto LABEL_120;
          case 1u:
            uint64_t v230 = type metadata accessor for DetailCondition();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v230 - 8) + 32))(v226, v227, v230);
            uint64_t v231 = (int *)type metadata accessor for ConditionDetailViewState();
            uint64_t v232 = v231[5];
            uint64_t v233 = (char *)v226 + v232;
            long long v234 = (char *)v227 + v232;
            uint64_t v235 = type metadata accessor for Location();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v235 - 8) + 32))(v233, v234, v235);
            uint64_t v236 = v231[6];
            __dstd = (char *)v226 + v236;
            long long v237 = (char *)v227 + v236;
            uint64_t v238 = type metadata accessor for Date();
            uint64_t v355 = v238;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v237, 1, v238))
            {
              uint64_t v239 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(__dstd, v237, *(void *)(*(void *)(v239 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v238 - 8) + 32))(__dstd, v237, v238);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstd, 0, 1, v238);
            }
            uint64_t v286 = v231[7];
            uint64_t v287 = (char *)v226 + v286;
            uint64_t v288 = (char *)v227 + v286;
            long long v289 = *((_OWORD *)v288 + 1);
            *(_OWORD *)uint64_t v287 = *(_OWORD *)v288;
            *((_OWORD *)v287 + 1) = v289;
            v287[32] = v288[32];
            __dsth = v231;
            uint64_t v290 = v231[8];
            uint64_t v291 = (_OWORD *)((char *)v226 + v290);
            uint64_t v292 = (_OWORD *)((char *)v227 + v290);
            uint64_t v293 = (int *)type metadata accessor for DetailChartSelection();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v292, 1, (uint64_t)v293))
            {
              uint64_t v294 = sub_10017DF08(&qword_100E711F8);
              memcpy(v291, v292, *(void *)(*(void *)(v294 - 8) + 64));
            }
            else
            {
              *uint64_t v291 = *v292;
              uint64_t v319 = v293[5];
              uint64_t v320 = (char *)v291 + v319;
              uint64_t v350 = (uint64_t)v291;
              uint64_t v321 = *(void (**)(char *, char *))(*(void *)(v355 - 8) + 32);
              v321(v320, (char *)v292 + v319);
              ((void (*)(uint64_t, char *, uint64_t))v321)(v350 + v293[6], (char *)v292 + v293[6], v355);
              ((void (*)(uint64_t, char *, uint64_t))v321)(v350 + v293[7], (char *)v292 + v293[7], v355);
              *(void *)(v350 + v293[8]) = *(void *)((char *)v292 + v293[8]);
              uint64_t v322 = v293[9];
              uint64_t v323 = v350 + v322;
              uint64_t v324 = (char *)v292 + v322;
              *(unsigned char *)(v323 + 8) = v324[8];
              *(void *)uint64_t v323 = *(void *)v324;
              _s7Weather24LocationCompositionStateOwst_0(v350, 0, 1, (uint64_t)v293);
            }
            *((unsigned char *)v226 + __dsth[9]) = *((unsigned char *)v227 + __dsth[9]);
            goto LABEL_120;
          case 2u:
            uint64_t v240 = type metadata accessor for Location();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v240 - 8) + 32))(v226, v227, v240);
            uint64_t v241 = type metadata accessor for AirQualityDetailViewState();
            *((unsigned char *)v226 + *(int *)(v241 + 20)) = *((unsigned char *)v227 + *(int *)(v241 + 20));
            uint64_t v242 = *(int *)(v241 + 24);
            uint64_t v243 = (char *)v226 + v242;
            uint64_t v244 = (char *)v227 + v242;
            v243[32] = v244[32];
            long long v245 = *((_OWORD *)v244 + 1);
            *(_OWORD *)uint64_t v243 = *(_OWORD *)v244;
            *((_OWORD *)v243 + 1) = v245;
            goto LABEL_120;
          case 3u:
            uint64_t v246 = type metadata accessor for Location();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v246 - 8) + 32))(v226, v227, v246);
            uint64_t v247 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
            uint64_t v248 = (char *)v226 + v247;
            uint64_t v249 = (char *)v227 + v247;
            long long v250 = *((_OWORD *)v249 + 1);
            *(_OWORD *)uint64_t v248 = *(_OWORD *)v249;
            *((_OWORD *)v248 + 1) = v250;
            v248[32] = v249[32];
            goto LABEL_120;
          case 4u:
            uint64_t v251 = type metadata accessor for Location();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v251 - 8) + 32))(v226, v227, v251);
            uint64_t v252 = type metadata accessor for SunriseSunsetDetailViewState();
            uint64_t v253 = *(int *)(v252 + 20);
            uint64_t v254 = (char *)v226 + v253;
            uint64_t v255 = (char *)v227 + v253;
            long long v256 = *((_OWORD *)v255 + 1);
            *(_OWORD *)uint64_t v254 = *(_OWORD *)v255;
            *((_OWORD *)v254 + 1) = v256;
            v254[32] = v255[32];
            *((unsigned char *)v226 + *(int *)(v252 + 24)) = *((unsigned char *)v227 + *(int *)(v252 + 24));
            goto LABEL_120;
          case 5u:
            uint64_t v257 = type metadata accessor for Location();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v257 - 8) + 32))(v226, v227, v257);
            __dste = (int *)type metadata accessor for MoonDetailViewState();
            uint64_t v258 = __dste[5];
            uint64_t v259 = (char *)v226 + v258;
            uint64_t v260 = (char *)v227 + v258;
            uint64_t v261 = type metadata accessor for MoonDetailSelectedDate();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v260, 1, v261))
            {
              uint64_t v262 = sub_10017DF08(&qword_100E67240);
              memcpy(v259, v260, *(void *)(*(void *)(v262 - 8) + 64));
            }
            else
            {
              swift_getEnumCaseMultiPayload();
              uint64_t v295 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v295 - 8) + 32))(v259, v260, v295);
              swift_storeEnumTagMultiPayload();
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v259, 0, 1, v261);
            }
            uint64_t v296 = __dste[6];
            uint64_t v297 = (char *)v226 + v296;
            uint64_t v298 = (char *)v227 + v296;
            uint64_t v299 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v298, 1, v299))
            {
              uint64_t v300 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v297, v298, *(void *)(*(void *)(v300 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v299 - 8) + 32))(v297, v298, v299);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v297, 0, 1, v299);
            }
            uint64_t v325 = __dste[7];
            uint64_t v326 = (char *)v226 + v325;
            uint64_t v327 = (char *)v227 + v325;
            long long v328 = *((_OWORD *)v327 + 1);
            *(_OWORD *)uint64_t v326 = *(_OWORD *)v327;
            *((_OWORD *)v326 + 1) = v328;
            v326[32] = v327[32];
            *((unsigned char *)v226 + __dste[8]) = *((unsigned char *)v227 + __dste[8]);
            goto LABEL_120;
          case 6u:
            uint64_t v356 = v22;
            long long v263 = v227[1];
            *uint64_t v226 = *v227;
            v226[1] = v263;
            __dstf = (int *)type metadata accessor for NewsArticle();
            uint64_t v264 = __dstf[6];
            char v265 = (char *)v226 + v264;
            long long v266 = (char *)v227 + v264;
            uint64_t v267 = type metadata accessor for URL();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v266, 1, v267))
            {
              uint64_t v268 = sub_10017DF08(&qword_100E749B0);
              memcpy(v265, v266, *(void *)(*(void *)(v268 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v267 - 8) + 32))(v265, v266, v267);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v265, 0, 1, v267);
            }
            uint64_t v301 = __dstf[7];
            uint64_t v302 = (char *)v226 + v301;
            long long v303 = (char *)v227 + v301;
            uint64_t v304 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v304 - 8) + 32))(v302, v303, v304);
            uint64_t v352 = *(void (**)(char *, char *, uint64_t))(*(void *)(v267 - 8) + 32);
            v352((char *)v226 + __dstf[8], (char *)v227 + __dstf[8], v267);
            uint64_t v305 = __dstf[9];
            uint64_t v306 = (_OWORD *)((char *)v226 + v305);
            long long v307 = (char *)v227 + v305;
            long long v308 = *(_OWORD *)((char *)v227 + v305 + 16);
            *uint64_t v306 = *(_OWORD *)((char *)v227 + v305);
            v306[1] = v308;
            uint64_t v309 = *(int *)(type metadata accessor for NewsChannel() + 24);
            uint64_t v310 = (char *)v306 + v309;
            uint64_t v311 = &v307[v309];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v307[v309], 1, v267))
            {
              uint64_t v312 = sub_10017DF08(&qword_100E749B0);
              memcpy(v310, v311, *(void *)(*(void *)(v312 - 8) + 64));
            }
            else
            {
              v352(v310, v311, v267);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v310, 0, 1, v267);
            }
            uint64_t v22 = v356;
            *(void *)((char *)v226 + __dstf[10]) = *(void *)((char *)v227 + __dstf[10]);
            *(void *)((char *)v226 + __dstf[11]) = *(void *)((char *)v227 + __dstf[11]);
            *(void *)((char *)v226 + __dstf[12]) = *(void *)((char *)v227 + __dstf[12]);
            goto LABEL_120;
          case 7u:
            uint64_t v269 = type metadata accessor for Location();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v269 - 8) + 32))(v226, v227, v269);
            uint64_t v270 = type metadata accessor for AveragesDetailViewState();
            *((unsigned char *)v226 + *(int *)(v270 + 20)) = *((unsigned char *)v227 + *(int *)(v270 + 20));
            __dstg = (int *)v270;
            uint64_t v271 = *(int *)(v270 + 24);
            long long v272 = (void *)((char *)v226 + v271);
            uint64_t v273 = (void *)((char *)v227 + v271);
            uint64_t v274 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v273, 1, (uint64_t)v274))
            {
              uint64_t v275 = sub_10017DF08(&qword_100E6B670);
              memcpy(v272, v273, *(void *)(*(void *)(v275 - 8) + 64));
            }
            else
            {
              *long long v272 = *v273;
              uint64_t v313 = v274[5];
              uint64_t v353 = (char *)v273 + v313;
              uint64_t v357 = (char *)v272 + v313;
              uint64_t v314 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v314 - 8) + 32))(v357, v353, v314);
              *(void *)((char *)v272 + v274[6]) = *(void *)((char *)v273 + v274[6]);
              *(void *)((char *)v272 + v274[7]) = *(void *)((char *)v273 + v274[7]);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v272, 0, 1, (uint64_t)v274);
            }
            uint64_t v315 = __dstg[7];
            uint64_t v316 = (char *)v226 + v315;
            uint64_t v317 = (char *)v227 + v315;
            long long v318 = *((_OWORD *)v317 + 1);
            *(_OWORD *)uint64_t v316 = *(_OWORD *)v317;
            *((_OWORD *)v316 + 1) = v318;
            v316[32] = v317[32];
            goto LABEL_120;
          case 8u:
            uint64_t v276 = type metadata accessor for Location();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v276 - 8) + 32))(v226, v227, v276);
            uint64_t v277 = type metadata accessor for HomeAndWorkRefinementViewState();
            uint64_t v278 = *(int *)(v277 + 20);
            long long v279 = (char *)v226 + v278;
            uint64_t v280 = (char *)v227 + v278;
            uint64_t v281 = type metadata accessor for LocationOfInterest();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v281 - 8) + 32))(v279, v280, v281);
            uint64_t v282 = *(int *)(v277 + 24);
            uint64_t v283 = (char *)v226 + v282;
            uint64_t v284 = (char *)v227 + v282;
            long long v285 = *((_OWORD *)v284 + 1);
            *(_OWORD *)uint64_t v283 = *(_OWORD *)v284;
            *((_OWORD *)v283 + 1) = v285;
            v283[32] = v284[32];
LABEL_120:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v226, v227, *(void *)(*(void *)(v228 - 8) + 64));
            break;
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v22);
        goto LABEL_122;
      }
      uint64_t v26 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 32))(a1, a2, v26);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_88;
  }
  uint64_t v23 = sub_10017DF08(&qword_100E663E8);
  memcpy(a1, a2, *(void *)(*(void *)(v23 - 8) + 64));
LABEL_122:
  swift_storeEnumTagMultiPayload();
LABEL_123:
  uint64_t v329 = a3[5];
  uint64_t v330 = (char *)a1 + v329;
  uint64_t v331 = (char *)a2 + v329;
  uint64_t v332 = type metadata accessor for Location();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v331, 1, v332))
  {
    uint64_t v333 = sub_10017DF08(&qword_100E639E8);
    memcpy(v330, v331, *(void *)(*(void *)(v333 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v332 - 8) + 32))(v330, v331, v332);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v330, 0, 1, v332);
  }
  uint64_t v334 = a3[6];
  long long v335 = (char *)a1 + v334;
  uint64_t v336 = (char *)a2 + v334;
  uint64_t v337 = type metadata accessor for Location.Identifier();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v336, 1, v337))
  {
    uint64_t v338 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v335, v336, *(void *)(*(void *)(v338 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v337 - 8) + 32))(v335, v336, v337);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v335, 0, 1, v337);
  }
  uint64_t v339 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  char v340 = (char *)a1 + v339;
  uint64_t v341 = (char *)a2 + v339;
  uint64_t v342 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v342 - 8) + 32))(v340, v341, v342);
  uint64_t v343 = a3[9];
  uint64_t v344 = a3[10];
  long long v345 = *(_OWORD *)((char *)a2 + v343);
  long long v346 = *(_OWORD *)((char *)a2 + v343 + 16);
  uint64_t v347 = (_OWORD *)((char *)a1 + v343);
  _OWORD *v347 = v345;
  v347[1] = v346;
  *(void *)((char *)a1 + v344) = *(void *)((char *)a2 + v344);
  uint64_t v348 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *((unsigned char *)a1 + v348) = *((unsigned char *)a2 + v348);
  return a1;
}

void *sub_1006D4A70(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1006D7660((uint64_t)a1, (void (*)(void))type metadata accessor for ModalViewState);
    uint64_t v6 = type metadata accessor for ModalViewState(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 5)
    {
      type metadata accessor for ModalViewState.LocationDetailModal(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v34 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 32))(a1, a2, v34);
          uint64_t v35 = type metadata accessor for AirQualityDetailViewState();
          *((unsigned char *)a1 + *(int *)(v35 + 20)) = *((unsigned char *)a2 + *(int *)(v35 + 20));
          uint64_t v36 = *(int *)(v35 + 24);
          uint64_t v37 = (char *)a1 + v36;
          uint64_t v38 = (char *)a2 + v36;
          v37[32] = v38[32];
          long long v39 = *((_OWORD *)v38 + 1);
          *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
          *((_OWORD *)v37 + 1) = v39;
          break;
        case 2u:
          uint64_t v40 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v40 - 8) + 32))(a1, a2, v40);
          uint64_t v41 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
          long long v42 = (char *)a1 + v41;
          uint64_t v43 = (char *)a2 + v41;
          long long v44 = *((_OWORD *)v43 + 1);
          *(_OWORD *)long long v42 = *(_OWORD *)v43;
          *((_OWORD *)v42 + 1) = v44;
          v42[32] = v43[32];
          break;
        case 3u:
          uint64_t v45 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v45 - 8) + 32))(a1, a2, v45);
          uint64_t v46 = type metadata accessor for SunriseSunsetDetailViewState();
          uint64_t v47 = *(int *)(v46 + 20);
          long long v48 = (char *)a1 + v47;
          long long v49 = (char *)a2 + v47;
          long long v50 = *((_OWORD *)v49 + 1);
          *(_OWORD *)long long v48 = *(_OWORD *)v49;
          *((_OWORD *)v48 + 1) = v50;
          v48[32] = v49[32];
          *((unsigned char *)a1 + *(int *)(v46 + 24)) = *((unsigned char *)a2 + *(int *)(v46 + 24));
          break;
        case 4u:
          uint64_t v51 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v51 - 8) + 32))(a1, a2, v51);
          uint64_t v52 = (int *)type metadata accessor for MoonDetailViewState();
          uint64_t v53 = v52[5];
          id v54 = (char *)a1 + v53;
          uint64_t v55 = (char *)a2 + v53;
          uint64_t v56 = type metadata accessor for MoonDetailSelectedDate();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v55, 1, v56))
          {
            uint64_t v57 = sub_10017DF08(&qword_100E67240);
            memcpy(v54, v55, *(void *)(*(void *)(v57 - 8) + 64));
          }
          else
          {
            swift_getEnumCaseMultiPayload();
            uint64_t v158 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 32))(v54, v55, v158);
            swift_storeEnumTagMultiPayload();
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v54, 0, 1, v56);
          }
          uint64_t v159 = v52[6];
          uint64_t v160 = (char *)a1 + v159;
          long long v161 = (char *)a2 + v159;
          uint64_t v162 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v161, 1, v162))
          {
            uint64_t v163 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v160, v161, *(void *)(*(void *)(v163 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 32))(v160, v161, v162);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v160, 0, 1, v162);
          }
          uint64_t v177 = v52[7];
          long long v178 = (char *)a1 + v177;
          long long v179 = (char *)a2 + v177;
          long long v180 = *((_OWORD *)v179 + 1);
          *(_OWORD *)long long v178 = *(_OWORD *)v179;
          *((_OWORD *)v178 + 1) = v180;
          v178[32] = v179[32];
          *((unsigned char *)a1 + v52[8]) = *((unsigned char *)a2 + v52[8]);
          break;
        case 5u:
          uint64_t v58 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v58 - 8) + 32))(a1, a2, v58);
          uint64_t v59 = (int *)type metadata accessor for AveragesDetailViewState();
          *((unsigned char *)a1 + v59[5]) = *((unsigned char *)a2 + v59[5]);
          uint64_t v60 = v59[6];
          uint64_t v61 = (void *)((char *)a1 + v60);
          uint64_t v62 = (void *)((char *)a2 + v60);
          uint64_t v63 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, (uint64_t)v63))
          {
            uint64_t v64 = sub_10017DF08(&qword_100E6B670);
            memcpy(v61, v62, *(void *)(*(void *)(v64 - 8) + 64));
          }
          else
          {
            *uint64_t v61 = *v62;
            uint64_t v164 = v63[5];
            uint64_t v165 = (char *)v61 + v164;
            uint64_t v375 = (char *)v62 + v164;
            uint64_t v166 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v166 - 8) + 32))(v165, v375, v166);
            *(void *)((char *)v61 + v63[6]) = *(void *)((char *)v62 + v63[6]);
            *(void *)((char *)v61 + v63[7]) = *(void *)((char *)v62 + v63[7]);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v61, 0, 1, (uint64_t)v63);
          }
          uint64_t v167 = v59[7];
          uint64_t v168 = (char *)a1 + v167;
          uint64_t v169 = (char *)a2 + v167;
          long long v170 = *((_OWORD *)v169 + 1);
          *(_OWORD *)uint64_t v168 = *(_OWORD *)v169;
          *((_OWORD *)v168 + 1) = v170;
          v168[32] = v169[32];
          break;
        case 6u:
          uint64_t v65 = type metadata accessor for URL();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v65 - 8) + 32))(a1, a2, v65);
          break;
        case 7u:
          uint64_t v66 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v66 - 8) + 32))(a1, a2, v66);
          uint64_t v67 = type metadata accessor for HomeAndWorkRefinementViewState();
          uint64_t v68 = *(int *)(v67 + 20);
          uint64_t v69 = (char *)a1 + v68;
          uint64_t v70 = (char *)a2 + v68;
          uint64_t v71 = type metadata accessor for LocationOfInterest();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v69, v70, v71);
          uint64_t v72 = *(int *)(v67 + 24);
          uint64_t v73 = (char *)a1 + v72;
          long long v74 = (char *)a2 + v72;
          long long v75 = *((_OWORD *)v74 + 1);
          *(_OWORD *)uint64_t v73 = *(_OWORD *)v74;
          *((_OWORD *)v73 + 1) = v75;
          v73[32] = v74[32];
          break;
        default:
          uint64_t v11 = type metadata accessor for DetailCondition();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
          uint64_t v12 = (int *)type metadata accessor for ConditionDetailViewState();
          uint64_t v13 = v12[5];
          uint64_t v14 = (char *)a1 + v13;
          uint64_t v15 = (char *)a2 + v13;
          uint64_t v16 = type metadata accessor for Location();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
          uint64_t v17 = v12[6];
          uint64_t v18 = (char *)a1 + v17;
          uint64_t v19 = (char *)a2 + v17;
          uint64_t v20 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
          {
            uint64_t v21 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
          }
          uint64_t v149 = v12[7];
          uint64_t v150 = (char *)a1 + v149;
          uint64_t v151 = (char *)a2 + v149;
          long long v152 = *((_OWORD *)v151 + 1);
          *(_OWORD *)uint64_t v150 = *(_OWORD *)v151;
          *((_OWORD *)v150 + 1) = v152;
          v150[32] = v151[32];
          uint64_t v153 = v12[8];
          long long v154 = (_OWORD *)((char *)a1 + v153);
          uint64_t v155 = (_OWORD *)((char *)a2 + v153);
          uint64_t v156 = (int *)type metadata accessor for DetailChartSelection();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v155, 1, (uint64_t)v156))
          {
            uint64_t v157 = sub_10017DF08(&qword_100E711F8);
            memcpy(v154, v155, *(void *)(*(void *)(v157 - 8) + 64));
          }
          else
          {
            *long long v154 = *v155;
            __dsti = v12;
            uint64_t v376 = v20;
            uint64_t v171 = v20;
            uint64_t v172 = (void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
            uint64_t v173 = *v172;
            (*v172)((char *)v154 + v156[5], (char *)v155 + v156[5], v171);
            v173((char *)v154 + v156[6], (char *)v155 + v156[6], v376);
            v173((char *)v154 + v156[7], (char *)v155 + v156[7], v376);
            uint64_t v12 = __dsti;
            *(void *)((char *)v154 + v156[8]) = *(void *)((char *)v155 + v156[8]);
            uint64_t v174 = v156[9];
            uint64_t v175 = (char *)v154 + v174;
            uint64_t v176 = (char *)v155 + v174;
            v175[8] = v176[8];
            *(void *)uint64_t v175 = *(void *)v176;
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v154, 0, 1, (uint64_t)v156);
          }
          *((unsigned char *)a1 + v12[9]) = *((unsigned char *)a2 + v12[9]);
          break;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_123;
    }
    if (EnumCaseMultiPayload != 4)
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        goto LABEL_124;
      }
      uint64_t v8 = type metadata accessor for PreviewLocation();
      int v9 = swift_getEnumCaseMultiPayload();
      if (v9 == 2)
      {
        *a1 = *a2;
        *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
        *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
        uint64_t v27 = type metadata accessor for SearchLocation();
        uint64_t v28 = *(int *)(v27 + 32);
        uint64_t v29 = (char *)a1 + v28;
        uint64_t v30 = (char *)a2 + v28;
        uint64_t v31 = type metadata accessor for Location();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31))
        {
          uint64_t v32 = sub_10017DF08(&qword_100E639E8);
          memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
        }
        uint64_t v83 = *(int *)(v27 + 36);
        uint64_t v84 = (char *)a1 + v83;
        id v85 = (char *)a2 + v83;
        *(_OWORD *)uint64_t v84 = *(_OWORD *)v85;
        v84[16] = v85[16];
      }
      else if (v9 == 1)
      {
        uint64_t v33 = type metadata accessor for LocationOfInterest();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 32))(a1, a2, v33);
      }
      else
      {
        if (v9)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          goto LABEL_39;
        }
        uint64_t v10 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      }
      swift_storeEnumTagMultiPayload();
LABEL_39:
      uint64_t v86 = *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
      long long v87 = (_OWORD *)((char *)a1 + v86);
      uint64_t v88 = (_OWORD *)((char *)a2 + v86);
      uint64_t v89 = type metadata accessor for LocationPreviewModalViewState(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v90 = type metadata accessor for URL();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v90 - 8) + 32))(v87, v88, v90);
          goto LABEL_84;
        case 1u:
          uint64_t v91 = type metadata accessor for DetailCondition();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v91 - 8) + 32))(v87, v88, v91);
          uint64_t v92 = (int *)type metadata accessor for ConditionDetailViewState();
          uint64_t v93 = v92[5];
          uint64_t v94 = (char *)v87 + v93;
          uint64_t v95 = (char *)v88 + v93;
          uint64_t v96 = type metadata accessor for Location();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 32))(v94, v95, v96);
          uint64_t v97 = v92[6];
          __dst = (char *)v87 + v97;
          uint64_t v98 = (char *)v88 + v97;
          uint64_t v99 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v98, 1, v99))
          {
            uint64_t v100 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(__dst, v98, *(void *)(*(void *)(v100 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 32))(__dst, v98, v99);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v99);
          }
          uint64_t v181 = v99;
          uint64_t v182 = v92[7];
          uint64_t v183 = (char *)v87 + v182;
          uint64_t v184 = (char *)v88 + v182;
          long long v185 = *((_OWORD *)v184 + 1);
          *(_OWORD *)uint64_t v183 = *(_OWORD *)v184;
          *((_OWORD *)v183 + 1) = v185;
          v183[32] = v184[32];
          __dstb = v92;
          uint64_t v186 = v92[8];
          uint64_t v187 = (_OWORD *)((char *)v87 + v186);
          long long v188 = (_OWORD *)((char *)v88 + v186);
          long long v189 = (int *)type metadata accessor for DetailChartSelection();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v188, 1, (uint64_t)v189))
          {
            uint64_t v190 = sub_10017DF08(&qword_100E711F8);
            memcpy(v187, v188, *(void *)(*(void *)(v190 - 8) + 64));
          }
          else
          {
            *uint64_t v187 = *v188;
            uint64_t v357 = *(void (**)(char *, char *, uint64_t))(*(void *)(v181 - 8) + 32);
            v357((char *)v187 + v189[5], (char *)v188 + v189[5], v181);
            v357((char *)v187 + v189[6], (char *)v188 + v189[6], v181);
            v357((char *)v187 + v189[7], (char *)v188 + v189[7], v181);
            *(void *)((char *)v187 + v189[8]) = *(void *)((char *)v188 + v189[8]);
            uint64_t v215 = v189[9];
            uint64_t v216 = (char *)v187 + v215;
            uint64_t v217 = (char *)v188 + v215;
            v216[8] = v217[8];
            *(void *)uint64_t v216 = *(void *)v217;
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v187, 0, 1, (uint64_t)v189);
          }
          *((unsigned char *)v87 + __dstb[9]) = *((unsigned char *)v88 + __dstb[9]);
          goto LABEL_84;
        case 2u:
          uint64_t v101 = type metadata accessor for Location();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v101 - 8) + 32))(v87, v88, v101);
          uint64_t v102 = type metadata accessor for AirQualityDetailViewState();
          *((unsigned char *)v87 + *(int *)(v102 + 20)) = *((unsigned char *)v88 + *(int *)(v102 + 20));
          uint64_t v103 = *(int *)(v102 + 24);
          uint64_t v104 = (char *)v87 + v103;
          uint64_t v105 = (char *)v88 + v103;
          v104[32] = v105[32];
          long long v106 = *((_OWORD *)v105 + 1);
          *(_OWORD *)uint64_t v104 = *(_OWORD *)v105;
          *((_OWORD *)v104 + 1) = v106;
          goto LABEL_84;
        case 3u:
          uint64_t v107 = type metadata accessor for Location();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v107 - 8) + 32))(v87, v88, v107);
          uint64_t v108 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
          uint64_t v109 = (char *)v87 + v108;
          char v110 = (char *)v88 + v108;
          long long v111 = *((_OWORD *)v110 + 1);
          *(_OWORD *)uint64_t v109 = *(_OWORD *)v110;
          *((_OWORD *)v109 + 1) = v111;
          v109[32] = v110[32];
          goto LABEL_84;
        case 4u:
          uint64_t v112 = type metadata accessor for Location();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v112 - 8) + 32))(v87, v88, v112);
          uint64_t v113 = type metadata accessor for SunriseSunsetDetailViewState();
          uint64_t v114 = *(int *)(v113 + 20);
          uint64_t v115 = (char *)v87 + v114;
          long long v116 = (char *)v88 + v114;
          long long v117 = *((_OWORD *)v116 + 1);
          *(_OWORD *)uint64_t v115 = *(_OWORD *)v116;
          *((_OWORD *)v115 + 1) = v117;
          v115[32] = v116[32];
          *((unsigned char *)v87 + *(int *)(v113 + 24)) = *((unsigned char *)v88 + *(int *)(v113 + 24));
          goto LABEL_84;
        case 5u:
          uint64_t v118 = type metadata accessor for Location();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v118 - 8) + 32))(v87, v88, v118);
          uint64_t v119 = type metadata accessor for MoonDetailViewState();
          uint64_t v120 = *(int *)(v119 + 20);
          uint64_t v121 = (char *)v87 + v120;
          uint64_t v122 = (char *)v88 + v120;
          uint64_t v123 = type metadata accessor for MoonDetailSelectedDate();
          __dsta = (int *)v119;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v122, 1, v123))
          {
            uint64_t v124 = sub_10017DF08(&qword_100E67240);
            memcpy(v121, v122, *(void *)(*(void *)(v124 - 8) + 64));
          }
          else
          {
            swift_getEnumCaseMultiPayload();
            uint64_t v191 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v191 - 8) + 32))(v121, v122, v191);
            swift_storeEnumTagMultiPayload();
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v121, 0, 1, v123);
          }
          uint64_t v192 = *(int *)(v119 + 24);
          long long v193 = (char *)v87 + v192;
          uint64_t v194 = (char *)v88 + v192;
          uint64_t v195 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v194, 1, v195))
          {
            uint64_t v196 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v193, v194, *(void *)(*(void *)(v196 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 32))(v193, v194, v195);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v193, 0, 1, v195);
          }
          uint64_t v218 = __dsta[7];
          uint64_t v219 = (char *)v87 + v218;
          uint64_t v220 = (char *)v88 + v218;
          long long v221 = *((_OWORD *)v220 + 1);
          *(_OWORD *)uint64_t v219 = *(_OWORD *)v220;
          *((_OWORD *)v219 + 1) = v221;
          v219[32] = v220[32];
          *((unsigned char *)v87 + __dsta[8]) = *((unsigned char *)v88 + __dsta[8]);
          goto LABEL_84;
        case 6u:
          long long v125 = v88[1];
          *long long v87 = *v88;
          v87[1] = v125;
          long long v126 = (int *)type metadata accessor for NewsArticle();
          uint64_t v127 = v126[6];
          uint64_t v128 = (char *)v87 + v127;
          uint64_t v129 = (char *)v88 + v127;
          uint64_t v130 = type metadata accessor for URL();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v129, 1, v130))
          {
            uint64_t v131 = sub_10017DF08(&qword_100E749B0);
            memcpy(v128, v129, *(void *)(*(void *)(v131 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 32))(v128, v129, v130);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v128, 0, 1, v130);
          }
          uint64_t v197 = v126[7];
          uint64_t v198 = (char *)v87 + v197;
          uint64_t v199 = (char *)v88 + v197;
          uint64_t v200 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 32))(v198, v199, v200);
          __dstc = *(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 32);
          __dstc((char *)v87 + v126[8], (char *)v88 + v126[8], v130);
          uint64_t v201 = v126[9];
          uint64_t v202 = (_OWORD *)((char *)v87 + v201);
          uint64_t v203 = (char *)v88 + v201;
          long long v204 = *(_OWORD *)((char *)v88 + v201 + 16);
          *uint64_t v202 = *(_OWORD *)((char *)v88 + v201);
          v202[1] = v204;
          uint64_t v205 = *(int *)(type metadata accessor for NewsChannel() + 24);
          uint64_t v206 = (char *)v202 + v205;
          uint64_t v207 = &v203[v205];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v207, 1, v130))
          {
            uint64_t v208 = sub_10017DF08(&qword_100E749B0);
            memcpy(v206, v207, *(void *)(*(void *)(v208 - 8) + 64));
          }
          else
          {
            __dstc(v206, v207, v130);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v206, 0, 1, v130);
          }
          *(void *)((char *)v87 + v126[10]) = *(void *)((char *)v88 + v126[10]);
          *(void *)((char *)v87 + v126[11]) = *(void *)((char *)v88 + v126[11]);
          *(void *)((char *)v87 + v126[12]) = *(void *)((char *)v88 + v126[12]);
          goto LABEL_84;
        case 7u:
          uint64_t v132 = type metadata accessor for Location();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v132 - 8) + 32))(v87, v88, v132);
          uint64_t v133 = (int *)type metadata accessor for AveragesDetailViewState();
          *((unsigned char *)v87 + v133[5]) = *((unsigned char *)v88 + v133[5]);
          uint64_t v134 = v133[6];
          uint64_t v135 = (void *)((char *)v87 + v134);
          uint64_t v136 = (void *)((char *)v88 + v134);
          uint64_t v137 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v136, 1, (uint64_t)v137))
          {
            uint64_t v138 = sub_10017DF08(&qword_100E6B670);
            memcpy(v135, v136, *(void *)(*(void *)(v138 - 8) + 64));
          }
          else
          {
            void *v135 = *v136;
            uint64_t v209 = v137[5];
            int v360 = (char *)v136 + v209;
            __dstj = (char *)v135 + v209;
            uint64_t v210 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v210 - 8) + 32))(__dstj, v360, v210);
            *(void *)((char *)v135 + v137[6]) = *(void *)((char *)v136 + v137[6]);
            *(void *)((char *)v135 + v137[7]) = *(void *)((char *)v136 + v137[7]);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v135, 0, 1, (uint64_t)v137);
          }
          uint64_t v211 = v133[7];
          uint64_t v212 = (char *)v87 + v211;
          uint64_t v213 = (char *)v88 + v211;
          long long v214 = *((_OWORD *)v213 + 1);
          *(_OWORD *)uint64_t v212 = *(_OWORD *)v213;
          *((_OWORD *)v212 + 1) = v214;
          v212[32] = v213[32];
          goto LABEL_84;
        case 8u:
          uint64_t v139 = type metadata accessor for Location();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v139 - 8) + 32))(v87, v88, v139);
          uint64_t v140 = type metadata accessor for HomeAndWorkRefinementViewState();
          uint64_t v141 = *(int *)(v140 + 20);
          uint64_t v142 = (char *)v87 + v141;
          uint64_t v143 = (char *)v88 + v141;
          uint64_t v144 = type metadata accessor for LocationOfInterest();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 32))(v142, v143, v144);
          uint64_t v145 = *(int *)(v140 + 24);
          uint64_t v146 = (char *)v87 + v145;
          uint64_t v147 = (char *)v88 + v145;
          long long v148 = *((_OWORD *)v147 + 1);
          *(_OWORD *)uint64_t v146 = *(_OWORD *)v147;
          *((_OWORD *)v146 + 1) = v148;
          v146[32] = v147[32];
LABEL_84:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v87, v88, *(void *)(*(void *)(v89 - 8) + 64));
          break;
      }
      goto LABEL_123;
    }
    uint64_t v22 = type metadata accessor for ModalViewState.MapViewModal(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v22))
    {
      uint64_t v23 = sub_10017DF08(&qword_100E663E8);
      memcpy(a1, a2, *(void *)(*(void *)(v23 - 8) + 64));
LABEL_123:
      swift_storeEnumTagMultiPayload();
      goto LABEL_124;
    }
    uint64_t v24 = type metadata accessor for PreviewLocation();
    int v25 = swift_getEnumCaseMultiPayload();
    if (v25 == 2)
    {
      *a1 = *a2;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
      *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      uint64_t v76 = type metadata accessor for SearchLocation();
      uint64_t v77 = *(int *)(v76 + 32);
      uint64_t v78 = (char *)a1 + v77;
      uint64_t v79 = (char *)a2 + v77;
      uint64_t v80 = type metadata accessor for Location();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v79, 1, v80))
      {
        uint64_t v81 = sub_10017DF08(&qword_100E639E8);
        memcpy(v78, v79, *(void *)(*(void *)(v81 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(v78, v79, v80);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v78, 0, 1, v80);
      }
      uint64_t v222 = *(int *)(v76 + 36);
      long long v223 = (char *)a1 + v222;
      long long v224 = (char *)a2 + v222;
      *(_OWORD *)long long v223 = *(_OWORD *)v224;
      v223[16] = v224[16];
    }
    else if (v25 == 1)
    {
      uint64_t v82 = type metadata accessor for LocationOfInterest();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v82 - 8) + 32))(a1, a2, v82);
    }
    else
    {
      if (v25)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v24 - 8) + 64));
LABEL_89:
        uint64_t v225 = *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
        uint64_t v226 = (_OWORD *)((char *)a1 + v225);
        uint64_t v227 = (_OWORD *)((char *)a2 + v225);
        uint64_t v228 = type metadata accessor for LocationPreviewModalViewState(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v229 = type metadata accessor for URL();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v229 - 8) + 32))(v226, v227, v229);
            goto LABEL_121;
          case 1u:
            uint64_t v230 = type metadata accessor for DetailCondition();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v230 - 8) + 32))(v226, v227, v230);
            uint64_t v231 = (int *)type metadata accessor for ConditionDetailViewState();
            uint64_t v232 = v231[5];
            uint64_t v233 = (char *)v226 + v232;
            long long v234 = (char *)v227 + v232;
            uint64_t v235 = type metadata accessor for Location();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v235 - 8) + 32))(v233, v234, v235);
            uint64_t v236 = v231[6];
            __dstd = (char *)v226 + v236;
            long long v237 = (char *)v227 + v236;
            uint64_t v238 = type metadata accessor for Date();
            uint64_t v361 = v238;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v237, 1, v238))
            {
              uint64_t v239 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(__dstd, v237, *(void *)(*(void *)(v239 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v238 - 8) + 32))(__dstd, v237, v238);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstd, 0, 1, v238);
            }
            uint64_t v286 = v231[7];
            uint64_t v287 = (char *)v226 + v286;
            uint64_t v288 = (char *)v227 + v286;
            long long v289 = *((_OWORD *)v288 + 1);
            *(_OWORD *)uint64_t v287 = *(_OWORD *)v288;
            *((_OWORD *)v287 + 1) = v289;
            v287[32] = v288[32];
            __dsth = v231;
            uint64_t v290 = v231[8];
            uint64_t v291 = (_OWORD *)((char *)v226 + v290);
            uint64_t v292 = (_OWORD *)((char *)v227 + v290);
            uint64_t v293 = (int *)type metadata accessor for DetailChartSelection();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v292, 1, (uint64_t)v293))
            {
              uint64_t v294 = sub_10017DF08(&qword_100E711F8);
              memcpy(v291, v292, *(void *)(*(void *)(v294 - 8) + 64));
            }
            else
            {
              *uint64_t v291 = *v292;
              uint64_t v319 = v293[5];
              uint64_t v320 = (char *)v291 + v319;
              uint64_t v356 = (uint64_t)v291;
              uint64_t v321 = *(void (**)(char *, char *))(*(void *)(v361 - 8) + 32);
              v321(v320, (char *)v292 + v319);
              ((void (*)(uint64_t, char *, uint64_t))v321)(v356 + v293[6], (char *)v292 + v293[6], v361);
              ((void (*)(uint64_t, char *, uint64_t))v321)(v356 + v293[7], (char *)v292 + v293[7], v361);
              *(void *)(v356 + v293[8]) = *(void *)((char *)v292 + v293[8]);
              uint64_t v322 = v293[9];
              uint64_t v323 = v356 + v322;
              uint64_t v324 = (char *)v292 + v322;
              *(unsigned char *)(v323 + 8) = v324[8];
              *(void *)uint64_t v323 = *(void *)v324;
              _s7Weather24LocationCompositionStateOwst_0(v356, 0, 1, (uint64_t)v293);
            }
            *((unsigned char *)v226 + __dsth[9]) = *((unsigned char *)v227 + __dsth[9]);
            goto LABEL_121;
          case 2u:
            uint64_t v240 = type metadata accessor for Location();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v240 - 8) + 32))(v226, v227, v240);
            uint64_t v241 = type metadata accessor for AirQualityDetailViewState();
            *((unsigned char *)v226 + *(int *)(v241 + 20)) = *((unsigned char *)v227 + *(int *)(v241 + 20));
            uint64_t v242 = *(int *)(v241 + 24);
            uint64_t v243 = (char *)v226 + v242;
            uint64_t v244 = (char *)v227 + v242;
            v243[32] = v244[32];
            long long v245 = *((_OWORD *)v244 + 1);
            *(_OWORD *)uint64_t v243 = *(_OWORD *)v244;
            *((_OWORD *)v243 + 1) = v245;
            goto LABEL_121;
          case 3u:
            uint64_t v246 = type metadata accessor for Location();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v246 - 8) + 32))(v226, v227, v246);
            uint64_t v247 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
            uint64_t v248 = (char *)v226 + v247;
            uint64_t v249 = (char *)v227 + v247;
            long long v250 = *((_OWORD *)v249 + 1);
            *(_OWORD *)uint64_t v248 = *(_OWORD *)v249;
            *((_OWORD *)v248 + 1) = v250;
            v248[32] = v249[32];
            goto LABEL_121;
          case 4u:
            uint64_t v251 = type metadata accessor for Location();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v251 - 8) + 32))(v226, v227, v251);
            uint64_t v252 = type metadata accessor for SunriseSunsetDetailViewState();
            uint64_t v253 = *(int *)(v252 + 20);
            uint64_t v254 = (char *)v226 + v253;
            uint64_t v255 = (char *)v227 + v253;
            long long v256 = *((_OWORD *)v255 + 1);
            *(_OWORD *)uint64_t v254 = *(_OWORD *)v255;
            *((_OWORD *)v254 + 1) = v256;
            v254[32] = v255[32];
            *((unsigned char *)v226 + *(int *)(v252 + 24)) = *((unsigned char *)v227 + *(int *)(v252 + 24));
            goto LABEL_121;
          case 5u:
            uint64_t v257 = type metadata accessor for Location();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v257 - 8) + 32))(v226, v227, v257);
            __dste = (int *)type metadata accessor for MoonDetailViewState();
            uint64_t v258 = __dste[5];
            uint64_t v259 = (char *)v226 + v258;
            uint64_t v260 = (char *)v227 + v258;
            uint64_t v261 = type metadata accessor for MoonDetailSelectedDate();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v260, 1, v261))
            {
              uint64_t v262 = sub_10017DF08(&qword_100E67240);
              memcpy(v259, v260, *(void *)(*(void *)(v262 - 8) + 64));
            }
            else
            {
              swift_getEnumCaseMultiPayload();
              uint64_t v295 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v295 - 8) + 32))(v259, v260, v295);
              swift_storeEnumTagMultiPayload();
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v259, 0, 1, v261);
            }
            uint64_t v296 = __dste[6];
            uint64_t v297 = (char *)v226 + v296;
            uint64_t v298 = (char *)v227 + v296;
            uint64_t v299 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v298, 1, v299))
            {
              uint64_t v300 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v297, v298, *(void *)(*(void *)(v300 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v299 - 8) + 32))(v297, v298, v299);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v297, 0, 1, v299);
            }
            uint64_t v325 = __dste[7];
            uint64_t v326 = (char *)v226 + v325;
            uint64_t v327 = (char *)v227 + v325;
            long long v328 = *((_OWORD *)v327 + 1);
            *(_OWORD *)uint64_t v326 = *(_OWORD *)v327;
            *((_OWORD *)v326 + 1) = v328;
            v326[32] = v327[32];
            *((unsigned char *)v226 + __dste[8]) = *((unsigned char *)v227 + __dste[8]);
            goto LABEL_121;
          case 6u:
            uint64_t v362 = v22;
            long long v263 = v227[1];
            *uint64_t v226 = *v227;
            v226[1] = v263;
            __dstf = (int *)type metadata accessor for NewsArticle();
            uint64_t v264 = __dstf[6];
            char v265 = (char *)v226 + v264;
            long long v266 = (char *)v227 + v264;
            uint64_t v267 = type metadata accessor for URL();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v266, 1, v267))
            {
              uint64_t v268 = sub_10017DF08(&qword_100E749B0);
              memcpy(v265, v266, *(void *)(*(void *)(v268 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v267 - 8) + 32))(v265, v266, v267);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v265, 0, 1, v267);
            }
            uint64_t v301 = __dstf[7];
            uint64_t v302 = (char *)v226 + v301;
            long long v303 = (char *)v227 + v301;
            uint64_t v304 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v304 - 8) + 32))(v302, v303, v304);
            uint64_t v358 = *(void (**)(char *, char *, uint64_t))(*(void *)(v267 - 8) + 32);
            v358((char *)v226 + __dstf[8], (char *)v227 + __dstf[8], v267);
            uint64_t v305 = __dstf[9];
            uint64_t v306 = (_OWORD *)((char *)v226 + v305);
            long long v307 = (char *)v227 + v305;
            long long v308 = *(_OWORD *)((char *)v227 + v305 + 16);
            *uint64_t v306 = *(_OWORD *)((char *)v227 + v305);
            v306[1] = v308;
            uint64_t v309 = *(int *)(type metadata accessor for NewsChannel() + 24);
            uint64_t v310 = (char *)v306 + v309;
            uint64_t v311 = &v307[v309];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v307[v309], 1, v267))
            {
              uint64_t v312 = sub_10017DF08(&qword_100E749B0);
              memcpy(v310, v311, *(void *)(*(void *)(v312 - 8) + 64));
            }
            else
            {
              v358(v310, v311, v267);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v310, 0, 1, v267);
            }
            uint64_t v22 = v362;
            *(void *)((char *)v226 + __dstf[10]) = *(void *)((char *)v227 + __dstf[10]);
            *(void *)((char *)v226 + __dstf[11]) = *(void *)((char *)v227 + __dstf[11]);
            *(void *)((char *)v226 + __dstf[12]) = *(void *)((char *)v227 + __dstf[12]);
            goto LABEL_121;
          case 7u:
            uint64_t v269 = type metadata accessor for Location();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v269 - 8) + 32))(v226, v227, v269);
            uint64_t v270 = type metadata accessor for AveragesDetailViewState();
            *((unsigned char *)v226 + *(int *)(v270 + 20)) = *((unsigned char *)v227 + *(int *)(v270 + 20));
            __dstg = (int *)v270;
            uint64_t v271 = *(int *)(v270 + 24);
            long long v272 = (void *)((char *)v226 + v271);
            uint64_t v273 = (void *)((char *)v227 + v271);
            uint64_t v274 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v273, 1, (uint64_t)v274))
            {
              uint64_t v275 = sub_10017DF08(&qword_100E6B670);
              memcpy(v272, v273, *(void *)(*(void *)(v275 - 8) + 64));
            }
            else
            {
              *long long v272 = *v273;
              uint64_t v313 = v274[5];
              uint64_t v359 = (char *)v273 + v313;
              uint64_t v363 = (char *)v272 + v313;
              uint64_t v314 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v314 - 8) + 32))(v363, v359, v314);
              *(void *)((char *)v272 + v274[6]) = *(void *)((char *)v273 + v274[6]);
              *(void *)((char *)v272 + v274[7]) = *(void *)((char *)v273 + v274[7]);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v272, 0, 1, (uint64_t)v274);
            }
            uint64_t v315 = __dstg[7];
            uint64_t v316 = (char *)v226 + v315;
            uint64_t v317 = (char *)v227 + v315;
            long long v318 = *((_OWORD *)v317 + 1);
            *(_OWORD *)uint64_t v316 = *(_OWORD *)v317;
            *((_OWORD *)v316 + 1) = v318;
            v316[32] = v317[32];
            goto LABEL_121;
          case 8u:
            uint64_t v276 = type metadata accessor for Location();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v276 - 8) + 32))(v226, v227, v276);
            uint64_t v277 = type metadata accessor for HomeAndWorkRefinementViewState();
            uint64_t v278 = *(int *)(v277 + 20);
            long long v279 = (char *)v226 + v278;
            uint64_t v280 = (char *)v227 + v278;
            uint64_t v281 = type metadata accessor for LocationOfInterest();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v281 - 8) + 32))(v279, v280, v281);
            uint64_t v282 = *(int *)(v277 + 24);
            uint64_t v283 = (char *)v226 + v282;
            uint64_t v284 = (char *)v227 + v282;
            long long v285 = *((_OWORD *)v284 + 1);
            *(_OWORD *)uint64_t v283 = *(_OWORD *)v284;
            *((_OWORD *)v283 + 1) = v285;
            v283[32] = v284[32];
LABEL_121:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v226, v227, *(void *)(*(void *)(v228 - 8) + 64));
            break;
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v22);
        goto LABEL_123;
      }
      uint64_t v26 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 32))(a1, a2, v26);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_89;
  }
LABEL_124:
  uint64_t v329 = a3[5];
  uint64_t v330 = (char *)a1 + v329;
  uint64_t v331 = (char *)a2 + v329;
  uint64_t v332 = type metadata accessor for Location();
  int v333 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v330, 1, v332);
  int v334 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v331, 1, v332);
  if (v333)
  {
    if (!v334)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v332 - 8) + 32))(v330, v331, v332);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v330, 0, 1, v332);
      goto LABEL_130;
    }
    goto LABEL_129;
  }
  uint64_t v335 = *(void *)(v332 - 8);
  if (v334)
  {
    (*(void (**)(char *, uint64_t))(v335 + 8))(v330, v332);
LABEL_129:
    uint64_t v336 = sub_10017DF08(&qword_100E639E8);
    memcpy(v330, v331, *(void *)(*(void *)(v336 - 8) + 64));
    goto LABEL_130;
  }
  (*(void (**)(char *, char *, uint64_t))(v335 + 40))(v330, v331, v332);
LABEL_130:
  uint64_t v337 = a3[6];
  uint64_t v338 = (char *)a1 + v337;
  uint64_t v339 = (char *)a2 + v337;
  uint64_t v340 = type metadata accessor for Location.Identifier();
  int v341 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v338, 1, v340);
  int v342 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v339, 1, v340);
  if (!v341)
  {
    uint64_t v343 = *(void *)(v340 - 8);
    if (!v342)
    {
      (*(void (**)(char *, char *, uint64_t))(v343 + 40))(v338, v339, v340);
      goto LABEL_136;
    }
    (*(void (**)(char *, uint64_t))(v343 + 8))(v338, v340);
    goto LABEL_135;
  }
  if (v342)
  {
LABEL_135:
    uint64_t v344 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v338, v339, *(void *)(*(void *)(v344 - 8) + 64));
    goto LABEL_136;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v340 - 8) + 32))(v338, v339, v340);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v338, 0, 1, v340);
LABEL_136:
  uint64_t v345 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  long long v346 = (char *)a1 + v345;
  uint64_t v347 = (char *)a2 + v345;
  uint64_t v348 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v348 - 8) + 40))(v346, v347, v348);
  uint64_t v349 = a3[9];
  uint64_t v350 = (void *)((char *)a1 + v349);
  uint64_t v351 = (char *)a2 + v349;
  uint64_t v352 = *(void *)((char *)a2 + v349 + 8);
  *uint64_t v350 = *(void *)((char *)a2 + v349);
  v350[1] = v352;
  swift_bridgeObjectRelease();
  v350[2] = *((void *)v351 + 2);
  swift_bridgeObjectRelease();
  v350[3] = *((void *)v351 + 3);
  swift_bridgeObjectRelease();
  uint64_t v353 = a3[10];
  uint64_t v354 = *(void **)((char *)a1 + v353);
  *(void *)((char *)a1 + v353) = *(void *)((char *)a2 + v353);

  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  return a1;
}

uint64_t sub_1006D7180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006D7194);
}

uint64_t sub_1006D7194(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for ModalViewState(0);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_10:
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  sub_10017DF08(&qword_100E639E8);
  sub_100162F30();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v12 = a3[5];
LABEL_9:
    uint64_t v9 = a1 + v12;
    goto LABEL_10;
  }
  sub_10017DF08(&qword_100E6DC08);
  sub_100162F30();
  if (*(_DWORD *)(v14 + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v12 = a3[6];
    goto LABEL_9;
  }
  type metadata accessor for WeatherMapOverlayKind();
  sub_100162F30();
  if (*(_DWORD *)(v16 + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = a3[8];
    goto LABEL_9;
  }
  unint64_t v18 = *(void *)(a1 + a3[9] + 8);
  if (v18 >= 0xFFFFFFFF) {
    LODWORD(v18) = -1;
  }
  return (v18 + 1);
}

uint64_t sub_1006D729C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006D72B0);
}

void sub_1006D72B0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for ModalViewState(0);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_10017DF08(&qword_100E639E8);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      sub_10017DF08(&qword_100E6DC08);
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[6];
      }
      else
      {
        type metadata accessor for WeatherMapOverlayKind();
        sub_100162F30();
        if (*(_DWORD *)(v18 + 84) != a3)
        {
          *(void *)(a1 + a4[9] + 8) = (a2 - 1);
          return;
        }
        uint64_t v10 = v17;
        uint64_t v14 = a4[8];
      }
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for WeatherMenuInput()
{
  uint64_t result = qword_100E8C790;
  if (!qword_100E8C790) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1006D73FC()
{
  type metadata accessor for ModalViewState(319);
  if (v0 <= 0x3F)
  {
    sub_1006D75A8(319, (unint64_t *)&qword_100E6EE60, (void (*)(uint64_t))&type metadata accessor for Location);
    if (v1 <= 0x3F)
    {
      sub_1006D75A8(319, (unint64_t *)&qword_100E6EAC8, (void (*)(uint64_t))&type metadata accessor for Location.Identifier);
      if (v2 <= 0x3F)
      {
        type metadata accessor for WeatherMapOverlayKind();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_1006D75A8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1006D75FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ModalViewState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006D7660(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t type metadata accessor for NextHourPrecipitationDetailInteractor()
{
  return self;
}

void *sub_1006D76DC(void *result)
{
  unint64_t v1 = result[2];
  if (!v1)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v1 == 1)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v1 < 3)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v1 == 3)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v2 = result[4];
  uint64_t v3 = result[6];
  uint64_t v4 = result[7];
  v6[0] = result[5];
  v6[1] = v2;
  _OWORD v6[2] = v6[0];
  v6[3] = v3;
  v6[4] = v4;
  v6[5] = v3;
  v6[6] = v4;
  v6[7] = v2;
  id v5 = [self polygonWithCoordinates:v6 count:4];

  return v5;
}

uint64_t destroy for ReportWeatherConditionsViewModel()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ReportWeatherConditionsViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
  uint64_t v9 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v9;
  uint64_t v10 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v10;
  *(_WORD *)(a1 + 152) = *(_WORD *)(a2 + 152);
  uint64_t v11 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v11;
  uint64_t v12 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v12;
  *(_WORD *)(a1 + 192) = *(_WORD *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ReportWeatherConditionsViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(unsigned char *)(a1 + 193) = *(unsigned char *)(a2 + 193);
  return a1;
}

void *initializeWithTake for ReportWeatherConditionsViewModel(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC2uLL);
}

uint64_t assignWithTake for ReportWeatherConditionsViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
  uint64_t v12 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v13;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(unsigned char *)(a1 + 193) = *(unsigned char *)(a2 + 193);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReportWeatherConditionsViewModel(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 194))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReportWeatherConditionsViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 192) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 194) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 194) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReportWeatherConditionsViewModel()
{
  return &type metadata for ReportWeatherConditionsViewModel;
}

uint64_t sub_1006D7CA0(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    BOOL v6 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
    if (v6 || (char v5 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
    {
      if ((*(unsigned __int8 *)(a1 + 32) ^ *(unsigned __int8 *)(a2 + 32)))
      {
LABEL_35:
        char v5 = 0;
        return v5 & 1;
      }
      BOOL v7 = *(void *)(a1 + 40) == *(void *)(a2 + 40) && *(void *)(a1 + 48) == *(void *)(a2 + 48);
      if (v7 || (char v5 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
      {
        BOOL v8 = *(void *)(a1 + 56) == *(void *)(a2 + 56) && *(void *)(a1 + 64) == *(void *)(a2 + 64);
        if (v8 || (char v5 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
        {
          if (((*(unsigned __int8 *)(a1 + 72) ^ *(unsigned __int8 *)(a2 + 72)) & 1) != 0 || (sub_10088C698() & 1) == 0) {
            goto LABEL_35;
          }
          BOOL v9 = *(void *)(a1 + 80) == *(void *)(a2 + 80) && *(void *)(a1 + 88) == *(void *)(a2 + 88);
          if (v9 || (char v5 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
          {
            BOOL v10 = *(void *)(a1 + 96) == *(void *)(a2 + 96) && *(void *)(a1 + 104) == *(void *)(a2 + 104);
            if (v10 || (char v5 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
            {
              if ((*(unsigned __int8 *)(a1 + 112) ^ *(unsigned __int8 *)(a2 + 112))) {
                goto LABEL_35;
              }
              char v12 = *(unsigned char *)(a2 + 113);
              uint64_t v13 = sub_100653BCC(*(unsigned char *)(a1 + 113));
              uint64_t v15 = v14;
              if (v13 == sub_100653BCC(v12) && v15 == v16)
              {
                swift_bridgeObjectRelease_n();
              }
              else
              {
                char v18 = sub_1001D1C64();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                char v5 = 0;
                if ((v18 & 1) == 0) {
                  return v5 & 1;
                }
              }
              BOOL v19 = *(void *)(a1 + 120) == *(void *)(a2 + 120) && *(void *)(a1 + 128) == *(void *)(a2 + 128);
              if (v19 || (char v5 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
              {
                BOOL v20 = *(void *)(a1 + 136) == *(void *)(a2 + 136) && *(void *)(a1 + 144) == *(void *)(a2 + 144);
                if (v20 || (char v5 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
                {
                  if ((*(unsigned __int8 *)(a1 + 152) ^ *(unsigned __int8 *)(a2 + 152))) {
                    goto LABEL_35;
                  }
                  char v21 = *(unsigned char *)(a2 + 153);
                  uint64_t v22 = sub_100653BCC(*(unsigned char *)(a1 + 153));
                  uint64_t v24 = v23;
                  if (v22 == sub_100653BCC(v21) && v24 == v25)
                  {
                    swift_bridgeObjectRelease_n();
                  }
                  else
                  {
                    char v27 = sub_1001D1C64();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    char v5 = 0;
                    if ((v27 & 1) == 0) {
                      return v5 & 1;
                    }
                  }
                  BOOL v28 = *(void *)(a1 + 160) == *(void *)(a2 + 160) && *(void *)(a1 + 168) == *(void *)(a2 + 168);
                  if (v28 || (char v5 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
                  {
                    BOOL v29 = *(void *)(a1 + 176) == *(void *)(a2 + 176)
                       && *(void *)(a1 + 184) == *(void *)(a2 + 184);
                    if (v29 || (char v5 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
                    {
                      if ((*(unsigned __int8 *)(a1 + 192) ^ *(unsigned __int8 *)(a2 + 192))) {
                        goto LABEL_35;
                      }
                      char v30 = *(unsigned char *)(a1 + 193);
                      char v31 = *(unsigned char *)(a2 + 193);
                      uint64_t v32 = sub_100653BCC(v30);
                      uint64_t v34 = v33;
                      if (v32 == sub_100653BCC(v31) && v34 == v35) {
                        char v5 = 1;
                      }
                      else {
                        char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
                      }
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return v5 & 1;
}

uint64_t sub_1006D7FC0()
{
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t sub_1006D7FC8(uint64_t result)
{
  *(unsigned char *)(v1 + 72) = result;
  if ((result & 1) == 0) {
    *(unsigned char *)(v1 + 73) = 0;
  }
  return result;
}

uint64_t sub_1006D7FD8(uint64_t a1)
{
  return sub_1006D80D0(a1, &qword_100E62490, &qword_100F519C0, &qword_100F51A70);
}

uint64_t sub_1006D8004()
{
  return *(unsigned __int8 *)(v0 + 112);
}

uint64_t sub_1006D800C(uint64_t result)
{
  *(unsigned char *)(v1 + 112) = result;
  if ((result & 1) == 0) {
    *(unsigned char *)(v1 + 113) = 0;
  }
  return result;
}

uint64_t sub_1006D801C(uint64_t a1)
{
  return sub_1006D80D0(a1, &qword_100E62498, &qword_100F519C8, &qword_100F51A78);
}

uint64_t sub_1006D8048()
{
  return *(unsigned __int8 *)(v0 + 152);
}

uint64_t sub_1006D8050(uint64_t result)
{
  *(unsigned char *)(v1 + 152) = result;
  if ((result & 1) == 0) {
    *(unsigned char *)(v1 + 153) = 0;
  }
  return result;
}

uint64_t sub_1006D8060(uint64_t a1)
{
  return sub_1006D80D0(a1, &qword_100E624A0, &qword_100F519D0, &qword_100F51A80);
}

uint64_t sub_1006D808C()
{
  return *(unsigned __int8 *)(v0 + 192);
}

uint64_t sub_1006D8094(uint64_t result)
{
  *(unsigned char *)(v1 + 192) = result;
  if ((result & 1) == 0) {
    *(unsigned char *)(v1 + 193) = 0;
  }
  return result;
}

uint64_t sub_1006D80A4(uint64_t a1)
{
  return sub_1006D80D0(a1, &qword_100E624A8, &qword_100F519D8, &qword_100F51A88);
}

uint64_t sub_1006D80D0(uint64_t a1, void *a2, void *a3, void *a4)
{
  if (*a2 != -1) {
    swift_once();
  }
  *a4 = *a3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1006D8128(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x8000000100CAE860
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000100CAE880 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000100CAE8A0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000100CAE8C0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000100CAE8E0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000100CAE900 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000100CAE920 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000100CAE940 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000100CAE960 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000100CAE980 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000100CAE9A0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000100CAE9C0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000100CAE9E0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000100CAEA00 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000100CAEA20 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000100CAEA40 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000100CAEA60 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000100CAEA80 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000100CAEAA0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 18;
    }
    else {
      return 19;
    }
  }
}

uint64_t sub_1006D87A8()
{
  return 19;
}

unint64_t sub_1006D87B0(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000016;
      break;
    case 2:
    case 5:
    case 8:
    case 10:
    case 13:
    case 16:
    case 18:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    case 6:
      unint64_t result = 0xD000000000000016;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    case 12:
      unint64_t result = 0xD000000000000016;
      break;
    case 14:
      unint64_t result = 0xD000000000000016;
      break;
    case 15:
      unint64_t result = 0xD000000000000012;
      break;
    case 17:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1006D8954(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10017DF08(&qword_100E8C8B0);
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  BOOL v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a1, a1[3]);
  sub_1006D9880();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v14 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    sub_100187FFC(1);
    sub_1001801A8(2);
    sub_100187FFC(3);
    sub_100187FFC(4);
    sub_1001801A8(5);
    char v14 = v3[73];
    char v13 = 6;
    sub_1006D9964();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_100187FFC(7);
    sub_100187FFC(8);
    sub_1001801A8(9);
    char v14 = v3[113];
    char v13 = 10;
    sub_1006D99B0();
    sub_1001A23E8();
    sub_100187FFC(11);
    sub_100187FFC(12);
    sub_1001801A8(13);
    char v14 = v3[153];
    char v13 = 14;
    sub_1001A23E8();
    sub_100187FFC(15);
    sub_100187FFC(16);
    sub_1001801A8(17);
    char v14 = v3[193];
    char v13 = 18;
    sub_1001A23E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v5);
}

void *sub_1006D8C30@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_10017DF08(&qword_100E8C890);
  sub_100179C0C();
  __chkstk_darwin(v5);
  uint64_t v50 = (uint64_t)a1;
  sub_1001B1E64(a1, a1[3]);
  sub_1006D9880();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    uint64_t v94 = v2;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
    return (void *)v47;
  }
  else
  {
    uint64_t v41 = a2;
    uint64_t v7 = sub_1001A0CCC();
    uint64_t v9 = v8;
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1001A0CCC();
    uint64_t v12 = v11;
    uint64_t v40 = v10;
    swift_bridgeObjectRetain();
    char v39 = sub_1001637E8();
    uint64_t v38 = sub_1001A0CCC();
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_1001A0CCC();
    uint64_t v46 = v13;
    swift_bridgeObjectRetain();
    char v35 = sub_1001637E8();
    sub_1006D98CC();
    sub_100181690();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v34 = sub_1001A0CCC();
    uint64_t v45 = v14;
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1001A0CCC();
    uint64_t v44 = v15;
    swift_bridgeObjectRetain();
    char v31 = sub_1001637E8();
    sub_1006D9918();
    sub_100181690();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v16 = sub_10017E810();
    uint64_t v49 = v17;
    uint64_t v18 = v16;
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_10017E810();
    uint64_t v48 = v19;
    swift_bridgeObjectRetain();
    char v29 = sub_100183DE0();
    LOBYTE(v51[0]) = 14;
    sub_100181690();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v28 = sub_10017E810();
    uint64_t v43 = v20;
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_10017E810();
    uint64_t v42 = v21;
    LOBYTE(v52[0]) = 17;
    swift_bridgeObjectRetain();
    char v26 = sub_100183DE0();
    char v85 = 18;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v94 = 0;
    char v22 = v35 & 1;
    char v25 = v35 & 1;
    char v36 = v31 & 1;
    uint64_t v23 = sub_100186AE8();
    v24(v23);
    char v32 = v86;
    v51[0] = v7;
    v51[1] = v9;
    v51[2] = v40;
    v51[3] = v12;
    LOBYTE(v51[4]) = v39 & 1;
    v51[5] = v38;
    v51[6] = 0;
    v51[7] = v37;
    v51[8] = v46;
    LOBYTE(v51[9]) = v22;
    BYTE1(v51[9]) = 5;
    v51[10] = v34;
    v51[11] = v45;
    v51[12] = v33;
    v51[13] = v44;
    LOBYTE(v51[14]) = v36;
    BYTE1(v51[14]) = 9;
    v51[15] = v18;
    v51[16] = v49;
    v51[17] = v30;
    v51[18] = v48;
    LOBYTE(v51[19]) = v29 & 1;
    BYTE1(v51[19]) = 13;
    v51[20] = v28;
    v51[21] = v43;
    v51[22] = v27;
    v51[23] = v42;
    LOBYTE(v51[24]) = v26 & 1;
    BYTE1(v51[24]) = v86;
    sub_1002E728C((uint64_t)v51);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v50);
    v52[0] = v7;
    v52[1] = v9;
    v52[2] = v40;
    v52[3] = v12;
    char v53 = v39 & 1;
    *(_DWORD *)id v54 = v93[0];
    *(_DWORD *)&v54[3] = *(_DWORD *)((char *)v93 + 3);
    uint64_t v55 = v38;
    uint64_t v56 = 0;
    uint64_t v57 = v37;
    uint64_t v58 = v46;
    char v59 = v25;
    char v60 = 5;
    int v61 = v91;
    __int16 v62 = v92;
    uint64_t v63 = v34;
    uint64_t v64 = v45;
    uint64_t v65 = v33;
    uint64_t v66 = v44;
    char v67 = v36;
    char v68 = 9;
    int v69 = v89;
    __int16 v70 = v90;
    uint64_t v71 = v18;
    uint64_t v72 = v49;
    uint64_t v73 = v30;
    uint64_t v74 = v48;
    char v75 = v29 & 1;
    char v76 = 13;
    __int16 v78 = v88;
    int v77 = v87;
    uint64_t v79 = v28;
    uint64_t v80 = v43;
    uint64_t v81 = v27;
    uint64_t v82 = v42;
    char v83 = v26 & 1;
    char v84 = v32;
    sub_1002E7344((uint64_t)v52);
    return memcpy(v41, v51, 0xC2uLL);
  }
}

unint64_t sub_1006D96A8()
{
  return sub_1006D87B0(*v0);
}

uint64_t sub_1006D96B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1006D8128(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1006D96D8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1006D87A8();
  *a1 = result;
  return result;
}

uint64_t sub_1006D9700(uint64_t a1)
{
  unint64_t v2 = sub_1006D9880();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006D973C(uint64_t a1)
{
  unint64_t v2 = sub_1006D9880();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_1006D977C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1006D8C30(a1, __src);
  if (!v2) {
    return memcpy(a2, __src, 0xC2uLL);
  }
  return result;
}

uint64_t sub_1006D97C8(void *a1)
{
  return sub_1006D8954(a1);
}

void sub_1006D97E0(void *a1@<X8>)
{
  sub_100899CD8((uint64_t)__src);
  if (!v1) {
    memcpy(a1, __src, 0xC2uLL);
  }
}

uint64_t sub_1006D982C()
{
  memcpy(__dst, v0, sizeof(__dst));
  return sub_10089A12C();
}

unint64_t sub_1006D9880()
{
  unint64_t result = qword_100E8C898;
  if (!qword_100E8C898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8C898);
  }
  return result;
}

unint64_t sub_1006D98CC()
{
  unint64_t result = qword_100E8C8A0;
  if (!qword_100E8C8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8C8A0);
  }
  return result;
}

unint64_t sub_1006D9918()
{
  unint64_t result = qword_100E8C8A8;
  if (!qword_100E8C8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8C8A8);
  }
  return result;
}

unint64_t sub_1006D9964()
{
  unint64_t result = qword_100E8C8B8;
  if (!qword_100E8C8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8C8B8);
  }
  return result;
}

unint64_t sub_1006D99B0()
{
  unint64_t result = qword_100E8C8C0;
  if (!qword_100E8C8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8C8C0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ReportWeatherConditionsViewModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xEE)
  {
    if (a2 + 18 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 18) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 19;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x13;
  int v5 = v6 - 19;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ReportWeatherConditionsViewModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 18 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 18) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xED)
  {
    unsigned int v6 = ((a2 - 238) >> 8) + 1;
    *unint64_t result = a2 + 18;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1006D9B50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 18;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReportWeatherConditionsViewModel.CodingKeys()
{
  return &type metadata for ReportWeatherConditionsViewModel.CodingKeys;
}

unint64_t sub_1006D9B8C()
{
  unint64_t result = qword_100E8C8C8;
  if (!qword_100E8C8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8C8C8);
  }
  return result;
}

unint64_t sub_1006D9BDC()
{
  unint64_t result = qword_100E8C8D0;
  if (!qword_100E8C8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8C8D0);
  }
  return result;
}

unint64_t sub_1006D9C2C()
{
  unint64_t result = qword_100E8C8D8;
  if (!qword_100E8C8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8C8D8);
  }
  return result;
}

uint64_t *sub_1006D9C78(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v20 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v8 = a2[7];
    uint64_t v9 = *(int *)(a3 + 32);
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = (char *)a1 + v9;
    a1[6] = a2[6];
    a1[7] = v8;
    uint64_t v12 = type metadata accessor for Date();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v11, v10, v12);
    uint64_t v14 = type metadata accessor for WeatherConditionBackgroundTimeData();
    uint64_t v15 = *(int *)(v14 + 20);
    uint64_t v16 = &v11[v15];
    uint64_t v17 = &v10[v15];
    uint64_t v18 = type metadata accessor for Elevation();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
    {
      uint64_t v19 = sub_10017DF08(&qword_100E63760);
      memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
    }
    uint64_t v21 = *(int *)(v14 + 24);
    char v22 = &v11[v21];
    uint64_t v23 = &v10[v21];
    uint64_t v24 = type metadata accessor for BackgroundMoonData();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24))
    {
      uint64_t v25 = sub_10017DF08(&qword_100E63768);
      memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v24);
    }
  }
  return v3;
}

uint64_t sub_1006D9EEC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v7 = v4 + *(int *)(v6 + 20);
  uint64_t v8 = type metadata accessor for Elevation();
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  uint64_t v9 = v4 + *(int *)(v6 + 24);
  uint64_t v10 = type metadata accessor for BackgroundMoonData();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v9, 1, v10);
  if (!result)
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    return v12(v9, v10);
  }
  return result;
}

void *sub_1006DA050(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[7];
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = (char *)a2 + v8;
  uint64_t v10 = (char *)a1 + v8;
  a1[6] = a2[6];
  a1[7] = v7;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v10, v9, v11);
  uint64_t v13 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v14 = *(int *)(v13 + 20);
  uint64_t v15 = &v10[v14];
  uint64_t v16 = &v9[v14];
  uint64_t v17 = type metadata accessor for Elevation();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
  {
    uint64_t v18 = sub_10017DF08(&qword_100E63760);
    memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
  }
  uint64_t v19 = *(int *)(v13 + 24);
  uint64_t v20 = &v10[v19];
  uint64_t v21 = &v9[v19];
  uint64_t v22 = type metadata accessor for BackgroundMoonData();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
  {
    uint64_t v23 = sub_10017DF08(&qword_100E63768);
    memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
  }
  return a1;
}

void *sub_1006DA274(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v14 = type metadata accessor for Elevation();
  int v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v14);
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v17 = *(void *)(v14 - 8);
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v14);
LABEL_6:
    uint64_t v18 = sub_10017DF08(&qword_100E63760);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v12, v13, v14);
LABEL_7:
  uint64_t v19 = *(int *)(v10 + 24);
  uint64_t v20 = &v7[v19];
  uint64_t v21 = &v8[v19];
  uint64_t v22 = type metadata accessor for BackgroundMoonData();
  int v23 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v22);
  int v24 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22);
  if (!v23)
  {
    uint64_t v25 = *(void *)(v22 - 8);
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 24))(v20, v21, v22);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v22);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    uint64_t v26 = sub_10017DF08(&qword_100E63768);
    memcpy(v20, v21, *(void *)(*(void *)(v26 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
  return a1;
}

_OWORD *sub_1006DA5D4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v14 = type metadata accessor for Elevation();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = sub_10017DF08(&qword_100E63760);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
  }
  uint64_t v16 = *(int *)(v10 + 24);
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  uint64_t v19 = type metadata accessor for BackgroundMoonData();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
  {
    uint64_t v20 = sub_10017DF08(&qword_100E63768);
    memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
  }
  return a1;
}

void *sub_1006DA7BC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v15 = *(int *)(v14 + 20);
  uint64_t v16 = &v11[v15];
  uint64_t v17 = &v12[v15];
  uint64_t v18 = type metadata accessor for Elevation();
  int v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v18);
  int v20 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v21 = *(void *)(v18 - 8);
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v18);
LABEL_6:
    uint64_t v22 = sub_10017DF08(&qword_100E63760);
    memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v16, v17, v18);
LABEL_7:
  uint64_t v23 = *(int *)(v14 + 24);
  int v24 = &v11[v23];
  uint64_t v25 = &v12[v23];
  uint64_t v26 = type metadata accessor for BackgroundMoonData();
  int v27 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v26);
  int v28 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26);
  if (!v27)
  {
    uint64_t v29 = *(void *)(v26 - 8);
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 40))(v24, v25, v26);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v29 + 8))(v24, v26);
    goto LABEL_12;
  }
  if (v28)
  {
LABEL_12:
    uint64_t v30 = sub_10017DF08(&qword_100E63768);
    memcpy(v24, v25, *(void *)(*(void *)(v30 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
  return a1;
}

uint64_t sub_1006DAADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006DAAF0);
}

uint64_t sub_1006DAAF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel();
    uint64_t v9 = a1 + *(int *)(a3 + 32);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_1006DAB78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006DAB8C);
}

uint64_t sub_1006DAB8C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel();
    uint64_t v8 = v5 + *(int *)(a4 + 32);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

BOOL sub_1006DAC0C(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = a1[3];
  uint64_t v6 = a2[3];
  if (!v5)
  {
    if (!v6) {
      goto LABEL_15;
    }
    return 0;
  }
  if (!v6) {
    return 0;
  }
  BOOL v7 = a1[2] == a2[2] && v5 == v6;
  if (!v7 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
LABEL_15:
  BOOL v8 = a1[4] == a2[4] && a1[5] == a2[5];
  if (!v8 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  BOOL v9 = a1[6] == a2[6] && a1[7] == a2[7];
  if (!v9 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  uint64_t v10 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);

  return sub_10065A3FC((uint64_t)a1 + v10, (uint64_t)a2 + v10);
}

uint64_t sub_1006DAD00(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x8000000100CAEAC0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000100CAEAE0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v5 = a1 == 0x706D655468676968 && a2 == 0xEF65727574617265;
    if (v5 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v6 = a1 == 0x65706D6554776F6CLL && a2 == 0xEE00657275746172;
      if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000100CAE790)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v7) {
          return 4;
        }
        else {
          return 5;
        }
      }
    }
  }
}

unint64_t sub_1006DAF4C(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000016;
      break;
    case 2:
      unint64_t result = 0x706D655468676968;
      break;
    case 3:
      unint64_t result = 0x65706D6554776F6CLL;
      break;
    case 4:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1006DB010(void *a1)
{
  uint64_t v4 = sub_10017DF08(&qword_100E8C998);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10012B938();
  sub_1001B1E64(a1, a1[3]);
  sub_1006DB60C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10017FFDC();
  if (!v1)
  {
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    sub_10017FFDC();
    sub_10017FFDC();
    type metadata accessor for ListPreprocessedDataModel();
    type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel();
    sub_1006DB77C(&qword_100E8C9A0);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t sub_1006DB1D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v4 = type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel();
  __chkstk_darwin(v4);
  sub_10012B938();
  sub_10017DF08(&qword_100E8C980);
  sub_100179C0C();
  uint64_t v22 = v6;
  uint64_t v23 = v5;
  __chkstk_darwin(v5);
  BOOL v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ListPreprocessedDataModel();
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1001B1E64(a1, a1[3]);
  sub_1006DB60C();
  int v24 = v8;
  uint64_t v12 = v25;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v12) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  uint64_t v25 = v4;
  char v30 = 0;
  *uint64_t v11 = KeyedDecodingContainer.decode(_:forKey:)();
  v11[1] = v13;
  char v29 = 1;
  void v11[2] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  v11[3] = v14;
  char v28 = 2;
  uint64_t v20 = 0;
  v11[4] = KeyedDecodingContainer.decode(_:forKey:)();
  v11[5] = v15;
  char v27 = 3;
  void v11[6] = KeyedDecodingContainer.decode(_:forKey:)();
  v11[7] = v16;
  char v26 = 4;
  sub_1006DB77C(&qword_100E8C990);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v17 = sub_100188020();
  v18(v17);
  sub_1006DB658(v2, (uint64_t)v11 + *(int *)(v9 + 32));
  sub_1006DB6BC((uint64_t)v11, v21);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return sub_1006DB720((uint64_t)v11);
}

unint64_t sub_1006DB530()
{
  return sub_1006DAF4C(*v0);
}

uint64_t sub_1006DB538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1006DAD00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1006DB560(uint64_t a1)
{
  unint64_t v2 = sub_1006DB60C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006DB59C(uint64_t a1)
{
  unint64_t v2 = sub_1006DB60C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006DB5D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1006DB1D0(a1, a2);
}

uint64_t sub_1006DB5F0(void *a1)
{
  return sub_1006DB010(a1);
}

unint64_t sub_1006DB60C()
{
  unint64_t result = qword_100E8C988;
  if (!qword_100E8C988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8C988);
  }
  return result;
}

uint64_t sub_1006DB658(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006DB6BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ListPreprocessedDataModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006DB720(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ListPreprocessedDataModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1006DB77C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ListPreprocessedDataModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1006DB88CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListPreprocessedDataModel.CodingKeys()
{
  return &type metadata for ListPreprocessedDataModel.CodingKeys;
}

unint64_t sub_1006DB8C8()
{
  unint64_t result = qword_100E8C9A8;
  if (!qword_100E8C9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8C9A8);
  }
  return result;
}

unint64_t sub_1006DB918()
{
  unint64_t result = qword_100E8C9B0;
  if (!qword_100E8C9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8C9B0);
  }
  return result;
}

unint64_t sub_1006DB968()
{
  unint64_t result = qword_100E8C9B8;
  if (!qword_100E8C9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8C9B8);
  }
  return result;
}

uint64_t sub_1006DB9B4()
{
  swift_release();
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 64);
  return v0;
}

uint64_t sub_1006DB9F8()
{
  sub_1006DB9B4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ToolbarAddButtonInteractor()
{
  return self;
}

uint64_t sub_1006DBA50(uint64_t a1)
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100162E88();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v2 + 16);
  type metadata accessor for LocationModel();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v1, a1);
  type metadata accessor for LocationViewerViewAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for ViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_10017C9D8();
  sub_1001AAF58(v1, (uint64_t)v8, v5);
  sub_1001781AC((uint64_t)v8, (uint64_t *)&unk_100EA01F0);
  sub_1001ABE70(v1);
  return swift_release();
}

uint64_t sub_1006DBB6C()
{
  return sub_1006DBB7C();
}

uint64_t sub_1006DBB74()
{
  return sub_1006DBB7C();
}

uint64_t sub_1006DBB7C()
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_10012B938();
  int v3 = *(uint64_t (**)(uint64_t))(v0 + 16);
  type metadata accessor for LocationViewerViewAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for ViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_10017C9D8();
  sub_1001AAF58(v1, (uint64_t)v5, v3);
  sub_1001781AC((uint64_t)v5, (uint64_t *)&unk_100EA01F0);
  sub_1001ABE70(v1);
  return swift_release();
}

uint64_t sub_1006DBC64()
{
  return sub_1006DC07C((void (*)(void))type metadata accessor for ViewAction);
}

uint64_t sub_1006DBC84()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 16);
  sub_10017DF08(&qword_100E63480);
  type metadata accessor for MainAction();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100C25ED0;
  type metadata accessor for SearchViewAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for ViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = 0;
  memset(v7, 0, sizeof(v7));
  sub_1001262FC((uint64_t)v7, (uint64_t)v4, (uint64_t *)&unk_100EA01F0);
  uint64_t v5 = v2;
  char v6 = 0;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1001AB2DC((uint64_t)v4, v1);
  sub_1001781AC((uint64_t)v4, &qword_100E63488);
  swift_bridgeObjectRelease();
  sub_1001781AC((uint64_t)v7, (uint64_t *)&unk_100EA01F0);
  return swift_release();
}

void sub_1006DBE34(unsigned __int8 a1)
{
  int v4 = a1;
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100162E88();
  if (v4)
  {
    if (sub_100A78058(a1))
    {
      char v6 = *(uint64_t (**)(uint64_t))(v2 + 16);
      type metadata accessor for LocationViewerViewAction();
      swift_storeEnumTagMultiPayload();
      type metadata accessor for ViewAction();
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_10017C9D8();
      sub_1001AAF58(v1, (uint64_t)v7, v6);
      sub_1001781AC((uint64_t)v7, (uint64_t *)&unk_100EA01F0);
      sub_1001ABE70(v1);
      swift_release();
    }
  }
}

uint64_t sub_1006DBF30()
{
  return sub_1006DBB7C();
}

uint64_t sub_1006DBF38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_10012B938();
  uint64_t v9 = *(uint64_t (**)(uint64_t))(v3 + 16);
  uint64_t v10 = (void *)(v4 + *(int *)(sub_10017DF08(&qword_100E6F648) + 48));
  sub_1001262FC(a1, v4, &qword_100E63A50);
  void *v10 = a2;
  v10[1] = a3;
  type metadata accessor for DebugAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = 0;
  memset(v12, 0, sizeof(v12));
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1001AAF58(v4, (uint64_t)v12, v9);
  sub_1001781AC((uint64_t)v12, (uint64_t *)&unk_100EA01F0);
  sub_1001ABE70(v4);
  return swift_release();
}

uint64_t sub_1006DC05C()
{
  return sub_1006DC07C((void (*)(void))type metadata accessor for DebugAction);
}

uint64_t sub_1006DC07C(void (*a1)(void))
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v6 = *(uint64_t (**)(uint64_t))(v1 + 16);
  a1(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = 0;
  memset(v8, 0, sizeof(v8));
  swift_retain();
  sub_1001AAF58((uint64_t)v5, (uint64_t)v8, v6);
  sub_1001781AC((uint64_t)v8, (uint64_t *)&unk_100EA01F0);
  sub_1001ABE70((uint64_t)v5);
  return swift_release();
}

uint64_t sub_1006DC180()
{
  return sub_1006DBB7C();
}

uint64_t sub_1006DC188()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1006DC1A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v23 = a3;
  uint64_t v24 = a4;
  uint64_t v7 = type metadata accessor for ConditionDetailLegend(0);
  uint64_t v22 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (uint64_t *)((char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v10)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v20 = v4;
  char v26 = _swiftEmptyArrayStorage;
  sub_1007F39F4();
  uint64_t v11 = v26;
  id v21 = self;
  if (a2 >= a1 && (v10 & 0x8000000000000000) == 0)
  {
    uint64_t v12 = v24;
    while (a2 != a1)
    {
      uint64_t v25 = a1;
      uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v15 = v14;
      uint64_t v16 = (uint64_t *)((char *)v9 + *(int *)(v7 + 24));
      swift_bridgeObjectRetain();
      id v17 = [v21 quaternaryLabelColor];
      uint64_t *v16 = Color.init(uiColor:)();
      type metadata accessor for ConditionDetailLegendForeground(0);
      swift_storeEnumTagMultiPayload();
      uint64_t *v9 = v13;
      v9[1] = v15;
      _OWORD v9[2] = v23;
      v9[3] = v12;
      uint64_t v18 = (uint64_t *)((char *)v9 + *(int *)(v7 + 28));
      void *v18 = 0;
      v18[1] = 0xE000000000000000;
      char v26 = v11;
      unint64_t v19 = v11[2];
      if (v19 >= v11[3] >> 1)
      {
        sub_1007F39F4();
        uint64_t v11 = v26;
      }
      void v11[2] = v19 + 1;
      sub_1006E0EAC((uint64_t)v9, (uint64_t)v11+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v19, (void (*)(void))type metadata accessor for ConditionDetailLegend);
      if (a2 == ++a1) {
        goto LABEL_10;
      }
    }
    __break(1u);
    goto LABEL_13;
  }
LABEL_14:
  __break(1u);
}

uint64_t sub_1006DC408()
{
  sub_1006DD2BC(v0, (uint64_t)&v8);
  type metadata accessor for MainActor();
  uint64_t v1 = static MainActor.shared.getter();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = &protocol witness table for MainActor;
  long long v3 = v9;
  *(_OWORD *)(v2 + 32) = v8;
  *(_OWORD *)(v2 + 48) = v3;
  *(_OWORD *)(v2 + 64) = v10;
  *(void *)(v2 + 80) = v11;
  sub_1006DD2BC(v0, (uint64_t)&v8);
  uint64_t v4 = static MainActor.shared.getter();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = &protocol witness table for MainActor;
  long long v6 = v9;
  *(_OWORD *)(v5 + 32) = v8;
  *(_OWORD *)(v5 + 48) = v6;
  *(_OWORD *)(v5 + 64) = v10;
  *(void *)(v5 + 80) = v11;
  Binding.init(get:set:)();
  return v8;
}

uint64_t sub_1006DC530@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for AveragesDetailViewModel();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_10024FD80();
  swift_release();
  char v5 = sub_1006282EC() & 1;
  uint64_t result = sub_1006E07F4((uint64_t)v4, (void (*)(void))type metadata accessor for AveragesDetailViewModel);
  *a1 = v5;
  return result;
}

uint64_t sub_1006DC5EC(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for Location();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v9 = (char *)&v15[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AveragesDetailViewModel();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v15[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(a1) = *a1;
  sub_10020D948(a4 + 16, (uint64_t)v15);
  sub_1001B1E64(v15, v15[3]);
  swift_retain();
  sub_10024FD80();
  swift_release();
  sub_10062845C((uint64_t)v9);
  sub_1006E07F4((uint64_t)v12, (void (*)(void))type metadata accessor for AveragesDetailViewModel);
  sub_100766018((int)a1, (uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v15);
}

void *sub_1006DC780@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AveragesDetailViewModel();
  __chkstk_darwin(v3 - 8);
  char v5 = &__src[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v8 = &__src[-v7];
  uint64_t v9 = type metadata accessor for DetailViewVisibilityTrackerModel();
  __chkstk_darwin(v9 - 8);
  sub_1001626E0();
  uint64_t v12 = (char *)(v11 - v10);
  swift_retain();
  sub_10024FD80();
  swift_release();
  sub_1006285C0((uint64_t)v8, v12);
  uint64_t v13 = v1[5];
  uint64_t v14 = v1[6];
  uint64_t v15 = sub_1001B1E64(v1 + 2, v13);
  void v27[3] = v13;
  void v27[4] = *(void *)(v14 + 8);
  uint64_t v16 = sub_100170694(v27);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v16, v15, v13);
  swift_retain();
  sub_10024FD80();
  swift_release();
  uint64_t v17 = sub_10062822C();
  uint64_t v19 = v18;
  sub_1006E07F4((uint64_t)v8, (void (*)(void))type metadata accessor for AveragesDetailViewModel);
  swift_retain();
  sub_10024FD80();
  swift_release();
  sub_1006E07F4((uint64_t)v5, (void (*)(void))type metadata accessor for AveragesDetailViewModel);
  sub_1006DD2BC((uint64_t)v1, (uint64_t)v26);
  *a1 = swift_getKeyPath();
  sub_10017DF08(&qword_100E65310);
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = (int *)sub_10017DF08(&qword_100E8CB18);
  sub_1006E07A0((uint64_t)v12, (uint64_t)a1 + v20[9], (void (*)(void))type metadata accessor for DetailViewVisibilityTrackerModel);
  sub_10020D948((uint64_t)v27, (uint64_t)a1 + v20[10]);
  id v21 = (uint64_t *)((char *)a1 + v20[11]);
  *id v21 = v17;
  v21[1] = v19;
  uint64_t v22 = (uint64_t *)((char *)a1 + v20[12]);
  *uint64_t v22 = 0xD000000000000019;
  v22[1] = 0x8000000100CA3F50;
  *((unsigned char *)a1 + v20[13]) = 0;
  uint64_t v23 = (uint64_t *)((char *)a1 + v20[14]);
  *uint64_t v23 = 0;
  v23[1] = 0;
  *((unsigned char *)a1 + v20[15]) = 1;
  sub_1006DCA74((uint64_t)v26);
  sub_1006DFF64((uint64_t)v26);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v27);
  sub_1006E07F4((uint64_t)v12, (void (*)(void))type metadata accessor for DetailViewVisibilityTrackerModel);
  return memcpy((char *)a1 + v20[16], __src, 0x4AuLL);
}

uint64_t sub_1006DCA74(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AveragesDetailViewModel();
  __chkstk_darwin(v2);
  uint64_t v4 = (uint64_t *)((char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_retain();
  sub_10024FD80();
  swift_release();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v9 = (char *)v4 + *(int *)(sub_10017DF08(&qword_100E85430) + 48);
      uint64_t v27 = sub_1006DC408();
      uint64_t v28 = v21;
      char v29 = v22 & 1;
      v30[0] = sub_1006DD04C;
      v30[1] = 0;
      swift_retain();
      swift_retain();
      sub_1006E8E90(&v27, (uint64_t)v24);
      swift_release();
      swift_release();
      v31[0] = v24[0];
      v31[1] = v24[1];
      *(_OWORD *)((char *)&v31[1] + 9) = *(_OWORD *)((char *)&v24[1] + 9);
      BYTE9(v31[4]) = 0;
      sub_10017DF08(&qword_100E8CB40);
      sub_10017DF08(&qword_100E8CB38);
      sub_1006E0018();
      sub_1006E00B8();
      _ConditionalContent<>.init(storage:)();
      goto LABEL_6;
    case 2u:
      uint64_t v8 = *v4;
      uint64_t v9 = (char *)v4 + *(int *)(sub_10017DF08(&qword_100E85438) + 48);
      uint64_t v10 = sub_1006DC408();
      uint64_t v12 = v11;
      char v14 = v13 & 1;
      sub_10020D948(a1 + 16, (uint64_t)v30);
      uint64_t v27 = v10;
      uint64_t v28 = v12;
      char v29 = v14;
      v30[5] = v8;
      sub_1006DFF94((uint64_t)&v27, (uint64_t)v31);
      BYTE8(v31[4]) = 1;
      swift_retain();
      sub_10017DF08(&qword_100E8CB20);
      sub_1001246C8(&qword_100E8CB28, &qword_100E8CB20);
      sub_1006DFFCC();
      _ConditionalContent<>.init(storage:)();
      sub_10006DF38((uint64_t)v24, (uint64_t)v31, &qword_100E8CB38);
      BYTE9(v31[4]) = 1;
      sub_10017DF08(&qword_100E8CB40);
      sub_10017DF08(&qword_100E8CB38);
      sub_1006E0018();
      sub_1006E00B8();
      _ConditionalContent<>.init(storage:)();
      swift_release();
      sub_100178110((uint64_t)v24, &qword_100E8CB38);
      sub_1006E0158((uint64_t)&v27);
      goto LABEL_7;
    case 3u:
      memcpy(v31, v4, 0x60uLL);
      uint64_t v9 = (char *)v4 + *(int *)(sub_10017DF08(&qword_100E85440) + 64);
      uint64_t v15 = sub_1006DC408();
      uint64_t v17 = v16;
      char v19 = v18 & 1;
      uint64_t v20 = swift_allocObject();
      memcpy((void *)(v20 + 16), v31, 0x60uLL);
      *(void *)&v24[0] = v15;
      *((void *)&v24[0] + 1) = v17;
      LOBYTE(v24[1]) = v19;
      *((void *)&v24[1] + 1) = sub_1006E018C;
      *(void *)&v24[2] = v20;
      char v25 = 0;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10017DF08(&qword_100E8CB20);
      sub_1001246C8(&qword_100E8CB28, &qword_100E8CB20);
      sub_1006DFFCC();
      _ConditionalContent<>.init(storage:)();
      sub_10006DF38((uint64_t)&v27, (uint64_t)v24, &qword_100E8CB38);
      char v26 = 1;
      sub_10017DF08(&qword_100E8CB40);
      sub_10017DF08(&qword_100E8CB38);
      sub_1006E0018();
      sub_1006E00B8();
      _ConditionalContent<>.init(storage:)();
      sub_100178110((uint64_t)&v27, &qword_100E8CB38);
      swift_release();
LABEL_6:
      swift_release();
      swift_release();
LABEL_7:
      uint64_t v23 = type metadata accessor for Location();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v23 - 8) + 8))(v9, v23);
      break;
    default:
      char v5 = (char *)v4 + *(int *)(sub_10017DF08(&qword_100E85430) + 48);
      memset(v24, 0, 41);
      sub_10017DF08(&qword_100E8CB58);
      sub_1001246C8(&qword_100E8CB50, &qword_100E8CB58);
      _ConditionalContent<>.init(storage:)();
      BYTE9(v31[4]) = 0;
      sub_10017DF08(&qword_100E8CB40);
      sub_10017DF08(&qword_100E8CB38);
      sub_1006E0018();
      sub_1006E00B8();
      _ConditionalContent<>.init(storage:)();
      uint64_t v6 = type metadata accessor for Location();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
      break;
  }
  return result;
}

void sub_1006DD04C(void *a1@<X8>)
{
  *a1 = 0x7049206D65726F4CLL;
  a1[1] = 0xEB000000006D7573;
}

uint64_t sub_1006DD070@<X0>(const void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = static HorizontalAlignment.center.getter();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  return sub_1006DD0B0(a1, a2 + 24);
}

uint64_t sub_1006DD0B0@<X0>(const void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = swift_allocObject();
  memcpy((void *)(v4 + 16), a1, 0x60uLL);
  __src[10] = sub_1008749EC;
  __src[11] = 0;
  LOBYTE(__src[12]) = 0;
  __src[0] = sub_10017DF08(&qword_100E66BC8);
  sub_1002B3F78((uint64_t)a1);
  if (qword_100E62290 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)__dst, &qword_100E6F2A0);
  if (*(void *)&__dst[24])
  {
    sub_1001262E4((long long *)__dst, (uint64_t)&__src[3]);
    __src[1] = sub_1002B3CBC;
    __src[2] = v4;
    uint64_t v6 = Dictionary.init(dictionaryLiteral:)();
    __src[8] = _swiftEmptyArrayStorage;
    __src[9] = v6;
    memcpy(__dst, __src, sizeof(__dst));
    sub_10006DF38((uint64_t)__dst, (uint64_t)__src, &qword_100E66B30);
    *(void *)a2 = 0;
    *(unsigned char *)(a2 + 8) = 1;
    sub_10006DF38((uint64_t)__src, a2 + 16, &qword_100E66B30);
    *(void *)(a2 + 120) = 0;
    *(unsigned char *)(a2 + 128) = 1;
    *(void *)(a2 + 136) = 0;
    *(unsigned char *)(a2 + 144) = 1;
    sub_100178110((uint64_t)__dst, &qword_100E66B30);
    return sub_100178110((uint64_t)__src, &qword_100E66B30);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1006DD264()
{
  sub_10017DF08(&qword_100E8CBF8);
  Binding.projectedValue.getter();
  return v1;
}

uint64_t sub_1006DD2BC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1006DD2F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10018C6DC(&qword_100E77370);
  uint64_t v5 = *(void *)(a1 + 16);
  swift_getTupleTypeMetadata3();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  uint64_t v6 = type metadata accessor for VStack();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v12 = &v16[-v11];
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v17 = v5;
  uint64_t v18 = v13;
  uint64_t v19 = v2;
  j___s7SwiftUI19HorizontalAlignmentV6centerACvgZ();
  VStack.init(alignment:spacing:content:)();
  swift_getWitnessTable();
  sub_100121584((uint64_t)v9, v6, (uint64_t)v12);
  char v14 = *(void (**)(unsigned char *, uint64_t))(v7 + 8);
  v14(v9, v6);
  sub_100121584((uint64_t)v12, v6, a2);
  return ((uint64_t (*)(unsigned char *, uint64_t))v14)(v12, v6);
}

uint64_t sub_1006DD4FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v27 = a4;
  uint64_t v7 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v21 - v11;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v25 = v47;
  char v13 = v48;
  uint64_t v24 = v49;
  int v23 = v50;
  uint64_t v22 = v51;
  uint64_t v21 = v52;
  uint64_t v26 = a3;
  type metadata accessor for AveragesContentView();
  uint64_t v14 = sub_1006DD264();
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  (*(void (**)(void))(a1 + 24))();
  sub_100121584((uint64_t)v9, a2, (uint64_t)v12);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v9, a2);
  uint64_t v36 = 0;
  char v37 = 1;
  uint64_t v38 = v25;
  char v39 = v13;
  uint64_t v40 = v24;
  char v41 = v23;
  uint64_t v42 = v22;
  uint64_t v43 = v21;
  v34[0] = v14;
  v34[1] = v16;
  char v35 = v18;
  uint64_t v44 = &v36;
  uint64_t v45 = v34;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, a2);
  uint64_t v46 = v9;
  swift_retain();
  swift_retain();
  uint64_t v31 = sub_10017DF08(&qword_100E77370);
  char v32 = &type metadata for AveragesDetailPickerView;
  uint64_t v33 = a2;
  unint64_t v28 = sub_10022E25C();
  unint64_t v29 = sub_1006E0684();
  uint64_t v30 = v26;
  sub_1006E9080();
  v19(v12, a2);
  swift_release();
  swift_release();
  v19(v9, a2);
  swift_release();
  return swift_release();
}

uint64_t sub_1006DD7EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1006DD2F4(a1, a2);
}

uint64_t sub_1006DD828@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for SegmentedPickerStyle();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_1001626E0();
  sub_10017DF08(&qword_100E8CCC8);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_1001626E0();
  uint64_t v14 = sub_10017DF08(&qword_100E8CCD0);
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  LocalizedStringKey.init(stringLiteral:)();
  sub_10017DF08(&qword_100E8CBF8);
  Binding.projectedValue.getter();
  sub_10017DF08(&qword_100E8CCD8);
  sub_1006E0CAC();
  sub_1006E0CF8();
  Picker<>.init(_:selection:content:)();
  SegmentedPickerStyle.init()();
  sub_1001246C8(&qword_100E8CCF0, &qword_100E8CCC8);
  View.pickerStyle<A>(_:)();
  sub_100162F0C();
  v9();
  sub_100162F0C();
  v10();
  char v11 = static Edge.Set.horizontal.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a1, v8, v14);
  uint64_t v12 = a1 + *(int *)(sub_10017DF08(&qword_100E8CCF8) + 36);
  *(unsigned char *)uint64_t v12 = v11;
  *(_OWORD *)(v12 + 8) = 0u;
  *(_OWORD *)(v12 + 24) = 0u;
  *(unsigned char *)(v12 + 40) = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v8, v14);
}

uint64_t sub_1006DDB1C()
{
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_1006DDBF0@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100BB4ABC(*a1);
  sub_10014A85C();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5 & 1;
  *(void *)(a2 + 24) = v6;
  return result;
}

uint64_t sub_1006DDC4C@<X0>(uint64_t a1@<X8>)
{
  return sub_1006DD828(a1);
}

uint64_t sub_1006DDC58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v18 = a1;
  uint64_t v17 = type metadata accessor for ScrollIndicatorVisibility();
  uint64_t v2 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E8CC00);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E8CC08);
  uint64_t v9 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  char v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Axis.Set.vertical.getter();
  uint64_t v19 = v1;
  sub_10017DF08(&qword_100E8CC10);
  sub_1001246C8(&qword_100E8CC18, &qword_100E8CC10);
  ScrollView.init(_:showsIndicators:content:)();
  static ScrollIndicatorVisibility.never.getter();
  unsigned __int8 v12 = static Axis.Set.vertical.getter();
  unsigned __int8 v13 = static Axis.Set.horizontal.getter();
  Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v12) {
    Axis.Set.init(rawValue:)();
  }
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v13) {
    Axis.Set.init(rawValue:)();
  }
  sub_1001246C8(&qword_100E8CC20, &qword_100E8CC00);
  View.scrollIndicators(_:axes:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v17);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v18, v11, v16);
}

uint64_t sub_1006DDF84(uint64_t a1)
{
  sub_1006DFF94(a1, (uint64_t)__src);
  uint64_t v1 = swift_allocObject();
  memcpy((void *)(v1 + 16), __src, 0x48uLL);
  sub_10017DF08(&qword_100E8CC28);
  sub_10018C6DC(&qword_100E8CC30);
  sub_1001246C8(&qword_100E8CC38, &qword_100E8CC30);
  swift_getOpaqueTypeConformance2();
  return ScrollEventStateReader.init(content:)();
}

uint64_t sub_1006DE094(uint64_t a1, uint64_t a2)
{
  sub_10017DF08(&qword_100E8CBF8);
  Binding.projectedValue.getter();
  sub_1006DFF94(a2, (uint64_t)__src);
  uint64_t v3 = swift_allocObject();
  memcpy((void *)(v3 + 16), __src, 0x48uLL);
  ScrollEventState.isScrolling.getter();
  sub_1006DFF94(a2, (uint64_t)__src);
  uint64_t v4 = swift_allocObject();
  memcpy((void *)(v4 + 16), __src, 0x48uLL);
  sub_10017DF08(&qword_100E8CC30);
  sub_1001246C8(&qword_100E8CC38, &qword_100E8CC30);
  View.onChange<A>(of:initial:_:)();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1006DE23C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10020D948(a1 + 24, a2);
  *(void *)(a2 + 40) = *(void *)(a1 + 64);

  return swift_retain();
}

uint64_t sub_1006DE288(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  if (*a2 == 1)
  {
    sub_1001B1E64((void *)(a3 + 24), *(void *)(a3 + 48));
    return sub_100766480();
  }
  return result;
}

uint64_t sub_1006DE2C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v43 = a1;
  uint64_t v3 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (int *)sub_10017DF08(&qword_100E8CD10);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_10017DF08(&qword_100E8CD18);
  __chkstk_darwin(v41);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v42 = (uint64_t)&v41 - v12;
  uint64_t v13 = v2[5];
  sub_10020D948((uint64_t)v2, (uint64_t)&v47);
  if (v13 < 0)
  {
    uint64_t v46 = v13 & 0x7FFFFFFFFFFFFFFFLL;
    sub_1006E0D64((uint64_t)&v46, (uint64_t)v44);
    char v45 = 1;
    sub_1006E0DC0();
    sub_1006E0E0C();
    swift_retain();
    _ConditionalContent<>.init(storage:)();
    sub_1006E0E58((uint64_t)&v46);
  }
  else
  {
    uint64_t v46 = v13;
    sub_1006E0F00((uint64_t)&v46, (uint64_t)v44);
    char v45 = 0;
    sub_1006E0DC0();
    sub_1006E0E0C();
    swift_retain();
    _ConditionalContent<>.init(storage:)();
    sub_1006E0F5C((uint64_t)&v46);
  }
  id v14 = [self mainBundle];
  v49._uint64_t countAndFlagsBits = 0xD000000000000051;
  v49._object = (void *)0x8000000100CAEC20;
  v15._object = (void *)0x8000000100CAEC00;
  v15._uint64_t countAndFlagsBits = 0xD000000000000017;
  v16._uint64_t countAndFlagsBits = 0x736E6F6974704FLL;
  v16._object = (void *)0xE700000000000000;
  Swift::String v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v49);

  uint64_t v18 = (uint64_t)&v5[v3[6]];
  uint64_t v19 = type metadata accessor for WeatherDescription();
  _s7Weather24LocationCompositionStateOwst_0(v18, 1, 1, v19);
  type metadata accessor for ConditionDetailDynamicContentIdentifier();
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  swift_storeEnumTagMultiPayload();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)&v5[v3[8]], 1, 1, v20);
  *(_OWORD *)uint64_t v5 = xmmword_100C517B0;
  v5[16] = 1;
  *(Swift::String *)(v5 + 24) = v17;
  v5[v3[9]] = 0;
  v5[v3[10]] = 0;
  uint64_t v21 = v2[3];
  uint64_t v22 = v2[4];
  int v23 = sub_1001B1E64(v2, v21);
  uint64_t v24 = (uint64_t *)&v8[v6[10]];
  v24[3] = v21;
  _OWORD v24[4] = *(void *)(v22 + 8);
  uint64_t v25 = sub_100170694(v24);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v25, v23, v21);
  sub_1006E0EAC((uint64_t)v5, (uint64_t)v8, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  v8[v6[9]] = 0;
  uint64_t v26 = (uint64_t (**)@<X0>(uint64_t@<X8>))&v8[v6[11]];
  *uint64_t v26 = sub_1006DE830;
  v26[1] = 0;
  uint64_t v27 = v6[12];
  swift_beginAccess();
  *(double *)&v8[v27] = sub_100592380();
  LOBYTE(v27) = static Edge.Set.bottom.getter();
  sub_10059263C();
  EdgeInsets.init(_all:)();
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  sub_10006DF38((uint64_t)v8, (uint64_t)v10, &qword_100E8CD10);
  uint64_t v36 = &v10[*(int *)(v41 + 36)];
  *uint64_t v36 = v27;
  *((void *)v36 + 1) = v29;
  *((void *)v36 + 2) = v31;
  *((void *)v36 + 3) = v33;
  *((void *)v36 + 4) = v35;
  v36[40] = 0;
  sub_100178110((uint64_t)v8, &qword_100E8CD10);
  uint64_t v37 = v42;
  sub_10024D364((uint64_t)v10, v42, &qword_100E8CD18);
  sub_10006DF38((uint64_t)v48, (uint64_t)v44, &qword_100E8CD30);
  sub_10006DF38(v37, (uint64_t)v10, &qword_100E8CD18);
  uint64_t v38 = v43;
  sub_10006DF38((uint64_t)v44, v43, &qword_100E8CD30);
  uint64_t v39 = sub_10017DF08(&qword_100E8CD38);
  sub_10006DF38((uint64_t)v10, v38 + *(int *)(v39 + 48), &qword_100E8CD18);
  sub_100178110(v37, &qword_100E8CD18);
  sub_100178110((uint64_t)v48, &qword_100E8CD30);
  sub_100178110((uint64_t)v10, &qword_100E8CD18);
  return sub_100178110((uint64_t)v44, &qword_100E8CD30);
}

uint64_t sub_1006DE830@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10017DF08(&qword_100E72A08);
  *(void *)(a1 + 80) = sub_100874A58;
  *(void *)(a1 + 88) = 0;
  *(unsigned char *)(a1 + 96) = 0;
  *(void *)a1 = v2;
  if (qword_100E62290 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)&v4, &qword_100E6F2A0);
  if (v5)
  {
    sub_1001262E4(&v4, a1 + 24);
    *(void *)(a1 + 8) = sub_1006DE938;
    *(void *)(a1 + 16) = 0;
    uint64_t result = Dictionary.init(dictionaryLiteral:)();
    *(void *)(a1 + 64) = _swiftEmptyArrayStorage;
    *(void *)(a1 + 72) = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1006DE938@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100A680BC(a2);
}

uint64_t sub_1006DE970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v23 = a3;
  uint64_t v5 = type metadata accessor for ScrollIndicatorVisibility();
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v22 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E8CC40);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10017DF08(&qword_100E8CC48);
  uint64_t v12 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  id v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Axis.Set.vertical.getter();
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  sub_10017DF08(&qword_100E8CC50);
  uint64_t v15 = sub_10018C6DC(&qword_100E8CC58);
  uint64_t v16 = sub_1001246C8(&qword_100E8CC60, &qword_100E8CC58);
  uint64_t v26 = v15;
  uint64_t v27 = v16;
  swift_getOpaqueTypeConformance2();
  ScrollView.init(_:showsIndicators:content:)();
  static ScrollIndicatorVisibility.never.getter();
  unsigned __int8 v17 = static Axis.Set.vertical.getter();
  unsigned __int8 v18 = static Axis.Set.horizontal.getter();
  Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v17) {
    Axis.Set.init(rawValue:)();
  }
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v18) {
    Axis.Set.init(rawValue:)();
  }
  sub_1001246C8(&qword_100E8CC68, &qword_100E8CC40);
  View.scrollIndicators(_:axes:)();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v22);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(v23, v14, v20);
}

uint64_t sub_1006DECD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RedactionReasons();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E8CC58);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v10 = static HorizontalAlignment.leading.getter();
  *((void *)v10 + 1) = 0;
  unsigned char v10[16] = 0;
  uint64_t v11 = sub_10017DF08(&qword_100E8CC70);
  sub_1006DEE7C(a1, a2, &v10[*(int *)(v11 + 44)]);
  static RedactionReasons.placeholder.getter();
  sub_1001246C8(&qword_100E8CC60, &qword_100E8CC58);
  View.redacted(reason:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_100178110((uint64_t)v10, &qword_100E8CC58);
}

uint64_t sub_1006DEE7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v145 = a1;
  uint64_t v134 = a3;
  uint64_t v129 = type metadata accessor for ConditionDetailLegendView(0);
  __chkstk_darwin(v129);
  uint64_t v131 = (char *)&v112 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_10017DF08(&qword_100E7D200);
  __chkstk_darwin(v130);
  uint64_t v133 = (uint64_t)&v112 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v132 = (uint64_t)&v112 - v7;
  uint64_t v127 = type metadata accessor for CircularProgressViewStyle();
  uint64_t v126 = *(void *)(v127 - 8);
  __chkstk_darwin(v127);
  long long v125 = (char *)&v112 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_10017DF08(&qword_100E8CC78);
  uint64_t v123 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  uint64_t v122 = (char *)&v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v114);
  uint64_t v115 = (double *)((char *)&v112 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_10017DF08(&qword_100E83CB0);
  __chkstk_darwin(v11 - 8);
  uint64_t v118 = (uint64_t)&v112 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_10017DF08(&qword_100E8CC80);
  __chkstk_darwin(v117);
  uint64_t v119 = (uint64_t)&v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_10017DF08(&qword_100E8CC88);
  __chkstk_darwin(v116);
  uint64_t v121 = (char *)&v112 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_10017DF08(&qword_100E8CC90);
  __chkstk_darwin(v120);
  uint64_t v128 = (uint64_t)&v112 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v146 = (uint64_t)&v112 - v17;
  uint64_t v113 = sub_10017DF08(&qword_100E651D0);
  __chkstk_darwin(v113);
  uint64_t v19 = (char *)&v112 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = type metadata accessor for TimeZone();
  uint64_t v20 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  uint64_t v22 = (char *)&v112 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = type metadata accessor for Date();
  uint64_t v23 = *(void *)(v137 - 8);
  __chkstk_darwin(v137);
  uint64_t v25 = (char *)&v112 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = type metadata accessor for DetailHeroChartLollipopModel(0);
  __chkstk_darwin(v140);
  uint64_t v27 = (uint64_t *)((char *)&v112 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v139 = type metadata accessor for DetailHeroChartHeaderView();
  __chkstk_darwin(v139);
  uint64_t v29 = (uint64_t *)((char *)&v112 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v144 = sub_10017DF08(&qword_100E8CC98);
  uint64_t v143 = *(void *)(v144 - 8);
  __chkstk_darwin(v144);
  uint64_t v142 = (char *)&v112 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v141 = (char *)&v112 - v32;
  id v33 = [self mainBundle];
  v153._uint64_t countAndFlagsBits = 0xD000000000000060;
  v153._object = (void *)0x8000000100CAEB90;
  v34._object = (void *)0x8000000100CAEB60;
  v34._uint64_t countAndFlagsBits = 0xD000000000000025;
  v35._uint64_t countAndFlagsBits = 0x76412065766F6241;
  v35._object = (void *)0xED00006567617265;
  Swift::String v36 = NSLocalizedString(_:tableName:bundle:value:comment:)(v34, (Swift::String_optional)0, (NSBundle)v33, v35, v153);
  uint64_t countAndFlagsBits = v36._countAndFlagsBits;
  object = v36._object;

  uint64_t v37 = a2;
  swift_bridgeObjectRetain_n();
  Date.init()();
  static TimeZone.current.getter();
  uint64_t v38 = Date.formattedShortMonthAndDay(timeZone:)();
  uint64_t v40 = v39;
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v138);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v137);
  uint64_t v41 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
  AttributedString.init(stringLiteral:)();
  uint64_t *v27 = v38;
  v27[1] = v40;
  uint64_t v42 = v145;
  *(_OWORD *)((char *)v27 + v41[6]) = xmmword_100C313A0;
  uint64_t v43 = (uint64_t *)((char *)v27 + v41[7]);
  *uint64_t v43 = 0;
  v43[1] = 0xE000000000000000;
  uint64_t v44 = (uint64_t *)((char *)v27 + v41[8]);
  *uint64_t v44 = 0;
  v44[1] = 0;
  char v45 = (uint64_t *)((char *)v27 + v41[9]);
  *char v45 = 8224;
  v45[1] = 0xE200000000000000;
  *(_OWORD *)((char *)v27 + v41[10]) = xmmword_100C313A0;
  *((unsigned char *)v27 + v41[11]) = 0;
  type metadata accessor for LollipopDetailViewModel(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v46 = (uint64_t)object;
  *uint64_t v29 = countAndFlagsBits;
  v29[1] = v46;
  v29[2] = 0;
  v29[3] = 0xE000000000000000;
  v29[4] = v42;
  void v29[5] = v37;
  v29[6] = v42;
  v29[7] = v37;
  uint64_t v140 = v37;
  sub_1006E0EAC((uint64_t)v27, (uint64_t)v29 + *(int *)(v139 + 20), (void (*)(void))type metadata accessor for DetailHeroChartLollipopModel);
  *(void *)&long long v150 = 0x3FF0000000000000;
  sub_100146A70();
  ScaledMetric.init(wrappedValue:)();
  uint64_t v47 = enum case for DynamicTypeSize.accessibility1(_:);
  uint64_t v48 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 104))(v19, v47, v48);
  sub_1006E0758(&qword_100E651F0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  sub_1006E0758(&qword_100E8CCA0, (void (*)(uint64_t))type metadata accessor for DetailHeroChartHeaderView);
  sub_1001246C8((unint64_t *)&unk_100EAADB0, &qword_100E651D0);
  Swift::String v49 = v142;
  View.dynamicTypeSize<A>(_:)();
  sub_100178110((uint64_t)v19, &qword_100E651D0);
  sub_1006E07F4((uint64_t)v29, (void (*)(void))type metadata accessor for DetailHeroChartHeaderView);
  (*(void (**)(char *, char *, uint64_t))(v143 + 32))(v141, v49, v144);
  if (qword_100E62450 != -1) {
LABEL_5:
  }
    swift_once();
  swift_beginAccess();
  double v50 = sub_10058C830();
  uint64_t v51 = v115;
  uint64_t v52 = (char *)v115 + *(int *)(v114 + 20);
  uint64_t v53 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v54 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 104))(v52, v53, v54);
  *uint64_t v51 = v50;
  v51[1] = v50;
  uint64_t v55 = sub_10058C87C();
  swift_endAccess();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  uint64_t v56 = v118;
  sub_1006E07A0((uint64_t)v51, v118, (void (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v57 = v56 + *(int *)(sub_10017DF08(&qword_100E7D380) + 36);
  long long v58 = v148;
  *(_OWORD *)uint64_t v57 = v147;
  *(_OWORD *)(v57 + 16) = v58;
  *(void *)(v57 + 32) = v149;
  uint64_t v59 = sub_10017DF08(&qword_100E7D388);
  *(void *)(v56 + *(int *)(v59 + 52)) = v55;
  *(_WORD *)(v56 + *(int *)(v59 + 56)) = 256;
  uint64_t v60 = static Alignment.center.getter();
  uint64_t v62 = v61;
  uint64_t v63 = (uint64_t *)(v56 + *(int *)(sub_10017DF08(&qword_100E7D390) + 36));
  uint64_t *v63 = v60;
  v63[1] = v62;
  sub_1006E07F4((uint64_t)v51, (void (*)(void))&type metadata accessor for RoundedRectangle);
  sub_10058C858();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v64 = v119;
  sub_10006DF38(v56, v119, &qword_100E83CB0);
  uint64_t v65 = (_OWORD *)(v64 + *(int *)(v117 + 36));
  long long v66 = v151;
  _OWORD *v65 = v150;
  v65[1] = v66;
  void v65[2] = v152;
  sub_100178110(v56, &qword_100E83CB0);
  uint64_t v67 = static Alignment.center.getter();
  uint64_t v69 = v68;
  uint64_t v70 = (uint64_t)v121;
  uint64_t v71 = &v121[*(int *)(v116 + 36)];
  uint64_t v72 = v122;
  ProgressView<>.init<>()();
  uint64_t v73 = v125;
  CircularProgressViewStyle.init()();
  sub_1001246C8(&qword_100E8CCA8, &qword_100E8CC78);
  sub_1006E0758(&qword_100E8CCB0, (void (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle);
  uint64_t v74 = v124;
  uint64_t v75 = v127;
  View.progressViewStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v126 + 8))(v73, v75);
  (*(void (**)(char *, uint64_t))(v123 + 8))(v72, v74);
  char v76 = (uint64_t *)&v71[*(int *)(sub_10017DF08(&qword_100E8CCB8) + 36)];
  *char v76 = v67;
  v76[1] = v69;
  sub_10024D364(v64, v70, &qword_100E8CC80);
  LOBYTE(v67) = static Edge.Set.horizontal.getter();
  swift_beginAccess();
  sub_100592380();
  EdgeInsets.init(_all:)();
  uint64_t v78 = v77;
  uint64_t v80 = v79;
  uint64_t v82 = v81;
  uint64_t v84 = v83;
  uint64_t v85 = v128;
  sub_10006DF38(v70, v128, &qword_100E8CC88);
  uint64_t v86 = v85 + *(int *)(v120 + 36);
  *(unsigned char *)uint64_t v86 = v67;
  *(void *)(v86 + 8) = v78;
  *(void *)(v86 + 16) = v80;
  *(void *)(v86 + 24) = v82;
  *(void *)(v86 + 32) = v84;
  *(unsigned char *)(v86 + 40) = 0;
  sub_100178110(v70, &qword_100E8CC88);
  sub_10024D364(v85, v146, &qword_100E8CC90);
  uint64_t v87 = v140;
  swift_bridgeObjectRetain();
  sub_1006DC1A4(0, 2, v145, v87);
  uint64_t v89 = v88;
  uint64_t v90 = (uint64_t)v131;
  Text.Measurements.init()();
  *(void *)uint64_t v90 = v89;
  *(void *)(v90 + 8) = 0;
  *(void *)(v90 + 16) = 0xE000000000000000;
  *(unsigned char *)(v90 + 24) = 1;
  sub_10058C8E4();
  uint64_t v92 = v91;
  uint64_t v94 = v93;
  uint64_t v96 = v95;
  uint64_t v98 = v97;
  LOBYTE(v89) = static Edge.Set.all.getter();
  uint64_t v99 = v133;
  sub_1006E07A0(v90, v133, (void (*)(void))type metadata accessor for ConditionDetailLegendView);
  uint64_t v100 = v99 + *(int *)(v130 + 36);
  *(unsigned char *)uint64_t v100 = v89;
  *(void *)(v100 + 8) = v92;
  *(void *)(v100 + 16) = v94;
  *(void *)(v100 + 24) = v96;
  *(void *)(v100 + 32) = v98;
  *(unsigned char *)(v100 + 40) = 0;
  sub_1006E07F4(v90, (void (*)(void))type metadata accessor for ConditionDetailLegendView);
  uint64_t v101 = v132;
  sub_10024D364(v99, v132, &qword_100E7D200);
  uint64_t v102 = v143;
  uint64_t v103 = *(void (**)(char *, char *, uint64_t))(v143 + 16);
  uint64_t v104 = v142;
  uint64_t v105 = v141;
  uint64_t v106 = v144;
  v103(v142, v141, v144);
  sub_10006DF38(v146, v85, &qword_100E8CC90);
  sub_10006DF38(v101, v99, &qword_100E7D200);
  uint64_t v107 = v134;
  v103(v134, v104, v106);
  uint64_t v108 = (int *)sub_10017DF08(&qword_100E8CCC0);
  sub_10006DF38(v85, (uint64_t)&v107[v108[12]], &qword_100E8CC90);
  sub_10006DF38(v99, (uint64_t)&v107[v108[16]], &qword_100E7D200);
  uint64_t v109 = &v107[v108[20]];
  *(void *)uint64_t v109 = 0;
  v109[8] = 1;
  *((void *)v109 + 2) = 0x3FF0000000000000;
  sub_100178110(v101, &qword_100E7D200);
  sub_100178110(v146, &qword_100E8CC90);
  char v110 = *(void (**)(char *, uint64_t))(v102 + 8);
  v110(v105, v106);
  sub_100178110(v99, &qword_100E7D200);
  sub_100178110(v85, &qword_100E8CC90);
  return ((uint64_t (*)(char *, uint64_t))v110)(v104, v106);
}

uint64_t sub_1006DFF58@<X0>(uint64_t a1@<X8>)
{
  return sub_1006DE970(*v1, v1[1], a1);
}

uint64_t sub_1006DFF64(uint64_t a1)
{
  return a1;
}

uint64_t sub_1006DFF94(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1006DFFCC()
{
  unint64_t result = qword_100E8CB30;
  if (!qword_100E8CB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8CB30);
  }
  return result;
}

unint64_t sub_1006E0018()
{
  unint64_t result = qword_100E8CB48;
  if (!qword_100E8CB48)
  {
    sub_10018C6DC(&qword_100E8CB40);
    sub_1001246C8(&qword_100E8CB50, &qword_100E8CB58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8CB48);
  }
  return result;
}

unint64_t sub_1006E00B8()
{
  unint64_t result = qword_100E8CB60[0];
  if (!qword_100E8CB60[0])
  {
    sub_10018C6DC(&qword_100E8CB38);
    sub_1001246C8(&qword_100E8CB28, &qword_100E8CB20);
    sub_1006DFFCC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100E8CB60);
  }
  return result;
}

uint64_t sub_1006E0158(uint64_t a1)
{
  return a1;
}

uint64_t sub_1006E018C@<X0>(uint64_t a1@<X8>)
{
  return sub_1006DD070((const void *)(v1 + 16), a1);
}

uint64_t sub_1006E019C@<X0>(unsigned char *a1@<X8>)
{
  return sub_1006DC530(a1);
}

uint64_t sub_1006E01AC()
{
  swift_unknownObjectRelease();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 48);

  return swift_deallocObject();
}

uint64_t sub_1006E01F4(unsigned __int8 *a1)
{
  return sub_1006DC5EC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), v1 + 32);
}

uint64_t destroy for AveragesScrollView(uint64_t a1)
{
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 24);

  return swift_release();
}

uint64_t initializeWithCopy for AveragesScrollView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = a2 + 24;
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain();
  swift_retain();
  v8(a1 + 24, v5, v7);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AveragesScrollView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  sub_1000C1E18((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for AveragesScrollView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for AveragesScrollView()
{
  return &type metadata for AveragesScrollView;
}

ValueMetadata *type metadata accessor for AveragesLoadingView()
{
  return &type metadata for AveragesLoadingView;
}

uint64_t sub_1006E0434()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1006E0478(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1006E04D0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1006E0550(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t type metadata accessor for AveragesContentView()
{
  return sub_100109098();
}

uint64_t sub_1006E05C0()
{
  return sub_1001246C8(&qword_100E8CBE8, &qword_100E8CB18);
}

uint64_t sub_1006E05FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006E0618()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006E0634()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006E0678@<X0>(uint64_t a1@<X8>)
{
  return sub_1006DD4FC(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_1006E0684()
{
  unint64_t result = qword_100E8CBF0;
  if (!qword_100E8CBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8CBF0);
  }
  return result;
}

uint64_t sub_1006E06D0()
{
  return sub_1006DDF84(*(void *)(v0 + 16));
}

uint64_t sub_1006E06DC(uint64_t a1)
{
  return sub_1006DE094(a1, v1 + 16);
}

uint64_t sub_1006E06E8@<X0>(uint64_t a1@<X8>)
{
  return sub_1006DE23C(v1 + 16, a1);
}

uint64_t sub_1006E06F4()
{
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 40);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006E0748(uint64_t a1, unsigned char *a2)
{
  return sub_1006DE288(a1, a2, v2 + 16);
}

uint64_t sub_1006E0750()
{
  return sub_1006DECD0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1006E0758(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1006E07A0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_1006E07F4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_1006E084C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AveragesDetailPickerView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for AveragesDetailPickerView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for AveragesDetailPickerView(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 17))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AveragesDetailPickerView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AveragesDetailPickerView()
{
  return &type metadata for AveragesDetailPickerView;
}

uint64_t destroy for AveragesLoadedView(uint64_t a1)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);

  return swift_release();
}

uint64_t initializeWithCopy for AveragesLoadedView(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  return a1;
}

uint64_t *assignWithCopy for AveragesLoadedView(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for AveragesLoadedView(uint64_t a1, uint64_t a2)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for AveragesLoadedView()
{
  return &type metadata for AveragesLoadedView;
}

uint64_t sub_1006E0B18()
{
  sub_10018C6DC(&qword_100E77370);
  swift_getTupleTypeMetadata3();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  type metadata accessor for VStack();

  return swift_getWitnessTable();
}

uint64_t sub_1006E0BC8(uint64_t a1)
{
  return sub_1006E0BF0(a1, &qword_100E8CC00, &qword_100E8CC20);
}

uint64_t sub_1006E0BDC(uint64_t a1)
{
  return sub_1006E0BF0(a1, &qword_100E8CC40, &qword_100E8CC68);
}

uint64_t sub_1006E0BF0(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006E0C74()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006E0C90()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1006E0CAC()
{
  unint64_t result = qword_100E8CCE0;
  if (!qword_100E8CCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8CCE0);
  }
  return result;
}

unint64_t sub_1006E0CF8()
{
  unint64_t result = qword_100E8CCE8;
  if (!qword_100E8CCE8)
  {
    sub_10018C6DC(&qword_100E8CCD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8CCE8);
  }
  return result;
}

uint64_t sub_1006E0D64(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1006E0DC0()
{
  unint64_t result = qword_100E8CD20;
  if (!qword_100E8CD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8CD20);
  }
  return result;
}

unint64_t sub_1006E0E0C()
{
  unint64_t result = qword_100E8CD28;
  if (!qword_100E8CD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8CD28);
  }
  return result;
}

uint64_t sub_1006E0E58(uint64_t a1)
{
  return a1;
}

uint64_t sub_1006E0EAC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_1006E0F00(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1006E0F5C(uint64_t a1)
{
  return a1;
}

unint64_t sub_1006E0FB4()
{
  unint64_t result = qword_100E8CD40;
  if (!qword_100E8CD40)
  {
    sub_10018C6DC(&qword_100E8CCF8);
    sub_10018C6DC(&qword_100E8CCC8);
    type metadata accessor for SegmentedPickerStyle();
    sub_1001246C8(&qword_100E8CCF0, &qword_100E8CCC8);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8CD40);
  }
  return result;
}

uint64_t sub_1006E10A8()
{
  return sub_1001246C8(&qword_100E8CD48, &qword_100E8CD50);
}

uint64_t *sub_1006E10E4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    void *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1006E11BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1006E1234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1006E12BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1006E1358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1006E13D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1006E1460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006E1474);
}

uint64_t sub_1006E1474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_1006E1504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006E1518);
}

void sub_1006E1518(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
}

void sub_1006E15A4()
{
}

uint64_t sub_1006E15BC(uint64_t a1)
{
  return sub_10089A32C(a1);
}

void *sub_1006E15D4(char a1, char a2, uint64_t a3)
{
  uint64_t v90 = a3;
  uint64_t v6 = type metadata accessor for TipPriorityQueue.GridEntry();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100162EF8();
  uint64_t v87 = v8;
  sub_1001626D4();
  __chkstk_darwin(v9);
  uint64_t v86 = (uint64_t)&v71 - v10;
  sub_1001626D4();
  __chkstk_darwin(v11);
  uint64_t v85 = (uint64_t)&v71 - v12;
  uint64_t v13 = sub_10017DF08(&qword_100E64E80);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_10017F948();
  uint64_t v15 = type metadata accessor for LocationComponentViewModel();
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_100162EF8();
  uint64_t v18 = v17;
  sub_1001626D4();
  __chkstk_darwin(v19);
  uint64_t v71 = (uint64_t)&v71 - v20;
  uint64_t v21 = sub_10017DF08(&qword_100E6CCD8);
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_100162EF8();
  uint64_t v84 = v23;
  sub_1001626D4();
  __chkstk_darwin(v24);
  uint64_t v83 = (uint64_t)&v71 - v25;
  sub_1001626D4();
  __chkstk_darwin(v26);
  uint64_t v89 = (uint64_t)&v71 - v27;
  sub_1001626D4();
  __chkstk_darwin(v28);
  uint64_t v82 = (uint64_t)&v71 - v29;
  uint64_t v88 = v6;
  if (a1)
  {
    if (a1 == 1)
    {
      if (a2)
      {
        uint64_t v30 = &qword_100E8D218;
        goto LABEL_11;
      }
    }
    else if (a2)
    {
      uint64_t v30 = &qword_100E8D628;
      goto LABEL_11;
    }
    uint64_t v30 = &qword_100E8D420;
  }
  else if (a2)
  {
    uint64_t v30 = &qword_100E8CE08;
  }
  else
  {
    uint64_t v30 = &qword_100E8D010;
  }
LABEL_11:
  char v31 = *((unsigned char *)v30 + 160);
  uint64_t v32 = *v30;
  uint64_t v73 = v30[1];
  uint64_t v72 = v30[2];
  uint64_t v33 = v30[3];
  uint64_t v34 = v30[16];
  uint64_t v35 = v30[17];
  uint64_t v36 = v30[18];
  uint64_t v37 = v30[19];
  uint64_t v38 = v30[49];
  uint64_t v76 = v30[50];
  uint64_t v77 = v38;
  uint64_t v39 = v30[51];
  uint64_t v74 = v30[52];
  uint64_t v75 = v39;
  uint64_t v40 = v30[57];
  uint64_t v80 = v30[58];
  uint64_t v81 = v40;
  uint64_t v41 = v30[59];
  uint64_t v78 = v30[60];
  uint64_t v79 = v41;
  uint64_t v42 = v90 + OBJC_IVAR____TtCV7Weather25NoAqiSevereNhpNewsContent8_Storage_map;
  swift_beginAccess();
  sub_10006DF38(v42, v3, &qword_100E64E80);
  uint64_t v43 = type metadata accessor for LocationComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0(v3, 1, v43) == 1)
  {
    sub_1001781AC(v3, &qword_100E64E80);
LABEL_16:
    uint64_t v48 = 1;
    uint64_t v49 = v88;
    goto LABEL_17;
  }
  sub_10031F6A8(v3 + *(int *)(v43 + 20), v18, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  sub_10031F75C(v3, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  uint64_t v44 = v18;
  uint64_t v45 = v71;
  sub_10031F6FC(v44, v71, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  if (v31)
  {
    sub_10031F75C(v45, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    goto LABEL_16;
  }
  uint64_t v46 = v45;
  uint64_t v47 = v89;
  sub_10031F6FC(v46, v89, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v48 = 0;
  uint64_t v49 = v88;
  double v50 = (uint64_t *)(v47 + *(int *)(v88 + 20));
  *double v50 = v34;
  v50[1] = v35;
  v50[2] = v36;
  v50[3] = v37;
LABEL_17:
  uint64_t v51 = v89;
  _s7Weather24LocationCompositionStateOwst_0(v89, v48, 1, v49);
  uint64_t v52 = v82;
  sub_10031F640(v51, v82);
  uint64_t v53 = v83;
  _s7Weather24LocationCompositionStateOwst_0(v83, 1, 1, v49);
  uint64_t v54 = sub_100163354(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  uint64_t v55 = v85;
  sub_10031F6A8(v54, v85, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v56 = (uint64_t *)(v55 + *(int *)(v49 + 20));
  uint64_t v57 = v73;
  *uint64_t v56 = v32;
  v56[1] = v57;
  v56[2] = v72;
  v56[3] = v33;
  uint64_t v58 = v84;
  sub_10006DF38(v52, v84, &qword_100E6CCD8);
  uint64_t v59 = sub_100163354(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  uint64_t v60 = v86;
  sub_10031F6A8(v59, v86, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v61 = (uint64_t *)(v60 + *(int *)(v49 + 20));
  uint64_t v62 = v76;
  *uint64_t v61 = v77;
  v61[1] = v62;
  uint64_t v63 = v74;
  v61[2] = v75;
  v61[3] = v63;
  uint64_t v64 = sub_100163354(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  uint64_t v65 = v87;
  sub_10031F6A8(v64, v87, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  long long v66 = (uint64_t *)(v65 + *(int *)(v49 + 20));
  uint64_t v67 = v80;
  uint64_t *v66 = v81;
  v66[1] = v67;
  uint64_t v68 = v78;
  v66[2] = v79;
  v66[3] = v68;
  uint64_t v69 = sub_100AD6D18(v53, v55, v58, v60, v65);
  sub_1001781AC(v52, &qword_100E6CCD8);
  return v69;
}

uint64_t sub_1006E1B60(uint64_t a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E64E80);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_10017F948();
  uint64_t v5 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = a1 + OBJC_IVAR____TtCV7Weather25NoAqiSevereNhpNewsContent8_Storage_map;
  swift_beginAccess();
  sub_10006DF38(v10, v1, &qword_100E64E80);
  uint64_t v110 = a1;
  if (_s7Weather24LocationCompositionStateOwet_0(v1, 1, v5) == 1)
  {
    sub_1001781AC(v1, &qword_100E64E80);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C28110;
    sub_10017DF08(&qword_100E6CCD0);
    unint64_t v12 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v13 = *(void *)(v6 + 72);
    uint64_t v14 = (__n128 *)swift_allocObject();
    uint64_t v15 = sub_100183900(v14, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather25NoAqiSevereNhpNewsContent8_Storage_severeAlert, (uint64_t)v15 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 40) = v16;
    *(void *)(v11 + 48) = v17;
    uint64_t v18 = (__n128 *)swift_allocObject();
    sub_10017FBA8(v18);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather25NoAqiSevereNhpNewsContent8_Storage_nextHourPrecipitation, v19, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 64) = v20;
    *(void *)(v11 + 72) = v21;
    uint64_t v22 = (__n128 *)sub_100163204();
    sub_10017FBA8(v22);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather25NoAqiSevereNhpNewsContent8_Storage_newsArticle, v23, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 88) = v24;
    *(void *)(v11 + 96) = v25;
    uint64_t v26 = (__n128 *)sub_100163204();
    sub_10017FBA8(v26);
    sub_10031F6A8(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v27, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 112) = v28;
    *(void *)(v11 + 120) = v29;
    uint64_t v30 = sub_100163204();
    *(_OWORD *)(v30 + 16) = v111;
    sub_10031F6A8(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v30 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 128) = sub_1001F24CC(v30);
    *(void *)(v11 + 136) = v31;
    *(void *)(v11 + 144) = v32;
    uint64_t v33 = v13;
    uint64_t v34 = (__n128 *)swift_allocObject();
    uint64_t v35 = (char *)sub_100183900(v34, (__n128)xmmword_100C25ED0) + v12;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
    sub_1001859A8((uint64_t)&v35[v33], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v34);
    *(void *)(v11 + 160) = v36;
    *(void *)(v11 + 168) = v37;
    uint64_t v38 = (__n128 *)swift_allocObject();
    sub_10016324C(v38);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_1001859A8((uint64_t)&v35[v33], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v34);
    *(void *)(v11 + 184) = v39;
    *(void *)(v11 + 192) = v40;
    uint64_t v41 = (__n128 *)swift_allocObject();
    sub_10016324C(v41);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_1001859A8((uint64_t)&v35[v33], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity);
    *(void *)(v11 + 200) = sub_1001F24CC((uint64_t)v34);
    *(void *)(v11 + 208) = v42;
    *(void *)(v11 + 216) = v43;
    uint64_t v44 = sub_100163204();
    *(_OWORD *)(v44 + 16) = v111;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_1001859A8(v44 + v12 + v33, OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure);
    *(void *)(v11 + 224) = sub_1001F24CC(v44);
    *(void *)(v11 + 232) = v45;
    *(void *)(v11 + 240) = v46;
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = v111;
    uint64_t v48 = *(void *)(a1 + 16);
    sub_10031F6A8(v48 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v47 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v48 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v47 + v12 + v33, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 248) = sub_1001F24CC(v47);
    *(void *)(v11 + 256) = v49;
    *(void *)(v11 + 264) = v50;
  }
  else
  {
    sub_10031F6FC(v1, v9, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C31F20;
    sub_10017DF08(&qword_100E6CCD0);
    uint64_t v109 = *(void *)(v6 + 72);
    uint64_t v108 = v9;
    unint64_t v51 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v52 = (__n128 *)swift_allocObject();
    uint64_t v53 = sub_100183900(v52, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather25NoAqiSevereNhpNewsContent8_Storage_severeAlert, (uint64_t)v53 + v51, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v52);
    *(void *)(v11 + 40) = v54;
    *(void *)(v11 + 48) = v55;
    uint64_t v56 = (__n128 *)sub_10017C984();
    sub_100179F54(v56);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather25NoAqiSevereNhpNewsContent8_Storage_nextHourPrecipitation, v57, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC((uint64_t)v56);
    *(void *)(v11 + 64) = v58;
    *(void *)(v11 + 72) = v59;
    uint64_t v60 = (__n128 *)sub_10017C984();
    sub_100179F54(v60);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather25NoAqiSevereNhpNewsContent8_Storage_newsArticle, v61, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC((uint64_t)v60);
    *(void *)(v11 + 88) = v62;
    *(void *)(v11 + 96) = v63;
    uint64_t v64 = (__n128 *)sub_10017C984();
    sub_10017E198(v64);
    sub_10031F6A8(v65 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v66, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC((uint64_t)v60);
    *(void *)(v11 + 112) = v67;
    *(void *)(v11 + 120) = v68;
    uint64_t v69 = (__n128 *)sub_10017C984();
    sub_10017E198(v69);
    sub_10031F6A8(v70 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v71, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 128) = sub_1001F24CC((uint64_t)v60);
    *(void *)(v11 + 136) = v72;
    *(void *)(v11 + 144) = v73;
    uint64_t v74 = (__n128 *)sub_10017C984();
    sub_100179F54(v74);
    sub_10031F6A8(v9, v75, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v74);
    *(void *)(v11 + 160) = v76;
    *(void *)(v11 + 168) = v77;
    uint64_t v78 = (__n128 *)swift_allocObject();
    uint64_t v79 = (char *)sub_100183900(v78, (__n128)xmmword_100C25ED0) + v51;
    uint64_t v80 = a1;
    uint64_t v81 = *(void *)(a1 + 16);
    uint64_t v82 = v80;
    sub_10031F6A8(v81 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v79, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v81 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v79[v109], (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v78);
    *(void *)(v11 + 184) = v83;
    *(void *)(v11 + 192) = v84;
    uint64_t v85 = (__n128 *)swift_allocObject();
    sub_10017A334(v85);
    uint64_t v87 = v86 + v51;
    uint64_t v88 = *(void *)(v82 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_10031F6A8(v88 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, v87 + v109, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 200) = sub_1001F24CC((uint64_t)v78);
    *(void *)(v11 + 208) = v89;
    *(void *)(v11 + 216) = v90;
    uint64_t v91 = (__n128 *)swift_allocObject();
    sub_10017A334(v91);
    uint64_t v93 = v92 + v51;
    uint64_t v94 = *(void *)(v110 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_10031F6A8(v94 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, v93 + v109, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 224) = sub_1001F24CC((uint64_t)v78);
    *(void *)(v11 + 232) = v95;
    *(void *)(v11 + 240) = v96;
    uint64_t v97 = (__n128 *)swift_allocObject();
    sub_10017A334(v97);
    uint64_t v99 = v98 + v51;
    uint64_t v100 = *(void *)(v110 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_10031F6A8(v100 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, v99 + v109, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 248) = sub_1001F24CC((uint64_t)v78);
    *(void *)(v11 + 256) = v101;
    *(void *)(v11 + 264) = v102;
    uint64_t v103 = swift_allocObject();
    *(_OWORD *)(v103 + 16) = v111;
    uint64_t v104 = *(void *)(v110 + 16);
    sub_10031F6A8(v104 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v103 + v51, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v104 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v103 + v51 + v109, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 272) = sub_1001F24CC(v103);
    *(void *)(v11 + 280) = v105;
    *(void *)(v11 + 288) = v106;
    sub_10031F75C(v108, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  }
  return v11;
}

void sub_1006E2420(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100162E4C();
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v7 = __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  uint64_t v8 = type metadata accessor for LocationViewComponent();
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_10017DF08(&qword_100E64E80);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = swift_retain();
  sub_1006E2E94(v18, a2);
  swift_release();
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather39LocationNoAqiSevereNhpNewsConfiguration8_Storage_map, v12, (void (*)(void))type metadata accessor for LocationViewComponent);
  uint64_t v19 = sub_10018297C();
  a2(v19);
  sub_100185204();
  _s7Weather24LocationCompositionStateOwst_0(v17, 0, 1, v4);
  sub_10016327C(OBJC_IVAR____TtCV7Weather39LocationNoAqiSevereNhpNewsConfiguration8_Storage_newsArticle);
  uint64_t v20 = sub_10018297C();
  a2(v20);
  sub_100185204();
  sub_10016327C(OBJC_IVAR____TtCV7Weather39LocationNoAqiSevereNhpNewsConfiguration8_Storage_nextHourPrecipitation);
  uint64_t v21 = sub_10018297C();
  a2(v21);
  sub_100185204();
  sub_10016327C(OBJC_IVAR____TtCV7Weather39LocationNoAqiSevereNhpNewsConfiguration8_Storage_severeAlert);
  uint64_t v22 = sub_10018297C();
  a2(v22);
  sub_100185204();
  sub_1002DCDC4();
}

uint64_t sub_1006E2658(void *a1)
{
  uint64_t v3 = type metadata accessor for LocationModel();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = OBJC_IVAR____TtCV7Weather25LocationViewerPageControl11Coordinator_pages;
  uint64_t v11 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtCV7Weather25LocationViewerPageControl11Coordinator_pages) + 16);
  uint64_t result = (uint64_t)[a1 currentPage];
  if (result < 0 || result >= v11) {
    return result;
  }
  uint64_t result = (uint64_t)[a1 currentPage];
  if (result < 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v13 = *(void *)(v1 + v10);
  if ((unint64_t)result >= *(void *)(v13 + 16))
  {
LABEL_10:
    __break(1u);
    return result;
  }
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16))(v9, v13+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * result, v3);
  id v14 = [a1 interactionState];
  if (v14 != (id)2) {
    id v14 = (id)static Animation.default.getter();
  }
  __chkstk_darwin(v14);
  *(void *)&v15[-16] = v1;
  *(void *)&v15[-8] = v9;
  withAnimation<A>(_:_:)();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_1006E2808(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Location.Identifier();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10017DF08(&qword_100E8D8D0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = a1 + OBJC_IVAR____TtCV7Weather25LocationViewerPageControl11Coordinator_selection;
  swift_beginAccess();
  sub_1006E2A7C(v6, (uint64_t)v5);
  LocationModel.identifier.getter();
  Binding.wrappedValue.setter();
  return sub_1001781AC((uint64_t)v5, &qword_100E8D8D0);
}

uint64_t sub_1006E298C()
{
  sub_1001781AC(v0 + OBJC_IVAR____TtCV7Weather25LocationViewerPageControl11Coordinator_selection, &qword_100E8D8D0);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1006E2A08()
{
  return type metadata accessor for LocationViewerPageControl.Coordinator(0);
}

void sub_1006E2A1C()
{
}

uint64_t sub_1006E2A60()
{
  return sub_1006E2808(*(void *)(v0 + 16));
}

uint64_t sub_1006E2A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E8D8D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006E2AE4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = *(uint64_t *)((char *)a2 + v6 + 8);
    *uint64_t v7 = *(uint64_t *)((char *)a2 + v6);
    v7[1] = v9;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v10 = *(int *)(sub_10017DF08(&qword_100E8D8D0) + 32);
    uint64_t v11 = (char *)v7 + v10;
    uint64_t v12 = v8 + v10;
    uint64_t v13 = type metadata accessor for Location.Identifier();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  return a1;
}

uint64_t sub_1006E2BEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = a2 + v4;
  uint64_t v7 = *(void *)(a2 + v4 + 8);
  *uint64_t v5 = *(void *)(a2 + v4);
  v5[1] = v7;
  uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E8D8D0) + 32);
  uint64_t v9 = (char *)v5 + v8;
  uint64_t v10 = v6 + v8;
  uint64_t v11 = type metadata accessor for Location.Identifier();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t sub_1006E2C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = (void *)(a2 + v6);
  *(void *)(a1 + v6) = *v8;
  swift_release();
  *(void *)(v7 + 8) = v8[1];
  swift_release();
  uint64_t v9 = *(int *)(sub_10017DF08(&qword_100E8D8D0) + 32);
  uint64_t v10 = v7 + v9;
  uint64_t v11 = (char *)v8 + v9;
  uint64_t v12 = type metadata accessor for Location.Identifier();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_1006E2D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006E2D70);
}

uint64_t sub_1006E2D70(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10017DF08(&qword_100E8D8D0);
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 24);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_1006E2DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006E2E10);
}

void *sub_1006E2E10(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10017DF08(&qword_100E8D8D0);
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 24);
    return (void *)_s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

void sub_1006E2E94(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3 = type metadata accessor for LocationViewComponent();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v6 - 8);
  v39[7] = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v8);
  sub_100109770();
  v39[6] = v9;
  sub_1001626D4();
  __chkstk_darwin(v10);
  sub_100109770();
  v39[5] = v11;
  sub_1001626D4();
  __chkstk_darwin(v12);
  sub_100109770();
  v39[4] = v13;
  sub_1001626D4();
  __chkstk_darwin(v14);
  sub_100109770();
  v39[9] = v15;
  sub_1001626D4();
  __chkstk_darwin(v16);
  sub_100109770();
  v39[8] = v17;
  sub_1001626D4();
  uint64_t v19 = __chkstk_darwin(v18);
  v39[1] = (char *)v39 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  v39[2] = (char *)v39 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  v39[3] = (char *)v39 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v26 = __chkstk_darwin(v25);
  __chkstk_darwin(v26);
  sub_100188038(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_hourlyForecast);
  uint64_t v27 = sub_10017D304();
  a2(v27);
  sub_1001DAD64((uint64_t)v5);
  sub_100188038(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_dailyForecast);
  uint64_t v28 = sub_10017D304();
  a2(v28);
  sub_1001DAD64((uint64_t)v5);
  sub_100188038(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_uvIndex);
  uint64_t v29 = sub_10017D304();
  a2(v29);
  sub_1001DAD64((uint64_t)v5);
  sub_100188038(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_sunriseSunset);
  uint64_t v30 = sub_10017D304();
  a2(v30);
  sub_1001DAD64((uint64_t)v5);
  sub_100188038(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_wind);
  uint64_t v31 = sub_10017D304();
  a2(v31);
  sub_1001DAD64((uint64_t)v5);
  sub_100188038(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_precipitationTotal);
  uint64_t v32 = sub_10017D304();
  a2(v32);
  sub_1001DAD64((uint64_t)v5);
  sub_100188038(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_feelsLike);
  uint64_t v33 = sub_10017D304();
  a2(v33);
  sub_1001DAD64((uint64_t)v5);
  sub_100188038(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_humidity);
  uint64_t v34 = sub_10017D304();
  a2(v34);
  sub_1001DAD64((uint64_t)v5);
  sub_100188038(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_visibility);
  uint64_t v35 = sub_10017D304();
  a2(v35);
  sub_1001DAD64((uint64_t)v5);
  sub_100188038(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_pressure);
  uint64_t v36 = sub_10017D304();
  a2(v36);
  sub_1001DAD64((uint64_t)v5);
  sub_100188038(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_averages);
  uint64_t v37 = sub_10017D304();
  a2(v37);
  sub_1001DAD64((uint64_t)v5);
  sub_100188038(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_moon);
  uint64_t v38 = sub_10017D304();
  a2(v38);
  sub_1001DAD64((uint64_t)v5);
  type metadata accessor for LocationCommonViewComponents._Storage(0);
  swift_allocObject();
  sub_1002C8C9C();
}

void *sub_1006E32C8(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = a2[1];
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    uint64_t v7 = a3[10];
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = type metadata accessor for Date();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    uint64_t v12 = a3[12];
    *((unsigned char *)v4 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    *((unsigned char *)v4 + v12) = *((unsigned char *)a2 + v12);
    uint64_t v13 = a3[14];
    *((unsigned char *)v4 + a3[13]) = *((unsigned char *)a2 + a3[13]);
    *((unsigned char *)v4 + v13) = *((unsigned char *)a2 + v13);
    uint64_t v14 = a3[16];
    *((unsigned char *)v4 + a3[15]) = *((unsigned char *)a2 + a3[15]);
    *((unsigned char *)v4 + v14) = *((unsigned char *)a2 + v14);
  }
  return v4;
}

uint64_t sub_1006E340C(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(unsigned char *)(a1 + 19) = *(unsigned char *)(a2 + 19);
  uint64_t v6 = a3[10];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  return a1;
}

uint64_t sub_1006E3518(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v6 = a3[10];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v10) = *(unsigned char *)(a2 + v10);
  uint64_t v11 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  return a1;
}

uint64_t sub_1006E35F0(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(unsigned char *)(a1 + 19) = *(unsigned char *)(a2 + 19);
  uint64_t v6 = a3[10];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v10) = *(unsigned char *)(a2 + v10);
  uint64_t v11 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  return a1;
}

uint64_t sub_1006E36E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = a1 + *(int *)(a3 + 40);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_1006E3770(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = v5 + *(int *)(a4 + 40);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_1006E37F0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001BLL && a2 == 0x8000000100CAEE60
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000100CAEE80 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v5 = a1 == 0x5364657265746E65 && a2 == 0xEF73676E69747465;
    if (v5 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x8000000100CAEEA0 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000022 && a2 == 0x8000000100CAEEC0 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000100CAEEF0 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else if (a1 == 0xD000000000000014 && a2 == 0x8000000100CAEF10 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 6;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x8000000100CAEF30 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 7;
    }
    else if (a1 == 0xD000000000000019 && a2 == 0x8000000100CAEF50 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 8;
    }
    else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000100CAEF70 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 9;
    }
    else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000100CAEF90 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 10;
    }
    else if (a1 == 0xD00000000000001FLL && a2 == 0x8000000100CAEFB0 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 11;
    }
    else if (a1 == 0xD000000000000014 && a2 == 0x8000000100C9A680)
    {
      swift_bridgeObjectRelease();
      return 12;
    }
    else
    {
      char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v6) {
        return 12;
      }
      else {
        return 13;
      }
    }
  }
}

unint64_t sub_1006E3CC0(char a1)
{
  unint64_t result = 0xD00000000000001BLL;
  switch(a1)
  {
    case 1:
    case 6:
    case 12:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0x5364657265746E65;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0xD000000000000022;
      break;
    case 5:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    case 8:
      unint64_t result = 0xD000000000000019;
      break;
    case 9:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 10:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 11:
      unint64_t result = 0xD00000000000001FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1006E3E18(void *a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E8DA60);
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  sub_1001B1E64(a1, a1[3]);
  sub_1006E46E0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    sub_10017DF08(&qword_100E81AB8);
    sub_1005A4978(&qword_100E81AD0);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_10017F0F4(2);
    sub_10017F0F4(3);
    sub_10017F0F4(4);
    sub_10017F0F4(5);
    type metadata accessor for NotificationsOptInState();
    type metadata accessor for Date();
    sub_1001457CC(&qword_100E63968);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_10017F0F4(7);
    sub_1006E4778();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_10017F0F4(9);
    sub_10017F0F4(10);
    sub_10017F0F4(11);
    sub_10017F0F4(12);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_1006E410C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v20 = v5;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  sub_10017DF08(&qword_100E8DA48);
  sub_100179C0C();
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v21 = (int *)type metadata accessor for NotificationsOptInState();
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_100109314();
  uint64_t v23 = v12;
  sub_1001B1E64(a1, a1[3]);
  sub_1006E46E0();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  LOBYTE(v24) = 0;
  *(unsigned char *)uint64_t v23 = sub_1001801CC() & 1;
  sub_10017DF08(&qword_100E81AB8);
  sub_1005A4978(&qword_100E81AC0);
  sub_1001892EC();
  *(void *)(v23 + 8) = v24;
  *(unsigned char *)(v23 + 16) = sub_10019EFD8(2) & 1;
  *(unsigned char *)(v23 + 17) = sub_10019EFD8(3) & 1;
  *(unsigned char *)(v23 + 18) = sub_10019EFD8(4) & 1;
  *(unsigned char *)(v23 + 19) = sub_10019EFD8(5) & 1;
  sub_1001457CC(&qword_100E63948);
  sub_1001892EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v23 + v21[10], v9, v22);
  *(unsigned char *)(v23 + v21[11]) = sub_10019EFD8(7) & 1;
  sub_1006E472C();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  *(unsigned char *)(v23 + v21[12]) = 6;
  uint64_t v13 = sub_10019EFD8(9);
  sub_1001D1C8C(v13, v21[13]);
  uint64_t v14 = sub_1001801CC();
  sub_1001D1C8C(v14, v21[14]);
  uint64_t v15 = sub_1001801CC();
  sub_1001D1C8C(v15, v21[15]);
  char v16 = sub_1001801CC();
  uint64_t v17 = sub_10017A7AC();
  v18(v17);
  *(unsigned char *)(v23 + v21[16]) = v16 & 1;
  sub_1001C6DA8(v23, a2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return sub_1001C6D4C(v23);
}

unint64_t sub_1006E45D4()
{
  return sub_1006E3CC0(*v0);
}

uint64_t sub_1006E45DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1006E37F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1006E4604(uint64_t a1)
{
  unint64_t v2 = sub_1006E46E0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006E4640(uint64_t a1)
{
  unint64_t v2 = sub_1006E46E0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006E467C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1006E410C(a1, a2);
}

uint64_t sub_1006E4694(void *a1)
{
  return sub_1006E3E18(a1);
}

void sub_1006E46AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10089A36C(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SBYTE1(vars8), SBYTE2(vars8), SBYTE3(vars8), SBYTE4(vars8), SBYTE5(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

uint64_t sub_1006E46C4()
{
  return sub_10089A65C();
}

unint64_t sub_1006E46E0()
{
  unint64_t result = qword_100E8DA50;
  if (!qword_100E8DA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8DA50);
  }
  return result;
}

unint64_t sub_1006E472C()
{
  unint64_t result = qword_100E8DA58;
  if (!qword_100E8DA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8DA58);
  }
  return result;
}

unint64_t sub_1006E4778()
{
  unint64_t result = qword_100E8DA68;
  if (!qword_100E8DA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8DA68);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NotificationsOptInState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF4)
  {
    if (a2 + 12 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 12) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 13;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v5 = v6 - 13;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for NotificationsOptInState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1006E4918);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationsOptInState.CodingKeys()
{
  return &type metadata for NotificationsOptInState.CodingKeys;
}

unint64_t sub_1006E4954()
{
  unint64_t result = qword_100E8DA70;
  if (!qword_100E8DA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8DA70);
  }
  return result;
}

unint64_t sub_1006E49A4()
{
  unint64_t result = qword_100E8DA78;
  if (!qword_100E8DA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8DA78);
  }
  return result;
}

unint64_t sub_1006E49F4()
{
  unint64_t result = qword_100E8DA80;
  if (!qword_100E8DA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8DA80);
  }
  return result;
}

uint64_t sub_1006E4A40(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Location.Identifier();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_10017DF08(&qword_100E6DD18);
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = sub_10017DF08(&qword_100E6DC08);
  __chkstk_darwin(v15 - 8);
  sub_10016278C();
  uint64_t v18 = v16 - v17;
  __chkstk_darwin(v19);
  sub_100164AF0();
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)v34 - v21;
  if ((sub_1006E4D88(a1, a2) & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v23 = type metadata accessor for ToolbarSearchViewModel(0);
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  uint64_t v26 = v23;
  uint64_t v27 = *(int *)(v23 + 20);
  v34[0] = v24;
  sub_100111070(v24 + v27, (uint64_t)v22);
  v34[1] = v26;
  sub_100111070(v25 + *(int *)(v26 + 20), v2);
  uint64_t v28 = v14 + *(int *)(v10 + 48);
  sub_100111070((uint64_t)v22, v14);
  sub_100111070(v2, v28);
  sub_100162F8C(v14);
  if (!v29)
  {
    sub_100111070(v14, v18);
    sub_100162F8C(v28);
    if (!v29)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v9, v28, v5);
      sub_1001CF7B8();
      char v30 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v31(v9, v5);
      sub_1001781AC(v2, &qword_100E6DC08);
      sub_1001781AC((uint64_t)v22, &qword_100E6DC08);
      v31(v18, v5);
      sub_1001781AC(v14, &qword_100E6DC08);
      if (v30) {
        goto LABEL_12;
      }
LABEL_13:
      char v32 = 0;
      return v32 & 1;
    }
    sub_1001781AC(v2, &qword_100E6DC08);
    sub_1001781AC((uint64_t)v22, &qword_100E6DC08);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v18, v5);
LABEL_10:
    sub_1001781AC(v14, &qword_100E6DD18);
    goto LABEL_13;
  }
  sub_1001781AC(v2, &qword_100E6DC08);
  sub_1001781AC((uint64_t)v22, &qword_100E6DC08);
  sub_100162F8C(v28);
  if (!v29) {
    goto LABEL_10;
  }
  sub_1001781AC(v14, &qword_100E6DC08);
LABEL_12:
  sub_100126FF0();
  return v32 & 1;
}

uint64_t sub_1006E4D88(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for PreviewLocation();
  __chkstk_darwin(v5 - 8);
  sub_10016278C();
  uint64_t v64 = v6 - v7;
  __chkstk_darwin(v8);
  uint64_t v65 = (uint64_t)&v64 - v9;
  type metadata accessor for ToolbarSearchViewModel.State(0);
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_10016278C();
  uint64_t v13 = (uint64_t *)(v11 - v12);
  __chkstk_darwin(v14);
  sub_100164AF0();
  __chkstk_darwin(v15);
  uint64_t v17 = (uint64_t *)((char *)&v64 - v16);
  __chkstk_darwin(v18);
  uint64_t v20 = (uint64_t *)((char *)&v64 - v19);
  __chkstk_darwin(v21);
  uint64_t v23 = (unsigned __int8 *)&v64 - v22;
  uint64_t v24 = sub_10017DF08(&qword_100E8DA88);
  __chkstk_darwin(v24 - 8);
  sub_1001626E0();
  uint64_t v27 = v26 - v25;
  char v29 = (unsigned __int8 *)(v26 - v25 + *(int *)(v28 + 56));
  sub_1006E53D4(a1, v26 - v25);
  sub_1006E53D4(a2, (uint64_t)v29);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1006E53D4(v27, (uint64_t)v20);
      uint64_t v33 = *v20;
      uint64_t v32 = v20[1];
      if (sub_10019EFFC() != 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_36;
      }
      if (v33 == *(void *)v29 && v32 == *((void *)v29 + 1))
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v35 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_54;
        }
      }
      sub_100BDB41C();
      char v58 = v57;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v58 & 1) == 0) {
        goto LABEL_54;
      }
      sub_100126FF0();
      char v60 = v59;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_44;
    case 2u:
      sub_1006E53D4(v27, (uint64_t)v17);
      uint64_t v37 = *v17;
      uint64_t v36 = v17[1];
      if (sub_10019EFFC() != 2) {
        goto LABEL_37;
      }
      if (v37 != *(void *)v29 || v36 != *((void *)v29 + 1)) {
        goto LABEL_50;
      }
      goto LABEL_52;
    case 3u:
      sub_1006E53D4(v27, (uint64_t)v2);
      uint64_t v40 = *v2;
      uint64_t v39 = v2[1];
      uint64_t v41 = *(int *)(sub_10017DF08(&qword_100E8DA90) + 48);
      if (sub_10019EFFC() != 3)
      {
        sub_1006E5438((uint64_t)v2 + v41, (void (*)(void))type metadata accessor for PreviewLocation);
        goto LABEL_37;
      }
      uint64_t v43 = *(void *)v29;
      uint64_t v42 = *((void *)v29 + 1);
      uint64_t v44 = v65;
      sub_1004CDE80((uint64_t)v2 + v41, v65);
      uint64_t v45 = (uint64_t)&v29[v41];
      uint64_t v46 = v64;
      sub_1004CDE80(v45, v64);
      if (v40 == v43 && v39 == v42)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v48 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v48 & 1) == 0)
        {
          sub_1006E5438(v46, (void (*)(void))type metadata accessor for PreviewLocation);
          sub_1006E5438(v44, (void (*)(void))type metadata accessor for PreviewLocation);
          goto LABEL_55;
        }
      }
      char v60 = sub_10081C338(v44, v46);
      sub_1006E5438(v46, (void (*)(void))type metadata accessor for PreviewLocation);
      sub_1006E5438(v44, (void (*)(void))type metadata accessor for PreviewLocation);
LABEL_44:
      sub_1006E5438(v27, (void (*)(void))type metadata accessor for ToolbarSearchViewModel.State);
      return v60 & 1;
    case 4u:
      sub_1006E53D4(v27, (uint64_t)v13);
      uint64_t v50 = *v13;
      uint64_t v49 = v13[1];
      uint64_t v52 = v13[2];
      uint64_t v51 = v13[3];
      if (sub_10019EFFC() != 4)
      {
LABEL_36:
        swift_bridgeObjectRelease();
LABEL_37:
        swift_bridgeObjectRelease();
LABEL_38:
        sub_1001781AC(v27, &qword_100E8DA88);
        goto LABEL_56;
      }
      uint64_t v54 = *((void *)v29 + 2);
      uint64_t v53 = *((void *)v29 + 3);
      if (v50 == *(void *)v29 && v49 == *((void *)v29 + 1))
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v56 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v56 & 1) == 0)
        {
LABEL_54:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_55;
        }
      }
      if (v52 == v54 && v51 == v53)
      {
LABEL_52:
        swift_bridgeObjectRelease_n();
        goto LABEL_53;
      }
LABEL_50:
      char v62 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v62) {
        goto LABEL_53;
      }
      goto LABEL_55;
    default:
      sub_1006E53D4(v27, (uint64_t)v23);
      int v30 = v23[1];
      if (sub_10019EFFC()) {
        goto LABEL_38;
      }
      if (*v23 != *v29) {
        goto LABEL_55;
      }
      int v31 = v29[1];
      if (v30 == 2)
      {
        if (v31 != 2) {
          goto LABEL_55;
        }
LABEL_53:
        sub_1006E5438(v27, (void (*)(void))type metadata accessor for ToolbarSearchViewModel.State);
        char v60 = 1;
        return v60 & 1;
      }
      if (v31 != 2 && ((((v30 & 1) == 0) ^ v31) & 1) != 0) {
        goto LABEL_53;
      }
LABEL_55:
      sub_1006E5438(v27, (void (*)(void))type metadata accessor for ToolbarSearchViewModel.State);
LABEL_56:
      char v60 = 0;
      return v60 & 1;
  }
}

uint64_t type metadata accessor for ToolbarSearchViewModel(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E8DAF0);
}

uint64_t type metadata accessor for ToolbarSearchViewModel.State(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E8DBA0);
}

uint64_t sub_1006E53D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ToolbarSearchViewModel.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006E5438(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t *sub_1006E5490(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for ToolbarSearchViewModel.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        uint64_t v9 = a2[3];
        a1[2] = a2[2];
        a1[3] = v9;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_18;
      case 2u:
        uint64_t v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        swift_bridgeObjectRetain();
        goto LABEL_18;
      case 3u:
        uint64_t v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        swift_bridgeObjectRetain();
        uint64_t v13 = *(int *)(sub_10017DF08(&qword_100E8DA90) + 48);
        uint64_t v14 = (uint64_t *)((char *)a1 + v13);
        uint64_t v15 = (char *)a2 + v13;
        type metadata accessor for PreviewLocation();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v16 = type metadata accessor for LocationOfInterest();
            goto LABEL_11;
          case 2u:
            uint64_t v19 = *((void *)v15 + 1);
            uint64_t v38 = *(void **)v15;
            *uint64_t v14 = *(void *)v15;
            v14[1] = v19;
            uint64_t v20 = *((void *)v15 + 3);
            v14[2] = *((void *)v15 + 2);
            v14[3] = v20;
            uint64_t v21 = *((void *)v15 + 5);
            v14[4] = *((void *)v15 + 4);
            v14[5] = v21;
            v14[6] = *((void *)v15 + 6);
            uint64_t v22 = type metadata accessor for SearchLocation();
            uint64_t v23 = *(int *)(v22 + 32);
            uint64_t v39 = v22;
            __dst = (char *)v14 + v23;
            uint64_t v24 = &v15[v23];
            uint64_t v25 = type metadata accessor for Location();
            id v26 = v38;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
            {
              uint64_t v27 = sub_10017DF08(&qword_100E639E8);
              memcpy(__dst, v24, *(void *)(*(void *)(v27 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(__dst, v24, v25);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v25);
            }
            uint64_t v29 = *(int *)(v39 + 36);
            int v30 = (char *)v14 + v29;
            int v31 = &v15[v29];
            *(_OWORD *)int v30 = *(_OWORD *)v31;
            v30[16] = v31[16];
            break;
          case 3u:
            *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
            uint64_t v28 = *((void *)v15 + 3);
            v14[2] = *((void *)v15 + 2);
            v14[3] = v28;
            swift_bridgeObjectRetain();
            break;
          default:
            uint64_t v16 = type metadata accessor for Location();
LABEL_11:
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
            break;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_18;
      case 4u:
        uint64_t v17 = a2[1];
        *a1 = *a2;
        a1[1] = v17;
        uint64_t v18 = a2[3];
        a1[2] = a2[2];
        a1[3] = v18;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_18:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        break;
    }
    uint64_t v32 = *(int *)(a3 + 20);
    uint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    uint64_t v35 = type metadata accessor for Location.Identifier();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35))
    {
      uint64_t v36 = sub_10017DF08(&qword_100E6DC08);
      memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v35);
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1006E58FC(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ToolbarSearchViewModel.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 2u:
      goto LABEL_6;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v4 = (id *)(a1 + *(int *)(sub_10017DF08(&qword_100E8DA90) + 48));
      type metadata accessor for PreviewLocation();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v5 = type metadata accessor for Location();
          goto LABEL_13;
        case 1u:
          uint64_t v5 = type metadata accessor for LocationOfInterest();
LABEL_13:
          (*(void (**)(id *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
          break;
        case 2u:

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v9 = (uint64_t)v4 + *(int *)(type metadata accessor for SearchLocation() + 32);
          uint64_t v10 = type metadata accessor for Location();
          if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v10)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
          }
          break;
        case 3u:
          goto LABEL_6;
        default:
          goto LABEL_7;
      }
      break;
    case 4u:
LABEL_5:
      swift_bridgeObjectRelease();
LABEL_6:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
LABEL_7:
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t v7 = type metadata accessor for Location.Identifier();
  if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }

  return swift_bridgeObjectRelease();
}

void *sub_1006E5B44(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ToolbarSearchViewModel.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      uint64_t v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_16;
    case 2u:
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      swift_bridgeObjectRetain();
      goto LABEL_16;
    case 3u:
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      swift_bridgeObjectRetain();
      uint64_t v11 = *(int *)(sub_10017DF08(&qword_100E8DA90) + 48);
      uint64_t v12 = (void *)((char *)a1 + v11);
      uint64_t v13 = (char *)a2 + v11;
      type metadata accessor for PreviewLocation();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v14 = type metadata accessor for LocationOfInterest();
          goto LABEL_9;
        case 2u:
          uint64_t v17 = *((void *)v13 + 1);
          uint64_t v36 = *(void **)v13;
          *uint64_t v12 = *(void *)v13;
          v12[1] = v17;
          uint64_t v18 = *((void *)v13 + 3);
          _OWORD v12[2] = *((void *)v13 + 2);
          v12[3] = v18;
          uint64_t v19 = *((void *)v13 + 5);
          v12[4] = *((void *)v13 + 4);
          v12[5] = v19;
          v12[6] = *((void *)v13 + 6);
          uint64_t v20 = type metadata accessor for SearchLocation();
          uint64_t v21 = *(int *)(v20 + 32);
          uint64_t v37 = v20;
          __dst = (char *)v12 + v21;
          uint64_t v22 = &v13[v21];
          uint64_t v23 = type metadata accessor for Location();
          id v24 = v36;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
          {
            uint64_t v25 = sub_10017DF08(&qword_100E639E8);
            memcpy(__dst, v22, *(void *)(*(void *)(v25 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(__dst, v22, v23);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v23);
          }
          uint64_t v27 = *(int *)(v37 + 36);
          uint64_t v28 = (char *)v12 + v27;
          uint64_t v29 = &v13[v27];
          *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
          v28[16] = v29[16];
          break;
        case 3u:
          *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
          uint64_t v26 = *((void *)v13 + 3);
          _OWORD v12[2] = *((void *)v13 + 2);
          v12[3] = v26;
          swift_bridgeObjectRetain();
          break;
        default:
          uint64_t v14 = type metadata accessor for Location();
LABEL_9:
          (*(void (**)(void *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
          break;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_16;
    case 4u:
      uint64_t v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      uint64_t v16 = a2[3];
      a1[2] = a2[2];
      a1[3] = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_16:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      break;
  }
  uint64_t v30 = *(int *)(a3 + 20);
  int v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = type metadata accessor for Location.Identifier();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v33))
  {
    uint64_t v34 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v33);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1006E5F60(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1006E5438((uint64_t)a1, (void (*)(void))type metadata accessor for ToolbarSearchViewModel.State);
    uint64_t v6 = type metadata accessor for ToolbarSearchViewModel.State(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_17;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_17;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        uint64_t v7 = *(int *)(sub_10017DF08(&qword_100E8DA90) + 48);
        uint64_t v8 = (void *)((char *)a1 + v7);
        uint64_t v9 = (char *)a2 + v7;
        type metadata accessor for PreviewLocation();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v10 = type metadata accessor for LocationOfInterest();
            goto LABEL_10;
          case 2u:
            uint64_t v30 = *(void **)v9;
            *uint64_t v8 = *(void *)v9;
            v8[1] = *((void *)v9 + 1);
            _OWORD v8[2] = *((void *)v9 + 2);
            v8[3] = *((void *)v9 + 3);
            void v8[4] = *((void *)v9 + 4);
            v8[5] = *((void *)v9 + 5);
            v8[6] = *((void *)v9 + 6);
            uint64_t v11 = type metadata accessor for SearchLocation();
            uint64_t v12 = *(int *)(v11 + 32);
            uint64_t v31 = v11;
            __dst = (char *)v8 + v12;
            uint64_t v13 = &v9[v12];
            uint64_t v14 = type metadata accessor for Location();
            id v15 = v30;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
            {
              uint64_t v16 = sub_10017DF08(&qword_100E639E8);
              memcpy(__dst, v13, *(void *)(*(void *)(v16 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(__dst, v13, v14);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v14);
            }
            uint64_t v17 = *(int *)(v31 + 36);
            uint64_t v18 = (char *)v8 + v17;
            uint64_t v19 = &v9[v17];
            long long v20 = *(_OWORD *)v19;
            v18[16] = v19[16];
            *(_OWORD *)uint64_t v18 = v20;
            break;
          case 3u:
            *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
            _OWORD v8[2] = *((void *)v9 + 2);
            v8[3] = *((void *)v9 + 3);
            swift_bridgeObjectRetain();
            break;
          default:
            uint64_t v10 = type metadata accessor for Location();
LABEL_10:
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
            break;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_17;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
  }
  uint64_t v21 = *(int *)(a3 + 20);
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = type metadata accessor for Location.Identifier();
  int v25 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v24);
  int v26 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24);
  if (!v25)
  {
    uint64_t v27 = *(void *)(v24 - 8);
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 24))(v22, v23, v24);
      goto LABEL_24;
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v22, v24);
    goto LABEL_23;
  }
  if (v26)
  {
LABEL_23:
    uint64_t v28 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v22, v23, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v24);
LABEL_24:
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1006E647C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ToolbarSearchViewModel.State(0);
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    goto LABEL_15;
  }
  *a1 = *a2;
  uint64_t v7 = *(int *)(sub_10017DF08(&qword_100E8DA90) + 48);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for PreviewLocation();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      *(void *)uint64_t v8 = *(void *)v9;
      *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
      *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
      *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
      uint64_t v13 = type metadata accessor for SearchLocation();
      uint64_t v14 = *(int *)(v13 + 32);
      __dst = &v8[v14];
      id v15 = &v9[v14];
      uint64_t v16 = type metadata accessor for Location();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
      {
        uint64_t v17 = sub_10017DF08(&qword_100E639E8);
        memcpy(__dst, v15, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(__dst, v15, v16);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v16);
      }
      uint64_t v19 = *(int *)(v13 + 36);
      long long v20 = &v8[v19];
      uint64_t v21 = &v9[v19];
      *(_OWORD *)long long v20 = *(_OWORD *)v21;
      v20[16] = v21[16];
      goto LABEL_13;
    case 1:
      uint64_t v18 = type metadata accessor for LocationOfInterest();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v8, v9, v18);
      goto LABEL_13;
    case 0:
      uint64_t v12 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v8, v9, v12);
LABEL_13:
      swift_storeEnumTagMultiPayload();
      goto LABEL_14;
  }
  memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_14:
  swift_storeEnumTagMultiPayload();
LABEL_15:
  uint64_t v22 = *(int *)(a3 + 20);
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = type metadata accessor for Location.Identifier();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
  {
    uint64_t v26 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *sub_1006E67DC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1006E5438((uint64_t)a1, (void (*)(void))type metadata accessor for ToolbarSearchViewModel.State);
    uint64_t v6 = type metadata accessor for ToolbarSearchViewModel.State(0);
    if (swift_getEnumCaseMultiPayload() != 3)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_16;
    }
    *a1 = *a2;
    uint64_t v7 = *(int *)(sub_10017DF08(&qword_100E8DA90) + 48);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for PreviewLocation();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)uint64_t v8 = *(void *)v9;
      *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
      *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
      *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
      uint64_t v13 = type metadata accessor for SearchLocation();
      uint64_t v14 = *(int *)(v13 + 32);
      __dst = &v8[v14];
      id v15 = &v9[v14];
      uint64_t v16 = type metadata accessor for Location();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
      {
        uint64_t v17 = sub_10017DF08(&qword_100E639E8);
        memcpy(__dst, v15, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(__dst, v15, v16);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v16);
      }
      uint64_t v19 = *(int *)(v13 + 36);
      long long v20 = &v8[v19];
      uint64_t v21 = &v9[v19];
      *(_OWORD *)long long v20 = *(_OWORD *)v21;
      v20[16] = v21[16];
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v18 = type metadata accessor for LocationOfInterest();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v8, v9, v18);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_15:
        swift_storeEnumTagMultiPayload();
        goto LABEL_16;
      }
      uint64_t v12 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v8, v9, v12);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_15;
  }
LABEL_16:
  uint64_t v22 = *(int *)(a3 + 20);
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = type metadata accessor for Location.Identifier();
  int v26 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v25);
  int v27 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25);
  if (!v26)
  {
    uint64_t v28 = *(void *)(v25 - 8);
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 40))(v23, v24, v25);
      goto LABEL_22;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v23, v25);
    goto LABEL_21;
  }
  if (v27)
  {
LABEL_21:
    uint64_t v29 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v23, v24, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_22;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
LABEL_22:
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1006E6BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006E6BFC);
}

uint64_t sub_1006E6BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for ToolbarSearchViewModel.State(0);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_5:
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  sub_10017DF08(&qword_100E6DC08);
  sub_100162F30();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_1006E6CB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006E6CC8);
}

void sub_1006E6CC8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for ToolbarSearchViewModel.State(0);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_10017DF08(&qword_100E6DC08);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return;
    }
    uint64_t v10 = v12;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

void sub_1006E6D7C()
{
  type metadata accessor for ToolbarSearchViewModel.State(319);
  if (v0 <= 0x3F)
  {
    sub_10000F990();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_1006E6E50(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        uint64_t v8 = a2[2];
        uint64_t v9 = a2[3];
        a1[2] = v8;
        a1[3] = v9;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_18;
      case 2u:
        uint64_t v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        swift_bridgeObjectRetain();
        goto LABEL_18;
      case 3u:
        uint64_t v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        swift_bridgeObjectRetain();
        uint64_t v13 = *(int *)(sub_10017DF08(&qword_100E8DA90) + 48);
        uint64_t v14 = (uint64_t *)((char *)a1 + v13);
        id v15 = (char *)a2 + v13;
        type metadata accessor for PreviewLocation();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v16 = type metadata accessor for LocationOfInterest();
            goto LABEL_11;
          case 2u:
            uint64_t v19 = *((void *)v15 + 1);
            uint64_t v33 = *(void **)v15;
            *uint64_t v14 = *(void *)v15;
            v14[1] = v19;
            uint64_t v20 = *((void *)v15 + 3);
            v14[2] = *((void *)v15 + 2);
            v14[3] = v20;
            uint64_t v21 = *((void *)v15 + 5);
            v14[4] = *((void *)v15 + 4);
            v14[5] = v21;
            v14[6] = *((void *)v15 + 6);
            uint64_t v22 = type metadata accessor for SearchLocation();
            uint64_t v23 = *(int *)(v22 + 32);
            __dst = (char *)v14 + v23;
            uint64_t v35 = v22;
            uint64_t v24 = &v15[v23];
            uint64_t v32 = type metadata accessor for Location();
            id v25 = v33;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v32))
            {
              uint64_t v26 = sub_10017DF08(&qword_100E639E8);
              memcpy(__dst, v24, *(void *)(*(void *)(v26 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(__dst, v24, v32);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v32);
            }
            uint64_t v28 = *(int *)(v35 + 36);
            uint64_t v29 = (char *)v14 + v28;
            uint64_t v30 = &v15[v28];
            *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
            v29[16] = v30[16];
            break;
          case 3u:
            *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
            uint64_t v27 = *((void *)v15 + 3);
            v14[2] = *((void *)v15 + 2);
            v14[3] = v27;
            swift_bridgeObjectRetain();
            break;
          default:
            uint64_t v16 = type metadata accessor for Location();
LABEL_11:
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
            break;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_18;
      case 4u:
        uint64_t v17 = a2[1];
        *a1 = *a2;
        a1[1] = v17;
        uint64_t v18 = a2[3];
        a1[2] = a2[2];
        a1[3] = v18;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_18:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1006E71E4(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 2:
      goto LABEL_6;
    case 3:
      swift_bridgeObjectRelease();
      uint64_t v3 = (id *)(a1 + *(int *)(sub_10017DF08(&qword_100E8DA90) + 48));
      type metadata accessor for PreviewLocation();
      uint64_t result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
          uint64_t v4 = type metadata accessor for Location();
          goto LABEL_10;
        case 1:
          uint64_t v4 = type metadata accessor for LocationOfInterest();
LABEL_10:
          int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
          uint64_t v6 = v4;
          uint64_t v7 = (uint64_t)v3;
          goto LABEL_11;
        case 2:

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v8 = (uint64_t)v3 + *(int *)(type metadata accessor for SearchLocation() + 32);
          uint64_t v9 = type metadata accessor for Location();
          uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v8, 1, v9);
          if (result) {
            return result;
          }
          int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
          uint64_t v7 = v8;
          uint64_t v6 = v9;
LABEL_11:
          uint64_t result = v5(v7, v6);
          break;
        case 3:
          goto LABEL_6;
        default:
          return result;
      }
      return result;
    case 4:
LABEL_5:
      swift_bridgeObjectRelease();
LABEL_6:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void *sub_1006E73C4(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      uint64_t v7 = a2[2];
      uint64_t v8 = a2[3];
      a1[2] = v7;
      a1[3] = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_16;
    case 2u:
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      swift_bridgeObjectRetain();
      goto LABEL_16;
    case 3u:
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      swift_bridgeObjectRetain();
      uint64_t v11 = *(int *)(sub_10017DF08(&qword_100E8DA90) + 48);
      uint64_t v12 = (void *)((char *)a1 + v11);
      uint64_t v13 = (char *)a2 + v11;
      type metadata accessor for PreviewLocation();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v14 = type metadata accessor for LocationOfInterest();
          goto LABEL_9;
        case 2u:
          uint64_t v17 = *((void *)v13 + 1);
          uint64_t v31 = *(void **)v13;
          *uint64_t v12 = *(void *)v13;
          v12[1] = v17;
          uint64_t v18 = *((void *)v13 + 3);
          _OWORD v12[2] = *((void *)v13 + 2);
          v12[3] = v18;
          uint64_t v19 = *((void *)v13 + 5);
          v12[4] = *((void *)v13 + 4);
          v12[5] = v19;
          v12[6] = *((void *)v13 + 6);
          uint64_t v20 = type metadata accessor for SearchLocation();
          uint64_t v21 = *(int *)(v20 + 32);
          __dst = (char *)v12 + v21;
          uint64_t v33 = v20;
          uint64_t v22 = &v13[v21];
          uint64_t v30 = type metadata accessor for Location();
          id v23 = v31;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v30))
          {
            uint64_t v24 = sub_10017DF08(&qword_100E639E8);
            memcpy(__dst, v22, *(void *)(*(void *)(v24 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(__dst, v22, v30);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v30);
          }
          uint64_t v26 = *(int *)(v33 + 36);
          uint64_t v27 = (char *)v12 + v26;
          uint64_t v28 = &v13[v26];
          *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
          v27[16] = v28[16];
          break;
        case 3u:
          *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
          uint64_t v25 = *((void *)v13 + 3);
          _OWORD v12[2] = *((void *)v13 + 2);
          v12[3] = v25;
          swift_bridgeObjectRetain();
          break;
        default:
          uint64_t v14 = type metadata accessor for Location();
LABEL_9:
          (*(void (**)(void *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
          break;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_16;
    case 4u:
      uint64_t v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      uint64_t v16 = a2[3];
      a1[2] = a2[2];
      a1[3] = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_16:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_1006E7714(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1006E5438((uint64_t)a1, (void (*)(void))type metadata accessor for ToolbarSearchViewModel.State);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_17;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_17;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        uint64_t v6 = *(int *)(sub_10017DF08(&qword_100E8DA90) + 48);
        uint64_t v7 = (void *)((char *)a1 + v6);
        uint64_t v8 = (char *)a2 + v6;
        type metadata accessor for PreviewLocation();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v9 = type metadata accessor for LocationOfInterest();
            goto LABEL_10;
          case 2u:
            uint64_t v21 = *(void **)v8;
            *uint64_t v7 = *(void *)v8;
            v7[1] = *((void *)v8 + 1);
            _OWORD v7[2] = *((void *)v8 + 2);
            v7[3] = *((void *)v8 + 3);
            v7[4] = *((void *)v8 + 4);
            v7[5] = *((void *)v8 + 5);
            v7[6] = *((void *)v8 + 6);
            uint64_t v10 = type metadata accessor for SearchLocation();
            uint64_t v11 = *(int *)(v10 + 32);
            __dst = (char *)v7 + v11;
            uint64_t v23 = v10;
            uint64_t v12 = &v8[v11];
            uint64_t v20 = type metadata accessor for Location();
            id v13 = v21;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v20))
            {
              uint64_t v14 = sub_10017DF08(&qword_100E639E8);
              memcpy(__dst, v12, *(void *)(*(void *)(v14 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(__dst, v12, v20);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v20);
            }
            uint64_t v15 = *(int *)(v23 + 36);
            uint64_t v16 = (char *)v7 + v15;
            uint64_t v17 = &v8[v15];
            long long v18 = *(_OWORD *)v17;
            unsigned char v16[16] = v17[16];
            *(_OWORD *)uint64_t v16 = v18;
            break;
          case 3u:
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
            _OWORD v7[2] = *((void *)v8 + 2);
            v7[3] = *((void *)v8 + 3);
            swift_bridgeObjectRetain();
            break;
          default:
            uint64_t v9 = type metadata accessor for Location();
LABEL_10:
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
            break;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_17;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}