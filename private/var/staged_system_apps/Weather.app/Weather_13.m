char *sub_10081B2AC(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      v8 = type metadata accessor for SearchLocation();
      v9 = *(int *)(v8 + 32);
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = type metadata accessor for Location();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
      {
        v13 = sub_10017DF08(&qword_100E639E8);
        memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
      }
      v15 = *(int *)(v8 + 36);
      v16 = &a1[v15];
      v17 = &a2[v15];
      *(_OWORD *)v16 = *(_OWORD *)v17;
      v16[16] = v17[16];
      goto LABEL_11;
    case 1:
      v14 = type metadata accessor for LocationOfInterest();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
      goto LABEL_11;
    case 0:
      v7 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_10081B4C8(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10081DEC4((uint64_t)a1, (void (*)(void))type metadata accessor for PreviewLocation);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        *(void *)a1 = *(void *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        uint64_t v8 = type metadata accessor for SearchLocation();
        uint64_t v9 = *(int *)(v8 + 32);
        v10 = &a1[v9];
        v11 = &a2[v9];
        uint64_t v12 = type metadata accessor for Location();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
        {
          uint64_t v13 = sub_10017DF08(&qword_100E639E8);
          memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
        }
        uint64_t v15 = *(int *)(v8 + 36);
        v16 = &a1[v15];
        v17 = &a2[v15];
        *(_OWORD *)v16 = *(_OWORD *)v17;
        v16[16] = v17[16];
        goto LABEL_12;
      case 1:
        uint64_t v14 = type metadata accessor for LocationOfInterest();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
        goto LABEL_12;
      case 0:
        uint64_t v7 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_12:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10081B708@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for LocationOfInterest();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PreviewLocation();
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_10012B938();
  sub_10081DF18(v3, v2);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) >= 2)
  {
    if (EnumCaseMultiPayload)
    {
      sub_1001627D4();
      v18();
      LocationOfInterest.location.getter();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
      uint64_t v13 = type metadata accessor for Location();
      uint64_t v14 = a1;
      uint64_t v15 = 0;
    }
    else
    {
      uint64_t v16 = type metadata accessor for Location();
      sub_100162E4C();
      sub_1001190D4();
      v17();
      uint64_t v14 = a1;
      uint64_t v15 = 0;
      uint64_t v13 = v16;
    }
  }
  else
  {
    sub_10081DEC4(v2, (void (*)(void))type metadata accessor for PreviewLocation);
    uint64_t v13 = type metadata accessor for Location();
    uint64_t v14 = a1;
    uint64_t v15 = 1;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v14, v15, 1, v13);
}

void sub_10081B8DC()
{
  sub_100165170();
  type metadata accessor for UUID();
  sub_100179C0C();
  v35[1] = v4;
  v35[2] = v3;
  __chkstk_darwin(v3);
  sub_100185A80(v5, v35[0]);
  uint64_t v6 = sub_10017DF08(&qword_100E639E8);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  uint64_t v36 = sub_100180500();
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_1001A0E98(v9, v35[0]);
  __chkstk_darwin(v10);
  uint64_t v38 = (uint64_t)v35 - v11;
  uint64_t v12 = type metadata accessor for LocationOfInterest();
  sub_100179C0C();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_10017FDD0();
  uint64_t v16 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  sub_100179CB8();
  type metadata accessor for PreviewLocation();
  sub_100162E4C();
  __chkstk_darwin(v20);
  sub_100162F18();
  uint64_t v21 = sub_100127BB0();
  sub_10081DF18(v21, v22);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1001627D4();
      v26();
      LocationOfInterest.location.getter();
      Location.id.getter();
      uint64_t v27 = sub_1001A0018();
      v28(v27);
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v0, v12);
      break;
    case 2u:
      uint64_t v29 = v38;
      sub_10081E00C(v2, v38);
      uint64_t v30 = v36;
      sub_1000EB4E0(v29 + *(int *)(v36 + 32), v1);
      if (_s7Weather24LocationCompositionStateOwet_0(v1, 1, v16) == 1)
      {
        sub_100178110(v1, &qword_100E639E8);
        uint64_t v31 = 0;
      }
      else
      {
        Location.id.getter();
        uint64_t v31 = v32;
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v1, v16);
      }
      uint64_t v33 = v37;
      sub_10081DF18(v29, v37);
      if (!v31)
      {
        if (*(unsigned char *)(v33 + *(int *)(v30 + 36) + 16))
        {
          UUID.init()();
          UUID.uuidString.getter();
          sub_100162F0C();
          v34();
        }
        else
        {
          CLLocationCoordinate2D.id.getter();
        }
      }
      sub_10081DEC4(v33, (void (*)(void))type metadata accessor for SearchLocation);
      sub_10081DEC4(v29, (void (*)(void))type metadata accessor for SearchLocation);
      break;
    case 3u:
      swift_bridgeObjectRelease();
      CLLocationCoordinate2D.id.getter();
      break;
    default:
      sub_100188BBC();
      sub_1001627D4();
      v23();
      Location.id.getter();
      uint64_t v24 = sub_1001A0018();
      v25(v24);
      break;
  }
  sub_100127BB0();
  sub_100179F2C();
}

uint64_t sub_10081BCB4()
{
  uint64_t v2 = sub_10017DF08(&qword_100E639E8);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  uint64_t v4 = sub_100180500();
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v22 = v6;
  type metadata accessor for LocationOfInterest();
  sub_100179C0C();
  __chkstk_darwin(v7);
  sub_100166B4C();
  uint64_t v8 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_100163770();
  type metadata accessor for PreviewLocation();
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_100162F18();
  sub_10081DF18(v0, v1);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1001627D4();
      v16();
      LocationOfInterest.location.getter();
      Location.name.getter();
      uint64_t v17 = sub_1001817EC();
      v18(v17);
      uint64_t v19 = sub_10017F594();
      v20(v19);
      break;
    case 2u:
      sub_10081E00C(v1, v22);
      sub_1000EB4E0(v22 + *(int *)(v4 + 32), v0);
      if (_s7Weather24LocationCompositionStateOwet_0(v0, 1, v8) == 1)
      {
        sub_100178110(v0, &qword_100E639E8);
        uint64_t v4 = 0;
      }
      else
      {
        uint64_t v4 = Location.name.getter();
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0, v8);
      }
      sub_10081DEC4(v22, (void (*)(void))type metadata accessor for SearchLocation);
      break;
    case 3u:
      if (*(void *)(v1 + 24)) {
        uint64_t v4 = *(void *)(v1 + 16);
      }
      else {
        uint64_t v4 = 0;
      }
      break;
    default:
      sub_100127BB0();
      sub_1001627D4();
      v13();
      Location.name.getter();
      uint64_t v14 = sub_1001817EC();
      v15(v14);
      break;
  }
  return v4;
}

void sub_10081BFBC()
{
  sub_100165170();
  uint64_t v30 = v0;
  uint64_t v2 = sub_10017DF08(&qword_100E639E8);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  uint64_t v28 = sub_100180500();
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_1001A0E98(v5, v27);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t v9 = type metadata accessor for LocationOfInterest();
  sub_100179C0C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_100163770();
  uint64_t v13 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  sub_1001A3494();
  sub_100162E4C();
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10081DF18(v30, (uint64_t)v19);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100188BBC();
      sub_1001627D4();
      v23();
      LocationOfInterest.location.getter();
      Location.coordinate.getter();
      uint64_t v24 = sub_100189458();
      v25(v24);
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v1, v9);
      break;
    case 2u:
      sub_10081E00C((uint64_t)v19, (uint64_t)v8);
      sub_1000EB4E0((uint64_t)&v8[*(int *)(v28 + 32)], v0);
      if (_s7Weather24LocationCompositionStateOwet_0(v0, 1, v13) == 1)
      {
        sub_100178110(v0, &qword_100E639E8);
      }
      else
      {
        Location.coordinate.getter();
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v0, v13);
      }
      uint64_t v26 = v29;
      sub_10081E00C((uint64_t)v8, v29);
      sub_10081DEC4(v26, (void (*)(void))type metadata accessor for SearchLocation);
      break;
    case 3u:
      swift_bridgeObjectRelease();
      break;
    default:
      sub_1001627D4();
      v20();
      Location.coordinate.getter();
      uint64_t v21 = sub_100189458();
      v22(v21);
      break;
  }
  sub_100179F2C();
}

uint64_t sub_10081C338(uint64_t a1, uint64_t a2)
{
  uint64_t v53 = a1;
  uint64_t v54 = a2;
  uint64_t v3 = type metadata accessor for SearchLocation();
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v49 = v5;
  type metadata accessor for LocationOfInterest();
  sub_100179C0C();
  uint64_t v50 = v7;
  uint64_t v51 = v6;
  __chkstk_darwin(v6);
  sub_100109314();
  v48[1] = v8;
  uint64_t v9 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v52 = v10;
  __chkstk_darwin(v11);
  sub_1001A3494();
  sub_100162E4C();
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)v48 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)v48 - v20;
  __chkstk_darwin(v19);
  v23 = (char *)v48 - v22;
  uint64_t v24 = sub_10017DF08(&qword_100E992C8);
  uint64_t v25 = sub_100109308(v24);
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v28 = (char *)v48 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = (uint64_t)&v28[*(int *)(v26 + 56)];
  sub_10081DF18(v53, (uint64_t)v28);
  sub_10081DF18(v54, v29);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10081DF18((uint64_t)v28, (uint64_t)v21);
      if (sub_1001872B4() != 1) {
        goto LABEL_18;
      }
      uint64_t v31 = v50;
      uint64_t v30 = v51;
      sub_1001627D4();
      v32();
      char v33 = static LocationOfInterest.== infix(_:_:)();
      v34 = *(void (**)(uint64_t))(v31 + 8);
      uint64_t v35 = sub_10017F594();
      v34(v35);
      ((void (*)(char *, uint64_t))v34)(v21, v30);
      goto LABEL_25;
    case 2u:
      sub_10081DF18((uint64_t)v28, (uint64_t)v18);
      if (sub_1001872B4() == 2)
      {
        uint64_t v36 = v49;
        sub_10081E00C(v29, v49);
        char v33 = static SearchLocation.__derived_struct_equals(_:_:)((uint64_t)v18, v36);
        sub_10081DEC4(v36, (void (*)(void))type metadata accessor for SearchLocation);
        sub_10081DEC4((uint64_t)v18, (void (*)(void))type metadata accessor for SearchLocation);
        goto LABEL_25;
      }
      sub_10081DEC4((uint64_t)v18, (void (*)(void))type metadata accessor for SearchLocation);
      goto LABEL_21;
    case 3u:
      sub_10081DF18((uint64_t)v28, (uint64_t)v15);
      uint64_t v38 = *((void *)v15 + 2);
      uint64_t v37 = *((void *)v15 + 3);
      if (sub_1001872B4() != 3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
      uint64_t v40 = *(void *)(v29 + 16);
      uint64_t v39 = *(void *)(v29 + 24);
      if ((static CLLocationCoordinate2D.== infix(_:_:)() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
      if (!v37)
      {
        if (!v39) {
          goto LABEL_33;
        }
LABEL_28:
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
      if (!v39) {
        goto LABEL_28;
      }
      if (v38 != v40 || v37 != v39)
      {
        char v42 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v42) {
          goto LABEL_33;
        }
LABEL_29:
        sub_10081DEC4((uint64_t)v28, (void (*)(void))type metadata accessor for PreviewLocation);
        goto LABEL_22;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_33:
      sub_10081DEC4((uint64_t)v28, (void (*)(void))type metadata accessor for PreviewLocation);
      char v33 = 1;
      return v33 & 1;
    default:
      sub_10081DF18((uint64_t)v28, (uint64_t)v23);
      if (sub_1001872B4())
      {
        sub_10017F594();
LABEL_18:
        sub_100162F0C();
        v43();
LABEL_21:
        sub_100178110((uint64_t)v28, &qword_100E992C8);
LABEL_22:
        char v33 = 0;
      }
      else
      {
        uint64_t v44 = v52;
        sub_1001627D4();
        v45();
        char v33 = static Location.== infix(_:_:)();
        v46 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
        v46(v2, v9);
        v46((uint64_t)v23, v9);
LABEL_25:
        sub_10081DEC4((uint64_t)v28, (void (*)(void))type metadata accessor for PreviewLocation);
      }
      return v33 & 1;
  }
}

void sub_10081C8AC()
{
  sub_100165170();
  sub_100162708();
  uint64_t v5 = type metadata accessor for SearchLocation();
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_100179CB8();
  uint64_t v7 = type metadata accessor for LocationOfInterest();
  sub_100179C0C();
  uint64_t v18 = v8;
  __chkstk_darwin(v9);
  sub_10012B938();
  uint64_t v10 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_100166B4C();
  type metadata accessor for PreviewLocation();
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_100109370();
  sub_10081DF18(v0, v4);
  sub_100127BB0();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1001627D4();
      v16();
      Hasher._combine(_:)(1uLL);
      sub_10081E168(&qword_100E992D0, (void (*)(uint64_t))&type metadata accessor for LocationOfInterest);
      dispatch thunk of Hashable.hash(into:)();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v2, v7);
      break;
    case 2u:
      sub_10081E00C(v4, v1);
      Hasher._combine(_:)(2uLL);
      SearchLocation.hash(into:)();
      sub_10081DEC4(v1, (void (*)(void))type metadata accessor for SearchLocation);
      break;
    case 3u:
      uint64_t v17 = *(void *)(v4 + 24);
      Hasher._combine(_:)(3uLL);
      CLLocationCoordinate2D.hash(into:)();
      if (v17)
      {
        Hasher._combine(_:)(1u);
        swift_bridgeObjectRetain();
        String.hash(into:)();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        Hasher._combine(_:)(0);
      }
      break;
    default:
      sub_1001627D4();
      v15();
      Hasher._combine(_:)(0);
      sub_10081E168(&qword_100E639A0, (void (*)(uint64_t))&type metadata accessor for Location);
      dispatch thunk of Hashable.hash(into:)();
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v3, v10);
      break;
  }
  sub_100179F2C();
}

Swift::Int sub_10081CBE0()
{
  return Hasher._finalize()();
}

Swift::Int sub_10081CC2C()
{
  return Hasher._finalize()();
}

void sub_10081CC68()
{
}

void sub_10081CC80()
{
}

uint64_t sub_10081CC98@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  v38[5] = type metadata accessor for SearchLocation();
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100185A80(v5, v38[0]);
  v38[6] = type metadata accessor for LocationOfInterest();
  sub_100179C0C();
  v38[3] = v6;
  __chkstk_darwin(v7);
  uint64_t v9 = sub_100163988(v8, v38[0]);
  sub_100179C0C();
  v38[2] = v10;
  __chkstk_darwin(v11);
  sub_100109370();
  uint64_t v12 = sub_10017DF08(&qword_100E992D8);
  sub_100179C0C();
  uint64_t v39 = v13;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for PreviewLocation();
  sub_100162E4C();
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1[3];
  char v42 = a1;
  sub_1001B1E64(a1, v21);
  sub_10081DF74();
  uint64_t v22 = v43;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v22)
  {
    uint64_t v26 = (uint64_t)v42;
  }
  else
  {
    v38[0] = v2;
    v38[1] = v9;
    uint64_t v23 = v39;
    uint64_t v24 = v40;
    v43 = v20;
    uint64_t v25 = v41;
    char v45 = 0;
    sub_10081DFC0();
    sub_100183230();
    uint64_t v28 = v23;
    uint64_t v29 = v25;
    switch((char)v44)
    {
      case 1:
        LOBYTE(v44) = 5;
        sub_10081E168(&qword_100E8B208, (void (*)(uint64_t))&type metadata accessor for LocationOfInterest);
        sub_1001A2E88();
        sub_100183230();
        sub_10017C938();
        v33();
        uint64_t v26 = (uint64_t)v42;
        uint64_t v31 = v43;
        sub_1001190D4();
        v34();
        uint64_t v29 = v41;
        break;
      case 2:
        LOBYTE(v44) = 2;
        sub_10081E168(&qword_100E709C8, (void (*)(uint64_t))type metadata accessor for SearchLocation);
        sub_1001A2E88();
        sub_100183230();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v16, v12);
        uint64_t v26 = (uint64_t)v42;
        uint64_t v31 = v43;
        sub_10081E00C(v24, (uint64_t)v43);
        break;
      case 3:
        type metadata accessor for CLLocationCoordinate2D(0);
        char v45 = 3;
        sub_10081E168(&qword_100E992F0, type metadata accessor for CLLocationCoordinate2D);
        sub_100183230();
        long long v35 = v44;
        sub_10017DF08(&qword_100E65F18);
        char v45 = 4;
        sub_10081E0B0(&qword_100E992F8);
        KeyedDecodingContainer.decode<A>(_:forKey:)();
        sub_10017C938();
        v36();
        uint64_t v26 = (uint64_t)v42;
        long long v37 = v44;
        uint64_t v31 = v43;
        _OWORD *v43 = v35;
        v31[1] = v37;
        break;
      default:
        uint64_t v40 = v17;
        LOBYTE(v44) = 1;
        sub_10081E168(&qword_100E6F9D0, (void (*)(uint64_t))&type metadata accessor for Location);
        sub_1001A2E88();
        sub_100183230();
        sub_10017C938();
        v30();
        uint64_t v26 = (uint64_t)v42;
        uint64_t v31 = v43;
        sub_1001190D4();
        v32();
        break;
    }
    swift_storeEnumTagMultiPayload();
    sub_10081E00C((uint64_t)v31, v29);
  }
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v26);
}

uint64_t sub_10081D260()
{
  sub_100162708();
  uint64_t v20 = type metadata accessor for SearchLocation();
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v22 = v5;
  type metadata accessor for LocationOfInterest();
  sub_100179C0C();
  __chkstk_darwin(v6);
  uint64_t v8 = sub_100163988(v7, v20);
  sub_100179C0C();
  uint64_t v21 = v9;
  __chkstk_darwin(v10);
  sub_10017FDD0();
  type metadata accessor for PreviewLocation();
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_100109370();
  sub_10017DF08(&qword_100E99300);
  sub_100179C0C();
  __chkstk_darwin(v12);
  sub_100162F18();
  sub_1001B1E64(v1, v1[3]);
  sub_10081DF74();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10081DF18(v24, v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100188BBC();
      sub_1001627D4();
      v14();
      sub_10081E064();
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      if (!v23)
      {
        sub_10081E168(&qword_100E8B2D0, (void (*)(uint64_t))&type metadata accessor for LocationOfInterest);
        sub_1001A2E88();
        KeyedEncodingContainer.encode<A>(_:forKey:)();
      }
      uint64_t v15 = sub_10017F594();
      v16(v15);
      sub_10018AAB0();
      goto LABEL_12;
    case 2u:
      sub_10081E00C(v3, v22);
      sub_10081E064();
      sub_100184BCC();
      if (!v2)
      {
        sub_10081E168(&qword_100E709F0, (void (*)(uint64_t))type metadata accessor for SearchLocation);
        sub_1001A2E88();
        KeyedEncodingContainer.encode<A>(_:forKey:)();
      }
      sub_10081DEC4(v22, (void (*)(void))type metadata accessor for SearchLocation);
      goto LABEL_11;
    case 3u:
      sub_10081E064();
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      if (!v23)
      {
        type metadata accessor for CLLocationCoordinate2D(0);
        sub_10081E168(&qword_100E99310, type metadata accessor for CLLocationCoordinate2D);
        sub_10019B640();
        KeyedEncodingContainer.encode<A>(_:forKey:)();
        sub_10017DF08(&qword_100E65F18);
        sub_10081E0B0((unint64_t *)&qword_100E99318);
        sub_10019B640();
        KeyedEncodingContainer.encode<A>(_:forKey:)();
      }
      sub_10018AAB0();
      sub_100162F0C();
      v19();
      return swift_bridgeObjectRelease();
    default:
      sub_100188BBC();
      sub_1001627D4();
      v13();
      sub_10081E064();
      sub_100184BCC();
      if (!v2)
      {
        sub_10081E168(&qword_100E6F9F8, (void (*)(uint64_t))&type metadata accessor for Location);
        sub_1001A2E88();
        KeyedEncodingContainer.encode<A>(_:forKey:)();
      }
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v0, v8);
LABEL_11:
      sub_10018AAB0();
LABEL_12:
      sub_100162F0C();
      return v17();
  }
}

unint64_t sub_10081D7E4(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E07F88, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 6) {
    return 6;
  }
  else {
    return v3;
  }
}

uint64_t sub_10081D834(char a1)
{
  uint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 2:
      uint64_t result = sub_1001A0E74();
      break;
    case 3:
      uint64_t result = 0x616E6964726F6F63;
      break;
    case 4:
      uint64_t result = 1701667182;
      break;
    case 5:
      uint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10081D8E0(char a1)
{
  unint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 2:
      unint64_t result = 0x6F4C686372616573;
      break;
    case 3:
      unint64_t result = 0x616E6964726F6F63;
      break;
    case 4:
      unint64_t result = 1701667182;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10081D9AC(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E08038, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

uint64_t sub_10081D9F8(char a1)
{
  uint64_t result = 0x6E6F697461636F6CLL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0xD000000000000012;
      break;
    case 2:
      uint64_t result = sub_1001A0E74();
      break;
    case 3:
      uint64_t result = 0x616E6964726F6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10081DA80()
{
  return sub_10088B0E8();
}

Swift::Int sub_10081DA8C()
{
  return sub_100652794(*v0);
}

uint64_t sub_10081DA94()
{
  return sub_1002C2D90();
}

Swift::Int sub_10081DA9C(uint64_t a1)
{
  return sub_1002C4434(a1, *v1);
}

unint64_t sub_10081DAA4@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10081D7E4(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10081DAD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10081D834(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_10081DB00()
{
  return sub_10081D8E0(*v0);
}

uint64_t sub_10081DB08@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10081D830(a1);
  *a2 = result;
  return result;
}

uint64_t sub_10081DB30(uint64_t a1)
{
  unint64_t v2 = sub_10081DF74();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10081DB6C(uint64_t a1)
{
  unint64_t v2 = sub_10081DF74();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10081DBA8()
{
  return sub_10088AFDC();
}

Swift::Int sub_10081DBB4()
{
  return sub_1006527AC(*v0);
}

uint64_t sub_10081DBBC()
{
  return sub_1002C2CFC();
}

Swift::Int sub_10081DBC4(uint64_t a1)
{
  return sub_1002C444C(a1, *v1);
}

unint64_t sub_10081DBCC@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10081D9AC(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10081DBFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10081D9F8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10081DC28()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_10081DC88()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_10081DCD8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10081CC98(a1, a2);
}

uint64_t sub_10081DCF0()
{
  return sub_10081D260();
}

uint64_t sub_10081DD08@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = sub_10017DF08(&qword_100E99320);
  a1[4] = sub_10081E114();
  sub_100170694(a1);
  type metadata accessor for PreviewLocation();
  return ShortDescription.init(name:_:)();
}

uint64_t sub_10081DDB0@<X0>(uint64_t *a1@<X8>)
{
  return sub_10081DD08(a1);
}

uint64_t sub_10081DDC8()
{
  sub_10081E168(&qword_100E99330, (void (*)(uint64_t))type metadata accessor for PreviewLocation);

  return ShortDescribable.description.getter();
}

uint64_t sub_10081DE34()
{
  return sub_10081E168(&qword_100E992B8, (void (*)(uint64_t))type metadata accessor for PreviewLocation);
}

uint64_t sub_10081DE7C()
{
  return sub_10081E168(&qword_100E992C0, (void (*)(uint64_t))type metadata accessor for PreviewLocation);
}

uint64_t sub_10081DEC4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_10081DF18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100162708();
  v5(v4);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(a2, v2);
  return a2;
}

unint64_t sub_10081DF74()
{
  unint64_t result = qword_100E992E0;
  if (!qword_100E992E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E992E0);
  }
  return result;
}

unint64_t sub_10081DFC0()
{
  unint64_t result = qword_100E992E8;
  if (!qword_100E992E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E992E8);
  }
  return result;
}

uint64_t sub_10081E00C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100162708();
  v4(v3);
  sub_100162E4C();
  sub_1001190D4();
  v5();
  return a2;
}

unint64_t sub_10081E064()
{
  unint64_t result = qword_100E99308;
  if (!qword_100E99308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99308);
  }
  return result;
}

uint64_t sub_10081E0B0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(&qword_100E65F18);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10081E114()
{
  unint64_t result = qword_100E99328;
  if (!qword_100E99328)
  {
    sub_10018C6DC(&qword_100E99320);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99328);
  }
  return result;
}

uint64_t sub_10081E168(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PreviewLocation.CodingType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10081E27CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PreviewLocation.CodingType()
{
  return &type metadata for PreviewLocation.CodingType;
}

unsigned char *storeEnumTagSinglePayload for PreviewLocation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10081E380);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PreviewLocation.CodingKeys()
{
  return &type metadata for PreviewLocation.CodingKeys;
}

unint64_t sub_10081E3BC()
{
  unint64_t result = qword_100E99338;
  if (!qword_100E99338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99338);
  }
  return result;
}

unint64_t sub_10081E40C()
{
  unint64_t result = qword_100E99340;
  if (!qword_100E99340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99340);
  }
  return result;
}

unint64_t sub_10081E45C()
{
  unint64_t result = qword_100E99348;
  if (!qword_100E99348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99348);
  }
  return result;
}

unint64_t sub_10081E4AC()
{
  unint64_t result = qword_100E99350;
  if (!qword_100E99350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99350);
  }
  return result;
}

unint64_t sub_10081E4F8()
{
  unint64_t result = qword_100E99358;
  if (!qword_100E99358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99358);
  }
  return result;
}

char *sub_10081E544(uint64_t a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = (char *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *(void *)unsigned int v4 = *a2;
    unsigned int v4 = (char *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = a3[5];
    uint64_t v9 = &v4[v8];
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = type metadata accessor for ChartProxy();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = &v4[v12];
    uint64_t v14 = (uint64_t)a2 + v12;
    uint64_t v15 = type metadata accessor for GeometryProxy();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = &v4[v16];
    uint64_t v18 = (uint64_t)a2 + v16;
    uint64_t v19 = type metadata accessor for Date();
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
    v20(v17, v18, v19);
    v20(&v4[a3[8]], (uint64_t)a2 + a3[8], v19);
    uint64_t v21 = a3[9];
    uint64_t v22 = a3[10];
    uint64_t v23 = &v4[v21];
    uint64_t v24 = (uint64_t)a2 + v21;
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    v23[16] = *(unsigned char *)(v24 + 16);
    uint64_t v25 = &v4[v22];
    uint64_t v26 = (uint64_t *)((char *)a2 + v22);
    sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = type metadata accessor for LayoutDirection();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      *(void *)uint64_t v25 = *v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_10081E7BC(uint64_t a1, int *a2)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for ChartProxy();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = type metadata accessor for GeometryProxy();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + a2[7];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(a1 + a2[8], v9);
  uint64_t v11 = a1 + a2[10];
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for LayoutDirection();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
    return v13(v11, v12);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_10081E964(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for ChartProxy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for GeometryProxy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = type metadata accessor for Date();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
  v19(v16, v17, v18);
  v19(a1 + a3[8], a2 + a3[8], v18);
  uint64_t v20 = a3[9];
  uint64_t v21 = a3[10];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(unsigned char *)(v22 + 16) = *(unsigned char *)(v23 + 16);
  uint64_t v24 = (void *)(a1 + v21);
  uint64_t v25 = (void *)(a2 + v21);
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v26 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  }
  else
  {
    *uint64_t v24 = *v25;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *sub_10081EB7C(uint64_t *a1, uint64_t *a2, int *a3)
{
  sub_1000C1E18(a1, a2);
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ChartProxy();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for GeometryProxy();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24);
  v18(v15, v16, v17);
  v18((char *)a1 + a3[8], (char *)a2 + a3[8], v17);
  uint64_t v19 = a3[9];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  long long v22 = *(_OWORD *)v21;
  v20[16] = v21[16];
  *(_OWORD *)uint64_t v20 = v22;
  if (a1 != a2)
  {
    uint64_t v23 = a3[10];
    uint64_t v24 = (uint64_t *)((char *)a1 + v23);
    uint64_t v25 = (uint64_t *)((char *)a2 + v23);
    sub_10017DF4C((uint64_t)a1 + v23, &qword_100E62CB8);
    sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      *uint64_t v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10081ED80(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for ChartProxy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for GeometryProxy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = type metadata accessor for Date();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32);
  v19(v16, v17, v18);
  v19(a1 + a3[8], a2 + a3[8], v18);
  uint64_t v20 = a3[9];
  uint64_t v21 = a3[10];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(unsigned char *)(v22 + 16) = *(unsigned char *)(v23 + 16);
  uint64_t v24 = (void *)(a1 + v21);
  uint64_t v25 = (const void *)(a2 + v21);
  uint64_t v26 = sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v27 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v27 - 8) + 32))(v24, v25, v27);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10081EF84(uint64_t a1, uint64_t a2, int *a3)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for ChartProxy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for GeometryProxy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = type metadata accessor for Date();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40);
  v19(v16, v17, v18);
  v19(a1 + a3[8], a2 + a3[8], v18);
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *(unsigned char *)(v21 + 16) = *(unsigned char *)(v22 + 16);
  if (a1 != a2)
  {
    uint64_t v23 = a3[10];
    uint64_t v24 = (void *)(a1 + v23);
    uint64_t v25 = (const void *)(a2 + v23);
    sub_10017DF4C(a1 + v23, &qword_100E62CB8);
    uint64_t v26 = sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v27 - 8) + 32))(v24, v25, v27);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10081F1A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10081F1BC);
}

uint64_t sub_10081F1BC(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    type metadata accessor for ChartProxy();
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a3[5];
    }
    else
    {
      type metadata accessor for GeometryProxy();
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a2)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a3[6];
      }
      else
      {
        type metadata accessor for Date();
        sub_100162F30();
        if (*(_DWORD *)(v15 + 84) == a2)
        {
          uint64_t v10 = v14;
          uint64_t v11 = a3[7];
        }
        else
        {
          uint64_t v10 = sub_10017DF08(&qword_100E63BF0);
          uint64_t v11 = a3[10];
        }
      }
    }
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v11, a2, v10);
  }
}

uint64_t sub_10081F2B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10081F2C8);
}

uint64_t sub_10081F2C8(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    type metadata accessor for ChartProxy();
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[5];
    }
    else
    {
      type metadata accessor for GeometryProxy();
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[6];
      }
      else
      {
        type metadata accessor for Date();
        sub_100162F30();
        if (*(_DWORD *)(v15 + 84) == a3)
        {
          uint64_t v10 = v14;
          uint64_t v11 = a4[7];
        }
        else
        {
          uint64_t v10 = sub_10017DF08(&qword_100E63BF0);
          uint64_t v11 = a4[10];
        }
      }
    }
    return _s7Weather24LocationCompositionStateOwst_0(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for LollipopChartOverlayView()
{
  uint64_t result = qword_100E993B8;
  if (!qword_100E993B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10081F404()
{
  type metadata accessor for ChartProxy();
  if (v0 <= 0x3F)
  {
    type metadata accessor for GeometryProxy();
    if (v1 <= 0x3F)
    {
      type metadata accessor for Date();
      if (v2 <= 0x3F)
      {
        sub_10000CE24();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t sub_10081F55C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10081F578@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v35 = a1;
  type metadata accessor for ChartDragGestureRecognizerRepresentable();
  sub_100179C0C();
  uint64_t v33 = v3;
  uint64_t v34 = v4;
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v32 = v6 - v5;
  type metadata accessor for LocalCoordinateSpace();
  sub_100179C0C();
  uint64_t v28 = v7;
  uint64_t v29 = v8;
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v9 = type metadata accessor for LollipopChartOverlayView();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E99408);
  sub_100179C0C();
  uint64_t v30 = v13;
  uint64_t v31 = v14;
  __chkstk_darwin(v13);
  sub_1001626E0();
  v27[1] = v16 - v15;
  uint64_t v36 = static Color.clear.getter();
  LOWORD(v37) = 256;
  BYTE2(v37) = 0;
  sub_10081FF0C(v2, (uint64_t)v12);
  unint64_t v17 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v18 = swift_allocObject();
  sub_10081FF74((uint64_t)v12, v18 + v17);
  static CoordinateSpaceProtocol<>.local.getter();
  uint64_t v19 = sub_10017DF08(&qword_100E930C0);
  unint64_t v20 = sub_100780AFC();
  uint64_t v21 = v28;
  View.onContinuousHover<A>(coordinateSpace:perform:)();
  swift_release();
  sub_100162F0C();
  v22();
  swift_release();
  sub_10081FF0C(v27[0], (uint64_t)v12);
  uint64_t v23 = swift_allocObject();
  sub_10081FF74((uint64_t)v12, v23 + v17);
  ChartDragGestureRecognizerRepresentable.init(isRecognizedHandler:)();
  uint64_t v36 = v19;
  uint64_t v37 = v21;
  unint64_t v38 = v20;
  uint64_t v39 = &protocol witness table for LocalCoordinateSpace;
  swift_getOpaqueTypeConformance2();
  sub_10082005C(&qword_100E930D0, (void (*)(uint64_t))&type metadata accessor for ChartDragGestureRecognizerRepresentable);
  View.gestureRecognizer<A>(_:)();
  sub_100162F0C();
  v24();
  sub_100162F0C();
  return v25();
}

uint64_t sub_10081F908()
{
  uint64_t v57 = type metadata accessor for DetailHeroChartLollipopPosition(0);
  __chkstk_darwin(v57);
  v56 = (double *)((char *)&v48 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v2 = type metadata accessor for LayoutDirection();
  uint64_t v54 = *(void *)(v2 - 8);
  uint64_t v55 = v2;
  __chkstk_darwin(v2);
  uint64_t v53 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v58 = (char *)&v48 - v12;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v48 - v14;
  uint64_t v16 = type metadata accessor for LollipopChartOverlayView();
  v59 = v0;
  ChartProxy.plotAreaFrame.getter();
  type metadata accessor for CGRect(0);
  GeometryProxy.subscript.getter();
  swift_release();
  ChartProxy.value<A>(atX:as:)();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7) == 1) {
    return sub_10017DF4C((uint64_t)v6, (uint64_t *)&unk_100E73CA0);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v15, v6, v7);
  uint64_t v18 = ChartProxy.yDomain<A>(dataType:)();
  if (*(void *)(v18 + 16))
  {
    uint64_t v19 = *(void *)(v18 + 32);
    uint64_t v20 = sub_100304240(v18);
    char v22 = v21;
    swift_bridgeObjectRelease();
    if (v22)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v15, v7);
    }
    else
    {
      uint64_t v23 = (char *)v59 + *(int *)(v16 + 32);
      sub_10082005C((unint64_t *)&qword_100E66CC0, (void (*)(uint64_t))&type metadata accessor for Date);
      char v24 = dispatch thunk of static Comparable.< infix(_:_:)();
      uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      uint64_t v51 = v20;
      uint64_t v52 = v8 + 16;
      if (v24)
      {
        uint64_t v26 = v10;
        uint64_t v27 = v23;
      }
      else
      {
        uint64_t v26 = v10;
        uint64_t v27 = v15;
      }
      uint64_t v28 = v25;
      v25(v26, v27, v7);
      uint64_t v29 = v58;
      uint64_t v30 = (char *)v59 + *(int *)(v16 + 28);
      if (dispatch thunk of static Comparable.>= infix(_:_:)())
      {
        uint64_t v31 = v29;
        uint64_t v32 = v30;
      }
      else
      {
        uint64_t v31 = v29;
        uint64_t v32 = v10;
      }
      v28(v31, v32, v7);
      uint64_t v33 = v10;
      uint64_t v34 = *(void (**)(char *, uint64_t))(v8 + 8);
      v34(v33, v7);
      uint64_t v35 = ChartProxy.position<A>(forX:)();
      if (v36)
      {
        v34(v29, v7);
        return ((uint64_t (*)(char *, uint64_t))v34)(v15, v7);
      }
      else
      {
        uint64_t v49 = v34;
        uint64_t v50 = v28;
        double v37 = *(double *)&v35;
        unint64_t v38 = v53;
        sub_1001FF23C();
        uint64_t v40 = v54;
        uint64_t v39 = v55;
        int v41 = (*(uint64_t (**)(char *, uint64_t))(v54 + 88))(v38, v55);
        int v42 = enum case for LayoutDirection.rightToLeft(_:);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v39);
        if (v41 == v42)
        {
          ChartProxy.plotAreaSize.getter();
          double v37 = v43 - v37;
        }
        sub_1001B1E64(v59, v59[3]);
        char v45 = v56;
        uint64_t v44 = v57;
        v46 = v58;
        v50((char *)v56 + *(int *)(v57 + 20), v58, v7);
        *char v45 = v37;
        *(void *)((char *)v45 + *(int *)(v44 + 24)) = v19;
        *(void *)((char *)v45 + *(int *)(v44 + 28)) = v51;
        sub_100766380((uint64_t)v45);
        sub_1003B2B44((uint64_t)v45);
        v47 = (uint64_t (*)(char *, uint64_t))v49;
        v49(v46, v7);
        return v47(v15, v7);
      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v15, v7);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10081FEC0(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  if ((a3 & 1) == 0) {
    return sub_10081F908();
  }
  sub_1001B1E64(a4, a4[3]);
  return sub_100766480();
}

uint64_t sub_10081FF0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LollipopChartOverlayView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10081FF74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LollipopChartOverlayView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10081FFE0(uint64_t a1, uint64_t a2, char a3)
{
  char v6 = a3 & 1;
  uint64_t v7 = *(void *)(type metadata accessor for LollipopChartOverlayView() - 8);
  return sub_10081FEC0(a1, a2, v6, (void *)(v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))));
}

uint64_t sub_10082005C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1008200A4()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_10082019C(char a1, char a2, uint64_t a3)
{
  uint64_t v94 = a3;
  uint64_t v6 = type metadata accessor for TipPriorityQueue.GridEntry();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100162EF8();
  uint64_t v93 = v8;
  __chkstk_darwin(v9);
  uint64_t v92 = (uint64_t)&v71 - v10;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v71 - v12;
  uint64_t v14 = sub_10017DF08(&qword_100E64E80);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_10008B8C0();
  uint64_t v16 = type metadata accessor for LocationComponentViewModel();
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  char v22 = (char *)&v71 - v21;
  uint64_t v23 = sub_10017DF08(&qword_100E6CCD8);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100162EF8();
  uint64_t v91 = v25;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v71 - v27;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v71 - v30;
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v71 - v33;
  if (a1)
  {
    if (a1 == 1)
    {
      if (a2)
      {
        uint64_t v35 = &qword_100E997E0;
        goto LABEL_11;
      }
    }
    else if (a2)
    {
      uint64_t v35 = &qword_100E99BB0;
      goto LABEL_11;
    }
    uint64_t v35 = &qword_100E999C8;
  }
  else if (a2)
  {
    uint64_t v35 = &qword_100E99410;
  }
  else
  {
    uint64_t v35 = &qword_100E995F8;
  }
LABEL_11:
  char v36 = *((unsigned char *)v35 + 224);
  uint64_t v37 = *v35;
  uint64_t v77 = v35[1];
  uint64_t v78 = v37;
  uint64_t v76 = v35[2];
  uint64_t v75 = v35[3];
  uint64_t v38 = v35[8];
  uint64_t v81 = v35[9];
  uint64_t v82 = v38;
  uint64_t v39 = v35[10];
  uint64_t v79 = v35[11];
  uint64_t v80 = v39;
  uint64_t v74 = v35[24];
  uint64_t v73 = v35[25];
  uint64_t v72 = v35[26];
  uint64_t v71 = v35[27];
  uint64_t v40 = v35[49];
  uint64_t v85 = v35[50];
  uint64_t v86 = v40;
  uint64_t v41 = v35[51];
  uint64_t v83 = v35[52];
  uint64_t v84 = v41;
  uint64_t v42 = v35[57];
  uint64_t v89 = v35[58];
  uint64_t v90 = v42;
  uint64_t v43 = v94 + OBJC_IVAR____TtCV7Weather18DefaultNewsContent8_Storage_map;
  uint64_t v45 = v35[59];
  uint64_t v44 = v35[60];
  uint64_t v87 = v45;
  uint64_t v88 = v44;
  swift_beginAccess();
  sub_10006DF38(v43, v3, &qword_100E64E80);
  uint64_t v46 = type metadata accessor for LocationComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0(v3, 1, v46) == 1)
  {
    sub_1001781AC(v3, &qword_100E64E80);
LABEL_16:
    uint64_t v47 = 1;
    goto LABEL_17;
  }
  sub_10031F6A8(v3 + *(int *)(v46 + 20), (uint64_t)v19, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  sub_10031F75C(v3, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_10031F6FC((uint64_t)v19, (uint64_t)v22, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  if (v36)
  {
    sub_10031F75C((uint64_t)v22, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    goto LABEL_16;
  }
  sub_10031F6FC((uint64_t)v22, (uint64_t)v31, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v47 = 0;
  uint64_t v48 = &v31[*(int *)(v6 + 20)];
  uint64_t v49 = v73;
  *(void *)uint64_t v48 = v74;
  *((void *)v48 + 1) = v49;
  uint64_t v50 = v71;
  *((void *)v48 + 2) = v72;
  *((void *)v48 + 3) = v50;
LABEL_17:
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, v47, 1, v6);
  sub_10031F640((uint64_t)v31, (uint64_t)v34);
  sub_10031F6A8(v94 + *(int *)(v46 + 20) + OBJC_IVAR____TtCV7Weather18DefaultNewsContent8_Storage_airQuality, (uint64_t)v28, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v51 = &v28[*(int *)(v6 + 20)];
  uint64_t v52 = v77;
  *(void *)uint64_t v51 = v78;
  *((void *)v51 + 1) = v52;
  uint64_t v53 = v75;
  *((void *)v51 + 2) = v76;
  *((void *)v51 + 3) = v53;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v6);
  uint64_t v54 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  sub_10031F6A8(v54, (uint64_t)v13, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v55 = &v13[*(int *)(v6 + 20)];
  uint64_t v56 = v81;
  *(void *)uint64_t v55 = v82;
  *((void *)v55 + 1) = v56;
  uint64_t v57 = v79;
  *((void *)v55 + 2) = v80;
  *((void *)v55 + 3) = v57;
  uint64_t v58 = v91;
  sub_10006DF38((uint64_t)v34, v91, &qword_100E6CCD8);
  uint64_t v59 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  uint64_t v60 = v92;
  sub_10031F6A8(v59, v92, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  v61 = (uint64_t *)(v60 + *(int *)(v6 + 20));
  uint64_t v62 = v85;
  uint64_t *v61 = v86;
  v61[1] = v62;
  uint64_t v63 = v83;
  v61[2] = v84;
  v61[3] = v63;
  uint64_t v64 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  uint64_t v65 = v93;
  sub_10031F6A8(v64, v93, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  v66 = (uint64_t *)(v65 + *(int *)(v6 + 20));
  uint64_t v67 = v89;
  uint64_t *v66 = v90;
  v66[1] = v67;
  uint64_t v68 = v88;
  v66[2] = v87;
  v66[3] = v68;
  v69 = sub_100AD6D18((uint64_t)v28, (uint64_t)v13, v58, v60, v65);
  sub_1001781AC((uint64_t)v34, &qword_100E6CCD8);
  return v69;
}

uint64_t sub_100820778(uint64_t a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E64E80);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_10008B8C0();
  uint64_t v10 = a1 + OBJC_IVAR____TtCV7Weather18DefaultNewsContent8_Storage_map;
  swift_beginAccess();
  sub_10006DF38(v10, v7, &qword_100E64E80);
  uint64_t v106 = a1;
  if (_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8) == 1)
  {
    sub_1001781AC(v7, &qword_100E64E80);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C367B0;
    sub_10017DF08(&qword_100E6CCD0);
    unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v13 = *(void *)(v9 + 72);
    uint64_t v14 = (__n128 *)swift_allocObject();
    uint64_t v15 = sub_100183900(v14, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather18DefaultNewsContent8_Storage_newsArticle, (uint64_t)v15 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 40) = v16;
    *(void *)(v11 + 48) = v17;
    uint64_t v18 = (__n128 *)swift_allocObject();
    sub_100163264(v18);
    sub_10031F6A8(v19 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v20, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 64) = v21;
    *(void *)(v11 + 72) = v22;
    uint64_t v23 = (__n128 *)sub_100163204();
    sub_100163264(v23);
    sub_10031F6A8(v24 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v25, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 88) = v26;
    *(void *)(v11 + 96) = v27;
    uint64_t v28 = sub_100163204();
    *(_OWORD *)(v28 + 16) = v107;
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather18DefaultNewsContent8_Storage_airQuality, v28 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC(v28);
    *(void *)(v11 + 112) = v29;
    *(void *)(v11 + 120) = v30;
    uint64_t v31 = v13;
    uint64_t v32 = (__n128 *)swift_allocObject();
    uint64_t v33 = (char *)sub_100183900(v32, (__n128)xmmword_100C25ED0) + v12;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
    sub_1001859A8((uint64_t)&v33[v31], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset);
    *(void *)(v11 + 128) = sub_1001F24CC((uint64_t)v32);
    *(void *)(v11 + 136) = v34;
    *(void *)(v11 + 144) = v35;
    char v36 = (__n128 *)swift_allocObject();
    sub_10016324C(v36);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_1001859A8((uint64_t)&v33[v31], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v32);
    *(void *)(v11 + 160) = v37;
    *(void *)(v11 + 168) = v38;
    uint64_t v39 = (__n128 *)swift_allocObject();
    sub_10016324C(v39);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_1001859A8((uint64_t)&v33[v31], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v32);
    *(void *)(v11 + 184) = v40;
    *(void *)(v11 + 192) = v41;
    uint64_t v42 = sub_100163204();
    *(_OWORD *)(v42 + 16) = v107;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_1001859A8(v42 + v12 + v31, OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure);
    *(void *)(v11 + 200) = sub_1001F24CC(v42);
    *(void *)(v11 + 208) = v43;
    *(void *)(v11 + 216) = v44;
    uint64_t v45 = (__n128 *)swift_allocObject();
    sub_100179F48(v45);
    uint64_t v47 = v46 + v12;
    uint64_t v48 = *(void *)(a1 + 16);
    sub_10031F6A8(v48 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v46 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v48 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v47 + v31, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 224) = sub_1001F24CC((uint64_t)v45);
    *(void *)(v11 + 232) = v49;
    *(void *)(v11 + 240) = v50;
  }
  else
  {
    sub_10031F6FC(v7, v1, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C28110;
    sub_10017DF08(&qword_100E6CCD0);
    uint64_t v105 = *(void *)(v9 + 72);
    uint64_t v104 = v1;
    unint64_t v51 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v52 = (__n128 *)swift_allocObject();
    uint64_t v53 = sub_100183900(v52, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather18DefaultNewsContent8_Storage_newsArticle, (uint64_t)v53 + v51, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v52);
    *(void *)(v11 + 40) = v54;
    *(void *)(v11 + 48) = v55;
    uint64_t v56 = (__n128 *)sub_10017C984();
    sub_10017E198(v56);
    sub_10031F6A8(v57 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v58, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC((uint64_t)v52);
    *(void *)(v11 + 64) = v59;
    *(void *)(v11 + 72) = v60;
    v61 = (__n128 *)sub_10017C984();
    sub_10017E198(v61);
    sub_10031F6A8(v62 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v63, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC((uint64_t)v52);
    *(void *)(v11 + 88) = v64;
    *(void *)(v11 + 96) = v65;
    uint64_t v66 = sub_10017C984();
    *(_OWORD *)(v66 + 16) = v107;
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather18DefaultNewsContent8_Storage_airQuality, v66 + v51, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC(v66);
    *(void *)(v11 + 112) = v67;
    *(void *)(v11 + 120) = v68;
    uint64_t v69 = sub_10017C984();
    *(_OWORD *)(v69 + 16) = v107;
    sub_10031F6A8(v1, v69 + v51, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 128) = sub_1001F24CC(v69);
    *(void *)(v11 + 136) = v70;
    *(void *)(v11 + 144) = v71;
    uint64_t v72 = (__n128 *)swift_allocObject();
    uint64_t v73 = (char *)sub_100183900(v72, (__n128)xmmword_100C25ED0) + v51;
    uint64_t v74 = a1;
    uint64_t v75 = *(void *)(a1 + 16);
    uint64_t v76 = v74;
    sub_10031F6A8(v75 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v73, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v75 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v73[v105], (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v72);
    *(void *)(v11 + 160) = v77;
    *(void *)(v11 + 168) = v78;
    uint64_t v79 = (__n128 *)swift_allocObject();
    sub_100179F48(v79);
    uint64_t v81 = v80 + v51;
    uint64_t v82 = *(void *)(v76 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_10031F6A8(v82 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, v81 + v105, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v79);
    *(void *)(v11 + 184) = v83;
    *(void *)(v11 + 192) = v84;
    uint64_t v85 = (__n128 *)swift_allocObject();
    sub_100179F48(v85);
    uint64_t v87 = v86 + v51;
    uint64_t v88 = *(void *)(v106 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_10031F6A8(v88 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, v87 + v105, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 200) = sub_1001F24CC((uint64_t)v85);
    *(void *)(v11 + 208) = v89;
    *(void *)(v11 + 216) = v90;
    uint64_t v91 = (__n128 *)swift_allocObject();
    sub_100179F48(v91);
    uint64_t v93 = v92 + v51;
    uint64_t v94 = *(void *)(v106 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_10031F6A8(v94 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, v93 + v105, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 224) = sub_1001F24CC((uint64_t)v91);
    *(void *)(v11 + 232) = v95;
    *(void *)(v11 + 240) = v96;
    v97 = (__n128 *)swift_allocObject();
    sub_100179F48(v97);
    uint64_t v99 = v98 + v51;
    uint64_t v100 = *(void *)(v106 + 16);
    sub_10031F6A8(v100 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v98 + v51, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v100 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v99 + v105, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 248) = sub_1001F24CC((uint64_t)v97);
    *(void *)(v11 + 256) = v101;
    *(void *)(v11 + 264) = v102;
    sub_10031F75C(v104, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  }
  return v11;
}

void sub_100820FE4(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100162E4C();
  uint64_t v6 = __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  uint64_t v7 = type metadata accessor for LocationViewComponent();
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_10017DF08(&qword_100E64E80);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = swift_retain();
  sub_1006E2E94(v17, a2);
  swift_release();
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather32LocationDefaultNewsConfiguration8_Storage_map, v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v11);
  sub_10031F75C(v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  _s7Weather24LocationCompositionStateOwst_0(v16, 0, 1, v4);
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather32LocationDefaultNewsConfiguration8_Storage_airQuality, v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v11);
  sub_10031F75C(v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather32LocationDefaultNewsConfiguration8_Storage_newsArticle, v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v11);
  sub_10031F75C(v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_1002C4FAC();
}

void *sub_100821210(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      uint64_t v8 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v9 = v8[5];
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
      {
        uint64_t v13 = sub_10017DF08(&qword_100E749B0);
        memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
      }
      uint64_t v15 = v8[6];
      uint64_t v16 = (void *)((char *)a1 + v15);
      uint64_t v17 = (void *)((char *)a2 + v15);
      uint64_t v18 = v17[1];
      void *v16 = *v17;
      v16[1] = v18;
      uint64_t v19 = v8[7];
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      v22(v20, v21, v12);
      uint64_t v23 = v8[8];
      uint64_t v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v23, 1, v12))
      {
        uint64_t v26 = sub_10017DF08(&qword_100E749B0);
        memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        v22(v24, v25, v12);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v12);
      }
      *((unsigned char *)a1 + v8[9]) = *((unsigned char *)a2 + v8[9]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100821498(uint64_t a1)
{
  type metadata accessor for NewsArticleComponentViewModel(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
    uint64_t v4 = a1 + v3[5];
    uint64_t v5 = type metadata accessor for URL();
    if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
    }
    swift_bridgeObjectRelease();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    v7(a1 + v3[7], v5);
    uint64_t v6 = a1 + v3[8];
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v6, 1, v5);
    if (!result)
    {
      return v7(v6, v5);
    }
  }
  return result;
}

void *sub_1008215EC(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for NewsArticleComponentViewModel(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
    uint64_t v7 = v6[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = sub_10017DF08(&qword_100E749B0);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
    }
    uint64_t v12 = v6[6];
    uint64_t v13 = (void *)((char *)a1 + v12);
    uint64_t v14 = (void *)((char *)a2 + v12);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = v6[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v19(v17, v18, v10);
    uint64_t v20 = v6[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v20, 1, v10))
    {
      uint64_t v23 = sub_10017DF08(&qword_100E749B0);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      v19(v21, v22, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v10);
    }
    *((unsigned char *)a1 + v6[9]) = *((unsigned char *)a2 + v6[9]);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

void *sub_100821828(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_100821A84((uint64_t)a1);
    uint64_t v4 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v5 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v6 = v5[5];
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
      {
        uint64_t v10 = sub_10017DF08(&qword_100E749B0);
        memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
      }
      uint64_t v11 = v5[6];
      uint64_t v12 = (void *)((char *)a1 + v11);
      uint64_t v13 = (void *)((char *)a2 + v11);
      *uint64_t v12 = *v13;
      v12[1] = v13[1];
      uint64_t v14 = v5[7];
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
      swift_bridgeObjectRetain();
      v17(v15, v16, v9);
      uint64_t v18 = v5[8];
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v18, 1, v9))
      {
        uint64_t v21 = sub_10017DF08(&qword_100E749B0);
        memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        v17(v19, v20, v9);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v9);
      }
      *((unsigned char *)a1 + v5[9]) = *((unsigned char *)a2 + v5[9]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100821A84(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NewsArticleComponentViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_100821AE0(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for NewsArticleComponentViewModel(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v5 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
    uint64_t v6 = v5[5];
    uint64_t v7 = &a1[v6];
    uint64_t v8 = &a2[v6];
    uint64_t v9 = type metadata accessor for URL();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
    {
      uint64_t v10 = sub_10017DF08(&qword_100E749B0);
      memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
      uint64_t v11 = *(void *)(v9 - 8);
    }
    else
    {
      uint64_t v11 = *(void *)(v9 - 8);
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v7, v8, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
    }
    *(_OWORD *)&a1[v5[6]] = *(_OWORD *)&a2[v5[6]];
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v12(&a1[v5[7]], &a2[v5[7]], v9);
    uint64_t v13 = v5[8];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v13], 1, v9))
    {
      uint64_t v16 = sub_10017DF08(&qword_100E749B0);
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      v12(v14, v15, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v9);
    }
    a1[v5[9]] = a2[v5[9]];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

char *sub_100821D08(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_100821A84((uint64_t)a1);
    uint64_t v4 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v5 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v6 = v5[5];
      uint64_t v7 = &a1[v6];
      uint64_t v8 = &a2[v6];
      uint64_t v9 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
      {
        uint64_t v10 = sub_10017DF08(&qword_100E749B0);
        memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
        uint64_t v11 = *(void *)(v9 - 8);
      }
      else
      {
        uint64_t v11 = *(void *)(v9 - 8);
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v7, v8, v9);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
      }
      *(_OWORD *)&a1[v5[6]] = *(_OWORD *)&a2[v5[6]];
      uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v12(&a1[v5[7]], &a2[v5[7]], v9);
      uint64_t v13 = v5[8];
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v13], 1, v9))
      {
        uint64_t v16 = sub_10017DF08(&qword_100E749B0);
        memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        v12(v14, v15, v9);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v9);
      }
      a1[v5[9]] = a2[v5[9]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100821F40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewsArticleComponentViewModel(0);

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_100821F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NewsArticleComponentViewModel(0);

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a3, v6);
}

uint64_t type metadata accessor for DetailComponentViewModel()
{
  uint64_t result = qword_100E99E08;
  if (!qword_100E99E08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100822028(uint64_t a1)
{
  uint64_t result = type metadata accessor for NewsArticleComponentViewModel(319);
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8);
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

uint64_t sub_1008220CC()
{
  id v0 = [self mainBundle];
  v5._uint64_t countAndFlagsBits = 0xD000000000000030;
  v5._object = (void *)0x8000000100CB4020;
  v1._object = (void *)0x8000000100CB3FF0;
  v1._uint64_t countAndFlagsBits = 0xD000000000000022;
  v2._uint64_t countAndFlagsBits = 1937204558;
  v2._object = (void *)0xE400000000000000;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_100822184(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewsArticleComponentViewModel(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E99E18);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_10082229C(a1, (uint64_t)v10);
  sub_10082229C(a2, v11);
  sub_100822300((uint64_t)v10, (uint64_t)v6);
  LOBYTE(a2) = sub_100362288((uint64_t)v6, v11);
  sub_100821A84(v11);
  sub_100821A84((uint64_t)v6);
  return a2 & 1;
}

uint64_t sub_10082229C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DetailComponentViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100822300(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewsArticleComponentViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10082237C()
{
  sub_10017D5A4();
  uint64_t v1 = sub_100188130();
  return v0(v1);
}

uint64_t sub_1008223D0()
{
  swift_retain();
  sub_10082237C();

  return swift_release();
}

uint64_t sub_100822414()
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 32);

  return swift_deallocClassInstance();
}

uint64_t sub_100822454()
{
  return sub_100218F04();
}

uint64_t sub_100822480()
{
  swift_release();
  sub_100230E9C(*(void *)(v0 + 24), *(unsigned char *)(v0 + 32));

  return swift_deallocObject();
}

unint64_t sub_1008224C4(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_100195B7C(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v9;
    uint64_t v10 = a3[6];
    uint64_t v11 = a1 + v10;
    uint64_t v12 = a2 + v10;
    uint64_t v13 = type metadata accessor for Date();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    v14(a1 + a3[7], a2 + a3[7], v13);
    uint64_t v15 = a3[9];
    *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
    *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
    uint64_t v16 = a3[10];
    long long v17 = *(_OWORD *)(a2 + v16 + 24);
    *(_OWORD *)(a1 + v16 + 24) = v17;
    (**(void (***)(void))(v17 - 8))();
  }
  return a1;
}

uint64_t sub_10082265C(uint64_t a1, int *a2)
{
  sub_10018F6D8(*(void *)a1, *(unsigned char *)(a1 + 8));
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + a2[7], v5);
  uint64_t v7 = a1 + a2[10];

  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v7);
}

uint64_t sub_100822718(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v8;
  uint64_t v9 = a3[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  v13(a1 + a3[7], a2 + a3[7], v12);
  uint64_t v14 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  uint64_t v15 = a3[10];
  long long v16 = *(_OWORD *)(a2 + v15 + 24);
  *(_OWORD *)(a1 + v15 + 24) = v16;
  (**(void (***)(void))(v16 - 8))();
  return a1;
}

uint64_t sub_100822860(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24);
  v14(v11, v12, v13);
  v14(a1 + a3[7], a2 + a3[7], v13);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  sub_1000C1E18((uint64_t *)(a1 + a3[10]), (uint64_t *)(a2 + a3[10]));
  return a1;
}

uint64_t sub_10082297C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(a1 + a3[7], a2 + a3[7], v9);
  uint64_t v11 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[10];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  long long v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(void *)(v13 + 32) = *(void *)(v14 + 32);
  return a1;
}

uint64_t sub_100822A70(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  uint64_t v10 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (uint64_t)a2 + v11;
  uint64_t v14 = type metadata accessor for Date();
  long long v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  v15(a1 + a3[7], (uint64_t)a2 + a3[7], v14);
  uint64_t v16 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(unsigned char *)(a1 + v16) = *((unsigned char *)a2 + v16);
  uint64_t v17 = a3[10];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (uint64_t)a2 + v17;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + v17);
  long long v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  *(void *)(v18 + 32) = *(void *)(v19 + 32);
  return a1;
}

uint64_t sub_100822B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100822B94);
}

uint64_t sub_100822B94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_100822C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100822C30);
}

uint64_t sub_100822C30(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = v5 + *(int *)(a4 + 24);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for CalendarHeaderView()
{
  uint64_t result = qword_100E99FC8;
  if (!qword_100E99FC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100822CF8()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100822DB0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100822DCC@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  uint64_t v3 = sub_10017DF08(&qword_100E9A018);
  return sub_100822E14(v1, a1 + *(int *)(v3 + 36));
}

uint64_t sub_100822E14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v175 = a2;
  uint64_t v162 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v158 = *(void *)(v162 - 8);
  __chkstk_darwin(v162);
  v156 = (char *)&v139 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Font.TextStyle();
  uint64_t v152 = *(void *)(v4 - 8);
  uint64_t v153 = v4;
  __chkstk_darwin(v4);
  v150 = (char *)&v139 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = sub_10017DF08(&qword_100E9A020);
  uint64_t v157 = *(void *)(v159 - 8);
  __chkstk_darwin(v159);
  v155 = (char *)&v139 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = sub_10017DF08(&qword_100E9A028);
  __chkstk_darwin(v163);
  v161 = (char *)&v139 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v178 = (uint64_t)&v139 - v9;
  __chkstk_darwin(v10);
  uint64_t v174 = (uint64_t)&v139 - v11;
  uint64_t v12 = type metadata accessor for CalendarHeaderView();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  uint64_t v171 = (uint64_t)&v139 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v143 = (char *)&v139 - v16;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v139 - v18;
  uint64_t v20 = sub_10017DF08(&qword_100E9A030);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v139 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v180 = sub_10017DF08(&qword_100E9A038);
  __chkstk_darwin(v180);
  v168 = (char *)&v139 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v139 - v26;
  uint64_t v177 = sub_10017DF08(&qword_100E9A040);
  uint64_t v179 = *(void *)(v177 - 8);
  __chkstk_darwin(v177);
  v169 = (char *)&v139 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v141 = (char *)&v139 - v30;
  uint64_t v31 = sub_10017DF08(&qword_100E9A048);
  __chkstk_darwin(v31 - 8);
  uint64_t v172 = (uint64_t)&v139 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v173 = (uint64_t)&v139 - v34;
  __chkstk_darwin(v35);
  v167 = (char *)&v139 - v36;
  __chkstk_darwin(v37);
  uint64_t v170 = (uint64_t)&v139 - v38;
  __chkstk_darwin(v39);
  v140 = (char *)&v139 - v40;
  __chkstk_darwin(v41);
  uint64_t v176 = (uint64_t)&v139 - v42;
  sub_100824020(a1, (uint64_t)v19);
  uint64_t v43 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v44 = (v43 + 16) & ~v43;
  uint64_t v147 = v43 | 7;
  uint64_t v148 = v44 + v14;
  uint64_t v45 = swift_allocObject();
  uint64_t v151 = v44;
  v154 = v19;
  sub_100824088((uint64_t)v19, v45 + v44);
  unint64_t v149 = sub_100824104();
  Button.init(action:label:)();
  uint64_t v166 = v12;
  uint64_t v46 = *(int *)(v12 + 32);
  LOBYTE(v19) = *(unsigned char *)(a1 + v46);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v48 = swift_allocObject();
  *(unsigned char *)(v48 + 16) = (_BYTE)v19;
  v145 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  uint64_t v146 = v21 + 16;
  v145(v27, v23, v20);
  uint64_t v49 = (uint64_t *)&v27[*(int *)(v180 + 36)];
  *uint64_t v49 = KeyPath;
  v49[1] = (uint64_t)sub_10021277C;
  v49[2] = v48;
  uint64_t v50 = *(void (**)(char *, uint64_t))(v21 + 8);
  v160 = v23;
  unint64_t v51 = v23;
  uint64_t v52 = (uint64_t)v143;
  uint64_t v164 = v21 + 8;
  uint64_t v165 = v20;
  v144 = v50;
  v50(v51, v20);
  LODWORD(KeyPath) = *(unsigned __int8 *)(a1 + v46);
  uint64_t v53 = a1;
  sub_100824020(a1, v52);
  if (KeyPath == 1)
  {
    uint64_t v54 = *(void *)v52;
    char v55 = *(unsigned char *)(v52 + 8);
    sub_100195B7C(*(void *)v52, v55);
    sub_100149AE8();
    sub_10018F6D8(v54, v55);
  }
  sub_100824498(v52);
  unint64_t v56 = sub_1008244F4();
  uint64_t v57 = v141;
  uint64_t v58 = v180;
  View.isHidden(_:defaultAccessibilityHidden:)();
  sub_1001781AC((uint64_t)v27, &qword_100E9A038);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v59 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v61 = v60;
  char v63 = v62 & 1;
  __dst[0] = v58;
  __dst[1] = v56;
  v143 = (char *)v56;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v65 = (uint64_t)v140;
  uint64_t v66 = v177;
  uint64_t v142 = OpaqueTypeConformance2;
  View.accessibilityLabel(_:)();
  sub_100191924(v59, v61, v63);
  swift_bridgeObjectRelease();
  uint64_t v67 = *(char **)(v179 + 8);
  v179 += 8;
  v141 = v67;
  ((void (*)(char *, uint64_t))v67)(v57, v66);
  sub_10020E72C(v65, v176, &qword_100E9A048);
  uint64_t v139 = v53;
  uint64_t v68 = *(void *)(v53 + 24);
  __dst[0] = *(void *)(v53 + 16);
  __dst[1] = v68;
  v140 = (char *)sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v69 = Text.init<A>(_:)();
  uint64_t v71 = v70;
  char v73 = v72 & 1;
  uint64_t v75 = v152;
  uint64_t v74 = v153;
  uint64_t v76 = v150;
  (*(void (**)(char *, void, uint64_t))(v152 + 104))(v150, enum case for Font.TextStyle.body(_:), v153);
  static Font.Weight.semibold.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v76, v74);
  uint64_t v77 = Text.font(_:)();
  uint64_t v79 = v78;
  LOBYTE(v74) = v80;
  swift_release();
  sub_100191924(v69, v71, v73);
  swift_bridgeObjectRelease();
  static Color.primary.getter();
  uint64_t v81 = Text.foregroundColor(_:)();
  uint64_t v83 = v82;
  char v85 = v84;
  uint64_t v87 = v86;
  swift_release();
  sub_100191924(v77, v79, v74 & 1);
  swift_bridgeObjectRelease();
  LOBYTE(v69) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v89 = v88;
  uint64_t v91 = v90;
  uint64_t v93 = v92;
  uint64_t v95 = v94;
  uint64_t v96 = swift_getKeyPath();
  char v190 = v85 & 1;
  char v187 = 0;
  char v185 = 0;
  v183[0] = v81;
  v183[1] = v83;
  LOBYTE(v183[2]) = v85 & 1;
  *(_DWORD *)((char *)&v183[2] + 1) = *(_DWORD *)v189;
  HIDWORD(v183[2]) = *(_DWORD *)&v189[3];
  v183[3] = v87;
  LOBYTE(v183[4]) = v69;
  *(_DWORD *)((char *)&v183[4] + 1) = *(_DWORD *)v188;
  HIDWORD(v183[4]) = *(_DWORD *)&v188[3];
  v183[5] = v89;
  v183[6] = v91;
  v183[7] = v93;
  v183[8] = v95;
  LOBYTE(v183[9]) = 0;
  *(_DWORD *)((char *)&v183[9] + 1) = *(_DWORD *)v186;
  HIDWORD(v183[9]) = *(_DWORD *)&v186[3];
  v183[10] = 0xBFF0000000000000;
  v183[11] = v96;
  v183[12] = 1;
  LOBYTE(v183[13]) = 0;
  *(_DWORD *)((char *)&v183[13] + 1) = *(_DWORD *)v184;
  HIDWORD(v183[13]) = *(_DWORD *)&v184[3];
  v183[14] = 5;
  LOBYTE(v183[15]) = 0;
  v97 = v156;
  static AccessibilityChildBehavior.ignore.getter();
  uint64_t v98 = sub_10017DF08(&qword_100E9A068);
  unint64_t v99 = sub_1008245C0();
  uint64_t v100 = v155;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v158 + 8))(v97, v162);
  memcpy(__dst, v183, 0x79uLL);
  sub_1008247C8((uint64_t)__dst);
  uint64_t v101 = v139;
  uint64_t v102 = *(void *)(v139 + 24);
  v183[0] = *(void *)(v139 + 16);
  v183[1] = v102;
  uint64_t v181 = v98;
  unint64_t v182 = v99;
  swift_getOpaqueTypeConformance2();
  uint64_t v103 = (uint64_t)v161;
  uint64_t v104 = v159;
  View.accessibilityValue<A>(_:)();
  (*(void (**)(char *, uint64_t))(v157 + 8))(v100, v104);
  uint64_t v105 = (uint64_t)v154;
  sub_100824020(v101, (uint64_t)v154);
  uint64_t v106 = swift_allocObject();
  uint64_t v107 = v151;
  sub_100824088(v105, v106 + v151);
  uint64_t v108 = v178;
  ModifiedContent<>.accessibilityAdjustableAction(_:)();
  swift_release();
  sub_1001781AC(v103, &qword_100E9A028);
  uint64_t v109 = v108;
  uint64_t v110 = v174;
  sub_10020E72C(v109, v174, &qword_100E9A028);
  sub_100824020(v101, v105);
  uint64_t v111 = swift_allocObject();
  sub_100824088(v105, v111 + v107);
  v112 = v160;
  Button.init(action:label:)();
  uint64_t v113 = *(int *)(v166 + 36);
  LOBYTE(v105) = *(unsigned char *)(v101 + v113);
  uint64_t v114 = swift_getKeyPath();
  uint64_t v115 = swift_allocObject();
  *(unsigned char *)(v115 + 16) = v105;
  uint64_t v116 = (uint64_t)v168;
  uint64_t v117 = v165;
  v145(v168, v112, v165);
  v118 = (uint64_t *)(v116 + *(int *)(v180 + 36));
  uint64_t *v118 = v114;
  v118[1] = (uint64_t)sub_100212FFC;
  v118[2] = v115;
  v144(v112, v117);
  LODWORD(v115) = *(unsigned __int8 *)(v101 + v113);
  uint64_t v119 = v171;
  sub_100824020(v101, v171);
  if (v115 == 1)
  {
    uint64_t v120 = *(void *)v119;
    char v121 = *(unsigned char *)(v119 + 8);
    sub_100195B7C(*(void *)v119, v121);
    sub_100149AE8();
    sub_10018F6D8(v120, v121);
  }
  sub_100824498(v119);
  v122 = v169;
  View.isHidden(_:defaultAccessibilityHidden:)();
  sub_1001781AC(v116, &qword_100E9A038);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v123 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v125 = v124;
  char v127 = v126 & 1;
  v128 = v167;
  uint64_t v129 = v177;
  View.accessibilityLabel(_:)();
  sub_100191924(v123, v125, v127);
  swift_bridgeObjectRelease();
  ((void (*)(char *, uint64_t))v141)(v122, v129);
  uint64_t v130 = (uint64_t)v128;
  uint64_t v131 = v170;
  sub_10020E72C(v130, v170, &qword_100E9A048);
  uint64_t v132 = v176;
  uint64_t v133 = v173;
  sub_1001262FC(v176, v173, &qword_100E9A048);
  uint64_t v134 = v178;
  sub_1001262FC(v110, v178, &qword_100E9A028);
  uint64_t v135 = v172;
  sub_1001262FC(v131, v172, &qword_100E9A048);
  uint64_t v136 = v175;
  sub_1001262FC(v133, v175, &qword_100E9A048);
  uint64_t v137 = sub_10017DF08(&qword_100E9A0A0);
  sub_1001262FC(v134, v136 + *(int *)(v137 + 48), &qword_100E9A028);
  sub_1001262FC(v135, v136 + *(int *)(v137 + 64), &qword_100E9A048);
  sub_1001781AC(v131, &qword_100E9A048);
  sub_1001781AC(v110, &qword_100E9A028);
  sub_1001781AC(v132, &qword_100E9A048);
  sub_1001781AC(v135, &qword_100E9A048);
  sub_1001781AC(v134, &qword_100E9A028);
  return sub_1001781AC(v133, &qword_100E9A048);
}

uint64_t sub_100823D98(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CalendarHeaderView();
  sub_1001B1E64((void *)(a1 + *(int *)(v2 + 40)), *(void *)(a1 + *(int *)(v2 + 40) + 24));
  return sub_100A77338(a1 + *(int *)(v2 + 24));
}

void sub_100823DE8(void *a1@<X8>)
{
  *a1 = 0xD000000000000010;
  a1[1] = 0x8000000100CB4170;
}

int *sub_100823E08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AccessibilityAdjustmentDirection();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a1, v4, v6);
  int v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 == enum case for AccessibilityAdjustmentDirection.increment(_:))
  {
    uint64_t result = (int *)type metadata accessor for CalendarHeaderView();
    if (*(unsigned char *)(a2 + result[9])) {
      return result;
    }
    uint64_t v11 = result;
    sub_1001B1E64((void *)(a2 + result[10]), *(void *)(a2 + result[10] + 24));
    uint64_t v12 = v11[7];
    return (int *)sub_100A77338(a2 + v12);
  }
  if (v9 == enum case for AccessibilityAdjustmentDirection.decrement(_:))
  {
    uint64_t result = (int *)type metadata accessor for CalendarHeaderView();
    if (*(unsigned char *)(a2 + result[8])) {
      return result;
    }
    uint64_t v13 = result;
    sub_1001B1E64((void *)(a2 + result[10]), *(void *)(a2 + result[10] + 24));
    uint64_t v12 = v13[6];
    return (int *)sub_100A77338(a2 + v12);
  }
  return (int *)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_100823FA4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CalendarHeaderView();
  sub_1001B1E64((void *)(a1 + *(int *)(v2 + 40)), *(void *)(a1 + *(int *)(v2 + 40) + 24));
  return sub_100A77338(a1 + *(int *)(v2 + 28));
}

void sub_100823FF4(void *a1@<X8>)
{
  *a1 = 0x2E6E6F7276656863;
  a1[1] = 0xEF64726177726F66;
}

uint64_t sub_100824020(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CalendarHeaderView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100824088(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CalendarHeaderView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008240EC()
{
  return sub_10082488C(sub_100823D98);
}

unint64_t sub_100824104()
{
  unint64_t result = qword_100E9A050;
  if (!qword_100E9A050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A050);
  }
  return result;
}

uint64_t sub_100824150@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_10017DF08(&qword_100EAADC0);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = type metadata accessor for Image.Scale();
  uint64_t v6 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Font.TextStyle();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  uint64_t v25 = Image.init(systemName:)();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for Font.TextStyle.body(_:), v9);
  static Font.Weight.semibold.getter();
  uint64_t v24 = static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v14 = static Color.secondary.getter();
  uint64_t v15 = swift_getKeyPath();
  uint64_t v16 = v8;
  uint64_t v17 = v8;
  uint64_t v18 = v26;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v17, enum case for Image.Scale.small(_:), v26);
  uint64_t v19 = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v5 + *(int *)(v3 + 36), v16, v18);
  *uint64_t v5 = v19;
  uint64_t v20 = sub_10017DF08(&qword_100E9A0B0);
  sub_1001262FC((uint64_t)v5, (uint64_t)a1 + *(int *)(v20 + 36), &qword_100EAADC0);
  uint64_t v21 = v24;
  *a1 = v25;
  a1[1] = KeyPath;
  a1[2] = v21;
  a1[3] = v15;
  a1[4] = v14;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1001781AC((uint64_t)v5, &qword_100EAADC0);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v18);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_100824484@<X0>(uint64_t *a1@<X8>)
{
  return sub_100824150(a1);
}

uint64_t sub_100824498(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CalendarHeaderView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1008244F4()
{
  unint64_t result = qword_100E9A058;
  if (!qword_100E9A058)
  {
    sub_10018C6DC(&qword_100E9A038);
    sub_1001246C8(&qword_100E9A060, &qword_100E9A030);
    sub_1001246C8(&qword_100E66BA8, &qword_100E66BB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A058);
  }
  return result;
}

unint64_t sub_1008245C0()
{
  unint64_t result = qword_100E9A070;
  if (!qword_100E9A070)
  {
    sub_10018C6DC(&qword_100E9A068);
    sub_10082463C();
    sub_10082477C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A070);
  }
  return result;
}

unint64_t sub_10082463C()
{
  unint64_t result = qword_100E9A078;
  if (!qword_100E9A078)
  {
    sub_10018C6DC(&qword_100E9A080);
    sub_1008246DC();
    sub_1001246C8(&qword_100E6DE30, &qword_100E6DE38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A078);
  }
  return result;
}

unint64_t sub_1008246DC()
{
  unint64_t result = qword_100E9A088;
  if (!qword_100E9A088)
  {
    sub_10018C6DC(&qword_100E9A090);
    sub_10029F298();
    sub_1001246C8(&qword_100E64690, &qword_100E64698);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A088);
  }
  return result;
}

unint64_t sub_10082477C()
{
  unint64_t result = qword_100E9A098;
  if (!qword_100E9A098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A098);
  }
  return result;
}

uint64_t sub_1008247C8(uint64_t a1)
{
  return a1;
}

int *sub_100824820(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CalendarHeaderView();
  sub_1001627C0(v3);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_100823E08(a1, v5);
}

uint64_t sub_100824874()
{
  return sub_10082488C(sub_100823FA4);
}

uint64_t sub_10082488C(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = type metadata accessor for CalendarHeaderView();
  sub_1001627C0(v2);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return a1(v4);
}

ValueMetadata *type metadata accessor for ButtonImage()
{
  return &type metadata for ButtonImage;
}

uint64_t sub_1008248F4()
{
  return sub_1001246C8(&qword_100E9A0A8, &qword_100E9A018);
}

uint64_t sub_100824930()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100824968()
{
  unint64_t result = qword_100E9A0B8;
  if (!qword_100E9A0B8)
  {
    sub_10018C6DC(&qword_100E9A0B0);
    sub_100282844();
    sub_1001246C8(&qword_100E6F778, &qword_100EAADC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A0B8);
  }
  return result;
}

uint64_t sub_100824A08(void *a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E9A0C8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a1, a1[3]);
  sub_100824D40();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100824B18(uint64_t a1)
{
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
}

uint64_t sub_100824B40(uint64_t a1)
{
  unint64_t v2 = sub_100824D40();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100824B7C(uint64_t a1)
{
  unint64_t v2 = sub_100824D40();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100824BB8(uint64_t a1)
{
  return sub_100824B18(a1);
}

uint64_t sub_100824BD0(void *a1)
{
  return sub_100824A08(a1);
}

void sub_100824BE8()
{
}

void sub_100824C00()
{
}

uint64_t sub_100824C18@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = sub_10017DF08(&qword_100E9A0D8);
  a1[4] = sub_100824D8C();
  sub_100170694(a1);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_100824CB4()
{
  sub_100824DE0();

  return ShortDescribable.description.getter();
}

unint64_t sub_100824CF4()
{
  unint64_t result = qword_100E9A0C0;
  if (!qword_100E9A0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A0C0);
  }
  return result;
}

unint64_t sub_100824D40()
{
  unint64_t result = qword_100E9A0D0;
  if (!qword_100E9A0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A0D0);
  }
  return result;
}

unint64_t sub_100824D8C()
{
  unint64_t result = qword_100E9A0E0;
  if (!qword_100E9A0E0)
  {
    sub_10018C6DC(&qword_100E9A0D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A0E0);
  }
  return result;
}

unint64_t sub_100824DE0()
{
  unint64_t result = qword_100E9A0E8;
  if (!qword_100E9A0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A0E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for UnitsConfigurationViewState.CodingKeys()
{
  return &type metadata for UnitsConfigurationViewState.CodingKeys;
}

ValueMetadata *type metadata accessor for UnitsConfigurationViewState()
{
  return &type metadata for UnitsConfigurationViewState;
}

unint64_t sub_100824E50()
{
  unint64_t result = qword_100E9A0F0;
  if (!qword_100E9A0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A0F0);
  }
  return result;
}

unint64_t sub_100824EA0()
{
  unint64_t result = qword_100E9A0F8;
  if (!qword_100E9A0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A0F8);
  }
  return result;
}

uint64_t *sub_100824EEC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v30 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for PressureTrend();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = (int *)type metadata accessor for PressureComponentViewModel();
    uint64_t v9 = v8[5];
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    void *v10 = v13;
    v10[1] = v12;
    uint64_t v14 = v8[6];
    uint64_t v15 = (uint64_t *)((char *)a1 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = v8[7];
    uint64_t v19 = (uint64_t *)((char *)a1 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    *(uint64_t *)((char *)a1 + v8[8]) = *(uint64_t *)((char *)a2 + v8[8]);
    uint64_t v22 = v8[9];
    uint64_t v23 = (uint64_t *)((char *)a1 + v22);
    uint64_t v24 = (uint64_t *)((char *)a2 + v22);
    uint64_t v25 = v24[1];
    void *v23 = *v24;
    v23[1] = v25;
    uint64_t v26 = *(int *)(a3 + 20);
    uint64_t v27 = (uint64_t *)((char *)a1 + v26);
    uint64_t v28 = (uint64_t *)((char *)a2 + v26);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v29 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    }
    else
    {
      *uint64_t v27 = *v28;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1008250D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for PressureComponentViewModel();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ContentSizeCategory();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v5, v6);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_100825210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for PressureComponentViewModel();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  uint64_t v13 = v7[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = v7[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
  uint64_t v21 = v7[9];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = *(int *)(a3 + 20);
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v28 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  }
  else
  {
    *uint64_t v26 = *v27;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10082539C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for PressureComponentViewModel();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = v7[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = v7[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
  uint64_t v17 = v7[9];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v20 = *(int *)(a3 + 20);
    uint64_t v21 = (void *)(a1 + v20);
    uint64_t v22 = (void *)(a2 + v20);
    sub_100178110(a1 + v20, &qword_100E63BC8);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *uint64_t v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100825584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for PressureComponentViewModel();
  *(_OWORD *)(a1 + v7[5]) = *(_OWORD *)(a2 + v7[5]);
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  *(_OWORD *)(a1 + v7[7]) = *(_OWORD *)(a2 + v7[7]);
  *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
  *(_OWORD *)(a1 + v7[9]) = *(_OWORD *)(a2 + v7[9]);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1008256D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for PressureComponentViewModel();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = v7[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = v7[7];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
  uint64_t v23 = v7[9];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (uint64_t *)(a2 + v23);
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  *uint64_t v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v28 = *(int *)(a3 + 20);
    uint64_t v29 = (void *)(a1 + v28);
    uint64_t v30 = (const void *)(a2 + v28);
    sub_100178110(a1 + v28, &qword_100E63BC8);
    uint64_t v31 = sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v32 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v32 - 8) + 32))(v29, v30, v32);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100825888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10082589C);
}

uint64_t sub_10082589C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10017A9D4();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == v3)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v4;
  }
  else
  {
    uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100EAA530);
    uint64_t v9 = v4 + *(int *)(a3 + 20);
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, v3, v8);
}

uint64_t sub_100825910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100825924);
}

uint64_t sub_100825924(uint64_t a1, uint64_t a2, int a3)
{
  sub_10017A9D4();
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) != a3) {
    sub_10017DF08((uint64_t *)&unk_100EAA530);
  }
  sub_1001650E4();

  return _s7Weather24LocationCompositionStateOwst_0(v5, v6, v7, v8);
}

uint64_t sub_10082599C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1008259B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v47 = a1;
  uint64_t v46 = type metadata accessor for AutomationInfo(0);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v45 = v5 - v4;
  uint64_t v44 = type metadata accessor for AccessibilityChildBehavior();
  sub_100179C0C();
  uint64_t v42 = v6;
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v8 = sub_10017DF08(&qword_100E9A190);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_10017DF08(&qword_100E9A198);
  sub_100179C0C();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  sub_1001626E0();
  uint64_t v19 = v18 - v17;
  uint64_t v43 = sub_10017DF08(&qword_100E7A0B0);
  sub_100162E4C();
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v40 - v24;
  sub_100825D08(v2, v12);
  static AccessibilityChildBehavior.ignore.getter();
  unint64_t v26 = sub_10082C8F0((uint64_t)&unk_100E9A1A0);
  View.accessibilityElement(children:)();
  sub_100162F0C();
  v27();
  sub_100178110(v12, &qword_100E9A190);
  uint64_t v48 = v8;
  uint64_t v49 = v26;
  swift_getOpaqueTypeConformance2();
  View.accessibilityRespondsToUserInteraction(_:)();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v19, v13);
  uint64_t v28 = (uint64_t *)(v41 + *(int *)(type metadata accessor for PressureComponentViewModel() + 36));
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  uint64_t v48 = v30;
  uint64_t v49 = v29;
  sub_10014A85C();
  ModifiedContent<>.accessibilityLabel<A>(_:)();
  sub_100178110((uint64_t)v22, &qword_100E7A0B0);
  type metadata accessor for AutomationCellInfo(0);
  uint64_t v31 = v45;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_10048D4DC(v31, v32, v33, v34, v35, v36, v37, v38, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51);
  sub_10014CF28(v31, (void (*)(void))type metadata accessor for AutomationInfo);
  return sub_100178110((uint64_t)v25, &qword_100E7A0B0);
}

uint64_t sub_100825D08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v38 = type metadata accessor for PressureComponentContentView(0);
  __chkstk_darwin(v38);
  uint64_t v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v38 - v6;
  uint64_t v39 = sub_10017DF08(&qword_100E9A1C8);
  __chkstk_darwin(v39);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for SimplePressureComponentContentView(0);
  __chkstk_darwin(v40);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ContentSizeCategory();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v38 - v17;
  type metadata accessor for PressureComponentView(0);
  uint64_t v19 = a1;
  sub_10014E6E8();
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
  int v20 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  if (v20 == enum case for ContentSizeCategory.extraSmall(_:)
    || v20 == enum case for ContentSizeCategory.small(_:)
    || v20 == enum case for ContentSizeCategory.medium(_:)
    || v20 == enum case for ContentSizeCategory.large(_:)
    || v20 == enum case for ContentSizeCategory.extraLarge(_:)
    || v20 == enum case for ContentSizeCategory.extraExtraLarge(_:)
    || v20 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
LABEL_37:
    sub_10082A958(v19, (uint64_t)v4, (void (*)(void))type metadata accessor for PressureComponentViewModel);
    uint64_t v34 = v38;
    uint64_t v35 = &v4[*(int *)(v38 + 20)];
    *(void *)uint64_t v35 = swift_getKeyPath();
    v35[8] = 0;
    uint64_t v36 = &v4[*(int *)(v34 + 24)];
    *(void *)uint64_t v36 = swift_getKeyPath();
    v36[8] = 0;
    sub_10082CA08((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for PressureComponentContentView);
    sub_10082A958((uint64_t)v7, (uint64_t)v9, (void (*)(void))type metadata accessor for PressureComponentContentView);
    swift_storeEnumTagMultiPayload();
    sub_1008263A0((uint64_t)&unk_100E9A1B8);
    sub_1008263A0((uint64_t)&unk_100E9A1C0);
    _ConditionalContent<>.init(storage:)();
    uint64_t v32 = type metadata accessor for PressureComponentContentView;
    uint64_t v33 = (uint64_t)v7;
    return sub_10014CF28(v33, (void (*)(void))v32);
  }
  uint64_t v27 = *(void (**)(char *, uint64_t))(v13 + 8);
  if (v20 != enum case for ContentSizeCategory.accessibilityMedium(_:)
    && v20 != enum case for ContentSizeCategory.accessibilityLarge(_:)
    && v20 != enum case for ContentSizeCategory.accessibilityExtraLarge(_:)
    && v20 != enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:)
    && v20 != enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
  {
    v27(v15, v12);
    v27(v18, v12);
    goto LABEL_37;
  }
  v27(v18, v12);
  sub_10082A958(v19, (uint64_t)v11, (void (*)(void))type metadata accessor for PressureComponentViewModel);
  sub_10082A958((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for SimplePressureComponentContentView);
  swift_storeEnumTagMultiPayload();
  sub_1008263A0((uint64_t)&unk_100E9A1B8);
  sub_1008263A0((uint64_t)&unk_100E9A1C0);
  _ConditionalContent<>.init(storage:)();
  uint64_t v32 = type metadata accessor for SimplePressureComponentContentView;
  uint64_t v33 = (uint64_t)v11;
  return sub_10014CF28(v33, (void (*)(void))v32);
}

unint64_t sub_1008262A4()
{
  unint64_t result = qword_100E9A1A8;
  if (!qword_100E9A1A8)
  {
    sub_10018C6DC(&qword_100E9A1B0);
    sub_1008263A0((uint64_t)&unk_100E9A1B8);
    sub_1008263A0((uint64_t)&unk_100E9A1C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A1A8);
  }
  return result;
}

uint64_t type metadata accessor for SimplePressureComponentContentView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E9A2C0);
}

unint64_t sub_1008263A0(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t type metadata accessor for PressureComponentContentView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E9A228);
}

uint64_t sub_100826404@<X0>(uint64_t *a1@<X8>)
{
  *a1 = static Alignment.center.getter();
  a1[1] = v3;
  uint64_t v4 = sub_10017DF08(&qword_100E9A350);
  return sub_100826448(v1, (uint64_t)a1 + *(int *)(v4 + 44));
}

uint64_t sub_100826448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v98 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E9A358);
  __chkstk_darwin(v3 - 8);
  uint64_t v99 = (uint64_t)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v96 = (uint64_t *)((char *)&v86 - v6);
  uint64_t v7 = sub_10017DF08(&qword_100E9A360);
  __chkstk_darwin(v7 - 8);
  uint64_t v97 = (uint64_t)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v95 = (uint64_t *)((char *)&v86 - v10);
  uint64_t v11 = sub_10017DF08(&qword_100E9A368);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100E9A370);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10017DF08(&qword_100E9A378);
  __chkstk_darwin(v18 - 8);
  int v20 = (uint64_t *)((char *)&v86 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = sub_10017DF08(&qword_100E9A380);
  uint64_t v22 = v21 - 8;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10017DF08(&qword_100E9A388);
  uint64_t v26 = v25 - 8;
  __chkstk_darwin(v25);
  uint64_t v87 = (uint64_t)&v86 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_10017DF08(&qword_100E9A390);
  __chkstk_darwin(v89);
  uint64_t v91 = (uint64_t)&v86 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_10017DF08(&qword_100E9A398);
  __chkstk_darwin(v90);
  uint64_t v93 = (uint64_t)&v86 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v88 = (uint64_t)&v86 - v31;
  __chkstk_darwin(v32);
  uint64_t v92 = (uint64_t)&v86 - v33;
  *int v20 = static Alignment.top.getter();
  v20[1] = v34;
  uint64_t v35 = sub_10017DF08(&qword_100E9A3A0);
  sub_100826BAC(a1, (uint64_t)v20 + *(int *)(v35 + 44));
  uint64_t v36 = static Alignment.center.getter();
  uint64_t v38 = v37;
  uint64_t v39 = (uint64_t)&v24[*(int *)(v22 + 44)];
  *(void *)uint64_t v13 = static HorizontalAlignment.center.getter();
  *((void *)v13 + 1) = 0;
  v13[16] = 1;
  uint64_t v40 = sub_10017DF08(&qword_100E9A3A8);
  sub_100828850((uint64_t)&v13[*(int *)(v40 + 44)]);
  uint64_t v41 = *(int *)(type metadata accessor for PressureComponentViewModel() + 32);
  uint64_t v94 = (char *)a1;
  double v42 = *(double *)(a1 + v41) * 0.0174532925;
  static UnitPoint.center.getter();
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  sub_10006DF38((uint64_t)v13, (uint64_t)v17, &qword_100E9A368);
  uint64_t v47 = &v17[*(int *)(v15 + 44)];
  *(double *)uint64_t v47 = v42;
  *((void *)v47 + 1) = v44;
  *((void *)v47 + 2) = v46;
  sub_100178110((uint64_t)v13, &qword_100E9A368);
  sub_10024D364((uint64_t)v17, v39, &qword_100E9A370);
  uint64_t v48 = (uint64_t *)(v39 + *(int *)(sub_10017DF08(&qword_100E9A3B0) + 36));
  *uint64_t v48 = v36;
  v48[1] = v38;
  sub_10024D364((uint64_t)v20, (uint64_t)v24, &qword_100E9A378);
  LOBYTE(v15) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  uint64_t v54 = v53;
  uint64_t v56 = v55;
  uint64_t v57 = v87;
  sub_10006DF38((uint64_t)v24, v87, &qword_100E9A380);
  uint64_t v58 = v57 + *(int *)(v26 + 44);
  *(unsigned char *)uint64_t v58 = v15;
  *(void *)(v58 + 8) = v50;
  *(void *)(v58 + 16) = v52;
  *(void *)(v58 + 24) = v54;
  *(void *)(v58 + 32) = v56;
  *(unsigned char *)(v58 + 40) = 0;
  sub_100178110((uint64_t)v24, &qword_100E9A380);
  LOBYTE(a1) = static Edge.Set.leading.getter();
  unsigned __int8 v59 = static Edge.Set.trailing.getter();
  char v60 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != a1) {
    char v60 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v59) {
    char v60 = Edge.Set.init(rawValue:)();
  }
  EdgeInsets.init(_all:)();
  uint64_t v62 = v61;
  uint64_t v64 = v63;
  uint64_t v66 = v65;
  uint64_t v68 = v67;
  uint64_t v69 = v91;
  sub_10006DF38(v57, v91, &qword_100E9A388);
  uint64_t v70 = v69 + *(int *)(v89 + 36);
  *(unsigned char *)uint64_t v70 = v60;
  *(void *)(v70 + 8) = v62;
  *(void *)(v70 + 16) = v64;
  *(void *)(v70 + 24) = v66;
  *(void *)(v70 + 32) = v68;
  *(unsigned char *)(v70 + 40) = 0;
  sub_100178110(v57, &qword_100E9A388);
  uint64_t v71 = v88;
  sub_10006DF38(v69, v88, &qword_100E9A390);
  *(void *)(v71 + *(int *)(v90 + 36)) = 0xBFF0000000000000;
  sub_100178110(v69, &qword_100E9A390);
  uint64_t v72 = v92;
  sub_10024D364(v71, v92, &qword_100E9A398);
  uint64_t v73 = static HorizontalAlignment.center.getter();
  uint64_t v74 = (uint64_t)v95;
  *uint64_t v95 = v73;
  *(void *)(v74 + 8) = 0;
  *(unsigned char *)(v74 + 16) = 1;
  uint64_t v75 = sub_10017DF08(&qword_100E9A3B8);
  uint64_t v76 = v94;
  sub_100826E98((uint64_t)v94, v74 + *(int *)(v75 + 44));
  uint64_t v77 = static HorizontalAlignment.center.getter();
  uint64_t v78 = (uint64_t)v96;
  *uint64_t v96 = v77;
  *(void *)(v78 + 8) = 0;
  *(unsigned char *)(v78 + 16) = 1;
  uint64_t v79 = sub_10017DF08(&qword_100E9A3C0);
  sub_100827D10(v76, (void *)(v78 + *(int *)(v79 + 44)));
  uint64_t v80 = v93;
  sub_10006DF38(v72, v93, &qword_100E9A398);
  uint64_t v81 = v97;
  sub_10006DF38(v74, v97, &qword_100E9A360);
  uint64_t v82 = v99;
  sub_10006DF38(v78, v99, &qword_100E9A358);
  uint64_t v83 = v98;
  sub_10006DF38(v80, v98, &qword_100E9A398);
  uint64_t v84 = sub_10017DF08(&qword_100E9A3C8);
  sub_10006DF38(v81, v83 + *(int *)(v84 + 48), &qword_100E9A360);
  sub_10006DF38(v82, v83 + *(int *)(v84 + 64), &qword_100E9A358);
  sub_100178110(v78, &qword_100E9A358);
  sub_100178110(v74, &qword_100E9A360);
  sub_100178110(v72, &qword_100E9A398);
  sub_100178110(v82, &qword_100E9A358);
  sub_100178110(v81, &qword_100E9A360);
  return sub_100178110(v80, &qword_100E9A398);
}

uint64_t sub_100826BAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for GradientArcView(0);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t v11 = type metadata accessor for PressureComponentGaugeView();
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v25 - v16;
  *(void *)uint64_t v14 = swift_getKeyPath();
  v14[8] = 0;
  uint64_t v18 = (uint64_t *)&v14[*(int *)(v12 + 28)];
  *uint64_t v18 = swift_getKeyPath();
  sub_10017DF08(&qword_100E66E50);
  swift_storeEnumTagMultiPayload();
  sub_10082CA08((uint64_t)v14, (uint64_t)v17, (void (*)(void))type metadata accessor for PressureComponentGaugeView);
  uint64_t v19 = *(void *)(a1 + *(int *)(type metadata accessor for PressureComponentViewModel() + 32));
  int v20 = (char *)v7 + *(int *)(v5 + 28);
  uint64_t v21 = type metadata accessor for PressureTrend();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v20, a1, v21);
  *uint64_t v7 = v19;
  uint64_t v22 = (char *)v7 + *(int *)(v5 + 32);
  *(void *)uint64_t v22 = swift_getKeyPath();
  v22[8] = 0;
  sub_10082CA08((uint64_t)v7, (uint64_t)v10, (void (*)(void))type metadata accessor for GradientArcView);
  sub_10082A958((uint64_t)v17, (uint64_t)v14, (void (*)(void))type metadata accessor for PressureComponentGaugeView);
  sub_10082A958((uint64_t)v10, (uint64_t)v7, (void (*)(void))type metadata accessor for GradientArcView);
  sub_10082A958((uint64_t)v14, a2, (void (*)(void))type metadata accessor for PressureComponentGaugeView);
  uint64_t v23 = sub_10017DF08(&qword_100E9A4A0);
  sub_10082A958((uint64_t)v7, a2 + *(int *)(v23 + 48), (void (*)(void))type metadata accessor for GradientArcView);
  sub_10014CF28((uint64_t)v10, (void (*)(void))type metadata accessor for GradientArcView);
  sub_10014CF28((uint64_t)v17, (void (*)(void))type metadata accessor for PressureComponentGaugeView);
  sub_10014CF28((uint64_t)v7, (void (*)(void))type metadata accessor for GradientArcView);
  return sub_10014CF28((uint64_t)v14, (void (*)(void))type metadata accessor for PressureComponentGaugeView);
}

uint64_t sub_100826E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v125 = a2;
  uint64_t v119 = sub_10017DF08(&qword_100E7DF48);
  __chkstk_darwin(v119);
  v118 = (char *)&v103 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_10017DF08(&qword_100E9A430);
  uint64_t v123 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  uint64_t v120 = (char *)&v103 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_10017DF08(&qword_100E9A438) - 8;
  __chkstk_darwin(v121);
  uint64_t v134 = (uint64_t)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v136 = (uint64_t)&v103 - v7;
  uint64_t v139 = type metadata accessor for TypesettingLanguageAwareLineHeightRatio();
  uint64_t v141 = *(void *)(v139 - 8);
  __chkstk_darwin(v139);
  uint64_t v137 = (char *)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = type metadata accessor for FontWithSmallVariantModifier() - 8;
  __chkstk_darwin(v128);
  uint64_t v10 = (uint64_t *)((char *)&v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_10017DF08(&qword_100E6D330);
  __chkstk_darwin(v11 - 8);
  uint64_t v122 = (uint64_t)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v140 = (uint64_t)&v103 - v14;
  uint64_t v15 = type metadata accessor for Font.TextStyle();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = sub_10017DF08(&qword_100E9A440);
  __chkstk_darwin(v133);
  int v20 = (char *)&v103 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_10017DF08(&qword_100E9A448);
  unint64_t v114 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  uint64_t v106 = (char *)&v103 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_10017DF08(&qword_100E9A450) - 8;
  __chkstk_darwin(v112);
  uint64_t v138 = (uint64_t)&v103 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v135 = (uint64_t)&v103 - v24;
  uint64_t v129 = a1;
  sub_100829C98(a1, (uint64_t)&v142);
  uint64_t v104 = v142;
  LODWORD(v105) = BYTE1(v143);
  char v25 = v143;
  LODWORD(v117) = enum case for Font.TextStyle.title3(_:);
  uint64_t v26 = *(void (**)(char *))(v16 + 104);
  v26(v18);
  uint64_t v108 = v26;
  uint64_t v111 = v16 + 104;
  static Font.Weight.bold.getter();
  uint64_t v113 = (void (*)(void))static Font.system(_:weight:)();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v16 + 8);
  v27(v18, v15);
  uint64_t v110 = v27;
  uint64_t v109 = v16 + 8;
  unsigned int v115 = enum case for Font.TextStyle.body(_:);
  v26(v18);
  static Font.Weight.bold.getter();
  uint64_t v107 = (void (*)(void))static Font.system(_:weight:)();
  v27(v18, v15);
  uint64_t v127 = a1 + *(int *)(type metadata accessor for PressureComponentContentView(0) + 20);
  uint64_t v28 = *(void *)v127;
  LOBYTE(v26) = *(unsigned char *)(v127 + 8);
  sub_100195B7C(*(void *)v127, (char)v26);
  sub_100149AE8();
  char v30 = v29;
  sub_10018F6D8(v28, (char)v26);
  uint64_t v31 = enum case for Font.Leading.tight(_:);
  LODWORD(v131) = enum case for Font.Leading.tight(_:);
  uint64_t v32 = type metadata accessor for Font.Leading();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v130 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 104);
  uint64_t v132 = v33 + 104;
  uint64_t v34 = v140;
  uint64_t v126 = v32;
  v130(v140, v31, v32);
  _s7Weather24LocationCompositionStateOwst_0(v34, 0, 1, v32);
  uint64_t v35 = v128;
  sub_10006DF38(v34, (uint64_t)v10 + *(int *)(v128 + 32), &qword_100E6D330);
  uint64_t v36 = v107;
  uint64_t *v10 = (uint64_t)v113;
  v10[1] = (uint64_t)v36;
  *((unsigned char *)v10 + *(int *)(v35 + 36)) = v30 & 1;
  uint64_t v37 = (uint64_t)&v20[*(int *)(v133 + 36)];
  uint64_t v107 = (void (*)(void))type metadata accessor for FontWithSmallVariantModifier;
  sub_10082A958((uint64_t)v10, v37, (void (*)(void))type metadata accessor for FontWithSmallVariantModifier);
  uint64_t v38 = v104;
  *(void *)int v20 = v104;
  v20[8] = v25;
  v20[9] = v105;
  j__swift_retain(v38);
  uint64_t v113 = (void (*)(void))type metadata accessor for FontWithSmallVariantModifier;
  sub_10014CF28((uint64_t)v10, (void (*)(void))type metadata accessor for FontWithSmallVariantModifier);
  sub_100178110(v34, &qword_100E6D330);
  j__swift_release();
  uint64_t v39 = v137;
  static TypesettingLanguageAwareLineHeightRatio.disable.getter();
  sub_10082C820();
  uint64_t v40 = v106;
  View.typesettingLanguageAwareLineHeightRatio(_:isEnabled:)();
  uint64_t v41 = *(void (**)(char *, uint64_t))(v141 + 8);
  v141 += 8;
  uint64_t v133 = (uint64_t)v41;
  v41(v39, v139);
  sub_100178110((uint64_t)v20, &qword_100E9A440);
  unint64_t v42 = v114;
  uint64_t v43 = v138;
  uint64_t v44 = v116;
  (*(void (**)(uint64_t, char *, uint64_t))(v114 + 16))(v138, v40, v116);
  *(_WORD *)(v43 + *(int *)(v112 + 44)) = 257;
  (*(void (**)(char *, uint64_t))(v42 + 8))(v40, v44);
  sub_10024D364(v43, v135, &qword_100E9A450);
  uint64_t v116 = type metadata accessor for PressureComponentViewModel();
  uint64_t v45 = (uint64_t *)(v129 + *(int *)(v116 + 24));
  uint64_t v46 = v45[1];
  uint64_t v142 = *v45;
  uint64_t v143 = v46;
  unint64_t v114 = sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v112 = Text.init<A>(_:)();
  uint64_t v105 = v47;
  uint64_t v106 = v48;
  char v50 = v49 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v52 = v108;
  ((void (*)(char *, void, uint64_t))v108)(v18, v117, v15);
  static Font.Weight.bold.getter();
  uint64_t v117 = static Font.system(_:weight:)();
  uint64_t v53 = v110;
  v110(v18, v15);
  ((void (*)(char *, void, uint64_t))v52)(v18, v115, v15);
  static Font.Weight.bold.getter();
  uint64_t v54 = static Font.system(_:weight:)();
  v53(v18, v15);
  uint64_t v55 = *(void *)v127;
  LOBYTE(v18) = *(unsigned char *)(v127 + 8);
  sub_100195B7C(*(void *)v127, (char)v18);
  sub_100149AE8();
  LOBYTE(v53) = v56;
  sub_10018F6D8(v55, (char)v18);
  uint64_t v57 = v140;
  uint64_t v58 = v126;
  v130(v140, v131, v126);
  _s7Weather24LocationCompositionStateOwst_0(v57, 0, 1, v58);
  uint64_t v59 = v128;
  sub_10006DF38(v57, (uint64_t)v10 + *(int *)(v128 + 32), &qword_100E6D330);
  uint64_t *v10 = v117;
  v10[1] = v54;
  *((unsigned char *)v10 + *(int *)(v59 + 36)) = v53 & 1;
  uint64_t v60 = (uint64_t)v118;
  sub_10082A958((uint64_t)v10, (uint64_t)&v118[*(int *)(v119 + 36)], v107);
  uint64_t v61 = v112;
  uint64_t v62 = v105;
  *(void *)uint64_t v60 = v112;
  *(void *)(v60 + 8) = v62;
  *(unsigned char *)(v60 + 16) = v50;
  *(void *)(v60 + 24) = v106;
  *(void *)(v60 + 32) = KeyPath;
  *(void *)(v60 + 40) = 1;
  *(unsigned char *)(v60 + 48) = 0;
  sub_100190CC4(v61, v62, v50);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10014CF28((uint64_t)v10, v113);
  sub_100178110(v57, &qword_100E6D330);
  sub_100191924(v61, v62, v50);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v63 = v137;
  static TypesettingLanguageAwareLineHeightRatio.disable.getter();
  sub_10014EEB8();
  uint64_t v64 = v120;
  View.typesettingLanguageAwareLineHeightRatio(_:isEnabled:)();
  ((void (*)(char *, uint64_t))v133)(v63, v139);
  sub_100178110(v60, &qword_100E7DF48);
  uint64_t v65 = v123;
  uint64_t v66 = v134;
  uint64_t v67 = v124;
  (*(void (**)(uint64_t, char *, uint64_t))(v123 + 16))(v134, v64, v124);
  *(_WORD *)(v66 + *(int *)(v121 + 44)) = 257;
  (*(void (**)(char *, uint64_t))(v65 + 8))(v64, v67);
  sub_10024D364(v66, v136, &qword_100E9A438);
  uint64_t v68 = (uint64_t *)(v129 + *(int *)(v116 + 28));
  uint64_t v69 = v68[1];
  uint64_t v142 = *v68;
  uint64_t v143 = v69;
  swift_bridgeObjectRetain();
  uint64_t v70 = Text.init<A>(_:)();
  uint64_t v72 = v71;
  LOBYTE(v60) = v73 & 1;
  uint64_t v74 = static Font.subheadline.getter();
  uint64_t v75 = static Font.footnote.getter();
  uint64_t v76 = *(void *)v127;
  LOBYTE(v61) = *(unsigned char *)(v127 + 8);
  sub_100195B7C(*(void *)v127, v61);
  sub_100149AE8();
  LOBYTE(v62) = v77;
  sub_10018F6D8(v76, v61);
  uint64_t v78 = v140;
  uint64_t v79 = v126;
  v130(v140, v131, v126);
  _s7Weather24LocationCompositionStateOwst_0(v78, 0, 1, v79);
  uint64_t v80 = v78;
  uint64_t v81 = v122;
  sub_10006DF38(v80, v122, &qword_100E6D330);
  swift_retain();
  swift_retain();
  sub_10014A8A8(v74, v75, v62 & 1, v81);
  uint64_t v82 = Text.font(_:)();
  uint64_t v84 = v83;
  char v86 = v85;
  uint64_t v131 = v87;
  swift_release();
  swift_release();
  swift_release();
  sub_100191924(v70, v72, v60);
  swift_bridgeObjectRelease();
  sub_100178110(v140, &qword_100E6D330);
  uint64_t v88 = v137;
  static TypesettingLanguageAwareLineHeightRatio.disable.getter();
  uint64_t v132 = Text.typesettingLanguageAwareLineHeightRatio(_:isEnabled:)();
  uint64_t v90 = v89;
  uint64_t v140 = v91;
  LOBYTE(v60) = v92 & 1;
  sub_100191924(v82, v84, v86 & 1);
  swift_bridgeObjectRelease();
  ((void (*)(char *, uint64_t))v133)(v88, v139);
  uint64_t v93 = swift_getKeyPath();
  uint64_t v94 = v135;
  uint64_t v95 = v138;
  sub_10006DF38(v135, v138, &qword_100E9A450);
  uint64_t v96 = v136;
  uint64_t v97 = v134;
  sub_10006DF38(v136, v134, &qword_100E9A438);
  uint64_t v98 = v125;
  sub_10006DF38(v95, v125, &qword_100E9A450);
  uint64_t v99 = sub_10017DF08(&qword_100E9A480);
  sub_10006DF38(v97, v98 + *(int *)(v99 + 48), &qword_100E9A438);
  uint64_t v100 = v98 + *(int *)(v99 + 64);
  uint64_t v101 = v132;
  *(void *)uint64_t v100 = v132;
  *(void *)(v100 + 8) = v90;
  *(unsigned char *)(v100 + 16) = v60;
  *(void *)(v100 + 24) = v140;
  *(void *)(v100 + 32) = v93;
  *(void *)(v100 + 40) = 1;
  *(unsigned char *)(v100 + 48) = 0;
  *(_WORD *)(v100 + 49) = 257;
  sub_100190CC4(v101, v90, v60);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100178110(v96, &qword_100E9A438);
  sub_100178110(v94, &qword_100E9A450);
  sub_100191924(v101, v90, v60);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100178110(v97, &qword_100E9A438);
  return sub_100178110(v138, &qword_100E9A450);
}

uint64_t sub_100827D10@<X0>(char *a1@<X0>, void *a2@<X8>)
{
  uint64_t v57 = a1;
  uint64_t v61 = a2;
  uint64_t v56 = type metadata accessor for Font.TextStyle();
  uint64_t v55 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v54 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_10017DF08(&qword_100E9A3D0);
  __chkstk_darwin(v58);
  uint64_t v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_10017DF08(&qword_100E9A3D8);
  *(void *)&long long v53 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E9A3E0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v59 = (char *)&v43 - v11;
  uint64_t v12 = self;
  id v13 = [v12 mainBundle];
  v87._object = (void *)0x8000000100CB4190;
  v14._uint64_t countAndFlagsBits = 0x736572705F776F4CLL;
  v14._object = (void *)0xEC00000065727573;
  v15._uint64_t countAndFlagsBits = 7827276;
  v15._object = (void *)0xE300000000000000;
  v87._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v87);

  id v16 = [v12 mainBundle];
  v88._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
  v88._object = (void *)0x8000000100CB41C0;
  v17._uint64_t countAndFlagsBits = 0x6572705F68676948;
  v17._object = (void *)0xED00006572757373;
  v18._uint64_t countAndFlagsBits = 1751607624;
  v18._object = (void *)0xE400000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v17, (Swift::String_optional)0, (NSBundle)v16, v18, v88);

  uint64_t v19 = String.count.getter();
  swift_bridgeObjectRelease();
  if (v19 > 4)
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = (uint64_t)v57;
    goto LABEL_5;
  }
  uint64_t v20 = v53;
  uint64_t v21 = String.count.getter();
  swift_bridgeObjectRelease();
  uint64_t v22 = (uint64_t)v57;
  if (v21 >= 5)
  {
LABEL_5:
    uint64_t v44 = static VerticalAlignment.lastTextBaseline.getter();
    sub_100828F30(v22, (uint64_t)&v62);
    uint64_t v46 = v62;
    char v27 = v63;
    uint64_t v48 = v64;
    uint64_t v47 = v65;
    uint64_t v57 = v9;
    char v28 = v66;
    uint64_t v49 = v67;
    char v29 = v68;
    uint64_t v50 = v69;
    long long v53 = v71;
    uint64_t v52 = v72;
    uint64_t v51 = v73;
    char v30 = v74;
    char v80 = 1;
    char v79 = v63;
    char v78 = v66;
    char v77 = v68;
    unsigned __int8 v76 = v70;
    char v75 = v74;
    int v45 = v70;
    uint64_t v31 = v55;
    uint64_t v32 = v54;
    uint64_t v33 = v56;
    (*(void (**)(char *, void, uint64_t))(v55 + 104))(v54, enum case for Font.TextStyle.subheadline(_:), v56);
    static Font.Weight.semibold.getter();
    uint64_t v34 = static Font.system(_:weight:)();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v33);
    uint64_t KeyPath = swift_getKeyPath();
    *(void *)uint64_t v4 = v44;
    *((void *)v4 + 1) = 0;
    v4[16] = 1;
    *(_DWORD *)(v4 + 17) = *(_DWORD *)v85;
    *((_DWORD *)v4 + 5) = *(_DWORD *)&v85[3];
    *((void *)v4 + 3) = v46;
    v4[32] = v27;
    *(_DWORD *)(v4 + 33) = *(_DWORD *)v84;
    *((_DWORD *)v4 + 9) = *(_DWORD *)&v84[3];
    uint64_t v36 = v47;
    *((void *)v4 + 5) = v48;
    *((void *)v4 + 6) = v36;
    v4[56] = v28;
    uint64_t v9 = v57;
    LODWORD(v36) = *(_DWORD *)v83;
    *((_DWORD *)v4 + 15) = *(_DWORD *)&v83[3];
    *(_DWORD *)(v4 + 57) = v36;
    *((void *)v4 + 8) = v49;
    v4[72] = v29;
    *((_DWORD *)v4 + 19) = *(_DWORD *)&v82[3];
    *(_DWORD *)(v4 + 73) = *(_DWORD *)v82;
    *((void *)v4 + 10) = v50;
    v4[88] = v45;
    *(_DWORD *)(v4 + 89) = *(_DWORD *)v81;
    *((_DWORD *)v4 + 23) = *(_DWORD *)&v81[3];
    *((_OWORD *)v4 + 6) = v53;
    uint64_t v37 = v51;
    *((void *)v4 + 14) = v52;
    *((void *)v4 + 15) = v37;
    v4[128] = v30;
    *(_DWORD *)(v4 + 129) = *(_DWORD *)v86;
    *((_DWORD *)v4 + 33) = *(_DWORD *)&v86[3];
    *((void *)v4 + 17) = KeyPath;
    *((void *)v4 + 18) = v34;
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100E9A3E8);
    uint64_t v38 = sub_10018C6DC(&qword_100E9A3F0);
    unint64_t v39 = sub_10082C574();
    uint64_t v62 = v38;
    unint64_t v63 = v39;
    swift_getOpaqueTypeConformance2();
    sub_10082C644();
    uint64_t v26 = (uint64_t)v59;
    _ConditionalContent<>.init(storage:)();
    goto LABEL_6;
  }
  sub_1008284B8((uint64_t)v6);
  uint64_t v23 = v60;
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v4, v6, v60);
  swift_storeEnumTagMultiPayload();
  sub_10017DF08(&qword_100E9A3E8);
  uint64_t v24 = sub_10018C6DC(&qword_100E9A3F0);
  unint64_t v25 = sub_10082C574();
  uint64_t v62 = v24;
  unint64_t v63 = v25;
  swift_getOpaqueTypeConformance2();
  sub_10082C644();
  uint64_t v26 = (uint64_t)v59;
  _ConditionalContent<>.init(storage:)();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v23);
LABEL_6:
  sub_10006DF38(v26, (uint64_t)v9, &qword_100E9A3E0);
  uint64_t v40 = v61;
  void *v61 = 0;
  *((unsigned char *)v40 + 8) = 1;
  uint64_t v41 = sub_10017DF08(&qword_100E9A428);
  sub_10006DF38((uint64_t)v9, (uint64_t)v40 + *(int *)(v41 + 48), &qword_100E9A3E0);
  sub_100178110(v26, &qword_100E9A3E0);
  return sub_100178110((uint64_t)v9, &qword_100E9A3E0);
}

uint64_t sub_1008284B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v28 = type metadata accessor for TypesettingLanguageAwareLineHeightRatio();
  uint64_t v26 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  unint64_t v25 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for FontWithSmallVariantModifier();
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_10017DF08(&qword_100E6D330);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10017DF08(&qword_100E9A3F0);
  __chkstk_darwin(v24);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = static VerticalAlignment.lastTextBaseline.getter();
  sub_100828C44((uint64_t)v29);
  v30[208] = 1;
  memcpy(&v30[7], v29, 0xC9uLL);
  v31[0] = v12;
  v31[1] = 0;
  LOBYTE(v31[2]) = 1;
  memcpy((char *)&v31[2] + 1, v30, 0xD0uLL);
  uint64_t v13 = static Font.subheadline.getter();
  uint64_t v14 = static Font.footnote.getter();
  uint64_t v15 = v1 + *(int *)(type metadata accessor for PressureComponentContentView(0) + 20);
  uint64_t v16 = *(void *)v15;
  char v17 = *(unsigned char *)(v15 + 8);
  sub_100195B7C(*(void *)v15, v17);
  sub_100149AE8();
  char v19 = v18;
  sub_10018F6D8(v16, v17);
  uint64_t v20 = enum case for Font.Leading.tight(_:);
  uint64_t v21 = type metadata accessor for Font.Leading();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v9, v20, v21);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v21);
  sub_10006DF38((uint64_t)v9, (uint64_t)v6 + *(int *)(v4 + 32), &qword_100E6D330);
  *uint64_t v6 = v13;
  v6[1] = v14;
  *((unsigned char *)v6 + *(int *)(v4 + 36)) = v19 & 1;
  sub_10082A958((uint64_t)v6, (uint64_t)&v11[*(int *)(v24 + 36)], (void (*)(void))type metadata accessor for FontWithSmallVariantModifier);
  memcpy(v11, v31, 0xE1uLL);
  sub_10082C708((uint64_t)v31);
  sub_10014CF28((uint64_t)v6, (void (*)(void))type metadata accessor for FontWithSmallVariantModifier);
  sub_100178110((uint64_t)v9, &qword_100E6D330);
  sub_10082C794((uint64_t)v29);
  uint64_t v22 = v25;
  static TypesettingLanguageAwareLineHeightRatio.disable.getter();
  sub_10082C574();
  View.typesettingLanguageAwareLineHeightRatio(_:isEnabled:)();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
  return sub_100178110((uint64_t)v11, &qword_100E9A3F0);
}

uint64_t sub_100828850@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v1 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v1);
  uint64_t v3 = (double *)((char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_10017DF08(&qword_100E802C8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E9A488);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_10017DF08(&qword_100E9A490);
  __chkstk_darwin(v29);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v29 - v13;
  if (qword_100E624B0 != -1) {
    swift_once();
  }
  double v15 = *(double *)&xmmword_100F519E0 * 0.5;
  uint64_t v16 = (char *)v3 + *(int *)(v1 + 20);
  uint64_t v17 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v18 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v16, v17, v18);
  *uint64_t v3 = v15;
  v3[1] = v15;
  uint64_t v19 = static Color.white.getter();
  sub_10082A958((uint64_t)v3, (uint64_t)v6, (void (*)(void))&type metadata accessor for RoundedRectangle);
  *(void *)&v6[*(int *)(v4 + 52)] = v19;
  *(_WORD *)&v6[*(int *)(v4 + 56)] = 256;
  sub_10014CF28((uint64_t)v3, (void (*)(void))&type metadata accessor for RoundedRectangle);
  long long v20 = xmmword_100F519E0;
  if (qword_100E624B8 != -1) {
    swift_once();
  }
  long long v21 = xmmword_100F519F0;
  uint64_t KeyPath = swift_getKeyPath();
  sub_10006DF38((uint64_t)v6, (uint64_t)v9, &qword_100E802C8);
  uint64_t v23 = &v9[*(int *)(v7 + 36)];
  *(_OWORD *)uint64_t v23 = v20;
  *((_OWORD *)v23 + 1) = v21;
  *((void *)v23 + 4) = KeyPath;
  v23[40] = 0;
  sub_100178110((uint64_t)v6, &qword_100E802C8);
  double v24 = (*((double *)&xmmword_100F519E0 + 1) + -11.0) * -0.5;
  sub_10006DF38((uint64_t)v9, (uint64_t)v11, &qword_100E9A488);
  unint64_t v25 = &v11[*(int *)(v29 + 36)];
  *(void *)unint64_t v25 = 0;
  *((double *)v25 + 1) = v24;
  sub_100178110((uint64_t)v9, &qword_100E9A488);
  sub_10024D364((uint64_t)v11, (uint64_t)v14, &qword_100E9A490);
  sub_10006DF38((uint64_t)v14, (uint64_t)v11, &qword_100E9A490);
  uint64_t v26 = v30;
  sub_10006DF38((uint64_t)v11, v30, &qword_100E9A490);
  uint64_t v27 = v26 + *(int *)(sub_10017DF08(&qword_100E9A498) + 48);
  *(void *)uint64_t v27 = 0;
  *(unsigned char *)(v27 + 8) = 1;
  sub_100178110((uint64_t)v14, &qword_100E9A490);
  return sub_100178110((uint64_t)v11, &qword_100E9A490);
}

uint64_t sub_100828C44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1 = self;
  id v2 = [v1 mainBundle];
  v57._object = (void *)0x8000000100CB4190;
  v3._uint64_t countAndFlagsBits = 0x736572705F776F4CLL;
  v3._object = (void *)0xEC00000065727573;
  v4._uint64_t countAndFlagsBits = 7827276;
  v4._object = (void *)0xE300000000000000;
  v57._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v57);

  sub_10014A85C();
  uint64_t v5 = Text.init<A>(_:)();
  uint64_t v19 = v6;
  uint64_t v20 = v5;
  char v18 = v7;
  uint64_t v21 = v8;
  uint64_t KeyPath = swift_getKeyPath();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  id v9 = [v1 mainBundle];
  v58._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
  v58._object = (void *)0x8000000100CB41C0;
  v10._uint64_t countAndFlagsBits = 0x6572705F68676948;
  v10._object = (void *)0xED00006572757373;
  v11._uint64_t countAndFlagsBits = 1751607624;
  v11._object = (void *)0xE400000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v58)._object;

  uint64_t v34 = object;
  uint64_t v49 = 0;
  char v50 = 1;
  uint64_t v41 = v20;
  uint64_t v42 = v19;
  char v43 = v18 & 1;
  uint64_t v44 = v21;
  uint64_t v45 = KeyPath;
  uint64_t v46 = 1;
  char v47 = 0;
  __int16 v48 = 257;
  v51[0] = &v49;
  v51[1] = &v41;
  uint64_t v33 = 0;
  LOBYTE(v34) = 1;
  uint64_t v35 = v51[5];
  char v36 = v52;
  uint64_t v37 = v53;
  char v38 = v54;
  uint64_t v39 = v55;
  uint64_t v40 = v56;
  uint64_t v25 = Text.init<A>(_:)();
  uint64_t v26 = v13;
  char v27 = v14 & 1;
  uint64_t v28 = v15;
  uint64_t v29 = swift_getKeyPath();
  uint64_t v30 = 1;
  char v31 = 0;
  __int16 v32 = 257;
  v51[2] = &v33;
  v51[3] = &v25;
  uint64_t v23 = 0;
  char v24 = 1;
  v51[4] = &v23;
  sub_1004B9954(v51, a1);
  sub_100191924(v25, v26, v27);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100191924(v41, v42, v43);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100828F30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = Image.init(systemName:)();
  uint64_t v5 = a1 + *(int *)(type metadata accessor for PressureComponentContentView(0) + 20);
  uint64_t v6 = *(void *)v5;
  char v7 = *(unsigned char *)(v5 + 8);
  sub_100195B7C(*(void *)v5, v7);
  sub_100149AE8();
  sub_10018F6D8(v6, v7);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v20 = v4;
  uint64_t v21 = 0;
  char v22 = 1;
  v23[0] = &v21;
  v23[1] = &v20;
  uint64_t v11 = Image.init(systemName:)();
  uint64_t v12 = 0;
  char v13 = 1;
  char v14 = v23[5];
  char v15 = v24;
  uint64_t v16 = v25;
  char v17 = v26;
  uint64_t v18 = v27;
  uint64_t v19 = v28;
  v23[2] = &v12;
  v23[3] = &v11;
  uint64_t v9 = 0;
  char v10 = 1;
  v23[4] = &v9;
  sub_1004B9ADC(v23, a2);
  swift_release();
  return swift_release();
}

void *sub_1008290AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = static VerticalAlignment.center.getter();
  sub_100829124(v1, (uint64_t)__src);
  memcpy(&v6[7], __src, 0x161uLL);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  return memcpy((void *)(a1 + 17), v6, 0x168uLL);
}

uint64_t sub_100829124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = [self currentDevice];
  id v5 = [v4 userInterfaceIdiom];

  if (v5)
  {
    unsigned __int8 v6 = static Axis.Set.horizontal.getter();
    unsigned __int8 v7 = static Axis.Set.vertical.getter();
    char v8 = Axis.Set.init(rawValue:)();
    Axis.Set.init(rawValue:)();
    if (Axis.Set.init(rawValue:)() != v6) {
      char v8 = Axis.Set.init(rawValue:)();
    }
    Axis.Set.init(rawValue:)();
    if (Axis.Set.init(rawValue:)() != v7) {
      char v8 = Axis.Set.init(rawValue:)();
    }
    sub_100829384(a1, __src);
    memcpy(&v13[7], __src, 0x140uLL);
    LOBYTE(__dst[0]) = v8;
    memcpy((char *)__dst + 1, v13, 0x147uLL);
    __dst[41] = 0x3FF0000000000000;
    sub_10082BC04((uint64_t)__dst);
  }
  else
  {
    uint64_t v9 = static HorizontalAlignment.leading.getter();
    sub_1008299B4(a1, (uint64_t)__src);
    memcpy(&v13[7], __src, 0x90uLL);
    __dst[0] = v9;
    __dst[1] = 0;
    LOBYTE(__dst[2]) = 1;
    memcpy((char *)&__dst[2] + 1, v13, 0x97uLL);
    __dst[21] = 0x3FF0000000000000;
    sub_10082C23C((uint64_t)__dst);
  }
  sub_10024D364((uint64_t)__dst, (uint64_t)v11, &qword_100E9A308);
  sub_10017DF08(&qword_100E9A310);
  sub_10017DF08(&qword_100E9A318);
  sub_10082BC10();
  sub_10082BCD4();
  _ConditionalContent<>.init(storage:)();
  memcpy(__dst, v15, 0x151uLL);
  memcpy(v11, v15, 0x151uLL);
  memcpy((void *)a2, v15, 0x151uLL);
  v13[0] = 0;
  *(void *)(a2 + 344) = 0;
  *(unsigned char *)(a2 + 352) = 0;
  sub_10082BF9C((uint64_t)v11);
  return sub_10082BF9C((uint64_t)__dst);
}

uint64_t sub_100829384@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v26 = static VerticalAlignment.lastTextBaseline.getter();
  sub_100829604(a1, (uint64_t)__dst);
  uint64_t v3 = __dst[0];
  uint64_t v20 = __dst[0];
  char v16 = __dst[1];
  uint64_t v4 = __dst[2];
  char v5 = __dst[4];
  uint64_t v6 = __dst[5];
  uint64_t v22 = __dst[6];
  uint64_t v23 = __dst[3];
  char v7 = __dst[8];
  uint64_t v8 = __dst[9];
  uint64_t v24 = __dst[10];
  uint64_t v25 = __dst[7];
  uint64_t v14 = __dst[12];
  uint64_t v15 = __dst[11];
  char v9 = __dst[13];
  uint64_t v13 = __dst[14];
  char v17 = __dst[8];
  char v10 = BYTE1(__dst[1]);
  char v18 = BYTE1(__dst[1]);
  char v19 = __dst[4];
  uint64_t v12 = static HorizontalAlignment.leading.getter();
  sub_1008299B4(a1, (uint64_t)__src);
  v28[152] = 1;
  memcpy(&v28[7], __src, 0x90uLL);
  v29[0] = v26;
  v29[1] = 0x4030000000000000;
  LOBYTE(v29[2]) = 0;
  v29[3] = v3;
  LOBYTE(v29[4]) = v16;
  BYTE1(v29[4]) = v10;
  v29[5] = v4;
  v29[6] = v23;
  LOBYTE(v29[7]) = v5;
  v29[8] = v6;
  v29[9] = v22;
  v29[10] = v25;
  LOBYTE(v29[11]) = v7;
  v29[12] = v8;
  v29[13] = v24;
  v29[14] = v15;
  v29[15] = v14;
  LOBYTE(v29[16]) = v9;
  v29[17] = v13;
  LOWORD(v29[18]) = 257;
  v30[0] = v12;
  v30[1] = 0;
  LOBYTE(v30[2]) = 1;
  memcpy((char *)&v30[2] + 1, v28, 0x97uLL);
  memcpy(__dst, v29, 0x92uLL);
  memcpy(&__dst[19], v30, 0xA8uLL);
  memcpy(a2, __dst, 0x140uLL);
  v32[0] = v12;
  v32[1] = 0;
  char v33 = 1;
  memcpy(v34, v28, sizeof(v34));
  sub_10082C254((uint64_t)v29);
  sub_10082C31C((uint64_t)v30);
  sub_10082C3E4((uint64_t)v32);
  v35[0] = v26;
  v35[1] = 0x4030000000000000;
  char v36 = 0;
  uint64_t v37 = v20;
  char v38 = v16;
  char v39 = v18;
  uint64_t v40 = v4;
  uint64_t v41 = v23;
  char v42 = v19;
  uint64_t v43 = v6;
  uint64_t v44 = v22;
  uint64_t v45 = v25;
  char v46 = v17;
  uint64_t v47 = v8;
  uint64_t v48 = v24;
  uint64_t v49 = v15;
  uint64_t v50 = v14;
  char v51 = v9;
  uint64_t v52 = v13;
  __int16 v53 = 257;
  return sub_10082C4AC((uint64_t)v35);
}

uint64_t sub_100829604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100829870(a1, (uint64_t)&v32);
  char v20 = BYTE1(v33);
  uint64_t v22 = v32;
  uint64_t v23 = v35;
  uint64_t v31 = v37;
  uint64_t v24 = v34;
  uint64_t v25 = v38;
  uint64_t v27 = v39;
  char v26 = v40;
  char v29 = v33;
  char v30 = v36;
  uint64_t v21 = static Font.largeTitle.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v4 = (uint64_t *)(a1 + *(int *)(type metadata accessor for PressureComponentViewModel() + 28));
  uint64_t v5 = v4[1];
  uint64_t v32 = *v4;
  uint64_t v33 = v5;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v6 = Text.init<A>(_:)();
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  static Font.subheadline.getter();
  uint64_t v11 = Text.font(_:)();
  uint64_t v17 = v12;
  uint64_t v18 = v11;
  char v14 = v13;
  uint64_t v28 = v15;
  swift_release();
  sub_100191924(v6, v8, v10);
  swift_bridgeObjectRelease();
  LOBYTE(v32) = v20;
  *(void *)a2 = v22;
  *(unsigned char *)(a2 + 8) = v29;
  *(unsigned char *)(a2 + 9) = v20;
  *(void *)(a2 + 16) = v24;
  *(void *)(a2 + 24) = v23;
  *(unsigned char *)(a2 + 32) = v30;
  *(void *)(a2 + 40) = v31;
  *(void *)(a2 + 48) = v25;
  *(void *)(a2 + 56) = v27;
  *(unsigned char *)(a2 + 64) = v26;
  *(void *)(a2 + 72) = KeyPath;
  *(void *)(a2 + 80) = v21;
  *(void *)(a2 + 88) = v18;
  *(void *)(a2 + 96) = v17;
  *(unsigned char *)(a2 + 104) = v14 & 1;
  *(void *)(a2 + 112) = v28;
  j__swift_retain(v22);
  sub_100190CC4(v24, v23, v30);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100190CC4(v18, v17, v14 & 1);
  swift_bridgeObjectRetain();
  sub_100191924(v18, v17, v14 & 1);
  swift_bridgeObjectRelease();
  j__swift_release();
  sub_100191924(v24, v23, v30);
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100829870@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100829C98(a1, (uint64_t)&v18);
  uint64_t v4 = v18;
  char v5 = BYTE1(v19);
  char v6 = v19;
  uint64_t v7 = (uint64_t *)(a1 + *(int *)(type metadata accessor for PressureComponentViewModel() + 24));
  uint64_t v8 = v7[1];
  uint64_t v18 = *v7;
  uint64_t v19 = v8;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v9 = Text.init<A>(_:)();
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  LOBYTE(v18) = v5;
  *(void *)a2 = v4;
  *(unsigned char *)(a2 + 8) = v6;
  *(unsigned char *)(a2 + 9) = v5;
  *(void *)(a2 + 16) = v9;
  *(void *)(a2 + 24) = v11;
  *(unsigned char *)(a2 + 32) = v15;
  *(void *)(a2 + 40) = v13;
  *(void *)(a2 + 48) = KeyPath;
  *(void *)(a2 + 56) = 1;
  *(unsigned char *)(a2 + 64) = 0;
  j__swift_retain(v4);
  sub_100190CC4(v9, v11, v15);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100191924(v9, v11, v15);
  swift_release();
  swift_bridgeObjectRelease();
  return j__swift_release();
}

uint64_t sub_1008299B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = static VerticalAlignment.center.getter();
  sub_100829870(a1, (uint64_t)&v35);
  uint64_t v34 = v35;
  char v5 = BYTE1(v36);
  uint64_t v28 = v38;
  uint64_t v29 = v37;
  char v6 = v39;
  uint64_t v30 = v41;
  uint64_t v31 = v40;
  uint64_t v32 = v42;
  char v25 = v43;
  char v33 = v36;
  uint64_t v27 = static Font.largeTitle.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v7 = (uint64_t *)(a1 + *(int *)(type metadata accessor for PressureComponentViewModel() + 28));
  uint64_t v8 = v7[1];
  uint64_t v35 = *v7;
  uint64_t v36 = v8;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v9 = Text.init<A>(_:)();
  uint64_t v11 = v10;
  LOBYTE(v8) = v12 & 1;
  static Font.subheadline.getter();
  uint64_t v13 = Text.font(_:)();
  uint64_t v22 = v14;
  uint64_t v23 = v13;
  char v16 = v15;
  uint64_t v24 = v17;
  swift_release();
  sub_100191924(v9, v11, v8);
  swift_bridgeObjectRelease();
  char v53 = 1;
  char v52 = v5;
  char v49 = v6;
  char v47 = v25;
  char v45 = v16 & 1;
  *(_DWORD *)(a2 + 17) = v35;
  *(_DWORD *)(a2 + 20) = *(_DWORD *)((char *)&v35 + 3);
  *(_DWORD *)(a2 + 34) = v50;
  *(_WORD *)(a2 + 38) = v51;
  int v18 = *(_DWORD *)v48;
  *(_DWORD *)(a2 + 60) = *(_DWORD *)&v48[3];
  *(_DWORD *)(a2 + 57) = v18;
  LOBYTE(v18) = v47;
  int v19 = *(_DWORD *)v46;
  *(_DWORD *)(a2 + 92) = *(_DWORD *)&v46[3];
  *(_DWORD *)(a2 + 89) = v19;
  int v20 = *(_DWORD *)v44;
  *(_DWORD *)(a2 + 132) = *(_DWORD *)&v44[3];
  *(_DWORD *)(a2 + 129) = v20;
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(void *)(a2 + 24) = v34;
  *(unsigned char *)(a2 + 32) = v33;
  *(unsigned char *)(a2 + 33) = v5;
  *(void *)(a2 + 40) = v29;
  *(void *)(a2 + 48) = v28;
  *(unsigned char *)(a2 + 56) = v6;
  *(void *)(a2 + 64) = v31;
  *(void *)(a2 + 72) = v30;
  *(void *)(a2 + 80) = v32;
  *(unsigned char *)(a2 + 88) = v18;
  *(void *)(a2 + 96) = KeyPath;
  *(void *)(a2 + 104) = v27;
  *(void *)(a2 + 112) = v23;
  *(void *)(a2 + 120) = v22;
  *(unsigned char *)(a2 + 128) = v16 & 1;
  *(void *)(a2 + 136) = v24;
  j__swift_retain(v34);
  sub_100190CC4(v29, v28, v6);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100190CC4(v23, v22, v16 & 1);
  swift_bridgeObjectRetain();
  sub_100191924(v23, v22, v16 & 1);
  swift_bridgeObjectRelease();
  j__swift_release();
  sub_100191924(v29, v28, v6);
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100829C98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for PressureTrend();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v9 - v8, a1, v4);
  int v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v10, v4);
  if (v11 == enum case for PressureTrend.rising(_:) || v11 == enum case for PressureTrend.falling(_:))
  {
    Image.init(systemName:)();
    swift_retain();
    _ConditionalContent<>.init(storage:)();
    sub_10017DF08(&qword_100E824E0);
    sub_1005B9F08();
    _ConditionalContent<>.init(storage:)();
    uint64_t result = swift_release();
LABEL_6:
    *(void *)a2 = v13;
    *(unsigned char *)(a2 + 8) = v14;
    *(unsigned char *)(a2 + 9) = v15;
    return result;
  }
  if (v11 == enum case for PressureTrend.steady(_:))
  {
    Image.init(systemName:)();
    sub_10017DF08(&qword_100E824E0);
    sub_1005B9F08();
    uint64_t result = _ConditionalContent<>.init(storage:)();
    goto LABEL_6;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_100829EE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v1 = sub_10017DF08(&qword_100E9A560);
  uint64_t v2 = v1 - 8;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for ColorRenderingMode();
  uint64_t v5 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for GradientArcView(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8);
  uint64_t v11 = sub_10017DF08(&qword_100E7FED0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  char v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10082A958(v20[1], (uint64_t)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for GradientArcView);
  unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = swift_allocObject();
  sub_10082CA08((uint64_t)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, (void (*)(void))type metadata accessor for GradientArcView);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for ColorRenderingMode.nonLinear(_:), v21);
  Canvas<>.init(opaque:colorMode:rendersAsynchronously:renderer:)();
  Canvas.rendersAsynchronously.setter();
  Canvas.rendersFirstFrameAsynchronously.setter();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v4, v14, v11);
  uint64_t v17 = &v4[*(int *)(v2 + 44)];
  *(void *)uint64_t v17 = 0x3FF0000000000000;
  *((_WORD *)v17 + 4) = 0;
  uint64_t v18 = v22;
  sub_10006DF38((uint64_t)v4, v22, &qword_100E9A560);
  *(unsigned char *)(v18 + *(int *)(sub_10017DF08(&qword_100E9A568) + 36)) = 1;
  sub_100178110((uint64_t)v4, &qword_100E9A560);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_10082A23C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for GraphicsContext.Shading();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10082A490(a2);
  Path.init(ellipseIn:)();
  static GraphicsContext.Shading.conicGradient(_:center:angle:options:)();
  swift_bridgeObjectRelease();
  GraphicsContext.fill(_:with:style:)();
  sub_10020C4D4((uint64_t)v12);
  uint64_t v7 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
  v7(v6, v3);
  GraphicsContext.blendMode.setter();
  uint64_t v8 = a2 + *(int *)(type metadata accessor for GradientArcView(0) + 24);
  uint64_t v9 = *(void *)v8;
  char v10 = *(unsigned char *)(v8 + 8);
  sub_100195B7C(*(void *)v8, v10);
  sub_100149AE8();
  sub_10018F6D8(v9, v10);
  Path.init(ellipseIn:)();
  static Color.clear.getter();
  static GraphicsContext.Shading.color(_:)();
  swift_release();
  GraphicsContext.fill(_:with:style:)();
  sub_10020C4D4((uint64_t)v13);
  return ((uint64_t (*)(unsigned char *, uint64_t))v7)(v6, v3);
}

uint64_t sub_10082A490(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Color.RGBColorSpace();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PressureTrend();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for GradientArcView(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1 + *(int *)(v10 + 20), v6);
  int v11 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v11 == enum case for PressureTrend.rising(_:))
  {
    sub_10017DF08(&qword_100E6BEE8);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_100C33BA0;
    uint64_t v13 = enum case for Color.RGBColorSpace.sRGB(_:);
    char v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
    v14(v5, enum case for Color.RGBColorSpace.sRGB(_:), v2);
    Color.init(_:white:opacity:)();
    *(void *)(v12 + 32) = Gradient.Stop.init(color:location:)();
    *(void *)(v12 + 40) = v15;
    v14(v5, v13, v2);
    Color.init(_:white:opacity:)();
    *(void *)(v12 + 48) = Gradient.Stop.init(color:location:)();
    *(void *)(v12 + 56) = v16;
    v14(v5, v13, v2);
LABEL_5:
    Color.init(_:white:opacity:)();
    *(void *)(v12 + 64) = Gradient.Stop.init(color:location:)();
    *(void *)(v12 + 72) = v21;
    return Gradient.init(stops:)();
  }
  if (v11 == enum case for PressureTrend.falling(_:))
  {
    sub_10017DF08(&qword_100E6BEE8);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_100C33BA0;
    uint64_t v17 = enum case for Color.RGBColorSpace.sRGB(_:);
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
    v18(v5, enum case for Color.RGBColorSpace.sRGB(_:), v2);
    Color.init(_:white:opacity:)();
    *(void *)(v12 + 32) = Gradient.Stop.init(color:location:)();
    *(void *)(v12 + 40) = v19;
    v18(v5, v17, v2);
    Color.init(_:white:opacity:)();
    *(void *)(v12 + 48) = Gradient.Stop.init(color:location:)();
    *(void *)(v12 + 56) = v20;
    v18(v5, v17, v2);
    goto LABEL_5;
  }
  if (v11 == enum case for PressureTrend.steady(_:))
  {
    sub_10017DF08(&qword_100E6BEE8);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_100C31870;
    uint64_t v23 = enum case for Color.RGBColorSpace.sRGB(_:);
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
    v24(v5, enum case for Color.RGBColorSpace.sRGB(_:), v2);
    Color.init(_:white:opacity:)();
    *(void *)(v22 + 32) = Gradient.Stop.init(color:location:)();
    *(void *)(v22 + 40) = v25;
    v24(v5, v23, v2);
    Color.init(_:white:opacity:)();
    *(void *)(v22 + 48) = Gradient.Stop.init(color:location:)();
    *(void *)(v22 + 56) = v26;
    v24(v5, v23, v2);
    Color.init(_:white:opacity:)();
    *(void *)(v22 + 64) = Gradient.Stop.init(color:location:)();
    *(void *)(v22 + 72) = v27;
    v24(v5, v23, v2);
    Color.init(_:white:opacity:)();
    *(void *)(v22 + 80) = Gradient.Stop.init(color:location:)();
    *(void *)(v22 + 88) = v28;
    return Gradient.init(stops:)();
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_10082A958(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t *sub_10082A9AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v35 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v35 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v7 = type metadata accessor for PressureTrend();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = (int *)type metadata accessor for PressureComponentViewModel();
    uint64_t v9 = v8[5];
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    int v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    void *v10 = v13;
    v10[1] = v12;
    uint64_t v14 = v8[6];
    uint64_t v15 = (uint64_t *)((char *)a1 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = v8[7];
    uint64_t v19 = (uint64_t *)((char *)a1 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    *(uint64_t *)((char *)a1 + v8[8]) = *(uint64_t *)((char *)a2 + v8[8]);
    uint64_t v22 = v8[9];
    uint64_t v23 = (uint64_t *)((char *)a1 + v22);
    uint64_t v24 = (uint64_t *)((char *)a2 + v22);
    uint64_t v25 = v24[1];
    void *v23 = *v24;
    v23[1] = v25;
    uint64_t v26 = *(int *)(v6 + 20);
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    uint64_t v29 = *(void *)v28;
    char v30 = v28[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100195B7C(v29, v30);
    *(void *)uint64_t v27 = v29;
    v27[8] = v30;
    uint64_t v31 = *(int *)(v6 + 24);
    uint64_t v32 = (char *)a1 + v31;
    char v33 = (char *)a2 + v31;
    uint64_t v34 = *(void *)v33;
    LOBYTE(v6) = v33[8];
    sub_100195B7C(*(void *)v33, v6);
    *(void *)uint64_t v32 = v34;
    v32[8] = v6;
  }
  return a1;
}

uint64_t sub_10082AB58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for PressureComponentViewModel();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10018F6D8(*(void *)(a1 + *(int *)(a2 + 20)), *(unsigned char *)(a1 + *(int *)(a2 + 20) + 8));
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = *(void *)v5;
  char v7 = *(unsigned char *)(v5 + 8);

  return sub_10018F6D8(v6, v7);
}

uint64_t sub_10082AC3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  char v7 = (int *)type metadata accessor for PressureComponentViewModel();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  uint64_t v13 = v7[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = v7[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
  uint64_t v21 = v7[9];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = *(int *)(a3 + 20);
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  uint64_t v28 = *(void *)v27;
  char v29 = *(unsigned char *)(v27 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100195B7C(v28, v29);
  *(void *)uint64_t v26 = v28;
  *(unsigned char *)(v26 + 8) = v29;
  uint64_t v30 = *(int *)(a3 + 24);
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = *(void *)v32;
  LOBYTE(a3) = *(unsigned char *)(v32 + 8);
  sub_100195B7C(*(void *)v32, a3);
  *(void *)uint64_t v31 = v33;
  *(unsigned char *)(v31 + 8) = a3;
  return a1;
}

uint64_t sub_10082AD98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  char v7 = (int *)type metadata accessor for PressureComponentViewModel();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = v7[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = v7[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
  uint64_t v17 = v7[9];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = *(int *)(a3 + 20);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = *(void *)v22;
  char v24 = *(unsigned char *)(v22 + 8);
  sub_100195B7C(*(void *)v22, v24);
  uint64_t v25 = *(void *)v21;
  char v26 = *(unsigned char *)(v21 + 8);
  *(void *)uint64_t v21 = v23;
  *(unsigned char *)(v21 + 8) = v24;
  sub_10018F6D8(v25, v26);
  uint64_t v27 = *(int *)(a3 + 24);
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = *(void *)v29;
  LOBYTE(a3) = *(unsigned char *)(v29 + 8);
  sub_100195B7C(*(void *)v29, a3);
  uint64_t v31 = *(void *)v28;
  char v32 = *(unsigned char *)(v28 + 8);
  *(void *)uint64_t v28 = v30;
  *(unsigned char *)(v28 + 8) = a3;
  sub_10018F6D8(v31, v32);
  return a1;
}

uint64_t sub_10082AF40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  char v7 = (int *)type metadata accessor for PressureComponentViewModel();
  *(_OWORD *)(a1 + v7[5]) = *(_OWORD *)(a2 + v7[5]);
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  *(_OWORD *)(a1 + v7[7]) = *(_OWORD *)(a2 + v7[7]);
  *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
  *(_OWORD *)(a1 + v7[9]) = *(_OWORD *)(a2 + v7[9]);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(void *)uint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  uint64_t v12 = a1 + v9;
  uint64_t v13 = a2 + v9;
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  return a1;
}

uint64_t sub_10082B028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  char v7 = (int *)type metadata accessor for PressureComponentViewModel();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = v7[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = v7[7];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
  uint64_t v23 = v7[9];
  char v24 = (void *)(a1 + v23);
  uint64_t v25 = (uint64_t *)(a2 + v23);
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  *char v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = *(int *)(a3 + 20);
  uint64_t v29 = a1 + v28;
  uint64_t v30 = (uint64_t *)(a2 + v28);
  uint64_t v31 = *v30;
  LOBYTE(v30) = *((unsigned char *)v30 + 8);
  uint64_t v32 = *(void *)v29;
  char v33 = *(unsigned char *)(v29 + 8);
  *(void *)uint64_t v29 = v31;
  *(unsigned char *)(v29 + 8) = (_BYTE)v30;
  sub_10018F6D8(v32, v33);
  uint64_t v34 = *(int *)(a3 + 24);
  uint64_t v35 = a1 + v34;
  uint64_t v36 = (uint64_t *)(a2 + v34);
  uint64_t v37 = *v36;
  LOBYTE(v36) = *((unsigned char *)v36 + 8);
  uint64_t v38 = *(void *)v35;
  char v39 = *(unsigned char *)(v35 + 8);
  *(void *)uint64_t v35 = v37;
  *(unsigned char *)(v35 + 8) = (_BYTE)v36;
  sub_10018F6D8(v38, v39);
  return a1;
}

uint64_t sub_10082B170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10082B184);
}

uint64_t sub_10082B184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for PressureComponentViewModel();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) != a2) {
    return sub_100163590(a1 + *(int *)(a3 + 20));
  }

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
}

uint64_t sub_10082B204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10082B218);
}

void sub_10082B218(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_10017A9D4();
  sub_100162F30();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    sub_1001650E4();
    _s7Weather24LocationCompositionStateOwst_0(v9, v10, v11, v12);
  }
  else
  {
    *(unsigned char *)(v5 + *(int *)(a4 + 20) + 8) = -v4;
  }
}

uint64_t sub_10082B294()
{
  uint64_t result = type metadata accessor for PressureComponentViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10082B32C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for PressureComponentViewModel();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = (int *)v4;
    uint64_t v7 = type metadata accessor for PressureTrend();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = v6[5];
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = v6[6];
    uint64_t v13 = (uint64_t *)((char *)a1 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = v6[7];
    uint64_t v17 = (uint64_t *)((char *)a1 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    void *v17 = *v18;
    v17[1] = v19;
    *(uint64_t *)((char *)a1 + v6[8]) = *(uint64_t *)((char *)a2 + v6[8]);
    uint64_t v20 = v6[9];
    uint64_t v21 = (uint64_t *)((char *)a1 + v20);
    uint64_t v22 = (uint64_t *)((char *)a2 + v20);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10082B474(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for PressureComponentViewModel();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10082B524(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for PressureComponentViewModel();
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (uint64_t *)(a2 + v6);
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  *uint64_t v7 = v10;
  v7[1] = v9;
  uint64_t v11 = v5[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = v5[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = v17[1];
  void *v16 = *v17;
  v16[1] = v18;
  *(void *)(a1 + v5[8]) = *(void *)(a2 + v5[8]);
  uint64_t v19 = v5[9];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10082B614(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for PressureComponentViewModel();
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = v5[6];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  void *v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = v5[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v5[8]) = *(void *)(a2 + v5[8]);
  uint64_t v15 = v5[9];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  void *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10082B748(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for PressureComponentViewModel();
  *(_OWORD *)(a1 + v5[5]) = *(_OWORD *)(a2 + v5[5]);
  *(_OWORD *)(a1 + v5[6]) = *(_OWORD *)(a2 + v5[6]);
  *(_OWORD *)(a1 + v5[7]) = *(_OWORD *)(a2 + v5[7]);
  *(void *)(a1 + v5[8]) = *(void *)(a2 + v5[8]);
  *(_OWORD *)(a1 + v5[9]) = *(_OWORD *)(a2 + v5[9]);
  return a1;
}

uint64_t sub_10082B7F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for PressureComponentViewModel();
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (uint64_t *)(a2 + v6);
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  *uint64_t v7 = v10;
  v7[1] = v9;
  swift_bridgeObjectRelease();
  uint64_t v11 = v5[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = v5[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  void *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  *(void *)(a1 + v5[8]) = *(void *)(a2 + v5[8]);
  uint64_t v21 = v5[9];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10082B8E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10082B8F8);
}

uint64_t sub_10082B8F8()
{
  uint64_t v2 = sub_10017A9D4();

  return _s7Weather24LocationCompositionStateOwet_0(v1, v0, v2);
}

uint64_t sub_10082B934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10082B948);
}

uint64_t sub_10082B948()
{
  sub_10017A9D4();
  sub_1001650E4();

  return _s7Weather24LocationCompositionStateOwst_0(v0, v1, v2, v3);
}

uint64_t sub_10082B984()
{
  uint64_t result = type metadata accessor for PressureComponentViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_10082BA14()
{
  unint64_t result = qword_100E9A2F8;
  if (!qword_100E9A2F8)
  {
    sub_10018C6DC(&qword_100E7A0B8);
    sub_10082BAC0();
    sub_1008263A0((uint64_t)&qword_100E66BF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A2F8);
  }
  return result;
}

unint64_t sub_10082BAC0()
{
  unint64_t result = qword_100E9A300;
  if (!qword_100E9A300)
  {
    sub_10018C6DC(&qword_100E7A0B0);
    sub_10018C6DC(&qword_100E9A190);
    sub_10082C8F0((uint64_t)&unk_100E9A1A0);
    swift_getOpaqueTypeConformance2();
    sub_1008263A0((uint64_t)&qword_100EAACA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A300);
  }
  return result;
}

uint64_t sub_10082BBCC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10082BBE8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10082BC04(uint64_t result)
{
  *(unsigned char *)(result + 336) = 1;
  return result;
}

unint64_t sub_10082BC10()
{
  unint64_t result = qword_100E9A320;
  if (!qword_100E9A320)
  {
    sub_10018C6DC(&qword_100E9A310);
    sub_10024D5E4((uint64_t)&unk_100E9A328);
    sub_10024D5E4((uint64_t)&qword_100E64690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A320);
  }
  return result;
}

unint64_t sub_10082BCD4()
{
  unint64_t result = qword_100E9A338;
  if (!qword_100E9A338)
  {
    sub_10018C6DC(&qword_100E9A318);
    sub_10024D5E4((uint64_t)&unk_100E9A340);
    sub_10024D5E4((uint64_t)&qword_100E64690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A338);
  }
  return result;
}

uint64_t sub_10082BD98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,char a43)
{
  if (a43)
  {
    j__swift_retain(a5);
    sub_100190CC4(a7, a8, a9 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_100190CC4(a16, a17, a18 & 1);
    swift_bridgeObjectRetain();
    j__swift_retain(a27);
    sub_100190CC4(a29, a30, a31 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    char v47 = a40 & 1;
  }
  else
  {
    j__swift_retain(a7);
    sub_100190CC4(a9, a10, a11 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    a38 = a18;
    a39 = a19;
    char v47 = a20 & 1;
  }
  sub_100190CC4(a38, a39, v47);

  return swift_bridgeObjectRetain();
}

uint64_t sub_10082BF9C(uint64_t a1)
{
  uint64_t v2 = sub_10017DFE0(a1);
  char v11 = *(unsigned char *)(v1 + 336);
  long long v9 = *(_OWORD *)(v1 + 288);
  long long v10 = *(_OWORD *)(v1 + 304);
  long long v7 = *(_OWORD *)(v1 + 256);
  long long v8 = *(_OWORD *)(v1 + 272);
  long long v5 = *(_OWORD *)(v1 + 224);
  long long v6 = *(_OWORD *)(v1 + 240);
  v3(v2, *(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), *(void *)(v1 + 104), *(void *)(v1 + 112), *(void *)(v1 + 120), *(void *)(v1 + 128), *(void *)(v1 + 136), *(void *)(v1 + 144),
    *(void *)(v1 + 152),
    *(void *)(v1 + 160),
    *(void *)(v1 + 168),
    *(void *)(v1 + 176),
    *(void *)(v1 + 184),
    *(void *)(v1 + 192),
    *(void *)(v1 + 200),
    *(void *)(v1 + 208),
    *(void *)(v1 + 216),
    v5,
    *((void *)&v5 + 1),
    v6,
    *((void *)&v6 + 1),
    v7,
    *((void *)&v7 + 1),
    v8,
    *((void *)&v8 + 1),
    v9,
    *((void *)&v9 + 1),
    v10,
    *((void *)&v10 + 1),
    *(void *)(v1 + 320),
    *(void *)(v1 + 328),
    v11);
  return v1;
}

uint64_t sub_10082C034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,char a43)
{
  j__swift_release();
  if (a43)
  {
    sub_100191924(a7, a8, a9 & 1);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_100191924(a16, a17, a18 & 1);
    swift_bridgeObjectRelease();
    j__swift_release();
    sub_100191924(a29, a30, a31 & 1);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    char v47 = a40 & 1;
  }
  else
  {
    sub_100191924(a9, a10, a11 & 1);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    a38 = a18;
    a39 = a19;
    char v47 = a20 & 1;
  }
  sub_100191924(a38, a39, v47);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10082C23C(uint64_t result)
{
  *(unsigned char *)(result + 336) = 0;
  return result;
}

uint64_t sub_10082C254(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  char v4 = *(unsigned char *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 112);
  uint64_t v6 = *(void *)(a1 + 120);
  char v8 = *(unsigned char *)(a1 + 128);
  j__swift_retain(*(void *)(a1 + 24));
  sub_100190CC4(v2, v3, v4);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_100190CC4(v5, v6, v8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10082C31C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 72);
  char v4 = *(unsigned char *)(a1 + 80);
  uint64_t v5 = *(void *)(a1 + 136);
  uint64_t v6 = *(void *)(a1 + 144);
  char v8 = *(unsigned char *)(a1 + 152);
  j__swift_retain(*(void *)(a1 + 48));
  sub_100190CC4(v2, v3, v4);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_100190CC4(v5, v6, v8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10082C3E4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 72);
  char v4 = *(unsigned char *)(a1 + 80);
  uint64_t v5 = *(void *)(a1 + 136);
  uint64_t v6 = *(void *)(a1 + 144);
  char v8 = *(unsigned char *)(a1 + 152);
  j__swift_release();
  sub_100191924(v2, v3, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_100191924(v5, v6, v8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10082C4AC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  char v4 = *(unsigned char *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 112);
  uint64_t v6 = *(void *)(a1 + 120);
  char v8 = *(unsigned char *)(a1 + 128);
  j__swift_release();
  sub_100191924(v2, v3, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_100191924(v5, v6, v8);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_10082C574()
{
  unint64_t result = qword_100E9A3F8;
  if (!qword_100E9A3F8)
  {
    sub_10018C6DC(&qword_100E9A3F0);
    sub_10024D5E4((uint64_t)&unk_100E9A400);
    sub_1008263A0((uint64_t)&qword_100E7DF80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A3F8);
  }
  return result;
}

unint64_t sub_10082C644()
{
  unint64_t result = qword_100E9A410;
  if (!qword_100E9A410)
  {
    sub_10018C6DC(&qword_100E9A3E8);
    sub_10024D5E4((uint64_t)&unk_100E9A418);
    sub_10024D5E4((uint64_t)&qword_100E65218);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A410);
  }
  return result;
}

uint64_t sub_10082C708(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 160);
  uint64_t v3 = *(void *)(a1 + 168);
  char v4 = *(unsigned char *)(a1 + 176);
  sub_100190CC4(*(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100190CC4(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_10082C794(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 136);
  uint64_t v3 = *(void *)(a1 + 144);
  char v4 = *(unsigned char *)(a1 + 152);
  sub_100191924(*(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  swift_release();
  swift_bridgeObjectRelease();
  sub_100191924(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_10082C820()
{
  unint64_t result = qword_100E9A458;
  if (!qword_100E9A458)
  {
    sub_10018C6DC(&qword_100E9A440);
    sub_10082C8F0((uint64_t)&unk_100E9A460);
    sub_1008263A0((uint64_t)&qword_100E7DF80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A458);
  }
  return result;
}

unint64_t sub_10082C8F0(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    sub_10018C6DC(v3);
    v5();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_10082C964()
{
  unint64_t result = qword_100E9A470;
  if (!qword_100E9A470)
  {
    sub_10018C6DC(&qword_100E9A478);
    sub_1005B9F08();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A470);
  }
  return result;
}

uint64_t type metadata accessor for GradientArcView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E9A500);
}

uint64_t sub_10082CA08(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t *sub_10082CA5C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    *a1 = *a2;
    uint64_t v7 = *(int *)(a3 + 20);
    char v8 = (char *)a1 + v7;
    long long v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for PressureTrend();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = *(int *)(v6 + 24);
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = *(void *)v13;
    LOBYTE(v6) = v13[8];
    sub_100195B7C(*(void *)v13, v6);
    *(void *)uint64_t v12 = v14;
    v12[8] = v6;
  }
  return v4;
}

uint64_t sub_10082CB60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = *(void *)v6;
  char v8 = *(unsigned char *)(v6 + 8);

  return sub_10018F6D8(v7, v8);
}

void *sub_10082CBEC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2;
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  char v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for PressureTrend();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)v4 + v10;
  uint64_t v13 = *(void *)v12;
  LOBYTE(v4) = v12[8];
  sub_100195B7C(*(void *)v12, (char)v4);
  *(void *)uint64_t v11 = v13;
  v11[8] = (char)v4;
  return a1;
}

void *sub_10082CCA0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2;
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  char v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for PressureTrend();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)v4 + v10;
  uint64_t v13 = *(void *)v12;
  LOBYTE(v4) = v12[8];
  sub_100195B7C(*(void *)v12, (char)v4);
  uint64_t v14 = *(void *)v11;
  char v15 = v11[8];
  *(void *)uint64_t v11 = v13;
  v11[8] = (char)v4;
  sub_10018F6D8(v14, v15);
  return a1;
}

void *sub_10082CD60(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  char v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for PressureTrend();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v12[8];
  return a1;
}

void *sub_10082CE08(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  char v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for PressureTrend();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = *(void *)v12;
  LOBYTE(v12) = v12[8];
  uint64_t v14 = *(void *)v11;
  char v15 = v11[8];
  *(void *)uint64_t v11 = v13;
  v11[8] = (char)v12;
  sub_10018F6D8(v14, v15);
  return a1;
}

uint64_t sub_10082CEBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10082CED0);
}

uint64_t sub_10082CED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for PressureTrend();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) != a2) {
    return sub_100163590(a1 + *(int *)(a3 + 24));
  }
  uint64_t v8 = v6;
  uint64_t v9 = a1 + *(int *)(a3 + 20);

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_10082CF54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10082CF68);
}

void sub_10082CF68(uint64_t a1, char a2, int a3, uint64_t a4)
{
  type metadata accessor for PressureTrend();
  sub_100162F30();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    sub_1001650E4();
    _s7Weather24LocationCompositionStateOwst_0(v9, v10, v11, v12);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24) + 8) = -a2;
  }
}

uint64_t sub_10082CFF4()
{
  uint64_t result = type metadata accessor for PressureTrend();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_10082D098()
{
  return sub_10024D5E4((uint64_t)&unk_100E9A540);
}

unint64_t sub_10082D0D4()
{
  return sub_10024D5E4((uint64_t)&unk_100E9A550);
}

uint64_t sub_10082D110()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10082D12C()
{
  unint64_t v1 = (int *)(type metadata accessor for GradientArcView(0) - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  type metadata accessor for PressureTrend();
  sub_100162E4C();
  sub_100162F0C();
  v3();
  sub_10018F6D8(*(void *)(v2 + v1[8]), *(unsigned char *)(v2 + v1[8] + 8));

  return swift_deallocObject();
}

uint64_t sub_10082D220(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for GradientArcView(0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10082A23C(a1, v4);
}

unint64_t sub_10082D2AC()
{
  unint64_t result = qword_100E9A570;
  if (!qword_100E9A570)
  {
    sub_10018C6DC(&qword_100E9A568);
    sub_10082D328();
    sub_10082D3C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A570);
  }
  return result;
}

unint64_t sub_10082D328()
{
  unint64_t result = qword_100E9A578;
  if (!qword_100E9A578)
  {
    sub_10018C6DC(&qword_100E9A560);
    sub_10024D5E4((uint64_t)&qword_100E7FEF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A578);
  }
  return result;
}

unint64_t sub_10082D3C8()
{
  unint64_t result = qword_100E9A580;
  if (!qword_100E9A580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A580);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationPreviewTracker()
{
  return &type metadata for LocationPreviewTracker;
}

uint64_t *sub_10082D424(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v14 = sub_10017DF08(&qword_100E7DDF8);
    *(void *)&v9[*(int *)(v14 + 28)] = *(void *)&v10[*(int *)(v14 + 28)];
    uint64_t v15 = *(int *)(a3 + 32);
    uint64_t v16 = (char *)v4 + v15;
    uint64_t v17 = (char *)a2 + v15;
    char *v16 = *v17;
    *((void *)v16 + 1) = *((void *)v17 + 1);
    swift_retain();
  }
  swift_retain();
  return v4;
}

_OWORD *sub_10082D5B0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = sub_10017DF08(&qword_100E7DDF8);
  *(void *)&v8[*(int *)(v12 + 28)] = *(void *)&v9[*(int *)(v12 + 28)];
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

_OWORD *sub_10082D6BC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  uint64_t v15 = sub_10017DF08(&qword_100E7DDF8);
  *(void *)&v8[*(int *)(v15 + 28)] = *(void *)&v9[*(int *)(v15 + 28)];
  swift_release();
  uint64_t v16 = *(int *)(a3 + 32);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  char *v17 = *v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  swift_release();
  return a1;
}

uint64_t sub_10082D878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10082D88C);
}

uint64_t sub_10082D88C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10017DF08(&qword_100E7DDF8);
    uint64_t v9 = a1 + *(int *)(a3 + 28);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_10082D918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10082D92C);
}

uint64_t sub_10082D92C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10017DF08(&qword_100E7DDF8);
    uint64_t v8 = v5 + *(int *)(a4 + 28);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_10082D9B0(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = &v17[-v7];
  __chkstk_darwin(v6);
  uint64_t v10 = &v17[-v9];
  int v11 = (char *)(a1 + *(int *)(type metadata accessor for TrackExposureModifier() + 32));
  char v12 = *v11;
  uint64_t v13 = *((void *)v11 + 1);
  v17[8] = v12;
  uint64_t v18 = v13;
  sub_10017DF08(&qword_100E65950);
  uint64_t result = State.wrappedValue.getter();
  if (v19 == 1)
  {
    sub_10017DF08(&qword_100E7DDF8);
    State.wrappedValue.getter();
    uint64_t v15 = type metadata accessor for Date();
    int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v15);
    uint64_t result = sub_1001E7540((uint64_t)v10);
    if (v16 == 1)
    {
      Date.init()();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v15);
      sub_1001C7278((uint64_t)v8, (uint64_t)v5);
      State.wrappedValue.setter();
      return sub_1001E7540((uint64_t)v8);
    }
  }
  return result;
}

uint64_t sub_10082DB54()
{
  uint64_t v1 = type metadata accessor for TrackExposureModifier();
  sub_1001627C0(v1);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return sub_10082D9B0(v3);
}

uint64_t sub_10082DB98()
{
  uint64_t v0 = type metadata accessor for TrackExposureModifier();
  sub_1001627C0(v0);
  return sub_100021A90();
}

uint64_t sub_10082DBD8(uint64_t a1)
{
  return sub_1002765BC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(unsigned char *)(a1 + 96));
}

uint64_t sub_10082DC24(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 88);
  char v16 = *(unsigned char *)(a2 + 96);
  sub_10027667C(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v15;
  *(unsigned char *)(a1 + 96) = v16;
  return a1;
}

uint64_t sub_10082DCF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v25 = *(void *)(a2 + 72);
  uint64_t v26 = *(void *)(a2 + 80);
  uint64_t v27 = *(void *)(a2 + 88);
  char v28 = *(unsigned char *)(a2 + 96);
  sub_10027667C(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v25, v26, v27, v28);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = *(_OWORD *)(a1 + 64);
  uint64_t v21 = *(void *)(a1 + 80);
  uint64_t v22 = *(void *)(a1 + 88);
  char v23 = *(unsigned char *)(a1 + 96);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v25;
  *(void *)(a1 + 80) = v26;
  *(void *)(a1 + 88) = v27;
  *(unsigned char *)(a1 + 96) = v28;
  sub_1002765BC(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, v22, v23);
  return a1;
}

uint64_t sub_10082DDF4(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 96);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  long long v12 = *(_OWORD *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 80);
  uint64_t v14 = *(void *)(a1 + 88);
  char v15 = *(unsigned char *)(a1 + 96);
  long long v16 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v16;
  long long v17 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v17;
  long long v18 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v18;
  *(unsigned char *)(a1 + 96) = v3;
  sub_1002765BC(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, v14, v15);
  return a1;
}

uint64_t sub_10082DE74(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7E && *(unsigned char *)(a1 + 97))
    {
      unsigned int v2 = *(_DWORD *)a1 + 125;
    }
    else
    {
      unsigned int v2 = ((*(unsigned __int8 *)(a1 + 96) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 96) >> 1) & 0x1F))) ^ 0x7F;
      if (v2 >= 0x7D) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t sub_10082DEC0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 96) = 0;
    *(void *)uint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 97) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 97) = 0;
    }
    if (a2)
    {
      *(_OWORD *)(result + 64) = 0u;
      *(_OWORD *)(result + 80) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)(result + 48) = 0u;
      *(_OWORD *)uint64_t result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 96) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_10082DF3C(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 96);
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 6;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_10082DF5C(uint64_t result)
{
  *(unsigned char *)(result + 96) &= 0x3Fu;
  return result;
}

uint64_t sub_10082DF6C(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    char v2 = *(unsigned char *)(result + 96) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(void *)uint64_t result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(void *)(result + 88) = 0;
    char v2 = 0x80;
  }
  *(unsigned char *)(result + 96) = v2;
  return result;
}

void type metadata accessor for NotificationSettingsViewModel()
{
}

BOOL sub_10082DFBC(uint64_t a1, uint64_t a2)
{
  sub_1002764FC(a1, (uint64_t)&v24);
  uint64_t v3 = v24;
  int v4 = v29 >> 6;
  if (v4)
  {
    if (v4 != 1)
    {
      int8x8_t v5 = sub_100188148(vorrq_s8(v25, v27), vorrq_s8(v26, v28));
      uint64_t v9 = v6 | *(void *)&v5 | v8 | v7 | v3;
      if (v10 == 128 && v9 == 0)
      {
        sub_1002764FC(a2, (uint64_t)__src);
        if ((v32 & 0xC0) != 0x80
          || v32 != 128
          || *(void *)&sub_100188148(vorrq_s8(vorrq_s8(__src[2], __src[4]), vorrq_s8(__src[3], __src[5])), vorrq_s8(__src[0], __src[1])))
        {
          return 0;
        }
      }
      else
      {
        sub_1002764FC(a2, (uint64_t)__src);
        if ((v32 & 0xC0) != 0x80) {
          return 0;
        }
        if (v32 != 128 || __src[0].i64[0] != 1) {
          return 0;
        }
        int8x8_t v13 = sub_100188148(vorrq_s8(__src[2], __src[4]), vorrq_s8(__src[3], __src[5]));
        if (*(void *)&v13 | v14 | v15 | v16) {
          return 0;
        }
      }
      return 1;
    }
    v29 &= 0x3Fu;
    sub_1002764FC((uint64_t)&v24, (uint64_t)v30);
    sub_1002764FC(a2, (uint64_t)v18);
    if ((v19 & 0xC0) == 0x40)
    {
      v19 &= 0x3Fu;
      sub_1002764FC((uint64_t)v18, (uint64_t)v20);
      sub_1002764FC((uint64_t)v30, (uint64_t)__src);
      if (v32)
      {
        memcpy(__dst, __src, sizeof(__dst));
        sub_1002764FC((uint64_t)v20, (uint64_t)v21);
        if ((v22 & 1) == 0) {
          return 0;
        }
        memcpy(v23, v21, sizeof(v23));
        if ((sub_1007003E0((uint64_t)__dst, (uint64_t)v23) & 1) == 0) {
          return 0;
        }
      }
      else
      {
        memcpy(__dst, __src, 0x48uLL);
        sub_1002764FC((uint64_t)v20, (uint64_t)v21);
        if (v22) {
          return 0;
        }
        memcpy(v23, v21, 0x48uLL);
        if ((sub_10082E32C((uint64_t)__dst, (uint64_t)v23) & 1) == 0) {
          return 0;
        }
      }
      return 1;
    }
  }
  else
  {
    v29 &= 0x3Fu;
    sub_1002764FC(a2, (uint64_t)__src);
    if (v32 > 0x3Fu || ((v3 ^ __src[0].u8[0]) & 1) != 0) {
      return 0;
    }
    if (BYTE1(v3) == 2)
    {
      if (__src[0].u8[1] == 2) {
        return 1;
      }
    }
    else
    {
      if (BYTE1(v3) != 3) {
        return (__src[0].i8[1] & 0xFE) != 2 && ((((v3 & 0x100) == 0) ^ __src[0].u8[1]) & 1) != 0;
      }
      if (__src[0].u8[1] == 3) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_10082E260(uint64_t a1, uint64_t a2)
{
  sub_1002764FC(a1, (uint64_t)__src);
  if ((__src[96] & 1) == 0)
  {
    memcpy(__dst, __src, 0x48uLL);
    sub_1002764FC(a2, (uint64_t)v5);
    if ((v6 & 1) == 0)
    {
      memcpy(v7, v5, 0x48uLL);
      char v3 = sub_10082E32C((uint64_t)__dst, (uint64_t)v7);
      return v3 & 1;
    }
    goto LABEL_5;
  }
  memcpy(__dst, __src, sizeof(__dst));
  sub_1002764FC(a2, (uint64_t)v5);
  if (v6 != 1)
  {
LABEL_5:
    char v3 = 0;
    return v3 & 1;
  }
  memcpy(v7, v5, sizeof(v7));
  char v3 = sub_1007003E0((uint64_t)__dst, (uint64_t)v7);
  return v3 & 1;
}

uint64_t sub_10082E32C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  int v6 = *(unsigned __int8 *)(a1 + 32);
  int v7 = *(unsigned __int8 *)(a1 + 33);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  int v10 = *(unsigned __int8 *)(a2 + 32);
  int v11 = *(unsigned __int8 *)(a2 + 33);
  int v28 = *(unsigned __int8 *)(a2 + 34);
  int v29 = *(unsigned __int8 *)(a1 + 34);
  BOOL v12 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  int v26 = *(unsigned __int8 *)(a2 + 35);
  int v27 = *(unsigned __int8 *)(a1 + 35);
  if (v12 || (char v13 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v13 & 1) != 0))
  {
    BOOL v15 = v4 == v8 && v5 == v9;
    if (v15 || (char v16 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v16 & 1) != 0))
    {
      if ((v6 ^ v10)) {
        return 0;
      }
      if ((v7 ^ v11)) {
        return 0;
      }
      if ((v29 ^ v28)) {
        return 0;
      }
      if ((v27 ^ v26)) {
        return 0;
      }
      sub_100BD925C();
      if ((v17 & 1) == 0) {
        return 0;
      }
      char v18 = *(unsigned char *)(a2 + 48);
      unint64_t v19 = LocationAuthorizationState.rawValue.getter(*(unsigned char *)(a1 + 48));
      uint64_t v21 = v20;
      if (v19 == LocationAuthorizationState.rawValue.getter(v18) && v21 == v22)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        if ((v24 & 1) == 0) {
          return result;
        }
      }
      if ((sub_1001197F8(*(unsigned __int8 *)(a1 + 49), *(unsigned __int8 *)(a2 + 49)) & 1) == 0
        || ((*(unsigned __int8 *)(a1 + 50) ^ *(unsigned __int8 *)(a2 + 50)) & 1) != 0
        || ((*(unsigned __int8 *)(a1 + 51) ^ *(unsigned __int8 *)(a2 + 51)) & 1) != 0)
      {
        return 0;
      }
      else if (*(void *)(a1 + 56) == *(void *)(a2 + 56) && *(void *)(a1 + 64) == *(void *)(a2 + 64))
      {
        return 1;
      }
      else
      {
        return _stringCompareWithSmolCheck(_:_:expecting:)();
      }
    }
  }
  return result;
}

BOOL sub_10082E530(uint64_t a1, uint64_t a2)
{
  sub_1002764FC(a1, (uint64_t)v4);
  sub_1002764FC(a2, (uint64_t)v5);
  return sub_10082DFBC((uint64_t)v4, (uint64_t)v5);
}

uint64_t sub_10082E57C(uint64_t a1, uint64_t a2)
{
  sub_1002764FC(a1, (uint64_t)v4);
  sub_1002764FC(a2, (uint64_t)v5);
  return sub_10082E260((uint64_t)v4, (uint64_t)v5) & 1;
}

uint64_t sub_10082E5CC(uint64_t a1)
{
  return sub_1002765EC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(unsigned char *)(a1 + 96));
}

uint64_t sub_10082E618(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 88);
  char v16 = *(unsigned char *)(a2 + 96);
  sub_1002766AC(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v15;
  *(unsigned char *)(a1 + 96) = v16;
  return a1;
}

uint64_t sub_10082E6E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v25 = *(void *)(a2 + 72);
  uint64_t v26 = *(void *)(a2 + 80);
  uint64_t v27 = *(void *)(a2 + 88);
  char v28 = *(unsigned char *)(a2 + 96);
  sub_1002766AC(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v25, v26, v27, v28);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = *(_OWORD *)(a1 + 64);
  uint64_t v21 = *(void *)(a1 + 80);
  uint64_t v22 = *(void *)(a1 + 88);
  char v23 = *(unsigned char *)(a1 + 96);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v25;
  *(void *)(a1 + 80) = v26;
  *(void *)(a1 + 88) = v27;
  *(unsigned char *)(a1 + 96) = v28;
  sub_1002765EC(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, v22, v23);
  return a1;
}

uint64_t sub_10082E7E8(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 96);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  long long v12 = *(_OWORD *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 80);
  uint64_t v14 = *(void *)(a1 + 88);
  char v15 = *(unsigned char *)(a1 + 96);
  long long v16 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v16;
  long long v17 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v17;
  long long v18 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v18;
  *(unsigned char *)(a1 + 96) = v3;
  sub_1002765EC(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, v14, v15);
  return a1;
}

uint64_t sub_10082E868(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 97))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 96);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10082E8A8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 96) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 97) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 97) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 96) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10082E908(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 96);
}

uint64_t sub_10082E910(uint64_t result, char a2)
{
  *(unsigned char *)(result + 96) = a2 & 1;
  return result;
}

void type metadata accessor for NotificationSettingsViewNavigationModel()
{
}

uint64_t sub_10082E928()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10082E974(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10082E9EC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(unsigned char *)(a1 + 51) = *(unsigned char *)(a2 + 51);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10082EAD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(unsigned char *)(a1 + 51) = *(unsigned char *)(a2 + 51);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for NotificationSettingsViewContentModel()
{
}

void *sub_10082EB80(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10017DF08(&qword_100E62D60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_10082ECB8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_10017DF08(&qword_100E62D60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DynamicTypeSize();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_10082ED78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100E62D60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    *uint64_t v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10082EE58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (void *)(a2 + v6);
    sub_100178110(a1 + v6, &qword_100E62D60);
    sub_10017DF08(&qword_100E62D60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10082EF7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  uint64_t v8 = sub_10017DF08(&qword_100E62D60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10082F058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (const void *)(a2 + v6);
    sub_100178110(a1 + v6, &qword_100E62D60);
    uint64_t v9 = sub_10017DF08(&qword_100E62D60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10082F174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10082F188);
}

uint64_t sub_10082F188()
{
  sub_100181828();
  if (v1) {
    return sub_100163020(*(void *)(v0 + 8));
  }
  sub_10017DF08(&qword_100E79530);
  uint64_t v3 = sub_10019B378();

  return _s7Weather24LocationCompositionStateOwet_0(v3, v4, v5);
}

uint64_t sub_10082F1F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10082F208);
}

void sub_10082F208()
{
  sub_100163298();
  if (v2)
  {
    *(void *)(v1 + 8) = (v0 - 1);
  }
  else
  {
    sub_10017DF08(&qword_100E79530);
    uint64_t v3 = sub_10017E9CC();
    _s7Weather24LocationCompositionStateOwst_0(v3, v4, v5, v6);
  }
}

uint64_t type metadata accessor for ComparisonCapsuleView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E9A760);
}

uint64_t sub_10082F290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100839764(a1, a2, a3, (uint64_t (*)(uint64_t))sub_10048CFC0);
}

uint64_t sub_10082F2A8()
{
  return swift_getOpaqueTypeConformance2();
}

BOOL sub_10082F2C4()
{
  uint64_t v1 = *(void *)(v0 + 8);
  if (!*(void *)(v1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(void *)(type metadata accessor for ComparisonCapsuleViewModel.Row(0) - 8);
  return *(void *)(v1
                   + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
                   + 24) != 0;
}

uint64_t sub_10082F33C@<X0>(uint64_t a1@<X8>)
{
  v30[2] = a1;
  v30[3] = sub_10017DF08(&qword_100E9A798);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = (unsigned char *)(v5 - v4);
  v30[0] = sub_10017DF08(&qword_100E9A7A0);
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_10012B938();
  v30[1] = sub_10017DF08(&qword_100E9A7A8);
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = (unsigned char *)(v10 - v9);
  uint64_t v12 = type metadata accessor for DynamicTypeSize();
  sub_100179C0C();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  long long v17 = (char *)v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  long long v20 = (char *)v30 - v19;
  type metadata accessor for ComparisonCapsuleView(0);
  uint64_t v21 = v1;
  sub_1001CAA20();
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v17, enum case for DynamicTypeSize.accessibility1(_:), v12);
  char v22 = static DynamicTypeSize.< infix(_:_:)();
  char v23 = *(void (**)(char *, uint64_t))(v14 + 8);
  v23(v17, v12);
  v23(v20, v12);
  char v24 = static Axis.Set.horizontal.getter();
  if (v22)
  {
    unsigned char *v11 = v24;
    uint64_t v25 = sub_10017DF08(&qword_100E9A7C8);
    sub_10082F668((uint64_t)v21, (uint64_t)&v11[*(int *)(v25 + 44)]);
    uint64_t v26 = &qword_100E9A7A8;
    sub_10006DF38((uint64_t)v11, v2, &qword_100E9A7A8);
    swift_storeEnumTagMultiPayload();
    sub_10024D5E4((uint64_t)&unk_100E9A7B8);
    sub_10024D5E4((uint64_t)&unk_100E9A7C0);
    sub_1001D1E30();
    uint64_t v27 = (uint64_t)v11;
  }
  else
  {
    *uint64_t v6 = v24;
    uint64_t v28 = sub_10017DF08(&qword_100E9A7B0);
    sub_10082F9B8(v21, (uint64_t)&v6[*(int *)(v28 + 44)]);
    uint64_t v26 = &qword_100E9A798;
    sub_10006DF38((uint64_t)v6, v2, &qword_100E9A798);
    swift_storeEnumTagMultiPayload();
    sub_10024D5E4((uint64_t)&unk_100E9A7B8);
    sub_10024D5E4((uint64_t)&unk_100E9A7C0);
    sub_1001D1E30();
    uint64_t v27 = (uint64_t)v6;
  }
  return sub_100178110(v27, v26);
}

uint64_t sub_10082F668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ComparisonCapsuleCompactGridView(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v25 - v8;
  uint64_t v10 = sub_10017DF08(&qword_100E9A7D0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v25 - v14;
  char v16 = *(unsigned char *)a1;
  uint64_t v17 = *(void *)(a1 + 8);
  uint64_t v18 = *(void *)(a1 + 16);
  uint64_t v19 = *(void *)(a1 + 24);
  uint64_t v20 = *(void *)(a1 + 32);
  if (sub_10082F2C4())
  {
    uint64_t v25 = 0x3FF0000000000000;
    uint64_t v26 = 0x4010000000000000;
    sub_100146A70();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    ScaledValue.init(wrappedValue:step:)();
    uint64_t v21 = &v15[*(int *)(v4 + 20)];
    *uint64_t v21 = v16;
    *((void *)v21 + 1) = v17;
    *((void *)v21 + 2) = v18;
    *((void *)v21 + 3) = v19;
    *((void *)v21 + 4) = v20;
    v15[*(int *)(v4 + 24)] = 1;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v4);
  }
  else
  {
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 1, 1, v4);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
  }
  uint64_t v25 = 0x3FF0000000000000;
  uint64_t v26 = 0x4010000000000000;
  sub_100146A70();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  ScaledValue.init(wrappedValue:step:)();
  char v22 = &v9[*(int *)(v4 + 20)];
  *char v22 = v16;
  *((void *)v22 + 1) = v17;
  *((void *)v22 + 2) = v18;
  *((void *)v22 + 3) = v19;
  *((void *)v22 + 4) = v20;
  v9[*(int *)(v4 + 24)] = 0;
  sub_10006DF38((uint64_t)v15, (uint64_t)v12, &qword_100E9A7D0);
  sub_10083738C((uint64_t)v9, (uint64_t)v6, (void (*)(void))type metadata accessor for ComparisonCapsuleCompactGridView);
  *(unsigned char *)a2 = v16;
  *(void *)(a2 + 8) = v17;
  *(void *)(a2 + 16) = v18;
  *(void *)(a2 + 24) = v19;
  *(void *)(a2 + 32) = v20;
  *(unsigned char *)(a2 + 40) = 0;
  *(unsigned char *)(a2 + 48) = v16;
  *(void *)(a2 + 56) = v17;
  *(void *)(a2 + 64) = v18;
  *(void *)(a2 + 72) = v19;
  *(void *)(a2 + 80) = v20;
  *(unsigned char *)(a2 + 88) = 1;
  uint64_t v23 = sub_10017DF08(&qword_100E9A7D8);
  sub_10006DF38((uint64_t)v12, a2 + *(int *)(v23 + 64), &qword_100E9A7D0);
  sub_10083738C((uint64_t)v6, a2 + *(int *)(v23 + 80), (void (*)(void))type metadata accessor for ComparisonCapsuleCompactGridView);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_10083742C((uint64_t)v9, (void (*)(void))type metadata accessor for ComparisonCapsuleCompactGridView);
  sub_100178110((uint64_t)v15, &qword_100E9A7D0);
  sub_10083742C((uint64_t)v6, (void (*)(void))type metadata accessor for ComparisonCapsuleCompactGridView);
  sub_100178110((uint64_t)v12, &qword_100E9A7D0);
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_10082F9B8@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v3 = type metadata accessor for ComparisonCapsuleCompactGridView(0);
  __chkstk_darwin(v3);
  uint64_t v47 = (uint64_t)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v41 - v6;
  uint64_t v8 = sub_10017DF08(&qword_100E9A7D0);
  __chkstk_darwin(v8 - 8);
  uint64_t v48 = (uint64_t)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v41 - v11;
  uint64_t v13 = 1;
  if (sub_10082F2C4())
  {
    char v14 = *a1;
    uint64_t v15 = *((void *)a1 + 1);
    uint64_t v16 = *((void *)a1 + 2);
    uint64_t v17 = *((void *)a1 + 3);
    uint64_t v18 = *((void *)a1 + 4);
    uint64_t v49 = 0x3FF0000000000000;
    uint64_t v50 = 0x4010000000000000;
    sub_100146A70();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    ScaledValue.init(wrappedValue:step:)();
    uint64_t v19 = &v12[*(int *)(v3 + 20)];
    *uint64_t v19 = v14;
    *((void *)v19 + 1) = v15;
    *((void *)v19 + 2) = v16;
    *((void *)v19 + 3) = v17;
    *((void *)v19 + 4) = v18;
    v12[*(int *)(v3 + 24)] = 1;
    uint64_t v13 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, v13, 1, v3);
  uint64_t v20 = *a1;
  uint64_t v21 = *((void *)a1 + 1);
  uint64_t v22 = *((void *)a1 + 2);
  uint64_t v23 = *((void *)a1 + 3);
  uint64_t v24 = *((void *)a1 + 4);
  uint64_t v49 = 0x3FF0000000000000;
  uint64_t v50 = 0x4010000000000000;
  sub_100146A70();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  ScaledValue.init(wrappedValue:step:)();
  uint64_t v25 = &v7[*(int *)(v3 + 20)];
  *uint64_t v25 = v20;
  *((void *)v25 + 1) = v21;
  *((void *)v25 + 2) = v22;
  *((void *)v25 + 3) = v23;
  *((void *)v25 + 4) = v24;
  uint64_t v26 = *(int *)(v3 + 24);
  char v46 = v7;
  v7[v26] = 0;
  BOOL v27 = sub_10082F2C4();
  uint64_t v41 = v20;
  if (v27)
  {
    uint64_t v43 = v24;
    uint64_t v44 = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v28 = 1;
    uint64_t v29 = v20;
    uint64_t v30 = v21;
    uint64_t v31 = v22;
  }
  else
  {
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    uint64_t v43 = 0;
    uint64_t v44 = 0;
    char v28 = 0;
  }
  uint64_t v42 = v12;
  uint64_t v32 = v48;
  sub_10006DF38((uint64_t)v12, v48, &qword_100E9A7D0);
  uint64_t v33 = v47;
  sub_10083738C((uint64_t)v46, v47, (void (*)(void))type metadata accessor for ComparisonCapsuleCompactGridView);
  uint64_t v34 = v32;
  uint64_t v35 = v45;
  sub_10006DF38(v34, v45, &qword_100E9A7D0);
  uint64_t v36 = (int *)sub_10017DF08(&qword_100E9A7E0);
  sub_10083738C(v33, v35 + v36[12], (void (*)(void))type metadata accessor for ComparisonCapsuleCompactGridView);
  uint64_t v37 = v35 + v36[16];
  *(void *)uint64_t v37 = v29;
  *(void *)(v37 + 8) = v30;
  uint64_t v38 = v44;
  *(void *)(v37 + 16) = v31;
  *(void *)(v37 + 24) = v38;
  *(void *)(v37 + 32) = v43;
  *(unsigned char *)(v37 + 40) = v28;
  uint64_t v39 = v35 + v36[20];
  *(unsigned char *)uint64_t v39 = v41;
  *(void *)(v39 + 8) = v21;
  *(void *)(v39 + 16) = v22;
  *(void *)(v39 + 24) = v23;
  *(void *)(v39 + 32) = v24;
  *(unsigned char *)(v39 + 40) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10016EC18(v29, v30);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10083742C((uint64_t)v46, (void (*)(void))type metadata accessor for ComparisonCapsuleCompactGridView);
  sub_100178110((uint64_t)v42, &qword_100E9A7D0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10075E948(v29, v30);
  sub_10083742C(v47, (void (*)(void))type metadata accessor for ComparisonCapsuleCompactGridView);
  return sub_100178110(v48, &qword_100E9A7D0);
}

uint64_t sub_10082FDA4()
{
  uint64_t v1 = sub_10017DF08(&qword_100E9A9C0);
  __chkstk_darwin(v1);
  uint64_t v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v4 = v0[1];
  long long v18 = *v0;
  long long v19 = v4;
  uint64_t v20 = *((void *)v0 + 4);
  sub_100788F9C(v15);
  uint64_t v5 = v16;
  uint64_t v6 = v17;
  sub_1001B1E64(v15, v16);
  double v7 = (*(double (**)(uint64_t, uint64_t))(v6 + 64))(v5, v6);
  *(void *)uint64_t v3 = static Alignment.center.getter();
  *((void *)v3 + 1) = v8;
  *((void *)v3 + 2) = 0;
  v3[24] = 0;
  *((double *)v3 + 4) = v7;
  v3[40] = 0;
  sub_10017DF08(&qword_100E9A9C8);
  uint64_t v21 = *((void *)&v18 + 1);
  uint64_t v22 = v19;
  uint64_t v14 = *((void *)&v18 + 1);
  uint64_t v9 = (_OWORD *)swift_allocObject();
  long long v10 = v0[1];
  v9[1] = *v0;
  v9[2] = v10;
  *(_OWORD *)((char *)v9 + 41) = *(long long *)((char *)v0 + 25);
  swift_bridgeObjectRetain();
  sub_1004D360C((uint64_t)&v21);
  sub_1004D360C((uint64_t)&v22);
  sub_10017DF08(&qword_100E9A898);
  sub_10017DF08(&qword_100E9A9D0);
  sub_10024D5E4((uint64_t)&unk_100E9A8A8);
  sub_10024D5E4((uint64_t)&unk_100E9A9D8);
  sub_1008373E8((uint64_t)&unk_100E9A8B8);
  ForEach<>.init(_:content:)();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v15);
  uint64_t v13 = v0;
  sub_10017DF08(&qword_100E9A910);
  sub_10024D5E4((uint64_t)&unk_100E9A9E0);
  sub_100837650();
  View.accessibilityChildren<A>(children:)();
  return sub_100178110((uint64_t)v3, &qword_100E9A9C0);
}

uint64_t sub_100830090@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v58 = a3;
  uint64_t v53 = sub_10017DF08(&qword_100E9A8C0);
  __chkstk_darwin(v53);
  uint64_t v54 = (uint64_t)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E9A8C8);
  __chkstk_darwin(v6 - 8);
  uint64_t v50 = (uint64_t)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v52 = (uint64_t)&v50 - v9;
  __chkstk_darwin(v10);
  uint64_t v51 = (uint64_t)&v50 - v11;
  uint64_t v12 = sub_10017DF08(&qword_100E76440);
  __chkstk_darwin(v12 - 8);
  Swift::String v57 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v56 = (char *)&v50 - v15;
  uint64_t v59 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
  __chkstk_darwin(v59);
  uint64_t v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v50 - v19;
  uint64_t v21 = type metadata accessor for ComparisonCapsuleRowView(0);
  uint64_t v22 = (int *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v55 = (char *)&v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v26 = (uint64_t *)((char *)&v50 - v25);
  long long v27 = *(_OWORD *)(a2 + 16);
  long long v64 = *(_OWORD *)a2;
  long long v65 = v27;
  uint64_t v66 = *(void *)(a2 + 32);
  uint64_t v28 = *((void *)&v64 + 1);
  uint64_t v67 = v27;
  sub_10083738C(a1, (uint64_t)v20, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
  char v29 = *(unsigned char *)(a2 + 40);
  *uint64_t v26 = swift_getKeyPath();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  swift_storeEnumTagMultiPayload();
  v60[0] = 0x4010000000000000;
  uint64_t v63 = 0x3FF0000000000000;
  swift_bridgeObjectRetain();
  sub_1004D360C((uint64_t)&v67);
  sub_100146A70();
  ScaledValue.init(wrappedValue:step:)();
  uint64_t v30 = (char *)v26 + v22[8];
  long long v31 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v30 = *(_OWORD *)a2;
  *((_OWORD *)v30 + 1) = v31;
  *((void *)v30 + 4) = *(void *)(a2 + 32);
  sub_100837574((uint64_t)v20, (uint64_t)v26 + v22[9], (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
  *((unsigned char *)v26 + v22[10]) = v29;
  sub_100788F9C(v60);
  uint64_t v32 = v61;
  uint64_t v33 = v62;
  sub_1001B1E64(v60, v61);
  LOBYTE(a2) = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 104))(v32, v33);
  sub_10083738C(a1, (uint64_t)v17, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
  if ((a2 & 1) == 0)
  {
    sub_10083742C((uint64_t)v17, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
    goto LABEL_6;
  }
  uint64_t v34 = v51;
  sub_10083738C((uint64_t)v17, v51, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
  uint64_t v35 = v59;
  _s7Weather24LocationCompositionStateOwst_0(v34, 0, 1, v59);
  uint64_t v36 = v52;
  sub_100304264(v28, v52);
  uint64_t v37 = v54;
  uint64_t v38 = v54 + *(int *)(v53 + 48);
  sub_10006DF38(v34, v54, &qword_100E9A8C8);
  sub_10006DF38(v36, v38, &qword_100E9A8C8);
  if (_s7Weather24LocationCompositionStateOwet_0(v37, 1, v35) != 1)
  {
    uint64_t v44 = v50;
    sub_10006DF38(v37, v50, &qword_100E9A8C8);
    if (_s7Weather24LocationCompositionStateOwet_0(v38, 1, v59) != 1)
    {
      sub_100837574(v38, (uint64_t)v20, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
      sub_100788E30();
      char v46 = v45;
      sub_10083742C((uint64_t)v20, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
      sub_100178110(v36, &qword_100E9A8C8);
      sub_100178110(v34, &qword_100E9A8C8);
      sub_10083742C((uint64_t)v17, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
      sub_10083742C(v44, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
      sub_100178110(v37, &qword_100E9A8C8);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v60);
      uint64_t v40 = (uint64_t)v57;
      uint64_t v39 = v58;
      uint64_t v42 = (uint64_t)v55;
      uint64_t v41 = (uint64_t)v56;
      if (v46) {
        goto LABEL_7;
      }
LABEL_12:
      Divider.init()();
      uint64_t v43 = 0;
      goto LABEL_13;
    }
    sub_100178110(v36, &qword_100E9A8C8);
    sub_100178110(v34, &qword_100E9A8C8);
    sub_10083742C((uint64_t)v17, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
    sub_10083742C(v44, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
LABEL_10:
    sub_100178110(v37, &qword_100E9A8C0);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v60);
    uint64_t v40 = (uint64_t)v57;
    uint64_t v39 = v58;
    uint64_t v42 = (uint64_t)v55;
    uint64_t v41 = (uint64_t)v56;
    goto LABEL_12;
  }
  sub_100178110(v36, &qword_100E9A8C8);
  sub_100178110(v34, &qword_100E9A8C8);
  sub_10083742C((uint64_t)v17, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
  if (_s7Weather24LocationCompositionStateOwet_0(v38, 1, v59) != 1) {
    goto LABEL_10;
  }
  sub_100178110(v37, &qword_100E9A8C8);
LABEL_6:
  uint64_t v40 = (uint64_t)v57;
  uint64_t v39 = v58;
  uint64_t v42 = (uint64_t)v55;
  uint64_t v41 = (uint64_t)v56;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v60);
LABEL_7:
  uint64_t v43 = 1;
LABEL_13:
  uint64_t v47 = type metadata accessor for Divider();
  _s7Weather24LocationCompositionStateOwst_0(v41, v43, 1, v47);
  sub_10083738C((uint64_t)v26, v42, (void (*)(void))type metadata accessor for ComparisonCapsuleRowView);
  sub_10006DF38(v41, v40, &qword_100E76440);
  sub_10083738C(v42, v39, (void (*)(void))type metadata accessor for ComparisonCapsuleRowView);
  uint64_t v48 = sub_10017DF08(&qword_100E9A9E8);
  sub_10006DF38(v40, v39 + *(int *)(v48 + 48), &qword_100E76440);
  sub_100178110(v41, &qword_100E76440);
  sub_10083742C((uint64_t)v26, (void (*)(void))type metadata accessor for ComparisonCapsuleRowView);
  sub_100178110(v40, &qword_100E76440);
  return sub_10083742C(v42, (void (*)(void))type metadata accessor for ComparisonCapsuleRowView);
}

uint64_t sub_1008307C0()
{
  return ForEach<>.init(_:content:)();
}

uint64_t sub_1008308D0()
{
  return sub_10082FDA4();
}

uint64_t sub_10083090C@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  uint64_t v3 = sub_10017DF08(&qword_100E9AC00);
  return sub_100830954(v1, (void *)(a1 + *(int *)(v3 + 36)));
}

uint64_t sub_100830954@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  v229 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E9AC08);
  __chkstk_darwin(v3 - 8);
  uint64_t v227 = (uint64_t)&v216 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v226 = sub_10017DF08(&qword_100E9AC10);
  __chkstk_darwin(v226);
  uint64_t v231 = (uint64_t)&v216 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v228 = sub_10017DF08(&qword_100E9AC18);
  __chkstk_darwin(v228);
  uint64_t v254 = (uint64_t)&v216 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v253 = (uint64_t)&v216 - v8;
  uint64_t v252 = type metadata accessor for ComparisonCapsuleRowView(0);
  __chkstk_darwin(v252);
  uint64_t v251 = (uint64_t)&v216 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v241 = (uint64_t)&v216 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100E662F0);
  __chkstk_darwin(v13);
  uint64_t v246 = (uint64_t)&v216 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v216 - v16;
  uint64_t v18 = sub_10017DF08(&qword_100E65ED8);
  __chkstk_darwin(v18 - 8);
  uint64_t v235 = (uint64_t)&v216 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v248 = (uint64_t)&v216 - v21;
  __chkstk_darwin(v22);
  uint64_t v249 = (uint64_t)&v216 - v23;
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v216 - v25;
  __chkstk_darwin(v27);
  char v29 = (char *)&v216 - v28;
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v216 - v31;
  uint64_t v255 = a1;
  sub_10019B2FC();
  uint64_t v250 = v11;
  uint64_t v33 = *(void (**)(void))(v11 + 104);
  LODWORD(v243) = enum case for UserInterfaceSizeClass.regular(_:);
  uint64_t v244 = v11 + 104;
  v242 = (void (*)(void, void, void))v33;
  v33(v29);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v10);
  uint64_t v245 = v13;
  uint64_t v34 = (uint64_t)&v17[*(int *)(v13 + 48)];
  sub_10006DF38((uint64_t)v32, (uint64_t)v17, &qword_100E65ED8);
  sub_10006DF38((uint64_t)v29, v34, &qword_100E65ED8);
  int v35 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v10);
  uint64_t v247 = v10;
  if (v35 != 1)
  {
    sub_10006DF38((uint64_t)v17, (uint64_t)v26, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v10) != 1)
    {
      uint64_t v39 = v250;
      uint64_t v40 = v241;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v250 + 32))(v241, v34, v10);
      sub_1008373E8((uint64_t)&qword_100E65F28);
      LODWORD(v240) = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v41 = *(void (**)(void, void))(v39 + 8);
      v41(v40, v10);
      sub_100178110((uint64_t)v29, &qword_100E65ED8);
      sub_100178110((uint64_t)v32, &qword_100E65ED8);
      v41(v26, v10);
      uint64_t v38 = v255;
      uint64_t v37 = v252;
      sub_100178110((uint64_t)v17, &qword_100E65ED8);
      if (v240) {
        goto LABEL_8;
      }
LABEL_10:
      uint64_t v47 = (uint64_t *)(v38 + *(int *)(v37 + 28));
      uint64_t v44 = *v47;
      uint64_t v46 = v47[1];
      swift_bridgeObjectRetain();
      goto LABEL_13;
    }
    sub_100178110((uint64_t)v29, &qword_100E65ED8);
    sub_100178110((uint64_t)v32, &qword_100E65ED8);
    (*(void (**)(char *, uint64_t))(v250 + 8))(v26, v10);
    uint64_t v37 = v252;
LABEL_6:
    sub_100178110((uint64_t)v17, &qword_100E662F0);
    uint64_t v38 = v255;
    goto LABEL_10;
  }
  sub_100178110((uint64_t)v29, &qword_100E65ED8);
  sub_100178110((uint64_t)v32, &qword_100E65ED8);
  int v36 = _s7Weather24LocationCompositionStateOwet_0(v34, 1, v10);
  uint64_t v37 = v252;
  if (v36 != 1) {
    goto LABEL_6;
  }
  sub_100178110((uint64_t)v17, &qword_100E65ED8);
  uint64_t v38 = v255;
LABEL_8:
  uint64_t v42 = v38 + *(int *)(v37 + 28);
  uint64_t v44 = *(void *)(v42 + 16);
  uint64_t v43 = *(void *)(v42 + 24);
  uint64_t v45 = v251;
  sub_10083738C(v38, v251, (void (*)(void))type metadata accessor for ComparisonCapsuleRowView);
  if (v43)
  {
    uint64_t v46 = v43;
  }
  else
  {
    uint64_t v48 = (uint64_t *)(v45 + *(int *)(v37 + 28));
    uint64_t v44 = *v48;
    uint64_t v46 = v48[1];
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_10083742C(v45, (void (*)(void))type metadata accessor for ComparisonCapsuleRowView);
LABEL_13:
  uint64_t v49 = v37;
  uint64_t v261 = v44;
  uint64_t v262 = v46;
  sub_10014A85C();
  uint64_t v50 = Text.init<A>(_:)();
  uint64_t v52 = v51;
  char v54 = v53 & 1;
  uint64_t v55 = v38 + *(int *)(v49 + 24);
  long long v56 = *(_OWORD *)(v55 + 16);
  long long v310 = *(_OWORD *)v55;
  long long v311 = v56;
  uint64_t v312 = *(void *)(v55 + 32);
  sub_100788F9C(&v261);
  uint64_t v57 = v265;
  uint64_t v58 = v266;
  sub_1001B1E64(&v261, v265);
  (*(void (**)(uint64_t, uint64_t))(v58 + 32))(v57, v58);
  uint64_t v59 = Text.font(_:)();
  uint64_t v61 = v60;
  uint64_t v251 = v62;
  char v64 = v63 & 1;
  sub_100191924(v50, v52, v54);
  swift_release();
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v261);
  long long v65 = *(_OWORD *)(v55 + 16);
  long long v307 = *(_OWORD *)v55;
  long long v308 = v65;
  uint64_t v309 = *(void *)(v55 + 32);
  sub_100788F9C(&v261);
  uint64_t v66 = v265;
  uint64_t v67 = v266;
  sub_1001B1E64(&v261, v265);
  v260[0] = (*(uint64_t (**)(uint64_t, uint64_t))(v67 + 8))(v66, v67);
  uint64_t v68 = Text.foregroundStyle<A>(_:)();
  uint64_t v238 = v69;
  uint64_t v239 = v68;
  int v71 = v70;
  uint64_t v240 = v72;
  sub_100191924(v59, v61, v64);
  swift_release();
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v261);
  uint64_t KeyPath = swift_getKeyPath();
  static UnitPoint.leading.getter();
  uint64_t v224 = v74;
  uint64_t v225 = v73;
  int v236 = static Edge.Set.trailing.getter();
  uint64_t v75 = v252;
  uint64_t v76 = *(int *)(v252 + 32);
  if (*(unsigned char *)(v255 + v76) == 1)
  {
    long long v77 = *(_OWORD *)(v55 + 16);
    long long v304 = *(_OWORD *)v55;
    long long v305 = v77;
    uint64_t v306 = *(void *)(v55 + 32);
    sub_100788F9C(&v261);
    uint64_t v78 = v265;
    uint64_t v79 = v266;
    sub_1001B1E64(&v261, v265);
    (*(void (**)(uint64_t, uint64_t))(v79 + 72))(v78, v79);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v261);
    goto LABEL_25;
  }
  LODWORD(v251) = v71;
  uint64_t v80 = v249;
  sub_10019B2FC();
  uint64_t v81 = v247;
  uint64_t v82 = v248;
  v242(v248, v243, v247);
  _s7Weather24LocationCompositionStateOwst_0(v82, 0, 1, v81);
  uint64_t v83 = v246;
  uint64_t v84 = v246 + *(int *)(v245 + 48);
  sub_10006DF38(v80, v246, &qword_100E65ED8);
  sub_10006DF38(v82, v84, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0(v83, 1, v81) != 1)
  {
    uint64_t v86 = v235;
    sub_10006DF38(v83, v235, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0(v84, 1, v81) != 1)
    {
      uint64_t v87 = v250;
      uint64_t v88 = v241;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v250 + 32))(v241, v84, v81);
      sub_1008373E8((uint64_t)&qword_100E65F28);
      char v89 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v90 = v86;
      uint64_t v91 = v81;
      char v92 = *(void (**)(void, void))(v87 + 8);
      v92(v88, v91);
      sub_100178110(v248, &qword_100E65ED8);
      sub_100178110(v249, &qword_100E65ED8);
      v92(v90, v91);
      sub_100178110(v83, &qword_100E65ED8);
      uint64_t v75 = v252;
      if (v89) {
        goto LABEL_22;
      }
LABEL_23:
      long long v96 = *(_OWORD *)(v55 + 16);
      long long v304 = *(_OWORD *)v55;
      long long v305 = v96;
      uint64_t v306 = *(void *)(v55 + 32);
      sub_100788F9C(&v261);
      uint64_t v97 = v265;
      uint64_t v98 = v266;
      sub_1001B1E64(&v261, v265);
      (*(void (**)(uint64_t, uint64_t))(v98 + 80))(v97, v98);
      goto LABEL_24;
    }
    sub_100178110(v248, &qword_100E65ED8);
    sub_100178110(v249, &qword_100E65ED8);
    (*(void (**)(uint64_t, uint64_t))(v250 + 8))(v86, v81);
    uint64_t v75 = v252;
LABEL_20:
    sub_100178110(v83, &qword_100E662F0);
    goto LABEL_23;
  }
  sub_100178110(v82, &qword_100E65ED8);
  sub_100178110(v80, &qword_100E65ED8);
  int v85 = _s7Weather24LocationCompositionStateOwet_0(v84, 1, v81);
  uint64_t v75 = v252;
  if (v85 != 1) {
    goto LABEL_20;
  }
  sub_100178110(v83, &qword_100E65ED8);
LABEL_22:
  long long v93 = *(_OWORD *)(v55 + 16);
  long long v304 = *(_OWORD *)v55;
  long long v305 = v93;
  uint64_t v306 = *(void *)(v55 + 32);
  sub_100788F9C(&v261);
  uint64_t v94 = v265;
  uint64_t v95 = v266;
  sub_1001B1E64(&v261, v265);
  (*(void (**)(uint64_t, uint64_t))(v95 + 88))(v94, v95);
LABEL_24:
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v261);
  LOBYTE(v71) = v251;
LABEL_25:
  EdgeInsets.init(_all:)();
  uint64_t v222 = v100;
  uint64_t v223 = v99;
  uint64_t v220 = v102;
  uint64_t v221 = v101;
  int v218 = *(unsigned __int8 *)(v255 + v76);
  LODWORD(v235) = v71 & 1;
  LOBYTE(v261) = v71 & 1;
  LOBYTE(v260[0]) = 0;
  LOBYTE(v301) = 0;
  if (v218) {
    double v103 = 1.0;
  }
  else {
    double v103 = 0.0;
  }
  double v219 = v103;
  uint64_t v230 = v76;
  uint64_t v303 = *(void *)(v55 + 32);
  long long v104 = *(_OWORD *)(v55 + 16);
  long long v301 = *(_OWORD *)v55;
  long long v302 = v104;
  uint64_t v217 = v255 + *(int *)(v75 + 28);
  sub_100789120();
  if (v108)
  {
    uint64_t v109 = v105;
    uint64_t v110 = v106;
    uint64_t v111 = v108;
    char v112 = v107 & 1;
    uint64_t v252 = v107 & 1;
    sub_100788F9C(&v261);
    uint64_t v113 = v265;
    uint64_t v114 = v266;
    sub_1001B1E64(&v261, v265);
    (*(void (**)(uint64_t, uint64_t))(v114 + 40))(v113, v114);
    LOBYTE(v260[0]) = v112;
    uint64_t v115 = Text.font(_:)();
    uint64_t v251 = v110;
    uint64_t v116 = v115;
    uint64_t v118 = v117;
    LOBYTE(v113) = v119;
    uint64_t v249 = v120;
    swift_release();
    char v121 = v113 & 1;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v261);
    long long v122 = *(_OWORD *)(v55 + 16);
    long long v298 = *(_OWORD *)v55;
    long long v299 = v122;
    uint64_t v300 = *(void *)(v55 + 32);
    sub_100788F9C(&v261);
    uint64_t v123 = v265;
    uint64_t v250 = v109;
    uint64_t v124 = v266;
    sub_1001B1E64(&v261, v265);
    v260[0] = (*(uint64_t (**)(uint64_t, uint64_t))(v124 + 16))(v123, v124);
    uint64_t v125 = Text.foregroundStyle<A>(_:)();
    uint64_t v127 = v126;
    uint64_t v245 = v111;
    LOBYTE(v111) = v128 & 1;
    sub_100191924(v116, v118, v121);
    swift_release();
    swift_bridgeObjectRelease();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v261);
    uint64_t v129 = Text.monospacedDigit()();
    uint64_t v131 = v130;
    uint64_t v241 = v132;
    LOBYTE(v116) = v133 & 1;
    sub_100191924(v125, v127, v111);
    swift_bridgeObjectRelease();
    uint64_t v134 = swift_getKeyPath();
    unsigned __int8 v135 = static Edge.Set.trailing.getter();
    long long v136 = *(_OWORD *)(v55 + 16);
    long long v295 = *(_OWORD *)v55;
    long long v296 = v136;
    uint64_t v297 = *(void *)(v55 + 32);
    sub_100788F9C(&v261);
    uint64_t v137 = v265;
    uint64_t v138 = v266;
    sub_1001B1E64(&v261, v265);
    (*(void (**)(uint64_t, uint64_t))(v138 + 56))(v137, v138);
    EdgeInsets.init(_all:)();
    LOBYTE(v260[0]) = v116;
    uint64_t v248 = v140;
    uint64_t v249 = v139;
    uint64_t v246 = v142;
    uint64_t v247 = v141;
    LOBYTE(v292) = 0;
    LOBYTE(v289) = 0;
    sub_100190CC4(v129, v131, v116);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100191924(v250, v251, v252);
    swift_bridgeObjectRelease();
    uint64_t v251 = v131;
    uint64_t v252 = v129;
    sub_100191924(v129, v131, v116);
    uint64_t v250 = v134;
    swift_release();
    swift_bridgeObjectRelease();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v261);
    uint64_t v245 = LOBYTE(v260[0]);
    uint64_t v234 = v292;
    uint64_t v244 = v289;
    uint64_t v143 = 0x3FF0000000000000;
    if (!*(unsigned char *)(v255 + v230)) {
      uint64_t v143 = 0;
    }
    uint64_t v243 = v143;
    LODWORD(v242) = 257;
    uint64_t v232 = 1;
    uint64_t v233 = v135;
  }
  else
  {
    uint64_t v251 = 0;
    uint64_t v252 = 0;
    uint64_t v245 = 0;
    uint64_t v246 = 0;
    uint64_t v241 = 0;
    uint64_t v249 = 0;
    uint64_t v250 = 0;
    uint64_t v232 = 0;
    uint64_t v233 = 0;
    uint64_t v234 = 0;
    uint64_t v247 = 0;
    uint64_t v248 = 0;
    uint64_t v243 = 0;
    uint64_t v244 = 0;
    LODWORD(v242) = 0;
  }
  uint64_t v144 = v227;
  sub_100831F64(v255, v227);
  uint64_t v145 = v231;
  sub_10006DF38(v144, v231, &qword_100E9AC08);
  *(unsigned char *)(v145 + *(int *)(v226 + 36)) = 1;
  sub_100178110(v144, &qword_100E9AC08);
  LOBYTE(v144) = static Edge.Set.trailing.getter();
  long long v146 = *(_OWORD *)(v55 + 16);
  long long v292 = *(_OWORD *)v55;
  long long v293 = v146;
  uint64_t v294 = *(void *)(v55 + 32);
  sub_100788F9C(&v261);
  uint64_t v147 = v265;
  uint64_t v148 = v266;
  sub_1001B1E64(&v261, v265);
  (*(void (**)(uint64_t, uint64_t))(v148 + 56))(v147, v148);
  EdgeInsets.init(_all:)();
  uint64_t v150 = v149;
  uint64_t v152 = v151;
  uint64_t v154 = v153;
  uint64_t v156 = v155;
  uint64_t v157 = v254;
  sub_10006DF38(v145, v254, &qword_100E9AC10);
  uint64_t v158 = v157 + *(int *)(v228 + 36);
  *(unsigned char *)uint64_t v158 = v144;
  *(void *)(v158 + 8) = v150;
  *(void *)(v158 + 16) = v152;
  *(void *)(v158 + 24) = v154;
  *(void *)(v158 + 32) = v156;
  *(unsigned char *)(v158 + 40) = 0;
  sub_100178110(v145, &qword_100E9AC10);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v261);
  sub_10024D364(v157, v253, &qword_100E9AC18);
  long long v159 = *(_OWORD *)(v55 + 16);
  long long v289 = *(_OWORD *)v55;
  long long v290 = v159;
  uint64_t v291 = *(void *)(v55 + 32);
  sub_10078951C();
  uint64_t v161 = v160;
  uint64_t v163 = v162;
  LOBYTE(v145) = v164 & 1;
  sub_100788F9C(&v261);
  uint64_t v165 = v265;
  uint64_t v166 = v266;
  sub_1001B1E64(&v261, v265);
  (*(void (**)(uint64_t, uint64_t))(v166 + 48))(v165, v166);
  uint64_t v167 = Text.font(_:)();
  uint64_t v169 = v168;
  uint64_t v231 = v170;
  char v172 = v171 & 1;
  sub_100191924(v161, v163, v145);
  swift_release();
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v261);
  long long v173 = *(_OWORD *)(v55 + 16);
  long long v286 = *(_OWORD *)v55;
  long long v287 = v173;
  uint64_t v288 = *(void *)(v55 + 32);
  sub_100788F9C(&v261);
  uint64_t v174 = v265;
  uint64_t v175 = v266;
  sub_1001B1E64(&v261, v265);
  v260[0] = (*(uint64_t (**)(uint64_t, uint64_t))(v175 + 24))(v174, v175);
  uint64_t v176 = Text.foregroundStyle<A>(_:)();
  uint64_t v178 = v177;
  LOBYTE(v163) = v179 & 1;
  sub_100191924(v167, v169, v172);
  swift_release();
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v261);
  uint64_t v180 = Text.monospacedDigit()();
  uint64_t v226 = v181;
  uint64_t v227 = v180;
  uint64_t v228 = v182;
  char v184 = v183 & 1;
  sub_100191924(v176, v178, v163);
  swift_bridgeObjectRelease();
  uint64_t v231 = swift_getKeyPath();
  static UnitPoint.trailing.getter();
  uint64_t v216 = v186;
  uint64_t v217 = v185;
  int v187 = *(unsigned __int8 *)(v255 + v230);
  v259[0] = v285[0];
  if (v187) {
    double v188 = 1.0;
  }
  else {
    double v188 = 0.0;
  }
  *(_DWORD *)((char *)v259 + 3) = *(_DWORD *)((char *)v285 + 3);
  v258[0] = *(_DWORD *)v284;
  *(_DWORD *)((char *)v258 + 3) = *(_DWORD *)&v284[3];
  v257[0] = *(_DWORD *)v283;
  *(_DWORD *)((char *)v257 + 3) = *(_DWORD *)&v283[3];
  *(_DWORD *)((char *)v256 + 3) = *(_DWORD *)&v282[3];
  v256[0] = *(_DWORD *)v282;
  uint64_t v189 = v254;
  sub_10006DF38(v253, v254, &qword_100E9AC18);
  v260[0] = v239;
  v260[1] = v238;
  LOBYTE(v260[2]) = v235;
  *(_DWORD *)((char *)&v260[2] + 1) = v285[0];
  HIDWORD(v260[2]) = *(_DWORD *)((char *)v285 + 3);
  v260[3] = v240;
  v260[4] = KeyPath;
  v260[5] = 1;
  LOBYTE(v260[6]) = 0;
  *(_DWORD *)((char *)&v260[6] + 1) = *(_DWORD *)v284;
  HIDWORD(v260[6]) = *(_DWORD *)&v284[3];
  uint64_t v191 = v224;
  uint64_t v190 = v225;
  v260[7] = v225;
  v260[8] = v224;
  LOBYTE(v260[9]) = v236;
  HIDWORD(v260[9]) = *(_DWORD *)&v283[3];
  *(_DWORD *)((char *)&v260[9] + 1) = *(_DWORD *)v283;
  uint64_t v193 = v222;
  uint64_t v192 = v223;
  v260[10] = v223;
  v260[11] = v222;
  uint64_t v195 = v220;
  uint64_t v194 = v221;
  v260[12] = v221;
  v260[13] = v220;
  LOBYTE(v260[14]) = 0;
  *(_DWORD *)((char *)&v260[14] + 1) = *(_DWORD *)v282;
  HIDWORD(v260[14]) = *(_DWORD *)&v282[3];
  double v196 = v219;
  *(double *)&v260[15] = v219;
  LOWORD(v260[16]) = 257;
  v197 = v229;
  memcpy(v229, v260, 0x82uLL);
  v197[17] = 0;
  *((unsigned char *)v197 + 144) = 0;
  *((unsigned char *)v197 + 145) = v218 ^ 1;
  uint64_t v198 = v251;
  v197[19] = v252;
  v197[20] = v198;
  uint64_t v199 = v246;
  uint64_t v200 = v241;
  v197[21] = v245;
  v197[22] = v200;
  uint64_t v201 = v232;
  v197[23] = v250;
  v197[24] = v201;
  uint64_t v202 = v233;
  v197[25] = v234;
  v197[26] = v202;
  uint64_t v204 = v247;
  uint64_t v203 = v248;
  v197[27] = v249;
  v197[28] = v203;
  v197[29] = v204;
  v197[30] = v199;
  uint64_t v246 = v199;
  uint64_t v247 = v204;
  uint64_t v206 = v243;
  uint64_t v205 = v244;
  v197[31] = v244;
  v197[32] = v206;
  uint64_t v243 = v206;
  uint64_t v244 = v205;
  int v207 = (int)v242;
  *((_WORD *)v197 + 132) = (_WORD)v242;
  LODWORD(v242) = v207;
  uint64_t v208 = sub_10017DF08(&qword_100E9AC20);
  sub_10006DF38(v189, (uint64_t)v197 + *(int *)(v208 + 80), &qword_100E9AC18);
  v209 = (char *)v197 + *(int *)(v208 + 96);
  uint64_t v211 = v226;
  uint64_t v210 = v227;
  *(void *)v209 = v227;
  *((void *)v209 + 1) = v211;
  v209[16] = v184;
  uint64_t v212 = v231;
  *((void *)v209 + 3) = v228;
  *((void *)v209 + 4) = v212;
  *((void *)v209 + 5) = 1;
  v209[48] = 0;
  uint64_t v213 = v216;
  *((void *)v209 + 7) = v217;
  *((void *)v209 + 8) = v213;
  *((double *)v209 + 9) = v188;
  *((_WORD *)v209 + 40) = 257;
  sub_10083B40C((uint64_t)v260);
  uint64_t v214 = v241;
  sub_1004C92DC(v252, v251, v245, v241);
  sub_100190CC4(v210, v211, v184);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100178110(v253, &qword_100E9AC18);
  sub_100191924(v210, v211, v184);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100178110(v254, &qword_100E9AC18);
  sub_1006AFA98(v252, v251, v245, v214);
  uint64_t v261 = v239;
  uint64_t v262 = v238;
  char v263 = v235;
  *(_DWORD *)v264 = v259[0];
  *(_DWORD *)&v264[3] = *(_DWORD *)((char *)v259 + 3);
  uint64_t v265 = v240;
  uint64_t v266 = KeyPath;
  uint64_t v267 = 1;
  char v268 = 0;
  *(_DWORD *)v269 = v258[0];
  *(_DWORD *)&v269[3] = *(_DWORD *)((char *)v258 + 3);
  uint64_t v270 = v190;
  uint64_t v271 = v191;
  char v272 = v236;
  *(_DWORD *)&v273[3] = *(_DWORD *)((char *)v257 + 3);
  *(_DWORD *)v273 = v257[0];
  uint64_t v274 = v192;
  uint64_t v275 = v193;
  uint64_t v276 = v194;
  uint64_t v277 = v195;
  char v278 = 0;
  *(_DWORD *)&v279[3] = *(_DWORD *)((char *)v256 + 3);
  *(_DWORD *)v279 = v256[0];
  double v280 = v196;
  __int16 v281 = 257;
  return sub_10083B45C((uint64_t)&v261);
}

uint64_t sub_100831F64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v44 = sub_10017DF08(&qword_100E9AC28);
  __chkstk_darwin(v44);
  uint64_t v4 = (char *)v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_10017DF08(&qword_100E9AC30);
  __chkstk_darwin(v47);
  uint64_t v45 = (uint64_t)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v46 = (uint64_t)v43 - v7;
  uint64_t v48 = sub_10017DF08(&qword_100E9AC38);
  __chkstk_darwin(v48);
  uint64_t v9 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CapsuleView(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v43 - v14;
  uint64_t v16 = sub_10017DF08(&qword_100E9AC40);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)v43 - v20;
  uint64_t v22 = (int *)type metadata accessor for ComparisonCapsuleRowView(0);
  uint64_t v23 = (long long *)(a1 + v22[6]);
  if (*(unsigned char *)(a1 + v22[8]) == 1)
  {
    long long v24 = v23[1];
    long long v51 = *v23;
    long long v52 = v24;
    *(void *)&long long v53 = *((void *)v23 + 4);
    uint64_t v57 = *((void *)&v51 + 1);
    uint64_t v58 = v24;
    sub_10083738C(a1 + v22[7], (uint64_t)&v15[*(int *)(v10 + 20)], (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
    long long v25 = v52;
    *(_OWORD *)uint64_t v15 = v51;
    *((_OWORD *)v15 + 1) = v25;
    *((void *)v15 + 4) = v53;
    sub_1004D360C((uint64_t)&v57);
    sub_1004D360C((uint64_t)&v58);
    sub_100788F9C((uint64_t *)&v54);
    uint64_t v26 = *((void *)&v55 + 1);
    uint64_t v27 = v56;
    sub_1001B1E64(&v54, *((uint64_t *)&v55 + 1));
    (*(void (**)(uint64_t, uint64_t))(v27 + 96))(v26, v27);
    sub_10017DF08(&qword_100E7DDF0);
    ScaledValue.wrappedValue.getter();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    sub_10083738C((uint64_t)v15, (uint64_t)v18, (void (*)(void))type metadata accessor for CapsuleView);
    uint64_t v28 = &v18[*(int *)(v16 + 36)];
    long long v29 = __src[1];
    *(_OWORD *)uint64_t v28 = __src[0];
    *((_OWORD *)v28 + 1) = v29;
    *((_OWORD *)v28 + 2) = __src[2];
    sub_10083742C((uint64_t)v15, (void (*)(void))type metadata accessor for CapsuleView);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v54);
    uint64_t v30 = &qword_100E9AC40;
    sub_10024D364((uint64_t)v18, (uint64_t)v21, &qword_100E9AC40);
    sub_10006DF38((uint64_t)v21, (uint64_t)v9, &qword_100E9AC40);
    swift_storeEnumTagMultiPayload();
    sub_10083B540((uint64_t)&unk_100E9AC48);
    sub_10083B4AC();
    _ConditionalContent<>.init(storage:)();
    uint64_t v31 = (uint64_t)v21;
  }
  else
  {
    v43[1] = v16;
    uint64_t v32 = (uint64_t)v9;
    uint64_t v33 = v47;
    long long v34 = v23[1];
    long long v54 = *v23;
    long long v55 = v34;
    uint64_t v56 = *((void *)v23 + 4);
    uint64_t v57 = *((void *)&v54 + 1);
    uint64_t v58 = v34;
    sub_10083738C(a1 + v22[7], (uint64_t)&v12[*(int *)(v10 + 20)], (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
    long long v35 = v55;
    *(_OWORD *)uint64_t v12 = v54;
    *((_OWORD *)v12 + 1) = v35;
    *((void *)v12 + 4) = v56;
    sub_1004D360C((uint64_t)&v57);
    sub_1004D360C((uint64_t)&v58);
    sub_100788F9C((uint64_t *)&v51);
    uint64_t v36 = *((void *)&v52 + 1);
    uint64_t v37 = v53;
    sub_1001B1E64(&v51, *((uint64_t *)&v52 + 1));
    (*(void (**)(uint64_t, uint64_t))(v37 + 96))(v36, v37);
    static Alignment.center.getter();
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
    sub_10083738C((uint64_t)v12, (uint64_t)v4, (void (*)(void))type metadata accessor for CapsuleView);
    memcpy(&v4[*(int *)(v44 + 36)], __src, 0x70uLL);
    sub_10083742C((uint64_t)v12, (void (*)(void))type metadata accessor for CapsuleView);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v51);
    sub_10017DF08(&qword_100E7DDF0);
    ScaledValue.wrappedValue.getter();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v38 = v45;
    sub_10006DF38((uint64_t)v4, v45, &qword_100E9AC28);
    uint64_t v39 = (_OWORD *)(v38 + *(int *)(v33 + 36));
    long long v40 = v52;
    *uint64_t v39 = v51;
    v39[1] = v40;
    v39[2] = v53;
    sub_100178110((uint64_t)v4, &qword_100E9AC28);
    uint64_t v30 = &qword_100E9AC30;
    uint64_t v41 = v46;
    sub_10024D364(v38, v46, &qword_100E9AC30);
    sub_10006DF38(v41, v32, &qword_100E9AC30);
    swift_storeEnumTagMultiPayload();
    sub_10083B540((uint64_t)&unk_100E9AC48);
    sub_10083B4AC();
    _ConditionalContent<>.init(storage:)();
    uint64_t v31 = v41;
  }
  return sub_100178110(v31, v30);
}

uint64_t sub_1008326A0@<X0>(uint64_t a1@<X8>)
{
  v13[1] = a1;
  uint64_t v2 = type metadata accessor for ComparisonCapsuleCompactGridView(0);
  uint64_t v3 = v2 - 8;
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v2);
  uint64_t v6 = sub_10017DF08(&qword_100E9A8F0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v8 = static Alignment.center.getter();
  *((void *)v8 + 1) = v9;
  *((void *)v8 + 2) = 0;
  v8[24] = 0;
  *((void *)v8 + 4) = 0x4020000000000000;
  v8[40] = 0;
  sub_10017DF08(&qword_100E9A8F8);
  uint64_t v15 = *(void *)(v1 + *(int *)(v3 + 28) + 8);
  sub_10083738C(v1, (uint64_t)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for ComparisonCapsuleCompactGridView);
  unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v11 = swift_allocObject();
  sub_100837574((uint64_t)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10, (void (*)(void))type metadata accessor for ComparisonCapsuleCompactGridView);
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100E9A898);
  sub_10017DF08(&qword_100E9A900);
  sub_10024D5E4((uint64_t)&unk_100E9A8A8);
  sub_10024D5E4((uint64_t)&unk_100E9A908);
  sub_1008373E8((uint64_t)&unk_100E9A8B8);
  ForEach<>.init(_:content:)();
  uint64_t v14 = v1;
  sub_10017DF08(&qword_100E9A910);
  sub_10024D5E4((uint64_t)&unk_100E9A918);
  sub_100837650();
  View.accessibilityChildren<A>(children:)();
  return sub_100178110((uint64_t)v8, &qword_100E9A8F0);
}

uint64_t sub_1008329CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  char v89 = a3;
  uint64_t v79 = sub_10017DF08(&qword_100E9A8C0);
  __chkstk_darwin(v79);
  uint64_t v80 = (uint64_t)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E9A8C8);
  __chkstk_darwin(v6 - 8);
  uint64_t v75 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v77 = (uint64_t)&v73 - v9;
  __chkstk_darwin(v10);
  uint64_t v76 = (uint64_t)&v73 - v11;
  uint64_t v12 = type metadata accessor for ComparisonCapsuleCompactGridView(0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
  __chkstk_darwin(v78);
  uint64_t v74 = (uint64_t)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v73 - v17;
  uint64_t v19 = sub_10017DF08(&qword_100E76440);
  __chkstk_darwin(v19 - 8);
  uint64_t v88 = (char *)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v86 = (char *)&v73 - v22;
  uint64_t v23 = sub_10017DF08(&qword_100E9A938);
  uint64_t v24 = v23 - 8;
  __chkstk_darwin(v23);
  uint64_t v87 = (char *)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v73 - v27;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v73 - v30;
  uint64_t v100 = 0;
  unsigned __int8 v101 = 1;
  sub_10083342C(a2, (uint64_t *)a1, (uint64_t)v102);
  uint64_t v82 = v100;
  int v81 = v101;
  uint64_t v83 = v102[0];
  uint64_t v95 = v102[1];
  int v94 = v103;
  uint64_t v85 = v104;
  uint64_t v84 = v105;
  uint64_t v93 = v106;
  int v92 = v107;
  uint64_t v91 = v108;
  int v90 = v109;
  uint64_t v32 = v110;
  uint64_t v33 = v111;
  *(void *)uint64_t v28 = 0;
  uint64_t v34 = (uint64_t)&v28[*(int *)(v24 + 44)];
  v28[8] = 1;
  uint64_t v35 = v12;
  uint64_t v36 = a1;
  sub_1008336E0(a2, a1, v34);
  long long v96 = v31;
  sub_10024D364((uint64_t)v28, (uint64_t)v31, &qword_100E9A938);
  uint64_t v37 = a2 + *(int *)(v35 + 20);
  uint64_t v114 = *(void *)(v37 + 32);
  long long v38 = *(_OWORD *)(v37 + 16);
  long long v112 = *(_OWORD *)v37;
  long long v113 = v38;
  sub_100788F9C(v97);
  uint64_t v39 = v98;
  uint64_t v40 = v99;
  sub_1001B1E64(v97, v98);
  uint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t))(v40 + 104);
  uint64_t v42 = v39;
  uint64_t v43 = (uint64_t)v14;
  uint64_t v44 = v40;
  uint64_t v45 = (uint64_t)v18;
  LOBYTE(a1) = v41(v42, v44);
  sub_10083738C(v36, (uint64_t)v18, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
  sub_10083738C(a2, (uint64_t)v14, (void (*)(void))type metadata accessor for ComparisonCapsuleCompactGridView);
  if ((a1 & 1) == 0)
  {
    sub_10083742C((uint64_t)v14, (void (*)(void))type metadata accessor for ComparisonCapsuleCompactGridView);
    sub_10083742C((uint64_t)v18, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
    uint64_t v56 = (uint64_t)v88;
    uint64_t v57 = (uint64_t)v87;
    uint64_t v58 = (uint64_t)v86;
    uint64_t v59 = v85;
    uint64_t v60 = v84;
    uint64_t v61 = v83;
    uint64_t v55 = v82;
    goto LABEL_6;
  }
  uint64_t v46 = (uint64_t)v75;
  uint64_t v47 = (uint64_t)v18;
  uint64_t v48 = v76;
  sub_10083738C(v47, v76, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
  uint64_t v49 = v78;
  _s7Weather24LocationCompositionStateOwst_0(v48, 0, 1, v78);
  uint64_t v50 = *(void *)&v14[*(int *)(v35 + 20) + 8];
  uint64_t v51 = v77;
  sub_100304264(v50, v77);
  uint64_t v52 = v80;
  uint64_t v53 = v80 + *(int *)(v79 + 48);
  sub_10006DF38(v48, v80, &qword_100E9A8C8);
  sub_10006DF38(v51, v53, &qword_100E9A8C8);
  if (_s7Weather24LocationCompositionStateOwet_0(v52, 1, v49) != 1)
  {
    sub_10006DF38(v52, v46, &qword_100E9A8C8);
    if (_s7Weather24LocationCompositionStateOwet_0(v53, 1, v49) != 1)
    {
      uint64_t v64 = v74;
      sub_100837574(v53, v74, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
      sub_100788E30();
      char v66 = v65;
      sub_10083742C(v64, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
      sub_100178110(v51, &qword_100E9A8C8);
      sub_100178110(v48, &qword_100E9A8C8);
      sub_10083742C(v43, (void (*)(void))type metadata accessor for ComparisonCapsuleCompactGridView);
      sub_10083742C(v45, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
      sub_10083742C(v46, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
      sub_100178110(v52, &qword_100E9A8C8);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v97);
      uint64_t v56 = (uint64_t)v88;
      uint64_t v57 = (uint64_t)v87;
      uint64_t v58 = (uint64_t)v86;
      uint64_t v59 = v85;
      uint64_t v60 = v84;
      uint64_t v61 = v83;
      uint64_t v55 = v82;
      char v62 = v81;
      if (v66) {
        goto LABEL_7;
      }
LABEL_12:
      Divider.init()();
      uint64_t v63 = 0;
      goto LABEL_13;
    }
    sub_100178110(v51, &qword_100E9A8C8);
    sub_100178110(v48, &qword_100E9A8C8);
    sub_10083742C(v43, (void (*)(void))type metadata accessor for ComparisonCapsuleCompactGridView);
    sub_10083742C(v45, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
    sub_10083742C(v46, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
    uint64_t v55 = v82;
LABEL_10:
    sub_100178110(v52, &qword_100E9A8C0);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v97);
    uint64_t v56 = (uint64_t)v88;
    uint64_t v57 = (uint64_t)v87;
    uint64_t v58 = (uint64_t)v86;
    uint64_t v59 = v85;
    uint64_t v60 = v84;
    uint64_t v61 = v83;
    char v62 = v81;
    goto LABEL_12;
  }
  sub_100178110(v51, &qword_100E9A8C8);
  sub_100178110(v48, &qword_100E9A8C8);
  sub_10083742C(v43, (void (*)(void))type metadata accessor for ComparisonCapsuleCompactGridView);
  sub_10083742C(v45, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
  int v54 = _s7Weather24LocationCompositionStateOwet_0(v53, 1, v49);
  uint64_t v55 = v82;
  if (v54 != 1) {
    goto LABEL_10;
  }
  sub_100178110(v52, &qword_100E9A8C8);
  uint64_t v56 = (uint64_t)v88;
  uint64_t v57 = (uint64_t)v87;
  uint64_t v58 = (uint64_t)v86;
  uint64_t v59 = v85;
  uint64_t v60 = v84;
  uint64_t v61 = v83;
LABEL_6:
  char v62 = v81;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v97);
LABEL_7:
  uint64_t v63 = 1;
LABEL_13:
  uint64_t v67 = type metadata accessor for Divider();
  _s7Weather24LocationCompositionStateOwst_0(v58, v63, 1, v67);
  sub_10006DF38((uint64_t)v96, v57, &qword_100E9A938);
  sub_10006DF38(v58, v56, &qword_100E76440);
  uint64_t v68 = v89;
  *char v89 = v55;
  *((unsigned char *)v68 + 8) = v62;
  uint64_t v69 = v95;
  v68[2] = v61;
  v68[3] = v69;
  char v70 = v94;
  *((unsigned char *)v68 + 32) = v94;
  v68[5] = v59;
  v68[6] = v60;
  v68[7] = v93;
  *((unsigned char *)v68 + 64) = v92;
  v68[9] = v91;
  *((unsigned char *)v68 + 80) = v90;
  v68[11] = v32;
  v68[12] = v33;
  uint64_t v71 = sub_10017DF08(&qword_100E9A940);
  sub_10006DF38(v57, (uint64_t)v68 + *(int *)(v71 + 48), &qword_100E9A938);
  sub_10006DF38(v56, (uint64_t)v68 + *(int *)(v71 + 64), &qword_100E76440);
  sub_100190CC4(v61, v69, v70);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100190CC4(v61, v69, v70);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100178110(v58, &qword_100E76440);
  sub_100178110((uint64_t)v96, &qword_100E9A938);
  sub_100191924(v61, v69, v70);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100178110(v56, &qword_100E76440);
  sub_100178110(v57, &qword_100E9A938);
  sub_100191924(v61, v69, v70);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10083342C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for Font.TextStyle();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (void *)((char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(unsigned char *)(a1 + *(int *)(type metadata accessor for ComparisonCapsuleCompactGridView(0) + 24)) == 1)
  {
    uint64_t v14 = a2[2];
    uint64_t v13 = a2[3];
    sub_10083738C((uint64_t)a2, (uint64_t)v12, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
    if (v13)
    {
      uint64_t v15 = v13;
    }
    else
    {
      uint64_t v14 = *v12;
      uint64_t v15 = v12[1];
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    sub_10083742C((uint64_t)v12, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
  }
  else
  {
    uint64_t v14 = *a2;
    uint64_t v15 = a2[1];
    swift_bridgeObjectRetain();
  }
  v34[2] = v14;
  v34[3] = v15;
  sub_10014A85C();
  uint64_t v16 = Text.init<A>(_:)();
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for Font.TextStyle.title3(_:), v6);
  static Font.Weight.medium.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v21 = Text.font(_:)();
  uint64_t v23 = v22;
  char v25 = v24;
  v34[0] = v26;
  swift_release();
  sub_100191924(v16, v18, v20);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  sub_100788050();
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  if (v29) {
    uint64_t v30 = 3;
  }
  else {
    uint64_t v30 = 2;
  }
  uint64_t result = static UnitPoint.leading.getter();
  *(void *)a3 = v21;
  *(void *)(a3 + 8) = v23;
  *(unsigned char *)(a3 + 16) = v25 & 1;
  *(void *)(a3 + 24) = v34[0];
  *(void *)(a3 + 32) = KeyPath;
  *(void *)(a3 + 40) = 1;
  *(unsigned char *)(a3 + 48) = 0;
  *(void *)(a3 + 56) = v30;
  *(unsigned char *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = v32;
  *(void *)(a3 + 80) = v33;
  return result;
}

uint64_t sub_1008336E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v156 = a3;
  uint64_t v148 = sub_10017DF08(&qword_100E9A948);
  __chkstk_darwin(v148);
  uint64_t v153 = (char *)&v128 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = sub_10017DF08(&qword_100E9A950);
  __chkstk_darwin(v150);
  uint64_t v152 = (uint64_t)&v128 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_10017DF08(&qword_100E9A958);
  __chkstk_darwin(v151);
  uint64_t v155 = (uint64_t)&v128 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v154 = (uint64_t)&v128 - v9;
  uint64_t v139 = type metadata accessor for CapsuleView(0);
  __chkstk_darwin(v139);
  uint64_t v137 = (char *)&v128 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = sub_10017DF08(&qword_100E9A960);
  __chkstk_darwin(v140);
  uint64_t v142 = (uint64_t)&v128 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_10017DF08(&qword_100E9A968);
  __chkstk_darwin(v141);
  uint64_t v145 = (uint64_t)&v128 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = sub_10017DF08(&qword_100E9A970);
  __chkstk_darwin(v144);
  uint64_t v149 = (uint64_t)&v128 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v143 = (uint64_t)&v128 - v15;
  __chkstk_darwin(v16);
  uint64_t v161 = (uint64_t)&v128 - v17;
  uint64_t v18 = sub_10017DF08(&qword_100E9A978);
  uint64_t v157 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v162 = (char *)&v128 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = sub_10017DF08(&qword_100E9A980);
  __chkstk_darwin(v134);
  unsigned __int8 v135 = (char *)&v128 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_10017DF08(&qword_100E9A988);
  __chkstk_darwin(v138);
  uint64_t v133 = (uint64_t)&v128 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10017DF08(&qword_100E9A990);
  __chkstk_darwin(v22 - 8);
  uint64_t v147 = (uint64_t)&v128 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v128 - v25;
  uint64_t v27 = *(int *)(type metadata accessor for ComparisonCapsuleCompactGridView(0) + 20);
  uint64_t v146 = a1;
  uint64_t v28 = (long long *)(a1 + v27);
  uint64_t v201 = *(void *)(a1 + v27 + 32);
  long long v29 = *(_OWORD *)(a1 + v27 + 16);
  long long v199 = *(_OWORD *)(a1 + v27);
  long long v200 = v29;
  uint64_t v160 = a2;
  sub_100789120();
  uint64_t v158 = v18;
  long long v159 = v26;
  if (v33)
  {
    uint64_t v34 = v30;
    uint64_t v35 = v31;
    uint64_t v36 = v33;
    char v37 = v32 & 1;
    uint64_t v132 = v32 & 1;
    uint64_t KeyPath = swift_getKeyPath();
    long long v38 = v28[1];
    long long v196 = *v28;
    long long v197 = v38;
    uint64_t v198 = *((void *)v28 + 4);
    sub_100190CC4(v34, v35, v37);
    swift_bridgeObjectRetain();
    sub_100788F9C(v174);
    uint64_t v39 = v174[3];
    uint64_t v40 = v174[4];
    sub_1001B1E64(v174, v174[3]);
    uint64_t v129 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 40))(v39, v40);
    uint64_t v41 = swift_getKeyPath();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v174);
    long long v42 = v28[1];
    long long v193 = *v28;
    long long v194 = v42;
    uint64_t v195 = *((void *)v28 + 4);
    sub_100788F9C(v174);
    uint64_t v43 = v174[3];
    uint64_t v44 = v174[4];
    sub_1001B1E64(v174, v174[3]);
    uint64_t v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 16))(v43, v44);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v174);
    uint64_t v46 = v34;
    uint64_t v130 = v34;
    uint64_t v131 = v35;
    v174[0] = v34;
    v174[1] = v35;
    uint64_t v47 = v35;
    LOBYTE(v35) = v132;
    LOBYTE(v174[2]) = v132;
    v174[3] = v36;
    v174[4] = KeyPath;
    v174[5] = 1;
    LOBYTE(v174[6]) = 0;
    uint64_t v128 = v36;
    v174[7] = v41;
    v174[8] = v129;
    v174[9] = v45;
    sub_10017DF08(&qword_100E9A998);
    sub_1008377D0();
    View.monospacedDigit()();
    sub_100191924(v46, v47, v35);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    LOBYTE(v41) = static Edge.Set.trailing.getter();
    long long v48 = v28[1];
    long long v190 = *v28;
    long long v191 = v48;
    uint64_t v192 = *((void *)v28 + 4);
    sub_100788F9C(v174);
    uint64_t v49 = v174[3];
    uint64_t v50 = v174[4];
    sub_1001B1E64(v174, v174[3]);
    (*(void (**)(uint64_t, uint64_t))(v50 + 56))(v49, v50);
    EdgeInsets.init(_all:)();
    uint64_t v52 = v51;
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    uint64_t v58 = v57;
    uint64_t v60 = v157;
    uint64_t v59 = v158;
    uint64_t v61 = (uint64_t)v135;
    char v62 = v162;
    (*(void (**)(char *, char *, uint64_t))(v157 + 16))(v135, v162, v158);
    sub_100191924(v130, v131, v35);
    swift_bridgeObjectRelease();
    uint64_t v63 = v61 + *(int *)(v134 + 36);
    *(unsigned char *)uint64_t v63 = v41;
    uint64_t v26 = v159;
    *(void *)(v63 + 8) = v52;
    *(void *)(v63 + 16) = v54;
    *(void *)(v63 + 24) = v56;
    *(void *)(v63 + 32) = v58;
    *(unsigned char *)(v63 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v59);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v174);
    uint64_t v64 = v133;
    sub_10006DF38(v61, v133, &qword_100E9A980);
    uint64_t v65 = v138;
    *(_WORD *)(v64 + *(int *)(v138 + 36)) = 257;
    sub_100178110(v61, &qword_100E9A980);
    sub_10024D364(v64, (uint64_t)v26, &qword_100E9A988);
    uint64_t v66 = 0;
    uint64_t v67 = v65;
  }
  else
  {
    uint64_t v66 = 1;
    uint64_t v67 = v138;
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, v66, 1, v67);
  char v68 = *(unsigned char *)v28;
  uint64_t v69 = *((void *)v28 + 1);
  uint64_t v70 = *((void *)v28 + 2);
  uint64_t v71 = *((void *)v28 + 3);
  uint64_t v72 = *((void *)v28 + 4);
  uint64_t v73 = (uint64_t)v137;
  sub_10083738C(v160, (uint64_t)&v137[*(int *)(v139 + 20)], (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
  *(unsigned char *)uint64_t v73 = v68;
  *(void *)(v73 + 8) = v69;
  *(void *)(v73 + 16) = v70;
  *(void *)(v73 + 24) = v71;
  *(void *)(v73 + 32) = v72;
  uint64_t v74 = v142;
  sub_10083738C(v73, v142, (void (*)(void))type metadata accessor for CapsuleView);
  *(unsigned char *)(v74 + *(int *)(v140 + 36)) = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10083742C(v73, (void (*)(void))type metadata accessor for CapsuleView);
  long long v75 = v28[1];
  long long v187 = *v28;
  long long v188 = v75;
  uint64_t v189 = *((void *)v28 + 4);
  sub_100788F9C((uint64_t *)&v166);
  uint64_t v76 = *((void *)&v167 + 1);
  uint64_t v77 = v168;
  sub_1001B1E64(&v166, *((uint64_t *)&v167 + 1));
  (*(void (**)(uint64_t, uint64_t))(v77 + 96))(v76, v77);
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v78 = v145;
  sub_10006DF38(v74, v145, &qword_100E9A960);
  memcpy((void *)(v78 + *(int *)(v141 + 36)), v174, 0x70uLL);
  sub_100178110(v74, &qword_100E9A960);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v166);
  sub_10017DF08(&qword_100E7DDF0);
  ScaledValue.wrappedValue.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v79 = v143;
  sub_10006DF38(v78, v143, &qword_100E9A968);
  uint64_t v80 = (_OWORD *)(v79 + *(int *)(v144 + 36));
  long long v81 = v176;
  *uint64_t v80 = v175;
  v80[1] = v81;
  v80[2] = v177;
  sub_100178110(v78, &qword_100E9A968);
  sub_10024D364(v79, v161, &qword_100E9A970);
  long long v82 = v28[1];
  long long v184 = *v28;
  long long v185 = v82;
  uint64_t v186 = *((void *)v28 + 4);
  sub_10078951C();
  uint64_t v84 = v83;
  uint64_t v142 = v83;
  uint64_t v86 = v85;
  uint64_t v160 = v87;
  LODWORD(v146) = v88 & 1;
  uint64_t v145 = swift_getKeyPath();
  long long v89 = v28[1];
  long long v181 = *v28;
  long long v182 = v89;
  uint64_t v183 = *((void *)v28 + 4);
  sub_100788F9C((uint64_t *)&v166);
  uint64_t v90 = *((void *)&v167 + 1);
  uint64_t v91 = v168;
  sub_1001B1E64(&v166, *((uint64_t *)&v167 + 1));
  uint64_t v144 = (*(uint64_t (**)(uint64_t, uint64_t))(v91 + 48))(v90, v91);
  uint64_t v92 = swift_getKeyPath();
  uint64_t v143 = v92;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v166);
  long long v93 = v28[1];
  long long v178 = *v28;
  long long v179 = v93;
  uint64_t v180 = *((void *)v28 + 4);
  sub_100788F9C((uint64_t *)&v166);
  uint64_t v94 = *((void *)&v167 + 1);
  uint64_t v95 = v168;
  sub_1001B1E64(&v166, *((uint64_t *)&v167 + 1));
  uint64_t v96 = (*(uint64_t (**)(uint64_t, uint64_t))(v95 + 24))(v94, v95);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v166);
  *(void *)&long long v166 = v84;
  *((void *)&v166 + 1) = v86;
  LOBYTE(v91) = v146;
  LOBYTE(v167) = v146;
  *((void *)&v167 + 1) = v160;
  uint64_t v168 = v145;
  uint64_t v169 = 1;
  char v170 = 0;
  uint64_t v171 = v92;
  uint64_t v172 = v144;
  uint64_t v173 = v96;
  sub_10017DF08(&qword_100E9A998);
  sub_1008377D0();
  uint64_t v97 = v162;
  View.monospacedDigit()();
  sub_100191924(v142, v86, v91);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  static UnitPoint.trailing.getter();
  uint64_t v99 = v98;
  uint64_t v101 = v100;
  uint64_t v103 = v157;
  uint64_t v102 = v158;
  uint64_t v104 = (uint64_t)v153;
  (*(void (**)(char *, char *, uint64_t))(v157 + 16))(v153, v97, v158);
  uint64_t v105 = (void *)(v104 + *(int *)(v148 + 36));
  *uint64_t v105 = v99;
  v105[1] = v101;
  (*(void (**)(char *, uint64_t))(v103 + 8))(v97, v102);
  LOBYTE(v103) = static Edge.Set.leading.getter();
  long long v106 = v28[1];
  long long v166 = *v28;
  long long v167 = v106;
  uint64_t v168 = *((void *)v28 + 4);
  sub_100788F9C(v163);
  uint64_t v107 = v164;
  uint64_t v108 = v165;
  sub_1001B1E64(v163, v164);
  (*(void (**)(uint64_t, uint64_t))(v108 + 56))(v107, v108);
  EdgeInsets.init(_all:)();
  uint64_t v110 = v109;
  uint64_t v112 = v111;
  uint64_t v114 = v113;
  uint64_t v116 = v115;
  uint64_t v117 = v152;
  sub_10006DF38(v104, v152, &qword_100E9A948);
  uint64_t v118 = v117 + *(int *)(v150 + 36);
  *(unsigned char *)uint64_t v118 = v103;
  *(void *)(v118 + 8) = v110;
  *(void *)(v118 + 16) = v112;
  *(void *)(v118 + 24) = v114;
  *(void *)(v118 + 32) = v116;
  *(unsigned char *)(v118 + 40) = 0;
  sub_100178110(v104, &qword_100E9A948);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v163);
  uint64_t v119 = v155;
  sub_10006DF38(v117, v155, &qword_100E9A950);
  *(_WORD *)(v119 + *(int *)(v151 + 36)) = 257;
  sub_100178110(v117, &qword_100E9A950);
  uint64_t v120 = v154;
  sub_10024D364(v119, v154, &qword_100E9A958);
  uint64_t v121 = (uint64_t)v159;
  uint64_t v122 = v147;
  sub_10006DF38((uint64_t)v159, v147, &qword_100E9A990);
  uint64_t v123 = v161;
  uint64_t v124 = v149;
  sub_10006DF38(v161, v149, &qword_100E9A970);
  sub_10006DF38(v120, v119, &qword_100E9A958);
  uint64_t v125 = v156;
  sub_10006DF38(v122, v156, &qword_100E9A990);
  uint64_t v126 = sub_10017DF08(&qword_100E9A9B8);
  sub_10006DF38(v124, v125 + *(int *)(v126 + 48), &qword_100E9A970);
  sub_10006DF38(v119, v125 + *(int *)(v126 + 64), &qword_100E9A958);
  sub_100178110(v120, &qword_100E9A958);
  sub_100178110(v123, &qword_100E9A970);
  sub_100178110(v121, &qword_100E9A990);
  sub_100178110(v119, &qword_100E9A958);
  sub_100178110(v124, &qword_100E9A970);
  return sub_100178110(v122, &qword_100E9A990);
}

uint64_t sub_100834534()
{
  return ForEach<>.init(_:content:)();
}

uint64_t sub_100834654()
{
  uint64_t v1 = type metadata accessor for RoundedRectangle();
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_10012B938();
  sub_10017DF08(&qword_100E9A930);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = (char *)v0 + *(int *)(v1 + 20);
  uint64_t v8 = enum case for RoundedCornerStyle.continuous(_:);
  type metadata accessor for RoundedCornerStyle();
  sub_100162E4C();
  (*(void (**)(char *, uint64_t))(v9 + 104))(v7, v8);
  __asm { FMOV            V0.2D, #5.0 }
  *uint64_t v0 = _Q0;
  sub_1007884D8();
  sub_1008373E8((uint64_t)&qword_100E7B5E0);
  sub_10014A85C();
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  sub_10083742C((uint64_t)v0, (void (*)(void))&type metadata accessor for RoundedRectangle);
  ModifiedContent<>.accessibilityRespondsToUserInteraction(_:)();
  return sub_100178110(v6, &qword_100E9A930);
}

uint64_t sub_10083481C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = static HorizontalAlignment.leading.getter();
  long long v4 = v1[1];
  long long v14 = *v1;
  long long v15 = v4;
  uint64_t v16 = *((void *)v1 + 4);
  sub_100788F9C(v11);
  uint64_t v5 = v12;
  uint64_t v6 = v13;
  sub_1001B1E64(v11, v12);
  double v7 = (*(double (**)(uint64_t, uint64_t))(v6 + 64))(v5, v6);
  *(void *)a1 = v3;
  *(double *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = 0;
  sub_10017DF08(&qword_100E9A890);
  uint64_t v17 = *((void *)&v14 + 1);
  uint64_t v18 = v15;
  uint64_t v8 = (_OWORD *)swift_allocObject();
  long long v9 = v1[1];
  v8[1] = *v1;
  v8[2] = v9;
  *(_OWORD *)((char *)v8 + 41) = *(long long *)((char *)v1 + 25);
  swift_bridgeObjectRetain();
  sub_1004D360C((uint64_t)&v17);
  sub_1004D360C((uint64_t)&v18);
  sub_10017DF08(&qword_100E9A898);
  sub_10017DF08(&qword_100E9A8A0);
  sub_10024D5E4((uint64_t)&unk_100E9A8A8);
  sub_10024D5E4((uint64_t)&unk_100E9A8B0);
  sub_1008373E8((uint64_t)&unk_100E9A8B8);
  ForEach<>.init(_:content:)();
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v11);
}

uint64_t sub_100834A0C@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = a1;
  uint64_t v63 = a1;
  uint64_t v77 = a3;
  uint64_t v74 = sub_10017DF08(&qword_100E9A8C0) - 8;
  __chkstk_darwin(v74);
  uint64_t v73 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E9A8C8);
  __chkstk_darwin(v6 - 8);
  uint64_t v62 = (uint64_t)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v70 = (char *)&v61 - v9;
  __chkstk_darwin(v10);
  uint64_t v72 = (char *)&v61 - v11;
  uint64_t v12 = sub_10017DF08(&qword_100E76440);
  __chkstk_darwin(v12 - 8);
  uint64_t v76 = (uint64_t)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  long long v75 = (char *)&v61 - v15;
  uint64_t v69 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v68 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
  __chkstk_darwin(v71);
  uint64_t v19 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for ComparisonCapsuleStackRowView(0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_10017DF08(&qword_100E9A8D0);
  uint64_t v23 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v25 = (char *)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10017DF08(&qword_100E9A8D8);
  __chkstk_darwin(v26 - 8);
  uint64_t v28 = (char *)&v61 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v66 = (char *)&v61 - v30;
  long long v31 = a2[1];
  long long v83 = *a2;
  long long v84 = v31;
  uint64_t v85 = *((void *)a2 + 4);
  uint64_t v64 = *((void *)&v83 + 1);
  uint64_t v86 = v31;
  uint64_t v65 = type metadata accessor for ComparisonCapsuleViewModel.Row;
  sub_10083738C(v4, (uint64_t)v19, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
  LOBYTE(v4) = *((unsigned char *)a2 + 40);
  *(void *)uint64_t v22 = swift_getKeyPath();
  v22[8] = 0;
  long long v32 = a2[1];
  *((_OWORD *)v22 + 1) = *a2;
  *((_OWORD *)v22 + 2) = v32;
  *((void *)v22 + 6) = *((void *)a2 + 4);
  uint64_t v33 = (uint64_t)&v22[*(int *)(v20 + 24)];
  uint64_t v61 = v19;
  sub_100837574((uint64_t)v19, v33, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
  v22[*(int *)(v20 + 28)] = v4;
  uint64_t v34 = (uint64_t)v70;
  swift_bridgeObjectRetain();
  sub_1004D360C((uint64_t)&v86);
  static AccessibilityChildBehavior.ignore.getter();
  unint64_t v35 = sub_1008373E8((uint64_t)&unk_100E9A8E0);
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v17, v69);
  sub_10083742C((uint64_t)v22, (void (*)(void))type metadata accessor for ComparisonCapsuleStackRowView);
  uint64_t v36 = v63;
  sub_1007884D8();
  v78[0] = v37;
  v78[1] = v38;
  uint64_t v81 = v20;
  unint64_t v82 = v35;
  uint64_t v39 = (uint64_t)v72;
  swift_getOpaqueTypeConformance2();
  sub_10014A85C();
  uint64_t v40 = v67;
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  uint64_t v41 = v40;
  uint64_t v42 = (uint64_t)v66;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v41);
  uint64_t v43 = v71;
  sub_10024D364((uint64_t)v28, v42, &qword_100E9A8D8);
  uint64_t v44 = v36;
  uint64_t v45 = (uint64_t)v73;
  sub_10083738C(v44, v39, (void (*)(void))v65);
  _s7Weather24LocationCompositionStateOwst_0(v39, 0, 1, v43);
  sub_100304264(v64, v34);
  uint64_t v46 = v45 + *(int *)(v74 + 56);
  sub_10006DF38(v39, v45, &qword_100E9A8C8);
  sub_10006DF38(v34, v46, &qword_100E9A8C8);
  if (_s7Weather24LocationCompositionStateOwet_0(v45, 1, v43) == 1)
  {
    sub_100178110(v34, &qword_100E9A8C8);
    sub_100178110(v39, &qword_100E9A8C8);
    int v47 = _s7Weather24LocationCompositionStateOwet_0(v46, 1, v43);
    uint64_t v48 = (uint64_t)v75;
    if (v47 == 1)
    {
      sub_100178110(v45, &qword_100E9A8C8);
LABEL_10:
      uint64_t v55 = 1;
      goto LABEL_11;
    }
    goto LABEL_6;
  }
  uint64_t v49 = v62;
  sub_10006DF38(v45, v62, &qword_100E9A8C8);
  if (_s7Weather24LocationCompositionStateOwet_0(v46, 1, v43) == 1)
  {
    sub_100178110(v34, &qword_100E9A8C8);
    sub_100178110(v39, &qword_100E9A8C8);
    sub_10083742C(v49, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
    uint64_t v48 = (uint64_t)v75;
LABEL_6:
    sub_100178110(v45, &qword_100E9A8C0);
    goto LABEL_8;
  }
  uint64_t v50 = (uint64_t)v61;
  sub_100837574(v46, (uint64_t)v61, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
  sub_100788E30();
  char v52 = v51;
  sub_10083742C(v50, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
  sub_100178110(v34, &qword_100E9A8C8);
  sub_100178110(v39, &qword_100E9A8C8);
  sub_10083742C(v49, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
  sub_100178110(v45, &qword_100E9A8C8);
  uint64_t v48 = (uint64_t)v75;
  if (v52) {
    goto LABEL_10;
  }
LABEL_8:
  sub_100788F9C(v78);
  uint64_t v53 = v79;
  uint64_t v54 = v80;
  sub_1001B1E64(v78, v79);
  LOBYTE(v53) = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 104))(v53, v54);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v78);
  if ((v53 & 1) == 0) {
    goto LABEL_10;
  }
  Divider.init()();
  uint64_t v55 = 0;
LABEL_11:
  uint64_t v56 = type metadata accessor for Divider();
  _s7Weather24LocationCompositionStateOwst_0(v48, v55, 1, v56);
  sub_10006DF38(v42, (uint64_t)v28, &qword_100E9A8D8);
  uint64_t v57 = v76;
  sub_10006DF38(v48, v76, &qword_100E76440);
  uint64_t v58 = v77;
  sub_10006DF38((uint64_t)v28, v77, &qword_100E9A8D8);
  uint64_t v59 = sub_10017DF08(&qword_100E9A8E8);
  sub_10006DF38(v57, v58 + *(int *)(v59 + 48), &qword_100E76440);
  sub_100178110(v48, &qword_100E76440);
  sub_100178110(v42, &qword_100E9A8D8);
  sub_100178110(v57, &qword_100E76440);
  return sub_100178110((uint64_t)v28, &qword_100E9A8D8);
}

uint64_t sub_1008352D4@<X0>(uint64_t a1@<X8>)
{
  return sub_10083481C(a1);
}

void *sub_100835310@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = static HorizontalAlignment.leading.getter();
  sub_100835388(v1, v5);
  memcpy(&__src[7], v5, 0x7BuLL);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  return memcpy((void *)(a1 + 17), __src, 0x82uLL);
}

uint64_t sub_100835388@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v228 = a2;
  uint64_t v3 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v3 - 8);
  uint64_t v221 = (char *)&v216 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v230 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
  __chkstk_darwin(v230);
  uint64_t v229 = (uint64_t)&v216 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E6D330);
  __chkstk_darwin(v6 - 8);
  uint64_t KeyPath = (uint64_t)&v216 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v216 - v9;
  uint64_t v11 = type metadata accessor for Font.TextStyle();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v216 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ComparisonCapsuleStackRowView(0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v216 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(int *)(v18 + 24);
  uint64_t v20 = *(int *)(v18 + 28);
  uint64_t v225 = v18;
  uint64_t v226 = v20;
  LODWORD(v20) = *(unsigned __int8 *)(a1 + v20);
  uint64_t v21 = (uint64_t *)(a1 + v19);
  uint64_t v231 = a1;
  if (v20 == 1)
  {
    uint64_t v23 = v21[2];
    uint64_t v22 = v21[3];
    sub_10083738C(a1, (uint64_t)v17, (void (*)(void))type metadata accessor for ComparisonCapsuleStackRowView);
    if (v22)
    {
      uint64_t v24 = v22;
    }
    else
    {
      uint64_t v25 = &v17[*(int *)(v15 + 24)];
      uint64_t v23 = *(void *)v25;
      uint64_t v24 = *((void *)v25 + 1);
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    sub_10083742C((uint64_t)v17, (void (*)(void))type metadata accessor for ComparisonCapsuleStackRowView);
  }
  else
  {
    uint64_t v23 = *v21;
    uint64_t v24 = v21[1];
    swift_bridgeObjectRetain();
  }
  *(void *)&long long v243 = v23;
  *((void *)&v243 + 1) = v24;
  sub_10014A85C();
  uint64_t v26 = Text.init<A>(_:)();
  uint64_t v223 = v27;
  uint64_t v224 = v28;
  LODWORD(v222) = v29 & 1;
  uint64_t v30 = *(void (**)(char *, void, uint64_t))(v12 + 104);
  v30(v14, enum case for Font.TextStyle.title3(_:), v11);
  static Font.Weight.medium.getter();
  uint64_t v31 = static Font.system(_:weight:)();
  long long v32 = *(void (**)(char *, uint64_t))(v12 + 8);
  v32(v14, v11);
  v30(v14, enum case for Font.TextStyle.body(_:), v11);
  static Font.Weight.medium.getter();
  uint64_t v33 = static Font.system(_:weight:)();
  v32(v14, v11);
  uint64_t v34 = v231;
  uint64_t v35 = *(void *)v231;
  char v36 = *(unsigned char *)(v231 + 8);
  sub_100195B7C(*(void *)v231, v36);
  sub_100149AE8();
  char v38 = v37;
  sub_10018F6D8(v35, v36);
  uint64_t v39 = enum case for Font.Leading.tight(_:);
  uint64_t v40 = type metadata accessor for Font.Leading();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 104))(v10, v39, v40);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v40);
  uint64_t v41 = KeyPath;
  sub_10006DF38((uint64_t)v10, KeyPath, &qword_100E6D330);
  swift_retain();
  swift_retain();
  sub_10014A8A8(v31, v33, v38 & 1, v41);
  uint64_t v42 = v26;
  uint64_t v43 = v223;
  LOBYTE(v39) = v222;
  uint64_t v44 = Text.font(_:)();
  uint64_t v232 = v45;
  uint64_t v233 = v44;
  int v227 = v46;
  uint64_t v234 = v47;
  swift_release();
  swift_release();
  swift_release();
  sub_100191924(v42, v43, v39);
  swift_bridgeObjectRelease();
  sub_100178110((uint64_t)v10, &qword_100E6D330);
  uint64_t v226 = *(unsigned __int8 *)(v34 + v226);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v48 = v34 + *(int *)(v225 + 24);
  uint64_t v49 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
  sub_10083738C(v48 + *(int *)(v49 + 20), v229, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v50 = *(_OWORD *)(v34 + 32);
    long long v252 = *(_OWORD *)(v34 + 16);
    long long v253 = v50;
    uint64_t v254 = *(void *)(v34 + 48);
    sub_100789120();
    if (v54)
    {
      uint64_t v55 = v51;
      uint64_t v56 = v52;
      uint64_t v57 = v54;
      uint64_t v58 = (long long *)(v34 + 16);
      char v59 = v53 & 1;
      uint64_t v231 = v53 & 1;
      sub_100788F9C((uint64_t *)&v243);
      uint64_t v60 = *((void *)&v244 + 1);
      uint64_t v61 = v245;
      sub_1001B1E64(&v243, *((uint64_t *)&v244 + 1));
      *(void *)&long long v237 = (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 16))(v60, v61);
      LOBYTE(v249) = v59;
      uint64_t v62 = Text.foregroundStyle<A>(_:)();
      uint64_t v229 = v55;
      uint64_t v230 = v57;
      uint64_t v64 = v63;
      LOBYTE(v60) = v65;
      swift_release();
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v243);
      uint64_t v66 = static Text.+ infix(_:_:)();
      uint64_t v222 = v67;
      uint64_t v223 = v66;
      uint64_t v224 = v68;
      LODWORD(v221) = v69 & 1;
      sub_100191924(v62, v64, v60 & 1);
      swift_bridgeObjectRelease();
      long long v70 = v58[1];
      long long v249 = *v58;
      long long v250 = v70;
      uint64_t v251 = *((void *)v58 + 4);
      sub_10078951C();
      uint64_t v72 = v71;
      uint64_t v74 = v73;
      char v76 = v75 & 1;
      sub_100788F9C((uint64_t *)&v243);
      uint64_t v77 = *((void *)&v244 + 1);
      uint64_t v78 = v245;
      sub_1001B1E64(&v243, *((uint64_t *)&v244 + 1));
      *(void *)&long long v237 = (*(uint64_t (**)(uint64_t, uint64_t))(v78 + 24))(v77, v78);
      uint64_t v79 = Text.foregroundStyle<A>(_:)();
      uint64_t v219 = v80;
      uint64_t v220 = v79;
      uint64_t v225 = v56;
      LOBYTE(v56) = v81 & 1;
      sub_100191924(v72, v74, v76);
      swift_release();
      swift_bridgeObjectRelease();
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v243);
      uint64_t v83 = v222;
      uint64_t v82 = v223;
      LOBYTE(v77) = (_BYTE)v221;
      uint64_t v85 = v219;
      uint64_t v84 = v220;
      uint64_t v86 = static Text.+ infix(_:_:)();
      uint64_t v216 = v87;
      uint64_t v217 = v86;
      uint64_t v218 = v88;
      char v90 = v89 & 1;
      sub_100191924(v84, v85, v56);
      swift_bridgeObjectRelease();
      sub_100191924(v82, v83, v77);
      swift_bridgeObjectRelease();
      uint64_t v92 = v216;
      uint64_t v91 = v217;
      uint64_t v93 = Text.monospacedDigit()();
      uint64_t v95 = v94;
      uint64_t v97 = v96;
      uint64_t v99 = v98 & 1;
      sub_100191924(v91, v92, v90);
      swift_bridgeObjectRelease();
      uint64_t v100 = swift_getKeyPath();
      uint64_t v101 = swift_getKeyPath();
      *(void *)&long long v237 = v93;
      *((void *)&v237 + 1) = v95;
      *(void *)&long long v238 = v99;
      *((void *)&v238 + 1) = v97;
      *(void *)&long long v239 = v100;
      *((void *)&v239 + 1) = 0x3FE0000000000000;
      *(void *)&long long v240 = v101;
      *((void *)&v240 + 1) = 1;
      __int16 v241 = 0;
      sub_100190CC4(v93, v95, v99);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_100190CC4(v93, v95, v99);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_10017DF08(&qword_100E9ABC8);
      sub_10083B114();
      _ConditionalContent<>.init(storage:)();
      sub_100191924(v229, v225, v231);
      swift_bridgeObjectRelease();
      sub_100191924(v93, v95, v99);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_100191924(v93, v95, v99);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10078951C();
      uint64_t v159 = v158;
      uint64_t v161 = v160;
      char v163 = v162 & 1;
      sub_100788F9C((uint64_t *)&v243);
      uint64_t v164 = *((void *)&v244 + 1);
      uint64_t v165 = v245;
      sub_1001B1E64(&v243, *((uint64_t *)&v244 + 1));
      *(void *)&long long v237 = (*(uint64_t (**)(uint64_t, uint64_t))(v165 + 24))(v164, v165);
      uint64_t v166 = Text.foregroundStyle<A>(_:)();
      uint64_t v168 = v167;
      char v170 = v169 & 1;
      sub_100191924(v159, v161, v163);
      swift_release();
      swift_bridgeObjectRelease();
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v243);
      uint64_t v171 = Text.monospacedDigit()();
      uint64_t v173 = v172;
      uint64_t v175 = v174;
      uint64_t v177 = v176 & 1;
      sub_100191924(v166, v168, v170);
      swift_bridgeObjectRelease();
      uint64_t v178 = swift_getKeyPath();
      uint64_t v179 = swift_getKeyPath();
      *(void *)&long long v237 = v171;
      *((void *)&v237 + 1) = v173;
      *(void *)&long long v238 = v177;
      *((void *)&v238 + 1) = v175;
      *(void *)&long long v239 = v178;
      *((void *)&v239 + 1) = 0x3FE0000000000000;
      *(void *)&long long v240 = v179;
      *((void *)&v240 + 1) = 1;
      __int16 v241 = 256;
      sub_10017DF08(&qword_100E9ABC8);
      sub_10083B114();
      _ConditionalContent<>.init(storage:)();
    }
    if (HIBYTE(v247)) {
      __int16 v180 = 256;
    }
    else {
      __int16 v180 = 0;
    }
    long long v237 = v243;
    long long v238 = v244;
    long long v239 = v245;
    long long v240 = v246;
    __int16 v241 = v180 | v247;
    char v242 = 1;
    sub_10017DF08(&qword_100E9ABD8);
    sub_10083B26C();
    _ConditionalContent<>.init(storage:)();
    uint64_t v182 = *((void *)&v243 + 1);
    uint64_t v181 = v243;
    uint64_t v183 = *((void *)&v244 + 1);
    uint64_t v184 = *((void *)&v245 + 1);
    uint64_t v224 = v245;
    uint64_t v230 = *((void *)&v246 + 1);
    uint64_t v185 = v246;
    uint64_t v231 = v244;
    LODWORD(v225) = v247;
    char v186 = v248;
  }
  else
  {
    sub_100788050();
    uint64_t v104 = v103;
    if (v102)
    {
      uint64_t v105 = v102;
      LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v106._uint64_t countAndFlagsBits = 14924;
      v106._object = (void *)0xE200000000000000;
      LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v106);
      v107._uint64_t countAndFlagsBits = v104;
      v107._object = v105;
      LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v107);
      swift_bridgeObjectRelease();
      v108._uint64_t countAndFlagsBits = 0;
      v108._object = (void *)0xE000000000000000;
      LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v108);
      LocalizedStringKey.init(stringInterpolation:)();
      uint64_t v109 = Text.init(_:tableName:bundle:comment:)();
      uint64_t v111 = v110;
      uint64_t v223 = v48;
      char v113 = v112 & 1;
      long long v114 = *(_OWORD *)(v34 + 32);
      long long v252 = *(_OWORD *)(v34 + 16);
      long long v253 = v114;
      uint64_t v254 = *(void *)(v34 + 48);
      sub_100788F9C((uint64_t *)&v243);
      uint64_t v115 = *((void *)&v244 + 1);
      uint64_t v116 = v245;
      sub_1001B1E64(&v243, *((uint64_t *)&v244 + 1));
      *(void *)&long long v237 = (*(uint64_t (**)(uint64_t, uint64_t))(v116 + 16))(v115, v116);
      uint64_t v117 = Text.foregroundStyle<A>(_:)();
      uint64_t v119 = v118;
      uint64_t v220 = v120;
      char v122 = v121 & 1;
      sub_100191924(v109, v111, v113);
      swift_release();
      swift_bridgeObjectRelease();
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v243);
      uint64_t v222 = static Text.+ infix(_:_:)();
      uint64_t v225 = v123;
      uint64_t v230 = v124;
      LODWORD(v224) = v125 & 1;
      sub_100191924(v117, v119, v122);
      swift_bridgeObjectRelease();
      LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v126._uint64_t countAndFlagsBits = 14920;
      v126._object = (void *)0xE200000000000000;
      LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v126);
      sub_100788288();
      LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v127);
      swift_bridgeObjectRelease();
      v128._uint64_t countAndFlagsBits = 0;
      v128._object = (void *)0xE000000000000000;
      LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v128);
      LocalizedStringKey.init(stringInterpolation:)();
      uint64_t v129 = Text.init(_:tableName:bundle:comment:)();
      uint64_t v131 = v130;
      LOBYTE(v119) = v132 & 1;
      long long v133 = *(_OWORD *)(v231 + 32);
      long long v249 = *(_OWORD *)(v231 + 16);
      long long v250 = v133;
      uint64_t v251 = *(void *)(v231 + 48);
      sub_100788F9C((uint64_t *)&v243);
      uint64_t v135 = *((void *)&v244 + 1);
      uint64_t v134 = v245;
      sub_1001B1E64(&v243, *((uint64_t *)&v244 + 1));
      *(void *)&long long v237 = (*(uint64_t (**)(uint64_t, uint64_t))(v134 + 24))(v135, v134);
      uint64_t v136 = Text.foregroundStyle<A>(_:)();
      uint64_t v231 = v137;
      LOBYTE(v109) = v138 & 1;
      sub_100191924(v129, v131, v119);
      swift_release();
      swift_bridgeObjectRelease();
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v243);
      uint64_t v139 = v222;
      uint64_t v140 = v225;
      LOBYTE(v134) = v224;
      uint64_t v141 = v136;
      uint64_t v142 = v231;
      uint64_t v143 = static Text.+ infix(_:_:)();
      uint64_t v220 = v144;
      uint64_t v221 = (char *)v143;
      uint64_t v223 = v145;
      LOBYTE(v131) = v146 & 1;
      sub_100191924(v141, v142, v109);
      swift_bridgeObjectRelease();
      sub_100191924(v139, v140, v134);
      swift_bridgeObjectRelease();
      uint64_t v148 = v220;
      uint64_t v147 = (uint64_t)v221;
      uint64_t v149 = Text.monospacedDigit()();
      uint64_t v151 = v150;
      uint64_t v153 = v152;
      uint64_t v155 = v154 & 1;
      sub_100191924(v147, v148, v131);
      swift_bridgeObjectRelease();
      uint64_t v156 = swift_getKeyPath();
      uint64_t v157 = swift_getKeyPath();
      *(void *)&long long v237 = v149;
      *((void *)&v237 + 1) = v151;
      *(void *)&long long v238 = v155;
      *((void *)&v238 + 1) = v153;
      *(void *)&long long v239 = v156;
      *((void *)&v239 + 1) = 0x3FE0000000000000;
      *(void *)&long long v240 = v157;
      *((void *)&v240 + 1) = 1;
      __int16 v241 = 0;
    }
    else
    {
      LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v187._uint64_t countAndFlagsBits = 14920;
      v187._object = (void *)0xE200000000000000;
      LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v187);
      sub_100788288();
      LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v188);
      swift_bridgeObjectRelease();
      v189._uint64_t countAndFlagsBits = 0;
      v189._object = (void *)0xE000000000000000;
      LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v189);
      LocalizedStringKey.init(stringInterpolation:)();
      uint64_t v190 = Text.init(_:tableName:bundle:comment:)();
      uint64_t v192 = v191;
      char v194 = v193 & 1;
      uint64_t v195 = Text.monospacedDigit()();
      uint64_t v197 = v196;
      uint64_t v199 = v198;
      uint64_t v201 = v200 & 1;
      sub_100191924(v190, v192, v194);
      swift_bridgeObjectRelease();
      uint64_t v202 = swift_getKeyPath();
      uint64_t v203 = swift_getKeyPath();
      *(void *)&long long v237 = v195;
      *((void *)&v237 + 1) = v197;
      *(void *)&long long v238 = v201;
      *((void *)&v238 + 1) = v199;
      *(void *)&long long v239 = v202;
      *((void *)&v239 + 1) = 0x3FE0000000000000;
      *(void *)&long long v240 = v203;
      *((void *)&v240 + 1) = 1;
      __int16 v241 = 256;
    }
    sub_10017DF08(&qword_100E9ABC8);
    sub_10083B114();
    _ConditionalContent<>.init(storage:)();
    if (HIBYTE(v247)) {
      __int16 v204 = 256;
    }
    else {
      __int16 v204 = 0;
    }
    long long v237 = v243;
    long long v238 = v244;
    long long v239 = v245;
    long long v240 = v246;
    __int16 v241 = v204 | v247;
    char v242 = 0;
    sub_10017DF08(&qword_100E9ABD8);
    sub_10083B26C();
    _ConditionalContent<>.init(storage:)();
    uint64_t v182 = *((void *)&v243 + 1);
    uint64_t v181 = v243;
    uint64_t v183 = *((void *)&v244 + 1);
    uint64_t v184 = *((void *)&v245 + 1);
    uint64_t v224 = v245;
    uint64_t v230 = *((void *)&v246 + 1);
    uint64_t v185 = v246;
    uint64_t v231 = v244;
    LODWORD(v225) = v247;
    char v186 = v248;
    sub_10083742C(v229, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
  }
  int v205 = v227 & 1;
  LOBYTE(v243) = v227 & 1;
  uint64_t v206 = v226;
  LOBYTE(v237) = v226 ^ 1;
  char v236 = v186;
  int v207 = v228;
  uint64_t v208 = v233;
  uint64_t v209 = v234;
  *uint64_t v228 = v233;
  uint64_t v210 = v208;
  uint64_t v211 = v232;
  v207[1] = v232;
  *((unsigned char *)v207 + 16) = v205;
  char v212 = v205;
  LODWORD(v229) = v205;
  uint64_t v213 = KeyPath;
  v207[3] = v209;
  v207[4] = v213;
  v207[5] = v206;
  *((unsigned char *)v207 + 48) = v206 ^ 1;
  *(_WORD *)((char *)v207 + 49) = 257;
  v207[7] = v181;
  v207[8] = v182;
  v207[9] = v231;
  v207[10] = v183;
  v207[11] = v224;
  v207[12] = v184;
  uint64_t v223 = v185;
  uint64_t v214 = v230;
  v207[13] = v185;
  v207[14] = v214;
  *((_WORD *)v207 + 60) = v225;
  *((unsigned char *)v207 + 122) = v186;
  sub_100190CC4(v210, v211, v212);
  swift_bridgeObjectRetain();
  swift_retain();
  LOBYTE(v209) = v231;
  sub_10083B2E0(v181, v182, v231);
  sub_10083B350(v181, v182, v209);
  sub_100191924(v233, v232, v229);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10083655C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v40 = a1;
  sub_10017DF08(&qword_100E9ABE8);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = (void *)(v5 - v4);
  uint64_t v7 = sub_10017DF08(qword_100E65268);
  __chkstk_darwin(v7 - 8);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = type metadata accessor for WeatherDayVarianceView();
  sub_100179C0C();
  uint64_t v39 = v12;
  __chkstk_darwin(v13);
  char v37 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  char v38 = (char *)&v37 - v16;
  uint64_t v17 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
  sub_100162E4C();
  __chkstk_darwin(v18);
  sub_1001626E0();
  uint64_t v21 = v20 - v19;
  type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
  sub_100162E4C();
  __chkstk_darwin(v22);
  sub_1001626E0();
  uint64_t v25 = (uint64_t *)(v24 - v23);
  uint64_t v26 = v2 + *(int *)(type metadata accessor for CapsuleView(0) + 20);
  uint64_t v27 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
  sub_10083738C(v26 + *(int *)(v27 + 20), (uint64_t)v25, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v28 = *v25;
    uint64_t v29 = v25[1];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *uint64_t v6 = v29;
    v6[1] = v28;
    swift_storeEnumTagMultiPayload();
    sub_1008373E8((uint64_t)&unk_100E9ABF0);
    sub_10083B3C0();
    return _ConditionalContent<>.init(storage:)();
  }
  else
  {
    sub_100837574((uint64_t)v25, v21, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
    uint64_t v31 = sub_10017DF08(&qword_100E65250);
    Measurement.value.getter();
    Measurement.value.getter();
    sub_10006DF38(v21 + *(int *)(v17 + 24), v10, qword_100E65268);
    if (_s7Weather24LocationCompositionStateOwet_0(v10, 1, v31) == 1)
    {
      sub_100178110(v10, qword_100E65268);
    }
    else
    {
      Measurement.value.getter();
      sub_100162F0C();
      v32();
    }
    uint64_t v33 = swift_bridgeObjectRetain();
    sub_10014EC54(v33);
    uint64_t v34 = v37;
    WeatherDayVarianceView.init(weekMaxTemp:weekMinTemp:dayHighTemp:dayLowTemp:currentTemp:isDaylight:temperatureGradient:)();
    char v36 = v38;
    uint64_t v35 = v39;
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v38, v34, v11);
    (*(void (**)(void *, char *, uint64_t))(v35 + 16))(v6, v36, v11);
    swift_storeEnumTagMultiPayload();
    sub_1008373E8((uint64_t)&unk_100E9ABF0);
    sub_10083B3C0();
    _ConditionalContent<>.init(storage:)();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v11);
    return sub_10083742C(v21, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
  }
}

uint64_t type metadata accessor for ComparisonCapsuleCompactGridView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E9A840);
}

ValueMetadata *type metadata accessor for ComparisonCapsuleStackView()
{
  return &type metadata for ComparisonCapsuleStackView;
}

void *sub_100836A64(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10017DF08(&qword_100E7DDF0);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    char *v10 = *v11;
    uint64_t v12 = *((void *)v11 + 2);
    *((void *)v10 + 1) = *((void *)v11 + 1);
    *((void *)v10 + 2) = v12;
    *(_OWORD *)(v10 + 24) = *(_OWORD *)(v11 + 24);
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100836B60(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E7DDF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100836BE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E7DDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
  uint64_t v11 = *(void *)(v10 + 16);
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  *(void *)(v9 + 16) = v11;
  *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100836C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E7DDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (void *)(a2 + v7);
  *(unsigned char *)uint64_t v8 = *(unsigned char *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 16) = v9[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 24) = v9[3];
  *(void *)(v8 + 32) = v9[4];
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100836D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E7DDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  long long v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(void *)(v9 + 32) = *(void *)(v10 + 32);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  return a1;
}

uint64_t sub_100836E04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E7DDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRelease();
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100836EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100836EDC);
}

uint64_t sub_100836EDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10017DF08(&qword_100E7DDF0);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) != a2) {
    return sub_100163020(*(void *)(a1 + *(int *)(a3 + 20) + 8));
  }

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
}

uint64_t sub_100836F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100836F78);
}

void sub_100836F78()
{
  sub_100150288();
  sub_10017DF08(&qword_100E7DDF0);
  sub_100162F30();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    _s7Weather24LocationCompositionStateOwst_0(v1, v0, v0, v4);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 20) + 8) = (v0 - 1);
  }
}

void sub_100836FFC()
{
  sub_1002167A8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t _s7Weather26ComparisonCapsuleStackViewVwcp_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s7Weather26ComparisonCapsuleStackViewVwca_0(unsigned char *a1, unsigned char *a2)
{
  sub_1001A18D0(a1, a2);
  *(void *)(v3 + 8) = *(void *)(v4 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v3 + 16) = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v3 + 24) = *(void *)(v2 + 24);
  *(void *)(v3 + 32) = *(void *)(v2 + 32);
  *(unsigned char *)(v3 + 40) = *(unsigned char *)(v2 + 40);
  return v3;
}

uint64_t _s7Weather26ComparisonCapsuleStackViewVwta_0(unsigned char *a1, unsigned char *a2)
{
  sub_1001A18D0(a1, a2);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v3 + 8) = *(_OWORD *)(v2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v3 + 24) = *(_OWORD *)(v2 + 24);
  *(unsigned char *)(v3 + 40) = *(unsigned char *)(v2 + 40);
  return v3;
}

uint64_t _s7Weather26ComparisonCapsuleStackViewVwet_0(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 41))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1008371EC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ComparisonCapsuleGridView()
{
  return &type metadata for ComparisonCapsuleGridView;
}

unint64_t sub_10083724C()
{
  unint64_t result = qword_100E9A880;
  if (!qword_100E9A880)
  {
    sub_10018C6DC(&qword_100E9A888);
    sub_10024D5E4((uint64_t)&unk_100E9A7B8);
    sub_10024D5E4((uint64_t)&unk_100E9A7C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A880);
  }
  return result;
}

uint64_t sub_10083730C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100837328()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100837344()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100837364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100834A0C(a1, (long long *)(v2 + 16), a2);
}

uint64_t type metadata accessor for ComparisonCapsuleStackRowView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E9AA48);
}

uint64_t sub_10083738C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

unint64_t sub_1008373E8(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_10083742C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_100837480()
{
  type metadata accessor for ComparisonCapsuleCompactGridView(0);
  sub_10017DF08(&qword_100E7DDF0);
  sub_100162E4C();
  sub_100162F0C();
  v0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100837574(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_1008375C8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ComparisonCapsuleCompactGridView(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1008329CC(a1, v6, a2);
}

uint64_t sub_100837648()
{
  return sub_100834534();
}

unint64_t sub_100837650()
{
  unint64_t result = qword_100E9A920;
  if (!qword_100E9A920)
  {
    sub_10018C6DC(&qword_100E9A910);
    sub_1008376C4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A920);
  }
  return result;
}

unint64_t sub_1008376C4()
{
  unint64_t result = qword_100E9A928;
  if (!qword_100E9A928)
  {
    sub_10018C6DC(&qword_100E9A930);
    sub_1008373E8((uint64_t)&qword_100E7B5E0);
    sub_1008373E8((uint64_t)&qword_100EAACA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A928);
  }
  return result;
}

uint64_t type metadata accessor for CapsuleView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E9AAE0);
}

unint64_t sub_1008377D0()
{
  unint64_t result = qword_100E9A9A0;
  if (!qword_100E9A9A0)
  {
    sub_10018C6DC(&qword_100E9A998);
    sub_100837870();
    sub_10024D5E4((uint64_t)&qword_100E76A08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A9A0);
  }
  return result;
}

unint64_t sub_100837870()
{
  unint64_t result = qword_100E9A9A8;
  if (!qword_100E9A9A8)
  {
    sub_10018C6DC(&qword_100E9A9B0);
    sub_10083B1D4((uint64_t)&qword_100E6DE20);
    sub_10024D5E4((uint64_t)&qword_100E65218);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A9A8);
  }
  return result;
}

uint64_t sub_100837934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100830090(a1, v2 + 16, a2);
}

uint64_t sub_10083793C()
{
  return sub_1008307C0();
}

uint64_t type metadata accessor for ComparisonCapsuleRowView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E9AB70);
}

unint64_t sub_10083796C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v21 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_100195B7C(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    uint64_t v9 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v9;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    uint64_t v32 = a3;
    uint64_t v10 = *(int *)(a3 + 24);
    long long v11 = (void *)(a1 + v10);
    uint64_t v12 = a2 + v10;
    uint64_t v13 = *(void *)(a2 + v10 + 8);
    void *v11 = *(void *)(a2 + v10);
    v11[1] = v13;
    uint64_t v14 = *(void *)(a2 + v10 + 24);
    v11[2] = *(void *)(a2 + v10 + 16);
    uint64_t v11[3] = v14;
    uint64_t v15 = *(void *)(a2 + v10 + 40);
    v11[4] = *(void *)(a2 + v10 + 32);
    v11[5] = v15;
    uint64_t v30 = a1 + v10;
    uint64_t v31 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
    uint64_t v16 = *(int *)(v31 + 20);
    uint64_t v17 = (char *)v11 + v16;
    uint64_t v18 = v12 + v16;
    type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      uint64_t v19 = *(void *)(v18 + 24);
      *((void *)v17 + 2) = *(void *)(v18 + 16);
      *((void *)v17 + 3) = v19;
      uint64_t v20 = *(void *)(v18 + 40);
      *((void *)v17 + 4) = *(void *)(v18 + 32);
      *((void *)v17 + 5) = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v22 = sub_10017DF08(&qword_100E65250);
      uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16);
      v23(v17, v18, v22);
      uint64_t v24 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
      v23(&v17[*(int *)(v24 + 20)], v18 + *(int *)(v24 + 20), v22);
      uint64_t v25 = *(int *)(v24 + 24);
      uint64_t v26 = &v17[v25];
      uint64_t v27 = (const void *)(v18 + v25);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v22))
      {
        uint64_t v28 = sub_10017DF08(qword_100E65268);
        memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        v23(v26, (uint64_t)v27, v22);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v22);
      }
    }
    swift_storeEnumTagMultiPayload();
    *(unsigned char *)(v30 + *(int *)(v31 + 24)) = *(unsigned char *)(v12 + *(int *)(v31 + 24));
    *(unsigned char *)(a1 + *(int *)(v32 + 28)) = *(unsigned char *)(a2 + *(int *)(v32 + 28));
  }
  return a1;
}

uint64_t sub_100837C24(uint64_t a1, uint64_t a2)
{
  sub_10018F6D8(*(void *)a1, *(unsigned char *)(a1 + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 + *(int *)(type metadata accessor for ComparisonCapsuleViewModel.Row(0) + 20);
  type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = sub_10017DF08(&qword_100E65250);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    ((void (*)(void *__return_ptr, uint64_t, uint64_t))v10)((void *)(v7 - 8), v5, v7);
    uint64_t v8 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
    v10(v5 + *(int *)(v8 + 20), v7);
    uint64_t v9 = v5 + *(int *)(v8 + 24);
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v9, 1, v7);
    if (!result)
    {
      return ((uint64_t (*)(uint64_t, uint64_t))v10)(v9, v7);
    }
  }
  return result;
}

uint64_t sub_100837DB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v30 = a3;
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v28 = a2;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = *(void *)(a2 + v9 + 8);
  void *v10 = *(void *)(a2 + v9);
  v10[1] = v12;
  uint64_t v13 = *(void *)(a2 + v9 + 24);
  v10[2] = *(void *)(a2 + v9 + 16);
  v10[3] = v13;
  uint64_t v14 = *(void *)(a2 + v9 + 40);
  v10[4] = *(void *)(a2 + v9 + 32);
  v10[5] = v14;
  uint64_t v29 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
  uint64_t v15 = *(int *)(v29 + 20);
  uint64_t v16 = (char *)v10 + v15;
  uint64_t v17 = v11 + v15;
  type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    uint64_t v18 = *(void *)(v17 + 24);
    *((void *)v16 + 2) = *(void *)(v17 + 16);
    *((void *)v16 + 3) = v18;
    uint64_t v19 = *(void *)(v17 + 40);
    *((void *)v16 + 4) = *(void *)(v17 + 32);
    *((void *)v16 + 5) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v20 = sub_10017DF08(&qword_100E65250);
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
    v21(v16, v17, v20);
    uint64_t v22 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
    v21(&v16[*(int *)(v22 + 20)], v17 + *(int *)(v22 + 20), v20);
    uint64_t v23 = *(int *)(v22 + 24);
    uint64_t v24 = &v16[v23];
    uint64_t v25 = (const void *)(v17 + v23);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v20))
    {
      uint64_t v26 = sub_10017DF08(qword_100E65268);
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      v21(v24, (uint64_t)v25, v20);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v20);
    }
  }
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)v10 + *(int *)(v29 + 24)) = *(unsigned char *)(v11 + *(int *)(v29 + 24));
  *(unsigned char *)(a1 + *(int *)(v30 + 28)) = *(unsigned char *)(v28 + *(int *)(v30 + 28));
  return a1;
}

uint64_t sub_100838024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  void *v11 = *(void *)(a2 + v10);
  v11[1] = *(void *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[2] = v12[2];
  uint64_t v11[3] = v12[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[4] = v12[4];
  v11[5] = v12[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
  uint64_t v14 = v13;
  if (a1 != a2)
  {
    uint64_t v15 = *(int *)(v13 + 20);
    uint64_t v16 = (char *)v11 + v15;
    uint64_t v17 = (char *)v12 + v15;
    sub_10083742C((uint64_t)v11 + v15, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
    type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v16 = *(void *)v17;
      *((void *)v16 + 1) = *((void *)v17 + 1);
      *((void *)v16 + 2) = *((void *)v17 + 2);
      *((void *)v16 + 3) = *((void *)v17 + 3);
      *((void *)v16 + 4) = *((void *)v17 + 4);
      *((void *)v16 + 5) = *((void *)v17 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v26 = a3;
      uint64_t v18 = sub_10017DF08(&qword_100E65250);
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
      v19(v16, v17, v18);
      uint64_t v20 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
      v19(&v16[*(int *)(v20 + 20)], &v17[*(int *)(v20 + 20)], v18);
      uint64_t v21 = *(int *)(v20 + 24);
      uint64_t v22 = &v16[v21];
      uint64_t v23 = &v17[v21];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v18))
      {
        uint64_t v24 = sub_10017DF08(qword_100E65268);
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        v19(v22, v23, v18);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v18);
      }
      a3 = v26;
    }
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)v11 + *(int *)(v14 + 24)) = *((unsigned char *)v12 + *(int *)(v14 + 24));
  *(unsigned char *)(a1 + *(int *)(a3 + 28)) = *(unsigned char *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_100838314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(a2 + v7 + 32);
  long long v11 = *(_OWORD *)(a2 + v7);
  v8[1] = *(_OWORD *)(a2 + v7 + 16);
  v8[2] = v10;
  *uint64_t v8 = v11;
  uint64_t v12 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
  uint64_t v13 = *(int *)(v12 + 20);
  uint64_t v14 = (char *)v8 + v13;
  uint64_t v15 = (char *)(v9 + v13);
  uint64_t v16 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v25 = v12;
    uint64_t v26 = v3;
    uint64_t v17 = sub_10017DF08(&qword_100E65250);
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32);
    v18(v14, v15, v17);
    uint64_t v24 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
    v18(&v14[*(int *)(v24 + 20)], &v15[*(int *)(v24 + 20)], v17);
    uint64_t v19 = *(int *)(v24 + 24);
    uint64_t v20 = &v14[v19];
    uint64_t v21 = &v15[v19];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v17))
    {
      uint64_t v22 = sub_10017DF08(qword_100E65268);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      v18(v20, v21, v17);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v17);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = v25;
    uint64_t v3 = v26;
  }
  *((unsigned char *)v8 + *(int *)(v12 + 24)) = *(unsigned char *)(v9 + *(int *)(v12 + 24));
  *(unsigned char *)(a1 + *(int *)(v3 + 28)) = *(unsigned char *)(a2 + *(int *)(v3 + 28));
  return a1;
}

uint64_t sub_100838524(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = a2[4];
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
  uint64_t v10 = *(int *)(a3 + 24);
  long long v11 = (void *)(a1 + v10);
  uint64_t v12 = (uint64_t *)((char *)a2 + v10);
  uint64_t v13 = *(uint64_t *)((char *)a2 + v10 + 8);
  void *v11 = *(uint64_t *)((char *)a2 + v10);
  v11[1] = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = v12[3];
  v11[2] = v12[2];
  uint64_t v11[3] = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = v12[5];
  v11[4] = v12[4];
  v11[5] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
  uint64_t v17 = v16;
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v18 = *(int *)(v16 + 20);
    uint64_t v19 = (char *)v11 + v18;
    uint64_t v20 = (char *)v12 + v18;
    sub_10083742C((uint64_t)v11 + v18, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
    uint64_t v21 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      uint64_t v30 = v17;
      uint64_t v31 = a3;
      uint64_t v22 = sub_10017DF08(&qword_100E65250);
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32);
      v23(v19, v20, v22);
      uint64_t v24 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
      v23(&v19[*(int *)(v24 + 20)], &v20[*(int *)(v24 + 20)], v22);
      uint64_t v25 = *(int *)(v24 + 24);
      uint64_t v26 = &v19[v25];
      uint64_t v27 = &v20[v25];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v22))
      {
        uint64_t v28 = sub_10017DF08(qword_100E65268);
        memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        v23(v26, v27, v22);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v22);
      }
      a3 = v31;
      swift_storeEnumTagMultiPayload();
      uint64_t v17 = v30;
    }
  }
  *((unsigned char *)v11 + *(int *)(v17 + 24)) = *((unsigned char *)v12 + *(int *)(v17 + 24));
  *(unsigned char *)(a1 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1008387B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1008387C4);
}

uint64_t sub_1008387C4()
{
  sub_100181828();
  if (v3) {
    return sub_100163020(*(void *)(v0 + 24));
  }
  uint64_t v5 = v2;
  uint64_t v6 = v1;
  uint64_t v7 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
  uint64_t v8 = v0 + *(int *)(v5 + 24);

  return _s7Weather24LocationCompositionStateOwet_0(v8, v6, v7);
}

uint64_t sub_100838838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10083884C);
}

void sub_10083884C()
{
  sub_100163298();
  if (v3)
  {
    *(void *)(v1 + 24) = (v0 - 1);
  }
  else
  {
    uint64_t v4 = v2;
    uint64_t v5 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
    uint64_t v6 = v1 + *(int *)(v4 + 24);
    _s7Weather24LocationCompositionStateOwst_0(v6, v0, v0, v5);
  }
}

uint64_t sub_1008388C0()
{
  uint64_t result = type metadata accessor for ComparisonCapsuleViewModel.Row(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_100838968(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  char v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *char v3 = *a2;
    char v3 = (void *)(v18 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = *(uint64_t *)((char *)a2 + v6 + 8);
    *uint64_t v7 = *(uint64_t *)((char *)a2 + v6);
    v7[1] = v9;
    uint64_t v10 = *(uint64_t *)((char *)a2 + v6 + 24);
    v7[2] = *(uint64_t *)((char *)a2 + v6 + 16);
    v7[3] = v10;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v6 + 40);
    v7[4] = *(uint64_t *)((char *)a2 + v6 + 32);
    v7[5] = v11;
    uint64_t v27 = a1 + v6;
    uint64_t v28 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
    uint64_t v12 = *(int *)(v28 + 20);
    uint64_t v13 = (char *)v7 + v12;
    uint64_t v14 = v8 + v12;
    type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      uint64_t v15 = *(void *)(v14 + 24);
      *((void *)v13 + 2) = *(void *)(v14 + 16);
      *((void *)v13 + 3) = v15;
      uint64_t v16 = *(void *)(v14 + 32);
      uint64_t v17 = *(void *)(v14 + 40);
      *((void *)v13 + 4) = v16;
      *((void *)v13 + 5) = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v19 = sub_10017DF08(&qword_100E65250);
      uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
      v20(v13, v14, v19);
      uint64_t v21 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
      v20(&v13[*(int *)(v21 + 20)], v14 + *(int *)(v21 + 20), v19);
      uint64_t v22 = *(int *)(v21 + 24);
      uint64_t v23 = &v13[v22];
      uint64_t v24 = (const void *)(v14 + v22);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v19))
      {
        uint64_t v25 = sub_10017DF08(qword_100E65268);
        memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        v20(v23, (uint64_t)v24, v19);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v19);
      }
    }
    swift_storeEnumTagMultiPayload();
    *(unsigned char *)(v27 + *(int *)(v28 + 24)) = *(unsigned char *)(v8 + *(int *)(v28 + 24));
  }
  return v3;
}

uint64_t sub_100838BD4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 + *(int *)(type metadata accessor for ComparisonCapsuleViewModel.Row(0) + 20);
  type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = sub_10017DF08(&qword_100E65250);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    ((void (*)(void *__return_ptr, uint64_t, uint64_t))v10)((void *)(v7 - 8), v5, v7);
    uint64_t v8 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
    v10(v5 + *(int *)(v8 + 20), v7);
    uint64_t v9 = v5 + *(int *)(v8 + 24);
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v9, 1, v7);
    if (!result)
    {
      return ((uint64_t (*)(uint64_t, uint64_t))v10)(v9, v7);
    }
  }
  return result;
}

uint64_t sub_100838D58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = a2 + v4;
  uint64_t v7 = *(void *)(a2 + v4 + 8);
  *uint64_t v5 = *(void *)(a2 + v4);
  v5[1] = v7;
  uint64_t v8 = *(void *)(a2 + v4 + 24);
  v5[2] = *(void *)(a2 + v4 + 16);
  v5[3] = v8;
  uint64_t v9 = *(void *)(a2 + v4 + 40);
  v5[4] = *(void *)(a2 + v4 + 32);
  v5[5] = v9;
  uint64_t v25 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
  uint64_t v10 = *(int *)(v25 + 20);
  uint64_t v11 = (char *)v5 + v10;
  uint64_t v12 = v6 + v10;
  type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    uint64_t v13 = *(void *)(v12 + 24);
    *((void *)v11 + 2) = *(void *)(v12 + 16);
    *((void *)v11 + 3) = v13;
    uint64_t v14 = *(void *)(v12 + 32);
    uint64_t v15 = *(void *)(v12 + 40);
    *((void *)v11 + 4) = v14;
    *((void *)v11 + 5) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v16 = sub_10017DF08(&qword_100E65250);
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
    v17(v11, v12, v16);
    uint64_t v18 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
    v17(&v11[*(int *)(v18 + 20)], v12 + *(int *)(v18 + 20), v16);
    uint64_t v19 = *(int *)(v18 + 24);
    uint64_t v20 = &v11[v19];
    uint64_t v21 = (const void *)(v12 + v19);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v16))
    {
      uint64_t v22 = sub_10017DF08(qword_100E65268);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      v17(v20, (uint64_t)v21, v16);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v16);
    }
  }
  swift_storeEnumTagMultiPayload();
  uint64_t result = a1;
  *((unsigned char *)v5 + *(int *)(v25 + 24)) = *(unsigned char *)(v6 + *(int *)(v25 + 24));
  return result;
}

uint64_t sub_100838F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  *uint64_t v7 = *(void *)(a2 + v6);
  v7[1] = *(void *)(a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[2] = v8[2];
  v7[3] = v8[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[4] = v8[4];
  v7[5] = v8[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
  uint64_t v10 = v9;
  if (a1 != a2)
  {
    uint64_t v11 = *(int *)(v9 + 20);
    uint64_t v12 = (char *)v7 + v11;
    uint64_t v13 = (char *)v8 + v11;
    sub_10083742C((uint64_t)v7 + v11, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
    type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v12 = *(void *)v13;
      *((void *)v12 + 1) = *((void *)v13 + 1);
      *((void *)v12 + 2) = *((void *)v13 + 2);
      *((void *)v12 + 3) = *((void *)v13 + 3);
      *((void *)v12 + 4) = *((void *)v13 + 4);
      *((void *)v12 + 5) = *((void *)v13 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v14 = sub_10017DF08(&qword_100E65250);
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      v15(v12, v13, v14);
      uint64_t v16 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
      v15(&v12[*(int *)(v16 + 20)], &v13[*(int *)(v16 + 20)], v14);
      uint64_t v17 = *(int *)(v16 + 24);
      uint64_t v18 = &v12[v17];
      uint64_t v19 = &v13[v17];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v14))
      {
        uint64_t v20 = sub_10017DF08(qword_100E65268);
        memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        v15(v18, v19, v14);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v14);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)v7 + *(int *)(v10 + 24)) = *((unsigned char *)v8 + *(int *)(v10 + 24));
  return a1;
}

uint64_t sub_100839224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (_OWORD *)(a1 + v5);
  uint64_t v7 = a2 + v5;
  long long v8 = *(_OWORD *)(a2 + v5 + 32);
  long long v9 = *(_OWORD *)(a2 + v5);
  v6[1] = *(_OWORD *)(a2 + v5 + 16);
  v6[2] = v8;
  *uint64_t v6 = v9;
  uint64_t v10 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = (char *)v6 + v11;
  uint64_t v13 = (char *)(v7 + v11);
  uint64_t v14 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v15 = sub_10017DF08(&qword_100E65250);
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
    v16(v12, v13, v15);
    uint64_t v17 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
    v16(&v12[*(int *)(v17 + 20)], &v13[*(int *)(v17 + 20)], v15);
    uint64_t v18 = *(int *)(v17 + 24);
    uint64_t v19 = &v12[v18];
    uint64_t v20 = &v13[v18];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v15))
    {
      uint64_t v21 = sub_10017DF08(qword_100E65268);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      v16(v19, v20, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v15);
    }
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)v6 + *(int *)(v10 + 24)) = *(unsigned char *)(v7 + *(int *)(v10 + 24));
  return a1;
}

uint64_t sub_100839408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)(a1 + v6);
  long long v8 = (void *)(a2 + v6);
  uint64_t v9 = *(void *)(a2 + v6 + 8);
  *uint64_t v7 = *(void *)(a2 + v6);
  v7[1] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = v8[3];
  v7[2] = v8[2];
  v7[3] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = v8[5];
  v7[4] = v8[4];
  v7[5] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
  uint64_t v13 = v12;
  if (a1 != a2)
  {
    uint64_t v14 = *(int *)(v12 + 20);
    uint64_t v15 = (char *)v7 + v14;
    uint64_t v16 = (char *)v8 + v14;
    sub_10083742C((uint64_t)v7 + v14, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
    uint64_t v17 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v18 = sub_10017DF08(&qword_100E65250);
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32);
      v19(v15, v16, v18);
      uint64_t v20 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
      v19(&v15[*(int *)(v20 + 20)], &v16[*(int *)(v20 + 20)], v18);
      uint64_t v21 = *(int *)(v20 + 24);
      uint64_t v22 = &v15[v21];
      uint64_t v23 = &v16[v21];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v18))
      {
        uint64_t v24 = sub_10017DF08(qword_100E65268);
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        v19(v22, v23, v18);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v18);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  *((unsigned char *)v7 + *(int *)(v13 + 24)) = *((unsigned char *)v8 + *(int *)(v13 + 24));
  return a1;
}

uint64_t sub_100839658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10083966C);
}

uint64_t sub_10083966C()
{
  sub_100181828();
  if (v1) {
    return sub_100163020(*(void *)(v0 + 8));
  }
  type metadata accessor for ComparisonCapsuleViewModel.Row(0);
  uint64_t v3 = sub_10019B378();

  return _s7Weather24LocationCompositionStateOwet_0(v3, v4, v5);
}

uint64_t sub_1008396D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1008396E8);
}

void sub_1008396E8()
{
  sub_100163298();
  if (v2)
  {
    *(void *)(v1 + 8) = (v0 - 1);
  }
  else
  {
    type metadata accessor for ComparisonCapsuleViewModel.Row(0);
    uint64_t v3 = sub_10017E9CC();
    _s7Weather24LocationCompositionStateOwst_0(v3, v4, v5, v6);
  }
}

uint64_t sub_10083974C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100839764(a1, a2, a3, type metadata accessor for ComparisonCapsuleViewModel.Row);
}

uint64_t sub_100839764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100839800(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
      {
        uint64_t v8 = sub_10017DF08(&qword_100E65ED8);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = a3[5];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_10017DF08(&qword_100E7DDF0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    uint64_t v14 = a3[6];
    uint64_t v15 = a3[7];
    char v38 = a3;
    uint64_t v39 = a2;
    uint64_t v16 = (char *)a1 + v14;
    uint64_t v17 = (char *)a2 + v14;
    char *v16 = *v17;
    uint64_t v18 = *((void *)v17 + 2);
    *((void *)v16 + 1) = *((void *)v17 + 1);
    *((void *)v16 + 2) = v18;
    *(_OWORD *)(v16 + 24) = *(_OWORD *)(v17 + 24);
    uint64_t v19 = (uint64_t *)((char *)a1 + v15);
    uint64_t v20 = (uint64_t *)((char *)a2 + v15);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = v20[3];
    v19[2] = v20[2];
    v19[3] = v22;
    uint64_t v23 = v20[5];
    v19[4] = v20[4];
    v19[5] = v23;
    uint64_t v37 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
    uint64_t v24 = *(int *)(v37 + 20);
    uint64_t v25 = (char *)v19 + v24;
    uint64_t v26 = (char *)v20 + v24;
    type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
      uint64_t v27 = *((void *)v26 + 3);
      *((void *)v25 + 2) = *((void *)v26 + 2);
      *((void *)v25 + 3) = v27;
      uint64_t v28 = *((void *)v26 + 5);
      *((void *)v25 + 4) = *((void *)v26 + 4);
      *((void *)v25 + 5) = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v29 = sub_10017DF08(&qword_100E65250);
      uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
      v30(v25, v26, v29);
      uint64_t v31 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
      v30(&v25[*(int *)(v31 + 20)], &v26[*(int *)(v31 + 20)], v29);
      uint64_t v32 = *(int *)(v31 + 24);
      uint64_t v33 = &v25[v32];
      uint64_t v34 = &v26[v32];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v29))
      {
        uint64_t v35 = sub_10017DF08(qword_100E65268);
        memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        v30(v33, v34, v29);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v29);
      }
    }
    swift_storeEnumTagMultiPayload();
    *((unsigned char *)v19 + *(int *)(v37 + 24)) = *((unsigned char *)v20 + *(int *)(v37 + 24));
    *((unsigned char *)a1 + v38[8]) = *((unsigned char *)v39 + v38[8]);
  }
  return a1;
}

uint64_t sub_100839BCC(uint64_t a1, uint64_t a2)
{
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_10017DF08(&qword_100E7DDF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v7 + *(int *)(type metadata accessor for ComparisonCapsuleViewModel.Row(0) + 20);
  type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = sub_10017DF08(&qword_100E65250);
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    ((void (*)(void *__return_ptr, uint64_t, uint64_t))v13)((void *)(v10 - 8), v8, v10);
    uint64_t v11 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
    v13(v8 + *(int *)(v11 + 20), v10);
    uint64_t v12 = v8 + *(int *)(v11 + 24);
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v12, 1, v10);
    if (!result)
    {
      return ((uint64_t (*)(uint64_t, uint64_t))v13)(v12, v10);
    }
  }
  return result;
}

void *sub_100839E18(void *a1, void *a2, int *a3)
{
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
    {
      uint64_t v7 = sub_10017DF08(&qword_100E65ED8);
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
    }
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_10017DF08(&qword_100E7DDF0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  char v36 = a3;
  uint64_t v37 = a2;
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  *uint64_t v14 = *v15;
  uint64_t v16 = *((void *)v15 + 2);
  *((void *)v14 + 1) = *((void *)v15 + 1);
  *((void *)v14 + 2) = v16;
  *(_OWORD *)(v14 + 24) = *(_OWORD *)(v15 + 24);
  uint64_t v17 = (void *)((char *)a1 + v13);
  uint64_t v18 = (void *)((char *)a2 + v13);
  uint64_t v19 = v18[1];
  void *v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = v18[3];
  v17[2] = v18[2];
  v17[3] = v20;
  uint64_t v21 = v18[5];
  v17[4] = v18[4];
  v17[5] = v21;
  uint64_t v35 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
  uint64_t v22 = *(int *)(v35 + 20);
  uint64_t v23 = (char *)v17 + v22;
  uint64_t v24 = (char *)v18 + v22;
  type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    uint64_t v25 = *((void *)v24 + 3);
    *((void *)v23 + 2) = *((void *)v24 + 2);
    *((void *)v23 + 3) = v25;
    uint64_t v26 = *((void *)v24 + 5);
    *((void *)v23 + 4) = *((void *)v24 + 4);
    *((void *)v23 + 5) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v27 = sub_10017DF08(&qword_100E65250);
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
    v28(v23, v24, v27);
    uint64_t v29 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
    v28(&v23[*(int *)(v29 + 20)], &v24[*(int *)(v29 + 20)], v27);
    uint64_t v30 = *(int *)(v29 + 24);
    uint64_t v31 = &v23[v30];
    uint64_t v32 = &v24[v30];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v27))
    {
      uint64_t v33 = sub_10017DF08(qword_100E65268);
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      v28(v31, v32, v27);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v27);
    }
  }
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)v17 + *(int *)(v35 + 24)) = *((unsigned char *)v18 + *(int *)(v35 + 24));
  *((unsigned char *)a1 + v36[8]) = *((unsigned char *)v37 + v36[8]);
  return a1;
}

void *sub_10083A198(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100178110((uint64_t)a1, (uint64_t *)&unk_100EAA560);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
      {
        uint64_t v7 = sub_10017DF08(&qword_100E65ED8);
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_10017DF08(&qword_100E7DDF0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (void *)((char *)a2 + v12);
  *uint64_t v13 = *((unsigned char *)a2 + v12);
  *((void *)v13 + 1) = *(void *)((char *)a2 + v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v13 + 2) = v14[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v13 + 3) = v14[3];
  *((void *)v13 + 4) = v14[4];
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  void *v16 = *(void *)((char *)a2 + v15);
  v16[1] = *(void *)((char *)a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[2] = v17[2];
  v16[3] = v17[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[4] = v17[4];
  v16[5] = v17[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
  uint64_t v19 = v18;
  if (a1 != a2)
  {
    uint64_t v20 = *(int *)(v18 + 20);
    uint64_t v21 = (char *)v16 + v20;
    uint64_t v22 = (char *)v17 + v20;
    sub_10083742C((uint64_t)v16 + v20, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
    type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v21 = *(void *)v22;
      *((void *)v21 + 1) = *((void *)v22 + 1);
      *((void *)v21 + 2) = *((void *)v22 + 2);
      *((void *)v21 + 3) = *((void *)v22 + 3);
      *((void *)v21 + 4) = *((void *)v22 + 4);
      *((void *)v21 + 5) = *((void *)v22 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v31 = v19;
      uint64_t v32 = a3;
      uint64_t v23 = sub_10017DF08(&qword_100E65250);
      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
      v24(v21, v22, v23);
      uint64_t v25 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
      v24(&v21[*(int *)(v25 + 20)], &v22[*(int *)(v25 + 20)], v23);
      uint64_t v26 = *(int *)(v25 + 24);
      uint64_t v27 = &v21[v26];
      uint64_t v28 = &v22[v26];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v23))
      {
        uint64_t v29 = sub_10017DF08(qword_100E65268);
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        v24(v27, v28, v23);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v23);
      }
      uint64_t v19 = v31;
      a3 = v32;
    }
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)v16 + *(int *)(v19 + 24)) = *((unsigned char *)v17 + *(int *)(v19 + 24));
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

char *sub_10083A5B8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_10017DF08(&qword_100E65ED8);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_10017DF08(&qword_100E7DDF0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v15 = &a1[v13];
  uint64_t v16 = &a2[v13];
  long long v17 = *(_OWORD *)v16;
  long long v18 = *((_OWORD *)v16 + 1);
  *((void *)v15 + 4) = *((void *)v16 + 4);
  *(_OWORD *)uint64_t v15 = v17;
  *((_OWORD *)v15 + 1) = v18;
  uint64_t v19 = &a1[v14];
  uint64_t v20 = &a2[v14];
  long long v21 = *(_OWORD *)&a2[v14 + 16];
  *(_OWORD *)uint64_t v19 = *(_OWORD *)&a2[v14];
  *((_OWORD *)v19 + 1) = v21;
  *((_OWORD *)v19 + 2) = *(_OWORD *)&a2[v14 + 32];
  uint64_t v22 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
  uint64_t v23 = *(int *)(v22 + 20);
  uint64_t v24 = &v19[v23];
  uint64_t v25 = &v20[v23];
  uint64_t v26 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    uint64_t v35 = v22;
    char v36 = a3;
    uint64_t v27 = sub_10017DF08(&qword_100E65250);
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32);
    v28(v24, v25, v27);
    uint64_t v29 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
    v28(&v24[*(int *)(v29 + 20)], &v25[*(int *)(v29 + 20)], v27);
    uint64_t v30 = *(int *)(v29 + 24);
    uint64_t v31 = &v24[v30];
    uint64_t v32 = &v25[v30];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v27))
    {
      uint64_t v33 = sub_10017DF08(qword_100E65268);
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      v28(v31, v32, v27);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v27);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = v35;
    a3 = v36;
  }
  v19[*(int *)(v22 + 24)] = v20[*(int *)(v22 + 24)];
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

char *sub_10083A904(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100178110((uint64_t)a1, (uint64_t *)&unk_100EAA560);
    uint64_t v6 = sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
      {
        uint64_t v8 = sub_10017DF08(&qword_100E65ED8);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_10017DF08(&qword_100E7DDF0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  *uint64_t v14 = a2[v13];
  *((void *)v14 + 1) = *(void *)&a2[v13 + 8];
  swift_bridgeObjectRelease();
  *((void *)v14 + 2) = *((void *)v15 + 2);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v14 + 24) = *(_OWORD *)(v15 + 24);
  uint64_t v16 = a3[7];
  long long v17 = &a1[v16];
  long long v18 = &a2[v16];
  uint64_t v19 = *(void *)&a2[v16 + 8];
  *(void *)long long v17 = *(void *)&a2[v16];
  *((void *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *((void *)v18 + 3);
  *((void *)v17 + 2) = *((void *)v18 + 2);
  *((void *)v17 + 3) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *((void *)v18 + 5);
  *((void *)v17 + 4) = *((void *)v18 + 4);
  *((void *)v17 + 5) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
  uint64_t v23 = v22;
  if (a1 != a2)
  {
    uint64_t v24 = *(int *)(v22 + 20);
    uint64_t v25 = &v17[v24];
    uint64_t v26 = &v18[v24];
    sub_10083742C((uint64_t)&v17[v24], (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
    uint64_t v27 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      uint64_t v36 = v23;
      uint64_t v37 = a3;
      uint64_t v28 = sub_10017DF08(&qword_100E65250);
      uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32);
      v29(v25, v26, v28);
      uint64_t v30 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
      v29(&v25[*(int *)(v30 + 20)], &v26[*(int *)(v30 + 20)], v28);
      uint64_t v31 = *(int *)(v30 + 24);
      uint64_t v32 = &v25[v31];
      uint64_t v33 = &v26[v31];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v28))
      {
        uint64_t v34 = sub_10017DF08(qword_100E65268);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        v29(v32, v33, v28);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v28);
      }
      a3 = v37;
      swift_storeEnumTagMultiPayload();
      uint64_t v23 = v36;
    }
  }
  v17[*(int *)(v23 + 24)] = v18[*(int *)(v23 + 24)];
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

uint64_t sub_10083ACD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10083ACE8);
}

uint64_t sub_10083ACE8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_10017DF08((uint64_t *)&unk_100EAA540);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    sub_10017DF08(&qword_100E7DDF0);
    sub_100162F30();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = a3[5];
    }
    else
    {
      if (a2 == 0x7FFFFFFF) {
        return sub_100163020(*(void *)(a1 + a3[6] + 8));
      }
      uint64_t v8 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
      uint64_t v12 = a3[7];
    }
    uint64_t v9 = a1 + v12;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_10083ADBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10083ADD0);
}

void sub_10083ADD0()
{
  sub_100150288();
  sub_10017DF08((uint64_t *)&unk_100EAA540);
  sub_100162F30();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v1;
  }
  else
  {
    sub_10017DF08(&qword_100E7DDF0);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == v3)
    {
      uint64_t v6 = v8;
      uint64_t v10 = v2[5];
    }
    else
    {
      if (v3 == 0x7FFFFFFF)
      {
        *(void *)(v1 + v2[6] + 8) = (v0 - 1);
        return;
      }
      uint64_t v6 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
      uint64_t v10 = v2[7];
    }
    uint64_t v7 = v1 + v10;
  }

  _s7Weather24LocationCompositionStateOwst_0(v7, v0, v0, v6);
}

void sub_10083AEA0()
{
  sub_1002308A0();
  if (v0 <= 0x3F)
  {
    sub_1002167A8();
    if (v1 <= 0x3F)
    {
      type metadata accessor for ComparisonCapsuleViewModel.Row(319);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

unint64_t sub_10083AFB4()
{
  return sub_10024D5E4((uint64_t)&unk_100E9ABB8);
}

uint64_t sub_10083AFF0(uint64_t a1)
{
  return sub_10083B018(a1, &qword_100E9A8F0, (uint64_t)&unk_100E9A918);
}

uint64_t sub_10083B004(uint64_t a1)
{
  return sub_10083B018(a1, &qword_100E9A9C0, (uint64_t)&unk_100E9A9E0);
}

uint64_t sub_10083B018(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10083B0B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10083B0D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10083B0F0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10083B114()
{
  unint64_t result = qword_100E9ABD0;
  if (!qword_100E9ABD0)
  {
    sub_10018C6DC(&qword_100E9ABC8);
    sub_10083B1D4((uint64_t)&qword_100E7BB20);
    sub_10024D5E4((uint64_t)&qword_100E6DE30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9ABD0);
  }
  return result;
}

unint64_t sub_10083B1D4(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    sub_10018C6DC(v3);
    sub_10024D5E4(v5);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_10083B26C()
{
  unint64_t result = qword_100E9ABE0;
  if (!qword_100E9ABE0)
  {
    sub_10018C6DC(&qword_100E9ABD8);
    sub_10083B114();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9ABE0);
  }
  return result;
}

uint64_t sub_10083B2E0(uint64_t a1, uint64_t a2, char a3)
{
  return sub_10083B2F4(a1, a2, a3);
}

uint64_t sub_10083B2F4(uint64_t a1, uint64_t a2, char a3)
{
  sub_100190CC4(a1, a2, a3 & 1);
  swift_bridgeObjectRetain();
  swift_retain();

  return swift_retain();
}

uint64_t sub_10083B350(uint64_t a1, uint64_t a2, char a3)
{
  return sub_10083B364(a1, a2, a3);
}

uint64_t sub_10083B364(uint64_t a1, uint64_t a2, char a3)
{
  sub_100191924(a1, a2, a3 & 1);
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

unint64_t sub_10083B3C0()
{
  unint64_t result = qword_100E9ABF8;
  if (!qword_100E9ABF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9ABF8);
  }
  return result;
}

uint64_t sub_10083B40C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10083B45C(uint64_t a1)
{
  return a1;
}

unint64_t sub_10083B4AC()
{
  unint64_t result = qword_100E9AC58;
  if (!qword_100E9AC58)
  {
    sub_10018C6DC(&qword_100E9AC30);
    sub_10083B540((uint64_t)&unk_100E9AC60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9AC58);
  }
  return result;
}

unint64_t sub_10083B540(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    sub_10018C6DC(v3);
    sub_1008373E8((uint64_t)&unk_100E9AC50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_10083B5E0()
{
  return sub_10024D5E4((uint64_t)&unk_100E9AC68);
}

unint64_t sub_10083B620()
{
  unint64_t result = qword_100E9AC78;
  if (!qword_100E9AC78)
  {
    sub_10018C6DC(&qword_100E9AC80);
    sub_1008373E8((uint64_t)&unk_100E9ABF0);
    sub_10083B3C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9AC78);
  }
  return result;
}

unint64_t sub_10083B6CC()
{
  return sub_10024D5E4((uint64_t)&unk_100E9AC88);
}

uint64_t sub_10083B708@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init()();
  id v6 = [self mainBundle];
  if (!sub_10083B898(v6))
  {
    long long v12 = 0u;
    long long v13 = 0u;
    goto LABEL_6;
  }
  sub_100A03740();
  swift_bridgeObjectRelease();
  if (!*((void *)&v13 + 1))
  {
LABEL_6:
    sub_10040B8CC((uint64_t)&v12);
    goto LABEL_7;
  }
  if (!swift_dynamicCast())
  {
LABEL_7:
    uint64_t v7 = 0;
    unint64_t v8 = 0xE000000000000000;
    goto LABEL_8;
  }
  uint64_t v7 = v11[0];
  unint64_t v8 = v11[1];
LABEL_8:
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v5, v2);
  uint64_t result = type metadata accessor for MainStateProcessingContext();
  uint64_t v10 = (void *)(a1 + *(int *)(result + 20));
  void *v10 = v7;
  v10[1] = v8;
  return result;
}

uint64_t sub_10083B898(void *a1)
{
  id v2 = [a1 infoDictionary];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t *sub_10083B910(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(type metadata accessor for UnitsConfigurationViewModel.Representation(0) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        uint64_t v10 = *(int *)(sub_10017DF08(&qword_100E77648) + 36);
        uint64_t v11 = (char *)a1 + v10;
        long long v12 = (char *)a2 + v10;
        uint64_t v13 = type metadata accessor for UnitConfiguration.Precipitation();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
        break;
      case 2u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        uint64_t v14 = *(int *)(sub_10017DF08(&qword_100E77630) + 36);
        uint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        uint64_t v17 = type metadata accessor for UnitConfiguration.Pressure();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
        break;
      case 3u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        uint64_t v18 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
        uint64_t v19 = (char *)a1 + v18;
        uint64_t v20 = (char *)a2 + v18;
        uint64_t v21 = type metadata accessor for UnitConfiguration.Temperature();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
        {
          uint64_t v22 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
          memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
        }
        uint64_t v56 = *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
        uint64_t v57 = (char *)a1 + v56;
        uint64_t v58 = (char *)a2 + v56;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v21))
        {
          uint64_t v59 = sub_10017DF08(&qword_100E6F620);
          memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v57, v58, v21);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 0, 1, v21);
        }
        break;
      case 4u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        uint64_t v23 = *(int *)(sub_10017DF08(&qword_100E775E0) + 36);
        uint64_t v24 = (char *)a1 + v23;
        uint64_t v25 = (char *)a2 + v23;
        uint64_t v26 = type metadata accessor for UnitConfiguration.WindSpeed();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
        break;
      case 5u:
        uint64_t v27 = sub_10017DF08(&qword_100E77670);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v27))
        {
          uint64_t v28 = sub_10017DF08(&qword_100E777F8);
          memcpy(a1, a2, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v60 = *(int *)(v27 + 36);
          uint64_t v61 = (char *)a1 + v60;
          uint64_t v62 = (char *)a2 + v60;
          uint64_t v63 = type metadata accessor for UnitConfiguration.Distance();
          uint64_t v64 = *(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16);
          swift_bridgeObjectRetain();
          v64(v61, v62, v63);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v27);
        }
        char v65 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
        uint64_t v66 = v65[5];
        uint64_t v67 = (uint64_t *)((char *)a1 + v66);
        uint64_t v68 = (uint64_t *)((char *)a2 + v66);
        uint64_t v69 = sub_10017DF08(&qword_100E77648);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 1, v69))
        {
          uint64_t v70 = sub_10017DF08(&qword_100E77800);
          memcpy(v67, v68, *(void *)(*(void *)(v70 - 8) + 64));
        }
        else
        {
          *uint64_t v67 = *v68;
          uint64_t v75 = *(int *)(v69 + 36);
          uint64_t v120 = (char *)v68 + v75;
          char v122 = (char *)v67 + v75;
          uint64_t v76 = type metadata accessor for UnitConfiguration.Precipitation();
          uint64_t v77 = v65;
          uint64_t v78 = *(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16);
          swift_bridgeObjectRetain();
          v78(v122, v120, v76);
          char v65 = v77;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v67, 0, 1, v69);
        }
        uint64_t v79 = v65[6];
        uint64_t v80 = (uint64_t *)((char *)a1 + v79);
        char v81 = (uint64_t *)((char *)a2 + v79);
        uint64_t v82 = sub_10017DF08(&qword_100E77630);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v81, 1, v82))
        {
          uint64_t v83 = sub_10017DF08(&qword_100E77808);
          memcpy(v80, v81, *(void *)(*(void *)(v83 - 8) + 64));
        }
        else
        {
          *uint64_t v80 = *v81;
          uint64_t v91 = *(int *)(v82 + 36);
          char v121 = (char *)v81 + v91;
          uint64_t v123 = (char *)v80 + v91;
          uint64_t v92 = type metadata accessor for UnitConfiguration.Pressure();
          uint64_t v93 = v65;
          uint64_t v94 = *(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 16);
          swift_bridgeObjectRetain();
          v94(v123, v121, v92);
          char v65 = v93;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v80, 0, 1, v82);
        }
        uint64_t v95 = v65[7];
        uint64_t v96 = (uint64_t *)((char *)a1 + v95);
        uint64_t v97 = (uint64_t *)((char *)a2 + v95);
        uint64_t v98 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v97, 1, v98))
        {
          uint64_t v99 = sub_10017DF08(&qword_100E77810);
          memcpy(v96, v97, *(void *)(*(void *)(v99 - 8) + 64));
        }
        else
        {
          *uint64_t v96 = *v97;
          swift_bridgeObjectRetain();
          uint64_t v100 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
          uint64_t v101 = (char *)v96 + v100;
          uint64_t v102 = (char *)v97 + v100;
          uint64_t v103 = type metadata accessor for UnitConfiguration.Temperature();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v102, 1, v103))
          {
            uint64_t v104 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
            memcpy(v101, v102, *(void *)(*(void *)(v104 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 16))(v101, v102, v103);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v101, 0, 1, v103);
          }
          uint64_t v105 = *(int *)(v98 + 20);
          Swift::String v106 = (char *)v96 + v105;
          Swift::String v107 = (char *)v97 + v105;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v107, 1, v103))
          {
            uint64_t v108 = sub_10017DF08(&qword_100E6F620);
            memcpy(v106, v107, *(void *)(*(void *)(v108 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 16))(v106, v107, v103);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v106, 0, 1, v103);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v96, 0, 1, v98);
        }
        uint64_t v109 = v65[8];
        uint64_t v110 = (uint64_t *)((char *)a1 + v109);
        uint64_t v111 = (uint64_t *)((char *)a2 + v109);
        uint64_t v112 = sub_10017DF08(&qword_100E775E0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v111, 1, v112))
        {
          uint64_t v113 = sub_10017DF08(&qword_100E77818);
          memcpy(v110, v111, *(void *)(*(void *)(v113 - 8) + 64));
        }
        else
        {
          *uint64_t v110 = *v111;
          uint64_t v114 = *(int *)(v112 + 36);
          uint64_t v115 = (char *)v110 + v114;
          uint64_t v116 = (char *)v111 + v114;
          uint64_t v117 = type metadata accessor for UnitConfiguration.WindSpeed();
          uint64_t v118 = *(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 16);
          swift_bridgeObjectRetain();
          v118(v115, v116, v117);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v110, 0, 1, v112);
        }
        break;
      case 6u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        uint64_t v29 = *(int *)(sub_10017DF08(&qword_100E77670) + 36);
        uint64_t v30 = (char *)a1 + v29;
        uint64_t v31 = (char *)a2 + v29;
        uint64_t v32 = type metadata accessor for UnitConfiguration.Distance();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
        uint64_t v33 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.Full(0);
        uint64_t v34 = v33[5];
        uint64_t v35 = (char *)a1 + v34;
        uint64_t v36 = (char *)a2 + v34;
        *(uint64_t *)((char *)a1 + v34) = *(uint64_t *)((char *)a2 + v34);
        swift_bridgeObjectRetain();
        uint64_t v37 = *(int *)(sub_10017DF08(&qword_100E77648) + 36);
        char v38 = &v35[v37];
        uint64_t v39 = &v36[v37];
        uint64_t v40 = type metadata accessor for UnitConfiguration.Precipitation();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
        uint64_t v41 = v33[6];
        uint64_t v42 = (char *)a1 + v41;
        uint64_t v43 = (char *)a2 + v41;
        *(uint64_t *)((char *)a1 + v41) = *(uint64_t *)((char *)a2 + v41);
        swift_bridgeObjectRetain();
        uint64_t v44 = *(int *)(sub_10017DF08(&qword_100E77630) + 36);
        uint64_t v45 = &v42[v44];
        int v46 = &v43[v44];
        uint64_t v47 = type metadata accessor for UnitConfiguration.Pressure();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
        uint64_t v48 = v33[7];
        uint64_t v49 = (char *)a1 + v48;
        long long v50 = (char *)a2 + v48;
        *(uint64_t *)((char *)a1 + v48) = *(uint64_t *)((char *)a2 + v48);
        swift_bridgeObjectRetain();
        uint64_t v51 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
        uint64_t v52 = &v49[v51];
        char v53 = &v50[v51];
        uint64_t v54 = type metadata accessor for UnitConfiguration.Temperature();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v54))
        {
          uint64_t v55 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
          memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v54);
        }
        uint64_t v71 = *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
        uint64_t v72 = &v49[v71];
        uint64_t v73 = &v50[v71];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v50[v71], 1, v54))
        {
          uint64_t v74 = sub_10017DF08(&qword_100E6F620);
          memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v72, v73, v54);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v72, 0, 1, v54);
        }
        uint64_t v84 = v33[8];
        uint64_t v85 = (char *)a1 + v84;
        uint64_t v86 = (char *)a2 + v84;
        *(uint64_t *)((char *)a1 + v84) = *(uint64_t *)((char *)a2 + v84);
        swift_bridgeObjectRetain();
        uint64_t v87 = *(int *)(sub_10017DF08(&qword_100E775E0) + 36);
        uint64_t v88 = &v85[v87];
        char v89 = &v86[v87];
        uint64_t v90 = type metadata accessor for UnitConfiguration.WindSpeed();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16))(v88, v89, v90);
        *((unsigned char *)a1 + v33[9]) = *((unsigned char *)a2 + v33[9]);
        *((unsigned char *)a1 + v33[10]) = *((unsigned char *)a2 + v33[10]);
        break;
      default:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        uint64_t v5 = *(int *)(sub_10017DF08(&qword_100E77670) + 36);
        id v6 = (char *)a1 + v5;
        uint64_t v7 = (char *)a2 + v5;
        uint64_t v8 = type metadata accessor for UnitConfiguration.Distance();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for UnitsConfigurationViewModel.Representation(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E9B0D0);
}

uint64_t type metadata accessor for UnitsConfigurationViewModel.Temperature(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E9AFD0);
}

uint64_t type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E9AF28);
}

uint64_t type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E9AE60);
}

uint64_t type metadata accessor for UnitsConfigurationViewModel.Representation.Full(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E9AD78);
}

uint64_t sub_10083C62C(uint64_t a1)
{
  type metadata accessor for UnitsConfigurationViewModel.Representation(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      uint64_t v3 = a1 + *(int *)(sub_10017DF08(&qword_100E77670) + 36);
      uint64_t v4 = type metadata accessor for UnitConfiguration.Distance();
      goto LABEL_29;
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v3 = a1 + *(int *)(sub_10017DF08(&qword_100E77648) + 36);
      uint64_t v4 = type metadata accessor for UnitConfiguration.Precipitation();
      goto LABEL_29;
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v3 = a1 + *(int *)(sub_10017DF08(&qword_100E77630) + 36);
      uint64_t v4 = type metadata accessor for UnitConfiguration.Pressure();
      goto LABEL_29;
    case 3:
      swift_bridgeObjectRelease();
      uint64_t v5 = a1 + *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
      uint64_t v6 = type metadata accessor for UnitConfiguration.Temperature();
      if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
      }
      uint64_t v7 = a1 + *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
      uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v7, 1, v6);
      if (result) {
        return result;
      }
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
      uint64_t v9 = v7;
      uint64_t v10 = v6;
      goto LABEL_30;
    case 4:
      goto LABEL_27;
    case 5:
      uint64_t v11 = sub_10017DF08(&qword_100E77670);
      if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v11))
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = a1 + *(int *)(v11 + 36);
        uint64_t v13 = type metadata accessor for UnitConfiguration.Distance();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      }
      uint64_t v14 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
      uint64_t v15 = a1 + v14[5];
      uint64_t v16 = sub_10017DF08(&qword_100E77648);
      if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v16))
      {
        swift_bridgeObjectRelease();
        uint64_t v17 = v15 + *(int *)(v16 + 36);
        uint64_t v18 = type metadata accessor for UnitConfiguration.Precipitation();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
      }
      uint64_t v19 = a1 + v14[6];
      uint64_t v20 = sub_10017DF08(&qword_100E77630);
      if (!_s7Weather24LocationCompositionStateOwet_0(v19, 1, v20))
      {
        swift_bridgeObjectRelease();
        uint64_t v21 = v19 + *(int *)(v20 + 36);
        uint64_t v22 = type metadata accessor for UnitConfiguration.Pressure();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
      }
      uint64_t v23 = a1 + v14[7];
      uint64_t v24 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v23, 1, v24))
      {
        swift_bridgeObjectRelease();
        uint64_t v25 = v23 + *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
        uint64_t v26 = type metadata accessor for UnitConfiguration.Temperature();
        if (!_s7Weather24LocationCompositionStateOwet_0(v25, 1, v26)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
        }
        uint64_t v27 = v23 + *(int *)(v24 + 20);
        if (!_s7Weather24LocationCompositionStateOwet_0(v27, 1, v26)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v27, v26);
        }
      }
      a1 += v14[8];
      uint64_t v28 = sub_10017DF08(&qword_100E775E0);
      uint64_t result = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v28);
      if (result) {
        return result;
      }
      swift_bridgeObjectRelease();
      uint64_t v42 = *(int *)(v28 + 36);
      goto LABEL_28;
    case 6:
      swift_bridgeObjectRelease();
      uint64_t v29 = a1 + *(int *)(sub_10017DF08(&qword_100E77670) + 36);
      uint64_t v30 = type metadata accessor for UnitConfiguration.Distance();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
      uint64_t v31 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.Full(0);
      uint64_t v32 = a1 + v31[5];
      swift_bridgeObjectRelease();
      uint64_t v33 = v32 + *(int *)(sub_10017DF08(&qword_100E77648) + 36);
      uint64_t v34 = type metadata accessor for UnitConfiguration.Precipitation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v33, v34);
      uint64_t v35 = a1 + v31[6];
      swift_bridgeObjectRelease();
      uint64_t v36 = v35 + *(int *)(sub_10017DF08(&qword_100E77630) + 36);
      uint64_t v37 = type metadata accessor for UnitConfiguration.Pressure();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
      uint64_t v38 = a1 + v31[7];
      swift_bridgeObjectRelease();
      uint64_t v39 = v38 + *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
      uint64_t v40 = type metadata accessor for UnitConfiguration.Temperature();
      if (!_s7Weather24LocationCompositionStateOwet_0(v39, 1, v40)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);
      }
      uint64_t v41 = v38 + *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
      if (!_s7Weather24LocationCompositionStateOwet_0(v41, 1, v40)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v41, v40);
      }
      a1 += v31[8];
LABEL_27:
      swift_bridgeObjectRelease();
      uint64_t v42 = *(int *)(sub_10017DF08(&qword_100E775E0) + 36);
LABEL_28:
      uint64_t v3 = a1 + v42;
      uint64_t v4 = type metadata accessor for UnitConfiguration.WindSpeed();
LABEL_29:
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
      uint64_t v10 = v4;
      uint64_t v9 = v3;
LABEL_30:
      uint64_t result = v8(v9, v10);
      break;
    default:
      return result;
  }
  return result;
}

void *sub_10083CCC0(void *a1, void *a2)
{
  type metadata accessor for UnitsConfigurationViewModel.Representation(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E77648) + 36);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for UnitConfiguration.Precipitation();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      break;
    case 2u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      uint64_t v12 = *(int *)(sub_10017DF08(&qword_100E77630) + 36);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = type metadata accessor for UnitConfiguration.Pressure();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      break;
    case 3u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      uint64_t v16 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = type metadata accessor for UnitConfiguration.Temperature();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
      {
        uint64_t v20 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
        memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
      }
      uint64_t v54 = *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
      uint64_t v55 = (char *)a1 + v54;
      uint64_t v56 = (char *)a2 + v54;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v19))
      {
        uint64_t v57 = sub_10017DF08(&qword_100E6F620);
        memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v55, v56, v19);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v55, 0, 1, v19);
      }
      break;
    case 4u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      uint64_t v21 = *(int *)(sub_10017DF08(&qword_100E775E0) + 36);
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = type metadata accessor for UnitConfiguration.WindSpeed();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      break;
    case 5u:
      uint64_t v25 = sub_10017DF08(&qword_100E77670);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v25))
      {
        uint64_t v26 = sub_10017DF08(&qword_100E777F8);
        memcpy(a1, a2, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v58 = *(int *)(v25 + 36);
        uint64_t v59 = (char *)a1 + v58;
        uint64_t v60 = (char *)a2 + v58;
        uint64_t v61 = type metadata accessor for UnitConfiguration.Distance();
        uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
        swift_bridgeObjectRetain();
        v62(v59, v60, v61);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v25);
      }
      uint64_t v63 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
      uint64_t v64 = v63[5];
      char v65 = (void *)((char *)a1 + v64);
      uint64_t v66 = (void *)((char *)a2 + v64);
      uint64_t v67 = sub_10017DF08(&qword_100E77648);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, v67))
      {
        uint64_t v68 = sub_10017DF08(&qword_100E77800);
        memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        *char v65 = *v66;
        uint64_t v73 = *(int *)(v67 + 36);
        uint64_t v118 = (char *)v66 + v73;
        uint64_t v120 = (char *)v65 + v73;
        uint64_t v74 = type metadata accessor for UnitConfiguration.Precipitation();
        uint64_t v75 = v63;
        uint64_t v76 = *(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16);
        swift_bridgeObjectRetain();
        v76(v120, v118, v74);
        uint64_t v63 = v75;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 0, 1, v67);
      }
      uint64_t v77 = v63[6];
      uint64_t v78 = (void *)((char *)a1 + v77);
      uint64_t v79 = (void *)((char *)a2 + v77);
      uint64_t v80 = sub_10017DF08(&qword_100E77630);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v79, 1, v80))
      {
        uint64_t v81 = sub_10017DF08(&qword_100E77808);
        memcpy(v78, v79, *(void *)(*(void *)(v81 - 8) + 64));
      }
      else
      {
        *uint64_t v78 = *v79;
        uint64_t v89 = *(int *)(v80 + 36);
        uint64_t v119 = (char *)v79 + v89;
        char v121 = (char *)v78 + v89;
        uint64_t v90 = type metadata accessor for UnitConfiguration.Pressure();
        uint64_t v91 = v63;
        uint64_t v92 = *(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16);
        swift_bridgeObjectRetain();
        v92(v121, v119, v90);
        uint64_t v63 = v91;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v78, 0, 1, v80);
      }
      uint64_t v93 = v63[7];
      uint64_t v94 = (void *)((char *)a1 + v93);
      uint64_t v95 = (void *)((char *)a2 + v93);
      uint64_t v96 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, v96))
      {
        uint64_t v97 = sub_10017DF08(&qword_100E77810);
        memcpy(v94, v95, *(void *)(*(void *)(v97 - 8) + 64));
      }
      else
      {
        *uint64_t v94 = *v95;
        swift_bridgeObjectRetain();
        uint64_t v98 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
        uint64_t v99 = (char *)v94 + v98;
        uint64_t v100 = (char *)v95 + v98;
        uint64_t v101 = type metadata accessor for UnitConfiguration.Temperature();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v100, 1, v101))
        {
          uint64_t v102 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
          memcpy(v99, v100, *(void *)(*(void *)(v102 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16))(v99, v100, v101);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v99, 0, 1, v101);
        }
        uint64_t v103 = *(int *)(v96 + 20);
        uint64_t v104 = (char *)v94 + v103;
        uint64_t v105 = (char *)v95 + v103;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v105, 1, v101))
        {
          uint64_t v106 = sub_10017DF08(&qword_100E6F620);
          memcpy(v104, v105, *(void *)(*(void *)(v106 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16))(v104, v105, v101);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v104, 0, 1, v101);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v94, 0, 1, v96);
      }
      uint64_t v107 = v63[8];
      uint64_t v108 = (void *)((char *)a1 + v107);
      uint64_t v109 = (void *)((char *)a2 + v107);
      uint64_t v110 = sub_10017DF08(&qword_100E775E0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v109, 1, v110))
      {
        uint64_t v111 = sub_10017DF08(&qword_100E77818);
        memcpy(v108, v109, *(void *)(*(void *)(v111 - 8) + 64));
      }
      else
      {
        *uint64_t v108 = *v109;
        uint64_t v112 = *(int *)(v110 + 36);
        uint64_t v113 = (char *)v108 + v112;
        uint64_t v114 = (char *)v109 + v112;
        uint64_t v115 = type metadata accessor for UnitConfiguration.WindSpeed();
        uint64_t v116 = *(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 16);
        swift_bridgeObjectRetain();
        v116(v113, v114, v115);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v108, 0, 1, v110);
      }
      break;
    case 6u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      uint64_t v27 = *(int *)(sub_10017DF08(&qword_100E77670) + 36);
      uint64_t v28 = (char *)a1 + v27;
      uint64_t v29 = (char *)a2 + v27;
      uint64_t v30 = type metadata accessor for UnitConfiguration.Distance();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      uint64_t v31 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.Full(0);
      uint64_t v32 = v31[5];
      uint64_t v33 = (char *)a1 + v32;
      uint64_t v34 = (char *)a2 + v32;
      *(void *)((char *)a1 + v32) = *(void *)((char *)a2 + v32);
      swift_bridgeObjectRetain();
      uint64_t v35 = *(int *)(sub_10017DF08(&qword_100E77648) + 36);
      uint64_t v36 = &v33[v35];
      uint64_t v37 = &v34[v35];
      uint64_t v38 = type metadata accessor for UnitConfiguration.Precipitation();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
      uint64_t v39 = v31[6];
      uint64_t v40 = (char *)a1 + v39;
      uint64_t v41 = (char *)a2 + v39;
      *(void *)((char *)a1 + v39) = *(void *)((char *)a2 + v39);
      swift_bridgeObjectRetain();
      uint64_t v42 = *(int *)(sub_10017DF08(&qword_100E77630) + 36);
      uint64_t v43 = &v40[v42];
      uint64_t v44 = &v41[v42];
      uint64_t v45 = type metadata accessor for UnitConfiguration.Pressure();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
      uint64_t v46 = v31[7];
      uint64_t v47 = (char *)a1 + v46;
      uint64_t v48 = (char *)a2 + v46;
      *(void *)((char *)a1 + v46) = *(void *)((char *)a2 + v46);
      swift_bridgeObjectRetain();
      uint64_t v49 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
      long long v50 = &v47[v49];
      uint64_t v51 = &v48[v49];
      uint64_t v52 = type metadata accessor for UnitConfiguration.Temperature();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v52))
      {
        uint64_t v53 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
        memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 0, 1, v52);
      }
      uint64_t v69 = *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
      uint64_t v70 = &v47[v69];
      uint64_t v71 = &v48[v69];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v48[v69], 1, v52))
      {
        uint64_t v72 = sub_10017DF08(&qword_100E6F620);
        memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v70, v71, v52);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v52);
      }
      uint64_t v82 = v31[8];
      uint64_t v83 = (char *)a1 + v82;
      uint64_t v84 = (char *)a2 + v82;
      *(void *)((char *)a1 + v82) = *(void *)((char *)a2 + v82);
      swift_bridgeObjectRetain();
      uint64_t v85 = *(int *)(sub_10017DF08(&qword_100E775E0) + 36);
      uint64_t v86 = &v83[v85];
      uint64_t v87 = &v84[v85];
      uint64_t v88 = type metadata accessor for UnitConfiguration.WindSpeed();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v86, v87, v88);
      *((unsigned char *)a1 + v31[9]) = *((unsigned char *)a2 + v31[9]);
      *((unsigned char *)a1 + v31[10]) = *((unsigned char *)a2 + v31[10]);
      break;
    default:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      uint64_t v4 = *(int *)(sub_10017DF08(&qword_100E77670) + 36);
      uint64_t v5 = (char *)a1 + v4;
      uint64_t v6 = (char *)a2 + v4;
      uint64_t v7 = type metadata accessor for UnitConfiguration.Distance();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_10083D8EC(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_100843330((uint64_t)a1, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation);
    type metadata accessor for UnitsConfigurationViewModel.Representation(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E77648) + 36);
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = type metadata accessor for UnitConfiguration.Precipitation();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
        break;
      case 2u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        uint64_t v12 = *(int *)(sub_10017DF08(&qword_100E77630) + 36);
        uint64_t v13 = (char *)a1 + v12;
        uint64_t v14 = (char *)a2 + v12;
        uint64_t v15 = type metadata accessor for UnitConfiguration.Pressure();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
        break;
      case 3u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        uint64_t v16 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
        uint64_t v17 = (char *)a1 + v16;
        uint64_t v18 = (char *)a2 + v16;
        uint64_t v19 = type metadata accessor for UnitConfiguration.Temperature();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
        {
          uint64_t v20 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
          memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
        }
        uint64_t v54 = *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
        uint64_t v55 = (char *)a1 + v54;
        uint64_t v56 = (char *)a2 + v54;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v19))
        {
          uint64_t v57 = sub_10017DF08(&qword_100E6F620);
          memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v55, v56, v19);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v55, 0, 1, v19);
        }
        break;
      case 4u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        uint64_t v21 = *(int *)(sub_10017DF08(&qword_100E775E0) + 36);
        uint64_t v22 = (char *)a1 + v21;
        uint64_t v23 = (char *)a2 + v21;
        uint64_t v24 = type metadata accessor for UnitConfiguration.WindSpeed();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
        break;
      case 5u:
        uint64_t v25 = sub_10017DF08(&qword_100E77670);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v25))
        {
          uint64_t v26 = sub_10017DF08(&qword_100E777F8);
          memcpy(a1, a2, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v58 = *(int *)(v25 + 36);
          uint64_t v59 = (char *)a1 + v58;
          uint64_t v60 = (char *)a2 + v58;
          uint64_t v61 = type metadata accessor for UnitConfiguration.Distance();
          uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
          swift_bridgeObjectRetain();
          v62(v59, v60, v61);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v25);
        }
        uint64_t v63 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
        uint64_t v64 = v63[5];
        char v65 = (void *)((char *)a1 + v64);
        uint64_t v66 = (void *)((char *)a2 + v64);
        uint64_t v67 = sub_10017DF08(&qword_100E77648);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, v67))
        {
          uint64_t v68 = sub_10017DF08(&qword_100E77800);
          memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
        }
        else
        {
          *char v65 = *v66;
          uint64_t v73 = *(int *)(v67 + 36);
          uint64_t v118 = (char *)v66 + v73;
          uint64_t v120 = (char *)v65 + v73;
          uint64_t v74 = type metadata accessor for UnitConfiguration.Precipitation();
          uint64_t v75 = v63;
          uint64_t v76 = *(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16);
          swift_bridgeObjectRetain();
          v76(v120, v118, v74);
          uint64_t v63 = v75;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 0, 1, v67);
        }
        uint64_t v77 = v63[6];
        uint64_t v78 = (void *)((char *)a1 + v77);
        uint64_t v79 = (void *)((char *)a2 + v77);
        uint64_t v80 = sub_10017DF08(&qword_100E77630);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v79, 1, v80))
        {
          uint64_t v81 = sub_10017DF08(&qword_100E77808);
          memcpy(v78, v79, *(void *)(*(void *)(v81 - 8) + 64));
        }
        else
        {
          *uint64_t v78 = *v79;
          uint64_t v89 = *(int *)(v80 + 36);
          uint64_t v119 = (char *)v79 + v89;
          char v121 = (char *)v78 + v89;
          uint64_t v90 = type metadata accessor for UnitConfiguration.Pressure();
          uint64_t v91 = v63;
          uint64_t v92 = *(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16);
          swift_bridgeObjectRetain();
          v92(v121, v119, v90);
          uint64_t v63 = v91;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v78, 0, 1, v80);
        }
        uint64_t v93 = v63[7];
        uint64_t v94 = (void *)((char *)a1 + v93);
        uint64_t v95 = (void *)((char *)a2 + v93);
        uint64_t v96 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, v96))
        {
          uint64_t v97 = sub_10017DF08(&qword_100E77810);
          memcpy(v94, v95, *(void *)(*(void *)(v97 - 8) + 64));
        }
        else
        {
          *uint64_t v94 = *v95;
          swift_bridgeObjectRetain();
          uint64_t v98 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
          uint64_t v99 = (char *)v94 + v98;
          uint64_t v100 = (char *)v95 + v98;
          uint64_t v101 = type metadata accessor for UnitConfiguration.Temperature();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v100, 1, v101))
          {
            uint64_t v102 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
            memcpy(v99, v100, *(void *)(*(void *)(v102 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16))(v99, v100, v101);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v99, 0, 1, v101);
          }
          uint64_t v103 = *(int *)(v96 + 20);
          uint64_t v104 = (char *)v94 + v103;
          uint64_t v105 = (char *)v95 + v103;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v105, 1, v101))
          {
            uint64_t v106 = sub_10017DF08(&qword_100E6F620);
            memcpy(v104, v105, *(void *)(*(void *)(v106 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16))(v104, v105, v101);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v104, 0, 1, v101);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v94, 0, 1, v96);
        }
        uint64_t v107 = v63[8];
        uint64_t v108 = (void *)((char *)a1 + v107);
        uint64_t v109 = (void *)((char *)a2 + v107);
        uint64_t v110 = sub_10017DF08(&qword_100E775E0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v109, 1, v110))
        {
          uint64_t v111 = sub_10017DF08(&qword_100E77818);
          memcpy(v108, v109, *(void *)(*(void *)(v111 - 8) + 64));
        }
        else
        {
          *uint64_t v108 = *v109;
          uint64_t v112 = *(int *)(v110 + 36);
          uint64_t v113 = (char *)v108 + v112;
          uint64_t v114 = (char *)v109 + v112;
          uint64_t v115 = type metadata accessor for UnitConfiguration.WindSpeed();
          uint64_t v116 = *(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 16);
          swift_bridgeObjectRetain();
          v116(v113, v114, v115);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v108, 0, 1, v110);
        }
        break;
      case 6u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        uint64_t v27 = *(int *)(sub_10017DF08(&qword_100E77670) + 36);
        uint64_t v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        uint64_t v30 = type metadata accessor for UnitConfiguration.Distance();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
        uint64_t v31 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.Full(0);
        uint64_t v32 = v31[5];
        uint64_t v33 = (char *)a1 + v32;
        uint64_t v34 = (char *)a2 + v32;
        *(void *)((char *)a1 + v32) = *(void *)((char *)a2 + v32);
        swift_bridgeObjectRetain();
        uint64_t v35 = *(int *)(sub_10017DF08(&qword_100E77648) + 36);
        uint64_t v36 = &v33[v35];
        uint64_t v37 = &v34[v35];
        uint64_t v38 = type metadata accessor for UnitConfiguration.Precipitation();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
        uint64_t v39 = v31[6];
        uint64_t v40 = (char *)a1 + v39;
        uint64_t v41 = (char *)a2 + v39;
        *(void *)((char *)a1 + v39) = *(void *)((char *)a2 + v39);
        swift_bridgeObjectRetain();
        uint64_t v42 = *(int *)(sub_10017DF08(&qword_100E77630) + 36);
        uint64_t v43 = &v40[v42];
        uint64_t v44 = &v41[v42];
        uint64_t v45 = type metadata accessor for UnitConfiguration.Pressure();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
        uint64_t v46 = v31[7];
        uint64_t v47 = (char *)a1 + v46;
        uint64_t v48 = (char *)a2 + v46;
        *(void *)((char *)a1 + v46) = *(void *)((char *)a2 + v46);
        swift_bridgeObjectRetain();
        uint64_t v49 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
        long long v50 = &v47[v49];
        uint64_t v51 = &v48[v49];
        uint64_t v52 = type metadata accessor for UnitConfiguration.Temperature();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v52))
        {
          uint64_t v53 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
          memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 0, 1, v52);
        }
        uint64_t v69 = *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
        uint64_t v70 = &v47[v69];
        uint64_t v71 = &v48[v69];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v48[v69], 1, v52))
        {
          uint64_t v72 = sub_10017DF08(&qword_100E6F620);
          memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v70, v71, v52);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v52);
        }
        uint64_t v82 = v31[8];
        uint64_t v83 = (char *)a1 + v82;
        uint64_t v84 = (char *)a2 + v82;
        *(void *)((char *)a1 + v82) = *(void *)((char *)a2 + v82);
        swift_bridgeObjectRetain();
        uint64_t v85 = *(int *)(sub_10017DF08(&qword_100E775E0) + 36);
        uint64_t v86 = &v83[v85];
        uint64_t v87 = &v84[v85];
        uint64_t v88 = type metadata accessor for UnitConfiguration.WindSpeed();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v86, v87, v88);
        *((unsigned char *)a1 + v31[9]) = *((unsigned char *)a2 + v31[9]);
        *((unsigned char *)a1 + v31[10]) = *((unsigned char *)a2 + v31[10]);
        break;
      default:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        uint64_t v4 = *(int *)(sub_10017DF08(&qword_100E77670) + 36);
        uint64_t v5 = (char *)a1 + v4;
        uint64_t v6 = (char *)a2 + v4;
        uint64_t v7 = type metadata accessor for UnitConfiguration.Distance();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_10083E53C(void *a1, void *a2)
{
  type metadata accessor for UnitsConfigurationViewModel.Representation(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *a1 = *a2;
      uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E77648) + 36);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for UnitConfiguration.Precipitation();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      break;
    case 2u:
      *a1 = *a2;
      uint64_t v12 = *(int *)(sub_10017DF08(&qword_100E77630) + 36);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = type metadata accessor for UnitConfiguration.Pressure();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      break;
    case 3u:
      *a1 = *a2;
      uint64_t v16 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = type metadata accessor for UnitConfiguration.Temperature();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
      {
        uint64_t v20 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
        memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
      }
      uint64_t v54 = *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
      uint64_t v55 = (char *)a1 + v54;
      uint64_t v56 = (char *)a2 + v54;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v19))
      {
        uint64_t v57 = sub_10017DF08(&qword_100E6F620);
        memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v55, v56, v19);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v55, 0, 1, v19);
      }
      break;
    case 4u:
      *a1 = *a2;
      uint64_t v21 = *(int *)(sub_10017DF08(&qword_100E775E0) + 36);
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = type metadata accessor for UnitConfiguration.WindSpeed();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
      break;
    case 5u:
      uint64_t v25 = sub_10017DF08(&qword_100E77670);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v25))
      {
        uint64_t v26 = sub_10017DF08(&qword_100E777F8);
        memcpy(a1, a2, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v58 = *(int *)(v25 + 36);
        uint64_t v59 = (char *)a1 + v58;
        uint64_t v60 = (char *)a2 + v58;
        uint64_t v61 = type metadata accessor for UnitConfiguration.Distance();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v59, v60, v61);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v25);
      }
      uint64_t v62 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
      uint64_t v63 = v62[5];
      uint64_t v64 = (void *)((char *)a1 + v63);
      char v65 = (void *)((char *)a2 + v63);
      uint64_t v66 = sub_10017DF08(&qword_100E77648);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v66))
      {
        uint64_t v67 = sub_10017DF08(&qword_100E77800);
        memcpy(v64, v65, *(void *)(*(void *)(v67 - 8) + 64));
      }
      else
      {
        *uint64_t v64 = *v65;
        uint64_t v72 = *(int *)(v66 + 36);
        uint64_t v73 = (char *)v64 + v72;
        uint64_t v74 = (char *)v65 + v72;
        uint64_t v75 = type metadata accessor for UnitConfiguration.Precipitation();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, v66);
      }
      uint64_t v76 = v62[6];
      uint64_t v77 = (void *)((char *)a1 + v76);
      uint64_t v78 = (void *)((char *)a2 + v76);
      uint64_t v79 = sub_10017DF08(&qword_100E77630);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v78, 1, v79))
      {
        uint64_t v80 = sub_10017DF08(&qword_100E77808);
        memcpy(v77, v78, *(void *)(*(void *)(v80 - 8) + 64));
      }
      else
      {
        *uint64_t v77 = *v78;
        uint64_t v88 = *(int *)(v79 + 36);
        uint64_t v89 = (char *)v77 + v88;
        uint64_t v90 = (char *)v78 + v88;
        uint64_t v91 = type metadata accessor for UnitConfiguration.Pressure();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 32))(v89, v90, v91);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v77, 0, 1, v79);
      }
      uint64_t v92 = v62[7];
      uint64_t v93 = (void *)((char *)a1 + v92);
      uint64_t v94 = (void *)((char *)a2 + v92);
      uint64_t v95 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v94, 1, v95))
      {
        uint64_t v96 = sub_10017DF08(&qword_100E77810);
        memcpy(v93, v94, *(void *)(*(void *)(v96 - 8) + 64));
      }
      else
      {
        *uint64_t v93 = *v94;
        uint64_t v97 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
        uint64_t v98 = (char *)v93 + v97;
        uint64_t v99 = (char *)v94 + v97;
        uint64_t v100 = type metadata accessor for UnitConfiguration.Temperature();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v99, 1, v100))
        {
          uint64_t v101 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
          memcpy(v98, v99, *(void *)(*(void *)(v101 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 32))(v98, v99, v100);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 0, 1, v100);
        }
        uint64_t v102 = *(int *)(v95 + 20);
        uint64_t v103 = (char *)v93 + v102;
        uint64_t v104 = (char *)v94 + v102;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v104, 1, v100))
        {
          uint64_t v105 = sub_10017DF08(&qword_100E6F620);
          memcpy(v103, v104, *(void *)(*(void *)(v105 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 32))(v103, v104, v100);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v103, 0, 1, v100);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v93, 0, 1, v95);
      }
      uint64_t v106 = v62[8];
      uint64_t v107 = (void *)((char *)a1 + v106);
      uint64_t v108 = (void *)((char *)a2 + v106);
      uint64_t v109 = sub_10017DF08(&qword_100E775E0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v108, 1, v109))
      {
        uint64_t v110 = sub_10017DF08(&qword_100E77818);
        memcpy(v107, v108, *(void *)(*(void *)(v110 - 8) + 64));
      }
      else
      {
        *uint64_t v107 = *v108;
        uint64_t v111 = *(int *)(v109 + 36);
        uint64_t v112 = (char *)v107 + v111;
        uint64_t v113 = (char *)v108 + v111;
        uint64_t v114 = type metadata accessor for UnitConfiguration.WindSpeed();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 32))(v112, v113, v114);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v107, 0, 1, v109);
      }
      break;
    case 6u:
      *a1 = *a2;
      uint64_t v27 = *(int *)(sub_10017DF08(&qword_100E77670) + 36);
      uint64_t v28 = (char *)a1 + v27;
      uint64_t v29 = (char *)a2 + v27;
      uint64_t v30 = type metadata accessor for UnitConfiguration.Distance();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      uint64_t v31 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.Full(0);
      uint64_t v32 = v31[5];
      uint64_t v33 = (char *)a1 + v32;
      uint64_t v34 = (char *)a2 + v32;
      *(void *)((char *)a1 + v32) = *(void *)((char *)a2 + v32);
      uint64_t v35 = *(int *)(sub_10017DF08(&qword_100E77648) + 36);
      uint64_t v36 = &v33[v35];
      uint64_t v37 = &v34[v35];
      uint64_t v38 = type metadata accessor for UnitConfiguration.Precipitation();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
      uint64_t v39 = v31[6];
      uint64_t v40 = (char *)a1 + v39;
      uint64_t v41 = (char *)a2 + v39;
      *(void *)((char *)a1 + v39) = *(void *)((char *)a2 + v39);
      uint64_t v42 = *(int *)(sub_10017DF08(&qword_100E77630) + 36);
      uint64_t v43 = &v40[v42];
      uint64_t v44 = &v41[v42];
      uint64_t v45 = type metadata accessor for UnitConfiguration.Pressure();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
      uint64_t v46 = v31[7];
      uint64_t v47 = (char *)a1 + v46;
      uint64_t v48 = (char *)a2 + v46;
      *(void *)((char *)a1 + v46) = *(void *)((char *)a2 + v46);
      uint64_t v49 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
      long long v50 = &v47[v49];
      uint64_t v51 = &v48[v49];
      uint64_t v52 = type metadata accessor for UnitConfiguration.Temperature();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v52))
      {
        uint64_t v53 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
        memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 0, 1, v52);
      }
      uint64_t v68 = *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
      uint64_t v69 = &v47[v68];
      uint64_t v70 = &v48[v68];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v48[v68], 1, v52))
      {
        uint64_t v71 = sub_10017DF08(&qword_100E6F620);
        memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v69, v70, v52);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v69, 0, 1, v52);
      }
      uint64_t v81 = v31[8];
      uint64_t v82 = (char *)a1 + v81;
      uint64_t v83 = (char *)a2 + v81;
      *(void *)((char *)a1 + v81) = *(void *)((char *)a2 + v81);
      uint64_t v84 = *(int *)(sub_10017DF08(&qword_100E775E0) + 36);
      uint64_t v85 = &v82[v84];
      uint64_t v86 = &v83[v84];
      uint64_t v87 = type metadata accessor for UnitConfiguration.WindSpeed();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 32))(v85, v86, v87);
      *((unsigned char *)a1 + v31[9]) = *((unsigned char *)a2 + v31[9]);
      *((unsigned char *)a1 + v31[10]) = *((unsigned char *)a2 + v31[10]);
      break;
    default:
      *a1 = *a2;
      uint64_t v4 = *(int *)(sub_10017DF08(&qword_100E77670) + 36);
      uint64_t v5 = (char *)a1 + v4;
      uint64_t v6 = (char *)a2 + v4;
      uint64_t v7 = type metadata accessor for UnitConfiguration.Distance();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_10083F0F4(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_100843330((uint64_t)a1, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation);
    type metadata accessor for UnitsConfigurationViewModel.Representation(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E77648) + 36);
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = type metadata accessor for UnitConfiguration.Precipitation();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
        break;
      case 2u:
        *a1 = *a2;
        uint64_t v12 = *(int *)(sub_10017DF08(&qword_100E77630) + 36);
        uint64_t v13 = (char *)a1 + v12;
        uint64_t v14 = (char *)a2 + v12;
        uint64_t v15 = type metadata accessor for UnitConfiguration.Pressure();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
        break;
      case 3u:
        *a1 = *a2;
        uint64_t v16 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
        uint64_t v17 = (char *)a1 + v16;
        uint64_t v18 = (char *)a2 + v16;
        uint64_t v19 = type metadata accessor for UnitConfiguration.Temperature();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
        {
          uint64_t v20 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
          memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
        }
        uint64_t v54 = *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
        uint64_t v55 = (char *)a1 + v54;
        uint64_t v56 = (char *)a2 + v54;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v19))
        {
          uint64_t v57 = sub_10017DF08(&qword_100E6F620);
          memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v55, v56, v19);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v55, 0, 1, v19);
        }
        break;
      case 4u:
        *a1 = *a2;
        uint64_t v21 = *(int *)(sub_10017DF08(&qword_100E775E0) + 36);
        uint64_t v22 = (char *)a1 + v21;
        uint64_t v23 = (char *)a2 + v21;
        uint64_t v24 = type metadata accessor for UnitConfiguration.WindSpeed();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
        break;
      case 5u:
        uint64_t v25 = sub_10017DF08(&qword_100E77670);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v25))
        {
          uint64_t v26 = sub_10017DF08(&qword_100E777F8);
          memcpy(a1, a2, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v58 = *(int *)(v25 + 36);
          uint64_t v59 = (char *)a1 + v58;
          uint64_t v60 = (char *)a2 + v58;
          uint64_t v61 = type metadata accessor for UnitConfiguration.Distance();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v59, v60, v61);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v25);
        }
        uint64_t v62 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
        uint64_t v63 = v62[5];
        uint64_t v64 = (void *)((char *)a1 + v63);
        char v65 = (void *)((char *)a2 + v63);
        uint64_t v66 = sub_10017DF08(&qword_100E77648);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v66))
        {
          uint64_t v67 = sub_10017DF08(&qword_100E77800);
          memcpy(v64, v65, *(void *)(*(void *)(v67 - 8) + 64));
        }
        else
        {
          *uint64_t v64 = *v65;
          uint64_t v72 = *(int *)(v66 + 36);
          uint64_t v73 = (char *)v64 + v72;
          uint64_t v74 = (char *)v65 + v72;
          uint64_t v75 = type metadata accessor for UnitConfiguration.Precipitation();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, v66);
        }
        uint64_t v76 = v62[6];
        uint64_t v77 = (void *)((char *)a1 + v76);
        uint64_t v78 = (void *)((char *)a2 + v76);
        uint64_t v79 = sub_10017DF08(&qword_100E77630);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v78, 1, v79))
        {
          uint64_t v80 = sub_10017DF08(&qword_100E77808);
          memcpy(v77, v78, *(void *)(*(void *)(v80 - 8) + 64));
        }
        else
        {
          *uint64_t v77 = *v78;
          uint64_t v88 = *(int *)(v79 + 36);
          uint64_t v89 = (char *)v77 + v88;
          uint64_t v90 = (char *)v78 + v88;
          uint64_t v91 = type metadata accessor for UnitConfiguration.Pressure();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 32))(v89, v90, v91);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v77, 0, 1, v79);
        }
        uint64_t v92 = v62[7];
        uint64_t v93 = (void *)((char *)a1 + v92);
        uint64_t v94 = (void *)((char *)a2 + v92);
        uint64_t v95 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v94, 1, v95))
        {
          uint64_t v96 = sub_10017DF08(&qword_100E77810);
          memcpy(v93, v94, *(void *)(*(void *)(v96 - 8) + 64));
        }
        else
        {
          *uint64_t v93 = *v94;
          uint64_t v97 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
          uint64_t v98 = (char *)v93 + v97;
          uint64_t v99 = (char *)v94 + v97;
          uint64_t v100 = type metadata accessor for UnitConfiguration.Temperature();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v99, 1, v100))
          {
            uint64_t v101 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
            memcpy(v98, v99, *(void *)(*(void *)(v101 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 32))(v98, v99, v100);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 0, 1, v100);
          }
          uint64_t v102 = *(int *)(v95 + 20);
          uint64_t v103 = (char *)v93 + v102;
          uint64_t v104 = (char *)v94 + v102;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v104, 1, v100))
          {
            uint64_t v105 = sub_10017DF08(&qword_100E6F620);
            memcpy(v103, v104, *(void *)(*(void *)(v105 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 32))(v103, v104, v100);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v103, 0, 1, v100);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v93, 0, 1, v95);
        }
        uint64_t v106 = v62[8];
        uint64_t v107 = (void *)((char *)a1 + v106);
        uint64_t v108 = (void *)((char *)a2 + v106);
        uint64_t v109 = sub_10017DF08(&qword_100E775E0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v108, 1, v109))
        {
          uint64_t v110 = sub_10017DF08(&qword_100E77818);
          memcpy(v107, v108, *(void *)(*(void *)(v110 - 8) + 64));
        }
        else
        {
          *uint64_t v107 = *v108;
          uint64_t v111 = *(int *)(v109 + 36);
          uint64_t v112 = (char *)v107 + v111;
          uint64_t v113 = (char *)v108 + v111;
          uint64_t v114 = type metadata accessor for UnitConfiguration.WindSpeed();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 32))(v112, v113, v114);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v107, 0, 1, v109);
        }
        break;
      case 6u:
        *a1 = *a2;
        uint64_t v27 = *(int *)(sub_10017DF08(&qword_100E77670) + 36);
        uint64_t v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        uint64_t v30 = type metadata accessor for UnitConfiguration.Distance();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
        uint64_t v31 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.Full(0);
        uint64_t v32 = v31[5];
        uint64_t v33 = (char *)a1 + v32;
        uint64_t v34 = (char *)a2 + v32;
        *(void *)((char *)a1 + v32) = *(void *)((char *)a2 + v32);
        uint64_t v35 = *(int *)(sub_10017DF08(&qword_100E77648) + 36);
        uint64_t v36 = &v33[v35];
        uint64_t v37 = &v34[v35];
        uint64_t v38 = type metadata accessor for UnitConfiguration.Precipitation();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
        uint64_t v39 = v31[6];
        uint64_t v40 = (char *)a1 + v39;
        uint64_t v41 = (char *)a2 + v39;
        *(void *)((char *)a1 + v39) = *(void *)((char *)a2 + v39);
        uint64_t v42 = *(int *)(sub_10017DF08(&qword_100E77630) + 36);
        uint64_t v43 = &v40[v42];
        uint64_t v44 = &v41[v42];
        uint64_t v45 = type metadata accessor for UnitConfiguration.Pressure();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
        uint64_t v46 = v31[7];
        uint64_t v47 = (char *)a1 + v46;
        uint64_t v48 = (char *)a2 + v46;
        *(void *)((char *)a1 + v46) = *(void *)((char *)a2 + v46);
        uint64_t v49 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
        long long v50 = &v47[v49];
        uint64_t v51 = &v48[v49];
        uint64_t v52 = type metadata accessor for UnitConfiguration.Temperature();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v52))
        {
          uint64_t v53 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
          memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 0, 1, v52);
        }
        uint64_t v68 = *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
        uint64_t v69 = &v47[v68];
        uint64_t v70 = &v48[v68];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v48[v68], 1, v52))
        {
          uint64_t v71 = sub_10017DF08(&qword_100E6F620);
          memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v69, v70, v52);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v69, 0, 1, v52);
        }
        uint64_t v81 = v31[8];
        uint64_t v82 = (char *)a1 + v81;
        uint64_t v83 = (char *)a2 + v81;
        *(void *)((char *)a1 + v81) = *(void *)((char *)a2 + v81);
        uint64_t v84 = *(int *)(sub_10017DF08(&qword_100E775E0) + 36);
        uint64_t v85 = &v82[v84];
        uint64_t v86 = &v83[v84];
        uint64_t v87 = type metadata accessor for UnitConfiguration.WindSpeed();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 32))(v85, v86, v87);
        *((unsigned char *)a1 + v31[9]) = *((unsigned char *)a2 + v31[9]);
        *((unsigned char *)a1 + v31[10]) = *((unsigned char *)a2 + v31[10]);
        break;
      default:
        *a1 = *a2;
        uint64_t v4 = *(int *)(sub_10017DF08(&qword_100E77670) + 36);
        uint64_t v5 = (char *)a1 + v4;
        uint64_t v6 = (char *)a2 + v4;
        uint64_t v7 = type metadata accessor for UnitConfiguration.Distance();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10083FCD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10083FCE4);
}

uint64_t sub_10083FCE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnitsConfigurationViewModel.Representation(0);

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_10083FD2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10083FD40);
}

uint64_t sub_10083FD40()
{
  type metadata accessor for UnitsConfigurationViewModel.Representation(0);
  sub_100162B34();
  sub_1001650E4();

  return _s7Weather24LocationCompositionStateOwst_0(v0, v1, v2, v3);
}

uint64_t type metadata accessor for UnitsConfigurationViewModel(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E9ACE8);
}

uint64_t sub_10083FDA4()
{
  uint64_t result = type metadata accessor for UnitsConfigurationViewModel.Representation(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_10083FE30(void *a1, void *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E77670) + 36);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnitConfiguration.Distance();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[5];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
    swift_bridgeObjectRetain();
    uint64_t v15 = *(int *)(sub_10017DF08(&qword_100E77648) + 36);
    uint64_t v16 = &v13[v15];
    uint64_t v17 = &v14[v15];
    uint64_t v18 = type metadata accessor for UnitConfiguration.Precipitation();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    uint64_t v19 = a3[6];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    *(void *)((char *)a1 + v19) = *(void *)((char *)a2 + v19);
    swift_bridgeObjectRetain();
    uint64_t v22 = *(int *)(sub_10017DF08(&qword_100E77630) + 36);
    uint64_t v23 = &v20[v22];
    uint64_t v24 = &v21[v22];
    uint64_t v25 = type metadata accessor for UnitConfiguration.Pressure();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    uint64_t v26 = a3[7];
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    *(void *)((char *)a1 + v26) = *(void *)((char *)a2 + v26);
    swift_bridgeObjectRetain();
    uint64_t v29 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
    uint64_t v30 = &v27[v29];
    uint64_t v31 = &v28[v29];
    uint64_t v32 = type metadata accessor for UnitConfiguration.Temperature();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v32))
    {
      uint64_t v33 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
      memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v32);
    }
    uint64_t v34 = *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
    uint64_t v35 = &v27[v34];
    uint64_t v36 = &v28[v34];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v28[v34], 1, v32))
    {
      uint64_t v37 = sub_10017DF08(&qword_100E6F620);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v35, v36, v32);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v32);
    }
    uint64_t v38 = a3[8];
    uint64_t v39 = (char *)a1 + v38;
    uint64_t v40 = (char *)a2 + v38;
    *(void *)((char *)a1 + v38) = *(void *)((char *)a2 + v38);
    swift_bridgeObjectRetain();
    uint64_t v41 = *(int *)(sub_10017DF08(&qword_100E775E0) + 36);
    uint64_t v42 = &v39[v41];
    uint64_t v43 = &v40[v41];
    uint64_t v44 = type metadata accessor for UnitConfiguration.WindSpeed();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
    uint64_t v45 = a3[10];
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *((unsigned char *)a1 + v45) = *((unsigned char *)a2 + v45);
  }
  return a1;
}

uint64_t sub_1008401D8(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(sub_10017DF08(&qword_100E77670) + 36);
  uint64_t v5 = type metadata accessor for UnitConfiguration.Distance();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[5];
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + *(int *)(sub_10017DF08(&qword_100E77648) + 36);
  uint64_t v8 = type metadata accessor for UnitConfiguration.Precipitation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[6];
  swift_bridgeObjectRelease();
  uint64_t v10 = v9 + *(int *)(sub_10017DF08(&qword_100E77630) + 36);
  uint64_t v11 = type metadata accessor for UnitConfiguration.Pressure();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = a1 + a2[7];
  swift_bridgeObjectRelease();
  uint64_t v13 = v12 + *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
  uint64_t v14 = type metadata accessor for UnitConfiguration.Temperature();
  if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  uint64_t v15 = v12 + *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
  if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v15, v14);
  }
  uint64_t v16 = a1 + a2[8];
  swift_bridgeObjectRelease();
  uint64_t v17 = v16 + *(int *)(sub_10017DF08(&qword_100E775E0) + 36);
  uint64_t v18 = type metadata accessor for UnitConfiguration.WindSpeed();
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);

  return v19(v17, v18);
}

void *sub_100840448(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  uint64_t v6 = *(int *)(sub_10017DF08(&qword_100E77670) + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnitConfiguration.Distance();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[5];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  swift_bridgeObjectRetain();
  uint64_t v13 = *(int *)(sub_10017DF08(&qword_100E77648) + 36);
  uint64_t v14 = &v11[v13];
  uint64_t v15 = &v12[v13];
  uint64_t v16 = type metadata accessor for UnitConfiguration.Precipitation();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = a3[6];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  swift_bridgeObjectRetain();
  uint64_t v20 = *(int *)(sub_10017DF08(&qword_100E77630) + 36);
  uint64_t v21 = &v18[v20];
  uint64_t v22 = &v19[v20];
  uint64_t v23 = type metadata accessor for UnitConfiguration.Pressure();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  uint64_t v24 = a3[7];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  *(void *)((char *)a1 + v24) = *(void *)((char *)a2 + v24);
  swift_bridgeObjectRetain();
  uint64_t v27 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
  uint64_t v28 = &v25[v27];
  uint64_t v29 = &v26[v27];
  uint64_t v30 = type metadata accessor for UnitConfiguration.Temperature();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
  {
    uint64_t v31 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
    memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
  }
  uint64_t v32 = *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
  uint64_t v33 = &v25[v32];
  uint64_t v34 = &v26[v32];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v26[v32], 1, v30))
  {
    uint64_t v35 = sub_10017DF08(&qword_100E6F620);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v33, v34, v30);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v30);
  }
  uint64_t v36 = a3[8];
  uint64_t v37 = (char *)a1 + v36;
  uint64_t v38 = (char *)a2 + v36;
  *(void *)((char *)a1 + v36) = *(void *)((char *)a2 + v36);
  swift_bridgeObjectRetain();
  uint64_t v39 = *(int *)(sub_10017DF08(&qword_100E775E0) + 36);
  uint64_t v40 = &v37[v39];
  uint64_t v41 = &v38[v39];
  uint64_t v42 = type metadata accessor for UnitConfiguration.WindSpeed();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *((unsigned char *)a1 + v43) = *((unsigned char *)a2 + v43);
  return a1;
}

void *sub_1008407A8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(sub_10017DF08(&qword_100E77670) + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnitConfiguration.Distance();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[5];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(int *)(sub_10017DF08(&qword_100E77648) + 36);
  uint64_t v14 = &v11[v13];
  uint64_t v15 = &v12[v13];
  uint64_t v16 = type metadata accessor for UnitConfiguration.Precipitation();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = a3[6];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = *(int *)(sub_10017DF08(&qword_100E77630) + 36);
  uint64_t v21 = &v18[v20];
  uint64_t v22 = &v19[v20];
  uint64_t v23 = type metadata accessor for UnitConfiguration.Pressure();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 24))(v21, v22, v23);
  uint64_t v24 = a3[7];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  *(void *)((char *)a1 + v24) = *(void *)((char *)a2 + v24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
  uint64_t v28 = &v25[v27];
  uint64_t v29 = &v26[v27];
  uint64_t v30 = type metadata accessor for UnitConfiguration.Temperature();
  int v31 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v30);
  int v32 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v33 = *(void *)(v30 - 8);
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v28, v30);
LABEL_6:
    uint64_t v34 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
    memcpy(v28, v29, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 24))(v28, v29, v30);
LABEL_7:
  uint64_t v35 = *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
  uint64_t v36 = &v25[v35];
  uint64_t v37 = &v26[v35];
  int v38 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v25[v35], 1, v30);
  int v39 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v30);
  if (!v38)
  {
    uint64_t v40 = *(void *)(v30 - 8);
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 24))(v36, v37, v30);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v40 + 8))(v36, v30);
    goto LABEL_12;
  }
  if (v39)
  {
LABEL_12:
    uint64_t v41 = sub_10017DF08(&qword_100E6F620);
    memcpy(v36, v37, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v36, v37, v30);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v30);
LABEL_13:
  uint64_t v42 = a3[8];
  uint64_t v43 = (char *)a1 + v42;
  uint64_t v44 = (char *)a2 + v42;
  *(void *)((char *)a1 + v42) = *(void *)((char *)a2 + v42);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v45 = *(int *)(sub_10017DF08(&qword_100E775E0) + 36);
  uint64_t v46 = &v43[v45];
  uint64_t v47 = &v44[v45];
  uint64_t v48 = type metadata accessor for UnitConfiguration.WindSpeed();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 24))(v46, v47, v48);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  return a1;
}

void *sub_100840C50(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(sub_10017DF08(&qword_100E77670) + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnitConfiguration.Distance();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[5];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  uint64_t v13 = *(int *)(sub_10017DF08(&qword_100E77648) + 36);
  uint64_t v14 = &v11[v13];
  uint64_t v15 = &v12[v13];
  uint64_t v16 = type metadata accessor for UnitConfiguration.Precipitation();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  uint64_t v17 = a3[6];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  uint64_t v20 = *(int *)(sub_10017DF08(&qword_100E77630) + 36);
  uint64_t v21 = &v18[v20];
  uint64_t v22 = &v19[v20];
  uint64_t v23 = type metadata accessor for UnitConfiguration.Pressure();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  uint64_t v24 = a3[7];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  *(void *)((char *)a1 + v24) = *(void *)((char *)a2 + v24);
  uint64_t v27 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
  uint64_t v28 = &v25[v27];
  uint64_t v29 = &v26[v27];
  uint64_t v30 = type metadata accessor for UnitConfiguration.Temperature();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
  {
    uint64_t v31 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
    memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
  }
  uint64_t v32 = *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
  uint64_t v33 = &v25[v32];
  uint64_t v34 = &v26[v32];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v26[v32], 1, v30))
  {
    uint64_t v35 = sub_10017DF08(&qword_100E6F620);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v33, v34, v30);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v30);
  }
  uint64_t v36 = a3[8];
  uint64_t v37 = (char *)a1 + v36;
  int v38 = (char *)a2 + v36;
  *(void *)((char *)a1 + v36) = *(void *)((char *)a2 + v36);
  uint64_t v39 = *(int *)(sub_10017DF08(&qword_100E775E0) + 36);
  uint64_t v40 = &v37[v39];
  uint64_t v41 = &v38[v39];
  uint64_t v42 = type metadata accessor for UnitConfiguration.WindSpeed();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *((unsigned char *)a1 + v43) = *((unsigned char *)a2 + v43);
  return a1;
}

void *sub_100840F9C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(sub_10017DF08(&qword_100E77670) + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnitConfiguration.Distance();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[5];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  swift_bridgeObjectRelease();
  uint64_t v13 = *(int *)(sub_10017DF08(&qword_100E77648) + 36);
  uint64_t v14 = &v11[v13];
  uint64_t v15 = &v12[v13];
  uint64_t v16 = type metadata accessor for UnitConfiguration.Precipitation();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = a3[6];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  swift_bridgeObjectRelease();
  uint64_t v20 = *(int *)(sub_10017DF08(&qword_100E77630) + 36);
  uint64_t v21 = &v18[v20];
  uint64_t v22 = &v19[v20];
  uint64_t v23 = type metadata accessor for UnitConfiguration.Pressure();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  uint64_t v24 = a3[7];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  *(void *)((char *)a1 + v24) = *(void *)((char *)a2 + v24);
  swift_bridgeObjectRelease();
  uint64_t v27 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
  uint64_t v28 = &v25[v27];
  uint64_t v29 = &v26[v27];
  uint64_t v30 = type metadata accessor for UnitConfiguration.Temperature();
  int v31 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v30);
  int v32 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v33 = *(void *)(v30 - 8);
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v28, v30);
LABEL_6:
    uint64_t v34 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
    memcpy(v28, v29, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 40))(v28, v29, v30);
LABEL_7:
  uint64_t v35 = *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
  uint64_t v36 = &v25[v35];
  uint64_t v37 = &v26[v35];
  int v38 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v25[v35], 1, v30);
  int v39 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v30);
  if (!v38)
  {
    uint64_t v40 = *(void *)(v30 - 8);
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 40))(v36, v37, v30);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v40 + 8))(v36, v30);
    goto LABEL_12;
  }
  if (v39)
  {
LABEL_12:
    uint64_t v41 = sub_10017DF08(&qword_100E6F620);
    memcpy(v36, v37, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v36, v37, v30);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v30);
LABEL_13:
  uint64_t v42 = a3[8];
  uint64_t v43 = (char *)a1 + v42;
  uint64_t v44 = (char *)a2 + v42;
  *(void *)((char *)a1 + v42) = *(void *)((char *)a2 + v42);
  swift_bridgeObjectRelease();
  uint64_t v45 = *(int *)(sub_10017DF08(&qword_100E775E0) + 36);
  uint64_t v46 = &v43[v45];
  uint64_t v47 = &v44[v45];
  uint64_t v48 = type metadata accessor for UnitConfiguration.WindSpeed();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 40))(v46, v47, v48);
  uint64_t v49 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *((unsigned char *)a1 + v49) = *((unsigned char *)a2 + v49);
  return a1;
}

uint64_t sub_100841418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10084142C);
}

uint64_t sub_10084142C()
{
  sub_100185118();
  sub_10017DF08(&qword_100E77670);
  sub_100162F30();
  if (*(_DWORD *)(v3 + 84) == v0)
  {
    uint64_t v4 = sub_1001650F0();
  }
  else
  {
    sub_10017DF08(&qword_100E77648);
    sub_100162F30();
    if (*(_DWORD *)(v7 + 84) == v0)
    {
      uint64_t v5 = v6;
      uint64_t v8 = v2[5];
    }
    else
    {
      sub_10017DF08(&qword_100E77630);
      sub_100162F30();
      if (*(_DWORD *)(v10 + 84) == v0)
      {
        uint64_t v5 = v9;
        uint64_t v8 = v2[6];
      }
      else
      {
        type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
        sub_100162F30();
        if (*(_DWORD *)(v12 + 84) == v0)
        {
          uint64_t v5 = v11;
          uint64_t v8 = v2[7];
        }
        else
        {
          sub_10017DF08(&qword_100E775E0);
          sub_100162F30();
          if (*(_DWORD *)(v14 + 84) != v0)
          {
            unsigned int v16 = *(unsigned __int8 *)(v1 + v2[9]);
            if (v16 >= 2) {
              return ((v16 + 2147483646) & 0x7FFFFFFF) + 1;
            }
            else {
              return 0;
            }
          }
          uint64_t v5 = v13;
          uint64_t v8 = v2[8];
        }
      }
    }
    uint64_t v4 = v1 + v8;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v4, v0, v5);
}

uint64_t sub_100841560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100841574);
}

void sub_100841574()
{
  sub_100150288();
  sub_10017DF08(&qword_100E77670);
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    sub_100162B34();
  }
  else
  {
    sub_10017DF08(&qword_100E77648);
    sub_100162F30();
    if (*(_DWORD *)(v5 + 84) != v3)
    {
      sub_10017DF08(&qword_100E77630);
      sub_100162F30();
      if (*(_DWORD *)(v6 + 84) != v3)
      {
        type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
        sub_100162F30();
        if (*(_DWORD *)(v7 + 84) != v3)
        {
          sub_10017DF08(&qword_100E775E0);
          sub_100162F30();
          if (*(_DWORD *)(v8 + 84) != v3)
          {
            *(unsigned char *)(v1 + *(int *)(v2 + 36)) = v0 + 1;
            return;
          }
        }
      }
    }
  }
  sub_1001650E4();

  _s7Weather24LocationCompositionStateOwst_0(v9, v10, v11, v12);
}

void sub_10084168C()
{
  sub_100841814();
  if (v0 <= 0x3F)
  {
    sub_1008418C0();
    if (v1 <= 0x3F)
    {
      sub_10084199C();
      if (v2 <= 0x3F)
      {
        type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(319);
        if (v3 <= 0x3F)
        {
          sub_100841A30();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_100841814()
{
  if (!qword_100E9AD88)
  {
    type metadata accessor for UnitConfiguration.Distance();
    sub_100841954(&qword_100E9AD90, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Distance);
    unint64_t v0 = type metadata accessor for UnitsConfigurationViewModel.Configuration();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E9AD88);
    }
  }
}

uint64_t type metadata accessor for UnitsConfigurationViewModel.Configuration()
{
  return sub_100109098();
}

void sub_1008418C0()
{
  if (!qword_100E9AD98)
  {
    type metadata accessor for UnitConfiguration.Precipitation();
    sub_100841954(&qword_100E9ADA0, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Precipitation);
    unint64_t v0 = type metadata accessor for UnitsConfigurationViewModel.Configuration();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E9AD98);
    }
  }
}

uint64_t sub_100841954(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10084199C()
{
  if (!qword_100E9ADA8)
  {
    type metadata accessor for UnitConfiguration.Pressure();
    sub_100841954(&qword_100E9ADB0, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Pressure);
    unint64_t v0 = type metadata accessor for UnitsConfigurationViewModel.Configuration();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E9ADA8);
    }
  }
}

void sub_100841A30()
{
  if (!qword_100E9ADB8)
  {
    type metadata accessor for UnitConfiguration.WindSpeed();
    sub_100841954((unint64_t *)&unk_100E9ADC0, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.WindSpeed);
    unint64_t v0 = type metadata accessor for UnitsConfigurationViewModel.Configuration();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E9ADB8);
    }
  }
}

uint64_t *sub_100841AC4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10017DF08(&qword_100E77670);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_10017DF08(&qword_100E777F8);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v10 = *(int *)(v7 + 36);
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = type metadata accessor for UnitConfiguration.Distance();
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      v14(v11, v12, v13);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v15 = a3[5];
    unsigned int v16 = (uint64_t *)((char *)a1 + v15);
    uint64_t v17 = (uint64_t *)((char *)a2 + v15);
    uint64_t v18 = sub_10017DF08(&qword_100E77648);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
    {
      uint64_t v19 = sub_10017DF08(&qword_100E77800);
      memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      void *v16 = *v17;
      uint64_t v20 = *(int *)(v18 + 36);
      uint64_t v21 = (char *)v16 + v20;
      uint64_t v58 = (char *)v17 + v20;
      uint64_t v22 = type metadata accessor for UnitConfiguration.Precipitation();
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
      swift_bridgeObjectRetain();
      v23(v21, v58, v22);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
    }
    uint64_t v24 = a3[6];
    uint64_t v25 = (uint64_t *)((char *)a1 + v24);
    uint64_t v26 = (uint64_t *)((char *)a2 + v24);
    uint64_t v27 = sub_10017DF08(&qword_100E77630);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27))
    {
      uint64_t v28 = sub_10017DF08(&qword_100E77808);
      memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      *uint64_t v25 = *v26;
      uint64_t v29 = *(int *)(v27 + 36);
      uint64_t v30 = (char *)v25 + v29;
      uint64_t v59 = (char *)v26 + v29;
      uint64_t v31 = type metadata accessor for UnitConfiguration.Pressure();
      int v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
      swift_bridgeObjectRetain();
      v32(v30, v59, v31);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
    }
    uint64_t v33 = a3[7];
    uint64_t v34 = (uint64_t *)((char *)a1 + v33);
    uint64_t v35 = (uint64_t *)((char *)a2 + v33);
    uint64_t v36 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v36))
    {
      uint64_t v37 = sub_10017DF08(&qword_100E77810);
      memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      *uint64_t v34 = *v35;
      swift_bridgeObjectRetain();
      uint64_t v38 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
      int v39 = (char *)v34 + v38;
      uint64_t v40 = (char *)v35 + v38;
      uint64_t v41 = type metadata accessor for UnitConfiguration.Temperature();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
      {
        uint64_t v42 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
        memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
      }
      uint64_t v43 = *(int *)(v36 + 20);
      uint64_t v44 = (char *)v34 + v43;
      uint64_t v45 = (char *)v35 + v43;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v41))
      {
        uint64_t v46 = sub_10017DF08(&qword_100E6F620);
        memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v44, v45, v41);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v41);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v36);
    }
    uint64_t v47 = a3[8];
    uint64_t v48 = (uint64_t *)((char *)a1 + v47);
    uint64_t v49 = (uint64_t *)((char *)a2 + v47);
    uint64_t v50 = sub_10017DF08(&qword_100E775E0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v50))
    {
      uint64_t v51 = sub_10017DF08(&qword_100E77818);
      memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      *uint64_t v48 = *v49;
      uint64_t v52 = *(int *)(v50 + 36);
      uint64_t v53 = (char *)v48 + v52;
      uint64_t v54 = (char *)v49 + v52;
      uint64_t v55 = type metadata accessor for UnitConfiguration.WindSpeed();
      uint64_t v56 = *(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16);
      swift_bridgeObjectRetain();
      v56(v53, v54, v55);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v50);
    }
  }
  return a1;
}

uint64_t sub_100842064(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E77670);
  if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = a1 + *(int *)(v4 + 36);
    uint64_t v6 = type metadata accessor for UnitConfiguration.Distance();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + a2[5];
  uint64_t v8 = sub_10017DF08(&qword_100E77648);
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = v7 + *(int *)(v8 + 36);
    uint64_t v10 = type metadata accessor for UnitConfiguration.Precipitation();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  uint64_t v11 = a1 + a2[6];
  uint64_t v12 = sub_10017DF08(&qword_100E77630);
  if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12))
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = v11 + *(int *)(v12 + 36);
    uint64_t v14 = type metadata accessor for UnitConfiguration.Pressure();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  uint64_t v15 = a1 + a2[7];
  uint64_t v16 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v16))
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = v15 + *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
    uint64_t v18 = type metadata accessor for UnitConfiguration.Temperature();
    if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v18)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
    }
    uint64_t v19 = v15 + *(int *)(v16 + 20);
    if (!_s7Weather24LocationCompositionStateOwet_0(v19, 1, v18)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v19, v18);
    }
  }
  uint64_t v20 = a1 + a2[8];
  uint64_t v21 = sub_10017DF08(&qword_100E775E0);
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v20, 1, v21);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v23 = v20 + *(int *)(v21 + 36);
    uint64_t v24 = type metadata accessor for UnitConfiguration.WindSpeed();
    uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8);
    return v25(v23, v24);
  }
  return result;
}

void *sub_100842360(void *a1, void *a2, int *a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E77670);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_10017DF08(&qword_100E777F8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v8 = *(int *)(v6 + 36);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnitConfiguration.Distance();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v13 = a3[5];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = sub_10017DF08(&qword_100E77648);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
  {
    uint64_t v17 = sub_10017DF08(&qword_100E77800);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    *uint64_t v14 = *v15;
    uint64_t v18 = *(int *)(v16 + 36);
    uint64_t v19 = (char *)v14 + v18;
    uint64_t v59 = (char *)v15 + v18;
    uint64_t v20 = type metadata accessor for UnitConfiguration.Precipitation();
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
    swift_bridgeObjectRetain();
    v21(v19, v59, v20);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
  }
  uint64_t v22 = a3[6];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  uint64_t v25 = sub_10017DF08(&qword_100E77630);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
  {
    uint64_t v26 = sub_10017DF08(&qword_100E77808);
    memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    void *v23 = *v24;
    uint64_t v27 = *(int *)(v25 + 36);
    uint64_t v28 = (char *)v23 + v27;
    uint64_t v60 = (char *)v24 + v27;
    uint64_t v29 = type metadata accessor for UnitConfiguration.Pressure();
    uint64_t v30 = a2;
    uint64_t v31 = a1;
    int v32 = a3;
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
    swift_bridgeObjectRetain();
    v33(v28, v60, v29);
    a3 = v32;
    a1 = v31;
    a2 = v30;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
  }
  uint64_t v34 = a3[7];
  uint64_t v35 = (void *)((char *)a1 + v34);
  uint64_t v36 = (void *)((char *)a2 + v34);
  uint64_t v37 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37))
  {
    uint64_t v38 = sub_10017DF08(&qword_100E77810);
    memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    *uint64_t v35 = *v36;
    swift_bridgeObjectRetain();
    uint64_t v39 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
    uint64_t v40 = (char *)v35 + v39;
    uint64_t v41 = (char *)v36 + v39;
    uint64_t v42 = type metadata accessor for UnitConfiguration.Temperature();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v42))
    {
      uint64_t v43 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
      memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v42);
    }
    uint64_t v44 = *(int *)(v37 + 20);
    uint64_t v45 = (char *)v35 + v44;
    uint64_t v46 = (char *)v36 + v44;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v42))
    {
      uint64_t v47 = sub_10017DF08(&qword_100E6F620);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v45, v46, v42);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v42);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
  }
  uint64_t v48 = a3[8];
  uint64_t v49 = (void *)((char *)a1 + v48);
  uint64_t v50 = (void *)((char *)a2 + v48);
  uint64_t v51 = sub_10017DF08(&qword_100E775E0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v51))
  {
    uint64_t v52 = sub_10017DF08(&qword_100E77818);
    memcpy(v49, v50, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    *uint64_t v49 = *v50;
    uint64_t v53 = *(int *)(v51 + 36);
    uint64_t v54 = (char *)v49 + v53;
    uint64_t v55 = (char *)v50 + v53;
    uint64_t v56 = type metadata accessor for UnitConfiguration.WindSpeed();
    uint64_t v57 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16);
    swift_bridgeObjectRetain();
    v57(v54, v55, v56);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v51);
  }
  return a1;
}

void *sub_1008428E0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E77670);
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *a1 = *a2;
      uint64_t v9 = *(int *)(v6 + 36);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for UnitConfiguration.Distance();
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_1001781AC((uint64_t)a1, &qword_100E77670);
LABEL_6:
    uint64_t v14 = sub_10017DF08(&qword_100E777F8);
    memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v54 = *(int *)(v6 + 36);
  uint64_t v55 = (char *)a1 + v54;
  uint64_t v56 = (char *)a2 + v54;
  uint64_t v57 = type metadata accessor for UnitConfiguration.Distance();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 24))(v55, v56, v57);
LABEL_7:
  uint64_t v15 = a3[5];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v18 = sub_10017DF08(&qword_100E77648);
  int v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v18);
  int v20 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18);
  if (v19)
  {
    if (!v20)
    {
      void *v16 = *v17;
      uint64_t v21 = *(int *)(v18 + 36);
      uint64_t v22 = (char *)v16 + v21;
      uint64_t v103 = (char *)v17 + v21;
      uint64_t v23 = type metadata accessor for UnitConfiguration.Precipitation();
      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
      swift_bridgeObjectRetain();
      v24(v22, v103, v23);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    sub_1001781AC((uint64_t)v16, &qword_100E77648);
LABEL_12:
    uint64_t v25 = sub_10017DF08(&qword_100E77800);
    memcpy(v16, v17, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  void *v16 = *v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v58 = *(int *)(v18 + 36);
  uint64_t v59 = (char *)v16 + v58;
  uint64_t v60 = (char *)v17 + v58;
  uint64_t v61 = type metadata accessor for UnitConfiguration.Precipitation();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 24))(v59, v60, v61);
LABEL_13:
  uint64_t v26 = a3[6];
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (void *)((char *)a2 + v26);
  uint64_t v29 = sub_10017DF08(&qword_100E77630);
  int v30 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v29);
  int v31 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v29);
  if (v30)
  {
    if (!v31)
    {
      *uint64_t v27 = *v28;
      uint64_t v32 = *(int *)(v29 + 36);
      uint64_t v33 = (char *)v27 + v32;
      uint64_t v104 = (char *)v28 + v32;
      uint64_t v34 = type metadata accessor for UnitConfiguration.Pressure();
      uint64_t v35 = a1;
      uint64_t v36 = a2;
      uint64_t v37 = a3;
      uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
      swift_bridgeObjectRetain();
      v38(v33, v104, v34);
      a3 = v37;
      a2 = v36;
      a1 = v35;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v29);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v31)
  {
    sub_1001781AC((uint64_t)v27, &qword_100E77630);
LABEL_18:
    uint64_t v39 = sub_10017DF08(&qword_100E77808);
    memcpy(v27, v28, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_19;
  }
  *uint64_t v27 = *v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v62 = *(int *)(v29 + 36);
  uint64_t v63 = (char *)v27 + v62;
  uint64_t v64 = (char *)v28 + v62;
  uint64_t v65 = type metadata accessor for UnitConfiguration.Pressure();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 24))(v63, v64, v65);
LABEL_19:
  uint64_t v40 = a3[7];
  uint64_t v41 = (void *)((char *)a1 + v40);
  uint64_t v42 = (void *)((char *)a2 + v40);
  uint64_t v43 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
  int v44 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v43);
  int v45 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43);
  if (v44)
  {
    if (!v45)
    {
      *uint64_t v41 = *v42;
      swift_bridgeObjectRetain();
      uint64_t v46 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
      uint64_t v47 = (char *)v41 + v46;
      uint64_t v48 = (char *)v42 + v46;
      uint64_t v49 = type metadata accessor for UnitConfiguration.Temperature();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49))
      {
        uint64_t v50 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
        memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v49);
      }
      uint64_t v72 = *(int *)(v43 + 20);
      uint64_t v73 = (char *)v41 + v72;
      uint64_t v74 = (char *)v42 + v72;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v74, 1, v49))
      {
        uint64_t v75 = sub_10017DF08(&qword_100E6F620);
        memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v73, v74, v49);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v73, 0, 1, v49);
      }
      uint64_t v76 = (uint64_t)v41;
      uint64_t v77 = v43;
      goto LABEL_38;
    }
    goto LABEL_25;
  }
  if (v45)
  {
    sub_100843330((uint64_t)v41, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature);
LABEL_25:
    size_t v51 = *(void *)(*(void *)(sub_10017DF08(&qword_100E77810) - 8) + 64);
    uint64_t v52 = v41;
    uint64_t v53 = v42;
LABEL_26:
    memcpy(v52, v53, v51);
    goto LABEL_39;
  }
  *uint64_t v41 = *v42;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v66 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
  uint64_t v67 = (char *)v41 + v66;
  uint64_t v68 = (char *)v42 + v66;
  uint64_t v69 = type metadata accessor for UnitConfiguration.Temperature();
  int v70 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, v69);
  int v71 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 1, v69);
  if (v70)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v67, 0, 1, v69);
      goto LABEL_50;
    }
    goto LABEL_49;
  }
  uint64_t v95 = *(void *)(v69 - 8);
  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v95 + 8))(v67, v69);
LABEL_49:
    uint64_t v96 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
    memcpy(v67, v68, *(void *)(*(void *)(v96 - 8) + 64));
    goto LABEL_50;
  }
  (*(void (**)(char *, char *, uint64_t))(v95 + 24))(v67, v68, v69);
LABEL_50:
  uint64_t v97 = *(int *)(v43 + 20);
  uint64_t v98 = (uint64_t)v41 + v97;
  uint64_t v99 = (uint64_t)v42 + v97;
  int v100 = _s7Weather24LocationCompositionStateOwet_0(v98, 1, v69);
  int v101 = _s7Weather24LocationCompositionStateOwet_0(v99, 1, v69);
  if (v100)
  {
    if (!v101)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 16))(v98, v99, v69);
      uint64_t v76 = v98;
      uint64_t v77 = v69;
LABEL_38:
      _s7Weather24LocationCompositionStateOwst_0(v76, 0, 1, v77);
      goto LABEL_39;
    }
    goto LABEL_55;
  }
  uint64_t v102 = *(void *)(v69 - 8);
  if (v101)
  {
    (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v98, v69);
LABEL_55:
    size_t v51 = *(void *)(*(void *)(sub_10017DF08(&qword_100E6F620) - 8) + 64);
    uint64_t v52 = (void *)v98;
    uint64_t v53 = (const void *)v99;
    goto LABEL_26;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v102 + 24))(v98, v99, v69);
LABEL_39:
  uint64_t v78 = a3[8];
  uint64_t v79 = (void *)((char *)a1 + v78);
  uint64_t v80 = (void *)((char *)a2 + v78);
  uint64_t v81 = sub_10017DF08(&qword_100E775E0);
  int v82 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v79, 1, v81);
  int v83 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v80, 1, v81);
  if (!v82)
  {
    if (!v83)
    {
      *uint64_t v79 = *v80;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v91 = *(int *)(v81 + 36);
      uint64_t v92 = (char *)v79 + v91;
      uint64_t v93 = (char *)v80 + v91;
      uint64_t v94 = type metadata accessor for UnitConfiguration.WindSpeed();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 24))(v92, v93, v94);
      return a1;
    }
    sub_1001781AC((uint64_t)v79, &qword_100E775E0);
    goto LABEL_44;
  }
  if (v83)
  {
LABEL_44:
    uint64_t v89 = sub_10017DF08(&qword_100E77818);
    memcpy(v79, v80, *(void *)(*(void *)(v89 - 8) + 64));
    return a1;
  }
  *uint64_t v79 = *v80;
  uint64_t v84 = *(int *)(v81 + 36);
  uint64_t v85 = (char *)v79 + v84;
  uint64_t v86 = (char *)v80 + v84;
  uint64_t v87 = type metadata accessor for UnitConfiguration.WindSpeed();
  uint64_t v88 = *(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16);
  swift_bridgeObjectRetain();
  v88(v85, v86, v87);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v79, 0, 1, v81);
  return a1;
}

uint64_t sub_100843330(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

void *sub_100843388(void *a1, void *a2, int *a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E77670);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_10017DF08(&qword_100E777F8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v8 = *(int *)(v6 + 36);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnitConfiguration.Distance();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v12 = a3[5];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = sub_10017DF08(&qword_100E77648);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = sub_10017DF08(&qword_100E77800);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *uint64_t v13 = *v14;
    uint64_t v17 = *(int *)(v15 + 36);
    uint64_t v18 = (char *)v13 + v17;
    int v19 = (char *)v14 + v17;
    uint64_t v20 = type metadata accessor for UnitConfiguration.Precipitation();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
  }
  uint64_t v21 = a3[6];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v24 = sub_10017DF08(&qword_100E77630);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24))
  {
    uint64_t v25 = sub_10017DF08(&qword_100E77808);
    memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    *uint64_t v22 = *v23;
    uint64_t v26 = *(int *)(v24 + 36);
    uint64_t v27 = (char *)v22 + v26;
    uint64_t v28 = (char *)v23 + v26;
    uint64_t v29 = type metadata accessor for UnitConfiguration.Pressure();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v24);
  }
  uint64_t v30 = a3[7];
  int v31 = (void *)((char *)a1 + v30);
  uint64_t v32 = (void *)((char *)a2 + v30);
  uint64_t v33 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v33))
  {
    uint64_t v34 = sub_10017DF08(&qword_100E77810);
    memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    *int v31 = *v32;
    uint64_t v35 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
    uint64_t v36 = (char *)v31 + v35;
    uint64_t v37 = (char *)v32 + v35;
    uint64_t v38 = type metadata accessor for UnitConfiguration.Temperature();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v38))
    {
      uint64_t v39 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
      memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v38);
    }
    uint64_t v40 = *(int *)(v33 + 20);
    uint64_t v41 = (char *)v31 + v40;
    uint64_t v42 = (char *)v32 + v40;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v38))
    {
      uint64_t v43 = sub_10017DF08(&qword_100E6F620);
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v41, v42, v38);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v38);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v33);
  }
  uint64_t v44 = a3[8];
  int v45 = (void *)((char *)a1 + v44);
  uint64_t v46 = (void *)((char *)a2 + v44);
  uint64_t v47 = sub_10017DF08(&qword_100E775E0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v47))
  {
    uint64_t v48 = sub_10017DF08(&qword_100E77818);
    memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
  }
  else
  {
    *int v45 = *v46;
    uint64_t v49 = *(int *)(v47 + 36);
    uint64_t v50 = (char *)v45 + v49;
    size_t v51 = (char *)v46 + v49;
    uint64_t v52 = type metadata accessor for UnitConfiguration.WindSpeed();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v47);
  }
  return a1;
}

void *sub_100843894(void *a1, void *a2, int *a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E77670);
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *a1 = *a2;
      uint64_t v9 = *(int *)(v6 + 36);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for UnitConfiguration.Distance();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_1001781AC((uint64_t)a1, &qword_100E77670);
LABEL_6:
    uint64_t v13 = sub_10017DF08(&qword_100E777F8);
    memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v50 = *(int *)(v6 + 36);
  size_t v51 = (char *)a1 + v50;
  uint64_t v52 = (char *)a2 + v50;
  uint64_t v53 = type metadata accessor for UnitConfiguration.Distance();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 40))(v51, v52, v53);
LABEL_7:
  uint64_t v14 = a3[5];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = sub_10017DF08(&qword_100E77648);
  int v18 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v17);
  int v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17);
  if (v18)
  {
    if (!v19)
    {
      *uint64_t v15 = *v16;
      uint64_t v20 = *(int *)(v17 + 36);
      uint64_t v21 = (char *)v15 + v20;
      uint64_t v22 = (char *)v16 + v20;
      uint64_t v23 = type metadata accessor for UnitConfiguration.Precipitation();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    sub_1001781AC((uint64_t)v15, &qword_100E77648);
LABEL_12:
    uint64_t v24 = sub_10017DF08(&qword_100E77800);
    memcpy(v15, v16, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  *uint64_t v15 = *v16;
  swift_bridgeObjectRelease();
  uint64_t v54 = *(int *)(v17 + 36);
  uint64_t v55 = (char *)v15 + v54;
  uint64_t v56 = (char *)v16 + v54;
  uint64_t v57 = type metadata accessor for UnitConfiguration.Precipitation();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 40))(v55, v56, v57);
LABEL_13:
  uint64_t v25 = a3[6];
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (void *)((char *)a2 + v25);
  uint64_t v28 = sub_10017DF08(&qword_100E77630);
  int v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v28);
  int v30 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28);
  if (v29)
  {
    if (!v30)
    {
      *uint64_t v26 = *v27;
      uint64_t v31 = *(int *)(v28 + 36);
      uint64_t v32 = (char *)v26 + v31;
      uint64_t v33 = (char *)v27 + v31;
      uint64_t v34 = type metadata accessor for UnitConfiguration.Pressure();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v30)
  {
    sub_1001781AC((uint64_t)v26, &qword_100E77630);
LABEL_18:
    uint64_t v35 = sub_10017DF08(&qword_100E77808);
    memcpy(v26, v27, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_19;
  }
  *uint64_t v26 = *v27;
  swift_bridgeObjectRelease();
  uint64_t v58 = *(int *)(v28 + 36);
  uint64_t v59 = (char *)v26 + v58;
  uint64_t v60 = (char *)v27 + v58;
  uint64_t v61 = type metadata accessor for UnitConfiguration.Pressure();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 40))(v59, v60, v61);
LABEL_19:
  uint64_t v36 = a3[7];
  uint64_t v37 = (void *)((char *)a1 + v36);
  uint64_t v38 = (void *)((char *)a2 + v36);
  uint64_t v39 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
  int v40 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v39);
  int v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39);
  if (v40)
  {
    if (!v41)
    {
      *uint64_t v37 = *v38;
      uint64_t v42 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
      uint64_t v43 = (char *)v37 + v42;
      uint64_t v44 = (char *)v38 + v42;
      uint64_t v45 = type metadata accessor for UnitConfiguration.Temperature();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45))
      {
        uint64_t v46 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
        memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
      }
      uint64_t v68 = *(int *)(v39 + 20);
      uint64_t v69 = (char *)v37 + v68;
      int v70 = (char *)v38 + v68;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v70, 1, v45))
      {
        uint64_t v71 = sub_10017DF08(&qword_100E6F620);
        memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v69, v70, v45);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v69, 0, 1, v45);
      }
      uint64_t v72 = (uint64_t)v37;
      uint64_t v73 = v39;
      goto LABEL_38;
    }
    goto LABEL_25;
  }
  if (v41)
  {
    sub_100843330((uint64_t)v37, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature);
LABEL_25:
    size_t v47 = *(void *)(*(void *)(sub_10017DF08(&qword_100E77810) - 8) + 64);
    uint64_t v48 = v37;
    uint64_t v49 = v38;
LABEL_26:
    memcpy(v48, v49, v47);
    goto LABEL_39;
  }
  *uint64_t v37 = *v38;
  swift_bridgeObjectRelease();
  uint64_t v62 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
  uint64_t v63 = (char *)v37 + v62;
  uint64_t v64 = (char *)v38 + v62;
  uint64_t v65 = type metadata accessor for UnitConfiguration.Temperature();
  int v66 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, v65);
  int v67 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v65);
  if (v66)
  {
    if (!v67)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 32))(v63, v64, v65);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v63, 0, 1, v65);
      goto LABEL_50;
    }
    goto LABEL_49;
  }
  uint64_t v90 = *(void *)(v65 - 8);
  if (v67)
  {
    (*(void (**)(char *, uint64_t))(v90 + 8))(v63, v65);
LABEL_49:
    uint64_t v91 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
    memcpy(v63, v64, *(void *)(*(void *)(v91 - 8) + 64));
    goto LABEL_50;
  }
  (*(void (**)(char *, char *, uint64_t))(v90 + 40))(v63, v64, v65);
LABEL_50:
  uint64_t v92 = *(int *)(v39 + 20);
  uint64_t v93 = (uint64_t)v37 + v92;
  uint64_t v94 = (uint64_t)v38 + v92;
  int v95 = _s7Weather24LocationCompositionStateOwet_0(v93, 1, v65);
  int v96 = _s7Weather24LocationCompositionStateOwet_0(v94, 1, v65);
  if (v95)
  {
    if (!v96)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 32))(v93, v94, v65);
      uint64_t v72 = v93;
      uint64_t v73 = v65;
LABEL_38:
      _s7Weather24LocationCompositionStateOwst_0(v72, 0, 1, v73);
      goto LABEL_39;
    }
    goto LABEL_55;
  }
  uint64_t v97 = *(void *)(v65 - 8);
  if (v96)
  {
    (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v93, v65);
LABEL_55:
    size_t v47 = *(void *)(*(void *)(sub_10017DF08(&qword_100E6F620) - 8) + 64);
    uint64_t v48 = (void *)v93;
    uint64_t v49 = (const void *)v94;
    goto LABEL_26;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 40))(v93, v94, v65);
LABEL_39:
  uint64_t v74 = a3[8];
  uint64_t v75 = (void *)((char *)a1 + v74);
  uint64_t v76 = (void *)((char *)a2 + v74);
  uint64_t v77 = sub_10017DF08(&qword_100E775E0);
  int v78 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v75, 1, v77);
  int v79 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v76, 1, v77);
  if (!v78)
  {
    if (!v79)
    {
      *uint64_t v75 = *v76;
      swift_bridgeObjectRelease();
      uint64_t v86 = *(int *)(v77 + 36);
      uint64_t v87 = (char *)v75 + v86;
      uint64_t v88 = (char *)v76 + v86;
      uint64_t v89 = type metadata accessor for UnitConfiguration.WindSpeed();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 40))(v87, v88, v89);
      return a1;
    }
    sub_1001781AC((uint64_t)v75, &qword_100E775E0);
    goto LABEL_44;
  }
  if (v79)
  {
LABEL_44:
    uint64_t v84 = sub_10017DF08(&qword_100E77818);
    memcpy(v75, v76, *(void *)(*(void *)(v84 - 8) + 64));
    return a1;
  }
  *uint64_t v75 = *v76;
  uint64_t v80 = *(int *)(v77 + 36);
  uint64_t v81 = (char *)v75 + v80;
  int v82 = (char *)v76 + v80;
  uint64_t v83 = type metadata accessor for UnitConfiguration.WindSpeed();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 32))(v81, v82, v83);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v75, 0, 1, v77);
  return a1;
}

uint64_t sub_100844248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10084425C);
}

uint64_t sub_10084425C()
{
  sub_100185118();
  sub_10017DF08(&qword_100E777F8);
  sub_100162F30();
  if (*(_DWORD *)(v3 + 84) == v0)
  {
    uint64_t v4 = sub_1001650F0();
  }
  else
  {
    sub_10017DF08(&qword_100E77800);
    sub_100162F30();
    if (*(_DWORD *)(v7 + 84) == v0)
    {
      uint64_t v5 = v6;
      uint64_t v8 = v2[5];
    }
    else
    {
      sub_10017DF08(&qword_100E77808);
      sub_100162F30();
      if (*(_DWORD *)(v10 + 84) == v0)
      {
        uint64_t v5 = v9;
        uint64_t v8 = v2[6];
      }
      else
      {
        sub_10017DF08(&qword_100E77810);
        sub_100162F30();
        if (*(_DWORD *)(v12 + 84) == v0)
        {
          uint64_t v5 = v11;
          uint64_t v8 = v2[7];
        }
        else
        {
          uint64_t v5 = sub_10017DF08(&qword_100E77818);
          uint64_t v8 = v2[8];
        }
      }
    }
    uint64_t v4 = v1 + v8;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v4, v0, v5);
}

uint64_t sub_10084434C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100844360);
}

uint64_t sub_100844360()
{
  sub_100150288();
  sub_10017DF08(&qword_100E777F8);
  sub_100162F30();
  if (*(_DWORD *)(v1 + 84) == v0)
  {
    sub_100162B34();
  }
  else
  {
    sub_10017DF08(&qword_100E77800);
    sub_100162F30();
    if (*(_DWORD *)(v2 + 84) != v0)
    {
      sub_10017DF08(&qword_100E77808);
      sub_100162F30();
      if (*(_DWORD *)(v3 + 84) != v0)
      {
        sub_10017DF08(&qword_100E77810);
        sub_100162F30();
        if (*(_DWORD *)(v4 + 84) != v0) {
          sub_10017DF08(&qword_100E77818);
        }
      }
    }
  }
  sub_1001650E4();

  return _s7Weather24LocationCompositionStateOwst_0(v5, v6, v7, v8);
}

void sub_100844450()
{
  sub_100017E34(319, &qword_100E9AE70, &qword_100E77670);
  if (v0 <= 0x3F)
  {
    sub_100017E34(319, &qword_100E9AE78, &qword_100E77648);
    if (v1 <= 0x3F)
    {
      sub_100017E34(319, &qword_100E9AE80, &qword_100E77630);
      if (v2 <= 0x3F)
      {
        sub_100845344(319, &qword_100E9AE88, (void (*)(uint64_t))type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature);
        if (v3 <= 0x3F)
        {
          sub_100017E34(319, (unint64_t *)&unk_100E9AE90, &qword_100E775E0);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t *sub_100844628(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnitConfiguration.Temperature();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v13 = *(int *)(a3 + 20);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v11))
    {
      uint64_t v16 = sub_10017DF08(&qword_100E6F620);
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v14, v15, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_1008447FC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
  uint64_t v5 = type metadata accessor for UnitConfiguration.Temperature();
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v6, 1, v5);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v8(v6, v5);
  }
  return result;
}

void *sub_1008448FC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  uint64_t v6 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnitConfiguration.Temperature();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v9))
  {
    uint64_t v14 = sub_10017DF08(&qword_100E6F620);
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v12, v13, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v9);
  }
  return a1;
}

void *sub_100844A88(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnitConfiguration.Temperature();
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  int v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1 + v14, 1, v9);
  int v18 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v9);
  if (!v17)
  {
    uint64_t v19 = *(void *)(v9 - 8);
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v15, v16, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v15, v9);
    goto LABEL_12;
  }
  if (v18)
  {
LABEL_12:
    uint64_t v20 = sub_10017DF08(&qword_100E6F620);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v15, v16, v9);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v9);
  return a1;
}

void *sub_100844D28(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnitConfiguration.Temperature();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v9))
  {
    uint64_t v14 = sub_10017DF08(&qword_100E6F620);
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v12, v13, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v9);
  }
  return a1;
}

void *sub_100844EB0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnitConfiguration.Temperature();
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  int v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1 + v14, 1, v9);
  int v18 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v9);
  if (!v17)
  {
    uint64_t v19 = *(void *)(v9 - 8);
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v15, v16, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v15, v9);
    goto LABEL_12;
  }
  if (v18)
  {
LABEL_12:
    uint64_t v20 = sub_10017DF08(&qword_100E6F620);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v15, v16, v9);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v9);
  return a1;
}

uint64_t sub_100845148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10084515C);
}

uint64_t sub_10084515C()
{
  sub_100185118();
  sub_10017DF08(&qword_100E775E8);
  sub_100162F30();
  if (*(_DWORD *)(v3 + 84) == v0)
  {
    uint64_t v4 = sub_1001650F0();
  }
  else
  {
    uint64_t v5 = sub_10017DF08(&qword_100E6F620);
    uint64_t v4 = v1 + *(int *)(v2 + 20);
  }

  return _s7Weather24LocationCompositionStateOwet_0(v4, v0, v5);
}

uint64_t sub_1008451D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1008451E8);
}

uint64_t sub_1008451E8()
{
  sub_100150288();
  sub_10017DF08(&qword_100E775E8);
  sub_100162F30();
  if (*(_DWORD *)(v1 + 84) == v0) {
    sub_100162B34();
  }
  else {
    sub_10017DF08(&qword_100E6F620);
  }
  sub_1001650E4();

  return _s7Weather24LocationCompositionStateOwst_0(v2, v3, v4, v5);
}

void sub_100845260()
{
  sub_1004731F8();
  if (v0 <= 0x3F)
  {
    sub_100845344(319, (unint64_t *)&qword_100E77B98, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Temperature);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100845344(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t *sub_100845398(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = type metadata accessor for UnitConfiguration.Temperature();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_100845494(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UnitConfiguration.Temperature();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
  if (!result)
  {
    unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v4(a1, v2);
  }
  return result;
}

void *sub_10084551C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnitConfiguration.Temperature();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1008455DC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnitConfiguration.Temperature();
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

void *sub_100845724(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnitConfiguration.Temperature();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1008457E4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnitConfiguration.Temperature();
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

uint64_t sub_10084592C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100845940);
}

uint64_t sub_100845940(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnitConfiguration.Temperature();
  unsigned int v5 = _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_100845988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10084599C);
}

uint64_t sub_10084599C(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v4 = (a2 + 1);
  }
  else {
    uint64_t v4 = 0;
  }
  type metadata accessor for UnitConfiguration.Temperature();
  uint64_t v5 = sub_100162B34();

  return _s7Weather24LocationCompositionStateOwst_0(v5, v4, a3, v6);
}

uint64_t sub_1008459F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UnitConfiguration.Temperature();

  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
}

uint64_t sub_100845A38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnitConfiguration.Temperature();

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v4);
}

uint64_t sub_100845A84()
{
  uint64_t result = type metadata accessor for UnitConfiguration.Temperature();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_100845AFC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100845B9C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  unint64_t v7 = ((v6 + 8) & ~v6) + *(void *)(v5 + 64);
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  uint64_t v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v12 = ((unint64_t)a1 + v6 + 8) & ~v6;
    uint64_t v13 = ((unint64_t)a2 + v6 + 8) & ~v6;
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v14(v12, v13, v4);
  }
  return a1;
}

uint64_t sub_100845CA0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

void *sub_100845D14(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  swift_bridgeObjectRetain();
  v5(v7, v8, v4);
  return a1;
}

void *sub_100845DA4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

void *sub_100845E34(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_100845EA4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_100845F2C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v9 = a2 - v8;
  if (a2 <= v8) {
    goto LABEL_23;
  }
  uint64_t v10 = ((v7 + 8) & ~v7) + *(void *)(*(void *)(v4 - 8) + 64);
  char v11 = 8 * v10;
  if (v10 <= 3)
  {
    unsigned int v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_23:
      if ((v6 & 0x80000000) != 0) {
        return _s7Weather24LocationCompositionStateOwet_0(((unint64_t)a1 + v7 + 8) & ~v7, v6, v4);
      }
      uint64_t v16 = *(void *)a1;
      if (*(void *)a1 >= 0xFFFFFFFFuLL) {
        LODWORD(v16) = -1;
      }
      return (v16 + 1);
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_23;
  }
LABEL_15:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v10 | v15) + 1;
}

void sub_1008460BC(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  size_t v11 = ((v10 + 8) & ~v10) + *(void *)(*(void *)(v6 - 8) + 64);
  char v12 = 8 * v11;
  BOOL v13 = a3 >= v9;
  unsigned int v14 = a3 - v9;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      unsigned int v18 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v18))
      {
        int v15 = 4;
      }
      else if (v18 >= 0x100)
      {
        int v15 = 2;
      }
      else
      {
        int v15 = v18 > 1;
      }
    }
    else
    {
      int v15 = 1;
    }
  }
  else
  {
    int v15 = 0;
  }
  if (v9 < a2)
  {
    unsigned int v16 = ~v9 + a2;
    if (v11 < 4)
    {
      int v17 = (v16 >> v12) + 1;
      if (v11)
      {
        int v19 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v11] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v17;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v11] = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x100846304);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v8 & 0x80000000) != 0)
        {
          unint64_t v21 = (unint64_t)&a1[v10 + 8] & ~v10;
          _s7Weather24LocationCompositionStateOwst_0(v21, a2, v8, v6);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v20 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v20 = (a2 - 1);
          }
          *(void *)a1 = v20;
        }
      }
      return;
  }
}

uint64_t *sub_10084632C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        uint64_t v11 = *(int *)(sub_10017DF08(&qword_100E77648) + 36);
        char v12 = (char *)a1 + v11;
        BOOL v13 = (char *)a2 + v11;
        uint64_t v14 = type metadata accessor for UnitConfiguration.Precipitation();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
        break;
      case 2u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        uint64_t v15 = *(int *)(sub_10017DF08(&qword_100E77630) + 36);
        unsigned int v16 = (char *)a1 + v15;
        int v17 = (char *)a2 + v15;
        uint64_t v18 = type metadata accessor for UnitConfiguration.Pressure();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
        break;
      case 3u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        uint64_t v19 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
        uint64_t v20 = (char *)a1 + v19;
        unint64_t v21 = (char *)a2 + v19;
        uint64_t v22 = type metadata accessor for UnitConfiguration.Temperature();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
        {
          uint64_t v23 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
          memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
        }
        uint64_t v57 = *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
        uint64_t v58 = (char *)a1 + v57;
        uint64_t v59 = (char *)a2 + v57;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v22))
        {
          uint64_t v60 = sub_10017DF08(&qword_100E6F620);
          memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v58, v59, v22);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v22);
        }
        break;
      case 4u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        uint64_t v24 = *(int *)(sub_10017DF08(&qword_100E775E0) + 36);
        uint64_t v25 = (char *)a1 + v24;
        uint64_t v26 = (char *)a2 + v24;
        uint64_t v27 = type metadata accessor for UnitConfiguration.WindSpeed();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
        break;
      case 5u:
        uint64_t v28 = sub_10017DF08(&qword_100E77670);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v28))
        {
          uint64_t v29 = sub_10017DF08(&qword_100E777F8);
          memcpy(a1, a2, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v61 = *(int *)(v28 + 36);
          uint64_t v62 = (char *)a1 + v61;
          uint64_t v63 = (char *)a2 + v61;
          uint64_t v64 = type metadata accessor for UnitConfiguration.Distance();
          uint64_t v65 = *(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16);
          swift_bridgeObjectRetain();
          v65(v62, v63, v64);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v28);
        }
        int v66 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
        uint64_t v67 = v66[5];
        uint64_t v68 = (uint64_t *)((char *)a1 + v67);
        uint64_t v69 = (uint64_t *)((char *)a2 + v67);
        uint64_t v70 = sub_10017DF08(&qword_100E77648);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v69, 1, v70))
        {
          uint64_t v71 = sub_10017DF08(&qword_100E77800);
          memcpy(v68, v69, *(void *)(*(void *)(v71 - 8) + 64));
        }
        else
        {
          *uint64_t v68 = *v69;
          uint64_t v76 = *(int *)(v70 + 36);
          char v121 = (char *)v69 + v76;
          uint64_t v123 = (char *)v68 + v76;
          uint64_t v77 = type metadata accessor for UnitConfiguration.Precipitation();
          int v78 = v66;
          int v79 = *(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16);
          swift_bridgeObjectRetain();
          v79(v123, v121, v77);
          int v66 = v78;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v68, 0, 1, v70);
        }
        uint64_t v80 = v66[6];
        uint64_t v81 = (uint64_t *)((char *)a1 + v80);
        int v82 = (uint64_t *)((char *)a2 + v80);
        uint64_t v83 = sub_10017DF08(&qword_100E77630);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v83))
        {
          uint64_t v84 = sub_10017DF08(&qword_100E77808);
          memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
        }
        else
        {
          *uint64_t v81 = *v82;
          uint64_t v92 = *(int *)(v83 + 36);
          char v122 = (char *)v82 + v92;
          uint64_t v124 = (char *)v81 + v92;
          uint64_t v93 = type metadata accessor for UnitConfiguration.Pressure();
          uint64_t v94 = v66;
          int v95 = *(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 16);
          swift_bridgeObjectRetain();
          v95(v124, v122, v93);
          int v66 = v94;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v83);
        }
        uint64_t v96 = v66[7];
        uint64_t v97 = (uint64_t *)((char *)a1 + v96);
        uint64_t v98 = (uint64_t *)((char *)a2 + v96);
        uint64_t v99 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v98, 1, v99))
        {
          uint64_t v100 = sub_10017DF08(&qword_100E77810);
          memcpy(v97, v98, *(void *)(*(void *)(v100 - 8) + 64));
        }
        else
        {
          void *v97 = *v98;
          swift_bridgeObjectRetain();
          uint64_t v101 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
          uint64_t v102 = (char *)v97 + v101;
          uint64_t v103 = (char *)v98 + v101;
          uint64_t v104 = type metadata accessor for UnitConfiguration.Temperature();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v103, 1, v104))
          {
            uint64_t v105 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
            memcpy(v102, v103, *(void *)(*(void *)(v105 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16))(v102, v103, v104);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v102, 0, 1, v104);
          }
          uint64_t v106 = *(int *)(v99 + 20);
          uint64_t v107 = (char *)v97 + v106;
          uint64_t v108 = (char *)v98 + v106;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v108, 1, v104))
          {
            uint64_t v109 = sub_10017DF08(&qword_100E6F620);
            memcpy(v107, v108, *(void *)(*(void *)(v109 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16))(v107, v108, v104);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v107, 0, 1, v104);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v97, 0, 1, v99);
        }
        uint64_t v110 = v66[8];
        uint64_t v111 = (uint64_t *)((char *)a1 + v110);
        uint64_t v112 = (uint64_t *)((char *)a2 + v110);
        uint64_t v113 = sub_10017DF08(&qword_100E775E0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v112, 1, v113))
        {
          uint64_t v114 = sub_10017DF08(&qword_100E77818);
          memcpy(v111, v112, *(void *)(*(void *)(v114 - 8) + 64));
        }
        else
        {
          *uint64_t v111 = *v112;
          uint64_t v115 = *(int *)(v113 + 36);
          uint64_t v116 = (char *)v111 + v115;
          uint64_t v117 = (char *)v112 + v115;
          uint64_t v118 = type metadata accessor for UnitConfiguration.WindSpeed();
          uint64_t v119 = *(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16);
          swift_bridgeObjectRetain();
          v119(v116, v117, v118);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v111, 0, 1, v113);
        }
        break;
      case 6u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        uint64_t v30 = *(int *)(sub_10017DF08(&qword_100E77670) + 36);
        uint64_t v31 = (char *)a1 + v30;
        uint64_t v32 = (char *)a2 + v30;
        uint64_t v33 = type metadata accessor for UnitConfiguration.Distance();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
        uint64_t v34 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.Full(0);
        uint64_t v35 = v34[5];
        uint64_t v36 = (char *)a1 + v35;
        uint64_t v37 = (char *)a2 + v35;
        *(uint64_t *)((char *)a1 + v35) = *(uint64_t *)((char *)a2 + v35);
        swift_bridgeObjectRetain();
        uint64_t v38 = *(int *)(sub_10017DF08(&qword_100E77648) + 36);
        uint64_t v39 = &v36[v38];
        int v40 = &v37[v38];
        uint64_t v41 = type metadata accessor for UnitConfiguration.Precipitation();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
        uint64_t v42 = v34[6];
        uint64_t v43 = (char *)a1 + v42;
        uint64_t v44 = (char *)a2 + v42;
        *(uint64_t *)((char *)a1 + v42) = *(uint64_t *)((char *)a2 + v42);
        swift_bridgeObjectRetain();
        uint64_t v45 = *(int *)(sub_10017DF08(&qword_100E77630) + 36);
        uint64_t v46 = &v43[v45];
        size_t v47 = &v44[v45];
        uint64_t v48 = type metadata accessor for UnitConfiguration.Pressure();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
        uint64_t v49 = v34[7];
        uint64_t v50 = (char *)a1 + v49;
        size_t v51 = (char *)a2 + v49;
        *(uint64_t *)((char *)a1 + v49) = *(uint64_t *)((char *)a2 + v49);
        swift_bridgeObjectRetain();
        uint64_t v52 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
        uint64_t v53 = &v50[v52];
        uint64_t v54 = &v51[v52];
        uint64_t v55 = type metadata accessor for UnitConfiguration.Temperature();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v55))
        {
          uint64_t v56 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
          memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v55);
        }
        uint64_t v72 = *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
        uint64_t v73 = &v50[v72];
        uint64_t v74 = &v51[v72];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v51[v72], 1, v55))
        {
          uint64_t v75 = sub_10017DF08(&qword_100E6F620);
          memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v73, v74, v55);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v73, 0, 1, v55);
        }
        uint64_t v85 = v34[8];
        uint64_t v86 = (char *)a1 + v85;
        uint64_t v87 = (char *)a2 + v85;
        *(uint64_t *)((char *)a1 + v85) = *(uint64_t *)((char *)a2 + v85);
        swift_bridgeObjectRetain();
        uint64_t v88 = *(int *)(sub_10017DF08(&qword_100E775E0) + 36);
        uint64_t v89 = &v86[v88];
        uint64_t v90 = &v87[v88];
        uint64_t v91 = type metadata accessor for UnitConfiguration.WindSpeed();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 16))(v89, v90, v91);
        *((unsigned char *)a1 + v34[9]) = *((unsigned char *)a2 + v34[9]);
        *((unsigned char *)a1 + v34[10]) = *((unsigned char *)a2 + v34[10]);
        break;
      default:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        uint64_t v6 = *(int *)(sub_10017DF08(&qword_100E77670) + 36);
        uint64_t v7 = (char *)a1 + v6;
        uint64_t v8 = (char *)a2 + v6;
        uint64_t v9 = type metadata accessor for UnitConfiguration.Distance();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100846FA0(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      uint64_t v3 = a1 + *(int *)(sub_10017DF08(&qword_100E77670) + 36);
      uint64_t v4 = type metadata accessor for UnitConfiguration.Distance();
      goto LABEL_29;
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v3 = a1 + *(int *)(sub_10017DF08(&qword_100E77648) + 36);
      uint64_t v4 = type metadata accessor for UnitConfiguration.Precipitation();
      goto LABEL_29;
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v3 = a1 + *(int *)(sub_10017DF08(&qword_100E77630) + 36);
      uint64_t v4 = type metadata accessor for UnitConfiguration.Pressure();
      goto LABEL_29;
    case 3:
      swift_bridgeObjectRelease();
      uint64_t v5 = a1 + *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
      uint64_t v6 = type metadata accessor for UnitConfiguration.Temperature();
      if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
      }
      uint64_t v7 = a1 + *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
      uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v7, 1, v6);
      if (result) {
        return result;
      }
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
      uint64_t v9 = v7;
      uint64_t v10 = v6;
      goto LABEL_30;
    case 4:
      goto LABEL_27;
    case 5:
      uint64_t v11 = sub_10017DF08(&qword_100E77670);
      if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v11))
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = a1 + *(int *)(v11 + 36);
        uint64_t v13 = type metadata accessor for UnitConfiguration.Distance();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      }
      uint64_t v14 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
      uint64_t v15 = a1 + v14[5];
      uint64_t v16 = sub_10017DF08(&qword_100E77648);
      if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v16))
      {
        swift_bridgeObjectRelease();
        uint64_t v17 = v15 + *(int *)(v16 + 36);
        uint64_t v18 = type metadata accessor for UnitConfiguration.Precipitation();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
      }
      uint64_t v19 = a1 + v14[6];
      uint64_t v20 = sub_10017DF08(&qword_100E77630);
      if (!_s7Weather24LocationCompositionStateOwet_0(v19, 1, v20))
      {
        swift_bridgeObjectRelease();
        uint64_t v21 = v19 + *(int *)(v20 + 36);
        uint64_t v22 = type metadata accessor for UnitConfiguration.Pressure();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
      }
      uint64_t v23 = a1 + v14[7];
      uint64_t v24 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v23, 1, v24))
      {
        swift_bridgeObjectRelease();
        uint64_t v25 = v23 + *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
        uint64_t v26 = type metadata accessor for UnitConfiguration.Temperature();
        if (!_s7Weather24LocationCompositionStateOwet_0(v25, 1, v26)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
        }
        uint64_t v27 = v23 + *(int *)(v24 + 20);
        if (!_s7Weather24LocationCompositionStateOwet_0(v27, 1, v26)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v27, v26);
        }
      }
      a1 += v14[8];
      uint64_t v28 = sub_10017DF08(&qword_100E775E0);
      uint64_t result = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v28);
      if (result) {
        return result;
      }
      swift_bridgeObjectRelease();
      uint64_t v42 = *(int *)(v28 + 36);
      goto LABEL_28;
    case 6:
      swift_bridgeObjectRelease();
      uint64_t v29 = a1 + *(int *)(sub_10017DF08(&qword_100E77670) + 36);
      uint64_t v30 = type metadata accessor for UnitConfiguration.Distance();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
      uint64_t v31 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.Full(0);
      uint64_t v32 = a1 + v31[5];
      swift_bridgeObjectRelease();
      uint64_t v33 = v32 + *(int *)(sub_10017DF08(&qword_100E77648) + 36);
      uint64_t v34 = type metadata accessor for UnitConfiguration.Precipitation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v33, v34);
      uint64_t v35 = a1 + v31[6];
      swift_bridgeObjectRelease();
      uint64_t v36 = v35 + *(int *)(sub_10017DF08(&qword_100E77630) + 36);
      uint64_t v37 = type metadata accessor for UnitConfiguration.Pressure();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
      uint64_t v38 = a1 + v31[7];
      swift_bridgeObjectRelease();
      uint64_t v39 = v38 + *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
      uint64_t v40 = type metadata accessor for UnitConfiguration.Temperature();
      if (!_s7Weather24LocationCompositionStateOwet_0(v39, 1, v40)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);
      }
      uint64_t v41 = v38 + *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
      if (!_s7Weather24LocationCompositionStateOwet_0(v41, 1, v40)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v41, v40);
      }
      a1 += v31[8];
LABEL_27:
      swift_bridgeObjectRelease();
      uint64_t v42 = *(int *)(sub_10017DF08(&qword_100E775E0) + 36);
LABEL_28:
      uint64_t v3 = a1 + v42;
      uint64_t v4 = type metadata accessor for UnitConfiguration.WindSpeed();
LABEL_29:
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
      uint64_t v10 = v4;
      uint64_t v9 = v3;
LABEL_30:
      uint64_t result = v8(v9, v10);
      break;
    default:
      return result;
  }
  return result;
}

void *sub_100847624(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E77648) + 36);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for UnitConfiguration.Precipitation();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      break;
    case 2u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      uint64_t v12 = *(int *)(sub_10017DF08(&qword_100E77630) + 36);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = type metadata accessor for UnitConfiguration.Pressure();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      break;
    case 3u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      uint64_t v16 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = type metadata accessor for UnitConfiguration.Temperature();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
      {
        uint64_t v20 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
        memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
      }
      uint64_t v54 = *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
      uint64_t v55 = (char *)a1 + v54;
      uint64_t v56 = (char *)a2 + v54;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v19))
      {
        uint64_t v57 = sub_10017DF08(&qword_100E6F620);
        memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v55, v56, v19);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v55, 0, 1, v19);
      }
      break;
    case 4u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      uint64_t v21 = *(int *)(sub_10017DF08(&qword_100E775E0) + 36);
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = type metadata accessor for UnitConfiguration.WindSpeed();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      break;
    case 5u:
      uint64_t v25 = sub_10017DF08(&qword_100E77670);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v25))
      {
        uint64_t v26 = sub_10017DF08(&qword_100E777F8);
        memcpy(a1, a2, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v58 = *(int *)(v25 + 36);
        uint64_t v59 = (char *)a1 + v58;
        uint64_t v60 = (char *)a2 + v58;
        uint64_t v61 = type metadata accessor for UnitConfiguration.Distance();
        uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
        swift_bridgeObjectRetain();
        v62(v59, v60, v61);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v25);
      }
      uint64_t v63 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
      uint64_t v64 = v63[5];
      uint64_t v65 = (void *)((char *)a1 + v64);
      int v66 = (void *)((char *)a2 + v64);
      uint64_t v67 = sub_10017DF08(&qword_100E77648);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, v67))
      {
        uint64_t v68 = sub_10017DF08(&qword_100E77800);
        memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        *uint64_t v65 = *v66;
        uint64_t v73 = *(int *)(v67 + 36);
        uint64_t v118 = (char *)v66 + v73;
        uint64_t v120 = (char *)v65 + v73;
        uint64_t v74 = type metadata accessor for UnitConfiguration.Precipitation();
        uint64_t v75 = v63;
        uint64_t v76 = *(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16);
        swift_bridgeObjectRetain();
        v76(v120, v118, v74);
        uint64_t v63 = v75;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 0, 1, v67);
      }
      uint64_t v77 = v63[6];
      int v78 = (void *)((char *)a1 + v77);
      int v79 = (void *)((char *)a2 + v77);
      uint64_t v80 = sub_10017DF08(&qword_100E77630);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v79, 1, v80))
      {
        uint64_t v81 = sub_10017DF08(&qword_100E77808);
        memcpy(v78, v79, *(void *)(*(void *)(v81 - 8) + 64));
      }
      else
      {
        *int v78 = *v79;
        uint64_t v89 = *(int *)(v80 + 36);
        uint64_t v119 = (char *)v79 + v89;
        char v121 = (char *)v78 + v89;
        uint64_t v90 = type metadata accessor for UnitConfiguration.Pressure();
        uint64_t v91 = v63;
        uint64_t v92 = *(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16);
        swift_bridgeObjectRetain();
        v92(v121, v119, v90);
        uint64_t v63 = v91;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v78, 0, 1, v80);
      }
      uint64_t v93 = v63[7];
      uint64_t v94 = (void *)((char *)a1 + v93);
      int v95 = (void *)((char *)a2 + v93);
      uint64_t v96 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, v96))
      {
        uint64_t v97 = sub_10017DF08(&qword_100E77810);
        memcpy(v94, v95, *(void *)(*(void *)(v97 - 8) + 64));
      }
      else
      {
        *uint64_t v94 = *v95;
        swift_bridgeObjectRetain();
        uint64_t v98 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
        uint64_t v99 = (char *)v94 + v98;
        uint64_t v100 = (char *)v95 + v98;
        uint64_t v101 = type metadata accessor for UnitConfiguration.Temperature();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v100, 1, v101))
        {
          uint64_t v102 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
          memcpy(v99, v100, *(void *)(*(void *)(v102 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16))(v99, v100, v101);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v99, 0, 1, v101);
        }
        uint64_t v103 = *(int *)(v96 + 20);
        uint64_t v104 = (char *)v94 + v103;
        uint64_t v105 = (char *)v95 + v103;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v105, 1, v101))
        {
          uint64_t v106 = sub_10017DF08(&qword_100E6F620);
          memcpy(v104, v105, *(void *)(*(void *)(v106 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16))(v104, v105, v101);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v104, 0, 1, v101);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v94, 0, 1, v96);
      }
      uint64_t v107 = v63[8];
      uint64_t v108 = (void *)((char *)a1 + v107);
      uint64_t v109 = (void *)((char *)a2 + v107);
      uint64_t v110 = sub_10017DF08(&qword_100E775E0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v109, 1, v110))
      {
        uint64_t v111 = sub_10017DF08(&qword_100E77818);
        memcpy(v108, v109, *(void *)(*(void *)(v111 - 8) + 64));
      }
      else
      {
        *uint64_t v108 = *v109;
        uint64_t v112 = *(int *)(v110 + 36);
        uint64_t v113 = (char *)v108 + v112;
        uint64_t v114 = (char *)v109 + v112;
        uint64_t v115 = type metadata accessor for UnitConfiguration.WindSpeed();
        uint64_t v116 = *(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 16);
        swift_bridgeObjectRetain();
        v116(v113, v114, v115);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v108, 0, 1, v110);
      }
      break;
    case 6u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      uint64_t v27 = *(int *)(sub_10017DF08(&qword_100E77670) + 36);
      uint64_t v28 = (char *)a1 + v27;
      uint64_t v29 = (char *)a2 + v27;
      uint64_t v30 = type metadata accessor for UnitConfiguration.Distance();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      uint64_t v31 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.Full(0);
      uint64_t v32 = v31[5];
      uint64_t v33 = (char *)a1 + v32;
      uint64_t v34 = (char *)a2 + v32;
      *(void *)((char *)a1 + v32) = *(void *)((char *)a2 + v32);
      swift_bridgeObjectRetain();
      uint64_t v35 = *(int *)(sub_10017DF08(&qword_100E77648) + 36);
      uint64_t v36 = &v33[v35];
      uint64_t v37 = &v34[v35];
      uint64_t v38 = type metadata accessor for UnitConfiguration.Precipitation();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
      uint64_t v39 = v31[6];
      uint64_t v40 = (char *)a1 + v39;
      uint64_t v41 = (char *)a2 + v39;
      *(void *)((char *)a1 + v39) = *(void *)((char *)a2 + v39);
      swift_bridgeObjectRetain();
      uint64_t v42 = *(int *)(sub_10017DF08(&qword_100E77630) + 36);
      uint64_t v43 = &v40[v42];
      uint64_t v44 = &v41[v42];
      uint64_t v45 = type metadata accessor for UnitConfiguration.Pressure();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
      uint64_t v46 = v31[7];
      size_t v47 = (char *)a1 + v46;
      uint64_t v48 = (char *)a2 + v46;
      *(void *)((char *)a1 + v46) = *(void *)((char *)a2 + v46);
      swift_bridgeObjectRetain();
      uint64_t v49 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
      uint64_t v50 = &v47[v49];
      size_t v51 = &v48[v49];
      uint64_t v52 = type metadata accessor for UnitConfiguration.Temperature();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v52))
      {
        uint64_t v53 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
        memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 0, 1, v52);
      }
      uint64_t v69 = *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
      uint64_t v70 = &v47[v69];
      uint64_t v71 = &v48[v69];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v48[v69], 1, v52))
      {
        uint64_t v72 = sub_10017DF08(&qword_100E6F620);
        memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v70, v71, v52);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v52);
      }
      uint64_t v82 = v31[8];
      uint64_t v83 = (char *)a1 + v82;
      uint64_t v84 = (char *)a2 + v82;
      *(void *)((char *)a1 + v82) = *(void *)((char *)a2 + v82);
      swift_bridgeObjectRetain();
      uint64_t v85 = *(int *)(sub_10017DF08(&qword_100E775E0) + 36);
      uint64_t v86 = &v83[v85];
      uint64_t v87 = &v84[v85];
      uint64_t v88 = type metadata accessor for UnitConfiguration.WindSpeed();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v86, v87, v88);
      *((unsigned char *)a1 + v31[9]) = *((unsigned char *)a2 + v31[9]);
      *((unsigned char *)a1 + v31[10]) = *((unsigned char *)a2 + v31[10]);
      break;
    default:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      uint64_t v4 = *(int *)(sub_10017DF08(&qword_100E77670) + 36);
      uint64_t v5 = (char *)a1 + v4;
      uint64_t v6 = (char *)a2 + v4;
      uint64_t v7 = type metadata accessor for UnitConfiguration.Distance();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100848248(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_100843330((uint64_t)a1, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E77648) + 36);
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = type metadata accessor for UnitConfiguration.Precipitation();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
        break;
      case 2u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        uint64_t v12 = *(int *)(sub_10017DF08(&qword_100E77630) + 36);
        uint64_t v13 = (char *)a1 + v12;
        uint64_t v14 = (char *)a2 + v12;
        uint64_t v15 = type metadata accessor for UnitConfiguration.Pressure();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
        break;
      case 3u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        uint64_t v16 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
        uint64_t v17 = (char *)a1 + v16;
        uint64_t v18 = (char *)a2 + v16;
        uint64_t v19 = type metadata accessor for UnitConfiguration.Temperature();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
        {
          uint64_t v20 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
          memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
        }
        uint64_t v54 = *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
        uint64_t v55 = (char *)a1 + v54;
        uint64_t v56 = (char *)a2 + v54;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v19))
        {
          uint64_t v57 = sub_10017DF08(&qword_100E6F620);
          memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v55, v56, v19);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v55, 0, 1, v19);
        }
        break;
      case 4u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        uint64_t v21 = *(int *)(sub_10017DF08(&qword_100E775E0) + 36);
        uint64_t v22 = (char *)a1 + v21;
        uint64_t v23 = (char *)a2 + v21;
        uint64_t v24 = type metadata accessor for UnitConfiguration.WindSpeed();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
        break;
      case 5u:
        uint64_t v25 = sub_10017DF08(&qword_100E77670);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v25))
        {
          uint64_t v26 = sub_10017DF08(&qword_100E777F8);
          memcpy(a1, a2, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v58 = *(int *)(v25 + 36);
          uint64_t v59 = (char *)a1 + v58;
          uint64_t v60 = (char *)a2 + v58;
          uint64_t v61 = type metadata accessor for UnitConfiguration.Distance();
          uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
          swift_bridgeObjectRetain();
          v62(v59, v60, v61);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v25);
        }
        uint64_t v63 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
        uint64_t v64 = v63[5];
        uint64_t v65 = (void *)((char *)a1 + v64);
        int v66 = (void *)((char *)a2 + v64);
        uint64_t v67 = sub_10017DF08(&qword_100E77648);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, v67))
        {
          uint64_t v68 = sub_10017DF08(&qword_100E77800);
          memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
        }
        else
        {
          *uint64_t v65 = *v66;
          uint64_t v73 = *(int *)(v67 + 36);
          uint64_t v118 = (char *)v66 + v73;
          uint64_t v120 = (char *)v65 + v73;
          uint64_t v74 = type metadata accessor for UnitConfiguration.Precipitation();
          uint64_t v75 = v63;
          uint64_t v76 = *(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16);
          swift_bridgeObjectRetain();
          v76(v120, v118, v74);
          uint64_t v63 = v75;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 0, 1, v67);
        }
        uint64_t v77 = v63[6];
        int v78 = (void *)((char *)a1 + v77);
        int v79 = (void *)((char *)a2 + v77);
        uint64_t v80 = sub_10017DF08(&qword_100E77630);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v79, 1, v80))
        {
          uint64_t v81 = sub_10017DF08(&qword_100E77808);
          memcpy(v78, v79, *(void *)(*(void *)(v81 - 8) + 64));
        }
        else
        {
          *int v78 = *v79;
          uint64_t v89 = *(int *)(v80 + 36);
          uint64_t v119 = (char *)v79 + v89;
          char v121 = (char *)v78 + v89;
          uint64_t v90 = type metadata accessor for UnitConfiguration.Pressure();
          uint64_t v91 = v63;
          uint64_t v92 = *(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16);
          swift_bridgeObjectRetain();
          v92(v121, v119, v90);
          uint64_t v63 = v91;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v78, 0, 1, v80);
        }
        uint64_t v93 = v63[7];
        uint64_t v94 = (void *)((char *)a1 + v93);
        int v95 = (void *)((char *)a2 + v93);
        uint64_t v96 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, v96))
        {
          uint64_t v97 = sub_10017DF08(&qword_100E77810);
          memcpy(v94, v95, *(void *)(*(void *)(v97 - 8) + 64));
        }
        else
        {
          *uint64_t v94 = *v95;
          swift_bridgeObjectRetain();
          uint64_t v98 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
          uint64_t v99 = (char *)v94 + v98;
          uint64_t v100 = (char *)v95 + v98;
          uint64_t v101 = type metadata accessor for UnitConfiguration.Temperature();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v100, 1, v101))
          {
            uint64_t v102 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
            memcpy(v99, v100, *(void *)(*(void *)(v102 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16))(v99, v100, v101);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v99, 0, 1, v101);
          }
          uint64_t v103 = *(int *)(v96 + 20);
          uint64_t v104 = (char *)v94 + v103;
          uint64_t v105 = (char *)v95 + v103;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v105, 1, v101))
          {
            uint64_t v106 = sub_10017DF08(&qword_100E6F620);
            memcpy(v104, v105, *(void *)(*(void *)(v106 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16))(v104, v105, v101);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v104, 0, 1, v101);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v94, 0, 1, v96);
        }
        uint64_t v107 = v63[8];
        uint64_t v108 = (void *)((char *)a1 + v107);
        uint64_t v109 = (void *)((char *)a2 + v107);
        uint64_t v110 = sub_10017DF08(&qword_100E775E0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v109, 1, v110))
        {
          uint64_t v111 = sub_10017DF08(&qword_100E77818);
          memcpy(v108, v109, *(void *)(*(void *)(v111 - 8) + 64));
        }
        else
        {
          *uint64_t v108 = *v109;
          uint64_t v112 = *(int *)(v110 + 36);
          uint64_t v113 = (char *)v108 + v112;
          uint64_t v114 = (char *)v109 + v112;
          uint64_t v115 = type metadata accessor for UnitConfiguration.WindSpeed();
          uint64_t v116 = *(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 16);
          swift_bridgeObjectRetain();
          v116(v113, v114, v115);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v108, 0, 1, v110);
        }
        break;
      case 6u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        uint64_t v27 = *(int *)(sub_10017DF08(&qword_100E77670) + 36);
        uint64_t v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        uint64_t v30 = type metadata accessor for UnitConfiguration.Distance();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
        uint64_t v31 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.Full(0);
        uint64_t v32 = v31[5];
        uint64_t v33 = (char *)a1 + v32;
        uint64_t v34 = (char *)a2 + v32;
        *(void *)((char *)a1 + v32) = *(void *)((char *)a2 + v32);
        swift_bridgeObjectRetain();
        uint64_t v35 = *(int *)(sub_10017DF08(&qword_100E77648) + 36);
        uint64_t v36 = &v33[v35];
        uint64_t v37 = &v34[v35];
        uint64_t v38 = type metadata accessor for UnitConfiguration.Precipitation();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
        uint64_t v39 = v31[6];
        uint64_t v40 = (char *)a1 + v39;
        uint64_t v41 = (char *)a2 + v39;
        *(void *)((char *)a1 + v39) = *(void *)((char *)a2 + v39);
        swift_bridgeObjectRetain();
        uint64_t v42 = *(int *)(sub_10017DF08(&qword_100E77630) + 36);
        uint64_t v43 = &v40[v42];
        uint64_t v44 = &v41[v42];
        uint64_t v45 = type metadata accessor for UnitConfiguration.Pressure();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
        uint64_t v46 = v31[7];
        size_t v47 = (char *)a1 + v46;
        uint64_t v48 = (char *)a2 + v46;
        *(void *)((char *)a1 + v46) = *(void *)((char *)a2 + v46);
        swift_bridgeObjectRetain();
        uint64_t v49 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
        uint64_t v50 = &v47[v49];
        size_t v51 = &v48[v49];
        uint64_t v52 = type metadata accessor for UnitConfiguration.Temperature();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v52))
        {
          uint64_t v53 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
          memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 0, 1, v52);
        }
        uint64_t v69 = *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
        uint64_t v70 = &v47[v69];
        uint64_t v71 = &v48[v69];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v48[v69], 1, v52))
        {
          uint64_t v72 = sub_10017DF08(&qword_100E6F620);
          memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v70, v71, v52);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v52);
        }
        uint64_t v82 = v31[8];
        uint64_t v83 = (char *)a1 + v82;
        uint64_t v84 = (char *)a2 + v82;
        *(void *)((char *)a1 + v82) = *(void *)((char *)a2 + v82);
        swift_bridgeObjectRetain();
        uint64_t v85 = *(int *)(sub_10017DF08(&qword_100E775E0) + 36);
        uint64_t v86 = &v83[v85];
        uint64_t v87 = &v84[v85];
        uint64_t v88 = type metadata accessor for UnitConfiguration.WindSpeed();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v86, v87, v88);
        *((unsigned char *)a1 + v31[9]) = *((unsigned char *)a2 + v31[9]);
        *((unsigned char *)a1 + v31[10]) = *((unsigned char *)a2 + v31[10]);
        break;
      default:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        uint64_t v4 = *(int *)(sub_10017DF08(&qword_100E77670) + 36);
        uint64_t v5 = (char *)a1 + v4;
        uint64_t v6 = (char *)a2 + v4;
        uint64_t v7 = type metadata accessor for UnitConfiguration.Distance();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100848E90(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *a1 = *a2;
      uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E77648) + 36);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for UnitConfiguration.Precipitation();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      break;
    case 2u:
      *a1 = *a2;
      uint64_t v12 = *(int *)(sub_10017DF08(&qword_100E77630) + 36);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = type metadata accessor for UnitConfiguration.Pressure();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      break;
    case 3u:
      *a1 = *a2;
      uint64_t v16 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = type metadata accessor for UnitConfiguration.Temperature();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
      {
        uint64_t v20 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
        memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
      }
      uint64_t v54 = *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
      uint64_t v55 = (char *)a1 + v54;
      uint64_t v56 = (char *)a2 + v54;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v19))
      {
        uint64_t v57 = sub_10017DF08(&qword_100E6F620);
        memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v55, v56, v19);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v55, 0, 1, v19);
      }
      break;
    case 4u:
      *a1 = *a2;
      uint64_t v21 = *(int *)(sub_10017DF08(&qword_100E775E0) + 36);
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = type metadata accessor for UnitConfiguration.WindSpeed();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
      break;
    case 5u:
      uint64_t v25 = sub_10017DF08(&qword_100E77670);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v25))
      {
        uint64_t v26 = sub_10017DF08(&qword_100E777F8);
        memcpy(a1, a2, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v58 = *(int *)(v25 + 36);
        uint64_t v59 = (char *)a1 + v58;
        uint64_t v60 = (char *)a2 + v58;
        uint64_t v61 = type metadata accessor for UnitConfiguration.Distance();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v59, v60, v61);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v25);
      }
      uint64_t v62 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
      uint64_t v63 = v62[5];
      uint64_t v64 = (void *)((char *)a1 + v63);
      uint64_t v65 = (void *)((char *)a2 + v63);
      uint64_t v66 = sub_10017DF08(&qword_100E77648);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v66))
      {
        uint64_t v67 = sub_10017DF08(&qword_100E77800);
        memcpy(v64, v65, *(void *)(*(void *)(v67 - 8) + 64));
      }
      else
      {
        *uint64_t v64 = *v65;
        uint64_t v72 = *(int *)(v66 + 36);
        uint64_t v73 = (char *)v64 + v72;
        uint64_t v74 = (char *)v65 + v72;
        uint64_t v75 = type metadata accessor for UnitConfiguration.Precipitation();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, v66);
      }
      uint64_t v76 = v62[6];
      uint64_t v77 = (void *)((char *)a1 + v76);
      int v78 = (void *)((char *)a2 + v76);
      uint64_t v79 = sub_10017DF08(&qword_100E77630);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v78, 1, v79))
      {
        uint64_t v80 = sub_10017DF08(&qword_100E77808);
        memcpy(v77, v78, *(void *)(*(void *)(v80 - 8) + 64));
      }
      else
      {
        *uint64_t v77 = *v78;
        uint64_t v88 = *(int *)(v79 + 36);
        uint64_t v89 = (char *)v77 + v88;
        uint64_t v90 = (char *)v78 + v88;
        uint64_t v91 = type metadata accessor for UnitConfiguration.Pressure();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 32))(v89, v90, v91);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v77, 0, 1, v79);
      }
      uint64_t v92 = v62[7];
      uint64_t v93 = (void *)((char *)a1 + v92);
      uint64_t v94 = (void *)((char *)a2 + v92);
      uint64_t v95 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v94, 1, v95))
      {
        uint64_t v96 = sub_10017DF08(&qword_100E77810);
        memcpy(v93, v94, *(void *)(*(void *)(v96 - 8) + 64));
      }
      else
      {
        *uint64_t v93 = *v94;
        uint64_t v97 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
        uint64_t v98 = (char *)v93 + v97;
        uint64_t v99 = (char *)v94 + v97;
        uint64_t v100 = type metadata accessor for UnitConfiguration.Temperature();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v99, 1, v100))
        {
          uint64_t v101 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
          memcpy(v98, v99, *(void *)(*(void *)(v101 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 32))(v98, v99, v100);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 0, 1, v100);
        }
        uint64_t v102 = *(int *)(v95 + 20);
        uint64_t v103 = (char *)v93 + v102;
        uint64_t v104 = (char *)v94 + v102;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v104, 1, v100))
        {
          uint64_t v105 = sub_10017DF08(&qword_100E6F620);
          memcpy(v103, v104, *(void *)(*(void *)(v105 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 32))(v103, v104, v100);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v103, 0, 1, v100);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v93, 0, 1, v95);
      }
      uint64_t v106 = v62[8];
      uint64_t v107 = (void *)((char *)a1 + v106);
      uint64_t v108 = (void *)((char *)a2 + v106);
      uint64_t v109 = sub_10017DF08(&qword_100E775E0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v108, 1, v109))
      {
        uint64_t v110 = sub_10017DF08(&qword_100E77818);
        memcpy(v107, v108, *(void *)(*(void *)(v110 - 8) + 64));
      }
      else
      {
        *uint64_t v107 = *v108;
        uint64_t v111 = *(int *)(v109 + 36);
        uint64_t v112 = (char *)v107 + v111;
        uint64_t v113 = (char *)v108 + v111;
        uint64_t v114 = type metadata accessor for UnitConfiguration.WindSpeed();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 32))(v112, v113, v114);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v107, 0, 1, v109);
      }
      break;
    case 6u:
      *a1 = *a2;
      uint64_t v27 = *(int *)(sub_10017DF08(&qword_100E77670) + 36);
      uint64_t v28 = (char *)a1 + v27;
      uint64_t v29 = (char *)a2 + v27;
      uint64_t v30 = type metadata accessor for UnitConfiguration.Distance();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      uint64_t v31 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.Full(0);
      uint64_t v32 = v31[5];
      uint64_t v33 = (char *)a1 + v32;
      uint64_t v34 = (char *)a2 + v32;
      *(void *)((char *)a1 + v32) = *(void *)((char *)a2 + v32);
      uint64_t v35 = *(int *)(sub_10017DF08(&qword_100E77648) + 36);
      uint64_t v36 = &v33[v35];
      uint64_t v37 = &v34[v35];
      uint64_t v38 = type metadata accessor for UnitConfiguration.Precipitation();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
      uint64_t v39 = v31[6];
      uint64_t v40 = (char *)a1 + v39;
      uint64_t v41 = (char *)a2 + v39;
      *(void *)((char *)a1 + v39) = *(void *)((char *)a2 + v39);
      uint64_t v42 = *(int *)(sub_10017DF08(&qword_100E77630) + 36);
      uint64_t v43 = &v40[v42];
      uint64_t v44 = &v41[v42];
      uint64_t v45 = type metadata accessor for UnitConfiguration.Pressure();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
      uint64_t v46 = v31[7];
      size_t v47 = (char *)a1 + v46;
      uint64_t v48 = (char *)a2 + v46;
      *(void *)((char *)a1 + v46) = *(void *)((char *)a2 + v46);
      uint64_t v49 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
      uint64_t v50 = &v47[v49];
      size_t v51 = &v48[v49];
      uint64_t v52 = type metadata accessor for UnitConfiguration.Temperature();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v52))
      {
        uint64_t v53 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
        memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 0, 1, v52);
      }
      uint64_t v68 = *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
      uint64_t v69 = &v47[v68];
      uint64_t v70 = &v48[v68];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v48[v68], 1, v52))
      {
        uint64_t v71 = sub_10017DF08(&qword_100E6F620);
        memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v69, v70, v52);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v69, 0, 1, v52);
      }
      uint64_t v81 = v31[8];
      uint64_t v82 = (char *)a1 + v81;
      uint64_t v83 = (char *)a2 + v81;
      *(void *)((char *)a1 + v81) = *(void *)((char *)a2 + v81);
      uint64_t v84 = *(int *)(sub_10017DF08(&qword_100E775E0) + 36);
      uint64_t v85 = &v82[v84];
      uint64_t v86 = &v83[v84];
      uint64_t v87 = type metadata accessor for UnitConfiguration.WindSpeed();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 32))(v85, v86, v87);
      *((unsigned char *)a1 + v31[9]) = *((unsigned char *)a2 + v31[9]);
      *((unsigned char *)a1 + v31[10]) = *((unsigned char *)a2 + v31[10]);
      break;
    default:
      *a1 = *a2;
      uint64_t v4 = *(int *)(sub_10017DF08(&qword_100E77670) + 36);
      uint64_t v5 = (char *)a1 + v4;
      uint64_t v6 = (char *)a2 + v4;
      uint64_t v7 = type metadata accessor for UnitConfiguration.Distance();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100849A40(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_100843330((uint64_t)a1, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E77648) + 36);
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = type metadata accessor for UnitConfiguration.Precipitation();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
        break;
      case 2u:
        *a1 = *a2;
        uint64_t v12 = *(int *)(sub_10017DF08(&qword_100E77630) + 36);
        uint64_t v13 = (char *)a1 + v12;
        uint64_t v14 = (char *)a2 + v12;
        uint64_t v15 = type metadata accessor for UnitConfiguration.Pressure();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
        break;
      case 3u:
        *a1 = *a2;
        uint64_t v16 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
        uint64_t v17 = (char *)a1 + v16;
        uint64_t v18 = (char *)a2 + v16;
        uint64_t v19 = type metadata accessor for UnitConfiguration.Temperature();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
        {
          uint64_t v20 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
          memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
        }
        uint64_t v54 = *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
        uint64_t v55 = (char *)a1 + v54;
        uint64_t v56 = (char *)a2 + v54;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v19))
        {
          uint64_t v57 = sub_10017DF08(&qword_100E6F620);
          memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v55, v56, v19);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v55, 0, 1, v19);
        }
        break;
      case 4u:
        *a1 = *a2;
        uint64_t v21 = *(int *)(sub_10017DF08(&qword_100E775E0) + 36);
        uint64_t v22 = (char *)a1 + v21;
        uint64_t v23 = (char *)a2 + v21;
        uint64_t v24 = type metadata accessor for UnitConfiguration.WindSpeed();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
        break;
      case 5u:
        uint64_t v25 = sub_10017DF08(&qword_100E77670);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v25))
        {
          uint64_t v26 = sub_10017DF08(&qword_100E777F8);
          memcpy(a1, a2, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v58 = *(int *)(v25 + 36);
          uint64_t v59 = (char *)a1 + v58;
          uint64_t v60 = (char *)a2 + v58;
          uint64_t v61 = type metadata accessor for UnitConfiguration.Distance();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v59, v60, v61);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v25);
        }
        uint64_t v62 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
        uint64_t v63 = v62[5];
        uint64_t v64 = (void *)((char *)a1 + v63);
        uint64_t v65 = (void *)((char *)a2 + v63);
        uint64_t v66 = sub_10017DF08(&qword_100E77648);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v66))
        {
          uint64_t v67 = sub_10017DF08(&qword_100E77800);
          memcpy(v64, v65, *(void *)(*(void *)(v67 - 8) + 64));
        }
        else
        {
          *uint64_t v64 = *v65;
          uint64_t v72 = *(int *)(v66 + 36);
          uint64_t v73 = (char *)v64 + v72;
          uint64_t v74 = (char *)v65 + v72;
          uint64_t v75 = type metadata accessor for UnitConfiguration.Precipitation();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, v66);
        }
        uint64_t v76 = v62[6];
        uint64_t v77 = (void *)((char *)a1 + v76);
        int v78 = (void *)((char *)a2 + v76);
        uint64_t v79 = sub_10017DF08(&qword_100E77630);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v78, 1, v79))
        {
          uint64_t v80 = sub_10017DF08(&qword_100E77808);
          memcpy(v77, v78, *(void *)(*(void *)(v80 - 8) + 64));
        }
        else
        {
          *uint64_t v77 = *v78;
          uint64_t v88 = *(int *)(v79 + 36);
          uint64_t v89 = (char *)v77 + v88;
          uint64_t v90 = (char *)v78 + v88;
          uint64_t v91 = type metadata accessor for UnitConfiguration.Pressure();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 32))(v89, v90, v91);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v77, 0, 1, v79);
        }
        uint64_t v92 = v62[7];
        uint64_t v93 = (void *)((char *)a1 + v92);
        uint64_t v94 = (void *)((char *)a2 + v92);
        uint64_t v95 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v94, 1, v95))
        {
          uint64_t v96 = sub_10017DF08(&qword_100E77810);
          memcpy(v93, v94, *(void *)(*(void *)(v96 - 8) + 64));
        }
        else
        {
          *uint64_t v93 = *v94;
          uint64_t v97 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
          uint64_t v98 = (char *)v93 + v97;
          uint64_t v99 = (char *)v94 + v97;
          uint64_t v100 = type metadata accessor for UnitConfiguration.Temperature();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v99, 1, v100))
          {
            uint64_t v101 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
            memcpy(v98, v99, *(void *)(*(void *)(v101 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 32))(v98, v99, v100);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 0, 1, v100);
          }
          uint64_t v102 = *(int *)(v95 + 20);
          uint64_t v103 = (char *)v93 + v102;
          uint64_t v104 = (char *)v94 + v102;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v104, 1, v100))
          {
            uint64_t v105 = sub_10017DF08(&qword_100E6F620);
            memcpy(v103, v104, *(void *)(*(void *)(v105 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 32))(v103, v104, v100);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v103, 0, 1, v100);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v93, 0, 1, v95);
        }
        uint64_t v106 = v62[8];
        uint64_t v107 = (void *)((char *)a1 + v106);
        uint64_t v108 = (void *)((char *)a2 + v106);
        uint64_t v109 = sub_10017DF08(&qword_100E775E0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v108, 1, v109))
        {
          uint64_t v110 = sub_10017DF08(&qword_100E77818);
          memcpy(v107, v108, *(void *)(*(void *)(v110 - 8) + 64));
        }
        else
        {
          *uint64_t v107 = *v108;
          uint64_t v111 = *(int *)(v109 + 36);
          uint64_t v112 = (char *)v107 + v111;
          uint64_t v113 = (char *)v108 + v111;
          uint64_t v114 = type metadata accessor for UnitConfiguration.WindSpeed();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 32))(v112, v113, v114);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v107, 0, 1, v109);
        }
        break;
      case 6u:
        *a1 = *a2;
        uint64_t v27 = *(int *)(sub_10017DF08(&qword_100E77670) + 36);
        uint64_t v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        uint64_t v30 = type metadata accessor for UnitConfiguration.Distance();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
        uint64_t v31 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.Full(0);
        uint64_t v32 = v31[5];
        uint64_t v33 = (char *)a1 + v32;
        uint64_t v34 = (char *)a2 + v32;
        *(void *)((char *)a1 + v32) = *(void *)((char *)a2 + v32);
        uint64_t v35 = *(int *)(sub_10017DF08(&qword_100E77648) + 36);
        uint64_t v36 = &v33[v35];
        uint64_t v37 = &v34[v35];
        uint64_t v38 = type metadata accessor for UnitConfiguration.Precipitation();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
        uint64_t v39 = v31[6];
        uint64_t v40 = (char *)a1 + v39;
        uint64_t v41 = (char *)a2 + v39;
        *(void *)((char *)a1 + v39) = *(void *)((char *)a2 + v39);
        uint64_t v42 = *(int *)(sub_10017DF08(&qword_100E77630) + 36);
        uint64_t v43 = &v40[v42];
        uint64_t v44 = &v41[v42];
        uint64_t v45 = type metadata accessor for UnitConfiguration.Pressure();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
        uint64_t v46 = v31[7];
        size_t v47 = (char *)a1 + v46;
        uint64_t v48 = (char *)a2 + v46;
        *(void *)((char *)a1 + v46) = *(void *)((char *)a2 + v46);
        uint64_t v49 = *(int *)(sub_10017DF08(&qword_100E775E8) + 36);
        uint64_t v50 = &v47[v49];
        size_t v51 = &v48[v49];
        uint64_t v52 = type metadata accessor for UnitConfiguration.Temperature();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v52))
        {
          uint64_t v53 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
          memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 0, 1, v52);
        }
        uint64_t v68 = *(int *)(type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0) + 20);
        uint64_t v69 = &v47[v68];
        uint64_t v70 = &v48[v68];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v48[v68], 1, v52))
        {
          uint64_t v71 = sub_10017DF08(&qword_100E6F620);
          memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v69, v70, v52);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v69, 0, 1, v52);
        }
        uint64_t v81 = v31[8];
        uint64_t v82 = (char *)a1 + v81;
        uint64_t v83 = (char *)a2 + v81;
        *(void *)((char *)a1 + v81) = *(void *)((char *)a2 + v81);
        uint64_t v84 = *(int *)(sub_10017DF08(&qword_100E775E0) + 36);
        uint64_t v85 = &v82[v84];
        uint64_t v86 = &v83[v84];
        uint64_t v87 = type metadata accessor for UnitConfiguration.WindSpeed();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 32))(v85, v86, v87);
        *((unsigned char *)a1 + v31[9]) = *((unsigned char *)a2 + v31[9]);
        *((unsigned char *)a1 + v31[10]) = *((unsigned char *)a2 + v31[10]);
        break;
      default:
        *a1 = *a2;
        uint64_t v4 = *(int *)(sub_10017DF08(&qword_100E77670) + 36);
        uint64_t v5 = (char *)a1 + v4;
        uint64_t v6 = (char *)a2 + v4;
        uint64_t v7 = type metadata accessor for UnitConfiguration.Distance();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_10084A614()
{
  sub_100841814();
  if (v0 <= 0x3F)
  {
    sub_1008418C0();
    if (v1 <= 0x3F)
    {
      sub_10084199C();
      if (v2 <= 0x3F)
      {
        type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(319);
        if (v3 <= 0x3F)
        {
          sub_100841A30();
          if (v4 <= 0x3F)
          {
            type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(319);
            if (v5 <= 0x3F)
            {
              type metadata accessor for UnitsConfigurationViewModel.Representation.Full(319);
              if (v6 <= 0x3F) {
                swift_initEnumMetadataMultiPayload();
              }
            }
          }
        }
      }
    }
  }
}

void sub_10084A804()
{
  sub_100162EA0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for UnitConfiguration.Temperature();
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  uint64_t v10 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_10012B938();
  uint64_t v12 = sub_10017DF08(&qword_100E9B158);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_100162EB8();
  uint64_t v15 = v0 + *(int *)(v14 + 56);
  sub_10084EE58(v5, v0, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Temperature);
  sub_10084EE58(v3, v15, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Temperature);
  sub_10012B520(v0, 1, v6);
  if (!v16)
  {
    sub_10084EE58(v0, v1, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Temperature);
    sub_10012B520(v15, 1, v6);
    if (!v16)
    {
      sub_100188DE4();
      sub_100181630();
      v17();
      uint64_t v18 = sub_10017B204();
      sub_100889DCC(v18, v19);
      uint64_t v20 = *(void (**)(void))(v8 + 8);
      sub_100164F40();
      v20();
      sub_100164F40();
      v20();
      sub_100843330(v0, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Temperature);
      goto LABEL_10;
    }
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v6);
LABEL_9:
    sub_1001781AC(v0, &qword_100E9B158);
    goto LABEL_10;
  }
  sub_10012B520(v15, 1, v6);
  if (!v16) {
    goto LABEL_9;
  }
  sub_100843330(v0, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Temperature);
LABEL_10:
  sub_100162694();
}

uint64_t sub_10084AA3C()
{
  sub_100BD9420();
  if ((v0 & 1) == 0) {
    return 0;
  }
  type metadata accessor for UnitConfiguration.Precipitation();
  sub_10017DF08(&qword_100E77648);
  sub_100841954(&qword_100E9B148, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Precipitation);
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t sub_10084AAF4()
{
  sub_100BD93D8();
  if ((v0 & 1) == 0) {
    return 0;
  }
  type metadata accessor for UnitConfiguration.Pressure();
  sub_10017DF08(&qword_100E77630);
  sub_100841954(&qword_100E9B140, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Pressure);
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t sub_10084ABAC()
{
  sub_100BD9390();
  if ((v0 & 1) == 0) {
    return 0;
  }
  type metadata accessor for UnitConfiguration.WindSpeed();
  sub_10017DF08(&qword_100E775E0);
  sub_100841954(&qword_100E9B138, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.WindSpeed);
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t sub_10084AC64()
{
  if ((static Array<A>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  type metadata accessor for UnitsConfigurationViewModel.Configuration();
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

void sub_10084ACF0()
{
  sub_100162EA0();
  uint64_t v72 = v2;
  uint64_t v73 = v3;
  uint64_t v4 = type metadata accessor for UnitsConfigurationViewModel.Representation.Full(0);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_10017EF38(v6, v63[0]);
  uint64_t v7 = type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v68 = v9;
  v63[3] = sub_10017DF08(&qword_100E775E0);
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_10017B2B0(v11, v63[0]);
  uint64_t v12 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_100109314();
  uint64_t v66 = v14;
  v63[2] = sub_10017DF08(&qword_100E77630);
  sub_100162E4C();
  __chkstk_darwin(v15);
  sub_100109314();
  uint64_t v67 = v16;
  v63[1] = sub_10017DF08(&qword_100E77648);
  sub_100162E4C();
  __chkstk_darwin(v17);
  sub_1001648EC(v18, v63[0]);
  v63[0] = sub_10017DF08(&qword_100E77670);
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_100182904(v20, v63[0]);
  type metadata accessor for UnitsConfigurationViewModel.Representation(0);
  sub_100162E4C();
  __chkstk_darwin(v21);
  sub_10016278C();
  uint64_t v24 = v22 - v23;
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v28 = (char *)v63 - v27;
  __chkstk_darwin(v26);
  sub_100109770();
  uint64_t v71 = (char *)v29;
  sub_1001626D4();
  uint64_t v31 = __chkstk_darwin(v30);
  uint64_t v33 = (char *)v63 - v32;
  uint64_t v34 = __chkstk_darwin(v31);
  uint64_t v36 = (char *)v63 - v35;
  uint64_t v37 = __chkstk_darwin(v34);
  uint64_t v39 = (char *)v63 - v38;
  __chkstk_darwin(v37);
  sub_10011B090();
  uint64_t v40 = sub_10017DF08(&qword_100E9B130);
  uint64_t v41 = sub_100109308(v40);
  __chkstk_darwin(v41);
  sub_100162E88();
  uint64_t v43 = v0 + *(int *)(v42 + 56);
  sub_10084EE58(v72, v0, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation);
  sub_10084EE58(v73, v43, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10084EE58(v0, (uint64_t)v39, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation);
      if (sub_1001A34BC() != 1)
      {
        uint64_t v44 = &qword_100E77648;
        uint64_t v45 = (uint64_t)v39;
        goto LABEL_29;
      }
      uint64_t v46 = v0;
      sub_10024D364(v43, v65, &qword_100E77648);
      sub_100BD9420();
      if (v47)
      {
        type metadata accessor for UnitConfiguration.Precipitation();
        sub_100841954(&qword_100E9B148, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Precipitation);
        sub_1001A2558();
      }
      uint64_t v48 = &qword_100E77648;
      sub_10011C08C();
      uint64_t v49 = (uint64_t)v39;
      goto LABEL_41;
    case 2u:
      sub_10084EE58(v0, (uint64_t)v36, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation);
      if (sub_1001A34BC() != 2)
      {
        uint64_t v44 = &qword_100E77630;
        goto LABEL_28;
      }
      uint64_t v46 = v0;
      sub_10024D364(v43, v67, &qword_100E77630);
      sub_100BD93D8();
      if ((v50 & 1) != 0
        && (type metadata accessor for UnitConfiguration.Pressure(),
            sub_100841954(&qword_100E9B140, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Pressure), (sub_1001A2558() & 1) != 0))
      {
        uint64_t v48 = &qword_100E77630;
      }
      else
      {
        uint64_t v48 = &qword_100E77630;
      }
      goto LABEL_36;
    case 3u:
      sub_10084EE58(v0, (uint64_t)v33, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation);
      if (sub_1001A34BC() == 3)
      {
        uint64_t v51 = v66;
        sub_10084EE04(v43, v66, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature);
        sub_10017B204();
        sub_10084C748();
        uint64_t v52 = v0;
        uint64_t v53 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature;
        sub_100843330(v51, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature);
        uint64_t v54 = (uint64_t)v33;
        goto LABEL_20;
      }
      uint64_t v59 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature;
      uint64_t v60 = (uint64_t)v33;
      goto LABEL_32;
    case 4u:
      uint64_t v36 = v71;
      sub_10084EE58(v0, (uint64_t)v71, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation);
      if (sub_1001A34BC() != 4)
      {
        uint64_t v44 = &qword_100E775E0;
LABEL_28:
        uint64_t v45 = (uint64_t)v36;
        goto LABEL_29;
      }
      uint64_t v46 = v0;
      sub_10024D364(v43, v69, &qword_100E775E0);
      sub_100BD9390();
      if ((v55 & 1) != 0
        && (type metadata accessor for UnitConfiguration.WindSpeed(),
            sub_100841954(&qword_100E9B138, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.WindSpeed), (sub_1001A2558() & 1) != 0))
      {
        uint64_t v48 = &qword_100E775E0;
      }
      else
      {
        uint64_t v48 = &qword_100E775E0;
      }
LABEL_36:
      sub_10011C08C();
      uint64_t v49 = (uint64_t)v36;
      goto LABEL_41;
    case 5u:
      sub_10084EE58(v0, (uint64_t)v28, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation);
      if (sub_1001A34BC() != 5)
      {
        uint64_t v59 = type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows;
        uint64_t v60 = (uint64_t)v28;
        goto LABEL_32;
      }
      uint64_t v56 = v68;
      sub_10084EE04(v43, v68, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows);
      sub_10084B7D4();
      uint64_t v52 = v0;
      uint64_t v53 = type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows;
      sub_100843330(v56, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows);
      uint64_t v54 = (uint64_t)v28;
LABEL_20:
      sub_100843330(v54, (void (*)(void))v53);
      uint64_t v57 = v52;
      goto LABEL_23;
    case 6u:
      sub_10084EE58(v0, v24, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation);
      if (sub_1001A34BC() != 6)
      {
        uint64_t v59 = type metadata accessor for UnitsConfigurationViewModel.Representation.Full;
        uint64_t v60 = v24;
LABEL_32:
        sub_100843330(v60, (void (*)(void))v59);
        goto LABEL_33;
      }
      uint64_t v58 = v70;
      sub_10084EE04(v43, v70, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation.Full);
      sub_10084B698(v24, v58);
      sub_100843330(v58, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation.Full);
      sub_100843330(v24, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation.Full);
      uint64_t v57 = v0;
LABEL_23:
      sub_100843330(v57, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation);
      break;
    default:
      sub_10084EE58(v0, v1, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation);
      if (sub_1001A34BC())
      {
        uint64_t v44 = &qword_100E77670;
        uint64_t v45 = v1;
LABEL_29:
        sub_1001781AC(v45, v44);
LABEL_33:
        sub_1001781AC(v0, &qword_100E9B130);
      }
      else
      {
        uint64_t v46 = v0;
        uint64_t v61 = v64;
        sub_10024D364(v43, v64, &qword_100E77670);
        sub_100BD9468();
        if (v62)
        {
          type metadata accessor for UnitConfiguration.Distance();
          sub_100841954(&qword_100E9B150, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Distance);
          sub_1001A2558();
        }
        uint64_t v48 = &qword_100E77670;
        sub_1001781AC(v61, &qword_100E77670);
        uint64_t v49 = v1;
LABEL_41:
        sub_1001781AC(v49, v48);
        sub_100843330(v46, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation);
      }
      break;
  }
  sub_100162694();
}

uint64_t sub_10084B698(uint64_t a1, uint64_t a2)
{
  sub_100BD9468();
  if ((v4 & 1) == 0) {
    goto LABEL_8;
  }
  type metadata accessor for UnitConfiguration.Distance();
  sub_10017DF08(&qword_100E77670);
  sub_100841954(&qword_100E9B150, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Distance);
  if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v5 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.Full(0);
  sub_1001A2B2C(v5[5]);
  if ((sub_10084AA3C() & 1) != 0
    && (sub_1001A2B2C(v5[6]), (sub_10084AAF4() & 1) != 0)
    && (sub_1001A2B2C(v5[7]), sub_10084C748(), (v6 & 1) != 0)
    && (sub_1001A2B2C(v5[8]), (sub_10084ABAC() & 1) != 0)
    && *(unsigned __int8 *)(a1 + v5[9]) == *(unsigned __int8 *)(a2 + v5[9]))
  {
    char v7 = *(unsigned char *)(a1 + v5[10]) ^ *(unsigned char *)(a2 + v5[10]) ^ 1;
  }
  else
  {
LABEL_8:
    char v7 = 0;
  }
  return v7 & 1;
}

void sub_10084B7D4()
{
  sub_100162EA0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v132 = sub_10017DF08(&qword_100E775E0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_100109314();
  sub_100109338(v7);
  uint64_t v131 = sub_10017DF08(&qword_100E9B160);
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_100109314();
  sub_100109338(v9);
  uint64_t v10 = sub_10017DF08(&qword_100E77818);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_100162EF8();
  uint64_t v129 = v12;
  sub_1001626D4();
  __chkstk_darwin(v13);
  sub_100109770();
  uint64_t v134 = v14;
  sub_1001626D4();
  __chkstk_darwin(v15);
  sub_100128F8C();
  uint64_t v140 = v16;
  uint64_t v138 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
  sub_100162E4C();
  __chkstk_darwin(v17);
  sub_100109314();
  sub_100109338(v18);
  uint64_t v137 = sub_10017DF08(&qword_100E9B168);
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_100189F04(v20, v127);
  uint64_t v21 = sub_10017DF08(&qword_100E77810);
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_100162EF8();
  uint64_t v133 = v23;
  sub_1001626D4();
  __chkstk_darwin(v24);
  sub_100109770();
  uint64_t v144 = v25;
  sub_1001626D4();
  __chkstk_darwin(v26);
  sub_100128F8C();
  uint64_t v145 = v27;
  uint64_t v143 = sub_10017DF08(&qword_100E77630);
  sub_100162E4C();
  __chkstk_darwin(v28);
  sub_100109314();
  sub_100109338(v29);
  uint64_t v142 = sub_10017DF08(&qword_100E9B170);
  sub_100162E4C();
  __chkstk_darwin(v30);
  sub_100109314();
  uint64_t v147 = v31;
  uint64_t v32 = sub_10017DF08(&qword_100E77808);
  uint64_t v33 = sub_100109308(v32);
  __chkstk_darwin(v33);
  uint64_t v139 = (uint64_t)&v127 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v35);
  sub_100109770();
  uint64_t v148 = v36;
  sub_1001626D4();
  __chkstk_darwin(v37);
  sub_100128F8C();
  uint64_t v149 = v38;
  uint64_t v153 = sub_10017DF08(&qword_100E77648);
  sub_100162E4C();
  __chkstk_darwin(v39);
  sub_100109314();
  uint64_t v141 = v40;
  uint64_t v151 = sub_10017DF08(&qword_100E9B178);
  sub_100162E4C();
  __chkstk_darwin(v41);
  sub_10017B2B0(v42, v127);
  uint64_t v43 = sub_10017DF08(&qword_100E77800);
  uint64_t v44 = sub_100109308(v43);
  __chkstk_darwin(v44);
  sub_100162EF8();
  uint64_t v150 = v45;
  sub_1001626D4();
  __chkstk_darwin(v46);
  sub_100109770();
  uint64_t v157 = v47;
  sub_1001626D4();
  __chkstk_darwin(v48);
  sub_100128F8C();
  uint64_t v152 = v49;
  uint64_t v50 = sub_10017DF08(&qword_100E77670);
  sub_100162E4C();
  __chkstk_darwin(v51);
  sub_10016279C();
  uint64_t v52 = sub_10017DF08(&qword_100E9B180);
  uint64_t v53 = v52 - 8;
  __chkstk_darwin(v52);
  sub_100162F18();
  uint64_t v54 = sub_10017DF08(&qword_100E777F8);
  uint64_t v55 = sub_100109308(v54);
  __chkstk_darwin(v55);
  sub_10016278C();
  uint64_t v58 = v56 - v57;
  uint64_t v60 = __chkstk_darwin(v59);
  char v62 = (char *)&v127 - v61;
  __chkstk_darwin(v60);
  uint64_t v64 = (char *)&v127 - v63;
  uint64_t v155 = v5;
  sub_10006DF38(v5, (uint64_t)&v127 - v63, &qword_100E777F8);
  uint64_t v156 = v3;
  sub_10006DF38(v3, (uint64_t)v62, &qword_100E777F8);
  uint64_t v65 = v1 + *(int *)(v53 + 56);
  sub_10006DF38((uint64_t)v64, v1, &qword_100E777F8);
  sub_10006DF38((uint64_t)v62, v65, &qword_100E777F8);
  sub_10012B520(v1, 1, v50);
  if (v66)
  {
    sub_10019AE98();
    sub_10019AAC0();
    sub_10012B520(v65, 1, v50);
    if (v66)
    {
      sub_1001781AC(v1, &qword_100E777F8);
      goto LABEL_12;
    }
LABEL_9:
    uint64_t v67 = &qword_100E9B180;
    uint64_t v68 = v1;
LABEL_48:
    sub_1001781AC(v68, v67);
    goto LABEL_49;
  }
  sub_10006DF38(v1, v58, &qword_100E777F8);
  sub_10012B520(v65, 1, v50);
  if (v66)
  {
    sub_1001781AC((uint64_t)v62, &qword_100E777F8);
    sub_100109420();
    sub_1001781AC(v58, &qword_100E77670);
    goto LABEL_9;
  }
  sub_10024D364(v65, v0, &qword_100E77670);
  sub_100BD9468();
  if ((v69 & 1) == 0)
  {
    sub_1001781AC(v0, &qword_100E77670);
    sub_10019AE98();
    sub_10019AAC0();
    sub_1001781AC(v58, &qword_100E77670);
    uint64_t v68 = v1;
    uint64_t v67 = &qword_100E777F8;
    goto LABEL_48;
  }
  type metadata accessor for UnitConfiguration.Distance();
  sub_100841954(&qword_100E9B150, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Distance);
  sub_100162B34();
  char v70 = dispatch thunk of static Equatable.== infix(_:_:)();
  sub_100172470();
  sub_1001781AC((uint64_t)v62, &qword_100E777F8);
  sub_1001781AC((uint64_t)v64, &qword_100E777F8);
  sub_100185614();
  sub_1001781AC(v1, &qword_100E777F8);
  if ((v70 & 1) == 0) {
    goto LABEL_49;
  }
LABEL_12:
  uint64_t v71 = type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
  uint64_t v72 = v155;
  uint64_t v73 = &qword_100E77800;
  uint64_t v74 = v152;
  sub_10006DF38(v155 + *(int *)(v71 + 20), v152, &qword_100E77800);
  uint64_t v75 = v156;
  uint64_t v76 = v157;
  sub_10006DF38(v156 + *(int *)(v71 + 20), v157, &qword_100E77800);
  uint64_t v77 = v154;
  uint64_t v78 = v154 + *(int *)(v151 + 48);
  sub_10006DF38(v74, v154, &qword_100E77800);
  sub_10006DF38(v76, v78, &qword_100E77800);
  uint64_t v79 = v153;
  sub_10012B520(v77, 1, v153);
  if (v66)
  {
    sub_1001781AC(v76, &qword_100E77800);
    sub_100109420();
    sub_10012B520(v78, 1, v79);
    if (v66)
    {
      sub_1001781AC(v77, &qword_100E77800);
      goto LABEL_25;
    }
LABEL_20:
    uint64_t v67 = &qword_100E9B178;
LABEL_21:
    uint64_t v68 = v77;
    goto LABEL_48;
  }
  uint64_t v80 = v150;
  sub_10006DF38(v77, v150, &qword_100E77800);
  sub_10012B520(v78, 1, v79);
  if (v81)
  {
    sub_1001781AC(v76, &qword_100E77800);
    sub_1001781AC(v74, &qword_100E77800);
    sub_1001781AC(v80, &qword_100E77648);
    goto LABEL_20;
  }
  uint64_t v82 = v141;
  sub_10024D364(v78, v141, &qword_100E77648);
  sub_100BD9420();
  if ((v83 & 1) == 0)
  {
    sub_1001781AC(v82, &qword_100E77648);
    sub_1001781AC(v157, &qword_100E77800);
    sub_100109420();
    sub_1001781AC(v80, &qword_100E77648);
    uint64_t v68 = v77;
LABEL_47:
    uint64_t v67 = v73;
    goto LABEL_48;
  }
  type metadata accessor for UnitConfiguration.Precipitation();
  sub_100841954(&qword_100E9B148, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Precipitation);
  char v84 = sub_1001A2558();
  sub_1001781AC(v82, &qword_100E77648);
  sub_1001781AC(v157, &qword_100E77800);
  sub_10019AAC0();
  sub_10019D264();
  sub_100185614();
  if ((v84 & 1) == 0) {
    goto LABEL_49;
  }
LABEL_25:
  uint64_t v85 = v149;
  sub_10006DF38(v72 + *(int *)(v71 + 24), v149, &qword_100E77808);
  uint64_t v157 = v71;
  uint64_t v86 = v75 + *(int *)(v71 + 24);
  uint64_t v87 = v148;
  sub_10006DF38(v86, v148, &qword_100E77808);
  uint64_t v88 = v147;
  uint64_t v89 = v147 + *(int *)(v142 + 48);
  sub_10006DF38(v85, v147, &qword_100E77808);
  sub_10006DF38(v87, v89, &qword_100E77808);
  uint64_t v90 = v143;
  sub_10012B520(v88, 1, v143);
  if (v66)
  {
    sub_1001781AC(v87, &qword_100E77808);
    sub_1001781AC(v85, &qword_100E77808);
    sub_10012B520(v89, 1, v90);
    uint64_t v91 = v140;
    uint64_t v92 = v145;
    uint64_t v77 = v146;
    uint64_t v93 = v144;
    if (v66)
    {
      sub_1001781AC(v88, &qword_100E77808);
      goto LABEL_37;
    }
LABEL_33:
    uint64_t v67 = &qword_100E9B170;
    uint64_t v68 = v88;
    goto LABEL_48;
  }
  uint64_t v94 = v139;
  sub_10006DF38(v88, v139, &qword_100E77808);
  sub_10012B520(v89, 1, v90);
  uint64_t v92 = v145;
  uint64_t v77 = v146;
  uint64_t v93 = v144;
  if (v95)
  {
    sub_1001781AC(v148, &qword_100E77808);
    sub_1001781AC(v149, &qword_100E77808);
    sub_1001781AC(v94, &qword_100E77630);
    goto LABEL_33;
  }
  uint64_t v96 = v136;
  sub_10024D364(v89, v136, &qword_100E77630);
  sub_100BD93D8();
  if ((v97 & 1) == 0)
  {
    sub_1001781AC(v96, &qword_100E77630);
    uint64_t v73 = &qword_100E77808;
    sub_1001781AC(v148, &qword_100E77808);
    sub_1001781AC(v149, &qword_100E77808);
    sub_1001781AC(v94, &qword_100E77630);
    uint64_t v68 = v88;
    goto LABEL_47;
  }
  type metadata accessor for UnitConfiguration.Pressure();
  sub_100841954(&qword_100E9B140, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Pressure);
  char v98 = sub_1001A2558();
  sub_10019D264();
  sub_1001781AC(v148, &qword_100E77808);
  sub_1001781AC(v149, &qword_100E77808);
  sub_1001781AC(v94, &qword_100E77630);
  sub_1001781AC(v147, &qword_100E77808);
  uint64_t v91 = v140;
  if ((v98 & 1) == 0) {
    goto LABEL_49;
  }
LABEL_37:
  uint64_t v99 = v157;
  sub_10006DF38(v72 + *(int *)(v157 + 28), v92, &qword_100E77810);
  sub_10006DF38(v75 + *(int *)(v99 + 28), v93, &qword_100E77810);
  uint64_t v100 = v77 + *(int *)(v137 + 48);
  sub_10006DF38(v92, v77, &qword_100E77810);
  sub_10006DF38(v93, v100, &qword_100E77810);
  uint64_t v101 = v138;
  sub_10012B520(v77, 1, v138);
  if (v66)
  {
    sub_100109420();
    sub_1001781AC(v92, &qword_100E77810);
    sub_10012B520(v100, 1, v101);
    if (v66)
    {
      sub_1001781AC(v77, &qword_100E77810);
LABEL_51:
      sub_10006DF38(v72 + *(int *)(v99 + 32), v91, &qword_100E77818);
      sub_10006DF38(v75 + *(int *)(v99 + 32), v134, &qword_100E77818);
      uint64_t v107 = v135;
      uint64_t v108 = v135 + *(int *)(v131 + 48);
      uint64_t v109 = sub_1001887A4();
      sub_10006DF38(v109, v110, &qword_100E77818);
      uint64_t v111 = sub_10012B5E8();
      uint64_t v112 = v107;
      sub_10006DF38(v111, v113, &qword_100E77818);
      uint64_t v114 = v107;
      uint64_t v115 = v132;
      sub_10012B520(v114, 1, v132);
      if (v66)
      {
        uint64_t v116 = sub_100183094();
        sub_1001781AC(v116, v117);
        sub_10019D264();
        sub_10012B520(v108, 1, v115);
        if (v66)
        {
          sub_1001781AC(v135, &qword_100E77818);
          goto LABEL_49;
        }
        uint64_t v120 = &qword_100E9B160;
      }
      else
      {
        uint64_t v118 = v129;
        sub_10006DF38(v112, v129, &qword_100E77818);
        sub_10012B520(v108, 1, v115);
        if (v119)
        {
          uint64_t v120 = &qword_100E9B160;
        }
        else
        {
          uint64_t v121 = v128;
          sub_10024D364(v108, v128, &qword_100E775E0);
          sub_100BD9390();
          if (v122)
          {
            type metadata accessor for UnitConfiguration.WindSpeed();
            sub_100841954(&qword_100E9B138, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.WindSpeed);
            sub_1001A2558();
            sub_1001781AC(v121, &qword_100E775E0);
            sub_1001781AC(v134, &qword_100E77818);
            uint64_t v123 = sub_1001887A4();
            sub_1001781AC(v123, v124);
            sub_1001781AC(v118, &qword_100E775E0);
            uint64_t v125 = sub_10017B204();
            sub_1001781AC(v125, v126);
            goto LABEL_49;
          }
          sub_1001781AC(v121, &qword_100E775E0);
          uint64_t v120 = &qword_100E77818;
        }
        sub_1001781AC(v134, &qword_100E77818);
        sub_10019D264();
        sub_1001781AC(v118, &qword_100E775E0);
      }
      uint64_t v68 = v135;
      uint64_t v67 = v120;
      goto LABEL_48;
    }
    goto LABEL_45;
  }
  uint64_t v102 = v133;
  sub_10006DF38(v77, v133, &qword_100E77810);
  sub_10012B520(v100, 1, v101);
  if (v103)
  {
    sub_1001781AC(v93, &qword_100E77810);
    sub_1001781AC(v92, &qword_100E77810);
    sub_100843330(v102, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature);
LABEL_45:
    uint64_t v67 = &qword_100E9B168;
    goto LABEL_21;
  }
  uint64_t v104 = v130;
  sub_10084EE04(v100, v130, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature);
  sub_1001887A4();
  sub_10084C748();
  char v106 = v105;
  sub_100843330(v104, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature);
  sub_10019AAC0();
  sub_1001781AC(v92, &qword_100E77810);
  sub_100843330(v102, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature);
  sub_100185614();
  uint64_t v91 = v140;
  if (v106) {
    goto LABEL_51;
  }
LABEL_49:
  sub_100162694();
}

void sub_10084C748()
{
  sub_100162EA0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for UnitConfiguration.Temperature();
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_10011BFD8();
  uint64_t v10 = sub_10017DF08(&qword_100E80DB8);
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_100162E88();
  uint64_t v12 = sub_10017DF08(&qword_100E6F620);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_10016278C();
  uint64_t v16 = v14 - v15;
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v32 - v19;
  __chkstk_darwin(v18);
  sub_10011B090();
  sub_100BD94B0();
  if (v21)
  {
    sub_10017DF08(&qword_100E775E8);
    sub_10084A804();
    if (v22)
    {
      uint64_t v33 = v8;
      uint64_t v23 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
      sub_10006DF38(v5 + *(int *)(v23 + 20), v1, &qword_100E6F620);
      sub_10006DF38(v3 + *(int *)(v23 + 20), (uint64_t)v20, &qword_100E6F620);
      uint64_t v24 = v0 + *(int *)(v10 + 48);
      sub_10006DF38(v1, v0, &qword_100E6F620);
      sub_10006DF38((uint64_t)v20, v24, &qword_100E6F620);
      sub_10012B520(v0, 1, v6);
      if (!v25)
      {
        sub_10006DF38(v0, v16, &qword_100E6F620);
        sub_10012B520(v24, 1, v6);
        if (!v25)
        {
          uint64_t v28 = v33;
          uint64_t v29 = sub_100188DE4();
          v30(v29);
          sub_100841954(qword_100E80DC0, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Temperature);
          sub_10017B204();
          dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v31 = *(void (**)(void))(v28 + 8);
          sub_100164F40();
          v31();
          sub_100185614();
          sub_100172470();
          sub_100183094();
          sub_100164F40();
          v31();
          sub_10019AE98();
          goto LABEL_12;
        }
        sub_100185614();
        sub_100172470();
        uint64_t v26 = sub_100183094();
        v27(v26);
LABEL_11:
        sub_1001781AC(v0, &qword_100E80DB8);
        goto LABEL_12;
      }
      sub_100185614();
      sub_100172470();
      sub_10012B520(v24, 1, v6);
      if (!v25) {
        goto LABEL_11;
      }
      sub_1001781AC(v0, &qword_100E6F620);
    }
  }
LABEL_12:
  sub_100162694();
}

void sub_10084CA5C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for UnitConfiguration.Temperature();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v1;
  swift_bridgeObjectRetain();
  sub_1007075A8(a1, v10);
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_10017DF08(&qword_100E775E8);
  sub_10084EE58((uint64_t)v1 + *(int *)(v11 + 36), (uint64_t)v9, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Temperature);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v3) == 1)
  {
    Hasher._combine(_:)(1uLL);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
    Hasher._combine(_:)(0);
    sub_100841954(&qword_100E8AA50, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Temperature);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_10084CC58()
{
  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int sub_10084CCD4()
{
  return Hasher._finalize()();
}

void sub_10084CD1C()
{
  sub_100162EA0();
  uint64_t v110 = v1;
  uint64_t v111 = v5;
  uint64_t v102 = type metadata accessor for UnitsConfigurationViewModel.Representation.Full(0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_100189F04(v7, v94);
  uint64_t v8 = sub_10017DF08(&qword_100E77818);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v100 = v10;
  uint64_t v11 = sub_10017DF08(&qword_100E77808);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v97 = v13;
  uint64_t v14 = sub_10017DF08(&qword_100E77800);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_100109314();
  uint64_t v95 = v16;
  uint64_t v17 = sub_10017DF08(&qword_100E777F8);
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  sub_100109370();
  uint64_t v98 = type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v99 = v20;
  uint64_t v108 = sub_10017DF08(&qword_100E775E0);
  sub_100162E4C();
  __chkstk_darwin(v21);
  sub_100182904(v22, v94);
  uint64_t v23 = sub_10017DF08(&qword_100E6F620);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100162EF8();
  uint64_t v96 = v25;
  sub_1001626D4();
  __chkstk_darwin(v26);
  sub_10011B090();
  uint64_t v107 = type metadata accessor for UnitConfiguration.Temperature();
  sub_100179C0C();
  uint64_t v105 = v27;
  __chkstk_darwin(v28);
  sub_1001648EC(v29, v94);
  uint64_t v30 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
  uint64_t v31 = sub_100109308(v30);
  __chkstk_darwin(v31);
  uint64_t v94 = (uint64_t)&v94 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)&v94 - v34;
  uint64_t v106 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
  sub_100162E4C();
  __chkstk_darwin(v36);
  sub_10012B938();
  uint64_t v109 = sub_10017DF08(&qword_100E77630);
  sub_100162E4C();
  __chkstk_darwin(v37);
  sub_100109314();
  uint64_t v103 = v38;
  uint64_t v39 = sub_10017DF08(&qword_100E77648);
  sub_100162E4C();
  __chkstk_darwin(v40);
  sub_100162E88();
  uint64_t v41 = sub_10017DF08(&qword_100E77670);
  sub_100162E4C();
  __chkstk_darwin(v42);
  sub_1001626E0();
  uint64_t v45 = v44 - v43;
  type metadata accessor for UnitsConfigurationViewModel.Representation(0);
  sub_100162E4C();
  __chkstk_darwin(v46);
  sub_100162EB8();
  sub_10084EE58(v110, v1, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10024D364(v1, v0, &qword_100E77648);
      Hasher._combine(_:)(1uLL);
      swift_bridgeObjectRetain();
      sub_10070783C();
      swift_bridgeObjectRelease();
      type metadata accessor for UnitConfiguration.Precipitation();
      sub_100841954(&qword_100E8AA40, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Precipitation);
      sub_100164B48();
      uint64_t v48 = v0;
      uint64_t v49 = &qword_100E77648;
      goto LABEL_11;
    case 2u:
      uint64_t v47 = &qword_100E77630;
      uint64_t v50 = v103;
      sub_10024D364(v1, v103, &qword_100E77630);
      sub_1001D2544(2uLL);
      swift_bridgeObjectRetain();
      sub_100183094();
      sub_1007077F4();
      swift_bridgeObjectRelease();
      type metadata accessor for UnitConfiguration.Pressure();
      uint64_t v51 = &qword_100E8AA48;
      uint64_t v52 = &type metadata accessor for UnitConfiguration.Pressure;
      goto LABEL_9;
    case 3u:
      sub_10084EE04(v1, (uint64_t)v2, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature);
      uint64_t v53 = v111;
      Hasher._combine(_:)(3uLL);
      uint64_t v54 = *v2;
      swift_bridgeObjectRetain();
      sub_1007075A8(v53, v54);
      swift_bridgeObjectRelease();
      uint64_t v55 = sub_10017DF08(&qword_100E775E8);
      sub_10084EE58((uint64_t)v2 + *(int *)(v55 + 36), (uint64_t)v35, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Temperature);
      uint64_t v56 = v107;
      sub_10012B520((uint64_t)v35, 1, v107);
      if (v57)
      {
        Hasher._combine(_:)(1uLL);
      }
      else
      {
        sub_1001887A4();
        sub_100181630();
        v69();
        Hasher._combine(_:)(0);
        sub_100841954(&qword_100E8AA50, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Temperature);
        dispatch thunk of Hashable.hash(into:)();
        uint64_t v70 = sub_1001D0F10();
        v71(v70);
      }
      sub_10006DF38((uint64_t)v2 + *(int *)(v106 + 20), v3, &qword_100E6F620);
      sub_10012B520(v3, 1, v56);
      if (v57)
      {
        Hasher._combine(_:)(0);
      }
      else
      {
        sub_10018A404();
        sub_100181630();
        v80();
        Hasher._combine(_:)(1u);
        sub_100841954(&qword_100E8AA50, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Temperature);
        dispatch thunk of Hashable.hash(into:)();
        uint64_t v81 = sub_1001CA8D4();
        v82(v81);
      }
      char v83 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature;
      uint64_t v84 = (uint64_t)v2;
      goto LABEL_36;
    case 4u:
      uint64_t v47 = &qword_100E775E0;
      uint64_t v50 = v104;
      sub_10024D364(v1, v104, &qword_100E775E0);
      sub_1001D2544(4uLL);
      swift_bridgeObjectRetain();
      sub_100183094();
      sub_100707560();
      swift_bridgeObjectRelease();
      type metadata accessor for UnitConfiguration.WindSpeed();
      uint64_t v51 = &qword_100E8AA58;
      uint64_t v52 = &type metadata accessor for UnitConfiguration.WindSpeed;
LABEL_9:
      sub_100841954(v51, (void (*)(uint64_t))v52);
      dispatch thunk of Hashable.hash(into:)();
      uint64_t v48 = v50;
      goto LABEL_10;
    case 5u:
      uint64_t v58 = v99;
      sub_10084EE04(v1, v99, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows);
      uint64_t v59 = v111;
      Hasher._combine(_:)(5uLL);
      sub_10006DF38(v58, v4, &qword_100E777F8);
      sub_10012B520(v4, 1, v41);
      if (v57)
      {
        sub_10012B67C();
      }
      else
      {
        sub_10024D364(v4, v45, &qword_100E77670);
        sub_1001D1604();
        swift_bridgeObjectRetain();
        sub_1001639CC();
        sub_100707884();
        swift_bridgeObjectRelease();
        sub_10018B13C();
        sub_100841954(&qword_100E8AA38, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Distance);
        sub_100164B48();
        sub_100185614();
      }
      uint64_t v72 = v98;
      uint64_t v73 = v95;
      sub_10006DF38(v58 + *(int *)(v98 + 20), v95, &qword_100E77800);
      uint64_t v74 = sub_10011C004();
      sub_10012B520(v74, v75, v39);
      if (v57)
      {
        sub_10012B67C();
      }
      else
      {
        sub_10024D364(v73, v0, &qword_100E77648);
        sub_1001D1604();
        swift_bridgeObjectRetain();
        sub_10070783C();
        swift_bridgeObjectRelease();
        type metadata accessor for UnitConfiguration.Precipitation();
        sub_100841954(&qword_100E8AA40, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Precipitation);
        sub_100164B48();
        sub_10019AE98();
      }
      uint64_t v85 = v109;
      uint64_t v86 = v97;
      sub_10006DF38(v58 + *(int *)(v72 + 24), v97, &qword_100E77808);
      sub_10012B520(v86, 1, v85);
      if (v57)
      {
        sub_10012B67C();
      }
      else
      {
        uint64_t v90 = v103;
        sub_10024D364(v86, v103, &qword_100E77630);
        sub_1001D1604();
        swift_bridgeObjectRetain();
        sub_1001639CC();
        sub_1007077F4();
        swift_bridgeObjectRelease();
        type metadata accessor for UnitConfiguration.Pressure();
        sub_100841954(&qword_100E8AA48, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Pressure);
        dispatch thunk of Hashable.hash(into:)();
        sub_1001781AC(v90, &qword_100E77630);
      }
      uint64_t v91 = v108;
      sub_10084EEAC(v59);
      uint64_t v92 = v100;
      sub_10006DF38(v58 + *(int *)(v72 + 32), v100, &qword_100E77818);
      sub_10012B520(v92, 1, v91);
      if (v57)
      {
        sub_10012B67C();
      }
      else
      {
        uint64_t v93 = v104;
        sub_10024D364(v92, v104, &qword_100E775E0);
        sub_1001D1604();
        swift_bridgeObjectRetain();
        sub_1001639CC();
        sub_100707560();
        swift_bridgeObjectRelease();
        type metadata accessor for UnitConfiguration.WindSpeed();
        sub_100841954(&qword_100E8AA58, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.WindSpeed);
        dispatch thunk of Hashable.hash(into:)();
        sub_1001781AC(v93, &qword_100E775E0);
      }
      char v83 = type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows;
      uint64_t v84 = v58;
      goto LABEL_36;
    case 6u:
      uint64_t v60 = v101;
      sub_10084EE04(v1, v101, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation.Full);
      sub_1001D2544(6uLL);
      swift_bridgeObjectRetain();
      sub_10012B5E8();
      sub_100707884();
      swift_bridgeObjectRelease();
      sub_10018B13C();
      sub_100841954(&qword_100E8AA38, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Distance);
      sub_100182C20();
      uint64_t v61 = (int *)v102;
      sub_100163FC8();
      sub_10012B5E8();
      sub_10070783C();
      swift_bridgeObjectRelease();
      type metadata accessor for UnitConfiguration.Precipitation();
      sub_100841954(&qword_100E8AA40, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Precipitation);
      sub_100182C20();
      sub_100163FC8();
      sub_10012B5E8();
      sub_1007077F4();
      swift_bridgeObjectRelease();
      type metadata accessor for UnitConfiguration.Pressure();
      sub_100841954(&qword_100E8AA48, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Pressure);
      sub_100182C20();
      uint64_t v62 = v60 + v61[7];
      swift_bridgeObjectRetain();
      uint64_t v63 = sub_10012B5E8();
      sub_1007075A8(v63, v64);
      swift_bridgeObjectRelease();
      uint64_t v65 = sub_10017DF08(&qword_100E775E8);
      sub_10084EE58(v62 + *(int *)(v65 + 36), v94, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Temperature);
      uint64_t v66 = sub_10011C004();
      uint64_t v67 = v107;
      sub_10012B520(v66, v68, v107);
      if (v57)
      {
        Hasher._combine(_:)(1uLL);
      }
      else
      {
        sub_100181630();
        v76();
        Hasher._combine(_:)(0);
        sub_100841954(&qword_100E8AA50, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Temperature);
        dispatch thunk of Hashable.hash(into:)();
        uint64_t v77 = sub_1001D0F10();
        v78(v77);
      }
      uint64_t v79 = v96;
      sub_10006DF38(v62 + *(int *)(v106 + 20), v96, &qword_100E6F620);
      sub_10012B520(v79, 1, v67);
      if (v57)
      {
        Hasher._combine(_:)(0);
      }
      else
      {
        sub_10018A404();
        sub_100181630();
        v87();
        Hasher._combine(_:)(1u);
        sub_100841954(&qword_100E8AA50, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Temperature);
        dispatch thunk of Hashable.hash(into:)();
        uint64_t v88 = sub_1001CA8D4();
        v89(v88);
      }
      sub_100163FC8();
      sub_10012B5E8();
      sub_100707560();
      swift_bridgeObjectRelease();
      type metadata accessor for UnitConfiguration.WindSpeed();
      sub_100841954(&qword_100E8AA58, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.WindSpeed);
      sub_100182C20();
      Hasher._combine(_:)(*(unsigned char *)(v60 + v61[9]));
      Hasher._combine(_:)(*(unsigned char *)(v60 + v61[10]));
      char v83 = type metadata accessor for UnitsConfigurationViewModel.Representation.Full;
      uint64_t v84 = v60;
LABEL_36:
      sub_100843330(v84, (void (*)(void))v83);
      break;
    default:
      uint64_t v47 = &qword_100E77670;
      sub_10024D364(v1, v45, &qword_100E77670);
      sub_1001D2544(0);
      swift_bridgeObjectRetain();
      sub_100183094();
      sub_100707884();
      swift_bridgeObjectRelease();
      sub_10018B13C();
      sub_100841954(&qword_100E8AA38, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Distance);
      dispatch thunk of Hashable.hash(into:)();
      uint64_t v48 = v45;
LABEL_10:
      uint64_t v49 = v47;
LABEL_11:
      sub_1001781AC(v48, v49);
      break;
  }
  sub_100162694();
}

void sub_10084DCDC()
{
  sub_100162EA0();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for UnitConfiguration.Temperature();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_10016279C();
  uint64_t v9 = sub_10017DF08(&qword_100E6F620);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  swift_bridgeObjectRetain();
  sub_100707884();
  swift_bridgeObjectRelease();
  sub_10017DF08(&qword_100E77670);
  type metadata accessor for UnitConfiguration.Distance();
  sub_100841954(&qword_100E8AA38, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Distance);
  sub_10019DF6C();
  uint64_t v14 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.Full(0);
  swift_bridgeObjectRetain();
  sub_10070783C();
  swift_bridgeObjectRelease();
  sub_10017DF08(&qword_100E77648);
  type metadata accessor for UnitConfiguration.Precipitation();
  sub_100841954(&qword_100E8AA40, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Precipitation);
  dispatch thunk of Hashable.hash(into:)();
  swift_bridgeObjectRetain();
  sub_1007077F4();
  swift_bridgeObjectRelease();
  sub_10017DF08(&qword_100E77630);
  type metadata accessor for UnitConfiguration.Pressure();
  sub_100841954(&qword_100E8AA48, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Pressure);
  dispatch thunk of Hashable.hash(into:)();
  uint64_t v15 = v0 + v14[7];
  sub_10084CA5C(v4);
  uint64_t v16 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
  sub_10006DF38(v15 + *(int *)(v16 + 20), v13, &qword_100E6F620);
  sub_10012B520(v13, 1, v5);
  if (v17)
  {
    sub_10016527C();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v1, v13, v5);
    sub_1001639B4();
    sub_100841954(&qword_100E8AA50, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Temperature);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v5);
  }
  swift_bridgeObjectRetain();
  sub_100707560();
  swift_bridgeObjectRelease();
  sub_10017DF08(&qword_100E775E0);
  type metadata accessor for UnitConfiguration.WindSpeed();
  sub_100841954(&qword_100E8AA58, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.WindSpeed);
  sub_10017B400();
  Hasher._combine(_:)(*(unsigned char *)(v2 + v14[9]));
  Hasher._combine(_:)(*(unsigned char *)(v2 + v14[10]));
  sub_100162694();
}

void sub_10084E098()
{
  sub_100162EA0();
  uint64_t v5 = v4;
  uint64_t v40 = sub_10017DF08(&qword_100E775E0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_10017EF38(v7, v34);
  uint64_t v8 = sub_10017DF08(&qword_100E77818);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v39 = v10;
  uint64_t v38 = sub_10017DF08(&qword_100E77630);
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_10017B2B0(v12, v35);
  uint64_t v13 = sub_10017DF08(&qword_100E77808);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_100162F18();
  uint64_t v15 = sub_10017DF08(&qword_100E77648);
  sub_100162E4C();
  __chkstk_darwin(v16);
  sub_1001626E0();
  uint64_t v19 = v18 - v17;
  uint64_t v20 = sub_10017DF08(&qword_100E77800);
  uint64_t v21 = sub_100109308(v20);
  __chkstk_darwin(v21);
  sub_100109370();
  uint64_t v22 = sub_10017DF08(&qword_100E77670);
  sub_100162E4C();
  __chkstk_darwin(v23);
  sub_10011BFD8();
  uint64_t v24 = sub_10017DF08(&qword_100E777F8);
  uint64_t v25 = sub_100109308(v24);
  __chkstk_darwin(v25);
  sub_100162EB8();
  uint64_t v26 = sub_1001639CC();
  sub_10006DF38(v26, v27, &qword_100E777F8);
  uint64_t v28 = sub_10011C004();
  sub_10012B520(v28, v29, v22);
  if (v30)
  {
    sub_10016527C();
  }
  else
  {
    sub_10024D364(v0, v1, &qword_100E77670);
    sub_1001639B4();
    swift_bridgeObjectRetain();
    sub_100707884();
    swift_bridgeObjectRelease();
    type metadata accessor for UnitConfiguration.Distance();
    sub_100841954(&qword_100E8AA38, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Distance);
    sub_10019DF6C();
    sub_1001781AC(v1, &qword_100E77670);
  }
  uint64_t v31 = (int *)type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows(0);
  sub_10006DF38(v0 + v31[5], v2, &qword_100E77800);
  sub_10012B520(v2, 1, v15);
  if (v30)
  {
    sub_10016527C();
  }
  else
  {
    sub_10024D364(v2, v19, &qword_100E77648);
    sub_1001639B4();
    swift_bridgeObjectRetain();
    sub_10070783C();
    swift_bridgeObjectRelease();
    type metadata accessor for UnitConfiguration.Precipitation();
    sub_100841954(&qword_100E8AA40, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Precipitation);
    sub_10017B400();
    sub_1001781AC(v19, &qword_100E77648);
  }
  sub_10006DF38(v0 + v31[6], v3, &qword_100E77808);
  sub_10012B520(v3, 1, v38);
  if (v30)
  {
    sub_10016527C();
  }
  else
  {
    sub_10024D364(v3, v36, &qword_100E77630);
    sub_1001639B4();
    swift_bridgeObjectRetain();
    sub_1007077F4();
    swift_bridgeObjectRelease();
    type metadata accessor for UnitConfiguration.Pressure();
    sub_100841954(&qword_100E8AA48, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Pressure);
    sub_10019DF6C();
    sub_1001781AC(v36, &qword_100E77630);
  }
  sub_10084EEAC(v5);
  sub_10006DF38(v0 + v31[8], v39, &qword_100E77818);
  uint64_t v32 = sub_10011C004();
  sub_10012B520(v32, v33, v40);
  if (v30)
  {
    sub_10016527C();
  }
  else
  {
    sub_10024D364(v39, v37, &qword_100E775E0);
    sub_1001639B4();
    swift_bridgeObjectRetain();
    sub_100707560();
    swift_bridgeObjectRelease();
    type metadata accessor for UnitConfiguration.WindSpeed();
    sub_100841954(&qword_100E8AA58, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.WindSpeed);
    sub_10017B400();
    sub_100172470();
  }
  sub_100162694();
}

void sub_10084E5CC(uint64_t a1)
{
  uint64_t v5 = type metadata accessor for UnitConfiguration.Temperature();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_10012B938();
  uint64_t v9 = sub_10017DF08(&qword_100E6F620);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_10016279C();
  sub_10084CA5C(a1);
  uint64_t v11 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
  sub_10006DF38(v1 + *(int *)(v11 + 20), v3, &qword_100E6F620);
  sub_10012B520(v3, 1, v5);
  if (v12)
  {
    sub_10016527C();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v2, v3, v5);
    sub_1001639B4();
    sub_100841954(&qword_100E8AA50, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Temperature);
    dispatch thunk of Hashable.hash(into:)();
    uint64_t v13 = sub_10017B204();
    v14(v13);
  }
}

void sub_10084E740()
{
  uint64_t v2 = type metadata accessor for UnitConfiguration.Temperature();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_10012B938();
  sub_10084EE58(v0, v1, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Temperature);
  sub_10012B520(v1, 1, v2);
  if (v10)
  {
    Hasher._combine(_:)(1uLL);
  }
  else
  {
    sub_100181630();
    v11();
    Hasher._combine(_:)(0);
    sub_100841954(&qword_100E8AA50, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Temperature);
    sub_1001650F0();
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
  }
}

Swift::Int sub_10084E8B4(void (*a1)(unsigned char *))
{
  Hasher.init(_seed:)();
  a1(v3);
  return Hasher._finalize()();
}

uint64_t sub_10084E900()
{
  return sub_10084AC64();
}

Swift::Int sub_10084E924()
{
  return Hasher._finalize()();
}

Swift::Int sub_10084E968()
{
  return sub_10084E8B4((void (*)(unsigned char *))sub_10084CD1C);
}

Swift::Int sub_10084E998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10084EAD0(a1, a2, a3, (void (*)(unsigned char *))sub_10084CD1C);
}

Swift::Int sub_10084E9B0()
{
  return sub_10084E8B4((void (*)(unsigned char *))sub_10084DCDC);
}

Swift::Int sub_10084E9E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10084EAD0(a1, a2, a3, (void (*)(unsigned char *))sub_10084DCDC);
}

Swift::Int sub_10084E9F8()
{
  return sub_10084E8B4((void (*)(unsigned char *))sub_10084E098);
}

Swift::Int sub_10084EA28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10084EAD0(a1, a2, a3, (void (*)(unsigned char *))sub_10084E098);
}

Swift::Int sub_10084EA40()
{
  return sub_10084E8B4((void (*)(unsigned char *))sub_10084E5CC);
}

Swift::Int sub_10084EA70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10084EAD0(a1, a2, a3, (void (*)(unsigned char *))sub_10084E5CC);
}

Swift::Int sub_10084EA88()
{
  return sub_10084E8B4((void (*)(unsigned char *))sub_10084E740);
}

Swift::Int sub_10084EAB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10084EAD0(a1, a2, a3, (void (*)(unsigned char *))sub_10084E740);
}

Swift::Int sub_10084EAD0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  Hasher.init(_seed:)();
  a4(v6);
  return Hasher._finalize()();
}

uint64_t sub_10084EB14@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = sub_10017DF08(&qword_100E9B188);
  a1[4] = sub_10084F2EC();
  sub_100170694(a1);
  type metadata accessor for UnitsConfigurationViewModel(0);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_10084EBB4@<X0>(uint64_t *a1@<X8>)
{
  return sub_10084EB14(a1);
}

uint64_t sub_10084EBCC()
{
  sub_100841954(&qword_100E9B198, (void (*)(uint64_t))type metadata accessor for UnitsConfigurationViewModel);

  return ShortDescribable.description.getter();
}

uint64_t sub_10084EC38()
{
  return sub_100841954(&qword_100E9B108, (void (*)(uint64_t))type metadata accessor for UnitsConfigurationViewModel);
}

uint64_t sub_10084EC80()
{
  return sub_100841954(&qword_100E77D50, (void (*)(uint64_t))type metadata accessor for UnitsConfigurationViewModel.Temperature);
}

uint64_t sub_10084ECC8()
{
  return sub_100841954(&qword_100E9B110, (void (*)(uint64_t))type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature);
}

uint64_t sub_10084ED10()
{
  return sub_100841954(&qword_100E9B118, (void (*)(uint64_t))type metadata accessor for UnitsConfigurationViewModel.Representation.MultipleRows);
}

uint64_t sub_10084ED58()
{
  return sub_100841954(&qword_100E9B120, (void (*)(uint64_t))type metadata accessor for UnitsConfigurationViewModel.Representation.Full);
}

uint64_t sub_10084EDA0()
{
  return sub_100841954(&qword_100E9B128, (void (*)(uint64_t))type metadata accessor for UnitsConfigurationViewModel.Representation);
}

uint64_t sub_10084EDE8()
{
  return swift_getWitnessTable();
}

uint64_t sub_10084EE04(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_10084EE58(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

void sub_10084EEAC(uint64_t a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E6F620);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UnitConfiguration.Temperature();
  uint64_t v23 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature(0);
  __chkstk_darwin(v12);
  uint64_t v14 = (uint64_t *)((char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_10017DF08(&qword_100E77810);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006DF38(v1, (uint64_t)v17, &qword_100E77810);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v12) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    sub_10084EE04((uint64_t)v17, (uint64_t)v14, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature);
    Hasher._combine(_:)(1u);
    uint64_t v18 = *v14;
    swift_bridgeObjectRetain();
    sub_1007075A8(a1, v18);
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_10017DF08(&qword_100E775E8);
    sub_10084EE58((uint64_t)v14 + *(int *)(v19 + 36), (uint64_t)v11, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Temperature);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v6) == 1)
    {
      Hasher._combine(_:)(1uLL);
    }
    else
    {
      uint64_t v20 = v23;
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v8, v11, v6);
      Hasher._combine(_:)(0);
      sub_100841954(&qword_100E8AA50, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Temperature);
      dispatch thunk of Hashable.hash(into:)();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v6);
    }
    sub_10006DF38((uint64_t)v14 + *(int *)(v12 + 20), (uint64_t)v5, &qword_100E6F620);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v6) == 1)
    {
      Hasher._combine(_:)(0);
    }
    else
    {
      uint64_t v21 = v23;
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v8, v5, v6);
      Hasher._combine(_:)(1u);
      sub_100841954(&qword_100E8AA50, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Temperature);
      dispatch thunk of Hashable.hash(into:)();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v6);
    }
    sub_100843330((uint64_t)v14, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Representation.Temperature);
  }
}

unint64_t sub_10084F2EC()
{
  unint64_t result = qword_100E9B190;
  if (!qword_100E9B190)
  {
    sub_10018C6DC(&qword_100E9B188);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B190);
  }
  return result;
}

uint64_t sub_10084F340@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[7];
  sub_10020D948((uint64_t)(v1 + 2), (uint64_t)v9);
  sub_10020D948((uint64_t)(v1 + 8), (uint64_t)v8);
  uint64_t v4 = v1[13];
  uint64_t v5 = v1[14];
  sub_10020D948((uint64_t)(v1 + 15), (uint64_t)v7);
  swift_retain();
  swift_unknownObjectRetain();
  return sub_100323704(v3, (uint64_t)v9, v8, v4, v5, (uint64_t)v7, a1);
}

uint64_t sub_10084F3D4()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 64);
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 120);
  return v0;
}

uint64_t sub_10084F414()
{
  sub_10084F3D4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VFXTestModule()
{
  return self;
}

void *sub_10084F46C(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, long long *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v27 = a7;
  uint64_t v28 = a9;
  uint64_t v16 = sub_100170694(v26);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(v16, a1, a7);
  uint64_t v17 = (void *)swift_allocObject();
  uint64_t v18 = sub_1000DF0C4((uint64_t)v26, v27);
  __n128 v19 = __chkstk_darwin(v18);
  uint64_t v21 = (uint64_t *)((char *)&v26[-1] - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v22 + 16))(v21, v19);
  uint64_t v23 = *v21;
  v17[5] = type metadata accessor for VFXTestInteractor();
  v17[6] = &off_100E0D8C0;
  v17[2] = v23;
  v17[7] = a2;
  sub_1001262E4(a3, (uint64_t)(v17 + 8));
  v17[13] = a4;
  v17[14] = a10;
  sub_1001262E4(a5, (uint64_t)(v17 + 15));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v26);
  return v17;
}

uint64_t sub_10084F5F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, long long *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>)
{
  uint64_t v18 = (int *)type metadata accessor for LocationGridView();
  __n128 v19 = (uint64_t *)(a9 + v18[12]);
  type metadata accessor for ObservableResolver();
  sub_1001350E0((unint64_t *)&qword_100E70FD0, (void (*)(uint64_t))&type metadata accessor for ObservableResolver);
  *__n128 v19 = EnvironmentObject.init()();
  v19[1] = v20;
  uint64_t v21 = a9 + v18[13];
  *(void *)uint64_t v21 = swift_getKeyPath();
  *(unsigned char *)(v21 + 8) = 0;
  uint64_t v22 = a9 + v18[14];
  *(void *)uint64_t v22 = swift_getKeyPath();
  *(unsigned char *)(v22 + 8) = 0;
  uint64_t v23 = a9 + v18[15];
  *(void *)uint64_t v23 = swift_getKeyPath();
  *(_OWORD *)(v23 + 8) = 0u;
  *(_OWORD *)(v23 + 24) = 0u;
  *(_OWORD *)(v23 + 40) = 0u;
  *(_OWORD *)(v23 + 56) = 0u;
  *(unsigned char *)(v23 + 72) = 0;
  sub_100137348(a1, a9, (void (*)(void))type metadata accessor for LocationViewModel);
  *(void *)(a9 + v18[5]) = a2;
  *(void *)(a9 + v18[6]) = a3;
  *(void *)(a9 + v18[7]) = a4;
  uint64_t v24 = (void *)(a9 + v18[8]);
  *uint64_t v24 = a5;
  v24[1] = a6;
  sub_1001262E4(a7, a9 + v18[9]);
  uint64_t result = sub_100137348(a8, a9 + v18[10], (void (*)(void))type metadata accessor for DisplayMetrics);
  *(double *)(a9 + v18[11]) = a10;
  return result;
}

double sub_10084F7B4()
{
  uint64_t v1 = type metadata accessor for LocationGridView();
  memcpy(__dst, (const void *)(v0 + *(int *)(v1 + 60)), 0x49uLL);
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
  sub_1001BEAF4();
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
  memcpy(v9, v8, sizeof(v9));
  sub_1000E0E14((uint64_t)&v9[1], (uint64_t)v11);
  sub_1000E0E14((uint64_t)v11, (uint64_t)v8);
  double v2 = *(double *)v8;
  if (LOBYTE(v8[3]) == 1)
  {
    double v3 = sub_1000E0E84();
    sub_1000E0DAC((uint64_t)&v9[6] + 1, (uint64_t)&v12);
    sub_1000E0DAC((uint64_t)&v12, (uint64_t)&v13);
    double v4 = 20.0;
    if (v13 - 3 < 2) {
      double v4 = 0.0;
    }
    double v5 = v2 - (v9[7] + v9[7]) - v3 - v4;
    char v6 = sub_1000E0EF0();
    if (v9[8] >= v5 / dbl_100C616A0[v6]) {
      return v5 / dbl_100C616A0[v6];
    }
    else {
      return v9[8];
    }
  }
  return v2;
}

BOOL sub_10084F900()
{
  uint64_t v1 = v0;
  uint64_t v44 = type metadata accessor for LocationGridView();
  __chkstk_darwin(v44);
  double v3 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  char v6 = (char *)&v39 - v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v39 - v8;
  __chkstk_darwin(v10);
  char v12 = (char *)&v39 - v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v39 - v14;
  if (qword_100E627A0 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v17 = sub_1002102B0(v16, (uint64_t)qword_100F51DF8);
  sub_10085D284(v0, (uint64_t)v15, (void (*)(void))type metadata accessor for LocationGridView);
  sub_10085D284(v0, (uint64_t)v12, (void (*)(void))type metadata accessor for LocationGridView);
  sub_10085D284(v0, (uint64_t)v9, (void (*)(void))type metadata accessor for LocationGridView);
  uint64_t v43 = v17;
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v41 = v6;
    uint64_t v21 = v20;
    uint64_t v40 = swift_slowAlloc();
    v45[0] = v40;
    *(_DWORD *)uint64_t v21 = 141558787;
    __dst[0] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v21 + 12) = 2081;
    uint64_t v42 = v3;
    uint64_t v22 = Location.Identifier.name.getter();
    __dst[0] = sub_10016414C(v22, v23, v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1000B0790((uint64_t)v15, (void (*)(void))type metadata accessor for LocationGridView);
    *(_WORD *)(v21 + 22) = 2082;
    uint64_t v24 = type metadata accessor for LocationViewModel();
    BOOL v25 = v12[*(int *)(v24 + 64)] == 0;
    if (v12[*(int *)(v24 + 64)]) {
      uint64_t v26 = 1702195828;
    }
    else {
      uint64_t v26 = 0x65736C6166;
    }
    if (v25) {
      unint64_t v27 = 0xE500000000000000;
    }
    else {
      unint64_t v27 = 0xE400000000000000;
    }
    __dst[0] = sub_10016414C(v26, v27, v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1000B0790((uint64_t)v12, (void (*)(void))type metadata accessor for LocationGridView);
    *(_WORD *)(v21 + 32) = 2082;
    memcpy(__dst, &v9[*(int *)(v44 + 60)], 0x49uLL);
    sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
    sub_1001BEAF4();
    sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
    LOBYTE(v47[0]) = BYTE1(v47[6]);
    sub_10085B8D8();
    uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter();
    v47[0] = sub_10016414C(v28, v29, v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    double v3 = v42;
    sub_1000B0790((uint64_t)v9, (void (*)(void))type metadata accessor for LocationGridView);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "LocationGridView: location=%{private,mask.hash}s determining wantsMapCell. model.shouldShowAnyMap=%{public}s, mapPresentationStyle=%{public}s", (uint8_t *)v21, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    char v6 = v41;
    swift_slowDealloc();
  }
  else
  {
    sub_1000B0790((uint64_t)v15, (void (*)(void))type metadata accessor for LocationGridView);
    sub_1000B0790((uint64_t)v12, (void (*)(void))type metadata accessor for LocationGridView);
    sub_1000B0790((uint64_t)v9, (void (*)(void))type metadata accessor for LocationGridView);
  }

  sub_10085D284(v1, (uint64_t)v6, (void (*)(void))type metadata accessor for LocationGridView);
  sub_10085D284(v1, (uint64_t)v3, (void (*)(void))type metadata accessor for LocationGridView);
  char v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint64_t)v3;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    v47[0] = v43;
    *(_DWORD *)uint64_t v33 = 141558531;
    v45[0] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v33 + 12) = 2081;
    uint64_t v34 = Location.Identifier.name.getter();
    v45[0] = sub_10016414C(v34, v35, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1000B0790((uint64_t)v6, (void (*)(void))type metadata accessor for LocationGridView);
    *(_WORD *)(v33 + 22) = 2082;
    type metadata accessor for DisplayMetrics();
    sub_1001350E0(&qword_100E9B660, (void (*)(uint64_t))type metadata accessor for DisplayMetrics);
    uint64_t v36 = ShortDescribable.description.getter();
    v45[0] = sub_10016414C(v36, v37, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1000B0790(v32, (void (*)(void))type metadata accessor for LocationGridView);
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "LocationGridView: location=%{private,mask.hash}s determining wantsMapCell. displayMetrics=%{public}s", (uint8_t *)v33, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1000B0790((uint64_t)v6, (void (*)(void))type metadata accessor for LocationGridView);
    sub_1000B0790((uint64_t)v3, (void (*)(void))type metadata accessor for LocationGridView);
  }

  if (*(unsigned char *)(v1 + *(int *)(type metadata accessor for LocationViewModel() + 64)) != 1) {
    return 0;
  }
  memcpy(v47, (const void *)(v1 + *(int *)(v44 + 60)), 0x49uLL);
  sub_1001F4DEC((uint64_t)v47, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
  sub_1001BEAF4();
  sub_1001F4DEC((uint64_t)v47, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
  return v46 == 3;
}

uint64_t sub_100850094@<X0>(uint64_t a1@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v3 = type metadata accessor for LocationGridView();
  uint64_t v4 = v3 - 8;
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E9B318);
  sub_100179C0C();
  uint64_t v36 = v9;
  uint64_t v37 = v8;
  __chkstk_darwin(v8);
  sub_10011BFD8();
  sub_10017DF08(&qword_100E9B320);
  sub_100179C0C();
  uint64_t v38 = v11;
  uint64_t v39 = v10;
  __chkstk_darwin(v10);
  uint64_t v34 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v35 = (uint64_t)v32 - v14;
  sub_10085059C((uint64_t)&v46);
  long long v42 = v46;
  long long v43 = v47;
  int v44 = v48;
  char v45 = v49;
  uint64_t v41 = *(void *)(v1 + *(int *)(type metadata accessor for LocationViewModel() + 28));
  sub_10085D284(v1, (uint64_t)v7, (void (*)(void))type metadata accessor for LocationGridView);
  uint64_t v15 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v16 = (v15 + 16) & ~v15;
  void v32[2] = v16 + v6;
  v32[1] = v15 | 7;
  uint64_t v17 = swift_allocObject();
  v32[0] = v16;
  sub_100137348((uint64_t)v7, v17 + v16, (void (*)(void))type metadata accessor for LocationGridView);
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_10017DF08(&qword_100E9B328);
  uint64_t v19 = sub_10017DF08(&qword_100E9B330);
  unint64_t v20 = sub_10085A64C();
  unint64_t v21 = sub_10085B5EC();
  uint64_t v33 = v2;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  sub_10085B660(v42, *((uint64_t *)&v42 + 1), v43, *((uint64_t *)&v43 + 1), v44, v45);
  if (*(void *)(v1 + *(int *)(v4 + 56)))
  {
    type metadata accessor for TipCoordinator();
    swift_retain();
    ObservableResolver.resolve<A>(_:)();
    swift_release();
    if ((void)v46)
    {
      char v22 = sub_1001357F8();
      swift_release();
      LOBYTE(v42) = v22 & 1;
      sub_10085D284(v1, (uint64_t)v7, (void (*)(void))type metadata accessor for LocationGridView);
      uint64_t v23 = swift_allocObject();
      sub_100137348((uint64_t)v7, v23 + v32[0], (void (*)(void))type metadata accessor for LocationGridView);
      *(void *)&long long v46 = v18;
      *((void *)&v46 + 1) = v19;
      *(void *)&long long v47 = v20;
      *((void *)&v47 + 1) = v21;
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      uint64_t v25 = (uint64_t)v34;
      uint64_t v26 = v37;
      View.onChange<A>(of:initial:_:)();
      swift_release();
      sub_100162F0C();
      v27();
      *(void *)&long long v46 = v26;
      *((void *)&v46 + 1) = &type metadata for Bool;
      *(void *)&long long v47 = OpaqueTypeConformance2;
      *((void *)&v47 + 1) = &protocol witness table for Bool;
      swift_getOpaqueTypeConformance2();
      uint64_t v28 = v35;
      uint64_t v29 = v39;
      sub_100121584(v25, v39, v35);
      char v30 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
      v30(v25, v29);
      sub_100121584(v28, v29, v40);
      return ((uint64_t (*)(uint64_t, uint64_t))v30)(v28, v29);
    }
    __break(1u);
  }
  type metadata accessor for ObservableResolver();
  sub_1001350E0((unint64_t *)&qword_100E70FD0, (void (*)(uint64_t))&type metadata accessor for ObservableResolver);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_10085059C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  *(void *)&long long v211 = type metadata accessor for LocationGridView();
  sub_100179C0C();
  uint64_t v5 = v4;
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v8);
  uint64_t v9 = (uint64_t)&v206 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v206 - v11;
  BOOL v13 = sub_10084F900();
  if (qword_100E627A0 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_1002102B0(v14, (uint64_t)qword_100F51DF8);
  sub_10085D284(v1, (uint64_t)v12, (void (*)(void))type metadata accessor for LocationGridView);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v209 = a1;
  if (v17)
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(void *)&long long v210 = (char *)&v206 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v207 = v1;
    *(void *)&__dst[0] = v19;
    *(_DWORD *)uint64_t v18 = 141558531;
    *(void *)&long long v216 = 1752392040;
    uint64_t v208 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v18 + 12) = 2081;
    uint64_t v20 = Location.Identifier.name.getter();
    *(void *)&long long v216 = sub_10016414C(v20, v21, (uint64_t *)__dst);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1000B0790((uint64_t)v12, (void (*)(void))type metadata accessor for LocationGridView);
    *(_WORD *)(v18 + 22) = 1026;
    LODWORD(v216) = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "LocationGridView: location=%{private,mask.hash}s wantsMapCell=%{BOOL,public}d", (uint8_t *)v18, 0x1Cu);
    swift_arrayDestroy();
    uint64_t v2 = v207;
    uint64_t v9 = v210;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1000B0790((uint64_t)v12, (void (*)(void))type metadata accessor for LocationGridView);
  }

  unint64_t v22 = *(void *)(v2 + *(int *)(type metadata accessor for LocationViewModel() + 32));
  switch((v22 >> 59) & 0x1E | (v22 >> 2) & 1)
  {
    case 1uLL:
      sub_100188158();
      sub_1001A18E4();
      sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
      sub_1001A48CC();
      uint64_t v32 = sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
      uint64_t v33 = v220;
      sub_10019D95C(v32, v34, (void (*)(void))type metadata accessor for LocationGridView);
      sub_10017A9F0();
      swift_allocObject();
      sub_1001A34D4();
      sub_100137348(v9, v35, (void (*)(void))type metadata accessor for LocationGridView);
      sub_100186C04();
      if (v31) {
        uint64_t v36 = 0;
      }
      else {
        uint64_t v36 = v9;
      }
      sub_10019F240(v36 | v33);
      *(void *)&long long v213 = sub_10085B928;
      sub_1001639D8();
      swift_retain();
      sub_10017DF08(&qword_100E9B3A8);
      sub_10017DF08(&qword_100E9B3B8);
      sub_1001246C8(&qword_100E9B3A0, &qword_100E9B3A8);
      sub_1001246C8(&qword_100E9B3B0, &qword_100E9B3B8);
      sub_100180538();
      sub_10019B654();
      BYTE1(v214) = 1;
      goto LABEL_21;
    case 2uLL:
      sub_100188158();
      sub_1001A18E4();
      sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
      sub_1001A48CC();
      uint64_t v37 = sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
      uint64_t v38 = v220;
      sub_10019D95C(v37, v39, (void (*)(void))type metadata accessor for LocationGridView);
      sub_10017A9F0();
      swift_allocObject();
      sub_1001A34D4();
      sub_100137348(v9, v40, (void (*)(void))type metadata accessor for LocationGridView);
      sub_100186C04();
      if (v31) {
        uint64_t v41 = 0;
      }
      else {
        uint64_t v41 = v9;
      }
      sub_10019F240(v41 | v38);
      *(void *)&long long v213 = sub_10085B928;
      sub_1001872CC();
      swift_retain();
      sub_10017DF08(&qword_100E9B3A8);
      sub_10017DF08(&qword_100E9B3B8);
      sub_1001246C8(&qword_100E9B3A0, &qword_100E9B3A8);
      sub_1001246C8(&qword_100E9B3B0, &qword_100E9B3B8);
      sub_100180538();
      sub_10017F144();
LABEL_21:
      sub_10017DF08(&qword_100E9B378);
      sub_10017DF08(&qword_100E9B398);
      sub_10085A83C();
      sub_10085A8DC();
      sub_10017D5DC();
      sub_100181838(v218);
      goto LABEL_39;
    case 3uLL:
      sub_100188158();
      sub_1001A18E4();
      sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
      sub_1001A48CC();
      uint64_t v42 = sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
      uint64_t v43 = v220;
      sub_10019D95C(v42, v44, (void (*)(void))type metadata accessor for LocationGridView);
      sub_10017A9F0();
      swift_allocObject();
      sub_1001A34D4();
      sub_100137348(v9, v45, (void (*)(void))type metadata accessor for LocationGridView);
      sub_100186C04();
      if (v31) {
        uint64_t v46 = 0;
      }
      else {
        uint64_t v46 = v9;
      }
      sub_10019F240(v46 | v43);
      *(void *)&long long v213 = sub_10085B928;
      sub_1001639D8();
      swift_retain();
      sub_10017DF08(&qword_100E9B3E8);
      sub_10017DF08(&qword_100E9B3F8);
      sub_1001246C8(&qword_100E9B3E0, &qword_100E9B3E8);
      sub_1001246C8(&qword_100E9B3F0, &qword_100E9B3F8);
      sub_100180538();
      sub_1001A0EB8();
      sub_10017DF08(&qword_100E9B3D8);
      sub_10017DF08(&qword_100E9B408);
      sub_10085AA1C();
      sub_10085AAE0();
      sub_10017D5DC();
      sub_1001D1E54();
      BYTE2(v214) = 1;
      goto LABEL_39;
    case 4uLL:
      sub_100188158();
      sub_1001A18E4();
      sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
      sub_1001A48CC();
      uint64_t v47 = sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
      uint64_t v48 = v220;
      sub_10019D95C(v47, v49, (void (*)(void))type metadata accessor for LocationGridView);
      sub_10017A9F0();
      swift_allocObject();
      sub_1001A34D4();
      sub_100137348(v9, v50, (void (*)(void))type metadata accessor for LocationGridView);
      sub_100186C04();
      if (v31) {
        uint64_t v51 = 0;
      }
      else {
        uint64_t v51 = v9;
      }
      sub_10019F240(v51 | v48);
      *(void *)&long long v213 = sub_10085B928;
      sub_1001872CC();
      swift_retain();
      sub_10017DF08(&qword_100E9B3E8);
      sub_10017DF08(&qword_100E9B3F8);
      sub_1001246C8(&qword_100E9B3E0, &qword_100E9B3E8);
      sub_1001246C8(&qword_100E9B3F0, &qword_100E9B3F8);
      sub_100180538();
      sub_1001A0EB8();
      goto LABEL_38;
    case 5uLL:
      sub_100188158();
      sub_1001A18E4();
      sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
      sub_1001A48CC();
      uint64_t v52 = sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
      uint64_t v53 = v220;
      sub_10019D95C(v52, v54, (void (*)(void))type metadata accessor for LocationGridView);
      sub_10017A9F0();
      swift_allocObject();
      sub_1001A34D4();
      sub_100137348(v9, v55, (void (*)(void))type metadata accessor for LocationGridView);
      sub_100186C04();
      if (v31) {
        uint64_t v56 = 0;
      }
      else {
        uint64_t v56 = v9;
      }
      sub_10019F240(v56 | v53);
      *(void *)&long long v213 = sub_10085B928;
      sub_1001639D8();
      swift_retain();
      sub_10017DF08(&qword_100E9B418);
      char v57 = sub_10017DF08(&qword_100E9B428);
      sub_1001246C8(&qword_100E9B410, &qword_100E9B418);
      sub_1001246C8(&qword_100E9B420, &qword_100E9B428);
      sub_100180538();
      sub_100182C3C();
      sub_10017DF08(&qword_100E9B3D8);
      sub_10017DF08(&qword_100E9B408);
      sub_10085AA1C();
      sub_10085AAE0();
      sub_10017D5DC();
      sub_100165294(v218);
      *(unsigned char *)(v58 - 256) = v57;
      goto LABEL_39;
    case 6uLL:
      sub_100188158();
      sub_1001A18E4();
      sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
      sub_1001A48CC();
      uint64_t v59 = sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
      uint64_t v60 = v220;
      sub_10019D95C(v59, v61, (void (*)(void))type metadata accessor for LocationGridView);
      sub_10017A9F0();
      swift_allocObject();
      sub_1001A34D4();
      sub_100137348(v9, v62, (void (*)(void))type metadata accessor for LocationGridView);
      sub_100186C04();
      if (v31) {
        uint64_t v63 = 0;
      }
      else {
        uint64_t v63 = v9;
      }
      sub_10019F240(v63 | v60);
      *(void *)&long long v213 = sub_10085B928;
      sub_1001872CC();
      swift_retain();
      sub_10017DF08(&qword_100E9B418);
      sub_10017DF08(&qword_100E9B428);
      sub_1001246C8(&qword_100E9B410, &qword_100E9B418);
      sub_1001246C8(&qword_100E9B420, &qword_100E9B428);
      sub_100180538();
      sub_10017F144();
LABEL_38:
      sub_10017DF08(&qword_100E9B3D8);
      sub_10017DF08(&qword_100E9B408);
      sub_10085AA1C();
      sub_10085AAE0();
      sub_10017D5DC();
      sub_100165294(v218);
      *(unsigned char *)(v64 - 256) = v2;
LABEL_39:
      sub_10017DF08(&qword_100E9B368);
      sub_10017DF08(&qword_100E9B3C8);
      sub_10085A7C0();
      sub_10085A9A0();
      sub_10017D5DC();
      sub_10018A020();
      sub_100189478(v65);
      goto LABEL_80;
    case 7uLL:
      sub_100188158();
      sub_1001A18E4();
      sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
      sub_1001A48CC();
      uint64_t v66 = sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
      uint64_t v67 = v220;
      sub_10019D95C(v66, v68, (void (*)(void))type metadata accessor for LocationGridView);
      sub_10017A9F0();
      swift_allocObject();
      sub_1001A34D4();
      sub_100137348(v9, v69, (void (*)(void))type metadata accessor for LocationGridView);
      sub_100186C04();
      if (v31) {
        uint64_t v70 = 0;
      }
      else {
        uint64_t v70 = v9;
      }
      sub_10019F240(v70 | v67);
      *(void *)&long long v213 = sub_10085B928;
      sub_1001639D8();
      swift_retain();
      sub_10017DF08(&qword_100E9B468);
      sub_10017DF08(&qword_100E9B478);
      sub_1001246C8(&qword_100E9B460, &qword_100E9B468);
      sub_1001246C8(&qword_100E9B470, &qword_100E9B478);
      sub_100180538();
      sub_1001A0EB8();
      sub_10017DF08(&qword_100E9B458);
      sub_10017DF08(&qword_100E9B488);
      sub_10085AC9C();
      sub_10085AD60();
      sub_10017D5DC();
      sub_100181838(v218);
      sub_10017DF08(&qword_100E9B448);
      sub_10017DF08(&qword_100E9B4B8);
      sub_10085AC20();
      sub_10085AE24();
      sub_10017D5DC();
      sub_10018A020();
      if (v31) {
        char v72 = 0;
      }
      long long v212 = v216;
      long long v213 = v217;
      BYTE2(v214) = v72;
      LOWORD(v214) = v71;
      HIBYTE(v214) = 1;
      goto LABEL_80;
    case 8uLL:
      sub_100188158();
      sub_1001A18E4();
      sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
      sub_1001A48CC();
      uint64_t v73 = sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
      uint64_t v74 = v220;
      sub_10019D95C(v73, v75, (void (*)(void))type metadata accessor for LocationGridView);
      sub_10017A9F0();
      swift_allocObject();
      sub_1001A34D4();
      sub_100137348(v9, v76, (void (*)(void))type metadata accessor for LocationGridView);
      sub_100188DF8();
      if (v31) {
        uint64_t v77 = 0;
      }
      else {
        uint64_t v77 = v2;
      }
      sub_10019F240(v77 | v74);
      *(void *)&long long v213 = sub_10085B928;
      sub_10017F5A0();
      swift_retain();
      sub_10017DF08(&qword_100E9B468);
      sub_10017DF08(&qword_100E9B478);
      sub_1001246C8(&qword_100E9B460, &qword_100E9B468);
      sub_1001246C8(&qword_100E9B470, &qword_100E9B478);
      sub_100180538();
      sub_1001A0EB8();
      goto LABEL_59;
    case 9uLL:
      sub_100188158();
      sub_1001A18E4();
      sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
      sub_1001A48CC();
      uint64_t v78 = sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
      uint64_t v79 = v220;
      sub_10019D95C(v78, v80, (void (*)(void))type metadata accessor for LocationGridView);
      sub_10017A9F0();
      swift_allocObject();
      sub_1001A34D4();
      sub_100137348(v9, v81, (void (*)(void))type metadata accessor for LocationGridView);
      sub_100186C04();
      if (v31) {
        uint64_t v82 = 0;
      }
      else {
        uint64_t v82 = v9;
      }
      sub_10019F240(v82 | v79);
      *(void *)&long long v213 = sub_10085B928;
      sub_1001639D8();
      swift_retain();
      sub_10017DF08(&qword_100E9B498);
      char v83 = sub_10017DF08(&qword_100E9B4A8);
      sub_1001246C8(&qword_100E9B490, &qword_100E9B498);
      sub_1001246C8(&qword_100E9B4A0, &qword_100E9B4A8);
      sub_100180538();
      sub_100182C3C();
      sub_10017DF08(&qword_100E9B458);
      sub_10017DF08(&qword_100E9B488);
      sub_10085AC9C();
      sub_10085AD60();
      sub_10017D5DC();
      sub_100181838(v218);
      goto LABEL_73;
    case 0xAuLL:
      sub_100188158();
      sub_1001A18E4();
      sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
      sub_1001A48CC();
      uint64_t v84 = sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
      uint64_t v85 = v220;
      sub_10019D95C(v84, v86, (void (*)(void))type metadata accessor for LocationGridView);
      sub_10017A9F0();
      swift_allocObject();
      sub_1001A34D4();
      sub_100137348(v9, v87, (void (*)(void))type metadata accessor for LocationGridView);
      sub_100188DF8();
      if (v31) {
        uint64_t v88 = 0;
      }
      else {
        uint64_t v88 = v2;
      }
      sub_10019F240(v88 | v85);
      *(void *)&long long v213 = sub_10085B928;
      sub_10017F5A0();
      swift_retain();
      sub_10017DF08(&qword_100E9B498);
      sub_10017DF08(&qword_100E9B4A8);
      sub_1001246C8(&qword_100E9B490, &qword_100E9B498);
      sub_1001246C8(&qword_100E9B4A0, &qword_100E9B4A8);
      sub_100180538();
      sub_10018C574();
LABEL_59:
      sub_10017DF08(&qword_100E9B458);
      sub_10017DF08(&qword_100E9B488);
      sub_10085AC9C();
      sub_10085AD60();
      sub_10017D5DC();
      sub_100181838(v218);
      goto LABEL_79;
    case 0xBuLL:
      sub_100188158();
      sub_1001A18E4();
      sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
      sub_1001A48CC();
      uint64_t v89 = sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
      uint64_t v90 = v220;
      sub_10019D95C(v89, v91, (void (*)(void))type metadata accessor for LocationGridView);
      sub_10017A9F0();
      swift_allocObject();
      sub_1001A34D4();
      sub_100137348(v9, v92, (void (*)(void))type metadata accessor for LocationGridView);
      sub_100186C04();
      if (v31) {
        uint64_t v93 = 0;
      }
      else {
        uint64_t v93 = v9;
      }
      sub_10019F240(v93 | v90);
      *(void *)&long long v213 = sub_10085B928;
      sub_1001639D8();
      swift_retain();
      sub_10017DF08(&qword_100E9B4D8);
      sub_10017DF08(&qword_100E9B4E8);
      sub_1001246C8(&qword_100E9B4D0, &qword_100E9B4D8);
      sub_1001246C8(&qword_100E9B4E0, &qword_100E9B4E8);
      sub_100180538();
      sub_1001A0EB8();
      sub_10017DF08(&qword_100E9B4C8);
      sub_10017DF08(&qword_100E9B4F8);
      sub_10085AEA0();
      sub_10085AF64();
      sub_10017D5DC();
      sub_1001D1E54();
      char v83 = 1;
      goto LABEL_72;
    case 0xCuLL:
      sub_100188158();
      sub_1001A18E4();
      sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
      sub_1001A48CC();
      uint64_t v94 = sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
      uint64_t v95 = v220;
      sub_10019D95C(v94, v96, (void (*)(void))type metadata accessor for LocationGridView);
      sub_10017A9F0();
      swift_allocObject();
      sub_1001A34D4();
      sub_100137348(v9, v97, (void (*)(void))type metadata accessor for LocationGridView);
      sub_100188DF8();
      if (v31) {
        uint64_t v98 = 0;
      }
      else {
        uint64_t v98 = v2;
      }
      sub_10019F240(v98 | v95);
      *(void *)&long long v213 = sub_10085B928;
      sub_10017F5A0();
      swift_retain();
      sub_10017DF08(&qword_100E9B4D8);
      sub_10017DF08(&qword_100E9B4E8);
      sub_1001246C8(&qword_100E9B4D0, &qword_100E9B4D8);
      sub_1001246C8(&qword_100E9B4E0, &qword_100E9B4E8);
      sub_100180538();
      sub_1001A0EB8();
      goto LABEL_78;
    case 0xDuLL:
      sub_100188158();
      sub_1001A18E4();
      sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
      sub_1001A48CC();
      uint64_t v99 = sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
      uint64_t v100 = v220;
      sub_10019D95C(v99, v101, (void (*)(void))type metadata accessor for LocationGridView);
      sub_10017A9F0();
      swift_allocObject();
      sub_1001A34D4();
      sub_100137348(v9, v102, (void (*)(void))type metadata accessor for LocationGridView);
      sub_100186C04();
      if (v31) {
        uint64_t v103 = 0;
      }
      else {
        uint64_t v103 = v9;
      }
      sub_10019F240(v103 | v100);
      *(void *)&long long v213 = sub_10085B928;
      sub_1001639D8();
      swift_retain();
      sub_10017DF08(&qword_100E9B508);
      char v83 = sub_10017DF08(&qword_100E9B518);
      sub_1001246C8(&qword_100E9B500, &qword_100E9B508);
      sub_1001246C8(&qword_100E9B510, &qword_100E9B518);
      sub_100180538();
      sub_100182C3C();
      sub_10017DF08(&qword_100E9B4C8);
      sub_10017DF08(&qword_100E9B4F8);
      sub_10085AEA0();
      sub_10085AF64();
      sub_10017D5DC();
      sub_1001D1E54();
LABEL_72:
      BYTE2(v214) = v83;
LABEL_73:
      sub_10017DF08(&qword_100E9B448);
      sub_10017DF08(&qword_100E9B4B8);
      sub_10085AC20();
      sub_10085AE24();
      sub_10017D5DC();
      sub_10018A020();
      sub_100166D24(v104);
      *(unsigned char *)(v105 - 256) = v83;
      goto LABEL_80;
    case 0xEuLL:
      sub_100188158();
      sub_1001A18E4();
      sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
      sub_1001A48CC();
      uint64_t v106 = sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
      uint64_t v107 = v220;
      sub_10019D95C(v106, v108, (void (*)(void))type metadata accessor for LocationGridView);
      sub_10017A9F0();
      swift_allocObject();
      sub_1001A34D4();
      sub_100137348(v9, v109, (void (*)(void))type metadata accessor for LocationGridView);
      sub_100188DF8();
      if (v31) {
        uint64_t v110 = 0;
      }
      else {
        uint64_t v110 = v2;
      }
      sub_10019F240(v110 | v107);
      *(void *)&long long v213 = sub_10085B928;
      sub_10017F5A0();
      swift_retain();
      sub_10017DF08(&qword_100E9B508);
      sub_10017DF08(&qword_100E9B518);
      sub_1001246C8(&qword_100E9B500, &qword_100E9B508);
      sub_1001246C8(&qword_100E9B510, &qword_100E9B518);
      sub_100180538();
      sub_10018C574();
LABEL_78:
      sub_10017DF08(&qword_100E9B4C8);
      sub_10017DF08(&qword_100E9B4F8);
      sub_10085AEA0();
      sub_10085AF64();
      sub_10017D5DC();
      sub_100165294(v218);
      *(unsigned char *)(v111 - 256) = v9;
LABEL_79:
      sub_10017DF08(&qword_100E9B448);
      sub_10017DF08(&qword_100E9B4B8);
      sub_10085AC20();
      sub_10085AE24();
      sub_10017D5DC();
      sub_10018A020();
      sub_100166D24(v112);
      *(unsigned char *)(v113 - 256) = v9;
LABEL_80:
      sub_10017DF08(&qword_100E9B358);
      sub_10017DF08(&qword_100E9B438);
      sub_10085A744();
      sub_10085ABA4();
      sub_10017D5DC();
      sub_100185CBC();
      if (v31) {
        int v30 = 0;
      }
      goto LABEL_83;
    case 0xFuLL:
      sub_100188158();
      sub_1001A18E4();
      sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
      sub_1001A48CC();
      uint64_t v120 = sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
      uint64_t v121 = v220;
      sub_10019D95C(v120, v122, (void (*)(void))type metadata accessor for LocationGridView);
      sub_10017A9F0();
      swift_allocObject();
      sub_1001A34D4();
      sub_100137348(v9, v123, (void (*)(void))type metadata accessor for LocationGridView);
      sub_100186C04();
      if (v31) {
        uint64_t v124 = 0;
      }
      else {
        uint64_t v124 = v9;
      }
      sub_10019F240(v124 | v121);
      *(void *)&long long v213 = sub_10085B928;
      sub_1001639D8();
      swift_retain();
      sub_10017DF08(&qword_100E9B568);
      uint64_t v125 = sub_10017DF08(&qword_100E9B578);
      sub_1001246C8(&qword_100E9B560, &qword_100E9B568);
      sub_1001246C8(&qword_100E9B570, &qword_100E9B578);
      sub_100180538();
      sub_1001A0EB8();
      sub_10017DF08(&qword_100E9B558);
      sub_10017DF08(&qword_100E9B588);
      sub_10085B19C();
      sub_10085B260();
      sub_10017D5DC();
      sub_100181838(v218);
      sub_10017DF08(&qword_100E9B548);
      sub_10017DF08(&qword_100E9B5B8);
      sub_10085B120();
      sub_10085B324();
      sub_10017D5DC();
      sub_10018A020();
      sub_100189478(v126);
      goto LABEL_133;
    case 0x10uLL:
      sub_100188158();
      sub_1001A18E4();
      sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
      sub_1001A48CC();
      uint64_t v127 = sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
      uint64_t v128 = v220;
      sub_10019D95C(v127, v129, (void (*)(void))type metadata accessor for LocationGridView);
      sub_10017A9F0();
      swift_allocObject();
      sub_1001A34D4();
      sub_100137348(v9, v130, (void (*)(void))type metadata accessor for LocationGridView);
      sub_100186C04();
      if (v31) {
        uint64_t v131 = 0;
      }
      else {
        uint64_t v131 = v9;
      }
      sub_10019F240(v131 | v128);
      *(void *)&long long v213 = sub_10085B928;
      sub_100183248();
      swift_retain();
      sub_10017DF08(&qword_100E9B568);
      uint64_t v132 = sub_10017DF08(&qword_100E9B578);
      sub_1001246C8(&qword_100E9B560, &qword_100E9B568);
      sub_1001246C8(&qword_100E9B570, &qword_100E9B578);
      sub_100180538();
      sub_1001A0EB8();
      goto LABEL_101;
    case 0x11uLL:
      sub_100188158();
      sub_1001A18E4();
      sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
      sub_1001A48CC();
      uint64_t v133 = sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
      uint64_t v134 = v220;
      sub_10019D95C(v133, v135, (void (*)(void))type metadata accessor for LocationGridView);
      sub_10017A9F0();
      swift_allocObject();
      sub_1001A34D4();
      sub_100137348(v9, v136, (void (*)(void))type metadata accessor for LocationGridView);
      sub_100186C04();
      if (v31) {
        uint64_t v137 = 0;
      }
      else {
        uint64_t v137 = v9;
      }
      sub_10019F240(v137 | v134);
      *(void *)&long long v213 = sub_10085B928;
      sub_1001639D8();
      swift_retain();
      sub_10017DF08(&qword_100E9B598);
      uint64_t v132 = sub_10017DF08(&qword_100E9B5A8);
      sub_1001246C8(&qword_100E9B590, &qword_100E9B598);
      sub_1001246C8(&qword_100E9B5A0, &qword_100E9B5A8);
      sub_100180538();
      sub_10017B41C();
      goto LABEL_100;
    case 0x12uLL:
      sub_100188158();
      sub_1001A18E4();
      sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
      sub_1001A48CC();
      uint64_t v138 = sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
      uint64_t v139 = v220;
      sub_10019D95C(v138, v140, (void (*)(void))type metadata accessor for LocationGridView);
      sub_10017A9F0();
      swift_allocObject();
      sub_1001A34D4();
      sub_100137348(v9, v141, (void (*)(void))type metadata accessor for LocationGridView);
      sub_100186C04();
      if (v31) {
        uint64_t v142 = 0;
      }
      else {
        uint64_t v142 = v9;
      }
      sub_10019F240(v142 | v139);
      *(void *)&long long v213 = sub_10085B928;
      sub_100183248();
      swift_retain();
      sub_10017DF08(&qword_100E9B598);
      uint64_t v132 = sub_10017DF08(&qword_100E9B5A8);
      sub_1001246C8(&qword_100E9B590, &qword_100E9B598);
      sub_1001246C8(&qword_100E9B5A0, &qword_100E9B5A8);
      sub_100180538();
      sub_10019B654();
LABEL_100:
      BYTE1(v214) = (_BYTE)v15;
LABEL_101:
      sub_10017DF08(&qword_100E9B558);
      sub_10017DF08(&qword_100E9B588);
      sub_10085B19C();
      sub_10085B260();
      sub_10017D5DC();
      sub_100181838(v218);
      goto LABEL_121;
    case 0x13uLL:
      sub_100188158();
      sub_1001A18E4();
      sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
      sub_1001A48CC();
      uint64_t v143 = sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
      uint64_t v144 = v220;
      sub_10019D95C(v143, v145, (void (*)(void))type metadata accessor for LocationGridView);
      sub_10017A9F0();
      swift_allocObject();
      sub_1001A34D4();
      sub_100137348(v9, v146, (void (*)(void))type metadata accessor for LocationGridView);
      sub_100186C04();
      if (v31) {
        uint64_t v147 = 0;
      }
      else {
        uint64_t v147 = v9;
      }
      sub_10019F240(v147 | v144);
      *(void *)&long long v213 = sub_10085B928;
      sub_1001639D8();
      swift_retain();
      sub_10017DF08(&qword_100E9B5D8);
      uint64_t v132 = sub_10017DF08(&qword_100E9B5E8);
      sub_1001246C8(&qword_100E9B5D0, &qword_100E9B5D8);
      sub_1001246C8(&qword_100E9B5E0, &qword_100E9B5E8);
      sub_100180538();
      sub_1001A0EB8();
      sub_10017DF08(&qword_100E9B5C8);
      sub_10017DF08(&qword_100E9B5F8);
      sub_10085B3A0();
      sub_10085B464();
      sub_10017D5DC();
      sub_1001D1E54();
      LOBYTE(v15) = 1;
      goto LABEL_120;
    case 0x14uLL:
      sub_100188158();
      sub_1001A18E4();
      sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
      sub_1001A48CC();
      uint64_t v148 = sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
      uint64_t v149 = v220;
      sub_10019D95C(v148, v150, (void (*)(void))type metadata accessor for LocationGridView);
      sub_10017A9F0();
      swift_allocObject();
      sub_1001A34D4();
      sub_100137348(v9, v151, (void (*)(void))type metadata accessor for LocationGridView);
      sub_100186C04();
      if (v31) {
        uint64_t v152 = 0;
      }
      else {
        uint64_t v152 = v9;
      }
      sub_10019F240(v152 | v149);
      *(void *)&long long v213 = sub_10085B928;
      sub_100183248();
      swift_retain();
      sub_10017DF08(&qword_100E9B5D8);
      uint64_t v132 = sub_10017DF08(&qword_100E9B5E8);
      sub_1001246C8(&qword_100E9B5D0, &qword_100E9B5D8);
      sub_1001246C8(&qword_100E9B5E0, &qword_100E9B5E8);
      sub_100180538();
      sub_1001A0EB8();
      goto LABEL_119;
    case 0x15uLL:
      sub_100188158();
      sub_1001A18E4();
      sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
      sub_1001A48CC();
      uint64_t v153 = sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
      uint64_t v154 = v220;
      sub_10019D95C(v153, v155, (void (*)(void))type metadata accessor for LocationGridView);
      sub_10017A9F0();
      swift_allocObject();
      sub_1001A34D4();
      sub_100137348(v9, v156, (void (*)(void))type metadata accessor for LocationGridView);
      sub_100186C04();
      if (v31) {
        uint64_t v157 = 0;
      }
      else {
        uint64_t v157 = v9;
      }
      sub_10019F240(v157 | v154);
      *(void *)&long long v213 = sub_10085B928;
      sub_1001639D8();
      swift_retain();
      sub_10017DF08(&qword_100E9B608);
      uint64_t v132 = sub_10017DF08(&qword_100E9B618);
      sub_1001246C8(&qword_100E9B600, &qword_100E9B608);
      sub_1001246C8(&qword_100E9B610, &qword_100E9B618);
      sub_100180538();
      sub_10017B41C();
      goto LABEL_118;
    case 0x16uLL:
      sub_100188158();
      sub_1001A18E4();
      sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
      sub_1001A48CC();
      uint64_t v158 = sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
      uint64_t v159 = v220;
      sub_10019D95C(v158, v160, (void (*)(void))type metadata accessor for LocationGridView);
      sub_10017A9F0();
      swift_allocObject();
      sub_1001A34D4();
      sub_100137348(v9, v161, (void (*)(void))type metadata accessor for LocationGridView);
      sub_100186C04();
      if (v31) {
        uint64_t v162 = 0;
      }
      else {
        uint64_t v162 = v9;
      }
      sub_10019F240(v162 | v159);
      *(void *)&long long v213 = sub_10085B928;
      sub_100183248();
      swift_retain();
      sub_10017DF08(&qword_100E9B608);
      uint64_t v132 = sub_10017DF08(&qword_100E9B618);
      sub_1001246C8(&qword_100E9B600, &qword_100E9B608);
      sub_1001246C8(&qword_100E9B610, &qword_100E9B618);
      sub_100180538();
      sub_10019B654();
LABEL_118:
      BYTE1(v214) = (_BYTE)v15;
LABEL_119:
      sub_10017DF08(&qword_100E9B5C8);
      sub_10017DF08(&qword_100E9B5F8);
      sub_10085B3A0();
      sub_10085B464();
      sub_10017D5DC();
      sub_1001D1E54();
LABEL_120:
      BYTE2(v214) = (_BYTE)v15;
LABEL_121:
      sub_10017DF08(&qword_100E9B548);
      sub_10017DF08(&qword_100E9B5B8);
      sub_10085B120();
      sub_10085B324();
      sub_10017D5DC();
      sub_10018A020();
      sub_100189478(v163);
      goto LABEL_122;
    case 0x17uLL:
      sub_100188158();
      sub_1001A18E4();
      sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
      sub_1001A48CC();
      uint64_t v187 = sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
      uint64_t v188 = v220;
      sub_10019D95C(v187, v189, (void (*)(void))type metadata accessor for LocationGridView);
      sub_10017A9F0();
      swift_allocObject();
      sub_1001A34D4();
      sub_100137348(v9, v190, (void (*)(void))type metadata accessor for LocationGridView);
      sub_100186C04();
      if (v31) {
        uint64_t v191 = 0;
      }
      else {
        uint64_t v191 = v9;
      }
      sub_10019F240(v191 | v188);
      *(void *)&long long v213 = sub_10085B928;
      sub_1001639D8();
      swift_retain();
      sub_10017DF08(&qword_100E9B638);
      uint64_t v125 = sub_10017DF08(&qword_100E9B648);
      sub_1001246C8(&qword_100E9B630, &qword_100E9B638);
      sub_1001246C8(&qword_100E9B640, &qword_100E9B648);
      sub_100180538();
      sub_10018B158();
LABEL_133:
      uint64_t v192 = sub_10017DF08(&qword_100E9B538);
      uint64_t v193 = sub_10017DF08(&qword_100E9B628);
      unint64_t v194 = sub_10085B0A4();
      sub_10085B528();
      sub_10017D5DC();
      sub_100185CBC();
      if (v31) {
        int v195 = 0;
      }
      *(void *)&long long v212 = v192;
      *((void *)&v212 + 1) = v193;
      *(void *)&long long v213 = v194;
      *((void *)&v213 + 1) = v125;
      int v214 = v195 | v9;
      char v215 = 1;
      goto LABEL_126;
    case 0x18uLL:
      sub_100188158();
      sub_1001A18E4();
      sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
      sub_1001A48CC();
      uint64_t v196 = sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
      uint64_t v197 = v220;
      sub_10019D95C(v196, v198, (void (*)(void))type metadata accessor for LocationGridView);
      sub_10017A9F0();
      swift_allocObject();
      sub_1001A34D4();
      sub_100137348(v9, v199, (void (*)(void))type metadata accessor for LocationGridView);
      sub_100186C04();
      if (v31) {
        uint64_t v200 = 0;
      }
      else {
        uint64_t v200 = v9;
      }
      sub_10019F240(v200 | v197);
      *(void *)&long long v213 = sub_10085B928;
      sub_100183248();
      swift_retain();
      sub_10017DF08(&qword_100E9B638);
      uint64_t v132 = sub_10017DF08(&qword_100E9B648);
      sub_1001246C8(&qword_100E9B630, &qword_100E9B638);
      sub_1001246C8(&qword_100E9B640, &qword_100E9B648);
      sub_100180538();
      sub_10018B158();
LABEL_122:
      uint64_t v164 = sub_10017DF08(&qword_100E9B538);
      uint64_t v165 = sub_10017DF08(&qword_100E9B628);
      unint64_t v166 = sub_10085B0A4();
      sub_10085B528();
      sub_10017D5DC();
      sub_100185CBC();
      if (v31) {
        int v167 = 0;
      }
      *(void *)&long long v212 = v164;
      *((void *)&v212 + 1) = v165;
      *(void *)&long long v213 = v166;
      *((void *)&v213 + 1) = v132;
      int v214 = v167 | v9;
      char v215 = (char)v15;
LABEL_126:
      uint64_t v168 = sub_100188BC8();
      sub_10085B92C(v168, v169, v170, v171, v172, v173);
      sub_10017DF08(&qword_100E9B348);
      sub_10017DF08(&qword_100E9B528);
      sub_10085A6C8();
      sub_10085B028();
      sub_1001825BC();
      swift_release();
      uint64_t v174 = sub_100188BC8();
      sub_10085B7DC(v174, v175, v176, v177, v178, v179);
      goto LABEL_127;
    case 0x19uLL:
      LOBYTE(v218) = 0;
      long long v216 = 0u;
      long long v217 = 0u;
      sub_10017DF08(&qword_100E9B388);
      sub_1001246C8(&qword_100E9B380, &qword_100E9B388);
      _ConditionalContent<>.init(storage:)();
      sub_1001D161C();
      LOWORD(v218) = v201;
      sub_10017DF08(&qword_100E9B378);
      sub_10017DF08(&qword_100E9B398);
      sub_10085A83C();
      sub_10085A8DC();
      sub_100162BDC();
      sub_1001D161C();
      LOWORD(v218) = v202;
      BYTE2(v218) = 0;
      sub_10017DF08(&qword_100E9B368);
      sub_10017DF08(&qword_100E9B3C8);
      sub_10085A7C0();
      sub_10085A9A0();
      sub_100162BDC();
      sub_1001D161C();
      HIWORD(v218) = v203;
      LOWORD(v218) = v204;
      sub_10017DF08(&qword_100E9B358);
      sub_10017DF08(&qword_100E9B438);
      sub_10085A744();
      sub_10085ABA4();
      sub_100162BDC();
      sub_1001D161C();
      int v218 = v205;
      char v219 = 0;
      sub_10017DF08(&qword_100E9B348);
      sub_10017DF08(&qword_100E9B528);
      sub_10085A6C8();
      sub_10085B028();
      sub_100162BDC();
      long long v180 = __dst[0];
      long long v181 = __dst[1];
      int v182 = __dst[2];
      char v183 = BYTE4(__dst[2]);
      goto LABEL_128;
    default:
      memcpy(__dst, (const void *)(v2 + *(int *)(v211 + 60)), 0x49uLL);
      *(void *)&long long v211 = v22 & 0xFFFFFFFFFFFFFFBLL;
      swift_retain_n();
      sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
      sub_1001A48CC();
      uint64_t v23 = sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
      uint64_t v24 = v220;
      sub_10019D95C(v23, v25, (void (*)(void))type metadata accessor for LocationGridView);
      unint64_t v26 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v27 = swift_allocObject();
      sub_100137348(v9, v27 + v26, (void (*)(void))type metadata accessor for LocationGridView);
      if (v13) {
        uint64_t v28 = 256;
      }
      else {
        uint64_t v28 = 0;
      }
      *(void *)&long long v212 = v22;
      *((void *)&v212 + 1) = v28 | v24;
      *(void *)&long long v213 = sub_10085B928;
      *((void *)&v213 + 1) = v27;
      LOBYTE(v214) = 1;
      swift_retain();
      swift_retain();
      sub_10017DF08(&qword_100E9B388);
      sub_1001246C8(&qword_100E9B380, &qword_100E9B388);
      _ConditionalContent<>.init(storage:)();
      sub_1001A0EB8();
      sub_10017DF08(&qword_100E9B378);
      sub_10017DF08(&qword_100E9B398);
      sub_10085A83C();
      sub_10085A8DC();
      sub_10017D5DC();
      sub_100181838(v218);
      sub_10017DF08(&qword_100E9B368);
      sub_10017DF08(&qword_100E9B3C8);
      sub_10085A7C0();
      sub_10085A9A0();
      sub_10017D5DC();
      sub_10018A020();
      sub_100189478(v29);
      sub_10017DF08(&qword_100E9B358);
      sub_10017DF08(&qword_100E9B438);
      sub_10085A744();
      sub_10085ABA4();
      sub_10017D5DC();
      sub_100185CBC();
      if (v31) {
        int v30 = 0;
      }
LABEL_83:
      sub_10018AAC0(v30);
      sub_10017DF08(&qword_100E9B348);
      sub_10017DF08(&qword_100E9B528);
      sub_10085A6C8();
      sub_10085B028();
      sub_1001825BC();
      swift_release();
      uint64_t v114 = sub_100188BC8();
      sub_10085B674(v114, v115, v116, v117, v118, v119);
LABEL_127:
      swift_release();
      swift_release();
      long long v180 = v216;
      long long v181 = v217;
      int v182 = v218;
      char v183 = v219;
LABEL_128:
      uint64_t v184 = v209;
      long long v210 = v180;
      long long v211 = v181;
      long long v216 = v180;
      long long v217 = v181;
      int v218 = v182;
      char v219 = v183;
      uint64_t v185 = sub_10017DF08(&qword_100E9B328);
      sub_10085A64C();
      sub_100121584((uint64_t)&v216, v185, v184);
      return sub_10085B660(v210, *((uint64_t *)&v210 + 1), v211, *((uint64_t *)&v211 + 1), v182, v183);
  }
}

uint64_t sub_100853380(uint64_t a1)
{
  uint64_t result = type metadata accessor for LocationViewModel();
  if (*(void *)(*(void *)(a1 + *(int *)(result + 28)) + 16)) {
    return sub_1008533BC();
  }
  return result;
}

uint64_t sub_1008533BC()
{
  unint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for LocationViewModel() + 32));
  uint64_t v2 = type metadata accessor for LocationGridView();
  memcpy(__dst, (const void *)(v0 + *(int *)(v2 + 60)), 0x49uLL);
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
  sub_1001BEAF4();
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
  BOOL v3 = sub_10084F900();
  uint64_t result = (uint64_t)sub_100570564(v6, v3, v1);
  if (result)
  {
    if (*(void *)(v0 + *(int *)(v2 + 48)))
    {
      type metadata accessor for TipCoordinator();
      swift_retain();
      ObservableResolver.resolve<A>(_:)();
      swift_release();
      if (v5)
      {
        sub_10007B510();
        swift_bridgeObjectRelease();
        return swift_release();
      }
      __break(1u);
    }
    type metadata accessor for ObservableResolver();
    sub_1001350E0((unint64_t *)&qword_100E70FD0, (void (*)(uint64_t))&type metadata accessor for ObservableResolver);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100853548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v135 = a3;
  uint64_t v9 = type metadata accessor for LocationGridView();
  uint64_t v115 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v116 = v10;
  uint64_t v117 = (uint64_t)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v112 = *(void *)(v131 - 8);
  __chkstk_darwin(v131);
  uint64_t v113 = v11;
  uint64_t v114 = (uint64_t)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E9B670);
  __chkstk_darwin(v12 - 8);
  uint64_t v119 = (uint64_t)&v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_10017DF08(&qword_100E9B678);
  __chkstk_darwin(v118);
  uint64_t v130 = (uint64_t)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_10017DF08(&qword_100E9B680);
  __chkstk_darwin(v122);
  uint64_t v120 = (uint64_t)&v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E9B688);
  uint64_t v124 = *(void *)(v16 - 8);
  uint64_t v125 = v16;
  __chkstk_darwin(v16);
  uint64_t v123 = (char *)&v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_10017DF08(&qword_100E9B690);
  __chkstk_darwin(v121);
  __int16 v126 = (char *)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_10017DF08(&qword_100E9B698);
  __chkstk_darwin(v104);
  uint64_t v106 = (uint64_t)&v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_10017DF08(&qword_100E9B6A0);
  __chkstk_darwin(v105);
  unint64_t v21 = (char *)&v100 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_10017DF08(&qword_100E9B6A8);
  __chkstk_darwin(v108);
  uint64_t v107 = (uint64_t)&v100 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = type metadata accessor for LocationComponentViewModel();
  __chkstk_darwin(v111);
  uint64_t v24 = (char *)&v100 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1;
  uint64_t v26 = sub_100854248(v4, a2);
  uint64_t v133 = v29;
  uint64_t v134 = v28;
  uint64_t v135 = v27;
  if (__OFSUB__(v27, v26))
  {
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v30 = v26;
  uint64_t v103 = a4;
  *(void *)&long long v132 = v27 - v26;
  double v31 = sub_10084F7B4();
  uint64_t v32 = v9;
  uint64_t v33 = (const void *)(v4 + *(int *)(v9 + 60));
  memcpy(__dst, v33, 0x49uLL);
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
  sub_1001BEAF4();
  uint64_t v34 = v132;
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
  double v35 = *(double *)&v142[5];
  uint64_t v36 = v5;
  uint64_t v102 = v21;
  if (v34)
  {
    if (__OFSUB__(v34, 1))
    {
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    uint64_t v110 = v34 - 1;
  }
  else
  {
    uint64_t v110 = 0;
  }
  uint64_t v127 = v25 + *(int *)(v131 + 20);
  uint64_t v37 = sub_1008545C0(v30, v135, v134, v133, v127);
  double v38 = sub_10084F7B4();
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
  sub_1001BEAF4();
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
  double v39 = *(double *)&v142[5];
  if (!v37) {
    goto LABEL_10;
  }
  uint64_t v40 = v37 - 1;
  if (__OFSUB__(v37, 1))
  {
    __break(1u);
LABEL_10:
    uint64_t v40 = 0;
  }
  int v128 = sub_100854758(v36, v30, v135, v134, v133, v25);
  uint64_t v41 = *(int *)(v32 + 48);
  uint64_t v129 = v36;
  if (!*(void *)(v36 + v41))
  {
LABEL_51:
    type metadata accessor for ObservableResolver();
    sub_1001350E0((unint64_t *)&qword_100E70FD0, (void (*)(uint64_t))&type metadata accessor for ObservableResolver);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
    return result;
  }
  uint64_t v131 = v30;
  uint64_t v101 = v33;
  type metadata accessor for TipCoordinator();
  swift_retain();
  ObservableResolver.resolve<A>(_:)();
  swift_release();
  if (!v142[0])
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  double v42 = v31 * (double)(uint64_t)v132 + v35 * (double)v110;
  double v43 = v38 * (double)v37 + v39 * (double)v40;
  uint64_t v44 = v127;
  LODWORD(v110) = sub_10013542C(v127);
  swift_release();
  sub_10085D284(v44, (uint64_t)v24, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload) {
    BOOL v46 = EnumCaseMultiPayload == 3;
  }
  else {
    BOOL v46 = 1;
  }
  int v47 = !v46;
  LODWORD(v111) = v47;
  sub_1000B0790((uint64_t)v24, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v109 = v25;
  uint64_t v48 = v114;
  sub_10085D284(v25, v114, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  uint64_t v49 = v117;
  sub_10085D284(v129, v117, (void (*)(void))type metadata accessor for LocationGridView);
  unint64_t v50 = (*(unsigned __int8 *)(v112 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v112 + 80);
  unint64_t v51 = (v113 + *(unsigned __int8 *)(v115 + 80) + v50) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80);
  unint64_t v52 = (v116 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v53 = (v52 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v54 = (v52 + 55) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v55 = (v52 + 71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v56 = swift_allocObject();
  sub_100137348(v48, v56 + v50, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100137348(v49, v56 + v51, (void (*)(void))type metadata accessor for LocationGridView);
  char v57 = (uint64_t *)(v56 + v52);
  uint64_t v59 = v134;
  uint64_t v58 = v135;
  *char v57 = v131;
  v57[1] = v58;
  uint64_t v60 = v133;
  v57[2] = v59;
  v57[3] = v60;
  unint64_t v61 = v56 + v53;
  *(double *)unint64_t v61 = v42;
  LODWORD(v117) = v128 & 1;
  *(unsigned char *)(v61 + 8) = v128 & 1;
  unint64_t v62 = v56 + v54;
  *(double *)unint64_t v62 = v43;
  *(unsigned char *)(v62 + 8) = v111;
  *(void *)(v56 + v55) = v132;
  uint64_t v63 = v119;
  sub_10085525C(v109, (void (*)(void))sub_10085CAD8, v56, v119);
  swift_release();
  type metadata accessor for ExtendedAppLaunchState(0);
  sub_1001350E0(&qword_100E7A498, (void (*)(uint64_t))type metadata accessor for ExtendedAppLaunchState);
  uint64_t v64 = Environment.init<A>(_:)();
  LOBYTE(v56) = v65;
  char v141 = 0;
  State.init(wrappedValue:)();
  LOBYTE(v51) = v142[0];
  uint64_t v66 = v142[1];
  uint64_t v67 = v130;
  sub_10006DF38(v63, v130, &qword_100E9B670);
  uint64_t v68 = v67 + *(int *)(v118 + 36);
  *(void *)uint64_t v68 = v64;
  *(unsigned char *)(v68 + 8) = v56 & 1;
  *(unsigned char *)(v68 + 16) = v51;
  *(void *)(v68 + 24) = v66;
  sub_10017DF4C(v63, &qword_100E9B670);
  if (!v59)
  {
    sub_10017DF08(&qword_100E9B788);
    uint64_t inited = swift_initStackObject();
    long long v132 = xmmword_100C251B0;
    *(_OWORD *)(inited + 16) = xmmword_100C251B0;
    *(void *)(inited + 32) = 0;
    sub_10017DF08(&qword_100E6BF70);
    uint64_t v70 = swift_allocObject();
    *(_OWORD *)(v70 + 16) = v132;
    *(void *)(v70 + 32) = v131;
    *(void *)(v70 + 40) = v58;
    *(void *)(inited + 40) = v70;
  }
  sub_10017DF08(&qword_100E8F948);
  uint64_t v71 = Dictionary.init(dictionaryLiteral:)();
  uint64_t v73 = v125;
  uint64_t v72 = (uint64_t)v126;
  uint64_t v75 = v123;
  uint64_t v74 = v124;
  uint64_t v76 = v122;
  uint64_t v77 = v130;
  uint64_t v78 = v120;
  sub_10006DF38(v130, v120, &qword_100E9B678);
  *(void *)(v78 + *(int *)(v76 + 36)) = v71;
  sub_10017DF4C(v77, &qword_100E9B678);
  sub_10085CBCC();
  View.navigationDestinationScope()();
  sub_10017DF4C(v78, &qword_100E9B680);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v74 + 16))(v72, v75, v73);
  uint64_t v79 = (_OWORD *)(v72 + *(int *)(v121 + 36));
  long long v80 = v139;
  *uint64_t v79 = v138;
  v79[1] = v80;
  v79[2] = v140;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v75, v73);
  int v81 = v131;
  if (v131 > 0x7FFFFFFF) {
    goto LABEL_42;
  }
  int v82 = v135;
  if (v135 > 0x7FFFFFFF)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if ((int)v135 < (int)v131)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  int v83 = v134;
  if (v134 > 0x7FFFFFFF)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  int v84 = v133;
  if (v133 < (uint64_t)0xFFFFFFFF80000000
    || v134 < (uint64_t)0xFFFFFFFF80000000
    || v131 < (uint64_t)0xFFFFFFFF80000000
    || v135 < (uint64_t)0xFFFFFFFF80000000)
  {
    goto LABEL_46;
  }
  if (v133 > 0x7FFFFFFF)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  if ((int)v133 < (int)v134)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v88 = v106;
  sub_10006DF38(v72, v106, &qword_100E9B690);
  uint64_t v89 = (_DWORD *)(v88 + *(int *)(v104 + 36));
  *uint64_t v89 = v81;
  v89[1] = v82;
  v89[2] = v83;
  v89[3] = v84;
  sub_10017DF4C(v72, &qword_100E9B690);
  if (v110) {
    double v90 = 1.0;
  }
  else {
    double v90 = 0.0;
  }
  uint64_t v91 = (uint64_t)v102;
  sub_10006DF38(v88, (uint64_t)v102, &qword_100E9B698);
  *(double *)(v91 + *(int *)(v105 + 36)) = v90;
  sub_10017DF4C(v88, &qword_100E9B698);
  uint64_t v136 = sub_1001F26C0();
  uint64_t v137 = v92;
  v93._uint64_t countAndFlagsBits = 45;
  v93._object = (void *)0xE100000000000000;
  String.append(_:)(v93);
  memcpy(v142, v101, 0x49uLL);
  sub_1001F4DEC((uint64_t)v142, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
  sub_1001BEAF4();
  sub_1001F4DEC((uint64_t)v142, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
  sub_100A30964();
  v94._uint64_t countAndFlagsBits = Double.description.getter();
  String.append(_:)(v94);
  swift_bridgeObjectRelease();
  uint64_t v95 = v136;
  uint64_t v96 = v137;
  uint64_t v97 = v107;
  sub_10006DF38(v91, v107, &qword_100E9B6A0);
  uint64_t v98 = (uint64_t *)(v97 + *(int *)(v108 + 52));
  *uint64_t v98 = v95;
  v98[1] = v96;
  sub_10017DF4C(v91, &qword_100E9B6A0);
  return sub_10024D364(v97, v103, &qword_100E9B6A8);
}

uint64_t sub_100854248(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationGridView();
  memcpy(__dst, (const void *)(a1 + *(int *)(v4 + 60)), 0x49uLL);
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
  sub_1001BEAF4();
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
  if (!v14[48])
  {
    uint64_t v5 = *(void *)(a1 + *(int *)(type metadata accessor for LocationViewModel() + 88));
    type metadata accessor for LocationComponentContainerViewModel();
    sub_1001F26C0();
    sub_100A03A30();
    swift_bridgeObjectRelease();
    sub_10024D364((uint64_t)v11, (uint64_t)v12, &qword_100E64E88);
    if ((v13 & 1) == 0)
    {
      uint64_t v6 = v12[0];
      uint64_t v7 = v12[1];
      uint64_t v8 = v12[2];
      uint64_t v9 = v12[3];
      sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
      sub_1001BEAF4();
      sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
      return sub_1008543E4(v5, (uint64_t)v14, v6, v7, v8, v9);
    }
  }
  return a2;
}

uint64_t sub_1008543E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = type metadata accessor for LocationComponentViewModel();
  __chkstk_darwin(v10);
  uint64_t v12 = &v16[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000E0DAC(a2 + 49, (uint64_t)&v20);
  sub_1000E0DAC((uint64_t)&v20, (uint64_t)&v22);
  if (v22 - 3 <= 1)
  {
    sub_1000E0DAC((uint64_t)&v20, (uint64_t)&v21);
    if (v21 != 4) {
      return a3;
    }
  }
  if (qword_100E622D0 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for MapComponentViewModel();
  uint64_t v14 = sub_1002102B0(v13, (uint64_t)qword_100F51438);
  sub_10085D284(v14, (uint64_t)v12, (void (*)(void))type metadata accessor for MapComponentViewModel);
  swift_storeEnumTagMultiPayload();
  sub_1001F26C0();
  sub_1000B0790((uint64_t)v12, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  sub_100A03A30();
  swift_bridgeObjectRelease();
  uint64_t result = sub_10024D364((uint64_t)v16, (uint64_t)v17, &qword_100E64E88);
  if ((v19 & 1) != 0 || v18 >= a5 || !__OFSUB__(a6, 1)) {
    return a3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1008545C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for LocationComponentViewModel();
  __chkstk_darwin(v9);
  uint64_t v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for LocationGridView();
  memcpy(__dst, (const void *)(v5 + *(int *)(v12 + 60)), 0x49uLL);
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
  sub_1001BEAF4();
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
  if (v17[56])
  {
    uint64_t v13 = a4 - a3;
    if (!__OFSUB__(a4, a3)) {
      return v13;
    }
    __break(1u);
  }
  sub_10085D284(a5, (uint64_t)v11, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result != 5)
  {
    if (result != 1) {
      goto LABEL_15;
    }
    uint64_t v15 = a4 - a3;
    if (__OFSUB__(a4, a3))
    {
      __break(1u);
      goto LABEL_19;
    }
    uint64_t v13 = v15 + 2;
    if (!__OFADD__(v15, 2)) {
      goto LABEL_16;
    }
    __break(1u);
  }
  uint64_t v16 = a4 - a3;
  if (__OFSUB__(a4, a3))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v13 = v16 + 1;
  if (!__OFADD__(v16, 1)) {
    goto LABEL_16;
  }
  __break(1u);
LABEL_15:
  uint64_t v13 = a4 - a3;
  if (!__OFSUB__(a4, a3))
  {
LABEL_16:
    sub_1000B0790((uint64_t)v11, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    return v13;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_100854758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = type metadata accessor for LocationComponentViewModel();
  __chkstk_darwin(v10);
  uint64_t v12 = &v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_100E62288 != -1) {
    swift_once();
  }
  if (byte_100F51390) {
    goto LABEL_11;
  }
  char v13 = 0;
  if (byte_100F51391 & 1) != 0 || (byte_100F51392) {
    return v13 & 1;
  }
  uint64_t v14 = type metadata accessor for LocationGridView();
  memcpy(__dst, (const void *)(a1 + *(int *)(v14 + 60)), 0x49uLL);
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
  sub_1001BEAF4();
  uint64_t result = sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
  if (v21[56])
  {
LABEL_11:
    char v13 = 0;
    return v13 & 1;
  }
  if (!__OFSUB__(a3, a2))
  {
    if (a3 - a2 == 2)
    {
      uint64_t v16 = type metadata accessor for LocationComponentContainerViewModel();
      sub_10085D284(a6 + *(int *)(v16 + 20), (uint64_t)v12, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      if (swift_getEnumCaseMultiPayload() == 18)
      {
        uint64_t v17 = a1 + *(int *)(v14 + 56);
        uint64_t v18 = *(void *)v17;
        char v19 = *(unsigned char *)(v17 + 8);
        sub_100195B7C(*(void *)v17, v19);
        sub_100149AE8();
        char v13 = v20;
        sub_10018F6D8(v18, v19);
      }
      else
      {
        char v13 = 1;
      }
      sub_1000B0790((uint64_t)v12, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      return v13 & 1;
    }
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100854970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W6>, int a7@<W7>, uint64_t a8@<X8>, double a9@<D0>, uint64_t a10)
{
  int v88 = a7;
  int v86 = a6;
  uint64_t v83 = a5;
  uint64_t v72 = a4;
  uint64_t v82 = a3;
  uint64_t v73 = a8;
  uint64_t v89 = a10;
  uint64_t v13 = type metadata accessor for Location.Identifier();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v76 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = v18;
  uint64_t v19 = type metadata accessor for LocationComponentContainerView(0);
  __chkstk_darwin(v19 - 8);
  uint64_t v77 = (uint64_t)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_10017DF08(&qword_100E9B740) - 8;
  __chkstk_darwin(v79);
  uint64_t v78 = (uint64_t)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10017DF08(&qword_100E9B730);
  __chkstk_darwin(v22 - 8);
  long long v80 = (char *)&v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_10017DF08(&qword_100E9B720) - 8;
  __chkstk_darwin(v85);
  uint64_t v84 = (uint64_t)&v68 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_10017DF08(&qword_100E9B710) - 8;
  __chkstk_darwin(v87);
  int v81 = (char *)&v68 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_10017DF08(&qword_100E9B700);
  __chkstk_darwin(v68);
  uint64_t v71 = (uint64_t)&v68 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_10017DF08(&qword_100E9B6F0);
  __chkstk_darwin(v69);
  uint64_t v70 = (uint64_t)&v68 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10085D284(a1, (uint64_t)v18, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  uint64_t v28 = (int *)type metadata accessor for LocationGridView();
  uint64_t v29 = v28[9];
  uint64_t v30 = (uint64_t *)(a2 + v28[8]);
  uint64_t v31 = *v30;
  uint64_t v74 = v30[1];
  uint64_t v32 = *(void *)(a2 + v28[6]);
  uint64_t v33 = *(void *)(a2 + v28[7]);
  sub_10020D948(a2 + v29, (uint64_t)__dst);
  uint64_t v34 = type metadata accessor for LocationViewModel();
  char v35 = *(unsigned char *)(a2 + *(int *)(v34 + 68));
  uint64_t v36 = (uint64_t)v76;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v76, a2, v13);
  uint64_t v37 = *(void *)(a2 + v28[5]);
  double v38 = *(double *)(a2 + v28[11]);
  LOBYTE(v34) = *(unsigned char *)(a2 + *(int *)(v34 + 92));
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  char v67 = v34;
  uint64_t v39 = v82;
  uint64_t v40 = v77;
  sub_100134B58(v31, v74, v32, v33, (uint64_t)__dst, v35, v36, v77, v38, v37, v82, v83, v67);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v41 = v78;
  sub_10085D284(v40, v78, (void (*)(void))type metadata accessor for LocationComponentContainerView);
  double v42 = (_OWORD *)(v41 + *(int *)(v79 + 44));
  long long v43 = v92;
  *double v42 = v91;
  v42[1] = v43;
  v42[2] = v93;
  sub_1000B0790(v40, (void (*)(void))type metadata accessor for LocationComponentContainerView);
  static Alignment.center.getter();
  uint64_t v44 = (uint64_t)v80;
  sub_100BD8420();
  sub_10017DF4C(v41, &qword_100E9B740);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v46 = a2 + v28[14];
  uint64_t v47 = *(void *)v46;
  LOBYTE(v31) = *(unsigned char *)(v46 + 8);
  sub_100195B7C(*(void *)v46, v31);
  sub_100149AE8();
  char v49 = v48;
  sub_10018F6D8(v47, v31);
  uint64_t v50 = v84;
  sub_10006DF38(v44, v84, &qword_100E9B730);
  uint64_t v51 = v50 + *(int *)(v85 + 44);
  *(void *)uint64_t v51 = KeyPath;
  char v52 = v49 & 1;
  uint64_t v53 = (uint64_t)v81;
  *(unsigned char *)(v51 + 8) = v52;
  sub_10017DF4C(v44, &qword_100E9B730);
  uint64_t v54 = swift_getKeyPath();
  LOBYTE(v47) = v89 > 1;
  sub_10006DF38(v50, v53, &qword_100E9B720);
  uint64_t v55 = v53 + *(int *)(v87 + 44);
  *(void *)uint64_t v55 = v54;
  *(unsigned char *)(v55 + 8) = v47;
  sub_10017DF4C(v50, &qword_100E9B720);
  uint64_t v56 = swift_getKeyPath();
  if (*(void *)(a2 + v28[12]))
  {
    uint64_t v57 = v56;
    type metadata accessor for TipCoordinator();
    swift_retain();
    ObservableResolver.resolve<A>(_:)();
    swift_release();
    if (__dst[0])
    {
      memcpy(__dst, (const void *)(a2 + v28[15]), 0x49uLL);
      sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
      sub_1001BEAF4();
      sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
      uint64_t v58 = sub_10088CF70(v90, v39, v72);
      uint64_t v60 = v59;
      swift_release();
      uint64_t v61 = v71;
      sub_10006DF38(v53, v71, &qword_100E9B710);
      unint64_t v62 = (uint64_t *)(v61 + *(int *)(v68 + 36));
      *unint64_t v62 = v57;
      v62[1] = v58;
      v62[2] = v60;
      sub_10017DF4C(v53, &qword_100E9B710);
      uint64_t v63 = swift_getKeyPath();
      uint64_t v64 = v70;
      sub_10006DF38(v61, v70, &qword_100E9B700);
      uint64_t v65 = v64 + *(int *)(v69 + 36);
      *(void *)uint64_t v65 = v63;
      *(double *)(v65 + 8) = a9;
      *(unsigned char *)(v65 + 16) = 0;
      sub_10017DF4C(v61, &qword_100E9B700);
      return sub_10024D364(v64, v73, &qword_100E9B6F0);
    }
    __break(1u);
  }
  type metadata accessor for ObservableResolver();
  sub_1001350E0((unint64_t *)&qword_100E70FD0, (void (*)(uint64_t))&type metadata accessor for ObservableResolver);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_10085525C@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v50 = a3;
  uint64_t v51 = a2;
  uint64_t v48 = a1;
  uint64_t v40 = type metadata accessor for PinnedScrollableViews();
  __chkstk_darwin(v40);
  uint64_t v41 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_10017DF08(&qword_100E9B768);
  uint64_t v43 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  double v42 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_10017DF08(&qword_100E9B790);
  __chkstk_darwin(v44);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E9B798);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_10017DF08(&qword_100E9B6E0);
  __chkstk_darwin(v45);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for LocationComponentViewModel();
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_10017DF08(&qword_100E9B6D0);
  __chkstk_darwin(v53);
  uint64_t v46 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_10017DF08(&qword_100E9B7A0);
  __chkstk_darwin(v52);
  uint64_t v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10017DF08(&qword_100E9B6F0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100E62288 != -1) {
    swift_once();
  }
  if ((byte_100F51390 & 1) != 0 || (byte_100F51391 & 1) != 0 || byte_100F51392)
  {
    v51();
    uint64_t v27 = &qword_100E9B6F0;
    sub_10006DF38((uint64_t)v22, (uint64_t)v19, &qword_100E9B6F0);
    swift_storeEnumTagMultiPayload();
    sub_10085CD64();
    sub_10085CE78();
    _ConditionalContent<>.init(storage:)();
    uint64_t v28 = (uint64_t)v22;
  }
  else
  {
    uint64_t v23 = type metadata accessor for LocationComponentContainerViewModel();
    sub_10085D284(v48 + *(int *)(v23 + 20), (uint64_t)v16, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_1000B0790((uint64_t)v16, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    uint64_t v25 = v49;
    if (EnumCaseMultiPayload == 5 && (type metadata accessor for LocationGridView(), (sub_10058BF64() & 1) != 0))
    {
      v51();
      sub_10006DF38((uint64_t)v22, (uint64_t)v11, &qword_100E9B6F0);
      swift_storeEnumTagMultiPayload();
      sub_10085CE78();
      _ConditionalContent<>.init(storage:)();
      sub_10006DF38((uint64_t)v13, (uint64_t)v8, &qword_100E9B6E0);
      swift_storeEnumTagMultiPayload();
      sub_10085CE04();
      sub_1001246C8(&qword_100E9B760, &qword_100E9B768);
      uint64_t v26 = (uint64_t)v46;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C((uint64_t)v13, &qword_100E9B6E0);
      sub_10017DF4C((uint64_t)v22, &qword_100E9B6F0);
    }
    else
    {
      uint64_t v48 = a4;
      uint64_t v29 = v25 + *(int *)(type metadata accessor for LocationGridView() + 52);
      uint64_t v30 = *(void *)v29;
      char v31 = *(unsigned char *)(v29 + 8);
      sub_100195B7C(*(void *)v29, v31);
      sub_100149AE8();
      char v33 = v32;
      uint64_t v34 = sub_10018F6D8(v30, v31);
      if (v33)
      {
        ((void (*)(uint64_t))v51)(v34);
        sub_10006DF38((uint64_t)v22, (uint64_t)v11, &qword_100E9B6F0);
        swift_storeEnumTagMultiPayload();
        sub_10085CE78();
        _ConditionalContent<>.init(storage:)();
        sub_10006DF38((uint64_t)v13, (uint64_t)v8, &qword_100E9B6E0);
        swift_storeEnumTagMultiPayload();
        sub_10085CE04();
        sub_1001246C8(&qword_100E9B760, &qword_100E9B768);
        uint64_t v26 = (uint64_t)v46;
        _ConditionalContent<>.init(storage:)();
        sub_10017DF4C((uint64_t)v13, &qword_100E9B6E0);
        sub_10017DF4C((uint64_t)v22, &qword_100E9B6F0);
      }
      else
      {
        static HorizontalAlignment.center.getter();
        int v54 = 0;
        sub_1001350E0(&qword_100E82070, (void (*)(uint64_t))&type metadata accessor for PinnedScrollableViews);
        dispatch thunk of OptionSet.init(rawValue:)();
        sub_10085CE78();
        char v35 = v42;
        LazyVStack.init(alignment:spacing:pinnedViews:content:)();
        uint64_t v36 = v43;
        uint64_t v37 = v47;
        (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v8, v35, v47);
        swift_storeEnumTagMultiPayload();
        sub_10085CE04();
        sub_1001246C8(&qword_100E9B760, &qword_100E9B768);
        uint64_t v26 = (uint64_t)v46;
        _ConditionalContent<>.init(storage:)();
        (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v37);
      }
    }
    uint64_t v27 = &qword_100E9B6D0;
    sub_10006DF38(v26, (uint64_t)v19, &qword_100E9B6D0);
    swift_storeEnumTagMultiPayload();
    sub_10085CD64();
    sub_10085CE78();
    _ConditionalContent<>.init(storage:)();
    uint64_t v28 = v26;
  }
  return sub_10017DF4C(v28, v27);
}

uint64_t sub_100855A84()
{
  sub_10017DF08(&qword_100E65950);
  State.wrappedValue.getter();
  if (v3)
  {
    char v0 = 1;
  }
  else
  {
    swift_retain();
    sub_1005D25D4();
    swift_release();
    char v1 = sub_1004A81A8();
    swift_release();
    char v0 = v1 ^ 1;
  }
  return v0 & 1;
}

uint64_t sub_100855B20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v31 = a6;
  uint64_t v32 = sub_10017DF08(&qword_100E9B7A8);
  sub_100179C0C();
  uint64_t v30 = v11;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E9B7B0);
  sub_100162E4C();
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10017DF08(&qword_100E9B7B8);
  sub_100179C0C();
  uint64_t v20 = v19;
  __chkstk_darwin(v21);
  sub_10011BFD8();
  char v22 = a3 & 1;
  if (sub_100855A84())
  {
    uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
    v23(v6, v29, v18);
    v23((uint64_t)v17, v6, v18);
    swift_storeEnumTagMultiPayload();
    sub_1001246C8(&qword_100E9B7C0, &qword_100E9B7B8);
    char v33 = &type metadata for Color;
    uint64_t v34 = &protocol witness table for Color;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v6, v18);
  }
  else
  {
    char v33 = (void *)static Color.clear.getter();
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = a2;
    *(unsigned char *)(v25 + 24) = v22;
    *(unsigned char *)(v25 + 32) = a4 & 1;
    *(void *)(v25 + 40) = a5;
    swift_retain();
    swift_retain();
    View.onScrollVisibilityChange(threshold:_:)();
    swift_release();
    swift_release();
    uint64_t v26 = v30;
    uint64_t v27 = v32;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v17, v14, v32);
    swift_storeEnumTagMultiPayload();
    sub_1001246C8(&qword_100E9B7C0, &qword_100E9B7B8);
    char v33 = &type metadata for Color;
    uint64_t v34 = &protocol witness table for Color;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v14, v27);
  }
}

uint64_t sub_100855EA8()
{
  return State.wrappedValue.setter();
}

uint64_t sub_100855EF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100855B20(a1, *(void *)v2, *(unsigned char *)(v2 + 8), *(unsigned char *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_100855F10@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100075A00();
  *a1 = result & 1;
  return result;
}

char *sub_100855F50(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    uint64_t v14 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = type metadata accessor for Location.Identifier();
    uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16);
    v7(a1, a2, v6);
    uint64_t v8 = type metadata accessor for LocationViewModel();
    uint64_t v9 = *(int *)(v8 + 20);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v9], 1, v6))
    {
      uint64_t v12 = sub_10017DF08(&qword_100E6DC08);
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      v7(v10, v11, v6);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v6);
    }
    uint64_t v15 = *(int *)(v8 + 24);
    uint64_t v16 = &a1[v15];
    uint64_t v131 = (int *)v8;
    uint64_t v17 = &a2[v15];
    uint64_t v18 = *(void *)&a2[v15 + 8];
    *(void *)uint64_t v16 = *(void *)&a2[v15];
    *((void *)v16 + 1) = v18;
    uint64_t v19 = *(void *)&a2[v15 + 16];
    uint64_t v20 = *(void *)&a2[v15 + 24];
    uint64_t v21 = *(void *)&a2[v15 + 32];
    uint64_t v22 = *(void *)&a2[v15 + 40];
    char v23 = a2[v15 + 48];
    swift_bridgeObjectRetain();
    sub_100193004(v19, v20, v21, v22, v23);
    *((void *)v16 + 2) = v19;
    *((void *)v16 + 3) = v20;
    *((void *)v16 + 4) = v21;
    *((void *)v16 + 5) = v22;
    v16[48] = v23;
    uint64_t v24 = *((void *)v17 + 8);
    *((void *)v16 + 7) = *((void *)v17 + 7);
    *((void *)v16 + 8) = v24;
    uint64_t v25 = *((void *)v17 + 10);
    *((void *)v16 + 9) = *((void *)v17 + 9);
    *((void *)v16 + 10) = v25;
    uint64_t v26 = *((void *)v17 + 12);
    *((void *)v16 + 11) = *((void *)v17 + 11);
    *((void *)v16 + 12) = v26;
    uint64_t v27 = *((void *)v17 + 14);
    *((void *)v16 + 13) = *((void *)v17 + 13);
    *((void *)v16 + 14) = v27;
    uint64_t v28 = *((void *)v17 + 16);
    *((void *)v16 + 15) = *((void *)v17 + 15);
    *((void *)v16 + 16) = v28;
    v16[136] = v17[136];
    *(_WORD *)(v16 + 137) = *(_WORD *)(v17 + 137);
    uint64_t v29 = *((void *)v17 + 19);
    *((void *)v16 + 18) = *((void *)v17 + 18);
    *((void *)v16 + 19) = v29;
    v16[160] = v17[160];
    char v30 = v17[161];
    uint64_t v31 = v131;
    v16[161] = v30;
    *(void *)&a1[v131[7]] = *(void *)&a2[v131[7]];
    *(void *)&a1[v131[8]] = *(void *)&a2[v131[8]];
    uint64_t v32 = v131[9];
    __dst = &a1[v32];
    char v33 = &a2[v32];
    uint64_t v34 = type metadata accessor for LocationFooterViewModel();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
    {
      uint64_t v35 = sub_10017DF08(&qword_100E6DC18);
      memcpy(__dst, v33, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      char *__dst = *v33;
      *(_WORD *)(__dst + 1) = *(_WORD *)(v33 + 1);
      uint64_t v36 = *((void *)v33 + 2);
      *((void *)__dst + 1) = *((void *)v33 + 1);
      *((void *)__dst + 2) = v36;
      uint64_t v37 = *(int *)(v34 + 32);
      double v38 = &__dst[v37];
      uint64_t v39 = &v33[v37];
      uint64_t v40 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
      {
        uint64_t v41 = sub_10017DF08(&qword_100E749B0);
        memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
      }
      uint64_t v127 = (int *)v34;
      uint64_t v42 = *(int *)(v34 + 36);
      uint64_t v43 = &__dst[v42];
      uint64_t v44 = &v33[v42];
      char *v43 = v33[v42];
      *((void *)v43 + 1) = *(void *)&v33[v42 + 8];
      uint64_t v45 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
      uint64_t v46 = v45[6];
      uint64_t v47 = &v43[v46];
      uint64_t v48 = &v44[v46];
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v40))
      {
        uint64_t v49 = sub_10017DF08(&qword_100E749B0);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v40 - 8) + 16))(v47, v48, v40);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v40);
      }
      uint64_t v50 = v45[7];
      uint64_t v51 = &v43[v50];
      uint64_t v52 = &v44[v50];
      uint64_t v53 = v52[1];
      *uint64_t v51 = *v52;
      v51[1] = v53;
      *(void *)&v43[v45[8]] = *(void *)&v44[v45[8]];
      __dst[v127[10]] = v33[v127[10]];
      uint64_t v54 = v127[11];
      uint64_t v55 = &__dst[v54];
      uint64_t v56 = &v33[v54];
      uint64_t v57 = type metadata accessor for LocationOfInterest();
      swift_bridgeObjectRetain();
      swift_retain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v57))
      {
        uint64_t v58 = sub_10017DF08(&qword_100E63508);
        memcpy(v55, v56, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v55, v56, v57);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v55, 0, 1, v57);
      }
      __dst[v127[12]] = v33[v127[12]];
      __dst[v127[13]] = v33[v127[13]];
      uint64_t v59 = v127[14];
      uint64_t v60 = &__dst[v59];
      uint64_t v61 = &v33[v59];
      unint64_t v62 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, (uint64_t)v62))
      {
        uint64_t v63 = sub_10017DF08(&qword_100E6DC10);
        memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        *uint64_t v60 = *v61;
        uint64_t v64 = v62[5];
        uint64_t v65 = &v60[v64];
        uint64_t v66 = &v61[v64];
        uint64_t v67 = type metadata accessor for Location();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v67 - 8) + 16))(v65, v66, v67);
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v57 - 8) + 16))(&v60[v62[6]], &v61[v62[6]], v57);
        v60[v62[7]] = v61[v62[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, (uint64_t)v62);
      }
      uint64_t v31 = v131;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, (uint64_t)v127);
    }
    a1[v31[10]] = a2[v31[10]];
    a1[v31[11]] = a2[v31[11]];
    a1[v31[12]] = a2[v31[12]];
    a1[v31[13]] = a2[v31[13]];
    a1[v31[14]] = a2[v31[14]];
    uint64_t v68 = v31[15];
    uint64_t v69 = *(void **)&a2[v68];
    *(void *)&a1[v68] = v69;
    a1[v31[16]] = a2[v31[16]];
    a1[v31[17]] = a2[v31[17]];
    a1[v31[18]] = a2[v31[18]];
    uint64_t v70 = v31[19];
    uint64_t v71 = &a1[v70];
    uint64_t v72 = &a2[v70];
    uint64_t v73 = type metadata accessor for Date();
    uint64_t v74 = *(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16);
    id v75 = v69;
    v74(v71, v72, v73);
    uint64_t v76 = v31[20];
    uint64_t v77 = &a1[v76];
    uint64_t v78 = &a2[v76];
    uint64_t v79 = type metadata accessor for ForegroundEffect();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v78, 1, v79))
    {
      uint64_t v80 = sub_10017DF08(&qword_100E65FA8);
      memcpy(v77, v78, *(void *)(*(void *)(v80 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16))(v77, v78, v79);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v77, 0, 1, v79);
    }
    a1[v31[21]] = a2[v31[21]];
    *(void *)&a1[v31[22]] = *(void *)&a2[v31[22]];
    a1[v31[23]] = a2[v31[23]];
    uint64_t v81 = v31[24];
    uint64_t v82 = &a1[v81];
    uint64_t v83 = &a2[v81];
    uint64_t v84 = type metadata accessor for LocationEntity();
    uint64_t v85 = *(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16);
    swift_bridgeObjectRetain();
    v85(v82, v83, v84);
    uint64_t v86 = a3[6];
    *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
    *(void *)&a1[v86] = *(void *)&a2[v86];
    uint64_t v87 = a3[8];
    *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
    *(_OWORD *)&a1[v87] = *(_OWORD *)&a2[v87];
    uint64_t v88 = a3[9];
    uint64_t v89 = &a1[v88];
    unsigned __int8 v90 = &a2[v88];
    long long v91 = *(_OWORD *)&a2[v88 + 24];
    *(_OWORD *)&a1[v88 + 24] = v91;
    uint64_t v92 = v91;
    long long v93 = **(void (***)(char *, char *, uint64_t))(v91 - 8);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
    v93(v89, v90, v92);
    uint64_t v94 = a3[10];
    uint64_t v95 = &a1[v94];
    uint64_t v96 = &a2[v94];
    *(_OWORD *)uint64_t v95 = *(_OWORD *)&a2[v94];
    v95[16] = a2[v94 + 16];
    v95[17] = a2[v94 + 17];
    v95[18] = a2[v94 + 18];
    uint64_t v97 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v98 = &v95[v97];
    uint64_t v99 = &v96[v97];
    uint64_t v100 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16))(v98, v99, v100);
    uint64_t v101 = a3[12];
    *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
    uint64_t v102 = &a1[v101];
    uint64_t v103 = (uint64_t *)&a2[v101];
    uint64_t v104 = *v103;
    uint64_t v105 = v103[1];
    *(void *)uint64_t v102 = v104;
    *((void *)v102 + 1) = v105;
    uint64_t v106 = a3[13];
    uint64_t v107 = &a1[v106];
    uint64_t v108 = &a2[v106];
    uint64_t v109 = *(void *)v108;
    LOBYTE(v99) = v108[8];
    swift_retain();
    sub_100195B7C(v109, (char)v99);
    *(void *)uint64_t v107 = v109;
    v107[8] = (char)v99;
    uint64_t v110 = a3[14];
    uint64_t v111 = &a1[v110];
    uint64_t v112 = &a2[v110];
    uint64_t v113 = *(void *)v112;
    LOBYTE(v99) = v112[8];
    sub_100195B7C(*(void *)v112, (char)v99);
    *(void *)uint64_t v111 = v113;
    v111[8] = (char)v99;
    uint64_t v114 = a3[15];
    uint64_t v115 = &a1[v114];
    uint64_t v116 = &a2[v114];
    uint64_t v117 = *(void *)v116;
    uint64_t v118 = *((void *)v116 + 1);
    uint64_t v119 = *((void *)v116 + 2);
    uint64_t v120 = *((void *)v116 + 3);
    uint64_t v121 = *((void *)v116 + 4);
    uint64_t v122 = *((void *)v116 + 5);
    uint64_t v123 = *((void *)v116 + 6);
    uint64_t v124 = *((void *)v116 + 7);
    long long v132 = a1;
    uint64_t v125 = *((void *)v116 + 8);
    char v130 = v116[72];
    sub_1001910C8(*(void *)v116, v118, v119, v120, v121, v122, v123, v124, v125, v130);
    *(void *)uint64_t v115 = v117;
    *((void *)v115 + 1) = v118;
    *((void *)v115 + 2) = v119;
    *((void *)v115 + 3) = v120;
    *((void *)v115 + 4) = v121;
    *((void *)v115 + 5) = v122;
    *((void *)v115 + 6) = v123;
    *((void *)v115 + 7) = v124;
    *((void *)v115 + 8) = v125;
    uint64_t v14 = v132;
    v115[72] = v130;
  }
  return (char *)v14;
}

uint64_t sub_1008569C8(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Location.Identifier();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = (int *)type metadata accessor for LocationViewModel();
  uint64_t v7 = a1 + v6[5];
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v4)) {
    v5(v7, v4);
  }
  uint64_t v8 = a1 + v6[6];
  swift_bridgeObjectRelease();
  sub_100191D78(*(void *)(v8 + 16), *(void *)(v8 + 24), *(void *)(v8 + 32), *(void *)(v8 + 40), *(unsigned char *)(v8 + 48));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v9 = a1 + v6[9];
  uint64_t v10 = (int *)type metadata accessor for LocationFooterViewModel();
  if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, (uint64_t)v10))
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = v9 + v10[8];
    uint64_t v12 = type metadata accessor for URL();
    if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
    }
    uint64_t v13 = v9 + v10[9];
    swift_bridgeObjectRelease();
    uint64_t v14 = v13 + *(int *)(type metadata accessor for LearnMoreAttributorViewModel() + 24);
    if (!_s7Weather24LocationCompositionStateOwet_0(v14, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v14, v12);
    }
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v15 = v9 + v10[11];
    uint64_t v16 = type metadata accessor for LocationOfInterest();
    if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
    }
    uint64_t v17 = v9 + v10[14];
    uint64_t v18 = type metadata accessor for HomeAndWorkRefinementRowViewModel();
    if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v18))
    {
      uint64_t v19 = v17 + *(int *)(v18 + 20);
      uint64_t v20 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v17 + *(int *)(v18 + 24), v16);
    }
  }

  uint64_t v21 = a1 + v6[19];
  uint64_t v22 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + v6[20];
  uint64_t v24 = type metadata accessor for ForegroundEffect();
  if (!_s7Weather24LocationCompositionStateOwet_0(v23, 1, v24)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  }
  swift_bridgeObjectRelease();
  uint64_t v25 = a1 + v6[24];
  uint64_t v26 = type metadata accessor for LocationEntity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + a2[9]);
  uint64_t v27 = a1 + a2[10];
  uint64_t v28 = v27 + *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v29 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
  swift_release();
  sub_10018F6D8(*(void *)(a1 + a2[13]), *(unsigned char *)(a1 + a2[13] + 8));
  sub_10018F6D8(*(void *)(a1 + a2[14]), *(unsigned char *)(a1 + a2[14] + 8));
  uint64_t v30 = a1 + a2[15];
  return sub_10018CCC4(*(void *)v30, *(void *)(v30 + 8), *(void *)(v30 + 16), *(void *)(v30 + 24), *(void *)(v30 + 32), *(void *)(v30 + 40), *(void *)(v30 + 48), *(void *)(v30 + 56), *(void *)(v30 + 64), *(unsigned char *)(v30 + 72));
}

uint64_t sub_100856ED8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = type metadata accessor for Location.Identifier();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  v6(a1, a2, v5);
  uint64_t v7 = (int *)type metadata accessor for LocationViewModel();
  uint64_t v8 = v7[5];
  uint64_t v131 = a1;
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  if (_s7Weather24LocationCompositionStateOwet_0(a2 + v8, 1, v5))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v6((uint64_t)v9, (uint64_t)v10, v5);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v5);
  }
  uint64_t v12 = v7[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(a2 + v12 + 8);
  *(void *)uint64_t v13 = *(void *)(a2 + v12);
  *(void *)(v13 + 8) = v15;
  uint64_t v16 = *(void *)(a2 + v12 + 16);
  uint64_t v17 = *(void *)(a2 + v12 + 24);
  uint64_t v18 = *(void *)(a2 + v12 + 32);
  uint64_t v19 = *(void *)(a2 + v12 + 40);
  uint64_t v20 = a2;
  char v21 = *(unsigned char *)(a2 + v12 + 48);
  swift_bridgeObjectRetain();
  sub_100193004(v16, v17, v18, v19, v21);
  *(void *)(v13 + 16) = v16;
  *(void *)(v13 + 24) = v17;
  *(void *)(v13 + 32) = v18;
  *(void *)(v13 + 40) = v19;
  *(unsigned char *)(v13 + 48) = v21;
  uint64_t v22 = *(void *)(v14 + 64);
  *(void *)(v13 + 56) = *(void *)(v14 + 56);
  *(void *)(v13 + 64) = v22;
  uint64_t v23 = *(void *)(v14 + 80);
  *(void *)(v13 + 72) = *(void *)(v14 + 72);
  *(void *)(v13 + 80) = v23;
  uint64_t v24 = *(void *)(v14 + 96);
  *(void *)(v13 + 88) = *(void *)(v14 + 88);
  *(void *)(v13 + 96) = v24;
  uint64_t v25 = *(void *)(v14 + 112);
  *(void *)(v13 + 104) = *(void *)(v14 + 104);
  *(void *)(v13 + 112) = v25;
  uint64_t v26 = *(void *)(v14 + 128);
  *(void *)(v13 + 120) = *(void *)(v14 + 120);
  *(void *)(v13 + 128) = v26;
  *(unsigned char *)(v13 + 136) = *(unsigned char *)(v14 + 136);
  *(_WORD *)(v13 + 137) = *(_WORD *)(v14 + 137);
  uint64_t v27 = *(void *)(v14 + 152);
  *(void *)(v13 + 144) = *(void *)(v14 + 144);
  *(void *)(v13 + 152) = v27;
  *(unsigned char *)(v13 + 160) = *(unsigned char *)(v14 + 160);
  *(unsigned char *)(v13 + 161) = *(unsigned char *)(v14 + 161);
  *(void *)(v131 + v7[7]) = *(void *)(v20 + v7[7]);
  *(void *)(v131 + v7[8]) = *(void *)(v20 + v7[8]);
  __int16 v126 = v7;
  uint64_t v127 = v20;
  uint64_t v28 = v7[9];
  uint64_t v29 = (unsigned char *)(v131 + v28);
  uint64_t v30 = (unsigned char *)(v20 + v28);
  uint64_t v31 = type metadata accessor for LocationFooterViewModel();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31))
  {
    uint64_t v32 = sub_10017DF08(&qword_100E6DC18);
    memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
    char v33 = v7;
    uint64_t v34 = v20;
  }
  else
  {
    *uint64_t v29 = *v30;
    *(_WORD *)(v29 + 1) = *(_WORD *)(v30 + 1);
    uint64_t v35 = *((void *)v30 + 2);
    *((void *)v29 + 1) = *((void *)v30 + 1);
    *((void *)v29 + 2) = v35;
    uint64_t v36 = *(int *)(v31 + 32);
    uint64_t v37 = &v29[v36];
    double v38 = &v30[v36];
    uint64_t v39 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
    {
      uint64_t v40 = sub_10017DF08(&qword_100E749B0);
      memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
    }
    uint64_t v41 = (int *)v31;
    uint64_t v42 = *(int *)(v31 + 36);
    uint64_t v43 = &v29[v42];
    uint64_t v44 = &v30[v42];
    unsigned char *v43 = v30[v42];
    *((void *)v43 + 1) = *(void *)&v30[v42 + 8];
    uint64_t v45 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
    uint64_t v46 = v45[6];
    uint64_t v47 = &v43[v46];
    uint64_t v48 = &v44[v46];
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v39))
    {
      uint64_t v49 = sub_10017DF08(&qword_100E749B0);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v39 - 8) + 16))(v47, v48, v39);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v39);
    }
    uint64_t v50 = v45[7];
    uint64_t v51 = &v43[v50];
    uint64_t v52 = &v44[v50];
    uint64_t v53 = v52[1];
    *uint64_t v51 = *v52;
    v51[1] = v53;
    *(void *)&v43[v45[8]] = *(void *)&v44[v45[8]];
    v29[v41[10]] = v30[v41[10]];
    uint64_t v54 = v41[11];
    uint64_t v55 = &v29[v54];
    uint64_t v56 = &v30[v54];
    uint64_t v57 = type metadata accessor for LocationOfInterest();
    swift_bridgeObjectRetain();
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v57))
    {
      uint64_t v58 = sub_10017DF08(&qword_100E63508);
      memcpy(v55, v56, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v57 - 8) + 16))(v55, v56, v57);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v55, 0, 1, v57);
    }
    v29[v41[12]] = v30[v41[12]];
    v29[v41[13]] = v30[v41[13]];
    uint64_t v59 = v41[14];
    uint64_t v60 = &v29[v59];
    uint64_t v61 = &v30[v59];
    unint64_t v62 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, (uint64_t)v62))
    {
      uint64_t v63 = sub_10017DF08(&qword_100E6DC10);
      memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      *uint64_t v60 = *v61;
      uint64_t v64 = v62[5];
      uint64_t v65 = &v60[v64];
      uint64_t v66 = &v61[v64];
      uint64_t v67 = type metadata accessor for Location();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v67 - 8) + 16))(v65, v66, v67);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v57 - 8) + 16))(&v60[v62[6]], &v61[v62[6]], v57);
      v60[v62[7]] = v61[v62[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, (uint64_t)v62);
    }
    char v33 = v126;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, (uint64_t)v41);
    uint64_t v34 = v127;
  }
  *(unsigned char *)(v131 + v33[10]) = *(unsigned char *)(v34 + v33[10]);
  *(unsigned char *)(v131 + v33[11]) = *(unsigned char *)(v34 + v33[11]);
  *(unsigned char *)(v131 + v33[12]) = *(unsigned char *)(v34 + v33[12]);
  *(unsigned char *)(v131 + v33[13]) = *(unsigned char *)(v34 + v33[13]);
  *(unsigned char *)(v131 + v33[14]) = *(unsigned char *)(v34 + v33[14]);
  uint64_t v68 = v33[15];
  uint64_t v69 = *(void **)(v34 + v68);
  *(void *)(v131 + v68) = v69;
  *(unsigned char *)(v131 + v33[16]) = *(unsigned char *)(v34 + v33[16]);
  *(unsigned char *)(v131 + v33[17]) = *(unsigned char *)(v34 + v33[17]);
  *(unsigned char *)(v131 + v33[18]) = *(unsigned char *)(v34 + v33[18]);
  uint64_t v70 = v33[19];
  uint64_t v71 = v131 + v70;
  uint64_t v72 = v34 + v70;
  uint64_t v73 = type metadata accessor for Date();
  uint64_t v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 16);
  id v75 = v69;
  v74(v71, v72, v73);
  uint64_t v76 = v33[20];
  uint64_t v77 = (void *)(v131 + v76);
  uint64_t v78 = (const void *)(v34 + v76);
  uint64_t v79 = type metadata accessor for ForegroundEffect();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v78, 1, v79))
  {
    uint64_t v80 = sub_10017DF08(&qword_100E65FA8);
    memcpy(v77, v78, *(void *)(*(void *)(v80 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v79 - 8) + 16))(v77, v78, v79);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v77, 0, 1, v79);
  }
  *(unsigned char *)(v131 + v33[21]) = *(unsigned char *)(v34 + v33[21]);
  *(void *)(v131 + v33[22]) = *(void *)(v34 + v33[22]);
  *(unsigned char *)(v131 + v33[23]) = *(unsigned char *)(v34 + v33[23]);
  uint64_t v81 = v33[24];
  uint64_t v82 = v131 + v81;
  uint64_t v83 = v34 + v81;
  uint64_t v84 = type metadata accessor for LocationEntity();
  uint64_t v85 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 16);
  swift_bridgeObjectRetain();
  v85(v82, v83, v84);
  uint64_t v86 = a3[6];
  *(void *)(v131 + a3[5]) = *(void *)(v34 + a3[5]);
  *(void *)(v131 + v86) = *(void *)(v34 + v86);
  uint64_t v87 = a3[8];
  *(void *)(v131 + a3[7]) = *(void *)(v34 + a3[7]);
  *(_OWORD *)(v131 + v87) = *(_OWORD *)(v34 + v87);
  uint64_t v88 = a3[9];
  uint64_t v89 = v131 + v88;
  uint64_t v90 = v34 + v88;
  long long v91 = *(_OWORD *)(v34 + v88 + 24);
  *(_OWORD *)(v89 + 24) = v91;
  uint64_t v92 = v91;
  long long v93 = **(void (***)(uint64_t, uint64_t, uint64_t))(v91 - 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  v93(v89, v90, v92);
  uint64_t v94 = a3[10];
  uint64_t v95 = v131 + v94;
  uint64_t v96 = v34 + v94;
  *(_OWORD *)uint64_t v95 = *(_OWORD *)(v34 + v94);
  *(unsigned char *)(v95 + 16) = *(unsigned char *)(v34 + v94 + 16);
  *(unsigned char *)(v95 + 17) = *(unsigned char *)(v34 + v94 + 17);
  *(unsigned char *)(v95 + 18) = *(unsigned char *)(v34 + v94 + 18);
  uint64_t v97 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v98 = v95 + v97;
  uint64_t v99 = v96 + v97;
  uint64_t v100 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 16))(v98, v99, v100);
  uint64_t v101 = a3[12];
  *(void *)(v131 + a3[11]) = *(void *)(v34 + a3[11]);
  uint64_t v102 = (void *)(v131 + v101);
  uint64_t v103 = (uint64_t *)(v34 + v101);
  uint64_t v104 = *v103;
  uint64_t v105 = v103[1];
  *uint64_t v102 = v104;
  v102[1] = v105;
  uint64_t v106 = a3[13];
  uint64_t v107 = v131 + v106;
  uint64_t v108 = v34 + v106;
  uint64_t v109 = *(void *)v108;
  LOBYTE(v99) = *(unsigned char *)(v108 + 8);
  swift_retain();
  sub_100195B7C(v109, v99);
  *(void *)uint64_t v107 = v109;
  *(unsigned char *)(v107 + 8) = v99;
  uint64_t v110 = a3[14];
  uint64_t v111 = v131 + v110;
  uint64_t v112 = v34 + v110;
  uint64_t v113 = *(void *)v112;
  LOBYTE(v99) = *(unsigned char *)(v112 + 8);
  sub_100195B7C(*(void *)v112, v99);
  *(void *)uint64_t v111 = v113;
  *(unsigned char *)(v111 + 8) = v99;
  uint64_t v114 = a3[15];
  uint64_t v115 = v131 + v114;
  uint64_t v116 = v34 + v114;
  uint64_t v117 = *(void *)v116;
  uint64_t v118 = *(void *)(v116 + 8);
  uint64_t v119 = *(void *)(v116 + 16);
  uint64_t v120 = *(void *)(v116 + 24);
  uint64_t v121 = *(void *)(v116 + 32);
  uint64_t v122 = *(void *)(v116 + 40);
  uint64_t v123 = *(void *)(v116 + 48);
  uint64_t v124 = *(void *)(v116 + 56);
  uint64_t v128 = *(void *)(v116 + 64);
  char v130 = *(unsigned char *)(v116 + 72);
  sub_1001910C8(*(void *)v116, v118, v119, v120, v121, v122, v123, v124, v128, v130);
  *(void *)uint64_t v115 = v117;
  *(void *)(v115 + 8) = v118;
  *(void *)(v115 + 16) = v119;
  *(void *)(v115 + 24) = v120;
  *(void *)(v115 + 32) = v121;
  *(void *)(v115 + 40) = v122;
  *(void *)(v115 + 48) = v123;
  *(void *)(v115 + 56) = v124;
  *(void *)(v115 + 64) = v128;
  *(unsigned char *)(v115 + 72) = v130;
  return v131;
}

uint64_t sub_100857904(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = type metadata accessor for Location.Identifier();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  uint64_t v8 = (int *)type metadata accessor for LocationViewModel();
  uint64_t v9 = v8[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  int v12 = _s7Weather24LocationCompositionStateOwet_0(a1 + v9, 1, v5);
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v5);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v10, v11, v5);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v5);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v10, v5);
LABEL_6:
    uint64_t v14 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v7((uint64_t)v10, (uint64_t)v11, v5);
LABEL_7:
  uint64_t v15 = v8[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)uint64_t v16 = *(void *)(a2 + v15);
  *(void *)(v16 + 8) = *(void *)(a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(v17 + 16);
  uint64_t v19 = *(void *)(v17 + 24);
  uint64_t v20 = *(void *)(v17 + 32);
  uint64_t v21 = *(void *)(v17 + 40);
  char v22 = *(unsigned char *)(v17 + 48);
  sub_100193004(v18, v19, v20, v21, v22);
  uint64_t v23 = *(void *)(v16 + 16);
  uint64_t v24 = *(void *)(v16 + 24);
  uint64_t v25 = *(void *)(v16 + 32);
  uint64_t v26 = *(void *)(v16 + 40);
  *(void *)(v16 + 16) = v18;
  *(void *)(v16 + 24) = v19;
  *(void *)(v16 + 32) = v20;
  *(void *)(v16 + 40) = v21;
  char v27 = *(unsigned char *)(v16 + 48);
  *(unsigned char *)(v16 + 48) = v22;
  sub_100191D78(v23, v24, v25, v26, v27);
  *(void *)(v16 + 56) = *(void *)(v17 + 56);
  *(void *)(v16 + 64) = *(void *)(v17 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 72) = *(void *)(v17 + 72);
  *(void *)(v16 + 80) = *(void *)(v17 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 88) = *(void *)(v17 + 88);
  *(void *)(v16 + 96) = *(void *)(v17 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 104) = *(void *)(v17 + 104);
  *(void *)(v16 + 112) = *(void *)(v17 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 120) = *(void *)(v17 + 120);
  *(void *)(v16 + 128) = *(void *)(v17 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 136) = *(unsigned char *)(v17 + 136);
  *(unsigned char *)(v16 + 137) = *(unsigned char *)(v17 + 137);
  *(unsigned char *)(v16 + 138) = *(unsigned char *)(v17 + 138);
  *(void *)(v16 + 144) = *(void *)(v17 + 144);
  *(void *)(v16 + 152) = *(void *)(v17 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 160) = *(unsigned char *)(v17 + 160);
  *(unsigned char *)(v16 + 161) = *(unsigned char *)(v17 + 161);
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v8[8]) = *(void *)(a2 + v8[8]);
  swift_retain();
  swift_release();
  uint64_t v28 = v8[9];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = (int *)type metadata accessor for LocationFooterViewModel();
  LODWORD(v18) = _s7Weather24LocationCompositionStateOwet_0(v29, 1, (uint64_t)v31);
  int v32 = _s7Weather24LocationCompositionStateOwet_0(v30, 1, (uint64_t)v31);
  if (v18)
  {
    if (!v32)
    {
      *(unsigned char *)uint64_t v29 = *(unsigned char *)v30;
      *(unsigned char *)(v29 + 1) = *(unsigned char *)(v30 + 1);
      *(unsigned char *)(v29 + 2) = *(unsigned char *)(v30 + 2);
      *(void *)(v29 + 8) = *(void *)(v30 + 8);
      *(void *)(v29 + 16) = *(void *)(v30 + 16);
      uint64_t v33 = v31[8];
      uint64_t v34 = (void *)(v29 + v33);
      uint64_t v35 = (const void *)(v30 + v33);
      uint64_t v36 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v36))
      {
        uint64_t v37 = sub_10017DF08(&qword_100E749B0);
        memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v36);
      }
      uint64_t v182 = v29;
      uint64_t v184 = v31;
      uint64_t v47 = v31[9];
      uint64_t v48 = v29 + v47;
      uint64_t v49 = v30 + v47;
      *(unsigned char *)uint64_t v48 = *(unsigned char *)(v30 + v47);
      *(void *)(v48 + 8) = *(void *)(v30 + v47 + 8);
      uint64_t v50 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
      uint64_t v51 = v50[6];
      __dst = (void *)(v48 + v51);
      uint64_t v52 = (const void *)(v49 + v51);
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v36))
      {
        uint64_t v53 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dst, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v36 - 8) + 16))(__dst, v52, v36);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v36);
      }
      uint64_t v54 = v50[7];
      uint64_t v55 = (void *)(v48 + v54);
      uint64_t v56 = (void *)(v49 + v54);
      *uint64_t v55 = *v56;
      v55[1] = v56[1];
      *(void *)(v48 + v50[8]) = *(void *)(v49 + v50[8]);
      *(unsigned char *)(v182 + v31[10]) = *(unsigned char *)(v30 + v31[10]);
      uint64_t v57 = v31[11];
      uint64_t v58 = (void *)(v182 + v57);
      uint64_t v59 = (const void *)(v30 + v57);
      uint64_t v60 = type metadata accessor for LocationOfInterest();
      swift_bridgeObjectRetain();
      swift_retain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v60))
      {
        uint64_t v61 = sub_10017DF08(&qword_100E63508);
        memcpy(v58, v59, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v60);
      }
      unint64_t v62 = v31;
      *(unsigned char *)(v182 + v31[12]) = *(unsigned char *)(v30 + v31[12]);
      *(unsigned char *)(v182 + v31[13]) = *(unsigned char *)(v30 + v31[13]);
      uint64_t v63 = v31[14];
      uint64_t v64 = (unsigned char *)(v182 + v63);
      uint64_t v65 = (unsigned char *)(v30 + v63);
      uint64_t v66 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, (uint64_t)v66))
      {
        uint64_t v67 = sub_10017DF08(&qword_100E6DC10);
        memcpy(v64, v65, *(void *)(*(void *)(v67 - 8) + 64));
      }
      else
      {
        *uint64_t v64 = *v65;
        uint64_t v68 = v66[5];
        uint64_t v69 = &v64[v68];
        uint64_t v70 = &v65[v68];
        uint64_t v71 = type metadata accessor for Location();
        uint64_t v72 = v69;
        unint64_t v62 = v184;
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v71 - 8) + 16))(v72, v70, v71);
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v60 - 8) + 16))(&v64[v66[6]], &v65[v66[6]], v60);
        v64[v66[7]] = v65[v66[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, (uint64_t)v66);
      }
      uint64_t v73 = v182;
      uint64_t v74 = (uint64_t)v62;
      goto LABEL_30;
    }
    goto LABEL_13;
  }
  if (v32)
  {
    sub_1000B0790(v29, (void (*)(void))type metadata accessor for LocationFooterViewModel);
LABEL_13:
    size_t v38 = *(void *)(*(void *)(sub_10017DF08(&qword_100E6DC18) - 8) + 64);
    uint64_t v39 = (void *)v29;
    uint64_t v40 = (const void *)v30;
LABEL_14:
    memcpy(v39, v40, v38);
    goto LABEL_31;
  }
  *(unsigned char *)uint64_t v29 = *(unsigned char *)v30;
  *(unsigned char *)(v29 + 1) = *(unsigned char *)(v30 + 1);
  *(unsigned char *)(v29 + 2) = *(unsigned char *)(v30 + 2);
  *(void *)(v29 + 8) = *(void *)(v30 + 8);
  *(void *)(v29 + 16) = *(void *)(v30 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = v31[8];
  uint64_t v42 = (void *)(v29 + v41);
  uint64_t v43 = (const void *)(v30 + v41);
  uint64_t v44 = type metadata accessor for URL();
  int v45 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v44);
  int v46 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v44);
      goto LABEL_42;
    }
    goto LABEL_41;
  }
  uint64_t v143 = *(void *)(v44 - 8);
  if (v46)
  {
    (*(void (**)(void *, uint64_t))(v143 + 8))(v42, v44);
LABEL_41:
    uint64_t v144 = sub_10017DF08(&qword_100E749B0);
    memcpy(v42, v43, *(void *)(*(void *)(v144 - 8) + 64));
    goto LABEL_42;
  }
  (*(void (**)(void *, const void *, uint64_t))(v143 + 24))(v42, v43, v44);
LABEL_42:
  char v186 = v31;
  uint64_t v145 = v31[9];
  uint64_t v146 = v29 + v145;
  uint64_t v147 = v30 + v145;
  *(unsigned char *)uint64_t v146 = *(unsigned char *)(v30 + v145);
  *(void *)(v146 + 8) = *(void *)(v30 + v145 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v183 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
  uint64_t v148 = v183[6];
  uint64_t v149 = (const void *)(v147 + v148);
  uint64_t v180 = v146 + v148;
  int v150 = _s7Weather24LocationCompositionStateOwet_0(v146 + v148, 1, v44);
  int v151 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v149, 1, v44);
  if (v150)
  {
    if (v151)
    {
      size_t v152 = *(void *)(*(void *)(sub_10017DF08(&qword_100E749B0) - 8) + 64);
      uint64_t v153 = (void *)v180;
LABEL_47:
      memcpy(v153, v149, v152);
      goto LABEL_51;
    }
    (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v44 - 8) + 16))(v180, v149, v44);
    _s7Weather24LocationCompositionStateOwst_0(v180, 0, 1, v44);
  }
  else
  {
    uint64_t v154 = *(void *)(v44 - 8);
    if (v151)
    {
      (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v180, v44);
      size_t v152 = *(void *)(*(void *)(sub_10017DF08(&qword_100E749B0) - 8) + 64);
      uint64_t v153 = (void *)v180;
      goto LABEL_47;
    }
    (*(void (**)(uint64_t, const void *, uint64_t))(v154 + 24))(v180, v149, v44);
  }
LABEL_51:
  uint64_t v155 = v183[7];
  uint64_t v156 = (void *)(v146 + v155);
  uint64_t v157 = (void *)(v147 + v155);
  void *v156 = *v157;
  v156[1] = v157[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v146 + v183[8]) = *(void *)(v147 + v183[8]);
  swift_retain();
  swift_release();
  *(unsigned char *)(v29 + v186[10]) = *(unsigned char *)(v30 + v186[10]);
  uint64_t v158 = v186[11];
  uint64_t v159 = (void *)(v29 + v158);
  uint64_t v160 = (const void *)(v30 + v158);
  uint64_t v161 = type metadata accessor for LocationOfInterest();
  int v162 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v159, 1, v161);
  int v163 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v160, 1, v161);
  if (v162)
  {
    if (!v163)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v161 - 8) + 16))(v159, v160, v161);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v159, 0, 1, v161);
      goto LABEL_57;
    }
    goto LABEL_56;
  }
  uint64_t v164 = *(void *)(v161 - 8);
  if (v163)
  {
    (*(void (**)(void *, uint64_t))(v164 + 8))(v159, v161);
LABEL_56:
    uint64_t v165 = sub_10017DF08(&qword_100E63508);
    memcpy(v159, v160, *(void *)(*(void *)(v165 - 8) + 64));
    goto LABEL_57;
  }
  (*(void (**)(void *, const void *, uint64_t))(v164 + 24))(v159, v160, v161);
LABEL_57:
  *(unsigned char *)(v29 + v186[12]) = *(unsigned char *)(v30 + v186[12]);
  *(unsigned char *)(v29 + v186[13]) = *(unsigned char *)(v30 + v186[13]);
  uint64_t v166 = v186[14];
  int v167 = (unsigned char *)(v29 + v166);
  uint64_t v168 = (unsigned char *)(v30 + v166);
  uint64_t v169 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
  int v170 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v167, 1, (uint64_t)v169);
  int v171 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v168, 1, (uint64_t)v169);
  if (v170)
  {
    if (!v171)
    {
      unsigned char *v167 = *v168;
      uint64_t v172 = v169[5];
      char v173 = &v167[v172];
      uint64_t v174 = &v168[v172];
      uint64_t v175 = type metadata accessor for Location();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v175 - 8) + 16))(v173, v174, v175);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v161 - 8) + 16))(&v167[v169[6]], &v168[v169[6]], v161);
      v167[v169[7]] = v168[v169[7]];
      uint64_t v73 = (uint64_t)v167;
      uint64_t v74 = (uint64_t)v169;
LABEL_30:
      _s7Weather24LocationCompositionStateOwst_0(v73, 0, 1, v74);
      goto LABEL_31;
    }
    goto LABEL_62;
  }
  if (v171)
  {
    sub_1000B0790((uint64_t)v167, (void (*)(void))type metadata accessor for HomeAndWorkRefinementRowViewModel);
LABEL_62:
    size_t v38 = *(void *)(*(void *)(sub_10017DF08(&qword_100E6DC10) - 8) + 64);
    uint64_t v39 = v167;
    uint64_t v40 = v168;
    goto LABEL_14;
  }
  unsigned char *v167 = *v168;
  uint64_t v176 = v169[5];
  uint64_t v177 = &v167[v176];
  int v178 = &v168[v176];
  uint64_t v179 = type metadata accessor for Location();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v179 - 8) + 24))(v177, v178, v179);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v161 - 8) + 24))(&v167[v169[6]], &v168[v169[6]], v161);
  v167[v169[7]] = v168[v169[7]];
LABEL_31:
  *(unsigned char *)(a1 + v8[10]) = *(unsigned char *)(a2 + v8[10]);
  *(unsigned char *)(a1 + v8[11]) = *(unsigned char *)(a2 + v8[11]);
  *(unsigned char *)(a1 + v8[12]) = *(unsigned char *)(a2 + v8[12]);
  *(unsigned char *)(a1 + v8[13]) = *(unsigned char *)(a2 + v8[13]);
  *(unsigned char *)(a1 + v8[14]) = *(unsigned char *)(a2 + v8[14]);
  uint64_t v75 = v8[15];
  uint64_t v76 = *(void **)(a2 + v75);
  uint64_t v77 = *(void **)(a1 + v75);
  *(void *)(a1 + v75) = v76;
  id v78 = v76;

  *(unsigned char *)(a1 + v8[16]) = *(unsigned char *)(a2 + v8[16]);
  *(unsigned char *)(a1 + v8[17]) = *(unsigned char *)(a2 + v8[17]);
  *(unsigned char *)(a1 + v8[18]) = *(unsigned char *)(a2 + v8[18]);
  uint64_t v79 = v8[19];
  uint64_t v80 = a1 + v79;
  uint64_t v81 = a2 + v79;
  uint64_t v82 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 24))(v80, v81, v82);
  uint64_t v83 = v8[20];
  uint64_t v84 = (void *)(a1 + v83);
  uint64_t v85 = (const void *)(a2 + v83);
  uint64_t v86 = type metadata accessor for ForegroundEffect();
  LODWORD(v80) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v84, 1, v86);
  int v87 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v86);
  if (!v80)
  {
    uint64_t v88 = *(void *)(v86 - 8);
    if (!v87)
    {
      (*(void (**)(void *, const void *, uint64_t))(v88 + 24))(v84, v85, v86);
      goto LABEL_37;
    }
    (*(void (**)(void *, uint64_t))(v88 + 8))(v84, v86);
    goto LABEL_36;
  }
  if (v87)
  {
LABEL_36:
    uint64_t v89 = sub_10017DF08(&qword_100E65FA8);
    memcpy(v84, v85, *(void *)(*(void *)(v89 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v86 - 8) + 16))(v84, v85, v86);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, v86);
LABEL_37:
  *(unsigned char *)(a1 + v8[21]) = *(unsigned char *)(a2 + v8[21]);
  *(void *)(a1 + v8[22]) = *(void *)(a2 + v8[22]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v8[23]) = *(unsigned char *)(a2 + v8[23]);
  uint64_t v90 = v8[24];
  uint64_t v91 = a1 + v90;
  uint64_t v92 = a2 + v90;
  uint64_t v93 = type metadata accessor for LocationEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 24))(v91, v92, v93);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  uint64_t v94 = a3[8];
  uint64_t v95 = (void *)(a1 + v94);
  uint64_t v96 = (void *)(a2 + v94);
  uint64_t v97 = v96[1];
  *uint64_t v95 = *v96;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v95[1] = v97;
  sub_1000C1E18((uint64_t *)(a1 + a3[9]), (uint64_t *)(a2 + a3[9]));
  uint64_t v98 = a3[10];
  uint64_t v99 = a1 + v98;
  uint64_t v100 = a2 + v98;
  *(void *)uint64_t v99 = *(void *)(a2 + v98);
  *(void *)(v99 + 8) = *(void *)(a2 + v98 + 8);
  *(unsigned char *)(v99 + 16) = *(unsigned char *)(a2 + v98 + 16);
  *(unsigned char *)(v99 + 17) = *(unsigned char *)(a2 + v98 + 17);
  *(unsigned char *)(v99 + 18) = *(unsigned char *)(a2 + v98 + 18);
  uint64_t v101 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v102 = v99 + v101;
  uint64_t v103 = v100 + v101;
  uint64_t v104 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 24))(v102, v103, v104);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v105 = a3[12];
  uint64_t v106 = a1 + v105;
  uint64_t v107 = a2 + v105;
  *(void *)(a1 + v105) = *(void *)(a2 + v105);
  swift_retain();
  swift_release();
  *(void *)(v106 + 8) = *(void *)(v107 + 8);
  uint64_t v108 = a3[13];
  uint64_t v109 = a1 + v108;
  uint64_t v110 = a2 + v108;
  uint64_t v111 = *(void *)v110;
  LOBYTE(v106) = *(unsigned char *)(v110 + 8);
  sub_100195B7C(*(void *)v110, v106);
  uint64_t v112 = *(void *)v109;
  char v113 = *(unsigned char *)(v109 + 8);
  *(void *)uint64_t v109 = v111;
  *(unsigned char *)(v109 + 8) = v106;
  sub_10018F6D8(v112, v113);
  uint64_t v114 = a3[14];
  uint64_t v115 = a1 + v114;
  uint64_t v116 = a2 + v114;
  uint64_t v117 = *(void *)v116;
  LOBYTE(v106) = *(unsigned char *)(v116 + 8);
  sub_100195B7C(*(void *)v116, v106);
  uint64_t v118 = *(void *)v115;
  char v119 = *(unsigned char *)(v115 + 8);
  *(void *)uint64_t v115 = v117;
  *(unsigned char *)(v115 + 8) = v106;
  sub_10018F6D8(v118, v119);
  uint64_t v120 = a3[15];
  uint64_t v121 = a1 + v120;
  uint64_t v122 = a2 + v120;
  uint64_t v123 = *(void *)v122;
  uint64_t v124 = *(void *)(v122 + 8);
  uint64_t v125 = *(void *)(v122 + 16);
  uint64_t v126 = *(void *)(v122 + 24);
  uint64_t v127 = *(void *)(v122 + 32);
  uint64_t v128 = *(void *)(v122 + 40);
  uint64_t v129 = *(void *)(v122 + 48);
  uint64_t v130 = *(void *)(v122 + 56);
  uint64_t v188 = a1;
  uint64_t v131 = *(void *)(v122 + 64);
  char v185 = *(unsigned char *)(v122 + 72);
  sub_1001910C8(*(void *)v122, v124, v125, v126, v127, v128, v129, v130, v131, v185);
  uint64_t v132 = *(void *)v121;
  uint64_t v133 = *(void *)(v121 + 8);
  uint64_t v134 = *(void *)(v121 + 16);
  uint64_t v135 = *(void *)(v121 + 24);
  uint64_t v136 = *(void *)(v121 + 32);
  uint64_t v137 = *(void *)(v121 + 40);
  uint64_t v138 = *(void *)(v121 + 48);
  uint64_t v139 = *(void *)(v121 + 56);
  uint64_t v140 = *(void *)(v121 + 64);
  char v141 = *(unsigned char *)(v121 + 72);
  *(void *)uint64_t v121 = v123;
  *(void *)(v121 + 8) = v124;
  *(void *)(v121 + 16) = v125;
  *(void *)(v121 + 24) = v126;
  *(void *)(v121 + 32) = v127;
  *(void *)(v121 + 40) = v128;
  *(void *)(v121 + 48) = v129;
  *(void *)(v121 + 56) = v130;
  *(void *)(v121 + 64) = v131;
  *(unsigned char *)(v121 + 72) = v185;
  sub_10018CCC4(v132, v133, v134, v135, v136, v137, v138, v139, v140, v141);
  return v188;
}

uint64_t sub_100858B8C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for LocationViewModel();
  uint64_t v9 = v8[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  if (_s7Weather24LocationCompositionStateOwet_0(a2 + v9, 1, v6))
  {
    uint64_t v12 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v10, (uint64_t)v11, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v6);
  }
  memcpy((void *)(a1 + v8[6]), (const void *)(a2 + v8[6]), 0xA2uLL);
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  *(void *)(a1 + v8[8]) = *(void *)(a2 + v8[8]);
  uint64_t v13 = v8[9];
  uint64_t v14 = (unsigned char *)(a1 + v13);
  uint64_t v15 = (unsigned char *)(a2 + v13);
  uint64_t v16 = type metadata accessor for LocationFooterViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
  {
    uint64_t v17 = sub_10017DF08(&qword_100E6DC18);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    *uint64_t v14 = *v15;
    *(_WORD *)(v14 + 1) = *(_WORD *)(v15 + 1);
    *(_OWORD *)(v14 + 8) = *(_OWORD *)(v15 + 8);
    uint64_t v18 = *(int *)(v16 + 32);
    uint64_t v19 = &v14[v18];
    uint64_t v20 = &v15[v18];
    uint64_t v21 = type metadata accessor for URL();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
    {
      uint64_t v22 = sub_10017DF08(&qword_100E749B0);
      memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
    }
    uint64_t v77 = (int *)v16;
    uint64_t v78 = (uint64_t)v14;
    uint64_t v23 = *(int *)(v16 + 36);
    uint64_t v24 = &v14[v23];
    uint64_t v25 = &v15[v23];
    *uint64_t v24 = v15[v23];
    *((void *)v24 + 1) = *(void *)&v15[v23 + 8];
    uint64_t v26 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
    uint64_t v27 = v26[6];
    __dst = &v24[v27];
    uint64_t v28 = &v25[v27];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v25[v27], 1, v21))
    {
      uint64_t v29 = sub_10017DF08(&qword_100E749B0);
      memcpy(__dst, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 32))(__dst, v28, v21);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v21);
    }
    *(_OWORD *)&v24[v26[7]] = *(_OWORD *)&v25[v26[7]];
    *(void *)&v24[v26[8]] = *(void *)&v25[v26[8]];
    *(unsigned char *)(v78 + v77[10]) = v15[v77[10]];
    uint64_t v30 = v77[11];
    uint64_t v31 = (void *)(v78 + v30);
    int v32 = &v15[v30];
    uint64_t v33 = type metadata accessor for LocationOfInterest();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v33))
    {
      uint64_t v34 = sub_10017DF08(&qword_100E63508);
      memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v33);
    }
    *(unsigned char *)(v78 + v77[12]) = v15[v77[12]];
    *(unsigned char *)(v78 + v77[13]) = v15[v77[13]];
    uint64_t v35 = v77[14];
    uint64_t v36 = (unsigned char *)(v78 + v35);
    uint64_t v37 = &v15[v35];
    size_t v38 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, (uint64_t)v38))
    {
      uint64_t v39 = sub_10017DF08(&qword_100E6DC10);
      memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      *uint64_t v36 = *v37;
      uint64_t v40 = v38[5];
      __dsta = &v36[v40];
      uint64_t v76 = &v37[v40];
      uint64_t v41 = type metadata accessor for Location();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v41 - 8) + 32))(__dsta, v76, v41);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 32))(&v36[v38[6]], &v37[v38[6]], v33);
      v36[v38[7]] = v37[v38[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, (uint64_t)v38);
    }
    _s7Weather24LocationCompositionStateOwst_0(v78, 0, 1, (uint64_t)v77);
  }
  *(unsigned char *)(a1 + v8[10]) = *(unsigned char *)(a2 + v8[10]);
  *(unsigned char *)(a1 + v8[11]) = *(unsigned char *)(a2 + v8[11]);
  *(unsigned char *)(a1 + v8[12]) = *(unsigned char *)(a2 + v8[12]);
  *(unsigned char *)(a1 + v8[13]) = *(unsigned char *)(a2 + v8[13]);
  *(unsigned char *)(a1 + v8[14]) = *(unsigned char *)(a2 + v8[14]);
  *(void *)(a1 + v8[15]) = *(void *)(a2 + v8[15]);
  *(unsigned char *)(a1 + v8[16]) = *(unsigned char *)(a2 + v8[16]);
  *(unsigned char *)(a1 + v8[17]) = *(unsigned char *)(a2 + v8[17]);
  *(unsigned char *)(a1 + v8[18]) = *(unsigned char *)(a2 + v8[18]);
  uint64_t v42 = v8[19];
  uint64_t v43 = a1 + v42;
  uint64_t v44 = a2 + v42;
  uint64_t v45 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
  uint64_t v46 = v8[20];
  uint64_t v47 = (void *)(a1 + v46);
  uint64_t v48 = (const void *)(a2 + v46);
  uint64_t v49 = type metadata accessor for ForegroundEffect();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49))
  {
    uint64_t v50 = sub_10017DF08(&qword_100E65FA8);
    memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v49);
  }
  *(unsigned char *)(a1 + v8[21]) = *(unsigned char *)(a2 + v8[21]);
  *(void *)(a1 + v8[22]) = *(void *)(a2 + v8[22]);
  *(unsigned char *)(a1 + v8[23]) = *(unsigned char *)(a2 + v8[23]);
  uint64_t v51 = v8[24];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  uint64_t v54 = type metadata accessor for LocationEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
  uint64_t v55 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v55) = *(void *)(a2 + v55);
  uint64_t v56 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v56) = *(_OWORD *)(a2 + v56);
  uint64_t v57 = a3[9];
  uint64_t v58 = a3[10];
  uint64_t v59 = a1 + v57;
  uint64_t v60 = a2 + v57;
  long long v61 = *(_OWORD *)(v60 + 16);
  *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
  *(_OWORD *)(v59 + 16) = v61;
  *(void *)(v59 + 32) = *(void *)(v60 + 32);
  uint64_t v62 = a1 + v58;
  uint64_t v63 = a2 + v58;
  *(_OWORD *)uint64_t v62 = *(_OWORD *)(a2 + v58);
  *(unsigned char *)(v62 + 16) = *(unsigned char *)(a2 + v58 + 16);
  *(unsigned char *)(v62 + 17) = *(unsigned char *)(a2 + v58 + 17);
  *(unsigned char *)(v62 + 18) = *(unsigned char *)(a2 + v58 + 18);
  uint64_t v64 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v65 = v62 + v64;
  uint64_t v66 = v63 + v64;
  uint64_t v67 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 32))(v65, v66, v67);
  uint64_t v68 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v68) = *(_OWORD *)(a2 + v68);
  uint64_t v69 = a3[13];
  uint64_t v70 = a3[14];
  uint64_t v71 = a1 + v69;
  uint64_t v72 = a2 + v69;
  *(unsigned char *)(v71 + 8) = *(unsigned char *)(v72 + 8);
  *(void *)uint64_t v71 = *(void *)v72;
  uint64_t v73 = a1 + v70;
  uint64_t v74 = a2 + v70;
  *(void *)uint64_t v73 = *(void *)v74;
  *(unsigned char *)(v73 + 8) = *(unsigned char *)(v74 + 8);
  memcpy((void *)(a1 + a3[15]), (const void *)(a2 + a3[15]), 0x49uLL);
  return a1;
}

uint64_t sub_100859394(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = type metadata accessor for Location.Identifier();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  uint64_t v8 = (int *)type metadata accessor for LocationViewModel();
  uint64_t v9 = v8[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  int v12 = _s7Weather24LocationCompositionStateOwet_0(a1 + v9, 1, v5);
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v5);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v10, v11, v5);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v5);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v10, v5);
LABEL_6:
    uint64_t v14 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v7((uint64_t)v10, (uint64_t)v11, v5);
LABEL_7:
  uint64_t v15 = v8[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = *(void *)(a2 + v15 + 8);
  *(void *)uint64_t v16 = *(void *)(a2 + v15);
  *(void *)(v16 + 8) = v18;
  swift_bridgeObjectRelease();
  char v19 = *(unsigned char *)(v17 + 48);
  uint64_t v20 = *(void *)(v16 + 16);
  uint64_t v21 = *(void *)(v16 + 24);
  uint64_t v22 = *(void *)(v16 + 32);
  uint64_t v23 = *(void *)(v16 + 40);
  long long v24 = *(_OWORD *)(v17 + 32);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)(v17 + 16);
  *(_OWORD *)(v16 + 32) = v24;
  char v25 = *(unsigned char *)(v16 + 48);
  *(unsigned char *)(v16 + 48) = v19;
  sub_100191D78(v20, v21, v22, v23, v25);
  uint64_t v26 = *(void *)(v17 + 64);
  *(void *)(v16 + 56) = *(void *)(v17 + 56);
  *(void *)(v16 + 64) = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void *)(v17 + 80);
  *(void *)(v16 + 72) = *(void *)(v17 + 72);
  *(void *)(v16 + 80) = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(v17 + 96);
  *(void *)(v16 + 88) = *(void *)(v17 + 88);
  *(void *)(v16 + 96) = v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(v17 + 112);
  *(void *)(v16 + 104) = *(void *)(v17 + 104);
  *(void *)(v16 + 112) = v29;
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(v17 + 128);
  *(void *)(v16 + 120) = *(void *)(v17 + 120);
  *(void *)(v16 + 128) = v30;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 136) = *(unsigned char *)(v17 + 136);
  *(unsigned char *)(v16 + 137) = *(unsigned char *)(v17 + 137);
  *(unsigned char *)(v16 + 138) = *(unsigned char *)(v17 + 138);
  uint64_t v31 = *(void *)(v17 + 152);
  *(void *)(v16 + 144) = *(void *)(v17 + 144);
  *(void *)(v16 + 152) = v31;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 160) = *(unsigned char *)(v17 + 160);
  *(unsigned char *)(v16 + 161) = *(unsigned char *)(v17 + 161);
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + v8[8]) = *(void *)(a2 + v8[8]);
  swift_release();
  uint64_t v32 = v8[9];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = (int *)type metadata accessor for LocationFooterViewModel();
  LODWORD(v17) = _s7Weather24LocationCompositionStateOwet_0(v33, 1, (uint64_t)v35);
  int v36 = _s7Weather24LocationCompositionStateOwet_0(v34, 1, (uint64_t)v35);
  if (v17)
  {
    if (!v36)
    {
      *(unsigned char *)uint64_t v33 = *(unsigned char *)v34;
      *(_WORD *)(v33 + 1) = *(_WORD *)(v34 + 1);
      *(_OWORD *)(v33 + 8) = *(_OWORD *)(v34 + 8);
      uint64_t v37 = v35[8];
      size_t v38 = (void *)(v33 + v37);
      uint64_t v39 = (const void *)(v34 + v37);
      uint64_t v40 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
      {
        uint64_t v41 = sub_10017DF08(&qword_100E749B0);
        memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
      }
      uint64_t v179 = v35;
      uint64_t v52 = v35[9];
      uint64_t v53 = v33 + v52;
      uint64_t v54 = v34 + v52;
      *(unsigned char *)uint64_t v53 = *(unsigned char *)(v34 + v52);
      *(void *)(v53 + 8) = *(void *)(v34 + v52 + 8);
      uint64_t v55 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
      uint64_t v56 = v55[6];
      __dst = (void *)(v53 + v56);
      uint64_t v57 = (const void *)(v54 + v56);
      if (_s7Weather24LocationCompositionStateOwet_0(v54 + v56, 1, v40))
      {
        uint64_t v58 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dst, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v40 - 8) + 32))(__dst, v57, v40);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v40);
      }
      *(_OWORD *)(v53 + v55[7]) = *(_OWORD *)(v54 + v55[7]);
      *(void *)(v53 + v55[8]) = *(void *)(v54 + v55[8]);
      *(unsigned char *)(v33 + v179[10]) = *(unsigned char *)(v34 + v179[10]);
      uint64_t v59 = v179[11];
      uint64_t v60 = (void *)(v33 + v59);
      long long v61 = (const void *)(v34 + v59);
      uint64_t v62 = type metadata accessor for LocationOfInterest();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62))
      {
        uint64_t v63 = sub_10017DF08(&qword_100E63508);
        memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v62);
      }
      *(unsigned char *)(v33 + v179[12]) = *(unsigned char *)(v34 + v179[12]);
      *(unsigned char *)(v33 + v179[13]) = *(unsigned char *)(v34 + v179[13]);
      uint64_t v64 = v179[14];
      uint64_t v65 = (unsigned char *)(v33 + v64);
      uint64_t v66 = (unsigned char *)(v34 + v64);
      uint64_t v67 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, (uint64_t)v67))
      {
        uint64_t v68 = sub_10017DF08(&qword_100E6DC10);
        memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        *uint64_t v65 = *v66;
        uint64_t v69 = v67[5];
        uint64_t v70 = &v65[v69];
        __dstb = &v66[v69];
        uint64_t v71 = type metadata accessor for Location();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v71 - 8) + 32))(v70, __dstb, v71);
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v62 - 8) + 32))(&v65[v67[6]], &v66[v67[6]], v62);
        v65[v67[7]] = v66[v67[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 0, 1, (uint64_t)v67);
      }
      uint64_t v72 = v33;
      uint64_t v73 = (uint64_t)v179;
      goto LABEL_30;
    }
    goto LABEL_13;
  }
  if (v36)
  {
    sub_1000B0790(v33, (void (*)(void))type metadata accessor for LocationFooterViewModel);
LABEL_13:
    size_t v42 = *(void *)(*(void *)(sub_10017DF08(&qword_100E6DC18) - 8) + 64);
    uint64_t v43 = (void *)v33;
    uint64_t v44 = (const void *)v34;
LABEL_14:
    memcpy(v43, v44, v42);
    goto LABEL_31;
  }
  *(unsigned char *)uint64_t v33 = *(unsigned char *)v34;
  *(unsigned char *)(v33 + 1) = *(unsigned char *)(v34 + 1);
  *(unsigned char *)(v33 + 2) = *(unsigned char *)(v34 + 2);
  uint64_t v45 = *(void *)(v34 + 16);
  *(void *)(v33 + 8) = *(void *)(v34 + 8);
  *(void *)(v33 + 16) = v45;
  swift_bridgeObjectRelease();
  uint64_t v46 = v35[8];
  uint64_t v47 = (void *)(v33 + v46);
  uint64_t v48 = (const void *)(v34 + v46);
  uint64_t v49 = type metadata accessor for URL();
  int v50 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v49);
  int v51 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v49);
      goto LABEL_42;
    }
    goto LABEL_41;
  }
  uint64_t v140 = *(void *)(v49 - 8);
  if (v51)
  {
    (*(void (**)(void *, uint64_t))(v140 + 8))(v47, v49);
LABEL_41:
    uint64_t v141 = sub_10017DF08(&qword_100E749B0);
    memcpy(v47, v48, *(void *)(*(void *)(v141 - 8) + 64));
    goto LABEL_42;
  }
  (*(void (**)(void *, const void *, uint64_t))(v140 + 40))(v47, v48, v49);
LABEL_42:
  uint64_t v142 = v35[9];
  uint64_t v143 = v33 + v142;
  uint64_t v144 = v34 + v142;
  *(unsigned char *)uint64_t v143 = *(unsigned char *)(v34 + v142);
  *(void *)(v143 + 8) = *(void *)(v34 + v142 + 8);
  swift_bridgeObjectRelease();
  uint64_t v180 = v144;
  __dsta = (int *)type metadata accessor for LearnMoreAttributorViewModel();
  uint64_t v145 = __dsta[6];
  uint64_t v146 = (const void *)(v144 + v145);
  uint64_t v178 = v143 + v145;
  LODWORD(v144) = _s7Weather24LocationCompositionStateOwet_0(v143 + v145, 1, v49);
  int v147 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v146, 1, v49);
  if (v144)
  {
    if (v147)
    {
      size_t v148 = *(void *)(*(void *)(sub_10017DF08(&qword_100E749B0) - 8) + 64);
      uint64_t v149 = (void *)v178;
LABEL_47:
      memcpy(v149, v146, v148);
      goto LABEL_51;
    }
    (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v49 - 8) + 32))(v178, v146, v49);
    _s7Weather24LocationCompositionStateOwst_0(v178, 0, 1, v49);
  }
  else
  {
    uint64_t v150 = *(void *)(v49 - 8);
    if (v147)
    {
      (*(void (**)(uint64_t, uint64_t))(v150 + 8))(v178, v49);
      size_t v148 = *(void *)(*(void *)(sub_10017DF08(&qword_100E749B0) - 8) + 64);
      uint64_t v149 = (void *)v178;
      goto LABEL_47;
    }
    (*(void (**)(uint64_t, const void *, uint64_t))(v150 + 40))(v178, v146, v49);
  }
LABEL_51:
  uint64_t v151 = __dsta[7];
  size_t v152 = (void *)(v143 + v151);
  uint64_t v153 = (uint64_t *)(v180 + v151);
  uint64_t v155 = *v153;
  uint64_t v154 = v153[1];
  *size_t v152 = v155;
  v152[1] = v154;
  swift_bridgeObjectRelease();
  *(void *)(v143 + __dsta[8]) = *(void *)(v180 + __dsta[8]);
  swift_release();
  *(unsigned char *)(v33 + v35[10]) = *(unsigned char *)(v34 + v35[10]);
  uint64_t v156 = v35[11];
  uint64_t v157 = (void *)(v33 + v156);
  uint64_t v158 = (const void *)(v34 + v156);
  uint64_t v159 = type metadata accessor for LocationOfInterest();
  int v160 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v157, 1, v159);
  int v161 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v158, 1, v159);
  if (v160)
  {
    if (!v161)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v159 - 8) + 32))(v157, v158, v159);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v157, 0, 1, v159);
      goto LABEL_57;
    }
    goto LABEL_56;
  }
  uint64_t v162 = *(void *)(v159 - 8);
  if (v161)
  {
    (*(void (**)(void *, uint64_t))(v162 + 8))(v157, v159);
LABEL_56:
    uint64_t v163 = sub_10017DF08(&qword_100E63508);
    memcpy(v157, v158, *(void *)(*(void *)(v163 - 8) + 64));
    goto LABEL_57;
  }
  (*(void (**)(void *, const void *, uint64_t))(v162 + 40))(v157, v158, v159);
LABEL_57:
  *(unsigned char *)(v33 + v35[12]) = *(unsigned char *)(v34 + v35[12]);
  *(unsigned char *)(v33 + v35[13]) = *(unsigned char *)(v34 + v35[13]);
  uint64_t v164 = v35[14];
  uint64_t v165 = (unsigned char *)(v33 + v164);
  uint64_t v166 = (unsigned char *)(v34 + v164);
  int v167 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
  int v168 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v165, 1, (uint64_t)v167);
  int v169 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v166, 1, (uint64_t)v167);
  if (v168)
  {
    if (!v169)
    {
      *uint64_t v165 = *v166;
      uint64_t v170 = v167[5];
      int v171 = &v165[v170];
      uint64_t v172 = &v166[v170];
      uint64_t v173 = type metadata accessor for Location();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v173 - 8) + 32))(v171, v172, v173);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v159 - 8) + 32))(&v165[v167[6]], &v166[v167[6]], v159);
      v165[v167[7]] = v166[v167[7]];
      uint64_t v72 = (uint64_t)v165;
      uint64_t v73 = (uint64_t)v167;
LABEL_30:
      _s7Weather24LocationCompositionStateOwst_0(v72, 0, 1, v73);
      goto LABEL_31;
    }
    goto LABEL_62;
  }
  if (v169)
  {
    sub_1000B0790((uint64_t)v165, (void (*)(void))type metadata accessor for HomeAndWorkRefinementRowViewModel);
LABEL_62:
    size_t v42 = *(void *)(*(void *)(sub_10017DF08(&qword_100E6DC10) - 8) + 64);
    uint64_t v43 = v165;
    uint64_t v44 = v166;
    goto LABEL_14;
  }
  *uint64_t v165 = *v166;
  uint64_t v174 = v167[5];
  uint64_t v175 = &v165[v174];
  uint64_t v176 = &v166[v174];
  uint64_t v177 = type metadata accessor for Location();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v177 - 8) + 40))(v175, v176, v177);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v159 - 8) + 40))(&v165[v167[6]], &v166[v167[6]], v159);
  v165[v167[7]] = v166[v167[7]];
LABEL_31:
  *(unsigned char *)(a1 + v8[10]) = *(unsigned char *)(a2 + v8[10]);
  *(unsigned char *)(a1 + v8[11]) = *(unsigned char *)(a2 + v8[11]);
  *(unsigned char *)(a1 + v8[12]) = *(unsigned char *)(a2 + v8[12]);
  *(unsigned char *)(a1 + v8[13]) = *(unsigned char *)(a2 + v8[13]);
  *(unsigned char *)(a1 + v8[14]) = *(unsigned char *)(a2 + v8[14]);
  uint64_t v74 = v8[15];
  uint64_t v75 = *(void **)(a1 + v74);
  *(void *)(a1 + v74) = *(void *)(a2 + v74);

  *(unsigned char *)(a1 + v8[16]) = *(unsigned char *)(a2 + v8[16]);
  *(unsigned char *)(a1 + v8[17]) = *(unsigned char *)(a2 + v8[17]);
  *(unsigned char *)(a1 + v8[18]) = *(unsigned char *)(a2 + v8[18]);
  uint64_t v76 = v8[19];
  uint64_t v77 = a1 + v76;
  uint64_t v78 = a2 + v76;
  uint64_t v79 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 40))(v77, v78, v79);
  uint64_t v80 = v8[20];
  uint64_t v81 = (void *)(a1 + v80);
  uint64_t v82 = (const void *)(a2 + v80);
  uint64_t v83 = type metadata accessor for ForegroundEffect();
  int v84 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v81, 1, v83);
  int v85 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v83);
  if (!v84)
  {
    uint64_t v86 = *(void *)(v83 - 8);
    if (!v85)
    {
      (*(void (**)(void *, const void *, uint64_t))(v86 + 40))(v81, v82, v83);
      goto LABEL_37;
    }
    (*(void (**)(void *, uint64_t))(v86 + 8))(v81, v83);
    goto LABEL_36;
  }
  if (v85)
  {
LABEL_36:
    uint64_t v87 = sub_10017DF08(&qword_100E65FA8);
    memcpy(v81, v82, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v83 - 8) + 32))(v81, v82, v83);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v83);
LABEL_37:
  *(unsigned char *)(a1 + v8[21]) = *(unsigned char *)(a2 + v8[21]);
  *(void *)(a1 + v8[22]) = *(void *)(a2 + v8[22]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v8[23]) = *(unsigned char *)(a2 + v8[23]);
  uint64_t v88 = v8[24];
  uint64_t v89 = a1 + v88;
  uint64_t v90 = a2 + v88;
  uint64_t v91 = type metadata accessor for LocationEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 40))(v89, v90, v91);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_release();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_release();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_release();
  uint64_t v92 = a3[8];
  uint64_t v93 = (void *)(a1 + v92);
  uint64_t v94 = (void *)(a2 + v92);
  uint64_t v95 = v94[1];
  *uint64_t v93 = *v94;
  swift_unknownObjectRelease();
  v93[1] = v95;
  uint64_t v96 = a3[9];
  uint64_t v97 = a1 + v96;
  uint64_t v98 = a2 + v96;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + v96);
  long long v99 = *(_OWORD *)(v98 + 16);
  *(_OWORD *)uint64_t v97 = *(_OWORD *)v98;
  *(_OWORD *)(v97 + 16) = v99;
  *(void *)(v97 + 32) = *(void *)(v98 + 32);
  uint64_t v100 = a3[10];
  uint64_t v101 = a1 + v100;
  uint64_t v102 = a2 + v100;
  *(_OWORD *)uint64_t v101 = *(_OWORD *)(a2 + v100);
  *(unsigned char *)(v101 + 16) = *(unsigned char *)(a2 + v100 + 16);
  *(unsigned char *)(v101 + 17) = *(unsigned char *)(a2 + v100 + 17);
  *(unsigned char *)(v101 + 18) = *(unsigned char *)(a2 + v100 + 18);
  uint64_t v103 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v104 = v101 + v103;
  uint64_t v105 = v102 + v103;
  uint64_t v106 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v106 - 8) + 40))(v104, v105, v106);
  uint64_t v107 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v108 = a1 + v107;
  uint64_t v109 = a2 + v107;
  *(void *)(a1 + v107) = *(void *)(a2 + v107);
  swift_release();
  *(void *)(v108 + 8) = *(void *)(v109 + 8);
  uint64_t v110 = a3[13];
  uint64_t v111 = a1 + v110;
  uint64_t v112 = (uint64_t *)(a2 + v110);
  uint64_t v113 = *v112;
  LOBYTE(v112) = *((unsigned char *)v112 + 8);
  uint64_t v114 = *(void *)v111;
  char v115 = *(unsigned char *)(v111 + 8);
  *(void *)uint64_t v111 = v113;
  *(unsigned char *)(v111 + 8) = (_BYTE)v112;
  sub_10018F6D8(v114, v115);
  uint64_t v116 = a3[14];
  uint64_t v117 = a1 + v116;
  uint64_t v118 = (uint64_t *)(a2 + v116);
  uint64_t v119 = *v118;
  LOBYTE(v118) = *((unsigned char *)v118 + 8);
  uint64_t v120 = *(void *)v117;
  char v121 = *(unsigned char *)(v117 + 8);
  *(void *)uint64_t v117 = v119;
  *(unsigned char *)(v117 + 8) = (_BYTE)v118;
  sub_10018F6D8(v120, v121);
  uint64_t v122 = a3[15];
  uint64_t v123 = a1 + v122;
  uint64_t v124 = a2 + v122;
  uint64_t v125 = *(void *)(v124 + 64);
  char v126 = *(unsigned char *)(v124 + 72);
  uint64_t v127 = *(void *)v123;
  uint64_t v128 = *(void *)(v123 + 8);
  uint64_t v129 = *(void *)(v123 + 16);
  uint64_t v130 = *(void *)(v123 + 24);
  uint64_t v131 = *(void *)(v123 + 32);
  uint64_t v132 = *(void *)(v123 + 40);
  uint64_t v133 = *(void *)(v123 + 48);
  uint64_t v134 = *(void *)(v123 + 56);
  uint64_t v135 = *(void *)(v123 + 64);
  char v136 = *(unsigned char *)(v123 + 72);
  long long v137 = *(_OWORD *)(v124 + 16);
  *(_OWORD *)uint64_t v123 = *(_OWORD *)v124;
  *(_OWORD *)(v123 + 16) = v137;
  long long v138 = *(_OWORD *)(v124 + 48);
  *(_OWORD *)(v123 + 32) = *(_OWORD *)(v124 + 32);
  *(_OWORD *)(v123 + 48) = v138;
  *(void *)(v123 + 64) = v125;
  *(unsigned char *)(v123 + 72) = v126;
  sub_10018CCC4(v127, v128, v129, v130, v131, v132, v133, v134, v135, v136);
  return a1;
}

uint64_t sub_10085A468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10085A47C);
}

uint64_t sub_10085A47C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for LocationViewModel();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_8:
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  if (a2 != 0x7FFFFFFF)
  {
    uint64_t v8 = type metadata accessor for DisplayMetrics();
    uint64_t v9 = a1 + *(int *)(a3 + 40);
    goto LABEL_8;
  }
  unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
  if (v10 >= 0xFFFFFFFF) {
    LODWORD(v10) = -1;
  }
  return (v10 + 1);
}

uint64_t sub_10085A52C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10085A540);
}

void sub_10085A540(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for LocationViewModel();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return;
    }
    uint64_t v10 = type metadata accessor for DisplayMetrics();
    uint64_t v11 = a1 + *(int *)(a4 + 40);
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t sub_10085A5EC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10085A60C()
{
  uint64_t v1 = type metadata accessor for LocationGridView();
  sub_1001627C0(v1);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return sub_100853380(v3);
}

unint64_t sub_10085A64C()
{
  unint64_t result = qword_100E9B338;
  if (!qword_100E9B338)
  {
    sub_10018C6DC(&qword_100E9B328);
    sub_10085A6C8();
    sub_10085B028();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B338);
  }
  return result;
}

unint64_t sub_10085A6C8()
{
  unint64_t result = qword_100E9B340;
  if (!qword_100E9B340)
  {
    sub_10018C6DC(&qword_100E9B348);
    sub_10085A744();
    sub_10085ABA4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B340);
  }
  return result;
}

unint64_t sub_10085A744()
{
  unint64_t result = qword_100E9B350;
  if (!qword_100E9B350)
  {
    sub_10018C6DC(&qword_100E9B358);
    sub_10085A7C0();
    sub_10085A9A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B350);
  }
  return result;
}

unint64_t sub_10085A7C0()
{
  unint64_t result = qword_100E9B360;
  if (!qword_100E9B360)
  {
    sub_10018C6DC(&qword_100E9B368);
    sub_10085A83C();
    sub_10085A8DC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B360);
  }
  return result;
}

unint64_t sub_10085A83C()
{
  unint64_t result = qword_100E9B370;
  if (!qword_100E9B370)
  {
    sub_10018C6DC(&qword_100E9B378);
    sub_1001246C8(&qword_100E9B380, &qword_100E9B388);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B370);
  }
  return result;
}

unint64_t sub_10085A8DC()
{
  unint64_t result = qword_100E9B390;
  if (!qword_100E9B390)
  {
    sub_10018C6DC(&qword_100E9B398);
    sub_1001246C8(&qword_100E9B3A0, &qword_100E9B3A8);
    sub_1001246C8(&qword_100E9B3B0, &qword_100E9B3B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B390);
  }
  return result;
}

unint64_t sub_10085A9A0()
{
  unint64_t result = qword_100E9B3C0;
  if (!qword_100E9B3C0)
  {
    sub_10018C6DC(&qword_100E9B3C8);
    sub_10085AA1C();
    sub_10085AAE0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B3C0);
  }
  return result;
}

unint64_t sub_10085AA1C()
{
  unint64_t result = qword_100E9B3D0;
  if (!qword_100E9B3D0)
  {
    sub_10018C6DC(&qword_100E9B3D8);
    sub_1001246C8(&qword_100E9B3E0, &qword_100E9B3E8);
    sub_1001246C8(&qword_100E9B3F0, &qword_100E9B3F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B3D0);
  }
  return result;
}

unint64_t sub_10085AAE0()
{
  unint64_t result = qword_100E9B400;
  if (!qword_100E9B400)
  {
    sub_10018C6DC(&qword_100E9B408);
    sub_1001246C8(&qword_100E9B410, &qword_100E9B418);
    sub_1001246C8(&qword_100E9B420, &qword_100E9B428);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B400);
  }
  return result;
}

unint64_t sub_10085ABA4()
{
  unint64_t result = qword_100E9B430;
  if (!qword_100E9B430)
  {
    sub_10018C6DC(&qword_100E9B438);
    sub_10085AC20();
    sub_10085AE24();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B430);
  }
  return result;
}

unint64_t sub_10085AC20()
{
  unint64_t result = qword_100E9B440;
  if (!qword_100E9B440)
  {
    sub_10018C6DC(&qword_100E9B448);
    sub_10085AC9C();
    sub_10085AD60();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B440);
  }
  return result;
}

unint64_t sub_10085AC9C()
{
  unint64_t result = qword_100E9B450;
  if (!qword_100E9B450)
  {
    sub_10018C6DC(&qword_100E9B458);
    sub_1001246C8(&qword_100E9B460, &qword_100E9B468);
    sub_1001246C8(&qword_100E9B470, &qword_100E9B478);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B450);
  }
  return result;
}

unint64_t sub_10085AD60()
{
  unint64_t result = qword_100E9B480;
  if (!qword_100E9B480)
  {
    sub_10018C6DC(&qword_100E9B488);
    sub_1001246C8(&qword_100E9B490, &qword_100E9B498);
    sub_1001246C8(&qword_100E9B4A0, &qword_100E9B4A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B480);
  }
  return result;
}

unint64_t sub_10085AE24()
{
  unint64_t result = qword_100E9B4B0;
  if (!qword_100E9B4B0)
  {
    sub_10018C6DC(&qword_100E9B4B8);
    sub_10085AEA0();
    sub_10085AF64();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B4B0);
  }
  return result;
}

unint64_t sub_10085AEA0()
{
  unint64_t result = qword_100E9B4C0;
  if (!qword_100E9B4C0)
  {
    sub_10018C6DC(&qword_100E9B4C8);
    sub_1001246C8(&qword_100E9B4D0, &qword_100E9B4D8);
    sub_1001246C8(&qword_100E9B4E0, &qword_100E9B4E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B4C0);
  }
  return result;
}

unint64_t sub_10085AF64()
{
  unint64_t result = qword_100E9B4F0;
  if (!qword_100E9B4F0)
  {
    sub_10018C6DC(&qword_100E9B4F8);
    sub_1001246C8(&qword_100E9B500, &qword_100E9B508);
    sub_1001246C8(&qword_100E9B510, &qword_100E9B518);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B4F0);
  }
  return result;
}

unint64_t sub_10085B028()
{
  unint64_t result = qword_100E9B520;
  if (!qword_100E9B520)
  {
    sub_10018C6DC(&qword_100E9B528);
    sub_10085B0A4();
    sub_10085B528();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B520);
  }
  return result;
}

unint64_t sub_10085B0A4()
{
  unint64_t result = qword_100E9B530;
  if (!qword_100E9B530)
  {
    sub_10018C6DC(&qword_100E9B538);
    sub_10085B120();
    sub_10085B324();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B530);
  }
  return result;
}

unint64_t sub_10085B120()
{
  unint64_t result = qword_100E9B540;
  if (!qword_100E9B540)
  {
    sub_10018C6DC(&qword_100E9B548);
    sub_10085B19C();
    sub_10085B260();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B540);
  }
  return result;
}

unint64_t sub_10085B19C()
{
  unint64_t result = qword_100E9B550;
  if (!qword_100E9B550)
  {
    sub_10018C6DC(&qword_100E9B558);
    sub_1001246C8(&qword_100E9B560, &qword_100E9B568);
    sub_1001246C8(&qword_100E9B570, &qword_100E9B578);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B550);
  }
  return result;
}

unint64_t sub_10085B260()
{
  unint64_t result = qword_100E9B580;
  if (!qword_100E9B580)
  {
    sub_10018C6DC(&qword_100E9B588);
    sub_1001246C8(&qword_100E9B590, &qword_100E9B598);
    sub_1001246C8(&qword_100E9B5A0, &qword_100E9B5A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B580);
  }
  return result;
}

unint64_t sub_10085B324()
{
  unint64_t result = qword_100E9B5B0;
  if (!qword_100E9B5B0)
  {
    sub_10018C6DC(&qword_100E9B5B8);
    sub_10085B3A0();
    sub_10085B464();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B5B0);
  }
  return result;
}

unint64_t sub_10085B3A0()
{
  unint64_t result = qword_100E9B5C0;
  if (!qword_100E9B5C0)
  {
    sub_10018C6DC(&qword_100E9B5C8);
    sub_1001246C8(&qword_100E9B5D0, &qword_100E9B5D8);
    sub_1001246C8(&qword_100E9B5E0, &qword_100E9B5E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B5C0);
  }
  return result;
}

unint64_t sub_10085B464()
{
  unint64_t result = qword_100E9B5F0;
  if (!qword_100E9B5F0)
  {
    sub_10018C6DC(&qword_100E9B5F8);
    sub_1001246C8(&qword_100E9B600, &qword_100E9B608);
    sub_1001246C8(&qword_100E9B610, &qword_100E9B618);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B5F0);
  }
  return result;
}

unint64_t sub_10085B528()
{
  unint64_t result = qword_100E9B620;
  if (!qword_100E9B620)
  {
    sub_10018C6DC(&qword_100E9B628);
    sub_1001246C8(&qword_100E9B630, &qword_100E9B638);
    sub_1001246C8(&qword_100E9B640, &qword_100E9B648);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B620);
  }
  return result;
}

unint64_t sub_10085B5EC()
{
  unint64_t result = qword_100E9B650;
  if (!qword_100E9B650)
  {
    sub_10018C6DC(&qword_100E9B330);
    sub_100226D4C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B650);
  }
  return result;
}

uint64_t sub_10085B660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, char a6)
{
  if (a6) {
    return sub_10085B7DC(a1, a2, a3, a4, a5, HIBYTE(a5) & 1);
  }
  else {
    return sub_10085B674(a1, a2, a3, a4, a5, HIBYTE(a5) & 1);
  }
}

uint64_t sub_10085B674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, char a6)
{
  if (a6) {
    return sub_10085B780(a1, a2, a3, a4, a5, BYTE2(a5) & 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10085D618, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10085D618, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10085D618, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10085B7A4);
  }
  else {
    return sub_10085B780(a1, a2, a3, a4, a5, BYTE2(a5) & 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10085B740, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10085D618, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10085D618, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10085D618);
  }
}

uint64_t sub_10085B740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10085B780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5, char a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (a6)
  {
    a7 = a9;
    a8 = a10;
  }
  return sub_10085BAEC(a1, a2, a3, a4, a5, HIBYTE(a5) & 1, a7, a8);
}

uint64_t sub_10085B7A4()
{
  swift_release();

  return swift_release();
}

uint64_t sub_10085B7DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, char a6)
{
  if ((a6 & 1) == 0) {
    return sub_10085B780(a1, a2, a3, a4, a5, BYTE2(a5) & 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10085D618, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10085D618, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10085D618, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10085D618);
  }
  return sub_10085B7A4();
}

uint64_t sub_10085B86C(uint64_t a1, unsigned char *a2)
{
  uint64_t result = type metadata accessor for LocationGridView() - 8;
  if (*a2 == 1) {
    return sub_1008533BC();
  }
  return result;
}

unint64_t sub_10085B8D8()
{
  unint64_t result = qword_100E9B668;
  if (!qword_100E9B668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B668);
  }
  return result;
}

uint64_t sub_10085B92C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, char a6)
{
  if ((a6 & 1) == 0) {
    return sub_10085B780(a1, a2, a3, a4, a5, BYTE2(a5) & 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10085D614, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10085D614, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10085D614, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10085D614);
  }
  return sub_10085BB04();
}

uint64_t sub_10085B9E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, char a6)
{
  if (a6) {
    return sub_10085B780(a1, a2, a3, a4, a5, BYTE2(a5) & 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10085D614, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10085D614, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10085D614, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10085BB04);
  }
  else {
    return sub_10085B780(a1, a2, a3, a4, a5, BYTE2(a5) & 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10085BAAC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10085D614, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10085D614, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10085D614);
  }
}

uint64_t sub_10085BAAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_10085BAEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a5 & 1;
  if (a6) {
    return a8(a1, a2, a3, a4, v8);
  }
  else {
    return a7(a1, a2, a3, a4, v8);
  }
}

uint64_t sub_10085BB04()
{
  swift_retain();

  return swift_retain();
}

uint64_t sub_10085BB74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for LocationGridView();
  sub_1001627C0(v8);
  return sub_100853548(a1, a2, a3, a4);
}

uint64_t sub_10085BBF8()
{
  uint64_t v1 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100179EF0();
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = type metadata accessor for LocationGridView();
  sub_100179EF0();
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v5 + v8;
  uint64_t v10 = v0 + v3;
  type metadata accessor for LocationComponentHeaderViewModel(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 3u:
      type metadata accessor for WeatherDescription();
      sub_100179DC0();
      sub_100162F0C();
      v11();
      type metadata accessor for LocationComponentHeaderViewModel.Description(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_7:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  unint64_t v73 = v3 + v9;
  uint64_t v12 = v10 + *(int *)(v1 + 20);
  type metadata accessor for LocationComponentViewModel();
  uint64_t v74 = v8;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_42;
    case 1u:
      swift_bridgeObjectRelease();
      uint64_t v9 = type metadata accessor for DailyForecastComponentViewModel(0);
      int v13 = *(void (**)(void))(*(void *)(sub_10017DF08(&qword_100E65250) - 8) + 8);
      sub_1001835D4();
      v13();
      sub_1001835D4();
      v13();
      sub_1001835D4();
      v13();
      goto LABEL_34;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = type metadata accessor for FeelsLikeComponentViewModel(0);
      uint64_t v14 = sub_1001CA8E8();
      type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(v14);
      if (!sub_100163F30())
      {
        swift_bridgeObjectRelease();
        type metadata accessor for TemperatureScaleConfiguration();
        sub_100179DC0();
        sub_100162F0C();
        v15();
        type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        swift_bridgeObjectRelease();
      }
      sub_1001631C0();
      break;
    case 3u:
    case 4u:
      goto LABEL_42;
    case 5u:
      type metadata accessor for WeatherMapOverlayKind();
      sub_100179DC0();
      sub_100162F0C();
      v16();
      uint64_t v9 = type metadata accessor for MapComponentViewModel();
      sub_1001CA8E8();
      type metadata accessor for Location();
      sub_100179DC0();
      sub_100162F0C();
      v17();
      uint64_t v18 = sub_1001CA8E8();
      char v19 = (int *)type metadata accessor for WeatherData(v18);
      if (!sub_100163F30())
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = v8 + v19[5];
        type metadata accessor for Locale();
        if (!sub_100182A28(v20))
        {
          sub_100162880();
          sub_10017B290();
          v21();
        }
        type metadata accessor for WeatherDataModel();
        sub_100179DC0();
        sub_100162F0C();
        v22();
        uint64_t v23 = v8 + v19[7];
        uint64_t v24 = sub_10017DF08(&qword_100E63738);
        if (!_s7Weather24LocationCompositionStateOwet_0(v23, 1, v24))
        {
          type metadata accessor for Date();
          sub_100179DC0();
          (*(void (**)(uint64_t))(v25 + 8))(v23);
        }
        uint64_t v26 = v8 + v19[8];
        type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          type metadata accessor for WeatherStatisticsModel();
          sub_100179DC0();
          (*(void (**)(uint64_t))(v67 + 8))(v26);
        }
        else if (!EnumCaseMultiPayload)
        {
          swift_bridgeObjectRelease();
        }
        uint64_t v68 = v8 + v19[9];
        uint64_t v9 = type metadata accessor for WeatherDataOverrides();
        if (!sub_100182A28(v68))
        {
          uint64_t v69 = type metadata accessor for Date();
          if (!sub_100163F30())
          {
            sub_100162880();
            (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v68, v69);
          }
          uint64_t v71 = v68 + *(int *)(v9 + 20);
          if (!sub_100163F30())
          {
            sub_100162880();
            (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v69);
          }
        }
      }
      sub_1001631C0();
      uint64_t v8 = v74;
      break;
    case 6u:
      swift_bridgeObjectRelease();
      int v28 = *(unsigned __int8 *)(v12 + 32);
      if (v28 != 255) {
        sub_1001F3C7C(*(void *)(v12 + 16), *(void *)(v12 + 24), v28);
      }
      swift_bridgeObjectRelease();
      type metadata accessor for MoonComponentViewModel();
      type metadata accessor for Date();
      goto LABEL_37;
    case 7u:
      type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v29 = type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v30 = v12 + *(int *)(v29 + 20);
        uint64_t v9 = type metadata accessor for URL();
        if (!sub_100182A28(v30))
        {
          sub_100162880();
          sub_10017B290();
          v31();
        }
        sub_1001631C0();
        sub_100162880();
        uint64_t v33 = *(void (**)(void))(v32 + 8);
        v33();
        uint64_t v34 = v12 + *(int *)(v29 + 32);
        uint64_t v8 = v74;
        if (!sub_100182A28(v34)) {
          ((void (*)(uint64_t, uint64_t))v33)(v34, v9);
        }
      }
      break;
    case 8u:
      swift_bridgeObjectRelease();
      type metadata accessor for NextHourPrecipitationComponentViewModel();
      type metadata accessor for NextHourPrecipitationChartViewModel();
      goto LABEL_37;
    case 9u:
      type metadata accessor for Location();
      goto LABEL_37;
    case 0xAu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_42;
    case 0xBu:
      type metadata accessor for PressureTrend();
      sub_100179DC0();
      sub_100162F0C();
      v35();
      uint64_t v9 = type metadata accessor for PressureComponentViewModel();
      sub_1001631C0();
      sub_1001631C0();
LABEL_34:
      sub_1001631C0();
      goto LABEL_42;
    case 0xDu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for SevereAlertComponentViewModel();
      type metadata accessor for WeatherAlert.Prominence();
      goto LABEL_37;
    case 0xEu:
      type metadata accessor for SunriseSunsetViewModel();
LABEL_37:
      sub_100179DC0();
      sub_100162F0C();
      v36();
      break;
    case 0xFu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_42;
    case 0x10u:
      swift_bridgeObjectRelease();
      uint64_t v9 = type metadata accessor for UVIndexComponentViewModel();
      sub_1001CA8E8();
      type metadata accessor for WeatherDescription();
      sub_100179DC0();
      sub_100162F0C();
      v37();
      goto LABEL_42;
    case 0x11u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_42;
    case 0x12u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = type metadata accessor for WindComponentViewModel();
      sub_1001CA8E8();
      type metadata accessor for WindComponentCompassViewModel();
      sub_100179DC0();
      sub_100162F0C();
      v38();
LABEL_42:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  uint64_t v39 = v10 + *(int *)(v1 + 28);
  uint64_t v40 = (int *)type metadata accessor for LocationComponentAction(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v39, 1, (uint64_t)v40))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        type metadata accessor for URL();
        goto LABEL_49;
      case 1u:
        type metadata accessor for WeatherMapOverlayKind();
        goto LABEL_49;
      case 2u:
        type metadata accessor for DetailCondition();
        goto LABEL_49;
      case 4u:
        v39 += *(int *)(sub_10017DF08(&qword_100E66480) + 48);
        type metadata accessor for Location();
LABEL_49:
        sub_100179DC0();
        (*(void (**)(uint64_t))(v41 + 8))(v39);
        break;
      default:
        break;
    }
  }
  uint64_t v42 = v0 + (v73 & ~v8);
  uint64_t v43 = type metadata accessor for Location.Identifier();
  sub_100162E4C();
  uint64_t v45 = *(void (**)(uint64_t))(v44 + 8);
  uint64_t v46 = sub_100179100();
  v45(v46);
  uint64_t v47 = type metadata accessor for LocationViewModel();
  if (!sub_100191220(v47)) {
    ((void (*)(uint64_t, uint64_t))v45)(v9, v43);
  }
  uint64_t v48 = v42 + v40[6];
  swift_bridgeObjectRelease();
  sub_100191D78(*(void *)(v48 + 16), *(void *)(v48 + 24), *(void *)(v48 + 32), *(void *)(v48 + 40), *(unsigned char *)(v48 + 48));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10021038C();
  uint64_t v49 = v42 + v40[9];
  uint64_t v50 = type metadata accessor for LocationFooterViewModel();
  if (!sub_1001810A0(v50))
  {
    swift_bridgeObjectRelease();
    uint64_t v51 = type metadata accessor for URL();
    if (!sub_10018A418(v51))
    {
      sub_100162880();
      sub_1001723EC();
      v52();
    }
    swift_bridgeObjectRelease();
    uint64_t v53 = type metadata accessor for LearnMoreAttributorViewModel();
    if (!sub_10019D27C(v53))
    {
      sub_100162880();
      sub_1001723EC();
      v54();
    }
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v55 = v49 + *(int *)(v9 + 44);
    uint64_t v56 = type metadata accessor for LocationOfInterest();
    if (!_s7Weather24LocationCompositionStateOwet_0(v55, 1, v56))
    {
      sub_100162880();
      sub_1001723EC();
      v57();
    }
    uint64_t v58 = type metadata accessor for HomeAndWorkRefinementRowViewModel();
    if (!sub_1001810A0(v58))
    {
      type metadata accessor for Location();
      sub_100179DC0();
      sub_100162F0C();
      v59();
      sub_100162880();
      sub_1001723EC();
      v60();
    }
  }

  type metadata accessor for Date();
  sub_100179DC0();
  sub_100162F0C();
  v61();
  uint64_t v62 = type metadata accessor for ForegroundEffect();
  if (!sub_1001810A0(v62))
  {
    sub_100162880();
    sub_10017B290();
    v63();
  }
  swift_bridgeObjectRelease();
  type metadata accessor for LocationEntity();
  sub_100179DC0();
  sub_100162F0C();
  v64();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v42 + *(int *)(v6 + 36));
  type metadata accessor for DisplayMetrics();
  sub_100176DE4();
  sub_100179DC0();
  sub_100162F0C();
  v65();
  swift_release();
  sub_100184BF0();

  return swift_deallocObject();
}

uint64_t sub_10085CAD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100164920(v3);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = type metadata accessor for LocationGridView();
  sub_100164920(v8);
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  unint64_t v13 = (v5 + v7 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v14 = (*(void *)(v12 + 64) + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100854970(v1 + v5, v1 + v13, *(void *)(v1 + v14), *(void *)(v1 + v14 + 8), *(void *)(v1 + v14 + 16), *(unsigned __int8 *)(v1 + ((v14 + 39) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned __int8 *)(v1 + ((v14 + 55) & 0xFFFFFFFFFFFFFFF8) + 8), a1, *(double *)(v1 + ((v14 + 39) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v14 + 71) & 0xFFFFFFFFFFFFFFF8)));
}

unint64_t sub_10085CBCC()
{
  unint64_t result = qword_100E9B6B0;
  if (!qword_100E9B6B0)
  {
    sub_10018C6DC(&qword_100E9B680);
    sub_10085CC6C();
    sub_1001246C8(&qword_100E9B778, &qword_100E9B780);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B6B0);
  }
  return result;
}

unint64_t sub_10085CC6C()
{
  unint64_t result = qword_100E9B6B8;
  if (!qword_100E9B6B8)
  {
    sub_10018C6DC(&qword_100E9B678);
    sub_10085CCE8();
    sub_10085D220();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B6B8);
  }
  return result;
}

unint64_t sub_10085CCE8()
{
  unint64_t result = qword_100E9B6C0;
  if (!qword_100E9B6C0)
  {
    sub_10018C6DC(&qword_100E9B670);
    sub_10085CD64();
    sub_10085CE78();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B6C0);
  }
  return result;
}

unint64_t sub_10085CD64()
{
  unint64_t result = qword_100E9B6C8;
  if (!qword_100E9B6C8)
  {
    sub_10018C6DC(&qword_100E9B6D0);
    sub_10085CE04();
    sub_1001246C8(&qword_100E9B760, &qword_100E9B768);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B6C8);
  }
  return result;
}

unint64_t sub_10085CE04()
{
  unint64_t result = qword_100E9B6D8;
  if (!qword_100E9B6D8)
  {
    sub_10018C6DC(&qword_100E9B6E0);
    sub_10085CE78();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B6D8);
  }
  return result;
}

unint64_t sub_10085CE78()
{
  unint64_t result = qword_100E9B6E8;
  if (!qword_100E9B6E8)
  {
    sub_10018C6DC(&qword_100E9B6F0);
    sub_10085CF18();
    sub_1001246C8(&qword_100E842A8, &qword_100E842B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B6E8);
  }
  return result;
}

unint64_t sub_10085CF18()
{
  unint64_t result = qword_100E9B6F8;
  if (!qword_100E9B6F8)
  {
    sub_10018C6DC(&qword_100E9B700);
    sub_10085CFB8();
    sub_1001246C8(&qword_100E9B750, &qword_100E9B758);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B6F8);
  }
  return result;
}

unint64_t sub_10085CFB8()
{
  unint64_t result = qword_100E9B708;
  if (!qword_100E9B708)
  {
    sub_10018C6DC(&qword_100E9B710);
    sub_10085D058();
    sub_1001246C8(&qword_100E70D10, &qword_100EAAE30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B708);
  }
  return result;
}

unint64_t sub_10085D058()
{
  unint64_t result = qword_100E9B718;
  if (!qword_100E9B718)
  {
    sub_10018C6DC(&qword_100E9B720);
    sub_10085D0F8();
    sub_1001246C8(&qword_100E70D10, &qword_100EAAE30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B718);
  }
  return result;
}

unint64_t sub_10085D0F8()
{
  unint64_t result = qword_100E9B728;
  if (!qword_100E9B728)
  {
    sub_10018C6DC(&qword_100E9B730);
    sub_10085D174();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B728);
  }
  return result;
}

unint64_t sub_10085D174()
{
  unint64_t result = qword_100E9B738;
  if (!qword_100E9B738)
  {
    sub_10018C6DC(&qword_100E9B740);
    sub_1001350E0(&qword_100E9B748, (void (*)(uint64_t))type metadata accessor for LocationComponentContainerView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B738);
  }
  return result;
}

unint64_t sub_10085D220()
{
  unint64_t result = qword_100E9B770;
  if (!qword_100E9B770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B770);
  }
  return result;
}

uint64_t sub_10085D284(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t initializeWithCopy for LazyUntilLocationViewLoadedIfBelowTheFoldViewModifier(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for LazyUntilLocationViewLoadedIfBelowTheFoldViewModifier(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for LazyUntilLocationViewLoadedIfBelowTheFoldViewModifier(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for LazyUntilLocationViewLoadedIfBelowTheFoldViewModifier()
{
  return &type metadata for LazyUntilLocationViewLoadedIfBelowTheFoldViewModifier;
}

uint64_t sub_10085D400()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10085D4C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10085D4E4()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10085D524()
{
  return sub_100855EA8();
}

unint64_t sub_10085D544()
{
  unint64_t result = qword_100E9B7C8;
  if (!qword_100E9B7C8)
  {
    sub_10018C6DC(&qword_100E9B7D0);
    sub_1001246C8(&qword_100E9B7C0, &qword_100E9B7B8);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B7C8);
  }
  return result;
}

void *sub_10085D61C(uint64_t a1)
{
  uint64_t v40 = type metadata accessor for Location.Identifier();
  uint64_t v3 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v39 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    v34[1] = v1;
    uint64_t v51 = _swiftEmptyArrayStorage;
    sub_1007F3B50(0, v5, 0);
    uint64_t v38 = sub_10017DF08(&qword_100E9B888);
    uint64_t v7 = *(void *)(v38 - 8);
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v37 = sub_1001ABC4C(0, (unint64_t *)&qword_100E6B408);
    uint64_t v36 = *(void *)(v7 + 72);
    uint64_t v35 = (void (**)(char *, uint64_t))(v3 + 8);
    do
    {
      uint64_t v9 = (uint64_t *)(v8 + *(int *)(v38 + 48));
      uint64_t v11 = v9[1];
      uint64_t v42 = *v9;
      uint64_t v10 = v42;
      swift_bridgeObjectRetain();
      Location.coordinate.getter();
      double v13 = v12;
      Location.coordinate.getter();
      id v15 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v13 longitude:v14];
      swift_bridgeObjectRetain();
      id v41 = sub_1002F04FC(v15, v10, v11, 0);
      uint64_t v16 = v39;
      Location.identifier.getter();
      uint64_t v17 = Location.Identifier.id.getter();
      uint64_t v19 = v18;
      (*v35)(v16, v40);
      uint64_t v47 = v17;
      uint64_t v48 = v19;
      swift_bridgeObjectRetain();
      v20._uint64_t countAndFlagsBits = 58;
      v20._object = (void *)0xE100000000000000;
      String.append(_:)(v20);
      swift_bridgeObjectRelease();
      uint64_t v21 = v47;
      uint64_t v22 = v48;
      uint64_t v47 = Location.name.getter();
      uint64_t v48 = v23;
      uint64_t v45 = 58;
      unint64_t v46 = 0xE100000000000000;
      uint64_t v43 = 0;
      unint64_t v44 = 0xE000000000000000;
      sub_10014A85C();
      uint64_t v24 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
      uint64_t v26 = v25;
      swift_bridgeObjectRelease();
      uint64_t v47 = v21;
      uint64_t v48 = v22;
      swift_bridgeObjectRetain();
      v27._uint64_t countAndFlagsBits = v24;
      v27._object = v26;
      String.append(_:)(v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LocationSearchEntity.init(id:name:placemark:isLocal:)(v47, v48, v41, 0, (uint64_t)v49);
      uint64_t v6 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1007F3B50(0, v6[2] + 1, 1);
        uint64_t v6 = v51;
      }
      unint64_t v29 = v6[2];
      unint64_t v28 = v6[3];
      if (v29 >= v28 >> 1)
      {
        sub_1007F3B50((char *)(v28 > 1), v29 + 1, 1);
        uint64_t v6 = v51;
      }
      v6[2] = v29 + 1;
      uint64_t v30 = &v6[5 * v29];
      long long v31 = v49[0];
      long long v32 = v49[1];
      *((unsigned char *)v30 + 64) = v50;
      *((_OWORD *)v30 + 2) = v31;
      *((_OWORD *)v30 + 3) = v32;
      v8 += v36;
      --v5;
    }
    while (v5);
  }
  return v6;
}

uint64_t sub_10085D9DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = sub_10017DF08(&qword_100E9B878);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __n128 v13 = __chkstk_darwin(v10);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))((char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10, v13);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  uint64_t v16 = sub_1001B1E64(a5, a5[3]);
  sub_10085E790(a3, a4, *v16, (uint64_t)sub_10085E70C, v15, a2);
  return swift_release();
}

uint64_t sub_10085DB4C(uint64_t a1)
{
  if (a1) {
    swift_bridgeObjectRetain();
  }
  sub_10017DF08(&qword_100E9B878);
  return CheckedContinuation.resume(returning:)();
}

void sub_10085DBA8(uint64_t a1, void (*a2)(void, void), uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v12 = *(char **)(a1 + 16);
  if (v12
    || (id v13 = [objc_allocWithZone((Class)MKLocalSearchCompleter) init],
        id v14 = objc_allocWithZone((Class)type metadata accessor for LocationSearchCompleter()),
        uint64_t v15 = LocationSearchCompleter.init(searchCompleter:)(v13),
        uint64_t v16 = *(void **)(a1 + 16),
        *(void *)(a1 + 16) = v15,
        v16,
        (uint64_t v12 = *(char **)(a1 + 16)) != 0))
  {
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a2;
    *(void *)(v17 + 24) = a3;
    fora = a6;
    uint64_t v18 = a5;
    uint64_t v19 = (uint64_t *)&v12[OBJC_IVAR____TtC7Weather23LocationSearchCompleter_onError];
    swift_beginAccess();
    uint64_t v20 = *v19;
    *uint64_t v19 = (uint64_t)sub_10085E8E8;
    v19[1] = v17;
    uint64_t v21 = v12;
    swift_retain();
    sub_1001361AC(v20);
    uint64_t v22 = swift_allocObject();
    swift_weakInit();
    sub_10020D948(a4, (uint64_t)v28);
    uint64_t v23 = (void *)swift_allocObject();
    v23[2] = v22;
    v23[3] = a2;
    v23[4] = a3;
    sub_1001262E4(v28, (uint64_t)(v23 + 5));
    uint64_t v24 = (uint64_t *)&v21[OBJC_IVAR____TtC7Weather23LocationSearchCompleter_onUpdate];
    swift_beginAccess();
    uint64_t v25 = *v24;
    *uint64_t v24 = (uint64_t)sub_10085E968;
    v24[1] = (uint64_t)v23;
    swift_retain();
    sub_1001361AC(v25);
    v26._uint64_t countAndFlagsBits = v18;
    v26._object = fora;
    LocationSearchCompleter.searchLocations(for:)(v26);
  }
  else
  {
    a2(0, 0);
  }
}

uint64_t sub_10085DDA8(uint64_t a1, uint64_t (*a2)(void, void))
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.intents.getter();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "We encountered an error while updating the search term.", v9, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return a2(0, 0);
}

void sub_10085DF00(uint64_t a1, uint64_t a2, void (*a3)(void, void), uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
    uint64_t v9 = (void *)static OS_dispatch_queue.main.getter();
    sub_10020D948(a5, (uint64_t)v15);
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a1;
    sub_1001262E4(v15, v10 + 24);
    swift_bridgeObjectRetain();
    sub_10017DF08(&qword_100E9B880);
    type metadata accessor for LocationSearcher();
    firstly<A, B>(on:disposeOn:closure:)();

    swift_release();
    uint64_t v11 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a3;
    *(void *)(v12 + 24) = a4;
    swift_retain();
    Promise.then<A, B>(on:disposeOn:closure:)();
    swift_release();

    swift_release();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a3;
    *(void *)(v13 + 24) = a4;
    swift_retain();
    id v14 = (void *)zalgo.getter();
    Promise.error(on:closure:)();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    a3(0, 0);
  }
}

uint64_t sub_10085E128(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = sub_1001B1E64(a3, a3[3]);
  return sub_10085EA5C(a2, *v4);
}

uint64_t sub_10085E178(uint64_t *a1, uint64_t a2, void (*a3)(void))
{
  return swift_bridgeObjectRelease();
}

void sub_10085E1D8(id *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_10017DF08(&qword_100E9B888);
  __chkstk_darwin(v6);
  os_log_type_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E639E8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Location();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = *a1;
  sub_1004DBA98(v16, (uint64_t)v11);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    sub_10085EB44((uint64_t)v11);
    sub_1001B1E64(a2, a2[3]);
    id v17 = [v16 w_calloutTitle];
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v19;

    LocalSearchRequestManager.performLocalSearch(with:calloutTitle:)(v16, v18, v20);
    swift_bridgeObjectRelease();
    *(void *)(swift_allocObject() + 16) = v16;
    id v21 = v16;
    uint64_t v22 = (void *)zalgo.getter();
    uint64_t v23 = Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    id v24 = [v16 w_calloutTitle];
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v27 = v26;

    unint64_t v28 = (uint64_t *)&v8[*(int *)(v6 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v8, v15, v12);
    *unint64_t v28 = v25;
    v28[1] = v27;
    sub_10017DF08(&qword_100E9B890);
    swift_allocObject();
    uint64_t v23 = Promise.init(value:)();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  *a3 = v23;
}

uint64_t sub_10085E4F4(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E9B888);
  uint64_t v5 = v4 - 8;
  *(void *)&double v6 = __chkstk_darwin(v4).n128_u64[0];
  os_log_type_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [a2 w_calloutTitle:v6];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  uint64_t v13 = (uint64_t *)&v8[*(int *)(v5 + 56)];
  uint64_t v14 = type metadata accessor for Location();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v8, a1, v14);
  *uint64_t v13 = v10;
  v13[1] = v12;
  sub_10017DF08(&qword_100E9B890);
  swift_allocObject();
  return Promise.init(value:)();
}

uint64_t sub_10085E624()
{
  sub_100188188();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LocationSearcher()
{
  return self;
}

uint64_t sub_10085E678()
{
  uint64_t v1 = sub_10017DF08(&qword_100E9B878);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_10085E70C(uint64_t a1)
{
  sub_10017DF08(&qword_100E9B878);

  return sub_10085DB4C(a1);
}

uint64_t sub_10085E790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15[3] = type metadata accessor for LocalSearchRequestManager();
  v15[4] = &off_100E2E138;
  v15[0] = a3;
  sub_10020D948((uint64_t)v15, (uint64_t)v14);
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a6;
  v12[3] = a4;
  void v12[4] = a5;
  sub_1001262E4(v14, (uint64_t)(v12 + 5));
  v12[10] = a1;
  v12[11] = a2;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  asyncMain(block:)();
  swift_release();
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v15);
}

uint64_t sub_10085E884()
{
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 40);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_10085E8D4()
{
  sub_10085DBA8(*(void *)(v0 + 16), *(void (**)(void, void))(v0 + 24), *(void *)(v0 + 32), v0 + 40, *(void *)(v0 + 80), *(void **)(v0 + 88));
}

uint64_t sub_10085E8E8(uint64_t a1)
{
  return sub_10085DDA8(a1, *(uint64_t (**)(void, void))(v1 + 16));
}

uint64_t sub_10085E8F0()
{
  swift_weakDestroy();
  sub_100188188();

  return swift_deallocObject();
}

uint64_t sub_10085E920()
{
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 40);

  return swift_deallocObject();
}

void sub_10085E968(uint64_t a1)
{
  sub_10085DF00(a1, *(void *)(v1 + 16), *(void (**)(void, void))(v1 + 24), *(void *)(v1 + 32), v1 + 40);
}

uint64_t sub_10085E978()
{
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 24);

  return swift_deallocObject();
}

uint64_t sub_10085E9B8(uint64_t a1)
{
  return sub_10085E128(a1, *(void *)(v1 + 16), (void *)(v1 + 24));
}

uint64_t sub_10085E9D8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10085EA10(uint64_t *a1, uint64_t a2)
{
  return sub_10085E178(a1, a2, *(void (**)(void))(v2 + 16));
}

uint64_t sub_10085EA2C()
{
  return (*(uint64_t (**)(void, void))(v0 + 16))(0, 0);
}

uint64_t sub_10085EA5C(uint64_t a1, uint64_t a2)
{
  v6[3] = type metadata accessor for LocalSearchRequestManager();
  v6[4] = &off_100E2E138;
  v6[0] = a2;
  swift_retain();
  sub_100A96890();
  uint64_t v3 = (void *)zalgo.getter();
  sub_10017DF08(&qword_100E9B888);
  uint64_t v4 = when<A>(on:_:)();
  swift_bridgeObjectRelease();

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v6);
  return v4;
}

void sub_10085EB24(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_10085E1D8(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_10085EB44(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E639E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10085EBA4()
{
  sub_100188188();

  return swift_deallocObject();
}

uint64_t sub_10085EBD4(uint64_t a1)
{
  return sub_10085E4F4(a1, *(void **)(v1 + 16));
}

uint64_t sub_10085EBF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v76 = a3;
  uint64_t v4 = type metadata accessor for Calendar.Component();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  type metadata accessor for Calendar();
  sub_100179C0C();
  uint64_t v74 = v12;
  uint64_t v75 = v11;
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v16 - 8);
  sub_1001626E0();
  uint64_t v19 = v18 - v17;
  uint64_t v20 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v73 = v21;
  __chkstk_darwin(v22);
  uint64_t v71 = (char *)&v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v72 = (char *)&v71 - v25;
  uint64_t v26 = sub_10017DF08(&qword_100E981C8);
  __chkstk_darwin(v26 - 8);
  sub_1001626E0();
  uint64_t v29 = v28 - v27;
  uint64_t v30 = type metadata accessor for MainStateProcessingContext();
  __chkstk_darwin(v30);
  sub_1001626E0();
  uint64_t v33 = v32 - v31;
  sub_10085F280(a2, v29);
  if (_s7Weather24LocationCompositionStateOwet_0(v29, 1, v30) == 1)
  {
    sub_1000F3400(v29, &qword_100E981C8);
    if (qword_100E627C8 != -1) {
      swift_once();
    }
    uint64_t v34 = type metadata accessor for Logger();
    sub_1002102B0(v34, (uint64_t)qword_100F51E70);
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)sub_100163DC4();
      *(_WORD *)uint64_t v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "missing processingContext in DiscardStateProcessor", v37, 2u);
      swift_slowDealloc();
    }

    return 1;
  }
  sub_10085F2E8(v29, v33);
  static Calendar.current.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v10, enum case for Calendar.Component.second(_:), v4);
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v4);
  (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v15, v75);
  if (_s7Weather24LocationCompositionStateOwet_0(v19, 1, v20) != 1)
  {
    uint64_t v44 = v73;
    (*(void (**)(char *, uint64_t, uint64_t))(v73 + 32))(v72, v19, v20);
    if (qword_100E62280 != -1) {
      swift_once();
    }
    if (*(unsigned char *)(qword_100F51388 + 16) == 1)
    {
      if (qword_100E627C8 != -1) {
        swift_once();
      }
      uint64_t v45 = type metadata accessor for Logger();
      sub_1002102B0(v45, (uint64_t)qword_100F51E70);
      unint64_t v46 = (void *)Logger.logObject.getter();
      os_log_type_t v47 = static os_log_type_t.error.getter();
      if (sub_100162988(v47))
      {
        uint64_t v48 = (_WORD *)sub_100163DC4();
        sub_10017E9E4(v48);
        sub_10017D604((void *)&_mh_execute_header, v49, v50, "Drop state due to app crashed previously");
        sub_100180560();
      }

      uint64_t v51 = sub_1001A2578();
      v52(v51);
    }
    else
    {
      uint64_t v53 = v71;
      Date.init()();
      char v54 = static Date.> infix(_:_:)();
      uint64_t v55 = *(void (**)(char *, uint64_t))(v44 + 8);
      v55(v53, v20);
      if ((v54 & 1) == 0)
      {
        if (qword_100E627C8 != -1) {
          swift_once();
        }
        uint64_t v64 = type metadata accessor for Logger();
        sub_1002102B0(v64, (uint64_t)qword_100F51E70);
        uint64_t v65 = (void *)Logger.logObject.getter();
        os_log_type_t v66 = static os_log_type_t.default.getter();
        if (sub_100162988(v66))
        {
          uint64_t v67 = (_WORD *)sub_100163DC4();
          sub_10017E9E4(v67);
          sub_10017D604((void *)&_mh_execute_header, v68, v69, "Keep fresh state");
          sub_100180560();
        }

        uint64_t v70 = sub_1001A2578();
        ((void (*)(uint64_t))v55)(v70);
        goto LABEL_33;
      }
      if (qword_100E627C8 != -1) {
        swift_once();
      }
      uint64_t v56 = type metadata accessor for Logger();
      sub_1002102B0(v56, (uint64_t)qword_100F51E70);
      uint64_t v57 = (void *)Logger.logObject.getter();
      os_log_type_t v58 = static os_log_type_t.default.getter();
      if (sub_100162988(v58))
      {
        uint64_t v59 = (_WORD *)sub_100163DC4();
        sub_10017E9E4(v59);
        sub_10017D604((void *)&_mh_execute_header, v60, v61, "Drop expired state");
        sub_100180560();
      }

      uint64_t v62 = sub_1001A2578();
      ((void (*)(uint64_t))v55)(v62);
    }
    sub_10085F34C(v33);
    return 0;
  }
  sub_1000F3400(v19, (uint64_t *)&unk_100E73CA0);
  if (qword_100E627C8 != -1) {
    swift_once();
  }
  uint64_t v38 = type metadata accessor for Logger();
  sub_1002102B0(v38, (uint64_t)qword_100F51E70);
  uint64_t v39 = (void *)Logger.logObject.getter();
  os_log_type_t v40 = static os_log_type_t.error.getter();
  if (sub_100162988(v40))
  {
    id v41 = (_WORD *)sub_100163DC4();
    sub_10017E9E4(v41);
    sub_10017D604((void *)&_mh_execute_header, v42, v43, "missing expirationDate in DiscardStateProcessor");
    sub_100180560();
  }

LABEL_33:
  sub_10085F34C(v33);
  return 1;
}

uint64_t sub_10085F280(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E981C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10085F2E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MainStateProcessingContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10085F34C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MainStateProcessingContext();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for DiscardStateProcessor()
{
  return &type metadata for DiscardStateProcessor;
}

unint64_t sub_10085F3BC()
{
  unint64_t result = qword_100E9B898;
  if (!qword_100E9B898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B898);
  }
  return result;
}

unint64_t sub_10085F40C()
{
  unint64_t result = qword_100E9B8A0;
  if (!qword_100E9B8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B8A0);
  }
  return result;
}

uint64_t sub_10085F458()
{
  return sub_10085F4C0(&qword_100E9B8A8);
}

uint64_t sub_10085F48C()
{
  return sub_10085F4C0(&qword_100E9B8B0);
}

uint64_t sub_10085F4C0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MainStateProcessingContext();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10085F504@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C251B0;
  *(void *)(inited + 32) = 0x6C65646F6DLL;
  *(void *)(inited + 40) = 0xE500000000000000;
  uint64_t v4 = a1[4];
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[2];
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  uint64_t v7 = a1[7];
  uint64_t v8 = a1[8];
  uint64_t v9 = a1[10];
  uint64_t v15 = a1[9];
  uint64_t v10 = a1[11];
  uint64_t v11 = a1[12];
  uint64_t v12 = a1[13];
  *(void *)(inited + 72) = &type metadata for ReportWeatherViewModel;
  uint64_t v13 = (void *)swift_allocObject();
  *(void *)(inited + 48) = v13;
  void v13[2] = v17;
  v13[3] = v16;
  v13[4] = v4;
  v13[5] = v5;
  v13[6] = v6;
  v13[7] = v7;
  v13[8] = v8;
  v13[9] = v15;
  v13[10] = v9;
  v13[11] = v10;
  v13[12] = v11;
  v13[13] = v12;
  sub_100274EDC(v17);
  Dictionary.init(dictionaryLiteral:)();
  a2[3] = sub_10017DF08(&qword_100E9B900);
  a2[4] = sub_10085F77C();
  sub_100170694(a2);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_10085F68C@<X0>(uint64_t *a1@<X8>)
{
  return sub_10085F504(*v1, a1);
}

uint64_t sub_10085F694()
{
  sub_10085F7D0();

  return ShortDescribable.description.getter();
}

unint64_t sub_10085F6D4()
{
  unint64_t result = qword_100E9B8F8;
  if (!qword_100E9B8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B8F8);
  }
  return result;
}

uint64_t sub_10085F720()
{
  sub_100274E38(*(void *)(v0 + 16));

  return swift_deallocObject();
}

unint64_t sub_10085F77C()
{
  unint64_t result = qword_100E9B908;
  if (!qword_100E9B908)
  {
    sub_10018C6DC(&qword_100E9B900);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B908);
  }
  return result;
}

unint64_t sub_10085F7D0()
{
  unint64_t result = qword_100E9B910;
  if (!qword_100E9B910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B910);
  }
  return result;
}

uint64_t *sub_10085F81C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    uint64_t v6 = type metadata accessor for Date();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10085F9A0(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 2)
  {
    uint64_t v3 = type metadata accessor for Date();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

uint64_t sub_10085FA1C(uint64_t a1, uint64_t a2)
{
  swift_getEnumCaseMultiPayload();
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10085FAAC(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_10043ECD0(a1);
    swift_getEnumCaseMultiPayload();
    uint64_t v4 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10085FB4C(uint64_t a1, uint64_t a2)
{
  swift_getEnumCaseMultiPayload();
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10085FBDC(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_10043ECD0(a1);
    swift_getEnumCaseMultiPayload();
    uint64_t v4 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10085FC7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = type metadata accessor for MoonDetailSelectedDate();
  __chkstk_darwin(v4 - 8);
  sub_10011BFD8();
  sub_100792DE0(v1, v2);
  type metadata accessor for Date();
  sub_100162E4C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(a1, v2);
}

uint64_t sub_10085FD1C(uint64_t a1, uint64_t a2)
{
  uint64_t v38 = a2;
  uint64_t v37 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_100162EF8();
  v36[1] = v6;
  uint64_t v8 = __chkstk_darwin(v7);
  __chkstk_darwin(v8);
  type metadata accessor for MoonDetailSelectedDate();
  sub_100162E4C();
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)v36 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v36 - v16;
  uint64_t v18 = sub_10017DF08(&qword_100E9B9C8);
  __chkstk_darwin(v18 - 8);
  sub_1001626E0();
  uint64_t v21 = v20 - v19;
  uint64_t v23 = v20 - v19 + *(int *)(v22 + 56);
  sub_100792DE0(a1, v20 - v19);
  sub_100792DE0(v38, v23);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_100792DE0(v21, (uint64_t)v15);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1001627D4();
        v25();
        char v26 = static Date.== infix(_:_:)();
        uint64_t v27 = *(void (**)(void))(v4 + 8);
        sub_100183838();
        v27();
        sub_100183838();
        v27();
LABEL_12:
        sub_10043ECD0(v21);
        return v26 & 1;
      }
    }
    else
    {
      sub_100792DE0(v21, (uint64_t)v12);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v28 = v37;
        sub_1001627D4();
        v29();
        char v26 = static Date.== infix(_:_:)();
        uint64_t v30 = *(void (**)(void))(v4 + 8);
        sub_100183838();
        v30();
        ((void (*)(char *, uint64_t))v30)(v12, v28);
        goto LABEL_12;
      }
    }
  }
  else
  {
    sub_100792DE0(v21, (uint64_t)v17);
    if (!swift_getEnumCaseMultiPayload())
    {
      uint64_t v32 = v37;
      sub_1001627D4();
      v33();
      char v26 = static Date.== infix(_:_:)();
      uint64_t v34 = *(void (**)(void))(v4 + 8);
      sub_100183838();
      v34();
      ((void (*)(char *, uint64_t))v34)(v17, v32);
      goto LABEL_12;
    }
  }
  sub_100183838();
  v31();
  sub_100861254(v21);
  char v26 = 0;
  return v26 & 1;
}

uint64_t sub_100860084()
{
  uint64_t v2 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_10011BFD8();
  type metadata accessor for MoonDetailSelectedDate();
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_1001626E0();
  sub_100792DE0(v0, v8 - v7);
  Swift::UInt EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_1001627D4();
  v10();
  Hasher._combine(_:)(EnumCaseMultiPayload);
  sub_1008613E4((unint64_t *)&qword_100E63978, (void (*)(uint64_t))&type metadata accessor for Date);
  dispatch thunk of Hashable.hash(into:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
}

uint64_t sub_1008601E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7265626275726373 && a2 == 0xE800000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6E6F74747562 && a2 == 0xE600000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x68636E75616CLL && a2 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_100860328(char a1)
{
  if (!a1) {
    return 0x7265626275726373;
  }
  if (a1 == 1) {
    return 0x6E6F74747562;
  }
  return 0x68636E75616CLL;
}

uint64_t sub_100860378(void *a1)
{
  uint64_t v51 = sub_10017DF08(&qword_100E9BA10);
  sub_100179C0C();
  uint64_t v42 = v3;
  __chkstk_darwin(v4);
  sub_100152444(v5, v41);
  sub_10017DF08(&qword_100E9BA18);
  sub_100179C0C();
  uint64_t v48 = v7;
  uint64_t v49 = v6;
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v47 = v8;
  uint64_t v46 = sub_10017DF08(&qword_100E9BA20);
  sub_100179C0C();
  uint64_t v43 = v9;
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v52 = v11;
  uint64_t v12 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v54 = v13;
  __chkstk_darwin(v14);
  sub_100162EF8();
  uint64_t v45 = v15;
  __chkstk_darwin(v16);
  uint64_t v44 = (char *)&v41 - v17;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v41 - v19;
  type metadata accessor for MoonDetailSelectedDate();
  sub_100162E4C();
  __chkstk_darwin(v21);
  sub_1001626E0();
  uint64_t v24 = v23 - v22;
  uint64_t v25 = sub_10017DF08(&qword_100E9BA28);
  sub_100179C0C();
  uint64_t v53 = v26;
  __chkstk_darwin(v27);
  sub_10008B8C0();
  sub_1001B1E64(a1, a1[3]);
  sub_1008612B4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_100792DE0(v55, v24);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    uint64_t v29 = v12;
    uint64_t v30 = v54;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v20 = v44;
      sub_1001627D4();
      v31();
      char v57 = 1;
      sub_10086134C();
      uint64_t v32 = v47;
      sub_1001639FC();
      sub_1008613E4(&qword_100E63968, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v33 = v49;
      sub_100185CE0();
      uint64_t v34 = v48;
    }
    else
    {
      uint64_t v20 = v45;
      sub_1001627D4();
      v38();
      char v58 = 2;
      sub_100861300();
      uint64_t v32 = v50;
      sub_1001639FC();
      sub_1008613E4(&qword_100E63968, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v33 = v51;
      sub_100185CE0();
      uint64_t v34 = v42;
    }
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
  }
  else
  {
    uint64_t v35 = v54;
    sub_1001627D4();
    v36();
    char v56 = 0;
    sub_100861398();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    sub_1008613E4(&qword_100E63968, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v37 = v46;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v29 = v12;
    uint64_t v30 = v35;
    uint64_t v24 = v25;
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v52, v37);
  }
  uint64_t v39 = v53;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v20, v29);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8))(v1, v24);
}

Swift::Int sub_100860850()
{
  return Hasher._finalize()();
}

uint64_t sub_100860890@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v75 = a2;
  uint64_t v74 = sub_10017DF08(&qword_100E9B9D0);
  sub_100179C0C();
  uint64_t v71 = v4;
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v79 = v6;
  uint64_t v73 = sub_10017DF08(&qword_100E9B9D8);
  sub_100179C0C();
  uint64_t v70 = v7;
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v76 = v9;
  uint64_t v72 = sub_10017DF08(&qword_100E9B9E0);
  sub_100179C0C();
  uint64_t v69 = v10;
  __chkstk_darwin(v11);
  sub_100152444(v12, v63);
  sub_10017DF08(&qword_100E9B9E8);
  sub_100179C0C();
  uint64_t v77 = v14;
  uint64_t v78 = v13;
  __chkstk_darwin(v13);
  sub_10008B8C0();
  uint64_t v15 = type metadata accessor for MoonDetailSelectedDate();
  sub_100162E4C();
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v63 - v20;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v63 - v23;
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v63 - v26;
  uint64_t v28 = a1[3];
  uint64_t v80 = a1;
  sub_1001B1E64(a1, v28);
  sub_1008612B4();
  uint64_t v29 = v81;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v29)
  {
    uint64_t v64 = v21;
    uint64_t v65 = v27;
    os_log_type_t v66 = v24;
    uint64_t v67 = v18;
    uint64_t v31 = v78;
    uint64_t v68 = v15;
    uint64_t v81 = v2;
    uint64_t v32 = KeyedDecodingContainer.allKeys.getter();
    uint64_t v33 = *(void *)(v32 + 16);
    if (v33)
    {
      uint64_t v34 = v31;
      int v35 = *(unsigned __int8 *)(v32 + 32);
      sub_100723214(1, v33, v32, v32 + 32, 0, (2 * v33) | 1);
      uint64_t v37 = v36;
      unint64_t v39 = v38;
      swift_bridgeObjectRelease();
      if (v37 == v39 >> 1)
      {
        if (v35)
        {
          if (v35 == 1)
          {
            char v83 = 1;
            sub_10086134C();
            sub_100180298();
            type metadata accessor for Date();
            sub_1008613E4(&qword_100E63948, (void (*)(uint64_t))&type metadata accessor for Date);
            uint64_t v40 = (uint64_t)v64;
            KeyedDecodingContainer.decode<A>(_:forKey:)();
            uint64_t v30 = (uint64_t)v80;
            uint64_t v48 = sub_100181864();
            v49(v48);
            swift_unknownObjectRelease();
            uint64_t v50 = sub_100166C7C();
            v51(v50);
            swift_storeEnumTagMultiPayload();
            uint64_t v52 = v40;
LABEL_15:
            uint64_t v62 = (uint64_t)v65;
            sub_10041309C(v52, (uint64_t)v65);
            sub_10041309C(v62, v75);
            return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v30);
          }
          char v84 = 2;
          sub_100861300();
          sub_100180298();
          type metadata accessor for Date();
          sub_1008613E4(&qword_100E63948, (void (*)(uint64_t))&type metadata accessor for Date);
          sub_1001911C4();
          uint64_t v30 = (uint64_t)v80;
          uint64_t v58 = sub_10017D624();
          v59(v58);
          swift_unknownObjectRelease();
          uint64_t v60 = sub_100162B40();
          v61(v60);
          uint64_t v57 = (uint64_t)v67;
        }
        else
        {
          char v82 = 0;
          sub_100861398();
          sub_100180298();
          type metadata accessor for Date();
          sub_1008613E4(&qword_100E63948, (void (*)(uint64_t))&type metadata accessor for Date);
          sub_1001911C4();
          uint64_t v30 = (uint64_t)v80;
          uint64_t v53 = sub_10017D624();
          v54(v53);
          swift_unknownObjectRelease();
          uint64_t v55 = sub_10019F25C();
          v56(v55);
          uint64_t v57 = (uint64_t)v66;
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v52 = v57;
        goto LABEL_15;
      }
      uint64_t v30 = (uint64_t)v80;
      uint64_t v41 = v77;
      uint64_t v31 = v34;
    }
    else
    {
      uint64_t v30 = (uint64_t)v80;
      uint64_t v41 = v77;
    }
    uint64_t v42 = v68;
    uint64_t v43 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v45 = v44;
    sub_10017DF08(&qword_100E67280);
    *uint64_t v45 = v42;
    uint64_t v46 = v81;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v43 - 8) + 104))(v45, enum case for DecodingError.typeMismatch(_:), v43);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v46, v31);
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v30);
  }
  uint64_t v30 = (uint64_t)v80;
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v30);
}

uint64_t sub_100860F54(uint64_t a1)
{
  unint64_t v2 = sub_10086134C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100860F90(uint64_t a1)
{
  unint64_t v2 = sub_10086134C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100860FCC()
{
  return sub_100860328(*v0);
}

uint64_t sub_100860FD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1008601E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100860FFC(uint64_t a1)
{
  unint64_t v2 = sub_1008612B4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100861038(uint64_t a1)
{
  unint64_t v2 = sub_1008612B4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100861074(uint64_t a1)
{
  unint64_t v2 = sub_100861300();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008610B0(uint64_t a1)
{
  unint64_t v2 = sub_100861300();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1008610EC(uint64_t a1)
{
  unint64_t v2 = sub_100861398();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100861128(uint64_t a1)
{
  unint64_t v2 = sub_100861398();

  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_100861170()
{
  return Hasher._finalize()();
}

uint64_t sub_1008611AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100860890(a1, a2);
}

uint64_t sub_1008611C4(void *a1)
{
  return sub_100860378(a1);
}

void sub_1008611DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1008BE148(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_1008611F4()
{
}

uint64_t sub_10086120C()
{
  return sub_1008613E4(&qword_100E9B9C0, (void (*)(uint64_t))type metadata accessor for MoonDetailSelectedDate);
}

uint64_t sub_100861254(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E9B9C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1008612B4()
{
  unint64_t result = qword_100E9B9F0;
  if (!qword_100E9B9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B9F0);
  }
  return result;
}

unint64_t sub_100861300()
{
  unint64_t result = qword_100E9B9F8;
  if (!qword_100E9B9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B9F8);
  }
  return result;
}

unint64_t sub_10086134C()
{
  unint64_t result = qword_100E9BA00;
  if (!qword_100E9BA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BA00);
  }
  return result;
}

unint64_t sub_100861398()
{
  unint64_t result = qword_100E9BA08;
  if (!qword_100E9BA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BA08);
  }
  return result;
}

uint64_t sub_1008613E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MoonDetailSelectedDate.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1008614F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MoonDetailSelectedDate.CodingKeys()
{
  return &type metadata for MoonDetailSelectedDate.CodingKeys;
}

ValueMetadata *type metadata accessor for MoonDetailSelectedDate.ScrubberCodingKeys()
{
  return &type metadata for MoonDetailSelectedDate.ScrubberCodingKeys;
}

ValueMetadata *type metadata accessor for MoonDetailSelectedDate.ButtonCodingKeys()
{
  return &type metadata for MoonDetailSelectedDate.ButtonCodingKeys;
}

unsigned char *_s7Weather22MoonDetailSelectedDateO18ScrubberCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1008615F0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MoonDetailSelectedDate.LaunchCodingKeys()
{
  return &type metadata for MoonDetailSelectedDate.LaunchCodingKeys;
}

unint64_t sub_10086162C()
{
  unint64_t result = qword_100E9BA30;
  if (!qword_100E9BA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BA30);
  }
  return result;
}

unint64_t sub_10086167C()
{
  unint64_t result = qword_100E9BA38;
  if (!qword_100E9BA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BA38);
  }
  return result;
}

unint64_t sub_1008616CC()
{
  unint64_t result = qword_100E9BA40;
  if (!qword_100E9BA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BA40);
  }
  return result;
}

unint64_t sub_10086171C()
{
  unint64_t result = qword_100E9BA48;
  if (!qword_100E9BA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BA48);
  }
  return result;
}

unint64_t sub_10086176C()
{
  unint64_t result = qword_100E9BA50;
  if (!qword_100E9BA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BA50);
  }
  return result;
}

unint64_t sub_1008617BC()
{
  unint64_t result = qword_100E9BA58;
  if (!qword_100E9BA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BA58);
  }
  return result;
}

unint64_t sub_10086180C()
{
  unint64_t result = qword_100E9BA60;
  if (!qword_100E9BA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BA60);
  }
  return result;
}

unint64_t sub_10086185C()
{
  unint64_t result = qword_100E9BA68;
  if (!qword_100E9BA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BA68);
  }
  return result;
}

unint64_t sub_1008618AC()
{
  unint64_t result = qword_100E9BA70;
  if (!qword_100E9BA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BA70);
  }
  return result;
}

unint64_t sub_1008618FC()
{
  unint64_t result = qword_100E9BA78;
  if (!qword_100E9BA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BA78);
  }
  return result;
}

unint64_t sub_10086194C()
{
  unint64_t result = qword_100E9BA80;
  if (!qword_100E9BA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BA80);
  }
  return result;
}

unint64_t sub_10086199C()
{
  unint64_t result = qword_100E9BA88;
  if (!qword_100E9BA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BA88);
  }
  return result;
}

void *sub_1008619E8(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v6 = *(void *)(a3 - 8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      uint64_t v10 = a2 + 2;
      unint64_t v11 = a2[3];
      swift_bridgeObjectRetain();
      if (v11 >= 0xE)
      {
        a1[2] = *v10;
        a1[3] = v11;
        swift_bridgeObjectRetain();
      }
      else
      {
        *((_OWORD *)a1 + 1) = *(_OWORD *)v10;
      }
LABEL_58:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      uint64_t v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      uint64_t v13 = (int *)type metadata accessor for WeatherData(0);
      uint64_t v14 = v13[5];
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = type metadata accessor for Locale();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
      {
        uint64_t v18 = sub_10017DF08(&qword_100E63730);
        memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
      }
      uint64_t v20 = v13[6];
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      uint64_t v23 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
      uint64_t v24 = v13[7];
      uint64_t v25 = (char *)a1 + v24;
      uint64_t v26 = (char *)a2 + v24;
      uint64_t v27 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27))
      {
        uint64_t v28 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        uint64_t v29 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v25, v26, v29);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
      }
      uint64_t v30 = v13[8];
      uint64_t v31 = (void *)((char *)a1 + v30);
      uint64_t v32 = (void *)((char *)a2 + v30);
      uint64_t v33 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      int v34 = swift_getEnumCaseMultiPayload();
      if (v34 == 1)
      {
        uint64_t v36 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(v31, v32, v36);
      }
      else
      {
        if (v34)
        {
          memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
          goto LABEL_27;
        }
        uint64_t v35 = v32[1];
        *uint64_t v31 = *v32;
        v31[1] = v35;
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
LABEL_27:
      uint64_t v37 = v13[9];
      unint64_t v38 = (char *)a1 + v37;
      unint64_t v39 = (char *)a2 + v37;
      uint64_t v40 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
      {
        uint64_t v41 = sub_10017DF08(&qword_100E63740);
        memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        uint64_t v42 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v42))
        {
          uint64_t v43 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v38, v39, *(void *)(*(void *)(v43 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v38, v39, v42);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v42);
        }
        uint64_t v44 = *(int *)(v40 + 20);
        uint64_t v45 = &v38[v44];
        uint64_t v46 = &v39[v44];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v39[v44], 1, v42))
        {
          uint64_t v47 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v45, v46, v42);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v42);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
      }
      uint64_t v206 = sub_10017DF08(&qword_100E63748);
      uint64_t v48 = *(int *)(v206 + 48);
      uint64_t v208 = a1;
      uint64_t v49 = (char *)a1 + v48;
      uint64_t v207 = a2;
      uint64_t v50 = (char *)a2 + v48;
      uint64_t v51 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
      uint64_t v52 = type metadata accessor for PreprocessedWeatherData();
      *(void *)&v49[*(int *)(v52 + 20)] = *(void *)&v50[*(int *)(v52 + 20)];
      uint64_t v209 = v49;
      long long v210 = (int *)v52;
      uint64_t v53 = *(int *)(v52 + 24);
      uint64_t v54 = &v49[v53];
      long long v211 = v50;
      uint64_t v55 = &v50[v53];
      uint64_t v56 = *(void *)&v50[v53];
      uint64_t v57 = *((void *)v55 + 1);
      *(void *)uint64_t v54 = v56;
      *((void *)v54 + 1) = v57;
      uint64_t v58 = *((void *)v55 + 3);
      *((void *)v54 + 2) = *((void *)v55 + 2);
      *((void *)v54 + 3) = v58;
      uint64_t v59 = *((void *)v55 + 5);
      *((void *)v54 + 4) = *((void *)v55 + 4);
      *((void *)v54 + 5) = v59;
      uint64_t v60 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
      uint64_t v61 = *(int *)(v60 + 28);
      uint64_t v62 = &v54[v61];
      uint64_t v63 = &v55[v61];
      uint64_t v64 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, v64))
      {
        uint64_t v65 = sub_10017DF08(&qword_100E63750);
        memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        uint64_t v66 = *((void *)v63 + 1);
        *(void *)uint64_t v62 = *(void *)v63;
        *((void *)v62 + 1) = v66;
        uint64_t v67 = *(int *)(v64 + 20);
        uint64_t v68 = &v62[v67];
        uint64_t v69 = &v63[v67];
        uint64_t v70 = type metadata accessor for TemperatureScaleConfiguration();
        __int16 v204 = *(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16);
        swift_bridgeObjectRetain();
        v204(v68, v69, v70);
        uint64_t v71 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        *(void *)&v68[v71[5]] = *(void *)&v69[v71[5]];
        *(void *)&v68[v71[6]] = *(void *)&v69[v71[6]];
        *(void *)&v68[v71[7]] = *(void *)&v69[v71[7]];
        uint64_t v72 = v71[8];
        uint64_t v73 = &v68[v72];
        uint64_t v74 = &v69[v72];
        uint64_t v76 = *(void *)v74;
        uint64_t v75 = *((void *)v74 + 1);
        *(void *)uint64_t v73 = v76;
        *((void *)v73 + 1) = v75;
        v68[v71[9]] = v69[v71[9]];
        swift_bridgeObjectRetain();
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v62, 0, 1, v64);
      }
      uint64_t v77 = *(int *)(v60 + 32);
      uint64_t v78 = &v54[v77];
      uint64_t v79 = &v55[v77];
      uint64_t v80 = *((void *)v79 + 1);
      *(void *)uint64_t v78 = *(void *)v79;
      *((void *)v78 + 1) = v80;
      uint64_t v81 = v210[7];
      char v82 = &v209[v81];
      char v83 = &v211[v81];
      *(void *)&v209[v81] = *(void *)&v211[v81];
      uint64_t v84 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
      int v85 = &v82[v84];
      uint64_t v86 = &v83[v84];
      uint64_t v87 = type metadata accessor for WeatherDescription();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v86, 1, v87))
      {
        uint64_t v88 = sub_10017DF08(&qword_100E63758);
        memcpy(v85, v86, *(void *)(*(void *)(v88 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v85, 0, 1, v87);
      }
      uint64_t v89 = v210[8];
      uint64_t v90 = &v209[v89];
      uint64_t v91 = &v211[v89];
      uint64_t v92 = *(void *)&v211[v89 + 8];
      *(void *)uint64_t v90 = *(void *)&v211[v89];
      *((void *)v90 + 1) = v92;
      uint64_t v93 = *(void *)&v211[v89 + 24];
      *((void *)v90 + 2) = *(void *)&v211[v89 + 16];
      *((void *)v90 + 3) = v93;
      uint64_t v94 = *(void *)&v211[v89 + 40];
      *((void *)v90 + 4) = *(void *)&v211[v89 + 32];
      *((void *)v90 + 5) = v94;
      uint64_t v95 = *(void *)&v211[v89 + 56];
      *((void *)v90 + 6) = *(void *)&v211[v89 + 48];
      *((void *)v90 + 7) = v95;
      uint64_t v96 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
      uint64_t v97 = &v90[v96];
      uint64_t v98 = &v91[v96];
      uint64_t v99 = type metadata accessor for Date();
      uint64_t v100 = *(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __int16 v202 = v100;
      uint64_t v203 = v99;
      v100(v97, v98, v99);
      uint64_t v101 = type metadata accessor for WeatherConditionBackgroundTimeData();
      uint64_t v102 = *(int *)(v101 + 20);
      uint64_t v103 = &v97[v102];
      uint64_t v104 = &v98[v102];
      uint64_t v105 = type metadata accessor for Elevation();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v104, 1, v105))
      {
        uint64_t v106 = sub_10017DF08(&qword_100E63760);
        memcpy(v103, v104, *(void *)(*(void *)(v106 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 16))(v103, v104, v105);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v103, 0, 1, v105);
      }
      uint64_t v107 = *(int *)(v101 + 24);
      uint64_t v108 = &v97[v107];
      uint64_t v109 = &v98[v107];
      uint64_t v110 = type metadata accessor for BackgroundMoonData();
      uint64_t v205 = v101;
      uint64_t v200 = v110;
      uint64_t v201 = v105;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v109, 1, v110))
      {
        uint64_t v111 = sub_10017DF08(&qword_100E63768);
        memcpy(v108, v109, *(void *)(*(void *)(v111 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 16))(v108, v109, v110);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v108, 0, 1, v110);
      }
      uint64_t v112 = v210[9];
      uint64_t v113 = &v209[v112];
      uint64_t v114 = &v211[v112];
      uint64_t v115 = *((void *)v114 + 1);
      *(void *)uint64_t v113 = *(void *)v114;
      *((void *)v113 + 1) = v115;
      uint64_t v116 = *((void *)v114 + 3);
      *((void *)v113 + 2) = *((void *)v114 + 2);
      *((void *)v113 + 3) = v116;
      uint64_t v117 = *((void *)v114 + 5);
      *((void *)v113 + 4) = *((void *)v114 + 4);
      *((void *)v113 + 5) = v117;
      uint64_t v118 = *((void *)v114 + 7);
      *((void *)v113 + 6) = *((void *)v114 + 6);
      *((void *)v113 + 7) = v118;
      uint64_t v119 = *((void *)v114 + 9);
      *((void *)v113 + 8) = *((void *)v114 + 8);
      *((void *)v113 + 9) = v119;
      uint64_t v120 = *((void *)v114 + 11);
      *((void *)v113 + 10) = *((void *)v114 + 10);
      *((void *)v113 + 11) = v120;
      uint64_t v121 = *((void *)v114 + 13);
      *((void *)v113 + 12) = *((void *)v114 + 12);
      *((void *)v113 + 13) = v121;
      uint64_t v122 = v210[10];
      uint64_t v123 = &v209[v122];
      uint64_t v124 = &v211[v122];
      uint64_t v198 = *(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v198(v123, v124, v87);
      uint64_t v125 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
      char v126 = &v123[v125];
      uint64_t v127 = &v124[v125];
      uint64_t v128 = *((void *)v127 + 1);
      *(void *)char v126 = *(void *)v127;
      *((void *)v126 + 1) = v128;
      uint64_t v129 = v210[11];
      uint64_t v130 = &v209[v129];
      uint64_t v131 = &v211[v129];
      uint64_t v132 = *((void *)v131 + 1);
      *(void *)uint64_t v130 = *(void *)v131;
      *((void *)v130 + 1) = v132;
      uint64_t v133 = *((void *)v131 + 3);
      *((void *)v130 + 2) = *((void *)v131 + 2);
      *((void *)v130 + 3) = v133;
      uint64_t v134 = *((void *)v131 + 5);
      *((void *)v130 + 4) = *((void *)v131 + 4);
      *((void *)v130 + 5) = v134;
      uint64_t v135 = v210[12];
      char v136 = &v209[v135];
      long long v137 = &v211[v135];
      uint64_t v138 = type metadata accessor for PressureTrend();
      uint64_t v139 = *(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v139(v136, v137, v138);
      uint64_t v140 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
      uint64_t v141 = v140[5];
      uint64_t v142 = &v136[v141];
      uint64_t v143 = &v137[v141];
      uint64_t v144 = *((void *)v143 + 1);
      *(void *)uint64_t v142 = *(void *)v143;
      *((void *)v142 + 1) = v144;
      uint64_t v145 = v140[6];
      uint64_t v146 = &v136[v145];
      int v147 = &v137[v145];
      uint64_t v199 = *((void *)v147 + 1);
      *(void *)uint64_t v146 = *(void *)v147;
      *((void *)v146 + 1) = v199;
      uint64_t v148 = v140[7];
      uint64_t v149 = &v136[v148];
      uint64_t v150 = &v137[v148];
      uint64_t v197 = *((void *)v150 + 1);
      *(void *)uint64_t v149 = *(void *)v150;
      *((void *)v149 + 1) = v197;
      *(void *)&v136[v140[8]] = *(void *)&v137[v140[8]];
      uint64_t v151 = v140[9];
      size_t v152 = &v136[v151];
      uint64_t v153 = &v137[v151];
      uint64_t v196 = *((void *)v153 + 1);
      *(void *)size_t v152 = *(void *)v153;
      *((void *)v152 + 1) = v196;
      uint64_t v154 = v210[13];
      uint64_t v155 = &v209[v154];
      uint64_t v156 = &v211[v154];
      uint64_t v157 = *((void *)v156 + 1);
      *(void *)uint64_t v155 = *(void *)v156;
      *((void *)v155 + 1) = v157;
      uint64_t v158 = *((void *)v156 + 3);
      *((void *)v155 + 2) = *((void *)v156 + 2);
      *((void *)v155 + 3) = v158;
      uint64_t v159 = *((void *)v156 + 5);
      *((void *)v155 + 4) = *((void *)v156 + 4);
      *((void *)v155 + 5) = v159;
      uint64_t v160 = *((void *)v156 + 7);
      *((void *)v155 + 6) = *((void *)v156 + 6);
      *((void *)v155 + 7) = v160;
      uint64_t v161 = *((void *)v156 + 9);
      *((void *)v155 + 8) = *((void *)v156 + 8);
      *((void *)v155 + 9) = v161;
      uint64_t v162 = *((void *)v156 + 11);
      *((void *)v155 + 10) = *((void *)v156 + 10);
      *((void *)v155 + 11) = v162;
      uint64_t v163 = *((void *)v156 + 13);
      *((void *)v155 + 12) = *((void *)v156 + 12);
      *((void *)v155 + 13) = v163;
      uint64_t v164 = *((void *)v156 + 15);
      *((void *)v155 + 14) = *((void *)v156 + 14);
      *((void *)v155 + 15) = v164;
      uint64_t v165 = *((void *)v156 + 17);
      *((void *)v155 + 16) = *((void *)v156 + 16);
      *((void *)v155 + 17) = v165;
      uint64_t v166 = *((void *)v156 + 19);
      *((void *)v155 + 18) = *((void *)v156 + 18);
      *((void *)v155 + 19) = v166;
      uint64_t v167 = *((void *)v156 + 21);
      *((void *)v155 + 20) = *((void *)v156 + 20);
      *((void *)v155 + 21) = v167;
      uint64_t v168 = *((void *)v156 + 23);
      *((void *)v155 + 22) = *((void *)v156 + 22);
      *((void *)v155 + 23) = v168;
      uint64_t v169 = *((void *)v156 + 25);
      *((void *)v155 + 24) = *((void *)v156 + 24);
      *((void *)v155 + 25) = v169;
      *((_OWORD *)v155 + 13) = *((_OWORD *)v156 + 13);
      *((void *)v155 + 28) = *((void *)v156 + 28);
      uint64_t v170 = v210[14];
      int v171 = &v209[v170];
      uint64_t v172 = &v211[v170];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v202(v171, v172, v203);
      uint64_t v173 = *(int *)(v205 + 20);
      uint64_t v174 = &v171[v173];
      uint64_t v175 = &v172[v173];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v172[v173], 1, v201))
      {
        uint64_t v176 = sub_10017DF08(&qword_100E63760);
        memcpy(v174, v175, *(void *)(*(void *)(v176 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v201 - 8) + 16))(v174, v175, v201);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v174, 0, 1, v201);
      }
      uint64_t v177 = *(int *)(v205 + 24);
      uint64_t v178 = &v171[v177];
      uint64_t v179 = &v172[v177];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v172[v177], 1, v200))
      {
        uint64_t v180 = sub_10017DF08(&qword_100E63768);
        memcpy(v178, v179, *(void *)(*(void *)(v180 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 16))(v178, v179, v200);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v178, 0, 1, v200);
      }
      uint64_t v181 = v210[15];
      uint64_t v182 = &v209[v181];
      char v183 = &v211[v181];
      uint64_t v184 = *((void *)v183 + 1);
      *(void *)uint64_t v182 = *(void *)v183;
      *((void *)v182 + 1) = v184;
      uint64_t v185 = *((void *)v183 + 3);
      *((void *)v182 + 2) = *((void *)v183 + 2);
      *((void *)v182 + 3) = v185;
      uint64_t v186 = *((void *)v183 + 5);
      *((void *)v182 + 4) = *((void *)v183 + 4);
      *((void *)v182 + 5) = v186;
      uint64_t v187 = *((void *)v183 + 7);
      *((void *)v182 + 6) = *((void *)v183 + 6);
      *((void *)v182 + 7) = v187;
      uint64_t v188 = *((void *)v183 + 9);
      *((void *)v182 + 8) = *((void *)v183 + 8);
      *((void *)v182 + 9) = v188;
      uint64_t v189 = *((void *)v183 + 11);
      *((void *)v182 + 10) = *((void *)v183 + 10);
      *((void *)v182 + 11) = v189;
      uint64_t v190 = *((void *)v183 + 13);
      *((void *)v182 + 12) = *((void *)v183 + 12);
      *((void *)v182 + 13) = v190;
      uint64_t v191 = *(int *)(v206 + 64);
      uint64_t v192 = (void *)((char *)v208 + v191);
      uint64_t v193 = (void *)((char *)v207 + v191);
      type metadata accessor for NewsDataModel();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *uint64_t v192 = *v193;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v194 = type metadata accessor for News();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v194 - 8) + 16))(v192, v193, v194);
      }
      swift_storeEnumTagMultiPayload();
      a1 = v208;
      goto LABEL_58;
    case 0:
      type metadata accessor for NewsDataModel();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *a1 = *a2;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v19 = type metadata accessor for News();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_58;
  }
  memcpy(a1, a2, *(void *)(v6 + 64));
  return a1;
}

void *sub_100862A78(uint64_t a1, void *a2, uint64_t a3)
{
  int v3 = (void *)a1;
  if ((void *)a1 == a2) {
    return v3;
  }
  sub_100156908(a1, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      *int v3 = *a2;
      v3[1] = a2[1];
      unint64_t v7 = a2[3];
      swift_bridgeObjectRetain();
      if (v7 >= 0xE)
      {
        v3[2] = a2[2];
        v3[3] = a2[3];
        swift_bridgeObjectRetain();
      }
      else
      {
        *((_OWORD *)v3 + 1) = *((_OWORD *)a2 + 1);
      }
LABEL_57:
      swift_storeEnumTagMultiPayload();
      return v3;
    case 1:
      *int v3 = *a2;
      v3[1] = a2[1];
      uint64_t v8 = (int *)type metadata accessor for WeatherData(0);
      uint64_t v9 = v8[5];
      uint64_t v10 = (char *)v3 + v9;
      unint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for Locale();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
      {
        uint64_t v13 = sub_10017DF08(&qword_100E63730);
        memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
      }
      uint64_t v15 = v8[6];
      uint64_t v16 = (char *)v3 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      uint64_t v19 = v8[7];
      uint64_t v20 = (char *)v3 + v19;
      uint64_t v21 = (char *)a2 + v19;
      uint64_t v22 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
      {
        uint64_t v23 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        uint64_t v24 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v20, v21, v24);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
      }
      uint64_t v25 = v8[8];
      uint64_t v26 = (void *)((char *)v3 + v25);
      uint64_t v27 = (void *)((char *)a2 + v25);
      uint64_t v28 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      int v29 = swift_getEnumCaseMultiPayload();
      if (v29 == 1)
      {
        uint64_t v30 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v26, v27, v30);
      }
      else
      {
        if (v29)
        {
          memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
          goto LABEL_26;
        }
        *uint64_t v26 = *v27;
        v26[1] = v27[1];
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
LABEL_26:
      uint64_t v31 = v8[9];
      uint64_t v32 = (char *)v3 + v31;
      uint64_t v33 = (char *)a2 + v31;
      uint64_t v34 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
      {
        uint64_t v35 = sub_10017DF08(&qword_100E63740);
        memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        uint64_t v36 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v36))
        {
          uint64_t v37 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v32, v33, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v32, v33, v36);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v36);
        }
        uint64_t v38 = *(int *)(v34 + 20);
        unint64_t v39 = &v32[v38];
        uint64_t v40 = &v33[v38];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v33[v38], 1, v36))
        {
          uint64_t v41 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v39, v40, v36);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v36);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
      }
      uint64_t v151 = sub_10017DF08(&qword_100E63748);
      uint64_t v42 = *(int *)(v151 + 48);
      uint64_t v153 = v3;
      uint64_t v43 = (char *)v3 + v42;
      size_t v152 = a2;
      uint64_t v44 = (char *)a2 + v42;
      uint64_t v45 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
      uint64_t v46 = type metadata accessor for PreprocessedWeatherData();
      *(void *)&v43[*(int *)(v46 + 20)] = *(void *)&v44[*(int *)(v46 + 20)];
      uint64_t v154 = v43;
      uint64_t v155 = (int *)v46;
      uint64_t v47 = *(int *)(v46 + 24);
      uint64_t v48 = &v43[v47];
      uint64_t v156 = v44;
      uint64_t v49 = &v44[v47];
      *(void *)uint64_t v48 = *(void *)&v44[v47];
      *((void *)v48 + 1) = *(void *)&v44[v47 + 8];
      *((void *)v48 + 2) = *(void *)&v44[v47 + 16];
      *((void *)v48 + 3) = *(void *)&v44[v47 + 24];
      *((void *)v48 + 4) = *(void *)&v44[v47 + 32];
      *((void *)v48 + 5) = *(void *)&v44[v47 + 40];
      uint64_t v50 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
      uint64_t v51 = *(int *)(v50 + 28);
      uint64_t v52 = &v48[v51];
      uint64_t v53 = &v49[v51];
      uint64_t v54 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v54))
      {
        uint64_t v55 = sub_10017DF08(&qword_100E63750);
        memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        *(void *)uint64_t v52 = *(void *)v53;
        *((void *)v52 + 1) = *((void *)v53 + 1);
        uint64_t v56 = *(int *)(v54 + 20);
        uint64_t v57 = &v52[v56];
        uint64_t v58 = &v53[v56];
        uint64_t v59 = type metadata accessor for TemperatureScaleConfiguration();
        uint64_t v150 = *(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16);
        swift_bridgeObjectRetain();
        v150(v57, v58, v59);
        uint64_t v60 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        *(void *)&v57[v60[5]] = *(void *)&v58[v60[5]];
        *(void *)&v57[v60[6]] = *(void *)&v58[v60[6]];
        *(void *)&v57[v60[7]] = *(void *)&v58[v60[7]];
        uint64_t v61 = v60[8];
        uint64_t v62 = &v57[v61];
        uint64_t v63 = &v58[v61];
        *(void *)uint64_t v62 = *(void *)v63;
        *((void *)v62 + 1) = *((void *)v63 + 1);
        v57[v60[9]] = v58[v60[9]];
        swift_bridgeObjectRetain();
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v54);
      }
      uint64_t v64 = *(int *)(v50 + 32);
      uint64_t v65 = &v48[v64];
      uint64_t v66 = &v49[v64];
      *(void *)uint64_t v65 = *(void *)v66;
      *((void *)v65 + 1) = *((void *)v66 + 1);
      uint64_t v67 = v155[7];
      uint64_t v68 = &v154[v67];
      uint64_t v69 = &v156[v67];
      *(void *)&v154[v67] = *(void *)&v156[v67];
      uint64_t v70 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
      uint64_t v71 = &v68[v70];
      uint64_t v72 = &v69[v70];
      uint64_t v73 = type metadata accessor for WeatherDescription();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v72, 1, v73))
      {
        uint64_t v74 = sub_10017DF08(&qword_100E63758);
        memcpy(v71, v72, *(void *)(*(void *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v71, 0, 1, v73);
      }
      uint64_t v75 = v155[8];
      uint64_t v76 = &v154[v75];
      uint64_t v77 = &v156[v75];
      *(void *)uint64_t v76 = *(void *)&v156[v75];
      *((void *)v76 + 1) = *(void *)&v156[v75 + 8];
      *((void *)v76 + 2) = *(void *)&v156[v75 + 16];
      *((void *)v76 + 3) = *(void *)&v156[v75 + 24];
      *((void *)v76 + 4) = *(void *)&v156[v75 + 32];
      *((void *)v76 + 5) = *(void *)&v156[v75 + 40];
      *((void *)v76 + 6) = *(void *)&v156[v75 + 48];
      *((void *)v76 + 7) = *(void *)&v156[v75 + 56];
      uint64_t v78 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
      uint64_t v79 = &v76[v78];
      uint64_t v80 = &v77[v78];
      uint64_t v81 = type metadata accessor for Date();
      char v82 = *(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v148 = v82;
      uint64_t v149 = v81;
      v82(v79, v80, v81);
      uint64_t v83 = type metadata accessor for WeatherConditionBackgroundTimeData();
      uint64_t v84 = *(int *)(v83 + 20);
      int v85 = &v79[v84];
      uint64_t v86 = &v80[v84];
      uint64_t v87 = type metadata accessor for Elevation();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v86, 1, v87))
      {
        uint64_t v88 = sub_10017DF08(&qword_100E63760);
        memcpy(v85, v86, *(void *)(*(void *)(v88 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v85, 0, 1, v87);
      }
      uint64_t v89 = *(int *)(v83 + 24);
      uint64_t v90 = &v79[v89];
      uint64_t v91 = &v80[v89];
      uint64_t v92 = type metadata accessor for BackgroundMoonData();
      uint64_t v147 = v87;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v91, 1, v92))
      {
        uint64_t v93 = sub_10017DF08(&qword_100E63768);
        memcpy(v90, v91, *(void *)(*(void *)(v93 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 16))(v90, v91, v92);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v90, 0, 1, v92);
      }
      uint64_t v94 = v155[9];
      uint64_t v95 = &v154[v94];
      uint64_t v96 = &v156[v94];
      *(void *)uint64_t v95 = *(void *)v96;
      *((void *)v95 + 1) = *((void *)v96 + 1);
      *((void *)v95 + 2) = *((void *)v96 + 2);
      *((void *)v95 + 3) = *((void *)v96 + 3);
      *((void *)v95 + 4) = *((void *)v96 + 4);
      *((void *)v95 + 5) = *((void *)v96 + 5);
      *((void *)v95 + 6) = *((void *)v96 + 6);
      *((void *)v95 + 7) = *((void *)v96 + 7);
      *((void *)v95 + 8) = *((void *)v96 + 8);
      *((void *)v95 + 9) = *((void *)v96 + 9);
      *((void *)v95 + 10) = *((void *)v96 + 10);
      *((void *)v95 + 11) = *((void *)v96 + 11);
      *((void *)v95 + 12) = *((void *)v96 + 12);
      *((void *)v95 + 13) = *((void *)v96 + 13);
      uint64_t v97 = v155[10];
      uint64_t v98 = &v154[v97];
      uint64_t v99 = &v156[v97];
      uint64_t v146 = *(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v146(v98, v99, v73);
      uint64_t v100 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
      uint64_t v101 = &v98[v100];
      uint64_t v102 = &v99[v100];
      *(void *)uint64_t v101 = *(void *)v102;
      *((void *)v101 + 1) = *((void *)v102 + 1);
      uint64_t v103 = v155[11];
      uint64_t v104 = &v154[v103];
      uint64_t v105 = &v156[v103];
      *(void *)uint64_t v104 = *(void *)v105;
      *((void *)v104 + 1) = *((void *)v105 + 1);
      *((void *)v104 + 2) = *((void *)v105 + 2);
      *((void *)v104 + 3) = *((void *)v105 + 3);
      *((void *)v104 + 4) = *((void *)v105 + 4);
      *((void *)v104 + 5) = *((void *)v105 + 5);
      uint64_t v106 = v155[12];
      uint64_t v107 = &v154[v106];
      uint64_t v108 = &v156[v106];
      uint64_t v109 = type metadata accessor for PressureTrend();
      uint64_t v110 = *(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v110(v107, v108, v109);
      uint64_t v111 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
      uint64_t v112 = v111[5];
      uint64_t v113 = &v107[v112];
      uint64_t v114 = &v108[v112];
      *(void *)uint64_t v113 = *(void *)v114;
      *((void *)v113 + 1) = *((void *)v114 + 1);
      uint64_t v115 = v111[6];
      uint64_t v116 = &v107[v115];
      uint64_t v117 = &v108[v115];
      *(void *)uint64_t v116 = *(void *)v117;
      *((void *)v116 + 1) = *((void *)v117 + 1);
      uint64_t v118 = v111[7];
      uint64_t v119 = &v107[v118];
      uint64_t v120 = &v108[v118];
      *(void *)uint64_t v119 = *(void *)v120;
      *((void *)v119 + 1) = *((void *)v120 + 1);
      *(void *)&v107[v111[8]] = *(void *)&v108[v111[8]];
      uint64_t v121 = v111[9];
      uint64_t v122 = &v107[v121];
      uint64_t v123 = &v108[v121];
      *(void *)uint64_t v122 = *(void *)v123;
      *((void *)v122 + 1) = *((void *)v123 + 1);
      uint64_t v124 = v155[13];
      uint64_t v125 = &v154[v124];
      char v126 = &v156[v124];
      *(void *)uint64_t v125 = *(void *)v126;
      *((void *)v125 + 1) = *((void *)v126 + 1);
      *((void *)v125 + 2) = *((void *)v126 + 2);
      *((void *)v125 + 3) = *((void *)v126 + 3);
      *((void *)v125 + 4) = *((void *)v126 + 4);
      *((void *)v125 + 5) = *((void *)v126 + 5);
      *((void *)v125 + 6) = *((void *)v126 + 6);
      *((void *)v125 + 7) = *((void *)v126 + 7);
      *((void *)v125 + 8) = *((void *)v126 + 8);
      *((void *)v125 + 9) = *((void *)v126 + 9);
      *((void *)v125 + 10) = *((void *)v126 + 10);
      *((void *)v125 + 11) = *((void *)v126 + 11);
      *((void *)v125 + 12) = *((void *)v126 + 12);
      *((void *)v125 + 13) = *((void *)v126 + 13);
      *((void *)v125 + 14) = *((void *)v126 + 14);
      *((void *)v125 + 15) = *((void *)v126 + 15);
      *((void *)v125 + 16) = *((void *)v126 + 16);
      *((void *)v125 + 17) = *((void *)v126 + 17);
      *((void *)v125 + 18) = *((void *)v126 + 18);
      *((void *)v125 + 19) = *((void *)v126 + 19);
      *((void *)v125 + 20) = *((void *)v126 + 20);
      *((void *)v125 + 21) = *((void *)v126 + 21);
      *((void *)v125 + 22) = *((void *)v126 + 22);
      *((void *)v125 + 23) = *((void *)v126 + 23);
      *((void *)v125 + 24) = *((void *)v126 + 24);
      *((void *)v125 + 25) = *((void *)v126 + 25);
      *((void *)v125 + 26) = *((void *)v126 + 26);
      *((void *)v125 + 27) = *((void *)v126 + 27);
      *((void *)v125 + 28) = *((void *)v126 + 28);
      uint64_t v127 = v155[14];
      uint64_t v128 = &v154[v127];
      uint64_t v129 = &v156[v127];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v148(v128, v129, v149);
      uint64_t v130 = *(int *)(v83 + 20);
      uint64_t v131 = &v128[v130];
      uint64_t v132 = &v129[v130];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v129[v130], 1, v147))
      {
        uint64_t v133 = sub_10017DF08(&qword_100E63760);
        memcpy(v131, v132, *(void *)(*(void *)(v133 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 16))(v131, v132, v147);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v131, 0, 1, v147);
      }
      uint64_t v134 = *(int *)(v83 + 24);
      uint64_t v135 = &v128[v134];
      char v136 = &v129[v134];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v129[v134], 1, v92))
      {
        uint64_t v137 = sub_10017DF08(&qword_100E63768);
        memcpy(v135, v136, *(void *)(*(void *)(v137 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 16))(v135, v136, v92);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v135, 0, 1, v92);
      }
      uint64_t v138 = v155[15];
      uint64_t v139 = &v154[v138];
      uint64_t v140 = &v156[v138];
      *(void *)uint64_t v139 = *(void *)v140;
      *((void *)v139 + 1) = *((void *)v140 + 1);
      *((void *)v139 + 2) = *((void *)v140 + 2);
      *((void *)v139 + 3) = *((void *)v140 + 3);
      *((void *)v139 + 4) = *((void *)v140 + 4);
      *((void *)v139 + 5) = *((void *)v140 + 5);
      *((void *)v139 + 6) = *((void *)v140 + 6);
      *((void *)v139 + 7) = *((void *)v140 + 7);
      *((void *)v139 + 8) = *((void *)v140 + 8);
      *((void *)v139 + 9) = *((void *)v140 + 9);
      *((void *)v139 + 10) = *((void *)v140 + 10);
      *((void *)v139 + 11) = *((void *)v140 + 11);
      *((void *)v139 + 12) = *((void *)v140 + 12);
      *((void *)v139 + 13) = *((void *)v140 + 13);
      uint64_t v141 = *(int *)(v151 + 64);
      uint64_t v142 = (void *)((char *)v153 + v141);
      uint64_t v143 = (void *)((char *)v152 + v141);
      type metadata accessor for NewsDataModel();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *uint64_t v142 = *v143;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v144 = type metadata accessor for News();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v144 - 8) + 16))(v142, v143, v144);
      }
      swift_storeEnumTagMultiPayload();
      int v3 = v153;
      goto LABEL_57;
    case 0:
      type metadata accessor for NewsDataModel();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *int v3 = *a2;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v14 = type metadata accessor for News();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v3, a2, v14);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
  }
  memcpy(v3, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return v3;
}

_OWORD *sub_100863C74(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    uint64_t v8 = (int *)type metadata accessor for WeatherData(0);
    uint64_t v9 = v8[5];
    uint64_t v10 = (char *)a1 + v9;
    unint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for Locale();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
    {
      uint64_t v13 = sub_10017DF08(&qword_100E63730);
      memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
    }
    uint64_t v15 = v8[6];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = type metadata accessor for WeatherDataModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    uint64_t v19 = v8[7];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = sub_10017DF08(&qword_100E63738);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
    {
      uint64_t v23 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      uint64_t v24 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v20, v21, v24);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
    }
    uint64_t v25 = v8[8];
    uint64_t v26 = (char *)a1 + v25;
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v29 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v26, v27, v29);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
    uint64_t v30 = v8[9];
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    uint64_t v33 = type metadata accessor for WeatherDataOverrides();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v33))
    {
      uint64_t v34 = sub_10017DF08(&qword_100E63740);
      memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      uint64_t v35 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v35))
      {
        uint64_t v36 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v31, v32, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v31, v32, v35);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v35);
      }
      uint64_t v37 = *(int *)(v33 + 20);
      uint64_t v38 = &v31[v37];
      unint64_t v39 = &v32[v37];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v32[v37], 1, v35))
      {
        uint64_t v40 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v38, v39, v35);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v35);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v33);
    }
    uint64_t v121 = sub_10017DF08(&qword_100E63748);
    uint64_t v122 = a2;
    uint64_t v41 = *(int *)(v121 + 48);
    uint64_t v123 = a1;
    uint64_t v42 = (char *)a1 + v41;
    uint64_t v43 = (char *)a2 + v41;
    uint64_t v44 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
    uint64_t v45 = (int *)type metadata accessor for PreprocessedWeatherData();
    *(void *)&v42[v45[5]] = *(void *)&v43[v45[5]];
    uint64_t v46 = v45[6];
    uint64_t v47 = &v42[v46];
    uint64_t v48 = &v43[v46];
    long long v49 = *(_OWORD *)&v43[v46 + 16];
    *(_OWORD *)uint64_t v47 = *(_OWORD *)&v43[v46];
    *((_OWORD *)v47 + 1) = v49;
    *((_OWORD *)v47 + 2) = *(_OWORD *)&v43[v46 + 32];
    uint64_t v50 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
    uint64_t v51 = *(int *)(v50 + 28);
    uint64_t v52 = &v47[v51];
    uint64_t v53 = &v48[v51];
    uint64_t v54 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v54))
    {
      uint64_t v55 = sub_10017DF08(&qword_100E63750);
      memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      *(_OWORD *)uint64_t v52 = *(_OWORD *)v53;
      uint64_t v56 = *(int *)(v54 + 20);
      uint64_t v57 = &v52[v56];
      uint64_t v58 = &v53[v56];
      uint64_t v59 = type metadata accessor for TemperatureScaleConfiguration();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
      uint64_t v60 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      *(void *)&v57[v60[5]] = *(void *)&v58[v60[5]];
      *(void *)&v57[v60[6]] = *(void *)&v58[v60[6]];
      *(void *)&v57[v60[7]] = *(void *)&v58[v60[7]];
      *(_OWORD *)&v57[v60[8]] = *(_OWORD *)&v58[v60[8]];
      v57[v60[9]] = v58[v60[9]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v54);
    }
    *(_OWORD *)&v47[*(int *)(v50 + 32)] = *(_OWORD *)&v48[*(int *)(v50 + 32)];
    uint64_t v61 = v45[7];
    uint64_t v62 = &v42[v61];
    uint64_t v63 = &v43[v61];
    *(void *)&v42[v61] = *(void *)&v43[v61];
    uint64_t v64 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
    uint64_t v65 = &v62[v64];
    uint64_t v66 = &v63[v64];
    uint64_t v67 = type metadata accessor for WeatherDescription();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, v67))
    {
      uint64_t v68 = sub_10017DF08(&qword_100E63758);
      memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 32))(v65, v66, v67);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 0, 1, v67);
    }
    uint64_t v69 = v45[8];
    uint64_t v70 = &v42[v69];
    uint64_t v71 = &v43[v69];
    long long v72 = *(_OWORD *)&v43[v69 + 16];
    *(_OWORD *)uint64_t v70 = *(_OWORD *)&v43[v69];
    *((_OWORD *)v70 + 1) = v72;
    long long v73 = *(_OWORD *)&v43[v69 + 48];
    *((_OWORD *)v70 + 2) = *(_OWORD *)&v43[v69 + 32];
    *((_OWORD *)v70 + 3) = v73;
    uint64_t v74 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
    uint64_t v75 = &v70[v74];
    uint64_t v76 = &v71[v74];
    uint64_t v77 = type metadata accessor for Date();
    uint64_t v119 = *(void (**)(char *, char *))(*(void *)(v77 - 8) + 32);
    uint64_t v120 = v77;
    v119(v75, v76);
    uint64_t v78 = type metadata accessor for WeatherConditionBackgroundTimeData();
    uint64_t v79 = *(int *)(v78 + 20);
    uint64_t v80 = &v75[v79];
    uint64_t v81 = &v76[v79];
    uint64_t v82 = type metadata accessor for Elevation();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v81, 1, v82))
    {
      uint64_t v83 = sub_10017DF08(&qword_100E63760);
      memcpy(v80, v81, *(void *)(*(void *)(v83 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 32))(v80, v81, v82);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v80, 0, 1, v82);
    }
    uint64_t v84 = *(int *)(v78 + 24);
    int v85 = &v75[v84];
    uint64_t v86 = &v76[v84];
    uint64_t v87 = type metadata accessor for BackgroundMoonData();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v86, 1, v87))
    {
      uint64_t v88 = sub_10017DF08(&qword_100E63768);
      memcpy(v85, v86, *(void *)(*(void *)(v88 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 32))(v85, v86, v87);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v85, 0, 1, v87);
    }
    memcpy(&v42[v45[9]], &v43[v45[9]], 0x70uLL);
    uint64_t v89 = v45[10];
    uint64_t v90 = &v42[v89];
    uint64_t v91 = &v43[v89];
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 32))(&v42[v89], &v43[v89], v67);
    uint64_t v92 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
    *(_OWORD *)&v90[*(int *)(v92 + 20)] = *(_OWORD *)&v91[*(int *)(v92 + 20)];
    uint64_t v93 = v45[11];
    uint64_t v94 = &v42[v93];
    uint64_t v95 = &v43[v93];
    long long v96 = *((_OWORD *)v95 + 1);
    *(_OWORD *)uint64_t v94 = *(_OWORD *)v95;
    *((_OWORD *)v94 + 1) = v96;
    *((_OWORD *)v94 + 2) = *((_OWORD *)v95 + 2);
    uint64_t v97 = v45[12];
    uint64_t v98 = &v42[v97];
    uint64_t v99 = &v43[v97];
    uint64_t v100 = type metadata accessor for PressureTrend();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 32))(v98, v99, v100);
    uint64_t v101 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
    *(_OWORD *)&v98[v101[5]] = *(_OWORD *)&v99[v101[5]];
    *(_OWORD *)&v98[v101[6]] = *(_OWORD *)&v99[v101[6]];
    *(_OWORD *)&v98[v101[7]] = *(_OWORD *)&v99[v101[7]];
    *(void *)&v98[v101[8]] = *(void *)&v99[v101[8]];
    *(_OWORD *)&v98[v101[9]] = *(_OWORD *)&v99[v101[9]];
    memcpy(&v42[v45[13]], &v43[v45[13]], 0xE8uLL);
    uint64_t v102 = v45[14];
    uint64_t v103 = &v42[v102];
    uint64_t v104 = &v43[v102];
    ((void (*)(char *, char *, uint64_t))v119)(&v42[v102], &v43[v102], v120);
    uint64_t v105 = *(int *)(v78 + 20);
    uint64_t v106 = &v103[v105];
    uint64_t v107 = &v104[v105];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v104[v105], 1, v82))
    {
      uint64_t v108 = sub_10017DF08(&qword_100E63760);
      memcpy(v106, v107, *(void *)(*(void *)(v108 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 32))(v106, v107, v82);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v106, 0, 1, v82);
    }
    uint64_t v109 = *(int *)(v78 + 24);
    uint64_t v110 = &v103[v109];
    uint64_t v111 = &v104[v109];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v111, 1, v87))
    {
      uint64_t v112 = sub_10017DF08(&qword_100E63768);
      memcpy(v110, v111, *(void *)(*(void *)(v112 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 32))(v110, v111, v87);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v110, 0, 1, v87);
    }
    memcpy(&v42[v45[15]], &v43[v45[15]], 0x70uLL);
    uint64_t v113 = *(int *)(v121 + 64);
    a1 = v123;
    uint64_t v114 = (char *)v123 + v113;
    uint64_t v115 = (char *)v122 + v113;
    uint64_t v116 = type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v114, v115, *(void *)(*(void *)(v116 - 8) + 64));
    }
    else
    {
      uint64_t v117 = type metadata accessor for News();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 32))(v114, v115, v117);
      swift_storeEnumTagMultiPayload();
    }
    goto LABEL_46;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      uint64_t v14 = type metadata accessor for News();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
      swift_storeEnumTagMultiPayload();
    }
LABEL_46:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

uint64_t destroy for WeatherDataState()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for WeatherDataState(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for WeatherDataState(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for WeatherDataState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for WeatherDataState()
{
  return &type metadata for WeatherDataState;
}

void sub_100864A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v6 = a1 == a5 && a2 == a6;
  if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    sub_10017B204();
    sub_10011AD08();
    if (v7)
    {
      sub_10011A5D0();
    }
  }
}

uint64_t sub_100864B1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v4 = v1;
  type metadata accessor for LocationWeatherDataState(0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_10016279C();
  uint64_t v7 = sub_10017DF08(&qword_100E9BB58);
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_10011BFD8();
  sub_100157394(v4, v3, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v16 = sub_10017DF08(&qword_100E63748);
      uint64_t v17 = v3 + *(int *)(v16 + 48);
      uint64_t v18 = v3 + *(int *)(v16 + 64);
      Dictionary.init(dictionaryLiteral:)();
      sub_1001894AC();
      sub_100156908(v18, (void (*)(void))type metadata accessor for NewsDataModel);
      sub_100156908(v17, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      unint64_t v11 = type metadata accessor for WeatherData;
      goto LABEL_7;
    case 2u:
      long long v21 = *(_OWORD *)v3;
      uint64_t v12 = *(void *)(v3 + 16);
      uint64_t v13 = *(void *)(v3 + 24);
      sub_10017DF08(&qword_100E635E0);
      uint64_t inited = (__n128 *)swift_initStackObject();
      sub_1001A48E4(inited, (__n128)xmmword_100C251B0);
      inited[4].n128_u64[1] = sub_10017DF08(&qword_100E6D1D0);
      uint64_t v15 = swift_allocObject();
      inited[3].n128_u64[0] = v15;
      *(_OWORD *)(v15 + 16) = v21;
      *(void *)(v15 + 32) = v12;
      *(void *)(v15 + 40) = v13;
      Dictionary.init(dictionaryLiteral:)();
      sub_10019D974();
      goto LABEL_5;
    case 3u:
      Dictionary.init(dictionaryLiteral:)();
      sub_1001D1E88();
LABEL_5:
      ShortDescription.init(name:_:)();
      break;
    default:
      Dictionary.init(dictionaryLiteral:)();
      sub_10019B678();
      unint64_t v11 = type metadata accessor for LocationWeatherDataState;
LABEL_7:
      sub_100156908(v3, (void (*)(void))v11);
      break;
  }
  a1[3] = v7;
  a1[4] = sub_100047B30(&qword_100E9BB60, &qword_100E9BB58);
  uint64_t v19 = sub_100170694(a1);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v9 + 32))(v19, v2, v7);
}

void sub_100864E28()
{
  sub_100162EA0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = sub_10017DF08(&qword_100E63A40);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_10011BFD8();
  type metadata accessor for AvailableDataSets();
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_10016278C();
  __chkstk_darwin(v10);
  sub_10011B090();
  if (v4)
  {
    if (*(void *)(v2 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v11 = sub_1001D23B8();
      if (v12)
      {
        unint64_t v13 = v11;
        uint64_t v14 = *(void *)(v2 + 56);
        uint64_t v15 = type metadata accessor for LocationAvailableDataSetState(0);
        sub_100162E4C();
        sub_100157394(v14 + *(void *)(v16 + 72) * v13, v0, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
        uint64_t v17 = v0;
        uint64_t v18 = 0;
      }
      else
      {
        uint64_t v15 = type metadata accessor for LocationAvailableDataSetState(0);
        uint64_t v17 = v0;
        uint64_t v18 = 1;
      }
      _s7Weather24LocationCompositionStateOwst_0(v17, v18, 1, v15);
      swift_bridgeObjectRelease();
      type metadata accessor for LocationAvailableDataSetState(0);
      sub_10012B520(v0, 1, v15);
      if (!v22)
      {
        if (swift_getEnumCaseMultiPayload())
        {
          sub_100156908(v0, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
        }
        else
        {
          sub_1001627D4();
          v24();
          static AvailableDataSets.forecastNextHour.getter();
          sub_100869C00(&qword_100E9BB68, (void (*)(uint64_t))&type metadata accessor for AvailableDataSets);
          dispatch thunk of SetAlgebra.isSuperset(of:)();
          uint64_t v25 = *(void (**)(void))(v8 + 8);
          sub_100164938();
          v25();
          sub_100164938();
          v25();
        }
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v19 = type metadata accessor for LocationAvailableDataSetState(0);
      sub_100163050(v0, v20, v21, v19);
    }
    sub_100178110(v0, &qword_100E63A40);
  }
LABEL_12:
  sub_100162694();
}

void sub_1008650BC()
{
  sub_100162EA0();
  uint64_t v2 = v1;
  type metadata accessor for UUID();
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_100125FF8();
  uint64_t v4 = sub_10017DF08(&qword_100E63A40);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100109370();
  sub_100157394(v2, v0, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
  uint64_t v6 = type metadata accessor for LocationAvailableDataSetState(0);
  _s7Weather24LocationCompositionStateOwst_0(v0, 0, 1, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10024561C();
  swift_bridgeObjectRetain();
  UUID.init()();
  UUID.uuidString.getter();
  sub_100164F40();
  v7();
  sub_100162694();
}

void sub_100865224()
{
  sub_100162EA0();
  uint64_t v54 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v48 = v9;
  type metadata accessor for UUID();
  sub_100179C0C();
  uint64_t v52 = v11;
  uint64_t v53 = v10;
  __chkstk_darwin(v10);
  sub_100152344();
  uint64_t v12 = type metadata accessor for NewsDataModel();
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_10011BA80(v14, v44);
  uint64_t v15 = type metadata accessor for PreprocessedWeatherData();
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_100109314();
  uint64_t v51 = v17;
  uint64_t v18 = (int *)type metadata accessor for WeatherData(0);
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_100129860();
  __chkstk_darwin(v20);
  char v22 = (uint64_t *)((char *)&v44 - v21);
  uint64_t v23 = sub_10017DF08(&qword_100E63770);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_10016278C();
  uint64_t v27 = v25 - v26;
  __chkstk_darwin(v28);
  sub_100182A40();
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v44 - v30;
  uint64_t v55 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v49 = v8;
  sub_1001BBE9C(v8, v6, v4);
  swift_bridgeObjectRelease();
  uint64_t v32 = type metadata accessor for LocationWeatherDataState(0);
  sub_10012B520((uint64_t)v31, 1, v32);
  if (!v33)
  {
    sub_1001B7204((uint64_t)v31, v1, &qword_100E63770);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v34 = sub_10017DF08(&qword_100E63748);
      uint64_t v35 = v1 + *(int *)(v34 + 48);
      uint64_t v36 = v1 + *(int *)(v34 + 64);
      uint64_t v46 = v34;
      uint64_t v47 = v36;
      sub_100178C8C(v1, (uint64_t)v22, (void (*)(void))type metadata accessor for WeatherData);
      sub_100178C8C(v35, v51, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      sub_100178C8C(v47, v50, (void (*)(void))type metadata accessor for NewsDataModel);
      uint64_t v45 = *v22;
      uint64_t v47 = v22[1];
      sub_1001B7204((uint64_t)v22 + v18[5], (uint64_t)v0 + v18[5], &qword_100E63730);
      type metadata accessor for WeatherDataModel();
      sub_100162E4C();
      sub_10008B8B4();
      v37();
      sub_100157394(v48, (uint64_t)v0 + v18[8], (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
      sub_100157394((uint64_t)v22 + v18[7], (uint64_t)v0 + v18[7], (void (*)(void))type metadata accessor for WeatherData.CachingState);
      sub_1001B7204((uint64_t)v22 + v18[9], (uint64_t)v0 + v18[9], &qword_100E63740);
      uint64_t v38 = v46;
      uint64_t v39 = v47;
      *uint64_t v0 = v45;
      v0[1] = v39;
      uint64_t v40 = v27 + *(int *)(v38 + 48);
      uint64_t v41 = v27 + *(int *)(v38 + 64);
      sub_100157394((uint64_t)v0, v27, (void (*)(void))type metadata accessor for WeatherData);
      sub_100157394(v51, v40, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      uint64_t v42 = v50;
      sub_100157394(v50, v41, (void (*)(void))type metadata accessor for NewsDataModel);
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0(v27, 0, 1, v32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100176B1C();
      sub_100156908((uint64_t)v0, (void (*)(void))type metadata accessor for WeatherData);
      sub_100156908(v42, (void (*)(void))type metadata accessor for NewsDataModel);
      sub_100156908(v51, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      sub_100156908((uint64_t)v22, (void (*)(void))type metadata accessor for WeatherData);
    }
    else
    {
      sub_100156908(v1, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    }
  }
  sub_100178110((uint64_t)v31, &qword_100E63770);
  swift_bridgeObjectRetain();
  UUID.init()();
  UUID.uuidString.getter();
  sub_100162F0C();
  v43();
  sub_100162694();
}

uint64_t sub_100865734(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1635017060 && a2 == 0xE400000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x8000000100C95F00)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v7) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_100865880(char a1)
{
  if (!a1) {
    return 0x696669746E656469;
  }
  if (a1 == 1) {
    return 1635017060;
  }
  return 0xD000000000000011;
}

uint64_t sub_1008658D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x676E6964616F6CLL && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1937204590 && a2 == 0xE400000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 1635017060 && a2 == 0xE400000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x64656C696166 && a2 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_100865A68(char a1)
{
  uint64_t result = 0x676E6964616F6CLL;
  switch(a1)
  {
    case 1:
      uint64_t result = 1937204590;
      break;
    case 2:
      uint64_t result = 1635017060;
      break;
    case 3:
      uint64_t result = 0x64656C696166;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100865AE8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 12639 && a2 == 0xE200000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 12895 && a2 == 0xE200000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

unint64_t sub_100865BF4(unsigned __int8 a1)
{
  return ((unint64_t)a1 << 8) + 12383;
}

uint64_t sub_100865C08(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73654D726F727265 && a2 == 0xEC00000065676173;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7272456863746566 && a2 == 0xEA0000000000726FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100865D1C(char a1)
{
  if (a1) {
    return 0x7272456863746566;
  }
  else {
    return 0x73654D726F727265;
  }
}

uint64_t sub_100865D60()
{
  return sub_100865880(*v0);
}

uint64_t sub_100865D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100865734(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100865D90(uint64_t a1)
{
  unint64_t v2 = sub_100869D2C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100865DCC(uint64_t a1)
{
  unint64_t v2 = sub_100869D2C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100865E08()
{
  return sub_100865A68(*v0);
}

uint64_t sub_100865E10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1008658D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100865E38(uint64_t a1)
{
  unint64_t v2 = sub_10086A028();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100865E74(uint64_t a1)
{
  unint64_t v2 = sub_10086A028();

  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_100865EB0()
{
  return sub_100865BF4(*v0);
}

uint64_t sub_100865EB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100865AE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100865EE0(uint64_t a1)
{
  unint64_t v2 = sub_10086A10C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100865F1C(uint64_t a1)
{
  unint64_t v2 = sub_10086A10C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100865F58()
{
  return sub_100865D1C(*v0);
}

uint64_t sub_100865F60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100865C08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100865F88(uint64_t a1)
{
  unint64_t v2 = sub_10086A074();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100865FC4(uint64_t a1)
{
  unint64_t v2 = sub_10086A074();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100866000(uint64_t a1)
{
  unint64_t v2 = sub_10086A1A4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10086603C(uint64_t a1)
{
  unint64_t v2 = sub_10086A1A4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100866078(uint64_t a1)
{
  unint64_t v2 = sub_10086A158();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008660B4(uint64_t a1)
{
  unint64_t v2 = sub_10086A158();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1008660F0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x676E6964616F6CLL && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1635017060 && a2 == 0xE400000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x64656C696166 && a2 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_100866228(char a1)
{
  if (!a1) {
    return 0x676E6964616F6CLL;
  }
  if (a1 == 1) {
    return 1635017060;
  }
  return 0x64656C696166;
}

uint64_t sub_100866274(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1008662F4()
{
  return 0x726F727265;
}

uint64_t sub_100866308()
{
  return sub_100866228(*v0);
}

uint64_t sub_100866310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1008660F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100866338(uint64_t a1)
{
  unint64_t v2 = sub_10086A23C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100866374(uint64_t a1)
{
  unint64_t v2 = sub_10086A23C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1008663B0(uint64_t a1)
{
  unint64_t v2 = sub_10086A2D4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008663EC(uint64_t a1)
{
  unint64_t v2 = sub_10086A2D4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10086642C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100866274(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100866458(uint64_t a1)
{
  unint64_t v2 = sub_10086A288();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100866494(uint64_t a1)
{
  unint64_t v2 = sub_10086A288();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1008664D0(uint64_t a1)
{
  unint64_t v2 = sub_10086A320();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10086650C(uint64_t a1)
{
  unint64_t v2 = sub_10086A320();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100866548()
{
  sub_100162EA0();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for PreprocessedWeatherData();
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100162EF8();
  uint64_t v61 = v9;
  sub_1001626D4();
  __chkstk_darwin(v10);
  sub_100128F8C();
  uint64_t v62 = v11;
  uint64_t v12 = type metadata accessor for WeatherData(0);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_100109314();
  uint64_t v63 = (void *)v14;
  uint64_t v15 = type metadata accessor for NewsDataModel();
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_100162EF8();
  uint64_t v59 = v17;
  sub_1001626D4();
  __chkstk_darwin(v18);
  sub_100109770();
  uint64_t v60 = v19;
  sub_1001626D4();
  __chkstk_darwin(v20);
  char v22 = (char *)&v58 - v21;
  type metadata accessor for LocationWeatherDataState(0);
  sub_100162E4C();
  __chkstk_darwin(v23);
  sub_100158494();
  __chkstk_darwin(v24);
  sub_100164A00();
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v58 - v26;
  uint64_t v28 = sub_10017DF08(&qword_100E9BB50);
  uint64_t v29 = sub_100109308(v28);
  __chkstk_darwin(v29);
  sub_10017A790();
  uint64_t v31 = (void *)(v0 + v30);
  sub_100157394(v6, v0, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  sub_100157394(v4, (uint64_t)v31, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100157394(v0, (uint64_t)v2, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      uint64_t v42 = sub_10017DF08(&qword_100E63748);
      uint64_t v43 = *(int *)(v42 + 48);
      uint64_t v44 = *(int *)(v42 + 64);
      if (sub_1001A6968() != 1)
      {
        sub_100156908((uint64_t)v2 + v44, (void (*)(void))type metadata accessor for NewsDataModel);
        sub_100156908((uint64_t)v2 + v43, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
        uint64_t v32 = (void (*)(void))type metadata accessor for WeatherData;
        uint64_t v33 = (uint64_t)v2;
        goto LABEL_19;
      }
      uint64_t v45 = v63;
      sub_100178C8C((uint64_t)v31, (uint64_t)v63, (void (*)(void))type metadata accessor for WeatherData);
      uint64_t v46 = v62;
      sub_100178C8C((uint64_t)v2 + v43, v62, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      uint64_t v47 = v60;
      sub_100178C8C((uint64_t)v2 + v44, v60, (void (*)(void))type metadata accessor for NewsDataModel);
      uint64_t v48 = (uint64_t)v31 + v43;
      uint64_t v49 = v61;
      sub_100178C8C(v48, v61, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      uint64_t v50 = v59;
      sub_100178C8C((uint64_t)v31 + v44, v59, (void (*)(void))type metadata accessor for NewsDataModel);
      char v51 = sub_100A205E8(v2, v45);
      sub_100156908((uint64_t)v2, (void (*)(void))type metadata accessor for WeatherData);
      if (v51 & 1) != 0 && (sub_100AB19F0(v46, v49))
      {
        sub_100BBEEE4(v47, v50);
        sub_100156908(v50, (void (*)(void))type metadata accessor for NewsDataModel);
        sub_100156908(v49, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
        sub_100156908(v47, (void (*)(void))type metadata accessor for NewsDataModel);
        sub_100156908(v46, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
        uint64_t v52 = (void (*)(void))type metadata accessor for WeatherData;
        uint64_t v53 = (uint64_t)v45;
        goto LABEL_22;
      }
      sub_100156908(v50, (void (*)(void))type metadata accessor for NewsDataModel);
      sub_100156908(v49, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      sub_100156908(v47, (void (*)(void))type metadata accessor for NewsDataModel);
      sub_100156908(v46, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      sub_100156908((uint64_t)v45, (void (*)(void))type metadata accessor for WeatherData);
      goto LABEL_26;
    case 2u:
      sub_100157394(v0, (uint64_t)v1, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      uint64_t v35 = *v1;
      uint64_t v34 = v1[1];
      uint64_t v37 = v1[2];
      unint64_t v36 = v1[3];
      if (sub_1001A6968() != 2)
      {
        sub_100303D6C(v37, v36);
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      uint64_t v38 = v31[2];
      unint64_t v39 = v31[3];
      if (v35 == *v31 && v34 == v31[1])
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v41 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v41 & 1) == 0)
        {
          sub_100303D6C(v38, v39);
          sub_100303D6C(v37, v36);
          goto LABEL_26;
        }
      }
      uint64_t v56 = sub_10017B204();
      sub_100A343C8(v56, v57, v38, v39);
      sub_100303D6C(v37, v36);
      sub_100303D6C(v38, v39);
      goto LABEL_26;
    case 3u:
      if (sub_1001A6968() == 3) {
        goto LABEL_26;
      }
      goto LABEL_20;
    default:
      sub_100157394(v0, (uint64_t)v27, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      if (sub_1001A6968())
      {
        uint64_t v32 = (void (*)(void))type metadata accessor for NewsDataModel;
        uint64_t v33 = (uint64_t)v27;
LABEL_19:
        sub_100156908(v33, v32);
LABEL_20:
        sub_100178110(v0, &qword_100E9BB50);
      }
      else
      {
        sub_100178C8C((uint64_t)v31, (uint64_t)v22, (void (*)(void))type metadata accessor for NewsDataModel);
        uint64_t v54 = sub_10017B204();
        sub_100BBEEE4(v54, v55);
        sub_100156908((uint64_t)v22, (void (*)(void))type metadata accessor for NewsDataModel);
        uint64_t v53 = (uint64_t)v27;
        uint64_t v52 = (void (*)(void))type metadata accessor for NewsDataModel;
LABEL_22:
        sub_100156908(v53, v52);
LABEL_26:
        sub_100156908(v0, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      }
      sub_100162694();
      return;
  }
}

void sub_100866C10()
{
  sub_100162EA0();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  type metadata accessor for AvailableDataSets();
  sub_100179C0C();
  uint64_t v23 = v7;
  __chkstk_darwin(v8);
  uint64_t v9 = sub_100152344();
  type metadata accessor for LocationAvailableDataSetState(v9);
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_1001A072C();
  __chkstk_darwin(v11);
  sub_10011B090();
  uint64_t v12 = sub_10017DF08(&qword_100E6A460);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_10017A790();
  uint64_t v15 = (void *)(v0 + v14);
  sub_100157394(v6, v0, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
  sub_100157394(v4, (uint64_t)v15, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_100157394(v0, (uint64_t)v2, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
      uint64_t v18 = *v2;
      uint64_t v17 = v2[1];
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        if (v18 == *v15 && v17 == v15[1])
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          sub_10017B204();
          _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        goto LABEL_17;
      }
      swift_bridgeObjectRelease();
    }
    else if (swift_getEnumCaseMultiPayload() == 2)
    {
LABEL_17:
      sub_100156908(v0, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
      goto LABEL_18;
    }
  }
  else
  {
    sub_100157394(v0, v1, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_1001627D4();
      v21();
      sub_100869C00((unint64_t *)&qword_100E6A478, (void (*)(uint64_t))&type metadata accessor for AvailableDataSets);
      dispatch thunk of RawRepresentable.rawValue.getter();
      dispatch thunk of RawRepresentable.rawValue.getter();
      char v22 = *(void (**)(void))(v23 + 8);
      sub_10017B204();
      sub_100164938();
      v22();
      sub_100164938();
      v22();
      sub_100156908(v0, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
      goto LABEL_18;
    }
    sub_100164938();
    v20();
  }
  sub_100178110(v0, &qword_100E6A460);
LABEL_18:
  sub_100162694();
}

void sub_100866F60(uint64_t *a1, uint64_t *a2)
{
}

uint64_t sub_100866F84@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C25ED0;
  *(void *)(inited + 32) = 1635017060;
  *(void *)(inited + 40) = 0xE400000000000000;
  uint64_t v7 = sub_10017DF08(&qword_100E9BB78);
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 72) = v7;
  *(void *)(inited + 80) = 0xD000000000000011;
  *(void *)(inited + 88) = 0x8000000100C95F00;
  *(void *)(inited + 120) = sub_10017DF08(&qword_100E9BB80);
  *(void *)(inited + 96) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Dictionary.init(dictionaryLiteral:)();
  a3[3] = sub_10017DF08(&qword_100E9BB88);
  a3[4] = sub_100047B30(&qword_100E9BB90, &qword_100E9BB88);
  sub_100170694(a3);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_1008670CC@<X0>(uint64_t *a1@<X8>)
{
  return sub_100866F84(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1008670D4()
{
  sub_100869CE0();

  return ShortDescribable.description.getter();
}

void sub_100867110()
{
  sub_100162EA0();
  uint64_t v5 = v0;
  unint64_t v36 = v6;
  uint64_t v7 = sub_10017DF08(&qword_100E63748);
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_10016279C();
  uint64_t v9 = type metadata accessor for NewsDataModel();
  sub_100162E4C();
  __chkstk_darwin(v10);
  uint64_t v11 = sub_100166B4C();
  type metadata accessor for LocationWeatherDataState(v11);
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_10008B8C0();
  uint64_t v13 = sub_10017DF08(&qword_100E9BB58);
  sub_100179C0C();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  sub_10011BFD8();
  sub_100157394(v5, v4, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v23 = v2 + *(int *)(v7 + 48);
      uint64_t v24 = *(int *)(v7 + 64);
      uint64_t v35 = v2 + v24;
      uint64_t v25 = v4 + v24;
      sub_100178C8C(v4, v2, (void (*)(void))type metadata accessor for WeatherData);
      uint64_t v26 = sub_100188E04();
      sub_100178C8C(v26, v27, v28);
      sub_100178C8C(v25, v35, (void (*)(void))type metadata accessor for NewsDataModel);
      sub_10017DF08(&qword_100E635E0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100C251B0;
      *(void *)(inited + 32) = 1635017060;
      *(void *)(inited + 40) = 0xE400000000000000;
      *(void *)(inited + 72) = v7;
      uint64_t v30 = sub_100170694((uint64_t *)(inited + 48));
      uint64_t v31 = (uint64_t)v30 + *(int *)(v7 + 48);
      uint64_t v32 = (uint64_t)v30 + *(int *)(v7 + 64);
      sub_100157394(v2, (uint64_t)v30, (void (*)(void))type metadata accessor for WeatherData);
      sub_100157394(v23, v31, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      sub_100157394(v35, v32, (void (*)(void))type metadata accessor for NewsDataModel);
      Dictionary.init(dictionaryLiteral:)();
      sub_1001894AC();
      sub_100178110(v2, &qword_100E63748);
      break;
    case 2u:
      long long v34 = *(_OWORD *)v4;
      uint64_t v19 = *(void *)(v4 + 16);
      uint64_t v20 = *(void *)(v4 + 24);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v21 = (__n128 *)swift_initStackObject();
      sub_1001A48E4(v21, (__n128)xmmword_100C251B0);
      v21[4].n128_u64[1] = sub_10017DF08(&qword_100E6D1D0);
      uint64_t v22 = swift_allocObject();
      v21[3].n128_u64[0] = v22;
      *(_OWORD *)(v22 + 16) = v34;
      *(void *)(v22 + 32) = v19;
      *(void *)(v22 + 40) = v20;
      Dictionary.init(dictionaryLiteral:)();
      sub_10019D974();
      goto LABEL_5;
    case 3u:
      Dictionary.init(dictionaryLiteral:)();
      sub_1001D1E88();
LABEL_5:
      ShortDescription.init(name:_:)();
      break;
    default:
      sub_100178C8C(v4, v3, (void (*)(void))type metadata accessor for NewsDataModel);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v17 = swift_initStackObject();
      *(_OWORD *)(v17 + 16) = xmmword_100C251B0;
      *(void *)(v17 + 32) = 0x617461447377656ELL;
      *(void *)(v17 + 40) = 0xE800000000000000;
      *(void *)(v17 + 72) = v9;
      uint64_t v18 = sub_100170694((uint64_t *)(v17 + 48));
      sub_100157394(v3, (uint64_t)v18, (void (*)(void))type metadata accessor for NewsDataModel);
      Dictionary.init(dictionaryLiteral:)();
      sub_10019B678();
      sub_100156908(v3, (void (*)(void))type metadata accessor for NewsDataModel);
      break;
  }
  v36[3] = v13;
  v36[4] = sub_100047B30(&qword_100E9BB60, &qword_100E9BB58);
  uint64_t v33 = sub_100170694(v36);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v15 + 32))(v33, v1, v13);
  sub_100162694();
}

uint64_t sub_1008675E4()
{
  sub_100869C00(&qword_100E9BBA0, (void (*)(uint64_t))type metadata accessor for LocationWeatherDataState);

  return ShortDescribable.description.getter();
}

void sub_100867650()
{
  sub_100162EA0();
  uint64_t v4 = v0;
  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for AvailableDataSets();
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_100125FF8();
  type metadata accessor for LocationAvailableDataSetState(0);
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_100109370();
  uint64_t v12 = sub_10017DF08(&qword_100E9BBA8);
  sub_100179C0C();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_10011BFD8();
  sub_100157394(v4, (uint64_t)v3, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      unint64_t v17 = *v3;
      unint64_t v18 = v3[1];
      sub_10017DF08(&qword_100E635E0);
      uint64_t inited = (__n128 *)swift_initStackObject();
      uint64_t v20 = sub_1001A48E4(inited, (__n128)xmmword_100C251B0);
      v20[4].n128_u64[1] = (unint64_t)&type metadata for String;
      v20[3].n128_u64[0] = v17;
      v20[3].n128_u64[1] = v18;
      Dictionary.init(dictionaryLiteral:)();
      sub_10019D974();
    }
    else
    {
      Dictionary.init(dictionaryLiteral:)();
      sub_1001D1E88();
    }
    ShortDescription.init(name:_:)();
  }
  else
  {
    sub_1001627D4();
    v21();
    sub_10017DF08(&qword_100E635E0);
    uint64_t v22 = swift_initStackObject();
    *(_OWORD *)(v22 + 16) = xmmword_100C251B0;
    *(void *)(v22 + 32) = 0xD000000000000010;
    *(void *)(v22 + 40) = 0x8000000100CB4380;
    *(void *)(v22 + 72) = v7;
    uint64_t v23 = sub_100170694((uint64_t *)(v22 + 48));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v9 + 16))(v23, v2, v7);
    Dictionary.init(dictionaryLiteral:)();
    sub_1001894AC();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, v7);
  }
  v6[3] = v12;
  v6[4] = sub_100047B30(&qword_100E9BBB0, &qword_100E9BBA8);
  uint64_t v24 = sub_100170694(v6);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v14 + 32))(v24, v1, v12);
  sub_100162694();
}

void sub_100867908()
{
  sub_10016314C();
  uint64_t v3 = v2;
  uint64_t v4 = sub_10017DF08(&qword_100E9BBF0);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10012B938();
  sub_1001B1E64(v3, v3[3]);
  sub_100869D2C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_100188E04();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v0)
  {
    sub_10017DF08(&qword_100E9BB78);
    sub_100869ED0();
    sub_10018326C();
    sub_10017DF08(&qword_100E9BB80);
    sub_100869F7C();
    sub_10018326C();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_100163164();
}

void sub_100867A64()
{
  sub_10016314C();
  uint64_t v2 = v1;
  sub_10017DF08(&qword_100E9BBC0);
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_1001B1E64(v2, v2[3]);
  sub_100869D2C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v2);
  }
  else
  {
    KeyedDecodingContainer.decode(_:forKey:)();
    sub_10017DF08(&qword_100E9BB78);
    sub_100869D78();
    swift_bridgeObjectRetain();
    sub_1001652BC();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_10017DF08(&qword_100E9BB80);
    sub_100869E24();
    swift_bridgeObjectRetain();
    sub_1001652BC();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v4 = sub_100186AE8();
    v5(v4);
    swift_bridgeObjectRetain();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_100163164();
}

void sub_100867CA4()
{
  sub_10016314C();
  uint64_t v66 = v1;
  uint64_t v68 = v0;
  uint64_t v4 = v3;
  sub_10017DF08(&qword_100E9BC80);
  sub_100179C0C();
  uint64_t v57 = v6;
  uint64_t v58 = v5;
  __chkstk_darwin(v5);
  sub_10011BA64(v7, v55[0]);
  sub_10017DF08(&qword_100E9BC88);
  sub_100179C0C();
  uint64_t v59 = v9;
  uint64_t v60 = v8;
  __chkstk_darwin(v8);
  sub_100164B64(v10, v55[0]);
  v55[0] = type metadata accessor for PreprocessedWeatherData();
  sub_100162E4C();
  __chkstk_darwin(v11);
  uint64_t v13 = sub_1001635A4(v12, v55[0]);
  v55[5] = type metadata accessor for WeatherData(v13);
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_100182904(v15, v55[0]);
  sub_10017DF08(&qword_100E9BC90);
  sub_100179C0C();
  v55[3] = v17;
  v55[4] = v16;
  __chkstk_darwin(v16);
  sub_100109314();
  v55[2] = v18;
  uint64_t v63 = type metadata accessor for NewsDataModel();
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_100162EF8();
  uint64_t v56 = v20;
  sub_1001626D4();
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)v55 - v22;
  sub_10017DF08(&qword_100E9BC98);
  sub_100179C0C();
  v55[1] = v24;
  __chkstk_darwin(v25);
  sub_100109370();
  type metadata accessor for LocationWeatherDataState(0);
  sub_100162E4C();
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)v55 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_10017DF08(&qword_100E9BCA0);
  sub_100179C0C();
  uint64_t v67 = v29;
  __chkstk_darwin(v30);
  sub_10012B938();
  sub_1001B1E64(v4, v4[3]);
  sub_10086A028();
  uint64_t v64 = v2;
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_100157394(v68, (uint64_t)v28, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v34 = sub_10017DF08(&qword_100E63748);
      uint64_t v35 = (uint64_t)&v28[*(int *)(v34 + 48)];
      uint64_t v36 = (uint64_t)&v28[*(int *)(v34 + 64)];
      uint64_t v37 = v62;
      sub_100178C8C((uint64_t)v28, v62, (void (*)(void))type metadata accessor for WeatherData);
      uint64_t v38 = v61;
      sub_100178C8C(v35, v61, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      uint64_t v39 = v56;
      sub_100178C8C(v36, v56, (void (*)(void))type metadata accessor for NewsDataModel);
      LOBYTE(v69) = 2;
      sub_10086A10C();
      uint64_t v41 = v64;
      uint64_t v40 = v65;
      sub_10016296C();
      LOBYTE(v69) = 0;
      sub_100869C00(&qword_100E6F820, (void (*)(uint64_t))type metadata accessor for WeatherData);
      uint64_t v42 = v66;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      if (!v42)
      {
        LOBYTE(v69) = 1;
        sub_100869C00(&qword_100E9BCB0, (void (*)(uint64_t))type metadata accessor for PreprocessedWeatherData);
        KeyedEncodingContainer.encode<A>(_:forKey:)();
        LOBYTE(v69) = 2;
        sub_100869C00(&qword_100E9BCB8, (void (*)(uint64_t))type metadata accessor for NewsDataModel);
        KeyedEncodingContainer.encode<A>(_:forKey:)();
      }
      sub_100162F0C();
      v43();
      sub_100156908(v39, (void (*)(void))type metadata accessor for NewsDataModel);
      sub_100156908(v38, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      sub_100156908(v37, (void (*)(void))type metadata accessor for WeatherData);
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v41, v40);
      break;
    case 2u:
      uint64_t v45 = *((void *)v28 + 2);
      unint64_t v44 = *((void *)v28 + 3);
      LOBYTE(v69) = 3;
      sub_10086A074();
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      LOBYTE(v69) = 0;
      uint64_t v46 = v66;
      KeyedEncodingContainer.encode(_:forKey:)();
      if (v46)
      {
        swift_bridgeObjectRelease();
        sub_100303D6C(v45, v44);
        sub_100162F0C();
        v47();
        uint64_t v48 = sub_100188E04();
        v50(v48, v49);
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v69 = v45;
        unint64_t v70 = v44;
        sub_10086A1F0();
        KeyedEncodingContainer.encode<A>(_:forKey:)();
        sub_100162F0C();
        v53();
        sub_100162F0C();
        v54();
        sub_100303D6C(v45, v44);
      }
      break;
    case 3u:
      LOBYTE(v69) = 0;
      sub_10086A1A4();
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      sub_100162F0C();
      v51();
      sub_10019DF88();
      sub_100162F0C();
      v52();
      break;
    default:
      sub_100178C8C((uint64_t)v28, (uint64_t)v23, (void (*)(void))type metadata accessor for NewsDataModel);
      LOBYTE(v69) = 1;
      sub_10086A158();
      uint64_t v31 = v64;
      uint64_t v32 = v65;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      sub_100869C00(&qword_100E9BCB8, (void (*)(uint64_t))type metadata accessor for NewsDataModel);
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      sub_100162F0C();
      v33();
      sub_100156908((uint64_t)v23, (void (*)(void))type metadata accessor for NewsDataModel);
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v31, v32);
      break;
  }
  sub_100163164();
}

void sub_1008684C4()
{
  sub_10016314C();
  uint64_t v84 = v0;
  uint64_t v6 = v5;
  uint64_t v76 = v7;
  uint64_t v75 = sub_10017DF08(&qword_100E9BC18);
  sub_100179C0C();
  uint64_t v71 = v8;
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v78 = v10;
  sub_10017DF08(&qword_100E9BC20);
  sub_100179C0C();
  uint64_t v79 = v12;
  uint64_t v80 = v11;
  __chkstk_darwin(v11);
  sub_100152444(v13, v65);
  uint64_t v74 = sub_10017DF08(&qword_100E9BC28);
  sub_100179C0C();
  uint64_t v70 = v14;
  __chkstk_darwin(v15);
  sub_100109314();
  uint64_t v77 = v16;
  sub_10017DF08(&qword_100E9BC30);
  sub_100179C0C();
  uint64_t v72 = v18;
  uint64_t v73 = v17;
  __chkstk_darwin(v17);
  sub_100164B64(v19, v65);
  sub_10017DF08(&qword_100E9BC38);
  sub_100179C0C();
  uint64_t v81 = v21;
  uint64_t v82 = v20;
  __chkstk_darwin(v20);
  uint64_t v22 = sub_100152344();
  uint64_t v23 = type metadata accessor for LocationWeatherDataState(v22);
  sub_100162E4C();
  __chkstk_darwin(v24);
  sub_1001A072C();
  __chkstk_darwin(v25);
  sub_100182A40();
  __chkstk_darwin(v26);
  sub_100164A00();
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v65 - v28;
  uint64_t v30 = v6[3];
  uint64_t v83 = v6;
  sub_1001B1E64(v6, v30);
  sub_10086A028();
  uint64_t v31 = v84;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v31) {
    goto LABEL_10;
  }
  uint64_t v67 = v2;
  uint64_t v66 = v4;
  uint64_t v69 = v3;
  uint64_t v68 = v29;
  uint64_t v84 = v23;
  uint64_t v32 = v82;
  uint64_t v33 = KeyedDecodingContainer.allKeys.getter();
  uint64_t v34 = *(void *)(v33 + 16);
  if (!v34
    || (uint64_t v65 = 0,
        uint64_t v35 = *(unsigned __int8 *)(v33 + 32),
        sub_100723214(1, v34, v33, v33 + 32, 0, (2 * v34) | 1),
        uint64_t v37 = v36,
        unint64_t v39 = v38,
        swift_bridgeObjectRelease(),
        v37 != v39 >> 1))
  {
    uint64_t v43 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v45 = v44;
    sub_10017DF08(&qword_100E67280);
    *uint64_t v45 = v84;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v43 - 8) + 104))(v45, enum case for DecodingError.typeMismatch(_:), v43);
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v46 = sub_10019DF88();
    v47(v46, v32);
LABEL_10:
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v83);
    goto LABEL_11;
  }
  switch(v35)
  {
    case 1:
      LOBYTE(v85) = 1;
      sub_10086A158();
      sub_100185D00();
      type metadata accessor for NewsDataModel();
      sub_100869C00(&qword_100E9BC68, (void (*)(uint64_t))type metadata accessor for NewsDataModel);
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      sub_100162F0C();
      v51();
      swift_unknownObjectRelease();
      uint64_t v52 = sub_100179114();
      v53(v52);
      uint64_t v54 = v67;
      goto LABEL_12;
    case 2:
      LOBYTE(v85) = 2;
      sub_10086A10C();
      sub_100185D00();
      type metadata accessor for WeatherData(0);
      LOBYTE(v85) = 0;
      sub_100869C00(&qword_100E6F810, (void (*)(uint64_t))type metadata accessor for WeatherData);
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v78 = v1;
      uint64_t v55 = sub_10017DF08(&qword_100E63748);
      uint64_t v56 = v69 + *(int *)(v55 + 48);
      type metadata accessor for PreprocessedWeatherData();
      LOBYTE(v85) = 1;
      sub_100869C00(&qword_100E9BC60, (void (*)(uint64_t))type metadata accessor for PreprocessedWeatherData);
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v77 = v56;
      type metadata accessor for NewsDataModel();
      LOBYTE(v85) = 2;
      sub_100869C00(&qword_100E9BC68, (void (*)(uint64_t))type metadata accessor for NewsDataModel);
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      sub_100162F0C();
      v62();
      swift_unknownObjectRelease();
      uint64_t v63 = sub_100184C60();
      v64(v63);
      uint64_t v54 = v69;
LABEL_12:
      swift_storeEnumTagMultiPayload();
      uint64_t v60 = v54;
      goto LABEL_13;
    case 3:
      LOBYTE(v85) = 3;
      sub_10086A074();
      sub_100185D00();
      LOBYTE(v85) = 0;
      uint64_t v48 = KeyedDecodingContainer.decode(_:forKey:)();
      uint64_t v50 = v49;
      sub_10086A0C0();
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      sub_100162F0C();
      v57();
      swift_unknownObjectRelease();
      sub_100162F0C();
      v58();
      uint64_t v59 = v66;
      uint64_t *v66 = v48;
      v59[1] = v50;
      *((_OWORD *)v59 + 1) = v85;
      swift_storeEnumTagMultiPayload();
      uint64_t v60 = (uint64_t)v59;
LABEL_13:
      uint64_t v42 = (uint64_t)v68;
      sub_100178C8C(v60, (uint64_t)v68, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      break;
    default:
      LOBYTE(v85) = 0;
      sub_10086A1A4();
      sub_100185D00();
      sub_100162F0C();
      v40();
      swift_unknownObjectRelease();
      sub_100162F0C();
      v41();
      uint64_t v42 = (uint64_t)v68;
      swift_storeEnumTagMultiPayload();
      break;
  }
  uint64_t v61 = (uint64_t)v83;
  sub_100178C8C(v42, v76, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v61);
LABEL_11:
  sub_100163164();
}

void sub_100868F00()
{
  sub_10016314C();
  uint64_t v27 = v0;
  uint64_t v3 = v2;
  sub_10017DF08(&qword_100E9BD08);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_100182904(v5, v21);
  uint64_t v26 = sub_10017DF08(&qword_100E9BD10);
  sub_100179C0C();
  uint64_t v24 = v6;
  __chkstk_darwin(v7);
  sub_1001635A4(v8, v22);
  type metadata accessor for AvailableDataSets();
  sub_100179C0C();
  __chkstk_darwin(v9);
  sub_10017EF38(v10, v23);
  sub_10017DF08(&qword_100E9BD18);
  sub_100179C0C();
  __chkstk_darwin(v11);
  uint64_t v12 = sub_100166B4C();
  type metadata accessor for LocationAvailableDataSetState(v12);
  sub_100162E4C();
  __chkstk_darwin(v13);
  sub_100109370();
  sub_10017DF08(&qword_100E9BD20);
  sub_100179C0C();
  __chkstk_darwin(v14);
  sub_10016279C();
  sub_1001B1E64(v3, v3[3]);
  sub_10086A23C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_100157394(v27, v1, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_10086A288();
      sub_10016296C();
      KeyedEncodingContainer.encode(_:forKey:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10086A320();
      sub_10016296C();
    }
    sub_100162F0C();
    v16();
    sub_100162F0C();
    v17();
  }
  else
  {
    sub_1001627D4();
    v18();
    sub_10086A2D4();
    sub_10016296C();
    sub_100869C00(&qword_100E9BD28, (void (*)(uint64_t))&type metadata accessor for AvailableDataSets);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v26);
    sub_100164F40();
    v19();
    sub_100162F0C();
    v20();
  }
  sub_100163164();
}

void sub_1008692FC()
{
  sub_10016314C();
  uint64_t v73 = v0;
  uint64_t v4 = v3;
  uint64_t v69 = v5;
  uint64_t v67 = sub_10017DF08(&qword_100E9BCC0);
  sub_100179C0C();
  uint64_t v64 = v6;
  __chkstk_darwin(v7);
  sub_10011BA80(v8, v58);
  uint64_t v68 = sub_10017DF08(&qword_100E9BCC8);
  sub_100179C0C();
  uint64_t v63 = v9;
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v72 = v11;
  sub_10017DF08(&qword_100E9BCD0);
  sub_100179C0C();
  uint64_t v65 = v13;
  uint64_t v66 = v12;
  __chkstk_darwin(v12);
  sub_100152444(v14, v58);
  sub_10017DF08(&qword_100E9BCD8);
  sub_100179C0C();
  uint64_t v70 = v16;
  uint64_t v71 = v15;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for LocationAvailableDataSetState(0);
  sub_100162E4C();
  __chkstk_darwin(v20);
  sub_100129860();
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v58 - v22;
  __chkstk_darwin(v24);
  sub_10011B090();
  sub_1001B1E64(v4, v4[3]);
  sub_10086A23C();
  uint64_t v25 = v73;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v25)
  {
    uint64_t v59 = v2;
    uint64_t v60 = v23;
    uint64_t v26 = v71;
    uint64_t v61 = v1;
    uint64_t v62 = v19;
    uint64_t v73 = v4;
    uint64_t v27 = v18;
    uint64_t v28 = KeyedDecodingContainer.allKeys.getter();
    uint64_t v29 = *(void *)(v28 + 16);
    if (v29)
    {
      uint64_t v30 = v26;
      int v31 = *(unsigned __int8 *)(v28 + 32);
      sub_100723214(1, v29, v28, v28 + 32, 0, (2 * v29) | 1);
      uint64_t v33 = v32;
      unint64_t v35 = v34;
      swift_bridgeObjectRelease();
      if (v33 == v35 >> 1)
      {
        if (v31)
        {
          if (v31 == 1)
          {
            sub_10086A2D4();
            sub_1001887B0();
            uint64_t v36 = v69;
            type metadata accessor for AvailableDataSets();
            sub_100869C00(&qword_100E9BCF8, (void (*)(uint64_t))&type metadata accessor for AvailableDataSets);
            KeyedDecodingContainer.decode<A>(_:forKey:)();
            sub_100162F0C();
            v45();
            swift_unknownObjectRelease();
            uint64_t v46 = sub_100176E04();
            v47(v46);
            uint64_t v48 = (uint64_t)v60;
            swift_storeEnumTagMultiPayload();
            uint64_t v49 = v48;
            uint64_t v50 = v61;
            sub_100178C8C(v49, v61, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
LABEL_15:
            sub_100178C8C(v50, v36, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
            uint64_t v42 = (uint64_t)v73;
            goto LABEL_13;
          }
          sub_10086A288();
          sub_1001887B0();
          uint64_t v51 = KeyedDecodingContainer.decode(_:forKey:)();
          uint64_t v53 = v52;
          sub_100162F0C();
          v54();
          swift_unknownObjectRelease();
          uint64_t v55 = sub_100183A74();
          v56(v55);
          uint64_t v57 = (uint64_t)v59;
          uint64_t *v59 = v51;
          *(void *)(v57 + 8) = v53;
          swift_storeEnumTagMultiPayload();
          uint64_t v50 = v61;
          sub_100178C8C(v57, v61, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
        }
        else
        {
          sub_10086A320();
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          sub_100162F0C();
          v43();
          swift_unknownObjectRelease();
          sub_10019DF88();
          sub_100162F0C();
          v44();
          uint64_t v50 = v61;
          swift_storeEnumTagMultiPayload();
        }
        uint64_t v36 = v69;
        goto LABEL_15;
      }
      uint64_t v37 = v70;
      uint64_t v26 = v30;
      uint64_t v27 = v18;
    }
    else
    {
      uint64_t v37 = v70;
    }
    uint64_t v38 = v62;
    uint64_t v39 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v41 = v40;
    sub_10017DF08(&qword_100E67280);
    *uint64_t v41 = v38;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v39 - 8) + 104))(v41, enum case for DecodingError.typeMismatch(_:), v39);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v27, v26);
    uint64_t v4 = v73;
  }
  uint64_t v42 = (uint64_t)v4;
LABEL_13:
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v42);
  sub_100163164();
}

uint64_t sub_1008699A4()
{
  sub_100869C00(&qword_100E9BBB8, (void (*)(uint64_t))type metadata accessor for LocationAvailableDataSetState);

  return ShortDescribable.description.getter();
}

void sub_100869A10(void *a1@<X8>)
{
  sub_100867A64();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
    a1[2] = v5;
    a1[3] = v6;
  }
}

void sub_100869A40()
{
}

void sub_100869A60()
{
}

void sub_100869A78()
{
}

void sub_100869A90()
{
}

void sub_100869AA8()
{
}

void sub_100869AC0(void *a1@<X8>)
{
  sub_1008BE59C();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
    a1[2] = v5;
    a1[3] = v6;
  }
}

uint64_t sub_100869AF0()
{
  return sub_1008BE764();
}

void sub_100869B10()
{
}

void sub_100869B28()
{
}

void sub_100869B40()
{
}

void sub_100869B58()
{
}

uint64_t sub_100869B70()
{
  return sub_100869C00(&qword_100E9BB38, (void (*)(uint64_t))type metadata accessor for LocationAvailableDataSetState);
}

uint64_t sub_100869BB8()
{
  return sub_100869C00(&qword_100E9BB40, (void (*)(uint64_t))type metadata accessor for LocationWeatherDataState);
}

uint64_t sub_100869C00(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100869C4C()
{
  unint64_t result = qword_100E9BB48;
  if (!qword_100E9BB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BB48);
  }
  return result;
}

uint64_t sub_100869C98()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40) >= 0xEuLL) {
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

unint64_t sub_100869CE0()
{
  unint64_t result = qword_100E9BB98;
  if (!qword_100E9BB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BB98);
  }
  return result;
}

unint64_t sub_100869D2C()
{
  unint64_t result = qword_100E9BBC8;
  if (!qword_100E9BBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BBC8);
  }
  return result;
}

unint64_t sub_100869D78()
{
  unint64_t result = qword_100E9BBD0;
  if (!qword_100E9BBD0)
  {
    sub_10018C6DC(&qword_100E9BB78);
    sub_100869C00(&qword_100E9BBD8, (void (*)(uint64_t))type metadata accessor for LocationWeatherDataState);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BBD0);
  }
  return result;
}

unint64_t sub_100869E24()
{
  unint64_t result = qword_100E9BBE0;
  if (!qword_100E9BBE0)
  {
    sub_10018C6DC(&qword_100E9BB80);
    sub_100869C00(&qword_100E9BBE8, (void (*)(uint64_t))type metadata accessor for LocationAvailableDataSetState);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BBE0);
  }
  return result;
}

unint64_t sub_100869ED0()
{
  unint64_t result = qword_100E9BBF8;
  if (!qword_100E9BBF8)
  {
    sub_10018C6DC(&qword_100E9BB78);
    sub_100869C00(&qword_100E9BC00, (void (*)(uint64_t))type metadata accessor for LocationWeatherDataState);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BBF8);
  }
  return result;
}

unint64_t sub_100869F7C()
{
  unint64_t result = qword_100E9BC08;
  if (!qword_100E9BC08)
  {
    sub_10018C6DC(&qword_100E9BB80);
    sub_100869C00(&qword_100E9BC10, (void (*)(uint64_t))type metadata accessor for LocationAvailableDataSetState);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BC08);
  }
  return result;
}

unint64_t sub_10086A028()
{
  unint64_t result = qword_100E9BC40;
  if (!qword_100E9BC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BC40);
  }
  return result;
}

unint64_t sub_10086A074()
{
  unint64_t result = qword_100E9BC48;
  if (!qword_100E9BC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BC48);
  }
  return result;
}

unint64_t sub_10086A0C0()
{
  unint64_t result = qword_100E9BC50;
  if (!qword_100E9BC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BC50);
  }
  return result;
}

unint64_t sub_10086A10C()
{
  unint64_t result = qword_100E9BC58;
  if (!qword_100E9BC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BC58);
  }
  return result;
}

unint64_t sub_10086A158()
{
  unint64_t result = qword_100E9BC70;
  if (!qword_100E9BC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BC70);
  }
  return result;
}

unint64_t sub_10086A1A4()
{
  unint64_t result = qword_100E9BC78;
  if (!qword_100E9BC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BC78);
  }
  return result;
}

unint64_t sub_10086A1F0()
{
  unint64_t result = qword_100E9BCA8;
  if (!qword_100E9BCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BCA8);
  }
  return result;
}

unint64_t sub_10086A23C()
{
  unint64_t result = qword_100E9BCE0;
  if (!qword_100E9BCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BCE0);
  }
  return result;
}

unint64_t sub_10086A288()
{
  unint64_t result = qword_100E9BCE8;
  if (!qword_100E9BCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BCE8);
  }
  return result;
}

unint64_t sub_10086A2D4()
{
  unint64_t result = qword_100E9BCF0;
  if (!qword_100E9BCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BCF0);
  }
  return result;
}

unint64_t sub_10086A320()
{
  unint64_t result = qword_100E9BD00;
  if (!qword_100E9BD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BD00);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationAvailableDataSetState.CodingKeys()
{
  return &type metadata for LocationAvailableDataSetState.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationAvailableDataSetState.LoadingCodingKeys()
{
  return &type metadata for LocationAvailableDataSetState.LoadingCodingKeys;
}

ValueMetadata *type metadata accessor for LocationAvailableDataSetState.DataCodingKeys()
{
  return &type metadata for LocationAvailableDataSetState.DataCodingKeys;
}

ValueMetadata *type metadata accessor for LocationAvailableDataSetState.FailedCodingKeys()
{
  return &type metadata for LocationAvailableDataSetState.FailedCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for LocationWeatherDataState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10086A480);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationWeatherDataState.CodingKeys()
{
  return &type metadata for LocationWeatherDataState.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationWeatherDataState.LoadingCodingKeys()
{
  return &type metadata for LocationWeatherDataState.LoadingCodingKeys;
}

unsigned char *_s7Weather29LocationAvailableDataSetStateO14DataCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10086A564);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationWeatherDataState.NewsCodingKeys()
{
  return &type metadata for LocationWeatherDataState.NewsCodingKeys;
}

ValueMetadata *type metadata accessor for LocationWeatherDataState.DataCodingKeys()
{
  return &type metadata for LocationWeatherDataState.DataCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for LocationWeatherDataState.FailedCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10086A678);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationWeatherDataState.FailedCodingKeys()
{
  return &type metadata for LocationWeatherDataState.FailedCodingKeys;
}

unsigned char *_s7Weather29LocationAvailableDataSetStateO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10086A77CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherDataState.CodingKeys()
{
  return &type metadata for WeatherDataState.CodingKeys;
}

uint64_t *sub_10086A7B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
      }
      uint64_t v8 = type metadata accessor for AvailableDataSets();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10086A8D0(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    uint64_t v3 = type metadata accessor for AvailableDataSets();
    unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_10086A970(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    uint64_t v7 = type metadata accessor for AvailableDataSets();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_10086AA48(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100156908((uint64_t)a1, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
      }
      uint64_t v7 = type metadata accessor for AvailableDataSets();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_10086AB4C(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for AvailableDataSets();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_10086AC00(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100156908((uint64_t)a1, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for AvailableDataSets();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

unint64_t sub_10086ACDC()
{
  unint64_t result = qword_100E9BDD8;
  if (!qword_100E9BDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BDD8);
  }
  return result;
}

unint64_t sub_10086AD2C()
{
  unint64_t result = qword_100E9BDE0;
  if (!qword_100E9BDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BDE0);
  }
  return result;
}

unint64_t sub_10086AD7C()
{
  unint64_t result = qword_100E9BDE8;
  if (!qword_100E9BDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BDE8);
  }
  return result;
}

unint64_t sub_10086ADCC()
{
  unint64_t result = qword_100E9BDF0;
  if (!qword_100E9BDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BDF0);
  }
  return result;
}

unint64_t sub_10086AE1C()
{
  unint64_t result = qword_100E9BDF8;
  if (!qword_100E9BDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BDF8);
  }
  return result;
}

unint64_t sub_10086AE6C()
{
  unint64_t result = qword_100E9BE00;
  if (!qword_100E9BE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BE00);
  }
  return result;
}

unint64_t sub_10086AEBC()
{
  unint64_t result = qword_100E9BE08;
  if (!qword_100E9BE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BE08);
  }
  return result;
}

unint64_t sub_10086AF0C()
{
  unint64_t result = qword_100E9BE10;
  if (!qword_100E9BE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BE10);
  }
  return result;
}

unint64_t sub_10086AF5C()
{
  unint64_t result = qword_100E9BE18;
  if (!qword_100E9BE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BE18);
  }
  return result;
}

unint64_t sub_10086AFAC()
{
  unint64_t result = qword_100E9BE20;
  if (!qword_100E9BE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BE20);
  }
  return result;
}

unint64_t sub_10086AFFC()
{
  unint64_t result = qword_100E9BE28;
  if (!qword_100E9BE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BE28);
  }
  return result;
}

unint64_t sub_10086B04C()
{
  unint64_t result = qword_100E9BE30;
  if (!qword_100E9BE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BE30);
  }
  return result;
}

unint64_t sub_10086B09C()
{
  unint64_t result = qword_100E9BE38;
  if (!qword_100E9BE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BE38);
  }
  return result;
}

unint64_t sub_10086B0EC()
{
  unint64_t result = qword_100E9BE40;
  if (!qword_100E9BE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BE40);
  }
  return result;
}

unint64_t sub_10086B13C()
{
  unint64_t result = qword_100E9BE48;
  if (!qword_100E9BE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BE48);
  }
  return result;
}

unint64_t sub_10086B18C()
{
  unint64_t result = qword_100E9BE50;
  if (!qword_100E9BE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BE50);
  }
  return result;
}

unint64_t sub_10086B1DC()
{
  unint64_t result = qword_100E9BE58;
  if (!qword_100E9BE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BE58);
  }
  return result;
}

unint64_t sub_10086B22C()
{
  unint64_t result = qword_100E9BE60;
  if (!qword_100E9BE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BE60);
  }
  return result;
}

unint64_t sub_10086B27C()
{
  unint64_t result = qword_100E9BE68;
  if (!qword_100E9BE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BE68);
  }
  return result;
}

unint64_t sub_10086B2CC()
{
  unint64_t result = qword_100E9BE70;
  if (!qword_100E9BE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BE70);
  }
  return result;
}

unint64_t sub_10086B31C()
{
  unint64_t result = qword_100E9BE78;
  if (!qword_100E9BE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BE78);
  }
  return result;
}

unint64_t sub_10086B36C()
{
  unint64_t result = qword_100E9BE80;
  if (!qword_100E9BE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BE80);
  }
  return result;
}

unint64_t sub_10086B3BC()
{
  unint64_t result = qword_100E9BE88;
  if (!qword_100E9BE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BE88);
  }
  return result;
}

unint64_t sub_10086B40C()
{
  unint64_t result = qword_100E9BE90;
  if (!qword_100E9BE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BE90);
  }
  return result;
}

unint64_t sub_10086B45C()
{
  unint64_t result = qword_100E9BE98;
  if (!qword_100E9BE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BE98);
  }
  return result;
}

unint64_t sub_10086B4AC()
{
  unint64_t result = qword_100E9BEA0;
  if (!qword_100E9BEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BEA0);
  }
  return result;
}

unint64_t sub_10086B4FC()
{
  unint64_t result = qword_100E9BEA8;
  if (!qword_100E9BEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BEA8);
  }
  return result;
}

unint64_t sub_10086B54C()
{
  unint64_t result = qword_100E9BEB0;
  if (!qword_100E9BEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BEB0);
  }
  return result;
}

unint64_t sub_10086B598(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_100195B7C(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (void *)(a2 + v9);
    sub_10017DF08(&qword_100E63BD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for Font.Context();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      void *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = a1 + v14;
    uint64_t v16 = a2 + v14;
    uint64_t v17 = *(void *)(a2 + v14 + 8);
    *(void *)uint64_t v15 = *(void *)(a2 + v14);
    *(void *)(v15 + 8) = v17;
    uint64_t v18 = *(void *)(a2 + v14 + 16);
    uint64_t v19 = *(void *)(v16 + 24);
    uint64_t v20 = *(void *)(v16 + 32);
    uint64_t v21 = *(void *)(v16 + 40);
    char v22 = *(unsigned char *)(v16 + 48);
    swift_bridgeObjectRetain();
    sub_100193004(v18, v19, v20, v21, v22);
    *(void *)(v15 + 16) = v18;
    *(void *)(v15 + 24) = v19;
    *(void *)(v15 + 32) = v20;
    *(void *)(v15 + 40) = v21;
    *(unsigned char *)(v15 + 48) = v22;
    uint64_t v23 = *(void *)(v16 + 64);
    *(void *)(v15 + 56) = *(void *)(v16 + 56);
    *(void *)(v15 + 64) = v23;
    uint64_t v24 = *(void *)(v16 + 80);
    *(void *)(v15 + 72) = *(void *)(v16 + 72);
    *(void *)(v15 + 80) = v24;
    uint64_t v25 = *(void *)(v16 + 96);
    *(void *)(v15 + 88) = *(void *)(v16 + 88);
    *(void *)(v15 + 96) = v25;
    uint64_t v26 = *(void *)(v16 + 112);
    *(void *)(v15 + 104) = *(void *)(v16 + 104);
    *(void *)(v15 + 112) = v26;
    uint64_t v27 = *(void *)(v16 + 128);
    *(void *)(v15 + 120) = *(void *)(v16 + 120);
    *(void *)(v15 + 128) = v27;
    *(unsigned char *)(v15 + 136) = *(unsigned char *)(v16 + 136);
    *(_WORD *)(v15 + 137) = *(_WORD *)(v16 + 137);
    uint64_t v28 = *(void *)(v16 + 152);
    *(void *)(v15 + 144) = *(void *)(v16 + 144);
    *(void *)(v15 + 152) = v28;
    *(unsigned char *)(v15 + 160) = *(unsigned char *)(v16 + 160);
    *(unsigned char *)(v15 + 161) = *(unsigned char *)(v16 + 161);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10086B79C(uint64_t a1, uint64_t a2)
{
  sub_10018F6D8(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_10017DF08(&qword_100E63BD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for Font.Context();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  sub_100191D78(*(void *)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), *(unsigned char *)(v6 + 48));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10086B89C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  sub_10017DF08(&qword_100E63BD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for Font.Context();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(a2 + v12 + 8);
  *(void *)uint64_t v13 = *(void *)(a2 + v12);
  *(void *)(v13 + 8) = v15;
  uint64_t v16 = *(void *)(a2 + v12 + 16);
  uint64_t v17 = *(void *)(v14 + 24);
  uint64_t v18 = *(void *)(v14 + 32);
  uint64_t v19 = *(void *)(v14 + 40);
  char v20 = *(unsigned char *)(v14 + 48);
  swift_bridgeObjectRetain();
  sub_100193004(v16, v17, v18, v19, v20);
  *(void *)(v13 + 16) = v16;
  *(void *)(v13 + 24) = v17;
  *(void *)(v13 + 32) = v18;
  *(void *)(v13 + 40) = v19;
  *(unsigned char *)(v13 + 48) = v20;
  uint64_t v21 = *(void *)(v14 + 64);
  *(void *)(v13 + 56) = *(void *)(v14 + 56);
  *(void *)(v13 + 64) = v21;
  uint64_t v22 = *(void *)(v14 + 80);
  *(void *)(v13 + 72) = *(void *)(v14 + 72);
  *(void *)(v13 + 80) = v22;
  uint64_t v23 = *(void *)(v14 + 96);
  *(void *)(v13 + 88) = *(void *)(v14 + 88);
  *(void *)(v13 + 96) = v23;
  uint64_t v24 = *(void *)(v14 + 112);
  *(void *)(v13 + 104) = *(void *)(v14 + 104);
  *(void *)(v13 + 112) = v24;
  uint64_t v25 = *(void *)(v14 + 128);
  *(void *)(v13 + 120) = *(void *)(v14 + 120);
  *(void *)(v13 + 128) = v25;
  *(unsigned char *)(v13 + 136) = *(unsigned char *)(v14 + 136);
  *(_WORD *)(v13 + 137) = *(_WORD *)(v14 + 137);
  uint64_t v26 = *(void *)(v14 + 152);
  *(void *)(v13 + 144) = *(void *)(v14 + 144);
  *(void *)(v13 + 152) = v26;
  *(unsigned char *)(v13 + 160) = *(unsigned char *)(v14 + 160);
  *(unsigned char *)(v13 + 161) = *(unsigned char *)(v14 + 161);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10086BA50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  if (a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    sub_1001781AC(a1 + v10, &qword_100E63BD8);
    sub_10017DF08(&qword_100E63BD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for Font.Context();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      void *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)uint64_t v15 = *(void *)(a2 + v14);
  *(void *)(v15 + 8) = *(void *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(v16 + 16);
  uint64_t v18 = *(void *)(v16 + 24);
  uint64_t v19 = *(void *)(v16 + 32);
  uint64_t v20 = *(void *)(v16 + 40);
  char v21 = *(unsigned char *)(v16 + 48);
  sub_100193004(v17, v18, v19, v20, v21);
  uint64_t v22 = *(void *)(v15 + 16);
  uint64_t v23 = *(void *)(v15 + 24);
  uint64_t v24 = *(void *)(v15 + 32);
  uint64_t v25 = *(void *)(v15 + 40);
  *(void *)(v15 + 16) = v17;
  *(void *)(v15 + 24) = v18;
  *(void *)(v15 + 32) = v19;
  *(void *)(v15 + 40) = v20;
  char v26 = *(unsigned char *)(v15 + 48);
  *(unsigned char *)(v15 + 48) = v21;
  sub_100191D78(v22, v23, v24, v25, v26);
  *(void *)(v15 + 56) = *(void *)(v16 + 56);
  *(void *)(v15 + 64) = *(void *)(v16 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v15 + 72) = *(void *)(v16 + 72);
  *(void *)(v15 + 80) = *(void *)(v16 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v15 + 88) = *(void *)(v16 + 88);
  *(void *)(v15 + 96) = *(void *)(v16 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v15 + 104) = *(void *)(v16 + 104);
  *(void *)(v15 + 112) = *(void *)(v16 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v15 + 120) = *(void *)(v16 + 120);
  *(void *)(v15 + 128) = *(void *)(v16 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v15 + 136) = *(unsigned char *)(v16 + 136);
  *(unsigned char *)(v15 + 137) = *(unsigned char *)(v16 + 137);
  *(unsigned char *)(v15 + 138) = *(unsigned char *)(v16 + 138);
  *(void *)(v15 + 144) = *(void *)(v16 + 144);
  *(void *)(v15 + 152) = *(void *)(v16 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v15 + 160) = *(unsigned char *)(v16 + 160);
  *(unsigned char *)(v15 + 161) = *(unsigned char *)(v16 + 161);
  return a1;
}

uint64_t sub_10086BCB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 20);
  char v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_10017DF08(&qword_100E63BD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for Font.Context();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  memcpy((void *)(a1 + *(int *)(a3 + 24)), (const void *)(a2 + *(int *)(a3 + 24)), 0xA2uLL);
  return a1;
}

uint64_t sub_10086BDB8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (char *)a2 + v10;
    sub_1001781AC(a1 + v10, &qword_100E63BD8);
    uint64_t v13 = sub_10017DF08(&qword_100E63BD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for Font.Context();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
  }
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (uint64_t)a2 + v15;
  uint64_t v18 = *(void *)(v17 + 8);
  *(void *)uint64_t v16 = *(void *)v17;
  *(void *)(v16 + 8) = v18;
  swift_bridgeObjectRelease();
  char v19 = *(unsigned char *)(v17 + 48);
  uint64_t v20 = *(void *)(v16 + 16);
  uint64_t v21 = *(void *)(v16 + 24);
  uint64_t v22 = *(void *)(v16 + 32);
  uint64_t v23 = *(void *)(v16 + 40);
  long long v24 = *(_OWORD *)(v17 + 32);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)(v17 + 16);
  *(_OWORD *)(v16 + 32) = v24;
  char v25 = *(unsigned char *)(v16 + 48);
  *(unsigned char *)(v16 + 48) = v19;
  sub_100191D78(v20, v21, v22, v23, v25);
  uint64_t v26 = *(void *)(v17 + 64);
  *(void *)(v16 + 56) = *(void *)(v17 + 56);
  *(void *)(v16 + 64) = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void *)(v17 + 80);
  *(void *)(v16 + 72) = *(void *)(v17 + 72);
  *(void *)(v16 + 80) = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(v17 + 96);
  *(void *)(v16 + 88) = *(void *)(v17 + 88);
  *(void *)(v16 + 96) = v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(v17 + 112);
  *(void *)(v16 + 104) = *(void *)(v17 + 104);
  *(void *)(v16 + 112) = v29;
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(v17 + 128);
  *(void *)(v16 + 120) = *(void *)(v17 + 120);
  *(void *)(v16 + 128) = v30;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 136) = *(unsigned char *)(v17 + 136);
  *(unsigned char *)(v16 + 137) = *(unsigned char *)(v17 + 137);
  *(unsigned char *)(v16 + 138) = *(unsigned char *)(v17 + 138);
  uint64_t v31 = *(void *)(v17 + 152);
  *(void *)(v16 + 144) = *(void *)(v17 + 144);
  *(void *)(v16 + 152) = v31;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 160) = *(unsigned char *)(v17 + 160);
  *(unsigned char *)(v16 + 161) = *(unsigned char *)(v17 + 161);
  return a1;
}

uint64_t sub_10086BF8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10086BFA0);
}

uint64_t sub_10086BFA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10017DF08(&qword_100E63C00);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  else
  {
    unint64_t v11 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_10086C038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10086C04C);
}

void sub_10086C04C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_10017DF08(&qword_100E63C00);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
}

uint64_t sub_10086C0E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10086C0FC()
{
  uint64_t v1 = type metadata accessor for Font.Leading();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E63F80);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)v0;
  char v9 = *(unsigned char *)(v0 + 8);
  sub_100195B7C(v8, v9);
  sub_100149AE8();
  sub_10018F6D8(v8, v9);
  static Font.Weight.thin.getter();
  uint64_t v10 = type metadata accessor for Font.Design();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 1, 1, v10);
  static Font.system(size:weight:design:)();
  sub_1001781AC((uint64_t)v7, &qword_100E63F80);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for Font.Leading.tight(_:), v1);
  uint64_t v11 = Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v11;
}

uint64_t sub_10086C2E0()
{
  uint64_t v1 = type metadata accessor for Font.Leading();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E63F80);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)v0;
  char v9 = *(unsigned char *)(v0 + 8);
  sub_100195B7C(v8, v9);
  sub_100149AE8();
  sub_10018F6D8(v8, v9);
  static Font.Weight.light.getter();
  uint64_t v10 = type metadata accessor for Font.Design();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 1, 1, v10);
  static Font.system(size:weight:design:)();
  sub_1001781AC((uint64_t)v7, &qword_100E63F80);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for Font.Leading.tight(_:), v1);
  uint64_t v11 = Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v11;
}

uint64_t sub_10086C4C4()
{
  uint64_t v1 = type metadata accessor for AccessibilityChildBehavior();
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  sub_10017DF08(&qword_100E9BF50);
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_10017DF08(&qword_100E9BF58);
  sub_100179C0C();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_1001626E0();
  uint64_t v18 = v17 - v16;
  *(void *)uint64_t v11 = static HorizontalAlignment.leading.getter();
  *(void *)(v11 + 8) = 0;
  *(unsigned char *)(v11 + 16) = 0;
  uint64_t v19 = sub_10017DF08(&qword_100E9BF60);
  sub_10086C6D0(v0, v11 + *(int *)(v19 + 44));
  static AccessibilityChildBehavior.combine.getter();
  sub_1001246C8(&qword_100E9BF68, &qword_100E9BF50);
  View.accessibilityElement(children:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v1);
  sub_1001781AC(v11, &qword_100E9BF50);
  swift_getOpaqueTypeConformance2();
  View.accessibilityRespondsToUserInteraction(_:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v18, v12);
}

uint64_t sub_10086C6D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E9BF70);
  __chkstk_darwin(v4 - 8);
  uint64_t v75 = (uint64_t)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v76 = (uint64_t *)((char *)&v72 - v7);
  uint64_t v8 = sub_10086CE04();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  static Color.black.getter();
  sub_10021FC00();
  Color.opacity(_:)();
  swift_release();
  sub_10021FC2C();
  sub_10021FC74();
  sub_10021FC50();
  uint64_t v80 = Text.shadow(color:radius:x:y:)();
  uint64_t v79 = v13;
  int v77 = v14;
  uint64_t v81 = v15;
  swift_release();
  sub_100191924(v8, v10, v12);
  swift_bridgeObjectRelease();
  uint64_t v16 = a1 + *(int *)(type metadata accessor for LocationHeaderViewLargeText() + 24);
  if (*(unsigned char *)(v16 + 48))
  {
    if (*(unsigned char *)(v16 + 48) == 1)
    {
      uint64_t v17 = *(void *)(v16 + 40);
      *(void *)&long long v85 = *(void *)(v16 + 32);
      *((void *)&v85 + 1) = v17;
      sub_10014A85C();
      swift_bridgeObjectRetain();
      uint64_t v18 = Text.init<A>(_:)();
      uint64_t v20 = v19;
      uint64_t v74 = a1;
      char v22 = v21 & 1;
      static Font.footnote.getter();
      uint64_t v23 = Text.font(_:)();
      uint64_t v78 = v24;
      char v26 = v25;
      swift_release();
      sub_100191924(v18, v20, v22);
      swift_bridgeObjectRelease();
      static Color.black.getter();
      sub_10021FC00();
      Color.opacity(_:)();
      swift_release();
      sub_10021FC2C();
      sub_10021FC74();
      sub_10021FC50();
      uint64_t v27 = v78;
      uint64_t v73 = Text.shadow(color:radius:x:y:)();
      uint64_t v29 = v28;
      char v31 = v30;
      uint64_t v33 = v32;
      swift_release();
      sub_100191924(v23, v27, v26 & 1);
      swift_bridgeObjectRelease();
      *(void *)&long long v82 = v73;
      *((void *)&v82 + 1) = v29;
      *(void *)&long long v83 = v31 & 1;
      *((void *)&v83 + 1) = v33;
      a1 = v74;
      __int16 v84 = 256;
    }
    else
    {
      LOBYTE(v84) = 0;
      long long v82 = 0u;
      long long v83 = 0u;
      _ConditionalContent<>.init(storage:)();
      long long v82 = v85;
      long long v83 = v86;
      __int16 v84 = v87;
    }
    sub_10017DF08(&qword_100E9BF78);
    sub_10086F49C();
    _ConditionalContent<>.init(storage:)();
  }
  else
  {
    uint64_t v34 = *(void *)(v16 + 24);
    *(void *)&long long v85 = *(void *)(v16 + 16);
    *((void *)&v85 + 1) = v34;
    sub_10014A85C();
    swift_bridgeObjectRetain();
    uint64_t v35 = Text.init<A>(_:)();
    uint64_t v37 = v36;
    uint64_t v74 = a1;
    char v39 = v38 & 1;
    static Font.footnote.getter();
    uint64_t v40 = Text.font(_:)();
    uint64_t v42 = v41;
    char v44 = v43;
    swift_release();
    sub_100191924(v35, v37, v39);
    swift_bridgeObjectRelease();
    static Color.black.getter();
    sub_10021FC00();
    Color.opacity(_:)();
    swift_release();
    sub_10021FC2C();
    sub_10021FC74();
    sub_10021FC50();
    uint64_t v45 = Text.shadow(color:radius:x:y:)();
    uint64_t v47 = v46;
    char v49 = v48;
    uint64_t v51 = v50;
    swift_release();
    uint64_t v52 = v49 & 1;
    sub_100191924(v40, v42, v44 & 1);
    swift_bridgeObjectRelease();
    *(void *)&long long v82 = v45;
    *((void *)&v82 + 1) = v47;
    *(void *)&long long v83 = v52;
    *((void *)&v83 + 1) = v51;
    LOBYTE(v84) = 1;
    sub_100190CC4(v45, v47, v52);
    swift_bridgeObjectRetain();
    _ConditionalContent<>.init(storage:)();
    long long v82 = v85;
    long long v83 = v86;
    __int16 v84 = v87;
    sub_10017DF08(&qword_100E9BF78);
    sub_10086F49C();
    _ConditionalContent<>.init(storage:)();
    char v53 = v52;
    a1 = v74;
    sub_100191924(v45, v47, v53);
    swift_bridgeObjectRelease();
  }
  uint64_t v78 = *((void *)&v85 + 1);
  uint64_t v54 = v85;
  long long v55 = v86;
  char v56 = v87;
  char v57 = v88;
  v77 &= 1u;
  char v58 = v77;
  uint64_t v59 = static Alignment.topLeading.getter();
  uint64_t v60 = (uint64_t)v76;
  *uint64_t v76 = v59;
  *(void *)(v60 + 8) = v61;
  uint64_t v62 = sub_10017DF08(&qword_100E9BF88);
  sub_10086CEF0(a1, v60 + *(int *)(v62 + 44));
  uint64_t v63 = v75;
  sub_10006DF38(v60, v75, &qword_100E9BF70);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  uint64_t v64 = v80;
  uint64_t v65 = v79;
  *(void *)(a2 + 16) = v80;
  *(void *)(a2 + 24) = v65;
  *(unsigned char *)(a2 + 32) = v58;
  *(void *)(a2 + 40) = v81;
  *(void *)(a2 + 48) = v54;
  *(void *)(a2 + 56) = v78;
  *(_OWORD *)(a2 + 64) = v55;
  *(unsigned char *)(a2 + 80) = v56;
  *(unsigned char *)(a2 + 81) = v57;
  uint64_t v66 = sub_10017DF08(&qword_100E9BF90);
  sub_10006DF38(v63, a2 + *(int *)(v66 + 80), &qword_100E9BF70);
  uint64_t v67 = a2 + *(int *)(v66 + 96);
  *(void *)uint64_t v67 = 0;
  *(unsigned char *)(v67 + 8) = 1;
  uint64_t v68 = v64;
  uint64_t v69 = v79;
  sub_100190CC4(v68, v79, v77);
  swift_bridgeObjectRetain();
  uint64_t v70 = v78;
  sub_10086F510(v54, v78, v55, *((uint64_t *)&v55 + 1), v56, v57);
  sub_1001781AC(v60, &qword_100E9BF70);
  sub_1001781AC(v63, &qword_100E9BF70);
  sub_10086F5B8(v54, v70, v55, *((uint64_t *)&v55 + 1), v56, v57);
  sub_100191924(v80, v69, v77);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10086CE04()
{
  type metadata accessor for LocationHeaderViewLargeText();
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v0 = Text.init<A>(_:)();
  uint64_t v2 = v1;
  char v4 = v3 & 1;
  static Font.largeTitle.getter();
  uint64_t v5 = Text.font(_:)();
  swift_release();
  sub_100191924(v0, v2, v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_10086CEF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v19[1] = a2;
  uint64_t v3 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E9BF98);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E9BFA0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v9 = static HorizontalAlignment.leading.getter();
  *((void *)v9 + 1) = 0;
  v9[16] = 0;
  sub_10017DF08(&qword_100E9BFA8);
  sub_10086D198(a1);
  static AccessibilityChildBehavior.ignore.getter();
  uint64_t v14 = sub_1001246C8(&qword_100E9BFB0, &qword_100E9BF98);
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1001781AC((uint64_t)v9, &qword_100E9BF98);
  uint64_t v15 = a1 + *(int *)(type metadata accessor for LocationHeaderViewLargeText() + 24);
  uint64_t v17 = *(void *)(v15 + 144);
  uint64_t v16 = *(void *)(v15 + 152);
  v19[4] = v17;
  v19[5] = v16;
  v19[2] = v7;
  v19[3] = v14;
  swift_getOpaqueTypeConformance2();
  sub_10014A85C();
  View.accessibilityLabel<A>(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_10086D198(uint64_t a1)
{
  __chkstk_darwin(a1);
  uint64_t v2 = v1;
  uint64_t v131 = v3;
  uint64_t v4 = type metadata accessor for _BlendModeEffect();
  __chkstk_darwin(v4 - 8);
  uint64_t v124 = (char *)&v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for BlendMode();
  uint64_t v122 = *(void *)(v6 - 8);
  uint64_t v123 = v6;
  __chkstk_darwin(v6);
  uint64_t v121 = (char *)&v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E6D330);
  __chkstk_darwin(v8 - 8);
  uint64_t v116 = (uint64_t)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v117 = (char *)&v109 - v11;
  uint64_t v12 = type metadata accessor for Font.TextStyle();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v109 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_10017DF08(&qword_100E63F78);
  __chkstk_darwin(v118);
  uint64_t v130 = (char *)&v109 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v109 - v18;
  uint64_t v20 = type metadata accessor for LocationHeaderViewLargeText();
  __chkstk_darwin(v20);
  uint64_t v120 = (uint64_t)&v109 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v119 = (uint64_t)&v109 - v23;
  __chkstk_darwin(v24);
  char v26 = (char *)&v109 - v25;
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v109 - v28;
  sub_10086DD84(v2, &v142);
  uint64_t v128 = *((void *)&v142 + 1);
  uint64_t v129 = v142;
  uint64_t v126 = v144;
  uint64_t v127 = v143;
  int v125 = v145;
  uint64_t v132 = v2 + *(int *)(v20 + 24);
  int v30 = *(unsigned __int8 *)(v132 + 136);
  sub_10086F694(v2, (uint64_t)v29, (void (*)(void))type metadata accessor for LocationHeaderViewLargeText);
  uint64_t v133 = v2;
  uint64_t v134 = v19;
  uint64_t v109 = v20;
  if (v30 != 1)
  {
    sub_10086F6E8((uint64_t)v29, (void (*)(void))type metadata accessor for LocationHeaderViewLargeText);
    sub_10086F694(v2, (uint64_t)v26, (void (*)(void))type metadata accessor for LocationHeaderViewLargeText);
LABEL_12:
    sub_10086F6E8((uint64_t)v26, (void (*)(void))type metadata accessor for LocationHeaderViewLargeText);
    goto LABEL_13;
  }
  char v31 = &v29[*(int *)(v20 + 24)];
  uint64_t v33 = *((void *)v31 + 13);
  unint64_t v32 = *((void *)v31 + 14);
  uint64_t v34 = v33 & 0xFFFFFFFFFFFFLL;
  if ((v32 & 0x2000000000000000) != 0) {
    uint64_t v35 = HIBYTE(v32) & 0xF;
  }
  else {
    uint64_t v35 = v34;
  }
  sub_10086F6E8((uint64_t)v29, (void (*)(void))type metadata accessor for LocationHeaderViewLargeText);
  sub_10086F694(v2, (uint64_t)v26, (void (*)(void))type metadata accessor for LocationHeaderViewLargeText);
  if (!v35) {
    goto LABEL_12;
  }
  uint64_t v36 = &v26[*(int *)(v109 + 24)];
  uint64_t v38 = *((void *)v36 + 15);
  unint64_t v37 = *((void *)v36 + 16);
  uint64_t v39 = v38 & 0xFFFFFFFFFFFFLL;
  if ((v37 & 0x2000000000000000) != 0) {
    uint64_t v40 = HIBYTE(v37) & 0xF;
  }
  else {
    uint64_t v40 = v39;
  }
  sub_10086F6E8((uint64_t)v26, (void (*)(void))type metadata accessor for LocationHeaderViewLargeText);
  if (v40)
  {
    sub_10086E378(v140);
    memcpy(v141, v140, 0x26BuLL);
    LocationSearchEntityFromStringResolver.init()();
    goto LABEL_14;
  }
LABEL_13:
  sub_10086F660((uint64_t)v141);
LABEL_14:
  sub_10020E72C((uint64_t)v141, (uint64_t)&v142, &qword_100E9BFB8);
  uint64_t v41 = *(void *)(v132 + 64);
  v141[0] = *(void *)(v132 + 56);
  v141[1] = v41;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v42 = Text.init<A>(_:)();
  uint64_t v113 = v43;
  uint64_t v114 = v42;
  uint64_t v115 = v44;
  int v112 = v45 & 1;
  uint64_t v46 = *(void (**)(char *, void, uint64_t))(v13 + 104);
  v46(v15, enum case for Font.TextStyle.title3(_:), v12);
  static Font.Weight.medium.getter();
  uint64_t v47 = static Font.system(_:weight:)();
  char v48 = *(void (**)(char *, uint64_t))(v13 + 8);
  v48(v15, v12);
  v46(v15, enum case for Font.TextStyle.body(_:), v12);
  static Font.Weight.medium.getter();
  uint64_t v49 = static Font.system(_:weight:)();
  v48(v15, v12);
  uint64_t v50 = *(void *)v133;
  LOBYTE(v46) = *(unsigned char *)(v133 + 8);
  sub_100195B7C(*(void *)v133, (char)v46);
  sub_100149AE8();
  char v52 = v51;
  sub_10018F6D8(v50, (char)v46);
  uint64_t v53 = enum case for Font.Leading.tight(_:);
  uint64_t v54 = type metadata accessor for Font.Leading();
  uint64_t v55 = (uint64_t)v117;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 104))(v117, v53, v54);
  _s7Weather24LocationCompositionStateOwst_0(v55, 0, 1, v54);
  uint64_t v56 = v116;
  sub_10006DF38(v55, v116, &qword_100E6D330);
  swift_retain();
  swift_retain();
  sub_10014A8A8(v47, v49, v52 & 1, v56);
  uint64_t v58 = v113;
  uint64_t v57 = v114;
  char v59 = v112;
  uint64_t v60 = Text.font(_:)();
  uint64_t v110 = v61;
  uint64_t v111 = v60;
  LOBYTE(v48) = v62;
  uint64_t v116 = v63;
  swift_release();
  swift_release();
  swift_release();
  LOBYTE(v49) = v48 & 1;
  sub_100191924(v57, v58, v59);
  swift_bridgeObjectRelease();
  sub_1001781AC(v55, &qword_100E6D330);
  static Color.black.getter();
  sub_10021FC00();
  Color.opacity(_:)();
  swift_release();
  sub_10021FC2C();
  sub_10021FC74();
  sub_10021FC50();
  uint64_t v65 = v110;
  uint64_t v64 = v111;
  uint64_t v66 = Text.shadow(color:radius:x:y:)();
  uint64_t v68 = v67;
  LOBYTE(v57) = v69;
  swift_release();
  sub_100191924(v64, v65, v49);
  swift_bridgeObjectRelease();
  LODWORD(v141[0]) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v117 = (char *)Text.foregroundStyle<A>(_:)();
  uint64_t v71 = v70;
  uint64_t v73 = v72;
  LOBYTE(v49) = v74 & 1;
  sub_100191924(v66, v68, v57 & 1);
  swift_bridgeObjectRelease();
  uint64_t v75 = v121;
  uint64_t v76 = v122;
  uint64_t v77 = v123;
  (*(void (**)(char *, void, uint64_t))(v122 + 104))(v121, enum case for BlendMode.plusLighter(_:), v123);
  uint64_t v78 = (uint64_t)v124;
  (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v124, v75, v77);
  uint64_t v79 = v130;
  sub_10086F694(v78, (uint64_t)&v130[*(int *)(v118 + 36)], (void (*)(void))&type metadata accessor for _BlendModeEffect);
  uint64_t v80 = (uint64_t)v117;
  *(void *)uint64_t v79 = v117;
  *((void *)v79 + 1) = v71;
  uint64_t v81 = v71;
  uint64_t v116 = v71;
  v79[16] = v49;
  *((void *)v79 + 3) = v73;
  uint64_t v82 = v80;
  sub_100190CC4(v80, v81, v49);
  swift_bridgeObjectRetain();
  sub_10086F6E8(v78, (void (*)(void))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v75, v77);
  sub_100191924(v82, v116, v49);
  swift_bridgeObjectRelease();
  uint64_t v83 = (uint64_t)v79;
  uint64_t v84 = (uint64_t)v79;
  uint64_t v86 = v133;
  uint64_t v85 = (uint64_t)v134;
  sub_10020E72C(v84, (uint64_t)v134, &qword_100E63F78);
  LOBYTE(v75) = *(unsigned char *)(v132 + 136);
  uint64_t v87 = v119;
  sub_10086F694(v86, v119, (void (*)(void))type metadata accessor for LocationHeaderViewLargeText);
  if (v75)
  {
    sub_10086F6E8(v87, (void (*)(void))type metadata accessor for LocationHeaderViewLargeText);
    uint64_t v88 = v120;
    sub_10086F694(v86, v120, (void (*)(void))type metadata accessor for LocationHeaderViewLargeText);
LABEL_25:
    sub_10086F6E8(v88, (void (*)(void))type metadata accessor for LocationHeaderViewLargeText);
LABEL_26:
    sub_10086F660((uint64_t)v140);
    goto LABEL_27;
  }
  uint64_t v89 = v109;
  uint64_t v90 = v87 + *(int *)(v109 + 24);
  uint64_t v92 = *(void *)(v90 + 104);
  unint64_t v91 = *(void *)(v90 + 112);
  uint64_t v93 = v92 & 0xFFFFFFFFFFFFLL;
  if ((v91 & 0x2000000000000000) != 0) {
    uint64_t v94 = HIBYTE(v91) & 0xF;
  }
  else {
    uint64_t v94 = v93;
  }
  sub_10086F6E8(v87, (void (*)(void))type metadata accessor for LocationHeaderViewLargeText);
  uint64_t v88 = v120;
  sub_10086F694(v86, v120, (void (*)(void))type metadata accessor for LocationHeaderViewLargeText);
  if (!v94) {
    goto LABEL_25;
  }
  uint64_t v95 = v88 + *(int *)(v89 + 24);
  uint64_t v97 = *(void *)(v95 + 120);
  unint64_t v96 = *(void *)(v95 + 128);
  uint64_t v98 = v97 & 0xFFFFFFFFFFFFLL;
  if ((v96 & 0x2000000000000000) != 0) {
    uint64_t v99 = HIBYTE(v96) & 0xF;
  }
  else {
    uint64_t v99 = v98;
  }
  sub_10086F6E8(v88, (void (*)(void))type metadata accessor for LocationHeaderViewLargeText);
  if (!v99) {
    goto LABEL_26;
  }
  sub_10086E378(v139);
  memcpy(v140, v139, 0x26BuLL);
  LocationSearchEntityFromStringResolver.init()();
LABEL_27:
  sub_10020E72C((uint64_t)v140, (uint64_t)v141, &qword_100E9BFB8);
  sub_10020E72C((uint64_t)&v142, (uint64_t)v136, &qword_100E9BFB8);
  uint64_t v100 = v83;
  sub_10006DF38(v85, v83, &qword_100E63F78);
  sub_10020E72C((uint64_t)v141, (uint64_t)v135, &qword_100E9BFB8);
  uint64_t v101 = v131;
  uint64_t v103 = v128;
  uint64_t v102 = v129;
  *uint64_t v131 = v129;
  v101[1] = v103;
  uint64_t v104 = v126;
  char v105 = v127;
  v101[2] = v127;
  v101[3] = v104;
  *((unsigned char *)v101 + 32) = v125;
  sub_10020E72C((uint64_t)v136, (uint64_t)v137, &qword_100E9BFB8);
  sub_10020E72C((uint64_t)v137, (uint64_t)(v101 + 5), &qword_100E9BFB8);
  uint64_t v106 = sub_10017DF08(&qword_100E9BFC0);
  sub_10006DF38(v100, (uint64_t)v101 + *(int *)(v106 + 64), &qword_100E63F78);
  uint64_t v107 = (uint64_t)v101 + *(int *)(v106 + 80);
  sub_10020E72C((uint64_t)v135, (uint64_t)v138, &qword_100E9BFB8);
  sub_10020E72C((uint64_t)v138, v107, &qword_100E9BFB8);
  sub_10020C79C(v102, v103, v105);
  sub_10086FCC8(v137, sub_10086F740);
  sub_10086FCC8(v138, sub_10086F740);
  sub_1001781AC((uint64_t)v134, &qword_100E63F78);
  sub_10020E72C((uint64_t)v135, (uint64_t)v139, &qword_100E9BFB8);
  sub_10086FCC8(v139, sub_10086FDE8);
  sub_1001781AC(v100, &qword_100E63F78);
  sub_10020E72C((uint64_t)v136, (uint64_t)v140, &qword_100E9BFB8);
  sub_10086FCC8(v140, sub_10086FDE8);
  return sub_10020C7D8(v102, v103, v105);
}

double sub_10086DD84@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v80 = a2;
  uint64_t v3 = type metadata accessor for Font.Context();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LocationHeaderViewLargeText();
  uint64_t v8 = (void *)(a1 + *(int *)(v7 + 24));
  uint64_t v9 = v8[12];
  if (v9)
  {
    uint64_t v72 = v8[11];
    uint64_t v75 = v4;
    uint64_t v10 = v8[10];
    *(void *)&long long v86 = v8[9];
    *((void *)&v86 + 1) = v10;
    uint64_t v73 = v7;
    sub_10014A85C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v11 = Text.init<A>(_:)();
    uint64_t v74 = v3;
    uint64_t v13 = v12;
    char v15 = v14 & 1;
    sub_10086C0FC();
    uint64_t v78 = Text.font(_:)();
    uint64_t v77 = v16;
    char v18 = v17;
    uint64_t v79 = v19;
    swift_release();
    int v76 = v18 & 1;
    sub_100191924(v11, v13, v15);
    swift_bridgeObjectRelease();
    *(void *)&long long v86 = v72;
    *((void *)&v86 + 1) = v9;
    uint64_t v20 = Text.init<A>(_:)();
    uint64_t v22 = v21;
    char v24 = v23 & 1;
    sub_10086C2E0();
    uint64_t v71 = Text.font(_:)();
    uint64_t v26 = v25;
    LOBYTE(v11) = v27;
    uint64_t v72 = v28;
    swift_release();
    sub_100191924(v20, v22, v24);
    swift_bridgeObjectRelease();
    sub_10086C0FC();
    sub_10020CEDC();
    Font.capHeight(in:)();
    swift_release();
    uint64_t v29 = *(void (**)(char *, uint64_t))(v75 + 8);
    uint64_t v30 = v74;
    v29(v6, v74);
    sub_10086C2E0();
    sub_10020CEDC();
    Font.capHeight(in:)();
    swift_release();
    v29(v6, v30);
    uint64_t v31 = v71;
    uint64_t v32 = Text.baselineOffset(_:)();
    uint64_t v34 = v33;
    char v36 = v35 & 1;
    sub_100191924(v31, v26, v11 & 1);
    swift_bridgeObjectRelease();
    static Color.black.getter();
    sub_10021FC00();
    Color.opacity(_:)();
    swift_release();
    sub_10021FC2C();
    sub_10021FC74();
    sub_10021FC50();
    uint64_t v37 = Text.shadow(color:radius:x:y:)();
    uint64_t v39 = v38;
    LOBYTE(v30) = v40;
    swift_release();
    char v41 = v30 & 1;
    sub_100191924(v32, v34, v36);
    swift_bridgeObjectRelease();
    uint64_t v42 = v78;
    uint64_t v43 = v77;
    LOBYTE(v11) = v76;
    uint64_t v75 = static Text.+ infix(_:_:)();
    uint64_t v74 = v44;
    uint64_t v46 = v45;
    uint64_t v48 = v47 & 1;
    sub_100191924(v37, v39, v41);
    swift_bridgeObjectRelease();
    sub_100191924(v42, v43, v11);
    swift_bridgeObjectRelease();
    uint64_t v81 = v75;
    uint64_t v82 = v74;
    uint64_t v83 = v48;
    uint64_t v84 = v46;
    char v85 = 0;
  }
  else
  {
    uint64_t v49 = v8[10];
    *(void *)&long long v86 = v8[9];
    *((void *)&v86 + 1) = v49;
    sub_10014A85C();
    swift_bridgeObjectRetain();
    uint64_t v50 = Text.init<A>(_:)();
    uint64_t v52 = v51;
    char v54 = v53 & 1;
    sub_10086C0FC();
    uint64_t v55 = Text.font(_:)();
    uint64_t v57 = v56;
    char v59 = v58;
    swift_release();
    sub_100191924(v50, v52, v54);
    swift_bridgeObjectRelease();
    static Color.black.getter();
    sub_10021FC00();
    Color.opacity(_:)();
    swift_release();
    sub_10021FC2C();
    sub_10021FC74();
    sub_10021FC50();
    uint64_t v60 = Text.shadow(color:radius:x:y:)();
    uint64_t v62 = v61;
    LOBYTE(v52) = v63;
    uint64_t v65 = v64;
    swift_release();
    sub_100191924(v55, v57, v59 & 1);
    swift_bridgeObjectRelease();
    uint64_t v81 = v60;
    uint64_t v82 = v62;
    uint64_t v83 = v52 & 1;
    uint64_t v84 = v65;
    char v85 = 1;
  }
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v86;
  long long v67 = v87;
  char v68 = v88;
  char v69 = v80;
  *uint64_t v80 = v86;
  v69[1] = v67;
  *((unsigned char *)v69 + 32) = v68;
  return result;
}

void *sub_10086E378@<X0>(void *a1@<X8>)
{
  uint64_t v66 = a1;
  uint64_t v2 = sub_10017DF08(&qword_100E6D330);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v58 - v6;
  uint64_t v8 = type metadata accessor for Font.TextStyle();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = v1 + *(int *)(type metadata accessor for LocationHeaderViewLargeText() + 24);
  if (*(unsigned char *)(v13 + 136) == 1)
  {
    char v14 = self;
    id v15 = [v14 mainBundle];
    v76._uint64_t countAndFlagsBits = 0xD000000000000051;
    v76._object = (void *)0x8000000100CB43A0;
    v16._uint64_t countAndFlagsBits = 0x98ABE9809CE6;
    v16._object = (void *)0xA600000000000000;
    v17._uint64_t countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v76);

    id v19 = [v14 mainBundle];
    v77._object = (void *)0x8000000100CB4400;
    v20._uint64_t countAndFlagsBits = 0x8EBDE4809CE6;
    v20._object = (void *)0xA600000000000000;
    v21._uint64_t countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    v77._uint64_t countAndFlagsBits = 0xD000000000000050;
    Swift::String v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v19, v21, v77);

    uint64_t v23 = static VerticalAlignment.center.getter();
    sub_10086EA1C(v18._countAndFlagsBits, (unint64_t)v18._object, v1, v22._countAndFlagsBits, (unint64_t)v22._object, (uint64_t)v67);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v68[600] = 0;
    memcpy(&v68[7], v67, 0x250uLL);
    uint64_t v70 = v23;
    uint64_t v71 = 0x4020000000000000;
    char v72 = 0;
    memcpy(v73, v68, sizeof(v73));
    __int16 v74 = 256;
    sub_10087041C((uint64_t)&v70);
  }
  else
  {
    uint64_t v65 = v7;
    LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v24._uint64_t countAndFlagsBits = 14920;
    v24._object = (void *)0xE200000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v24);
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(*(Swift::String *)(v13 + 104));
    v25._uint64_t countAndFlagsBits = 978067488;
    v25._object = (void *)0xE400000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v25);
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(*(Swift::String *)(v13 + 120));
    v26._uint64_t countAndFlagsBits = 0;
    v26._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v26);
    LocalizedStringKey.init(stringInterpolation:)();
    uint64_t v27 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v58 = v28;
    uint64_t v59 = v1;
    uint64_t v29 = v27;
    uint64_t v31 = v30;
    char v33 = v32 & 1;
    static Color.black.getter();
    sub_10021FC00();
    Color.opacity(_:)();
    uint64_t v64 = v4;
    swift_release();
    sub_10021FC2C();
    sub_10021FC74();
    sub_10021FC50();
    uint64_t v34 = Text.shadow(color:radius:x:y:)();
    uint64_t v61 = v35;
    uint64_t v62 = v34;
    char v37 = v36;
    uint64_t v63 = v38;
    swift_release();
    int v60 = v37 & 1;
    sub_100191924(v29, v31, v33);
    swift_bridgeObjectRelease();
    uint64_t v39 = *(void (**)(char *, void, uint64_t))(v9 + 104);
    v39(v11, enum case for Font.TextStyle.title3(_:), v8);
    static Font.Weight.medium.getter();
    uint64_t v40 = static Font.system(_:weight:)();
    char v41 = *(void (**)(char *, uint64_t))(v9 + 8);
    v41(v11, v8);
    v39(v11, enum case for Font.TextStyle.body(_:), v8);
    static Font.Weight.medium.getter();
    uint64_t v42 = static Font.system(_:weight:)();
    v41(v11, v8);
    uint64_t v43 = *(void *)v59;
    LOBYTE(v39) = *(unsigned char *)(v59 + 8);
    sub_100195B7C(*(void *)v59, (char)v39);
    sub_100149AE8();
    char v45 = v44;
    sub_10018F6D8(v43, (char)v39);
    uint64_t v46 = enum case for Font.Leading.tight(_:);
    uint64_t v47 = type metadata accessor for Font.Leading();
    uint64_t v48 = (uint64_t)v65;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 104))(v65, v46, v47);
    _s7Weather24LocationCompositionStateOwst_0(v48, 0, 1, v47);
    uint64_t v49 = (uint64_t)v64;
    sub_10006DF38(v48, (uint64_t)v64, &qword_100E6D330);
    swift_retain();
    swift_retain();
    sub_10014A8A8(v40, v42, v45 & 1, v49);
    uint64_t v50 = v61;
    uint64_t v51 = v62;
    LOBYTE(v42) = v60;
    uint64_t v59 = Text.font(_:)();
    uint64_t v53 = v52;
    char v55 = v54;
    uint64_t v64 = (char *)v56;
    swift_release();
    swift_release();
    swift_release();
    sub_100191924(v51, v50, v42);
    swift_bridgeObjectRelease();
    sub_1001781AC((uint64_t)v65, &qword_100E6D330);
    uint64_t v70 = v59;
    uint64_t v71 = v53;
    char v72 = v55 & 1;
    *(void *)&v73[7] = v64;
    sub_100870370((uint64_t)&v70);
  }
  sub_10020E72C((uint64_t)&v70, (uint64_t)&v69, &qword_100E9BFC8);
  sub_10017DF08(&qword_100E9BFD0);
  sub_10087037C();
  _ConditionalContent<>.init(storage:)();
  return memcpy(v66, v75, 0x26BuLL);
}

uint64_t sub_10086EA1C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v60 = a4;
  unint64_t v61 = a5;
  uint64_t v64 = a6;
  uint64_t v9 = type metadata accessor for Font.Leading();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = static HorizontalAlignment.center.getter();
  uint64_t v52 = a3;
  sub_10086F064(a1, a2);
  v89[216] = 0;
  memcpy(&v89[7], v88, 0xD0uLL);
  int v62 = 0;
  memcpy(v90, v89, sizeof(v90));
  char v55 = (void *)(a3 + *(int *)(type metadata accessor for LocationHeaderViewLargeText() + 24));
  uint64_t v13 = v55[14];
  v95[0] = v55[13];
  v95[1] = v13;
  unint64_t v54 = sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v50 = Text.init<A>(_:)();
  uint64_t v51 = v14;
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  sub_100870424();
  UIFontTextStyle v53 = UIFontTextStyleBody;
  static UIFont.scaledSystemFont(ofSize:style:maxSize:weight:traits:)();
  Font.init(_:)();
  unsigned int v44 = enum case for Font.Leading.tight(_:);
  uint64_t v43 = *(void (**)(char *))(v10 + 104);
  uint64_t v41 = v9;
  v43(v12);
  uint64_t v40 = v12;
  Font.leading(_:)();
  swift_release();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v10 + 8);
  v42(v12, v9);
  uint64_t v19 = v50;
  uint64_t v20 = Text.font(_:)();
  uint64_t v57 = v21;
  uint64_t v58 = v20;
  int v56 = v22;
  uint64_t v59 = v23;
  swift_release();
  sub_100191924(v19, v16, v18);
  swift_bridgeObjectRelease();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v51 = v82[36];
  LODWORD(v50) = v83;
  uint64_t v49 = v84;
  int v48 = v85;
  uint64_t v46 = v87;
  uint64_t v47 = v86;
  uint64_t v45 = static HorizontalAlignment.center.getter();
  sub_10086F064(v60, v61);
  v92[216] = 0;
  memcpy(&v92[7], v91, 0xD0uLL);
  LODWORD(v61) = 0;
  memcpy(v93, v92, sizeof(v93));
  uint64_t v24 = v55[16];
  v95[0] = v55[15];
  v95[1] = v24;
  swift_bridgeObjectRetain();
  uint64_t v25 = Text.init<A>(_:)();
  uint64_t v27 = v26;
  char v29 = v28 & 1;
  static UIFont.scaledSystemFont(ofSize:style:maxSize:weight:traits:)();
  Font.init(_:)();
  uint64_t v31 = v40;
  uint64_t v30 = v41;
  ((void (*)(char *, void, uint64_t))v43)(v40, v44, v41);
  Font.leading(_:)();
  swift_release();
  v42(v31, v30);
  uint64_t v32 = Text.font(_:)();
  uint64_t v34 = v33;
  LOBYTE(v31) = v35;
  uint64_t v37 = v36;
  swift_release();
  sub_100191924(v25, v27, v29);
  swift_bridgeObjectRelease();
  v82[0] = v63;
  v82[1] = 0;
  LOBYTE(v82[2]) = v62;
  memcpy((char *)&v82[2] + 1, v90, 0xD7uLL);
  uint64_t v78 = v58;
  uint64_t v79 = v57;
  char v80 = v56 & 1;
  uint64_t v81 = v59;
  v82[29] = v82;
  v82[30] = &v78;
  uint64_t v70 = 0;
  char v71 = 1;
  uint64_t v72 = v51;
  char v73 = v50;
  uint64_t v74 = v49;
  char v75 = v48;
  uint64_t v76 = v47;
  uint64_t v77 = v46;
  v82[31] = &v70;
  v69[0] = v45;
  v69[1] = 0;
  LOBYTE(v69[2]) = v61;
  memcpy((char *)&v69[2] + 1, v93, 0xD7uLL);
  uint64_t v65 = v32;
  uint64_t v66 = v34;
  char v67 = v31 & 1;
  uint64_t v68 = v37;
  v82[32] = v69;
  v82[33] = &v65;
  sub_1004B9B80();
  sub_100191924(v65, v66, v67);
  swift_bridgeObjectRelease();
  memcpy(v94, v69, sizeof(v94));
  sub_100870464((uint64_t)v94);
  sub_100191924(v78, v79, v80);
  swift_bridgeObjectRelease();
  memcpy(v95, v82, 0xE8uLL);
  return sub_100870464((uint64_t)v95);
}

unint64_t sub_10086EF8C(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0) {
      uint64_t v3 = HIBYTE(a3) & 0xF;
    }
    else {
      uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
    }
    double result = String.index(_:offsetBy:limitedBy:)();
    if (v4) {
      double result = 15;
    }
    if (4 * v3 >= result >> 14)
    {
      uint64_t v5 = String.subscript.getter();
      swift_bridgeObjectRelease();
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10086F064(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = type metadata accessor for Font.Leading();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  static Alignment.center.getter();
  sub_1001A0EE4();
  swift_bridgeObjectRetain();
  uint64_t v62 = sub_1002B42C8(1);
  uint64_t v63 = v9;
  uint64_t v64 = v10;
  uint64_t v65 = v11;
  sub_100342D18();
  uint64_t v12 = Text.init<A>(_:)();
  uint64_t v35 = v13;
  char v15 = v14 & 1;
  sub_100870424();
  static UIFont.scaledSystemFont(ofSize:style:maxSize:weight:traits:)();
  Font.init(_:)();
  unsigned int v38 = enum case for Font.Leading.tight(_:);
  uint64_t v37 = *(void (**)(uint64_t))(v4 + 104);
  v37(v8);
  Font.leading(_:)();
  swift_release();
  uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v36(v8, v2);
  uint64_t v16 = Text.font(_:)();
  uint64_t v42 = v17;
  uint64_t v43 = v16;
  char v41 = v18;
  uint64_t v44 = v19;
  swift_release();
  sub_100191924(v12, v35, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10086EF8C(1uLL, a1, a2);
  uint64_t v63 = v20;
  uint64_t v65 = v21;
  uint64_t v22 = Text.init<A>(_:)();
  uint64_t v24 = v23;
  char v26 = v25 & 1;
  static UIFont.scaledSystemFont(ofSize:style:maxSize:weight:traits:)();
  Font.init(_:)();
  ((void (*)(uint64_t, void, uint64_t))v37)(v8, v38, v2);
  Font.leading(_:)();
  swift_release();
  v36(v8, v2);
  uint64_t v27 = Text.font(_:)();
  uint64_t v29 = v28;
  char v31 = v30;
  uint64_t v33 = v32;
  swift_release();
  sub_100191924(v22, v24, v26);
  swift_bridgeObjectRelease();
  static Alignment.center.getter();
  sub_1001A0EE4();
  uint64_t v62 = 0;
  LOBYTE(v63) = 1;
  uint64_t v64 = v75;
  LOBYTE(v65) = v76;
  uint64_t v66 = v77;
  char v67 = v78;
  uint64_t v68 = v79;
  uint64_t v69 = v80;
  uint64_t v58 = v43;
  uint64_t v59 = v42;
  char v60 = v41 & 1;
  uint64_t v61 = v44;
  uint64_t v70 = &v62;
  char v71 = &v58;
  uint64_t v55 = v33;
  uint64_t v56 = 0;
  char v57 = 0;
  uint64_t v52 = v27;
  uint64_t v53 = v29;
  char v54 = v31 & 1;
  uint64_t v72 = &v56;
  char v73 = &v52;
  uint64_t v45 = 0;
  char v46 = 1;
  uint64_t v47 = v81;
  char v48 = v82;
  uint64_t v49 = v83;
  char v50 = v84;
  long long v51 = v85;
  uint64_t v74 = &v45;
  sub_1004B9D18();
  sub_100191924(v52, v53, v54);
  swift_bridgeObjectRelease();
  sub_100191924(v58, v59, v60);
  return swift_bridgeObjectRelease();
}

unint64_t sub_10086F49C()
{
  unint64_t result = qword_100E9BF80;
  if (!qword_100E9BF80)
  {
    sub_10018C6DC(&qword_100E9BF78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BF80);
  }
  return result;
}

uint64_t sub_10086F510(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, char a6)
{
  if (a6)
  {
    sub_100190CC4(a1, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  else
  {
    char v7 = a5 & 1;
    return sub_10086F574(a1, a2, a3, a4, v7);
  }
}

uint64_t sub_10086F574(uint64_t result, uint64_t a2, char a3, uint64_t a4, char a5)
{
  if (a5)
  {
    sub_100190CC4(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10086F5B8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, char a6)
{
  if (a6)
  {
    sub_100191924(a1, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = a5 & 1;
    return sub_10086F61C(a1, a2, a3, a4, v7);
  }
}

uint64_t sub_10086F61C(uint64_t result, uint64_t a2, char a3, uint64_t a4, char a5)
{
  if (a5)
  {
    sub_100191924(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_10086F660(uint64_t a1)
{
  *(unsigned char *)(a1 + 618) = -1;
  *(_WORD *)(a1 + 616) = 0;
}

uint64_t sub_10086F694(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_10086F6E8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10086F740(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v63 = STACK[0x428];
  if (BYTE2(LODWORD(STACK[0x428])) != 255)
  {
    unint64_t v68 = STACK[0x420];
    unint64_t v64 = STACK[0x418];
    unint64_t v65 = STACK[0x410];
    unint64_t v66 = STACK[0x408];
    unint64_t v67 = STACK[0x400];
    LOWORD(STACK[0x428]) = v63;
    STACK[0x420] = v68;
    STACK[0x418] = v64;
    STACK[0x410] = v65;
    STACK[0x408] = v66;
    STACK[0x400] = v67;
    LOBYTE(STACK[0x42A]) = BYTE2(v63) & 1;
    return sub_10086FB64(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48,
             a49,
             a50,
             a51,
             a52,
             a53,
             a54,
             a55,
             a56,
             a57,
             a58,
             a59,
             a60,
             a61,
             a62,
             a63);
  }
  return result;
}

uint64_t sub_10086FB64(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (STACK[0x2EA])
  {
    char v64 = a3 & 1;
  }
  else
  {
    unint64_t v68 = STACK[0x2D0];
    unint64_t v67 = STACK[0x2C8];
    char v66 = STACK[0x2D8] & 1;
    sub_100190CC4(a15, a16, a17 & 1);
    swift_bridgeObjectRetain();
    sub_100190CC4(a21, a22, a23 & 1);
    swift_bridgeObjectRetain();
    sub_100190CC4(a33, a34, a35 & 1);
    swift_bridgeObjectRetain();
    sub_100190CC4(a56, a57, a58 & 1);
    swift_bridgeObjectRetain();
    sub_100190CC4(a62, a63, a64 & 1);
    swift_bridgeObjectRetain();
    a1 = v67;
    a2 = v68;
    char v64 = v66;
  }
  sub_100190CC4(a1, a2, v64);

  return swift_bridgeObjectRetain();
}

#error "10086FDC0: call analysis failed (funcsize=72)"

uint64_t sub_10086FDE8(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v63 = STACK[0x428];
  if (BYTE2(LODWORD(STACK[0x428])) != 255)
  {
    unint64_t v68 = STACK[0x420];
    unint64_t v64 = STACK[0x418];
    unint64_t v65 = STACK[0x410];
    unint64_t v66 = STACK[0x408];
    unint64_t v67 = STACK[0x400];
    LOWORD(STACK[0x428]) = v63;
    STACK[0x420] = v68;
    STACK[0x418] = v64;
    STACK[0x410] = v65;
    STACK[0x408] = v66;
    STACK[0x400] = v67;
    LOBYTE(STACK[0x42A]) = BYTE2(v63) & 1;
    return sub_10087020C(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48,
             a49,
             a50,
             a51,
             a52,
             a53,
             a54,
             a55,
             a56,
             a57,
             a58,
             a59,
             a60,
             a61,
             a62,
             a63);
  }
  return result;
}

uint64_t sub_10087020C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (STACK[0x2EA])
  {
    char v64 = a3 & 1;
  }
  else
  {
    unint64_t v68 = STACK[0x2D0];
    unint64_t v67 = STACK[0x2C8];
    char v66 = STACK[0x2D8] & 1;
    sub_100191924(a15, a16, a17 & 1);
    swift_bridgeObjectRelease();
    sub_100191924(a21, a22, a23 & 1);
    swift_bridgeObjectRelease();
    sub_100191924(a33, a34, a35 & 1);
    swift_bridgeObjectRelease();
    sub_100191924(a56, a57, a58 & 1);
    swift_bridgeObjectRelease();
    sub_100191924(a62, a63, a64 & 1);
    swift_bridgeObjectRelease();
    a1 = v67;
    a2 = v68;
    char v64 = v66;
  }
  sub_100191924(a1, a2, v64);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100870370(uint64_t result)
{
  *(unsigned char *)(result + 618) = 1;
  return result;
}

unint64_t sub_10087037C()
{
  unint64_t result = qword_100E9BFD8;
  if (!qword_100E9BFD8)
  {
    sub_10018C6DC(&qword_100E9BFD0);
    sub_1001246C8(&qword_100E9BFE0, &qword_100E9BFE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BFD8);
  }
  return result;
}

uint64_t sub_10087041C(uint64_t result)
{
  *(unsigned char *)(result + 618) = 0;
  return result;
}

unint64_t sub_100870424()
{
  unint64_t result = qword_100E73CF0;
  if (!qword_100E73CF0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100E73CF0);
  }
  return result;
}

uint64_t sub_100870464(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 136);
  uint64_t v3 = *(void *)(a1 + 144);
  char v4 = *(unsigned char *)(a1 + 152);
  sub_100191924(*(void *)(a1 + 88), *(void *)(a1 + 96), *(unsigned char *)(a1 + 104));
  swift_bridgeObjectRelease();
  sub_100191924(v2, v3, v4);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1008704DC()
{
  unint64_t result = qword_100E9BFF0;
  if (!qword_100E9BFF0)
  {
    sub_10018C6DC(&qword_100E9BFF8);
    sub_10018C6DC(&qword_100E9BF50);
    sub_1001246C8(&qword_100E9BF68, &qword_100E9BF50);
    swift_getOpaqueTypeConformance2();
    sub_100227408();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9BFF0);
  }
  return result;
}

id sub_1008705B8()
{
  type metadata accessor for NotificationsOptInNotificationPermissionView.Coordinator();
  sub_10020D948(v0, (uint64_t)v2);
  return sub_1008705FC((uint64_t)v2);
}

id sub_1008705FC(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  sub_10020D948(a1, (uint64_t)v3 + OBJC_IVAR____TtCV7Weather44NotificationsOptInNotificationPermissionView11Coordinator_interactor);
  v6.receiver = v3;
  v6.super_class = v1;
  [super init];
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  return v4;
}

id sub_100870670()
{
  id v0 = [self systemFontOfSize:60.0];
  uint64_t v1 = self;
  id v2 = [v1 configurationWithFont:v0 scale:-1];

  id v3 = [self systemBlueColor];
  id v4 = [v1 configurationWithHierarchicalColor:v3];

  sub_10013CAA4();
  id v62 = v2;
  id v5 = sub_1003C55B4(0x6461622E6C6C6562, 0xEF6C6C69662E6567, v2);
  char v60 = v4;
  uint64_t v61 = v5;
  if (v5) {
    id v6 = [v5 imageByApplyingSymbolConfiguration:v4];
  }
  else {
    id v6 = 0;
  }
  char v7 = self;
  id v8 = [v7 mainBundle];
  sub_10017C720();
  uint64_t v15 = sub_10017D63C(0xD000000000000013, 0x8000000100CB44B0, v9, v10, v11, v12, v13, v14);
  uint64_t v17 = v16;

  id v18 = [v7 mainBundle];
  sub_10017C720();
  uint64_t v25 = sub_10017D63C(0x10000000000000A9, 0x8000000100CB4510, v19, v20, v21, v22, v23, v24);
  uint64_t v27 = v26;

  id v28 = objc_allocWithZone((Class)OBWelcomeController);
  id v59 = v6;
  id v29 = sub_1003C59A8(v15, v17, v25, v27, v6);
  id v30 = [self boldButton];
  id v31 = [v7 mainBundle];
  sub_10017C720();
  uint64_t v38 = sub_1001824D8(0x65756E69746E6F43, 0xE800000000000000, v32, v33, v34, v35, v36, v37);
  uint64_t v40 = v39;

  sub_1003C5A48(v38, v40, 0, v30);
  sub_10017DF08(&qword_100E9C038);
  UIViewControllerRepresentableContext.coordinator.getter();
  [v30 addTarget:v63 action:"continueButtonTapped" forControlEvents:64];

  id v41 = [v29 buttonTray];
  [v41 addButton:v30];

  id v42 = [self linkButton];
  id v43 = [v7 mainBundle];
  sub_10017C720();
  uint64_t v50 = sub_1001824D8(0x776F4E20746F4ELL, 0xE700000000000000, v44, v45, v46, v47, v48, v49);
  uint64_t v52 = v51;

  sub_1003C5A48(v50, v52, 0, v42);
  UIViewControllerRepresentableContext.coordinator.getter();
  [v42 addTarget:v63 action:"notNowButtonTapped" forControlEvents:64];

  id v53 = [v29 buttonTray];
  [v53 addButton:v42];

  char v54 = self;
  NSString v55 = String._bridgeToObjectiveC()();
  id v56 = [v54 linkWithBundleIdentifier:v55];

  id v57 = [v29 buttonTray];
  [v57 setPrivacyLinkController:v56];

  [v29 setModalPresentationStyle:2];
  return v29;
}

id sub_100870B7C()
{
  return sub_100870670();
}

id sub_100870B94@<X0>(void *a1@<X8>)
{
  id result = sub_1008705B8();
  *a1 = result;
  return result;
}

uint64_t sub_100870BBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100870E34();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100870C20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100870E34();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100870C84()
{
}

uint64_t sub_100870CAC()
{
  sub_1001B1E64((void *)(v0 + OBJC_IVAR____TtCV7Weather44NotificationsOptInNotificationPermissionView11Coordinator_interactor), *(void *)(v0 + OBJC_IVAR____TtCV7Weather44NotificationsOptInNotificationPermissionView11Coordinator_interactor + 24));
  uint64_t v1 = sub_10017FB00();
  return v2(v1);
}

uint64_t sub_100870D44()
{
  sub_1001B1E64((void *)(v0 + OBJC_IVAR____TtCV7Weather44NotificationsOptInNotificationPermissionView11Coordinator_interactor), *(void *)(v0 + OBJC_IVAR____TtCV7Weather44NotificationsOptInNotificationPermissionView11Coordinator_interactor + 24));
  uint64_t v1 = sub_10017FB00();
  return v2(v1);
}

uint64_t type metadata accessor for NotificationsOptInNotificationPermissionView.Coordinator()
{
  return self;
}

ValueMetadata *type metadata accessor for NotificationsOptInNotificationPermissionView()
{
  return &type metadata for NotificationsOptInNotificationPermissionView;
}

unint64_t sub_100870E34()
{
  unint64_t result = qword_100E9C030;
  if (!qword_100E9C030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9C030);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LocationViewerAlertState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    unsigned int v5 = -1;
    return v5 + 1;
  }
  if (a2 >= 0x3F)
  {
    if (a2 + 193 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 193) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    unsigned int v5 = (*a1 | (v4 << 8)) - 194;
    return v5 + 1;
  }
LABEL_17:
  unsigned int v5 = ((*a1 >> 1) & 0x3E | (*a1 >> 7)) ^ 0x3F;
  if (v5 >= 0x3E) {
    unsigned int v5 = -1;
  }
  return v5 + 1;
}

unsigned char *storeEnumTagSinglePayload for LocationViewerAlertState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 193 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 193) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x3F) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x3E)
  {
    unsigned int v6 = ((a2 - 63) >> 8) + 1;
    *unint64_t result = a2 - 63;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100870FF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 4 * (((-a2 >> 1) & 0x1F) - 32 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_100871018(unsigned __int8 *a1)
{
  return *a1 >> 7;
}

unsigned char *sub_100871024(unsigned char *result)
{
  *result &= ~0x80u;
  return result;
}

unsigned char *sub_100871034(unsigned char *result, char a2)
{
  *unint64_t result = *result & 3 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for LocationViewerAlertState()
{
  return &type metadata for LocationViewerAlertState;
}

uint64_t sub_100871058(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x8000000100CB4630
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000100CB4650)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_100871144(char a1)
{
  if (a1) {
    return 0xD000000000000010;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_100871180(void *a1, char a2)
{
  sub_10017DF08(&qword_100E9C070);
  sub_100179C0C();
  uint64_t v20 = v5;
  uint64_t v21 = v4;
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_10017DF08(&qword_100E9C078);
  sub_100179C0C();
  uint64_t v22 = v10;
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = sub_10017DF08(&qword_100E9C080);
  sub_100179C0C();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  sub_100125FF8();
  sub_1001B1E64(a1, a1[3]);
  sub_1008719F4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  if (a2 < 0)
  {
    sub_100871A40();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    sub_1002E75C4();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v8, v21);
  }
  else
  {
    sub_100871A8C();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    sub_1002E7494();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v14, v9);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v2, v15);
}

unint64_t sub_1008713F0(void *a1)
{
  sub_10017DF08(&qword_100E9C040);
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_1001626E0();
  sub_10017DF08(&qword_100E9C048);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v5 = sub_10017DF08(&qword_100E9C050);
  sub_100179C0C();
  uint64_t v27 = v6;
  __chkstk_darwin(v7);
  sub_100125FF8();
  unint64_t v8 = (unint64_t)sub_1001B1E64(a1, a1[3]);
  sub_1008719F4();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v28)
  {
    id v29 = a1;
    uint64_t v9 = KeyedDecodingContainer.allKeys.getter();
    uint64_t v10 = *(void *)(v9 + 16);
    if (v10
      && (char v30 = *(unsigned char *)(v9 + 32),
          sub_100723214(1, v10, v9, v9 + 32, 0, (2 * v10) | 1),
          uint64_t v12 = v11,
          unint64_t v14 = v13,
          swift_bridgeObjectRelease(),
          v12 == v14 >> 1))
    {
      if (v30)
      {
        sub_100871A40();
        sub_10017AA08();
        sub_1002E8260();
        sub_10017E9F0();
        uint64_t v19 = sub_10017D660();
        v20(v19);
        swift_unknownObjectRelease();
        uint64_t v21 = sub_10018057C();
        v22(v21);
        unint64_t v8 = v32 | 0xFFFFFF80;
      }
      else
      {
        sub_100871A8C();
        sub_10017AA08();
        sub_1002E8214();
        sub_10017E9F0();
        uint64_t v23 = sub_10017D660();
        v24(v23);
        swift_unknownObjectRelease();
        uint64_t v25 = sub_1001A0F04();
        v26(v25);
        unint64_t v8 = v31;
      }
    }
    else
    {
      uint64_t v15 = type metadata accessor for DecodingError();
      swift_allocError();
      uint64_t v17 = v16;
      sub_10017DF08(&qword_100E67280);
      void *v17 = &type metadata for LocationViewerAlertState;
      unint64_t v8 = (unint64_t)v1;
      KeyedDecodingContainer.codingPath.getter();
      DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v15 - 8) + 104))(v17, enum case for DecodingError.typeMismatch(_:), v15);
      swift_willThrow();
      swift_unknownObjectRelease();
      (*(void (**)(void *, uint64_t))(v27 + 8))(v1, v5);
      a1 = v29;
    }
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return v8;
}

uint64_t sub_100871808(uint64_t a1)
{
  unint64_t v2 = sub_100871A40();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100871844(uint64_t a1)
{
  unint64_t v2 = sub_100871A40();

  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_100871880()
{
  return sub_100871144(*v0);
}

uint64_t sub_100871888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100871058(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1008718B0(uint64_t a1)
{
  unint64_t v2 = sub_1008719F4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008718EC(uint64_t a1)
{
  unint64_t v2 = sub_1008719F4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100871928(uint64_t a1)
{
  unint64_t v2 = sub_100871A8C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100871964(uint64_t a1)
{
  unint64_t v2 = sub_100871A8C();

  return CodingKey.debugDescription.getter(a1, v2);
}

BOOL sub_1008719A0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1000ACE54(*a1, *a2);
}

unint64_t sub_1008719AC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1008713F0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1008719D8(void *a1)
{
  return sub_100871180(a1, *v1);
}

unint64_t sub_1008719F4()
{
  unint64_t result = qword_100E9C058;
  if (!qword_100E9C058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9C058);
  }
  return result;
}

unint64_t sub_100871A40()
{
  unint64_t result = qword_100E9C060;
  if (!qword_100E9C060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9C060);
  }
  return result;
}

unint64_t sub_100871A8C()
{
  unint64_t result = qword_100E9C068;
  if (!qword_100E9C068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9C068);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LocationViewerAlertState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100871BA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationViewerAlertState.CodingKeys()
{
  return &type metadata for LocationViewerAlertState.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationViewerAlertState.NotificationAlertCodingKeys()
{
  return &type metadata for LocationViewerAlertState.NotificationAlertCodingKeys;
}

unsigned char *_s7Weather24LocationViewerAlertStateO27NotificationAlertCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100871C8CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationViewerAlertState.AddLocationAlertCodingKeys()
{
  return &type metadata for LocationViewerAlertState.AddLocationAlertCodingKeys;
}

unint64_t sub_100871CC8()
{
  unint64_t result = qword_100E9C088;
  if (!qword_100E9C088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9C088);
  }
  return result;
}

unint64_t sub_100871D18()
{
  unint64_t result = qword_100E9C090;
  if (!qword_100E9C090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9C090);
  }
  return result;
}

unint64_t sub_100871D68()
{
  unint64_t result = qword_100E9C098;
  if (!qword_100E9C098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9C098);
  }
  return result;
}

unint64_t sub_100871DB8()
{
  unint64_t result = qword_100E9C0A0;
  if (!qword_100E9C0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9C0A0);
  }
  return result;
}

unint64_t sub_100871E08()
{
  unint64_t result = qword_100E9C0A8;
  if (!qword_100E9C0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9C0A8);
  }
  return result;
}

unint64_t sub_100871E58()
{
  unint64_t result = qword_100E9C0B0;
  if (!qword_100E9C0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9C0B0);
  }
  return result;
}

unint64_t sub_100871EA8()
{
  unint64_t result = qword_100E9C0B8;
  if (!qword_100E9C0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9C0B8);
  }
  return result;
}

unint64_t sub_100871EF8()
{
  unint64_t result = qword_100E9C0C0;
  if (!qword_100E9C0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9C0C0);
  }
  return result;
}

unint64_t sub_100871F48()
{
  unint64_t result = qword_100E9C0C8;
  if (!qword_100E9C0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9C0C8);
  }
  return result;
}

uint64_t sub_100871F94(uint64_t a1, uint64_t a2)
{
  uint64_t v182 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E663E0);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v177 = v5;
  uint64_t v6 = sub_10017DF08(&qword_100E663D8);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v176 = v8;
  uint64_t v181 = type metadata accessor for LocationPreviewModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_100162EF8();
  uint64_t v174 = v10;
  sub_1001626D4();
  __chkstk_darwin(v11);
  unint64_t v13 = (char *)&v174 - v12;
  uint64_t v189 = type metadata accessor for LocationPreviewViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_100162EF8();
  uint64_t v175 = v15;
  sub_1001626D4();
  __chkstk_darwin(v16);
  uint64_t v180 = (uint64_t)&v174 - v17;
  uint64_t v18 = sub_10017DF08(&qword_100E663F0);
  uint64_t v19 = sub_100109308(v18);
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v185 = v20;
  uint64_t v21 = sub_10017DF08(&qword_100E66418);
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_100109314();
  uint64_t v184 = v23;
  uint64_t v24 = sub_10017DF08(&qword_100E66420);
  uint64_t v25 = sub_100109308(v24);
  __chkstk_darwin(v25);
  sub_100109314();
  uint64_t v183 = v26;
  uint64_t v27 = sub_10017DF08(&qword_100E66428);
  uint64_t v28 = sub_100109308(v27);
  __chkstk_darwin(v28);
  sub_100109314();
  uint64_t v186 = v29;
  uint64_t v30 = sub_10017DF08(&qword_100E66430);
  uint64_t v31 = sub_100109308(v30);
  __chkstk_darwin(v31);
  sub_100109314();
  uint64_t v188 = v32;
  uint64_t v33 = sub_10017DF08(&qword_100E66438);
  uint64_t v34 = sub_100109308(v33);
  __chkstk_darwin(v34);
  sub_100109314();
  uint64_t v187 = v35;
  uint64_t v36 = sub_10017DF08(&qword_100E66440);
  uint64_t v37 = sub_100109308(v36);
  __chkstk_darwin(v37);
  sub_100109314();
  uint64_t v190 = v38;
  uint64_t v39 = type metadata accessor for MoonDetailViewState();
  uint64_t v40 = sub_100109308(v39);
  __chkstk_darwin(v40);
  sub_100162EF8();
  uint64_t v178 = v41;
  sub_1001626D4();
  __chkstk_darwin(v42);
  uint64_t v179 = (uint64_t)&v174 - v43;
  sub_1001626D4();
  __chkstk_darwin(v44);
  uint64_t v46 = (char *)&v174 - v45;
  uint64_t v47 = type metadata accessor for ModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v48);
  uint64_t v50 = (char *)&v174 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51);
  id v53 = (char *)&v174 - v52;
  __chkstk_darwin(v54);
  id v56 = (char *)&v174 - v55;
  type metadata accessor for ModalViewState.LocationDetailModal(0);
  sub_100162E4C();
  __chkstk_darwin(v57);
  id v59 = (char *)&v174 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v60);
  id v62 = (char *)&v174 - v61;
  uint64_t v191 = a1;
  uint64_t v63 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView;
  sub_10011A26C(v63, (uint64_t)v56, (void (*)(void))type metadata accessor for ModalViewState);
  if (swift_getEnumCaseMultiPayload() == 5)
  {
    sub_10016E1D4((uint64_t)v56, (uint64_t)v62, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
    sub_10011A26C((uint64_t)v62, (uint64_t)v59, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_10016E1D4((uint64_t)v59, (uint64_t)v46, (void (*)(void))type metadata accessor for MoonDetailViewState);
      uint64_t v64 = type metadata accessor for AppConfigurationState();
      uint64_t v65 = sub_10017AA2C(v64);
      uint64_t v66 = v187;
      uint64_t v69 = sub_1001630C0(v187, v67, v68, v65);
      uint64_t v70 = v188;
      uint64_t v73 = sub_10017A5E0(v188, v71, v72, v69);
      uint64_t v74 = v186;
      uint64_t v77 = sub_10017A0E0(v186, v75, v76, v73);
      uint64_t v78 = v183;
      uint64_t v81 = sub_100163398(v183, v79, v80, v77);
      uint64_t v82 = v184;
      _s7Weather24LocationCompositionStateOwst_0(v184, 1, 1, v81);
      uint64_t v83 = v185;
      sub_100872D0C(v182, v185);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0(v83, 0, 1, v47);
      uint64_t v172 = v191;
      sub_100183844();
      uint64_t v84 = sub_10016356C();
      uint64_t v85 = v190;
      uint64_t v86 = v66;
      uint64_t v91 = sub_100163034(v84, v87, v190, v66, v70, v88, v89, v90, v164, v74, v78, v82, v83, v166, v167, v168, v169, v170, v171,
              0,
              v172);
      sub_1001781AC(v83, &qword_100E663F0);
      sub_1001781AC(v82, &qword_100E66418);
      sub_1001781AC(v78, &qword_100E66420);
      sub_1001781AC(v74, &qword_100E66428);
      sub_1001781AC(v70, &qword_100E66430);
      sub_1001781AC(v86, &qword_100E66438);
      sub_1001781AC(v85, &qword_100E66440);
      sub_10087351C((uint64_t)v46, (void (*)(void))type metadata accessor for MoonDetailViewState);
      uint64_t v92 = type metadata accessor for ModalViewState.LocationDetailModal;
      uint64_t v93 = (uint64_t)v62;
LABEL_19:
      sub_10087351C(v93, (void (*)(void))v92);
      return v91;
    }
    sub_10087351C((uint64_t)v62, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
    uint64_t v95 = (uint64_t)v59;
    uint64_t v94 = type metadata accessor for ModalViewState.LocationDetailModal;
  }
  else
  {
    uint64_t v94 = type metadata accessor for ModalViewState;
    uint64_t v95 = (uint64_t)v56;
  }
  sub_10087351C(v95, (void (*)(void))v94);
  sub_10011A26C(v63, (uint64_t)v53, (void (*)(void))type metadata accessor for ModalViewState);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_10087351C((uint64_t)v53, (void (*)(void))type metadata accessor for ModalViewState);
    uint64_t v96 = v189;
  }
  else
  {
    uint64_t v97 = v180;
    sub_10016E1D4((uint64_t)v53, v180, (void (*)(void))type metadata accessor for LocationPreviewViewState);
    uint64_t v96 = v189;
    sub_10011A26C(v97 + *(int *)(v189 + 20), (uint64_t)v13, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
    uint64_t v98 = v181;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_10016E1D4((uint64_t)v13, v179, (void (*)(void))type metadata accessor for MoonDetailViewState);
      uint64_t v99 = type metadata accessor for AppConfigurationState();
      uint64_t v100 = sub_10017AA2C(v99);
      uint64_t v103 = sub_1001630C0(v187, v101, v102, v100);
      uint64_t v106 = sub_10017A5E0(v188, v104, v105, v103);
      uint64_t v107 = v186;
      uint64_t v110 = sub_10017A0E0(v186, v108, v109, v106);
      uint64_t v111 = v183;
      uint64_t v114 = sub_100163398(v183, v112, v113, v110);
      uint64_t v115 = v184;
      _s7Weather24LocationCompositionStateOwst_0(v184, 1, 1, v114);
      uint64_t v116 = type metadata accessor for PreviewLocation();
      uint64_t v117 = v176;
      _s7Weather24LocationCompositionStateOwst_0(v176, 1, 1, v116);
      uint64_t v118 = v177;
      sub_100872D0C(v182, v177);
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0(v118, 0, 1, v98);
      uint64_t v119 = v185;
      uint64_t v120 = v97;
      sub_1004E4A98(v117, v118, v185);
      sub_1001781AC(v118, &qword_100E663E0);
      sub_1001781AC(v117, &qword_100E663D8);
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0(v119, 0, 1, v47);
      uint64_t v173 = v191;
      sub_100183844();
      uint64_t v121 = sub_10016356C();
      uint64_t v122 = v190;
      uint64_t v123 = v187;
      uint64_t v124 = v188;
      uint64_t v91 = sub_100163034(v121, v125, v190, v187, v188, v126, v127, v128, v164, v107, v111, v115, v119, v166, v167, v168, v169, v170, v171,
              0,
              v173);
      sub_1001781AC(v119, &qword_100E663F0);
      sub_1001781AC(v115, &qword_100E66418);
      sub_1001781AC(v111, &qword_100E66420);
      sub_1001781AC(v107, &qword_100E66428);
      sub_1001781AC(v124, &qword_100E66430);
      sub_1001781AC(v123, &qword_100E66438);
      sub_1001781AC(v122, &qword_100E66440);
      sub_10087351C(v179, (void (*)(void))type metadata accessor for MoonDetailViewState);
      uint64_t v92 = type metadata accessor for LocationPreviewViewState;
      uint64_t v93 = v120;
      goto LABEL_19;
    }
    sub_10087351C(v97, (void (*)(void))type metadata accessor for LocationPreviewViewState);
    sub_10087351C((uint64_t)v13, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
  }
  sub_10011A26C(v63, (uint64_t)v50, (void (*)(void))type metadata accessor for ModalViewState);
  if (swift_getEnumCaseMultiPayload() != 4)
  {
    sub_10087351C((uint64_t)v50, (void (*)(void))type metadata accessor for ModalViewState);
    goto LABEL_15;
  }
  uint64_t v129 = type metadata accessor for ModalViewState.MapViewModal(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v129) == 1)
  {
    sub_1001781AC((uint64_t)v50, &qword_100E663E8);
LABEL_15:
    uint64_t v91 = v191;
    goto LABEL_16;
  }
  uint64_t v130 = v175;
  sub_10016E1D4((uint64_t)v50, v175, (void (*)(void))type metadata accessor for LocationPreviewViewState);
  uint64_t v131 = v174;
  sub_10011A26C(v130 + *(int *)(v96 + 20), v174, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
  uint64_t v132 = v181;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v91 = v191;
  if (EnumCaseMultiPayload == 5)
  {
    sub_10016E1D4(v131, v178, (void (*)(void))type metadata accessor for MoonDetailViewState);
    uint64_t v134 = type metadata accessor for AppConfigurationState();
    uint64_t v135 = sub_10017AA2C(v134);
    uint64_t v138 = sub_1001630C0(v187, v136, v137, v135);
    uint64_t v141 = sub_10017A5E0(v188, v139, v140, v138);
    uint64_t v144 = sub_10017A0E0(v186, v142, v143, v141);
    uint64_t v145 = v183;
    uint64_t v148 = sub_100163398(v183, v146, v147, v144);
    uint64_t v149 = v184;
    _s7Weather24LocationCompositionStateOwst_0(v184, 1, 1, v148);
    uint64_t v150 = type metadata accessor for PreviewLocation();
    uint64_t v151 = v176;
    _s7Weather24LocationCompositionStateOwst_0(v176, 1, 1, v150);
    uint64_t v152 = v177;
    sub_100872D0C(v182, v177);
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0(v152, 0, 1, v132);
    uint64_t v153 = v185;
    sub_1004E4A98(v151, v152, v185);
    sub_1001781AC(v152, &qword_100E663E0);
    sub_1001781AC(v151, &qword_100E663D8);
    _s7Weather24LocationCompositionStateOwst_0(v153, 0, 1, v129);
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0(v153, 0, 1, v47);
    sub_100183844();
    uint64_t v154 = v186;
    uint64_t v165 = v186;
    uint64_t v155 = sub_10016356C();
    uint64_t v156 = v190;
    uint64_t v157 = v187;
    uint64_t v158 = v188;
    uint64_t v91 = sub_100163034(v155, v159, v190, v187, v188, v160, v161, v162, v164, v165, v145, v149, v153, v166, v167, v168, v169, v170, v171,
            0,
            v91);
    sub_1001781AC(v153, &qword_100E663F0);
    sub_1001781AC(v149, &qword_100E66418);
    sub_1001781AC(v145, &qword_100E66420);
    sub_1001781AC(v154, &qword_100E66428);
    sub_1001781AC(v158, &qword_100E66430);
    sub_1001781AC(v157, &qword_100E66438);
    sub_1001781AC(v156, &qword_100E66440);
    sub_10087351C(v178, (void (*)(void))type metadata accessor for MoonDetailViewState);
    uint64_t v92 = type metadata accessor for LocationPreviewViewState;
    uint64_t v93 = v130;
    goto LABEL_19;
  }
  sub_10087351C(v130, (void (*)(void))type metadata accessor for LocationPreviewViewState);
  sub_10087351C(v131, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
LABEL_16:
  swift_retain();
  return v91;
}

uint64_t sub_100872D0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v56 = a2;
  id v53 = (char *)a1;
  uint64_t v2 = sub_10017DF08(&qword_100E67240);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E639E8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for Date();
  uint64_t v52 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v51 = (uint64_t)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DateComponents();
  uint64_t v47 = *(void *)(v9 - 8);
  uint64_t v48 = v9;
  __chkstk_darwin(v9);
  uint64_t v46 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v11 - 8);
  unint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TimeZone();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Calendar();
  uint64_t v49 = *(void *)(v18 - 8);
  uint64_t v50 = v18;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for MoonDetailSelectedDate();
  __chkstk_darwin(v54);
  uint64_t v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for MoonDetailViewAction();
  __chkstk_darwin(v23);
  uint64_t v25 = (unsigned __int8 *)&v46 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011A26C((uint64_t)v53, (uint64_t)v25, (void (*)(void))type metadata accessor for MoonDetailViewAction);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v28 = v51;
      uint64_t v27 = v52;
      uint64_t v29 = v55;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v52 + 32))(v51, v25, v55);
      uint64_t v30 = type metadata accessor for Location();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 1, 1, v30);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 1, 1, v54);
      (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v13, v28, v29);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v29);
      long long v57 = 0u;
      long long v58 = 0u;
      char v59 = 1;
      sub_10041160C((uint64_t)v7, (uint64_t)v4, (uint64_t)v13, (uint64_t)&v57, 3, v56);
      sub_1001781AC((uint64_t)v13, (uint64_t *)&unk_100E73CA0);
      sub_1001781AC((uint64_t)v4, &qword_100E67240);
      sub_1001781AC((uint64_t)v7, &qword_100E639E8);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8))(v28, v29);
    }
    else
    {
      int v44 = *v25;
      uint64_t v45 = type metadata accessor for Location();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 1, 1, v45);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 1, 1, v54);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 1, 1, v55);
      long long v57 = 0u;
      long long v58 = 0u;
      char v59 = 1;
      sub_10041160C((uint64_t)v7, (uint64_t)v4, (uint64_t)v13, (uint64_t)&v57, v44, v56);
      sub_1001781AC((uint64_t)v13, (uint64_t *)&unk_100E73CA0);
      sub_1001781AC((uint64_t)v4, &qword_100E67240);
      return sub_1001781AC((uint64_t)v7, &qword_100E639E8);
    }
  }
  else
  {
    sub_10016E1D4((uint64_t)v25, (uint64_t)v22, (void (*)(void))type metadata accessor for MoonDetailSelectedDate);
    Location.timeZone.getter();
    static Calendar.currentCalendar(with:)();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    sub_10017DF08(&qword_100E65238);
    uint64_t v32 = type metadata accessor for Calendar.Component();
    uint64_t v33 = *(void *)(v32 - 8);
    uint64_t v34 = *(void *)(v33 + 72);
    unint64_t v35 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_100C25ED0;
    unint64_t v37 = v36 + v35;
    id v53 = v7;
    uint64_t v38 = (uint64_t)v4;
    uint64_t v39 = *(void (**)(unint64_t, void, uint64_t))(v33 + 104);
    v39(v37, enum case for Calendar.Component.year(_:), v32);
    v39(v37 + v34, enum case for Calendar.Component.month(_:), v32);
    sub_1000EEDB0(v36);
    uint64_t v40 = v51;
    sub_10085FC7C(v51);
    uint64_t v41 = v46;
    Calendar.dateComponents(_:from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v40, v55);
    Calendar.date(from:)();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v41, v48);
    uint64_t v42 = type metadata accessor for Location();
    uint64_t v43 = (uint64_t)v53;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 1, 1, v42);
    sub_10011A26C((uint64_t)v22, v38, (void (*)(void))type metadata accessor for MoonDetailSelectedDate);
    _s7Weather24LocationCompositionStateOwst_0(v38, 0, 1, v54);
    long long v57 = 0u;
    long long v58 = 0u;
    char v59 = 1;
    sub_10041160C(v43, v38, (uint64_t)v13, (uint64_t)&v57, 3, v56);
    sub_1001781AC(v38, &qword_100E67240);
    sub_1001781AC(v43, &qword_100E639E8);
    sub_1001781AC((uint64_t)v13, (uint64_t *)&unk_100E73CA0);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v20, v50);
    return sub_10087351C((uint64_t)v22, (void (*)(void))type metadata accessor for MoonDetailSelectedDate);
  }
}

uint64_t sub_10087351C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100873574(uint64_t a1)
{
  return sub_1008735A8(a1, (uint64_t)&unk_100E2B718, (uint64_t)sub_1008743C8);
}

uint64_t sub_1008735A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v86 = a2;
  uint64_t v87 = a3;
  uint64_t v76 = a1;
  uint64_t v4 = type metadata accessor for DetailViewVisibilityTrackerModel();
  uint64_t v5 = sub_100164920(v4);
  uint64_t v85 = v6;
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v62 = v5;
  uint64_t v84 = v8;
  __chkstk_darwin(v5);
  uint64_t v83 = (uint64_t)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E85FE8);
  __chkstk_darwin(v10 - 8);
  sub_100109314();
  uint64_t v81 = v11;
  sub_100129064();
  type metadata accessor for DetailViewOrigin();
  sub_100179C0C();
  uint64_t v78 = v13;
  uint64_t v79 = v12;
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v77 = v14;
  sub_100129064();
  uint64_t v91 = type metadata accessor for DetailViewOriginationData();
  sub_100179C0C();
  uint64_t v80 = v15;
  uint64_t v82 = *(void *)(v16 + 64);
  __chkstk_darwin(v17);
  sub_1001811B8();
  uint64_t v90 = v18;
  __chkstk_darwin(v19);
  uint64_t v89 = (char *)&v61 - v20;
  sub_100129064();
  type metadata accessor for ViewAction();
  sub_100179C0C();
  uint64_t v74 = v22;
  uint64_t v75 = v21;
  __chkstk_darwin(v21);
  sub_100109314();
  uint64_t v72 = v23;
  sub_100129064();
  uint64_t v68 = type metadata accessor for ViewType();
  sub_100179C0C();
  uint64_t v66 = v24;
  __chkstk_darwin(v25);
  sub_100109314();
  uint64_t v65 = v26;
  sub_100129064();
  uint64_t v64 = type metadata accessor for UUID();
  sub_100179C0C();
  uint64_t v28 = v27;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v61 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for ViewData();
  sub_100179C0C();
  uint64_t v70 = v32;
  uint64_t v73 = *(void *)(v33 + 64);
  __chkstk_darwin(v34);
  sub_1001811B8();
  uint64_t v67 = v35;
  __chkstk_darwin(v36);
  uint64_t v88 = (char *)&v61 - v37;
  sub_100129064();
  uint64_t v38 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v40 = v39;
  __chkstk_darwin(v41);
  uint64_t v43 = (char *)&v61 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = v3;
  sub_1001B1E64(v3 + 1, v3[4]);
  uint64_t v44 = v76;
  Location.identifier.getter();
  int v69 = dispatch thunk of LocationPrivacySamplerType.canRecordLocation(_:)();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v43, v38);
  UUID.init()();
  UUID.uuidString.getter();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v64);
  (*(void (**)(uint64_t, void, uint64_t))(v66 + 104))(v65, enum case for ViewType.detail(_:), v68);
  (*(void (**)(uint64_t, void, uint64_t))(v74 + 104))(v72, enum case for ViewAction.unknown(_:), v75);
  uint64_t v45 = v88;
  ViewData.init(viewSessionID:viewType:viewAction:)();
  uint64_t v46 = v44;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 16))(v77, v44 + *(int *)(v62 + 32), v79);
  uint64_t v47 = type metadata accessor for ComponentData();
  _s7Weather24LocationCompositionStateOwst_0(v81, 1, 1, v47);
  uint64_t v48 = v89;
  DetailViewOriginationData.init(origin:componentData:)();
  uint64_t v81 = *v63;
  uint64_t v49 = v70;
  uint64_t v50 = v67;
  uint64_t v51 = v71;
  (*(void (**)(uint64_t, char *, uint64_t))(v70 + 16))(v67, v45, v71);
  uint64_t v52 = v83;
  sub_1008742FC(v46, v83);
  uint64_t v53 = v80;
  (*(void (**)(uint64_t, char *, uint64_t))(v80 + 16))(v90, v48, v91);
  unint64_t v54 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  unint64_t v55 = (v73 + *(unsigned __int8 *)(v85 + 80) + v54) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
  uint64_t v56 = v55 + v84;
  unint64_t v57 = (*(unsigned __int8 *)(v53 + 80) + v55 + v84 + 1) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
  uint64_t v58 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v49 + 32))(v58 + v54, v50, v51);
  sub_100874364(v52, v58 + v55);
  *(unsigned char *)(v58 + v56) = v69 & 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v53 + 32))(v58 + v57, v90, v91);
  swift_retain();
  Tracker.transaction(block:)();
  swift_release();
  swift_release();
  sub_100162F0C();
  v59();
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v88, v51);
}

uint64_t sub_100873BE4()
{
  return sub_100873BFC();
}

uint64_t sub_100873BFC()
{
  swift_retain();
  Tracker.transaction(block:)();

  return swift_release();
}

uint64_t sub_100873C54(uint64_t a1)
{
  return sub_1008735A8(a1, (uint64_t)&unk_100E2B6F0, (uint64_t)sub_1008743C8);
}

uint64_t sub_100873C88(uint64_t a1)
{
  return sub_1008735A8(a1, (uint64_t)&unk_100E2B678, (uint64_t)sub_1008743C8);
}

uint64_t sub_100873CBC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v35 = a5;
  int v31 = a4;
  uint64_t v27 = a3;
  v26[1] = a2;
  uint64_t v5 = type metadata accessor for Location();
  uint64_t v29 = *(void *)(v5 - 8);
  uint64_t v30 = v5;
  __chkstk_darwin(v5);
  uint64_t v28 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LocationData();
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v34 = v7;
  __chkstk_darwin(v7);
  uint64_t v32 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DetailType();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DetailViewData();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ViewData();
  sub_1008743CC(&qword_100E74D40, (void (*)(uint64_t))&type metadata accessor for ViewData);
  v26[2] = "onDetailViewStateReducer";
  AccessTracker.push<A>(data:traits:file:line:)();
  uint64_t v17 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v27, v9);
  DetailViewData.init(type:)();
  sub_1008743CC(&qword_100E9C170, (void (*)(uint64_t))&type metadata accessor for DetailViewData);
  uint64_t v18 = v28;
  AccessTracker.push<A>(data:traits:file:line:)();
  uint64_t v19 = v16;
  uint64_t v20 = v29;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  uint64_t v21 = v30;
  uint64_t v22 = type metadata accessor for DetailViewVisibilityTrackerModel();
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v18, v17 + *(int *)(v22 + 20), v21);
  if (v31)
  {
    Location.coordinate.getter();
    Location.coordinate.getter();
  }
  uint64_t v23 = v32;
  LocationData.init(latitudeDouble:longitudeDouble:)();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v18, v21);
  sub_1008743CC(&qword_100E71970, (void (*)(uint64_t))&type metadata accessor for LocationData);
  uint64_t v24 = v34;
  AccessTracker.push<A>(data:traits:file:line:)();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v23, v24);
  type metadata accessor for DetailViewOriginationData();
  sub_1008743CC(&qword_100E9C178, (void (*)(uint64_t))&type metadata accessor for DetailViewOriginationData);
  AccessTracker.push<A>(data:traits:file:line:)();
  type metadata accessor for DetailViewEvent();
  sub_1008743CC(&qword_100E9C168, (void (*)(uint64_t))&type metadata accessor for DetailViewEvent);
  return AccessTracker.time<A>(_:submitAndRestartWithSession:)();
}

uint64_t sub_1008741FC()
{
  type metadata accessor for DetailViewEvent();
  sub_1008743CC(&qword_100E9C168, (void (*)(uint64_t))&type metadata accessor for DetailViewEvent);
  memset(v1, 0, sizeof(v1));
  AccessTracker.submit<A>(_:onlyIfTimed:userInfo:completion:)();
  return sub_10040B8CC((uint64_t)v1);
}

uint64_t sub_100874294(uint64_t a1)
{
  return sub_1008735A8(a1, (uint64_t)&unk_100E2B6C8, (uint64_t)sub_1008743C8);
}

uint64_t sub_1008742C8(uint64_t a1)
{
  return sub_1008735A8(a1, (uint64_t)&unk_100E2B650, (uint64_t)sub_1008743C8);
}

uint64_t sub_1008742FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DetailViewVisibilityTrackerModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100874364(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DetailViewVisibilityTrackerModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008743CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100874418(uint64_t a1)
{
  return sub_1008735A8(a1, (uint64_t)&unk_100E2B6A0, (uint64_t)sub_1008743C8);
}

uint64_t sub_10087445C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ViewData();
  sub_100164920(v3);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = type metadata accessor for DetailViewVisibilityTrackerModel();
  sub_100164920(v8);
  unint64_t v10 = (v5 + v7 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v12 = v10 + *(void *)(v11 + 64);
  uint64_t v13 = *(void *)(type metadata accessor for DetailViewOriginationData() - 8);
  int v14 = *(unsigned __int8 *)(v1 + v12);
  uint64_t v15 = v1 + ((v12 + *(unsigned __int8 *)(v13 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));

  return sub_100873CBC(a1, v1 + v5, v1 + v10, v14, v15);
}

uint64_t sub_100874554(uint64_t *a1)
{
  sub_1002A8CC8((uint64_t)a1, (uint64_t)v19);
  long long v15 = v19[1];
  long long v16 = v19[0];
  long long v14 = v19[2];
  long long v13 = v19[3];
  long long v12 = v19[4];
  uint64_t v3 = v20;
  uint64_t v4 = v21;
  uint64_t v5 = type metadata accessor for MainAction();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(uint64_t (**)(uint64_t))(v1 + 16);
  long long v9 = v15;
  *(_OWORD *)uint64_t v7 = v16;
  *((_OWORD *)v7 + 1) = v9;
  long long v10 = v13;
  *((_OWORD *)v7 + 2) = v14;
  *((_OWORD *)v7 + 3) = v10;
  *((_OWORD *)v7 + 4) = v12;
  *((void *)v7 + 10) = v3;
  *((void *)v7 + 11) = v4;
  type metadata accessor for ModalViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = 0;
  memset(v17, 0, sizeof(v17));
  swift_retain();
  sub_100874998(a1);
  sub_1001AAF58((uint64_t)v7, (uint64_t)v17, v8);
  sub_100016E7C((uint64_t)v17);
  sub_1001ABE70((uint64_t)v7);
  return swift_release();
}

uint64_t sub_1008746B8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001B1E64(v1 + 4, v1[7]);
  sub_1003B71B0(a1);
  uint64_t v7 = v1[12];
  uint64_t v8 = v1[13];
  sub_1001B1E64(v1 + 9, v7);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_entrySource) & 1) == 0)
  {
    if (qword_100E62418 != -1) {
      swift_once();
    }
    Date.init()();
    Date.timeIntervalSince1970.getter();
    uint64_t v11 = v10;
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v13 = v11;
    sub_100874958(&qword_100E9C238);
    Updatable.save<A>(setting:value:)();
    if (qword_100E62420 != -1) {
      swift_once();
    }
    v12[7] = 1;
    return Updatable.save<A>(setting:value:)();
  }
  return result;
}

uint64_t type metadata accessor for ReportWeatherInteractor()
{
  return self;
}

uint64_t sub_100874924()
{
  return sub_100874958(&qword_100E9C230);
}

uint64_t sub_100874958(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ReportWeatherInteractor();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_100874998(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1008749EC()
{
  return sub_10003643C(&qword_100E9C380);
}

uint64_t sub_1008749F8()
{
  return sub_10003643C(&qword_100E9C418);
}

uint64_t sub_100874A04()
{
  return sub_10003643C(&qword_100E9C410);
}

uint64_t sub_100874A10()
{
  return sub_10003643C(&qword_100E9C408);
}

uint64_t sub_100874A1C()
{
  return sub_10003643C(&qword_100E9C400);
}

uint64_t sub_100874A28()
{
  return sub_10003643C(&qword_100E9C3F8);
}

uint64_t sub_100874A34()
{
  return sub_10003643C(&qword_100E9C3F0);
}

uint64_t sub_100874A40()
{
  return sub_10003643C(&qword_100E9C3E8);
}

uint64_t sub_100874A4C()
{
  return sub_10003643C(&qword_100E9C3B8);
}

uint64_t sub_100874A58()
{
  return sub_10003643C(&qword_100E9C438);
}

uint64_t sub_100874A64()
{
  return sub_10003643C(&qword_100E9C430);
}

uint64_t sub_100874A70()
{
  return sub_10003643C(&qword_100E9C428);
}

uint64_t sub_100874A7C()
{
  return sub_10003643C(&qword_100E9C440);
}

uint64_t sub_100874A88()
{
  return sub_10003643C(&qword_100E9C3A0);
}

uint64_t sub_100874A94()
{
  return sub_10003643C(&qword_100E9C398);
}

uint64_t sub_100874AA0()
{
  return sub_10003643C(&qword_100E9C390);
}

uint64_t sub_100874AAC()
{
  return sub_10003643C(&qword_100E9C3B0);
}

uint64_t sub_100874AB8()
{
  return sub_10003643C(&qword_100E9C3E0);
}

uint64_t sub_100874AC4()
{
  return sub_10003643C(&qword_100E9C3D8);
}

uint64_t sub_100874AD0()
{
  return sub_10003643C(&qword_100E9C3D0);
}

uint64_t sub_100874ADC()
{
  return sub_10003643C(&qword_100E9C3C8);
}

uint64_t sub_100874AE8()
{
  return sub_10003643C(&qword_100E9C420);
}

uint64_t sub_100874AF4(unsigned __int8 *a1)
{
  return sub_1001CB22C(*a1);
}

uint64_t sub_100874B1C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_10017DF08(&qword_100E9C338);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006DF38(a2, (uint64_t)v7, &qword_100E9C338);
  uint64_t v8 = type metadata accessor for OpenURLOptions();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8) == 1)
  {
    sub_1001781AC((uint64_t)v7, &qword_100E9C338);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v11 = (void *)OpenURLOptions.uiSceneOpenURLOptions.getter();
    (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    uint64_t v9 = sub_100442358(v11);
    uint64_t v10 = v12;
  }
  sub_1001B1E64(a3, a3[3]);
  sub_10017DF08(&qword_100E80778);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    v14[0] = v9;
    v14[1] = v10;
    URLHandlerManager.handle(url:context:)();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100874CA4()
{
  return State.wrappedValue.setter();
}

uint64_t *sub_100874CFC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10017DF08(&qword_100E9C248);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100874DD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E9C248);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100874E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E9C248);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100874EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E9C248);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100874F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100874F9C);
}

uint64_t sub_100874F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10017DF08(&qword_100E9C248);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_100875030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100875044);
}

void sub_100875044(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_10017DF08(&qword_100E9C248);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
}

uint64_t sub_1008750D4()
{
  type metadata accessor for WeatherApp();
  sub_10017CD20();
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  sub_10017DF08(&qword_100E9C248);
  sub_100162E4C();
  (*(void (**)(unint64_t))(v3 + 8))(v0 + v2);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1008751A4()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_1008751DC(uint64_t a1, uint64_t a2)
{
  return sub_100874B1C(a1, a2, (void *)(v2 + 16));
}

uint64_t sub_1008751E4()
{
  type metadata accessor for WeatherApp();
  sub_10017CD20();
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v4 = (*(void *)(v3 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = v0 + v2;
  sub_10017DF08(&qword_100E9C248);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v6 + 8))(v5);
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + v4);

  return swift_deallocObject();
}

uint64_t sub_1008752C0(uint64_t a1)
{
  type metadata accessor for ColorScheme();
  sub_100179C0C();
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return EnvironmentValues.colorScheme.setter();
}

uint64_t sub_100875360@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1001AEB50();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100875390(unsigned __int8 *a1)
{
  return sub_1001CB22C(*a1);
}

uint64_t assignWithTake for InvertedColorSchemeStatusBarCorrectionModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t sub_1008753FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10087547C()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_1008754A4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008754DC()
{
  return sub_100874CA4();
}

uint64_t sub_1008754E8()
{
  return sub_1001246C8(&qword_100E9C388, &qword_100E9C370);
}

uint64_t sub_100875524()
{
  uint64_t v1 = type metadata accessor for ActivityAction();
  __chkstk_darwin(v1);
  __n128 v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64((void *)(v0 + 16), *(void *)(v0 + 40));
  swift_storeEnumTagMultiPayload();
  char v4 = static LocationSearchEntityFromStringResolver.__derived_struct_equals(_:_:)();
  char v5 = variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
  sub_100389228((uint64_t)v3, v4 & 1, v5 & 1);
  return sub_1002AE148((uint64_t)v3);
}

uint64_t type metadata accessor for WeatherStaticConfigurationActivityHandler()
{
  return self;
}

uint64_t type metadata accessor for NoAqiSevereContentView()
{
  return sub_100109098();
}

uint64_t sub_100875638()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10087567C@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v57 = a7;
  uint64_t v58 = a6;
  uint64_t v45 = a4;
  uint64_t v52 = a3;
  v70[1] = a5;
  v70[2] = a5;
  v70[3] = a5;
  int v9 = a2;
  unsigned int v10 = a2 & 0x100;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  v70[7] = a5;
  sub_100179D2C();
  uint64_t v50 = sub_10017F7C0();
  uint64_t v56 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v53 = v11;
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v55 = v13;
  __chkstk_darwin(v14);
  uint64_t v54 = (uint64_t)&v41 - v15;
  v70[0] = a5;
  v70[1] = type metadata accessor for Optional();
  v70[2] = a5;
  v70[3] = a5;
  v70[4] = a5;
  v70[5] = a5;
  sub_100179D2C();
  sub_10017F7C0();
  uint64_t v51 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v49 = v16;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v59 = v18;
  __chkstk_darwin(v19);
  uint64_t v60 = (uint64_t)&v41 - v20;
  if (v9)
  {
    if (v9 == 1)
    {
      if (v10)
      {
        uint64_t v21 = &unk_100E9E130;
        goto LABEL_11;
      }
    }
    else if (v10)
    {
      uint64_t v21 = &unk_100E9E4C0;
      goto LABEL_11;
    }
    uint64_t v21 = &unk_100E9E2F8;
    goto LABEL_11;
  }
  if (v10) {
    uint64_t v21 = &unk_100E9DDA0;
  }
  else {
    uint64_t v21 = &unk_100E9DF68;
  }
LABEL_11:
  memcpy(v70, v21, sizeof(v70));
  uint64_t v22 = memcpy(v69, v70, sizeof(v69));
  __chkstk_darwin(v22);
  uint64_t v23 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v23;
  *(&v41 - 6) = a1;
  *((unsigned char *)&v41 - 40) = v9;
  uint64_t v44 = a1;
  int v42 = v9;
  unsigned int v43 = v10 >> 8;
  *((unsigned char *)&v41 - 39) = BYTE1(v10);
  uint64_t v24 = v45;
  *(&v41 - 4) = v52;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v26 = v59;
  Group<A>.init(content:)();
  uint64_t v68 = WitnessTable;
  uint64_t v27 = v51;
  uint64_t v46 = swift_getWitnessTable();
  sub_100121584(v26, v27, v60);
  uint64_t v28 = v49;
  uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8);
  uint64_t v48 = v49 + 8;
  uint64_t v29 = v47(v26, v27);
  __chkstk_darwin(v29);
  uint64_t v30 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v30;
  *(&v41 - 6) = v44;
  *((unsigned char *)&v41 - 40) = v42;
  *((unsigned char *)&v41 - 39) = v43;
  *(&v41 - 4) = v31;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v55;
  Group<A>.init(content:)();
  uint64_t v67 = v32;
  uint64_t v34 = v56;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v35 = v54;
  sub_100121584(v33, v34, v54);
  uint64_t v36 = v53;
  uint64_t v37 = *(void (**)(void))(v53 + 8);
  sub_10017C768();
  v37();
  uint64_t v38 = v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v59, v60, v27);
  uint64_t v65 = v38;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v33, v35, v34);
  uint64_t v66 = v33;
  uint64_t v63 = v27;
  uint64_t v64 = v34;
  uint64_t v61 = v46;
  uint64_t v62 = v58;
  sub_1006E9080();
  sub_10017C768();
  v37();
  uint64_t v39 = v47;
  v47(v60, v27);
  sub_10017C768();
  v37();
  return v39(v38, v27);
}

uint64_t sub_100875B44@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t, uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a3@<X3>, void *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v100 = a6;
  uint64_t v108 = a2;
  uint64_t v88 = a7;
  uint64_t v11 = sub_10017DF08(&qword_100E64E80);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = type metadata accessor for Optional();
  uint64_t v98 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v104 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v103 = (char *)&v84 - v16;
  uint64_t v86 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v86);
  uint64_t v85 = (uint64_t)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v84 - v19;
  uint64_t v21 = *(void *)(a5 - 8);
  __chkstk_darwin(v22);
  uint64_t v97 = (char *)&v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v96 = (char *)&v84 - v25;
  __chkstk_darwin(v26);
  uint64_t v95 = (char *)&v84 - v27;
  __chkstk_darwin(v28);
  uint64_t v93 = (char *)&v84 - v29;
  __chkstk_darwin(v30);
  uint64_t v94 = (char *)&v84 - v31;
  __chkstk_darwin(v32);
  uint64_t v92 = (char *)&v84 - v33;
  __chkstk_darwin(v34);
  uint64_t v101 = (char *)&v84 - v35;
  __chkstk_darwin(v36);
  uint64_t v107 = (char *)&v84 - v37;
  __chkstk_darwin(v38);
  uint64_t v40 = (char *)&v84 - v39;
  __chkstk_darwin(v41);
  unsigned int v43 = (char *)&v84 - v42;
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather18NoAqiSevereContent8_Storage_severeAlert, (uint64_t)v20);
  uint64_t v44 = a4[37];
  uint64_t v45 = a4[38];
  uint64_t v46 = a4[39];
  uint64_t v47 = a4[40];
  uint64_t v89 = a3;
  v108(v20, v44, v45, v46, v47);
  uint64_t v48 = (uint64_t)v20;
  sub_1001F2B74((uint64_t)v20);
  uint64_t v91 = v43;
  sub_100121584((uint64_t)v40, a5, (uint64_t)v43);
  uint64_t v87 = v21;
  uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  uint64_t v106 = v40;
  uint64_t v99 = v21 + 8;
  uint64_t v90 = v49;
  v49((uint64_t)v40, a5);
  uint64_t v102 = a1;
  uint64_t v50 = a1 + OBJC_IVAR____TtCV7Weather18NoAqiSevereContent8_Storage_map;
  swift_beginAccess();
  sub_10027A764(v50, (uint64_t)v13);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v86) == 1)
  {
    sub_10027A7CC((uint64_t)v13);
  }
  else
  {
    uint64_t v51 = v85;
    sub_10027A82C((uint64_t)v13, v85);
    sub_10027A890((uint64_t)(a4 + 20), (uint64_t)v128);
    sub_10027A890((uint64_t)v128, (uint64_t)v129);
    if (v130 != 1)
    {
      uint64_t v55 = (uint64_t)v107;
      v108((char *)v51, v129[0], v129[1], v129[2], v129[3]);
      sub_1001F2B74(v51);
      uint64_t v56 = (uint64_t)v106;
      sub_100121584(v55, a5, (uint64_t)v106);
      uint64_t v57 = v90;
      uint64_t v48 = (uint64_t)v20;
      v90(v55, a5);
      uint64_t v58 = (uint64_t)v104;
      sub_100121584(v56, a5, (uint64_t)v104);
      v57(v56, a5);
      _s7Weather24LocationCompositionStateOwst_0(v58, 0, 1, a5);
      sub_1000CA354();
      uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
      uint64_t v86 = (v98 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v59(v58, v105);
      goto LABEL_7;
    }
    sub_1001F2B74(v51);
  }
  uint64_t v52 = (uint64_t)v104;
  uint64_t v53 = v105;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v104, 1, 1, a5);
  sub_1000CA354();
  uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
  uint64_t v86 = (v98 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v54(v52, v53);
LABEL_7:
  uint64_t v60 = v102;
  sub_1001F3734(*(void *)(v102 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v48);
  uint64_t v61 = (uint64_t)v107;
  v108((char *)v48, a4[12], a4[13], a4[14], a4[15]);
  sub_1001F2B74(v48);
  sub_100121584(v61, a5, (uint64_t)v106);
  uint64_t v62 = v90;
  v90(v61, a5);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v48);
  uint64_t v63 = (uint64_t)v101;
  uint64_t v64 = v108;
  v108((char *)v48, a4[4], a4[5], a4[6], a4[7]);
  sub_1001F2B74(v48);
  sub_100121584(v63, a5, v61);
  v62(v63, a5);
  sub_1001F3734(*(void *)(v102 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, v48);
  uint64_t v65 = (uint64_t)v92;
  v64((char *)v48, a4[45], a4[46], a4[47], a4[48]);
  sub_1001F2B74(v48);
  uint64_t v66 = v63;
  uint64_t v67 = v100;
  sub_100121584(v65, a5, v66);
  v62(v65, a5);
  sub_1001F3734(*(void *)(v102 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, v48);
  uint64_t v68 = a4[41];
  uint64_t v69 = a4[42];
  uint64_t v70 = a4[43];
  uint64_t v71 = a4[44];
  uint64_t v72 = (uint64_t)v94;
  v108((char *)v48, v68, v69, v70, v71);
  sub_1001F2B74(v48);
  sub_100121584(v72, a5, v65);
  v62(v72, a5);
  uint64_t v73 = *(void (**)(void))(v87 + 16);
  ((void (*)(uint64_t, char *, uint64_t))v73)(v72, v91, a5);
  uint64_t v122 = v72;
  uint64_t v74 = v98 + 16;
  uint64_t v75 = (uint64_t)v104;
  (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v104, v103, v105);
  uint64_t v123 = v75;
  uint64_t v76 = v93;
  v73();
  uint64_t v124 = v76;
  uint64_t v77 = v95;
  v73();
  int v125 = v77;
  uint64_t v78 = v96;
  ((void (*)(char *, char *, uint64_t))v73)(v96, v101, a5);
  uint64_t v126 = v78;
  uint64_t v79 = v97;
  uint64_t v80 = v92;
  ((void (*)(char *, char *, uint64_t))v73)(v97, v92, a5);
  uint64_t v127 = v79;
  uint64_t v81 = v105;
  uint64_t v116 = a5;
  uint64_t v117 = v105;
  uint64_t v118 = a5;
  uint64_t v119 = a5;
  uint64_t v120 = a5;
  uint64_t v121 = a5;
  uint64_t v109 = v67;
  uint64_t v110 = v67;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v112 = v67;
  uint64_t v113 = v67;
  uint64_t v114 = v67;
  uint64_t v115 = v67;
  sub_1006E9080();
  v62((uint64_t)v80, a5);
  v62((uint64_t)v101, a5);
  v62((uint64_t)v107, a5);
  v62((uint64_t)v106, a5);
  uint64_t v82 = *(void (**)(char *, uint64_t))(v74 - 8);
  v82(v103, v81);
  v62((uint64_t)v91, a5);
  v62((uint64_t)v97, a5);
  v62((uint64_t)v96, a5);
  v62((uint64_t)v95, a5);
  v62((uint64_t)v93, a5);
  v82(v104, v81);
  return ((uint64_t (*)(char *, uint64_t))v62)(v94, a5);
}

uint64_t sub_1008764D8@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t, uint64_t, uint64_t, uint64_t)@<X2>, uint64_t *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v102 = a5;
  uint64_t v84 = a6;
  uint64_t v10 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = *(void *)(a4 - 8);
  uint64_t v13 = v82;
  __chkstk_darwin(v14);
  uint64_t v83 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v98 = (char *)&v82 - v17;
  __chkstk_darwin(v18);
  uint64_t v97 = (char *)&v82 - v19;
  __chkstk_darwin(v20);
  uint64_t v96 = (char *)&v82 - v21;
  __chkstk_darwin(v22);
  uint64_t v95 = (char *)&v82 - v23;
  __chkstk_darwin(v24);
  uint64_t v93 = (char *)&v82 - v25;
  __chkstk_darwin(v26);
  uint64_t v92 = (char *)&v82 - v27;
  __chkstk_darwin(v28);
  uint64_t v90 = (char *)&v82 - v29;
  __chkstk_darwin(v30);
  uint64_t v89 = (char *)&v82 - v31;
  __chkstk_darwin(v32);
  uint64_t v101 = (char *)&v82 - v33;
  __chkstk_darwin(v34);
  uint64_t v87 = (char *)&v82 - v35;
  __chkstk_darwin(v36);
  uint64_t v86 = (char *)&v82 - v37;
  __chkstk_darwin(v38);
  uint64_t v100 = (char *)&v82 - v39;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v82 - v41;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v82 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v82 - v47;
  uint64_t v94 = (char *)&v82 - v47;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v12);
  uint64_t v49 = a3[53];
  uint64_t v50 = a3[54];
  uint64_t v51 = a3[55];
  uint64_t v52 = a3[56];
  uint64_t v99 = a2;
  a2(v12, v49, v50, v51, v52);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v45, a4, (uint64_t)v48);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v91 = v45;
  v53(v45, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)v12);
  a2(v12, a3[33], a3[34], a3[35], a3[36]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v42, a4, (uint64_t)v45);
  uint64_t v88 = v42;
  v53(v42, a4);
  uint64_t v85 = a1;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v12);
  uint64_t v54 = (uint64_t)v100;
  v99(v12, a3[8], a3[9], a3[10], a3[11]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v54, a4, (uint64_t)v42);
  uint64_t v55 = v54;
  v53((char *)v54, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)v12);
  uint64_t v56 = (uint64_t)v86;
  uint64_t v57 = v99;
  v99(v12, a3[16], a3[17], a3[18], a3[19]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v56, a4, v55);
  v53((char *)v56, a4);
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v12);
  uint64_t v58 = (uint64_t)v87;
  v57(v12, a3[49], a3[50], a3[51], a3[52]);
  sub_1001F2B74((uint64_t)v12);
  uint64_t v59 = v58;
  sub_100121584(v58, a4, v56);
  v53((char *)v58, a4);
  uint64_t v60 = v85;
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)v12);
  uint64_t v61 = (uint64_t)v101;
  uint64_t v62 = v99;
  v99(v12, a3[29], a3[30], a3[31], a3[32]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v61, a4, v59);
  v53((char *)v61, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, (uint64_t)v12);
  uint64_t v63 = (uint64_t)v89;
  v62(v12, a3[25], a3[26], a3[27], a3[28]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v63, a4, (uint64_t)v101);
  v53((char *)v63, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, (uint64_t)v12);
  uint64_t v64 = *a3;
  uint64_t v65 = a3[1];
  uint64_t v66 = a3[2];
  uint64_t v67 = a3[3];
  uint64_t v68 = (uint64_t)v90;
  v62(v12, v64, v65, v66, v67);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v68, a4, v63);
  v53((char *)v68, a4);
  uint64_t v69 = *(void (**)(uint64_t, char *, uint64_t))(v82 + 16);
  v69(v68, v94, a4);
  uint64_t v119 = v68;
  uint64_t v70 = v92;
  v69((uint64_t)v92, v91, a4);
  uint64_t v120 = v70;
  uint64_t v71 = v93;
  v69((uint64_t)v93, v88, a4);
  uint64_t v121 = v71;
  uint64_t v72 = v95;
  v69((uint64_t)v95, v100, a4);
  uint64_t v122 = v72;
  uint64_t v73 = v96;
  uint64_t v74 = v86;
  v69((uint64_t)v96, v86, a4);
  uint64_t v123 = v73;
  uint64_t v75 = v97;
  uint64_t v76 = v87;
  v69((uint64_t)v97, v87, a4);
  uint64_t v124 = v75;
  uint64_t v77 = v98;
  uint64_t v78 = (uint64_t)v101;
  v69((uint64_t)v98, v101, a4);
  int v125 = v77;
  uint64_t v79 = v83;
  uint64_t v80 = v89;
  v69((uint64_t)v83, v89, a4);
  uint64_t v126 = v79;
  uint64_t v111 = a4;
  uint64_t v112 = a4;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v115 = a4;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v103 = v102;
  uint64_t v104 = v102;
  uint64_t v105 = v102;
  uint64_t v106 = v102;
  uint64_t v107 = v102;
  uint64_t v108 = v102;
  uint64_t v109 = v102;
  uint64_t v110 = v102;
  sub_1006E9080();
  v53(v80, a4);
  v53((char *)v78, a4);
  v53(v76, a4);
  v53(v74, a4);
  v53(v100, a4);
  v53(v88, a4);
  v53(v91, a4);
  v53(v94, a4);
  v53(v79, a4);
  v53(v98, a4);
  v53(v97, a4);
  v53(v96, a4);
  v53(v95, a4);
  v53(v93, a4);
  v53(v92, a4);
  return ((uint64_t (*)(char *, uint64_t))v53)(v90, a4);
}

uint64_t sub_100876F20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + 9)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_10087567C(*(void *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_100876F4C()
{
  return sub_100876F7C((uint64_t (*)(void, void, void, void, void, void, void))sub_100875B44);
}

uint64_t sub_100876F64()
{
  return sub_100876F7C((uint64_t (*)(void, void, void, void, void, void, void))sub_1008764D8);
}

uint64_t sub_100876F7C(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  if (*(unsigned char *)(v1 + 41)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return a1(*(void *)(v1 + 32), v2 | *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t *sub_100876FB8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  char v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    char v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *char v4 = *a2;
    v4[1] = v7;
    uint64_t v8 = a2[3];
    v4[2] = a2[2];
    v4[3] = v8;
    uint64_t v9 = a2[5];
    v4[4] = a2[4];
    v4[5] = v9;
    uint64_t v10 = a2 + 6;
    unint64_t v11 = a2[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11 >= 2)
    {
      v4[6] = *v10;
      v4[7] = v11;
      swift_bridgeObjectRetain();
    }
    else
    {
      *((_OWORD *)v4 + 3) = *(_OWORD *)v10;
    }
    uint64_t v13 = *(int *)(a3 + 20);
    uint64_t v14 = (uint64_t *)((char *)v4 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
      {
        uint64_t v17 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
      }
    }
    else
    {
      *uint64_t v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = *(int *)(a3 + 24);
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    uint64_t v22 = *((void *)v20 + 3);
    *((void *)v19 + 2) = *((void *)v20 + 2);
    *((void *)v19 + 3) = v22;
    v19[32] = v20[32];
    *((void *)v19 + 5) = *((void *)v20 + 5);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

_OWORD *sub_1008771E8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v12))
    {
      uint64_t v13 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (_OWORD *)((char *)a1 + v14);
  uint64_t v16 = (_OWORD *)((char *)a2 + v14);
  long long v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  long long v15[2] = v16[2];
  return a1;
}

uint64_t sub_100877354(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2 + 6;
  if (*(void *)(a1 + 56) < 2uLL) {
    goto LABEL_4;
  }
  unint64_t v10 = a2[7];
  if (v10 < 2)
  {
    sub_10027B4D4(a1 + 48);
LABEL_4:
    *(_OWORD *)(a1 + 48) = *v9;
    goto LABEL_6;
  }
  *(void *)(a1 + 48) = *(void *)v9;
  *(void *)(a1 + 56) = v10;
  swift_bridgeObjectRelease();
LABEL_6:
  if ((void *)a1 != a2)
  {
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (char *)a2 + v11;
    sub_1001781AC(a1 + v11, (uint64_t *)&unk_100EAA560);
    uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15))
      {
        uint64_t v16 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v15);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
  }
  uint64_t v17 = *(int *)(a3 + 24);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  *(void *)(a1 + v17) = *(void *)v19;
  swift_release();
  *(void *)(v18 + 8) = *((void *)v19 + 1);
  swift_release();
  *(void *)(v18 + 16) = *((void *)v19 + 2);
  swift_release();
  *(void *)(v18 + 24) = *((void *)v19 + 3);
  swift_release();
  *(unsigned char *)(v18 + 32) = v19[32];
  *(void *)(v18 + 40) = *((void *)v19 + 5);
  swift_release();
  return a1;
}

uint64_t sub_100877580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100877594);
}

uint64_t sub_100877594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100EAA540);
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_100877620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100877634);
}

uint64_t sub_100877634(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100EAA540);
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_1008776B8()
{
  uint64_t v1 = type metadata accessor for ContentStatusBannerView();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + 56) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = v2 + *(int *)(v1 + 20);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(v3, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
    }
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10087785C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1008778DC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E9C738);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v21)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E64BC0);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (result)
    {
      uint64_t v5 = result;
      uint64_t v6 = sub_1000DF0C4((uint64_t)v20, v21);
      __chkstk_darwin(v6);
      uint64_t v8 = (void *)((char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v9 + 16))(v8);
      uint64_t v10 = *v8;
      uint64_t v11 = type metadata accessor for MoonScrubberInteractor();
      v19[3] = v11;
      v19[4] = &off_100E272F8;
      v19[0] = v10;
      uint64_t v12 = type metadata accessor for MoonScrubberModule();
      uint64_t v13 = (void *)swift_allocObject();
      uint64_t v14 = sub_1000DF0C4((uint64_t)v19, v11);
      __chkstk_darwin(v14);
      uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v17 + 16))(v16);
      uint64_t v18 = *v16;
      v13[5] = v11;
      v13[6] = &off_100E272F8;
      void v13[2] = v18;
      v13[7] = v5;
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v19);
      uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v20);
      a2[3] = v12;
      a2[4] = &off_100E2EDF8;
      *a2 = v13;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100877B48()
{
  sub_10017DF08(&qword_100E9C738);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E9C740);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(qword_100E9C748);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E64BC0);
  RegistrationContainer.register<A>(_:name:factory:)();

  return swift_release();
}

uint64_t sub_100877C54@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v5)
  {
    uint64_t v4 = type metadata accessor for MoonScrubberInteractor();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v5;
    *(void *)(result + 24) = v6;
    a2[3] = v4;
    a2[4] = (uint64_t)&off_100E272F8;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100877CF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for MoonScrubberInputFactory();
  uint64_t result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_100E180A8;
  *a1 = result;
  return result;
}

uint64_t sub_100877D38@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v5)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = type metadata accessor for MoonScrubberViewModelFactory();
    swift_allocObject();
    uint64_t result = sub_10056743C();
    a2[3] = v4;
    a2[4] = (uint64_t)&off_100E1A5C0;
    *a2 = result;
  }
  return result;
}

uint64_t sub_100877DD0(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v3 = v18;
  if (!v18)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = v20;
  uint64_t v4 = v21;
  uint64_t v6 = v19;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E9C740);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v17)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v7 = *sub_1001B1E64(v16, v17);
  uint64_t v14 = type metadata accessor for MoonScrubberInputFactory();
  uint64_t v15 = &off_100E180A8;
  v13[0] = v7;
  sub_10020D948((uint64_t)v13, (uint64_t)v12);
  uint64_t v8 = swift_allocObject();
  sub_1001262E4(v12, v8 + 16);
  swift_retain();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v16);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100878124;
  *(void *)(v9 + 24) = v8;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(qword_100E9C748);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v17)
  {
    uint64_t v10 = *sub_1001B1E64(v16, v17);
    uint64_t v14 = type metadata accessor for MoonScrubberViewModelFactory();
    uint64_t v15 = &off_100E1A5C0;
    v13[0] = v10;
    sub_10020D948((uint64_t)v13, (uint64_t)v12);
    uint64_t v11 = swift_allocObject();
    sub_1001262E4(v12, v11 + 16);
    swift_retain();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v16);
    sub_10017DF08(&qword_100E64BC0);
    swift_allocObject();
    return sub_10025B114(v3, v6, v5, v4, sub_10025969C, 0, sub_100137F50, v9, sub_100878164, v11);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100878054@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1004A9FA0(a1, a3);
}

uint64_t sub_1008780A0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1005674D4(a1, a3);
}

uint64_t sub_1008780EC()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_100878124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100878054(a1, (void *)(v2 + 16), a2);
}

uint64_t sub_10087812C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100878164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008780A0(a1, (void *)(v2 + 16), a2);
}

uint64_t type metadata accessor for DefaultContentView()
{
  return sub_100109098();
}

uint64_t sub_100878188()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1008781CC@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v57 = a7;
  uint64_t v58 = a6;
  uint64_t v45 = a4;
  uint64_t v52 = a3;
  v70[1] = a5;
  v70[2] = a5;
  v70[3] = a5;
  int v9 = a2;
  unsigned int v10 = a2 & 0x100;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  v70[7] = a5;
  sub_100179D2C();
  uint64_t v50 = sub_10017F7C0();
  uint64_t v56 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v53 = v11;
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v55 = v13;
  __chkstk_darwin(v14);
  uint64_t v54 = (uint64_t)&v41 - v15;
  v70[0] = a5;
  v70[1] = type metadata accessor for Optional();
  v70[2] = a5;
  v70[3] = a5;
  v70[4] = a5;
  v70[5] = a5;
  sub_100179D2C();
  sub_10017F7C0();
  uint64_t v51 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v49 = v16;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v59 = v18;
  __chkstk_darwin(v19);
  uint64_t v60 = (uint64_t)&v41 - v20;
  if (v9)
  {
    if (v9 == 1)
    {
      if (v10)
      {
        uint64_t v21 = &qword_100E87558;
        goto LABEL_11;
      }
    }
    else if (v10)
    {
      uint64_t v21 = &qword_100E878E8;
      goto LABEL_11;
    }
    uint64_t v21 = &qword_100E87720;
    goto LABEL_11;
  }
  if (v10) {
    uint64_t v21 = &qword_100E871C8;
  }
  else {
    uint64_t v21 = &qword_100E87390;
  }
LABEL_11:
  memcpy(v70, v21, sizeof(v70));
  uint64_t v22 = memcpy(v69, v70, sizeof(v69));
  __chkstk_darwin(v22);
  uint64_t v23 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v23;
  *(&v41 - 6) = a1;
  *((unsigned char *)&v41 - 40) = v9;
  uint64_t v44 = a1;
  int v42 = v9;
  unsigned int v43 = v10 >> 8;
  *((unsigned char *)&v41 - 39) = BYTE1(v10);
  uint64_t v24 = v45;
  *(&v41 - 4) = v52;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v26 = v59;
  Group<A>.init(content:)();
  uint64_t v68 = WitnessTable;
  uint64_t v27 = v51;
  uint64_t v46 = swift_getWitnessTable();
  sub_100121584(v26, v27, v60);
  uint64_t v28 = v49;
  uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8);
  uint64_t v48 = v49 + 8;
  uint64_t v29 = v47(v26, v27);
  __chkstk_darwin(v29);
  uint64_t v30 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v30;
  *(&v41 - 6) = v44;
  *((unsigned char *)&v41 - 40) = v42;
  *((unsigned char *)&v41 - 39) = v43;
  *(&v41 - 4) = v31;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v55;
  Group<A>.init(content:)();
  uint64_t v67 = v32;
  uint64_t v34 = v56;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v35 = v54;
  sub_100121584(v33, v34, v54);
  uint64_t v36 = v53;
  uint64_t v37 = *(void (**)(void))(v53 + 8);
  sub_10017C768();
  v37();
  uint64_t v38 = v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v59, v60, v27);
  uint64_t v65 = v38;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v33, v35, v34);
  uint64_t v66 = v33;
  uint64_t v63 = v27;
  uint64_t v64 = v34;
  uint64_t v61 = v46;
  uint64_t v62 = v58;
  sub_1006E9080();
  sub_10017C768();
  v37();
  uint64_t v39 = v47;
  v47(v60, v27);
  sub_10017C768();
  v37();
  return v39(v38, v27);
}

uint64_t sub_100878694@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t, uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v100 = a6;
  uint64_t v108 = a2;
  uint64_t v88 = a7;
  uint64_t v11 = sub_10017DF08(&qword_100E64E80);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = type metadata accessor for Optional();
  uint64_t v98 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v104 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v103 = (char *)&v84 - v16;
  uint64_t v86 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v86);
  uint64_t v85 = (uint64_t)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v84 - v19;
  uint64_t v21 = *(void *)(a5 - 8);
  __chkstk_darwin(v22);
  uint64_t v97 = (char *)&v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v96 = (char *)&v84 - v25;
  __chkstk_darwin(v26);
  uint64_t v95 = (char *)&v84 - v27;
  __chkstk_darwin(v28);
  uint64_t v93 = (char *)&v84 - v29;
  __chkstk_darwin(v30);
  uint64_t v94 = (char *)&v84 - v31;
  __chkstk_darwin(v32);
  uint64_t v92 = (char *)&v84 - v33;
  __chkstk_darwin(v34);
  uint64_t v101 = (char *)&v84 - v35;
  __chkstk_darwin(v36);
  uint64_t v107 = (char *)&v84 - v37;
  __chkstk_darwin(v38);
  uint64_t v40 = (char *)&v84 - v39;
  __chkstk_darwin(v41);
  unsigned int v43 = (char *)&v84 - v42;
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather14DefaultContent8_Storage_airQuality, (uint64_t)v20);
  uint64_t v44 = *a4;
  uint64_t v45 = a4[1];
  uint64_t v46 = a4[2];
  uint64_t v47 = a4[3];
  uint64_t v89 = a3;
  v108(v20, v44, v45, v46, v47);
  uint64_t v48 = (uint64_t)v20;
  sub_1001F2B74((uint64_t)v20);
  uint64_t v91 = v43;
  sub_100121584((uint64_t)v40, a5, (uint64_t)v43);
  uint64_t v87 = v21;
  uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  uint64_t v106 = v40;
  uint64_t v99 = v21 + 8;
  uint64_t v90 = v49;
  v49((uint64_t)v40, a5);
  uint64_t v102 = a1;
  uint64_t v50 = a1 + OBJC_IVAR____TtCV7Weather14DefaultContent8_Storage_map;
  swift_beginAccess();
  sub_10027A764(v50, (uint64_t)v13);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v86) == 1)
  {
    sub_10027A7CC((uint64_t)v13);
  }
  else
  {
    uint64_t v51 = v85;
    sub_10027A82C((uint64_t)v13, v85);
    sub_10027A890((uint64_t)(a4 + 24), (uint64_t)v128);
    sub_10027A890((uint64_t)v128, (uint64_t)v129);
    if (v130 != 1)
    {
      uint64_t v55 = (uint64_t)v107;
      v108((char *)v51, v129[0], v129[1], v129[2], v129[3]);
      sub_1001F2B74(v51);
      uint64_t v56 = (uint64_t)v106;
      sub_100121584(v55, a5, (uint64_t)v106);
      uint64_t v57 = v90;
      uint64_t v48 = (uint64_t)v20;
      v90(v55, a5);
      uint64_t v58 = (uint64_t)v104;
      sub_100121584(v56, a5, (uint64_t)v104);
      v57(v56, a5);
      _s7Weather24LocationCompositionStateOwst_0(v58, 0, 1, a5);
      sub_1000CA354();
      uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
      uint64_t v86 = (v98 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v59(v58, v105);
      goto LABEL_7;
    }
    sub_1001F2B74(v51);
  }
  uint64_t v52 = (uint64_t)v104;
  uint64_t v53 = v105;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v104, 1, 1, a5);
  sub_1000CA354();
  uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
  uint64_t v86 = (v98 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v54(v52, v53);
LABEL_7:
  uint64_t v60 = v102;
  sub_1001F3734(*(void *)(v102 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v48);
  uint64_t v61 = (uint64_t)v107;
  v108((char *)v48, a4[16], a4[17], a4[18], a4[19]);
  sub_1001F2B74(v48);
  sub_100121584(v61, a5, (uint64_t)v106);
  uint64_t v62 = v90;
  v90(v61, a5);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v48);
  uint64_t v63 = (uint64_t)v101;
  uint64_t v64 = v108;
  v108((char *)v48, a4[8], a4[9], a4[10], a4[11]);
  sub_1001F2B74(v48);
  sub_100121584(v63, a5, v61);
  v62(v63, a5);
  sub_1001F3734(*(void *)(v102 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, v48);
  uint64_t v65 = (uint64_t)v92;
  v64((char *)v48, a4[45], a4[46], a4[47], a4[48]);
  sub_1001F2B74(v48);
  uint64_t v66 = v63;
  uint64_t v67 = v100;
  sub_100121584(v65, a5, v66);
  v62(v65, a5);
  sub_1001F3734(*(void *)(v102 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, v48);
  uint64_t v68 = a4[41];
  uint64_t v69 = a4[42];
  uint64_t v70 = a4[43];
  uint64_t v71 = a4[44];
  uint64_t v72 = (uint64_t)v94;
  v108((char *)v48, v68, v69, v70, v71);
  sub_1001F2B74(v48);
  sub_100121584(v72, a5, v65);
  v62(v72, a5);
  uint64_t v73 = *(void (**)(void))(v87 + 16);
  ((void (*)(uint64_t, char *, uint64_t))v73)(v72, v91, a5);
  uint64_t v122 = v72;
  uint64_t v74 = v98 + 16;
  uint64_t v75 = (uint64_t)v104;
  (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v104, v103, v105);
  uint64_t v123 = v75;
  uint64_t v76 = v93;
  v73();
  uint64_t v124 = v76;
  uint64_t v77 = v95;
  v73();
  int v125 = v77;
  uint64_t v78 = v96;
  ((void (*)(char *, char *, uint64_t))v73)(v96, v101, a5);
  uint64_t v126 = v78;
  uint64_t v79 = v97;
  uint64_t v80 = v92;
  ((void (*)(char *, char *, uint64_t))v73)(v97, v92, a5);
  uint64_t v127 = v79;
  uint64_t v81 = v105;
  uint64_t v116 = a5;
  uint64_t v117 = v105;
  uint64_t v118 = a5;
  uint64_t v119 = a5;
  uint64_t v120 = a5;
  uint64_t v121 = a5;
  uint64_t v109 = v67;
  uint64_t v110 = v67;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v112 = v67;
  uint64_t v113 = v67;
  uint64_t v114 = v67;
  uint64_t v115 = v67;
  sub_1006E9080();
  v62((uint64_t)v80, a5);
  v62((uint64_t)v101, a5);
  v62((uint64_t)v107, a5);
  v62((uint64_t)v106, a5);
  uint64_t v82 = *(void (**)(char *, uint64_t))(v74 - 8);
  v82(v103, v81);
  v62((uint64_t)v91, a5);
  v62((uint64_t)v97, a5);
  v62((uint64_t)v96, a5);
  v62((uint64_t)v95, a5);
  v62((uint64_t)v93, a5);
  v82(v104, v81);
  return ((uint64_t (*)(char *, uint64_t))v62)(v94, a5);
}

uint64_t sub_100879028@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v102 = a5;
  uint64_t v84 = a6;
  uint64_t v10 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = *(void *)(a4 - 8);
  uint64_t v13 = v82;
  __chkstk_darwin(v14);
  uint64_t v83 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v98 = (char *)&v82 - v17;
  __chkstk_darwin(v18);
  uint64_t v97 = (char *)&v82 - v19;
  __chkstk_darwin(v20);
  uint64_t v96 = (char *)&v82 - v21;
  __chkstk_darwin(v22);
  uint64_t v95 = (char *)&v82 - v23;
  __chkstk_darwin(v24);
  uint64_t v93 = (char *)&v82 - v25;
  __chkstk_darwin(v26);
  uint64_t v92 = (char *)&v82 - v27;
  __chkstk_darwin(v28);
  uint64_t v90 = (char *)&v82 - v29;
  __chkstk_darwin(v30);
  uint64_t v89 = (char *)&v82 - v31;
  __chkstk_darwin(v32);
  uint64_t v101 = (char *)&v82 - v33;
  __chkstk_darwin(v34);
  uint64_t v87 = (char *)&v82 - v35;
  __chkstk_darwin(v36);
  uint64_t v86 = (char *)&v82 - v37;
  __chkstk_darwin(v38);
  uint64_t v100 = (char *)&v82 - v39;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v82 - v41;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v82 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v82 - v47;
  uint64_t v94 = (char *)&v82 - v47;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v12);
  uint64_t v49 = a3[53];
  uint64_t v50 = a3[54];
  uint64_t v51 = a3[55];
  uint64_t v52 = a3[56];
  uint64_t v99 = a2;
  a2(v12, v49, v50, v51, v52);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v45, a4, (uint64_t)v48);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v91 = v45;
  v53(v45, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)v12);
  a2(v12, a3[37], a3[38], a3[39], a3[40]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v42, a4, (uint64_t)v45);
  uint64_t v88 = v42;
  v53(v42, a4);
  uint64_t v85 = a1;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v12);
  uint64_t v54 = (uint64_t)v100;
  v99(v12, a3[12], a3[13], a3[14], a3[15]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v54, a4, (uint64_t)v42);
  uint64_t v55 = v54;
  v53((char *)v54, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)v12);
  uint64_t v56 = (uint64_t)v86;
  uint64_t v57 = v99;
  v99(v12, a3[20], a3[21], a3[22], a3[23]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v56, a4, v55);
  v53((char *)v56, a4);
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v12);
  uint64_t v58 = (uint64_t)v87;
  v57(v12, a3[49], a3[50], a3[51], a3[52]);
  sub_1001F2B74((uint64_t)v12);
  uint64_t v59 = v58;
  sub_100121584(v58, a4, v56);
  v53((char *)v58, a4);
  uint64_t v60 = v85;
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)v12);
  uint64_t v61 = (uint64_t)v101;
  uint64_t v62 = v99;
  v99(v12, a3[33], a3[34], a3[35], a3[36]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v61, a4, v59);
  v53((char *)v61, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, (uint64_t)v12);
  uint64_t v63 = (uint64_t)v89;
  v62(v12, a3[29], a3[30], a3[31], a3[32]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v63, a4, (uint64_t)v101);
  v53((char *)v63, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, (uint64_t)v12);
  uint64_t v64 = a3[4];
  uint64_t v65 = a3[5];
  uint64_t v66 = a3[6];
  uint64_t v67 = a3[7];
  uint64_t v68 = (uint64_t)v90;
  v62(v12, v64, v65, v66, v67);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v68, a4, v63);
  v53((char *)v68, a4);
  uint64_t v69 = *(void (**)(uint64_t, char *, uint64_t))(v82 + 16);
  v69(v68, v94, a4);
  uint64_t v119 = v68;
  uint64_t v70 = v92;
  v69((uint64_t)v92, v91, a4);
  uint64_t v120 = v70;
  uint64_t v71 = v93;
  v69((uint64_t)v93, v88, a4);
  uint64_t v121 = v71;
  uint64_t v72 = v95;
  v69((uint64_t)v95, v100, a4);
  uint64_t v122 = v72;
  uint64_t v73 = v96;
  uint64_t v74 = v86;
  v69((uint64_t)v96, v86, a4);
  uint64_t v123 = v73;
  uint64_t v75 = v97;
  uint64_t v76 = v87;
  v69((uint64_t)v97, v87, a4);
  uint64_t v124 = v75;
  uint64_t v77 = v98;
  uint64_t v78 = (uint64_t)v101;
  v69((uint64_t)v98, v101, a4);
  int v125 = v77;
  uint64_t v79 = v83;
  uint64_t v80 = v89;
  v69((uint64_t)v83, v89, a4);
  uint64_t v126 = v79;
  uint64_t v111 = a4;
  uint64_t v112 = a4;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v115 = a4;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v103 = v102;
  uint64_t v104 = v102;
  uint64_t v105 = v102;
  uint64_t v106 = v102;
  uint64_t v107 = v102;
  uint64_t v108 = v102;
  uint64_t v109 = v102;
  uint64_t v110 = v102;
  sub_1006E9080();
  v53(v80, a4);
  v53((char *)v78, a4);
  v53(v76, a4);
  v53(v74, a4);
  v53(v100, a4);
  v53(v88, a4);
  v53(v91, a4);
  v53(v94, a4);
  v53(v79, a4);
  v53(v98, a4);
  v53(v97, a4);
  v53(v96, a4);
  v53(v95, a4);
  v53(v93, a4);
  v53(v92, a4);
  return ((uint64_t (*)(char *, uint64_t))v53)(v90, a4);
}

uint64_t sub_100879A70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + 9)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_1008781CC(*(void *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_100879A9C()
{
  return sub_100879ACC((uint64_t (*)(void, void, void, void, void, void, void))sub_100878694);
}

uint64_t sub_100879AB4()
{
  return sub_100879ACC((uint64_t (*)(void, void, void, void, void, void, void))sub_100879028);
}

uint64_t sub_100879ACC(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  if (*(unsigned char *)(v1 + 41)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return a1(*(void *)(v1 + 32), v2 | *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100879B00(uint64_t a1, char a2)
{
  if (a2) {
    int v2 = 1;
  }
  else {
    int v2 = 2;
  }
  return sub_100879B10(a1, v2);
}

uint64_t sub_100879B10(uint64_t a1, int a2)
{
  int v144 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E663E0);
  __chkstk_darwin(v3 - 8);
  uint64_t v141 = (char *)&v136 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E663D8);
  __chkstk_darwin(v5 - 8);
  uint64_t v140 = (uint64_t)&v136 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = type metadata accessor for LocationPreviewModalViewState(0);
  __chkstk_darwin(v151);
  uint64_t v138 = (char *)&v136 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v136 - v9;
  uint64_t v142 = type metadata accessor for LocationPreviewViewState(0);
  __chkstk_darwin(v142);
  uint64_t v139 = (uint64_t)&v136 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v152 = (uint64_t)&v136 - v13;
  uint64_t v14 = sub_10017DF08(&qword_100E663F0);
  __chkstk_darwin(v14 - 8);
  uint64_t v148 = (uint64_t)&v136 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E66418);
  __chkstk_darwin(v16 - 8);
  uint64_t v147 = (uint64_t)&v136 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10017DF08(&qword_100E66420);
  __chkstk_darwin(v18 - 8);
  uint64_t v146 = (uint64_t)&v136 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10017DF08(&qword_100E66428);
  __chkstk_darwin(v20 - 8);
  uint64_t v145 = (uint64_t)&v136 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10017DF08(&qword_100E66430);
  __chkstk_darwin(v22 - 8);
  uint64_t v149 = (uint64_t)&v136 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10017DF08(&qword_100E66438);
  __chkstk_darwin(v24 - 8);
  uint64_t v150 = (uint64_t)&v136 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10017DF08(&qword_100E66440);
  __chkstk_darwin(v26 - 8);
  uint64_t v153 = (uint64_t)&v136 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = type metadata accessor for SunriseSunsetDetailViewState();
  __chkstk_darwin(v143);
  uint64_t v137 = (uint64_t)&v136 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v136 = (uint64_t)&v136 - v30;
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v136 - v32;
  uint64_t v34 = type metadata accessor for ModalViewState(0);
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&v136 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v136 - v38;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v136 - v41;
  uint64_t v43 = type metadata accessor for ModalViewState.LocationDetailModal(0);
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v136 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v136 - v47;
  uint64_t v154 = a1;
  uint64_t v49 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView;
  sub_10011A2CC(v49, (uint64_t)v42, (void (*)(void))type metadata accessor for ModalViewState);
  if (swift_getEnumCaseMultiPayload() == 5)
  {
    sub_10016E234((uint64_t)v42, (uint64_t)v48, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
    sub_10011A2CC((uint64_t)v48, (uint64_t)v45, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_10016E234((uint64_t)v45, (uint64_t)v33, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewState);
      uint64_t v50 = type metadata accessor for AppConfigurationState();
      _s7Weather24LocationCompositionStateOwst_0(v153, 1, 1, v50);
      uint64_t v51 = type metadata accessor for EnvironmentState();
      uint64_t v52 = v150;
      _s7Weather24LocationCompositionStateOwst_0(v150, 1, 1, v51);
      uint64_t v53 = type metadata accessor for LocationsState();
      uint64_t v54 = v149;
      _s7Weather24LocationCompositionStateOwst_0(v149, 1, 1, v53);
      uint64_t v55 = type metadata accessor for NotificationsOptInState();
      uint64_t v56 = v145;
      _s7Weather24LocationCompositionStateOwst_0(v145, 1, 1, v55);
      uint64_t v57 = type metadata accessor for TimeState();
      uint64_t v58 = v146;
      _s7Weather24LocationCompositionStateOwst_0(v146, 1, 1, v57);
      uint64_t v59 = type metadata accessor for ViewState(0);
      uint64_t v60 = v147;
      _s7Weather24LocationCompositionStateOwst_0(v147, 1, 1, v59);
      uint64_t v61 = type metadata accessor for Location();
      uint64_t v62 = v148;
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v148, v33, v61);
      uint64_t v63 = v143;
      uint64_t v64 = *(int *)(v143 + 20);
      uint64_t v65 = &v33[v64];
      char v66 = v33[v64 + 32];
      uint64_t v67 = v62 + v64;
      long long v68 = *((_OWORD *)v65 + 1);
      *(_OWORD *)uint64_t v67 = *(_OWORD *)v65;
      *(_OWORD *)(v67 + 16) = v68;
      *(unsigned char *)(v67 + 32) = v66;
      *(unsigned char *)(v62 + *(int *)(v63 + 24)) = v144;
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0(v62, 0, 1, v34);
      uint64_t v69 = v153;
      uint64_t v70 = v52;
      uint64_t v71 = sub_1001659F0(0, 3, v153, v52, v54, 0, 0, 0, 0, v56, v58, v60, v62, 0, 0, 0, 0, 0, 0,
              0,
              v154);
      sub_1001781AC(v62, &qword_100E663F0);
      sub_1001781AC(v60, &qword_100E66418);
      sub_1001781AC(v58, &qword_100E66420);
      sub_1001781AC(v56, &qword_100E66428);
      sub_1001781AC(v54, &qword_100E66430);
      sub_1001781AC(v70, &qword_100E66438);
      sub_1001781AC(v69, &qword_100E66440);
      sub_10087AC78((uint64_t)v33, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewState);
      uint64_t v72 = type metadata accessor for ModalViewState.LocationDetailModal;
      uint64_t v73 = (uint64_t)v48;
LABEL_24:
      sub_10087AC78(v73, (void (*)(void))v72);
      return v71;
    }
    sub_10087AC78((uint64_t)v48, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
    uint64_t v75 = (uint64_t)v45;
    uint64_t v74 = type metadata accessor for ModalViewState.LocationDetailModal;
  }
  else
  {
    uint64_t v74 = type metadata accessor for ModalViewState;
    uint64_t v75 = (uint64_t)v42;
  }
  sub_10087AC78(v75, (void (*)(void))v74);
  sub_10011A2CC(v49, (uint64_t)v39, (void (*)(void))type metadata accessor for ModalViewState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v77 = v152;
  if (EnumCaseMultiPayload)
  {
    sub_10087AC78((uint64_t)v39, (void (*)(void))type metadata accessor for ModalViewState);
    uint64_t v78 = v151;
  }
  else
  {
    sub_10016E234((uint64_t)v39, v152, (void (*)(void))type metadata accessor for LocationPreviewViewState);
    sub_10011A2CC(v77 + *(int *)(v142 + 20), (uint64_t)v10, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
    uint64_t v78 = v151;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      uint64_t v79 = v136;
      sub_10016E234((uint64_t)v10, v136, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewState);
      uint64_t v80 = type metadata accessor for AppConfigurationState();
      _s7Weather24LocationCompositionStateOwst_0(v153, 1, 1, v80);
      uint64_t v81 = type metadata accessor for EnvironmentState();
      _s7Weather24LocationCompositionStateOwst_0(v150, 1, 1, v81);
      uint64_t v82 = type metadata accessor for LocationsState();
      uint64_t v83 = v149;
      _s7Weather24LocationCompositionStateOwst_0(v149, 1, 1, v82);
      uint64_t v84 = type metadata accessor for NotificationsOptInState();
      uint64_t v85 = v145;
      _s7Weather24LocationCompositionStateOwst_0(v145, 1, 1, v84);
      uint64_t v86 = type metadata accessor for TimeState();
      uint64_t v87 = v146;
      _s7Weather24LocationCompositionStateOwst_0(v146, 1, 1, v86);
      uint64_t v88 = type metadata accessor for ViewState(0);
      uint64_t v89 = v147;
      _s7Weather24LocationCompositionStateOwst_0(v147, 1, 1, v88);
      uint64_t v90 = type metadata accessor for PreviewLocation();
      uint64_t v91 = v140;
      _s7Weather24LocationCompositionStateOwst_0(v140, 1, 1, v90);
      uint64_t v92 = type metadata accessor for Location();
      uint64_t v93 = v77;
      uint64_t v94 = (uint64_t)v141;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v92 - 8) + 16))(v141, v79, v92);
      uint64_t v95 = v143;
      uint64_t v96 = *(int *)(v143 + 20);
      uint64_t v97 = (_OWORD *)(v79 + v96);
      char v98 = *(unsigned char *)(v79 + v96 + 32);
      uint64_t v99 = v94 + v96;
      long long v100 = v97[1];
      *(_OWORD *)uint64_t v99 = *v97;
      *(_OWORD *)(v99 + 16) = v100;
      *(unsigned char *)(v99 + 32) = v98;
      *(unsigned char *)(v94 + *(int *)(v95 + 24)) = v144;
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0(v94, 0, 1, v78);
      uint64_t v101 = v148;
      sub_1004E4A98(v91, v94, v148);
      sub_1001781AC(v94, &qword_100E663E0);
      sub_1001781AC(v91, &qword_100E663D8);
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0(v101, 0, 1, v34);
      uint64_t v102 = v153;
      uint64_t v103 = v150;
      uint64_t v71 = sub_1001659F0(0, 3, v153, v150, v83, 0, 0, 0, 0, v85, v87, v89, v101, 0, 0, 0, 0, 0, 0,
              0,
              v154);
      sub_1001781AC(v101, &qword_100E663F0);
      sub_1001781AC(v89, &qword_100E66418);
      sub_1001781AC(v87, &qword_100E66420);
      sub_1001781AC(v85, &qword_100E66428);
      sub_1001781AC(v83, &qword_100E66430);
      sub_1001781AC(v103, &qword_100E66438);
      sub_1001781AC(v102, &qword_100E66440);
      uint64_t v104 = v79;
LABEL_23:
      sub_10087AC78(v104, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewState);
      uint64_t v72 = type metadata accessor for LocationPreviewViewState;
      uint64_t v73 = v93;
      goto LABEL_24;
    }
    sub_10087AC78(v77, (void (*)(void))type metadata accessor for LocationPreviewViewState);
    sub_10087AC78((uint64_t)v10, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
  }
  sub_10011A2CC(v49, (uint64_t)v36, (void (*)(void))type metadata accessor for ModalViewState);
  if (swift_getEnumCaseMultiPayload() != 4)
  {
    uint64_t v106 = type metadata accessor for ModalViewState;
    goto LABEL_15;
  }
  uint64_t v105 = type metadata accessor for ModalViewState.MapViewModal(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v105) != 1)
  {
    uint64_t v93 = v139;
    sub_10016E234((uint64_t)v36, v139, (void (*)(void))type metadata accessor for LocationPreviewViewState);
    uint64_t v36 = v138;
    sub_10011A2CC(v93 + *(int *)(v142 + 20), (uint64_t)v138, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      uint64_t v111 = v137;
      sub_10016E234((uint64_t)v36, v137, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewState);
      uint64_t v112 = type metadata accessor for AppConfigurationState();
      _s7Weather24LocationCompositionStateOwst_0(v153, 1, 1, v112);
      uint64_t v113 = type metadata accessor for EnvironmentState();
      _s7Weather24LocationCompositionStateOwst_0(v150, 1, 1, v113);
      uint64_t v114 = type metadata accessor for LocationsState();
      _s7Weather24LocationCompositionStateOwst_0(v149, 1, 1, v114);
      uint64_t v115 = type metadata accessor for NotificationsOptInState();
      uint64_t v116 = v145;
      _s7Weather24LocationCompositionStateOwst_0(v145, 1, 1, v115);
      uint64_t v117 = type metadata accessor for TimeState();
      uint64_t v118 = v146;
      _s7Weather24LocationCompositionStateOwst_0(v146, 1, 1, v117);
      uint64_t v119 = type metadata accessor for ViewState(0);
      uint64_t v120 = v147;
      _s7Weather24LocationCompositionStateOwst_0(v147, 1, 1, v119);
      uint64_t v121 = type metadata accessor for PreviewLocation();
      uint64_t v122 = v140;
      _s7Weather24LocationCompositionStateOwst_0(v140, 1, 1, v121);
      uint64_t v123 = type metadata accessor for Location();
      uint64_t v124 = (uint64_t)v141;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v123 - 8) + 16))(v141, v111, v123);
      uint64_t v125 = v143;
      uint64_t v126 = *(int *)(v143 + 20);
      uint64_t v127 = (_OWORD *)(v111 + v126);
      char v128 = *(unsigned char *)(v111 + v126 + 32);
      uint64_t v129 = v124 + v126;
      long long v130 = v127[1];
      *(_OWORD *)uint64_t v129 = *v127;
      *(_OWORD *)(v129 + 16) = v130;
      *(unsigned char *)(v129 + 32) = v128;
      *(unsigned char *)(v124 + *(int *)(v125 + 24)) = v144;
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0(v124, 0, 1, v78);
      uint64_t v131 = v148;
      sub_1004E4A98(v122, v124, v148);
      sub_1001781AC(v124, &qword_100E663E0);
      sub_1001781AC(v122, &qword_100E663D8);
      _s7Weather24LocationCompositionStateOwst_0(v131, 0, 1, v105);
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0(v131, 0, 1, v34);
      uint64_t v132 = v153;
      uint64_t v134 = v149;
      uint64_t v133 = v150;
      uint64_t v71 = sub_1001659F0(0, 3, v153, v150, v149, 0, 0, 0, 0, v116, v118, v120, v131, 0, 0, 0, 0, 0, 0,
              0,
              v154);
      sub_1001781AC(v131, &qword_100E663F0);
      sub_1001781AC(v120, &qword_100E66418);
      sub_1001781AC(v118, &qword_100E66420);
      sub_1001781AC(v116, &qword_100E66428);
      sub_1001781AC(v134, &qword_100E66430);
      sub_1001781AC(v133, &qword_100E66438);
      sub_1001781AC(v132, &qword_100E66440);
      uint64_t v104 = v137;
      goto LABEL_23;
    }
    sub_10087AC78(v93, (void (*)(void))type metadata accessor for LocationPreviewViewState);
    uint64_t v106 = type metadata accessor for LocationPreviewModalViewState;
LABEL_15:
    sub_10087AC78((uint64_t)v36, (void (*)(void))v106);
    goto LABEL_16;
  }
  sub_1001781AC((uint64_t)v36, &qword_100E663E8);
LABEL_16:
  uint64_t v71 = v154;
  if (qword_100E627E8 != -1) {
    swift_once();
  }
  uint64_t v107 = type metadata accessor for Logger();
  sub_1002102B0(v107, (uint64_t)qword_100F51ED0);
  uint64_t v108 = Logger.logObject.getter();
  os_log_type_t v109 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v108, v109))
  {
    uint64_t v110 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v110 = 0;
    _os_log_impl((void *)&_mh_execute_header, v108, v109, "Update data state when there is no modal presented", v110, 2u);
    swift_slowDealloc();
  }

  swift_retain();
  return v71;
}

uint64_t sub_10087AC78(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10087ACD0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ViewState(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10059BF00(a1, (uint64_t)v5);
  LOBYTE(v5) = sub_10065DC18((uint64_t)v5);
  uint64_t v6 = (int *)type metadata accessor for NotificationsOptInInput();
  int v7 = *(unsigned __int8 *)(a1 + v6[6]);
  int v8 = *(unsigned __int8 *)(a1 + v6[8]);
  char v9 = *(unsigned char *)(a1 + v6[9]);
  char v10 = *(unsigned char *)(a1 + v6[10]);
  char v11 = *(unsigned char *)(a1 + v6[7]);
  LOBYTE(a1) = *(unsigned char *)(a1 + v6[5]);
  unsigned __int8 v12 = sub_10087ADEC((char)v5, a1, v7 == 1, v8, v9, v10, v11);
  int v13 = *(unsigned __int8 *)(v1 + 16);
  int v14 = sub_10013D94C(v9, 0, 0, a1, v7);
  *(unsigned char *)(v1 + 16) = v12;
  if (v8) {
    int v15 = 0x10000;
  }
  else {
    int v15 = 0;
  }
  return v15 & 0xFFFFFF00 | (v14 << 24) | (v13 << 8) | v12;
}

uint64_t sub_10087ADEC(char a1, char a2, char a3, char a4, char a5, char a6, char a7)
{
  if (a7) {
    return 2;
  }
  if (a1 == 2 || (a1 & 1) != 0) {
    return sub_10087AE48(a2, a3 & 1, a4 & 1, a5 & 1, a6 & 1);
  }
  if (a4) {
    unsigned int v8 = 3;
  }
  else {
    unsigned int v8 = 5;
  }
  if ((a6 & 1) == 0) {
    unsigned int v8 = 1;
  }
  if (a3) {
    return 3;
  }
  else {
    return v8;
  }
}

uint64_t sub_10087AE48(char a1, char a2, char a3, char a4, char a5)
{
  switch(a1)
  {
    case 1:
    case 2:
    case 3:
    case 4:
      char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      uint64_t result = 0;
      if (v10) {
        return result;
      }
      if (LocationAuthorizationState.rawValue.getter(a1) == 0xD000000000000013 && v12 == 0x8000000100C954E0)
      {
        swift_bridgeObjectRelease();
        if ((a4 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v13)
        {
          uint64_t result = 0;
          if ((a4 & 1) == 0) {
            return result;
          }
        }
      }
      if (LocationAuthorizationState.rawValue.getter(a1) == 0xD000000000000010 && v14 == 0x8000000100C95500)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v19 & 1) == 0 && (a4 & 1) != 0 && (a3) {
          return 3;
        }
      }
      if (LocationAuthorizationState.rawValue.getter(a1) == 0x6465696E6564 && v15 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v17) {
        return 4;
      }
      if (LocationAuthorizationState.rawValue.getter(a1) == 0xD000000000000013 && v18 == 0x8000000100C954E0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
      char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v20)
      {
LABEL_29:
        if ((a4 & 1) == 0) {
          goto LABEL_30;
        }
        return 4;
      }
LABEL_30:
      if (a3) {
        unsigned int v21 = 3;
      }
      else {
        unsigned int v21 = 5;
      }
      if ((a5 & 1) == 0) {
        unsigned int v21 = 1;
      }
      if (a2) {
        return 3;
      }
      else {
        return v21;
      }
    default:
      swift_bridgeObjectRelease();
      return 0;
  }
}

uint64_t sub_10087B12C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v52 = a2;
  type metadata accessor for AirQualityScale();
  sub_100179C0C();
  uint64_t v47 = v4;
  uint64_t v48 = v3;
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v49 = type metadata accessor for AirQualityScaleCategory();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  type metadata accessor for ProviderDataOrigination();
  sub_100179C0C();
  uint64_t v45 = v12;
  uint64_t v46 = v11;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  char v17 = (char *)&v45 - v16;
  uint64_t v18 = sub_10017DF08(&qword_100E71950);
  __chkstk_darwin(v18 - 8);
  sub_1001626E0();
  uint64_t v21 = v20 - v19;
  uint64_t v22 = sub_10017DF08(&qword_100E885C0);
  __chkstk_darwin(v22 - 8);
  sub_1001626E0();
  uint64_t v25 = v24 - v23;
  uint64_t v26 = type metadata accessor for AirQuality();
  sub_100179C0C();
  uint64_t v50 = v27;
  __chkstk_darwin(v28);
  sub_1001626E0();
  uint64_t v31 = v30 - v29;
  uint64_t v51 = a1;
  sub_10087B594(a1, v21);
  uint64_t v32 = type metadata accessor for WeatherDataModel();
  if (_s7Weather24LocationCompositionStateOwet_0(v21, 1, v32) == 1)
  {
    sub_1001B36E0(v21, &qword_100E71950);
    _s7Weather24LocationCompositionStateOwst_0(v25, 1, 1, v26);
LABEL_4:
    sub_1001B36E0(v51, &qword_100E71950);
    sub_1001B36E0(v25, &qword_100E885C0);
    uint64_t v34 = 1;
    uint64_t v35 = v52;
LABEL_10:
    uint64_t v44 = type metadata accessor for AQIData();
    return _s7Weather24LocationCompositionStateOwst_0(v35, v34, 1, v44);
  }
  WeatherDataModel.airQuality.getter();
  sub_100162F0C();
  v33();
  if (_s7Weather24LocationCompositionStateOwet_0(v25, 1, v26) == 1) {
    goto LABEL_4;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32))(v31, v25, v26);
  sub_10087B5FC((uint64_t)v17);
  uint64_t result = AirQuality.index.getter();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  AirQuality.currentScaleCategory.getter();
  uint64_t v37 = AirQualityScaleCategory.number.getter();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v10, v49);
  if (v37 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v37 <= 0x7FFFFFFF)
  {
    AirQuality.scale.getter();
    AirQualityScale.displayName.getter();
    sub_100162F0C();
    v38();
    uint64_t v39 = v45;
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
    uint64_t v41 = v15;
    uint64_t v49 = (uint64_t)v17;
    uint64_t v42 = v46;
    v40(v41, v17, v46);
    uint64_t v35 = v52;
    AQIData.init(index:category:scale:providerDataOrigination:)();
    sub_1001B36E0(v51, &qword_100E71950);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v49, v42);
    sub_100162F0C();
    v43();
    uint64_t v34 = 0;
    goto LABEL_10;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_10087B594(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E71950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10087B5FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for AirQualitySourceKind();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for AirQualitySource();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  AirQuality.source.getter();
  AirQualitySource.kind.getter();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v10 == enum case for AirQualitySourceKind.modeled(_:))
  {
    uint64_t v11 = (unsigned int *)&enum case for ProviderDataOrigination.modeled(_:);
LABEL_5:
    uint64_t v13 = *v11;
    uint64_t v14 = type metadata accessor for ProviderDataOrigination();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(a1, v13, v14);
  }
  int v12 = v10;
  if (v10 == enum case for AirQualitySourceKind.station(_:))
  {
    uint64_t v11 = (unsigned int *)&enum case for ProviderDataOrigination.station(_:);
    goto LABEL_5;
  }
  int v16 = enum case for AirQualitySourceKind.unknown(_:);
  uint64_t v17 = enum case for ProviderDataOrigination.unknown(_:);
  uint64_t v18 = type metadata accessor for ProviderDataOrigination();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(a1, v17, v18);
  if (v12 != v16) {
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return result;
}

uint64_t sub_10087B86C(uint64_t a1, uint64_t a2)
{
  uint64_t v354 = a1;
  uint64_t v3 = sub_10017DF08(&qword_100E63730);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v343 = type metadata accessor for EnvironmentState();
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = type metadata accessor for PreviewLocation();
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  uint64_t v18 = sub_100109308(active);
  __chkstk_darwin(v18);
  sub_1001626E0();
  uint64_t v21 = v20 - v19;
  uint64_t v22 = type metadata accessor for SavedLocation();
  uint64_t v23 = sub_100109308(v22);
  __chkstk_darwin(v23);
  sub_100109314();
  sub_100109338(v24);
  uint64_t v25 = sub_10017DF08(&qword_100E663F0);
  uint64_t v26 = sub_100109308(v25);
  __chkstk_darwin(v26);
  sub_100109314();
  v346 = (uint64_t (*)(uint64_t))v27;
  uint64_t v28 = sub_10017DF08(&qword_100E66418);
  uint64_t v29 = sub_100109308(v28);
  __chkstk_darwin(v29);
  sub_100109314();
  uint64_t v347 = v30;
  uint64_t v31 = sub_10017DF08(&qword_100E66420);
  uint64_t v32 = sub_100109308(v31);
  __chkstk_darwin(v32);
  sub_100109314();
  v348 = (_WORD *)v33;
  uint64_t v34 = sub_10017DF08(&qword_100E66428);
  uint64_t v35 = sub_100109308(v34);
  __chkstk_darwin(v35);
  sub_100109314();
  uint64_t v349 = v36;
  uint64_t v37 = sub_10017DF08(&qword_100E66430);
  uint64_t v38 = sub_100109308(v37);
  __chkstk_darwin(v38);
  sub_100109314();
  uint64_t v351 = v39;
  uint64_t v40 = sub_10017DF08(&qword_100E66438);
  uint64_t v41 = sub_100109308(v40);
  __chkstk_darwin(v41);
  sub_100109314();
  v352 = v42;
  uint64_t v43 = sub_10017DF08(&qword_100E66440);
  uint64_t v44 = sub_100109308(v43);
  __chkstk_darwin(v44);
  sub_100109314();
  uint64_t v353 = v45;
  uint64_t v46 = sub_10017DF08(&qword_100E663F8);
  uint64_t v47 = sub_100109308(v46);
  __chkstk_darwin(v47);
  sub_100109314();
  sub_100109338(v48);
  uint64_t v49 = sub_10017DF08(&qword_100E66400);
  uint64_t v50 = sub_100109308(v49);
  __chkstk_darwin(v50);
  sub_100109314();
  sub_100109338(v51);
  uint64_t v52 = sub_10017DF08(&qword_100E66408);
  uint64_t v53 = sub_100109308(v52);
  __chkstk_darwin(v53);
  sub_1001626E0();
  uint64_t v56 = v55 - v54;
  uint64_t v57 = sub_10017DF08(&qword_100E66410);
  uint64_t v58 = sub_100109308(v57);
  __chkstk_darwin(v58);
  sub_100109314();
  sub_100109338(v59);
  uint64_t v344 = type metadata accessor for ViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v60);
  uint64_t v62 = (char *)&v337 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v63);
  uint64_t v342 = (uint64_t)&v337 - v64;
  __chkstk_darwin(v65);
  uint64_t v67 = (char *)&v337 - v66;
  long long v68 = (uint8_t *)type metadata accessor for ActivityAction();
  sub_100162E4C();
  __chkstk_darwin(v69);
  sub_1001626E0();
  uint64_t v72 = v71 - v70;
  type metadata accessor for ModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v73);
  sub_1001626E0();
  uint64_t v350 = v75 - v74;
  uint64_t v345 = v76;
  swift_storeEnumTagMultiPayload();
  sub_10087F114(a2, v72, (void (*)(void))type metadata accessor for ActivityAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10087F174(v72, v16, (void (*)(void))type metadata accessor for PreviewLocation);
      uint64_t v133 = type metadata accessor for AppConfigurationState();
      uint64_t v134 = v353;
      sub_100163050(v353, v135, v136, v133);
      uint64_t v137 = v352;
      uint64_t v138 = sub_10017AA64((uint64_t)v352);
      uint64_t v139 = v351;
      uint64_t v142 = sub_10017A5E0(v351, v140, v141, v138);
      uint64_t v143 = v349;
      uint64_t v146 = sub_10017A0E0(v349, v144, v145, v142);
      sub_100183FC4(v146);
      uint64_t v147 = v346;
      sub_10087F114(v16, (uint64_t)v346, (void (*)(void))type metadata accessor for PreviewLocation);
      type metadata accessor for LocationPreviewViewState(0);
      type metadata accessor for LocationPreviewModalViewState(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v11 = v345;
      swift_storeEnumTagMultiPayload();
      uint64_t v148 = sub_100182C6C();
      _s7Weather24LocationCompositionStateOwst_0(v148, v149, v150, v11);
      sub_10017D678();
      uint64_t v340 = v72;
      v341 = v147;
      uint64_t v338 = v143;
      v339 = (_WORD *)v56;
      uint64_t v151 = sub_10016356C();
      sub_100163034(v151, v152, v134, (uint64_t)v137, v139, v153, v154, v155, v337, v338, (uint64_t)v339, v340, (uint64_t)v341, v342, v343, v344, v345, (char)v346, v347,
        (uint64_t)v348,
        v349);
      sub_100185A74();
      sub_1001781AC((uint64_t)v147, &qword_100E663F0);
      sub_1001781AC(v72, &qword_100E66418);
      sub_1001781AC(v56, &qword_100E66420);
      sub_1001781AC(v143, &qword_100E66428);
      sub_1001781AC(v139, &qword_100E66430);
      sub_1001781AC((uint64_t)v137, &qword_100E66438);
      sub_1001781AC(v134, &qword_100E66440);
      sub_10087F1D4(v16, (void (*)(void))type metadata accessor for PreviewLocation);
      goto LABEL_19;
    case 2u:
      uint64_t v11 = v354;
      sub_10087F114(v354 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (uint64_t)v67, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v156 = v344;
      uint64_t v157 = v342;
      if ((v67[*(int *)(v344 + 40) + 1] & 0xC0) == 0x40)
      {
        uint64_t v158 = type metadata accessor for ViewState.SecondaryViewState(0);
        int v159 = v341;
        uint64_t v162 = sub_10018562C((uint64_t)v341, v160, v161, v158);
        uint64_t v163 = sub_100163A20(v162);
        uint64_t v164 = v340;
        sub_100163050(v340, v165, v166, v163);
        uint64_t v167 = v339;
        sub_1003CDD2C(v339);
        type metadata accessor for WeatherMapPresentationState(0);
        uint64_t v168 = sub_100182C6C();
        _s7Weather24LocationCompositionStateOwst_0(v168, v169, v170, v171);
        sub_10011D8AC();
        sub_1001781AC((uint64_t)v167, &qword_100E663F8);
        sub_1001781AC(v164, &qword_100E66400);
        sub_1001781AC(v56, &qword_100E66408);
        sub_1001781AC((uint64_t)v159, &qword_100E66410);
        sub_10087F1D4((uint64_t)v67, (void (*)(void))type metadata accessor for ViewState);
        sub_10087F174(v157, (uint64_t)v67, (void (*)(void))type metadata accessor for ViewState);
      }
      sub_100987248();
      v341 = type metadata accessor for ViewState;
      sub_10087F1D4((uint64_t)v67, (void (*)(void))type metadata accessor for ViewState);
      sub_10087F174(v157, (uint64_t)v67, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v172 = type metadata accessor for AppConfigurationState();
      uint64_t v173 = v353;
      sub_100163050(v353, v174, v175, v172);
      uint64_t v176 = v352;
      uint64_t v177 = sub_10017AA64((uint64_t)v352);
      uint64_t v178 = v351;
      uint64_t v181 = sub_10017A5E0(v351, v179, v180, v177);
      uint64_t v182 = v349;
      uint64_t v185 = sub_10017A0E0(v349, v183, v184, v181);
      uint64_t v186 = (uint64_t)v348;
      sub_100163050((uint64_t)v348, v187, v188, v185);
      uint64_t v189 = v347;
      sub_10087F114((uint64_t)v67, v347, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v190 = sub_1001A18FC();
      _s7Weather24LocationCompositionStateOwst_0(v190, v191, v192, v156);
      uint64_t v81 = v350;
      uint64_t v193 = (uint64_t)v346;
      sub_10087F114(v350, (uint64_t)v346, (void (*)(void))type metadata accessor for ModalViewState);
      uint64_t v194 = sub_1001279C4();
      _s7Weather24LocationCompositionStateOwst_0(v194, v195, v196, v345);
      uint64_t v197 = sub_10018AB1C();
      sub_100163034(v197, v198, v199, (uint64_t)v176, v178, v200, v201, v202, v336, v182, v186, v189, v193, 0, 0, 0, 0, 0, 0,
        0,
        v11);
      sub_100185A74();
      sub_1001781AC(v193, &qword_100E663F0);
      sub_1001781AC(v189, &qword_100E66418);
      sub_1001781AC(v186, &qword_100E66420);
      sub_1001781AC(v182, &qword_100E66428);
      sub_1001781AC(v178, &qword_100E66430);
      sub_1001781AC((uint64_t)v176, &qword_100E66438);
      sub_1001781AC(v173, &qword_100E66440);
      uint64_t v132 = (uint64_t)v67;
      uint64_t v131 = (uint64_t (**)(void))v341;
      goto LABEL_11;
    case 3u:
      uint64_t v203 = type metadata accessor for AppConfigurationState();
      _s7Weather24LocationCompositionStateOwst_0(v353, 1, 1, v203);
      uint64_t v204 = sub_10017AA64((uint64_t)v352);
      uint64_t v207 = sub_10017A5E0(v351, v205, v206, v204);
      uint64_t v208 = v349;
      uint64_t v211 = sub_10017A0E0(v349, v209, v210, v207);
      uint64_t v212 = (uint64_t)v348;
      sub_100163050((uint64_t)v348, v213, v214, v211);
      uint64_t v215 = v342;
      sub_10087F114(v354 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v342, (void (*)(void))type metadata accessor for ViewState);
      type metadata accessor for ListViewState._Storage();
      swift_allocObject();
      sub_100185D20();
      uint64_t v11 = sub_1001A0038(v216, v217, v218, v219, v220, v221, v222, v223, 0, 0, (uint64_t)v339, v340, (char)v341, SBYTE1(v341));
      uint64_t v224 = type metadata accessor for ViewState.SecondaryViewState(0);
      uint64_t v225 = v341;
      uint64_t v228 = sub_10018562C((uint64_t)v341, v226, v227, v224);
      uint64_t v229 = sub_100163A20(v228);
      uint64_t v230 = sub_10019D990(v229);
      uint64_t v231 = v339;
      sub_100163050((uint64_t)v339, v232, v233, v230);
      uint64_t v234 = v347;
      sub_10011D8AC();
      swift_release();
      sub_1001781AC((uint64_t)v231, &qword_100E663F8);
      sub_1001781AC((uint64_t)v68, &qword_100E66400);
      sub_1001781AC(v56, &qword_100E66408);
      sub_1001781AC((uint64_t)v225, &qword_100E66410);
      sub_10087F1D4(v215, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v235 = sub_1001A18FC();
      _s7Weather24LocationCompositionStateOwst_0(v235, v236, v237, v344);
      uint64_t v81 = v350;
      uint64_t v238 = (uint64_t)v346;
      sub_10087F114(v350, (uint64_t)v346, (void (*)(void))type metadata accessor for ModalViewState);
      _s7Weather24LocationCompositionStateOwst_0(v238, 0, 1, v345);
      sub_10017D678();
      v346 = (uint64_t (*)(uint64_t))v234;
      uint64_t v347 = v238;
      uint64_t v344 = v208;
      uint64_t v345 = v212;
      uint64_t v239 = sub_10016356C();
      __int16 v241 = v352;
      uint64_t v240 = v353;
      uint64_t v242 = v351;
      sub_100163034(v239, v243, v353, (uint64_t)v352, v351, v244, v245, v246, v343, v344, v345, (uint64_t)v346, v347, (uint64_t)v348, v349, v350, v351, (char)v352, v353,
        v354,
        v355);
      sub_100185A74();
      sub_1001781AC(v238, &qword_100E663F0);
      sub_1001781AC(v234, &qword_100E66418);
      sub_1001781AC(v212, &qword_100E66420);
      sub_1001781AC(v208, &qword_100E66428);
      sub_1001781AC(v242, &qword_100E66430);
      sub_1001781AC((uint64_t)v241, &qword_100E66438);
      uint64_t v247 = v240;
      goto LABEL_15;
    case 4u:
      uint64_t v248 = v354;
      int v249 = 1;
      goto LABEL_17;
    case 5u:
      uint64_t v250 = type metadata accessor for AppConfigurationState();
      _s7Weather24LocationCompositionStateOwst_0(v353, 1, 1, v250);
      uint64_t v251 = sub_10017AA64((uint64_t)v352);
      uint64_t v254 = sub_10017A5E0(v351, v252, v253, v251);
      uint64_t v255 = v349;
      uint64_t v258 = sub_10017A0E0(v349, v256, v257, v254);
      uint64_t v259 = (uint64_t)v348;
      sub_100163050((uint64_t)v348, v260, v261, v258);
      uint64_t v262 = v342;
      sub_10087F114(v354 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v342, (void (*)(void))type metadata accessor for ViewState);
      type metadata accessor for ListViewState._Storage();
      swift_allocObject();
      sub_100185D20();
      uint64_t v11 = sub_1001A0038(v263, v264, v265, v266, v267, v268, v269, v270, 0, 1, (uint64_t)v339, v340, (char)v341, SBYTE1(v341));
      uint64_t v271 = type metadata accessor for ViewState.SecondaryViewState(0);
      char v272 = v341;
      uint64_t v275 = sub_10018562C((uint64_t)v341, v273, v274, v271);
      type metadata accessor for SearchViewState.ViewState(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v276 = v56 + *(int *)(v275 + 28);
      uint64_t v277 = type metadata accessor for Location();
      sub_100163050(v276, v278, v279, v277);
      *(void *)uint64_t v56 = 0;
      *(void *)(v56 + 8) = 0xE000000000000000;
      *(unsigned char *)(v56 + *(int *)(v275 + 24)) = 0;
      _s7Weather24LocationCompositionStateOwst_0(v56, 0, 1, v275);
      uint64_t v280 = type metadata accessor for DisplayMetrics();
      uint64_t v281 = v340;
      _s7Weather24LocationCompositionStateOwst_0(v340, 1, 1, v280);
      uint64_t v282 = type metadata accessor for WeatherMapPresentationState(0);
      v283 = v339;
      sub_100163050((uint64_t)v339, v284, v285, v282);
      uint64_t v286 = v347;
      sub_10011D8AC();
      swift_release();
      sub_1001781AC((uint64_t)v283, &qword_100E663F8);
      sub_1001781AC(v281, &qword_100E66400);
      sub_1001781AC(v56, &qword_100E66408);
      sub_1001781AC((uint64_t)v272, &qword_100E66410);
      sub_10087F1D4(v262, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v287 = sub_1001279C4();
      _s7Weather24LocationCompositionStateOwst_0(v287, v288, v289, v344);
      uint64_t v290 = v350;
      uint64_t v291 = (uint64_t)v346;
      sub_10087F114(v350, (uint64_t)v346, (void (*)(void))type metadata accessor for ModalViewState);
      uint64_t v292 = sub_100164998();
      _s7Weather24LocationCompositionStateOwst_0(v292, v293, v294, v345);
      sub_10017D678();
      v346 = (uint64_t (*)(uint64_t))v286;
      uint64_t v347 = v291;
      uint64_t v344 = v255;
      uint64_t v345 = v259;
      uint64_t v295 = sub_10016356C();
      uint64_t v297 = v352;
      uint64_t v296 = v353;
      uint64_t v298 = v351;
      sub_100163034(v295, v299, v353, (uint64_t)v352, v351, v300, v301, v302, v343, v344, v345, (uint64_t)v346, v347, (uint64_t)v348, v349, v350, v351, (char)v352, v353,
        v354,
        v355);
      sub_100185A74();
      sub_1001781AC(v291, &qword_100E663F0);
      sub_1001781AC(v286, &qword_100E66418);
      sub_1001781AC(v259, &qword_100E66420);
      uint64_t v303 = v255;
      uint64_t v81 = v290;
      sub_1001781AC(v303, &qword_100E66428);
      sub_1001781AC(v298, &qword_100E66430);
      sub_1001781AC((uint64_t)v297, &qword_100E66438);
      uint64_t v247 = v296;
LABEL_15:
      sub_1001781AC(v247, &qword_100E66440);
      break;
    case 6u:
      uint64_t v248 = v354;
      int v249 = 0;
LABEL_17:
      uint64_t v11 = sub_10087CDEC(v248, v249);
      goto LABEL_19;
    case 7u:
      uint64_t v304 = type metadata accessor for AppConfigurationState();
      uint64_t v305 = v353;
      sub_100163050(v353, v306, v307, v304);
      uint64_t v308 = v354;
      uint64_t v309 = v354 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
      swift_beginAccess();
      sub_10087F114(v309, v11, (void (*)(void))type metadata accessor for EnvironmentState);
      uint64_t v310 = type metadata accessor for Locale();
      sub_100163050(v7, v311, v312, v310);
      uint64_t v356 = 1;
      long long v357 = 0u;
      long long v358 = 0u;
      uint64_t v359 = 0;
      v313 = v352;
      sub_1000F0AD4(2u, 5, 5, v7, 0, 0, 2, 2, v352, 2, 0, 2, 0, 1, 2, 2, (uint64_t)&v356);
      sub_1001781AC(v7, &qword_100E63730);
      sub_10087F1D4(v11, (void (*)(void))type metadata accessor for EnvironmentState);
      uint64_t v314 = sub_1001279C4();
      _s7Weather24LocationCompositionStateOwst_0(v314, v315, v316, v343);
      uint64_t v317 = type metadata accessor for LocationsState();
      uint64_t v318 = v351;
      uint64_t v321 = sub_10017A5E0(v351, v319, v320, v317);
      uint64_t v322 = v349;
      uint64_t v325 = sub_10017A0E0(v349, v323, v324, v321);
      sub_100183FC4(v325);
      uint64_t v326 = (uint64_t)v346;
      sub_100163050((uint64_t)v346, v327, v328, v345);
      uint64_t v329 = sub_10018AB1C();
      sub_100163034(v329, v330, v331, (uint64_t)v313, v318, v332, v333, v334, v336, v322, v56, v72, v326, 0, 0, 0, 0, 0, 0,
        0,
        v308);
      sub_100185A74();
      sub_1001781AC(v326, &qword_100E663F0);
      sub_1001781AC(v72, &qword_100E66418);
      sub_1001781AC(v56, &qword_100E66420);
      sub_1001781AC(v322, &qword_100E66428);
      sub_1001781AC(v318, &qword_100E66430);
      sub_1001781AC((uint64_t)v313, &qword_100E66438);
      sub_1001781AC(v305, &qword_100E66440);
LABEL_19:
      uint64_t v81 = v350;
      break;
    default:
      sub_10087F174(v72, v338, (void (*)(void))&type metadata accessor for SavedLocation);
      if (qword_100E62848 != -1) {
        swift_once();
      }
      uint64_t v77 = type metadata accessor for Logger();
      sub_1002102B0(v77, (uint64_t)qword_100F51FE0);
      uint64_t v78 = Logger.logObject.getter();
      os_log_type_t v79 = static os_log_type_t.default.getter();
      BOOL v80 = os_log_type_enabled(v78, v79);
      uint64_t v81 = v350;
      if (v80)
      {
        long long v68 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)long long v68 = 0;
        _os_log_impl((void *)&_mh_execute_header, v78, v79, "ActivityActionReducer handling location activity", v68, 2u);
        swift_slowDealloc();
      }

      uint64_t v11 = (uint64_t)type metadata accessor for ViewState;
      sub_10087F114(v354 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (uint64_t)v62, (void (*)(void))type metadata accessor for ViewState);
      SavedLocation.identifier.getter();
      type metadata accessor for Location.Identifier();
      uint64_t v82 = sub_100164998();
      _s7Weather24LocationCompositionStateOwst_0(v82, v83, v84, v85);
      type metadata accessor for LocationViewerViewState._Storage(0);
      swift_allocObject();
      uint64_t v86 = sub_1001CCEF8(v21, 0, 0, 2, 0, 0);
      uint64_t v87 = v341;
      *(void *)v341 = v86;
      uint64_t v88 = type metadata accessor for ViewState.SecondaryViewState(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v89 = sub_100164998();
      _s7Weather24LocationCompositionStateOwst_0(v89, v90, v91, v88);
      uint64_t v92 = type metadata accessor for SearchViewState(0);
      uint64_t v93 = sub_100163A20(v92);
      uint64_t v94 = sub_10019D990(v93);
      uint64_t v95 = v339;
      sub_100163050((uint64_t)v339, v96, v97, v94);
      uint64_t v98 = v342;
      sub_10011D8AC();
      sub_1001781AC((uint64_t)v95, &qword_100E663F8);
      sub_1001781AC((uint64_t)v68, &qword_100E66400);
      sub_1001781AC(v56, &qword_100E66408);
      sub_1001781AC((uint64_t)v87, &qword_100E66410);
      v341 = type metadata accessor for ViewState;
      sub_10087F1D4((uint64_t)v62, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v99 = type metadata accessor for AppConfigurationState();
      uint64_t v100 = v353;
      sub_100163050(v353, v101, v102, v99);
      uint64_t v103 = v352;
      uint64_t v104 = sub_10017AA64((uint64_t)v352);
      uint64_t v105 = v351;
      uint64_t v108 = sub_10017A5E0(v351, v106, v107, v104);
      uint64_t v109 = v349;
      uint64_t v112 = sub_10017A0E0(v349, v110, v111, v108);
      uint64_t v113 = v348;
      sub_100163050((uint64_t)v348, v114, v115, v112);
      uint64_t v116 = v98;
      uint64_t v117 = v98;
      uint64_t v118 = v347;
      sub_10087F114(v116, v347, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v119 = sub_100182C6C();
      _s7Weather24LocationCompositionStateOwst_0(v119, v120, v121, v344);
      uint64_t v122 = v346;
      sub_10087F114(v81, (uint64_t)v346, (void (*)(void))type metadata accessor for ModalViewState);
      uint64_t v123 = sub_1001A18FC();
      _s7Weather24LocationCompositionStateOwst_0(v123, v124, v125, v345);
      sub_10017D678();
      uint64_t v340 = v118;
      v341 = v122;
      uint64_t v338 = v109;
      v339 = v113;
      uint64_t v126 = sub_10016356C();
      sub_100163034(v126, v127, v100, (uint64_t)v103, v105, v128, v129, v130, v337, v338, (uint64_t)v339, v340, (uint64_t)v341, v342, v343, v344, v345, (char)v346, v347,
        (uint64_t)v348,
        v349);
      sub_100185A74();
      sub_1001781AC((uint64_t)v122, &qword_100E663F0);
      sub_1001781AC(v118, &qword_100E66418);
      sub_1001781AC((uint64_t)v113, &qword_100E66420);
      sub_1001781AC(v109, &qword_100E66428);
      sub_1001781AC(v105, &qword_100E66430);
      sub_1001781AC((uint64_t)v103, &qword_100E66438);
      sub_1001781AC(v100, &qword_100E66440);
      sub_10087F1D4(v117, (void (*)(void))v341);
      uint64_t v131 = &type metadata accessor for SavedLocation;
      uint64_t v132 = v338;
LABEL_11:
      sub_10087F1D4(v132, (void (*)(void))v131);
      break;
  }
  sub_10087F1D4(v81, (void (*)(void))type metadata accessor for ModalViewState);
  return v11;
}

uint64_t sub_10087CDEC(uint64_t a1, int a2)
{
  LODWORD(v214) = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E66678);
  __chkstk_darwin(v3 - 8);
  uint64_t v208 = (uint64_t)&v202 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v207 = type metadata accessor for SavedLocation();
  __chkstk_darwin(v207);
  uint64_t v203 = (uint64_t)&v202 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Location.Identifier();
  uint64_t v206 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v205 = (char *)&v202 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ViewState.SecondaryViewState(0);
  __chkstk_darwin(v8);
  uint64_t v211 = (uint64_t *)((char *)&v202 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_10017DF08(&qword_100E663F0);
  __chkstk_darwin(v10 - 8);
  uint64_t v223 = (uint64_t)&v202 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E663F8);
  __chkstk_darwin(v12 - 8);
  uint64_t v221 = (uint64_t)&v202 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100E66400);
  __chkstk_darwin(v14 - 8);
  uint64_t v222 = (uint64_t)&v202 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E66408);
  __chkstk_darwin(v16 - 8);
  uint64_t v224 = (uint64_t)&v202 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  __chkstk_darwin(active - 8);
  uint64_t v204 = (uint64_t *)((char *)&v202 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v20);
  uint64_t v213 = (uint64_t)&v202 - v21;
  __chkstk_darwin(v22);
  uint64_t v217 = (uint64_t)&v202 - v23;
  uint64_t v24 = sub_10017DF08(&qword_100E66410);
  __chkstk_darwin(v24 - 8);
  uint64_t v219 = (uint64_t *)((char *)&v202 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v231 = type metadata accessor for ViewState(0);
  __chkstk_darwin(v231);
  uint64_t v210 = (uint64_t)&v202 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v220 = (uint64_t)&v202 - v28;
  uint64_t v29 = sub_10017DF08(&qword_100E66418);
  __chkstk_darwin(v29 - 8);
  uint64_t v227 = (char *)&v202 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_10017DF08(&qword_100E66420);
  __chkstk_darwin(v31 - 8);
  uint64_t v228 = (uint64_t)&v202 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_10017DF08(&qword_100E66428);
  __chkstk_darwin(v33 - 8);
  uint64_t v233 = (uint64_t)&v202 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_10017DF08(&qword_100E66430);
  __chkstk_darwin(v35 - 8);
  uint64_t v235 = (uint64_t)&v202 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_10017DF08(&qword_100E63730);
  __chkstk_darwin(v37 - 8);
  uint64_t v215 = (uint64_t)&v202 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v232 = type metadata accessor for EnvironmentState();
  __chkstk_darwin(v232);
  uint64_t v216 = (uint64_t)&v202 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_10017DF08(&qword_100E66438);
  __chkstk_darwin(v40 - 8);
  uint64_t v226 = (char *)&v202 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_10017DF08(&qword_100E66440);
  __chkstk_darwin(v42 - 8);
  uint64_t v234 = (uint64_t)&v202 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  __chkstk_darwin(v44 - 8);
  uint64_t v209 = (uint64_t)&v202 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v230 = type metadata accessor for LocationsState();
  __chkstk_darwin(v230);
  uint64_t v47 = (char *)&v202 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for CurrentLocation();
  __chkstk_darwin(v48);
  uint64_t v212 = (uint64_t)&v202 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for ModalViewState(0);
  __chkstk_darwin(v50);
  uint64_t v225 = (uint64_t)&v202 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v218 = v52;
  swift_storeEnumTagMultiPayload();
  if (qword_100E62848 != -1) {
    swift_once();
  }
  uint64_t v53 = type metadata accessor for Logger();
  sub_1002102B0(v53, (uint64_t)qword_100F51FE0);
  swift_retain();
  uint64_t v54 = Logger.logObject.getter();
  os_log_type_t v55 = static os_log_type_t.default.getter();
  BOOL v56 = os_log_type_enabled(v54, v55);
  uint64_t v236 = a1;
  uint64_t v229 = v6;
  if (v56)
  {
    uint64_t v57 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v57 = 67240192;
    uint64_t v58 = v236 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
    swift_beginAccess();
    LODWORD(v237) = *(unsigned __int8 *)(v58 + *(int *)(v232 + 48));
    a1 = v236;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v54, v55, "ActivityActionReducer handling current location activity; was pending = %{BOOL,public}d",
      v57,
      8u);
    swift_slowDealloc();
  }
  else
  {

    swift_release();
  }
  uint64_t v59 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess();
  BOOL v61 = LocationAuthorizationState.rawValue.getter(*(unsigned char *)(v59 + 1)) == 0x7265746544746F6ELL
     && v60 == 0xED000064656E696DLL;
  if (v61)
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  char v62 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v62)
  {
LABEL_17:
    uint64_t v97 = Logger.logObject.getter();
    os_log_type_t v98 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v97, v98))
    {
      uint64_t v99 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v99 = 0;
      _os_log_impl((void *)&_mh_execute_header, v97, v98, "ActivityActionReducer handling current location activity with undetermined authorization", v99, 2u);
      swift_slowDealloc();
    }

    uint64_t v100 = type metadata accessor for AppConfigurationState();
    _s7Weather24LocationCompositionStateOwst_0(v234, 1, 1, v100);
    uint64_t v101 = v59;
    uint64_t v102 = v216;
    sub_10087F114(v101, v216, (void (*)(void))type metadata accessor for EnvironmentState);
    uint64_t v103 = type metadata accessor for Locale();
    uint64_t v104 = v215;
    _s7Weather24LocationCompositionStateOwst_0(v215, 1, 1, v103);
    uint64_t v237 = 1;
    long long v238 = 0u;
    long long v239 = 0u;
    uint64_t v240 = 0;
    uint64_t v74 = v226;
    sub_1000F0AD4(2u, 5, 5, v104, 0, 0, 2, 2, v226, 2, v214 & 1, 2, 0, 1, 2, 2, (uint64_t)&v237);
    sub_1001781AC(v104, &qword_100E63730);
    sub_10087F1D4(v102, (void (*)(void))type metadata accessor for EnvironmentState);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v74, 0, 1, v232);
    _s7Weather24LocationCompositionStateOwst_0(v235, 1, 1, v230);
    uint64_t v105 = type metadata accessor for NotificationsOptInState();
    _s7Weather24LocationCompositionStateOwst_0(v233, 1, 1, v105);
    uint64_t v106 = type metadata accessor for TimeState();
    uint64_t v107 = v228;
    _s7Weather24LocationCompositionStateOwst_0(v228, 1, 1, v106);
    uint64_t v108 = v236;
    uint64_t v109 = v220;
    sub_10087F114(v236 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v220, (void (*)(void))type metadata accessor for ViewState);
    uint64_t v110 = v217;
    _s7Weather24LocationCompositionStateOwst_0(v217, 1, 1, v229);
    type metadata accessor for LocationViewerViewState._Storage(0);
    swift_allocObject();
    uint64_t v111 = sub_1001CCEF8(v110, 0, 0, 2, 0, 0);
    uint64_t v112 = (uint64_t)v219;
    *uint64_t v219 = v111;
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0(v112, 0, 1, v8);
    uint64_t v113 = type metadata accessor for SearchViewState(0);
    uint64_t v114 = v224;
    _s7Weather24LocationCompositionStateOwst_0(v224, 1, 1, v113);
    uint64_t v115 = type metadata accessor for DisplayMetrics();
    uint64_t v116 = v222;
    _s7Weather24LocationCompositionStateOwst_0(v222, 1, 1, v115);
    uint64_t v117 = type metadata accessor for WeatherMapPresentationState(0);
    uint64_t v118 = v221;
    _s7Weather24LocationCompositionStateOwst_0(v221, 1, 1, v117);
    uint64_t v119 = (uint64_t)v227;
    sub_10011D8AC();
    sub_1001781AC(v118, &qword_100E663F8);
    sub_1001781AC(v116, &qword_100E66400);
    sub_1001781AC(v114, &qword_100E66408);
    sub_1001781AC(v112, &qword_100E66410);
    sub_10087F1D4(v109, (void (*)(void))type metadata accessor for ViewState);
    _s7Weather24LocationCompositionStateOwst_0(v119, 0, 1, v231);
    uint64_t v90 = v225;
    uint64_t v120 = v223;
    sub_10087F114(v225, v223, (void (*)(void))type metadata accessor for ModalViewState);
    _s7Weather24LocationCompositionStateOwst_0(v120, 0, 1, v218);
    uint64_t v121 = v233;
    uint64_t v93 = v234;
    uint64_t v94 = v235;
    uint64_t v95 = sub_1001659F0(0, 3, v234, (uint64_t)v74, v235, 0, 0, 0, 0, v233, v107, v119, v120, 0, 0, 0, 0, 0, 0,
            0,
            v108);
    sub_1001781AC(v120, &qword_100E663F0);
    sub_1001781AC(v119, &qword_100E66418);
    sub_1001781AC(v107, &qword_100E66420);
    uint64_t v96 = v121;
    goto LABEL_20;
  }
  if (*(unsigned __int8 *)(v59 + 1) - 1 > 1)
  {
    uint64_t v123 = Logger.logObject.getter();
    os_log_type_t v124 = static os_log_type_t.default.getter();
    BOOL v125 = os_log_type_enabled(v123, v124);
    uint64_t v126 = v229;
    if (v125)
    {
      int v127 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v127 = 0;
      _os_log_impl((void *)&_mh_execute_header, v123, v124, "ActivityActionReducer handling current location activity without authorization", v127, 2u);
      swift_slowDealloc();
    }

    uint64_t v128 = v236;
    uint64_t v129 = v236 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
    uint64_t v130 = v210;
    sub_10087F114(v236 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v210, (void (*)(void))type metadata accessor for ViewState);
    uint64_t v131 = v231;
    uint64_t v132 = v211;
    sub_10087F114(v130 + *(int *)(v231 + 20), (uint64_t)v211, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
    sub_10087F1D4(v130, (void (*)(void))type metadata accessor for ViewState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v133 = (void (*)(void))type metadata accessor for ViewState.SecondaryViewState;
    }
    else
    {
      uint64_t v163 = *v132 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState;
      uint64_t v132 = v204;
      sub_10087F114(v163, (uint64_t)v204, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v132, 1, v126) != 1)
      {
        (*(void (**)(char *, void *, uint64_t))(v206 + 32))(v205, v132, v126);
        Location.Identifier.kind.getter();
        uint64_t v193 = Location.Identifier.Kind.rawValue.getter();
        uint64_t v195 = v194;
        if (v193 == Location.Identifier.Kind.rawValue.getter() && v195 == v196)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v164 = v217;
        }
        else
        {
          char v198 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v164 = v217;
          if ((v198 & 1) == 0)
          {
            uint64_t v199 = v206;
            uint64_t v200 = v213;
            uint64_t v201 = v205;
            (*(void (**)(uint64_t, char *, uint64_t))(v206 + 16))(v213, v205, v126);
            _s7Weather24LocationCompositionStateOwst_0(v200, 0, 1, v126);
            type metadata accessor for ListViewState._Storage();
            swift_allocObject();
            LODWORD(v212) = 1;
            uint64_t v214 = sub_1000EC58C(0, 0, 1, 0, 0, 0, 0xE000000000000000, 0, 0, 0, 0, 0, 1, 0);
            swift_release();
            (*(void (**)(char *, uint64_t))(v199 + 8))(v201, v126);
            goto LABEL_37;
          }
        }
        (*(void (**)(char *, uint64_t))(v206 + 8))(v205, v126);
        swift_release();
        uint64_t v128 = v236;
LABEL_32:
        uint64_t v165 = *(void *)(v128 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations + *(int *)(v230 + 20));
        uint64_t v166 = v208;
        sub_10043F79C(v165, v208);
        int v167 = 1;
        if (_s7Weather24LocationCompositionStateOwet_0(v166, 1, v207) == 1)
        {
          sub_1001781AC(v166, &qword_100E66678);
          _s7Weather24LocationCompositionStateOwst_0(v213, 1, 1, v126);
          type metadata accessor for ListViewState._Storage();
          swift_allocObject();
          uint64_t v214 = sub_1000EC58C(0, 0, 1, 0, 0, 0, 0xE000000000000000, 0, 0, 1, 0, 0, 1, 0);
          id v168 = [self currentDevice];
          id v169 = [v168 userInterfaceIdiom];

          LODWORD(v212) = 0;
          BOOL v61 = v169 == (id)1;
          uint64_t v170 = v216;
          uint64_t v171 = v215;
          if (v61) {
            goto LABEL_39;
          }
          goto LABEL_38;
        }
        uint64_t v172 = v203;
        sub_10087F174(v166, v203, (void (*)(void))&type metadata accessor for SavedLocation);
        type metadata accessor for ListViewState._Storage();
        swift_allocObject();
        uint64_t v214 = sub_1000EC58C(0, 0, 1, 0, 0, 0, 0xE000000000000000, 0, 0, 0, 0, 0, 1, 0);
        SavedLocation.identifier.getter();
        sub_10087F1D4(v172, (void (*)(void))&type metadata accessor for SavedLocation);
        _s7Weather24LocationCompositionStateOwst_0(v164, 0, 1, v126);
        sub_10087F174(v164, v213, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
        LODWORD(v212) = 0;
LABEL_37:
        uint64_t v170 = v216;
        uint64_t v171 = v215;
LABEL_38:
        int v167 = *(unsigned __int8 *)(v129 + *(int *)(v131 + 44));
LABEL_39:
        LODWORD(v229) = v167;
        uint64_t v173 = type metadata accessor for AppConfigurationState();
        _s7Weather24LocationCompositionStateOwst_0(v234, 1, 1, v173);
        sub_10087F114(v59, v170, (void (*)(void))type metadata accessor for EnvironmentState);
        uint64_t v174 = type metadata accessor for Locale();
        _s7Weather24LocationCompositionStateOwst_0(v171, 1, 1, v174);
        uint64_t v237 = 1;
        long long v238 = 0u;
        long long v239 = 0u;
        uint64_t v240 = 0;
        uint64_t v175 = v226;
        sub_1000F0AD4(2u, 5, 5, v171, 0, 0, 2, 2, v226, 2, 0, 2, 0, 1, 2, 2, (uint64_t)&v237);
        sub_1001781AC(v171, &qword_100E63730);
        sub_10087F1D4(v170, (void (*)(void))type metadata accessor for EnvironmentState);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v175, 0, 1, v232);
        _s7Weather24LocationCompositionStateOwst_0(v235, 1, 1, v230);
        uint64_t v176 = type metadata accessor for NotificationsOptInState();
        _s7Weather24LocationCompositionStateOwst_0(v233, 1, 1, v176);
        uint64_t v177 = type metadata accessor for TimeState();
        uint64_t v178 = v228;
        _s7Weather24LocationCompositionStateOwst_0(v228, 1, 1, v177);
        uint64_t v179 = v220;
        sub_10087F114(v129, v220, (void (*)(void))type metadata accessor for ViewState);
        sub_10087F114(v213, v164, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
        type metadata accessor for LocationViewerViewState._Storage(0);
        swift_allocObject();
        uint64_t v180 = sub_1001CCEF8(v164, 0, 0, 2, 0, 0);
        uint64_t v181 = (uint64_t)v219;
        *uint64_t v219 = v180;
        swift_storeEnumTagMultiPayload();
        _s7Weather24LocationCompositionStateOwst_0(v181, 0, 1, v8);
        uint64_t v182 = type metadata accessor for SearchViewState(0);
        uint64_t v183 = v224;
        _s7Weather24LocationCompositionStateOwst_0(v224, 1, 1, v182);
        uint64_t v184 = type metadata accessor for DisplayMetrics();
        uint64_t v185 = v222;
        _s7Weather24LocationCompositionStateOwst_0(v222, 1, 1, v184);
        uint64_t v186 = type metadata accessor for WeatherMapPresentationState(0);
        uint64_t v187 = v221;
        _s7Weather24LocationCompositionStateOwst_0(v221, 1, 1, v186);
        swift_retain();
        uint64_t v188 = (uint64_t)v227;
        sub_10011D8AC();
        swift_release();
        sub_1001781AC(v187, &qword_100E663F8);
        sub_1001781AC(v185, &qword_100E66400);
        sub_1001781AC(v183, &qword_100E66408);
        sub_1001781AC(v181, &qword_100E66410);
        sub_10087F1D4(v179, (void (*)(void))type metadata accessor for ViewState);
        _s7Weather24LocationCompositionStateOwst_0(v188, 0, 1, v231);
        uint64_t v90 = v225;
        uint64_t v189 = v223;
        sub_10087F114(v225, v223, (void (*)(void))type metadata accessor for ModalViewState);
        _s7Weather24LocationCompositionStateOwst_0(v189, 0, 1, v218);
        uint64_t v190 = v233;
        uint64_t v191 = v234;
        uint64_t v192 = v235;
        uint64_t v95 = sub_1001659F0(0, 3, v234, (uint64_t)v175, v235, 0, 0, 0, 0, v233, v178, v188, v189, 0, 0, 0, 0, 0, 0,
                0,
                v236);
        swift_release();
        sub_1001781AC(v189, &qword_100E663F0);
        sub_1001781AC(v188, &qword_100E66418);
        sub_1001781AC(v178, &qword_100E66420);
        sub_1001781AC(v190, &qword_100E66428);
        sub_1001781AC(v192, &qword_100E66430);
        sub_1001781AC((uint64_t)v175, &qword_100E66438);
        sub_1001781AC(v191, &qword_100E66440);
        uint64_t v161 = type metadata accessor for LocationViewerActiveLocationState;
        uint64_t v162 = (char *)&v238 + 8;
LABEL_40:
        sub_10087F1D4(*((void *)v162 - 32), (void (*)(void))v161);
        goto LABEL_21;
      }
      swift_release();
      uint64_t v133 = (void (*)(void))type metadata accessor for LocationViewerActiveLocationState;
    }
    sub_10087F1D4((uint64_t)v132, v133);
    uint64_t v164 = v217;
    goto LABEL_32;
  }
  sub_10087F114(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)v47, (void (*)(void))type metadata accessor for LocationsState);
  uint64_t v63 = v209;
  sub_10013B3F0((uint64_t)v47, v209);
  sub_10087F1D4((uint64_t)v47, (void (*)(void))type metadata accessor for LocationsState);
  int v64 = _s7Weather24LocationCompositionStateOwet_0(v63, 1, v48);
  uint64_t v65 = v229;
  if (v64 != 1)
  {
    sub_10087F174(v63, v212, (void (*)(void))&type metadata accessor for CurrentLocation);
    uint64_t v134 = Logger.logObject.getter();
    os_log_type_t v135 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v134, v135))
    {
      uint64_t v136 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v136 = 0;
      _os_log_impl((void *)&_mh_execute_header, v134, v135, "ActivityActionReducer handling current location activity with authorization and current location", v136, 2u);
      swift_slowDealloc();
    }

    uint64_t v137 = type metadata accessor for AppConfigurationState();
    _s7Weather24LocationCompositionStateOwst_0(v234, 1, 1, v137);
    uint64_t v138 = v59;
    uint64_t v139 = v216;
    sub_10087F114(v138, v216, (void (*)(void))type metadata accessor for EnvironmentState);
    uint64_t v140 = type metadata accessor for Locale();
    uint64_t v141 = v215;
    _s7Weather24LocationCompositionStateOwst_0(v215, 1, 1, v140);
    uint64_t v237 = 1;
    long long v238 = 0u;
    long long v239 = 0u;
    uint64_t v240 = 0;
    uint64_t v142 = v226;
    sub_1000F0AD4(2u, 5, 5, v141, 0, 0, 2, 2, v226, 2, 0, 2, 0, 1, 2, 2, (uint64_t)&v237);
    sub_1001781AC(v141, &qword_100E63730);
    sub_10087F1D4(v139, (void (*)(void))type metadata accessor for EnvironmentState);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v142, 0, 1, v232);
    _s7Weather24LocationCompositionStateOwst_0(v235, 1, 1, v230);
    uint64_t v143 = type metadata accessor for NotificationsOptInState();
    uint64_t v144 = v233;
    _s7Weather24LocationCompositionStateOwst_0(v233, 1, 1, v143);
    uint64_t v145 = type metadata accessor for TimeState();
    uint64_t v146 = v228;
    _s7Weather24LocationCompositionStateOwst_0(v228, 1, 1, v145);
    uint64_t v147 = v220;
    sub_10087F114(v236 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v220, (void (*)(void))type metadata accessor for ViewState);
    uint64_t v148 = v217;
    CurrentLocation.identifier.getter();
    _s7Weather24LocationCompositionStateOwst_0(v148, 0, 1, v65);
    type metadata accessor for LocationViewerViewState._Storage(0);
    swift_allocObject();
    uint64_t v149 = sub_1001CCEF8(v148, 0, 0, 2, 0, 0);
    uint64_t v150 = (uint64_t)v219;
    *uint64_t v219 = v149;
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0(v150, 0, 1, v8);
    uint64_t v151 = type metadata accessor for SearchViewState(0);
    uint64_t v152 = v224;
    _s7Weather24LocationCompositionStateOwst_0(v224, 1, 1, v151);
    uint64_t v153 = type metadata accessor for DisplayMetrics();
    uint64_t v154 = v222;
    _s7Weather24LocationCompositionStateOwst_0(v222, 1, 1, v153);
    uint64_t v155 = type metadata accessor for WeatherMapPresentationState(0);
    uint64_t v156 = v221;
    _s7Weather24LocationCompositionStateOwst_0(v221, 1, 1, v155);
    uint64_t v157 = (uint64_t)v227;
    sub_10011D8AC();
    sub_1001781AC(v156, &qword_100E663F8);
    sub_1001781AC(v154, &qword_100E66400);
    sub_1001781AC(v152, &qword_100E66408);
    sub_1001781AC(v150, &qword_100E66410);
    sub_10087F1D4(v147, (void (*)(void))type metadata accessor for ViewState);
    _s7Weather24LocationCompositionStateOwst_0(v157, 0, 1, v231);
    uint64_t v90 = v225;
    uint64_t v158 = v223;
    sub_10087F114(v225, v223, (void (*)(void))type metadata accessor for ModalViewState);
    _s7Weather24LocationCompositionStateOwst_0(v158, 0, 1, v218);
    uint64_t v159 = v234;
    uint64_t v160 = v235;
    uint64_t v95 = sub_1001659F0(0, 3, v234, (uint64_t)v142, v235, 0, 0, 0, 0, v144, v146, v157, v158, 0, 0, 0, 0, 0, 0,
            0,
            v236);
    sub_1001781AC(v158, &qword_100E663F0);
    sub_1001781AC(v157, &qword_100E66418);
    sub_1001781AC(v146, &qword_100E66420);
    sub_1001781AC(v144, &qword_100E66428);
    sub_1001781AC(v160, &qword_100E66430);
    sub_1001781AC((uint64_t)v142, &qword_100E66438);
    sub_1001781AC(v159, &qword_100E66440);
    uint64_t v161 = (uint64_t (*)())&type metadata accessor for CurrentLocation;
    uint64_t v162 = (char *)&v238;
    goto LABEL_40;
  }
  sub_1001781AC(v63, (uint64_t *)&unk_100EADD50);
  uint64_t v66 = Logger.logObject.getter();
  os_log_type_t v67 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v66, v67))
  {
    long long v68 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v68 = 0;
    _os_log_impl((void *)&_mh_execute_header, v66, v67, "ActivityActionReducer handling current location activity with authorization but no current location", v68, 2u);
    swift_slowDealloc();
  }

  uint64_t v69 = type metadata accessor for AppConfigurationState();
  _s7Weather24LocationCompositionStateOwst_0(v234, 1, 1, v69);
  uint64_t v70 = v59;
  uint64_t v71 = v216;
  sub_10087F114(v70, v216, (void (*)(void))type metadata accessor for EnvironmentState);
  uint64_t v72 = type metadata accessor for Locale();
  uint64_t v73 = v215;
  _s7Weather24LocationCompositionStateOwst_0(v215, 1, 1, v72);
  uint64_t v237 = 1;
  long long v238 = 0u;
  long long v239 = 0u;
  uint64_t v240 = 0;
  uint64_t v74 = v226;
  sub_1000F0AD4(2u, 5, 5, v73, 0, 0, 2, 2, v226, 2, 0, 2, 0, 1, 2, 2, (uint64_t)&v237);
  sub_1001781AC(v73, &qword_100E63730);
  sub_10087F1D4(v71, (void (*)(void))type metadata accessor for EnvironmentState);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v74, 0, 1, v232);
  _s7Weather24LocationCompositionStateOwst_0(v235, 1, 1, v230);
  uint64_t v75 = type metadata accessor for NotificationsOptInState();
  _s7Weather24LocationCompositionStateOwst_0(v233, 1, 1, v75);
  uint64_t v76 = type metadata accessor for TimeState();
  uint64_t v77 = v228;
  _s7Weather24LocationCompositionStateOwst_0(v228, 1, 1, v76);
  uint64_t v78 = v236;
  uint64_t v79 = v220;
  sub_10087F114(v236 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v220, (void (*)(void))type metadata accessor for ViewState);
  uint64_t v80 = v217;
  _s7Weather24LocationCompositionStateOwst_0(v217, 1, 1, v65);
  type metadata accessor for LocationViewerViewState._Storage(0);
  swift_allocObject();
  uint64_t v81 = sub_1001CCEF8(v80, 0, 0, 2, 0, 0);
  uint64_t v82 = (uint64_t)v219;
  *uint64_t v219 = v81;
  swift_storeEnumTagMultiPayload();
  _s7Weather24LocationCompositionStateOwst_0(v82, 0, 1, v8);
  uint64_t v83 = type metadata accessor for SearchViewState(0);
  uint64_t v84 = v224;
  _s7Weather24LocationCompositionStateOwst_0(v224, 1, 1, v83);
  uint64_t v85 = type metadata accessor for DisplayMetrics();
  uint64_t v86 = v222;
  _s7Weather24LocationCompositionStateOwst_0(v222, 1, 1, v85);
  uint64_t v87 = type metadata accessor for WeatherMapPresentationState(0);
  uint64_t v88 = v221;
  _s7Weather24LocationCompositionStateOwst_0(v221, 1, 1, v87);
  uint64_t v89 = (uint64_t)v227;
  sub_10011D8AC();
  sub_1001781AC(v88, &qword_100E663F8);
  sub_1001781AC(v86, &qword_100E66400);
  sub_1001781AC(v84, &qword_100E66408);
  sub_1001781AC(v82, &qword_100E66410);
  sub_10087F1D4(v79, (void (*)(void))type metadata accessor for ViewState);
  _s7Weather24LocationCompositionStateOwst_0(v89, 0, 1, v231);
  uint64_t v90 = v225;
  uint64_t v91 = v223;
  sub_10087F114(v225, v223, (void (*)(void))type metadata accessor for ModalViewState);
  _s7Weather24LocationCompositionStateOwst_0(v91, 0, 1, v218);
  uint64_t v92 = v233;
  uint64_t v93 = v234;
  uint64_t v94 = v235;
  uint64_t v95 = sub_1001659F0(0, 3, v234, (uint64_t)v74, v235, 0, 0, 0, 0, v233, v77, v89, v91, 0, 0, 0, 0, 0, 0,
          0,
          v78);
  sub_1001781AC(v91, &qword_100E663F0);
  sub_1001781AC(v89, &qword_100E66418);
  sub_1001781AC(v77, &qword_100E66420);
  uint64_t v96 = v92;
LABEL_20:
  sub_1001781AC(v96, &qword_100E66428);
  sub_1001781AC(v94, &qword_100E66430);
  sub_1001781AC((uint64_t)v74, &qword_100E66438);
  sub_1001781AC(v93, &qword_100E66440);
LABEL_21:
  sub_10087F1D4(v90, (void (*)(void))type metadata accessor for ModalViewState);
  return v95;
}

uint64_t sub_10087F114(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_10087F174(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10087F1D4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

ValueMetadata *type metadata accessor for ContentStatusBannerState()
{
  return &type metadata for ContentStatusBannerState;
}

uint64_t sub_10087F240(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x8000000100C98C30)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_10087F2C8()
{
  return 0xD000000000000014;
}

uint64_t sub_10087F2E4(void *a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E9CA68);
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_100125FF8();
  sub_1001B1E64(a1, a1[3]);
  sub_10087F680();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10017DF08(&qword_100E9CA50);
  sub_10087F764();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
}

void *sub_10087F3FC(void *a1)
{
  uint64_t v4 = sub_10017DF08(&qword_100E9CA40);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_100125FF8();
  uint64_t v8 = sub_1001B1E64(a1, a1[3]);
  sub_10087F680();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_10017DF08(&qword_100E9CA50);
    sub_10087F6CC();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
    uint64_t v8 = v10;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  return v8;
}

uint64_t sub_10087F540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10087F240(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_10087F56C(uint64_t a1)
{
  unint64_t v2 = sub_10087F680();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10087F5A8(uint64_t a1)
{
  unint64_t v2 = sub_10087F680();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_10087F5E4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_10087F3FC(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_10087F610(void *a1)
{
  return sub_10087F2E4(a1);
}

void sub_10087F62C(void *a1@<X8>)
{
  sub_1008BF434();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_10087F658()
{
  return sub_1008BF514();
}

uint64_t sub_10087F674(void *a1, void *a2)
{
  return sub_10087F23C(*a1, *a2);
}

unint64_t sub_10087F680()
{
  unint64_t result = qword_100E9CA48;
  if (!qword_100E9CA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9CA48);
  }
  return result;
}

unint64_t sub_10087F6CC()
{
  unint64_t result = qword_100E9CA58;
  if (!qword_100E9CA58)
  {
    sub_10018C6DC(&qword_100E9CA50);
    sub_100819C4C();
    sub_10087F7FC(&qword_100E9CA60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9CA58);
  }
  return result;
}

unint64_t sub_10087F764()
{
  unint64_t result = qword_100E9CA70;
  if (!qword_100E9CA70)
  {
    sub_10018C6DC(&qword_100E9CA50);
    sub_100819CE4();
    sub_10087F7FC(&qword_100E9CA78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9CA70);
  }
  return result;
}

uint64_t sub_10087F7FC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ContentStatusBanner();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ContentStatusBannerState.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10087F8DCLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentStatusBannerState.CodingKeys()
{
  return &type metadata for ContentStatusBannerState.CodingKeys;
}

unint64_t sub_10087F918()
{
  unint64_t result = qword_100E9CA80;
  if (!qword_100E9CA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9CA80);
  }
  return result;
}

unint64_t sub_10087F968()
{
  unint64_t result = qword_100E9CA88;
  if (!qword_100E9CA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9CA88);
  }
  return result;
}

unint64_t sub_10087F9B8()
{
  unint64_t result = qword_100E9CA90;
  if (!qword_100E9CA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9CA90);
  }
  return result;
}

uint64_t sub_10087FA04()
{
  uint64_t v0 = type metadata accessor for Access();
  sub_100179C0C();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  uint64_t v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for Domain();
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  uint64_t v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v12 = [self currentDevice];
  id v13 = [v12 userInterfaceIdiom];

  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 104))(v11, enum case for Domain.standard(_:), v6);
  (*(void (**)(unsigned char *, void, uint64_t))(v2 + 104))(v5, enum case for Access.public(_:), v0);
  v15[15] = v13 == (id)1;
  sub_10017DF08(&qword_100E70818);
  swift_allocObject();
  uint64_t result = Setting.init(_:defaultValue:domain:access:)();
  qword_100F51C98 = result;
  return result;
}

uint64_t *sub_10087FBB8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    uint64_t v10 = *(int *)(a3 + 28);
    uint64_t v11 = (uint64_t *)((char *)a1 + v10);
    id v12 = (uint64_t *)((char *)a2 + v10);
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v13 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
    {
      uint64_t v14 = sub_10017DF08(&qword_100E63750);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v16 = v12[1];
      void *v11 = *v12;
      v11[1] = v16;
      uint64_t v17 = *(int *)(v13 + 20);
      uint64_t v18 = (char *)v11 + v17;
      uint64_t v19 = (char *)v12 + v17;
      uint64_t v20 = type metadata accessor for TemperatureScaleConfiguration();
      uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      v32(v18, v19, v20);
      uint64_t v21 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      *(void *)&v18[v21[5]] = *(void *)&v19[v21[5]];
      *(void *)&v18[v21[6]] = *(void *)&v19[v21[6]];
      *(void *)&v18[v21[7]] = *(void *)&v19[v21[7]];
      uint64_t v22 = v21[8];
      uint64_t v23 = &v18[v22];
      uint64_t v24 = &v19[v22];
      uint64_t v26 = *(void *)v24;
      uint64_t v25 = *((void *)v24 + 1);
      *(void *)uint64_t v23 = v26;
      *((void *)v23 + 1) = v25;
      v18[v21[9]] = v19[v21[9]];
      swift_bridgeObjectRetain();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
    }
    uint64_t v27 = *(int *)(a3 + 32);
    uint64_t v28 = (uint64_t *)((char *)v4 + v27);
    uint64_t v29 = (uint64_t *)((char *)a2 + v27);
    uint64_t v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    swift_bridgeObjectRetain();
  }
  return v4;
}

void *sub_10087FDCC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      *uint64_t v7 = *v8;
      v7[1] = v8[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v25 = *(int *)(v9 + 20);
      uint64_t v26 = (char *)v7 + v25;
      uint64_t v27 = (char *)v8 + v25;
      uint64_t v28 = type metadata accessor for TemperatureScaleConfiguration();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 24))(v26, v27, v28);
      uint64_t v29 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      *(void *)&v26[v29[5]] = *(void *)&v27[v29[5]];
      *(void *)&v26[v29[6]] = *(void *)&v27[v29[6]];
      *(void *)&v26[v29[7]] = *(void *)&v27[v29[7]];
      uint64_t v30 = v29[8];
      uint64_t v31 = &v26[v30];
      uint64_t v32 = &v27[v30];
      *(void *)uint64_t v31 = *(void *)v32;
      *((void *)v31 + 1) = *((void *)v32 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v26[v29[9]] = v27[v29[9]];
      goto LABEL_7;
    }
    sub_100881450((uint64_t)v7, (void (*)(void))type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v20 = sub_10017DF08(&qword_100E63750);
    memcpy(v7, v8, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  uint64_t v12 = *(int *)(v9 + 20);
  uint64_t v13 = (char *)v7 + v12;
  uint64_t v14 = (char *)v8 + v12;
  uint64_t v15 = type metadata accessor for TemperatureScaleConfiguration();
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  v33(v13, v14, v15);
  uint64_t v16 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(void *)&v13[v16[5]] = *(void *)&v14[v16[5]];
  *(void *)&v13[v16[6]] = *(void *)&v14[v16[6]];
  *(void *)&v13[v16[7]] = *(void *)&v14[v16[7]];
  uint64_t v17 = v16[8];
  uint64_t v18 = &v13[v17];
  uint64_t v19 = &v14[v17];
  *(void *)uint64_t v18 = *(void *)v19;
  *((void *)v18 + 1) = *((void *)v19 + 1);
  v13[v16[9]] = v14[v16[9]];
  swift_bridgeObjectRetain();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v21 = *(int *)(a3 + 32);
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1008800F0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (_OWORD *)((char *)a1 + v7);
  uint64_t v9 = (_OWORD *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E63750);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    *uint64_t v8 = *v9;
    uint64_t v12 = *(int *)(v10 + 20);
    uint64_t v13 = (char *)v8 + v12;
    uint64_t v14 = (char *)v9 + v12;
    uint64_t v15 = type metadata accessor for TemperatureScaleConfiguration();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    uint64_t v16 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    *(void *)&v13[v16[5]] = *(void *)&v14[v16[5]];
    *(void *)&v13[v16[6]] = *(void *)&v14[v16[6]];
    *(void *)&v13[v16[7]] = *(void *)&v14[v16[7]];
    *(_OWORD *)&v13[v16[8]] = *(_OWORD *)&v14[v16[8]];
    v13[v16[9]] = v14[v16[9]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

void *sub_100880254(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (void *)((char *)a1 + v9);
  uint64_t v11 = (void *)((char *)a2 + v9);
  uint64_t v12 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v12);
  int v14 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12);
  if (!v13)
  {
    if (!v14)
    {
      uint64_t v27 = v11[1];
      void *v10 = *v11;
      v10[1] = v27;
      swift_bridgeObjectRelease();
      uint64_t v28 = *(int *)(v12 + 20);
      uint64_t v29 = (char *)v10 + v28;
      uint64_t v30 = (char *)v11 + v28;
      uint64_t v31 = type metadata accessor for TemperatureScaleConfiguration();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 40))(v29, v30, v31);
      uint64_t v32 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      *(void *)&v29[v32[5]] = *(void *)&v30[v32[5]];
      *(void *)&v29[v32[6]] = *(void *)&v30[v32[6]];
      *(void *)&v29[v32[7]] = *(void *)&v30[v32[7]];
      uint64_t v33 = v32[8];
      uint64_t v34 = &v29[v33];
      uint64_t v35 = &v30[v33];
      uint64_t v37 = *(void *)v35;
      uint64_t v36 = *((void *)v35 + 1);
      *(void *)uint64_t v34 = v37;
      *((void *)v34 + 1) = v36;
      swift_bridgeObjectRelease();
      v29[v32[9]] = v30[v32[9]];
      goto LABEL_7;
    }
    sub_100881450((uint64_t)v10, (void (*)(void))type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v20 = sub_10017DF08(&qword_100E63750);
    memcpy(v10, v11, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  uint64_t v15 = *(int *)(v12 + 20);
  uint64_t v16 = (char *)v10 + v15;
  uint64_t v17 = (char *)v11 + v15;
  uint64_t v18 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(void *)&v16[v19[5]] = *(void *)&v17[v19[5]];
  *(void *)&v16[v19[6]] = *(void *)&v17[v19[6]];
  *(void *)&v16[v19[7]] = *(void *)&v17[v19[7]];
  *(_OWORD *)&v16[v19[8]] = *(_OWORD *)&v17[v19[8]];
  v16[v19[9]] = v17[v19[9]];
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
LABEL_7:
  uint64_t v21 = *(int *)(a3 + 32);
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1008804D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1008804E8);
}

uint64_t sub_1008804E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10017DF08(&qword_100E63750);
    uint64_t v9 = a1 + *(int *)(a3 + 28);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_100880574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100880588);
}

uint64_t sub_100880588(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10017DF08(&qword_100E63750);
    uint64_t v8 = v5 + *(int *)(a4 + 28);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_10088060C(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = (void *)(v7 - v6);
  uint64_t v9 = sub_10017DF08(&qword_100E76240);
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_10017DF08(&qword_100E63750);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (uint64_t *)((char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v45 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v45 - v21;
  BOOL v23 = *a1 == *a2 && a1[1] == a2[1];
  if (v23 || (char v24 = _stringCompareWithSmolCheck(_:_:expecting:)(), v25 = 0, (v24 & 1) != 0))
  {
    BOOL v26 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v26 || (char v27 = _stringCompareWithSmolCheck(_:_:expecting:)(), v25 = 0, (v27 & 1) != 0))
    {
      uint64_t v28 = a1[5];
      uint64_t v29 = a2[5];
      if (v28)
      {
        if (!v29) {
          goto LABEL_30;
        }
        if (a1[4] != a2[4] || v28 != v29)
        {
          char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
          char v25 = 0;
          if ((v31 & 1) == 0) {
            return v25 & 1;
          }
        }
      }
      else if (v29)
      {
        goto LABEL_30;
      }
      uint64_t v32 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
      sub_1001B62F0((uint64_t)a1 + *(int *)(v32 + 28), (uint64_t)v22);
      sub_1001B62F0((uint64_t)a2 + *(int *)(v32 + 28), (uint64_t)v20);
      uint64_t v33 = v13 + *(int *)(v9 + 48);
      sub_1001B62F0((uint64_t)v22, v13);
      sub_1001B62F0((uint64_t)v20, v33);
      sub_1001630A0(v13);
      if (v23)
      {
        sub_1001781AC((uint64_t)v20, &qword_100E63750);
        sub_1001781AC((uint64_t)v22, &qword_100E63750);
        sub_1001630A0(v33);
        if (v23)
        {
          sub_1001781AC(v13, &qword_100E63750);
LABEL_38:
          uint64_t v40 = *(int *)(v32 + 32);
          uint64_t v41 = *(void *)((char *)a1 + v40);
          uint64_t v42 = *(void *)((char *)a1 + v40 + 8);
          uint64_t v43 = (void *)((char *)a2 + v40);
          if (v41 == *v43 && v42 == v43[1]) {
            char v25 = 1;
          }
          else {
            char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
          }
          return v25 & 1;
        }
      }
      else
      {
        sub_1001B62F0(v13, (uint64_t)v17);
        sub_1001630A0(v33);
        if (!v34)
        {
          sub_10088133C(v33, (uint64_t)v8);
          BOOL v38 = *v17 == *v8 && v17[1] == v8[1];
          if (v38 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            char v39 = sub_10042B3AC((uint64_t)v17 + *(int *)(v4 + 20), (uint64_t)v8 + *(int *)(v4 + 20));
            sub_100881450((uint64_t)v8, (void (*)(void))type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference);
            sub_1001781AC((uint64_t)v20, &qword_100E63750);
            sub_1001781AC((uint64_t)v22, &qword_100E63750);
            sub_100881450((uint64_t)v17, (void (*)(void))type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference);
            sub_1001781AC(v13, &qword_100E63750);
            if (v39) {
              goto LABEL_38;
            }
LABEL_30:
            char v25 = 0;
            return v25 & 1;
          }
          sub_100881450((uint64_t)v8, (void (*)(void))type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference);
          sub_1001781AC((uint64_t)v20, &qword_100E63750);
          sub_1001781AC((uint64_t)v22, &qword_100E63750);
          sub_100881450((uint64_t)v17, (void (*)(void))type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference);
          uint64_t v36 = v13;
          uint64_t v35 = &qword_100E63750;
LABEL_29:
          sub_1001781AC(v36, v35);
          goto LABEL_30;
        }
        sub_1001781AC((uint64_t)v20, &qword_100E63750);
        sub_1001781AC((uint64_t)v22, &qword_100E63750);
        sub_100881450((uint64_t)v17, (void (*)(void))type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference);
      }
      uint64_t v35 = &qword_100E76240;
      uint64_t v36 = v13;
      goto LABEL_29;
    }
  }
  return v25 & 1;
}

uint64_t sub_100880A14(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x74617265706D6574 && a2 == 0xEB00000000657275;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x74617265706D6574 && a2 == 0xEF74696E55657275;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000100CB4940 {
             || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      }
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v9) {
          return 4;
        }
        else {
          return 5;
        }
      }
    }
  }
}

unint64_t sub_100880C64(char a1)
{
  unint64_t result = 0x656C746974;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0x74617265706D6574;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 4:
      unint64_t result = 0x7470697263736564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100880D20(void *a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E9CB50);
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  sub_1001B1E64(a1, a1[3]);
  sub_1008813A0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10017FFDC();
  if (!v1)
  {
    sub_10017FFDC();
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
    type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
    sub_1008814A8(&qword_100E9CB58);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    sub_10017FFDC();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_100880EF4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E63750);
  __chkstk_darwin(v4 - 8);
  sub_1001626E0();
  uint64_t v25 = sub_10017DF08(&qword_100E9CB38);
  sub_100179C0C();
  uint64_t v23 = v5;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = (uint64_t *)(v13 - v12);
  sub_1001B1E64(a1, a1[3]);
  sub_1008813A0();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  *uint64_t v14 = sub_1001A0F1C();
  v14[1] = v15;
  void v14[2] = sub_1001A0F1C();
  v14[3] = v16;
  v14[4] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  v14[5] = v17;
  type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  sub_1008814A8(&qword_100E9CB48);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  sub_1001B6358(0, (uint64_t)v14 + *(int *)(v10 + 28));
  uint64_t v18 = sub_1001A0F1C();
  uint64_t v20 = v19;
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v9, v25);
  uint64_t v21 = (uint64_t *)((char *)v14 + *(int *)(v10 + 32));
  *uint64_t v21 = v18;
  v21[1] = v20;
  sub_1008813EC((uint64_t)v14, a2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return sub_100881450((uint64_t)v14, (void (*)(void))type metadata accessor for FeelsLikeComponentPreprocessedDataModel);
}

unint64_t sub_100881260()
{
  return sub_100880C64(*v0);
}

uint64_t sub_100881268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100880A14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100881290(uint64_t a1)
{
  unint64_t v2 = sub_1008813A0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008812CC(uint64_t a1)
{
  unint64_t v2 = sub_1008813A0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100881308@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100880EF4(a1, a2);
}

uint64_t sub_100881320(void *a1)
{
  return sub_100880D20(a1);
}

uint64_t sub_10088133C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1008813A0()
{
  unint64_t result = qword_100E9CB40;
  if (!qword_100E9CB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9CB40);
  }
  return result;
}

uint64_t sub_1008813EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100881450(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1008814A8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FeelsLikeComponentPreprocessedDataModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1008815B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeelsLikeComponentPreprocessedDataModel.CodingKeys()
{
  return &type metadata for FeelsLikeComponentPreprocessedDataModel.CodingKeys;
}

unint64_t sub_1008815F4()
{
  unint64_t result = qword_100E9CB60;
  if (!qword_100E9CB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9CB60);
  }
  return result;
}

unint64_t sub_100881644()
{
  unint64_t result = qword_100E9CB68;
  if (!qword_100E9CB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9CB68);
  }
  return result;
}

unint64_t sub_100881694()
{
  unint64_t result = qword_100E9CB70;
  if (!qword_100E9CB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9CB70);
  }
  return result;
}

uint64_t sub_1008816E0(uint64_t a1)
{
  return sub_100188198(a1, 35, 0x8000000100CB4C30, &qword_100F51CA0);
}

uint64_t sub_100881700(uint64_t a1)
{
  return sub_100188198(a1, 34, 0x8000000100CB4C00, &qword_100F51CA8);
}

uint64_t sub_100881720(uint64_t a1)
{
  return sub_100188198(a1, 33, 0x8000000100CB4BD0, &qword_100F51CB0);
}

uint64_t sub_100881740(uint64_t a1)
{
  return sub_100188198(a1, 29, 0x8000000100CB4BB0, &qword_100F51CB8);
}

uint64_t sub_100881760(uint64_t a1)
{
  return sub_100188198(a1, 38, 0x8000000100CB4B80, &qword_100F51CC0);
}

uint64_t sub_100881780(uint64_t a1)
{
  return sub_100188198(a1, 37, 0x8000000100CB4B50, &qword_100F51CC8);
}

uint64_t sub_1008817A0(uint64_t a1)
{
  return sub_100188198(a1, 33, 0x8000000100CB4B20, &qword_100F51CD0);
}

uint64_t sub_1008817C0(uint64_t a1)
{
  return sub_100188198(a1, 24, 0x8000000100CB4B00, &qword_100F51CD8);
}

uint64_t sub_1008817E0(uint64_t a1)
{
  return sub_100188198(a1, 39, 0x8000000100CB4AA0, &qword_100F51CE0);
}

uint64_t sub_100881800(uint64_t a1)
{
  return sub_100188198(a1, 36, 0x8000000100CB4AD0, &qword_100F51CE8);
}

uint64_t sub_100881820(uint64_t a1)
{
  return sub_100188198(a1, 35, 0x8000000100CB4A70, &qword_100F51CF0);
}

uint64_t sub_100881840(uint64_t a1)
{
  return sub_100188198(a1, 23, 0x8000000100CB4A50, &qword_100F51CF8);
}

uint64_t sub_100881860(uint64_t a1)
{
  return sub_100188198(a1, 33, 0x8000000100CB4A20, &qword_100F51D00);
}

uint64_t sub_100881880(uint64_t a1)
{
  return sub_100188198(a1, 35, 0x8000000100CB49F0, &qword_100F51D08);
}

uint64_t sub_1008818A0(uint64_t a1)
{
  return sub_100188198(a1, 29, 0x8000000100CB49D0, &qword_100F51D10);
}

uint64_t sub_1008818C0()
{
  return _s4NewsV18PlaceholderContentCMa();
}

uint64_t sub_1008818C8(uint64_t a1)
{
  return sub_100188198(a1, 36, 0x8000000100CB49A0, &qword_100F51D20);
}

uint64_t sub_1008818E8()
{
  type metadata accessor for Access();
  sub_100179C0C();
  __chkstk_darwin(v0);
  sub_100162EB8();
  sub_10017DF08(&qword_100E70810);
  uint64_t v1 = sub_10017EA10();
  v2(v1);
  uint64_t result = Setting<>.init(_:defaultValue:min:max:access:)();
  qword_100F51D28 = result;
  return result;
}

uint64_t sub_1008819C4(uint64_t a1)
{
  return sub_100188198(a1, 35, 0x8000000100CB4C90, &qword_100F51D30);
}

uint64_t sub_1008819E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = type metadata accessor for Domain();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  type metadata accessor for Access();
  sub_100179C0C();
  __chkstk_darwin(v12);
  sub_1001626E0();
  (*(void (**)(uint64_t, void))(v15 + 104))(v14 - v13, enum case for Access.protected(_:));
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v11, enum case for Domain.standard(_:), v5);
  sub_10017DF08(&qword_100E70818);
  swift_allocObject();
  uint64_t result = Setting.init(_:defaultValue:domain:access:)();
  *a4 = result;
  return result;
}

uint64_t sub_100881B40()
{
  id v0 = [self mainBundle];
  v5._object = (void *)0x8000000100CB5100;
  v1._uint64_t countAndFlagsBits = 0x6553206F74206F47;
  v1._object = (void *)0xEE0073676E697474;
  v2._uint64_t countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v5._uint64_t countAndFlagsBits = 0xD000000000000042;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

double sub_100881BF8@<D0>(uint64_t a1@<X8>)
{
  Swift::String v2 = self;
  id v3 = [v2 mainBundle];
  v18._uint64_t countAndFlagsBits = 0xD000000000000033;
  v18._object = (void *)0x8000000100CB4FF0;
  v4._object = (void *)0x8000000100CB4FD0;
  v4._uint64_t countAndFlagsBits = 0xD000000000000018;
  v5._uint64_t countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  Swift::String v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v18);

  id v7 = [v2 mainBundle];
  v19._uint64_t countAndFlagsBits = 0xD00000000000005ELL;
  v19._object = (void *)0x8000000100CB50A0;
  v8._object = (void *)0x8000000100CB5030;
  v8._uint64_t countAndFlagsBits = 0x1000000000000060;
  v9._uint64_t countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  Swift::String v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v19);

  uint64_t v11 = sub_100881B40();
  uint64_t v13 = v12;
  static Color.blue.getter();
  uint64_t v14 = Color.hex.getter();
  uint64_t v16 = v15;
  swift_release();
  *(void *)&double result = 0x8000000000000001;
  *(_OWORD *)a1 = xmmword_100C63D10;
  *(void *)(a1 + 16) = 0x8000000100CAECE0;
  *(Swift::String *)(a1 + 24) = v6;
  *(Swift::String *)(a1 + 40) = v10;
  *(void *)(a1 + 56) = 1;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v16;
  return result;
}

double sub_100881D90@<D0>(uint64_t a1@<X8>)
{
  Swift::String v2 = self;
  id v3 = [v2 mainBundle];
  v18._uint64_t countAndFlagsBits = 0xD000000000000054;
  v18._object = (void *)0x8000000100CB5190;
  v4._object = (void *)0x8000000100CB5170;
  v4._uint64_t countAndFlagsBits = 0xD000000000000013;
  v5._uint64_t countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  Swift::String v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v18);

  id v7 = [v2 mainBundle];
  v19._uint64_t countAndFlagsBits = 0xD000000000000067;
  v19._object = (void *)0x8000000100CB5260;
  v8._object = (void *)0x8000000100CB51F0;
  v8._uint64_t countAndFlagsBits = 0x100000000000006DLL;
  v9._uint64_t countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  Swift::String v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v19);

  uint64_t v11 = sub_100881B40();
  uint64_t v13 = v12;
  static Color.blue.getter();
  uint64_t v14 = Color.hex.getter();
  uint64_t v16 = v15;
  swift_release();
  *(void *)&double result = 0x8000000000000001;
  *(_OWORD *)a1 = xmmword_100C63D20;
  *(void *)(a1 + 16) = 0x8000000100CB5150;
  *(Swift::String *)(a1 + 24) = v6;
  *(Swift::String *)(a1 + 40) = v10;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v16;
  return result;
}

void sub_100881F20(uint64_t a1@<X0>, int a2@<W1>, _OWORD *a3@<X8>)
{
  HIDWORD(v268) = a2;
  uint64_t v311 = a3;
  uint64_t v269 = type metadata accessor for ModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v270 = v5;
  sub_100129064();
  uint64_t v6 = type metadata accessor for TimeState();
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v293 = v8;
  sub_100129064();
  type metadata accessor for AirQualityScaleCategory();
  sub_100179C0C();
  uint64_t v258 = v10;
  uint64_t v259 = v9;
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v257 = v11;
  sub_100129064();
  type metadata accessor for AirQualityScale();
  sub_100179C0C();
  uint64_t v262 = v13;
  uint64_t v263 = v12;
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v261 = v14;
  uint64_t v15 = sub_10017DF08(&qword_100E885C0);
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_100109314();
  uint64_t v291 = v17;
  sub_100129064();
  uint64_t v292 = type metadata accessor for AirQuality();
  sub_100179C0C();
  uint64_t v265 = v18;
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v264 = v20;
  uint64_t v21 = sub_10017DF08(&qword_100E63730);
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_100109314();
  uint64_t v283 = v23;
  sub_100129064();
  uint64_t v284 = type metadata accessor for NSUnitSpeed.WeatherFormatUsage();
  sub_100179C0C();
  uint64_t v282 = v24;
  __chkstk_darwin(v25);
  sub_100109314();
  uint64_t v281 = v26;
  sub_100129064();
  type metadata accessor for NSUnitSpeed.BaseWeatherFormatStyle();
  sub_100179C0C();
  uint64_t v289 = v28;
  uint64_t v290 = v27;
  __chkstk_darwin(v27);
  sub_100109314();
  uint64_t v288 = v29;
  sub_10017DF08(&qword_100E6D0A8);
  sub_100179C0C();
  uint64_t v286 = v31;
  uint64_t v287 = v30;
  __chkstk_darwin(v30);
  sub_100109314();
  uint64_t v285 = v32;
  sub_100129064();
  type metadata accessor for Wind();
  sub_100179C0C();
  uint64_t v279 = v34;
  uint64_t v280 = v33;
  __chkstk_darwin(v33);
  sub_100109314();
  uint64_t v278 = v35;
  sub_100129064();
  uint64_t v295 = type metadata accessor for WeatherFormatPlaceholder();
  sub_100179C0C();
  uint64_t v301 = v36;
  __chkstk_darwin(v37);
  sub_100109314();
  uint64_t v294 = v38;
  sub_100129064();
  uint64_t v277 = type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle();
  sub_100179C0C();
  *(void *)&long long v276 = v39;
  __chkstk_darwin(v40);
  sub_100109314();
  unint64_t v275 = v41;
  sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  uint64_t v273 = v43;
  uint64_t v274 = v42;
  __chkstk_darwin(v42);
  sub_100109314();
  uint64_t v272 = v44;
  sub_100129064();
  *(void *)&long long v303 = type metadata accessor for CurrentWeather();
  sub_100179C0C();
  *(void *)&long long v306 = v45;
  __chkstk_darwin(v46);
  sub_100109314();
  *(void *)&long long v302 = v47;
  uint64_t v48 = sub_10017DF08(&qword_100E749B0);
  uint64_t v49 = sub_100109308(v48);
  __chkstk_darwin(v49);
  sub_100162EF8();
  uint64_t v260 = v50;
  __chkstk_darwin(v51);
  uint64_t v300 = (char *)v254 - v52;
  sub_100129064();
  *(void *)&long long v305 = type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v297 = v53;
  __chkstk_darwin(v54);
  sub_100162EF8();
  uint64_t v266 = v55;
  __chkstk_darwin(v56);
  uint64_t v267 = (uint64_t)v254 - v57;
  __chkstk_darwin(v58);
  uint64_t v296 = (char *)v254 - v59;
  sub_100129064();
  type metadata accessor for ReportWeatherConfiguration();
  sub_100179C0C();
  uint64_t v298 = v61;
  *(void *)&long long v299 = v60;
  __chkstk_darwin(v60);
  sub_1001626E0();
  uint64_t v62 = type metadata accessor for AppConfigurationState();
  uint64_t v63 = sub_100109308(v62);
  __chkstk_darwin(v63);
  sub_1001626E0();
  uint64_t v66 = v65 - v64;
  uint64_t v271 = type metadata accessor for WeatherData(0);
  sub_100162E4C();
  __chkstk_darwin(v67);
  sub_100109314();
  uint64_t v304 = v68;
  uint64_t v69 = sub_10017DF08(&qword_100E63770);
  uint64_t v70 = sub_100109308(v69);
  __chkstk_darwin(v70);
  sub_1001626E0();
  uint64_t v73 = v72 - v71;
  uint64_t v74 = type metadata accessor for LocationWeatherDataState(0);
  sub_100162E4C();
  __chkstk_darwin(v75);
  uint64_t v77 = (char *)v254 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v78);
  uint64_t v307 = (uint64_t)v254 - v79;
  uint64_t v80 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  uint64_t v81 = sub_100109308(v80);
  __chkstk_darwin(v81);
  sub_1001626E0();
  uint64_t v84 = v83 - v82;
  uint64_t v85 = type metadata accessor for LocationsState();
  uint64_t v86 = sub_100109308(v85);
  __chkstk_darwin(v86);
  sub_1001626E0();
  uint64_t v89 = v88 - v87;
  uint64_t v90 = type metadata accessor for CurrentLocation();
  sub_100162E4C();
  __chkstk_darwin(v91);
  sub_100109314();
  uint64_t v308 = v92;
  *(void *)&long long v309 = a1;
  uint64_t v93 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess();
  if (*(unsigned char *)(v93 + 2) != 4)
  {
    if (*(unsigned __int8 *)(v93 + 1) - 1 > 1)
    {
LABEL_6:
      sub_100881BF8((uint64_t)&v314);
      goto LABEL_7;
    }
    uint64_t v94 = v309;
    sub_1001CECC8(v309 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, v89, (void (*)(void))type metadata accessor for LocationsState);
    sub_10013B3F0(v89, v84);
    sub_1001CEE94(v89, (void (*)(void))type metadata accessor for LocationsState);
    if (_s7Weather24LocationCompositionStateOwet_0(v84, 1, v90) == 1)
    {
      sub_100178110(v84, (uint64_t *)&unk_100EADD50);
      goto LABEL_6;
    }
    uint64_t v102 = v308;
    sub_1001D10DC(v84, v308, (void (*)(void))&type metadata accessor for CurrentLocation);
    uint64_t v103 = *(void *)(v94 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
    swift_bridgeObjectRetain();
    uint64_t v104 = CurrentLocation.id.getter();
    sub_1001BBE9C(v104, v105, v103);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (_s7Weather24LocationCompositionStateOwet_0(v73, 1, v74) == 1)
    {
      sub_100178110(v73, &qword_100E63770);
      sub_100881BF8((uint64_t)&v314);
      sub_1001A2588();
LABEL_16:
      sub_1001CEE94(v102, (void (*)(void))&type metadata accessor for CurrentLocation);
      long long v100 = v302;
      long long v99 = v303;
      long long v98 = v305;
      long long v97 = v306;
      long long v95 = v309;
      long long v96 = v310;
      goto LABEL_8;
    }
    uint64_t v106 = v307;
    sub_1001D10DC(v73, v307, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    sub_1001CECC8(v106, (uint64_t)v77, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_1001CEE94((uint64_t)v77, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      sub_100881D90((uint64_t)&v314);
      sub_1001A2588();
      uint64_t v115 = v106;
      goto LABEL_15;
    }
    uint64_t v107 = sub_10017DF08(&qword_100E63748);
    uint64_t v108 = (uint64_t)&v77[*(int *)(v107 + 48)];
    uint64_t v109 = (uint64_t)&v77[*(int *)(v107 + 64)];
    uint64_t v110 = v304;
    sub_1001D10DC((uint64_t)v77, v304, (void (*)(void))type metadata accessor for WeatherData);
    sub_1001CEE94(v109, (void (*)(void))type metadata accessor for NewsDataModel);
    sub_1001CEE94(v108, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
    sub_1001CECC8(v309 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_appConfiguration, v66, (void (*)(void))type metadata accessor for AppConfigurationState);
    AppConfiguration.reportWeather.getter();
    type metadata accessor for AppConfiguration();
    sub_100162E4C();
    sub_100162F0C();
    v111();
    ReportWeatherConfiguration.onlineFeedbackURL.getter();
    sub_100162F0C();
    v112();
    uint64_t v113 = (uint64_t)v300;
    URL.init(string:)();
    swift_bridgeObjectRelease();
    uint64_t v114 = v305;
    if (_s7Weather24LocationCompositionStateOwet_0(v113, 1, v305) == 1)
    {
      sub_100178110(v113, &qword_100E749B0);
      sub_100881D90((uint64_t)&v314);
      long long v309 = v315;
      long long v310 = v314;
      long long v305 = v317;
      long long v306 = v316;
      long long v302 = v319;
      long long v303 = v318;
      sub_1001CEE94(v110, (void (*)(void))type metadata accessor for WeatherData);
      uint64_t v115 = v106;
LABEL_15:
      sub_1001CEE94(v115, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      goto LABEL_16;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v297 + 32))(v296, v113, v114);
    uint64_t v300 = (char *)(v110 + *(int *)(v271 + 24));
    WeatherDataModel.currentWeather.getter();
    CurrentWeather.temperature.getter();
    uint64_t v116 = *(void (**)(uint64_t, void))(v306 + 8);
    *(void *)&long long v306 = v306 + 8;
    uint64_t v298 = v116;
    sub_100162F0C();
    v117();
    static WeatherFormatStyle<>.weather.getter();
    LODWORD(v271) = enum case for WeatherFormatPlaceholder.none(_:);
    uint64_t v118 = v301;
    uint64_t v119 = *(void (**)(void))(v301 + 104);
    *((void *)&v255 + 1) = v301 + 104;
    uint64_t v256 = (void (*)(uint64_t, void, uint64_t))v119;
    uint64_t v120 = v294;
    uint64_t v121 = v295;
    v119(v294);
    *(void *)&long long v255 = type metadata accessor for UnitManager();
    static UnitManager.standard.getter();
    sub_100186F30((unint64_t *)&qword_100E6BF60, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
    uint64_t v122 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    v254[0] = v123;
    swift_release();
    os_log_type_t v124 = *(void (**)(uint64_t, uint64_t))(v118 + 8);
    uint64_t v301 = v118 + 8;
    v254[1] = v124;
    v124(v120, v121);
    sub_100162F0C();
    v125();
    sub_100162F0C();
    v126();
    *(void *)&long long v299 = self;
    int v127 = (objc_class *)[(id)v299 mainBundle];
    sub_1001A0068();
    uint64_t v128 = sub_10019F290();
    v129.super.isa = v127;
    sub_1001632F8(v128, v130, v131, v132, v129, v133, v134, v135);

    uint64_t v277 = sub_10017DF08(&qword_100E64020);
    uint64_t v136 = swift_allocObject();
    long long v276 = xmmword_100C251B0;
    *(_OWORD *)(v136 + 16) = xmmword_100C251B0;
    *(void *)(v136 + 56) = &type metadata for String;
    unint64_t v275 = sub_10012B7C0();
    *(void *)(v136 + 64) = v275;
    uint64_t v137 = v254[0];
    *(void *)(v136 + 32) = v122;
    *(void *)(v136 + 40) = v137;
    uint64_t v273 = String.init(format:_:)();
    uint64_t v274 = v138;
    swift_bridgeObjectRelease();
    WeatherDataModel.currentWeather.getter();
    CurrentWeather.wind.getter();
    sub_100162F0C();
    v139();
    Wind.speed.getter();
    sub_100162F0C();
    v140();
    uint64_t v142 = v281;
    uint64_t v141 = v282;
    uint64_t v143 = v284;
    (*(void (**)(uint64_t, void, uint64_t))(v282 + 104))(v281, enum case for NSUnitSpeed.WeatherFormatUsage.windSpeed(_:), v284);
    uint64_t v144 = type metadata accessor for Locale();
    uint64_t v145 = v283;
    _s7Weather24LocationCompositionStateOwst_0(v283, 1, 1, v144);
    static Set<>.full.getter();
    static WeatherFormatStyle<>.weather(_:usage:locale:)();
    swift_bridgeObjectRelease();
    sub_100178110(v145, &qword_100E63730);
    (*(void (**)(uint64_t, uint64_t))(v141 + 8))(v142, v143);
    v256(v294, v271, v295);
    static UnitManager.standard.getter();
    sub_100186F30(&qword_100E6ECD0, (void (*)(uint64_t))&type metadata accessor for NSUnitSpeed.BaseWeatherFormatStyle);
    uint64_t v146 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    uint64_t v148 = v147;
    swift_release();
    sub_100162F0C();
    v149();
    sub_100162F0C();
    v150();
    sub_100162F0C();
    v151();
    uint64_t v152 = (objc_class *)[(id)v299 mainBundle];
    sub_1001A0068();
    uint64_t v153 = sub_10019F290();
    v154.super.isa = v152;
    sub_1001632F8(v153, v155, v156, v157, v154, v158, v159, v160);

    uint64_t v161 = sub_100184010();
    *(_OWORD *)(v161 + 16) = v276;
    unint64_t v162 = v275;
    *(void *)(v161 + 56) = &type metadata for String;
    *(void *)(v161 + 64) = v162;
    *(void *)(v161 + 32) = v146;
    *(void *)(v161 + 40) = v148;
    uint64_t v295 = String.init(format:_:)();
    uint64_t v301 = v163;
    swift_bridgeObjectRelease();
    uint64_t v164 = v291;
    WeatherDataModel.airQuality.getter();
    uint64_t v165 = v292;
    if (_s7Weather24LocationCompositionStateOwet_0(v164, 1, v292) == 1)
    {
      sub_100178110(v164, &qword_100E885C0);
      uint64_t v289 = 0;
      uint64_t v290 = 0;
      uint64_t v291 = 0;
      uint64_t v294 = 0;
      uint64_t v166 = v270;
    }
    else
    {
      uint64_t v168 = v264;
      uint64_t v167 = v265;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v265 + 32))(v264, v164, v165);
      AirQuality.scale.getter();
      uint64_t v291 = AirQualityScale.displayLabel.getter();
      uint64_t v294 = v169;
      uint64_t v170 = *(void (**)(uint64_t))(v262 + 8);
      uint64_t v171 = sub_1001894D4();
      v170(v171);
      AirQuality.scale.getter();
      char v172 = AirQualityScale.isNumerical.getter();
      uint64_t v173 = sub_1001894D4();
      v170(v173);
      uint64_t v174 = (objc_class *)[(id)v299 mainBundle];
      sub_1001A0068();
      if (v172)
      {
        *(void *)&long long v255 = 0x8000000100CB4EF0;
        v178.super.isa = v174;
        sub_1001632F8(0x7361206E776F6853, 0xEC0000006425203ALL, 0, 0, v178, v175, v176, v177 + 14);

        uint64_t v179 = sub_100184010();
        *(_OWORD *)(v179 + 16) = v276;
        uint64_t v180 = AirQuality.index.getter();
        *(void *)(v179 + 56) = &type metadata for Int;
        *(void *)(v179 + 64) = &protocol witness table for Int;
        *(void *)(v179 + 32) = v180;
      }
      else
      {
        uint64_t v181 = sub_10019F290();
        v182.super.isa = v174;
        sub_1001632F8(v181, v183, v184, v185, v182, v186, v187, v188);

        uint64_t v189 = sub_100184010();
        *(_OWORD *)(v189 + 16) = v276;
        AirQuality.currentScaleCategory.getter();
        uint64_t v190 = AirQualityScaleCategory.description.getter();
        uint64_t v192 = v191;
        sub_100162F0C();
        v195(v193, v194);
        unint64_t v196 = v275;
        *(void *)(v189 + 56) = &type metadata for String;
        *(void *)(v189 + 64) = v196;
        *(void *)(v189 + 32) = v190;
        *(void *)(v189 + 40) = v192;
      }
      uint64_t v289 = String.init(format:_:)();
      uint64_t v290 = v197;
      uint64_t v166 = v270;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v167 + 8))(v168, v165);
    }
    uint64_t v198 = v302;
    WeatherDataModel.currentWeather.getter();
    uint64_t v199 = v309;
    sub_1001CECC8(v309 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v293, (void (*)(void))type metadata accessor for TimeState);
    uint64_t v200 = sub_1008837EC();
    uint64_t v202 = v201;
    *(void *)&long long v310 = v203;
    uint64_t v205 = v204;
    v298(v198, v303);
    type metadata accessor for Date();
    sub_100162E4C();
    sub_100162F0C();
    v208(v206, v207);
    sub_1001CECC8(v199 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, v166, (void (*)(void))type metadata accessor for ModalViewState);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v209 = *(void *)v166;
      uint64_t v210 = *(void *)(*(void *)v166 + 16);
      p_type = &stru_100E5BFF0.type;
      if ((v210 & 0x8000000000000000) == 0)
      {
        *(void *)&long long v302 = *(void *)(v209 + 104);
        uint64_t v300 = *(char **)(v209 + 96);
        long long v299 = *(_OWORD *)(v209 + 80);
        *(void *)&long long v310 = *(void *)(v209 + 72);
        *(void *)&long long v309 = *(void *)(v209 + 64);
        *(void *)&long long v306 = *(void *)(v209 + 56);
        *(void *)&long long v303 = *(void *)(v209 + 48);
        uint64_t v298 = *(void (**)(uint64_t, void))(v209 + 40);
        uint64_t v212 = *(void *)(v209 + 32);
        uint64_t v292 = *(void *)(v209 + 24);
        uint64_t v293 = v212;
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        memcpy(v312, (const void *)(v210 + 16), 0xC2uLL);
        memmove(v313, (const void *)(v210 + 16), 0xC2uLL);
        LocationSearchEntityFromStringResolver.init()();
        sub_100693674((uint64_t)v313, (uint64_t)&v314);
        uint64_t v213 = v260;
        _s7Weather24LocationCompositionStateOwst_0(v260, 1, 1, v305);
        sub_1002E728C((uint64_t)v312);
        uint64_t v214 = sub_100693060((uint64_t *)&v314, v273, v274, 3u, v295, v301, 3u, v291, v294, v289, v290, 3u, 0, 0, v213, 2, 2, v210);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        sub_1002E7344((uint64_t)v312);
        uint64_t v257 = v302;
        uint64_t v256 = (void (*)(uint64_t, void, uint64_t))v300;
        long long v255 = v299;
        sub_100274E38(v210);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100178110(v213, &qword_100E749B0);
        sub_100162F0C();
        v217(v215, v216);
LABEL_29:
        sub_1001CEE94(v304, (void (*)(void))type metadata accessor for WeatherData);
        sub_1001CEE94(v307, (void (*)(void))type metadata accessor for LocationWeatherDataState);
        sub_1001CEE94(v308, (void (*)(void))&type metadata accessor for CurrentLocation);
        long long v95 = 0uLL;
        long long v96 = (unint64_t)v214;
        long long v97 = 0uLL;
        long long v98 = 0uLL;
        long long v99 = 0uLL;
        long long v100 = 0uLL;
        goto LABEL_8;
      }
      *(void *)&long long v302 = v200;
      *(void *)&long long v306 = v205;
      *(void *)&long long v309 = v202;
      swift_release();
    }
    else
    {
      *(void *)&long long v302 = v200;
      *(void *)&long long v306 = v205;
      *(void *)&long long v309 = v202;
      sub_1001CEE94(v166, (void (*)(void))type metadata accessor for ModalViewState);
      p_type = (char **)(&stru_100E5BFF0 + 16);
    }
    LODWORD(v303) = BYTE4(v268) & 1;
    uint64_t v218 = (void *)v299;
    uint64_t v219 = (objc_class *)[v299 p_type[352] v258 v259];
    sub_1001A0068();
    sub_1001631D8();
    v220.super.isa = v219;
    uint64_t v224 = sub_1001632F8(0x7364756F6C43, 0xE600000000000000, 0, 0, v220, v221, v222, v223);
    uint64_t v226 = v225;

    uint64_t v227 = (objc_class *)[v218 p_type[352]];
    sub_1001631D8();
    v228.super.isa = v227;
    uint64_t v229 = sub_10019D9D0(1852399954, 0xE400000000000000, 0, 0, v228);
    uint64_t v231 = v230;

    uint64_t v232 = (objc_class *)[v218 p_type[352]];
    sub_1001631D8();
    v233.super.isa = v232;
    uint64_t v237 = sub_1001632F8(0x7465656C53, 0xE500000000000000, 0, 0, v233, v234, v235, v236);
    uint64_t v239 = v238;

    uint64_t v240 = (objc_class *)[v218 p_type[352]];
    sub_1001631D8();
    v241.super.isa = v240;
    uint64_t v242 = sub_10019D9D0(2003791443, 0xE400000000000000, 0, 0, v241);
    uint64_t v244 = v243;

    *(void *)&long long v314 = v302;
    *((void *)&v314 + 1) = v309;
    *(void *)&long long v315 = v310;
    *((void *)&v315 + 1) = v306;
    LOBYTE(v316) = 0;
    *((void *)&v316 + 1) = v224;
    *(void *)&long long v317 = v226;
    *((void *)&v317 + 1) = 0x69662E64756F6C63;
    *(void *)&long long v318 = 0xEA00000000006C6CLL;
    WORD4(v318) = 0;
    *(void *)&long long v319 = v229;
    *((void *)&v319 + 1) = v231;
    uint64_t v320 = 0x61722E64756F6C63;
    unint64_t v321 = 0xEF6C6C69662E6E69;
    __int16 v322 = 0;
    uint64_t v323 = v237;
    uint64_t v324 = v239;
    sub_1001A0068();
    uint64_t v325 = v245 - 33;
    unint64_t v326 = 0x8000000100CB4E40;
    __int16 v327 = 0;
    uint64_t v328 = v242;
    uint64_t v329 = v244;
    uint64_t v330 = 0x6B616C66776F6E73;
    unint64_t v331 = 0xE900000000000065;
    __int16 v332 = 0;
    uint64_t v247 = v296;
    uint64_t v246 = v297;
    uint64_t v248 = *(void (**)(uint64_t, char *, uint64_t))(v297 + 16);
    uint64_t v249 = v267;
    uint64_t v250 = v305;
    v248(v267, v296, v305);
    uint64_t v251 = v266;
    v248(v266, (char *)v249, v250);
    type metadata accessor for ReportWeatherContentViewModel._Storage(0);
    swift_allocObject();
    BYTE1(v265) = v303;
    LOBYTE(v265) = 0;
    LOBYTE(v261) = 1;
    sub_1002DEAEC((uint64_t)&v314, v273, v274, 1, v295, v301, 1, v291, v294, v289, v290, v261, (uint64_t)&_swiftEmptySetSingleton, (uint64_t)&_swiftEmptySetSingleton, v251, v265, v266, v267, v268,
      v269,
      v270,
      v271,
      v272,
      v273,
      v274,
      v275,
      v276,
      *((uint64_t *)&v276 + 1),
      v277,
      v278,
      v279,
      v280,
      v281,
      v282,
      SBYTE1(v282));
    uint64_t v214 = v252;
    uint64_t v253 = *(void (**)(uint64_t, uint64_t))(v246 + 8);
    v253(v249, v250);
    v253((uint64_t)v247, v250);
    goto LABEL_29;
  }
  sub_100881D90((uint64_t)&v314);
LABEL_7:
  long long v96 = v314;
  long long v95 = v315;
  long long v97 = v316;
  long long v98 = v317;
  long long v99 = v318;
  long long v100 = v319;
LABEL_8:
  uint64_t v101 = v311;
  *uint64_t v311 = v96;
  v101[1] = v95;
  v101[2] = v97;
  v101[3] = v98;
  v101[4] = v99;
  v101[5] = v100;
}

uint64_t sub_1008837EC()
{
  id v0 = self;
  id v1 = [v0 mainBundle];
  v9._object = (void *)0x8000000100CB4F30;
  v2._uint64_t countAndFlagsBits = 0x796E6E7553;
  v2._object = (void *)0xE500000000000000;
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v9._uint64_t countAndFlagsBits = 0xD000000000000030;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v9)._countAndFlagsBits;

  if ((CurrentWeather.isDaylight.getter() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    id v5 = [v0 mainBundle];
    v6._uint64_t countAndFlagsBits = 0xD000000000000010;
    v10._object = (void *)0x8000000100CB4F90;
    v6._object = (void *)0x8000000100CB4F70;
    v7._uint64_t countAndFlagsBits = 0x7261656C43;
    v7._object = (void *)0xE500000000000000;
    v10._uint64_t countAndFlagsBits = 0xD000000000000030;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v10)._countAndFlagsBits;
  }
  return countAndFlagsBits;
}

uint64_t sub_100883978()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ContentSizeCategory();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = __chkstk_darwin(v2);
  Swift::String v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, v1, v2, v4);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 != enum case for ContentSizeCategory.extraSmall(_:)
    && v7 != enum case for ContentSizeCategory.small(_:)
    && v7 != enum case for ContentSizeCategory.medium(_:)
    && v7 != enum case for ContentSizeCategory.large(_:)
    && v7 != enum case for ContentSizeCategory.extraLarge(_:)
    && v7 != enum case for ContentSizeCategory.extraExtraLarge(_:)
    && v7 != enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
  {
    if (v7 == enum case for ContentSizeCategory.accessibilityMedium(_:)
      || v7 == enum case for ContentSizeCategory.accessibilityLarge(_:)
      || v7 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:)
      || v7 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:)
      || v7 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
    {
      return 1;
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return 0;
}

uint64_t sub_100883B44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Location.Identifier();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::String v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for SavedLocation();
  uint64_t v7 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  Swift::String v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64((void *)(v1 + 16), *(void *)(v1 + 40));
  uint64_t v10 = dispatch thunk of SavedLocationsManagerType.savedLocations.getter();
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    v22[1] = v10;
    uint64_t v23 = a1;
    uint64_t v12 = v10 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v13 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v14 = *(void *)(v7 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_100886FF8(v12, (uint64_t)v9, (void (*)(void))&type metadata accessor for SavedLocation);
      SavedLocation.identifier.getter();
      uint64_t v15 = Location.Identifier.name.getter();
      uint64_t v17 = v16;
      (*v13)(v6, v3);
      if (v15 == 0x6B726F592077654ELL && v17 == 0xE800000000000000) {
        break;
      }
      char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v19) {
        goto LABEL_12;
      }
      sub_10018D018((uint64_t)v9, (void (*)(void))&type metadata accessor for SavedLocation);
      v12 += v14;
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        a1 = v23;
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();
LABEL_12:
    swift_bridgeObjectRelease();
    a1 = v23;
    sub_1002AB784((uint64_t)v9, v23);
    uint64_t v20 = 0;
  }
  else
  {
    uint64_t v20 = 1;
  }
LABEL_13:
  _s7Weather24LocationCompositionStateOwst_0(a1, v20, 1, v24);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100883E08(uint64_t a1, uint64_t a2)
{
  uint64_t v475 = a2;
  uint64_t v478 = a1;
  uint64_t v460 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  v441[2] = v2;
  __chkstk_darwin(v3);
  sub_100109314();
  v441[1] = v4;
  uint64_t v454 = type metadata accessor for WeatherMapOverlayKind();
  sub_100179C0C();
  uint64_t v450 = v5;
  __chkstk_darwin(v6);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v7);
  sub_100128F8C();
  sub_100109328(v8);
  uint64_t v457 = type metadata accessor for WeatherCondition();
  sub_100179C0C();
  uint64_t v449 = v9;
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v456 = v11;
  uint64_t v12 = type metadata accessor for SavedLocation();
  sub_100179C0C();
  uint64_t v444 = v13;
  __chkstk_darwin(v14);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v15);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v16);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v17);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v18);
  sub_100128F8C();
  sub_10012B9EC(v19);
  type metadata accessor for Logger();
  sub_100179C0C();
  uint64_t v461 = v20;
  uint64_t v462 = v21;
  __chkstk_darwin(v20);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v22);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v23);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v24);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)v441 - v26;
  __chkstk_darwin(v28);
  sub_100128F8C();
  sub_100109328(v29);
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  uint64_t v31 = sub_100109308(active);
  __chkstk_darwin(v31);
  sub_100109314();
  uint64_t v459 = v32;
  uint64_t v33 = sub_10017DF08(&qword_100E66678);
  uint64_t v34 = sub_100109308(v33);
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)v441 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)v441 - v38;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)v441 - v41;
  uint64_t v43 = sub_10017DF08(&qword_100E639E8);
  uint64_t v44 = sub_100109308(v43);
  __chkstk_darwin(v44);
  sub_1001626E0();
  uint64_t v47 = v46 - v45;
  uint64_t v463 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v458 = v48;
  __chkstk_darwin(v49);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v50);
  sub_100128F8C();
  sub_100109328(v51);
  uint64_t v452 = type metadata accessor for DetailCondition();
  sub_100179C0C();
  uint64_t v455 = v52;
  __chkstk_darwin(v53);
  sub_100109314();
  uint64_t v451 = v54;
  uint64_t v55 = sub_10017DF08(&qword_100E663F0);
  uint64_t v56 = sub_100109308(v55);
  __chkstk_darwin(v56);
  sub_100109314();
  uint64_t v470 = v57;
  uint64_t v58 = sub_10017DF08(&qword_100E663F8);
  uint64_t v59 = sub_100109308(v58);
  __chkstk_darwin(v59);
  sub_100109314();
  uint64_t v464 = v60;
  uint64_t v61 = sub_10017DF08(&qword_100E66400);
  uint64_t v62 = sub_100109308(v61);
  __chkstk_darwin(v62);
  sub_10011BA64(v63, v441[0]);
  uint64_t v64 = sub_10017DF08(&qword_100E66408);
  uint64_t v65 = sub_100109308(v64);
  __chkstk_darwin(v65);
  sub_10019DE20(v66, v441[0]);
  uint64_t v67 = sub_10017DF08(&qword_100E66410);
  uint64_t v68 = sub_100109308(v67);
  __chkstk_darwin(v68);
  sub_100163F64(v69, v441[0]);
  uint64_t v469 = type metadata accessor for ViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v70);
  sub_100164B64(v71, v441[0]);
  uint64_t v72 = sub_10017DF08(&qword_100E66418);
  uint64_t v73 = sub_100109308(v72);
  __chkstk_darwin(v73);
  sub_10017225C(v74, v441[0]);
  uint64_t v75 = sub_10017DF08(&qword_100E66420);
  uint64_t v76 = sub_100109308(v75);
  __chkstk_darwin(v76);
  sub_100109314();
  uint64_t v472 = v77;
  uint64_t v78 = sub_10017DF08(&qword_100E66428);
  uint64_t v79 = sub_100109308(v78);
  __chkstk_darwin(v79);
  sub_100109314();
  uint64_t v473 = v80;
  uint64_t v81 = sub_10017DF08(&qword_100E66430);
  uint64_t v82 = sub_100109308(v81);
  __chkstk_darwin(v82);
  sub_10011BA80(v83, v441[0]);
  uint64_t v84 = sub_10017DF08(&qword_100E66438);
  uint64_t v85 = sub_100109308(v84);
  __chkstk_darwin(v85);
  sub_10017B2B0(v86, v441[0]);
  uint64_t v87 = sub_10017DF08(&qword_100E66440);
  uint64_t v88 = sub_100109308(v87);
  __chkstk_darwin(v88);
  sub_100109314();
  uint64_t v90 = v89;
  uint64_t v91 = type metadata accessor for PerformanceTestAction();
  sub_100162E4C();
  __chkstk_darwin(v92);
  sub_1001626E0();
  uint64_t v95 = v94 - v93;
  sub_100886FF8(v475, v94 - v93, (void (*)(void))type metadata accessor for PerformanceTestAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v95 = *(void *)v95;
      uint64_t v100 = v474;
      uint64_t v101 = *(void *)(sub_10017912C() + 16);
      swift_bridgeObjectRelease();
      if (v95 < v101)
      {
        uint64_t v102 = sub_10017912C();
        if (v95 < 0)
        {
          __break(1u);
        }
        else
        {
          uint64_t v103 = v102;
          uint64_t v104 = v476;
          uint64_t v105 = v477;
          uint64_t v106 = v472;
          uint64_t v107 = v473;
          if ((unint64_t)v95 < *(void *)(v102 + 16))
          {
            sub_1001835E4();
            sub_100886FF8(v103 + v108 + *(void *)(v109 + 72) * v95, v446, (void (*)(void))&type metadata accessor for SavedLocation);
            swift_bridgeObjectRelease();
            uint64_t v110 = type metadata accessor for AppConfigurationState();
            uint64_t v113 = sub_10017E050(v90, v111, v112, v110);
            uint64_t v116 = sub_1001630C0(v105, v114, v115, v113);
            uint64_t v119 = sub_10017A5E0(v104, v117, v118, v116);
            uint64_t v122 = sub_10017A0E0(v107, v120, v121, v119);
            sub_100163050(v106, v123, v124, v122);
            sub_100188E10(v478 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v125, (void (*)(void))type metadata accessor for ViewState);
            sub_1001D1420();
            sub_10018565C();
            sub_100181044();
            uint64_t v126 = sub_10017AAB0();
            sub_1001D0F28(v126);
            sub_1001652DC();
            uint64_t v127 = sub_100180FA0(v105);
            uint64_t v128 = sub_10017EA28(v127);
            uint64_t v131 = sub_100185D38(v128, v129, v130, v128);
            sub_10019F2C4(v131);
            sub_100178110(v100, &qword_100E663F8);
            sub_100178110(v90, &qword_100E66400);
            sub_100178110(v103, &qword_100E66408);
            sub_100178110(v105, &qword_100E66410);
            sub_10018D018(v95, (void (*)(void))type metadata accessor for ViewState);
            uint64_t v132 = sub_1001D1EA8();
            uint64_t v133 = v470;
            _s7Weather24LocationCompositionStateOwst_0(v470, 1, 1, v132);
            uint64_t v134 = v476;
            uint64_t v135 = v477;
            sub_100163034(0, 3, v90, v477, v476, v136, v137, v138, 0, v107, v106, (uint64_t)v36, v133, 0, 0, 0, 0, 0, 0,
              0,
              v478);
            sub_100166D54();
            sub_100178110(v133, &qword_100E663F0);
            sub_100178110((uint64_t)v36, &qword_100E66418);
            sub_100178110(v106, &qword_100E66420);
            sub_100178110(v107, &qword_100E66428);
            sub_100178110(v134, &qword_100E66430);
            sub_100178110(v135, &qword_100E66438);
            sub_100178110(v90, &qword_100E66440);
            uint64_t v139 = &v477;
LABEL_39:
            sub_10018D018(*(v139 - 32), (void (*)(void))&type metadata accessor for SavedLocation);
            return v95;
          }
        }
        __break(1u);
        goto LABEL_48;
      }
      static Logger.automation.getter();
      uint64_t v283 = (void *)Logger.logObject.getter();
      os_log_type_t v284 = static os_log_type_t.error.getter();
      if (sub_10017F230(v284))
      {
        uint64_t v285 = (_WORD *)sub_100163DC4();
        sub_1001858BC(v285);
        sub_100179C44((void *)&_mh_execute_header, v286, v287, "Failed to locate location due to index out of boundary");
        sub_100162EE0();
      }

      sub_100162F0C();
      v288();
      break;
    case 2u:
      sub_1001627D4();
      v140();
      uint64_t v141 = type metadata accessor for AppConfigurationState();
      uint64_t v144 = sub_1001A0F38(v141, v142, v143, v141);
      uint64_t v145 = sub_100163A58(v144);
      uint64_t v146 = sub_10018402C(v145);
      uint64_t v147 = v473;
      uint64_t v150 = sub_10017A0E0(v473, v148, v149, v146);
      sub_100186C10(v150);
      uint64_t v151 = sub_10011C0A4(OBJC_IVAR____TtCV7Weather9MainState8_Storage_view);
      sub_100188E10(v151, v152, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v153 = v459;
      Location.identifier.getter();
      sub_10018565C();
      uint64_t v154 = sub_100181044();
      uint64_t v155 = sub_1001CCEF8(v153, 0, 0, 3, 0, 0);
      sub_1001D0F28(v155);
      sub_1001652DC();
      uint64_t v156 = sub_100180FA0(v91);
      uint64_t v157 = sub_10017EA28(v156);
      uint64_t v160 = sub_100185D38(v157, v158, v159, v157);
      sub_10019F2C4(v160);
      sub_100178110((uint64_t)v42, &qword_100E663F8);
      sub_100178110(v90, &qword_100E66400);
      sub_100178110(v153, &qword_100E66408);
      sub_100178110(v91, &qword_100E66410);
      sub_10018D018(v95, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v161 = sub_1001D1EA8();
      uint64_t v162 = v470;
      uint64_t v163 = _s7Weather24LocationCompositionStateOwst_0(v470, 1, 1, v161);
      sub_10017D698(v163, v164, v165, v166, v167, v168, v169, v170, v423, v424, v426, v428, v429, v430, v431, v432, v433, v435, v437,
        0,
        (uint64_t)v27);
      sub_100166D54();
      sub_100178110(v162, &qword_100E663F0);
      sub_100178110((uint64_t)v36, &qword_100E66418);
      sub_100178110(v47, &qword_100E66420);
      sub_100178110(v147, &qword_100E66428);
      sub_100178110(v91, &qword_100E66430);
      sub_100178110((uint64_t)v27, &qword_100E66438);
      sub_100178110(v154, &qword_100E66440);
      sub_10012BF98();
      goto LABEL_9;
    case 3u:
      uint64_t v172 = *(void *)v95;
      int v173 = *(unsigned __int8 *)(v95 + *(int *)(sub_10017DF08((uint64_t *)&unk_100EA0250) + 64));
      uint64_t v174 = v450;
      uint64_t v175 = v453;
      uint64_t v176 = v454;
      sub_1001627D4();
      v177();
      uint64_t v178 = *(void *)(sub_10019B1FC() + 16);
      swift_bridgeObjectRelease();
      if (v172 < v178)
      {
        LODWORD(v477) = v173;
        uint64_t v179 = sub_10019B1FC();
        if ((v172 & 0x8000000000000000) == 0)
        {
          uint64_t v180 = v179;
          uint64_t v181 = v441[4];
          if ((unint64_t)v172 < *(void *)(v179 + 16))
          {
            sub_1001835E4();
            uint64_t v184 = v445;
            sub_100886FF8(v180 + v182 + *(void *)(v183 + 72) * v172, v445, (void (*)(void))&type metadata accessor for SavedLocation);
            swift_bridgeObjectRelease();
            static Logger.automation.getter();
            sub_100886FF8(v184, v181, (void (*)(void))&type metadata accessor for SavedLocation);
            uint64_t v185 = v441[3];
            sub_100162808();
            v186();
            uint64_t v187 = Logger.logObject.getter();
            os_log_type_t v188 = static os_log_type_t.default.getter();
            int v189 = v188;
            if (os_log_type_enabled(v187, v188))
            {
              uint64_t v190 = swift_slowAlloc();
              uint64_t v476 = swift_slowAlloc();
              uint64_t v480 = v476;
              *(_DWORD *)uint64_t v190 = 136315906;
              LODWORD(v475) = v189;
              SavedLocation.identifier.getter();
              uint64_t v191 = Location.Identifier.name.getter();
              unint64_t v193 = v192;
              sub_10012BF98();
              sub_100162F0C();
              v194();
              uint64_t v479 = sub_10016414C(v191, v193, &v480);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              uint64_t v176 = v454;
              swift_bridgeObjectRelease();
              sub_10018D018(v181, (void (*)(void))&type metadata accessor for SavedLocation);
              *(_WORD *)(v190 + 12) = 2048;
              uint64_t v479 = v172;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v190 + 22) = 2080;
              sub_100886FA8();
              uint64_t v195 = dispatch thunk of CustomStringConvertible.description.getter();
              uint64_t v479 = sub_10016414C(v195, v196, &v480);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              uint64_t v197 = *(void (**)(uint64_t, uint64_t))(v174 + 8);
              v197(v185, v176);
              *(_WORD *)(v190 + 32) = 1024;
              int v198 = v477;
              LODWORD(v479) = v477;
              sub_10019D2A4();
              _os_log_impl((void *)&_mh_execute_header, v187, (os_log_type_t)v475, "Navigation to map. location=%s, index=%ld, overlayKind=%s, fullscreen=%{BOOL}d", (uint8_t *)v190, 0x26u);
              swift_arrayDestroy();
              uint64_t v175 = v453;
              sub_100162EE0();
              sub_100162EE0();

              sub_100162F0C();
              v199();
            }
            else
            {
              sub_10018D018(v181, (void (*)(void))&type metadata accessor for SavedLocation);
              uint64_t v197 = *(void (**)(uint64_t, uint64_t))(v174 + 8);
              v197(v185, v176);

              sub_100162F0C();
              v402();
              int v198 = v477;
            }
            uint64_t v403 = v445;
            uint64_t v95 = sub_100885FA0(v445, v175, v198, v478);
            sub_10018D018(v403, (void (*)(void))&type metadata accessor for SavedLocation);
            v197(v175, v176);
            return v95;
          }
LABEL_49:
          __break(1u);
          JUMPOUT(0x100885F80);
        }
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      static Logger.automation.getter();
      uint64_t v289 = (void *)Logger.logObject.getter();
      os_log_type_t v290 = static os_log_type_t.error.getter();
      if (sub_10017F230(v290))
      {
        uint64_t v291 = (_WORD *)sub_100163DC4();
        sub_1001858BC(v291);
        sub_100179C44((void *)&_mh_execute_header, v292, v293, "Failed to locate location due to index out of boundary");
        sub_100162EE0();
      }

      sub_100162F0C();
      v294();
      (*(void (**)(uint64_t, uint64_t))(v174 + 8))(v175, v176);
      break;
    case 4u:
      uint64_t v200 = v449;
      sub_1001627D4();
      v201();
      uint64_t v202 = type metadata accessor for AppConfigurationState();
      uint64_t v205 = sub_1001A0F38(v202, v203, v204, v202);
      uint64_t v206 = sub_100163A58(v205);
      uint64_t v207 = sub_10018402C(v206);
      uint64_t v208 = v473;
      uint64_t v211 = sub_10017A0E0(v473, v209, v210, v207);
      sub_100186C10(v211);
      uint64_t v212 = sub_10011C0A4(OBJC_IVAR____TtCV7Weather9MainState8_Storage_view);
      uint64_t v213 = v468;
      sub_100886FF8(v212, v468, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v95 = (uint64_t)v467;
      sub_100162808();
      v214();
      uint64_t v215 = type metadata accessor for ViewState.SecondaryViewState(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v216 = sub_100180FA0(v95);
      uint64_t v217 = sub_10017EA28(v216);
      uint64_t v218 = v465;
      _s7Weather24LocationCompositionStateOwst_0(v465, 1, 1, v217);
      uint64_t v219 = type metadata accessor for WeatherMapPresentationState(0);
      uint64_t v220 = v464;
      _s7Weather24LocationCompositionStateOwst_0(v464, 1, 1, v219);
      uint64_t v221 = v471;
      sub_10011D8AC();
      sub_100178110(v220, &qword_100E663F8);
      sub_100178110(v218, &qword_100E66400);
      sub_100178110(v215, &qword_100E66408);
      sub_100178110(v95, &qword_100E66410);
      sub_10018D018(v213, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v222 = sub_1001D1EA8();
      uint64_t v223 = v470;
      uint64_t v224 = _s7Weather24LocationCompositionStateOwst_0(v470, 1, 1, v222);
      sub_10017D698(v224, v225, v226, v227, v228, v229, v230, v231, v423, v424, v426, v428, v429, v430, v431, v432, v433, v435, v437,
        0,
        (uint64_t)v27);
      sub_100166D54();
      sub_100178110(v223, &qword_100E663F0);
      sub_100178110(v221, &qword_100E66418);
      sub_100178110(v47, &qword_100E66420);
      sub_100178110(v208, &qword_100E66428);
      sub_100178110(v218, &qword_100E66430);
      sub_100178110((uint64_t)v27, &qword_100E66438);
      sub_100178110(v213, &qword_100E66440);
      (*(void (**)(uint64_t, uint64_t))(v200 + 8))(v456, v457);
      return v95;
    case 5u:
      uint64_t v232 = type metadata accessor for AppConfigurationState();
      uint64_t v235 = sub_1001A0F38(v232, v233, v234, v232);
      uint64_t v236 = sub_100163A58(v235);
      uint64_t v237 = sub_10018402C(v236);
      uint64_t v238 = v473;
      uint64_t v241 = sub_10017A0E0(v473, v239, v240, v237);
      sub_100186C10(v241);
      sub_100188E10(v478 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v242, (void (*)(void))type metadata accessor for ViewState);
      type metadata accessor for ListViewState._Storage();
      swift_allocObject();
      sub_1001093B0();
      sub_1000EC58C(v243, v244, v245, 0, 0, 0, 0xE000000000000000, 0, 0, 0, 0, 0, 1, 0);
      uint64_t v246 = type metadata accessor for ViewState.SecondaryViewState(0);
      uint64_t v247 = v467;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v467, 1, 1, v246);
      uint64_t v248 = type metadata accessor for SearchViewState(0);
      uint64_t v249 = v466;
      _s7Weather24LocationCompositionStateOwst_0(v466, 1, 1, v248);
      uint64_t v250 = type metadata accessor for DisplayMetrics();
      uint64_t v251 = v465;
      _s7Weather24LocationCompositionStateOwst_0(v465, 1, 1, v250);
      uint64_t v252 = type metadata accessor for WeatherMapPresentationState(0);
      uint64_t v253 = v464;
      _s7Weather24LocationCompositionStateOwst_0(v464, 1, 1, v252);
      uint64_t v254 = v471;
      sub_10011D8AC();
      swift_release();
      sub_100178110(v253, &qword_100E663F8);
      sub_100178110(v251, &qword_100E66400);
      sub_100178110(v249, &qword_100E66408);
      sub_100178110((uint64_t)v247, &qword_100E66410);
      sub_10018D018(v95, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v255 = sub_1001D1EA8();
      uint64_t v256 = v470;
      uint64_t v257 = _s7Weather24LocationCompositionStateOwst_0(v470, 1, 1, v255);
      sub_10017D698(v257, v258, v259, v260, v261, v262, v263, v264, v423, v424, v426, v428, v429, v430, v431, v432, v434, v436, v438,
        0,
        v478);
      sub_100166D54();
      sub_100178110(v256, &qword_100E663F0);
      sub_100178110(v254, &qword_100E66418);
      sub_100178110(v47, &qword_100E66420);
      sub_100178110(v238, &qword_100E66428);
      sub_100178110((uint64_t)v247, &qword_100E66430);
      sub_100178110(v253, &qword_100E66438);
      sub_100178110(v95, &qword_100E66440);
      return v95;
    case 6u:
      uint64_t v265 = v12;
      sub_100883B44((uint64_t)v39);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v12) != 1)
      {
        uint64_t v295 = v447;
        sub_1002AB784((uint64_t)v39, v447);
        uint64_t v296 = type metadata accessor for AppConfigurationState();
        uint64_t v299 = sub_1001A0F38(v296, v297, v298, v296);
        uint64_t v300 = sub_100163A58(v299);
        uint64_t v301 = sub_10018402C(v300);
        uint64_t v302 = v473;
        uint64_t v305 = sub_10017A0E0(v473, v303, v304, v301);
        sub_100186C10(v305);
        uint64_t v306 = sub_10011C0A4(OBJC_IVAR____TtCV7Weather9MainState8_Storage_view);
        sub_100188E10(v306, v307, (void (*)(void))type metadata accessor for ViewState);
        sub_1001D1420();
        sub_10018565C();
        sub_100181044();
        uint64_t v308 = sub_10017AAB0();
        sub_1001D0F28(v308);
        sub_1001652DC();
        uint64_t v309 = sub_100180FA0(v265);
        uint64_t v310 = sub_10017EA28(v309);
        uint64_t v313 = sub_100185D38(v310, v311, v312, v310);
        sub_10019F2C4(v313);
        sub_100178110((uint64_t)v42, &qword_100E663F8);
        sub_100178110(v90, &qword_100E66400);
        sub_100178110((uint64_t)v39, &qword_100E66408);
        sub_100178110(v265, &qword_100E66410);
        sub_10018D018(v95, (void (*)(void))type metadata accessor for ViewState);
        uint64_t v314 = sub_1001D1EA8();
        uint64_t v315 = v470;
        uint64_t v316 = _s7Weather24LocationCompositionStateOwst_0(v470, 1, 1, v314);
        sub_10017D698(v316, v317, v318, v319, v320, v321, v322, v323, v423, v424, v426, v428, v429, v430, v431, v432, v433, v435, v437,
          0,
          (uint64_t)v27);
        sub_100166D54();
        sub_100178110(v315, &qword_100E663F0);
        sub_100178110((uint64_t)v36, &qword_100E66418);
        sub_100178110(v47, &qword_100E66420);
        sub_100178110(v302, &qword_100E66428);
        sub_100178110(v265, &qword_100E66430);
        sub_100178110((uint64_t)v27, &qword_100E66438);
        sub_100178110(v295, &qword_100E66440);
        uint64_t v139 = &v478;
        goto LABEL_39;
      }
      sub_100178110((uint64_t)v39, &qword_100E66678);
      static Logger.automation.getter();
      uint64_t v266 = Logger.logObject.getter();
      os_log_type_t v267 = static os_log_type_t.error.getter();
      BOOL v268 = sub_10017F230(v267);
      uint64_t v95 = v478;
      if (v268)
      {
        uint64_t v269 = (uint8_t *)sub_100163DC4();
        *(_WORD *)uint64_t v269 = 0;
        _os_log_impl((void *)&_mh_execute_header, v266, (os_log_type_t)v27, "Failed to find new york location", v269, 2u);
        sub_100162EE0();
      }
      goto LABEL_24;
    case 7u:
      uint64_t v270 = v12;
      sub_100883B44((uint64_t)v36);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v12) != 1)
      {
        uint64_t v324 = v448;
        sub_1002AB784((uint64_t)v36, v448);
        uint64_t v325 = type metadata accessor for AppConfigurationState();
        uint64_t v328 = sub_1001A0F38(v325, v326, v327, v325);
        uint64_t v329 = sub_100163A58(v328);
        uint64_t v330 = sub_10018402C(v329);
        uint64_t v331 = v473;
        uint64_t v334 = sub_10017A0E0(v473, v332, v333, v330);
        sub_100186C10(v334);
        uint64_t v335 = sub_10011C0A4(OBJC_IVAR____TtCV7Weather9MainState8_Storage_view);
        sub_100188E10(v335, v336, (void (*)(void))type metadata accessor for ViewState);
        sub_1001D1420();
        sub_10018565C();
        sub_100181044();
        uint64_t v337 = sub_10017AAB0();
        sub_1001D0F28(v337);
        sub_1001652DC();
        uint64_t v338 = sub_100180FA0(v91);
        uint64_t v339 = sub_10017EA28(v338);
        uint64_t v342 = sub_100185D38(v339, v340, v341, v339);
        sub_10019F2C4(v342);
        sub_100178110((uint64_t)v42, &qword_100E663F8);
        sub_100178110(v90, &qword_100E66400);
        sub_100178110(v270, &qword_100E66408);
        sub_100178110(v91, &qword_100E66410);
        sub_10018D018(v95, (void (*)(void))type metadata accessor for ViewState);
        uint64_t v343 = sub_1001D1EA8();
        uint64_t v344 = v470;
        uint64_t v345 = _s7Weather24LocationCompositionStateOwst_0(v470, 1, 1, v343);
        sub_10017D698(v345, v346, v347, v348, v349, v350, v351, v352, v423, v424, v426, v428, v429, v430, v431, v432, v433, v435, v437,
          0,
          (uint64_t)v27);
        sub_100166D54();
        sub_100178110(v344, &qword_100E663F0);
        sub_100178110((uint64_t)v36, &qword_100E66418);
        sub_100178110(v47, &qword_100E66420);
        sub_100178110(v331, &qword_100E66428);
        sub_100178110(v91, &qword_100E66430);
        sub_100178110((uint64_t)v27, &qword_100E66438);
        sub_100178110(v324, &qword_100E66440);
        uint64_t v139 = &v479;
        goto LABEL_39;
      }
      sub_100178110((uint64_t)v36, &qword_100E66678);
      static Logger.automation.getter();
      uint64_t v266 = Logger.logObject.getter();
      os_log_type_t v271 = static os_log_type_t.error.getter();
      BOOL v272 = sub_10017F230(v271);
      uint64_t v95 = v478;
      if (v272)
      {
        uint64_t v273 = (_WORD *)sub_100163DC4();
        sub_1001858BC(v273);
        sub_100179C44((void *)&_mh_execute_header, v274, v275, "Failed to find new york location");
        sub_100162EE0();
      }
LABEL_24:

      sub_100162F0C();
      v276();
      goto LABEL_36;
    default:
      uint64_t v96 = v455;
      uint64_t v97 = v451;
      uint64_t v98 = v452;
      sub_1001627D4();
      v99();
      sub_100883B44((uint64_t)v42);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v12) == 1)
      {
        sub_100178110((uint64_t)v42, &qword_100E66678);
        _s7Weather24LocationCompositionStateOwst_0(v47, 1, 1, v463);
      }
      else
      {
        SavedLocation.location.getter();
        sub_10018D018((uint64_t)v42, (void (*)(void))&type metadata accessor for SavedLocation);
        if (_s7Weather24LocationCompositionStateOwet_0(v47, 1, v463) != 1)
        {
          uint64_t v353 = v458;
          uint64_t v95 = v443;
          sub_1001627D4();
          v354();
          id v355 = [self currentDevice];
          id v356 = [v355 userInterfaceIdiom];

          uint64_t v357 = type metadata accessor for AppConfigurationState();
          uint64_t v360 = sub_1001A0F38(v357, v358, v359, v357);
          uint64_t v361 = sub_100163A58(v360);
          uint64_t v362 = sub_10018402C(v361);
          uint64_t v363 = v473;
          uint64_t v366 = sub_10017A0E0(v473, v364, v365, v362);
          uint64_t v367 = v472;
          sub_100163050(v472, v368, v369, v366);
          if (v356)
          {
            uint64_t v370 = v468;
            sub_100886FF8(v478 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v468, (void (*)(void))type metadata accessor for ViewState);
            Location.identifier.getter();
            sub_10018565C();
            sub_100181044();
            uint64_t v371 = sub_10017AAB0();
            v372 = v467;
            uint64_t *v467 = v371;
            uint64_t v373 = type metadata accessor for ViewState.SecondaryViewState(0);
            swift_storeEnumTagMultiPayload();
            uint64_t v374 = sub_100180FA0((uint64_t)v372);
            uint64_t v375 = sub_10017EA28(v374);
            uint64_t v378 = sub_100185D38(v375, v376, v377, v375);
            uint64_t v379 = v464;
            sub_100163050(v464, v380, v381, v378);
            uint64_t v382 = v471;
            sub_10011D8AC();
            sub_100178110(v379, &qword_100E663F8);
            sub_100178110(v367, &qword_100E66400);
            sub_100178110(v373, &qword_100E66408);
            sub_100178110((uint64_t)v372, &qword_100E66410);
            sub_10018D018(v370, (void (*)(void))type metadata accessor for ViewState);
            _s7Weather24LocationCompositionStateOwst_0(v382, 0, 1, v469);
            uint64_t v383 = v472;
            uint64_t v95 = 1;
            uint64_t v384 = v470;
            sub_100162808();
            v385();
            v386 = (int *)type metadata accessor for ConditionDetailViewState();
            sub_100162808();
            v387();
            uint64_t v388 = v384 + v386[6];
            uint64_t v389 = type metadata accessor for Date();
            _s7Weather24LocationCompositionStateOwst_0(v388, 1, 1, v389);
            uint64_t v390 = v384 + v386[8];
            uint64_t v391 = type metadata accessor for DetailChartSelection();
            _s7Weather24LocationCompositionStateOwst_0(v390, 1, 1, v391);
            uint64_t v392 = v384 + v386[7];
            *(_OWORD *)uint64_t v392 = 0u;
            *(_OWORD *)(v392 + 16) = 0u;
            *(unsigned char *)(v392 + 32) = 1;
            *(unsigned char *)(v384 + v386[9]) = 0;
            type metadata accessor for ModalViewState.LocationDetailModal(0);
            swift_storeEnumTagMultiPayload();
            uint64_t v393 = type metadata accessor for ModalViewState(0);
            swift_storeEnumTagMultiPayload();
            _s7Weather24LocationCompositionStateOwst_0(v384, 0, 1, v393);
            sub_10019B6A0();
            uint64_t v394 = v473;
            uint64_t v395 = v442;
            uint64_t v397 = v476;
            uint64_t v396 = v477;
            sub_100163034(0, 3, v442, v477, v476, v398, v399, v400, 0, v473, v383, v382, v384, v430, v431, v432, v433, v435, v437,
              v439,
              v440);
            sub_100166D54();
            sub_100178110(v384, &qword_100E663F0);
            sub_100178110(v382, &qword_100E66418);
            sub_100178110(v383, &qword_100E66420);
            sub_100178110(v394, &qword_100E66428);
            sub_100178110(v397, &qword_100E66430);
            sub_100178110(v396, &qword_100E66438);
            sub_100178110(v395, &qword_100E66440);
            sub_100162F0C();
            v401();
            sub_1001D2574();
          }
          else
          {
            _s7Weather24LocationCompositionStateOwst_0(v471, 1, 1, v469);
            uint64_t v405 = v470;
            sub_100162808();
            v406();
            v407 = (int *)type metadata accessor for ConditionDetailViewState();
            sub_100162808();
            v408();
            uint64_t v409 = v405 + v407[6];
            uint64_t v410 = type metadata accessor for Date();
            _s7Weather24LocationCompositionStateOwst_0(v409, 1, 1, v410);
            uint64_t v411 = v405 + v407[8];
            uint64_t v412 = type metadata accessor for DetailChartSelection();
            _s7Weather24LocationCompositionStateOwst_0(v411, 1, 1, v412);
            uint64_t v413 = v405 + v407[7];
            *(_OWORD *)uint64_t v413 = 0u;
            *(_OWORD *)(v413 + 16) = 0u;
            *(unsigned char *)(v413 + 32) = 1;
            *(unsigned char *)(v405 + v407[9]) = 0;
            type metadata accessor for ModalViewState.LocationDetailModal(0);
            swift_storeEnumTagMultiPayload();
            uint64_t v414 = type metadata accessor for ModalViewState(0);
            swift_storeEnumTagMultiPayload();
            _s7Weather24LocationCompositionStateOwst_0(v405, 0, 1, v414);
            sub_10019B6A0();
            uint64_t v415 = v471;
            uint64_t v427 = v367;
            uint64_t v425 = v363;
            uint64_t v416 = v442;
            uint64_t v417 = v367;
            uint64_t v418 = v476;
            uint64_t v419 = v477;
            sub_100163034(0, 3, v442, v477, v476, v420, v421, v422, 0, v425, v427, v471, v405, v430, v431, v432, v433, v435, v437,
              v439,
              v440);
            sub_100166D54();
            sub_100178110(v405, &qword_100E663F0);
            sub_100178110(v415, &qword_100E66418);
            sub_100178110(v417, &qword_100E66420);
            sub_100178110(v473, &qword_100E66428);
            sub_100178110(v418, &qword_100E66430);
            sub_100178110(v419, &qword_100E66438);
            sub_100178110(v416, &qword_100E66440);
            (*(void (**)(uint64_t, uint64_t))(v353 + 8))(v443, v463);
            sub_10012BF98();
          }
LABEL_9:
          sub_100162F0C();
          v171();
          return v95;
        }
      }
      sub_100178110(v47, &qword_100E639E8);
      static Logger.automation.getter();
      uint64_t v277 = (void *)Logger.logObject.getter();
      os_log_type_t v278 = static os_log_type_t.error.getter();
      if (sub_10017F230(v278))
      {
        uint64_t v279 = (_WORD *)sub_100163DC4();
        sub_1001858BC(v279);
        sub_100179C44((void *)&_mh_execute_header, v280, v281, "Failed to find New York location");
        sub_100162EE0();
      }

      sub_100162F0C();
      v282();
      (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v97, v98);
      break;
  }
  uint64_t v95 = v478;
LABEL_36:
  swift_retain();
  return v95;
}

uint64_t sub_100885FA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  int v238 = a3;
  uint64_t v239 = a2;
  uint64_t v237 = a1;
  uint64_t v5 = sub_10017DF08(&qword_100E663F0);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_10017225C(v7, v215);
  uint64_t v8 = sub_10017DF08(&qword_100E663F8);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100163F64(v10, v215);
  uint64_t v11 = sub_10017DF08(&qword_100E66400);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_10019DE20(v13, v215);
  uint64_t v14 = sub_10017DF08(&qword_100E66408);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_10011BA64(v16, v215);
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  uint64_t v18 = sub_100109308(active);
  __chkstk_darwin(v18);
  sub_100109314();
  uint64_t v228 = v19;
  uint64_t v20 = sub_10017DF08(&qword_100E66410);
  uint64_t v21 = sub_100109308(v20);
  __chkstk_darwin(v21);
  sub_100109314();
  uint64_t v230 = v22;
  uint64_t v23 = type metadata accessor for ViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v24);
  sub_100109314();
  uint64_t v229 = v25;
  uint64_t v26 = sub_10017DF08(&qword_100E66418);
  uint64_t v27 = sub_100109308(v26);
  __chkstk_darwin(v27);
  sub_100109314();
  uint64_t v234 = v28;
  uint64_t v29 = sub_10017DF08(&qword_100E66420);
  uint64_t v30 = sub_100109308(v29);
  __chkstk_darwin(v30);
  sub_100109314();
  uint64_t v242 = v31;
  uint64_t v32 = sub_10017DF08(&qword_100E66428);
  uint64_t v33 = sub_100109308(v32);
  __chkstk_darwin(v33);
  sub_100164B64(v34, v215);
  uint64_t v35 = sub_10017DF08(&qword_100E66430);
  uint64_t v36 = sub_100109308(v35);
  __chkstk_darwin(v36);
  sub_10017B2B0(v37, v215);
  uint64_t v38 = sub_10017DF08(&qword_100E66438);
  uint64_t v39 = sub_100109308(v38);
  __chkstk_darwin(v39);
  sub_100109314();
  uint64_t v231 = v40;
  uint64_t v41 = sub_10017DF08(&qword_100E66440);
  uint64_t v42 = sub_100109308(v41);
  __chkstk_darwin(v42);
  sub_10011BA80(v43, v215);
  uint64_t v236 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v217 = v44;
  __chkstk_darwin(v45);
  sub_100109314();
  sub_10012B9EC(v46);
  uint64_t v47 = type metadata accessor for WeatherMapOverlayKind();
  sub_100179C0C();
  uint64_t v49 = v48;
  __chkstk_darwin(v50);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v51);
  sub_100128F8C();
  uint64_t v219 = v52;
  uint64_t v53 = type metadata accessor for SavedLocation();
  uint64_t v54 = sub_100109308(v53);
  __chkstk_darwin(v54);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v55);
  sub_100128F8C();
  uint64_t v215 = v56;
  uint64_t v223 = type metadata accessor for Logger();
  sub_100179C0C();
  uint64_t v222 = v57;
  __chkstk_darwin(v58);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v59);
  sub_100128F8C();
  uint64_t v220 = v60;
  uint64_t v61 = sub_10017DF08(qword_100E66490);
  uint64_t v62 = sub_100109308(v61);
  __chkstk_darwin(v62);
  sub_1001626E0();
  uint64_t v65 = v64 - v63;
  uint64_t v66 = sub_10017DF08(&qword_100E65BC0);
  uint64_t v67 = sub_100109308(v66);
  __chkstk_darwin(v67);
  sub_1001626E0();
  uint64_t v70 = v69 - v68;
  uint64_t v225 = type metadata accessor for DisplayMetrics();
  sub_100162E4C();
  __chkstk_darwin(v71);
  sub_1001626E0();
  uint64_t v74 = (uint64_t *)(v73 - v72);
  uint64_t v226 = type metadata accessor for WeatherMapPresentationState(0);
  sub_100162E4C();
  __chkstk_darwin(v75);
  uint64_t v77 = (char *)&v215 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v78);
  uint64_t v80 = (char *)&v215 - v79;
  uint64_t v235 = a4;
  uint64_t v81 = a4 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
  sub_100886FF8(a4 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view + *(int *)(v23 + 40), (uint64_t)v77, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
  sub_1000EAD40((uint64_t)v74);
  uint64_t v221 = v49;
  uint64_t v82 = *(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16);
  v82(v70, v239, v47);
  sub_1001093B0();
  uint64_t v218 = v47;
  _s7Weather24LocationCompositionStateOwst_0(v83, v84, v85, v47);
  uint64_t v86 = type metadata accessor for WeatherMapTrackingState(0);
  sub_100163050(v65, v87, v88, v86);
  if (v238) {
    uint64_t v89 = 3;
  }
  else {
    uint64_t v89 = 5;
  }
  uint64_t v227 = v80;
  sub_100074324(v89, v74, v70, v65, v80);
  sub_100178110(v65, qword_100E66490);
  sub_100178110(v70, &qword_100E65BC0);
  sub_10018D018((uint64_t)v74, (void (*)(void))type metadata accessor for DisplayMetrics);
  sub_10018D018((uint64_t)v77, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
  uint64_t v232 = v23;
  uint64_t v90 = *(int *)(v23 + 36);
  uint64_t v224 = v81;
  sub_100886FF8(v81 + v90, (uint64_t)v74, (void (*)(void))type metadata accessor for DisplayMetrics);
  BOOL v91 = sub_10058BCBC();
  sub_10018D018((uint64_t)v74, (void (*)(void))type metadata accessor for DisplayMetrics);
  if (v91)
  {
    static Logger.automation.getter();
    uint64_t v92 = v237;
    uint64_t v93 = v216;
    sub_100886FF8(v237, v216, (void (*)(void))&type metadata accessor for SavedLocation);
    uint64_t v94 = sub_1001872F4((uint64_t)&v246);
    ((void (*)(uint64_t))v82)(v94);
    uint64_t v95 = Logger.logObject.getter();
    os_log_type_t v96 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v95, v96))
    {
      uint64_t v80 = (char *)swift_slowAlloc();
      uint64_t v239 = swift_slowAlloc();
      uint64_t v244 = v239;
      *(_DWORD *)uint64_t v80 = 136315650;
      SavedLocation.identifier.getter();
      uint64_t v97 = Location.Identifier.name.getter();
      uint64_t v98 = v93;
      uint64_t v93 = v99;
      sub_10012BF98();
      sub_100162F0C();
      v100();
      uint64_t v101 = sub_10016414C(v97, v93, &v244);
      sub_100191248(v101);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10018D018(v98, (void (*)(void))&type metadata accessor for SavedLocation);
      *((_WORD *)v80 + 6) = 2082;
      sub_100886FA8();
      uint64_t v102 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v104 = sub_10016414C(v102, v103, &v244);
      sub_1001C86FC(v104);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10012BF98();
      sub_100162F0C();
      v105();
      *((_WORD *)v80 + 11) = 1026;
      int v243 = v238 & 1;
      sub_10019D2A4();
      _os_log_impl((void *)&_mh_execute_header, v95, v96, "Create new MainState for displaying map in regular/unspecified mode. location=%s, overlayKind=%{public}s, fullscreen=%{BOOL,public}d", (uint8_t *)v80, 0x1Cu);
      swift_arrayDestroy();
      sub_100162EE0();
      sub_100162EE0();

      uint64_t v106 = v236;
      sub_100162F0C();
      v107();
      uint64_t v108 = v234;
      uint64_t v109 = v242;
      uint64_t v110 = v240;
    }
    else
    {
      sub_10018D018(v93, (void (*)(void))&type metadata accessor for SavedLocation);
      sub_1001D2574();
      sub_100162F0C();
      v131();

      sub_100162F0C();
      v132();
      uint64_t v108 = v234;
      uint64_t v109 = v242;
      uint64_t v110 = v240;
      uint64_t v106 = v236;
    }
    uint64_t v133 = type metadata accessor for AppConfigurationState();
    uint64_t v136 = sub_10017E050(v110, v134, v135, v133);
    uint64_t v137 = v231;
    uint64_t v140 = sub_1001630C0(v231, v138, v139, v136);
    uint64_t v143 = sub_10017A5E0(v241, v141, v142, v140);
    uint64_t v144 = v233;
    uint64_t v147 = sub_10017A0E0(v233, v145, v146, v143);
    uint64_t v150 = sub_100163050(v109, v148, v149, v147);
    sub_1001847B0(v150, v151, (void (*)(void))type metadata accessor for ViewState);
    uint64_t v152 = v228;
    uint64_t v153 = v92;
    SavedLocation.identifier.getter();
    sub_1001093B0();
    _s7Weather24LocationCompositionStateOwst_0(v154, v155, v156, v106);
    type metadata accessor for LocationViewerViewState._Storage(0);
    sub_100181044();
    uint64_t v157 = sub_10017AAB0();
    uint64_t v158 = (uint64_t)v230;
    *uint64_t v230 = v157;
    type metadata accessor for ViewState.SecondaryViewState(0);
    sub_1001A6980();
    uint64_t v159 = sub_100180FA0(v158);
    uint64_t v160 = sub_100182138(v159);
    sub_10012B694(v160, v161, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
    sub_10018453C();
    sub_10018A438();
    sub_100178110(v152, &qword_100E663F8);
    sub_100178110(v92, &qword_100E66400);
    sub_100178110((uint64_t)v80, &qword_100E66408);
    sub_100178110(v158, &qword_100E66410);
    sub_10018D018(v93, (void (*)(void))type metadata accessor for ViewState);
    _s7Weather24LocationCompositionStateOwst_0(v108, 0, 1, v232);
    type metadata accessor for ModalViewState(0);
    uint64_t v162 = sub_1002103AC();
  }
  else
  {
    static Logger.automation.getter();
    uint64_t v111 = v237;
    uint64_t v106 = v215;
    sub_100886FF8(v237, v215, (void (*)(void))&type metadata accessor for SavedLocation);
    uint64_t v112 = sub_1001872F4((uint64_t)v245);
    ((void (*)(uint64_t))v82)(v112);
    uint64_t v113 = Logger.logObject.getter();
    os_log_type_t v114 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v113, v114))
    {
      uint64_t v115 = swift_slowAlloc();
      uint64_t v239 = swift_slowAlloc();
      uint64_t v244 = v239;
      *(_DWORD *)uint64_t v115 = 136315650;
      SavedLocation.identifier.getter();
      uint64_t v116 = Location.Identifier.name.getter();
      uint64_t v117 = v106;
      unint64_t v119 = v118;
      sub_10012BF98();
      uint64_t v120 = v236;
      sub_100162F0C();
      v121();
      uint64_t v122 = sub_10016414C(v116, v119, &v244);
      sub_100191248(v122);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10018D018(v117, (void (*)(void))&type metadata accessor for SavedLocation);
      *(_WORD *)(v115 + 12) = 2080;
      sub_100886FA8();
      uint64_t v106 = v219;
      uint64_t v123 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v125 = sub_10016414C(v123, v124, &v244);
      sub_1001C86FC(v125);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10012BF98();
      sub_100162F0C();
      v126();
      *(_WORD *)(v115 + 22) = 1024;
      int v243 = v238 & 1;
      sub_10019D2A4();
      _os_log_impl((void *)&_mh_execute_header, v113, v114, "Create new MainState for displaying map in compact mode. location=%s, overlayKind=%s, fullscreen=%{BOOL}d", (uint8_t *)v115, 0x1Cu);
      swift_arrayDestroy();
      sub_100162EE0();
      sub_100162EE0();

      sub_100162F0C();
      v127();
      uint64_t v108 = v234;
      uint64_t v129 = v241;
      uint64_t v128 = v242;
      uint64_t v130 = v240;
    }
    else
    {
      sub_10018D018(v106, (void (*)(void))&type metadata accessor for SavedLocation);
      sub_10012BF98();
      sub_100162F0C();
      v166();

      sub_100162F0C();
      v167();
      uint64_t v108 = v234;
      uint64_t v129 = v241;
      uint64_t v128 = v242;
      uint64_t v130 = v240;
      uint64_t v120 = v236;
    }
    uint64_t v168 = type metadata accessor for AppConfigurationState();
    uint64_t v171 = sub_10017E050(v130, v169, v170, v168);
    uint64_t v137 = v231;
    uint64_t v174 = sub_1001630C0(v231, v172, v173, v171);
    uint64_t v177 = sub_10017A5E0(v129, v175, v176, v174);
    uint64_t v144 = v233;
    uint64_t v180 = sub_10017A0E0(v233, v178, v179, v177);
    uint64_t v183 = sub_100163050(v128, v181, v182, v180);
    sub_1001847B0(v183, v184, (void (*)(void))type metadata accessor for ViewState);
    uint64_t v185 = v228;
    uint64_t v153 = v111;
    SavedLocation.identifier.getter();
    sub_1001093B0();
    _s7Weather24LocationCompositionStateOwst_0(v186, v187, v188, v120);
    type metadata accessor for LocationViewerViewState._Storage(0);
    sub_100181044();
    uint64_t v189 = sub_10017AAB0();
    uint64_t v190 = (uint64_t)v230;
    *uint64_t v230 = v189;
    type metadata accessor for ViewState.SecondaryViewState(0);
    sub_1001A6980();
    uint64_t v191 = sub_100180FA0(v190);
    uint64_t v192 = sub_100182138(v191);
    sub_10012B694(v192, v193, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
    sub_10018453C();
    sub_10018A438();
    sub_100178110(v185, &qword_100E663F8);
    sub_100178110(v111, &qword_100E66400);
    sub_100178110(v120, &qword_100E66408);
    sub_100178110(v190, &qword_100E66410);
    sub_10018D018(v129, (void (*)(void))type metadata accessor for ViewState);
    _s7Weather24LocationCompositionStateOwst_0(v108, 0, 1, v232);
    type metadata accessor for ModalViewState.MapViewModal(0);
    uint64_t v194 = sub_1002103AC();
    _s7Weather24LocationCompositionStateOwst_0(v194, v195, v196, v197);
    uint64_t v198 = type metadata accessor for ModalViewState(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v162 = v111;
    uint64_t v163 = 0;
    uint64_t v164 = 1;
    uint64_t v165 = v198;
  }
  _s7Weather24LocationCompositionStateOwst_0(v162, v163, v164, v165);
  sub_10019B6A0();
  uint64_t v199 = v242;
  uint64_t v200 = v240;
  uint64_t v201 = v241;
  uint64_t v205 = sub_100163034(0, 3, v240, v137, v241, v202, v203, v204, 0, v144, v242, v108, v153, v207, v208, v209, v210, v211, v212,
           v213,
           v214);
  sub_100178110(v153, &qword_100E663F0);
  sub_100178110(v108, &qword_100E66418);
  sub_100178110(v199, &qword_100E66420);
  sub_100178110(v144, &qword_100E66428);
  sub_100178110(v201, &qword_100E66430);
  sub_100178110(v137, &qword_100E66438);
  sub_100178110(v200, &qword_100E66440);
  sub_10018D018(v106, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
  return v205;
}

unint64_t sub_100886FA8()
{
  unint64_t result = qword_100E921F8;
  if (!qword_100E921F8)
  {
    type metadata accessor for WeatherMapOverlayKind();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E921F8);
  }
  return result;
}

uint64_t sub_100886FF8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

void sub_100887058(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10017DF08(&qword_100E669A8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10020D948(v1 + 24, (uint64_t)v7);
  *uint64_t v5 = swift_getKeyPath();
  sub_10017DF08(&qword_100E65310);
  swift_storeEnumTagMultiPayload();
  swift_retain();
  sub_1002B3274((uint64_t)v5, v7, a1);
}

uint64_t type metadata accessor for ReportWeatherModule()
{
  return self;
}

void sub_100887154()
{
}

void sub_1008871B0()
{
  sub_10016314C();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = sub_10017DF08(&qword_100E9A8C8);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  uint64_t v10 = sub_100163770();
  uint64_t v11 = type metadata accessor for ComparisonCapsuleViewModel.Row(v10);
  sub_100179C0C();
  uint64_t v27 = v12;
  __chkstk_darwin(v13);
  sub_100162EF8();
  uint64_t v29 = v14;
  __chkstk_darwin(v15);
  uint64_t v26 = (uint64_t)&v26 - v16;
  uint64_t v17 = _swiftEmptyArrayStorage;
  uint64_t v28 = v3;
  while (1)
  {
    sub_10017AADC();
    v7();
    if (v0) {
      break;
    }
    if (_s7Weather24LocationCompositionStateOwet_0(v1, 1, v11) == 1)
    {
      sub_1000F3400(v1, &qword_100E9A8C8);
    }
    else
    {
      uint64_t v18 = v26;
      sub_1001D9AE4(v1, v26, type metadata accessor for ComparisonCapsuleViewModel.Row);
      sub_1001D9AE4(v18, v29, type metadata accessor for ComparisonCapsuleViewModel.Row);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v22 = sub_10019F328();
        uint64_t v17 = (void *)sub_1007E9674(v22, v23, v24, v25);
      }
      unint64_t v20 = v17[2];
      unint64_t v19 = v17[3];
      if (v20 >= v19 >> 1) {
        uint64_t v17 = (void *)sub_1007E9674(v19 > 1, v20 + 1, 1, (uint64_t)v17);
      }
      _OWORD v17[2] = v20 + 1;
      sub_1001D9AE4(v29, (uint64_t)v17+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(void *)(v27 + 72) * v20, type metadata accessor for ComparisonCapsuleViewModel.Row);
      uint64_t v3 = v28;
    }
    if (v3 == v5) {
      goto LABEL_15;
    }
    if (__OFADD__(v5++, 1))
    {
      __break(1u);
      return;
    }
  }
  swift_bridgeObjectRelease();
LABEL_15:
  sub_1001894E8();
  sub_100163164();
}

void sub_1008873D8()
{
}

void sub_100887434()
{
  sub_10016314C();
  v38[0] = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v46 = v9;
  uint64_t v11 = v10;
  uint64_t v43 = v12;
  uint64_t v13 = sub_10017DF08(v12);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  uint64_t v15 = sub_100163770();
  uint64_t v16 = v6(v15);
  sub_100179C0C();
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v45 = v18;
  __chkstk_darwin(v19);
  uint64_t v42 = (char *)v38 - v21;
  uint64_t v22 = *(void *)(v8 + 16);
  if (v22)
  {
    uint64_t v23 = v20;
    uint64_t v24 = v4(0);
    sub_100164920(v24);
    uint64_t v26 = v8;
    uint64_t v27 = v8 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
    uint64_t v41 = v23;
    uint64_t v44 = (void (**)(char *))(v23 + 32);
    uint64_t v29 = *(void *)(v28 + 72);
    v38[1] = v26;
    swift_bridgeObjectRetain();
    uint64_t v47 = _swiftEmptyArrayStorage;
    uint64_t v39 = v16;
    uint64_t v40 = v11;
    while (1)
    {
      sub_10017AADC();
      v11();
      if (v0) {
        break;
      }
      if (_s7Weather24LocationCompositionStateOwet_0(v1, 1, v16) == 1)
      {
        sub_1000F3400(v1, v43);
      }
      else
      {
        uint64_t v30 = v29;
        uint64_t v31 = *v44;
        uint64_t v32 = v42;
        (*v44)(v42);
        ((void (*)(uint64_t, char *, uint64_t))v31)(v45, v32, v16);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v36 = sub_100183298();
          uint64_t v47 = (void *)((uint64_t (*)(uint64_t))v38[0])(v36);
        }
        unint64_t v34 = v47[2];
        unint64_t v33 = v47[3];
        uint64_t v35 = v41;
        if (v34 >= v33 >> 1)
        {
          uint64_t v37 = ((uint64_t (*)(BOOL, unint64_t, uint64_t, void *))v38[0])(v33 > 1, v34 + 1, 1, v47);
          uint64_t v35 = v41;
          uint64_t v47 = (void *)v37;
        }
        v47[2] = v34 + 1;
        uint64_t v16 = v39;
        ((void (*)(char *, uint64_t, uint64_t))v31)((char *)v47+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v34, v45, v39);
        uint64_t v11 = v40;
        uint64_t v29 = v30;
      }
      v27 += v29;
      if (!--v22)
      {
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_15:
  sub_100163164();
}

void *sub_100887710(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_10017DF08(&qword_100E7D798);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
  uint64_t v29 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v28 = (uint64_t)&v24 - v14;
  uint64_t v15 = *(void *)(a3 + 16);
  if (!v15) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v16 = *(void *)(type metadata accessor for DayWeather() - 8);
  uint64_t v17 = a3 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  uint64_t v30 = *(void *)(v16 + 72);
  uint64_t v24 = a3;
  swift_bridgeObjectRetain();
  uint64_t v18 = _swiftEmptyArrayStorage;
  uint64_t v26 = v13;
  uint64_t v27 = a2;
  uint64_t v25 = v10;
  while (1)
  {
    a1(v17);
    if (v3) {
      break;
    }
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10) == 1)
    {
      sub_1000F3400((uint64_t)v9, &qword_100E7D798);
    }
    else
    {
      uint64_t v19 = v28;
      sub_1001D9AE4((uint64_t)v9, v28, type metadata accessor for DayPickerViewModel.CalendarDayViewModel);
      sub_1001D9AE4(v19, (uint64_t)v13, type metadata accessor for DayPickerViewModel.CalendarDayViewModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v18 = (void *)sub_1007E9C78(0, v18[2] + 1, 1, (uint64_t)v18);
      }
      unint64_t v21 = v18[2];
      unint64_t v20 = v18[3];
      if (v21 >= v20 >> 1) {
        uint64_t v18 = (void *)sub_1007E9C78(v20 > 1, v21 + 1, 1, (uint64_t)v18);
      }
      v18[2] = v21 + 1;
      uint64_t v22 = (uint64_t)v18
          + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))
          + *(void *)(v29 + 72) * v21;
      uint64_t v13 = v26;
      sub_1001D9AE4((uint64_t)v26, v22, type metadata accessor for DayPickerViewModel.CalendarDayViewModel);
      uint64_t v10 = v25;
    }
    v17 += v30;
    if (!--v15)
    {
      swift_bridgeObjectRelease();
      return v18;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v18;
}

void sub_100887A38()
{
}

void sub_100887A94()
{
  sub_10016314C();
  sub_1001A34E0();
  uint64_t v6 = sub_10017DF08(&qword_100E63770);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  uint64_t v8 = sub_10011BA28();
  uint64_t v9 = type metadata accessor for LocationWeatherDataState(v8);
  sub_100179C0C();
  __chkstk_darwin(v10);
  sub_100162A94();
  __chkstk_darwin(v11);
  sub_100181880(v12, v13, v14, v15, v16, v17, v18, v19, v32);
  if (v3)
  {
    uint64_t v20 = type metadata accessor for Location.Identifier();
    sub_100164920(v20);
    uint64_t v22 = v1 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    uint64_t v36 = *(void *)(v23 + 72);
    swift_bridgeObjectRetain();
    uint64_t v24 = _swiftEmptyArrayStorage;
    uint64_t v34 = v5;
    uint64_t v33 = v9;
    while (1)
    {
      sub_10017AADC();
      v4();
      if (v0) {
        break;
      }
      if (_s7Weather24LocationCompositionStateOwet_0(v2, 1, v9) == 1)
      {
        sub_1000F3400(v2, &qword_100E63770);
      }
      else
      {
        sub_1001D9AE4(v2, v35, type metadata accessor for LocationWeatherDataState);
        sub_1001D9AE4(v35, v5, type metadata accessor for LocationWeatherDataState);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v28 = sub_10019F328();
          uint64_t v24 = (void *)sub_1007E9F8C(v28, v29, v30, v31);
        }
        unint64_t v26 = v24[2];
        unint64_t v25 = v24[3];
        if (v26 >= v25 >> 1) {
          uint64_t v24 = (void *)sub_1007E9F8C(v25 > 1, v26 + 1, 1, (uint64_t)v24);
        }
        sub_100180594();
        uint64_t v5 = v34;
        sub_1001D9AE4(v34, v27, type metadata accessor for LocationWeatherDataState);
        uint64_t v9 = v33;
      }
      v22 += v36;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_15:
  sub_1001894E8();
  sub_100163164();
}

void *sub_100887CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v6 = type metadata accessor for Location();
  sub_100164920(v6);
  uint64_t v8 = a3 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v21 = *(void *)(v9 + 72);
  swift_bridgeObjectRetain();
  uint64_t v10 = _swiftEmptyArrayStorage;
  while (1)
  {
    sub_10017AADC();
    v11();
    if (v3) {
      break;
    }
    if (v23)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        char v15 = sub_100183298();
        sub_1007EA3E8(v15, v16, v17, (uint64_t)v10);
        uint64_t v10 = v18;
      }
      unint64_t v13 = v10[2];
      unint64_t v12 = v10[3];
      if (v13 >= v12 >> 1)
      {
        sub_1007EA3E8(v12 > 1, v13 + 1, 1, (uint64_t)v10);
        uint64_t v10 = v19;
      }
      v10[2] = v13 + 1;
      uint64_t v14 = &v10[5 * v13];
      v14[4] = v22;
      v14[5] = v23;
      v14[6] = v24;
      v14[7] = v25;
      *((unsigned char *)v14 + 64) = v26 & 1;
      *((unsigned char *)v14 + 65) = v27 & 1;
      *((unsigned char *)v14 + 66) = v28 & 1;
      *((unsigned char *)v14 + 67) = v29 & 1;
    }
    v8 += v21;
    if (!--v4)
    {
      swift_bridgeObjectRelease();
      return v10;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100887E90@<X0>(uint64_t a1@<X0>, void (**a2)(uint64_t)@<X8>)
{
  uint64_t v80 = a2;
  uint64_t v88 = type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v79 = v3;
  __chkstk_darwin(v4);
  uint64_t v87 = (char *)v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  char v17 = (char *)v74 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v86 = (char *)v74 - v19;
  __chkstk_darwin(v18);
  uint64_t v83 = v20;
  uint64_t v21 = *(void (**)(void))(v20 + 16);
  uint64_t v23 = (char *)v74 - v22;
  uint64_t v90 = v20 + 16;
  uint64_t v81 = v21;
  sub_100162808();
  v24();
  uint64_t v25 = (int *)type metadata accessor for DayPickerInput();
  uint64_t v76 = v25[5];
  uint64_t v85 = *(void (**)(uint64_t))(a1 + v76);
  if (qword_100E62738 != -1) {
    swift_once();
  }
  char v26 = (void *)qword_100E9CDB0;
  char v27 = (void (*)(uint64_t))(a1 + v25[7]);
  Class isa = TimeZone._bridgeToObjectiveC()().super.isa;
  uint64_t v77 = v26;
  [v26 setTimeZone:isa];

  if (qword_100E62740 != -1) {
    swift_once();
  }
  char v29 = (void *)qword_100E9CDB8;
  uint64_t v89 = v27;
  Class v30 = TimeZone._bridgeToObjectiveC()().super.isa;
  [v29 setTimeZone:v30];

  sub_1001C7278(a1 + v25[6], (uint64_t)v9);
  int v31 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  uint64_t v82 = a1;
  if (v31 == 1)
  {
    sub_1000F3400((uint64_t)v9, (uint64_t *)&unk_100E73CA0);
    uint64_t v32 = v89;
    uint64_t v33 = v83;
  }
  else
  {
    uint64_t v33 = v83;
    v74[0] = *(void *)(v83 + 32);
    v74[1] = v83 + 32;
    ((void (*)(char *, char *, uint64_t))v74[0])(v17, v9, v10);
    uint64_t v32 = v85;
    uint64_t v34 = *((void *)v85 + 2);
    if (v34)
    {
      uint64_t v75 = v29;
      uint64_t v35 = type metadata accessor for DayWeather();
      sub_100164920(v35);
      uint64_t v37 = (char *)v32 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
      uint64_t v38 = v33 + 8;
      uint64_t v40 = *(void *)(v39 + 72);
      swift_bridgeObjectRetain();
      uint64_t v84 = v38 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      while (1)
      {
        DayWeather.date.getter();
        char v41 = static Date.== infix(_:_:)();
        uint64_t v42 = sub_10019D9F0();
        v32(v42);
        if (v41) {
          break;
        }
        v37 += v40;
        if (!--v34)
        {
          swift_bridgeObjectRelease();
          a1 = v82;
          uint64_t v33 = v83;
          char v29 = v75;
          goto LABEL_13;
        }
      }
      uint64_t v54 = (uint64_t)v85;
      swift_bridgeObjectRelease();
      uint64_t v53 = ((uint64_t (*)(char *, char *, uint64_t))v74[0])(v86, v17, v10);
      goto LABEL_22;
    }
    uint64_t v32 = *(void (**)(uint64_t))(v33 + 8);
    a1 = v82;
LABEL_13:
    ((void (*)(char *, uint64_t))v32)(v17, v10);
    uint64_t v32 = v89;
  }
  uint64_t v43 = *(void *)(a1 + v76);
  uint64_t v44 = *(void *)(v43 + 16);
  if (v44)
  {
    uint64_t v75 = v29;
    uint64_t v45 = type metadata accessor for DayWeather();
    sub_100164920(v45);
    uint64_t v47 = v43 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80));
    uint64_t v48 = v33 + 8;
    uint64_t v50 = *(void *)(v49 + 72);
    swift_bridgeObjectRetain();
    uint64_t v84 = v48 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    while (1)
    {
      DayWeather.date.getter();
      char v51 = static Date.== infix(_:_:)();
      uint64_t v52 = sub_10019D9F0();
      v32(v52);
      if (v51) {
        break;
      }
      v47 += v50;
      if (!--v44)
      {
        swift_bridgeObjectRelease();
        uint64_t v33 = v83;
        char v29 = v75;
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRelease();
    sub_100162808();
    uint64_t v53 = v55();
    uint64_t v54 = (uint64_t)v85;
LABEL_22:
    char v29 = v75;
    goto LABEL_23;
  }
LABEL_19:
  static Date.now.getter();
  Date.midnight(timeZone:)();
  uint64_t v32 = *(void (**)(uint64_t))(v33 + 8);
  uint64_t v84 = (v33 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v53 = ((uint64_t (*)(char *, uint64_t))v32)(v14, v10);
  uint64_t v54 = (uint64_t)v85;
LABEL_23:
  __chkstk_darwin(v53);
  uint64_t v78 = v23;
  v74[-4] = v23;
  v74[-3] = v56;
  v74[-2] = v57;
  uint64_t v85 = (void (*)(uint64_t))sub_100887710((void (*)(uint64_t))sub_1008888FC, (uint64_t)&v74[-6], v54);
  uint64_t v58 = v81;
  sub_100162808();
  v58();
  Class v59 = Date._bridgeToObjectiveC()().super.isa;
  id v60 = [v29 stringFromDate:v59];

  uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v63 = v62;

  uint64_t v64 = v79;
  sub_100162808();
  v65();
  uint64_t v66 = (uint64_t)v80;
  *uint64_t v80 = v85;
  uint64_t v67 = (int *)type metadata accessor for DayPickerViewModel(0);
  sub_100162808();
  v58();
  uint64_t v68 = (uint64_t *)(v66 + v67[6]);
  *uint64_t v68 = v61;
  v68[1] = v63;
  swift_bridgeObjectRetain();
  uint64_t v69 = sub_100BB73B4((uint64_t)v14, v61, v63);
  uint64_t v71 = v70;
  swift_bridgeObjectRelease();
  ((void (*)(char *, uint64_t))v32)(v14, v10);
  uint64_t v72 = (uint64_t *)(v66 + v67[7]);
  *uint64_t v72 = v69;
  v72[1] = v71;
  (*(void (**)(uint64_t, char *, uint64_t))(v64 + 32))(v66 + v67[8], v87, v88);
  ((void (*)(char *, uint64_t))v32)(v86, v10);
  ((void (*)(char *, uint64_t))v32)(v78, v10);
  return _s7Weather24LocationCompositionStateOwst_0(v66, 0, 1, (uint64_t)v67);
}

uint64_t sub_100888560@<X0>(void *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  DayWeather.date.getter();
  char v7 = static Date.== infix(_:_:)();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v4 + 8);
  v8(v6, v3);
  if (v7)
  {
    int v9 = 1;
  }
  else
  {
    DayWeather.date.getter();
    char v10 = static Date.> infix(_:_:)();
    v8(v6, v3);
    if (v10) {
      int v9 = 2;
    }
    else {
      int v9 = 0;
    }
  }
  int v26 = v9;
  DayWeather.date.getter();
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  v8(v6, v3);
  id v12 = [a1 stringFromDate:isa];

  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v14;

  sub_100008F8C();
  DayWeather.date.getter();
  type metadata accessor for DayPickerInput();
  uint64_t v15 = static NSNumberFormatter.dayDigits(from:timeZone:)();
  uint64_t v17 = v16;
  v8(v6, v3);
  uint64_t v18 = v27;
  DayWeather.date.getter();
  uint64_t v19 = (int *)type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
  uint64_t v20 = (uint64_t *)(v18 + v19[5]);
  uint64_t v21 = v25;
  *uint64_t v20 = v13;
  v20[1] = v21;
  uint64_t v22 = (uint64_t *)(v18 + v19[6]);
  *uint64_t v22 = v15;
  v22[1] = v17;
  *(unsigned char *)(v18 + v19[7]) = v26;
  return _s7Weather24LocationCompositionStateOwst_0(v18, 0, 1, (uint64_t)v19);
}

void sub_1008887C0()
{
  id v0 = [objc_allocWithZone((Class)NSDateFormatter) init];
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setLocalizedDateFormatFromTemplate:v1];

  qword_100E9CDB0 = (uint64_t)v0;
}

id sub_100888830()
{
  id result = sub_100888850();
  qword_100E9CDB8 = (uint64_t)result;
  return result;
}

id sub_100888850()
{
  id v0 = [objc_allocWithZone((Class)NSDateFormatter) init];
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setLocalizedDateFormatFromTemplate:v1];

  [v0 setFormattingContext:2];
  return v0;
}

uint64_t type metadata accessor for DayPickerViewModelFactory()
{
  return self;
}

uint64_t sub_1008888FC@<X0>(uint64_t a1@<X8>)
{
  return sub_100888560(*(void **)(v1 + 24), a1);
}

uint64_t sub_10088891C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = result;
  uint64_t v4 = *(void *)(result + 16);
  if (v4)
  {
    uint64_t v5 = *(void *)(result + 32);
    uint64_t v6 = *(void *)(result + 40);
    uint64_t v8 = *(void *)(result + 48);
    uint64_t v7 = *(void *)(result + 56);
    double v9 = *(double *)(result + 64);
    uint64_t v10 = *(void *)(result + 72);
    char v11 = *(unsigned char *)(result + 80);
    uint64_t v12 = v4 - 1;
    if (v4 == 1)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id result = swift_retain();
    }
    else
    {
      char v20 = *(unsigned char *)(result + 80);
      uint64_t v19 = a2;
      uint64_t v21 = *(void *)(result + 48);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v13 = 0;
      do
      {
        uint64_t v14 = v2 + v13;
        double v15 = *(double *)(v2 + v13 + 120);
        if (v9 < v15)
        {
          char v20 = *(unsigned char *)(v14 + 136);
          uint64_t v16 = *(void *)(v14 + 128);
          uint64_t v17 = *(void *)(v14 + 112);
          uint64_t v21 = *(void *)(v14 + 104);
          uint64_t v5 = *(void *)(v14 + 88);
          uint64_t v18 = *(void *)(v14 + 96);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v6 = v18;
          uint64_t v7 = v17;
          double v9 = v15;
          uint64_t v10 = v16;
        }
        v13 += 56;
        --v12;
      }
      while (v12);
      id result = swift_bridgeObjectRelease_n();
      uint64_t v8 = v21;
      a2 = v19;
      char v11 = v20;
    }
    LOBYTE(v4) = v11 & 1;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v8 = 0;
    uint64_t v7 = 0;
    uint64_t v10 = 0;
    double v9 = 0.0;
  }
  *(void *)a2 = v2;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v8;
  *(void *)(a2 + 32) = v7;
  *(double *)(a2 + 40) = v9;
  *(void *)(a2 + 48) = v10;
  *(unsigned char *)(a2 + 56) = v4;
  return result;
}

BOOL sub_100888AA8(uint64_t a1, uint64_t a2)
{
  if ((sub_100BDA844(*(void *)a1, *(void *)a2) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  char v10 = *(unsigned char *)(a1 + 56);
  uint64_t v12 = *(void *)(a2 + 8);
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t v14 = *(void *)(a2 + 24);
  uint64_t v13 = *(void *)(a2 + 32);
  uint64_t v16 = *(void *)(a2 + 40);
  uint64_t v15 = *(void *)(a2 + 48);
  char v17 = *(unsigned char *)(a2 + 56);
  if (!v5)
  {
    if (!v11) {
      return 1;
    }
    goto LABEL_7;
  }
  if (!v11)
  {
LABEL_7:
    uint64_t v29 = v4;
    sub_10019F340(v4, v5);
    sub_10017D6F0();
    sub_10033AAA4(v22, v23);
    sub_10033AC04(v29, v5);
    sub_10017D6F0();
    sub_10033AC04(v24, v25);
    return 0;
  }
  v30[0] = v4;
  v30[1] = v5;
  v30[2] = v7;
  v30[3] = v6;
  void v30[4] = v8;
  v30[5] = v9;
  char v31 = v10 & 1;
  v32[0] = v12;
  v32[1] = v11;
  void v32[2] = v14;
  void v32[3] = v13;
  v32[4] = v16;
  v32[5] = v15;
  char v33 = v17 & 1;
  uint64_t v28 = v4;
  sub_10019F340(v4, v5);
  uint64_t v18 = sub_1001881A0();
  sub_10033AAA4(v18, v19);
  char v27 = sub_100888C7C((uint64_t)v30, (uint64_t)v32);
  uint64_t v20 = sub_1001881A0();
  sub_10033AC04(v20, v21);
  sub_10033AC04(v28, v5);
  return (v27 & 1) != 0;
}

BOOL sub_100888C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  if (a1 == a3 && a2 == a4) {
    return a5 == a6;
  }
  char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
  BOOL result = 0;
  if (v9) {
    return a5 == a6;
  }
  return result;
}

uint64_t sub_100888C7C(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = _stringCompareWithSmolCheck(_:_:expecting:)(), v6 = 0, (v5 & 1) != 0))
  {
    double v7 = *(double *)(a1 + 32);
    double v8 = *(double *)(a2 + 32);
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24))
    {
      if (v7 != v8) {
        goto LABEL_16;
      }
    }
    else
    {
      char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
      char v6 = 0;
      if ((v10 & 1) == 0 || v7 != v8) {
        return v6 & 1;
      }
    }
    if (static Color.== infix(_:_:)())
    {
      char v6 = ((*(unsigned char *)(a1 + 48) & 1) == 0) ^ *(unsigned char *)(a2 + 48);
      return v6 & 1;
    }
LABEL_16:
    char v6 = 0;
  }
  return v6 & 1;
}

BOOL sub_100888D44(uint64_t a1, uint64_t a2)
{
  return sub_100888C30(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8), *(double *)(a1 + 16), *(double *)(a2 + 16));
}

uint64_t sub_100888D64()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_100888DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_100888E08(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t sub_100888EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t sub_100888F08(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 49))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100888F48(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)BOOL result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ComparisonBarChartRowViewModel()
{
}

void *sub_100888FA8(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100888FE0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void *sub_100889038(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void type metadata accessor for ComparisonBarChartRowViewModel.LabeledValue()
{
}

uint64_t sub_100889084(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 16);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1008890E0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = (_OWORD *)(a1 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v5;
    uint64_t v6 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v6;
    uint64_t v7 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v7;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 24);
    *uint64_t v4 = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v8;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  }
  return a1;
}

uint64_t sub_100889188(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 8);
  uint64_t v5 = (long long *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16))
  {
    if (v6)
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_retain();
      swift_release();
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    }
    else
    {
      sub_1004CE534(a1 + 8);
      long long v8 = *(_OWORD *)(a2 + 24);
      long long v7 = *(_OWORD *)(a2 + 40);
      long long v9 = *v5;
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *(_OWORD *)(a1 + 24) = v8;
      *(_OWORD *)(a1 + 40) = v7;
      *uint64_t v4 = v9;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    long long v10 = *v5;
    long long v11 = *(_OWORD *)(a2 + 24);
    long long v12 = *(_OWORD *)(a2 + 40);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(_OWORD *)(a1 + 24) = v11;
    *(_OWORD *)(a1 + 40) = v12;
    *uint64_t v4 = v10;
  }
  return a1;
}

uint64_t sub_1008892E8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 16)) {
    goto LABEL_5;
  }
  uint64_t v4 = *(void *)(a2 + 16);
  if (!v4)
  {
    sub_1004CE534(a1 + 8);
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v6;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    return a1;
  }
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t sub_1008893A0(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 57))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1008893E0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ComparisonBarChartViewModel()
{
}

uint64_t sub_100889440(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 0x746361706D6F63;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x72616C75676572;
    }
    else {
      uint64_t v5 = 0x6669636570736E75;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE700000000000000;
    }
    else {
      unint64_t v6 = 0xEB00000000646569;
    }
  }
  else
  {
    unint64_t v6 = 0xE700000000000000;
    uint64_t v5 = 0x746361706D6F63;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 0x72616C75676572;
    }
    else {
      uint64_t v3 = 0x6669636570736E75;
    }
    if (a2 == 1) {
      unint64_t v7 = 0xE700000000000000;
    }
    else {
      unint64_t v7 = 0xEB00000000646569;
    }
  }
  else
  {
    unint64_t v7 = 0xE700000000000000;
  }
  if (v5 == v3 && v6 == v7) {
    sub_10017D70C();
  }
  else {
    char v2 = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10088954C()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    sub_10017D70C();
  }
  else {
    LOBYTE(v0) = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_1008895C4()
{
  sub_1001260E4();
  unint64_t v3 = 0xE700000000000000;
  uint64_t v5 = v4;
  uint64_t v6 = 0x6E776F6E6B6E75;
  switch(v5)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v6 = 0x7469617274726F70;
      break;
    case 2:
      uint64_t v6 = sub_100184574();
      break;
    case 3:
      uint64_t v6 = sub_100214DC4();
      unint64_t v3 = 0xED00007466654C65;
      break;
    case 4:
      uint64_t v6 = sub_100214DC4();
      unint64_t v3 = 0xEE00746867695265;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE700000000000000;
  switch(v1)
  {
    case 1:
      unint64_t v7 = 0xE800000000000000;
      uint64_t v2 = 0x7469617274726F70;
      break;
    case 2:
      sub_1001825E4();
      break;
    case 3:
      sub_10012BA00();
      unint64_t v7 = 0xED00007466654C65;
      break;
    case 4:
      sub_10012BA00();
      unint64_t v7 = 0xEE00746867695265;
      break;
    default:
      break;
  }
  if (v6 == v2 && v3 == v7) {
    sub_10017D70C();
  }
  else {
    char v0 = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

BOOL sub_100889748(int a1, int a2)
{
  return a1 == a2;
}

uint64_t sub_100889754(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0x7972616D697270;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = "isSidebarVisible";
  unint64_t v7 = 0x7972616D697270;
  long long v8 = "mapPresentationState";
  long long v9 = "secondaryOverlay";
  switch(v5)
  {
    case 1:
      unint64_t v7 = 0x7261646E6F636573;
      unint64_t v4 = 0xE900000000000079;
      break;
    case 2:
      long long v10 = "uery";
      goto LABEL_9;
    case 3:
      unint64_t v7 = 0x6572726566657270;
      unint64_t v4 = 0xE900000000000064;
      break;
    case 4:
      unint64_t v4 = 0xE600000000000000;
      unint64_t v7 = 0x686372616573;
      break;
    case 5:
      unint64_t v7 = 0x4D79616C70736964;
      unint64_t v4 = 0xEE00736369727465;
      break;
    case 6:
      unint64_t v7 = 0xD000000000000014;
      unint64_t v4 = 0x8000000100C96290;
      break;
    case 7:
      long long v10 = "mapPresentationState";
LABEL_9:
      unint64_t v4 = (unint64_t)v10 | 0x8000000000000000;
      unint64_t v7 = sub_1001A69A0();
      break;
    default:
      break;
  }
  unint64_t v11 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v3 = 0x7261646E6F636573;
      unint64_t v11 = 0xE900000000000079;
      break;
    case 2:
      long long v12 = v9 - 32;
      goto LABEL_18;
    case 3:
      unint64_t v3 = 0x6572726566657270;
      unint64_t v11 = 0xE900000000000064;
      break;
    case 4:
      unint64_t v11 = 0xE600000000000000;
      unint64_t v3 = 0x686372616573;
      break;
    case 5:
      unint64_t v3 = 0x4D79616C70736964;
      unint64_t v11 = 0xEE00736369727465;
      break;
    case 6:
      unint64_t v3 = 0xD000000000000014;
      unint64_t v11 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    case 7:
      long long v12 = v6 - 32;
LABEL_18:
      unint64_t v11 = (unint64_t)v12 | 0x8000000000000000;
      sub_1001847D0();
      break;
    default:
      break;
  }
  if (v7 == v3 && v4 == v11) {
    sub_10017D70C();
  }
  else {
    char v2 = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1008899B0(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x74736554786676;
  }
  else {
    uint64_t v4 = 0x6E6F697461636F6CLL;
  }
  if (v3) {
    unint64_t v5 = 0xEE00726577656956;
  }
  else {
    unint64_t v5 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v6 = 0x74736554786676;
  }
  else {
    uint64_t v6 = 0x6E6F697461636F6CLL;
  }
  if (a2) {
    unint64_t v7 = 0xE700000000000000;
  }
  else {
    unint64_t v7 = 0xEE00726577656956;
  }
  if (v4 == v6 && v5 == v7) {
    sub_10017D70C();
  }
  else {
    char v2 = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_100889A50(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 1701869940;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x6E6F697461636F6CLL;
    }
    else {
      uint64_t v5 = 0x74736554786676;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xEE00726577656956;
    }
    else {
      unint64_t v6 = 0xE700000000000000;
    }
  }
  else
  {
    unint64_t v6 = 0xE400000000000000;
    uint64_t v5 = 1701869940;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 0x6E6F697461636F6CLL;
    }
    else {
      uint64_t v3 = 0x74736554786676;
    }
    if (a2 == 1) {
      unint64_t v7 = 0xEE00726577656956;
    }
    else {
      unint64_t v7 = 0xE700000000000000;
    }
  }
  else
  {
    unint64_t v7 = 0xE400000000000000;
  }
  if (v5 == v3 && v6 == v7) {
    sub_10017D70C();
  }
  else {
    char v2 = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_100889B54(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x6552686372616573;
  }
  else {
    uint64_t v4 = 1701736302;
  }
  if (v3) {
    unint64_t v5 = 0xE400000000000000;
  }
  else {
    unint64_t v5 = 0xED000073746C7573;
  }
  if (a2) {
    uint64_t v6 = 0x6552686372616573;
  }
  else {
    uint64_t v6 = 1701736302;
  }
  if (a2) {
    unint64_t v7 = 0xED000073746C7573;
  }
  else {
    unint64_t v7 = 0xE400000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_10017D70C();
  }
  else {
    char v2 = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_100889BEC(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 1953720684;
  }
  else {
    uint64_t v2 = 1701869940;
  }
  if (a2) {
    uint64_t v3 = 1953720684;
  }
  else {
    uint64_t v3 = 1701869940;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_100889C5C(uint64_t a1, uint64_t a2)
{
  return sub_100135918(a1, a2, (void (*)(void))&type metadata accessor for DetailChartCondition, &qword_100E9D010, (void (*)(uint64_t))&type metadata accessor for DetailChartCondition);
}

uint64_t sub_100889CA4(uint64_t a1, uint64_t a2)
{
  return sub_100135918(a1, a2, (void (*)(void))&type metadata accessor for Precipitation, &qword_100E6ED08, (void (*)(uint64_t))&type metadata accessor for Precipitation);
}

uint64_t sub_100889CEC(uint64_t a1, uint64_t a2)
{
  return sub_100135918(a1, a2, (void (*)(void))&type metadata accessor for DetailType, &qword_100E9D030, (void (*)(uint64_t))&type metadata accessor for DetailType);
}

uint64_t sub_100889D34(uint64_t a1, uint64_t a2)
{
  return sub_100135918(a1, a2, (void (*)(void))&type metadata accessor for DetailViewOrigin, &qword_100E9D028, (void (*)(uint64_t))&type metadata accessor for DetailViewOrigin);
}

uint64_t sub_100889D9C(uint64_t a1, uint64_t a2)
{
  return sub_10088B908(a1, a2, (uint64_t (*)(void))sub_1004E6B00);
}

uint64_t sub_100889DB4(uint64_t a1, uint64_t a2)
{
  return sub_10088B908(a1, a2, (uint64_t (*)(void))sub_1004E684C);
}

uint64_t sub_100889DCC(uint64_t a1, uint64_t a2)
{
  return sub_100135918(a1, a2, (void (*)(void))&type metadata accessor for UnitConfiguration.Temperature, &qword_100E9D018, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Temperature);
}

uint64_t sub_100889E14(uint64_t a1, uint64_t a2)
{
  return sub_100135918(a1, a2, (void (*)(void))&type metadata accessor for PressureTrend, &qword_100E9D000, (void (*)(uint64_t))&type metadata accessor for PressureTrend);
}

uint64_t sub_100889E5C()
{
  sub_10018AB30();
  char v4 = "authorizedAlways";
  unint64_t v5 = 0x7265746544746F6ELL;
  unint64_t v6 = 0xED000064656E696DLL;
  unint64_t v7 = "authorizedWhenInUse";
  switch(v8)
  {
    case 1:
      unint64_t v5 = 0xD000000000000013;
      unint64_t v6 = 0x8000000100C954E0;
      break;
    case 2:
      unint64_t v6 = 0x8000000100C95500;
      unint64_t v5 = sub_1001A69A0();
      break;
    case 3:
      unint64_t v5 = sub_1001D2588();
      break;
    case 4:
      unint64_t v5 = 0x7463697274736572;
      unint64_t v6 = 0xEA00000000006465;
      break;
    default:
      break;
  }
  switch(v2)
  {
    case 1:
      unint64_t v3 = 0xD000000000000013;
      unint64_t v0 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      break;
    case 2:
      unint64_t v0 = (unint64_t)(v4 - 32) | 0x8000000000000000;
      sub_1001847D0();
      break;
    case 3:
      sub_10019AAD8();
      break;
    case 4:
      unint64_t v3 = 0x7463697274736572;
      unint64_t v0 = 0xEA00000000006465;
      break;
    default:
      break;
  }
  if (v5 == v3 && v6 == v0) {
    sub_1001894F8();
  }
  else {
    char v1 = sub_1001A0F74();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_100889FE0()
{
  unint64_t v1 = 0xEA00000000007974;
  sub_100152460();
  uint64_t v5 = v4;
  uint64_t v6 = 0x696C617551726961;
  unint64_t v7 = 0xEA00000000007974;
  switch(v5)
  {
    case 1:
      uint64_t v6 = sub_1001652FC();
      break;
    case 2:
      uint64_t v6 = 0x74617265706D6574;
      unint64_t v7 = 0xEB00000000657275;
      break;
    case 3:
      uint64_t v6 = sub_10017F5C8();
      break;
    default:
      break;
  }
  switch(v2)
  {
    case 1:
      sub_100182188();
      break;
    case 2:
      uint64_t v3 = 0x74617265706D6574;
      unint64_t v1 = 0xEB00000000657275;
      break;
    case 3:
      sub_100191260();
      break;
    default:
      break;
  }
  if (v6 == v3 && v7 == v1) {
    sub_1001894F8();
  }
  else {
    char v0 = sub_1001A0F74();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_10088A118()
{
  unint64_t v1 = 0xEE00726564616548;
  sub_10017AAE8();
  if (v2)
  {
    sub_100187314();
    if (v6 == 1) {
      uint64_t v9 = v7;
    }
    else {
      uint64_t v9 = 0xD000000000000016;
    }
    if (v6 == 1) {
      unint64_t v10 = v8;
    }
    else {
      unint64_t v10 = (v5 - 32) | 0x8000000000000000;
    }
  }
  else
  {
    uint64_t v9 = sub_10016362C();
    unint64_t v10 = 0xEE00726564616548;
  }
  if (v3)
  {
    sub_100187314();
    sub_100162AD8();
    if (v12 == 1) {
      unint64_t v4 = v13;
    }
    else {
      unint64_t v4 = 0xD000000000000016;
    }
    if (v12 == 1) {
      unint64_t v1 = v14;
    }
    else {
      unint64_t v1 = v11;
    }
  }
  if (v9 == v4 && v10 == v1) {
    sub_1001894F8();
  }
  else {
    char v0 = sub_1001A0F74();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_10088A1EC()
{
  sub_100188BE4();
  switch(v3)
  {
    case 1:
      unint64_t v0 = 0x8000000100C95470;
      sub_1001A69A0();
      break;
    case 2:
      uint64_t v4 = 0x736E6F6974;
      goto LABEL_6;
    case 3:
      sub_10012B6B8();
      break;
    case 4:
      uint64_t v4 = 0x7265746E65;
LABEL_6:
      unint64_t v0 = v4 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
      break;
    default:
      break;
  }
  sub_10019B6B8();
  switch(v8)
  {
    case 1:
      unint64_t v1 = (v7 - 32) | 0x8000000000000000;
      sub_1001847D0();
      break;
    case 2:
      uint64_t v6 = 0x6163696669746F6ELL;
      uint64_t v9 = 0x736E6F6974;
      goto LABEL_12;
    case 3:
      unint64_t v1 = 0xE700000000000000;
      sub_10011C0B0();
      break;
    case 4:
      uint64_t v6 = 0x436C6F72746E6F63;
      uint64_t v9 = 0x7265746E65;
LABEL_12:
      unint64_t v1 = v9 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
      break;
    default:
      break;
  }
  if (v5 == v6 && v0 == v1) {
    sub_10017D70C();
  }
  else {
    char v2 = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10088A37C(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0xEA0000000000736ELL;
  uint64_t v4 = 0x6F697469646E6F63;
  unint64_t v5 = 0xEA0000000000736ELL;
  uint64_t v6 = a1;
  uint64_t v7 = 0x6F697469646E6F63;
  switch(v6)
  {
    case 1:
      unint64_t v5 = 0xE800000000000000;
      uint64_t v7 = 0x79746964696D7568;
      break;
    case 2:
      uint64_t v7 = sub_1001652FC();
      break;
    case 3:
      unint64_t v5 = 0xE800000000000000;
      uint64_t v7 = 0x6572757373657270;
      break;
    case 4:
      unint64_t v5 = 0xE300000000000000;
      uint64_t v7 = 6911605;
      break;
    case 5:
      uint64_t v7 = 0x696C696269736976;
      unint64_t v5 = 0xEA00000000007974;
      break;
    case 6:
      uint64_t v7 = sub_10017F5C8();
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v4 = 0x79746964696D7568;
      break;
    case 2:
      sub_100182188();
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v4 = 0x6572757373657270;
      break;
    case 4:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v4 = 6911605;
      break;
    case 5:
      uint64_t v4 = 0x696C696269736976;
      unint64_t v3 = 0xEA00000000007974;
      break;
    case 6:
      sub_100191260();
      break;
    default:
      break;
  }
  if (v7 == v4 && v5 == v3) {
    sub_1001894F8();
  }
  else {
    char v2 = sub_1001A0F74();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10088A548(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x656369746F6ELL;
  }
  else {
    uint64_t v4 = 0x616D7269666E6F63;
  }
  if (v3) {
    unint64_t v5 = 0xEC0000006E6F6974;
  }
  else {
    unint64_t v5 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v6 = 0x656369746F6ELL;
  }
  else {
    uint64_t v6 = 0x616D7269666E6F63;
  }
  if (a2) {
    unint64_t v7 = 0xE600000000000000;
  }
  else {
    unint64_t v7 = 0xEC0000006E6F6974;
  }
  if (v4 == v6 && v5 == v7) {
    sub_10017D70C();
  }
  else {
    char v2 = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10088A5E0(uint64_t a1, uint64_t a2)
{
  return sub_10088B908(a1, a2, (uint64_t (*)(void))sub_1001DEDB8);
}

uint64_t sub_10088A5F8(uint64_t a1, uint64_t a2)
{
  return sub_10088B908(a1, a2, (uint64_t (*)(void))sub_1003ADD20);
}

BOOL sub_10088A610(char a1, char a2)
{
  return dbl_100C64288[a1] == dbl_100C64288[a2];
}

uint64_t sub_10088A634(uint64_t a1, uint64_t a2)
{
  return sub_100135918(a1, a2, (void (*)(void))&type metadata accessor for ArticlePlacementLocation, &qword_100E9CFF8, (void (*)(uint64_t))&type metadata accessor for ArticlePlacementLocation);
}

BOOL sub_10088A67C(char a1, char a2)
{
  double v2 = 1024.0;
  if (a1) {
    double v3 = 1024.0;
  }
  else {
    double v3 = 0.0;
  }
  if ((a2 & 1) == 0) {
    double v2 = 0.0;
  }
  return v3 == v2;
}

uint64_t sub_10088A6A4(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0xEB0000000079654BLL;
  uint64_t v4 = 0x7765695674736564;
  uint64_t v5 = a1;
  uint64_t v6 = 0x7765695674736564;
  unint64_t v7 = 0xEB0000000079654BLL;
  switch(v5)
  {
    case 1:
      uint64_t v6 = 0x656D614E79746963;
      break;
    case 2:
      uint64_t v6 = sub_10016362C();
      unint64_t v7 = 0xEA00000000004449;
      break;
    case 3:
      unint64_t v7 = 0xE300000000000000;
      uint64_t v6 = 7627116;
      break;
    case 4:
      unint64_t v7 = 0xE400000000000000;
      uint64_t v6 = 1735290732;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      uint64_t v4 = 0x656D614E79746963;
      break;
    case 2:
      sub_10017AAE8();
      unint64_t v3 = 0xEA00000000004449;
      break;
    case 3:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v4 = 7627116;
      break;
    case 4:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v4 = 1735290732;
      break;
    default:
      break;
  }
  if (v6 == v4 && v7 == v3) {
    sub_1001894F8();
  }
  else {
    char v2 = sub_1001A0F74();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10088A820(uint64_t a1, uint64_t a2)
{
  return sub_10088B908(a1, a2, (uint64_t (*)(void))sub_100235F78);
}

uint64_t sub_10088A838(uint64_t a1, uint64_t a2)
{
  return sub_10088B908(a1, a2, (uint64_t (*)(void))sub_1009DAD0C);
}

uint64_t sub_10088A850(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x736C6961746564;
  }
  else {
    uint64_t v4 = 7368564;
  }
  if (v3) {
    unint64_t v5 = 0xE300000000000000;
  }
  else {
    unint64_t v5 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v6 = 0x736C6961746564;
  }
  else {
    uint64_t v6 = 7368564;
  }
  if (a2) {
    unint64_t v7 = 0xE700000000000000;
  }
  else {
    unint64_t v7 = 0xE300000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_10017D70C();
  }
  else {
    char v2 = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10088A8FC(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0xE900000000000065;
  unint64_t v4 = 0x6C62616C69617661;
  int v5 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v6 = 0xD000000000000016;
    }
    else {
      unint64_t v6 = 0x616C696176616E75;
    }
    if (v5 == 1) {
      unint64_t v7 = 0x8000000100C960C0;
    }
    else {
      unint64_t v7 = 0xEB00000000656C62;
    }
  }
  else
  {
    unint64_t v6 = 0x6C62616C69617661;
    unint64_t v7 = 0xE900000000000065;
  }
  if (a2)
  {
    sub_100162AD8();
    if (v9 == 1) {
      unint64_t v4 = 0xD000000000000016;
    }
    else {
      unint64_t v4 = 0x616C696176616E75;
    }
    if (v9 == 1) {
      unint64_t v3 = v8;
    }
    else {
      unint64_t v3 = 0xEB00000000656C62;
    }
  }
  if (v6 == v4 && v7 == v3) {
    sub_1001894F8();
  }
  else {
    char v2 = sub_1001A0F74();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10088AA08(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0xEA0000000000646ELL;
  uint64_t v4 = 0x756F72676B636162;
  int v5 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v6 = 0x756F726765726F66;
    }
    else {
      uint64_t v6 = 0x6E6968636E75616CLL;
    }
    if (v5 == 1) {
      unint64_t v7 = 0xEA0000000000646ELL;
    }
    else {
      unint64_t v7 = 0xE900000000000067;
    }
  }
  else
  {
    uint64_t v6 = 0x756F72676B636162;
    unint64_t v7 = 0xEA0000000000646ELL;
  }
  if (a2)
  {
    uint64_t v4 = a2 == 1 ? 0x756F726765726F66 : 0x6E6968636E75616CLL;
    if (a2 != 1) {
      unint64_t v3 = 0xE900000000000067;
    }
  }
  if (v6 == v4 && v7 == v3) {
    sub_1001894F8();
  }
  else {
    char v2 = sub_1001A0F74();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10088AB08()
{
  sub_100188BE4();
  switch(v3)
  {
    case 1:
      unint64_t v0 = 0xE800000000000000;
      break;
    case 2:
      unint64_t v0 = 0xE500000000000000;
      break;
    case 3:
      unint64_t v0 = 0xE700000000000000;
      break;
    default:
      break;
  }
  sub_10019B6B8();
  switch(v6)
  {
    case 1:
      unint64_t v1 = 0xE800000000000000;
      uint64_t v5 = 0x72616C756C6C6563;
      break;
    case 2:
      unint64_t v1 = 0xE500000000000000;
      uint64_t v5 = 0x726568746FLL;
      break;
    case 3:
      unint64_t v1 = 0xE700000000000000;
      sub_1001260E4();
      break;
    default:
      break;
  }
  if (v4 == v5 && v0 == v1) {
    sub_10017D70C();
  }
  else {
    char v2 = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

BOOL sub_10088AC48(char a1, char a2)
{
  return dbl_100C642A0[a1] == dbl_100C642A0[a2];
}

uint64_t sub_10088AC6C(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x746E657261707061;
  }
  else {
    uint64_t v4 = 0x6C6175746361;
  }
  if (v3) {
    unint64_t v5 = 0xE600000000000000;
  }
  else {
    unint64_t v5 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v6 = 0x746E657261707061;
  }
  else {
    uint64_t v6 = 0x6C6175746361;
  }
  if (a2) {
    unint64_t v7 = 0xE800000000000000;
  }
  else {
    unint64_t v7 = 0xE600000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_10017D70C();
  }
  else {
    char v2 = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10088ACFC(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0x726F727265;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = a1;
  unint64_t v6 = 0x726F727265;
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0xE700000000000000;
      unint64_t v6 = 0x676E6964616F6CLL;
      break;
    case 2:
      unint64_t v4 = 0xE700000000000000;
      unint64_t v6 = 0x73746C75736572;
      break;
    case 3:
      unint64_t v6 = 0x7779654B6F72657ALL;
      unint64_t v4 = 0xEB0000000064726FLL;
      break;
    case 4:
      unint64_t v4 = 0x8000000100C959E0;
      unint64_t v6 = 0xD000000000000011;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE700000000000000;
      unint64_t v3 = 0x676E6964616F6CLL;
      break;
    case 2:
      unint64_t v7 = 0xE700000000000000;
      unint64_t v3 = 0x73746C75736572;
      break;
    case 3:
      unint64_t v3 = 0x7779654B6F72657ALL;
      unint64_t v7 = 0xEB0000000064726FLL;
      break;
    case 4:
      unint64_t v7 = 0x8000000100C959E0;
      unint64_t v3 = 0xD000000000000011;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v7) {
    sub_10017D70C();
  }
  else {
    char v2 = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10088AEA8()
{
  sub_100188BE4();
  switch(v3)
  {
    case 1:
      unint64_t v0 = 0xE500000000000000;
      break;
    case 2:
      sub_10016362C();
      unint64_t v0 = 0xE900000000000073;
      break;
    case 3:
      unint64_t v0 = 0xE500000000000000;
      break;
    default:
      break;
  }
  sub_10019B6B8();
  switch(v6)
  {
    case 1:
      unint64_t v1 = 0xE500000000000000;
      uint64_t v5 = 0x726F727265;
      break;
    case 2:
      sub_10017AAE8();
      unint64_t v1 = 0xE900000000000073;
      break;
    case 3:
      unint64_t v1 = 0xE500000000000000;
      uint64_t v5 = 0x7972657571;
      break;
    default:
      break;
  }
  if (v4 == v5 && v0 == v1) {
    sub_10017D70C();
  }
  else {
    char v2 = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10088AFDC()
{
  sub_10017AAE8();
  uint64_t v4 = v3;
  uint64_t v5 = 0x6E6F697461636F6CLL;
  switch(v4)
  {
    case 1:
      uint64_t v5 = sub_100184574();
      break;
    case 2:
      uint64_t v5 = sub_1001832A8();
      break;
    case 3:
      uint64_t v5 = sub_1001A190C();
      break;
    default:
      break;
  }
  switch(v1)
  {
    case 1:
      sub_1001825E4();
      break;
    case 2:
      sub_100184C78();
      break;
    case 3:
      sub_1001A34F4();
      break;
    default:
      break;
  }
  if (v5 == v2) {
    sub_10017D70C();
  }
  else {
    char v0 = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_10088B0E8()
{
  sub_100188BE4();
  switch(v3)
  {
    case 1:
      unint64_t v0 = 0xE800000000000000;
      sub_10016362C();
      break;
    case 2:
      sub_1001832A8();
      break;
    case 3:
      sub_1001A190C();
      break;
    case 5:
      sub_100184574();
      break;
    default:
      break;
  }
  sub_10019B6B8();
  switch(v6)
  {
    case 1:
      unint64_t v1 = 0xE800000000000000;
      sub_10017AAE8();
      break;
    case 2:
      sub_100184C78();
      break;
    case 3:
      sub_1001A34F4();
      break;
    case 4:
      uint64_t v5 = 1701667182;
      break;
    case 5:
      sub_1001825E4();
      break;
    default:
      break;
  }
  if (v4 == v5 && v0 == v1) {
    sub_10017D70C();
  }
  else {
    char v2 = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10088B228(uint64_t a1, uint64_t a2)
{
  return sub_10088B908(a1, a2, (uint64_t (*)(void))sub_1005A0EEC);
}

uint64_t sub_10088B240(uint64_t a1, uint64_t a2)
{
  return sub_100135918(a1, a2, (void (*)(void))&type metadata accessor for WeatherCondition, &qword_100E9D008, (void (*)(uint64_t))&type metadata accessor for WeatherCondition);
}

uint64_t sub_10088B288(char a1, char a2)
{
  if (a1) {
    unint64_t v3 = 0xEF77656976657250;
  }
  else {
    unint64_t v3 = 0xEE00726577656956;
  }
  if (a2) {
    unint64_t v4 = 0xEF77656976657250;
  }
  else {
    unint64_t v4 = 0xEE00726577656956;
  }
  if (v3 == v4)
  {
    sub_10017D70C();
  }
  else
  {
    sub_10016362C();
    sub_10017AAE8();
    char v2 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10088B31C(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0x656C746974;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = "naturalLanguageQuery";
  uint64_t v7 = 0x656C746974;
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0xE800000000000000;
      uint64_t v7 = 0x656C746974627573;
      break;
    case 2:
      uint64_t v7 = 0x5474756F6C6C6163;
      unint64_t v4 = 0xEC000000656C7469;
      break;
    case 3:
      unint64_t v4 = 0x8000000100C96220;
      uint64_t v7 = 0xD000000000000014;
      break;
    case 4:
      unint64_t v4 = 0xE800000000000000;
      uint64_t v7 = sub_10016362C();
      break;
    case 5:
      uint64_t v7 = sub_1001A190C();
      break;
    default:
      break;
  }
  unint64_t v8 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v8 = 0xE800000000000000;
      unint64_t v3 = 0x656C746974627573;
      break;
    case 2:
      unint64_t v3 = 0x5474756F6C6C6163;
      unint64_t v8 = 0xEC000000656C7469;
      break;
    case 3:
      unint64_t v8 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      unint64_t v3 = 0xD000000000000014;
      break;
    case 4:
      unint64_t v8 = 0xE800000000000000;
      sub_10017AAE8();
      break;
    case 5:
      sub_1001A34F4();
      break;
    default:
      break;
  }
  if (v7 == v3 && v4 == v8) {
    sub_10017D70C();
  }
  else {
    char v2 = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10088B4C8()
{
  sub_100188BE4();
  switch(v3)
  {
    case 1:
      sub_10016362C();
      unint64_t v0 = 0xEF77656976657250;
      break;
    case 2:
      unint64_t v0 = 0x8000000100C96130;
      break;
    case 3:
      unint64_t v4 = "sLike";
      goto LABEL_9;
    case 4:
      unint64_t v0 = 0xED00007265687461;
      break;
    case 5:
      unint64_t v0 = 0xE300000000000000;
      break;
    case 6:
      sub_10016362C();
      unint64_t v0 = 0xEE006C6961746544;
      break;
    case 7:
      unint64_t v4 = "iew";
LABEL_9:
      unint64_t v0 = (unint64_t)v4 | 0x8000000000000000;
      break;
    default:
      break;
  }
  sub_10019B6B8();
  switch(v8)
  {
    case 1:
      sub_10017AAE8();
      unint64_t v1 = 0xEF77656976657250;
      break;
    case 2:
      unint64_t v6 = 0xD000000000000014;
      unint64_t v1 = (v7 - 32) | 0x8000000000000000;
      break;
    case 3:
    case 7:
      sub_1001825E4();
      break;
    case 4:
      unint64_t v6 = 0x655774726F706572;
      unint64_t v1 = 0xED00007265687461;
      break;
    case 5:
      unint64_t v1 = 0xE300000000000000;
      unint64_t v6 = 7364973;
      break;
    case 6:
      sub_10017AAE8();
      unint64_t v1 = 0xEE006C6961746544;
      break;
    default:
      break;
  }
  if (v5 == v6 && v0 == v1) {
    sub_10017D70C();
  }
  else {
    char v2 = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10088B6EC(uint64_t a1, uint64_t a2)
{
  return sub_10088B908(a1, a2, (uint64_t (*)(void))sub_10094865C);
}

uint64_t sub_10088B704(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0xD00000000000002ALL;
  unint64_t v4 = 0x8000000100C953F0;
  int v5 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v6 = 0xD00000000000001FLL;
    }
    else {
      unint64_t v6 = 0xD00000000000001ELL;
    }
    if (v5 == 1) {
      unint64_t v7 = 0x8000000100C95420;
    }
    else {
      unint64_t v7 = 0x8000000100C95440;
    }
  }
  else
  {
    unint64_t v6 = 0xD00000000000002ALL;
    unint64_t v7 = 0x8000000100C953F0;
  }
  if (a2)
  {
    sub_1001887D4();
    if (v8) {
      unint64_t v3 = v9 + 1;
    }
    else {
      unint64_t v3 = v9;
    }
    if (v8) {
      unint64_t v4 = v11;
    }
    else {
      unint64_t v4 = v10;
    }
  }
  if (v6 == v3 && v7 == v4) {
    sub_1001894F8();
  }
  else {
    char v2 = sub_1001A0F74();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10088B7C8(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x656E696C66666FLL;
  }
  else {
    uint64_t v4 = 0x6C62616863616572;
  }
  if (v3) {
    unint64_t v5 = 0xE900000000000065;
  }
  else {
    unint64_t v5 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v6 = 0x656E696C66666FLL;
  }
  else {
    uint64_t v6 = 0x6C62616863616572;
  }
  if (a2) {
    unint64_t v7 = 0xE700000000000000;
  }
  else {
    unint64_t v7 = 0xE900000000000065;
  }
  if (v4 == v6 && v5 == v7) {
    sub_10017D70C();
  }
  else {
    char v2 = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10088B860(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x6361667265746E69;
  }
  else {
    uint64_t v4 = 1701869940;
  }
  if (v3) {
    unint64_t v5 = 0xE400000000000000;
  }
  else {
    unint64_t v5 = 0xE900000000000065;
  }
  if (a2) {
    uint64_t v6 = 0x6361667265746E69;
  }
  else {
    uint64_t v6 = 1701869940;
  }
  if (a2) {
    unint64_t v7 = 0xE900000000000065;
  }
  else {
    unint64_t v7 = 0xE400000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_10017D70C();
  }
  else {
    char v2 = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10088B8F0(uint64_t a1, uint64_t a2)
{
  return sub_10088B908(a1, a2, (uint64_t (*)(void))DetailKind.rawValue.getter);
}

uint64_t sub_10088B908(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3();
  uint64_t v7 = v6;
  if (v5 == ((uint64_t (*)(uint64_t))a3)(a2) && v7 == v8) {
    sub_10017D70C();
  }
  else {
    LOBYTE(v5) = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_10088B98C(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x30327265746E6977;
  }
  else {
    uint64_t v4 = 0x343230326C6C6166;
  }
  if (v3) {
    unint64_t v5 = 0xE800000000000000;
  }
  else {
    unint64_t v5 = 0xEA00000000003432;
  }
  if (a2) {
    uint64_t v6 = 0x30327265746E6977;
  }
  else {
    uint64_t v6 = 0x343230326C6C6166;
  }
  if (a2) {
    unint64_t v7 = 0xEA00000000003432;
  }
  else {
    unint64_t v7 = 0xE800000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_10017D70C();
  }
  else {
    char v2 = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10088BA24()
{
  unint64_t v1 = 0xED00007473616365;
  sub_1001C8710();
  uint64_t v5 = v4;
  uint64_t v6 = 0x726F46796C696164;
  unint64_t v7 = 0xED00007473616365;
  switch(v5)
  {
    case 1:
      uint64_t v6 = sub_1002103C4();
      unint64_t v7 = 0xEA00000000007974;
      break;
    case 2:
      unint64_t v7 = 0xE300000000000000;
      uint64_t v6 = 7364973;
      break;
    case 3:
      uint64_t v6 = sub_10018A45C();
      break;
    case 4:
      uint64_t v6 = sub_1001D1628();
      break;
    case 5:
      uint64_t v6 = sub_10017F5C8();
      break;
    default:
      break;
  }
  switch(v2)
  {
    case 1:
      sub_100152460();
      unint64_t v1 = 0xEA00000000007974;
      break;
    case 2:
      unint64_t v1 = 0xE300000000000000;
      uint64_t v3 = 7364973;
      break;
    case 3:
      unint64_t v1 = 0xE700000000000000;
      uint64_t v3 = 0x70614D646E6977;
      break;
    case 4:
      unint64_t v1 = 0xE700000000000000;
      uint64_t v3 = 0x7865646E497675;
      break;
    case 5:
      sub_100191260();
      break;
    default:
      break;
  }
  if (v6 == v3 && v7 == v1) {
    sub_1001894F8();
  }
  else {
    char v0 = sub_1001A0F74();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_10088BBAC()
{
  sub_10011C0B0();
  int v5 = v2;
  if (v2)
  {
    if (v2 == 1) {
      uint64_t v6 = 0xD000000000000011;
    }
    else {
      uint64_t v6 = 0x6974736974617473;
    }
    if (v5 == 1) {
      unint64_t v0 = 0x8000000100C95F00;
    }
    else {
      unint64_t v0 = 0xEA00000000007363;
    }
  }
  else
  {
    uint64_t v6 = sub_10012B6B8();
  }
  if (v3)
  {
    sub_100162AD8();
    if (v8 == 1) {
      unint64_t v4 = 0xD000000000000011;
    }
    else {
      unint64_t v4 = 0x6974736974617473;
    }
    if (v8 == 1) {
      unint64_t v9 = v7;
    }
    else {
      unint64_t v9 = 0xEA00000000007363;
    }
  }
  else
  {
    unint64_t v9 = 0xE700000000000000;
  }
  if (v6 == v4 && v0 == v9) {
    sub_10017D70C();
  }
  else {
    char v1 = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_10088BC90(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x6567617373656DLL;
  }
  else {
    uint64_t v2 = 0x746E65746E6F63;
  }
  if (a2) {
    uint64_t v3 = 0x6567617373656DLL;
  }
  else {
    uint64_t v3 = 0x746E65746E6F63;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_10088BD10(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 1701869940;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD00000000000001DLL;
    }
    else {
      unint64_t v5 = 0xD000000000000015;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x8000000100C95A60;
    }
    else {
      unint64_t v6 = 0x8000000100C95A80;
    }
  }
  else
  {
    unint64_t v6 = 0xE400000000000000;
    unint64_t v5 = 1701869940;
  }
  if (a2)
  {
    sub_1001887D4();
    if (v7) {
      uint64_t v3 = v11;
    }
    else {
      uint64_t v3 = v8;
    }
    if (v7) {
      unint64_t v12 = v10;
    }
    else {
      unint64_t v12 = v9;
    }
  }
  else
  {
    unint64_t v12 = 0xE400000000000000;
  }
  if (v5 == v3 && v6 == v12) {
    sub_10017D70C();
  }
  else {
    char v2 = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10088BDDC()
{
  sub_100188BE4();
  switch(v3)
  {
    case 1:
    case 3:
      unint64_t v0 = 0xE90000000000006ELL;
      break;
    case 2:
      sub_10017F170();
      unint64_t v0 = 0xEA00000000006E69;
      break;
    case 4:
    case 6:
      unint64_t v0 = 0xEA00000000007465;
      break;
    case 5:
      sub_10017F170();
      unint64_t v0 = 0xEB00000000746565;
      break;
    case 7:
    case 9:
      unint64_t v0 = 0xE900000000000077;
      break;
    case 8:
      sub_10017F170();
      unint64_t v0 = 0xEA0000000000776FLL;
      break;
    default:
      break;
  }
  sub_10019B6B8();
  switch(v6)
  {
    case 1:
      uint64_t v7 = 0x52746867696CLL;
      goto LABEL_12;
    case 2:
      sub_10018C5A0();
      uint64_t v5 = v8 & 0xFFFFFFFFFFFFLL | 0x6152000000000000;
      unint64_t v1 = 0xEA00000000006E69;
      break;
    case 3:
      uint64_t v7 = 0x527976616568;
LABEL_12:
      uint64_t v5 = v7 & 0xFFFFFFFFFFFFLL | 0x6961000000000000;
      unint64_t v1 = 0xE90000000000006ELL;
      break;
    case 4:
      uint64_t v9 = 0x53746867696CLL;
      goto LABEL_16;
    case 5:
      sub_10018C5A0();
      uint64_t v5 = v10 & 0xFFFFFFFFFFFFLL | 0x6C53000000000000;
      unint64_t v1 = 0xEB00000000746565;
      break;
    case 6:
      uint64_t v9 = 0x537976616568;
LABEL_16:
      uint64_t v5 = v9 & 0xFFFFFFFFFFFFLL | 0x656C000000000000;
      unint64_t v1 = 0xEA00000000007465;
      break;
    case 7:
      uint64_t v11 = 0x53746867696CLL;
      goto LABEL_20;
    case 8:
      sub_10018C5A0();
      uint64_t v5 = v12 & 0xFFFFFFFFFFFFLL | 0x6E53000000000000;
      unint64_t v1 = 0xEA0000000000776FLL;
      break;
    case 9:
      uint64_t v11 = 0x537976616568;
LABEL_20:
      uint64_t v5 = v11 & 0xFFFFFFFFFFFFLL | 0x6F6E000000000000;
      unint64_t v1 = 0xE900000000000077;
      break;
    default:
      break;
  }
  if (v4 == v5 && v0 == v1) {
    sub_10017D70C();
  }
  else {
    char v2 = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10088C078(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 0x72656D726177;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x616365726F467361;
    }
    else {
      uint64_t v5 = 0x7265646C6F63;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xEA00000000007473;
    }
    else {
      unint64_t v6 = 0xE600000000000000;
    }
  }
  else
  {
    unint64_t v6 = 0xE600000000000000;
    uint64_t v5 = 0x72656D726177;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 0x616365726F467361;
    }
    else {
      uint64_t v3 = 0x7265646C6F63;
    }
    if (a2 == 1) {
      unint64_t v7 = 0xEA00000000007473;
    }
    else {
      unint64_t v7 = 0xE600000000000000;
    }
  }
  else
  {
    unint64_t v7 = 0xE600000000000000;
  }
  if (v5 == v3 && v6 == v7) {
    sub_10017D70C();
  }
  else {
    char v2 = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10088C16C()
{
  sub_1001847D0();
  unint64_t v2 = (v1 - 32) | 0x8000000000000000;
  if (v3)
  {
    sub_10019DF94();
    if (v7 == 1) {
      unint64_t v10 = v8;
    }
    else {
      unint64_t v10 = v5;
    }
    if (v7 == 1) {
      unint64_t v11 = v9;
    }
    else {
      unint64_t v11 = (v6 - 32) | 0x8000000000000000;
    }
  }
  else
  {
    unint64_t v10 = sub_1001A69A0();
    unint64_t v11 = v2;
  }
  if (v4)
  {
    sub_10019DF94();
    sub_100162AD8();
    if (v15 == 1)
    {
      unint64_t v5 = v13;
      unint64_t v2 = v14;
    }
    else
    {
      unint64_t v2 = v12;
    }
  }
  if (v10 == v5 && v11 == v2) {
    sub_1001894F8();
  }
  else {
    char v0 = sub_1001A0F74();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_10088C224(char a1, char a2)
{
  unint64_t v3 = 0xD000000000000012;
  unint64_t v4 = 0x8000000100C95E30;
  if (a1)
  {
    sub_100164B80();
    if (v7 == 1) {
      unint64_t v10 = v8;
    }
    else {
      unint64_t v10 = v5;
    }
    if (v7 == 1) {
      unint64_t v11 = v9;
    }
    else {
      unint64_t v11 = (v6 - 32) | 0x8000000000000000;
    }
  }
  else
  {
    unint64_t v10 = 0xD000000000000012;
    unint64_t v11 = 0x8000000100C95E30;
  }
  if (a2)
  {
    sub_100164B80();
    unint64_t v17 = (v16 - 32) | 0x8000000000000000;
    if (v13 == 1) {
      unint64_t v3 = v14;
    }
    else {
      unint64_t v3 = v12;
    }
    if (v13 == 1) {
      unint64_t v4 = v15;
    }
    else {
      unint64_t v4 = v17;
    }
  }
  if (v10 == v3 && v11 == v4) {
    sub_1001894F8();
  }
  else {
    char v2 = sub_1001A0F74();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10088C2E8(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0x746E617361656C70;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = a1;
  unint64_t v6 = 0x746E617361656C70;
  switch(v5)
  {
    case 1:
      unint64_t v6 = 0x617361656C706E75;
      unint64_t v4 = 0xEA0000000000746ELL;
      break;
    case 2:
      unint64_t v4 = 0xE300000000000000;
      unint64_t v6 = 7630696;
      break;
    case 3:
      unint64_t v4 = 0xE600000000000000;
      unint64_t v6 = 0x796C6C696863;
      break;
    case 4:
      unint64_t v4 = 0xE500000000000000;
      uint64_t v7 = 1734833517;
      goto LABEL_8;
    case 5:
      unint64_t v4 = 0xE300000000000000;
      unint64_t v6 = 7959140;
      break;
    case 6:
      unint64_t v4 = 0xE500000000000000;
      uint64_t v7 = 1684957559;
LABEL_8:
      unint64_t v6 = v7 & 0xFFFF0000FFFFFFFFLL | 0x7900000000;
      break;
    case 7:
      unint64_t v4 = 0xE400000000000000;
      unint64_t v6 = 1835819363;
      break;
    default:
      break;
  }
  unint64_t v8 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v3 = 0x617361656C706E75;
      unint64_t v8 = 0xEA0000000000746ELL;
      break;
    case 2:
      unint64_t v8 = 0xE300000000000000;
      unint64_t v3 = 7630696;
      break;
    case 3:
      unint64_t v8 = 0xE600000000000000;
      unint64_t v3 = 0x796C6C696863;
      break;
    case 4:
      unint64_t v8 = 0xE500000000000000;
      uint64_t v9 = 1734833517;
      goto LABEL_17;
    case 5:
      unint64_t v8 = 0xE300000000000000;
      unint64_t v3 = 7959140;
      break;
    case 6:
      unint64_t v8 = 0xE500000000000000;
      uint64_t v9 = 1684957559;
LABEL_17:
      unint64_t v3 = v9 & 0xFFFF0000FFFFFFFFLL | 0x7900000000;
      break;
    case 7:
      unint64_t v8 = 0xE400000000000000;
      unint64_t v3 = 1835819363;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v8) {
    sub_10017D70C();
  }
  else {
    char v2 = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10088C4EC(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 0x73776F626E696172;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = 0x73776F626E696172;
  switch(v5)
  {
    case 1:
      uint64_t v6 = 0x6E696E746867696CLL;
      unint64_t v4 = 0xE900000000000067;
      break;
    case 2:
      unint64_t v4 = 0xE400000000000000;
      uint64_t v6 = 1818845544;
      break;
    case 3:
      unint64_t v4 = 0xE500000000000000;
      uint64_t v6 = 0x656B6F6D73;
      break;
    case 4:
      unint64_t v4 = 0xE300000000000000;
      uint64_t v6 = 6778726;
      break;
    case 5:
      unint64_t v4 = 0xE400000000000000;
      uint64_t v6 = 1702519144;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      uint64_t v3 = 0x6E696E746867696CLL;
      unint64_t v7 = 0xE900000000000067;
      break;
    case 2:
      unint64_t v7 = 0xE400000000000000;
      uint64_t v3 = 1818845544;
      break;
    case 3:
      unint64_t v7 = 0xE500000000000000;
      uint64_t v3 = 0x656B6F6D73;
      break;
    case 4:
      unint64_t v7 = 0xE300000000000000;
      uint64_t v3 = 6778726;
      break;
    case 5:
      unint64_t v7 = 0xE400000000000000;
      uint64_t v3 = 1702519144;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v7) {
    sub_10017D70C();
  }
  else {
    char v2 = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10088C698()
{
  sub_100188BE4();
  switch(v3)
  {
    case 1:
      unint64_t v0 = 0xE600000000000000;
      break;
    case 2:
      unint64_t v0 = 0xE600000000000000;
      break;
    case 3:
      unint64_t v0 = 0xE500000000000000;
      break;
    default:
      break;
  }
  sub_10019B6B8();
  switch(v6)
  {
    case 1:
      unint64_t v1 = 0xE600000000000000;
      uint64_t v7 = 1953653104;
      goto LABEL_9;
    case 2:
      unint64_t v1 = 0xE600000000000000;
      uint64_t v7 = 1953722221;
LABEL_9:
      unint64_t v5 = v7 & 0xFFFF0000FFFFFFFFLL | 0x796C00000000;
      break;
    case 3:
      unint64_t v1 = 0xE500000000000000;
      unint64_t v5 = 0x796C6C7566;
      break;
    default:
      break;
  }
  if (v4 == v5 && v0 == v1) {
    sub_10017D70C();
  }
  else {
    char v2 = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10088C7CC(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 0x6C6C616D5378;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = 0x6C6C616D5378;
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0xE500000000000000;
      uint64_t v6 = 0x6C6C616D73;
      break;
    case 2:
      uint64_t v6 = sub_10017F170();
      break;
    case 3:
      unint64_t v4 = 0xE500000000000000;
      uint64_t v6 = 0x656772616CLL;
      break;
    case 4:
      uint64_t v6 = 0x656772614C78;
      break;
    case 5:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v6 = 0x656772614C7878;
      break;
    case 6:
      unint64_t v4 = 0xE800000000000000;
      uint64_t v6 = 0x656772614C787878;
      break;
    case 7:
      uint64_t v6 = sub_1001D1EE0();
      unint64_t v7 = 0xE600317900000000;
      goto LABEL_13;
    case 8:
      uint64_t v6 = sub_1001D1EE0();
      unint64_t v7 = 0xE600327900000000;
      goto LABEL_13;
    case 9:
      uint64_t v6 = sub_1001D1EE0();
      unint64_t v7 = 0xE600337900000000;
      goto LABEL_13;
    case 10:
      uint64_t v6 = sub_1001D1EE0();
      unint64_t v7 = 0xE600347900000000;
      goto LABEL_13;
    case 11:
      uint64_t v6 = sub_1001D1EE0();
      unint64_t v7 = 0xE600357900000000;
LABEL_13:
      unint64_t v4 = v7 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
      break;
    default:
      break;
  }
  unint64_t v8 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v8 = 0xE500000000000000;
      uint64_t v3 = 0x6C6C616D73;
      break;
    case 2:
      sub_10018C5A0();
      break;
    case 3:
      unint64_t v8 = 0xE500000000000000;
      uint64_t v3 = 0x656772616CLL;
      break;
    case 4:
      uint64_t v3 = 0x656772614C78;
      break;
    case 5:
      unint64_t v8 = 0xE700000000000000;
      uint64_t v3 = 0x656772614C7878;
      break;
    case 6:
      unint64_t v8 = 0xE800000000000000;
      uint64_t v3 = 0x656772614C787878;
      break;
    case 7:
      sub_100181898();
      unint64_t v9 = 0xE600317900000000;
      goto LABEL_26;
    case 8:
      sub_100181898();
      unint64_t v9 = 0xE600327900000000;
      goto LABEL_26;
    case 9:
      sub_100181898();
      unint64_t v9 = 0xE600337900000000;
      goto LABEL_26;
    case 10:
      sub_100181898();
      unint64_t v9 = 0xE600347900000000;
      goto LABEL_26;
    case 11:
      sub_100181898();
      unint64_t v9 = 0xE600357900000000;
LABEL_26:
      unint64_t v8 = v9 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v8) {
    sub_10017D70C();
  }
  else {
    char v2 = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10088CA40(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 0x746C7561666564;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = 0x746C7561666564;
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0xE500000000000000;
      uint64_t v6 = 0x7261656C63;
      break;
    case 2:
      unint64_t v4 = 0xE600000000000000;
      uint64_t v6 = 0x7964756F6C63;
      break;
    case 3:
      uint64_t v6 = 0x6C43796C74736F6DLL;
      uint64_t v7 = 2036626799;
      goto LABEL_7;
    case 4:
      unint64_t v4 = 0xE400000000000000;
      uint64_t v6 = 1852399986;
      break;
    case 5:
      uint64_t v6 = 0x537265646E756874;
      uint64_t v7 = 1836216180;
LABEL_7:
      unint64_t v4 = v7 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      break;
    case 6:
      uint64_t v6 = 0x7453657265766573;
      unint64_t v4 = 0xEB000000006D726FLL;
      break;
    default:
      break;
  }
  unint64_t v8 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v8 = 0xE500000000000000;
      uint64_t v3 = 0x7261656C63;
      break;
    case 2:
      unint64_t v8 = 0xE600000000000000;
      uint64_t v3 = 0x7964756F6C63;
      break;
    case 3:
      uint64_t v3 = 0x6C43796C74736F6DLL;
      uint64_t v9 = 2036626799;
      goto LABEL_15;
    case 4:
      unint64_t v8 = 0xE400000000000000;
      uint64_t v3 = 1852399986;
      break;
    case 5:
      uint64_t v3 = 0x537265646E756874;
      uint64_t v9 = 1836216180;
LABEL_15:
      unint64_t v8 = v9 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      break;
    case 6:
      uint64_t v3 = 0x7453657265766573;
      unint64_t v8 = 0xEB000000006D726FLL;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v8) {
    sub_10017D70C();
  }
  else {
    char v2 = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_10088CC5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100890374(a1, 0, 0, 0, 1, 0, 0);
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_10088CD6C(char a1)
{
  switch(a1)
  {
    case 1:
      uint64_t result = sub_10088DEB4();
      break;
    case 2:
      uint64_t result = sub_10088DF44();
      break;
    case 3:
      uint64_t result = sub_10088DFD4();
      break;
    case 4:
      uint64_t result = sub_10088E064();
      break;
    case 5:
      uint64_t result = sub_10088E0F4();
      break;
    default:
      uint64_t result = sub_100135888();
      break;
  }
  return result;
}

uint64_t sub_10088CDC0()
{
  swift_getKeyPath();
  sub_1001A0074();
  sub_100135A24(&qword_100E9CFC8, (void (*)(uint64_t))type metadata accessor for TipCoordinator);
  sub_1001A25B4();
  swift_release();
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_10088CE50()
{
  swift_getKeyPath();
  sub_1001A0074();
  sub_100135A24(&qword_100E9CFC8, (void (*)(uint64_t))type metadata accessor for TipCoordinator);
  sub_1001A25B4();
  swift_release();
  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t sub_10088CEE0()
{
  swift_getKeyPath();
  sub_1001A0074();
  sub_100135A24(&qword_100E9CFC8, (void (*)(uint64_t))type metadata accessor for TipCoordinator);
  sub_1001A25B4();
  swift_release();
  return *(unsigned __int8 *)(v0 + 34);
}

uint64_t sub_10088CF70(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = 2 * a1 + 2;
  if (a2)
  {
    if (v3 == a3) {
      return static Alignment.bottomTrailing.getter();
    }
  }
  else if (v3 != a3)
  {
    return static Alignment.bottomLeading.getter();
  }
  return static Alignment.bottom.getter();
}

uint64_t sub_10088CF98(char a1)
{
  uint64_t v4 = sub_10017DF08(&qword_100E634B0);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_10012B938();
  if (qword_100E62898 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1002102B0(v6, (uint64_t)qword_100F520D0);
  uint64_t v7 = (void *)Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (sub_100162988(v8))
  {
    *(_WORD *)sub_100163DC4() = 0;
    sub_1001D143C((void *)&_mh_execute_header, v9, v10, "TipCoordinator initializing");
    sub_100162EE0();
  }

  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  if (qword_100E62620 != -1) {
    swift_once();
  }
  SettingReader.read<A>(_:)();
  swift_release();
  static SettingReader.shared.getter();
  if (qword_100E62618 != -1) {
    swift_once();
  }
  SettingReader.read<A>(_:)();
  swift_release();
  if (v33)
  {
    unint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (sub_100162988(v12))
    {
      int v13 = (uint8_t *)sub_100163DC4();
      *(_WORD *)int v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v1, "Resetting Tips datastore", v13, 2u);
      sub_100162EE0();
    }

    static Tips.resetDatastore()();
    if (v33)
    {
      unint64_t v14 = Logger.logObject.getter();
      os_log_type_t v15 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v14, v15))
      {
        *(_WORD *)sub_100163DC4() = 0;
        sub_10019B238((void *)&_mh_execute_header, v16, v17, "Setting resetDatastoreOnNextLaunchEnabled back to false");
        sub_100162EE0();
      }

      type metadata accessor for Settings.TappableModulesTipStore();
      swift_initStaticObject();
      char v33 = 0;
      sub_100135A24(&qword_100E94AF8, (void (*)(uint64_t))type metadata accessor for Settings.TappableModulesTipStore);
      Updatable.save<A>(setting:value:)();
    }
  }
  if (qword_100E62638 != -1) {
    swift_once();
  }
  if (dispatch thunk of SettingGroup.isEnabled.getter()) {
    static Tips.hideAllTipsForTesting()();
  }
  if (a1)
  {
    static Tips.resetDatastore()();
    sub_10017DF08(&qword_100E9CFA8);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_100C349B0;
    unint64_t v19 = sub_100536730();
    *(void *)(v18 + 32) = &unk_100E1A1A8;
    *(void *)(v18 + 40) = v19;
    unint64_t v20 = sub_10053677C();
    *(void *)(v18 + 48) = &unk_100E1A220;
    *(void *)(v18 + 56) = v20;
    unint64_t v21 = sub_1005366E4();
    *(void *)(v18 + 64) = &unk_100E1A188;
    *(void *)(v18 + 72) = v21;
    unint64_t v22 = sub_100536698();
    *(void *)(v18 + 80) = &unk_100E1A168;
    *(void *)(v18 + 88) = v22;
    unint64_t v23 = sub_100536600();
    *(void *)(v18 + 96) = &unk_100E1A0C0;
    *(void *)(v18 + 104) = v23;
    unint64_t v24 = sub_10053664C();
    *(void *)(v18 + 112) = &unk_100E1A140;
    *(void *)(v18 + 120) = v24;
    static Tips.hideTipsForTesting(_:)();
    swift_bridgeObjectRelease();
  }
  if (dispatch thunk of SettingGroup.isEnabled.getter())
  {
    static SettingReader.shared.getter();
    if (qword_100E625B8 != -1) {
      swift_once();
    }
    SettingReader.read<A>(_:)();
    swift_release();
    sub_100172488();
    if (v25)
    {
      sub_10017DF08(&qword_100E9CFA8);
      uint64_t v26 = sub_10016288C();
      *(_OWORD *)(v26 + 16) = xmmword_100C251B0;
      unint64_t v27 = sub_100536730();
      *(void *)(v26 + 32) = &unk_100E1A1A8;
    }
    else
    {
      static SettingReader.shared.getter();
      if (qword_100E625C0 != -1) {
        swift_once();
      }
      SettingReader.read<A>(_:)();
      swift_release();
      sub_100172488();
      if (v25)
      {
        sub_10017DF08(&qword_100E9CFA8);
        uint64_t v26 = sub_10016288C();
        *(_OWORD *)(v26 + 16) = xmmword_100C251B0;
        unint64_t v27 = sub_10053677C();
        *(void *)(v26 + 32) = &unk_100E1A220;
      }
      else
      {
        static SettingReader.shared.getter();
        if (qword_100E625C8 != -1) {
          swift_once();
        }
        SettingReader.read<A>(_:)();
        swift_release();
        sub_100172488();
        if (v25)
        {
          sub_10017DF08(&qword_100E9CFA8);
          uint64_t v26 = sub_10016288C();
          *(_OWORD *)(v26 + 16) = xmmword_100C251B0;
          unint64_t v27 = sub_1005366E4();
          *(void *)(v26 + 32) = &unk_100E1A188;
        }
        else
        {
          static SettingReader.shared.getter();
          if (qword_100E625D0 != -1) {
            swift_once();
          }
          SettingReader.read<A>(_:)();
          swift_release();
          sub_100172488();
          if (v25)
          {
            sub_10017DF08(&qword_100E9CFA8);
            uint64_t v26 = sub_10016288C();
            *(_OWORD *)(v26 + 16) = xmmword_100C251B0;
            unint64_t v27 = sub_100536698();
            uint64_t v28 = &unk_100E1A168;
          }
          else
          {
            static SettingReader.shared.getter();
            if (qword_100E625E0 != -1) {
              swift_once();
            }
            SettingReader.read<A>(_:)();
            swift_release();
            sub_100172488();
            if (v25)
            {
              sub_10017DF08(&qword_100E9CFA8);
              uint64_t v26 = sub_10016288C();
              *(_OWORD *)(v26 + 16) = xmmword_100C251B0;
              unint64_t v27 = sub_100536600();
              uint64_t v28 = &unk_100E1A0C0;
            }
            else
            {
              static SettingReader.shared.getter();
              if (qword_100E625D8 != -1) {
                swift_once();
              }
              SettingReader.read<A>(_:)();
              swift_release();
              sub_100172488();
              if (!v25) {
                goto LABEL_55;
              }
              sub_10017DF08(&qword_100E9CFA8);
              uint64_t v26 = sub_10016288C();
              *(_OWORD *)(v26 + 16) = xmmword_100C251B0;
              unint64_t v27 = sub_10053664C();
              uint64_t v28 = &unk_100E1A140;
            }
          }
          *(void *)(v26 + 32) = v28;
        }
      }
    }
    *(void *)(v26 + 40) = v27;
    static Tips.showTipsForTesting(_:)();
    swift_bridgeObjectRelease();
  }
LABEL_55:
  static SettingReader.shared.getter();
  if (qword_100E62628 != -1) {
    swift_once();
  }
  SettingReader.read<A>(_:)();
  swift_release();
  static TaskPriority.high.getter();
  uint64_t v29 = type metadata accessor for TaskPriority();
  _s7Weather24LocationCompositionStateOwst_0(v2, 0, 1, v29);
  uint64_t v30 = sub_10016288C();
  *(void *)(v30 + 16) = 0;
  *(void *)(v30 + 24) = 0;
  *(unsigned char *)(v30 + 32) = v33;
  *(void *)(v30 + 40) = v32;
  swift_retain();
  sub_10088CC5C(v2, (uint64_t)&unk_100E9CFA0, v30);
  swift_release();
  return sub_1003B6C00(v2);
}

uint64_t sub_10088D868()
{
  uint64_t v19 = type metadata accessor for UVIndex();
  uint64_t v0 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v2 = (char *)v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for HourWeather();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001AADC();
  if (!v7) {
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8)
  {
LABEL_6:
    swift_bridgeObjectRelease();
LABEL_7:
    char v14 = 0;
    goto LABEL_8;
  }
  uint64_t v10 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
  uint64_t v9 = v4 + 16;
  v17[1] = v7;
  uint64_t v18 = v10;
  unint64_t v11 = v7 + ((*(unsigned __int8 *)(v9 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 64));
  uint64_t v12 = *(void *)(v9 + 56);
  while (1)
  {
    v18(v6, v11, v3);
    HourWeather.uvIndex.getter();
    uint64_t v13 = UVIndex.value.getter();
    (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v19);
    (*(void (**)(char *, uint64_t))(v9 - 8))(v6, v3);
    if (v13 >= 1) {
      break;
    }
    v11 += v12;
    if (!--v8) {
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease();
  char v14 = 1;
LABEL_8:
  if (qword_100E623C8 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_10017DF08(&qword_100E63520);
  sub_1002102B0(v15, (uint64_t)qword_100F515F0);
  char v20 = v14;
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  return swift_endAccess();
}

uint64_t sub_10088DADC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  swift_bridgeObjectRelease();

  return sub_10088D868();
}

uint64_t sub_10088DB10()
{
  return sub_1000142DC();
}

uint64_t sub_10088DB58()
{
  return sub_1000142DC();
}

uint64_t sub_10088DB78(uint64_t a1, uint64_t a2)
{
  return sub_10088DADC(a2);
}

uint64_t sub_10088DBB4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10001F2E0();
  if (v2)
  {
    unint64_t v3 = *(void *)(v2 + 16);
    swift_bridgeObjectRelease();
    BOOL v4 = v3 > 9;
  }
  else
  {
    BOOL v4 = 0;
  }
  swift_getKeyPath();
  sub_100135A24(&qword_100E9CFC8, (void (*)(uint64_t))type metadata accessor for TipCoordinator);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  v1[32] = v4;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  swift_getKeyPath();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  v1[33] = v4;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  swift_getKeyPath();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  v1[34] = v4;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  return swift_release();
}

uint64_t sub_10088DDDC(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  swift_bridgeObjectRelease();

  return sub_10088DBB4();
}

uint64_t sub_10088DE10()
{
  return sub_1000142DC();
}

uint64_t sub_10088DE58()
{
  return sub_1000142DC();
}

uint64_t sub_10088DE78(uint64_t a1, uint64_t a2)
{
  return sub_10088DDDC(a2);
}

uint64_t sub_10088DEB4()
{
  swift_getKeyPath();
  sub_1001A0074();
  sub_100135A24(&qword_100E9CFC8, (void (*)(uint64_t))type metadata accessor for TipCoordinator);
  sub_1001A25B4();
  swift_release();
  return *(unsigned __int8 *)(v0 + 36);
}

uint64_t sub_10088DF44()
{
  swift_getKeyPath();
  sub_1001A0074();
  sub_100135A24(&qword_100E9CFC8, (void (*)(uint64_t))type metadata accessor for TipCoordinator);
  sub_1001A25B4();
  swift_release();
  return *(unsigned __int8 *)(v0 + 37);
}

uint64_t sub_10088DFD4()
{
  swift_getKeyPath();
  sub_1001A0074();
  sub_100135A24(&qword_100E9CFC8, (void (*)(uint64_t))type metadata accessor for TipCoordinator);
  sub_1001A25B4();
  swift_release();
  return *(unsigned __int8 *)(v0 + 38);
}

uint64_t sub_10088E064()
{
  swift_getKeyPath();
  sub_1001A0074();
  sub_100135A24(&qword_100E9CFC8, (void (*)(uint64_t))type metadata accessor for TipCoordinator);
  sub_1001A25B4();
  swift_release();
  return *(unsigned __int8 *)(v0 + 39);
}

uint64_t sub_10088E0F4()
{
  swift_getKeyPath();
  sub_1001A0074();
  sub_100135A24(&qword_100E9CFC8, (void (*)(uint64_t))type metadata accessor for TipCoordinator);
  sub_1001A25B4();
  swift_release();
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t sub_10088E184()
{
  if (qword_100E62898 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1002102B0(v0, (uint64_t)qword_100F520D0);
  swift_retain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v3 = (uint8_t *)sub_10017E670();
    v22[0] = sub_10016EEA8();
    *(_DWORD *)unint64_t v3 = 136315138;
    uint64_t v23 = sub_10003CF6C();
    sub_10017DF08(&qword_100E9CFD0);
    uint64_t v4 = String.init<A>(describing:)();
    uint64_t v23 = sub_10016414C(v4, v5, v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Picking tip, tipQueue=%s", v3, 0xCu);
    swift_arrayDestroy();
    sub_100162EE0();
    sub_100162EE0();
  }
  else
  {

    swift_release_n();
  }
  uint64_t result = sub_10003CF6C();
  if (result)
  {
    uint64_t v7 = result;
    uint64_t v8 = *(void *)(result + 16);
    if (!v8) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *(unsigned __int8 *)(v7 + v9++ + 32);
      sub_1002103C4();
      switch(v10)
      {
        case 1:
        case 2:
          goto LABEL_14;
        case 3:
          sub_10018A45C();
          goto LABEL_14;
        case 4:
          sub_1001D1628();
          goto LABEL_14;
        case 5:
          sub_10017F5C8();
LABEL_14:
          sub_1001C8710();
          char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v11) {
            goto LABEL_15;
          }
          goto LABEL_21;
        default:
          swift_bridgeObjectRelease();
LABEL_15:
          if (qword_100E62390 != -1) {
            swift_once();
          }
          uint64_t v12 = sub_10017DF08(&qword_100E63520);
          sub_1002102B0(v12, (uint64_t)qword_100F51548);
          swift_beginAccess();
          Tips.Parameter.wrappedValue.getter();
          int v13 = v23;
          swift_endAccess();
          if (v13 == 1)
          {
            char v14 = Logger.logObject.getter();
            os_log_type_t v15 = static os_log_type_t.default.getter();
            if (sub_100162988(v15))
            {
              uint64_t v16 = (uint8_t *)sub_100163DC4();
              *(_WORD *)uint64_t v16 = 0;
              _os_log_impl((void *)&_mh_execute_header, v14, (os_log_type_t)v10, "Skipping daily forecast tip since it was last displayed", v16, 2u);
              sub_100162EE0();
            }
          }
          else
          {
LABEL_21:
            if (sub_100A6B514(v10))
            {
              swift_bridgeObjectRelease_n();
              uint64_t v17 = Logger.logObject.getter();
              os_log_type_t v18 = static os_log_type_t.default.getter();
              if (os_log_type_enabled(v17, v18))
              {
                uint64_t v19 = (uint8_t *)sub_10017E670();
                v22[0] = sub_10016EEA8();
                *(_DWORD *)uint64_t v19 = 136315138;
                LOBYTE(v23) = v10;
                uint64_t v20 = String.init<A>(describing:)();
                uint64_t v23 = sub_10016414C(v20, v21, v22);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease();
                _os_log_impl((void *)&_mh_execute_header, v17, v18, "first tip from priority queue =%s", v19, 0xCu);
                swift_arrayDestroy();
                sub_100162EE0();
                sub_100162EE0();
              }

              return sub_100A6BDF8(v10);
            }
          }
          if (v8 == v9) {
            return swift_bridgeObjectRelease_n();
          }
          break;
      }
    }
  }
  return result;
}

uint64_t sub_10088E628()
{
  return swift_release();
}

uint64_t sub_10088E688()
{
  return sub_1000142DC();
}

uint64_t sub_10088E6D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  *(void *)(v5 + 40) = a5;
  *(unsigned char *)(v5 + 145) = a4;
  uint64_t v6 = type metadata accessor for ContinuousClock();
  *(void *)(v5 + 48) = v6;
  *(void *)(v5 + 56) = *(void *)(v6 - 8);
  *(void *)(v5 + 64) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Tips.ConfigurationOption.DatastoreLocation();
  *(void *)(v5 + 72) = v7;
  *(void *)(v5 + 80) = *(void *)(v7 - 8);
  *(void *)(v5 + 88) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Tips.ConfigurationOption.DisplayFrequency();
  *(void *)(v5 + 96) = v8;
  *(void *)(v5 + 104) = *(void *)(v8 - 8);
  *(void *)(v5 + 112) = swift_task_alloc();
  return _swift_task_switch(sub_10088E84C, 0, 0);
}

uint64_t sub_10088E84C()
{
  if (qword_100E62898 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  *(void *)(v0 + 120) = sub_1002102B0(v1, (uint64_t)qword_100F520D0);
  os_log_type_t v2 = (void *)Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (sub_100162988(v3))
  {
    *(_WORD *)sub_100163DC4() = 0;
    sub_1001D143C((void *)&_mh_execute_header, v4, v5, "Configuring tips");
    sub_100162EE0();
  }
  int v6 = *(unsigned __int8 *)(v0 + 145);

  sub_10017DF08(&qword_100E9CFB8);
  uint64_t v7 = type metadata accessor for Tips.ConfigurationOption();
  sub_100164920(v7);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C25ED0;
  if (v6 == 1) {
    static Tips.ConfigurationOption.DisplayFrequency.immediate.getter();
  }
  else {
    static Tips.ConfigurationOption.DisplayFrequency.daily.getter();
  }
  uint64_t v8 = *(void *)(v0 + 104);
  uint64_t v9 = *(void *)(v0 + 112);
  uint64_t v11 = *(void *)(v0 + 88);
  uint64_t v10 = *(void *)(v0 + 96);
  uint64_t v13 = *(void *)(v0 + 72);
  uint64_t v12 = *(void *)(v0 + 80);
  static Tips.ConfigurationOption.displayFrequency(_:)();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v10);
  static Tips.ConfigurationOption.DatastoreLocation.applicationDefault.getter();
  static Tips.ConfigurationOption.datastoreLocation(_:)();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  static Tips.configure(_:)();
  swift_bridgeObjectRelease();
  sub_10088EF58(0);
  sub_10088EF58(1);
  sub_10088EF58(2);
  sub_10088EF58(3);
  sub_10088EF58(4);
  sub_10088EF58(5);
  if (qword_100E62390 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_10017DF08(&qword_100E63520);
  sub_1002102B0(v14, (uint64_t)qword_100F51548);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.getter();
  swift_endAccess();
  os_log_type_t v15 = (void *)Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (sub_100163FE4(v16))
  {
    *(_WORD *)sub_100163DC4() = 0;
    sub_100162FF8((void *)&_mh_execute_header, v17, v18, "Started observing tip statuses");
    sub_100162EE0();
  }

  ContinuousClock.init()();
  unint64_t v21 = (uint64_t (__cdecl *)())((char *)&dword_100E9CFC0 + dword_100E9CFC0);
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_10088EC74;
  sub_100127A5C();
  return v21();
}

uint64_t sub_10088EC74()
{
  sub_100179DB4();
  uint64_t v2 = *v1;
  sub_100179D88();
  *os_log_type_t v3 = v2;
  swift_task_dealloc();
  if (v0) {
    swift_errorRelease();
  }
  uint64_t v4 = sub_100176E1C();
  v5(v4);
  sub_100127A5C();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t sub_10088EDDC()
{
  sub_100109790();
  uint64_t v1 = (void *)Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (sub_100163FE4(v2))
  {
    *(_WORD *)sub_100163DC4() = 0;
    sub_100162FF8((void *)&_mh_execute_header, v3, v4, "TipCoordinator configured");
    sub_100162EE0();
  }

  type metadata accessor for MainActor();
  *(void *)(v0 + 136) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10088EEB8, v6, v5);
}

uint64_t sub_10088EEB8()
{
  sub_1000A9DE8();
  swift_release();
  sub_10088E628();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1001627B4();
  return v0();
}

uint64_t sub_10088EF58(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10017DF08(&qword_100E634B0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TaskPriority();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 1, 1, v7);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v8 = static MainActor.shared.getter();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = &protocol witness table for MainActor;
  *(void *)(v9 + 32) = v2;
  *(unsigned char *)(v9 + 40) = a1;
  sub_1001BCCF0((uint64_t)v6, (uint64_t)&unk_100E9CFF0, v9);
  return swift_release();
}

uint64_t sub_10088F054(uint64_t a1)
{
  return 1000000000000000000 * a1;
}

uint64_t sub_10088F084(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for LocationComponentViewModel();
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_10011BFD8();
  sub_1001356AC(a1, v1);
  uint64_t result = sub_1000273A4(v1);
  if (result != 6) {
    return sub_10088F104(result);
  }
  return result;
}

uint64_t sub_10088F104(char a1)
{
  uint64_t v3 = type metadata accessor for Tips.InvalidationReason();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_10011BFD8();
  if (qword_100E62898 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_1002102B0(v7, (uint64_t)qword_100F520D0);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v27 = v5;
    char v10 = a1;
    uint64_t v11 = (uint8_t *)sub_10017E670();
    uint64_t v28 = sub_10016EEA8();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v12 = String.init<A>(describing:)();
    sub_10016414C(v12, v13, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Invalidating tip=%s", v11, 0xCu);
    swift_arrayDestroy();
    sub_100162EE0();
    a1 = v10;
    uint64_t v5 = v27;
    sub_100162EE0();
  }

  switch(a1)
  {
    case 1:
      uint64_t v16 = sub_1001805B8();
      v17(v16);
      sub_100536730();
      break;
    case 2:
      uint64_t v18 = sub_1001805B8();
      v19(v18);
      sub_1005366E4();
      break;
    case 3:
      uint64_t v20 = sub_1001805B8();
      v21(v20);
      sub_100536698();
      break;
    case 4:
      LOBYTE(v28) = sub_10088CE50() & 1;
      uint64_t v22 = sub_1001805B8();
      v23(v22);
      sub_10053664C();
      break;
    case 5:
      LOBYTE(v28) = sub_10088CEE0() & 1;
      uint64_t v24 = sub_1001805B8();
      v25(v24);
      sub_100536600();
      break;
    default:
      LOBYTE(v28) = sub_10088CDC0() & 1;
      uint64_t v14 = sub_1001805B8();
      v15(v14);
      sub_10053677C();
      break;
  }
  Tip.invalidate(reason:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
}

uint64_t sub_10088F454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 192) = a5;
  *(void *)(v5 + 56) = a4;
  uint64_t v6 = type metadata accessor for Tips.Status();
  *(void *)(v5 + 64) = v6;
  *(void *)(v5 + 72) = *(void *)(v6 - 8);
  *(void *)(v5 + 80) = swift_task_alloc();
  sub_10017DF08(&qword_100E634A0);
  *(void *)(v5 + 88) = swift_task_alloc();
  uint64_t v7 = sub_10017DF08(&qword_100E634C8);
  *(void *)(v5 + 96) = v7;
  *(void *)(v5 + 104) = *(void *)(v7 - 8);
  *(void *)(v5 + 112) = swift_task_alloc();
  uint64_t v8 = sub_10017DF08(&qword_100E634D0);
  *(void *)(v5 + 120) = v8;
  *(void *)(v5 + 128) = *(void *)(v8 - 8);
  *(void *)(v5 + 136) = swift_task_alloc();
  *(void *)(v5 + 144) = type metadata accessor for MainActor();
  *(void *)(v5 + 152) = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v5 + 160) = v10;
  *(void *)(v5 + 168) = v9;
  return _swift_task_switch(sub_10088F640, v10, v9);
}

uint64_t sub_10088F640()
{
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  sub_10088FA7C(*(unsigned char *)(v0 + 192), v0 + 16);
  sub_1001B1E64((void *)(v0 + 16), *(void *)(v0 + 40));
  Tip.statusUpdates.getter();
  AsyncStream.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  uint64_t v4 = static MainActor.shared.getter();
  *(void *)(v0 + 176) = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10088F78C;
  uint64_t v6 = *(void *)(v0 + 120);
  uint64_t v7 = *(void *)(v0 + 88);
  return AsyncStream.Iterator.next(isolation:)(v7, v4, &protocol witness table for MainActor, v6);
}

uint64_t sub_10088F78C()
{
  sub_100109790();
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  sub_100179D88();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  swift_release();
  uint64_t v4 = *(void *)(v1 + 168);
  uint64_t v5 = *(void *)(v1 + 160);
  return _swift_task_switch(sub_10088F8C4, v5, v4);
}

uint64_t sub_10088F8C4()
{
  sub_100179DB4();
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 136), *(void *)(v0 + 120));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1001627B4();
    return v3();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 72);
    uint64_t v5 = *(char **)(v0 + 80);
    int v7 = *(unsigned __int8 *)(v0 + 192);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v5, v1, v2);
    sub_10088FB74(v5, v7);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v5, v2);
    uint64_t v8 = static MainActor.shared.getter();
    *(void *)(v0 + 176) = v8;
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 184) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_10088F78C;
    uint64_t v10 = *(void *)(v0 + 120);
    uint64_t v11 = *(void *)(v0 + 88);
    return AsyncStream.Iterator.next(isolation:)(v11, v8, &protocol witness table for MainActor, v10);
  }
}

unint64_t sub_10088FA7C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  switch(a1)
  {
    case 1:
      *(void *)(a2 + 24) = &unk_100E1A1A8;
      unint64_t result = sub_100536730();
      goto LABEL_6;
    case 2:
      *(void *)(a2 + 24) = &unk_100E1A188;
      unint64_t result = sub_1005366E4();
      goto LABEL_6;
    case 3:
      *(void *)(a2 + 24) = &unk_100E1A168;
      unint64_t result = sub_100536698();
LABEL_6:
      *(void *)(a2 + 32) = result;
      return result;
    case 4:
      char v3 = sub_10088CE50();
      *(void *)(a2 + 24) = &unk_100E1A140;
      unint64_t result = sub_10053664C();
      goto LABEL_9;
    case 5:
      char v3 = sub_10088CEE0();
      *(void *)(a2 + 24) = &unk_100E1A0C0;
      unint64_t result = sub_100536600();
      goto LABEL_9;
    default:
      char v3 = sub_10088CDC0();
      *(void *)(a2 + 24) = &unk_100E1A220;
      unint64_t result = sub_10053677C();
LABEL_9:
      *(void *)(a2 + 32) = result;
      *(unsigned char *)a2 = v3 & 1;
      return result;
  }
}

uint64_t sub_10088FB74(char *a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Tips.Status();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v33 - v11;
  __chkstk_darwin(v13);
  os_log_type_t v15 = (char *)&v33 - v14;
  if (qword_100E62898 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_1002102B0(v16, (uint64_t)qword_100F520D0);
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v38 = a1;
  uint64_t v40 = v17;
  v17(v15, a1, v6);
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  BOOL v20 = os_log_type_enabled(v18, v19);
  int v39 = a2;
  if (v20)
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v35 = v9;
    uint64_t v22 = v21;
    uint64_t v34 = swift_slowAlloc();
    uint64_t v42 = v34;
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v36 = v7;
    LOBYTE(v41) = a2;
    uint64_t v37 = v3;
    uint64_t v23 = String.init<A>(describing:)();
    uint64_t v41 = sub_10016414C(v23, v24, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    v40(v12, v15, v6);
    uint64_t v25 = String.init<A>(describing:)();
    uint64_t v41 = sub_10016414C(v25, v26, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v7 = v36;
    swift_bridgeObjectRelease();
    uint64_t v27 = *(void (**)(char *, uint64_t))(v7 + 8);
    v27(v15, v6);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "%s.stream.status=%s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v9 = v35;
    swift_slowDealloc();
  }
  else
  {
    uint64_t v27 = *(void (**)(char *, uint64_t))(v7 + 8);
    v27(v15, v6);
  }

  v40(v9, v38, v6);
  int v28 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v28 != enum case for Tips.Status.invalidated(_:))
  {
    if (v28 == enum case for Tips.Status.pending(_:))
    {
      char v31 = 0;
    }
    else
    {
      if (v28 != enum case for Tips.Status.available(_:))
      {
        char v30 = v39;
        goto LABEL_14;
      }
      char v31 = 1;
    }
    return sub_10088FF74(v31, v39);
  }
  char v29 = v39;
  sub_100A6C1A0(v39);
  char v30 = v29;
LABEL_14:
  sub_10088FF74(0, v30);
  return ((uint64_t (*)(char *, uint64_t))v27)(v9, v6);
}

uint64_t sub_10088FF74(char a1, char a2)
{
  uint64_t result = sub_10088E628();
  if (a1)
  {
    if (sub_100A6C3F8(a2) != 0x726F46796C696164 || v5 != 0xED00007473616365) {
      _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
    if (qword_100E62390 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_10017DF08(&qword_100E63520);
    sub_1002102B0(v7, (uint64_t)qword_100F51548);
    swift_beginAccess();
    Tips.Parameter.wrappedValue.setter();
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1008901B4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Weather14TipCoordinator___observationRegistrar;
  type metadata accessor for ObservationRegistrar();
  sub_100162E4C();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  return v0;
}

uint64_t sub_100890228()
{
  sub_1008901B4();

  return swift_deallocClassInstance();
}

uint64_t sub_100890280()
{
  return type metadata accessor for TipCoordinator();
}

uint64_t sub_100890288()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008902C8()
{
  sub_100179DB4();
  char v1 = *(unsigned char *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)sub_100162FCC(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_100214FB0;
  uint64_t v6 = sub_1001EC460();
  return sub_10088E6D0(v6, v7, v8, v1, v2);
}

uint64_t sub_100890374(uint64_t a1, char a2, char a3, char a4, char a5, char a6, char a7)
{
  uint64_t v14 = sub_10017DF08(&qword_100E634B0);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100890508(a1, (uint64_t)v17);
  uint64_t v18 = type metadata accessor for TaskPriority();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18) == 1)
  {
    sub_1003B6C00((uint64_t)v17);
    uint64_t result = 0;
    if ((a2 & 1) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    unsigned __int8 v20 = TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
    uint64_t result = v20;
    if ((a2 & 1) == 0)
    {
LABEL_3:
      if (a3) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  result |= 0x100uLL;
  if (a3)
  {
LABEL_4:
    result |= 0x400uLL;
    if ((a4 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  if ((a4 & 1) == 0)
  {
LABEL_5:
    if ((a5 & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_15:
  result |= 0x800uLL;
  if (a5) {
LABEL_6:
  }
    result |= 0x1000uLL;
LABEL_7:
  if (a6) {
    result |= 0x2000uLL;
  }
  if (a7) {
    return result | 0x4000;
  }
  return result;
}

uint64_t sub_1008904D0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100890508(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E634B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100890570()
{
  sub_100179DB4();
  char v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  *(void *)(v1 + 56) = v0;
  uint64_t v12 = type metadata accessor for ContinuousClock.Instant();
  *(void *)(v1 + 64) = v12;
  sub_100164920(v12);
  *(void *)(v1 + 72) = v13;
  *(void *)(v1 + 80) = swift_task_alloc();
  *(void *)(v1 + 88) = swift_task_alloc();
  *(void *)(v1 + 40) = v11;
  *(void *)(v1 + 48) = v9;
  *(void *)(v1 + 16) = v7;
  *(void *)(v1 + 24) = v5;
  *(unsigned char *)(v1 + 32) = v3 & 1;
  sub_100127A5C();
  return _swift_task_switch(v14, v15, v16);
}

uint64_t sub_100890648()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = type metadata accessor for ContinuousClock();
  uint64_t v5 = sub_100135A24(&qword_100E9CFD8, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  dispatch thunk of Clock.now.getter();
  sub_100135A24(&qword_100E9CFE0, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  dispatch thunk of InstantProtocol.advanced(by:)();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v6;
  v0[13] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1008907E8;
  uint64_t v8 = v0[11];
  return dispatch thunk of Clock.sleep(until:tolerance:)(v8, v0 + 2, v4, v5);
}

uint64_t sub_1008907E8()
{
  sub_100179DB4();
  sub_100119470();
  uint64_t v3 = v2;
  uint64_t v5 = (void (*)(uint64_t, uint64_t))v4[12];
  uint64_t v6 = v4[11];
  uint64_t v7 = v4[8];
  uint64_t v8 = *v1;
  sub_100179D88();
  *uint64_t v9 = v8;
  *(void *)(v3 + 120) = v0;
  swift_task_dealloc();
  v5(v6, v7);
  if (v0)
  {
    sub_100127A5C();
    return _swift_task_switch(v10, v11, v12);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(void))(v8 + 8);
    return v13();
  }
}

uint64_t sub_100890970()
{
  sub_1000A9DE8();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1001627B4();
  return v0();
}

uint64_t sub_1008909D4()
{
  sub_100184064();
  uint64_t v0 = sub_1001357F8();
  return sub_100182AB8(v0);
}

uint64_t sub_1008909FC(unsigned __int8 *a1)
{
  return sub_10088E628();
}

uint64_t sub_100890A3C()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 41) = *(unsigned char *)(v0 + 24);
  return sub_1002227B4();
}

uint64_t sub_100890A74()
{
  sub_100184064();
  uint64_t result = sub_10003CF6C();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_100890AA0()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100890AE0()
{
  sub_100179DB4();
  uint64_t v1 = *(void *)(v0 + 32);
  char v2 = *(unsigned char *)(v0 + 40);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)sub_100162FCC(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_100218DF8;
  uint64_t v6 = sub_1001EC460();
  return sub_10088F454(v6, v7, v8, v1, v2);
}

uint64_t sub_100890B8C()
{
  sub_100184064();
  uint64_t v0 = sub_100135888();
  return sub_100182AB8(v0);
}

uint64_t sub_100890BB4(unsigned __int8 *a1)
{
  return sub_10088E628();
}

void sub_100890BF4()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 35) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_100890C04()
{
  sub_100184064();
  uint64_t v0 = sub_10088DEB4();
  return sub_100182AB8(v0);
}

uint64_t sub_100890C2C(unsigned __int8 *a1)
{
  return sub_10088E628();
}

void sub_100890C6C()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 36) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_100890C7C()
{
  sub_100184064();
  uint64_t v0 = sub_10088DF44();
  return sub_100182AB8(v0);
}

uint64_t sub_100890CA4(unsigned __int8 *a1)
{
  return sub_10088E628();
}

void sub_100890CE4()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 37) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_100890CF4()
{
  sub_100184064();
  uint64_t v0 = sub_10088DFD4();
  return sub_100182AB8(v0);
}

uint64_t sub_100890D1C(unsigned __int8 *a1)
{
  return sub_10088E628();
}

void sub_100890D5C()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 38) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_100890D6C()
{
  sub_100184064();
  uint64_t v0 = sub_10088E064();
  return sub_100182AB8(v0);
}

uint64_t sub_100890D94(unsigned __int8 *a1)
{
  return sub_10088E628();
}

void sub_100890DD4()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 39) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_100890DE4()
{
  sub_100184064();
  uint64_t v0 = sub_10088E0F4();
  return sub_100182AB8(v0);
}

uint64_t sub_100890E0C(unsigned __int8 *a1)
{
  return sub_10088E628();
}

void sub_100890E4C()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 40) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_100890E5C()
{
  sub_100184064();
  uint64_t v0 = sub_10088CDC0();
  return sub_100182AB8(v0);
}

uint64_t sub_100890E84(unsigned __int8 *a1)
{
  return sub_10088E628();
}

void sub_100890EC4()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 32) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_100890ED4()
{
  sub_100184064();
  uint64_t v0 = sub_10088CE50();
  return sub_100182AB8(v0);
}

uint64_t sub_100890EFC(unsigned __int8 *a1)
{
  return sub_10088E628();
}

uint64_t sub_100890F3C()
{
  sub_100184064();
  uint64_t v0 = sub_10088CEE0();
  return sub_100182AB8(v0);
}

uint64_t sub_100890F64(unsigned __int8 *a1)
{
  return sub_10088E628();
}

void sub_100890FA4()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 34) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_100890FB4()
{
  sub_100184064();
  uint64_t result = sub_10001AADC();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_100890FE0()
{
  return sub_10088DB78(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100890FFC()
{
  sub_100184064();
  uint64_t result = sub_10001F2E0();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_100891028()
{
  return sub_10088DE78(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100891044(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MapComponentViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008910AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v98 = type metadata accessor for WeatherMenuInput();
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v85 = v7;
  sub_100129064();
  type metadata accessor for WeatherMapOverlayKind();
  sub_100179C0C();
  uint64_t v96 = v9;
  uint64_t v97 = v8;
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v95 = v10;
  uint64_t v11 = sub_10017DF08(&qword_100E639E8);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v101 = v13;
  sub_100129064();
  type metadata accessor for MapsConfiguration();
  sub_100179C0C();
  uint64_t v93 = v15;
  uint64_t v94 = v14;
  __chkstk_darwin(v14);
  sub_100109314();
  uint64_t v92 = v16;
  sub_100129064();
  type metadata accessor for AppConfiguration();
  sub_100179C0C();
  uint64_t v90 = v18;
  uint64_t v91 = v17;
  __chkstk_darwin(v17);
  sub_100109314();
  uint64_t v89 = v19;
  uint64_t v20 = sub_10017DF08(&qword_100E65BC0);
  uint64_t v21 = sub_100109308(v20);
  __chkstk_darwin(v21);
  sub_100162EF8();
  uint64_t v84 = v22;
  __chkstk_darwin(v23);
  uint64_t v100 = (uint64_t)&v82 - v24;
  sub_100129064();
  uint64_t v25 = type metadata accessor for PreviewLocation();
  sub_100162E4C();
  __chkstk_darwin(v26);
  sub_1001626E0();
  uint64_t v29 = v28 - v27;
  type metadata accessor for ModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v30);
  sub_1001626E0();
  uint64_t v33 = v32 - v31;
  uint64_t v34 = type metadata accessor for LocationPreviewViewState(0);
  uint64_t v35 = sub_100109308(v34);
  __chkstk_darwin(v35);
  sub_1001626E0();
  uint64_t v38 = v37 - v36;
  uint64_t v39 = sub_10017DF08(&qword_100E663D8);
  uint64_t v40 = sub_100109308(v39);
  __chkstk_darwin(v40);
  sub_100162EF8();
  uint64_t v99 = v41;
  __chkstk_darwin(v42);
  uint64_t v44 = (char *)&v82 - v43;
  __chkstk_darwin(v45);
  uint64_t v47 = (char *)&v82 - v46;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)&v82 - v46, 1, 1, v25);
  sub_10011A32C(a1, v33, (void (*)(void))type metadata accessor for ModalViewState);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_100892074(v33, (void (*)(void))type metadata accessor for ModalViewState);
    int v87 = 2;
    uint64_t v48 = v100;
  }
  else
  {
    sub_100178110((uint64_t)v47, &qword_100E663D8);
    sub_10016E294(v33, v38, (void (*)(void))type metadata accessor for LocationPreviewViewState);
    sub_10011A32C(v38, (uint64_t)v47, (void (*)(void))type metadata accessor for PreviewLocation);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v25);
    sub_10006DF38((uint64_t)v47, (uint64_t)v44, &qword_100E663D8);
    int v49 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v25);
    uint64_t v48 = v100;
    if (v49 == 1)
    {
      sub_100892074(v38, (void (*)(void))type metadata accessor for LocationPreviewViewState);
      sub_100178110((uint64_t)v44, &qword_100E663D8);
      int v50 = 2;
    }
    else
    {
      sub_10016E294((uint64_t)v44, v29, (void (*)(void))type metadata accessor for PreviewLocation);
      sub_1001B1E64(v3 + 22, v3[25]);
      BOOL v51 = sub_10056D6D4(v29);
      sub_100892074(v29, (void (*)(void))type metadata accessor for PreviewLocation);
      sub_100892074(v38, (void (*)(void))type metadata accessor for LocationPreviewViewState);
      int v50 = v51;
    }
    int v87 = v50;
  }
  uint64_t v52 = a1;
  sub_100891990(a1, v48);
  uint64_t v53 = v98;
  int v54 = *(unsigned __int8 *)(a1 + *(int *)(v98 + 28));
  uint64_t v55 = self;
  id v56 = [v55 mainBundle];
  v102._object = (void *)0x8000000100CB5540;
  v57._uint64_t countAndFlagsBits = 0x657370616C6C6F43;
  v57._object = (void *)0xEC00000070614D20;
  v58._uint64_t countAndFlagsBits = 0;
  v58._object = (void *)0xE000000000000000;
  v102._uint64_t countAndFlagsBits = 0xD000000000000039;
  Swift::String v59 = NSLocalizedString(_:tableName:bundle:value:comment:)(v57, (Swift::String_optional)0, (NSBundle)v56, v58, v102);
  uint64_t countAndFlagsBits = v59._countAndFlagsBits;
  object = v59._object;

  id v60 = [v55 mainBundle];
  v103._uint64_t countAndFlagsBits = 0xD000000000000049;
  v103._object = (void *)0x8000000100CB5580;
  v61._uint64_t countAndFlagsBits = 0x4D20646E61707845;
  v61._object = (void *)0xEA00000000007061;
  v62._uint64_t countAndFlagsBits = 0;
  v62._object = (void *)0xE000000000000000;
  Swift::String v63 = NSLocalizedString(_:tableName:bundle:value:comment:)(v61, (Swift::String_optional)0, (NSBundle)v60, v62, v103);
  uint64_t v82 = v63._countAndFlagsBits;

  BOOL v88 = sub_100891DB8((uint64_t)v47, (uint64_t)v3);
  sub_1001B1E64(v3 + 2, v3[5]);
  dispatch thunk of AppConfigurationManagerType.appConfiguration.getter();
  AppConfiguration.maps.getter();
  sub_100162F0C();
  v64();
  LODWORD(v91) = MapsConfiguration.windOverlayEnabled.getter();
  sub_100162F0C();
  v65();
  type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  uint64_t v66 = UnitManager.temperature.getter();
  int v67 = v54;
  swift_release();
  uint64_t v68 = (uint64_t)v47;
  uint64_t v69 = v99;
  sub_10024D364(v68, v99, &qword_100E663D8);
  sub_10006DF38(v52 + *(int *)(v53 + 20), v101, &qword_100E639E8);
  if (v54 == 128)
  {
    LODWORD(v94) = 128;
    uint64_t v70 = v84;
    sub_10024D364(v100, v84, &qword_100E65BC0);
    uint64_t v71 = v85;
    sub_10011A32C(v52, v85, (void (*)(void))type metadata accessor for WeatherMenuInput);
    uint64_t v72 = v97;
    int v73 = _s7Weather24LocationCompositionStateOwet_0(v70, 1, v97);
    uint64_t v74 = v95;
    uint64_t v75 = v96;
    if (v73 == 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 16))(v95, v71 + *(int *)(v53 + 32), v72);
      sub_100892074(v71, (void (*)(void))type metadata accessor for WeatherMenuInput);
      sub_100178110(v70, &qword_100E65BC0);
    }
    else
    {
      sub_100892074(v71, (void (*)(void))type metadata accessor for WeatherMenuInput);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 32))(v74, v70, v72);
    }
    uint64_t v78 = v63._object;
    uint64_t v69 = v99;
    char v77 = v87;
    int v67 = v94;
    uint64_t v76 = v82;
  }
  else
  {
    sub_100178110(v100, &qword_100E65BC0);
    uint64_t v74 = v95;
    uint64_t v75 = v96;
    uint64_t v72 = v97;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 16))(v95, v52 + *(int *)(v53 + 32), v97);
    uint64_t v76 = countAndFlagsBits;
    char v77 = v87;
    uint64_t v78 = object;
  }
  swift_bridgeObjectRelease();
  sub_10024D364(v69, a2, &qword_100E663D8);
  uint64_t v79 = (int *)type metadata accessor for WeatherMenuViewModel();
  *(unsigned char *)(a2 + v79[5]) = v77;
  sub_10024D364(v101, a2 + v79[6], &qword_100E639E8);
  *(unsigned char *)(a2 + v79[7]) = v67 != 128;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 32))(a2 + v79[8], v74, v72);
  uint64_t v80 = (uint64_t *)(a2 + v79[9]);
  *uint64_t v80 = v76;
  v80[1] = (uint64_t)v78;
  *(unsigned char *)(a2 + v79[10]) = v88;
  *(void *)(a2 + v79[11]) = v66;
  *(unsigned char *)(a2 + v79[12]) = v91 & 1;
  return _s7Weather24LocationCompositionStateOwst_0(a2, 0, 1, (uint64_t)v79);
}

uint64_t sub_100891990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E63770);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E63850);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for WeatherData(0);
  __chkstk_darwin(v9);
  uint64_t v37 = (uint64_t)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E6DC08);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Location.Identifier();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (int *)type metadata accessor for WeatherMenuInput();
  sub_10006DF38(a1 + v18[6], (uint64_t)v13, &qword_100E6DC08);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14) == 1)
  {
    uint64_t v19 = &qword_100E6DC08;
    uint64_t v20 = (uint64_t)v13;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    uint64_t v21 = *(void *)(a1 + v18[9] + 16);
    uint64_t v22 = Location.Identifier.id.getter();
    sub_1001BBE9C(v22, v23, v21);
    swift_bridgeObjectRelease();
    uint64_t v24 = type metadata accessor for LocationWeatherDataState(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v24) == 1)
    {
      sub_100178110((uint64_t)v5, &qword_100E63770);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 1, 1, v9);
    }
    else
    {
      sub_1001177B0((uint64_t)v8);
      sub_100892074((uint64_t)v5, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) != 1)
      {
        uint64_t v29 = (uint64_t)v8;
        uint64_t v30 = v37;
        sub_10016E294(v29, v37, (void (*)(void))type metadata accessor for WeatherData);
        char v31 = *(unsigned char *)(a1 + v18[12]);
        uint64_t v32 = v38;
        sub_1001B1E64((void *)(v38 + 56), *(void *)(v38 + 80));
        uint64_t v33 = sub_10005DF64(v30, v31);
        uint64_t v35 = v34;
        sub_1001B1E64((void *)(v32 + 96), *(void *)(v32 + 120));
        uint64_t v26 = v39;
        sub_10009D708(v30 + *(int *)(v9 + 24), (uint64_t)v33, v35, (uint64_t)v17, v39);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100892074(v30, (void (*)(void))type metadata accessor for WeatherData);
        (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
        uint64_t v25 = 0;
        goto LABEL_8;
      }
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    uint64_t v19 = &qword_100E63850;
    uint64_t v20 = (uint64_t)v8;
  }
  sub_100178110(v20, v19);
  uint64_t v25 = 1;
  uint64_t v26 = v39;
LABEL_8:
  uint64_t v27 = type metadata accessor for WeatherMapOverlayKind();
  return _s7Weather24LocationCompositionStateOwst_0(v26, v25, 1, v27);
}

BOOL sub_100891DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E66678);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E663D8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for PreviewLocation();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006DF38(a1, (uint64_t)v9, &qword_100E663D8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10) == 1)
  {
    sub_100178110((uint64_t)v9, &qword_100E663D8);
    return 0;
  }
  else
  {
    sub_10016E294((uint64_t)v9, (uint64_t)v12, (void (*)(void))type metadata accessor for PreviewLocation);
    sub_10081BFBC();
    uint64_t v14 = sub_10081BCB4();
    uint64_t v16 = v15;
    sub_1001B1E64((void *)(a2 + 136), *(void *)(a2 + 160));
    sub_100694CE4(v14, v16, (uint64_t)v6);
    swift_bridgeObjectRelease();
    sub_100892074((uint64_t)v12, (void (*)(void))type metadata accessor for PreviewLocation);
    uint64_t v17 = type metadata accessor for SavedLocation();
    BOOL v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v17) == 1;
    sub_100178110((uint64_t)v6, &qword_100E66678);
  }
  return v13;
}

uint64_t sub_100891FDC()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 56);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 96);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 136);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 176);
  return v0;
}

uint64_t sub_10089201C()
{
  sub_100891FDC();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WeatherMenuViewModelFactory()
{
  return self;
}

uint64_t sub_100892074(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_1008920C8()
{
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 32);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 72);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 112);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 152);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 192);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 232);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 272);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 312);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 352);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 392);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 432);
  return v0;
}

uint64_t sub_100892140()
{
  sub_1008920C8();

  return swift_deallocClassInstance();
}

uint64_t static WeatherChange.Direction.read(from:)()
{
  return sub_1008C384C();
}

uint64_t WeatherChange.Direction.write(to:)()
{
  return sub_1008C3650();
}

uint64_t sub_1008921A4()
{
  uint64_t result = sub_10089AF80();
  if (!v0)
  {
    uint64_t v3 = result;
    char v4 = v2;
    sub_1001D1EFC();
    sub_1001D1EFC();
    char v5 = sub_1008C384C();
    uint64_t v6 = sub_1008C6914();
    uint64_t v8 = v7;
    uint64_t v13 = v6;
    sub_1008C6E08();
    uint64_t v11 = static ExternalSearchQuery.read(from:)();
    uint64_t v12 = v9;
    sub_1001D1EFC();
    sub_1008C7734();
    sub_1008C6E08();
    char v10 = static ListSessionTrigger.read(from:)();
    sub_1001D1EFC();
    swift_allocObject();
    return sub_1000EC58C(v3, v4 & 1, v19, v18, v5, v13, v8, v11, v12, v17, v14, v15, v10 & 1, v16);
  }
  return result;
}

uint64_t sub_1008923EC(uint64_t a1)
{
  uint64_t result = sub_10089B0A8(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
  if (!v2)
  {
    sub_1001825F4();
    sub_1001825F4();
    sub_1008C72F0();
    swift_bridgeObjectRetain();
    sub_10011C158();
    sub_1008C7CD0();
    uint64_t v6 = *(void *)(v1 + 48);
    uint64_t v5 = *(void *)(v1 + 56);
    swift_bridgeObjectRetain();
    ExternalSearchQuery.write(to:)(a1, v6, v5);
    sub_1008C7CD0();
    sub_1001825F4();
    sub_10017DF08(&qword_100E65F18);
    Optional<A>.write(to:)();
    sub_1001A4838();
    ListSessionTrigger.write(to:)();
    return sub_1001825F4();
  }
  return result;
}

uint64_t sub_100892578()
{
  return sub_1008921A4();
}

uint64_t sub_1008925A8(uint64_t a1)
{
  return sub_1008923EC(a1);
}

void sub_1008925CC()
{
  sub_10017F304();
  sub_1008C6D48();
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  uint64_t v3 = sub_100109308(active);
  __chkstk_darwin(v3);
  sub_10012B938();
  sub_100214EA0();
  sub_1008C5F48();
  if (!v0)
  {
    char v4 = sub_1008C7BC4();
    char v5 = sub_1008C2DE8();
    sub_100214EA0();
    char v6 = static NotificationAuthorizationState.read(from:)();
    sub_1001D1EFC();
    char v7 = sub_1008C7BC4();
    swift_allocObject();
    sub_1001CCEF8(v1, v4, v5 & 1, v6, v8, v7);
  }
  sub_1008C6B8C();
  sub_100182EF8();
}

uint64_t sub_100892740()
{
  sub_100127C8C();
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  uint64_t v3 = sub_100109308(active);
  __chkstk_darwin(v3);
  sub_100162EB8();
  sub_10013C234(v0 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, v0);
  sub_1001A4838();
  sub_1008C5D80();
  uint64_t result = sub_10013C2E8();
  if (!v1)
  {
    sub_1008C72F0();
    sub_1008C2D88();
    sub_1001A4838();
    NotificationAuthorizationState.write(to:)();
    sub_1001825F4();
    return sub_1008C72F0();
  }
  return result;
}

void sub_1008928F4()
{
  uint64_t v0 = sub_100162708();
  type metadata accessor for LocationViewerViewState._Storage(v0);
  sub_1008C6B6C();
  sub_1008925CC();
}

uint64_t sub_100892924()
{
  return sub_100892740();
}

void sub_100892948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_10016314C();
  uint64_t v103 = v15;
  uint64_t v104 = v20;
  uint64_t v98 = v14;
  uint64_t v21 = type metadata accessor for ModalViewState(0);
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  uint64_t v24 = sub_1008C7138(v23, v86);
  uint64_t v25 = sub_100109308(v24);
  __chkstk_darwin(v25);
  uint64_t v102 = (uint64_t)&v86 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100129064();
  type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v100 = v28;
  uint64_t v101 = v27;
  __chkstk_darwin(v27);
  sub_10017FDD0();
  uint64_t v29 = type metadata accessor for TimeState();
  uint64_t v30 = sub_100109308(v29);
  __chkstk_darwin(v30);
  sub_10017C704();
  uint64_t v31 = type metadata accessor for NotificationsOptInState();
  uint64_t v32 = sub_100109308(v31);
  __chkstk_darwin(v32);
  sub_10017F948();
  uint64_t v33 = type metadata accessor for LocationsState();
  uint64_t v34 = sub_100109308(v33);
  __chkstk_darwin(v34);
  sub_100152344();
  uint64_t v35 = type metadata accessor for EnvironmentState();
  uint64_t v36 = sub_100109308(v35);
  __chkstk_darwin(v36);
  sub_100163770();
  type metadata accessor for AppConfiguration();
  sub_100179C0C();
  __chkstk_darwin(v37);
  sub_100166B4C();
  uint64_t v38 = type metadata accessor for AppConfigurationState();
  uint64_t v39 = sub_100109308(v38);
  __chkstk_darwin(v39);
  sub_10008B8C0();
  uint64_t v40 = v103;
  uint64_t v41 = static Set<>.read(from:)();
  if (!v40)
  {
    uint64_t v92 = v17;
    unint64_t v93 = v13;
    uint64_t v103 = v41;
    uint64_t v94 = v14;
    uint64_t v95 = v16;
    uint64_t v96 = v18;
    uint64_t v97 = v19;
    uint64_t v42 = v104;
    int v43 = sub_1008C384C();
    static AppConfiguration.read(from:)();
    sub_1008C7558();
    v44();
    uint64_t v45 = sub_1001D4110();
    sub_1008BFF90(v45, v46, v47, v48, v49, v50, v51, v52, v86, v87, SBYTE1(v87), SBYTE2(v87), SHIBYTE(v87), v88, SBYTE1(v88), SBYTE2(v88), SHIBYTE(v88));
    sub_1008C0C30();
    sub_100899910();
    int v54 = v53;
    uint64_t v56 = v55;
    uint64_t v58 = v57;
    char v105 = v59;
    sub_10089A36C(v42, v55, v57, v59, v60, v61, v62, v63, v86, v87, SBYTE1(v87), SBYTE2(v87), SHIBYTE(v87), v88, SBYTE1(v88), SBYTE2(v88), SHIBYTE(v88));
    uint64_t v91 = v56;
    int v90 = v54;
    static Date.read(from:)();
    int v88 = v43;
    uint64_t v89 = v58;
    sub_1001190D4();
    v64();
    uint64_t v65 = sub_1001D4110();
    sub_1007C6DE4(v65, v66, v67, v68, v69, v70, v71, v72, v86, v87, v88, SBYTE2(v88), SHIBYTE(v88));
    sub_1008C1B40(v42, v73, v74, v75, v76, v77, v78, v79, v86, v87, v88, SBYTE2(v88), SHIBYTE(v88));
    uint64_t v101 = sub_1008C76E0();
    uint64_t v81 = v80;
    type metadata accessor for LocationWeatherDataState(0);
    sub_1008BD0B8((uint64_t)&unk_100E9D3D0);
    sub_1008BD0B8((uint64_t)&unk_100E9D3D8);
    static Dictionary<>.read(from:)();
    uint64_t v82 = sub_1008C7A64();
    type metadata accessor for LocationAvailableDataSetState(v82);
    sub_1008BD0B8((uint64_t)&unk_100E9D3E0);
    sub_1008BD0B8((uint64_t)&unk_100E9D3E8);
    uint64_t v83 = sub_1008C833C();
    sub_1001D1EFC();
    type metadata accessor for WeatherCondition();
    sub_1008BD0B8((uint64_t)&unk_100E9D3F0);
    sub_1008BD0B8((uint64_t)&unk_100E9D3F8);
    uint64_t v100 = sub_1008C833C();
    type metadata accessor for ContentStatusBanner();
    unint64_t v93 = sub_100249728();
    unint64_t v86 = sub_1008C32DC();
    sub_1008C3328();
    sub_1008BD0B8((uint64_t)&unk_100E9D410);
    sub_1008BD0B8((uint64_t)&unk_100E9D418);
    uint64_t v84 = static Dictionary<>.read(from:)();
    swift_allocObject();
    *((void *)&v85 + 1) = v81;
    *(void *)&long long v85 = v101;
    sub_10016E888(v103, v88, v97, v96, v95, v90, v91, v89, v105 & 1, v94, v92, v102, v99, v85, (uint64_t)type metadata accessor for LocationWeatherDataState, v83, a13, v100, v84);
  }
  sub_100163164();
}

void sub_1008932E0()
{
  sub_10016314C();
  uint64_t v8 = sub_1008C6D48();
  uint64_t v9 = type metadata accessor for ModalViewState(v8);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  uint64_t v12 = sub_1008C7138(v11, v27);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_100152444(v14, v28);
  uint64_t v15 = type metadata accessor for TimeState();
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_100166B4C();
  uint64_t v17 = type metadata accessor for NotificationsOptInState();
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  sub_10017E3A0();
  uint64_t v19 = type metadata accessor for LocationsState();
  sub_100162E4C();
  __chkstk_darwin(v20);
  sub_100163E88();
  uint64_t v21 = type metadata accessor for EnvironmentState();
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_10017FDD0();
  uint64_t v23 = type metadata accessor for AppConfigurationState();
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_10012B938();
  swift_bridgeObjectRetain();
  sub_10011958C();
  Set<>.write(to:)();
  if (!v2)
  {
    uint64_t v29 = (int *)v19;
    swift_bridgeObjectRelease();
    sub_1008C6D6C();
    sub_1008C3650();
    uint64_t v25 = v1;
    sub_10013C234(v1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_appConfiguration, v3);
    sub_1008C8238();
    AppConfiguration.write(to:)();
    sub_10013C2E8();
    uint64_t v26 = v1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
    swift_beginAccess();
    sub_10013C234(v26, v0);
    sub_1008C6D6C();
    sub_1008BFD94();
    sub_10013C2E8();
    sub_10013C234(v25 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, v6);
    sub_10017DF08((uint64_t *)&unk_100EADD50);
    sub_1008BD0B8((uint64_t)&unk_100E9D4C8);
    sub_1008BD0B8((uint64_t)&unk_100E9D4D0);
    Optional<A>.write(to:)();
    sub_1008C81F4(*(void *)(v6 + v29[5]));
    type metadata accessor for SavedLocation();
    sub_1008BD0B8((uint64_t)&unk_100E9D4D8);
    sub_1008BD0B8((uint64_t)&unk_100E9D4E0);
    Array<A>.write(to:)();
    type metadata accessor for LocationModel();
    sub_1008BD0B8((uint64_t)&unk_100E9D4E8);
    sub_1008BD0B8((uint64_t)&unk_100E9D4F0);
    Array<A>.write(to:)();
    sub_1008C81F4(*(void *)(v6 + v29[7]));
    type metadata accessor for LocationOfInterest();
    sub_1008BD0B8((uint64_t)&unk_100E9D4F8);
    sub_1008BD0B8((uint64_t)&unk_100E9D500);
    Array<A>.write(to:)();
    type metadata accessor for Location();
    sub_1008BD0B8((uint64_t)&unk_100E9D3A8);
    sub_1008BD0B8((uint64_t)&unk_100E9D3B0);
    Array<A>.write(to:)();
    type metadata accessor for Location.Identifier();
    sub_1008BD0B8((uint64_t)&unk_100E9D508);
    sub_1008BD0B8((uint64_t)&unk_100E9D510);
    Array<A>.write(to:)();
    Dictionary<>.write(to:)();
    Dictionary<>.write(to:)();
    sub_1008C0A04(v4, *(void *)(v6 + v29[12]), *(void *)(v6 + v29[12] + 8), *(unsigned char *)(v6 + v29[12] + 16));
    type metadata accessor for LocationDisplayContext();
    sub_1008BD0B8((uint64_t)&unk_100E9D518);
    sub_1008BD0B8((uint64_t)&unk_100E9D520);
    Dictionary<>.write(to:)();
    sub_10013C2E8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    NotificationAuthorizationState.write(to:)();
    type metadata accessor for NotificationSubscription.Location();
    sub_1008BD0B8((uint64_t)&unk_100E9D4B8);
    sub_1008BD0B8((uint64_t)&unk_100E9D4C0);
    Array<A>.write(to:)();
    Array<A>.write(to:)();
    FixedSizeTypeBinaryCodable.write(to:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10013C234(v25 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn, v7);
    sub_10089A65C();
    sub_10013C2E8();
    sub_10013C234(v25 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v5);
    Date.write(to:)();
    sub_10013C2E8();
    sub_10013C234(v25 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v30);
    sub_1007C6C0C(v4);
    sub_10013C2E8();
    sub_10013C234(v25 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, v31);
    sub_1008C1620();
    sub_10013C2E8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    String.write(to:)();
    type metadata accessor for LocationWeatherDataState(0);
    sub_1008BD0B8((uint64_t)&unk_100E9D3D0);
    sub_1008BD0B8((uint64_t)&unk_100E9D3D8);
    Dictionary<>.write(to:)();
    type metadata accessor for LocationAvailableDataSetState(0);
    sub_1008BD0B8((uint64_t)&unk_100E9D3E0);
    sub_1008BD0B8((uint64_t)&unk_100E9D3E8);
    Dictionary<>.write(to:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    FixedSizeTypeBinaryCodable.write(to:)();
    type metadata accessor for WeatherCondition();
    sub_1008BD0B8((uint64_t)&unk_100E9D3F0);
    sub_1008BD0B8((uint64_t)&unk_100E9D3F8);
    Dictionary<>.write(to:)();
    swift_bridgeObjectRelease();
    type metadata accessor for ContentStatusBanner();
    sub_100249728();
    sub_1008C32DC();
    sub_1008C3328();
    sub_1008BD0B8((uint64_t)&unk_100E9D410);
    sub_1008BD0B8((uint64_t)&unk_100E9D418);
    swift_bridgeObjectRetain();
    Dictionary<>.write(to:)();
  }
  swift_bridgeObjectRelease();
  sub_1002EE5D4();
  sub_100163164();
}

void sub_1008942CC()
{
  uint64_t v0 = sub_100162708();
  type metadata accessor for MainState._Storage(v0);
  uint64_t v1 = sub_1008C6B6C();
  sub_100892948(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, SWORD2(v10), SBYTE6(v10), SHIBYTE(v10));
}

void sub_1008942FC()
{
}

unsigned char *sub_100894320()
{
  uint64_t result = (unsigned char *)sub_100899B44();
  int v2 = (int)result;
  if (!v0)
  {
    unsigned int v3 = result >> 24;
    unsigned int v4 = result >> 8;
    uint64_t result = (unsigned char *)swift_allocObject();
    result[16] = v2;
    result[17] = v4;
    result[18] = BYTE2(v2) & 1;
    result[19] = v3;
  }
  return result;
}

void sub_100894384()
{
}

unsigned char *sub_1008943C4()
{
  uint64_t result = (unsigned char *)sub_100899B44();
  int v2 = (int)result;
  if (!v0)
  {
    unsigned int v3 = result >> 24;
    unsigned int v4 = result >> 8;
    type metadata accessor for NotificationsOptInViewState._Storage();
    uint64_t result = (unsigned char *)swift_allocObject();
    result[16] = v2;
    result[17] = v4;
    result[18] = BYTE2(v2) & 1;
    result[19] = v3;
  }
  return result;
}

void sub_10089442C()
{
}

void sub_10089446C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_10016314C();
  sub_1008C6D48();
  type metadata accessor for URL();
  sub_100179C0C();
  __chkstk_darwin(v15);
  sub_100162F18();
  sub_100214EA0();
  sub_100899CD8(v16);
  if (!v13)
  {
    uint64_t v17 = sub_1001EA9B0();
    uint64_t v19 = v18;
    unsigned int v43 = sub_1008C7BC4();
    uint64_t v20 = sub_1001EA9B0();
    uint64_t v22 = v21;
    uint64_t v35 = v20;
    HIDWORD(v34) = sub_1008C7BC4();
    sub_1008C75C0();
    sub_1008C80CC();
    uint64_t v33 = v23;
    sub_1008C75C0();
    sub_1008C7914();
    uint64_t v31 = v24;
    sub_1008C8078();
    uint64_t v32 = v25;
    HIDWORD(v29) = sub_1008C7BC4();
    sub_100623A7C();
    sub_1008C571C();
    sub_1008C5768();
    uint64_t v28 = sub_1008C7C00();
    sub_1008C57B4();
    sub_1008C5800();
    sub_1008C584C();
    uint64_t v30 = sub_1008C7C00();
    sub_100214EA0();
    static URL.read(from:)();
    sub_1001D1EFC();
    BYTE1(v27) = sub_1008C2DE8() & 1;
    LOBYTE(v27) = a13;
    LOBYTE(v26) = BYTE4(v29);
    swift_allocObject();
    sub_1002DEAEC((uint64_t)v40, v17, v19, v43, v35, v22, HIDWORD(v34), v38, v33, v31, v32, v26, v28, v30, v14, v27, v28, v29, v22,
      v30,
      v31,
      v32,
      v38,
      v33,
      v34,
      v35,
      v36,
      v37,
      v38,
      v39,
      v40[0],
      v40[1],
      v40[2],
      v41,
      v42);
  }
  sub_100191138();
  sub_100163164();
}

void sub_100894868()
{
  sub_10016314C();
  sub_100127C8C();
  type metadata accessor for URL();
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10011C760();
  memcpy(v9, v0 + 2, 0xC2uLL);
  sub_1002E728C((uint64_t)v9);
  sub_1001A4838();
  sub_10089A12C();
  if (v1)
  {
    sub_1002E7344((uint64_t)v9);
  }
  else
  {
    sub_1002E7344((uint64_t)v9);
    uint64_t v3 = v0[27];
    swift_bridgeObjectRetain();
    sub_10011C158();
    if (v3)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1008C72F0();
      uint64_t v4 = v0[30];
      swift_bridgeObjectRetain();
      sub_10011C158();
      sub_1008C7CD0();
      sub_1008C72F0();
      if (!v4)
      {
        sub_10017DF08(&qword_100E65F18);
        Optional<A>.write(to:)();
        Optional<A>.write(to:)();
        sub_1008C72F0();
        sub_100623A7C();
        sub_1008C571C();
        sub_1008C5768();
        swift_bridgeObjectRetain();
        sub_1008C76AC();
        sub_1008C7CD0();
        sub_1008C57B4();
        sub_1008C5800();
        unint64_t v5 = sub_1008C584C();
        swift_bridgeObjectRetain();
        sub_1008C76AC();
        sub_1008C7CD0();
        sub_100162808();
        v6();
        sub_10011B0A0();
        URL.write(to:)();
        if (v5)
        {
          sub_100164FC8();
          v7();
        }
        else
        {
          sub_100164FC8();
          v8();
          sub_1001825F4();
          sub_1008C2D88();
        }
      }
    }
  }
  sub_10018B184();
  sub_100163164();
}

void sub_100894B3C()
{
  uint64_t v0 = sub_100162708();
  type metadata accessor for ReportWeatherContentViewModel._Storage(v0);
  uint64_t v1 = sub_1008C6B6C();
  sub_10089446C(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, SWORD2(v10), SBYTE6(v10), SHIBYTE(v10));
}

void sub_100894B6C()
{
}

uint64_t sub_100894B90()
{
  sub_100896808((uint64_t)v3);
  if (!v1)
  {
    uint64_t v0 = swift_allocObject();
    sub_1002A8CC8((uint64_t)v3, v0 + 16);
  }
  return v0;
}

uint64_t sub_100894BF0()
{
  uint64_t v2 = *(void *)(v0 + 16);
  if (v2 < 0)
  {
    sub_1008C787C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    FixedSizeTypeBinaryCodable.write(to:)();
    if (!v1) {
      sub_10089AB88();
    }
    uint64_t v3 = v2;
  }
  else
  {
    swift_retain();
    FixedSizeTypeBinaryCodable.write(to:)();
    if (!v1) {
      sub_100894868();
    }
    uint64_t v3 = v2;
  }
  return sub_100274E38(v3);
}

uint64_t sub_100894D98()
{
  sub_100896808((uint64_t)v3);
  if (!v1)
  {
    type metadata accessor for ReportWeatherViewState._Storage();
    uint64_t v0 = swift_allocObject();
    sub_1002A8CC8((uint64_t)v3, v0 + 16);
  }
  return v0;
}

uint64_t sub_100894DFC()
{
  return sub_100894BF0();
}

uint64_t static LocationAuthorizationState.read(from:)()
{
  return sub_1008B04C0();
}

uint64_t LocationAuthorizationState.write(to:)()
{
  return sub_1008B058C();
}

void sub_100894E50()
{
  sub_10016314C();
  uint64_t v4 = v3;
  uint64_t v5 = sub_10017DF08(&qword_100E6B670);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_100152344();
  uint64_t v7 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_1008C6E8C();
  static Location.read(from:)();
  if (!v0)
  {
    char v14 = sub_1008C2DE8();
    type metadata accessor for DetailHeroChartLollipopPosition(0);
    sub_1008BD0B8((uint64_t)&unk_100E9D440);
    sub_1008BD0B8((uint64_t)&unk_100E9D448);
    static Optional<A>.read(from:)();
    type metadata accessor for CGRect(0);
    sub_1008BD0B8((uint64_t)&unk_100E9D430);
    sub_1008BD0B8((uint64_t)&unk_100E9D438);
    static Optional<A>.read(from:)();
    __n128 v11 = sub_1008C7F58();
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v9 + 32))(v4, v2, v7, v11);
    uint64_t v12 = (int *)type metadata accessor for AveragesDetailViewState();
    *(unsigned char *)(v4 + v12[5]) = v14 & 1;
    sub_1001278D0(v1, v4 + v12[6], &qword_100E6B670);
    sub_1008C6BB8((__n128 *)(v4 + v12[7]));
    *(void *)(v13 + 16) = v15;
    *(void *)(v13 + 24) = v16;
    *(unsigned char *)(v13 + 32) = v17;
  }
  sub_1001194B0();
  sub_100163164();
}

uint64_t sub_1008950FC()
{
  uint64_t result = sub_1008C8700();
  if (!v0)
  {
    type metadata accessor for AveragesDetailViewState();
    sub_1008C7C40();
    sub_1008C2D88();
    sub_1008C6DA8();
    sub_10017DF08(&qword_100E6B670);
    sub_1008BD0B8((uint64_t)&unk_100E9D440);
    sub_1008BD0B8((uint64_t)&unk_100E9D448);
    sub_1008C6848();
    sub_10018B318(v1 + *(int *)(v2 + 28));
    sub_10017DF08(&qword_100E64498);
    sub_1008BD0B8((uint64_t)&unk_100E9D430);
    sub_1008BD0B8((uint64_t)&unk_100E9D438);
    return sub_10018BF00();
  }
  return result;
}

void sub_100895270()
{
  sub_10016314C();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = sub_10017DF08(&qword_100E639E8);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  uint64_t v9 = sub_100152344();
  uint64_t v10 = type metadata accessor for SearchViewState.ViewState(v9);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_10016279C();
  sub_1008C75D8();
  uint64_t v12 = static String.read(from:)();
  if (!v0)
  {
    uint64_t v14 = v12;
    uint64_t v15 = v13;
    uint64_t v16 = sub_1008C75D8();
    sub_10089554C(v16, v17, v18, v19, v20, v21, v22, v23, v25, v26, SWORD2(v26), SBYTE6(v26), SHIBYTE(v26));
    char v27 = sub_1008C384C();
    type metadata accessor for Location();
    sub_1008BD0B8((uint64_t)&unk_100E9D3A8);
    sub_1008BD0B8((uint64_t)&unk_100E9D3B0);
    sub_1008C820C();
    static Optional<A>.read(from:)();
    *uint64_t v6 = v14;
    v6[1] = v15;
    type metadata accessor for SearchViewState(0);
    sub_1008C7C40();
    sub_1008C5A14(v2, (uint64_t)v6 + v24);
    *((unsigned char *)v6 + *(int *)(v4 + 24)) = v27;
    sub_1001278D0(v1, (uint64_t)v6 + *(int *)(v4 + 28), &qword_100E639E8);
  }
  sub_1001194B0();
  sub_100163164();
}

void sub_100895454()
{
  sub_1008C7358();
  String.write(to:)();
  if (!v0)
  {
    type metadata accessor for SearchViewState(0);
    sub_1001D4110();
    sub_1008957AC();
    sub_1008C7834();
    sub_10017DF08(&qword_100E639E8);
    sub_1008BD0B8((uint64_t)&unk_100E9D3A8);
    sub_1008BD0B8((uint64_t)&unk_100E9D3B0);
    sub_1008C6C50();
  }
}

void sub_10089554C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_1001A69AC();
  sub_1008C6B98();
  type metadata accessor for CodableError();
  sub_100179C0C();
  __chkstk_darwin(v15);
  sub_10011C760();
  sub_1001D1EFC();
  if (!v13)
  {
    switch(a13)
    {
      case 1:
        sub_1008C6AB8();
        static CodableError.read(from:)();
        sub_1008C68CC();
        v16();
        type metadata accessor for SearchViewState.ViewState(0);
        sub_1008C6A80();
        goto LABEL_8;
      case 2:
        type metadata accessor for SearchViewState.ViewState(0);
        sub_1008C72C4();
        goto LABEL_8;
      case 3:
        type metadata accessor for SearchLocation();
        sub_1008BD0B8((uint64_t)&unk_100E9D528);
        sub_1008BD0B8((uint64_t)&unk_100E9D530);
        *uint64_t v14 = sub_1008C79D0();
        type metadata accessor for SearchViewState.ViewState(0);
        sub_1008C6A90();
        goto LABEL_8;
      case 4:
      case 5:
        type metadata accessor for SearchViewState.ViewState(0);
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        type metadata accessor for BinaryDecoder.Error();
        sub_1008BD0B8((uint64_t)&qword_100E95730);
        uint64_t v17 = sub_10017D4A4();
        sub_100183208(v17, v18);
        sub_100162880();
        sub_10017A8E8();
        v19();
        swift_willThrow();
        break;
    }
  }
  sub_1008C6B8C();
  sub_1001847DC();
}

void sub_1008957AC()
{
  sub_10017F304();
  sub_100127C8C();
  type metadata accessor for CodableError();
  sub_100179C0C();
  __chkstk_darwin(v1);
  uint64_t v2 = sub_10011BA28();
  type metadata accessor for SearchViewState.ViewState(v2);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100162EB8();
  sub_1008C74C4();
  switch(sub_1008C86A8())
  {
    case 1u:
      sub_100165320();
      if (!v0)
      {
        type metadata accessor for SearchLocation();
        sub_1008BD0B8((uint64_t)&unk_100E9D528);
        sub_1008BD0B8((uint64_t)&unk_100E9D530);
        sub_1000A9EAC();
      }
      swift_bridgeObjectRelease();
      break;
    case 2u:
    case 3u:
    case 4u:
      sub_100165320();
      break;
    default:
      sub_1001627D4();
      v4();
      sub_100165320();
      if (!v0)
      {
        sub_1008C6AD0();
        CodableError.write(to:)();
      }
      sub_100164F40();
      v5();
      break;
  }
  sub_1008C7994();
  sub_100182EF8();
}

void sub_100895A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_10016314C();
  uint64_t v16 = sub_10008B8A8();
  uint64_t v17 = type metadata accessor for WeatherMapTrackingState(v16);
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  sub_10011BA28();
  type metadata accessor for WeatherMapOverlayKind();
  sub_100179C0C();
  __chkstk_darwin(v19);
  sub_10011C760();
  sub_1008C6B80();
  char v20 = sub_100895D5C();
  if (!v14)
  {
    char v21 = v20;
    sub_1008C6B80();
    char v22 = sub_100895F44();
    sub_1008C6B80();
    static WeatherMapOverlayKind.read(from:)();
    sub_1008C6B80();
    static Optional<A>.read(from:)();
    sub_1008C6B80();
    sub_100896148();
    sub_1008C6724();
    *uint64_t v13 = v21;
    v13[1] = v22;
    uint64_t v23 = (int *)type metadata accessor for WeatherMapPresentationState(0);
    sub_1001191A8();
    v24();
    uint64_t v25 = &v13[v23[7]];
    *uint64_t v25 = v26;
    v25[1] = v27;
    sub_1008C5A14(v15, (uint64_t)&v13[v23[8]]);
    v13[v23[9]] = a13;
  }
  sub_10016EF08();
  sub_100163164();
}

void sub_100895C58(uint64_t a1)
{
  sub_100895E64(a1, *v1);
  if (!v2)
  {
    uint64_t v3 = sub_1008C6790();
    sub_10089606C(v3, v4);
    type metadata accessor for WeatherMapPresentationState(0);
    sub_1008C6790();
    WeatherMapOverlayKind.write(to:)();
    sub_10017DF08(&qword_100E65F18);
    sub_1008C7C9C();
    sub_1008C6790();
    sub_100896380();
    sub_100165320();
  }
}

uint64_t sub_100895D5C()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    sub_1001D2538();
    if (v3)
    {
      return 4;
    }
    else if (v2 == 3)
    {
      return sub_1008C03F8();
    }
    else if (v2 == 2)
    {
      return 5;
    }
    else
    {
      type metadata accessor for BinaryDecoder.Error();
      sub_1008BD0B8((uint64_t)&qword_100E95730);
      uint64_t v4 = sub_10017D4A4();
      sub_100183208(v4, v5);
      sub_100162880();
      sub_10017A8E8();
      v6();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_100895E64(uint64_t a1, char a2)
{
  if (a2 == 5) {
    return FixedSizeTypeBinaryCodable.write(to:)();
  }
  if (a2 == 4)
  {
    sub_1008C7F7C();
    return FixedSizeTypeBinaryCodable.write(to:)();
  }
  uint64_t result = sub_1008C6E14();
  if (!v2) {
    return sub_1008C02E8();
  }
  return result;
}

uint64_t static NotificationAuthorizationState.read(from:)()
{
  return sub_1008C03F8();
}

uint64_t NotificationAuthorizationState.write(to:)()
{
  return sub_1008C02E8();
}

uint64_t sub_100895F44()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    sub_1001D2538();
    if (v3)
    {
      return 128;
    }
    else if (v2 == 3)
    {
      return sub_1008C2DE8() & 1 | 0x40;
    }
    else if (v2 == 2)
    {
      return sub_1008C2DE8() & 1;
    }
    else
    {
      type metadata accessor for BinaryDecoder.Error();
      sub_1008BD0B8((uint64_t)&qword_100E95730);
      uint64_t v4 = sub_10017D4A4();
      sub_100183208(v4, v5);
      sub_100162880();
      sub_10017A8E8();
      v6();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_10089606C(uint64_t a1, unsigned __int8 a2)
{
  if (a2 >> 6 && a2 >> 6 != 1)
  {
    sub_1008C7F7C();
    return sub_1008C7E30();
  }
  else
  {
    uint64_t result = FixedSizeTypeBinaryCodable.write(to:)();
    if (!v2) {
      return sub_1008C2D88();
    }
  }
  return result;
}

uint64_t static ListSessionTrigger.read(from:)()
{
  return sub_1008C2DE8();
}

uint64_t ListSessionTrigger.write(to:)()
{
  return sub_1008C2D88();
}

void sub_100896148()
{
  sub_10017F304();
  sub_1008C6BAC();
  type metadata accessor for WeatherMapOverlayKind();
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_100125FF8();
  sub_1001D1EFC();
  if (!v0)
  {
    sub_1008C73C0();
    switch(v3)
    {
      case 0:
        uint64_t v4 = sub_10017DF08(&qword_100E66460);
        uint64_t v5 = (uint64_t)v1;
        uint64_t v6 = 1;
        goto LABEL_8;
      case 1:
        uint64_t v4 = sub_10017DF08(&qword_100E66460);
        uint64_t v5 = (uint64_t)v1;
        uint64_t v6 = 2;
        goto LABEL_8;
      case 2:
        sub_1001D1EFC();
        static WeatherMapOverlayKind.read(from:)();
        uint64_t v10 = sub_10017DF08(&qword_100E66460);
        *uint64_t v1 = v12;
        sub_1008C68CC();
        v11();
        uint64_t v5 = (uint64_t)v1;
        uint64_t v6 = 0;
        uint64_t v4 = v10;
        goto LABEL_8;
      case 3:
        uint64_t v4 = sub_10017DF08(&qword_100E66460);
        uint64_t v5 = (uint64_t)v1;
        uint64_t v6 = 3;
LABEL_8:
        _s7Weather24LocationCompositionStateOwst_0(v5, v6, 3, v4);
        break;
      default:
        type metadata accessor for BinaryDecoder.Error();
        sub_1008BD0B8((uint64_t)&qword_100E95730);
        uint64_t v7 = sub_10017D4A4();
        sub_100183208(v7, v8);
        sub_100162880();
        sub_10017A8E8();
        v9();
        swift_willThrow();
        break;
    }
  }
  sub_1008C6B8C();
  sub_100182EF8();
}

void sub_100896380()
{
  sub_10017F304();
  sub_100127C8C();
  type metadata accessor for WeatherMapOverlayKind();
  sub_100179C0C();
  __chkstk_darwin(v2);
  uint64_t v3 = sub_10011BA28();
  uint64_t v4 = type metadata accessor for WeatherMapTrackingState(v3);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100162EB8();
  sub_1008C74C4();
  uint64_t v6 = sub_10017DF08(&qword_100E66460);
  switch(_s7Weather24LocationCompositionStateOwet_0(v0, 3, v6))
  {
    case 1u:
    case 2u:
    case 3u:
      sub_1001825F4();
      break;
    default:
      sub_1001627D4();
      v7();
      sub_1001825F4();
      if (!v1)
      {
        sub_1001825F4();
        WeatherMapOverlayKind.write(to:)();
      }
      sub_100164938();
      v8();
      break;
  }
  sub_100182C7C();
  sub_100182EF8();
}

void sub_100896594()
{
  sub_10016314C();
  sub_10012BF4C();
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_1008C6760();
  if (!v1)
  {
    sub_1008C75D8();
    char v3 = sub_1008C2DE8();
    type metadata accessor for CGRect(0);
    sub_1008BD0B8((uint64_t)&unk_100E9D430);
    sub_1008BD0B8((uint64_t)&unk_100E9D438);
    static Optional<A>.read(from:)();
    sub_1008C7F58();
    sub_1008C68CC();
    v4();
    uint64_t v5 = type metadata accessor for AirQualityDetailViewState();
    *(unsigned char *)(v0 + *(int *)(v5 + 20)) = v3 & 1;
    sub_1008C6BB8((__n128 *)(v0 + *(int *)(v5 + 24)));
    *(void *)(v6 + 16) = v7;
    *(void *)(v6 + 24) = v8;
    *(unsigned char *)(v6 + 32) = v9;
  }
  sub_1001194B0();
  sub_100163164();
}

uint64_t sub_100896714()
{
  uint64_t result = Location.write(to:)();
  if (!v1)
  {
    uint64_t v3 = type metadata accessor for AirQualityDetailViewState();
    sub_1008C2D88();
    sub_10018B318(v0 + *(int *)(v3 + 24));
    sub_10017DF08(&qword_100E64498);
    sub_1008BD0B8((uint64_t)&unk_100E9D430);
    sub_1008BD0B8((uint64_t)&unk_100E9D438);
    return sub_10018BF00();
  }
  return result;
}

void sub_100896808(uint64_t a1@<X8>)
{
  sub_10017B3A0();
  if (!v1)
  {
    if (HIBYTE(v26) == 2)
    {
      sub_1008C6AB8();
      sub_10089AA1C(v21);
      uint64_t v12 = v28;
      uint64_t v13 = v29;
      uint64_t v14 = v30;
      uint64_t v15 = v31;
      uint64_t v16 = v32;
      uint64_t v17 = v33;
      long long v19 = v34;
      long long v20 = v35;
      uint64_t v18 = v36;
      unint64_t v11 = v27 | 0x8000000000000000;
      goto LABEL_6;
    }
    if (HIBYTE(v26) == 1)
    {
      type metadata accessor for ReportWeatherContentViewModel._Storage(0);
      uint64_t v3 = sub_1008C6AB8();
      sub_10089446C(v3, v4, v5, v6, v7, v8, v9, v10, v25, v26, SWORD2(v26), SBYTE6(v26), SHIBYTE(v26));
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      uint64_t v17 = 0;
      uint64_t v18 = 0;
      long long v19 = 0uLL;
      long long v20 = 0uLL;
LABEL_6:
      *(void *)a1 = v11;
      *(void *)(a1 + 8) = v12;
      *(void *)(a1 + 16) = v13;
      *(void *)(a1 + 24) = v14;
      *(void *)(a1 + 32) = v15;
      *(void *)(a1 + 40) = v16;
      *(void *)(a1 + 48) = v17;
      *(_OWORD *)(a1 + 56) = v19;
      *(_OWORD *)(a1 + 72) = v20;
      *(void *)(a1 + 88) = v18;
      return;
    }
    type metadata accessor for BinaryDecoder.Error();
    sub_1008BD0B8((uint64_t)&qword_100E95730);
    uint64_t v22 = sub_10017D4A4();
    sub_100183208(v22, v23);
    sub_100162880();
    sub_10017A8E8();
    v24();
    swift_willThrow();
  }
}

uint64_t *sub_100896988()
{
  sub_1008C6C34();
  sub_1002A8CC8(v0, (uint64_t)v4);
  sub_1002A8CC8((uint64_t)v2, (uint64_t)__src);
  if ((__src[0] & 0x8000000000000000) != 0)
  {
    __src[0] &= ~0x8000000000000000;
    memcpy(__dst, __src, sizeof(__dst));
    sub_1008C7F70();
    uint64_t result = (uint64_t *)sub_100165320();
    if (!v1)
    {
      sub_1008C6790();
      return (uint64_t *)sub_10089AB88();
    }
  }
  else
  {
    swift_retain();
    sub_100165320();
    if (!v1)
    {
      sub_1008C6AD0();
      sub_100894868();
    }
    return sub_100620A20(v2);
  }
  return result;
}

void sub_100896A80()
{
  sub_10016314C();
  uint64_t v4 = v3;
  uint64_t v5 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_10016279C();
  uint64_t v7 = sub_10017DF08(&qword_100E67240);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_10011BA28();
  type metadata accessor for Location();
  sub_100179C0C();
  __chkstk_darwin(v9);
  sub_1008C6E08();
  static Location.read(from:)();
  if (!v0)
  {
    uint64_t v14 = v4;
    type metadata accessor for MoonDetailSelectedDate();
    sub_1008BD0B8((uint64_t)&unk_100E9D460);
    sub_1008BD0B8((uint64_t)&unk_100E9D468);
    static Optional<A>.read(from:)();
    type metadata accessor for Date();
    sub_1008C7734();
    type metadata accessor for CGRect(0);
    sub_1008BD0B8((uint64_t)&unk_100E9D430);
    sub_1008BD0B8((uint64_t)&unk_100E9D438);
    static Optional<A>.read(from:)();
    char v10 = sub_1008C384C();
    unint64_t v11 = (int *)type metadata accessor for MoonDetailViewState();
    uint64_t v12 = v14 + v11[7];
    sub_1001190D4();
    v13();
    sub_1001278D0(v2, v14 + v11[5], &qword_100E67240);
    sub_1001278D0(v1, v14 + v11[6], (uint64_t *)&unk_100E73CA0);
    *(void *)uint64_t v12 = v15;
    *(void *)(v12 + 8) = v16;
    *(void *)(v12 + 16) = v17;
    *(void *)(v12 + 24) = v18;
    *(unsigned char *)(v12 + 32) = v19;
    *(unsigned char *)(v14 + v11[8]) = v10;
  }
  sub_100191138();
  sub_100163164();
}

uint64_t sub_100896E0C()
{
  uint64_t result = sub_1008C8700();
  if (!v0)
  {
    type metadata accessor for MoonDetailViewState();
    sub_100214E24();
    sub_10017DF08(&qword_100E67240);
    sub_1008BD0B8((uint64_t)&unk_100E9D460);
    sub_1008BD0B8((uint64_t)&unk_100E9D468);
    sub_1008C6848();
    sub_1008C6DA8();
    sub_10017DF08((uint64_t *)&unk_100E73CA0);
    Optional<A>.write(to:)();
    sub_10018B318(v1 + *(int *)(v2 + 28));
    sub_10017DF08(&qword_100E64498);
    sub_1008BD0B8((uint64_t)&unk_100E9D430);
    sub_1008BD0B8((uint64_t)&unk_100E9D438);
    sub_1008C7428();
    return sub_1008C7834();
  }
  return result;
}

void sub_100896FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_10016314C();
  uint64_t v28 = v16;
  uint64_t v17 = sub_10017DF08(&qword_100E711F8);
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  sub_10016279C();
  uint64_t v19 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v20 = sub_100109308(v19);
  __chkstk_darwin(v20);
  sub_10017F948();
  type metadata accessor for Location();
  sub_100179C0C();
  __chkstk_darwin(v21);
  sub_100152344();
  type metadata accessor for DetailCondition();
  sub_100179C0C();
  __chkstk_darwin(v22);
  sub_1001D40F4();
  static DetailCondition.read(from:)();
  if (!v14)
  {
    static Location.read(from:)();
    type metadata accessor for Date();
    uint64_t v23 = v13;
    sub_1008C75C0();
    type metadata accessor for CGRect(0);
    sub_1008BD0B8((uint64_t)&unk_100E9D430);
    sub_1008BD0B8((uint64_t)&unk_100E9D438);
    static Optional<A>.read(from:)();
    type metadata accessor for DetailChartSelection();
    sub_1008BD0B8((uint64_t)&unk_100E9D450);
    sub_1008BD0B8((uint64_t)&unk_100E9D458);
    static Optional<A>.read(from:)();
    sub_1001D1EFC();
    sub_1008C68CC();
    v24();
    uint64_t v25 = (int *)type metadata accessor for ConditionDetailViewState();
    sub_1008C8408();
    v26();
    sub_1001278D0(v23, v28 + v25[6], (uint64_t *)&unk_100E73CA0);
    uint64_t v27 = v28 + v25[7];
    *(void *)uint64_t v27 = v29;
    *(void *)(v27 + 8) = v30;
    *(void *)(v27 + 16) = v31;
    *(void *)(v27 + 24) = v32;
    *(unsigned char *)(v27 + 32) = v33;
    sub_1001278D0(v15, v28 + v25[8], &qword_100E711F8);
    *(unsigned char *)(v28 + v25[9]) = a13;
  }
  sub_100191138();
  sub_100163164();
}

uint64_t sub_10089741C()
{
  sub_1008C6D78();
  uint64_t result = DetailCondition.write(to:)();
  if (!v0)
  {
    uint64_t v3 = type metadata accessor for ConditionDetailViewState();
    sub_1008C6790();
    Location.write(to:)();
    sub_1008C6DA8();
    sub_10017DF08((uint64_t *)&unk_100E73CA0);
    sub_1008C7C9C();
    sub_10018B318(v1 + *(int *)(v3 + 28));
    sub_10017DF08(&qword_100E64498);
    sub_1008BD0B8((uint64_t)&unk_100E9D430);
    sub_1008BD0B8((uint64_t)&unk_100E9D438);
    sub_1008C85EC();
    Optional<A>.write(to:)();
    sub_10017DF08(&qword_100E711F8);
    sub_1008BD0B8((uint64_t)&unk_100E9D450);
    sub_1008BD0B8((uint64_t)&unk_100E9D458);
    sub_1008C686C();
    return sub_100165320();
  }
  return result;
}

void sub_100897608()
{
  uint64_t v4 = sub_10008B8A8();
  uint64_t v5 = type metadata accessor for LocationPreviewModalViewState(v4);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_10017F948();
  uint64_t v7 = type metadata accessor for PreviewLocation();
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_1001D40F4();
  sub_100127BC8();
  sub_1008BD980();
  if (!v2)
  {
    sub_100127BC8();
    sub_100897780();
    sub_1008C5A14(v3, v0);
    uint64_t v9 = type metadata accessor for LocationPreviewViewState(0);
    sub_1008C5A14(v1, v0 + *(int *)(v9 + 20));
  }
  sub_1008C79A0();
}

void sub_10089772C()
{
  sub_1008BDCB0();
  if (!v0)
  {
    type metadata accessor for LocationPreviewViewState(0);
    sub_1001D4110();
    sub_10089845C();
  }
}

void sub_100897780()
{
  sub_10016314C();
  uint64_t v116 = v0;
  uint64_t v4 = v3;
  uint64_t v108 = v5;
  type metadata accessor for LocationOfInterest();
  sub_100179C0C();
  uint64_t v103 = v7;
  uint64_t v104 = v6;
  __chkstk_darwin(v6);
  uint64_t v115 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = type metadata accessor for HomeAndWorkRefinementViewState();
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_100109314();
  sub_100109338(v10);
  uint64_t v11 = sub_10017DF08(&qword_100E6B670);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_100109328((uint64_t)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v97 = type metadata accessor for AveragesDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_100214F50(v15, v93);
  uint64_t v16 = type metadata accessor for NewsArticle();
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  sub_1002EEBB0(v18, v93);
  uint64_t v19 = type metadata accessor for MoonDetailViewState();
  uint64_t v20 = sub_100109308(v19);
  __chkstk_darwin(v20);
  uint64_t v113 = sub_1008C7190(v21, v93);
  sub_100162E4C();
  __chkstk_darwin(v22);
  sub_1008C673C(v23, v93);
  uint64_t HourPrecipitationDetailViewState = type metadata accessor for NextHourPrecipitationDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v24);
  sub_10018B484(v25, v93);
  type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v106 = v26;
  uint64_t v107 = v27;
  __chkstk_darwin(v26);
  sub_100162EF8();
  uint64_t v111 = v28;
  sub_1001626D4();
  __chkstk_darwin(v29);
  sub_100109770();
  uint64_t v105 = v30;
  sub_1001626D4();
  __chkstk_darwin(v31);
  sub_100109770();
  uint64_t v110 = v32;
  sub_1001626D4();
  __chkstk_darwin(v33);
  uint64_t v109 = (char *)&v93 - v34;
  sub_1001626D4();
  __chkstk_darwin(v35);
  sub_1001CB758();
  uint64_t v36 = type metadata accessor for AirQualityDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v37);
  uint64_t v38 = sub_1008C760C();
  uint64_t v39 = sub_100109308(v38);
  __chkstk_darwin(v39);
  sub_100152344();
  uint64_t v40 = type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v42 = v41;
  __chkstk_darwin(v43);
  sub_10016279C();
  uint64_t v44 = v116;
  static FixedSizeTypeBinaryCodable.read(from:)();
  if (!v44)
  {
    uint64_t v95 = v40;
    uint64_t v116 = v42;
    uint64_t v93 = v2;
    uint64_t v94 = v36;
    uint64_t v45 = v114;
    uint64_t v47 = v112;
    uint64_t v46 = v113;
    sub_1008C73C0();
    switch(v56)
    {
      case 0:
        goto LABEL_15;
      case 1:
        static URL.read(from:)();
        sub_1001190D4();
        v57();
        goto LABEL_15;
      case 2:
        sub_100896FAC(v4, v48, v49, v50, v51, v52, v53, v54, v93, v94, SWORD2(v94), SBYTE6(v94), SHIBYTE(v94));
        sub_1008C5A14(v1, v108);
        goto LABEL_15;
      case 3:
        static Location.read(from:)();
        char v61 = sub_1008C2DE8();
        type metadata accessor for CGRect(0);
        sub_1008BD0B8((uint64_t)&unk_100E9D430);
        sub_1008BD0B8((uint64_t)&unk_100E9D438);
        sub_1008C8420();
        static Optional<A>.read(from:)();
        sub_1008C7B74();
        uint64_t v70 = v119;
        uint64_t v71 = v120;
        unsigned __int8 v72 = v121;
        uint64_t v73 = v93;
        sub_1008C7728();
        sub_1001190D4();
        v74();
        uint64_t v75 = v94;
        *(unsigned char *)(v73 + *(int *)(v94 + 20)) = v61 & 1;
        sub_1008C6BB8((__n128 *)(v73 + *(int *)(v75 + 24)));
        *(void *)(v76 + 16) = v70;
        *(void *)(v76 + 24) = v71;
        *(unsigned char *)(v76 + 32) = v72;
        sub_1008C5A14(v73, v108);
        goto LABEL_15;
      case 4:
        static Location.read(from:)();
        type metadata accessor for CGRect(0);
        sub_1008BD0B8((uint64_t)&unk_100E9D430);
        sub_1008BD0B8((uint64_t)&unk_100E9D438);
        sub_1008C69C4();
        sub_1008C757C();
        sub_1001195A8();
        sub_1001190D4();
        v62();
        sub_1008C7B8C();
        sub_1008C7F38((__n128 *)(v47 + *(int *)(v63 + 20)));
        sub_1008C5A14(v47, v108);
        goto LABEL_15;
      case 5:
        static Location.read(from:)();
        type metadata accessor for CGRect(0);
        sub_1008BD0B8((uint64_t)&unk_100E9D430);
        sub_1008BD0B8((uint64_t)&unk_100E9D438);
        sub_1008C69C4();
        uint64_t v64 = v117;
        uint64_t v65 = v118;
        uint64_t v66 = v119;
        uint64_t v67 = v120;
        LODWORD(v116) = v121;
        char v77 = sub_1008C384C();
        uint64_t v78 = v98;
        sub_1001190D4();
        v79();
        uint64_t v80 = v78 + *(int *)(v46 + 20);
        *(void *)uint64_t v80 = v64;
        *(void *)(v80 + 8) = v65;
        *(void *)(v80 + 16) = v66;
        *(void *)(v80 + 24) = v67;
        *(unsigned char *)(v80 + 32) = v116;
        *(unsigned char *)(v78 + *(int *)(v46 + 24)) = v77;
        sub_1008C5A14(v78, v108);
        goto LABEL_15;
      case 6:
        uint64_t v45 = v55;
        sub_100896A80();
        goto LABEL_11;
      case 7:
        sub_1008C20E0();
LABEL_11:
        sub_1008C5A14(v45, v108);
        goto LABEL_15;
      case 8:
        static Location.read(from:)();
        char v68 = sub_1008C2DE8();
        type metadata accessor for DetailHeroChartLollipopPosition(0);
        sub_1008BD0B8((uint64_t)&unk_100E9D440);
        sub_1008BD0B8((uint64_t)&unk_100E9D448);
        uint64_t v69 = v102;
        static Optional<A>.read(from:)();
        type metadata accessor for CGRect(0);
        sub_1008BD0B8((uint64_t)&unk_100E9D430);
        sub_1008BD0B8((uint64_t)&unk_100E9D438);
        sub_1008C79F4();
        static Optional<A>.read(from:)();
        sub_1008C7B74();
        uint64_t v114 = v120;
        uint64_t v115 = v119;
        unsigned __int8 v85 = v121;
        uint64_t v86 = v96;
        sub_1008C68CC();
        v87();
        uint64_t v88 = v97;
        *(unsigned char *)(v86 + *(int *)(v97 + 20)) = v68 & 1;
        sub_1001278D0(v69, v86 + *(int *)(v88 + 24), &qword_100E6B670);
        sub_1008C6BB8((__n128 *)(v86 + *(int *)(v88 + 28)));
        uint64_t v89 = v114;
        *(void *)(v90 + 16) = v115;
        *(void *)(v90 + 24) = v89;
        *(unsigned char *)(v90 + 32) = v85;
        uint64_t v91 = sub_1001823C8();
        sub_1008C5A14(v91, v92);
        goto LABEL_15;
      case 9:
        static Location.read(from:)();
        static LocationOfInterest.read(from:)();
        type metadata accessor for CGRect(0);
        sub_1008BD0B8((uint64_t)&unk_100E9D430);
        sub_1008BD0B8((uint64_t)&unk_100E9D438);
        sub_1008C69C4();
        sub_1008C757C();
        uint64_t v81 = v99;
        sub_1001190D4();
        v82();
        uint64_t v83 = v100;
        sub_1001190D4();
        v84();
        sub_1008C7F38((__n128 *)(v81 + *(int *)(v83 + 24)));
        sub_1008C5A14(v81, v108);
LABEL_15:
        type metadata accessor for LocationPreviewModalViewState(0);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        type metadata accessor for BinaryDecoder.Error();
        sub_1008BD0B8((uint64_t)&qword_100E95730);
        uint64_t v58 = sub_100166B68();
        sub_1008C6B60(v58, v59);
        sub_100162880();
        sub_1001631E8();
        v60();
        swift_willThrow();
        break;
    }
  }
  sub_100163164();
}

void sub_10089845C()
{
  sub_10016314C();
  uint64_t v44 = v0;
  uint64_t v35 = type metadata accessor for HomeAndWorkRefinementViewState();
  sub_100162E4C();
  __chkstk_darwin(v4);
  uint64_t v36 = sub_1008C7208(v5, v27);
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_1002EEBB0(v7, v28);
  uint64_t v29 = type metadata accessor for NewsArticle();
  sub_100162E4C();
  __chkstk_darwin(v8);
  uint64_t v37 = sub_1008C71BC(v9, v29);
  sub_100162E4C();
  __chkstk_darwin(v10);
  uint64_t v33 = sub_1008C7190(v11, v30);
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_10018B484(v13, v31);
  uint64_t HourPrecipitationDetailViewState = type metadata accessor for NextHourPrecipitationDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v15);
  sub_100129898(v16, v32);
  uint64_t v17 = type metadata accessor for AirQualityDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v18);
  uint64_t v34 = sub_1008C760C();
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v21 = v20;
  type metadata accessor for URL();
  sub_100179C0C();
  __chkstk_darwin(v22);
  uint64_t v23 = sub_100166B4C();
  type metadata accessor for LocationPreviewModalViewState(v23);
  sub_100162E4C();
  __chkstk_darwin(v24);
  sub_10008B8C0();
  sub_10013C234(v44, v3);
  sub_1008C8414();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1008C5A14(v3, v21);
      sub_1008C6B1C();
      if (!v1)
      {
        sub_1008C8120();
        DetailCondition.write(to:)();
        Location.write(to:)();
        sub_10017DF08((uint64_t *)&unk_100E73CA0);
        Optional<A>.write(to:)();
        sub_100166D60(v21 + *(int *)(v34 + 28));
        sub_10017DF08(&qword_100E64498);
        sub_1008BD0B8((uint64_t)&unk_100E9D430);
        sub_1008BD0B8((uint64_t)&unk_100E9D438);
        sub_10018B27C();
        sub_10017DF08(&qword_100E711F8);
        sub_1008BD0B8((uint64_t)&unk_100E9D450);
        sub_1008BD0B8((uint64_t)&unk_100E9D458);
        sub_1008C6C98();
        FixedSizeTypeBinaryCodable.write(to:)();
      }
      goto LABEL_28;
    case 2u:
      sub_1008C5A14(v3, v2);
      sub_1008C6B1C();
      if (!v1)
      {
        Location.write(to:)();
        sub_1008C2D88();
        sub_100166D60(v2 + *(int *)(v17 + 24));
        sub_10017DF08(&qword_100E64498);
        sub_1008BD0B8((uint64_t)&unk_100E9D430);
        sub_1008BD0B8((uint64_t)&unk_100E9D438);
        sub_10018B27C();
      }
      goto LABEL_28;
    case 3u:
      sub_1008C5A14(v3, v38);
      sub_1008C6FBC();
      if (!v1)
      {
        sub_1008C7D50();
        sub_100166D60(v38 + *(int *)(HourPrecipitationDetailViewState + 20));
        sub_10017DF08(&qword_100E64498);
        sub_1008BD0B8((uint64_t)&unk_100E9D430);
        sub_1008BD0B8((uint64_t)&unk_100E9D438);
        sub_100214EDC();
      }
      goto LABEL_28;
    case 4u:
      sub_1008C5A14(v3, v39);
      sub_1008C6FBC();
      if (!v1)
      {
        sub_1008C7D50();
        sub_100166D60(v39 + *(int *)(v33 + 20));
        sub_10017DF08(&qword_100E64498);
        sub_1008BD0B8((uint64_t)&unk_100E9D430);
        sub_1008BD0B8((uint64_t)&unk_100E9D438);
        sub_100214EDC();
        sub_1008C3650();
      }
      goto LABEL_28;
    case 5u:
      sub_1008C5A14(v3, v41);
      sub_1008C6B1C();
      if (!v1)
      {
        Location.write(to:)();
        sub_10017DF08(&qword_100E67240);
        sub_1008BD0B8((uint64_t)&unk_100E9D460);
        sub_1008BD0B8((uint64_t)&unk_100E9D468);
        sub_1008C6C98();
        sub_10017DF08((uint64_t *)&unk_100E73CA0);
        Optional<A>.write(to:)();
        sub_100166D60(v41 + *(int *)(v37 + 28));
        sub_10017DF08(&qword_100E64498);
        sub_1008BD0B8((uint64_t)&unk_100E9D430);
        sub_1008BD0B8((uint64_t)&unk_100E9D438);
        sub_10018B27C();
        sub_1008C3650();
      }
      goto LABEL_28;
    case 6u:
      sub_1008C5A14(v3, v43);
      sub_1008C82FC();
      if (!v1)
      {
        sub_1008C864C();
        sub_1008C864C();
        sub_1008C6DA8();
        sub_10017DF08(&qword_100E749B0);
        Optional<A>.write(to:)();
        Date.write(to:)();
        URL.write(to:)();
        sub_1008C864C();
        sub_1008C864C();
        type metadata accessor for NewsChannel();
        sub_1008C7F4C();
        Optional<A>.write(to:)();
        Array<A>.write(to:)();
        Array<A>.write(to:)();
        type metadata accessor for UUID();
        Array<A>.write(to:)();
      }
      goto LABEL_28;
    case 7u:
      sub_1008C5A14(v3, v42);
      sub_1008C6B1C();
      if (!v1)
      {
        Location.write(to:)();
        sub_1008C2D88();
        sub_10017DF08(&qword_100E6B670);
        sub_1008BD0B8((uint64_t)&unk_100E9D440);
        sub_1008BD0B8((uint64_t)&unk_100E9D448);
        sub_1008C6C98();
        sub_100166D60(v42 + *(int *)(v36 + 28));
        sub_10017DF08(&qword_100E64498);
        sub_1008BD0B8((uint64_t)&unk_100E9D430);
        sub_1008BD0B8((uint64_t)&unk_100E9D438);
        sub_10018B27C();
      }
      goto LABEL_28;
    case 8u:
      sub_1008C5A14(v3, v40);
      sub_1008C6FBC();
      if (!v1)
      {
        sub_1008C7D50();
        LocationOfInterest.write(to:)();
        sub_100166D60(v40 + *(int *)(v35 + 24));
        sub_10017DF08(&qword_100E64498);
        sub_1008BD0B8((uint64_t)&unk_100E9D430);
        sub_1008BD0B8((uint64_t)&unk_100E9D438);
        sub_100214EDC();
      }
LABEL_28:
      sub_10013C2E8();
      break;
    case 9u:
      FixedSizeTypeBinaryCodable.write(to:)();
      break;
    default:
      sub_1001627D4();
      v25();
      sub_1008C82FC();
      if (!v1)
      {
        sub_1008C8120();
        URL.write(to:)();
      }
      sub_100164938();
      v26();
      break;
  }
  sub_1008C754C();
  sub_100163164();
}

void sub_100899390(void *a1@<X8>)
{
  type metadata accessor for Date();
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_100125FF8();
  sub_1007BD11C();
  sub_1008C670C();
  if (!v1)
  {
    static Date.read(from:)();
    sub_1008C670C();
    sub_1008C670C();
    *a1 = v8;
    uint64_t v4 = type metadata accessor for DetailHeroChartLollipopPosition(0);
    sub_1008C68CC();
    v5();
    *(void *)((char *)a1 + *(int *)(v4 + 24)) = v7;
    *(void *)((char *)a1 + *(int *)(v4 + 28)) = v6;
  }
  sub_10018B184();
}

uint64_t sub_100899504()
{
  sub_1008C6C34();
  sub_1007BD11C();
  uint64_t result = sub_100165320();
  if (!v0)
  {
    uint64_t v2 = type metadata accessor for DetailHeroChartLollipopPosition(0);
    sub_1008C6E54();
    sub_1008C74A0(*(int *)(v2 + 24));
    sub_100165320();
    sub_1008C74A0(*(int *)(v2 + 28));
    return sub_100165320();
  }
  return result;
}

uint64_t sub_1008995C8()
{
  return static Set<>.read(from:)();
}

uint64_t sub_100899600()
{
  return Set<>.write(to:)();
}

uint64_t sub_100899638()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    uint64_t result = sub_1008C7E5C(result, v2, v3, v4, v5, v6, v7, v8, v12, v13, SWORD2(v13), SBYTE6(v13), HIBYTE(v13));
    if (result >= 0xA)
    {
      type metadata accessor for BinaryDecoder.Error();
      sub_1008BD0B8((uint64_t)&qword_100E95730);
      uint64_t v9 = sub_10017D4A4();
      sub_100183208(v9, v10);
      sub_100162880();
      sub_10017A8E8();
      v11();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_100899704(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 1:
      sub_1008C7F70();
      break;
    default:
      return FixedSizeTypeBinaryCodable.write(to:)();
  }
  return FixedSizeTypeBinaryCodable.write(to:)();
}

uint64_t sub_1008998B0()
{
  return sub_1008BD458();
}

uint64_t sub_1008998C8()
{
  return sub_1008BD524();
}

uint64_t static MoonPhase.read(from:)()
{
  return sub_1008AC71C();
}

uint64_t MoonPhase.write(to:)()
{
  return sub_1008AC7E8();
}

void sub_100899910()
{
  sub_1001A69AC();
  static NotificationAuthorizationState.read(from:)();
  if (!v0)
  {
    type metadata accessor for NotificationSubscription.Location();
    sub_1008BD0B8((uint64_t)&unk_100E9D4B8);
    sub_1008BD0B8((uint64_t)&unk_100E9D4C0);
    sub_1008C7D88();
    sub_1008C7D88();
    sub_1001D1EFC();
  }
  sub_1001847DC();
}

void sub_100899A38()
{
  sub_1001818B4();
  NotificationAuthorizationState.write(to:)();
  if (!v0)
  {
    type metadata accessor for NotificationSubscription.Location();
    sub_1008BD0B8((uint64_t)&unk_100E9D4B8);
    sub_1008BD0B8((uint64_t)&unk_100E9D4C0);
    sub_1008C7EC8();
    sub_1008C7EC8();
    sub_100186BCC();
  }
  sub_1008C7AE4();
}

uint64_t sub_100899B44()
{
  uint64_t result = sub_1008BD458();
  if (!v0)
  {
    unsigned __int8 v2 = result;
    sub_1008C5684();
    sub_1008C56D0();
    static Optional<A>.read(from:)();
    sub_1001D1EFC();
    sub_1008C6AB8();
    int v3 = sub_1008AC948();
    if (v5) {
      int v4 = 0x10000;
    }
    else {
      int v4 = 0;
    }
    return v4 & 0xFFFFFF00 | (v3 << 24) | (v6 << 8) | v2;
  }
  return result;
}

void sub_100899C14()
{
  sub_1008C7868();
  sub_1008BD524();
  if (!v0)
  {
    sub_10017DF08(&qword_100E86DD8);
    sub_1008C5684();
    sub_1008C56D0();
    Optional<A>.write(to:)();
    sub_100186BCC();
    uint64_t v1 = sub_1001D4110();
    sub_1008ACA58(v1, v2);
  }
  sub_1008C7BA4();
}

void sub_100899CD8(uint64_t a1@<X8>)
{
  uint64_t v3 = static String.read(from:)();
  if (!v1)
  {
    uint64_t v5 = v3;
    uint64_t v6 = v4;
    uint64_t v7 = sub_100214DD8();
    uint64_t v9 = v8;
    sub_1001D1EFC();
    uint64_t v10 = sub_100214DD8();
    uint64_t v12 = v11;
    uint64_t v38 = v10;
    uint64_t v13 = sub_100214DD8();
    uint64_t v36 = v14;
    uint64_t v37 = v12;
    sub_1001D1EFC();
    char v35 = sub_1008C03F8();
    uint64_t v15 = sub_100214DD8();
    uint64_t v34 = v16;
    uint64_t v32 = sub_100214DD8();
    uint64_t v33 = v17;
    sub_1001D1EFC();
    char v31 = sub_100899638();
    uint64_t v29 = sub_100214DD8();
    uint64_t v30 = v18;
    uint64_t v27 = sub_100214DD8();
    uint64_t v28 = v19;
    sub_1001D1EFC();
    char v26 = sub_100899638();
    uint64_t v24 = sub_100214DD8();
    uint64_t v25 = v20;
    sub_100214DD8();
    sub_1001D1EFC();
    sub_100899638();
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v9;
    *(unsigned char *)(a1 + 32) = v43;
    *(void *)(a1 + 40) = v38;
    *(void *)(a1 + 48) = v37;
    *(void *)(a1 + 56) = v13;
    *(void *)(a1 + 64) = v36;
    *(unsigned char *)(a1 + 72) = v42;
    *(unsigned char *)(a1 + 73) = v35;
    *(void *)(a1 + 80) = v15;
    *(void *)(a1 + 88) = v34;
    *(void *)(a1 + 96) = v32;
    *(void *)(a1 + 104) = v33;
    *(unsigned char *)(a1 + 112) = v41;
    *(unsigned char *)(a1 + 113) = v31;
    *(void *)(a1 + 120) = v29;
    *(void *)(a1 + 128) = v30;
    *(void *)(a1 + 136) = v27;
    *(void *)(a1 + 144) = v28;
    *(unsigned char *)(a1 + 152) = v40;
    *(unsigned char *)(a1 + 153) = v26;
    *(void *)(a1 + 160) = v24;
    *(void *)(a1 + 168) = v25;
    sub_1008C80D8();
    *(void *)(a1 + 176) = v22;
    *(void *)(a1 + 184) = v21;
    *(unsigned char *)(a1 + 192) = v39;
    *(unsigned char *)(a1 + 193) = v23;
  }
}

uint64_t sub_10089A12C()
{
  uint64_t result = sub_1008C6AA0();
  if (!v2)
  {
    String.write(to:)();
    sub_1008C6E14();
    String.write(to:)();
    String.write(to:)();
    sub_1008C7390();
    sub_1008C02E8();
    String.write(to:)();
    String.write(to:)();
    sub_1008C7E30();
    sub_100899704(v0, v1[113]);
    String.write(to:)();
    String.write(to:)();
    FixedSizeTypeBinaryCodable.write(to:)();
    sub_100899704(v0, v1[153]);
    String.write(to:)();
    String.write(to:)();
    FixedSizeTypeBinaryCodable.write(to:)();
    return sub_100899704(v0, v1[193]);
  }
  return result;
}

void sub_10089A2D8()
{
}

uint64_t sub_10089A32C(uint64_t a1)
{
  return sub_1008B3B88(a1, (uint64_t (*)(void))&Date.write(to:), (void (*)(void))type metadata accessor for MainStateProcessingContext);
}

void sub_10089A36C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11, char a12, char a13, char a14, char a15, char a16, char a17)
{
  sub_10016314C();
  sub_1008C86EC();
  type metadata accessor for Date();
  sub_100179C0C();
  __chkstk_darwin(v20);
  sub_10016279C();
  sub_1001D1EFC();
  if (!v17)
  {
    sub_1008C6E08();
    uint64_t v21 = static Set<>.read(from:)();
    sub_1001D1EFC();
    sub_1001D1EFC();
    sub_1001D1EFC();
    sub_1001D1EFC();
    static Date.read(from:)();
    sub_1001D1EFC();
    char v22 = sub_1008C384C();
    sub_1001D1EFC();
    sub_1001D1EFC();
    sub_1001D1EFC();
    sub_1001D1EFC();
    sub_1001C6E0C(a17, v21, a16, a15, a14, a13, v18, a12, v19, v22, a11, a10, v24, v23);
  }
  sub_100191138();
  sub_100163164();
}

uint64_t sub_10089A65C()
{
  uint64_t result = FixedSizeTypeBinaryCodable.write(to:)();
  if (!v0)
  {
    sub_1001A4838();
    Set<>.write(to:)();
    sub_1001825F4();
    sub_1001825F4();
    sub_1001825F4();
    sub_1001825F4();
    type metadata accessor for NotificationsOptInState();
    sub_1008C78E0();
    sub_1001825F4();
    sub_1008C72F0();
    sub_1001825F4();
    sub_1001825F4();
    sub_1001825F4();
    return sub_1001825F4();
  }
  return result;
}

uint64_t sub_10089A8A0()
{
  sub_10017B3A0();
  if (!v1)
  {
    sub_1001D2538();
    if (v2)
    {
      sub_1001D4110();
      uint64_t v0 = sub_1008B04C0();
      sub_1008C76E0();
    }
    else
    {
      uint64_t v0 = type metadata accessor for BinaryDecoder.Error();
      sub_1008BD0B8((uint64_t)&qword_100E95730);
      uint64_t v3 = sub_10017D4A4();
      sub_100183208(v3, v4);
      sub_100162880();
      sub_10017A8E8();
      v5();
      swift_willThrow();
    }
  }
  return v0;
}

uint64_t sub_10089A9A0()
{
  uint64_t result = FixedSizeTypeBinaryCodable.write(to:)();
  if (!v0)
  {
    sub_1008B058C();
    sub_100127C2C();
    return String.write(to:)();
  }
  return result;
}

uint64_t sub_10089AA1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1008C2DE8();
  if (!v1)
  {
    char v4 = result;
    uint64_t v5 = sub_100214DD8();
    uint64_t v7 = v6;
    uint64_t v8 = sub_100214DD8();
    uint64_t v10 = v9;
    uint64_t v13 = sub_100214DD8();
    uint64_t v17 = v11;
    sub_1008C5898();
    sub_1008C58E4();
    static Optional<A>.read(from:)();
    uint64_t result = sub_100214DD8();
    *(unsigned char *)a1 = v4 & 1;
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v8;
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v13;
    *(void *)(a1 + 48) = v17;
    *(void *)(a1 + 56) = v14;
    *(void *)(a1 + 64) = v15;
    *(void *)(a1 + 72) = v16;
    *(void *)(a1 + 80) = result;
    *(void *)(a1 + 88) = v12;
  }
  return result;
}

uint64_t sub_10089AB88()
{
  uint64_t result = sub_1008C2D88();
  if (!v1)
  {
    sub_10011C0C4();
    sub_10011C0C4();
    sub_10011C0C4();
    sub_1001278D0(v0 + 56, (uint64_t)v4, &qword_100E8F2B0);
    sub_1001278D0((uint64_t)v4, (uint64_t)&v3, &qword_100E8F2B0);
    sub_10017DF08(&qword_100E8F2B0);
    sub_1008C5898();
    sub_1008C58E4();
    Optional<A>.write(to:)();
    return sub_10011C0C4();
  }
  return result;
}

void sub_10089AC78()
{
  sub_10016314C();
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for LocationOfInterest();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10017C704();
  uint64_t v8 = type metadata accessor for Location();
  sub_100179C0C();
  __chkstk_darwin(v9);
  sub_1001D1640();
  sub_100214E40();
  static Location.read(from:)();
  if (!v0)
  {
    sub_100214E40();
    static LocationOfInterest.read(from:)();
    type metadata accessor for CGRect(0);
    sub_1008BD0B8((uint64_t)&unk_100E9D430);
    sub_1008BD0B8((uint64_t)&unk_100E9D438);
    static Optional<A>.read(from:)();
    sub_1008C7F58();
    sub_1008C7558();
    v10();
    type metadata accessor for HomeAndWorkRefinementViewState();
    sub_1008C7C40();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v3 + v11, v1, v4);
    sub_1008C6BB8((__n128 *)(v3 + *(int *)(v8 + 24)));
    *(void *)(v12 + 16) = v13;
    *(void *)(v12 + 24) = v14;
    *(unsigned char *)(v12 + 32) = v15;
  }
  sub_10016EF08();
  sub_100163164();
}

uint64_t sub_10089AE94()
{
  uint64_t result = sub_1008C8700();
  if (!v0)
  {
    uint64_t v3 = type metadata accessor for HomeAndWorkRefinementViewState();
    sub_1001D4110();
    LocationOfInterest.write(to:)();
    sub_10018B318(v1 + *(int *)(v3 + 24));
    sub_10017DF08(&qword_100E64498);
    sub_1008BD0B8((uint64_t)&unk_100E9D430);
    sub_1008BD0B8((uint64_t)&unk_100E9D438);
    return sub_10018BF00();
  }
  return result;
}

uint64_t sub_10089AF80()
{
  uint64_t result = static FixedSizeTypeBinaryCodable.read(from:)();
  if (!v0)
  {
    if (v6 == 1)
    {
      return 0;
    }
    else if (v6 == 2)
    {
      sub_1001D1EFC();
      return v5;
    }
    else
    {
      type metadata accessor for BinaryDecoder.Error();
      sub_1008BD0B8((uint64_t)&unk_100E95730);
      uint64_t v2 = sub_10017D4A4();
      sub_100183208(v2, v3);
      sub_100162880();
      sub_10017A8E8();
      v4();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_10089B0A8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return FixedSizeTypeBinaryCodable.write(to:)();
  }
  uint64_t result = FixedSizeTypeBinaryCodable.write(to:)();
  if (!v3) {
    return FixedSizeTypeBinaryCodable.write(to:)();
  }
  return result;
}

uint64_t static ExternalSearchQuery.read(from:)()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    sub_1001D2538();
    if (v3)
    {
      return 0;
    }
    else if (v2 == 2)
    {
      return sub_1008C76E0();
    }
    else
    {
      type metadata accessor for BinaryDecoder.Error();
      sub_1008BD0B8((uint64_t)&unk_100E95730);
      uint64_t v4 = sub_10017D4A4();
      sub_100183208(v4, v5);
      sub_100162880();
      sub_10017A8E8();
      v6();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t ExternalSearchQuery.write(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a3) {
    return sub_1008C7390();
  }
  sub_1008C7F70();
  uint64_t result = sub_1008C6E14();
  if (!v3) {
    return sub_1008C7C80();
  }
  return result;
}

void sub_10089B2B8()
{
  sub_1001818B4();
  sub_1008C7EE8();
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_100189DD0();
  __chkstk_darwin(v5);
  sub_10019D2C0();
  __chkstk_darwin(v6);
  uint64_t v7 = static String.read(from:)();
  if (!v1)
  {
    uint64_t v9 = v8;
    uint64_t v13 = v7;
    static Date.read(from:)();
    sub_1008C7B24();
    static Date.read(from:)();
    static Date.read(from:)();
    sub_1007BD11C();
    sub_1008C6724();
    sub_1007BBC7C();
    sub_1007BBCCC();
    static Optional<A>.read(from:)();
    *uint64_t v0 = v13;
    v0[1] = v9;
    uint64_t v10 = type metadata accessor for DetailChartSelection();
    uint64_t v11 = *(void (**)(void))(v3 + 32);
    sub_1001191A8();
    v11();
    sub_1001191A8();
    v11();
    sub_1001191A8();
    v11();
    *(uint64_t *)((char *)v0 + *(int *)(v10 + 32)) = v16;
    uint64_t v12 = (char *)v0 + *(int *)(v10 + 36);
    *(void *)uint64_t v12 = v14;
    unsigned char v12[8] = v15;
  }
  sub_10016EF08();
  sub_100162C04();
}

uint64_t sub_10089B538()
{
  uint64_t result = sub_1008C6AA0();
  if (!v0)
  {
    type metadata accessor for DetailChartSelection();
    sub_1008C6E54();
    sub_1008C6DA8();
    Date.write(to:)();
    sub_1008C6E54();
    sub_1007BD11C();
    sub_100165320();
    sub_10017DF08(&qword_100E66038);
    sub_1007BBC7C();
    sub_1007BBCCC();
    return sub_1008C7450();
  }
  return result;
}

void static AirPollutant.read(from:)()
{
  sub_10016314C();
  uint64_t v1 = type metadata accessor for AirPollutantUnit();
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_100152344();
  type metadata accessor for AirPollutantMeasurement();
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_100166B4C();
  type metadata accessor for AirPollutantKind();
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_1008C7634();
  static AirPollutantKind.read(from:)();
  if (!v0)
  {
    static AirPollutantMeasurement.read(from:)();
    uint64_t v5 = sub_1008C7C34();
    static AirPollutantUnit.read(from:)(v5, v6, v7, v8, v9, v10, v11, v12);
    AirPollutant.init(kind:amount:displayUnit:)();
  }
  sub_1008C6C44();
  sub_100163164();
}

void AirPollutant.write(to:)()
{
  sub_10016314C();
  sub_1008C7A64();
  type metadata accessor for AirPollutantUnit();
  sub_100179C0C();
  uint64_t v8 = v2;
  uint64_t v9 = v3;
  __chkstk_darwin(v2);
  sub_10011BA28();
  type metadata accessor for AirPollutantMeasurement();
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_100163E88();
  type metadata accessor for AirPollutantKind();
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_100187254();
  AirPollutant.kind.getter();
  sub_1008C81DC();
  AirPollutantKind.write(to:)();
  sub_1001629F8();
  v6();
  if (!v0)
  {
    AirPollutant.amount.getter();
    AirPollutantMeasurement.write(to:)();
    sub_10016285C();
    v7();
    AirPollutant.displayUnit.getter();
    AirPollutantUnit.write(to:)();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v8);
  }
  sub_10012B96C();
  sub_100163164();
}

uint64_t static AirPollutantCategory.read(from:)()
{
  uint64_t result = static String.read(from:)();
  if (!v0)
  {
    sub_1001D1EFC();
    sub_10011958C();
    return AirPollutantCategory.init(description:number:)();
  }
  return result;
}

uint64_t AirPollutantCategory.write(to:)()
{
  sub_1008C7DDC();
  AirPollutantCategory.description.getter();
  String.write(to:)();
  if (v0) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  AirPollutantCategory.number.getter();
  return sub_100186BCC();
}

uint64_t static AirPollutantKind.read(from:)()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    sub_1008C67EC();
    switch(v2)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
        sub_100127CEC();
        type metadata accessor for AirPollutantKind();
        sub_100162E4C();
        uint64_t v6 = sub_1001290CC();
        uint64_t result = v7(v6);
        break;
      default:
        type metadata accessor for BinaryDecoder.Error();
        sub_1008BD0B8((uint64_t)&qword_100E95730);
        uint64_t v3 = sub_10017D4A4();
        sub_100183208(v3, v4);
        sub_100162880();
        sub_10017A8E8();
        v5();
        uint64_t result = swift_willThrow();
        break;
    }
  }
  return result;
}

uint64_t AirPollutantKind.write(to:)()
{
  sub_100172494();
  type metadata accessor for AirPollutantKind();
  sub_100179C0C();
  __chkstk_darwin(v0);
  int v2 = sub_10017EA64(v1, v8);
  v3(v2);
  uint64_t v4 = sub_1001821AC();
  int v6 = v5(v4);
  if (v6 == enum case for AirPollutantKind.pm2point5(_:)
    || v6 == enum case for AirPollutantKind.pm10(_:)
    || v6 == enum case for AirPollutantKind.o3(_:)
    || v6 == enum case for AirPollutantKind.ozone(_:)
    || v6 == enum case for AirPollutantKind.no(_:)
    || v6 == enum case for AirPollutantKind.no2(_:)
    || v6 == enum case for AirPollutantKind.nox(_:)
    || v6 == enum case for AirPollutantKind.so2(_:)
    || v6 == enum case for AirPollutantKind.co(_:)
    || v6 == enum case for AirPollutantKind.nmhc(_:)
    || v6 == enum case for AirPollutantKind.nmhcs(_:)
    || v6 == enum case for AirPollutantKind.nh3(_:)
    || v6 == enum case for AirPollutantKind.c6h6(_:)
    || v6 == enum case for AirPollutantKind.trs(_:)
    || v6 == enum case for AirPollutantKind.unknown(_:))
  {
    return sub_100186BCC();
  }
  uint64_t result = sub_1008C679C();
  __break(1u);
  return result;
}

void static AirPollutantUnit.read(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1008B7580(a1, (uint64_t)&enum case for AirPollutantUnit.ppb(_:), (uint64_t)&type metadata accessor for AirPollutantUnit, (uint64_t)&enum case for AirPollutantUnit.microgramsPerM3(_:), a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void AirPollutantUnit.write(to:)()
{
}

void static AirPollutantMeasurement.read(from:)()
{
  sub_1001818B4();
  sub_10017DF08(&qword_100E9D1F8);
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_100109370();
  sub_10017DF08(&qword_100E9D200);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_100162F18();
  sub_1008C6724();
  if (!v0)
  {
    if (v8 == 2)
    {
      sub_1001194D4();
      sub_1001ABC4C(0, &qword_100E957C8);
      sub_100214E40();
      static NSUnitConcentrationMass.read(from:)();
    }
    else
    {
      if (v8 != 1)
      {
        type metadata accessor for BinaryDecoder.Error();
        sub_1008BD0B8((uint64_t)&qword_100E95730);
        uint64_t v5 = sub_100166B68();
        sub_1008C7DD0(v5, v6);
        sub_100162880();
        sub_1001631E8();
        v7();
        swift_willThrow();
        goto LABEL_2;
      }
      sub_1001194D4();
      sub_1001ABC4C(0, &qword_100E957C0);
      sub_100214E40();
      static NSUnitDispersion.read(from:)();
    }
    sub_1008C6D90();
    sub_1001190D4();
    v3();
    sub_100127CEC();
    type metadata accessor for AirPollutantMeasurement();
    sub_100162E4C();
    sub_1001631E8();
    v4();
  }
LABEL_2:
  sub_10016EF08();
  sub_100162C04();
}

void AirPollutantMeasurement.write(to:)()
{
  sub_10016314C();
  sub_10017DF08(&qword_100E9D1F8);
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_100125FF8();
  sub_10017DF08(&qword_100E9D200);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_100163770();
  type metadata accessor for AirPollutantMeasurement();
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_10008B8C0();
  sub_1008C8420();
  sub_100162808();
  v4();
  sub_1008C74AC();
  int v6 = v5();
  if (v6 == enum case for AirPollutantMeasurement.unitDispersion(_:))
  {
    uint64_t v7 = sub_1008C7804();
    v8(v7);
    sub_1001627D4();
    v9();
    FixedSizeTypeBinaryCodable.write(to:)();
    if (!v0)
    {
      sub_1008C7308();
      sub_1008BA04C();
    }
    sub_10016285C();
    v10();
LABEL_9:
    sub_10016EF08();
    sub_100163164();
    return;
  }
  if (v6 == enum case for AirPollutantMeasurement.concentration(_:))
  {
    uint64_t v11 = sub_1008C7804();
    v12(v11);
    sub_1001627D4();
    v13();
    sub_1008C787C();
    FixedSizeTypeBinaryCodable.write(to:)();
    if (!v0) {
      sub_1008BA04C();
    }
    uint64_t v14 = sub_1008C7BB8();
    v15(v14);
    goto LABEL_9;
  }
  _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
}

void static AirQuality.read(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_10016314C();
  uint64_t v85 = v11;
  uint64_t v86 = v15;
  uint64_t v73 = v16;
  uint64_t v17 = type metadata accessor for WeatherMetadata();
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  uint64_t v76 = (char *)v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100129064();
  type metadata accessor for AirQualitySourceKind();
  sub_100179C0C();
  uint64_t v77 = v21;
  uint64_t v78 = v20;
  __chkstk_darwin(v20);
  sub_1008C71E8(v22, v61[0]);
  type metadata accessor for AirQualitySource();
  sub_100179C0C();
  uint64_t v74 = v24;
  uint64_t v75 = v23;
  __chkstk_darwin(v23);
  sub_1008C7234(v25, v61[0]);
  type metadata accessor for AirQualityPreviousDayComparison();
  sub_100179C0C();
  uint64_t v79 = v27;
  uint64_t v80 = v26;
  __chkstk_darwin(v26);
  sub_10017225C(v28, v61[0]);
  uint64_t v29 = sub_10017DF08(&qword_100E7B2D8);
  uint64_t v30 = sub_100109308(v29);
  __chkstk_darwin(v30);
  sub_1008C7254(v31, v61[0]);
  sub_100179C0C();
  uint64_t v81 = v32;
  uint64_t v82 = v33;
  __chkstk_darwin(v32);
  sub_100152444(v34, v61[0]);
  uint64_t v35 = sub_10017DF08(&qword_100E9D208);
  uint64_t v36 = sub_100109308(v35);
  __chkstk_darwin(v36);
  sub_10017F948();
  uint64_t v37 = type metadata accessor for AirQualityScaleCategory();
  sub_100179C0C();
  uint64_t v83 = v38;
  __chkstk_darwin(v39);
  uint64_t v40 = sub_1008C7650();
  sub_100179C0C();
  uint64_t v84 = v41;
  __chkstk_darwin(v42);
  uint64_t v43 = sub_100158504();
  sub_100179C0C();
  uint64_t v45 = v44;
  __chkstk_darwin(v46);
  sub_100189DD0();
  __chkstk_darwin(v47);
  sub_1008C7FFC();
  uint64_t v48 = v85;
  static Date.read(from:)();
  if (!v48)
  {
    uint64_t v67 = v10;
    uint64_t v69 = v12;
    uint64_t v68 = v37;
    uint64_t v85 = v14;
    uint64_t v71 = v13;
    uint64_t v70 = v40;
    uint64_t v72 = v43;
    static Date.read(from:)();
    uint64_t v49 = static String.read(from:)();
    uint64_t v51 = v50;
    sub_10019D15C();
    static AirQualityScale.read(from:)();
    uint64_t v66 = v45;
    sub_1008C6FE8();
    uint64_t v65 = v49;
    uint64_t v64 = a10;
    sub_1008C7B98();
    static AirQualityScaleCategory.read(from:)();
    uint64_t v63 = v51;
    sub_1008C6FE8();
    int v62 = v87;
    type metadata accessor for ProviderAttribution();
    sub_1008BD0B8((uint64_t)&unk_100E9D210);
    sub_1008BD0B8((uint64_t)&unk_100E9D218);
    static Optional<A>.read(from:)();
    static URL.read(from:)();
    type metadata accessor for AirPollutant();
    unint64_t v52 = sub_1008BD0B8((uint64_t)&unk_100E9D220);
    sub_1008BD0B8((uint64_t)&unk_100E9D228);
    v61[1] = v52;
    static Dictionary<>.read(from:)();
    static Optional<A>.read(from:)();
    sub_1008C82D0();
    static AirQualityPreviousDayComparison.read(from:)();
    uint64_t v53 = sub_1008C82D0();
    static AirQualitySourceKind.read(from:)(v53, v54, v55, v56, v57, v58, v59, v60);
    sub_1008C82D0();
    static String.read(from:)();
    AirQualitySource.init(kind:description:)();
    sub_1008C82D0();
    static WeatherMetadata.read(from:)();
    sub_1008C80CC();
    AirQuality.init(measurementDate:expirationDate:scaleIdentifier:scale:index:currentScaleCategory:isSignificant:providerAttribution:learnMoreURL:pollutants:primaryPollutant:previousDayComparison:source:metadata:)();
  }
  sub_100163164();
}

void AirQuality.write(to:)()
{
  sub_10016314C();
  uint64_t v44 = v2;
  uint64_t v45 = v4;
  v42[4] = type metadata accessor for WeatherMetadata();
  sub_100179C0C();
  v42[3] = v5;
  __chkstk_darwin(v6);
  sub_100109314();
  v42[5] = v7;
  type metadata accessor for AirQualitySource();
  sub_100179C0C();
  v42[6] = v9;
  v42[7] = v8;
  __chkstk_darwin(v8);
  v42[8] = (uint64_t)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AirQualityPreviousDayComparison();
  sub_100179C0C();
  v42[9] = v12;
  v42[10] = v11;
  __chkstk_darwin(v11);
  sub_100163F64(v13, v42[0]);
  v42[12] = sub_10017DF08(&qword_100E7B2D8);
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_10018B484(v15, v42[0]);
  type metadata accessor for URL();
  sub_100179C0C();
  v42[14] = v17;
  v42[15] = v16;
  __chkstk_darwin(v16);
  sub_100182904(v18, v42[0]);
  v42[17] = sub_10017DF08(&qword_100E9D208);
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_100128A8C(v20, v42[0]);
  uint64_t v21 = type metadata accessor for AirQualityScaleCategory();
  sub_100179C0C();
  v42[19] = v22;
  __chkstk_darwin(v23);
  uint64_t v24 = sub_1008C7650();
  sub_100179C0C();
  v42[20] = v25;
  __chkstk_darwin(v26);
  sub_10018AF2C();
  sub_100179C0C();
  uint64_t v28 = v27;
  __chkstk_darwin(v29);
  sub_1001190EC();
  __chkstk_darwin(v30);
  sub_1008C7FA8();
  uint64_t v43 = v1;
  AirQuality.measurementDate.getter();
  uint64_t v31 = v44;
  Date.write(to:)();
  if (v31)
  {
    sub_1001649A8();
    v32();
  }
  else
  {
    v42[2] = v0;
    uint64_t v44 = v24;
    v42[1] = v3;
    v42[0] = v21;
    uint64_t v33 = *(void (**)(void))(v28 + 8);
    sub_1001649A8();
    v33();
    sub_1008C6AC4();
    AirQuality.expirationDate.getter();
    sub_1008C7E68();
    Date.write(to:)();
    sub_1001649A8();
    v33();
    if (!v0)
    {
      sub_1008C6AC4();
      AirQuality.scaleIdentifier.getter();
      sub_10012BA14();
      swift_bridgeObjectRelease();
      AirQuality.scale.getter();
      AirQualityScale.write(to:)();
      sub_1008C8290();
      sub_100162F0C();
      v35();
      sub_1008C6AC4();
      AirQuality.index.getter();
      sub_100186BCC();
      sub_1008C6AC4();
      AirQuality.currentScaleCategory.getter();
      sub_1008C7E68();
      AirQualityScaleCategory.write(to:)();
      sub_1008C7C4C();
      sub_100162F0C();
      v36();
      sub_1008C6AC4();
      char v46 = AirQuality.isSignificant.getter() & 1;
      sub_100186BCC();
      uint64_t v37 = v42[18];
      sub_1008C6AC4();
      AirQuality.providerAttribution.getter();
      sub_1008BD0B8((uint64_t)&unk_100E9D210);
      sub_1008BD0B8((uint64_t)&unk_100E9D218);
      Optional<A>.write(to:)();
      sub_1008C59C8(v37, (uint64_t)&qword_100E9D208);
      sub_1008C6AC4();
      AirQuality.learnMoreURL.getter();
      URL.write(to:)();
      sub_100162F0C();
      v38();
      sub_1008C6AC4();
      AirQuality.pollutants.getter();
      sub_100162708();
      type metadata accessor for AirPollutant();
      sub_1008BD0B8((uint64_t)&unk_100E9D220);
      sub_1008BD0B8((uint64_t)&unk_100E9D228);
      sub_1008C83BC();
      Dictionary<>.write(to:)();
      swift_bridgeObjectRelease();
      uint64_t v39 = v42[13];
      sub_1008C6AC4();
      AirQuality.primaryPollutant.getter();
      Optional<A>.write(to:)();
      sub_1008C59C8(v39, (uint64_t)&qword_100E7B2D8);
      sub_1008C6AC4();
      AirQuality.previousDayComparison.getter();
      sub_10011BA44();
      AirQualityPreviousDayComparison.write(to:)();
      sub_100162F0C();
      v40();
      AirQuality.source.getter();
      sub_10011BA44();
      AirQualitySource.write(to:)();
      sub_1008C7790();
      sub_100162F0C();
      v41();
      AirQuality.metadata.getter();
      sub_10011BA44();
      WeatherMetadata.write(to:)();
      sub_10012BF98();
      sub_100162F0C();
      v34();
    }
  }
  sub_1001194B0();
  sub_100163164();
}

#error "10089D648: call analysis failed (funcsize=106)"

void AirQualityData.write(to:)()
{
  sub_10016314C();
  sub_100127C8C();
  type metadata accessor for AirQuality();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10011BA28();
  type metadata accessor for AirQualityData();
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10019AEB0();
  v3();
  sub_1008C74AC();
  int v5 = v4();
  if (v5 == enum case for AirQualityData.available(_:))
  {
    uint64_t v6 = sub_1008C7E18();
    v7(v6);
    sub_1001627D4();
    v8();
    sub_1008C73CC();
    sub_100165320();
    if (!v0)
    {
      sub_1008C6AD0();
      AirQuality.write(to:)();
    }
    sub_100164F40();
    v9();
    goto LABEL_10;
  }
  if (v5 == enum case for AirQualityData.temporarilyUnavailable(_:))
  {
    sub_1008C6EC0();
LABEL_9:
    sub_100165320();
LABEL_10:
    sub_10016EF08();
    sub_100163164();
    return;
  }
  if (v5 == enum case for AirQualityData.unsupported(_:))
  {
    sub_1008C6E48();
    goto LABEL_9;
  }
  sub_1008C679C();
  __break(1u);
}

uint64_t static AirQualityPreviousDayComparison.read(from:)()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    sub_1008C67EC();
    switch(v2)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        sub_100127CEC();
        type metadata accessor for AirQualityPreviousDayComparison();
        sub_100162E4C();
        uint64_t v6 = sub_1001290CC();
        uint64_t result = v7(v6);
        break;
      default:
        type metadata accessor for BinaryDecoder.Error();
        sub_1008BD0B8((uint64_t)&qword_100E95730);
        uint64_t v3 = sub_10017D4A4();
        sub_100183208(v3, v4);
        sub_100162880();
        sub_10017A8E8();
        v5();
        uint64_t result = swift_willThrow();
        break;
    }
  }
  return result;
}

uint64_t AirQualityPreviousDayComparison.write(to:)()
{
  sub_100172494();
  type metadata accessor for AirQualityPreviousDayComparison();
  sub_100179C0C();
  __chkstk_darwin(v0);
  int v2 = sub_10017EA64(v1, v8);
  v3(v2);
  uint64_t v4 = sub_1001821AC();
  int v6 = v5(v4);
  if (v6 == enum case for AirQualityPreviousDayComparison.muchWorse(_:)
    || v6 == enum case for AirQualityPreviousDayComparison.worse(_:)
    || v6 == enum case for AirQualityPreviousDayComparison.same(_:)
    || v6 == enum case for AirQualityPreviousDayComparison.better(_:)
    || v6 == enum case for AirQualityPreviousDayComparison.muchBetter(_:)
    || v6 == enum case for AirQualityPreviousDayComparison.unknown(_:))
  {
    return sub_100186BCC();
  }
  uint64_t result = sub_1008C679C();
  __break(1u);
  return result;
}

void static AirQualityScale.read(from:)()
{
  sub_10016314C();
  uint64_t v1 = type metadata accessor for AirQualityScaleGradient();
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_100162F18();
  sub_1001EA9B0();
  if (!v0)
  {
    sub_1001EA9B0();
    sub_1008C75C0();
    sub_1008C75C0();
    sub_1001EA9B0();
    sub_1001D1EFC();
    sub_100214EA0();
    static Range<>.read(from:)();
    type metadata accessor for AirQualityScaleCategory();
    sub_1008BD0B8((uint64_t)&unk_100E9D230);
    sub_1008BD0B8((uint64_t)&unk_100E9D238);
    static Array<A>.read(from:)();
    type metadata accessor for AirQualityScaleGradientStop();
    sub_1008BD0B8((uint64_t)&unk_100E9D240);
    sub_1008BD0B8((uint64_t)&unk_100E9D248);
    sub_10011958C();
    static Array<A>.read(from:)();
    AirQualityScaleGradient.init(stops:)();
    sub_1008C7570();
    AirQualityScale.init(identifier:displayName:shortDisplayName:longDisplayName:displayLabel:isNumerical:range:categories:gradient:)();
  }
  sub_100191138();
  sub_100163164();
}

void AirQualityScale.write(to:)()
{
  sub_10016314C();
  sub_1008C6D48();
  type metadata accessor for AirQualityScaleGradient();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10016279C();
  AirQualityScale.identifier.getter();
  sub_1001502D0();
  if (v0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    AirQualityScale.displayName.getter();
    sub_1001502D0();
    swift_bridgeObjectRelease();
    AirQualityScale.shortDisplayName.getter();
    sub_10017DF08(&qword_100E65F18);
    sub_1008C8688();
    swift_bridgeObjectRelease();
    AirQualityScale.longDisplayName.getter();
    sub_1008C8688();
    swift_bridgeObjectRelease();
    AirQualityScale.displayLabel.getter();
    sub_1001502D0();
    swift_bridgeObjectRelease();
    AirQualityScale.isNumerical.getter();
    FixedSizeTypeBinaryCodable.write(to:)();
    AirQualityScale.range.getter();
    sub_10017DF08(&qword_100E7FD68);
    sub_1008C6DB4();
    Range<>.write(to:)();
    AirQualityScale.categories.getter();
    sub_100162708();
    type metadata accessor for AirQualityScaleCategory();
    sub_1008BD0B8((uint64_t)&unk_100E9D230);
    sub_1008BD0B8((uint64_t)&unk_100E9D238);
    sub_10019DE68();
    Array<A>.write(to:)();
    sub_1001195EC();
    AirQualityScale.gradient.getter();
    AirQualityScaleGradient.stops.getter();
    type metadata accessor for AirQualityScaleGradientStop();
    sub_1008BD0B8((uint64_t)&unk_100E9D240);
    sub_1008BD0B8((uint64_t)&unk_100E9D248);
    sub_1008C77E8();
    sub_1001195EC();
    sub_100164FC8();
    v2();
  }
  sub_10016EF08();
  sub_100163164();
}

uint64_t static AirQualityScaleCategory.read(from:)()
{
  uint64_t result = static String.read(from:)();
  if (!v0)
  {
    sub_1001D1EFC();
    sub_100214DD8();
    static Optional<A>.read(from:)();
    static Range<>.read(from:)();
    static Optional<A>.read(from:)();
    sub_100119464();
    return AirQualityScaleCategory.init(description:number:color:recommendation:range:glyph:)();
  }
  return result;
}

void AirQualityScaleCategory.write(to:)()
{
  sub_1008C7868();
  sub_1008C7358();
  AirQualityScaleCategory.description.getter();
  sub_10012BA14();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    AirQualityScaleCategory.number.getter();
    sub_100186BCC();
    AirQualityScaleCategory.color.getter();
    sub_10012BA14();
    swift_bridgeObjectRelease();
    AirQualityScaleCategory.recommendation.getter();
    sub_10017DF08(&qword_100E65F18);
    sub_1008C85F8();
    swift_bridgeObjectRelease();
    AirQualityScaleCategory.range.getter();
    sub_10017DF08(&qword_100E7FD68);
    sub_1001D4110();
    Range<>.write(to:)();
    AirQualityScaleCategory.glyph.getter();
    sub_1008C85F8();
  }
  swift_bridgeObjectRelease();
  sub_1008C7BA4();
}

uint64_t static AirQualityScaleGradient.read(from:)()
{
  sub_10008B8A8();
  type metadata accessor for AirQualityScaleGradientStop();
  sub_1008BD0B8((uint64_t)&unk_100E9D240);
  sub_1008BD0B8((uint64_t)&unk_100E9D248);
  uint64_t result = sub_10019C304();
  if (!v0) {
    return AirQualityScaleGradient.init(stops:)();
  }
  return result;
}

uint64_t AirQualityScaleGradient.write(to:)()
{
  return sub_1008C7DE8();
}

uint64_t static AirQualityScaleGradientStop.read(from:)()
{
  sub_1008C7DC4();
  uint64_t result = static FixedSizeTypeBinaryCodable.read(from:)();
  if (!v0)
  {
    static String.read(from:)();
    return AirQualityScaleGradientStop.init(location:color:)();
  }
  return result;
}

uint64_t AirQualityScaleGradientStop.write(to:)()
{
  sub_1008C7358();
  AirQualityScaleGradientStop.location.getter();
  uint64_t result = sub_100186BCC();
  if (!v0)
  {
    AirQualityScaleGradientStop.color.getter();
    sub_10012BA14();
    return sub_1008C7DE8();
  }
  return result;
}

void static AirQualitySource.read(from:)()
{
  sub_10008B8A8();
  type metadata accessor for AirQualitySourceKind();
  sub_100179C0C();
  __chkstk_darwin(v1);
  uint64_t v2 = sub_1008C6DB4();
  static AirQualitySourceKind.read(from:)(v2, v3, v4, v5, v6, v7, v8, v9);
  if (!v0)
  {
    sub_1008C6DB4();
    static String.read(from:)();
    sub_1008C8450();
    AirQualitySource.init(kind:description:)();
  }
  sub_1008C79A0();
}

void AirQualitySource.write(to:)()
{
  sub_1001A69AC();
  sub_100172494();
  type metadata accessor for AirQualitySourceKind();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10017F5D8();
  AirQualitySource.kind.getter();
  AirQualitySourceKind.write(to:)();
  sub_100164938();
  v2();
  if (!v0)
  {
    AirQualitySource.description.getter();
    sub_10012BA14();
    sub_1008C7DE8();
  }
  sub_1008C6B8C();
  sub_1001847DC();
}

void static AirQualitySourceKind.read(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1008B7290(a1, (uint64_t)&enum case for AirQualitySourceKind.modeled(_:), (uint64_t)&type metadata accessor for AirQualitySourceKind, (uint64_t)&enum case for AirQualitySourceKind.station(_:), (uint64_t)&enum case for AirQualitySourceKind.unknown(_:), a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void AirQualitySourceKind.write(to:)()
{
}

uint64_t static AvailableDataSets.read(from:)()
{
  uint64_t result = static FixedSizeTypeBinaryCodable.read(from:)();
  if (!v0) {
    return AvailableDataSets.init(rawValue:)();
  }
  return result;
}

uint64_t AvailableDataSets.write(to:)()
{
  return sub_100186BCC();
}

uint64_t static CurrentWeather.read(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v135 = a1;
  uint64_t v115 = a2;
  uint64_t v7 = type metadata accessor for WeatherMetadata();
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v113 = sub_1008C692C(v9);
  sub_100179C0C();
  uint64_t v109 = v10;
  __chkstk_darwin(v11);
  sub_100109314();
  sub_100109338(v12);
  uint64_t v108 = sub_10017DF08(&qword_100E6B648);
  sub_100179C0C();
  uint64_t v107 = v13;
  __chkstk_darwin(v14);
  sub_100109314();
  uint64_t v112 = sub_1008C6948(v15);
  sub_100179C0C();
  uint64_t v111 = v16;
  __chkstk_darwin(v17);
  sub_100109338((uint64_t)v97 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = sub_10017DF08(qword_100E65268);
  uint64_t v20 = sub_100109308(v19);
  __chkstk_darwin(v20);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v21);
  sub_100128F8C();
  uint64_t v116 = sub_1008C6BC4(v22);
  sub_100179C0C();
  uint64_t v117 = v23;
  __chkstk_darwin(v24);
  uint64_t v118 = sub_1008C6BE0((uint64_t)v97 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100179C0C();
  uint64_t v119 = v26;
  __chkstk_darwin(v27);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v28);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v29);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v30);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v31);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v32);
  sub_100128F8C();
  sub_100109328(v33);
  uint64_t v120 = type metadata accessor for PrecipitationAmount();
  sub_100179C0C();
  uint64_t v121 = v34;
  __chkstk_darwin(v35);
  sub_100179C90();
  __chkstk_darwin(v36);
  sub_100128F8C();
  uint64_t v122 = v37;
  uint64_t v123 = type metadata accessor for PressureTrend();
  sub_100179C0C();
  uint64_t v124 = v38;
  __chkstk_darwin(v39);
  sub_100109314();
  sub_100109338(v40);
  uint64_t v125 = sub_10017DF08(&qword_100E6BED0);
  sub_100179C0C();
  uint64_t v126 = v41;
  __chkstk_darwin(v42);
  sub_100109338((uint64_t)v97 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10017DF08(&qword_100E6D0A8);
  sub_100179C0C();
  uint64_t v127 = v44;
  uint64_t v128 = v45;
  __chkstk_darwin(v44);
  uint64_t v129 = (char *)v97 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  uint64_t v130 = v47;
  uint64_t v131 = v48;
  __chkstk_darwin(v47);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v49);
  sub_100164000();
  __chkstk_darwin(v50);
  uint64_t v51 = sub_1008C7F88();
  sub_100179C0C();
  uint64_t v132 = v52;
  __chkstk_darwin(v53);
  sub_10017F948();
  uint64_t v54 = type metadata accessor for CloudCoverByAltitude();
  sub_100179C0C();
  uint64_t v133 = v55;
  __chkstk_darwin(v56);
  uint64_t v57 = sub_1008C6A58();
  sub_100179C0C();
  uint64_t v59 = v58;
  __chkstk_darwin(v60);
  sub_100187254();
  uint64_t v61 = v134;
  uint64_t result = static Date.read(from:)();
  if (v61) {
    return result;
  }
  uint64_t v99 = v5;
  uint64_t v100 = v4;
  uint64_t v102 = v3;
  uint64_t v101 = v51;
  uint64_t v104 = v6;
  uint64_t v103 = v54;
  uint64_t v105 = v2;
  uint64_t v106 = v57;
  uint64_t v134 = v59;
  sub_1008C6FE8();
  sub_1008C6FE8();
  sub_1008C6FE8();
  sub_1008C6FE8();
  static CloudCoverByAltitude.read(from:)();
  uint64_t v63 = v102;
  sub_1008C7B24();
  static WeatherCondition.read(from:)();
  v97[0] = static String.read(from:)();
  v97[1] = v64;
  sub_1008C6FE8();
  sub_1001D4084();
  uint64_t v65 = v132;
  uint64_t v66 = v101;
  sub_1001ABC4C(0, (unint64_t *)&qword_100E659A0);
  uint64_t v67 = v98;
  static NSUnitTemperature.read(from:)();
  sub_1001D4084();
  if (v67)
  {
    sub_100184588();
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v63, v66);
    sub_1008C849C();
    sub_100162F0C();
    v68();
    sub_1008C7D6C();
LABEL_6:
    sub_100162F0C();
    return v69();
  }
  Measurement.init(value:unit:)();
  uint64_t v70 = v98;
  static FixedSizeTypeBinaryCodable.read(from:)();
  sub_1001D4084();
  if (v70)
  {
    sub_100184588();
LABEL_10:
    (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v100, v130);
LABEL_11:
    sub_100162F0C();
    v71();
    sub_100162F0C();
    v72();
    sub_1008C75A4();
    goto LABEL_6;
  }
  sub_1001260F8();
  sub_1001D4084();
  sub_1001ABC4C(0, (unint64_t *)&qword_100E6BF18);
  sub_1008C72B0();
  static NSUnitSpeed.read(from:)();
  sub_1001D4084();
  Measurement.init(value:unit:)();
  sub_1001260F8();
  sub_1001D4084();
  sub_1001ABC4C(0, &qword_100E6BF30);
  sub_1008C72B0();
  static NSUnitPressure.read(from:)();
  sub_1001D4084();
  Measurement.init(value:unit:)();
  uint64_t v74 = sub_1008C6F50();
  static PressureTrend.read(from:)(v74, v75, v76, v77, v78, v79, v80, v81);
  sub_1008C8078();
  static PrecipitationAmount.read(from:)();
  static PrecipitationAmount.read(from:)();
  sub_1008C6964();
  sub_1008C6964();
  sub_1008C6964();
  sub_1008C6964();
  sub_1008C6964();
  sub_1008C6964();
  sub_10011CDC4();
  static ApparentPrecipitationIntensity.read(from:)(v135);
  sub_1001D4084();
  uint64_t v82 = v98;
  static FixedSizeTypeBinaryCodable.read(from:)();
  sub_1001D4084();
  if (v82)
  {
    sub_100184588();
    sub_1008C68C0();
    v83();
    uint64_t v84 = *(void (**)(void))(v119 + 8);
    sub_1001629EC();
    v84();
    sub_1008C7B80();
    sub_1001629EC();
    v84();
    sub_1008C6EE0();
    sub_1001629EC();
    v84();
    sub_1008C78D4();
    sub_1001629EC();
    v84();
    sub_1008C7E00();
    sub_1001629EC();
    v84();
    sub_1008C78B0();
    sub_1001629EC();
    v84();
    uint64_t v85 = *(void (**)(void))(v121 + 8);
    sub_1008C7080();
    sub_1001629EC();
    v85();
    sub_1008C7908();
    sub_1001629EC();
    v85();
    sub_100162F0C();
    v86();
    sub_100162F0C();
    v87();
    sub_100162F0C();
    v73();
    goto LABEL_10;
  }
  sub_1001260F8();
  sub_1001D4084();
  sub_1008C8468();
  sub_1001D4084();
  Measurement.init(value:unit:)();
  sub_1001260F8();
  sub_1001D4084();
  sub_1008C8468();
  sub_1001D4084();
  sub_1008C8444();
  Measurement.init(value:unit:)();
  sub_1008BD13C((uint64_t)&unk_100E9D250);
  sub_1008BD13C((uint64_t)&unk_100E9D268);
  sub_1008C6F24();
  sub_1001D4084();
  sub_1008C6F24();
  sub_1001D4084();
  sub_1001260F8();
  sub_1001D4084();
  uint64_t v94 = v136;
  uint64_t v95 = *(void *)(v93 - 256);
  static LocationAuthorizationState.read(from:)();
  sub_1001D4084();
  if (v95)
  {
    sub_100184588();
    sub_1008C59C8(v110, (uint64_t)qword_100E65268);
    sub_1008C59C8(v114, (uint64_t)qword_100E65268);
    uint64_t v96 = *(void (**)(void))(v131 + 8);
    sub_1001629F8();
    v96();
    sub_1001629F8();
    v96();
    sub_100162F0C();
    v88();
    sub_1008C73F4();
    sub_1001649A8();
    v94();
    sub_1008C7B80();
    sub_1001649A8();
    v94();
    sub_1008C6EE0();
    sub_1001649A8();
    v94();
    sub_1008C78D4();
    sub_1001649A8();
    v94();
    sub_1008C7E00();
    sub_1001649A8();
    v94();
    sub_1008C78B0();
    sub_1001649A8();
    v94();
    uint64_t v89 = *(void (**)(void))(v121 + 8);
    sub_1008C7080();
    sub_1001649A8();
    v89();
    sub_1008C7908();
    sub_1001649A8();
    v89();
    sub_100162F0C();
    v90();
    sub_100162F0C();
    v91();
    sub_100162F0C();
    v92();
    sub_1001629F8();
    v96();
    goto LABEL_11;
  }
  sub_1008C842C();
  UVIndex.init(value:category:)();
  sub_1001260F8();
  sub_1001D4084();
  sub_1001ABC4C(0, (unint64_t *)&qword_100E6B678);
  sub_1008C72B0();
  static NSUnitLength.read(from:)();
  sub_1001D4084();
  Measurement.init(value:unit:)();
  sub_1008C6F50();
  static Wind.read(from:)();
  sub_1001D4084();
  sub_1008C6F50();
  static WeatherMetadata.read(from:)();
  sub_1008C842C();
  sub_1008C8444();
  sub_10011CDC4();
  sub_1008C78FC();
  sub_10011A5AC();
  sub_1008C7B8C();
  return CurrentWeather.init(date:cloudCover:cloudCoverLow:cloudCoverMid:cloudCoverHigh:cloudCoverByAltitude:condition:symbolName:dewPoint:humidity:precipitationIntensity:pressure:pressureTrend:rainfallAmount:snowfallAmount:pastHourPrecipitationAmountByType:pastSixHoursPrecipitationAmountByType:pastTwentyFourHoursPrecipitationAmountByType:nextHourPrecipitationAmountByType:nextSixHoursPrecipitationAmountByType:nextTwentyFourHoursPrecipitationAmountByType:apparentPrecipitationIntensity:isDaylight:temperature:apparentTemperature:highTemperature:lowTemperature:uvIndex:visibility:wind:metadata:)();
}

void CurrentWeather.write(to:)()
{
  sub_10016314C();
  uint64_t v98 = v2;
  uint64_t v99 = v5;
  v78[28] = type metadata accessor for WeatherMetadata();
  sub_100179C0C();
  v78[27] = v6;
  __chkstk_darwin(v7);
  v78[25] = sub_1008C692C((uint64_t)v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100179C0C();
  v78[24] = v9;
  __chkstk_darwin(v10);
  sub_100109338((uint64_t)v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v78[22] = sub_10017DF08(&qword_100E6B648);
  sub_100179C0C();
  v78[21] = v12;
  __chkstk_darwin(v13);
  v78[19] = sub_1008C6948((uint64_t)v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100179C0C();
  v78[18] = v15;
  __chkstk_darwin(v16);
  sub_100109338((uint64_t)v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v78[15] = sub_10017DF08(qword_100E65268);
  sub_100162E4C();
  __chkstk_darwin(v18);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v19);
  sub_100128F8C();
  v78[13] = sub_1008C6BC4(v20);
  sub_100179C0C();
  v78[12] = v21;
  __chkstk_darwin(v22);
  uint64_t v80 = sub_1008C6BE0((uint64_t)v78 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100179C0C();
  uint64_t v79 = v24;
  __chkstk_darwin(v25);
  sub_100179C90();
  __chkstk_darwin(v26);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v27);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v28);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v29);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v30);
  sub_100128F8C();
  uint64_t v81 = v31;
  type metadata accessor for PrecipitationAmount();
  sub_100179C0C();
  uint64_t v83 = v33;
  uint64_t v84 = v32;
  __chkstk_darwin(v32);
  sub_100162EF8();
  uint64_t v82 = v34;
  sub_1001626D4();
  __chkstk_darwin(v35);
  sub_100128F8C();
  uint64_t v85 = v36;
  type metadata accessor for PressureTrend();
  sub_100179C0C();
  uint64_t v86 = v38;
  uint64_t v87 = v37;
  __chkstk_darwin(v37);
  sub_100163F64(v39, v78[0]);
  sub_10017DF08(&qword_100E6BED0);
  sub_100179C0C();
  uint64_t v88 = v41;
  uint64_t v89 = v40;
  __chkstk_darwin(v40);
  sub_10017B2CC(v42, v78[0]);
  sub_10017DF08(&qword_100E6D0A8);
  sub_100179C0C();
  uint64_t v90 = v44;
  uint64_t v91 = v43;
  __chkstk_darwin(v43);
  uint64_t v92 = (char *)v78 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  uint64_t v93 = v47;
  uint64_t v94 = v46;
  __chkstk_darwin(v46);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v48);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v49);
  uint64_t v50 = sub_1008C8030();
  sub_100179C0C();
  uint64_t v95 = v51;
  __chkstk_darwin(v52);
  sub_10017C704();
  uint64_t v53 = type metadata accessor for CloudCoverByAltitude();
  sub_100179C0C();
  uint64_t v96 = v54;
  __chkstk_darwin(v55);
  sub_1001835FC();
  sub_100179C0C();
  __chkstk_darwin(v56);
  sub_10017F5D8();
  uint64_t v97 = v1;
  CurrentWeather.date.getter();
  uint64_t v57 = v98;
  Date.write(to:)();
  if (v57)
  {
    sub_1001649A8();
    v58();
  }
  else
  {
    v78[4] = v4;
    uint64_t v98 = v53;
    v78[2] = v3;
    uint64_t v78[3] = v50;
    v78[1] = v0;
    sub_1001649A8();
    v59();
    CurrentWeather.cloudCover.getter();
    sub_100165320();
    sub_1008C6DE4();
    CurrentWeather.cloudCoverLow.getter();
    sub_100165320();
    sub_1008C6DE4();
    CurrentWeather.cloudCoverMid.getter();
    sub_100165320();
    sub_1008C6DE4();
    CurrentWeather.cloudCoverHigh.getter();
    sub_100165320();
    sub_1008C6DE4();
    CurrentWeather.cloudCoverByAltitude.getter();
    sub_1008C68B0();
    CloudCoverByAltitude.write(to:)();
    sub_1008C8580();
    sub_100162F0C();
    v60();
    sub_1008C6DE4();
    CurrentWeather.condition.getter();
    WeatherCondition.write(to:)();
    sub_1008C82A4();
    sub_100162F0C();
    v63();
    sub_1008C6DE4();
    CurrentWeather.symbolName.getter();
    sub_1001A4BA8();
    sub_1008C8174();
    swift_bridgeObjectRelease();
    sub_1008C774C();
    CurrentWeather.dewPoint.getter();
    sub_1008C68B0();
    sub_1008BA04C();
    uint64_t v64 = *(void (**)(void))(v93 + 8);
    sub_100164F40();
    v64();
    CurrentWeather.humidity.getter();
    sub_1001825F4();
    CurrentWeather.precipitationIntensity.getter();
    sub_1008BA04C();
    sub_100162F0C();
    v65();
    sub_1008C6E80();
    CurrentWeather.pressure.getter();
    sub_1008BA04C();
    sub_100162F0C();
    v66();
    sub_1008C6E80();
    CurrentWeather.pressureTrend.getter();
    PressureTrend.write(to:)();
    sub_100162F0C();
    v67();
    sub_1008C6E80();
    CurrentWeather.rainfallAmount.getter();
    PrecipitationAmount.write(to:)();
    uint64_t v68 = *(void (**)(void))(v83 + 8);
    sub_100127BA4();
    v68();
    sub_1008C6D08();
    CurrentWeather.snowfallAmount.getter();
    PrecipitationAmount.write(to:)();
    sub_100164944();
    v68();
    CurrentWeather.pastHourPrecipitationAmountByType.getter();
    sub_1008C81E8();
    PrecipitationAmountByType.write(to:)();
    uint64_t v69 = *(void (**)(void))(v79 + 8);
    sub_100127BA4();
    v69();
    sub_1008C6D08();
    CurrentWeather.pastSixHoursPrecipitationAmountByType.getter();
    sub_100127BF0();
    sub_100164944();
    v69();
    sub_1008C6D08();
    CurrentWeather.pastTwentyFourHoursPrecipitationAmountByType.getter();
    sub_100127BF0();
    sub_100164944();
    v69();
    sub_1008C6D08();
    CurrentWeather.nextHourPrecipitationAmountByType.getter();
    sub_100127BF0();
    sub_100164944();
    v69();
    sub_1008C6D08();
    CurrentWeather.nextSixHoursPrecipitationAmountByType.getter();
    sub_100127BF0();
    sub_100164944();
    v69();
    sub_1008C6D08();
    CurrentWeather.nextTwentyFourHoursPrecipitationAmountByType.getter();
    sub_100127BF0();
    sub_100164944();
    v69();
    sub_1008C6FAC();
    CurrentWeather.apparentPrecipitationIntensity.getter();
    sub_1008C81E8();
    ApparentPrecipitationIntensity.write(to:)();
    sub_1008C74F8();
    sub_100162F0C();
    v70();
    CurrentWeather.isDaylight.getter();
    sub_1001D259C();
    sub_1008C6E80();
    CurrentWeather.temperature.getter();
    sub_1008BA04C();
    sub_100164F40();
    v64();
    uint64_t v71 = v78[8];
    sub_1008C7B30();
    CurrentWeather.apparentTemperature.getter();
    sub_1008BA04C();
    sub_1008C8390();
    sub_100164F40();
    v64();
    sub_1008C8368();
    CurrentWeather.highTemperature.getter();
    sub_1008BD13C((uint64_t)&unk_100E9D250);
    unint64_t v72 = sub_1008BD13C((uint64_t)&unk_100E9D268);
    sub_1008C7038();
    sub_1008C59C8(v71, (uint64_t)qword_100E65268);
    sub_1008C8368();
    CurrentWeather.lowTemperature.getter();
    sub_1008C7038();
    sub_1008C59C8(v71, (uint64_t)qword_100E65268);
    sub_1008C6F98();
    CurrentWeather.uvIndex.getter();
    UVIndex.value.getter();
    FixedSizeTypeBinaryCodable.write(to:)();
    if (v72)
    {
      sub_10018BDEC();
      sub_100162F0C();
      v73();
    }
    else
    {
      UVIndex.category.getter();
      LocationAuthorizationState.write(to:)();
      sub_10018BDEC();
      sub_100162F0C();
      v74();
      sub_1008C6FAC();
      CurrentWeather.visibility.getter();
      sub_1008BA04C();
      sub_100184704();
      sub_100162F0C();
      v75();
      sub_1008C6F98();
      CurrentWeather.wind.getter();
      sub_1008C7B58();
      sub_1008C7ABC();
      sub_100162F0C();
      v76();
      sub_1008C6FAC();
      CurrentWeather.metadata.getter();
      WeatherMetadata.write(to:)();
      uint64_t v77 = sub_1008C6EA0();
      v62(v77, *(void *)(v61 - 256));
    }
  }
  sub_1001194B0();
  sub_100163164();
}

uint64_t static CloudCoverByAltitude.read(from:)()
{
  uint64_t result = static FixedSizeTypeBinaryCodable.read(from:)();
  if (!v0)
  {
    sub_1001D1EFC();
    sub_1001D1EFC();
    return CloudCoverByAltitude.init(low:medium:high:)();
  }
  return result;
}

uint64_t CloudCoverByAltitude.write(to:)()
{
  sub_1008C6C34();
  CloudCoverByAltitude.low.getter();
  uint64_t result = sub_100165320();
  if (!v0)
  {
    CloudCoverByAltitude.medium.getter();
    sub_100165320();
    CloudCoverByAltitude.high.getter();
    return sub_100165320();
  }
  return result;
}

void sub_1008A1030()
{
  sub_1001818B4();
  uint64_t v87 = v4;
  uint64_t v88 = v5;
  uint64_t v79 = v1;
  uint64_t v7 = v6;
  uint64_t v74 = v8;
  uint64_t v9 = sub_10017DF08(&qword_100E6B8C8);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_10017B2CC(v11, v58[0]);
  uint64_t v12 = sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  uint64_t v76 = v13;
  __chkstk_darwin(v14);
  sub_10012B614();
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v58 - v16;
  uint64_t v18 = type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v77 = v19;
  __chkstk_darwin(v20);
  sub_100163770();
  uint64_t v21 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v23 = v22;
  __chkstk_darwin(v24);
  sub_1001D40F4();
  uint64_t v78 = v7;
  uint64_t v25 = v79;
  static Date.read(from:)();
  if (!v25)
  {
    uint64_t v68 = v0;
    uint64_t v69 = v12;
    uint64_t v72 = v3;
    uint64_t v73 = v2;
    uint64_t v70 = v17;
    uint64_t v71 = v18;
    uint64_t v79 = v21;
    uint64_t v26 = static String.read(from:)();
    uint64_t v28 = v27;
    uint64_t v29 = static String.read(from:)();
    uint64_t v31 = v30;
    static TimeZone.read(from:)();
    uint64_t v67 = v23;
    static FixedSizeTypeBinaryCodable.read(from:)();
    uint64_t v66 = sub_1001ABC4C(0, (unint64_t *)&qword_100E659A0);
    static NSUnitTemperature.read(from:)();
    uint64_t v64 = v29;
    uint64_t v65 = v26;
    uint64_t v32 = v66;
    Measurement.init(value:unit:)();
    sub_1008C67B4();
    static NSUnitTemperature.read(from:)();
    uint64_t v62 = v31;
    uint64_t v63 = v28;
    sub_1008C7E80();
    static Optional<A>.read(from:)();
    uint64_t v35 = v76;
    if (v32)
    {
      sub_1008C7920();
      sub_1008C7090();
      uint64_t v36 = *(void (**)(void))(v35 + 8);
      sub_100164944();
      v36();
      sub_1008C8414();
      sub_100164944();
      v36();
      sub_100164938();
      v33();
      sub_1008C825C();
      sub_100162F0C();
      v34();
    }
    else
    {
      uint64_t v37 = v86;
      uint64_t v66 = v85;
      static Optional<A>.read(from:)();
      uint64_t v38 = v37;
      uint64_t v40 = v83;
      uint64_t v39 = v84;
      sub_1001D1EFC();
      double v41 = v82;
      sub_1001D1EFC();
      char v42 = v81;
      uint64_t v43 = sub_1008C82B8();
      uint64_t v45 = v44;
      type metadata accessor for Precipitation();
      uint64_t v61 = sub_1008BD0B8((uint64_t)&unk_100E9D538);
      sub_1008BD0B8((uint64_t)&unk_100E9D540);
      static Optional<A>.read(from:)();
      sub_1001D1EFC();
      char v46 = v80;
      uint64_t v61 = sub_1008C82B8();
      uint64_t v48 = v47;
      uint64_t v59 = sub_1008C82B8();
      uint64_t v60 = v49;
      uint64_t v50 = sub_1008C82B8();
      sub_1008C8084(v50, v51);
      v58[1] = sub_1008C5930();
      sub_1008C597C();
      uint64_t v57 = static Array<A>.read(from:)();
      sub_1008C8078();
      uint64_t v56 = v52;
      sub_1008C7914();
      uint64_t v55 = v53;
      sub_1008C80CC();
      sub_1007E26E4(v73, v65, v63, v64, v62, v72, (uint64_t)v70, v68, v74, v41, v66, v38, v40, v39, v42, v43, v45, v75, v46,
        v61,
        v48,
        v59,
        v54,
        v55,
        v56,
        v57);
    }
  }
  sub_100162C04();
}

void sub_1008A1780()
{
  sub_1001818B4();
  Date.write(to:)();
  if (!v0)
  {
    type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
    sub_1008C7C40();
    sub_100179168();
    sub_100179168();
    TimeZone.write(to:)();
    sub_1008BA04C();
    sub_1008BA04C();
    sub_10017DF08(&qword_100E65F18);
    sub_1008C72D4();
    sub_1008C72D4();
    sub_1001825F4();
    sub_1001825F4();
    sub_100179168();
    sub_10017DF08(&qword_100E6B8C8);
    sub_1008BD0B8((uint64_t)&unk_100E9D538);
    sub_1008BD0B8((uint64_t)&unk_100E9D540);
    Optional<A>.write(to:)();
    sub_1001825F4();
    sub_100179168();
    sub_100179168();
    sub_100179168();
    sub_1008C5930();
    sub_1008C597C();
    sub_10012B950();
    Array<A>.write(to:)();
  }
  sub_1008C7AE4();
}

uint64_t sub_1008A1A74()
{
  uint64_t v0 = sub_100162708();
  type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(v0);
  sub_1008BD0B8((uint64_t)&unk_100E957E0);
  sub_1008BD0B8((uint64_t)&unk_100E957E8);
  return sub_1008C7A00();
}

uint64_t sub_1008A1B14()
{
  uint64_t v0 = sub_1001D3FE4();
  type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(v0);
  sub_1008BD0B8((uint64_t)&unk_100E957E0);
  sub_1008BD0B8((uint64_t)&unk_100E957E8);
  return sub_100109438();
}

uint64_t static DayWeather.read(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v99 = a1;
  uint64_t v76 = a2;
  uint64_t v6 = sub_10017DF08(&qword_100E9D270);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_100109328((uint64_t)v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v75 = type metadata accessor for DayPartForecast();
  sub_100179C0C();
  uint64_t v74 = v9;
  __chkstk_darwin(v10);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v11);
  sub_100128F8C();
  sub_100109338(v12);
  uint64_t v77 = sub_10017DF08(&qword_100E6D0A8);
  sub_100179C0C();
  uint64_t v78 = v13;
  __chkstk_darwin(v14);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v15);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v16);
  sub_100128F8C();
  sub_100109338(v17);
  uint64_t v18 = sub_10017DF08(&qword_100E6ECB0);
  uint64_t v19 = sub_100109308(v18);
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v79 = sub_1008C692C(v20);
  sub_100179C0C();
  uint64_t v80 = v21;
  __chkstk_darwin(v22);
  sub_100109314();
  uint64_t v82 = sub_1008C6948(v23);
  sub_100179C0C();
  uint64_t v83 = v24;
  __chkstk_darwin(v25);
  char v81 = (char *)v68 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = type metadata accessor for MoonEvents();
  sub_100179C0C();
  uint64_t v86 = v27;
  __chkstk_darwin(v28);
  sub_100109314();
  uint64_t v84 = v29;
  uint64_t v87 = type metadata accessor for SunEvents();
  sub_100179C0C();
  uint64_t v88 = v30;
  __chkstk_darwin(v31);
  uint64_t v89 = sub_1008C6BE0((uint64_t)v68 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100179C0C();
  uint64_t v90 = v33;
  __chkstk_darwin(v34);
  sub_100109338((uint64_t)v68 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v92 = sub_10017DF08(&qword_100E6B648);
  sub_100179C0C();
  uint64_t v93 = v36;
  __chkstk_darwin(v37);
  sub_100179C90();
  __chkstk_darwin(v38);
  uint64_t v91 = (char *)v68 - v39;
  uint64_t v94 = sub_10011B0E8();
  sub_100179C0C();
  uint64_t v95 = v40;
  __chkstk_darwin(v41);
  sub_100109338((uint64_t)v68 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v43 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v44 = sub_100109308(v43);
  __chkstk_darwin(v44);
  sub_100179C90();
  __chkstk_darwin(v45);
  sub_100127588();
  uint64_t v46 = sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  uint64_t v96 = v47;
  __chkstk_darwin(v48);
  sub_100162824();
  __chkstk_darwin(v49);
  uint64_t v50 = sub_1008C8030();
  sub_100179C0C();
  uint64_t v97 = v51;
  __chkstk_darwin(v52);
  uint64_t v53 = sub_1001835FC();
  sub_100179C0C();
  uint64_t v55 = v54;
  __chkstk_darwin(v56);
  sub_1001D1640();
  uint64_t v57 = v98;
  uint64_t result = static Date.read(from:)();
  if (!v57)
  {
    uint64_t v98 = v55;
    v68[5] = v3;
    uint64_t v69 = v4;
    v68[6] = v2;
    v68[7] = v46;
    uint64_t v70 = v50;
    uint64_t v71 = v5;
    uint64_t v72 = v53;
    uint64_t v59 = v99;
    static WeatherCondition.read(from:)();
    uint64_t v60 = static String.read(from:)();
    uint64_t v62 = v61;
    static FixedSizeTypeBinaryCodable.read(from:)();
    uint64_t v63 = sub_1001ABC4C(0, (unint64_t *)&qword_100E659A0);
    sub_100214EA0();
    static NSUnitTemperature.read(from:)();
    v68[4] = v60;
    sub_1008C6D90();
    static Optional<A>.read(from:)();
    v68[3] = v62;
    static FixedSizeTypeBinaryCodable.read(from:)();
    sub_10019D15C();
    static NSUnitTemperature.read(from:)();
    sub_1008C7E80();
    sub_1008C7B8C();
    static Optional<A>.read(from:)();
    if (v63)
    {
      uint64_t v99 = v63;
      swift_bridgeObjectRelease();
      uint64_t v64 = *(void (**)(void))(v59 + 8);
      sub_1008C86C0();
      sub_1001649A8();
      v64();
      sub_1008C59C8(v69, (uint64_t)&unk_100E73CA0);
      sub_1001649A8();
      v64();
      sub_1008C7570();
      sub_100164938();
      v65();
      sub_10012BF8C();
      sub_100162F0C();
      return v66();
    }
    else
    {
      static FixedSizeTypeBinaryCodable.read(from:)();
      sub_1001D1EFC();
      sub_1001D1EFC();
      sub_1001D1EFC();
      sub_1001D1EFC();
      sub_1008C6C24();
      static Precipitation.read(from:)();
      sub_1001D1EFC();
      sub_1001D1EFC();
      sub_1001ABC4C(0, (unint64_t *)&qword_100E6B678);
      sub_1008C86D8();
      static NSUnitLength.read(from:)();
      sub_1008C7914();
      Measurement.init(value:unit:)();
      sub_1001D1EFC();
      static NSUnitLength.read(from:)();
      Measurement.init(value:unit:)();
      sub_1008C6C24();
      static PrecipitationAmountByType.read(from:)();
      sub_1008C6C24();
      static SunEvents.read(from:)();
      sub_1008C6C24();
      static MoonEvents.read(from:)();
      sub_1001D1EFC();
      static LocationAuthorizationState.read(from:)();
      sub_10011CDC4();
      UVIndex.init(value:category:)();
      sub_1001D1EFC();
      sub_1001D1EFC();
      sub_1001D1EFC();
      v68[2] = v102;
      sub_1001D1EFC();
      v68[1] = v101;
      sub_1008C6C24();
      static Wind.read(from:)();
      sub_1008BD1E8((uint64_t)&unk_100E9D278);
      sub_1008BD1E8((uint64_t)&unk_100E9D290);
      static Optional<A>.read(from:)();
      sub_1001D1EFC();
      v68[0] = v100;
      sub_1001ABC4C(0, (unint64_t *)&qword_100E6BF18);
      sub_1008C86D8();
      static NSUnitSpeed.read(from:)();
      sub_1008C6F64();
      sub_1001D1EFC();
      sub_100184EC8();
      sub_1008C6F64();
      sub_1001D1EFC();
      sub_100184EC8();
      sub_1008C6F64();
      sub_1008C8444();
      static DayPartForecast.read(from:)(v99, v67);
      static DayPartForecast.read(from:)(v99, v73);
      sub_1008BD0B8((uint64_t)&unk_100E9D298);
      sub_1008BD0B8((uint64_t)&unk_100E9D2A0);
      sub_1008C842C();
      static Optional<A>.read(from:)();
      sub_1008C842C();
      sub_1008C8444();
      sub_10011CDC4();
      sub_100127C38();
      sub_1008C7914();
      return DayWeather.init(date:condition:symbolName:highTemperature:highTemperatureTime:lowTemperature:lowTemperatureTime:humidity:humidityMax:humidityMin:maximumHumidity:minimumHumidity:precipitation:precipitationChance:rainfallAmount:snowfallAmount:precipitationAmountByType:sun:moon:uvIndex:visibilityMax:visibilityMin:maximumVisibility:minimumVisibility:wind:highWindSpeed:windGustSpeedMax:windSpeedAvg:windSpeedMax:daytimeForecast:overnightForecast:restOfDayForecast:)();
    }
  }
  return result;
}

void DayWeather.write(to:)()
{
  sub_10016314C();
  uint64_t v117 = v1;
  uint64_t v118 = v4;
  uint64_t v101 = sub_10017DF08(&qword_100E9D270);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_1001275B0(v6, v81);
  uint64_t v100 = type metadata accessor for DayPartForecast();
  sub_100179C0C();
  uint64_t v99 = v7;
  __chkstk_darwin(v8);
  sub_100179C90();
  __chkstk_darwin(v9);
  sub_100109338((uint64_t)&v81 - v10);
  uint64_t v98 = sub_10017DF08(&qword_100E6D0A8);
  sub_100179C0C();
  uint64_t v97 = v11;
  __chkstk_darwin(v12);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v13);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v14);
  sub_100109338((uint64_t)&v81 - v15);
  uint64_t v96 = sub_10017DF08(&qword_100E6ECB0);
  sub_100162E4C();
  __chkstk_darwin(v16);
  uint64_t v95 = sub_1008C692C((uint64_t)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100179C0C();
  uint64_t v94 = v18;
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v93 = sub_1008C6948(v20);
  sub_100179C0C();
  uint64_t v92 = v21;
  __chkstk_darwin(v22);
  uint64_t v91 = (char *)&v81 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = type metadata accessor for MoonEvents();
  sub_100179C0C();
  uint64_t v89 = v24;
  __chkstk_darwin(v25);
  sub_1008C6DC0(v26, v81);
  uint64_t v87 = type metadata accessor for SunEvents();
  sub_100179C0C();
  uint64_t v86 = v27;
  __chkstk_darwin(v28);
  sub_100109314();
  sub_1008C6BE0(v29);
  sub_100179C0C();
  uint64_t v103 = v31;
  uint64_t v104 = v30;
  __chkstk_darwin(v30);
  sub_10011BA64(v32, v81);
  sub_10017DF08(&qword_100E6B648);
  sub_100179C0C();
  uint64_t v106 = v34;
  uint64_t v107 = v33;
  __chkstk_darwin(v33);
  sub_100162EF8();
  uint64_t v105 = v35;
  sub_1001626D4();
  __chkstk_darwin(v36);
  sub_100128F8C();
  uint64_t v108 = v37;
  sub_10011B0E8();
  sub_100179C0C();
  uint64_t v109 = v39;
  uint64_t v110 = v38;
  __chkstk_darwin(v38);
  sub_100182904(v40, v81);
  uint64_t v113 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  sub_100162E4C();
  __chkstk_darwin(v41);
  sub_100162EF8();
  uint64_t v111 = v42;
  sub_1001626D4();
  __chkstk_darwin(v43);
  sub_100128F8C();
  uint64_t v112 = v44;
  uint64_t v45 = sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  uint64_t v114 = v46;
  __chkstk_darwin(v47);
  sub_100129860();
  __chkstk_darwin(v48);
  uint64_t v49 = sub_1008C7F88();
  sub_100179C0C();
  uint64_t v115 = v50;
  __chkstk_darwin(v51);
  sub_100158504();
  sub_100179C0C();
  __chkstk_darwin(v52);
  sub_1001D1640();
  uint64_t v116 = v0;
  DayWeather.date.getter();
  uint64_t v53 = v117;
  Date.write(to:)();
  if (v53)
  {
    sub_100164FC8();
    v54();
  }
  else
  {
    uint64_t v117 = v49;
    uint64_t v83 = v2;
    uint64_t v82 = v3;
    uint64_t v84 = v45;
    sub_100164FC8();
    v55();
    DayWeather.condition.getter();
    WeatherCondition.write(to:)();
    sub_1008C8594();
    sub_100162F0C();
    v56();
    DayWeather.symbolName.getter();
    sub_1001502D0();
    sub_1008C8174();
    swift_bridgeObjectRelease();
    sub_100127A68();
    DayWeather.highTemperature.getter();
    sub_1008BA04C();
    uint64_t v57 = *(void (**)(void))(v114 + 8);
    sub_100164FC8();
    v57();
    uint64_t v58 = v112;
    DayWeather.highTemperatureTime.getter();
    sub_1008C81E8();
    Optional<A>.write(to:)();
    sub_1008C59C8(v58, (uint64_t)&unk_100E73CA0);
    sub_1008C6D84();
    DayWeather.lowTemperature.getter();
    sub_1008BA04C();
    sub_1008C70B4();
    if (v58)
    {
      sub_100164FC8();
      v57();
    }
    else
    {
      sub_100164FC8();
      v57();
      uint64_t v59 = v111;
      sub_1008C6D84();
      DayWeather.lowTemperatureTime.getter();
      sub_1001A2B64();
      sub_10011BA44();
      Optional<A>.write(to:)();
      sub_1008C59C8(v59, (uint64_t)&unk_100E73CA0);
      sub_1008C6D84();
      DayWeather.humidity.getter();
      sub_1008C6E2C();
      sub_1008C6D84();
      DayWeather.humidityMax.getter();
      sub_1008C6E2C();
      sub_1008C6D84();
      DayWeather.humidityMin.getter();
      sub_1008C6E2C();
      sub_1008C6D84();
      DayWeather.maximumHumidity.getter();
      sub_1008C6E2C();
      DayWeather.minimumHumidity.getter();
      sub_1001D259C();
      sub_1008C68F0();
      DayWeather.precipitation.getter();
      Precipitation.write(to:)();
      sub_100162F0C();
      v60();
      DayWeather.precipitationChance.getter();
      sub_1001D259C();
      sub_1008C68F0();
      DayWeather.rainfallAmount.getter();
      sub_1008C701C();
      uint64_t v61 = *(void (**)(void))(v106 + 8);
      uint64_t v62 = v106 + 8;
      sub_100127BA4();
      v61();
      uint64_t v63 = v105;
      DayWeather.snowfallAmount.getter();
      sub_1008BA04C();
      sub_10016285C();
      v61();
      DayWeather.precipitationAmountByType.getter();
      sub_100150344();
      PrecipitationAmountByType.write(to:)();
      sub_100162F0C();
      v64();
      sub_1008C68F0();
      DayWeather.sun.getter();
      sub_10011BA44();
      SunEvents.write(to:)();
      sub_1008C7AA4();
      sub_100162F0C();
      v65();
      sub_1008C68F0();
      DayWeather.moon.getter();
      sub_10011BA44();
      MoonEvents.write(to:)(v66, v67, v68, v69, v70, v71, v72, v73, v81, v82, v83, v84, v85, v86, v87, v88, v89, v90);
      sub_100162F0C();
      v74();
      sub_1008C68F0();
      DayWeather.uvIndex.getter();
      UVIndex.value.getter();
      sub_1001D259C();
      UVIndex.category.getter();
      LocationAuthorizationState.write(to:)();
      sub_1008C73D8();
      sub_100162F0C();
      v75();
      DayWeather.visibilityMax.getter();
      sub_1001D259C();
      DayWeather.visibilityMin.getter();
      sub_1001D259C();
      DayWeather.maximumVisibility.getter();
      sub_1001D259C();
      DayWeather.minimumVisibility.getter();
      sub_1001D259C();
      sub_1008C68F0();
      DayWeather.wind.getter();
      sub_10011BA44();
      Wind.write(to:)();
      sub_1008C7530();
      sub_100162F0C();
      v76();
      sub_1008C774C();
      DayWeather.highWindSpeed.getter();
      sub_1008BD1E8((uint64_t)&unk_100E9D278);
      sub_1008BD1E8((uint64_t)&unk_100E9D290);
      sub_1008C73A8();
      sub_1008C59C8(v62, (uint64_t)&qword_100E6ECB0);
      DayWeather.windGustSpeedMax.getter();
      sub_1008C701C();
      sub_1008C80CC();
      uint64_t v78 = *(void (**)(void))(v77 + 8);
      sub_100127BA4();
      v78();
      sub_1008C7E48();
      DayWeather.windSpeedAvg.getter();
      sub_1008BA04C();
      sub_1001629F8();
      v78();
      if (!v63)
      {
        sub_1008C7E48();
        DayWeather.windSpeedMax.getter();
        sub_1008BA04C();
        sub_1001629F8();
        v78();
        sub_1008C6DE4();
        DayWeather.daytimeForecast.getter();
        sub_100150344();
        DayPartForecast.write(to:)();
        uint64_t v79 = *(void (**)(void))(v99 + 8);
        sub_100127BA4();
        v79();
        sub_1008C774C();
        DayWeather.overnightForecast.getter();
        DayPartForecast.write(to:)();
        sub_1001629F8();
        v79();
        uint64_t v80 = v102;
        sub_1008C68F0();
        DayWeather.restOfDayForecast.getter();
        sub_1008BD0B8((uint64_t)&unk_100E9D298);
        sub_1008BD0B8((uint64_t)&unk_100E9D2A0);
        Optional<A>.write(to:)();
        sub_1008C59C8(v80, (uint64_t)&qword_100E9D270);
      }
    }
  }
  sub_1001194B0();
  sub_100163164();
}

uint64_t static Elevation.read(from:)()
{
  sub_1007BD11C();
  uint64_t result = sub_1008C6724();
  if (!v0)
  {
    sub_1008C6724();
    return Elevation.init(degrees:isPM:)();
  }
  return result;
}

uint64_t Elevation.write(to:)()
{
  sub_1008C6C34();
  Elevation.degrees.getter();
  sub_1007BD11C();
  uint64_t result = sub_100165320();
  if (!v0)
  {
    Elevation.isPM.getter();
    return sub_100165320();
  }
  return result;
}

void sub_1008A3D24()
{
  sub_10016314C();
  uint64_t v3 = v2;
  uint64_t v4 = sub_10017DF08(&qword_100E63750);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_10012B938();
  uint64_t v6 = sub_1001EA9B0();
  if (!v0)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v7;
    uint64_t v10 = sub_1001EA9B0();
    uint64_t v12 = v11;
    sub_1008C75C0();
    type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
    sub_1008BD0B8((uint64_t)&unk_100E9D558);
    sub_1008BD0B8((uint64_t)&unk_100E9D560);
    sub_1008C820C();
    static Optional<A>.read(from:)();
    uint64_t v13 = sub_1001EA9B0();
    *uint64_t v3 = v8;
    v3[1] = v9;
    v3[2] = v10;
    v3[3] = v12;
    v3[4] = v18;
    v3[5] = v19;
    uint64_t v15 = v14;
    uint64_t v16 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
    sub_1001278D0(v1, (uint64_t)v3 + *(int *)(v16 + 28), &qword_100E63750);
    uint64_t v17 = (uint64_t *)((char *)v3 + *(int *)(v16 + 32));
    uint64_t *v17 = v13;
    v17[1] = v15;
  }
  sub_100191138();
  sub_100163164();
}

void sub_1008A3F2C()
{
  sub_1001818B4();
  sub_1008C6AA0();
  if (!v0)
  {
    sub_10011C0C4();
    sub_10017DF08(&qword_100E65F18);
    sub_1008C7C9C();
    type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
    sub_10017DF08(&qword_100E63750);
    sub_1008BD0B8((uint64_t)&unk_100E9D558);
    sub_1008BD0B8((uint64_t)&unk_100E9D560);
    sub_1008C686C();
    sub_10011C0C4();
  }
  sub_1008C7AE4();
}

void sub_1008A405C()
{
  uint64_t v3 = sub_10008B8A8();
  uint64_t v4 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(v3);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_1008C7118();
  uint64_t v6 = static String.read(from:)();
  if (!v1)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v7;
    sub_1008A4184();
    *uint64_t v0 = v8;
    v0[1] = v9;
    uint64_t v10 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
    sub_1008C5A14(v2, (uint64_t)v0 + *(int *)(v10 + 20));
  }
  sub_1008C7F64();
}

uint64_t sub_1008A412C()
{
  uint64_t result = String.write(to:)();
  if (!v0)
  {
    type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
    sub_1001D4110();
    return sub_1008A437C();
  }
  return result;
}

int *sub_1008A4184()
{
  sub_1008C8664();
  type metadata accessor for TemperatureScaleConfiguration();
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_1008C6E8C();
  uint64_t result = (int *)static TemperatureScaleConfiguration.read(from:)();
  if (!v0)
  {
    sub_1001D1EFC();
    sub_1001D1EFC();
    sub_1001D1EFC();
    uint64_t v4 = sub_100214DD8();
    uint64_t v6 = v5;
    sub_1001D1EFC();
    sub_1001191A8();
    v7();
    uint64_t result = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    *(void *)(v1 + result[5]) = v12;
    *(void *)(v1 + result[6]) = v11;
    *(void *)(v1 + result[7]) = v10;
    uint64_t v8 = (uint64_t *)(v1 + result[8]);
    *uint64_t v8 = v4;
    v8[1] = v6;
    *(unsigned char *)(v1 + result[9]) = v9;
  }
  return result;
}

uint64_t sub_1008A437C()
{
  sub_1008C6D78();
  uint64_t result = TemperatureScaleConfiguration.write(to:)();
  if (!v0)
  {
    type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    sub_1008C7C40();
    sub_1008C74A0(v3);
    sub_100165320();
    sub_1008C74A0(*(int *)(v1 + 24));
    sub_100165320();
    sub_1008C74A0(*(int *)(v1 + 28));
    sub_100165320();
    sub_10011C0C4();
    return sub_100165320();
  }
  return result;
}

void sub_1008A447C()
{
  sub_10017F304();
  sub_1008C7DC4();
  uint64_t v3 = sub_10017DF08(&qword_100E63758);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  uint64_t v5 = sub_10017F948();
  uint64_t v6 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(v5);
  sub_1008BD0B8((uint64_t)&unk_100E957F0);
  sub_1008BD0B8((uint64_t)&unk_100E957F8);
  sub_1001823C8();
  static Array<A>.read(from:)();
  if (!v2)
  {
    sub_1008C6D48();
    type metadata accessor for WeatherDescription();
    sub_1008BD0B8((uint64_t)&unk_100E95800);
    sub_1008BD0B8((uint64_t)&unk_100E95808);
    static Optional<A>.read(from:)();
    *uint64_t v0 = v6;
    uint64_t v7 = type metadata accessor for HourlyForecastComponentPreprocessedDataModel();
    sub_1001278D0(v1, (uint64_t)v0 + *(int *)(v7 + 20), &qword_100E63758);
  }
  sub_100182C7C();
  sub_100182EF8();
}

void sub_1008A462C()
{
  sub_1001A69AC();
  uint64_t v1 = sub_1008C8160();
  type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(v1);
  sub_1008BD0B8((uint64_t)&unk_100E957F0);
  sub_1008BD0B8((uint64_t)&unk_100E957F8);
  sub_1008C7000();
  if (!v0)
  {
    type metadata accessor for HourlyForecastComponentPreprocessedDataModel();
    sub_10017DF08(&qword_100E63758);
    sub_1008BD0B8((uint64_t)&unk_100E95800);
    sub_1008BD0B8((uint64_t)&unk_100E95808);
    sub_100214E4C();
  }
  sub_1001847DC();
}

uint64_t sub_1008A4768()
{
  uint64_t v0 = sub_100162708();
  type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(v0);
  sub_1008BD0B8((uint64_t)&unk_100E957F0);
  sub_1008BD0B8((uint64_t)&unk_100E957F8);
  return sub_1008C7A00();
}

uint64_t sub_1008A4808()
{
  uint64_t v0 = sub_1001D3FE4();
  type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(v0);
  sub_1008BD0B8((uint64_t)&unk_100E957F0);
  sub_1008BD0B8((uint64_t)&unk_100E957F8);
  return sub_100109438();
}

void sub_1008A48AC()
{
  sub_1001A69AC();
  uint64_t v5 = sub_10008B8A8();
  uint64_t v6 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(v5);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  uint64_t v8 = sub_10017C704();
  uint64_t v9 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(v8);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100129860();
  __chkstk_darwin(v11);
  sub_100127588();
  sub_1008C7710();
  if (!v1)
  {
    sub_1008C77DC();
    if (v13)
    {
      sub_1008C6CF8();
      sub_1008A5120();
      sub_1008C5A14(v2, v0);
    }
    else if (v12 == 2)
    {
      sub_1008A4E50();
      sub_1008C5A14(v3, v0);
    }
    else
    {
      if (v12 != 1)
      {
        type metadata accessor for BinaryDecoder.Error();
        sub_1008BD0B8((uint64_t)&qword_100E95730);
        uint64_t v14 = sub_100166B68();
        sub_1008C6B60(v14, v15);
        sub_100162880();
        sub_1001631E8();
        v16();
        swift_willThrow();
        goto LABEL_2;
      }
      sub_1008A4E50();
      sub_1008C5A14(v4, v0);
    }
    type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(0);
    swift_storeEnumTagMultiPayload();
  }
LABEL_2:
  sub_1002EEAFC();
  sub_1001847DC();
}

void sub_1008A4AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_10016314C();
  a19 = v23;
  a20 = v24;
  uint64_t v25 = sub_100127C8C();
  uint64_t v26 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(v25);
  uint64_t v27 = sub_100109308(v26);
  __chkstk_darwin(v27);
  uint64_t v28 = sub_100163770();
  type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(v28);
  sub_100162E4C();
  __chkstk_darwin(v29);
  sub_100129860();
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&a9 - v31;
  uint64_t v33 = sub_1008C6B54();
  type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(v33);
  sub_100162E4C();
  __chkstk_darwin(v34);
  sub_100162F18();
  sub_10013C234(v20, v22);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v36 = sub_1008C6FDC();
      sub_1008C5A14(v36, v37);
      sub_1008C6EC0();
      sub_100165320();
      if (!v21)
      {
        Date.write(to:)();
        TimeZone.write(to:)();
        Array<A>.write(to:)();
        sub_10011C0C4();
        sub_10011C0C4();
      }
    }
    else
    {
      uint64_t v38 = sub_100188E04();
      sub_1008C5A14(v38, v39);
      sub_1008C6E48();
      sub_100165320();
      if (!v21)
      {
        sub_1008C7308();
        sub_1008A5574();
      }
    }
  }
  else
  {
    sub_1008C5A14(v22, (uint64_t)v32);
    sub_1008C73CC();
    sub_100165320();
    if (!v21)
    {
      sub_1008C7C64();
      TimeZone.write(to:)();
      Array<A>.write(to:)();
      sub_10011C0C4();
      sub_10011C0C4();
    }
  }
  sub_10013C2E8();
  sub_10016EF08();
  sub_100163164();
}

void sub_1008A4E50()
{
  sub_10016314C();
  sub_1008C8664();
  type metadata accessor for TimeZone();
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_1008C6A30();
  sub_100179C0C();
  __chkstk_darwin(v3);
  static Date.read(from:)();
  if (!v0)
  {
    static TimeZone.read(from:)();
    uint64_t v15 = static Array<A>.read(from:)();
    uint64_t v13 = static String.read(from:)();
    uint64_t v14 = v4;
    uint64_t v5 = static String.read(from:)();
    uint64_t v12 = v6;
    sub_1008C7558();
    v7();
    uint64_t v8 = (int *)type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(0);
    sub_1001191A8();
    v9();
    *(void *)(v1 + v8[6]) = v15;
    uint64_t v10 = (uint64_t *)(v1 + v8[7]);
    uint64_t *v10 = v13;
    v10[1] = v14;
    uint64_t v11 = (uint64_t *)(v1 + v8[8]);
    uint64_t *v11 = v5;
    v11[1] = v12;
  }
  sub_1001194B0();
  sub_100163164();
}

uint64_t sub_1008A505C()
{
  uint64_t result = Date.write(to:)();
  if (!v0)
  {
    type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(0);
    sub_1001D4110();
    TimeZone.write(to:)();
    sub_1001D4110();
    Array<A>.write(to:)();
    sub_1008C7340();
    return sub_1008C7340();
  }
  return result;
}

void sub_1008A5120()
{
  sub_1001818B4();
  uint64_t v20 = v3;
  type metadata accessor for TimeZone();
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_1008C6A58();
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_10017E3A0();
  type metadata accessor for Precipitation();
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_10016279C();
  sub_1001D1EFC();
  if (!v0)
  {
    sub_1008C7734();
    uint64_t v7 = sub_1008C6914();
    uint64_t v9 = v8;
    sub_1001D1EFC();
    sub_1001D1EFC();
    sub_1008C6E08();
    static Precipitation.read(from:)();
    uint64_t v18 = sub_1008C6914();
    uint64_t v19 = v10;
    uint64_t v16 = sub_1008C6914();
    uint64_t v17 = v11;
    sub_1008C6914();
    static Date.read(from:)();
    sub_1008C6E08();
    static TimeZone.read(from:)();
    sub_1001D1EFC();
    uint64_t v15 = static Array<A>.read(from:)();
    sub_1008C7B8C();
    uint64_t v14 = v12;
    sub_1008C7B98();
    sub_100704264(v26, v24, v25, v7, v9, v22, v18, v20, v23, v19, v16, v17, v13, v14, v2, v1, v21, v15);
  }
  sub_100191138();
  sub_100162C04();
}

uint64_t sub_1008A5574()
{
  uint64_t result = FixedSizeTypeBinaryCodable.write(to:)();
  if (!v0)
  {
    sub_10017DF08(&qword_100E65F18);
    Optional<A>.write(to:)();
    sub_10012C01C();
    sub_1001825F4();
    sub_1001825F4();
    type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(0);
    sub_1001A4838();
    Precipitation.write(to:)();
    sub_100179168();
    sub_100179168();
    sub_100179168();
    sub_1008C78E0();
    TimeZone.write(to:)();
    sub_1001825F4();
    return Array<A>.write(to:)();
  }
  return result;
}

uint64_t static HourWeather.read(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = a1;
  v56[16] = a2;
  uint64_t v7 = type metadata accessor for Wind();
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100109314();
  v56[15] = sub_1008C6948(v9);
  sub_100179C0C();
  v56[14] = v10;
  __chkstk_darwin(v11);
  sub_1008C6DC0(v12, v56[0]);
  v56[18] = type metadata accessor for PressureTrend();
  sub_100179C0C();
  v56[19] = v13;
  __chkstk_darwin(v14);
  sub_100109338((uint64_t)v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v56[21] = sub_10017DF08(&qword_100E6BED0);
  sub_100179C0C();
  v56[22] = v16;
  __chkstk_darwin(v17);
  v56[24] = sub_1008C6BC4((uint64_t)v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100179C0C();
  v56[25] = v19;
  __chkstk_darwin(v20);
  sub_100109338((uint64_t)v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v56[27] = sub_10017DF08(&qword_100E6B648);
  sub_100179C0C();
  v56[28] = v22;
  __chkstk_darwin(v23);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v24);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v25);
  v56[29] = (uint64_t)v56 - v26;
  v56[30] = sub_10011B0E8();
  sub_100179C0C();
  v56[31] = v27;
  __chkstk_darwin(v28);
  sub_1001A1698(v29, v56[0]);
  sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  v56[33] = v30;
  v56[34] = v31;
  __chkstk_darwin(v30);
  sub_100179C90();
  __chkstk_darwin(v32);
  sub_100181E70();
  __chkstk_darwin(v33);
  uint64_t v34 = sub_1008C7FBC();
  sub_100179C0C();
  v56[35] = v35;
  __chkstk_darwin(v36);
  uint64_t v37 = sub_10011C788();
  sub_100179C0C();
  v56[36] = v38;
  __chkstk_darwin(v39);
  uint64_t v40 = sub_1001835FC();
  sub_100179C0C();
  uint64_t v42 = v41;
  __chkstk_darwin(v43);
  sub_10017F5D8();
  uint64_t v44 = v57;
  uint64_t result = static Date.read(from:)();
  if (!v44)
  {
    v56[2] = v4;
    v56[3] = v2;
    v56[4] = v34;
    v56[5] = v5;
    v56[7] = v6;
    v56[6] = v37;
    v56[9] = v3;
    v56[8] = v40;
    uint64_t v57 = v42;
    sub_10011B0C4();
    sub_10011B0C4();
    sub_10011B0C4();
    sub_10011B0C4();
    static CloudCoverByAltitude.read(from:)();
    static WeatherCondition.read(from:)();
    v56[0] = static String.read(from:)();
    v56[1] = v46;
    sub_10011B0C4();
    sub_1001ABC4C(0, (unint64_t *)&qword_100E659A0);
    static NSUnitTemperature.read(from:)();
    Measurement.init(value:unit:)();
    sub_1008C68FC();
    sub_1001D1EFC();
    static Precipitation.read(from:)();
    sub_1001D1EFC();
    sub_1001D1EFC();
    sub_1001ABC4C(0, (unint64_t *)&qword_100E6B678);
    sub_1008C7A7C();
    sub_1008C7B98();
    Measurement.init(value:unit:)();
    sub_1001D1EFC();
    sub_1008C7A7C();
    Measurement.init(value:unit:)();
    uint64_t v47 = sub_1008C795C();
    static ApparentPrecipitationIntensity.read(from:)(v47);
    sub_1001D1EFC();
    sub_1001ABC4C(0, &qword_100E6BF30);
    static NSUnitPressure.read(from:)();
    Measurement.init(value:unit:)();
    uint64_t v48 = sub_1008C795C();
    static PressureTrend.read(from:)(v48, v49, v50, v51, v52, v53, v54, v55);
    sub_1001D1EFC();
    sub_1008C812C();
    Measurement.init(value:unit:)();
    sub_1001D1EFC();
    sub_1008C812C();
    Measurement.init(value:unit:)();
    sub_1001D1EFC();
    static LocationAuthorizationState.read(from:)();
    UVIndex.init(value:category:)();
    sub_1001D1EFC();
    sub_1008C7A7C();
    sub_10011CDC4();
    Measurement.init(value:unit:)();
    sub_1008C795C();
    static Wind.read(from:)();
    sub_10011CDC4();
    sub_100127C38();
    sub_1008C6BFC();
    sub_1008C78FC();
    return HourWeather.init(date:cloudCover:cloudCoverLow:cloudCoverMid:cloudCoverHigh:cloudCoverByAltitude:condition:symbolName:dewPoint:humidity:isDaylight:precipitation:precipitationChance:precipitationAmount:snowfallAmount:apparentPrecipitationIntensity:pressure:pressureTrend:temperature:apparentTemperature:uvIndex:visibility:wind:)();
  }
  return result;
}

void HourWeather.write(to:)()
{
  sub_10016314C();
  uint64_t v62 = v1;
  uint64_t v63 = v3;
  v58[10] = type metadata accessor for Wind();
  sub_100179C0C();
  v58[9] = v4;
  __chkstk_darwin(v5);
  v58[6] = sub_1008C6948((uint64_t)v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100179C0C();
  uint64_t v61 = v7;
  __chkstk_darwin(v8);
  sub_100214F50(v9, v58[0]);
  v58[13] = type metadata accessor for PressureTrend();
  sub_100179C0C();
  v58[12] = v10;
  __chkstk_darwin(v11);
  sub_100109338((uint64_t)v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10017DF08(&qword_100E6BED0);
  sub_100179C0C();
  v58[15] = v14;
  v58[16] = v13;
  __chkstk_darwin(v13);
  sub_1001A1698(v15, v58[0]);
  type metadata accessor for ApparentPrecipitationIntensity();
  sub_100179C0C();
  v58[17] = v17;
  v58[18] = v16;
  __chkstk_darwin(v16);
  sub_10011BA64(v18, v58[0]);
  v58[21] = sub_10017DF08(&qword_100E6B648);
  sub_100179C0C();
  uint64_t v60 = v19;
  __chkstk_darwin(v20);
  sub_100179C90();
  __chkstk_darwin(v21);
  v58[20] = (uint64_t)v58 - v22;
  sub_1001626D4();
  __chkstk_darwin(v23);
  sub_100128F8C();
  v58[22] = v24;
  sub_10011B0E8();
  sub_100179C0C();
  v58[23] = v26;
  v58[24] = v25;
  __chkstk_darwin(v25);
  sub_10017225C(v27, v58[0]);
  v58[27] = sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  uint64_t v59 = v28;
  __chkstk_darwin(v29);
  sub_100179C90();
  __chkstk_darwin(v30);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v31);
  sub_100128F8C();
  v58[26] = v32;
  uint64_t v33 = type metadata accessor for WeatherCondition();
  sub_100179C0C();
  v58[28] = v34;
  __chkstk_darwin(v35);
  uint64_t v36 = sub_10011C788();
  sub_100179C0C();
  v58[29] = v37;
  __chkstk_darwin(v38);
  sub_10018AF2C();
  sub_100179C0C();
  __chkstk_darwin(v39);
  sub_10020FA24();
  HourWeather.date.getter();
  uint64_t v40 = v62;
  Date.write(to:)();
  if (v40)
  {
    sub_1001629F8();
    v41();
  }
  else
  {
    v58[2] = v0;
    uint64_t v62 = v36;
    v58[0] = v2;
    v58[1] = v33;
    uint64_t v42 = v59;
    uint64_t v43 = v60;
    sub_1001629F8();
    v44();
    HourWeather.cloudCover.getter();
    sub_100165320();
    HourWeather.cloudCoverLow.getter();
    sub_1001825F4();
    sub_1008C7E0C();
    HourWeather.cloudCoverMid.getter();
    sub_1001825F4();
    sub_1008C7E0C();
    HourWeather.cloudCoverHigh.getter();
    sub_1001825F4();
    sub_1008C7E0C();
    HourWeather.cloudCoverByAltitude.getter();
    sub_10011B0A0();
    CloudCoverByAltitude.write(to:)();
    sub_1008C85D8();
    sub_100162F0C();
    v45();
    sub_1008C7E0C();
    HourWeather.condition.getter();
    sub_10011B0A0();
    WeatherCondition.write(to:)();
    sub_1008C814C();
    sub_100162F0C();
    v47();
    sub_1008C7E0C();
    HourWeather.symbolName.getter();
    String.write(to:)();
    swift_bridgeObjectRelease();
    HourWeather.dewPoint.getter();
    sub_10011B0A0();
    sub_1008BA04C();
    uint64_t v48 = *(void (**)(void))(v42 + 8);
    sub_100164FC8();
    v48();
    HourWeather.humidity.getter();
    FixedSizeTypeBinaryCodable.write(to:)();
    HourWeather.isDaylight.getter();
    FixedSizeTypeBinaryCodable.write(to:)();
    sub_1008C68F0();
    HourWeather.precipitation.getter();
    Precipitation.write(to:)();
    sub_100162F0C();
    v49();
    HourWeather.precipitationChance.getter();
    sub_1001D259C();
    sub_1008C68F0();
    HourWeather.precipitationAmount.getter();
    sub_1008C701C();
    uint64_t v50 = *(void (**)(void))(v43 + 8);
    sub_100164938();
    v50();
    sub_1008C68F0();
    HourWeather.snowfallAmount.getter();
    sub_1008BA04C();
    sub_100164938();
    v50();
    sub_1008C7AD4();
    HourWeather.apparentPrecipitationIntensity.getter();
    ApparentPrecipitationIntensity.write(to:)();
    if (v50)
    {
      uint64_t v51 = sub_1008C796C();
    }
    else
    {
      sub_100162F0C();
      v54();
      sub_1008C83E8();
      HourWeather.pressure.getter();
      sub_1008C7B3C();
      sub_100162F0C();
      v55();
      sub_1008C7AD4();
      HourWeather.pressureTrend.getter();
      PressureTrend.write(to:)();
      sub_1008C74DC();
      sub_100162F0C();
      v56();
      sub_1008C83E8();
      HourWeather.temperature.getter();
      sub_1008C7B3C();
      sub_100164FC8();
      v48();
      sub_1008C7AD4();
      HourWeather.apparentTemperature.getter();
      sub_1008C7B3C();
      sub_100164FC8();
      v48();
      sub_100127A68();
      HourWeather.uvIndex.getter();
      UVIndex.value.getter();
      FixedSizeTypeBinaryCodable.write(to:)();
      UVIndex.category.getter();
      LocationAuthorizationState.write(to:)();
      sub_100164F40();
      v57();
      sub_100127A68();
      HourWeather.visibility.getter();
      sub_1008BA04C();
      sub_1001629F8();
      MEMORY[0]();
      sub_1008C6DE4();
      HourWeather.wind.getter();
      sub_1008C7B58();
      uint64_t v51 = sub_1008C6EA0();
      uint64_t v52 = *(void *)(v46 - 256);
    }
    v53(v51, v52);
  }
  sub_1001194B0();
  sub_100163164();
}

void sub_1008A6F90(uint64_t a1@<X8>)
{
  uint64_t v3 = static String.read(from:)();
  if (!v1)
  {
    uint64_t v5 = v3;
    uint64_t v6 = v4;
    sub_1008C7734();
    uint64_t v7 = sub_1008C6914();
    uint64_t v9 = v8;
    uint64_t v17 = sub_1008C6914();
    uint64_t v20 = v10;
    uint64_t v15 = sub_1008C6914();
    uint64_t v16 = v11;
    sub_1008C6914();
    sub_1008C7734();
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v18;
    *(void *)(a1 + 24) = v19;
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v9;
    *(void *)(a1 + 48) = v17;
    *(void *)(a1 + 56) = v20;
    *(void *)(a1 + 64) = v15;
    *(void *)(a1 + 72) = v16;
    sub_1008C80D8();
    *(void *)(a1 + 80) = v13;
    *(void *)(a1 + 88) = v12;
    *(_OWORD *)(a1 + 96) = v14;
  }
}

uint64_t sub_1008A7138()
{
  uint64_t result = sub_1008C6AA0();
  if (!v1)
  {
    sub_1001278D0(v0 + 16, (uint64_t)v5, &qword_100E65F18);
    sub_1001278D0((uint64_t)v5, (uint64_t)v3, &qword_100E65F18);
    sub_10017DF08(&qword_100E65F18);
    sub_1001D678C();
    sub_10011C0C4();
    sub_10011C0C4();
    sub_10011C0C4();
    sub_10011C0C4();
    sub_1001278D0(v0 + 96, (uint64_t)v4, &qword_100E65F18);
    sub_1001278D0((uint64_t)v4, (uint64_t)v3, &qword_100E65F18);
    return sub_1001D678C();
  }
  return result;
}

void sub_1008A7250()
{
  sub_10016314C();
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_10011BA28();
  uint64_t v6 = type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel();
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  uint64_t v8 = sub_1008C70EC();
  if (!v0)
  {
    uint64_t v10 = v8;
    uint64_t v11 = v9;
    static Optional<A>.read(from:)();
    uint64_t v20 = sub_1008C76F8();
    uint64_t v23 = v12;
    uint64_t v13 = sub_1008C76F8();
    uint64_t v15 = v14;
    uint64_t v19 = v13;
    sub_1008C6AB8();
    sub_1008B47B0();
    uint64_t v16 = sub_100119464();
    sub_1008C5A14(v16, v17);
    *uint64_t v3 = v10;
    v3[1] = v11;
    v3[2] = v21;
    v3[3] = v22;
    v3[4] = v20;
    v3[5] = v23;
    v3[6] = v19;
    v3[7] = v15;
    uint64_t v18 = type metadata accessor for ListPreprocessedDataModel();
    sub_1008C5A14(v1, (uint64_t)v3 + *(int *)(v18 + 32));
  }
  sub_100191138();
  sub_100163164();
}

void sub_1008A7410()
{
  sub_1001818B4();
  sub_1008C6AA0();
  if (!v0)
  {
    sub_10017DF08(&qword_100E65F18);
    sub_1008C7C9C();
    sub_10011C0C4();
    sub_10011C0C4();
    type metadata accessor for ListPreprocessedDataModel();
    sub_1008C68B0();
    Date.write(to:)();
    type metadata accessor for WeatherConditionBackgroundTimeData();
    sub_100214E24();
    sub_10017DF08(&qword_100E63760);
    sub_1008BD0B8((uint64_t)&unk_100E95810);
    sub_1008BD0B8((uint64_t)&unk_100E95818);
    sub_1008C686C();
    sub_1008C6DA8();
    sub_10017DF08(&qword_100E63768);
    sub_1008BD0B8((uint64_t)&unk_100E95820);
    sub_1008BD0B8((uint64_t)&unk_100E95828);
    sub_100214E4C();
  }
  sub_1008C7AE4();
}

void static MinuteCondition.read(from:)()
{
}

void MinuteCondition.write(to:)()
{
  sub_10016314C();
  type metadata accessor for PrecipitationShift();
  sub_100179C0C();
  uint64_t v10 = v2;
  __chkstk_darwin(v3);
  sub_1008C7164(v4, v10);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_10008B8C0();
  sub_10017DF08((uint64_t *)&unk_100E73CA0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_10018AF2C();
  sub_100179C0C();
  __chkstk_darwin(v7);
  sub_1008C70CC();
  MinuteCondition.date.getter();
  sub_1008C8194();
  sub_100164F40();
  if (!v1)
  {
    v8();
    sub_1008C7598();
    MinuteCondition.expirationDate.getter();
    sub_1008C7BDC();
    sub_1008C59C8(v0, (uint64_t)&unk_100E73CA0);
    MinuteCondition.shortDescription.getter();
    sub_1001EA888();
    swift_bridgeObjectRelease();
    MinuteCondition.longDescription.getter();
    sub_1001EA888();
    swift_bridgeObjectRelease();
    MinuteCondition.parameters.getter();
    sub_1008C84DC();
    swift_bridgeObjectRelease();
    sub_1008C7598();
    MinuteCondition.token.getter();
    NextHourToken.write(to:)();
    sub_100162F0C();
    v9();
    sub_1008C7598();
    MinuteCondition.shift.getter();
    PrecipitationShift.write(to:)();
    sub_100162F0C();
  }
  v8();
  sub_1008C6C44();
  sub_100163164();
}

void static MinuteSummary.read(from:)()
{
  sub_1001818B4();
  uint64_t v19 = v1;
  uint64_t v20 = v2;
  uint64_t v18 = v0;
  v17[3] = v3;
  uint64_t v4 = sub_10017DF08(&qword_100E9D2A8);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  v17[4] = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10011B0E8();
  sub_100179C0C();
  v17[5] = v8;
  __chkstk_darwin(v9);
  sub_10012B614();
  __chkstk_darwin(v10);
  sub_1001EC3C8();
  uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_1001835FC();
  sub_100179C0C();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_10017F5D8();
  uint64_t v16 = v18;
  static Date.read(from:)();
  if (!v16)
  {
    uint64_t v18 = v14;
    void v17[2] = v7;
    sub_10011958C();
    static Optional<A>.read(from:)();
    static Precipitation.read(from:)();
    static Precipitation.read(from:)();
    sub_1008C75D8();
    static FixedSizeTypeBinaryCodable.read(from:)();
    type metadata accessor for ApparentPrecipitationIntensity();
    v17[1] = sub_1008BD0B8((uint64_t)&unk_100E9D2B0);
    sub_1008BD0B8((uint64_t)&unk_100E9D2B8);
    sub_1008C70B4();
    static Optional<A>.read(from:)();
    MinuteSummary.init(date:expirationDate:precipitation:precipitationKind:precipitationChance:apparentPrecipitationIntensity:)();
  }
  sub_1001194B0();
  sub_100162C04();
}

void MinuteSummary.write(to:)()
{
  sub_10016314C();
  uint64_t v21 = v0;
  v17[1] = sub_10017DF08(&qword_100E9D2A8);
  sub_100162E4C();
  __chkstk_darwin(v3);
  v17[0] = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011B0E8();
  sub_100179C0C();
  uint64_t v18 = v6;
  uint64_t v19 = v5;
  __chkstk_darwin(v5);
  sub_100162824();
  __chkstk_darwin(v7);
  sub_100182F0C();
  uint64_t v20 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_10017C704();
  type metadata accessor for Date();
  sub_100179C0C();
  __chkstk_darwin(v9);
  sub_1001D40F4();
  MinuteSummary.date.getter();
  uint64_t v10 = v21;
  Date.write(to:)();
  if (v10)
  {
    sub_100164938();
    v11();
  }
  else
  {
    uint64_t v21 = v1;
    sub_100164938();
    v12();
    MinuteSummary.expirationDate.getter();
    Optional<A>.write(to:)();
    sub_1008C59C8(v2, (uint64_t)&unk_100E73CA0);
    sub_1008C6D84();
    MinuteSummary.precipitation.getter();
    Precipitation.write(to:)();
    uint64_t v13 = v19;
    uint64_t v14 = *(void (**)(void))(v18 + 8);
    sub_1008C7570();
    sub_10016285C();
    v14();
    uint64_t v15 = v21;
    MinuteSummary.precipitationKind.getter();
    Precipitation.write(to:)();
    ((void (*)(uint64_t, uint64_t))v14)(v15, v13);
    sub_1008C6D84();
    MinuteSummary.precipitationChance.getter();
    sub_100214EA0();
    FixedSizeTypeBinaryCodable.write(to:)();
    uint64_t v16 = v17[0];
    MinuteSummary.apparentPrecipitationIntensity.getter();
    sub_1008BD0B8((uint64_t)&unk_100E9D2B0);
    sub_1008BD0B8((uint64_t)&unk_100E9D2B8);
    Optional<A>.write(to:)();
    sub_1008C59C8(v16, (uint64_t)&qword_100E9D2A8);
  }
  sub_1001194B0();
  sub_100163164();
}

void static MinuteWeather.read(from:)()
{
  sub_100214F08();
  uint64_t v2 = type metadata accessor for ApparentPrecipitationIntensity();
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_10011BA80(v4, v8);
  sub_10017DF08(&qword_100E6D0A8);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_10017F948();
  type metadata accessor for Precipitation();
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_1001835FC();
  sub_100179C0C();
  __chkstk_darwin(v7);
  sub_100187254();
  sub_1008C7E74();
  static Date.read(from:)();
  if (!v0)
  {
    static Precipitation.read(from:)();
    sub_1008C670C();
    sub_1008C670C();
    sub_1001ABC4C(0, (unint64_t *)&qword_100E6BF18);
    static NSUnitSpeed.read(from:)();
    Measurement.init(value:unit:)();
    static ApparentPrecipitationIntensity.read(from:)(v1);
    MinuteWeather.init(date:precipitation:precipitationChance:precipitationIntensity:apparentPrecipitationIntensity:)();
  }
  sub_1008C67D0();
}

void MinuteWeather.write(to:)()
{
  sub_10016314C();
  type metadata accessor for ApparentPrecipitationIntensity();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_100185A80(v2, v9);
  sub_10017DF08(&qword_100E6D0A8);
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_100163E88();
  type metadata accessor for Precipitation();
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_10018AF2C();
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_10017F5D8();
  MinuteWeather.date.getter();
  Date.write(to:)();
  sub_1001649A8();
  if (!v0)
  {
    v6();
    sub_1008C845C();
    MinuteWeather.precipitation.getter();
    sub_1008C7D78();
    Precipitation.write(to:)();
    sub_100214E34();
    sub_100162F0C();
    v7();
    MinuteWeather.precipitationChance.getter();
    FixedSizeTypeBinaryCodable.write(to:)();
    sub_1008C845C();
    MinuteWeather.precipitationIntensity.getter();
    sub_1008C7D78();
    sub_1008BA04C();
    sub_100162F0C();
    v8();
    sub_1008C845C();
    MinuteWeather.apparentPrecipitationIntensity.getter();
    sub_1008C7D78();
    ApparentPrecipitationIntensity.write(to:)();
    sub_100184704();
    sub_100162F0C();
  }
  v6();
  sub_1008C6C44();
  sub_100163164();
}

void static Article.read(from:)()
{
  sub_10016314C();
  sub_1008C8664();
  type metadata accessor for Locale();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_100125FF8();
  sub_1008C6914();
  if (!v0)
  {
    static Array<A>.read(from:)();
    static Locale.read(from:)();
    sub_1008C7734();
    static Array<A>.read(from:)();
    type metadata accessor for UUID();
    static Array<A>.read(from:)();
    sub_1008C7A70();
    Article.init(id:supportedStorefronts:locale:headlineOverride:phenomena:alertIds:)();
  }
  sub_100191138();
  sub_100163164();
}

void Article.write(to:)()
{
  sub_1001A69AC();
  sub_100127C8C();
  type metadata accessor for Locale();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10011C760();
  Article.id.getter();
  sub_1001A4BA8();
  sub_1008C8174();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    Article.supportedStorefronts.getter();
    sub_1008C7CB4();
    sub_1001195EC();
    sub_1008C7B30();
    Article.locale.getter();
    sub_1008C8114();
    Locale.write(to:)();
    sub_100164938();
    v2();
    Article.headlineOverride.getter();
    sub_10017DF08(&qword_100E65F18);
    sub_1008C7C9C();
    swift_bridgeObjectRelease();
    Article.phenomena.getter();
    sub_1008C7CB4();
    sub_1001195EC();
    Article.alertIds.getter();
    sub_100162708();
    type metadata accessor for UUID();
    sub_1008C7CB4();
    sub_1008C8174();
  }
  swift_bridgeObjectRelease();
  sub_1008C7994();
  sub_1001847DC();
}

uint64_t static ArticlePlacementLocation.read(from:)()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    sub_1008C67EC();
    switch(v2)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
        sub_100127CEC();
        type metadata accessor for ArticlePlacementLocation();
        sub_100162E4C();
        uint64_t v6 = sub_1001290CC();
        uint64_t result = v7(v6);
        break;
      default:
        type metadata accessor for BinaryDecoder.Error();
        sub_1008BD0B8((uint64_t)&qword_100E95730);
        uint64_t v3 = sub_10017D4A4();
        sub_100183208(v3, v4);
        sub_100162880();
        sub_10017A8E8();
        v5();
        uint64_t result = swift_willThrow();
        break;
    }
  }
  return result;
}

uint64_t ArticlePlacementLocation.write(to:)()
{
  sub_100172494();
  type metadata accessor for ArticlePlacementLocation();
  sub_100179C0C();
  __chkstk_darwin(v0);
  int v2 = sub_10017EA64(v1, v8);
  v3(v2);
  uint64_t v4 = sub_1001821AC();
  int v6 = v5(v4);
  if (v6 == enum case for ArticlePlacementLocation.airQualityDetail(_:)
    || v6 == enum case for ArticlePlacementLocation.feelsLikeDetail(_:)
    || v6 == enum case for ArticlePlacementLocation.humidityDetail(_:)
    || v6 == enum case for ArticlePlacementLocation.moonDetail(_:)
    || v6 == enum case for ArticlePlacementLocation.precipitationDetail(_:)
    || v6 == enum case for ArticlePlacementLocation.precipitationAveragesDetail(_:)
    || v6 == enum case for ArticlePlacementLocation.pressureDetail(_:)
    || v6 == enum case for ArticlePlacementLocation.severe(_:)
    || v6 == enum case for ArticlePlacementLocation.sunriseSunsetDetail(_:)
    || v6 == enum case for ArticlePlacementLocation.temperatureDetail(_:)
    || v6 == enum case for ArticlePlacementLocation.trend(_:)
    || v6 == enum case for ArticlePlacementLocation.temperatureAveragesDetail(_:)
    || v6 == enum case for ArticlePlacementLocation.uvIndexDetail(_:)
    || v6 == enum case for ArticlePlacementLocation.visibilityDetail(_:)
    || v6 == enum case for ArticlePlacementLocation.windDetail(_:))
  {
    return sub_100186BCC();
  }
  uint64_t result = sub_1008C679C();
  __break(1u);
  return result;
}

uint64_t static News.read(from:)()
{
  sub_10008B8A8();
  type metadata accessor for ArticlePlacement();
  sub_1008BD0B8((uint64_t)&unk_100E9D2C0);
  sub_1008BD0B8((uint64_t)&unk_100E9D2C8);
  uint64_t result = sub_10019C304();
  if (!v0) {
    return News.init(placements:)();
  }
  return result;
}

uint64_t News.write(to:)()
{
  return sub_1008C7DE8();
}

void static ArticlePlacement.read(from:)()
{
  sub_1001A69AC();
  uint64_t v1 = type metadata accessor for ArticlePlacementLocation();
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_100152344();
  type metadata accessor for Article();
  sub_1008BD0B8((uint64_t)&unk_100E9D2D0);
  sub_1008BD0B8((uint64_t)&unk_100E9D2D8);
  sub_1008C6CBC();
  if (!v0)
  {
    static ArticlePlacementLocation.read(from:)();
    sub_100119464();
    ArticlePlacement.init(articles:location:)();
  }
  sub_100182C7C();
  sub_1001847DC();
}

void ArticlePlacement.write(to:)()
{
  sub_10016314C();
  type metadata accessor for ArticlePlacementLocation();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10016279C();
  ArticlePlacement.articles.getter();
  type metadata accessor for Article();
  sub_1008BD0B8((uint64_t)&unk_100E9D2D0);
  sub_1008BD0B8((uint64_t)&unk_100E9D2D8);
  sub_1008C6980();
  swift_bridgeObjectRelease();
  if (!v0)
  {
    ArticlePlacement.location.getter();
    ArticlePlacementLocation.write(to:)();
    uint64_t v2 = sub_1008C6CE0();
    v3(v2);
  }
  sub_1002EE5D4();
  sub_100163164();
}

void sub_1008A917C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_10016314C();
  sub_1008C6B98();
  type metadata accessor for News();
  sub_100179C0C();
  __chkstk_darwin(v15);
  sub_10011C760();
  sub_1001D1EFC();
  if (!v13)
  {
    if (a13 == 2)
    {
      type metadata accessor for NewsArticlePlacement();
      sub_1008BD0B8((uint64_t)&unk_100E9D568);
      sub_1008BD0B8((uint64_t)&unk_100E9D570);
      *uint64_t v14 = sub_1008C79D0();
      type metadata accessor for NewsDataModel();
      sub_1008C6A90();
    }
    else
    {
      if (a13 != 1)
      {
        type metadata accessor for BinaryDecoder.Error();
        sub_1008BD0B8((uint64_t)&qword_100E95730);
        uint64_t v17 = sub_10017D4A4();
        sub_100183208(v17, v18);
        sub_100162880();
        sub_10017A8E8();
        v19();
        swift_willThrow();
        goto LABEL_2;
      }
      type metadata accessor for ArticlePlacement();
      sub_1008BD0B8((uint64_t)&unk_100E9D2C0);
      sub_1008BD0B8((uint64_t)&unk_100E9D2C8);
      static Array<A>.read(from:)();
      News.init(placements:)();
      sub_1008C8408();
      sub_1001191A8();
      v16();
      type metadata accessor for NewsDataModel();
      sub_1008C6A80();
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_2:
  sub_100191138();
  sub_100163164();
}

void sub_1008A93EC()
{
  sub_10016314C();
  sub_100127C8C();
  type metadata accessor for News();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_100119564();
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_100162EB8();
  sub_1008C74C4();
  if (sub_1008C86A8() == 1)
  {
    sub_1008C787C();
    sub_100165320();
    if (!v0)
    {
      type metadata accessor for NewsArticlePlacement();
      sub_1008BD0B8((uint64_t)&unk_100E9D568);
      sub_1008BD0B8((uint64_t)&unk_100E9D570);
      sub_1000A9EAC();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1001627D4();
    v3();
    sub_100165320();
    if (!v0)
    {
      News.placements.getter();
      type metadata accessor for ArticlePlacement();
      sub_1008BD0B8((uint64_t)&unk_100E9D2C0);
      sub_1008BD0B8((uint64_t)&unk_100E9D2C8);
      sub_10012B950();
      sub_1008C77E8();
      sub_1001195EC();
    }
    uint64_t v4 = sub_10011958C();
    v5(v4);
  }
  sub_10016EF08();
  sub_100163164();
}

void static NextHourCondition.read(from:)()
{
}

void sub_1008A9668()
{
  sub_10016314C();
  uint64_t v9 = v1;
  uint64_t v2 = type metadata accessor for PrecipitationShift();
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_10017E3A0();
  type metadata accessor for NextHourToken();
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_10011C760();
  uint64_t v5 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_1008C6A30();
  sub_100179C0C();
  __chkstk_darwin(v7);
  sub_1008C7634();
  static Date.read(from:)();
  if (!v0)
  {
    sub_100127A9C();
    static Optional<A>.read(from:)();
    sub_1008C7DAC();
    sub_1008C7DAC();
    static Dictionary<>.read(from:)();
    sub_1008C6B80();
    static NextHourToken.read(from:)();
    sub_1008C6B80();
    static PrecipitationShift.read(from:)();
    uint64_t v8 = sub_1008C6FDC();
    v9(v8);
  }
  sub_10016EF08();
  sub_100163164();
}

void NextHourCondition.write(to:)()
{
  sub_10016314C();
  type metadata accessor for PrecipitationShift();
  sub_100179C0C();
  uint64_t v10 = v2;
  __chkstk_darwin(v3);
  sub_1008C7164(v4, v10);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_10008B8C0();
  sub_10017DF08((uint64_t *)&unk_100E73CA0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_10018AF2C();
  sub_100179C0C();
  __chkstk_darwin(v7);
  sub_1008C70CC();
  NextHourCondition.date.getter();
  sub_1008C8194();
  sub_100164F40();
  if (!v1)
  {
    v8();
    sub_1008C7598();
    NextHourCondition.expirationDate.getter();
    sub_1008C7BDC();
    sub_1008C59C8(v0, (uint64_t)&unk_100E73CA0);
    NextHourCondition.shortDescription.getter();
    sub_1001EA888();
    swift_bridgeObjectRelease();
    NextHourCondition.longDescription.getter();
    sub_1001EA888();
    swift_bridgeObjectRelease();
    NextHourCondition.parameters.getter();
    sub_1008C84DC();
    swift_bridgeObjectRelease();
    sub_1008C7598();
    NextHourCondition.token.getter();
    NextHourToken.write(to:)();
    sub_100162F0C();
    v9();
    sub_1008C7598();
    NextHourCondition.shift.getter();
    PrecipitationShift.write(to:)();
    sub_100162F0C();
  }
  v8();
  sub_1008C6C44();
  sub_100163164();
}

void static NextHourData.read(from:)()
{
  sub_1001A69AC();
  sub_1008C6BAC();
  type metadata accessor for NextHourPrecipitation();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10011C760();
  sub_1001D1EFC();
  if (!v0)
  {
    sub_1008C77DC();
    if (!v3 && v2 != 2)
    {
      if (v2 != 1)
      {
        type metadata accessor for BinaryDecoder.Error();
        sub_1008BD0B8((uint64_t)&qword_100E95730);
        uint64_t v6 = sub_10017D4A4();
        sub_100183208(v6, v7);
        sub_100162880();
        sub_10017A8E8();
        v8();
        swift_willThrow();
        goto LABEL_9;
      }
      sub_100214EA0();
      static NextHourPrecipitation.read(from:)();
      sub_1008C68CC();
      v4();
    }
    sub_100127CEC();
    type metadata accessor for NextHourData();
    sub_100162E4C();
    sub_1001631E8();
    v5();
  }
LABEL_9:
  sub_1008C6B8C();
  sub_1001847DC();
}

void NextHourData.write(to:)()
{
  sub_10016314C();
  sub_100127C8C();
  type metadata accessor for NextHourPrecipitation();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10011BA28();
  type metadata accessor for NextHourData();
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10019AEB0();
  v3();
  sub_1008C74AC();
  int v5 = v4();
  if (v5 == enum case for NextHourData.available(_:))
  {
    uint64_t v6 = sub_1008C7E18();
    v7(v6);
    sub_1001627D4();
    v8();
    sub_1008C73CC();
    sub_100165320();
    if (!v0)
    {
      sub_1008C6AD0();
      NextHourPrecipitation.write(to:)();
    }
    sub_100164F40();
    v9();
    goto LABEL_10;
  }
  if (v5 == enum case for NextHourData.temporarilyUnavailable(_:))
  {
    sub_1008C6EC0();
LABEL_9:
    sub_100165320();
LABEL_10:
    sub_10016EF08();
    sub_100163164();
    return;
  }
  if (v5 == enum case for NextHourData.unsupported(_:))
  {
    sub_1008C6E48();
    goto LABEL_9;
  }
  sub_1008C679C();
  __break(1u);
}

void static NextHourMinute.read(from:)()
{
  sub_100214F08();
  uint64_t v2 = v1;
  uint64_t HourPerceivedIntensity = type metadata accessor for NextHourPerceivedIntensity();
  uint64_t v4 = sub_100109308(HourPerceivedIntensity);
  __chkstk_darwin(v4);
  sub_100125FF8();
  sub_10017DF08(&qword_100E6D0A8);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_100158504();
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_100127B10();
  static Date.read(from:)();
  if (!v0)
  {
    sub_1008C7710();
    sub_1008C7710();
    sub_1001ABC4C(0, (unint64_t *)&qword_100E6BF18);
    static NSUnitSpeed.read(from:)();
    Measurement.init(value:unit:)();
    static NextHourPerceivedIntensity.read(from:)(v2);
    NextHourMinute.init(startDate:precipitationChance:precipitationIntensity:perceivedIntensity:)();
  }
  sub_1008C67D0();
}

void NextHourMinute.write(to:)()
{
  sub_10016314C();
  sub_1008C6D48();
  type metadata accessor for NextHourPerceivedIntensity();
  sub_100179C0C();
  v13[1] = v3;
  void v13[2] = v2;
  __chkstk_darwin(v2);
  void v13[3] = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E6D0A8);
  sub_100179C0C();
  v13[4] = v5;
  __chkstk_darwin(v6);
  sub_1000A9E24();
  sub_100179C0C();
  __chkstk_darwin(v7);
  sub_100187254();
  NextHourMinute.startDate.getter();
  uint64_t v14 = v1;
  sub_1008C81DC();
  Date.write(to:)();
  if (v0)
  {
    sub_10016285C();
    v8();
  }
  else
  {
    sub_10016285C();
    v9();
    NextHourMinute.precipitationChance.getter();
    FixedSizeTypeBinaryCodable.write(to:)();
    NextHourMinute.precipitationIntensity.getter();
    sub_1008BA04C();
    sub_1001A3510();
    sub_1001649A8();
    v10();
    NextHourMinute.perceivedIntensity.getter();
    NextHourPerceivedIntensity.write(to:)();
    uint64_t v11 = sub_1008C7318();
    v12(v11);
  }
  sub_10012B96C();
  sub_100163164();
}

void static NextHourPerceivedIntensity.read(from:)(uint64_t a1)
{
}

void NextHourPerceivedIntensity.write(to:)()
{
}

void static NextHourPerceivedIntensityScale.read(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1008B7290(a1, (uint64_t)&enum case for NextHourPerceivedIntensityScale.light(_:), (uint64_t)&type metadata accessor for NextHourPerceivedIntensityScale, (uint64_t)&enum case for NextHourPerceivedIntensityScale.medium(_:), (uint64_t)&enum case for NextHourPerceivedIntensityScale.heavy(_:), a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void NextHourPerceivedIntensityScale.write(to:)()
{
}

void static NextHourPrecipitation.read(from:)()
{
  sub_10016314C();
  type metadata accessor for Date();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_100158494();
  __chkstk_darwin(v2);
  sub_1008C7FA8();
  static Date.read(from:)();
  if (!v0)
  {
    static Date.read(from:)();
    type metadata accessor for NextHourCondition();
    sub_1008BD0B8((uint64_t)&unk_100E9D2E0);
    sub_1008BD0B8((uint64_t)&unk_100E9D2E8);
    sub_1008C8200();
    static Array<A>.read(from:)();
    type metadata accessor for NextHourSummary();
    sub_1008BD0B8((uint64_t)&unk_100E9D2F0);
    sub_1008BD0B8((uint64_t)&unk_100E9D2F8);
    sub_1008C8200();
    static Array<A>.read(from:)();
    type metadata accessor for NextHourMinute();
    sub_1008BD0B8((uint64_t)&unk_100E9D300);
    sub_1008BD0B8((uint64_t)&unk_100E9D308);
    sub_1008C8200();
    static Array<A>.read(from:)();
    NextHourPrecipitation.init(startDate:expirationDate:conditions:summaries:minutes:)();
  }
  sub_1001194B0();
  sub_100163164();
}

void NextHourPrecipitation.write(to:)()
{
  sub_10016314C();
  type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_1001870B8();
  __chkstk_darwin(v4);
  sub_1008C8050();
  NextHourPrecipitation.startDate.getter();
  sub_1008C7308();
  Date.write(to:)();
  if (v0)
  {
    sub_100164F40();
    v5();
  }
  else
  {
    uint64_t v6 = *(void (**)(void))(v2 + 8);
    sub_100164F40();
    v6();
    sub_1008C7B30();
    NextHourPrecipitation.expirationDate.getter();
    sub_1008C7C64();
    sub_1008C8390();
    sub_100164F40();
    v6();
    NextHourPrecipitation.conditions.getter();
    sub_100162708();
    type metadata accessor for NextHourCondition();
    sub_1008BD0B8((uint64_t)&unk_100E9D2E0);
    sub_1008BD0B8((uint64_t)&unk_100E9D2E8);
    sub_1008C7000();
    sub_1001195EC();
    NextHourPrecipitation.summaries.getter();
    sub_100162708();
    type metadata accessor for NextHourSummary();
    sub_1008BD0B8((uint64_t)&unk_100E9D2F0);
    sub_1008BD0B8((uint64_t)&unk_100E9D2F8);
    sub_1008C7000();
    sub_1001195EC();
    NextHourPrecipitation.minutes.getter();
    sub_100162708();
    type metadata accessor for NextHourMinute();
    sub_1008BD0B8((uint64_t)&unk_100E9D300);
    sub_1008BD0B8((uint64_t)&unk_100E9D308);
    sub_10012B950();
    Array<A>.write(to:)();
    sub_1001195EC();
  }
  sub_10016EF08();
  sub_100163164();
}

void static NextHourSummary.read(from:)()
{
  sub_1001818B4();
  uint64_t v20 = v3;
  uint64_t v21 = v4;
  void v19[5] = v5;
  uint64_t v6 = sub_10017DF08(&qword_100E9D310);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  void v19[6] = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E9D2A8);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100166B4C();
  uint64_t v11 = type metadata accessor for Precipitation();
  sub_100179C0C();
  v19[7] = v12;
  __chkstk_darwin(v13);
  sub_100162F18();
  uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_1001835FC();
  sub_100179C0C();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  sub_1001D1640();
  static Date.read(from:)();
  if (!v0)
  {
    v19[3] = v11;
    v19[4] = v2;
    v19[2] = v1;
    v19[8] = v17;
    sub_100127C2C();
    static Optional<A>.read(from:)();
    sub_100214EA0();
    static Precipitation.read(from:)();
    sub_1001D1EFC();
    type metadata accessor for ApparentPrecipitationIntensity();
    v19[1] = sub_1008BD0B8((uint64_t)&unk_100E9D2B0);
    sub_1008BD0B8((uint64_t)&unk_100E9D2B8);
    sub_1008C7BB8();
    static Optional<A>.read(from:)();
    type metadata accessor for NextHourPerceivedIntensity();
    sub_1008BD0B8((uint64_t)&unk_100E9D318);
    sub_1008BD0B8((uint64_t)&unk_100E9D320);
    static Optional<A>.read(from:)();
    sub_1008C7D6C();
    NextHourSummary.init(startDate:endDate:precipitation:precipitationChance:apparentPrecipitationIntensity:perceivedIntensity:)();
  }
  sub_100191138();
  sub_100162C04();
}

void NextHourSummary.write(to:)()
{
  sub_10016314C();
  uint64_t v22 = v0;
  v18[1] = sub_10017DF08(&qword_100E9D310);
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_10011BA80(v3, v18[0]);
  v18[3] = sub_10017DF08(&qword_100E9D2A8);
  sub_100162E4C();
  __chkstk_darwin(v4);
  uint64_t v19 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011B0E8();
  sub_100179C0C();
  uint64_t v20 = v6;
  uint64_t v21 = v7;
  __chkstk_darwin(v6);
  sub_100162F18();
  uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_1000A9E24();
  sub_100179C0C();
  __chkstk_darwin(v10);
  sub_10017F5D8();
  NextHourSummary.startDate.getter();
  uint64_t v11 = v22;
  Date.write(to:)();
  if (v11)
  {
    sub_1001649A8();
    v12();
  }
  else
  {
    sub_1001649A8();
    v13();
    sub_1008C7C24();
    NextHourSummary.endDate.getter();
    sub_1008C7564();
    sub_1008C8220();
    sub_1008C59C8(v1, (uint64_t)&unk_100E73CA0);
    sub_1008C776C();
    NextHourSummary.precipitation.getter();
    Precipitation.write(to:)();
    if (v8)
    {
      sub_100162F0C();
      v14();
    }
    else
    {
      sub_100162F0C();
      v15();
      sub_1008C776C();
      NextHourSummary.precipitationChance.getter();
      FixedSizeTypeBinaryCodable.write(to:)();
      uint64_t v16 = (uint64_t)v19;
      sub_1008C7C24();
      NextHourSummary.apparentPrecipitationIntensity.getter();
      sub_1008BD0B8((uint64_t)&unk_100E9D2B0);
      sub_1008BD0B8((uint64_t)&unk_100E9D2B8);
      sub_1008C8220();
      sub_1008C59C8(v16, (uint64_t)&qword_100E9D2A8);
      uint64_t v17 = v18[2];
      sub_1008C7C24();
      NextHourSummary.perceivedIntensity.getter();
      sub_1008BD0B8((uint64_t)&unk_100E9D318);
      sub_1008BD0B8((uint64_t)&unk_100E9D320);
      sub_1008C8220();
      sub_1008C59C8(v17, (uint64_t)&qword_100E9D310);
    }
  }
  sub_1001194B0();
  sub_100163164();
}

uint64_t static NextHourToken.read(from:)()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    sub_1008C67EC();
    switch(v3)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
      case 24:
      case 25:
      case 26:
      case 27:
      case 28:
      case 29:
      case 30:
      case 31:
      case 32:
      case 33:
      case 34:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:
      case 41:
      case 42:
      case 43:
      case 44:
      case 45:
      case 46:
      case 47:
      case 48:
      case 49:
      case 50:
      case 51:
      case 52:
      case 53:
      case 54:
      case 55:
      case 56:
      case 57:
      case 58:
      case 59:
      case 60:
      case 61:
      case 62:
      case 63:
LABEL_4:
        sub_100127CEC();
        type metadata accessor for NextHourToken();
        sub_100162E4C();
        uint64_t v4 = sub_1001290CC();
        uint64_t result = v5(v4);
        break;
      default:
        switch(v2)
        {
          case 'A':
          case 'B':
          case 'C':
          case 'D':
          case 'E':
          case 'F':
          case 'G':
          case 'H':
          case 'I':
          case 'J':
          case 'K':
          case 'L':
          case 'M':
          case 'N':
          case 'O':
          case 'P':
          case 'Q':
          case 'R':
          case 'S':
          case 'T':
          case 'U':
          case 'V':
          case 'W':
          case 'X':
          case 'Y':
          case 'Z':
          case '[':
          case '\\':
          case ']':
          case '^':
          case '_':
          case 'a':
          case 'b':
          case 'c':
          case 'd':
          case 'e':
            goto LABEL_4;
          default:
            type metadata accessor for BinaryDecoder.Error();
            sub_1008BD0B8((uint64_t)&qword_100E95730);
            uint64_t v6 = sub_10017D4A4();
            sub_100183208(v6, v7);
            sub_100162880();
            sub_10017A8E8();
            v8();
            uint64_t result = swift_willThrow();
            break;
        }
        break;
    }
  }
  return result;
}

uint64_t NextHourToken.write(to:)()
{
  sub_100172494();
  type metadata accessor for NextHourToken();
  sub_100179C0C();
  __chkstk_darwin(v0);
  int v2 = sub_10017EA64(v1, v8);
  v3(v2);
  uint64_t v4 = sub_1001821AC();
  int v6 = v5(v4);
  if (v6 == enum case for NextHourToken.possibleDrizzle(_:)
    || v6 == enum case for NextHourToken.possibleDrizzleStart(_:)
    || v6 == enum case for NextHourToken.possibleDrizzleStop(_:)
    || v6 == enum case for NextHourToken.possibleDrizzleStartStop(_:)
    || v6 == enum case for NextHourToken.possibleDrizzleStopStart(_:)
    || v6 == enum case for NextHourToken.drizzle(_:)
    || v6 == enum case for NextHourToken.drizzleStart(_:)
    || v6 == enum case for NextHourToken.drizzleStop(_:)
    || v6 == enum case for NextHourToken.drizzleStartStop(_:)
    || v6 == enum case for NextHourToken.drizzleStopStart(_:)
    || v6 == enum case for NextHourToken.rain(_:)
    || v6 == enum case for NextHourToken.rainStart(_:)
    || v6 == enum case for NextHourToken.rainStop(_:)
    || v6 == enum case for NextHourToken.rainStartStop(_:)
    || v6 == enum case for NextHourToken.rainStopStart(_:)
    || v6 == enum case for NextHourToken.heavyRain(_:)
    || v6 == enum case for NextHourToken.heavyRainStart(_:)
    || v6 == enum case for NextHourToken.heavyRainStop(_:)
    || v6 == enum case for NextHourToken.heavyRainStopStart(_:)
    || v6 == enum case for NextHourToken.heavyRainStartStop(_:)
    || v6 == enum case for NextHourToken.drizzleToHeavyRain(_:)
    || v6 == enum case for NextHourToken.heavyRainToDrizzle(_:)
    || v6 == enum case for NextHourToken.rainToHeavyRain(_:)
    || v6 == enum case for NextHourToken.heavyRainToRain(_:)
    || v6 == enum case for NextHourToken.drizzleToHeavyRainStart(_:)
    || v6 == enum case for NextHourToken.heavyRainToDrizzleStart(_:)
    || v6 == enum case for NextHourToken.rainToHeavyRainStart(_:)
    || v6 == enum case for NextHourToken.heavyRainToRainStart(_:)
    || v6 == enum case for NextHourToken.drizzleToHeavyRainStop(_:)
    || v6 == enum case for NextHourToken.heavyRainToDrizzleStop(_:)
    || v6 == enum case for NextHourToken.rainToHeavyRainStop(_:)
    || v6 == enum case for NextHourToken.heavyRainToRainStop(_:)
    || v6 == enum case for NextHourToken.drizzleToHeavyRainStartStop(_:)
    || v6 == enum case for NextHourToken.heavyRainToDrizzleStartStop(_:)
    || v6 == enum case for NextHourToken.rainToHeavyRainStartStop(_:)
    || v6 == enum case for NextHourToken.heavyRainToRainStartStop(_:)
    || v6 == enum case for NextHourToken.drizzleToHeavyRainStopStart(_:)
    || v6 == enum case for NextHourToken.heavyRainToDrizzleStopStart(_:)
    || v6 == enum case for NextHourToken.rainToHeavyRainStopStart(_:)
    || v6 == enum case for NextHourToken.heavyRainToRainStopStart(_:)
    || v6 == enum case for NextHourToken.possibleFlurries(_:)
    || v6 == enum case for NextHourToken.possibleFlurriesStart(_:)
    || v6 == enum case for NextHourToken.possibleFlurriesStop(_:)
    || v6 == enum case for NextHourToken.possibleFlurriesStartStop(_:)
    || v6 == enum case for NextHourToken.possibleFlurriesStopStart(_:)
    || v6 == enum case for NextHourToken.flurries(_:)
    || v6 == enum case for NextHourToken.flurriesStart(_:)
    || v6 == enum case for NextHourToken.flurriesStop(_:)
    || v6 == enum case for NextHourToken.flurriesStartStop(_:)
    || v6 == enum case for NextHourToken.flurriesStopStart(_:)
    || v6 == enum case for NextHourToken.snow(_:)
    || v6 == enum case for NextHourToken.snowStart(_:)
    || v6 == enum case for NextHourToken.snowStop(_:)
    || v6 == enum case for NextHourToken.snowStartStop(_:)
    || v6 == enum case for NextHourToken.snowStopStart(_:)
    || v6 == enum case for NextHourToken.heavySnow(_:)
    || v6 == enum case for NextHourToken.heavySnowStart(_:)
    || v6 == enum case for NextHourToken.heavySnowStop(_:)
    || v6 == enum case for NextHourToken.heavySnowStopStart(_:)
    || v6 == enum case for NextHourToken.heavySnowStartStop(_:)
    || v6 == enum case for NextHourToken.flurriesToHeavySnow(_:)
    || v6 == enum case for NextHourToken.heavySnowToFlurries(_:)
    || v6 == enum case for NextHourToken.snowToHeavySnow(_:)
    || v6 == enum case for NextHourToken.heavySnowToSnow(_:)
    || v6 == enum case for NextHourToken.flurriesToHeavySnowStart(_:)
    || v6 == enum case for NextHourToken.heavySnowToFlurriesStart(_:)
    || v6 == enum case for NextHourToken.snowToHeavySnowStart(_:)
    || v6 == enum case for NextHourToken.heavySnowToSnowStart(_:)
    || v6 == enum case for NextHourToken.flurriesToHeavySnowStop(_:)
    || v6 == enum case for NextHourToken.heavySnowToFlurriesStop(_:)
    || v6 == enum case for NextHourToken.snowToHeavySnowStop(_:)
    || v6 == enum case for NextHourToken.heavySnowToSnowStop(_:)
    || v6 == enum case for NextHourToken.flurriesToHeavySnowStartStop(_:)
    || v6 == enum case for NextHourToken.heavySnowToFlurriesStartStop(_:)
    || v6 == enum case for NextHourToken.snowToHeavySnowStartStop(_:)
    || v6 == enum case for NextHourToken.heavySnowToSnowStartStop(_:)
    || v6 == enum case for NextHourToken.flurriesToHeavySnowStopStart(_:)
    || v6 == enum case for NextHourToken.heavySnowToFlurriesStopStart(_:)
    || v6 == enum case for NextHourToken.snowToHeavySnowStopStart(_:)
    || v6 == enum case for NextHourToken.heavySnowToSnowStopStart(_:)
    || v6 == enum case for NextHourToken.possibleSleet(_:)
    || v6 == enum case for NextHourToken.possibleSleetStart(_:)
    || v6 == enum case for NextHourToken.possibleSleetStop(_:)
    || v6 == enum case for NextHourToken.possibleSleetStartStop(_:)
    || v6 == enum case for NextHourToken.possibleSleetStopStart(_:)
    || v6 == enum case for NextHourToken.sleet(_:)
    || v6 == enum case for NextHourToken.sleetStart(_:)
    || v6 == enum case for NextHourToken.sleetStop(_:)
    || v6 == enum case for NextHourToken.sleetStartStop(_:)
    || v6 == enum case for NextHourToken.sleetStopStart(_:)
    || v6 == enum case for NextHourToken.possibleHail(_:)
    || v6 == enum case for NextHourToken.possibleHailStart(_:)
    || v6 == enum case for NextHourToken.possibleHailStop(_:)
    || v6 == enum case for NextHourToken.possibleHailStartStop(_:)
    || v6 == enum case for NextHourToken.possibleHailStopStart(_:)
    || v6 == enum case for NextHourToken.hail(_:)
    || v6 == enum case for NextHourToken.hailStart(_:)
    || v6 == enum case for NextHourToken.hailStop(_:)
    || v6 == enum case for NextHourToken.hailStartStop(_:)
    || v6 == enum case for NextHourToken.hailStopStart(_:)
    || v6 == enum case for NextHourToken.clear(_:))
  {
    return sub_100186BCC();
  }
  uint64_t result = sub_1008C679C();
  __break(1u);
  return result;
}

void static MoonEvents.read(from:)()
{
  sub_1001A69AC();
  uint64_t v1 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_100162824();
  __chkstk_darwin(v3);
  static MoonPhase.read(from:)();
  if (!v0)
  {
    type metadata accessor for Date();
    static Optional<A>.read(from:)();
    sub_1008C7C34();
    static Optional<A>.read(from:)();
    sub_1008C7A58();
    MoonEvents.init(phase:moonrise:moonset:)();
  }
  sub_100182C7C();
  sub_1001847DC();
}

void MoonEvents.write(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_1001A69AC();
  a17 = v20;
  a18 = v21;
  sub_10017DF08((uint64_t *)&unk_100E73CA0);
  sub_100162E4C();
  __chkstk_darwin(v22);
  sub_100162824();
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&a9 - v24;
  MoonEvents.phase.getter();
  MoonPhase.write(to:)();
  if (!v18)
  {
    sub_1008C83E8();
    MoonEvents.moonrise.getter();
    Optional<A>.write(to:)();
    sub_1008C59C8((uint64_t)v25, (uint64_t)&unk_100E73CA0);
    sub_1008C68F0();
    MoonEvents.moonset.getter();
    sub_1008C8220();
    sub_1008C59C8(v19, (uint64_t)&unk_100E73CA0);
  }
  sub_1001847DC();
}

uint64_t sub_1008AC71C()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    uint64_t result = sub_1008C775C(result, v2, v3, v4, v5, v6, v7, v8, v13, v14, SWORD2(v14), SBYTE6(v14), HIBYTE(v14));
    if (v9 >= 8)
    {
      type metadata accessor for BinaryDecoder.Error();
      sub_1008BD0B8((uint64_t)&qword_100E95730);
      uint64_t v10 = sub_10017D4A4();
      sub_100183208(v10, v11);
      sub_100162880();
      sub_10017A8E8();
      v12();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1008AC7E8()
{
  return FixedSizeTypeBinaryCodable.write(to:)();
}

uint64_t sub_1008AC948()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    uint64_t result = v6;
    if (v6 != 3 && v6 != 2)
    {
      if (v6 == 1)
      {
        sub_1001D1EFC();
        return v5;
      }
      else
      {
        type metadata accessor for BinaryDecoder.Error();
        sub_1008BD0B8((uint64_t)&qword_100E95730);
        uint64_t v2 = sub_10017D4A4();
        sub_100183208(v2, v3);
        sub_100162880();
        sub_10017A8E8();
        v4();
        return swift_willThrow();
      }
    }
  }
  return result;
}

uint64_t sub_1008ACA58(uint64_t a1, char a2)
{
  if (a2 == 2) {
    return FixedSizeTypeBinaryCodable.write(to:)();
  }
  if (a2 == 3) {
    return FixedSizeTypeBinaryCodable.write(to:)();
  }
  sub_1008C7F7C();
  uint64_t result = sub_1008C7E30();
  if (!v2) {
    return FixedSizeTypeBinaryCodable.write(to:)();
  }
  return result;
}

uint64_t static Precipitation.read(from:)()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    sub_1008C67EC();
    switch(v2)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        sub_100127CEC();
        type metadata accessor for Precipitation();
        sub_100162E4C();
        uint64_t v6 = sub_1001290CC();
        uint64_t result = v7(v6);
        break;
      default:
        type metadata accessor for BinaryDecoder.Error();
        sub_1008BD0B8((uint64_t)&qword_100E95730);
        uint64_t v3 = sub_10017D4A4();
        sub_100183208(v3, v4);
        sub_100162880();
        sub_10017A8E8();
        v5();
        uint64_t result = swift_willThrow();
        break;
    }
  }
  return result;
}

uint64_t Precipitation.write(to:)()
{
  sub_100172494();
  type metadata accessor for Precipitation();
  sub_100179C0C();
  __chkstk_darwin(v0);
  int v2 = sub_10017EA64(v1, v8);
  v3(v2);
  uint64_t v4 = sub_1001821AC();
  int v6 = v5(v4);
  if (v6 == enum case for Precipitation.none(_:)
    || v6 == enum case for Precipitation.hail(_:)
    || v6 == enum case for Precipitation.mixed(_:)
    || v6 == enum case for Precipitation.rain(_:)
    || v6 == enum case for Precipitation.sleet(_:)
    || v6 == enum case for Precipitation.snow(_:))
  {
    return sub_100186BCC();
  }
  uint64_t result = sub_1008C679C();
  __break(1u);
  return result;
}

void static PrecipitationAmount.read(from:)()
{
}

void PrecipitationAmount.write(to:)()
{
  sub_10016314C();
  sub_10017DF08(&qword_100E6B648);
  sub_100179C0C();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  v14[0] = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v5);
  v14[1] = (char *)v14 - v6;
  sub_1001626D4();
  __chkstk_darwin(v7);
  void v14[2] = (char *)v14 - v8;
  sub_1001626D4();
  __chkstk_darwin(v9);
  sub_1001190EC();
  __chkstk_darwin(v10);
  sub_10019D2C0();
  __chkstk_darwin(v11);
  sub_1008C7898();
  PrecipitationAmount.pastHour.getter();
  sub_1008C7CF8();
  uint64_t v12 = *(void (**)(void))(v2 + 8);
  sub_10016285C();
  v12();
  if (!v0)
  {
    PrecipitationAmount.pastSixHours.getter();
    sub_1008C80FC();
    sub_10016285C();
    v12();
    PrecipitationAmount.pastTwentyFourHours.getter();
    sub_1008C80E4();
    sub_10016285C();
    v12();
    PrecipitationAmount.nextHour.getter();
    sub_1008C6A14();
    sub_10016285C();
    v12();
    sub_1008C8528();
    PrecipitationAmount.nextSixHours.getter();
    sub_1008C6A14();
    sub_10016285C();
    v12();
    sub_1008C8528();
    PrecipitationAmount.nextTwentyFourHours.getter();
    sub_1008C6A14();
    uint64_t v13 = sub_1008C81C8();
    ((void (*)(uint64_t))v12)(v13);
  }
  sub_1008C6C44();
  sub_100163164();
}

void static PrecipitationAmountByType.read(from:)()
{
  sub_1001818B4();
  sub_1008C81F4(v1);
  uint64_t v2 = type metadata accessor for SnowfallAmount();
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_100162F18();
  sub_10017DF08(&qword_100E6B648);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_10012B614();
  __chkstk_darwin(v5);
  sub_100164000();
  __chkstk_darwin(v6);
  sub_1001190EC();
  __chkstk_darwin(v7);
  sub_10019D2C0();
  __chkstk_darwin(v8);
  sub_1001EC3C8();
  sub_1008C670C();
  if (!v0)
  {
    sub_1001ABC4C(0, (unint64_t *)&qword_100E6B678);
    static NSUnitLength.read(from:)();
    sub_1008C781C();
    sub_1008C670C();
    sub_1008C6ADC();
    sub_1008C781C();
    sub_1008C670C();
    sub_1008C6ADC();
    sub_1008C781C();
    sub_1008C670C();
    sub_1008C6ADC();
    sub_1008C781C();
    sub_1008C670C();
    sub_1008C6ADC();
    sub_1008C781C();
    static SnowfallAmount.read(from:)();
    PrecipitationAmountByType.init(hail:mixed:rainfall:sleet:precipitation:snowfallAmount:)();
  }
  sub_10018B184();
  sub_100162C04();
}

void PrecipitationAmountByType.write(to:)()
{
  sub_10016314C();
  type metadata accessor for SnowfallAmount();
  sub_100179C0C();
  v17[1] = v3;
  void v17[2] = v2;
  __chkstk_darwin(v2);
  sub_10011BA80(v4, v17[0]);
  sub_10017DF08(&qword_100E6B648);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  v17[3] = (uint64_t)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v9);
  v17[4] = (uint64_t)v17 - v10;
  sub_1001626D4();
  __chkstk_darwin(v11);
  sub_1008C8540();
  __chkstk_darwin(v12);
  __chkstk_darwin(v13);
  sub_1008C6ECC();
  uint64_t v18 = v0;
  PrecipitationAmountByType.hail.getter();
  sub_1008BA04C();
  uint64_t v14 = *(void (**)(void))(v6 + 8);
  sub_100164938();
  v14();
  if (!v1)
  {
    PrecipitationAmountByType.mixed.getter();
    sub_1008BA04C();
    sub_1001A2B64();
    sub_100164938();
    v14();
    PrecipitationAmountByType.rainfall.getter();
    sub_1008C7A3C();
    sub_100164938();
    v14();
    PrecipitationAmountByType.sleet.getter();
    sub_1008C7A3C();
    sub_100164938();
    v14();
    PrecipitationAmountByType.precipitation.getter();
    sub_1008C7A3C();
    sub_100164938();
    v14();
    PrecipitationAmountByType.snowfallAmount.getter();
    SnowfallAmount.write(to:)();
    uint64_t v15 = sub_1008C7CE8();
    v16(v15);
  }
  sub_1008C83DC();
  sub_100163164();
}

void static SnowfallAmount.read(from:)()
{
}

void sub_1008AD778()
{
  sub_1001818B4();
  uint64_t v14 = v7;
  sub_10017DF08(&qword_100E6B648);
  sub_100179C0C();
  __chkstk_darwin(v8);
  sub_1001190EC();
  __chkstk_darwin(v9);
  sub_100181E70();
  __chkstk_darwin(v10);
  sub_100164000();
  __chkstk_darwin(v11);
  sub_1000B692C();
  __chkstk_darwin(v12);
  sub_10019D2C0();
  __chkstk_darwin(v13);
  sub_1001EC3C8();
  sub_10019C9D8();
  if (!v0)
  {
    sub_1001ABC4C(0, (unint64_t *)&qword_100E6B678);
    static NSUnitLength.read(from:)();
    sub_100127B8C();
    sub_10019C9D8();
    sub_1001092D0();
    sub_100127B8C();
    sub_10019C9D8();
    sub_1001092D0();
    sub_100127B8C();
    sub_10019C9D8();
    sub_1001092D0();
    sub_100127B8C();
    sub_10019C9D8();
    sub_1001092D0();
    sub_100127B8C();
    sub_10019C9D8();
    sub_1001092D0();
    sub_100127B8C();
    v14(v1, v3, v5, v2, v4, v6);
  }
  sub_10018B184();
  sub_100162C04();
}

void SnowfallAmount.write(to:)()
{
  sub_10016314C();
  sub_10017DF08(&qword_100E6B648);
  sub_100179C0C();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  v14[0] = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v5);
  v14[1] = (char *)v14 - v6;
  sub_1001626D4();
  __chkstk_darwin(v7);
  void v14[2] = (char *)v14 - v8;
  sub_1001626D4();
  __chkstk_darwin(v9);
  sub_1001190EC();
  __chkstk_darwin(v10);
  sub_10019D2C0();
  __chkstk_darwin(v11);
  sub_1008C7898();
  SnowfallAmount.amount.getter();
  sub_1008C7CF8();
  uint64_t v12 = *(void (**)(void))(v2 + 8);
  sub_10016285C();
  v12();
  if (!v0)
  {
    SnowfallAmount.maximum.getter();
    sub_1008C80FC();
    sub_10016285C();
    v12();
    SnowfallAmount.minimum.getter();
    sub_1008C80E4();
    sub_10016285C();
    v12();
    SnowfallAmount.amountLiquidEquivalent.getter();
    sub_1008C6A14();
    sub_10016285C();
    v12();
    sub_1008C8528();
    SnowfallAmount.maximumLiquidEquivalent.getter();
    sub_1008C6A14();
    sub_10016285C();
    v12();
    sub_1008C8528();
    SnowfallAmount.minimumLiquidEquivalent.getter();
    sub_1008C6A14();
    uint64_t v13 = sub_1008C81C8();
    ((void (*)(uint64_t))v12)(v13);
  }
  sub_1008C6C44();
  sub_100163164();
}

void static PrecipitationShift.read(from:)()
{
  sub_1001A69AC();
  sub_10008B8A8();
  uint64_t v1 = type metadata accessor for PrecipitationShift.Kind();
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_10012B938();
  uint64_t v3 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_100129860();
  __chkstk_darwin(v5);
  sub_1008C7FDC();
  static Optional<A>.read(from:)();
  if (!v0)
  {
    static Optional<A>.read(from:)();
    sub_1008C7C34();
    static PrecipitationShift.Kind.read(from:)();
    sub_1008C8450();
    sub_1008C7A58();
    PrecipitationShift.init(date:nextDate:kind:)();
  }
  sub_1001847DC();
}

void PrecipitationShift.write(to:)()
{
  sub_10016314C();
  uint64_t v11 = type metadata accessor for PrecipitationShift.Kind();
  sub_100179C0C();
  v10[1] = v2;
  __chkstk_darwin(v3);
  sub_10016279C();
  sub_10017DF08((uint64_t *)&unk_100E73CA0);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100189DD0();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v10 - v6;
  PrecipitationShift.date.getter();
  sub_1008C81DC();
  Optional<A>.write(to:)();
  sub_1008C59C8((uint64_t)v7, (uint64_t)&unk_100E73CA0);
  if (!v0)
  {
    sub_1008C83E8();
    PrecipitationShift.nextDate.getter();
    Optional<A>.write(to:)();
    sub_1008C59C8(v1, (uint64_t)&unk_100E73CA0);
    PrecipitationShift.kind.getter();
    PrecipitationShift.Kind.write(to:)();
    uint64_t v8 = sub_10012BF8C();
    v9(v8, v11);
  }
  sub_10012B96C();
  sub_100163164();
}

uint64_t static PrecipitationShift.Kind.read(from:)()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    sub_1008C67EC();
    switch(v3)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
      case 24:
      case 25:
      case 26:
      case 27:
      case 28:
      case 29:
      case 30:
      case 31:
      case 32:
      case 33:
      case 34:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:
      case 41:
      case 42:
      case 43:
      case 44:
      case 45:
      case 46:
      case 47:
      case 48:
      case 49:
      case 50:
      case 51:
      case 52:
      case 53:
      case 54:
      case 55:
      case 56:
      case 57:
      case 58:
      case 59:
      case 60:
      case 61:
      case 62:
      case 63:
LABEL_4:
        sub_100127CEC();
        type metadata accessor for PrecipitationShift.Kind();
        sub_100162E4C();
        uint64_t v4 = sub_1001290CC();
        uint64_t result = v5(v4);
        break;
      default:
        switch(v2)
        {
          case 'A':
          case 'B':
          case 'C':
          case 'D':
          case 'E':
          case 'F':
          case 'G':
          case 'H':
          case 'I':
          case 'J':
          case 'K':
          case 'L':
          case 'M':
          case 'N':
          case 'O':
          case 'P':
          case 'Q':
          case 'R':
          case 'S':
          case 'T':
          case 'U':
          case 'V':
          case 'W':
          case 'X':
          case 'Y':
          case 'Z':
          case '[':
          case '\\':
          case ']':
          case '^':
          case '_':
          case 'a':
          case 'b':
          case 'c':
          case 'd':
          case 'e':
            goto LABEL_4;
          default:
            type metadata accessor for BinaryDecoder.Error();
            sub_1008BD0B8((uint64_t)&qword_100E95730);
            uint64_t v6 = sub_10017D4A4();
            sub_100183208(v6, v7);
            sub_100162880();
            sub_10017A8E8();
            v8();
            uint64_t result = swift_willThrow();
            break;
        }
        break;
    }
  }
  return result;
}

uint64_t PrecipitationShift.Kind.write(to:)()
{
  sub_100172494();
  type metadata accessor for PrecipitationShift.Kind();
  sub_100179C0C();
  __chkstk_darwin(v0);
  int v2 = sub_10017EA64(v1, v8);
  v3(v2);
  uint64_t v4 = sub_1001821AC();
  int v6 = v5(v4);
  if (v6 == enum case for PrecipitationShift.Kind.possibleDrizzle(_:)
    || v6 == enum case for PrecipitationShift.Kind.possibleDrizzleStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.possibleDrizzleStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.possibleDrizzleStartStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.possibleDrizzleStopStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.drizzle(_:)
    || v6 == enum case for PrecipitationShift.Kind.drizzleStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.drizzleStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.drizzleStartStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.drizzleStopStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.rain(_:)
    || v6 == enum case for PrecipitationShift.Kind.rainStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.rainStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.rainStartStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.rainStopStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.heavyRain(_:)
    || v6 == enum case for PrecipitationShift.Kind.heavyRainStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.heavyRainStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.heavyRainStopStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.heavyRainStartStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.drizzleToHeavyRain(_:)
    || v6 == enum case for PrecipitationShift.Kind.heavyRainToDrizzle(_:)
    || v6 == enum case for PrecipitationShift.Kind.rainToHeavyRain(_:)
    || v6 == enum case for PrecipitationShift.Kind.heavyRainToRain(_:)
    || v6 == enum case for PrecipitationShift.Kind.drizzleToHeavyRainStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.heavyRainToDrizzleStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.rainToHeavyRainStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.heavyRainToRainStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.drizzleToHeavyRainStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.heavyRainToDrizzleStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.rainToHeavyRainStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.heavyRainToRainStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.drizzleToHeavyRainStartStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.heavyRainToDrizzleStartStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.rainToHeavyRainStartStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.heavyRainToRainStartStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.drizzleToHeavyRainStopStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.heavyRainToDrizzleStopStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.rainToHeavyRainStopStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.heavyRainToRainStopStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.possibleFlurries(_:)
    || v6 == enum case for PrecipitationShift.Kind.possibleFlurriesStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.possibleFlurriesStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.possibleFlurriesStartStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.possibleFlurriesStopStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.flurries(_:)
    || v6 == enum case for PrecipitationShift.Kind.flurriesStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.flurriesStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.flurriesStartStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.flurriesStopStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.snow(_:)
    || v6 == enum case for PrecipitationShift.Kind.snowStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.snowStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.snowStartStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.snowStopStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.heavySnow(_:)
    || v6 == enum case for PrecipitationShift.Kind.heavySnowStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.heavySnowStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.heavySnowStopStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.heavySnowStartStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.flurriesToHeavySnow(_:)
    || v6 == enum case for PrecipitationShift.Kind.heavySnowToFlurries(_:)
    || v6 == enum case for PrecipitationShift.Kind.snowToHeavySnow(_:)
    || v6 == enum case for PrecipitationShift.Kind.heavySnowToSnow(_:)
    || v6 == enum case for PrecipitationShift.Kind.flurriesToHeavySnowStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.heavySnowToFlurriesStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.snowToHeavySnowStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.heavySnowToSnowStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.flurriesToHeavySnowStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.heavySnowToFlurriesStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.snowToHeavySnowStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.heavySnowToSnowStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.flurriesToHeavySnowStartStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.heavySnowToFlurriesStartStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.snowToHeavySnowStartStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.heavySnowToSnowStartStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.flurriesToHeavySnowStopStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.heavySnowToFlurriesStopStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.snowToHeavySnowStopStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.heavySnowToSnowStopStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.possibleSleet(_:)
    || v6 == enum case for PrecipitationShift.Kind.possibleSleetStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.possibleSleetStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.possibleSleetStartStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.possibleSleetStopStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.sleet(_:)
    || v6 == enum case for PrecipitationShift.Kind.sleetStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.sleetStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.sleetStartStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.sleetStopStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.possibleHail(_:)
    || v6 == enum case for PrecipitationShift.Kind.possibleHailStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.possibleHailStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.possibleHailStartStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.possibleHailStopStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.hail(_:)
    || v6 == enum case for PrecipitationShift.Kind.hailStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.hailStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.hailStartStop(_:)
    || v6 == enum case for PrecipitationShift.Kind.hailStopStart(_:)
    || v6 == enum case for PrecipitationShift.Kind.clear(_:))
  {
    return sub_100186BCC();
  }
  uint64_t result = sub_1008C679C();
  __break(1u);
  return result;
}

void sub_1008AF374(uint64_t *a1@<X8>)
{
  sub_1008AF52C(v16);
  if (!v1)
  {
    uint64_t v3 = v16[0];
    uint64_t v4 = v16[1];
    uint64_t v5 = v16[2];
    uint64_t v6 = v16[3];
    uint64_t v7 = v16[4];
    uint64_t v8 = v16[5];
    uint64_t v17 = v16[6];
    uint64_t v14 = v16[8];
    uint64_t v15 = v16[7];
    uint64_t v12 = v16[10];
    uint64_t v13 = v16[9];
    uint64_t v11 = v16[11];
    uint64_t v9 = sub_1008C76E0();
    *a1 = v3;
    a1[1] = v4;
    a1[2] = v5;
    a1[3] = v6;
    a1[4] = v7;
    a1[5] = v8;
    a1[6] = v17;
    a1[7] = v15;
    a1[8] = v14;
    a1[9] = v13;
    a1[10] = v12;
    a1[11] = v11;
    a1[12] = v9;
    a1[13] = v10;
  }
}

uint64_t sub_1008AF454()
{
  uint64_t result = String.write(to:)();
  if (!v0)
  {
    String.write(to:)();
    String.write(to:)();
    String.write(to:)();
    String.write(to:)();
    String.write(to:)();
    return String.write(to:)();
  }
  return result;
}

void sub_1008AF52C(uint64_t *a1@<X8>)
{
  uint64_t v3 = static String.read(from:)();
  if (!v1)
  {
    uint64_t v5 = v3;
    uint64_t v6 = v4;
    uint64_t v7 = sub_1008C6B3C();
    uint64_t v9 = v8;
    uint64_t v10 = sub_1008C6B3C();
    uint64_t v12 = v11;
    uint64_t v18 = sub_1008C6B3C();
    uint64_t v19 = v13;
    sub_1008C6B3C();
    sub_1008C6B3C();
    *a1 = v5;
    a1[1] = v6;
    a1[2] = v7;
    a1[3] = v9;
    a1[4] = v10;
    a1[5] = v12;
    a1[6] = v18;
    a1[7] = v19;
    sub_1008C80D8();
    a1[8] = v15;
    a1[9] = v14;
    a1[10] = v16;
    a1[11] = v17;
  }
}

uint64_t sub_1008AF684()
{
  uint64_t result = sub_1008C6AA0();
  if (!v0)
  {
    String.write(to:)();
    String.write(to:)();
    String.write(to:)();
    String.write(to:)();
    return String.write(to:)();
  }
  return result;
}

void static PressureTrend.read(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1008B7290(a1, (uint64_t)&enum case for PressureTrend.rising(_:), (uint64_t)&type metadata accessor for PressureTrend, (uint64_t)&enum case for PressureTrend.falling(_:), (uint64_t)&enum case for PressureTrend.steady(_:), a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void PressureTrend.write(to:)()
{
}

void static ProviderAttribution.read(from:)()
{
  sub_1008C7DC4();
  uint64_t v1 = sub_10017DF08(&qword_100E749B0);
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_10016279C();
  static String.read(from:)();
  if (!v0)
  {
    type metadata accessor for URL();
    sub_1008C6CF8();
    static Optional<A>.read(from:)();
    sub_1008C8390();
    ProviderAttribution.init(name:logoURL:)();
  }
  sub_1008C7F64();
}

void ProviderAttribution.write(to:)()
{
  sub_10017DF08(&qword_100E749B0);
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_10016279C();
  ProviderAttribution.name.getter();
  String.write(to:)();
  swift_bridgeObjectRelease();
  if (!v0)
  {
    ProviderAttribution.logoURL.getter();
    sub_1008C76A0();
    sub_1008C73A8();
    sub_1008C59C8(v1, (uint64_t)&qword_100E749B0);
  }
  sub_1008C79A0();
}

void static SunEvents.read(from:)()
{
  sub_10016314C();
  v21[4] = v4;
  uint64_t v5 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  v21[5] = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v8);
  v21[6] = (char *)v21 - v9;
  sub_1001626D4();
  __chkstk_darwin(v10);
  sub_100109770();
  v21[7] = v11;
  sub_1001626D4();
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v21 - v13;
  __chkstk_darwin(v15);
  sub_10017FF4C();
  __chkstk_darwin(v16);
  sub_100164000();
  __chkstk_darwin(v17);
  sub_1000B692C();
  __chkstk_darwin(v18);
  sub_1001190EC();
  __chkstk_darwin(v19);
  sub_100181E70();
  __chkstk_darwin(v20);
  sub_1008C7FDC();
  static Optional<A>.read(from:)();
  if (!v0)
  {
    v21[1] = v14;
    v21[2] = v1;
    v21[3] = v2;
    sub_1008C85EC();
    static Optional<A>.read(from:)();
    v21[0] = v3;
    sub_1008C6DF0();
    sub_1008C6DF0();
    sub_1008C6DF0();
    sub_1008C6DF0();
    sub_1008C6DF0();
    sub_1008C6DF0();
    sub_1008C6DF0();
    sub_1008C6DF0();
    SunEvents.init(astronomicalDawn:nauticalDawn:civilDawn:sunrise:solarNoon:sunset:civilDusk:nauticalDusk:astronomicalDusk:solarMidnight:)();
  }
  sub_100163164();
}

void SunEvents.write(to:)()
{
  sub_10016314C();
  sub_10017DF08((uint64_t *)&unk_100E73CA0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_100162EF8();
  uint64_t v24 = v7;
  sub_1001626D4();
  __chkstk_darwin(v8);
  sub_100109770();
  uint64_t v25 = v9;
  sub_1001626D4();
  __chkstk_darwin(v10);
  sub_100109770();
  uint64_t v26 = v11;
  sub_1001626D4();
  __chkstk_darwin(v12);
  sub_1008C8540();
  __chkstk_darwin(v13);
  sub_1000B692C();
  __chkstk_darwin(v14);
  sub_10019D2C0();
  __chkstk_darwin(v15);
  sub_100181E70();
  __chkstk_darwin(v16);
  sub_10017FF4C();
  __chkstk_darwin(v17);
  sub_1001190EC();
  __chkstk_darwin(v18);
  sub_1008C6ECC();
  SunEvents.astronomicalDawn.getter();
  Optional<A>.write(to:)();
  if (v1)
  {
    uint64_t v23 = v2;
  }
  else
  {
    sub_1008C59C8(v2, (uint64_t)&unk_100E73CA0);
    SunEvents.nauticalDawn.getter();
    Optional<A>.write(to:)();
    sub_1008C59C8(v5, (uint64_t)&unk_100E73CA0);
    sub_1008C70C0();
    SunEvents.civilDawn.getter();
    sub_1001A87EC();
    uint64_t v19 = sub_1001823C8();
    sub_1008C59C8(v19, v20);
    SunEvents.sunrise.getter();
    Optional<A>.write(to:)();
    uint64_t v21 = sub_1008C76A0();
    sub_1008C59C8(v21, v22);
    sub_1008C70C0();
    SunEvents.solarNoon.getter();
    sub_1001A87EC();
    sub_1008C59C8(v3, (uint64_t)&unk_100E73CA0);
    sub_1008C70C0();
    SunEvents.sunset.getter();
    sub_1001A87EC();
    sub_1008C59C8(v4, (uint64_t)&unk_100E73CA0);
    sub_1008C70C0();
    SunEvents.civilDusk.getter();
    sub_1001A87EC();
    sub_1008C59C8(v0, (uint64_t)&unk_100E73CA0);
    sub_1008C70C0();
    SunEvents.nauticalDusk.getter();
    sub_1001A87EC();
    sub_1008C59C8(v26, (uint64_t)&unk_100E73CA0);
    sub_1008C70C0();
    SunEvents.astronomicalDusk.getter();
    sub_1001A87EC();
    sub_1008C59C8(v25, (uint64_t)&unk_100E73CA0);
    sub_1008C70C0();
    SunEvents.solarMidnight.getter();
    sub_1001A87EC();
    uint64_t v23 = v24;
  }
  sub_1008C59C8(v23, (uint64_t)&unk_100E73CA0);
  sub_10018B184();
  sub_100163164();
}

uint64_t sub_1008B0180()
{
  return static Array<A>.read(from:)();
}

uint64_t sub_1008B01D4()
{
  return Array<A>.write(to:)();
}

double sub_1008B0228()
{
  static FixedSizeTypeBinaryCodable.read(from:)();
  if (!v0)
  {
    double v1 = v3;
    sub_10011B0C4();
    sub_10011B0C4();
    sub_10011B0C4();
  }
  return v1;
}

void sub_1008B02F4(double *a1@<X8>)
{
  double v3 = sub_1008B0228();
  if (!v1)
  {
    double v7 = v3;
    uint64_t v8 = v4;
    uint64_t v9 = v5;
    uint64_t v10 = v6;
    static FixedSizeTypeBinaryCodable.read(from:)();
    *a1 = v7;
    *((void *)a1 + 1) = v8;
    *((void *)a1 + 2) = v9;
    *((void *)a1 + 3) = v10;
    *((void *)a1 + 4) = v11;
  }
}

uint64_t sub_1008B037C()
{
  uint64_t result = CGRect.write(to:)();
  if (!v0) {
    return sub_100184778();
  }
  return result;
}

uint64_t static UVIndex.read(from:)()
{
  sub_1008C7DC4();
  uint64_t result = static FixedSizeTypeBinaryCodable.read(from:)();
  if (!v0)
  {
    static LocationAuthorizationState.read(from:)();
    sub_1008C8450();
    return UVIndex.init(value:category:)();
  }
  return result;
}

uint64_t UVIndex.write(to:)()
{
  sub_1008C6C34();
  UVIndex.value.getter();
  uint64_t result = sub_100165320();
  if (!v0)
  {
    UVIndex.category.getter();
    sub_1008C6790();
    return LocationAuthorizationState.write(to:)();
  }
  return result;
}

uint64_t sub_1008B04C0()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    uint64_t result = sub_1008C7E5C(result, v2, v3, v4, v5, v6, v7, v8, v12, v13, SWORD2(v13), SBYTE6(v13), HIBYTE(v13));
    if (result >= 5)
    {
      type metadata accessor for BinaryDecoder.Error();
      sub_1008BD0B8((uint64_t)&qword_100E95730);
      uint64_t v9 = sub_10017D4A4();
      sub_100183208(v9, v10);
      sub_100162880();
      sub_10017A8E8();
      v11();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1008B058C()
{
  return FixedSizeTypeBinaryCodable.write(to:)();
}

void static Wind.read(from:)()
{
  sub_1001818B4();
  uint64_t v1 = sub_10017DF08(&qword_100E6ECB0);
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_100125FF8();
  sub_10017DF08(&qword_100E6D0A8);
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_100109370();
  sub_10017DF08(&qword_100E6BF38);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_100162E88();
  static Wind.CompassDirection.read(from:)();
  if (!v0)
  {
    sub_1008C68FC();
    sub_1001ABC4C(0, (unint64_t *)&qword_100E952D0);
    static NSUnitAngle.read(from:)();
    sub_1008C6D90();
    sub_1008C68FC();
    sub_1001ABC4C(0, (unint64_t *)&qword_100E6BF18);
    static NSUnitSpeed.read(from:)();
    sub_1008C6D90();
    sub_1008BD1E8((uint64_t)&unk_100E9D278);
    sub_1008BD1E8((uint64_t)&unk_100E9D290);
    static Optional<A>.read(from:)();
    Wind.init(compassDirection:direction:speed:gust:)();
  }
  sub_1008C83DC();
  sub_100162C04();
}

void Wind.write(to:)()
{
  sub_10016314C();
  uint64_t v7 = sub_10017DF08(&qword_100E6ECB0);
  sub_100162E4C();
  __chkstk_darwin(v1);
  sub_1001A4900(v2, v7);
  sub_10017DF08(&qword_100E6D0A8);
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_100162F18();
  sub_10017DF08(&qword_100E6BF38);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_10016279C();
  Wind.compassDirection.getter();
  Wind.CompassDirection.write(to:)();
  if (!v0)
  {
    Wind.direction.getter();
    sub_1008BA04C();
    sub_1001629F8();
    v5();
    Wind.speed.getter();
    sub_1008BA04C();
    sub_1008C7328();
    sub_100162F0C();
    v6();
    sub_1008C68F0();
    Wind.gust.getter();
    sub_1008BD1E8((uint64_t)&unk_100E9D278);
    sub_1008BD1E8((uint64_t)&unk_100E9D290);
    Optional<A>.write(to:)();
    sub_1008C59C8(v8, (uint64_t)&qword_100E6ECB0);
  }
  sub_1008C6C44();
  sub_100163164();
}

uint64_t static Wind.CompassDirection.read(from:)()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    uint64_t result = sub_1008C775C(result, v2, v3, v4, v5, v6, v7, v8, v13, v14, SWORD2(v14), SBYTE6(v14), HIBYTE(v14));
    if (v9 >= 0x10)
    {
      type metadata accessor for BinaryDecoder.Error();
      sub_1008BD0B8((uint64_t)&qword_100E95730);
      uint64_t v10 = sub_10017D4A4();
      sub_100183208(v10, v11);
      sub_100162880();
      sub_10017A8E8();
      v12();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t Wind.CompassDirection.write(to:)()
{
  return FixedSizeTypeBinaryCodable.write(to:)();
}

void static WeatherAlert.read(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_10016314C();
  a19 = v25;
  a20 = v26;
  uint64_t v74 = v21;
  v73[14] = v27;
  v73[17] = type metadata accessor for UUID();
  sub_100162E4C();
  __chkstk_darwin(v28);
  sub_100129898(v29, v73[0]);
  type metadata accessor for WeatherMetadata();
  sub_100179C0C();
  v73[15] = v31;
  v73[16] = v30;
  __chkstk_darwin(v30);
  v73[21] = (uint64_t)v73 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for WeatherImportance();
  sub_100179C0C();
  v73[19] = v34;
  v73[20] = v33;
  __chkstk_darwin(v33);
  sub_100128A8C(v35, v73[0]);
  type metadata accessor for WeatherSeverity();
  sub_100179C0C();
  v73[22] = v37;
  v73[23] = v36;
  __chkstk_darwin(v36);
  sub_100152444(v38, v73[0]);
  uint64_t v39 = sub_10017DF08(&qword_100E749B0);
  uint64_t v40 = sub_100109308(v39);
  __chkstk_darwin(v40);
  sub_10011BA80(v41, v73[0]);
  uint64_t v42 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v43 = sub_100109308(v42);
  __chkstk_darwin(v43);
  sub_100129860();
  __chkstk_darwin(v44);
  uint64_t v45 = sub_1008C8010();
  sub_100179C0C();
  v73[27] = v46;
  __chkstk_darwin(v47);
  uint64_t v49 = (char *)v73 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v50);
  sub_10019D2C0();
  __chkstk_darwin(v51);
  uint64_t v53 = (char *)v73 - v52;
  uint64_t v54 = type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v56 = v55;
  __chkstk_darwin(v57);
  sub_100127B10();
  uint64_t v58 = v74;
  static URL.read(from:)();
  if (!v58)
  {
    v73[6] = v22;
    v73[7] = v20;
    v73[8] = (uint64_t)v49;
    v73[10] = v23;
    v73[11] = (uint64_t)v53;
    v73[9] = v45;
    uint64_t v74 = v24;
    v73[12] = v56;
    v73[13] = v54;
    uint64_t v59 = static String.read(from:)();
    uint64_t v61 = v60;
    static Date.read(from:)();
    static Date.read(from:)();
    v73[5] = v59;
    static Date.read(from:)();
    sub_10019D15C();
    v73[4] = v61;
    sub_1008C76A0();
    static Optional<A>.read(from:)();
    sub_100127A68();
    static Optional<A>.read(from:)();
    uint64_t v62 = static String.read(from:)();
    sub_1008C8084(v62, v63);
    v73[0] = static String.read(from:)();
    v73[1] = v64;
    static Optional<A>.read(from:)();
    sub_1008C8284();
    static Optional<A>.read(from:)();
    sub_1008C8284();
    static WeatherSeverity.read(from:)();
    uint64_t v65 = sub_1008C8284();
    static WeatherImportance.read(from:)(v65, v66, v67, v68, v69, v70, v71, v72);
    sub_1008C8284();
    static WeatherMetadata.read(from:)();
    sub_1001D1EFC();
    sub_10011A5AC();
    sub_1008C7914();
    WeatherAlert.init(detailsURL:source:date:expirationDate:issuedDate:onsetTime:endDate:summary:description:details:region:severity:importance:metadata:id:)();
  }
  sub_100163164();
}

void WeatherAlert.write(to:)()
{
  sub_10016314C();
  type metadata accessor for UUID();
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_1001275B0(v3, v25);
  type metadata accessor for WeatherMetadata();
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_1008C7280(v5, v26);
  type metadata accessor for WeatherImportance();
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_100129898(v7, v27);
  type metadata accessor for WeatherSeverity();
  sub_100179C0C();
  __chkstk_darwin(v8);
  sub_10017225C(v9, v28);
  sub_10017DF08(&qword_100E749B0);
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_100182904(v11, v29);
  sub_10017DF08((uint64_t *)&unk_100E73CA0);
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v31 = v13;
  sub_1001626D4();
  __chkstk_darwin(v14);
  sub_1008C8010();
  sub_100179C0C();
  uint64_t v32 = v15;
  __chkstk_darwin(v16);
  sub_100189DD0();
  __chkstk_darwin(v17);
  sub_100164000();
  __chkstk_darwin(v18);
  sub_1008C6B54();
  type metadata accessor for URL();
  sub_100179C0C();
  __chkstk_darwin(v19);
  sub_10020FA24();
  WeatherAlert.detailsURL.getter();
  URL.write(to:)();
  sub_1001629F8();
  if (!v1)
  {
    v20();
    sub_1008C76D4();
    WeatherAlert.source.getter();
    sub_1001502D0();
    swift_bridgeObjectRelease();
    WeatherAlert.date.getter();
    sub_1008C7C64();
    uint64_t v21 = *(void (**)(void))(v32 + 8);
    sub_1008C70B4();
    sub_100164944();
    v21();
    sub_1008C76D4();
    WeatherAlert.expirationDate.getter();
    Date.write(to:)();
    sub_100164944();
    v21();
    WeatherAlert.issuedDate.getter();
    sub_1008C8238();
    Date.write(to:)();
    sub_100164944();
    v21();
    sub_1008C76D4();
    WeatherAlert.onsetTime.getter();
    sub_1008C73A8();
    sub_1008C59C8(v0, (uint64_t)&unk_100E73CA0);
    sub_1008C76D4();
    WeatherAlert.endDate.getter();
    sub_1008C73A8();
    sub_1008C59C8(v31, (uint64_t)&unk_100E73CA0);
    sub_1008C76D4();
    WeatherAlert.summary.getter();
    sub_1001A4BA8();
    swift_bridgeObjectRelease();
    WeatherAlert.description.getter();
    sub_1001A4BA8();
    swift_bridgeObjectRelease();
    WeatherAlert.details.getter();
    sub_1008C73A8();
    sub_1008C59C8(v30, (uint64_t)&qword_100E749B0);
    WeatherAlert.region.getter();
    sub_10017DF08(&qword_100E65F18);
    Optional<A>.write(to:)();
    swift_bridgeObjectRelease();
    sub_1008C76D4();
    WeatherAlert.severity.getter();
    sub_1008C68B0();
    WeatherSeverity.write(to:)();
    sub_1001649A8();
    v22();
    WeatherAlert.importance.getter();
    sub_100150344();
    WeatherImportance.write(to:)();
    sub_100164944();
    v23();
    WeatherAlert.metadata.getter();
    WeatherMetadata.write(to:)();
    sub_100164944();
    v24();
    WeatherAlert.id.getter();
    sub_100150344();
    UUID.write(to:)();
    sub_100162F0C();
  }
  v20();
  sub_1001194B0();
  sub_100163164();
}

void static WeatherChanges.read(from:)()
{
  sub_1001A69AC();
  uint64_t v1 = sub_1008C8618();
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_100152344();
  type metadata accessor for WeatherChange();
  sub_1008BD0B8((uint64_t)&unk_100E9D328);
  sub_1008BD0B8((uint64_t)&unk_100E9D330);
  sub_1008C6CBC();
  if (!v0)
  {
    sub_1008C8554();
    sub_100119464();
    WeatherChanges.init(changes:metadata:)();
  }
  sub_100182C7C();
  sub_1001847DC();
}

void WeatherChanges.write(to:)()
{
  sub_10016314C();
  type metadata accessor for WeatherMetadata();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10016279C();
  WeatherChanges.changes.getter();
  type metadata accessor for WeatherChange();
  sub_1008BD0B8((uint64_t)&unk_100E9D328);
  sub_1008BD0B8((uint64_t)&unk_100E9D330);
  sub_1008C6980();
  swift_bridgeObjectRelease();
  if (!v0)
  {
    WeatherChanges.metadata.getter();
    WeatherMetadata.write(to:)();
    uint64_t v2 = sub_1008C6CE0();
    v3(v2);
  }
  sub_1002EE5D4();
  sub_100163164();
}

void static WeatherChange.read(from:)()
{
  sub_10016314C();
  type metadata accessor for Date();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10019E674();
  static Date.read(from:)();
  if (!v0)
  {
    sub_1008C84FC();
    sub_1008C84FC();
    sub_1008C84FC();
    sub_1008C84FC();
    sub_1008C7C34();
    WeatherChange.init(date:highTemperature:lowTemperature:dayPrecipitationAmount:nightPrecipitationAmount:)();
  }
  sub_10018B184();
  sub_100163164();
}

void WeatherChange.write(to:)()
{
  sub_1001A69AC();
  type metadata accessor for Date();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10017F5D8();
  WeatherChange.date.getter();
  sub_10011B0A0();
  Date.write(to:)();
  if (v0)
  {
    sub_100164938();
    v2();
  }
  else
  {
    sub_100164938();
    v3();
    WeatherChange.highTemperature.getter();
    sub_1008C7064();
    WeatherChange.lowTemperature.getter();
    sub_1008C7064();
    WeatherChange.dayPrecipitationAmount.getter();
    sub_1008C7064();
    WeatherChange.nightPrecipitationAmount.getter();
    sub_1008C7064();
  }
  sub_100182C7C();
  sub_1001847DC();
}

uint64_t static WeatherCondition.read(from:)()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    sub_1008C67EC();
    switch(v2)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
      case 24:
      case 25:
      case 26:
      case 27:
      case 28:
      case 29:
      case 30:
      case 31:
      case 32:
      case 33:
        sub_100127CEC();
        type metadata accessor for WeatherCondition();
        sub_100162E4C();
        uint64_t v6 = sub_1001290CC();
        uint64_t result = v7(v6);
        break;
      default:
        type metadata accessor for BinaryDecoder.Error();
        sub_1008BD0B8((uint64_t)&qword_100E95730);
        uint64_t v3 = sub_10017D4A4();
        sub_100183208(v3, v4);
        sub_100162880();
        sub_10017A8E8();
        v5();
        uint64_t result = swift_willThrow();
        break;
    }
  }
  return result;
}

uint64_t WeatherCondition.write(to:)()
{
  sub_100172494();
  type metadata accessor for WeatherCondition();
  sub_100179C0C();
  __chkstk_darwin(v0);
  int v2 = sub_10017EA64(v1, v8);
  v3(v2);
  uint64_t v4 = sub_1001821AC();
  int v6 = v5(v4);
  if (v6 == enum case for WeatherCondition.blizzard(_:)
    || v6 == enum case for WeatherCondition.blowingDust(_:)
    || v6 == enum case for WeatherCondition.blowingSnow(_:)
    || v6 == enum case for WeatherCondition.breezy(_:)
    || v6 == enum case for WeatherCondition.clear(_:)
    || v6 == enum case for WeatherCondition.cloudy(_:)
    || v6 == enum case for WeatherCondition.drizzle(_:)
    || v6 == enum case for WeatherCondition.flurries(_:)
    || v6 == enum case for WeatherCondition.foggy(_:)
    || v6 == enum case for WeatherCondition.freezingDrizzle(_:)
    || v6 == enum case for WeatherCondition.freezingRain(_:)
    || v6 == enum case for WeatherCondition.frigid(_:)
    || v6 == enum case for WeatherCondition.hail(_:)
    || v6 == enum case for WeatherCondition.haze(_:)
    || v6 == enum case for WeatherCondition.heavyRain(_:)
    || v6 == enum case for WeatherCondition.heavySnow(_:)
    || v6 == enum case for WeatherCondition.hot(_:)
    || v6 == enum case for WeatherCondition.hurricane(_:)
    || v6 == enum case for WeatherCondition.isolatedThunderstorms(_:)
    || v6 == enum case for WeatherCondition.mostlyClear(_:)
    || v6 == enum case for WeatherCondition.mostlyCloudy(_:)
    || v6 == enum case for WeatherCondition.partlyCloudy(_:)
    || v6 == enum case for WeatherCondition.rain(_:)
    || v6 == enum case for WeatherCondition.scatteredThunderstorms(_:)
    || v6 == enum case for WeatherCondition.sleet(_:)
    || v6 == enum case for WeatherCondition.smoky(_:)
    || v6 == enum case for WeatherCondition.snow(_:)
    || v6 == enum case for WeatherCondition.strongStorms(_:)
    || v6 == enum case for WeatherCondition.sunFlurries(_:)
    || v6 == enum case for WeatherCondition.sunShowers(_:)
    || v6 == enum case for WeatherCondition.thunderstorms(_:)
    || v6 == enum case for WeatherCondition.tropicalStorm(_:)
    || v6 == enum case for WeatherCondition.windy(_:)
    || v6 == enum case for WeatherCondition.wintryMix(_:))
  {
    return sub_100186BCC();
  }
  uint64_t result = sub_1008C679C();
  __break(1u);
  return result;
}

void static WeatherMetadata.read(from:)()
{
  sub_100214F08();
  uint64_t v1 = sub_10017DF08(&qword_100E85FA0);
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_100158504();
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_1000B692C();
  __chkstk_darwin(v4);
  sub_1008C6ECC();
  static Date.read(from:)();
  if (!v0)
  {
    static Date.read(from:)();
    sub_1008C6724();
    sub_1008C6724();
    type metadata accessor for WeatherAttribution();
    sub_1008BD0B8((uint64_t)&unk_100E9D338);
    sub_1008BD0B8((uint64_t)&unk_100E9D340);
    static Optional<A>.read(from:)();
    sub_1008C70B4();
    WeatherMetadata.init(date:expirationDate:latitude:longitude:attribution:)();
  }
  sub_1008C67D0();
}

void WeatherMetadata.write(to:)()
{
  sub_10016314C();
  sub_10017DF08(&qword_100E85FA0);
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_1000A9E24();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1000B692C();
  __chkstk_darwin(v6);
  sub_100182F0C();
  WeatherMetadata.date.getter();
  Date.write(to:)();
  if (v0)
  {
    sub_10016285C();
    v7();
  }
  else
  {
    uint64_t v9 = v1;
    uint64_t v8 = *(void (**)(void))(v4 + 8);
    sub_10016285C();
    v8();
    WeatherMetadata.expirationDate.getter();
    Date.write(to:)();
    sub_100188E04();
    sub_10016285C();
    v8();
    WeatherMetadata.latitude.getter();
    FixedSizeTypeBinaryCodable.write(to:)();
    WeatherMetadata.longitude.getter();
    FixedSizeTypeBinaryCodable.write(to:)();
    WeatherMetadata.attribution.getter();
    sub_1008BD0B8((uint64_t)&unk_100E9D338);
    sub_1008BD0B8((uint64_t)&unk_100E9D340);
    sub_1008C8200();
    sub_1008C8238();
    Optional<A>.write(to:)();
    sub_1008C59C8(v9, (uint64_t)&qword_100E85FA0);
  }
  sub_1002EE5D4();
  sub_100163164();
}

uint64_t static WeatherSeverity.read(from:)()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    sub_1008C67EC();
    switch(v2)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
        sub_100127CEC();
        type metadata accessor for WeatherSeverity();
        sub_100162E4C();
        uint64_t v6 = sub_1001290CC();
        uint64_t result = v7(v6);
        break;
      default:
        type metadata accessor for BinaryDecoder.Error();
        sub_1008BD0B8((uint64_t)&qword_100E95730);
        uint64_t v3 = sub_10017D4A4();
        sub_100183208(v3, v4);
        sub_100162880();
        sub_10017A8E8();
        v5();
        uint64_t result = swift_willThrow();
        break;
    }
  }
  return result;
}

uint64_t WeatherSeverity.write(to:)()
{
  sub_100172494();
  type metadata accessor for WeatherSeverity();
  sub_100179C0C();
  __chkstk_darwin(v0);
  int v2 = sub_10017EA64(v1, v8);
  v3(v2);
  uint64_t v4 = sub_1001821AC();
  int v6 = v5(v4);
  if (v6 == enum case for WeatherSeverity.minor(_:)
    || v6 == enum case for WeatherSeverity.moderate(_:)
    || v6 == enum case for WeatherSeverity.severe(_:)
    || v6 == enum case for WeatherSeverity.extreme(_:)
    || v6 == enum case for WeatherSeverity.unknown(_:))
  {
    return sub_100186BCC();
  }
  uint64_t result = sub_1008C679C();
  __break(1u);
  return result;
}

uint64_t static WeatherSeverityKind.read(from:)()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    sub_1008C67EC();
    switch(v2)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
        sub_100127CEC();
        type metadata accessor for WeatherSeverityKind();
        sub_100162E4C();
        uint64_t v6 = sub_1001290CC();
        uint64_t result = v7(v6);
        break;
      default:
        type metadata accessor for BinaryDecoder.Error();
        sub_1008BD0B8((uint64_t)&qword_100E95730);
        uint64_t v3 = sub_10017D4A4();
        sub_100183208(v3, v4);
        sub_100162880();
        sub_10017A8E8();
        v5();
        uint64_t result = swift_willThrow();
        break;
    }
  }
  return result;
}

uint64_t WeatherSeverityKind.write(to:)()
{
  sub_100172494();
  type metadata accessor for WeatherSeverityKind();
  sub_100179C0C();
  __chkstk_darwin(v0);
  int v2 = sub_10017EA64(v1, v8);
  v3(v2);
  uint64_t v4 = sub_1001821AC();
  int v6 = v5(v4);
  if (v6 == enum case for WeatherSeverityKind.minor(_:)
    || v6 == enum case for WeatherSeverityKind.moderate(_:)
    || v6 == enum case for WeatherSeverityKind.severe(_:)
    || v6 == enum case for WeatherSeverityKind.extreme(_:)
    || v6 == enum case for WeatherSeverityKind.unknown(_:))
  {
    return sub_100186BCC();
  }
  uint64_t result = sub_1008C679C();
  __break(1u);
  return result;
}

void static ApparentPrecipitationIntensity.read(from:)(uint64_t a1)
{
}

void sub_1008B31DC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  uint64_t v8 = sub_1008C6BAC();
  v9(v8);
  sub_100165058();
  __chkstk_darwin(v10);
  sub_1008C72A0();
  sub_1008C7710();
  if (!v4)
  {
    uint64_t v11 = sub_1008C75D8();
    a3(v11);
    a4(v5);
  }
  sub_1002EEAFC();
}

void ApparentPrecipitationIntensity.write(to:)()
{
}

void sub_1008B3324()
{
  sub_10016314C();
  uint64_t v13 = v2;
  uint64_t v4 = v3;
  int v6 = v5;
  uint64_t v7 = sub_1008C6D48();
  v8(v7);
  sub_100179C0C();
  sub_100165058();
  __chkstk_darwin(v9);
  sub_1008C72A0();
  v6();
  uint64_t v10 = FixedSizeTypeBinaryCodable.write(to:)();
  if (!v0)
  {
    v4(v10);
    v13(v1);
    uint64_t v11 = sub_1008C7A98();
    v12(v11);
  }
  sub_1008C83DC();
  sub_100163164();
}

void static ApparentPrecipitationIntensityCategory.read(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1008B7290(a1, (uint64_t)&enum case for ApparentPrecipitationIntensityCategory.light(_:), (uint64_t)&type metadata accessor for ApparentPrecipitationIntensityCategory, (uint64_t)&enum case for ApparentPrecipitationIntensityCategory.medium(_:), (uint64_t)&enum case for ApparentPrecipitationIntensityCategory.heavy(_:), a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void ApparentPrecipitationIntensityCategory.write(to:)()
{
}

void static WeatherAvailability.read(from:)()
{
  sub_10017F304();
  type metadata accessor for WeatherAvailability.AvailabilityKind();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_100129860();
  __chkstk_darwin(v2);
  sub_100181E70();
  __chkstk_darwin(v3);
  sub_100127588();
  static WeatherAvailability.AvailabilityKind.read(from:)();
  if (!v0)
  {
    static WeatherAvailability.AvailabilityKind.read(from:)();
    static WeatherAvailability.AvailabilityKind.read(from:)();
    WeatherAvailability.init(minuteAvailability:alertAvailability:airQualityAvailability:)();
  }
  sub_1008C7994();
  sub_100182EF8();
}

void WeatherAvailability.write(to:)()
{
  sub_10016314C();
  uint64_t v2 = type metadata accessor for WeatherAvailability.AvailabilityKind();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001870B8();
  __chkstk_darwin(v6);
  sub_100181E70();
  __chkstk_darwin(v7);
  sub_1008C7FFC();
  WeatherAvailability.minuteAvailability.getter();
  WeatherAvailability.AvailabilityKind.write(to:)();
  if (v0)
  {
    sub_100164FC8();
    v8();
  }
  else
  {
    uint64_t v9 = *(void (**)(void))(v4 + 8);
    sub_100164FC8();
    v10();
    sub_1008C6D08();
    WeatherAvailability.alertAvailability.getter();
    WeatherAvailability.AvailabilityKind.write(to:)();
    sub_100164FC8();
    v9();
    sub_1008C7B30();
    WeatherAvailability.airQualityAvailability.getter();
    WeatherAvailability.AvailabilityKind.write(to:)();
    ((void (*)(uint64_t, uint64_t))v9)(v1, v2);
  }
  sub_1002EE5D4();
  sub_100163164();
}

uint64_t static WeatherAvailability.AvailabilityKind.read(from:)()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    sub_1008C67EC();
    switch(v2)
    {
      case 0:
      case 1:
      case 2:
      case 3:
        sub_100127CEC();
        type metadata accessor for WeatherAvailability.AvailabilityKind();
        sub_100162E4C();
        uint64_t v6 = sub_1001290CC();
        uint64_t result = v7(v6);
        break;
      default:
        type metadata accessor for BinaryDecoder.Error();
        sub_1008BD0B8((uint64_t)&qword_100E95730);
        uint64_t v3 = sub_10017D4A4();
        sub_100183208(v3, v4);
        sub_100162880();
        sub_10017A8E8();
        v5();
        uint64_t result = swift_willThrow();
        break;
    }
  }
  return result;
}

uint64_t WeatherAvailability.AvailabilityKind.write(to:)()
{
  sub_100172494();
  type metadata accessor for WeatherAvailability.AvailabilityKind();
  sub_100179C0C();
  __chkstk_darwin(v0);
  int v2 = sub_10017EA64(v1, v8);
  v3(v2);
  uint64_t v4 = sub_1001821AC();
  int v6 = v5(v4);
  if (v6 == enum case for WeatherAvailability.AvailabilityKind.available(_:)
    || v6 == enum case for WeatherAvailability.AvailabilityKind.temporarilyUnavailable(_:)
    || v6 == enum case for WeatherAvailability.AvailabilityKind.unsupported(_:)
    || v6 == enum case for WeatherAvailability.AvailabilityKind.unknown(_:))
  {
    return sub_100186BCC();
  }
  uint64_t result = sub_1008C679C();
  __break(1u);
  return result;
}

void sub_1008B39F4()
{
}

void sub_1008B3A48()
{
  sub_10017F304();
  int v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  v7(0);
  sub_100179C0C();
  sub_100165058();
  __chkstk_darwin(v8);
  uint64_t v9 = sub_1008C6E8C();
  v4(v9);
  if (!v0)
  {
    uint64_t v10 = static String.read(from:)();
    uint64_t v12 = v11;
    sub_1008C7A58();
    sub_1008C7558();
    v13();
    uint64_t v14 = (uint64_t *)(v6 + *(int *)(v2(0) + 20));
    *uint64_t v14 = v10;
    v14[1] = v12;
  }
  sub_100182C7C();
  sub_100182EF8();
}

uint64_t sub_1008B3B48(uint64_t a1)
{
  return sub_1008B3B88(a1, (uint64_t (*)(void))&WeatherDescription.write(to:), (void (*)(void))type metadata accessor for UVIndexComponentPreprocessedDataModel);
}

uint64_t sub_1008B3B88(uint64_t a1, uint64_t (*a2)(void), void (*a3)(void))
{
  uint64_t result = a2();
  if (!v3)
  {
    a3(0);
    return sub_1008C7340();
  }
  return result;
}

void sub_1008B3BE8()
{
  sub_1001A69AC();
  int v2 = v1;
  uint64_t v3 = static String.read(from:)();
  if (!v0)
  {
    uint64_t v5 = v3;
    uint64_t v6 = v4;
    uint64_t v7 = sub_100214DD8();
    uint64_t v9 = v8;
    uint64_t v10 = sub_100214DD8();
    *int v2 = v5;
    v2[1] = v6;
    v2[2] = v7;
    v2[3] = v9;
    v2[4] = v10;
    v2[5] = v11;
  }
  sub_1001847DC();
}

uint64_t sub_1008B3C78()
{
  uint64_t result = sub_1008C6AA0();
  if (!v0)
  {
    String.write(to:)();
    return String.write(to:)();
  }
  return result;
}

void sub_1008B3CB8()
{
  sub_1001818B4();
  uint64_t v3 = v2;
  sub_1008C8664();
  type metadata accessor for PressureTrend();
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_10017F5D8();
  static PressureTrend.read(from:)(v3, v5, v6, v7, v8, v9, v10, v11);
  if (!v0)
  {
    uint64_t v12 = sub_1008C6B3C();
    uint64_t v14 = v13;
    uint64_t v15 = sub_1008C6B3C();
    uint64_t v17 = v16;
    uint64_t v31 = v15;
    uint64_t v28 = sub_1008C6B3C();
    uint64_t v29 = v18;
    uint64_t v30 = v17;
    sub_1001D1EFC();
    uint64_t v19 = sub_1008C6B3C();
    uint64_t v21 = v20;
    sub_1001A2B64();
    sub_1008C68CC();
    v22();
    uint64_t v23 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
    uint64_t v24 = (uint64_t *)(v1 + v23[5]);
    *uint64_t v24 = v12;
    v24[1] = v14;
    uint64_t v25 = (uint64_t *)(v1 + v23[6]);
    *uint64_t v25 = v31;
    v25[1] = v30;
    uint64_t v26 = (uint64_t *)(v1 + v23[7]);
    *uint64_t v26 = v28;
    v26[1] = v29;
    *(void *)(v1 + v23[8]) = v32;
    uint64_t v27 = (uint64_t *)(v1 + v23[9]);
    *uint64_t v27 = v19;
    v27[1] = v21;
  }
  sub_100191138();
  sub_100162C04();
}

void sub_1008B3EB4()
{
  sub_1008C6D78();
  PressureTrend.write(to:)();
  if (!v0)
  {
    uint64_t v1 = type metadata accessor for PressureComponentPreprocessedDataModel();
    sub_10011C0C4();
    sub_10011C0C4();
    sub_10011C0C4();
    sub_1008C74A0(*(int *)(v1 + 32));
    sub_100165320();
    sub_10011C0C4();
  }
}

void sub_1008B3F84(uint64_t *a1@<X8>)
{
  uint64_t v3 = static String.read(from:)();
  if (!v1)
  {
    uint64_t v5 = v3;
    uint64_t v6 = v4;
    uint64_t v7 = sub_1001EA9B0();
    uint64_t v9 = v8;
    uint64_t v10 = sub_1001EA9B0();
    uint64_t v46 = v11;
    uint64_t v12 = sub_1001EA9B0();
    uint64_t v14 = v13;
    uint64_t v45 = v12;
    uint64_t v42 = sub_1001EA9B0();
    uint64_t v43 = v14;
    uint64_t v44 = v15;
    uint64_t v16 = sub_1001EA9B0();
    uint64_t v18 = v17;
    uint64_t v41 = v16;
    uint64_t v39 = sub_1001EA9B0();
    uint64_t v40 = v19;
    uint64_t v37 = sub_1001EA9B0();
    uint64_t v38 = v20;
    uint64_t v34 = sub_1001EA9B0();
    uint64_t v36 = v21;
    uint64_t v33 = sub_1001EA9B0();
    uint64_t v35 = v22;
    uint64_t v31 = sub_1001EA9B0();
    uint64_t v32 = v23;
    uint64_t v29 = sub_1001EA9B0();
    uint64_t v30 = v24;
    sub_1001EA9B0();
    sub_1001D1EFC();
    sub_1001EA9B0();
    *a1 = v5;
    a1[1] = v6;
    a1[2] = v7;
    a1[3] = v9;
    a1[4] = v10;
    a1[5] = v46;
    a1[6] = v45;
    a1[7] = v43;
    a1[8] = v42;
    a1[9] = v44;
    a1[10] = v41;
    a1[11] = v18;
    a1[12] = v39;
    a1[13] = v40;
    a1[14] = v37;
    a1[15] = v38;
    a1[16] = v34;
    a1[17] = v36;
    a1[18] = v33;
    a1[19] = v35;
    a1[20] = v31;
    a1[21] = v32;
    a1[22] = v29;
    a1[23] = v30;
    sub_1008C80D8();
    a1[24] = v26;
    a1[25] = v25;
    a1[26] = v47;
    a1[27] = v27;
    a1[28] = v28;
  }
}

uint64_t sub_1008B4464()
{
  uint64_t result = sub_1008C6AA0();
  if (!v0)
  {
    String.write(to:)();
    String.write(to:)();
    String.write(to:)();
    String.write(to:)();
    String.write(to:)();
    String.write(to:)();
    String.write(to:)();
    String.write(to:)();
    String.write(to:)();
    String.write(to:)();
    String.write(to:)();
    String.write(to:)();
    sub_100184778();
    return String.write(to:)();
  }
  return result;
}

#error "1008B45B4: call analysis failed (funcsize=15)"

uint64_t sub_1008B45C0()
{
  return WeatherCondition.write(to:)();
}

void sub_1008B45D8()
{
  sub_10008B8A8();
  uint64_t v1 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_10019E674();
  sub_100127BC8();
  sub_1008B47B0();
  if (!v0)
  {
    uint64_t v3 = sub_100127A9C();
    sub_1008C5A14(v3, v4);
  }
}

void sub_1008B4668()
{
  sub_10017F304();
  Date.write(to:)();
  if (!v0)
  {
    type metadata accessor for WeatherConditionBackgroundTimeData();
    sub_100214E24();
    sub_10017DF08(&qword_100E63760);
    sub_1008BD0B8((uint64_t)&unk_100E95810);
    sub_1008BD0B8((uint64_t)&unk_100E95818);
    sub_1008C6848();
    sub_1008C6DA8();
    sub_10017DF08(&qword_100E63768);
    sub_1008BD0B8((uint64_t)&unk_100E95820);
    sub_1008BD0B8((uint64_t)&unk_100E95828);
    sub_1008C6C50();
  }
  sub_100182EF8();
}

void sub_1008B47B0()
{
  sub_10016314C();
  uint64_t v5 = v4;
  uint64_t v6 = sub_10017DF08(&qword_100E63768);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_100162F18();
  uint64_t v8 = sub_10017DF08(&qword_100E63760);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  uint64_t v10 = sub_1008C6A30();
  sub_100179C0C();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_1001D1640();
  sub_100127BC8();
  static Date.read(from:)();
  if (!v0)
  {
    uint64_t v15 = v5;
    type metadata accessor for Elevation();
    sub_1008BD0B8((uint64_t)&unk_100E95810);
    sub_1008BD0B8((uint64_t)&unk_100E95818);
    static Optional<A>.read(from:)();
    type metadata accessor for BackgroundMoonData();
    sub_1008BD0B8((uint64_t)&unk_100E95820);
    sub_1008BD0B8((uint64_t)&unk_100E95828);
    static Optional<A>.read(from:)();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v5, v2, v10);
    uint64_t v14 = type metadata accessor for WeatherConditionBackgroundTimeData();
    sub_1001278D0(v1, v15 + *(int *)(v14 + 20), &qword_100E63760);
    sub_1001278D0(v3, v15 + *(int *)(v14 + 24), &qword_100E63768);
  }
  sub_10016EF08();
  sub_100163164();
}

void static WeatherImportance.read(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1008B7290(a1, (uint64_t)&enum case for WeatherImportance.high(_:), (uint64_t)&type metadata accessor for WeatherImportance, (uint64_t)&enum case for WeatherImportance.low(_:), (uint64_t)&enum case for WeatherImportance.normal(_:), a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void WeatherImportance.write(to:)()
{
}

uint64_t static DayPartForecast.read(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v72 = a1;
  uint64_t v58 = a2;
  uint64_t v55 = sub_10017DF08(&qword_100E6D0A8);
  sub_100179C0C();
  uint64_t v54 = v6;
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v53 = sub_1008C692C(v8);
  sub_100179C0C();
  uint64_t v52 = v9;
  __chkstk_darwin(v10);
  sub_100109338((uint64_t)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v57 = sub_10017DF08(&qword_100E6B648);
  sub_100179C0C();
  uint64_t v56 = v12;
  __chkstk_darwin(v13);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v14);
  sub_100128F8C();
  uint64_t v59 = sub_1008C6BC4(v15);
  sub_100179C0C();
  uint64_t v60 = v16;
  __chkstk_darwin(v17);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v18);
  uint64_t v61 = sub_1008C6BE0((uint64_t)&v43 - v19);
  sub_100179C0C();
  uint64_t v62 = v20;
  __chkstk_darwin(v21);
  sub_1001275B0(v22, v43);
  type metadata accessor for Precipitation();
  sub_100179C0C();
  uint64_t v63 = v23;
  uint64_t v64 = v24;
  __chkstk_darwin(v23);
  sub_100109314();
  uint64_t v65 = v25;
  sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  uint64_t v67 = v26;
  uint64_t v68 = v27;
  __chkstk_darwin(v26);
  uint64_t v66 = (char *)&v43 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v29);
  uint64_t v30 = sub_1008C7FBC();
  sub_100179C0C();
  uint64_t v69 = v31;
  __chkstk_darwin(v32);
  uint64_t v33 = sub_10011C788();
  sub_100179C0C();
  uint64_t v70 = v34;
  __chkstk_darwin(v35);
  uint64_t v36 = sub_1001835FC();
  sub_100179C0C();
  uint64_t v38 = v37;
  __chkstk_darwin(v39);
  sub_100158494();
  __chkstk_darwin(v40);
  sub_1008C8050();
  uint64_t v41 = v71;
  uint64_t result = static Date.read(from:)();
  if (!v41)
  {
    uint64_t v46 = v2;
    uint64_t v49 = v4;
    uint64_t v47 = v30;
    uint64_t v50 = v5;
    uint64_t v48 = v33;
    uint64_t v71 = v3;
    uint64_t v51 = v36;
    static Date.read(from:)();
    uint64_t v45 = v38;
    static FixedSizeTypeBinaryCodable.read(from:)();
    static CloudCoverByAltitude.read(from:)();
    static WeatherCondition.read(from:)();
    static FixedSizeTypeBinaryCodable.read(from:)();
    uint64_t v44 = sub_1001ABC4C(0, (unint64_t *)&qword_100E659A0);
    static NSUnitTemperature.read(from:)();
    Measurement.init(value:unit:)();
    sub_1001D1EFC();
    static NSUnitTemperature.read(from:)();
    Measurement.init(value:unit:)();
    static Precipitation.read(from:)();
    uint64_t v44 = 0;
    static PrecipitationAmountByType.read(from:)();
    sub_1001D1EFC();
    sub_1008C7B98();
    static ApparentPrecipitationIntensity.read(from:)(v72);
    static ApparentPrecipitationIntensity.read(from:)(v72);
    sub_1001D1EFC();
    sub_1001D1EFC();
    sub_1001D1EFC();
    sub_1001D1EFC();
    sub_1001ABC4C(0, (unint64_t *)&qword_100E6B678);
    static NSUnitLength.read(from:)();
    Measurement.init(value:unit:)();
    sub_1001D1EFC();
    static NSUnitLength.read(from:)();
    Measurement.init(value:unit:)();
    sub_1008C78FC();
    static Wind.read(from:)();
    sub_1001D1EFC();
    sub_1001ABC4C(0, (unint64_t *)&qword_100E6BF18);
    static NSUnitSpeed.read(from:)();
    Measurement.init(value:unit:)();
    sub_1001D1EFC();
    sub_1008C78FC();
    sub_1008C6BFC();
    sub_1008C8078();
    return DayPartForecast.init(forecastStart:forecastEnd:cloudCover:cloudCoverByAltitude:condition:highTemperature:lowTemperature:precipitation:precipitationAmountByType:precipitationChance:precipitationIntensityMax:perceivedPrecipitationIntensityMax:isDaylight:maximumHumidity:minimumHumidity:maximumVisibility:minimumVisibility:wind:highWindSpeed:humidity:)();
  }
  return result;
}

void DayPartForecast.write(to:)()
{
  sub_10016314C();
  uint64_t v74 = v0;
  uint64_t v3 = v2;
  v54[7] = sub_10017DF08(&qword_100E6D0A8);
  sub_100179C0C();
  v54[6] = v4;
  __chkstk_darwin(v5);
  sub_1008C673C(v6, v54[0]);
  v54[4] = type metadata accessor for Wind();
  sub_100179C0C();
  v54[3] = v7;
  __chkstk_darwin(v8);
  sub_100109314();
  sub_100109338(v9);
  sub_10017DF08(&qword_100E6B648);
  sub_100179C0C();
  uint64_t v55 = v11;
  uint64_t v56 = v10;
  __chkstk_darwin(v10);
  sub_100179C90();
  __chkstk_darwin(v12);
  sub_100128F8C();
  sub_1008C6BC4(v13);
  sub_100179C0C();
  uint64_t v58 = v15;
  uint64_t v59 = v14;
  __chkstk_darwin(v14);
  sub_100162EF8();
  uint64_t v57 = v16;
  sub_1001626D4();
  __chkstk_darwin(v17);
  sub_100128F8C();
  uint64_t v60 = v18;
  type metadata accessor for PrecipitationAmountByType();
  sub_100179C0C();
  uint64_t v62 = v20;
  uint64_t v63 = v19;
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v61 = v21;
  sub_10011B0E8();
  sub_100179C0C();
  uint64_t v64 = v23;
  uint64_t v65 = v22;
  __chkstk_darwin(v22);
  sub_10017225C(v24, v54[0]);
  sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  uint64_t v68 = v26;
  uint64_t v69 = v25;
  __chkstk_darwin(v25);
  sub_100162EF8();
  uint64_t v66 = v27;
  sub_1001626D4();
  __chkstk_darwin(v28);
  sub_100128F8C();
  uint64_t v67 = v29;
  type metadata accessor for WeatherCondition();
  sub_100179C0C();
  uint64_t v71 = v31;
  uint64_t v72 = v30;
  __chkstk_darwin(v30);
  uint64_t v70 = (char *)v54 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100129064();
  uint64_t v33 = type metadata accessor for CloudCoverByAltitude();
  sub_100179C0C();
  uint64_t v73 = v34;
  __chkstk_darwin(v35);
  sub_1000A9E24();
  sub_100179C0C();
  uint64_t v37 = v36;
  __chkstk_darwin(v38);
  sub_100189DD0();
  __chkstk_darwin(v39);
  DayPartForecast.forecastStart.getter();
  uint64_t v40 = v74;
  Date.write(to:)();
  if (v40)
  {
    sub_100164F40();
    v41();
  }
  else
  {
    v54[0] = v1;
    v54[1] = v33;
    uint64_t v42 = *(void (**)(void))(v37 + 8);
    sub_100164F40();
    v42();
    DayPartForecast.forecastEnd.getter();
    uint64_t v74 = v3;
    Date.write(to:)();
    sub_1008C7728();
    sub_100164F40();
    v42();
    DayPartForecast.cloudCover.getter();
    FixedSizeTypeBinaryCodable.write(to:)();
    uint64_t v43 = v54[0];
    DayPartForecast.cloudCoverByAltitude.getter();
    sub_1008C8238();
    CloudCoverByAltitude.write(to:)();
    sub_1008C7A24();
    sub_100162F0C();
    v44();
    sub_1008C6E70();
    DayPartForecast.condition.getter();
    sub_1008C6AD0();
    WeatherCondition.write(to:)();
    sub_100162F0C();
    v45();
    uint64_t v46 = v67;
    sub_1008C6E70();
    DayPartForecast.highTemperature.getter();
    sub_1008BA04C();
    if (v43)
    {
      (*(void (**)(uint64_t))(v68 + 8))(v46);
    }
    else
    {
      uint64_t v47 = *(void (**)(void))(v68 + 8);
      sub_100164938();
      v47();
      DayPartForecast.lowTemperature.getter();
      sub_1008BA04C();
      sub_1008C6FDC();
      sub_100164938();
      v47();
      DayPartForecast.precipitation.getter();
      sub_1008C6AD0();
      Precipitation.write(to:)();
      sub_100162F0C();
      v48();
      sub_1008C6E70();
      DayPartForecast.precipitationAmountByType.getter();
      sub_1008C6AD0();
      PrecipitationAmountByType.write(to:)();
      sub_100162F0C();
      v49();
      DayPartForecast.precipitationChance.getter();
      sub_100214E40();
      FixedSizeTypeBinaryCodable.write(to:)();
      sub_1008C6E70();
      DayPartForecast.precipitationIntensityMax.getter();
      sub_1008C6AD0();
      ApparentPrecipitationIntensity.write(to:)();
      uint64_t v50 = *(void (**)(void))(v58 + 8);
      sub_100127BA4();
      v50();
      sub_1008C7B30();
      DayPartForecast.perceivedPrecipitationIntensityMax.getter();
      sub_1008C8114();
      ApparentPrecipitationIntensity.write(to:)();
      sub_1001649A8();
      v50();
      DayPartForecast.isDaylight.getter();
      FixedSizeTypeBinaryCodable.write(to:)();
      DayPartForecast.maximumHumidity.getter();
      sub_1001D259C();
      sub_1008C776C();
      DayPartForecast.minimumHumidity.getter();
      sub_1001D259C();
      sub_1008C776C();
      DayPartForecast.maximumVisibility.getter();
      sub_1008C701C();
      uint64_t v51 = *(void (**)(void))(v55 + 8);
      sub_100127BA4();
      v51();
      DayPartForecast.minimumVisibility.getter();
      sub_1008BA04C();
      sub_1001629F8();
      v51();
      sub_1008C6F98();
      DayPartForecast.wind.getter();
      sub_1008C7B58();
      sub_1008C7514();
      sub_100162F0C();
      v52();
      sub_1008C6FAC();
      DayPartForecast.highWindSpeed.getter();
      sub_1008BA04C();
      sub_100184704();
      sub_100162F0C();
      v53();
      sub_1008C776C();
      DayPartForecast.humidity.getter();
      sub_1001D259C();
    }
  }
  sub_1001194B0();
  sub_100163164();
}

void static HistoricalComparisons.read(from:)()
{
  sub_1001A69AC();
  uint64_t v1 = sub_1008C8618();
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_100152344();
  type metadata accessor for HistoricalComparison();
  sub_1008BD0B8((uint64_t)&unk_100E9D348);
  sub_1008BD0B8((uint64_t)&unk_100E9D350);
  sub_1008C6CBC();
  if (!v0)
  {
    sub_1008C8554();
    sub_100119464();
    HistoricalComparisons.init(comparisons:metadata:)();
  }
  sub_100182C7C();
  sub_1001847DC();
}

void HistoricalComparisons.write(to:)()
{
  sub_10016314C();
  type metadata accessor for WeatherMetadata();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10016279C();
  HistoricalComparisons.comparisons.getter();
  type metadata accessor for HistoricalComparison();
  sub_1008BD0B8((uint64_t)&unk_100E9D348);
  sub_1008BD0B8((uint64_t)&unk_100E9D350);
  sub_1008C6980();
  swift_bridgeObjectRelease();
  if (!v0)
  {
    HistoricalComparisons.metadata.getter();
    WeatherMetadata.write(to:)();
    uint64_t v2 = sub_1008C6CE0();
    v3(v2);
  }
  sub_1002EE5D4();
  sub_100163164();
}

void static HistoricalComparison.read(from:)()
{
  sub_10016314C();
  uint64_t v4 = v3;
  v26[1] = v5;
  sub_10017DF08(&qword_100E7E730);
  sub_100179C0C();
  v26[2] = v6;
  __chkstk_darwin(v7);
  sub_100189DD0();
  __chkstk_darwin(v8);
  sub_100152388();
  sub_10017DF08(&qword_100E6B7C8);
  sub_100179C0C();
  __chkstk_darwin(v9);
  sub_1001190EC();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v26 - v11;
  static FixedSizeTypeBinaryCodable.read(from:)();
  if (!v0)
  {
    sub_1008C73C0();
    switch(v14)
    {
      case 0:
        sub_1008BA0EC(v4, (uint64_t)v12);
        sub_1008C7E68();
        sub_1001190D4();
        v15();
        goto LABEL_9;
      case 1:
        sub_1008BA0EC(v4, v2);
        sub_1008C7E68();
        sub_1001190D4();
        v19();
        goto LABEL_9;
      case 2:
        uint64_t v20 = v13;
        sub_1008BA398(v4, v13);
        uint64_t v21 = sub_1008C78BC();
        v22(v21, v20);
        goto LABEL_9;
      case 3:
        sub_1008BA398(v4, v1);
        uint64_t v23 = sub_1008C78BC();
        v24(v23, v1);
LABEL_9:
        type metadata accessor for HistoricalComparison();
        sub_100162E4C();
        sub_1001631E8();
        v25();
        break;
      default:
        type metadata accessor for BinaryDecoder.Error();
        sub_1008BD0B8((uint64_t)&qword_100E95730);
        uint64_t v16 = sub_100166B68();
        sub_1008C6B60(v16, v17);
        sub_100162880();
        sub_1001631E8();
        v18();
        swift_willThrow();
        break;
    }
  }
  sub_1001194B0();
  sub_100163164();
}

void HistoricalComparison.write(to:)()
{
  sub_10016314C();
  uint64_t v28 = v0;
  uint64_t v2 = v1;
  sub_10017DF08(&qword_100E7E730);
  sub_100179C0C();
  v27[3] = v3;
  v27[4] = v4;
  __chkstk_darwin(v3);
  uint64_t v27[2] = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v6);
  sub_100128F8C();
  v27[1] = v7;
  sub_10017DF08(&qword_100E6B7C8);
  sub_100179C0C();
  __chkstk_darwin(v8);
  sub_1000B692C();
  __chkstk_darwin(v9);
  sub_100182F0C();
  type metadata accessor for HistoricalComparison();
  sub_100179C0C();
  __chkstk_darwin(v10);
  sub_100127A9C();
  sub_100162808();
  v11();
  sub_1008C74AC();
  int v13 = v12();
  if (v13 == enum case for HistoricalComparison.highTemperature(_:))
  {
    uint64_t v14 = sub_1008C6818();
    v15(v14);
    sub_1008C74B8();
    sub_1008C8420();
    sub_1001627D4();
    v16();
    uint64_t v17 = v28;
    FixedSizeTypeBinaryCodable.write(to:)();
    if (!v17) {
      sub_1008B98D4(v2);
    }
LABEL_13:
    sub_10016285C();
    v26();
    sub_10016EF08();
    sub_100163164();
    return;
  }
  uint64_t v18 = v28;
  if (v13 == enum case for HistoricalComparison.lowTemperature(_:))
  {
    uint64_t v19 = sub_1008C6818();
    v20(v19);
    sub_1008C74B8();
    sub_1008C7A70();
    sub_1001627D4();
    v21();
    FixedSizeTypeBinaryCodable.write(to:)();
    if (!v18) {
      sub_1008B98D4(v2);
    }
    goto LABEL_13;
  }
  if (v13 == enum case for HistoricalComparison.precipitationAmount(_:)
    || v13 == enum case for HistoricalComparison.snowfallAmount(_:))
  {
    uint64_t v22 = sub_1008C6818();
    v23(v22);
    sub_1008C74B8();
    sub_1001627D4();
    v24();
    FixedSizeTypeBinaryCodable.write(to:)();
    if (!v18)
    {
      sub_1008C8114();
      sub_1008B9BB0(v25);
    }
    goto LABEL_13;
  }
  _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
}

uint64_t static Deviation.read(from:)()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    sub_1008C67EC();
    switch(v2)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
        sub_100127CEC();
        type metadata accessor for Deviation();
        sub_100162E4C();
        uint64_t v6 = sub_1001290CC();
        uint64_t result = v7(v6);
        break;
      default:
        type metadata accessor for BinaryDecoder.Error();
        sub_1008BD0B8((uint64_t)&qword_100E95730);
        uint64_t v3 = sub_10017D4A4();
        sub_100183208(v3, v4);
        sub_100162880();
        sub_10017A8E8();
        v5();
        uint64_t result = swift_willThrow();
        break;
    }
  }
  return result;
}

uint64_t Deviation.write(to:)()
{
  sub_100172494();
  type metadata accessor for Deviation();
  sub_100179C0C();
  __chkstk_darwin(v0);
  int v2 = sub_10017EA64(v1, v8);
  v3(v2);
  uint64_t v4 = sub_1001821AC();
  int v6 = v5(v4);
  if (v6 == enum case for Deviation.muchHigher(_:)
    || v6 == enum case for Deviation.higher(_:)
    || v6 == enum case for Deviation.normal(_:)
    || v6 == enum case for Deviation.lower(_:)
    || v6 == enum case for Deviation.muchLower(_:))
  {
    return sub_100186BCC();
  }
  uint64_t result = sub_1008C679C();
  __break(1u);
  return result;
}

uint64_t static HistoricalFacts.read(from:)()
{
  sub_10008B8A8();
  type metadata accessor for HistoricalFact();
  sub_1008BD0B8((uint64_t)&unk_100E9D358);
  sub_1008BD0B8((uint64_t)&unk_100E9D360);
  uint64_t result = sub_10019C304();
  if (!v0) {
    return HistoricalFacts.init(facts:)();
  }
  return result;
}

uint64_t HistoricalFacts.write(to:)()
{
  return sub_1008C7DE8();
}

void static HistoricalFact.read(from:)()
{
  sub_10016314C();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for WeatherMetadata();
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_10017F948();
  type metadata accessor for HistoricalFact.Period();
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_10011BA28();
  type metadata accessor for HistoricalFact.Condition();
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_1001D1640();
  static HistoricalFact.Condition.read(from:)(v2, v7, v8, v9, v10, v11, v12, v13);
  if (!v0)
  {
    static HistoricalFact.Period.read(from:)(v2, v14, v15, v16, v17, v18, v19, v20);
    static String.read(from:)();
    static String.read(from:)();
    static String.read(from:)();
    type metadata accessor for HistoricalFact.Argument();
    sub_1008BD0B8((uint64_t)&unk_100E9D368);
    sub_1008BD0B8((uint64_t)&unk_100E9D370);
    static Array<A>.read(from:)();
    static WeatherMetadata.read(from:)();
    HistoricalFact.init(condition:period:token:heading:message:arguments:metadata:)();
  }
  sub_10012B96C();
  sub_100163164();
}

void HistoricalFact.write(to:)()
{
  sub_10016314C();
  sub_1008C7A64();
  type metadata accessor for WeatherMetadata();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_100163770();
  type metadata accessor for HistoricalFact.Period();
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_100163E88();
  type metadata accessor for HistoricalFact.Condition();
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_100187254();
  HistoricalFact.condition.getter();
  sub_1008C7E74();
  HistoricalFact.Condition.write(to:)();
  sub_1001629F8();
  if (!v0)
  {
    v4();
    HistoricalFact.period.getter();
    HistoricalFact.Period.write(to:)();
    sub_1008C6FDC();
    sub_100162F0C();
    v5();
    HistoricalFact.token.getter();
    sub_1008C69EC();
    swift_bridgeObjectRelease();
    HistoricalFact.heading.getter();
    sub_1008C69EC();
    swift_bridgeObjectRelease();
    HistoricalFact.message.getter();
    sub_1008C69EC();
    swift_bridgeObjectRelease();
    HistoricalFact.arguments.getter();
    sub_100127C8C();
    type metadata accessor for HistoricalFact.Argument();
    sub_1008BD0B8((uint64_t)&unk_100E9D368);
    sub_1008BD0B8((uint64_t)&unk_100E9D370);
    sub_1008C7A98();
    Array<A>.write(to:)();
    swift_bridgeObjectRelease();
    sub_1008C845C();
    HistoricalFact.metadata.getter();
    WeatherMetadata.write(to:)();
    sub_100184704();
    sub_100162F0C();
  }
  v4();
  sub_10018B184();
  sub_100163164();
}

void static HistoricalFact.Period.read(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1008B7290(a1, (uint64_t)&enum case for HistoricalFact.Period.today(_:), (uint64_t)&type metadata accessor for HistoricalFact.Period, (uint64_t)&enum case for HistoricalFact.Period.month(_:), (uint64_t)&enum case for HistoricalFact.Period.streak(_:), a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_1008B7290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_1001A69AC();
  sub_1008C8064();
  sub_10017B3A0();
  if (!v13)
  {
    if (a13 == 3 || a13 == 2 || a13 == 1)
    {
      v14(0);
      sub_100162E4C();
      sub_1001631E8();
      v15();
    }
    else
    {
      type metadata accessor for BinaryDecoder.Error();
      sub_1008BD0B8((uint64_t)&qword_100E95730);
      uint64_t v16 = sub_10017D4A4();
      sub_100183208(v16, v17);
      sub_100162880();
      sub_10017A8E8();
      v18();
      swift_willThrow();
    }
  }
  sub_1001847DC();
}

void HistoricalFact.Period.write(to:)()
{
}

void sub_1008B740C()
{
  sub_10016314C();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_1001D3FE4();
  v7(v6);
  sub_100179C0C();
  sub_100165058();
  __chkstk_darwin(v8);
  sub_100188E04();
  sub_10019AEB0();
  v9();
  uint64_t v10 = sub_1008C7A70();
  int v12 = v11(v10);
  if (v12 == *v5)
  {
    sub_1008C73CC();
LABEL_7:
    sub_100186BCC();
    sub_100163164();
    return;
  }
  if (v12 == *v3)
  {
    sub_1008C6EC0();
    goto LABEL_7;
  }
  if (v12 == *v1)
  {
    sub_1008C6E48();
    goto LABEL_7;
  }
  sub_1008C679C();
  __break(1u);
}

void static HistoricalFact.Condition.read(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1008B7580(a1, (uint64_t)&enum case for HistoricalFact.Condition.temperature(_:), (uint64_t)&type metadata accessor for HistoricalFact.Condition, (uint64_t)&enum case for HistoricalFact.Condition.precipitation(_:), a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_1008B7580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_1008C7868();
  sub_1008C8064();
  sub_10017B3A0();
  if (!v13)
  {
    if (a13 == 2 || a13 == 1)
    {
      v14(0);
      sub_100162E4C();
      sub_1001631E8();
      v15();
    }
    else
    {
      type metadata accessor for BinaryDecoder.Error();
      sub_1008BD0B8((uint64_t)&qword_100E95730);
      uint64_t v16 = sub_10017D4A4();
      sub_100183208(v16, v17);
      sub_100162880();
      sub_10017A8E8();
      v18();
      swift_willThrow();
    }
  }
  sub_1008C7BA4();
}

void HistoricalFact.Condition.write(to:)()
{
}

void sub_1008B76E0()
{
  sub_10017F304();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = sub_1001D3FE4();
  uint64_t v6 = v5(v4);
  sub_100179C0C();
  uint64_t v8 = v7;
  sub_100165058();
  __chkstk_darwin(v9);
  uint64_t v11 = &v14[-v10];
  sub_1008C7728();
  sub_10019AEB0();
  v12();
  int v13 = (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 88))(v11, v6);
  if (v13 == *v3)
  {
    v14[14] = 1;
LABEL_5:
    sub_100186BCC();
    sub_100182EF8();
    return;
  }
  if (v13 == *v1)
  {
    sub_1008C787C();
    goto LABEL_5;
  }
  sub_1008C679C();
  __break(1u);
}

void static HistoricalFact.Argument.read(from:)()
{
  sub_1001818B4();
  int v12 = v1;
  sub_10017DF08(&qword_100E6B648);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10012B614();
  __chkstk_darwin(v3);
  sub_100152388();
  sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_10008B8C0();
  sub_1008C6724();
  if (!v0)
  {
    switch(v14)
    {
      case 1:
        sub_1001194D4();
        *int v12 = v13;
        goto LABEL_10;
      case 2:
        sub_1001194D4();
        sub_1001ABC4C(0, (unint64_t *)&qword_100E659A0);
        sub_100214E40();
        static NSUnitTemperature.read(from:)();
        goto LABEL_8;
      case 3:
      case 4:
        sub_1001194D4();
        sub_1001ABC4C(0, (unint64_t *)&qword_100E6B678);
        static NSUnitLength.read(from:)();
LABEL_8:
        sub_1008C6D90();
        sub_1001190D4();
        v8();
        goto LABEL_10;
      case 5:
        sub_1001194D4();
        sub_100214E40();
        uint64_t v9 = static String.read(from:)();
        *int v12 = v13;
        v12[1] = v9;
        long long v12[2] = v10;
LABEL_10:
        sub_100127CEC();
        type metadata accessor for HistoricalFact.Argument();
        sub_100162E4C();
        sub_1001631E8();
        v11();
        break;
      default:
        type metadata accessor for BinaryDecoder.Error();
        sub_1008BD0B8((uint64_t)&qword_100E95730);
        uint64_t v5 = sub_100166B68();
        sub_1008C7DD0(v5, v6);
        sub_100162880();
        sub_1001631E8();
        v7();
        swift_willThrow();
        break;
    }
  }
  sub_10016EF08();
  sub_100162C04();
}

void HistoricalFact.Argument.write(to:)()
{
  sub_1001818B4();
  sub_10017DF08(&qword_100E6B648);
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_100162EF8();
  sub_1001626D4();
  __chkstk_darwin(v2);
  sub_100127588();
  sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_100163E88();
  type metadata accessor for HistoricalFact.Argument();
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_100162EB8();
  sub_100127A9C();
  sub_100162808();
  v5();
  sub_1008C74AC();
  int v7 = v6();
  if (v7 == enum case for HistoricalFact.Argument.integer(_:))
  {
    uint64_t v8 = sub_1001DE228();
    v9(v8);
    sub_1001275DC();
    if (!v0) {
      FixedSizeTypeBinaryCodable.write(to:)();
    }
LABEL_20:
    sub_10016EF08();
    sub_100162C04();
    return;
  }
  if (v7 == enum case for HistoricalFact.Argument.temperature(_:))
  {
    uint64_t v10 = sub_1001DE228();
    v11(v10);
    sub_1008C7A70();
    sub_1001627D4();
    v12();
    sub_1001275DC();
    if (!v0) {
      sub_1008BA04C();
    }
    sub_100188E04();
    sub_100164944();
    v13();
    goto LABEL_20;
  }
  if (v7 == enum case for HistoricalFact.Argument.precipitationAmount(_:))
  {
    uint64_t v14 = sub_1001DE228();
    v15(v14);
    sub_1008C83BC();
    sub_1001627D4();
    v16();
    sub_1001275DC();
    if (!v0) {
      sub_1008BA04C();
    }
    sub_1001195A8();
    sub_100164F40();
    v17();
    goto LABEL_20;
  }
  if (v7 == enum case for HistoricalFact.Argument.snowfallAmount(_:))
  {
    uint64_t v18 = sub_1001DE228();
    v19(v18);
    sub_1008C7A70();
    sub_1001627D4();
    v20();
    sub_1001275DC();
    if (!v0) {
      sub_1008BA04C();
    }
    sub_100164938();
    v21();
    goto LABEL_20;
  }
  if (v7 == enum case for HistoricalFact.Argument.date(_:))
  {
    uint64_t v22 = sub_1001DE228();
    v23(v22);
    FixedSizeTypeBinaryCodable.write(to:)();
    if (!v0)
    {
      FixedSizeTypeBinaryCodable.write(to:)();
      sub_10011958C();
      String.write(to:)();
    }
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
}

void static WeatherStatisticsModel.read(from:)()
{
  sub_10016314C();
  uint64_t v1 = type metadata accessor for WeatherMetadata();
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_1001A4900(v3, v11);
  uint64_t v4 = sub_10017DF08(&qword_100E6B6C0);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100152444(v6, v12);
  sub_10017DF08(&qword_100E6B7D0);
  sub_100179C0C();
  __chkstk_darwin(v7);
  sub_10012B938();
  sub_10017DF08(&qword_100E65258);
  sub_100179C0C();
  __chkstk_darwin(v8);
  sub_100162EB8();
  sub_10017DF08(&qword_100E6B6A0);
  sub_100179C0C();
  __chkstk_darwin(v9);
  sub_100109370();
  sub_10017DF08(&qword_100E717A0);
  sub_100179C0C();
  __chkstk_darwin(v10);
  sub_10017F5D8();
  sub_1008BB804();
  if (!v0)
  {
    sub_1008BB110();
    sub_1008BBFD8();
    sub_1008BC27C();
    type metadata accessor for DayPrecipitationSummary();
    sub_1008BD0B8((uint64_t)&unk_100E9D378);
    sub_1008BD0B8((uint64_t)&unk_100E9D380);
    static Array<A>.read(from:)();
    static WeatherMetadata.read(from:)();
    sub_1008BD0B8((uint64_t)&unk_100E9D388);
    sub_1008BD0B8((uint64_t)&unk_100E9D390);
    sub_1008BD0B8((uint64_t)&unk_100E9D398);
    DailyWeatherSummary.init(days:metadata:)();
    sub_1001195A8();
    WeatherStatisticsModel.init(hourlyTemperatureStatistics:dailyPrecipitationStatistics:monthlyTemperatureStatistics:monthlyPrecipitationStatistics:dailyPrecipitationSummary:)();
  }
  sub_100163164();
}

void WeatherStatisticsModel.write(to:)()
{
  sub_10016314C();
  sub_10017DF08(&qword_100E6B6C0);
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_100182904(v2, v14);
  sub_10017DF08(&qword_100E6B7D0);
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_100152444(v4, v15);
  sub_10017DF08(&qword_100E65258);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_100162E88();
  sub_10017DF08(&qword_100E6B6A0);
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_10011C760();
  sub_10017DF08(&qword_100E717A0);
  sub_100179C0C();
  __chkstk_darwin(v7);
  sub_10020FA24();
  WeatherStatisticsModel.hourlyTemperatureStatistics.getter();
  sub_1008BB56C();
  sub_100127C2C();
  sub_100164F40();
  v8();
  if (!v0)
  {
    WeatherStatisticsModel.dailyPrecipitationStatistics.getter();
    sub_1008C8120();
    sub_1008BAE78();
    sub_100164938();
    v9();
    WeatherStatisticsModel.monthlyTemperatureStatistics.getter();
    sub_100119598();
    sub_1008BBAA8();
    sub_100162F0C();
    v10();
    WeatherStatisticsModel.monthlyPrecipitationStatistics.getter();
    sub_100119598();
    sub_1008BBD40();
    sub_100162F0C();
    v11();
    WeatherStatisticsModel.dailyPrecipitationSummary.getter();
    sub_100119598();
    sub_1008BB3B4();
    uint64_t v12 = sub_1008C7CE8();
    v13(v12);
  }
  sub_1008C754C();
  sub_100163164();
}

void static DayPrecipitationStatistics.read(from:)()
{
}

void DayPrecipitationStatistics.write(to:)()
{
}

void static DayTemperatureStatistics.read(from:)()
{
}

void DayTemperatureStatistics.write(to:)()
{
}

void static DayPrecipitationSummary.read(from:)()
{
  sub_1001818B4();
  sub_10017DF08(&qword_100E6B648);
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10012B614();
  __chkstk_darwin(v2);
  sub_1008C67F8();
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_1008C6D14();
  if (!v0)
  {
    sub_1008C7938();
    sub_1001ABC4C(0, (unint64_t *)&qword_100E6B678);
    sub_1008C8328();
    static NSUnitLength.read(from:)();
    sub_1008C7F20();
    sub_1008C80AC();
    sub_1008C8270();
    static NSUnitLength.read(from:)();
    sub_1008C7F20();
    sub_1008C837C();
    DayPrecipitationSummary.init(date:precipitationAmount:snowfallAmount:)();
  }
  sub_1008C754C();
  sub_100162C04();
}

void DayPrecipitationSummary.write(to:)()
{
  sub_10016314C();
  sub_1008C7358();
  sub_10017DF08(&qword_100E6B648);
  sub_100179C0C();
  uint64_t v11 = v1;
  __chkstk_darwin(v2);
  sub_100129860();
  __chkstk_darwin(v3);
  sub_1008C67F8();
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_100127B10();
  DayPrecipitationSummary.date.getter();
  Date.write(to:)();
  if (v0)
  {
    uint64_t v5 = sub_10019AAEC();
    v6(v5);
  }
  else
  {
    uint64_t v7 = sub_10019AAEC();
    v8(v7);
    sub_1008C6D08();
    DayPrecipitationSummary.precipitationAmount.getter();
    sub_1008BA04C();
    uint64_t v9 = *(void (**)(void))(v11 + 8);
    sub_100164F40();
    v9();
    sub_1008C6E80();
    DayPrecipitationSummary.snowfallAmount.getter();
    sub_1008BA04C();
    uint64_t v10 = sub_1008C83F4();
    ((void (*)(uint64_t))v9)(v10);
  }
  sub_10012B96C();
  sub_100163164();
}

void static DayTemperatureSummary.read(from:)()
{
  sub_1001818B4();
  sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10012B614();
  __chkstk_darwin(v2);
  sub_1008C67F8();
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_1008C6D14();
  if (!v0)
  {
    sub_1008C7938();
    sub_1001ABC4C(0, (unint64_t *)&qword_100E659A0);
    sub_1008C8328();
    static NSUnitTemperature.read(from:)();
    sub_1008C7F20();
    sub_1008C80AC();
    sub_1008C8270();
    static NSUnitTemperature.read(from:)();
    sub_1008C7F20();
    sub_1008C837C();
    DayTemperatureSummary.init(date:lowTemperature:highTemperature:)();
  }
  sub_1008C754C();
  sub_100162C04();
}

void DayTemperatureSummary.write(to:)()
{
  sub_10016314C();
  sub_1008C7358();
  sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  uint64_t v11 = v1;
  __chkstk_darwin(v2);
  sub_100129860();
  __chkstk_darwin(v3);
  sub_1008C67F8();
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_100127B10();
  DayTemperatureSummary.date.getter();
  Date.write(to:)();
  if (v0)
  {
    uint64_t v5 = sub_10019AAEC();
    v6(v5);
  }
  else
  {
    uint64_t v7 = sub_10019AAEC();
    v8(v7);
    sub_1008C6D08();
    DayTemperatureSummary.lowTemperature.getter();
    sub_1008BA04C();
    uint64_t v9 = *(void (**)(void))(v11 + 8);
    sub_100164F40();
    v9();
    sub_1008C6E80();
    DayTemperatureSummary.highTemperature.getter();
    sub_1008BA04C();
    uint64_t v10 = sub_1008C83F4();
    ((void (*)(uint64_t))v9)(v10);
  }
  sub_10012B96C();
  sub_100163164();
}

void static HourTemperatureStatistics.read(from:)()
{
  sub_1008C7DC4();
  uint64_t v1 = sub_10017DF08(&qword_100E9D3A0);
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_10016279C();
  static FixedSizeTypeBinaryCodable.read(from:)();
  if (!v0)
  {
    sub_1008C6CF8();
    sub_1008BC748();
    sub_10011958C();
    HourTemperatureStatistics.init(hour:percentiles:)();
  }
  sub_1008C7F64();
}

void HourTemperatureStatistics.write(to:)()
{
  sub_1001A69AC();
  sub_1008C7358();
  sub_10017DF08(&qword_100E9D3A0);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_100125FF8();
  HourTemperatureStatistics.hour.getter();
  FixedSizeTypeBinaryCodable.write(to:)();
  if (!v0)
  {
    sub_1008C6E80();
    HourTemperatureStatistics.percentiles.getter();
    sub_1008BC520(v1);
    uint64_t v3 = sub_1008C7364();
    v4(v3);
  }
  sub_1001847DC();
}

void static MonthPrecipitationStatistics.read(from:)()
{
}

void sub_1008B9004()
{
  sub_100214F08();
  sub_1008C7EA0();
  sub_10017DF08(&qword_100E6B648);
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_100129860();
  __chkstk_darwin(v2);
  sub_100127588();
  sub_1008C67B4();
  if (!v0)
  {
    sub_1008C67B4();
    sub_1008C67B4();
    sub_1001ABC4C(0, (unint64_t *)&qword_100E6B678);
    static NSUnitLength.read(from:)();
    Measurement.init(value:unit:)();
    sub_1008C67B4();
    static NSUnitLength.read(from:)();
    Measurement.init(value:unit:)();
    sub_1008C8408();
    v3();
  }
  sub_1008C67D0();
}

void MonthPrecipitationStatistics.write(to:)()
{
}

void sub_1008B922C()
{
  sub_10016314C();
  uint64_t v15 = v2;
  uint64_t v16 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  sub_10017DF08(&qword_100E6B648);
  sub_100179C0C();
  uint64_t v17 = v7;
  __chkstk_darwin(v8);
  sub_1001870B8();
  __chkstk_darwin(v9);
  sub_100182F0C();
  v6();
  uint64_t v10 = FixedSizeTypeBinaryCodable.write(to:)();
  if (!v0)
  {
    v4(v10);
    uint64_t v11 = FixedSizeTypeBinaryCodable.write(to:)();
    v16(v11);
    sub_1008C80E4();
    uint64_t v12 = *(uint64_t (**)(void))(v17 + 8);
    sub_1008C7564();
    sub_100127BA4();
    uint64_t v13 = v12();
    v15(v13);
    sub_1008C80FC();
    uint64_t v14 = sub_1008C81B4();
    ((void (*)(uint64_t))v12)(v14);
  }
  sub_1008C6C44();
  sub_100163164();
}

void static MonthTemperatureStatistics.read(from:)()
{
}

void sub_1008B9404()
{
  sub_1001818B4();
  sub_1008C7EA0();
  sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_100129860();
  __chkstk_darwin(v3);
  sub_100127588();
  sub_1008C67B4();
  if (!v1)
  {
    sub_1008C67B4();
    sub_1001ABC4C(0, (unint64_t *)&qword_100E659A0);
    static NSUnitTemperature.read(from:)();
    Measurement.init(value:unit:)();
    sub_1008C67B4();
    static NSUnitTemperature.read(from:)();
    Measurement.init(value:unit:)();
    sub_1008C8408();
    v0();
  }
  sub_1008C83DC();
  sub_100162C04();
}

void MonthTemperatureStatistics.write(to:)()
{
}

void sub_1008B95F0()
{
  sub_10016314C();
  uint64_t v13 = v2;
  uint64_t v14 = v1;
  uint64_t v4 = v3;
  sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1001870B8();
  __chkstk_darwin(v8);
  sub_100182F0C();
  v4();
  uint64_t v9 = FixedSizeTypeBinaryCodable.write(to:)();
  if (!v0)
  {
    v14(v9);
    sub_1008C80E4();
    uint64_t v10 = *(uint64_t (**)(void))(v6 + 8);
    sub_1008C7564();
    sub_100164F40();
    uint64_t v11 = v10();
    v13(v11);
    sub_1008C80FC();
    uint64_t v12 = sub_1008C81B4();
    ((void (*)(uint64_t))v10)(v12);
  }
  sub_1008C6C44();
  sub_100163164();
}

uint64_t sub_1008B9758()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    if (v5 == 2)
    {
      return 4;
    }
    else if (v5 == 1)
    {
      return sub_1008C03F8();
    }
    else
    {
      type metadata accessor for BinaryDecoder.Error();
      sub_1008BD0B8((uint64_t)&qword_100E95730);
      uint64_t v2 = sub_10017D4A4();
      sub_100183208(v2, v3);
      sub_100162880();
      sub_10017A8E8();
      v4();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1008B9854(uint64_t a1, char a2)
{
  if (a2 == 4)
  {
    sub_1008C7F70();
    return sub_1008C6E14();
  }
  else
  {
    uint64_t result = sub_1008C7390();
    if (!v2) {
      return sub_1008C02E8();
    }
  }
  return result;
}

uint64_t sub_1008B98D4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Deviation();
  uint64_t v16 = *(void *)(v3 - 8);
  uint64_t v17 = v3;
  __chkstk_darwin(v3);
  uint64_t v15 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E65250);
  uint64_t v18 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E7DC28);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E6B7C8);
  uint64_t v19 = v1;
  Trend.baseline.getter();
  uint64_t v20 = a1;
  uint64_t v12 = v21;
  sub_1008B9E8C();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (!v12)
  {
    Trend.currentValue.getter();
    sub_1008BA04C();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v5);
    uint64_t v14 = v15;
    Trend.deviation.getter();
    Deviation.write(to:)();
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v14, v17);
  }
  return result;
}

uint64_t sub_1008B9BB0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Deviation();
  uint64_t v16 = *(void *)(v3 - 8);
  uint64_t v17 = v3;
  __chkstk_darwin(v3);
  uint64_t v15 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E6B648);
  uint64_t v18 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E7E748);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E7E730);
  uint64_t v19 = v1;
  Trend.baseline.getter();
  uint64_t v20 = a1;
  uint64_t v12 = v21;
  sub_1008B9E8C();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (!v12)
  {
    Trend.currentValue.getter();
    sub_1008BA04C();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v5);
    uint64_t v14 = v15;
    Trend.deviation.getter();
    Deviation.write(to:)();
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v14, v17);
  }
  return result;
}

void sub_1008B9E8C()
{
  sub_10016314C();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  type metadata accessor for Date();
  sub_100179C0C();
  __chkstk_darwin(v9);
  sub_100185A80(v10, v17);
  sub_10017DF08(v6);
  sub_100179C0C();
  __chkstk_darwin(v11);
  sub_10011C760();
  sub_10017DF08(v4);
  sub_100179C0C();
  __chkstk_darwin(v12);
  sub_100125FF8();
  sub_10017DF08(v2);
  TrendBaseline.kind.getter();
  sub_1008BABC4(v8, v4);
  sub_100164938();
  v13();
  if (!v0)
  {
    TrendBaseline.value.getter();
    sub_1008C8120();
    sub_1008BA04C();
    sub_10018711C();
    sub_100162F0C();
    v14();
    sub_1008C8450();
    TrendBaseline.startDate.getter();
    sub_100119598();
    Date.write(to:)();
    uint64_t v15 = sub_1008C7CE8();
    v16(v15);
  }
  sub_1008C754C();
  sub_100163164();
}

void sub_1008BA04C()
{
  sub_1008C7868();
  uint64_t v3 = v2;
  sub_1008C7358();
  sub_10017DF08(v4);
  Measurement.value.getter();
  FixedSizeTypeBinaryCodable.write(to:)();
  if (!v0)
  {
    uint64_t v5 = (void *)Measurement.unit.getter();
    v3(v1);
  }
  sub_1008C7BA4();
}

uint64_t sub_1008BA0EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v14[6] = a2;
  uint64_t v4 = type metadata accessor for Deviation();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E65250);
  v14[5] = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E7DC28);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t result = sub_1008BA904(a1, (uint64_t)v14 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!v2)
  {
    v14[1] = v7;
    void v14[2] = v9;
    v14[3] = v6;
    void v14[4] = v11;
    static FixedSizeTypeBinaryCodable.read(from:)();
    sub_1001ABC4C(0, (unint64_t *)&qword_100E659A0);
    static NSUnitTemperature.read(from:)();
    Measurement.init(value:unit:)();
    static Deviation.read(from:)();
    return Trend.init(baseline:currentValue:deviation:)();
  }
  return result;
}

uint64_t sub_1008BA398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v14[6] = a2;
  uint64_t v4 = type metadata accessor for Deviation();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E6B648);
  v14[5] = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E7E748);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t result = sub_1008BA644(a1, (uint64_t)v14 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!v2)
  {
    v14[1] = v7;
    void v14[2] = v9;
    v14[3] = v6;
    void v14[4] = v11;
    static FixedSizeTypeBinaryCodable.read(from:)();
    sub_1001ABC4C(0, (unint64_t *)&qword_100E6B678);
    static NSUnitLength.read(from:)();
    Measurement.init(value:unit:)();
    static Deviation.read(from:)();
    return Trend.init(baseline:currentValue:deviation:)();
  }
  return result;
}

uint64_t sub_1008BA644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void v13[5] = a2;
  uint64_t v3 = type metadata accessor for Date();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E6B648);
  v13[4] = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E7E728);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = v14;
  uint64_t result = sub_1008BAD60(a1, &qword_100E7E728);
  if (!v11)
  {
    v13[1] = v6;
    void v13[2] = v8;
    uint64_t v14 = v10;
    void v13[3] = v5;
    static FixedSizeTypeBinaryCodable.read(from:)();
    sub_1001ABC4C(0, (unint64_t *)&qword_100E6B678);
    static NSUnitLength.read(from:)();
    Measurement.init(value:unit:)();
    static Date.read(from:)();
    return TrendBaseline.init(kind:value:startDate:)();
  }
  return result;
}

uint64_t sub_1008BA904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void v13[5] = a2;
  uint64_t v3 = type metadata accessor for Date();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E65250);
  v13[4] = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E9D628);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = v14;
  uint64_t result = sub_1008BAD60(a1, &qword_100E9D628);
  if (!v11)
  {
    v13[1] = v6;
    void v13[2] = v8;
    uint64_t v14 = v10;
    void v13[3] = v5;
    static FixedSizeTypeBinaryCodable.read(from:)();
    sub_1001ABC4C(0, (unint64_t *)&qword_100E659A0);
    static NSUnitTemperature.read(from:)();
    Measurement.init(value:unit:)();
    static Date.read(from:)();
    return TrendBaseline.init(kind:value:startDate:)();
  }
  return result;
}

void sub_1008BABC4(uint64_t a1, uint64_t *a2)
{
  sub_10017DF08(a2);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_100162808();
  v3();
  sub_100127A9C();
  sub_1008C74AC();
  if (v4() == enum case for TrendBaseline.Kind.mean<A>(_:))
  {
    sub_100127BC8();
    FixedSizeTypeBinaryCodable.write(to:)();
  }
  else
  {
    type metadata accessor for BinaryDecoder.Error();
    sub_1008BD0B8((uint64_t)&qword_100E95730);
    uint64_t v5 = sub_100166B68();
    sub_1008C7DD0(v5, v6);
    sub_100162880();
    sub_1001631E8();
    v7();
    swift_willThrow();
    uint64_t v8 = sub_100127A9C();
    v9(v8);
  }
  sub_1008C79A0();
}

uint64_t sub_1008BAD60(uint64_t a1, uint64_t *a2)
{
  uint64_t result = sub_10017B3A0();
  if (!v2)
  {
    sub_1001D2538();
    if (v5)
    {
      sub_10017DF08(a2);
      sub_100162E4C();
      sub_1001631E8();
      return v6();
    }
    else
    {
      type metadata accessor for BinaryDecoder.Error();
      sub_1008BD0B8((uint64_t)&qword_100E95730);
      uint64_t v7 = sub_10017D4A4();
      sub_100183208(v7, v8);
      sub_100162880();
      sub_10017A8E8();
      v9();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1008BAE78()
{
  uint64_t v11 = type metadata accessor for WeatherMetadata();
  uint64_t v13 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E6B6A0);
  uint64_t v14 = v0;
  DailyWeatherStatistics.days.getter();
  type metadata accessor for DayPrecipitationStatistics();
  sub_1008BD0B8((uint64_t)&unk_100E9D5A8);
  sub_1008BD0B8((uint64_t)&unk_100E9D5B0);
  uint64_t v6 = v15;
  Array<A>.write(to:)();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v6)
  {
    uint64_t v8 = v3;
    uint64_t v9 = v12;
    uint64_t v10 = v13;
    DailyWeatherStatistics.baselineStartDate.getter();
    Date.write(to:)();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v8);
    DailyWeatherStatistics.metadata.getter();
    WeatherMetadata.write(to:)();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v2, v11);
  }
  return result;
}

uint64_t sub_1008BB110()
{
  uint64_t v1 = type metadata accessor for WeatherMetadata();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = type metadata accessor for Date();
  __chkstk_darwin(v2);
  type metadata accessor for DayPrecipitationStatistics();
  sub_1008BD0B8((uint64_t)&unk_100E9D5A8);
  sub_1008BD0B8((uint64_t)&unk_100E9D5B0);
  uint64_t result = static Array<A>.read(from:)();
  if (!v0)
  {
    static Date.read(from:)();
    static WeatherMetadata.read(from:)();
    sub_1008BD0B8((uint64_t)&unk_100E9D5F8);
    sub_1008BD0B8((uint64_t)&unk_100E9D600);
    sub_1008BD0B8((uint64_t)&unk_100E9D608);
    return DailyWeatherStatistics.init(days:baselineStartDate:metadata:)();
  }
  return result;
}

uint64_t sub_1008BB3B4()
{
  uint64_t v0 = type metadata accessor for WeatherMetadata();
  uint64_t v7 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E6B6C0);
  DailyWeatherSummary.days.getter();
  type metadata accessor for DayPrecipitationSummary();
  sub_1008BD0B8((uint64_t)&unk_100E9D378);
  sub_1008BD0B8((uint64_t)&unk_100E9D380);
  uint64_t v3 = v8;
  Array<A>.write(to:)();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v3)
  {
    uint64_t v5 = v7;
    DailyWeatherSummary.metadata.getter();
    WeatherMetadata.write(to:)();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v2, v0);
  }
  return result;
}

uint64_t sub_1008BB56C()
{
  uint64_t v11 = type metadata accessor for WeatherMetadata();
  uint64_t v13 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E717A0);
  uint64_t v14 = v0;
  HourlyWeatherStatistics.hours.getter();
  type metadata accessor for HourTemperatureStatistics();
  sub_1008BD0B8((uint64_t)&unk_100E9D5B8);
  sub_1008BD0B8((uint64_t)&unk_100E9D5C0);
  uint64_t v6 = v15;
  Array<A>.write(to:)();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v6)
  {
    uint64_t v8 = v3;
    uint64_t v9 = v12;
    uint64_t v10 = v13;
    HourlyWeatherStatistics.baselineStartDate.getter();
    Date.write(to:)();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v8);
    HourlyWeatherStatistics.metadata.getter();
    WeatherMetadata.write(to:)();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v2, v11);
  }
  return result;
}

uint64_t sub_1008BB804()
{
  uint64_t v1 = type metadata accessor for WeatherMetadata();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = type metadata accessor for Date();
  __chkstk_darwin(v2);
  type metadata accessor for HourTemperatureStatistics();
  sub_1008BD0B8((uint64_t)&unk_100E9D5B8);
  sub_1008BD0B8((uint64_t)&unk_100E9D5C0);
  uint64_t result = static Array<A>.read(from:)();
  if (!v0)
  {
    static Date.read(from:)();
    static WeatherMetadata.read(from:)();
    sub_1008BD0B8((uint64_t)&unk_100E9D610);
    sub_1008BD0B8((uint64_t)&unk_100E9D618);
    sub_1008BD0B8((uint64_t)&unk_100E9D620);
    return HourlyWeatherStatistics.init(hours:baselineStartDate:metadata:)();
  }
  return result;
}

uint64_t sub_1008BBAA8()
{
  uint64_t v11 = type metadata accessor for WeatherMetadata();
  uint64_t v13 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E65258);
  uint64_t v14 = v0;
  MonthlyWeatherStatistics.months.getter();
  type metadata accessor for MonthTemperatureStatistics();
  sub_1008BD0B8((uint64_t)&unk_100E9D598);
  sub_1008BD0B8((uint64_t)&unk_100E9D5A0);
  uint64_t v6 = v15;
  Array<A>.write(to:)();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v6)
  {
    uint64_t v8 = v3;
    uint64_t v9 = v12;
    uint64_t v10 = v13;
    MonthlyWeatherStatistics.baselineStartDate.getter();
    Date.write(to:)();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v8);
    MonthlyWeatherStatistics.metadata.getter();
    WeatherMetadata.write(to:)();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v2, v11);
  }
  return result;
}

uint64_t sub_1008BBD40()
{
  uint64_t v11 = type metadata accessor for WeatherMetadata();
  uint64_t v13 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E6B7D0);
  uint64_t v14 = v0;
  MonthlyWeatherStatistics.months.getter();
  type metadata accessor for MonthPrecipitationStatistics();
  sub_1008BD0B8((uint64_t)&unk_100E9D588);
  sub_1008BD0B8((uint64_t)&unk_100E9D590);
  uint64_t v6 = v15;
  Array<A>.write(to:)();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v6)
  {
    uint64_t v8 = v3;
    uint64_t v9 = v12;
    uint64_t v10 = v13;
    MonthlyWeatherStatistics.baselineStartDate.getter();
    Date.write(to:)();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v8);
    MonthlyWeatherStatistics.metadata.getter();
    WeatherMetadata.write(to:)();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v2, v11);
  }
  return result;
}

uint64_t sub_1008BBFD8()
{
  uint64_t v1 = type metadata accessor for WeatherMetadata();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = type metadata accessor for Date();
  __chkstk_darwin(v2);
  type metadata accessor for MonthTemperatureStatistics();
  sub_1008BD0B8((uint64_t)&unk_100E9D598);
  sub_1008BD0B8((uint64_t)&unk_100E9D5A0);
  uint64_t result = static Array<A>.read(from:)();
  if (!v0)
  {
    static Date.read(from:)();
    static WeatherMetadata.read(from:)();
    sub_1008BD0B8((uint64_t)&qword_100E9D5E0);
    sub_1008BD0B8((uint64_t)&qword_100E9D5E8);
    sub_1008BD0B8((uint64_t)&qword_100E9D5F0);
    return MonthlyWeatherStatistics.init(months:baselineStartDate:metadata:)();
  }
  return result;
}

uint64_t sub_1008BC27C()
{
  uint64_t v1 = type metadata accessor for WeatherMetadata();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = type metadata accessor for Date();
  __chkstk_darwin(v2);
  type metadata accessor for MonthPrecipitationStatistics();
  sub_1008BD0B8((uint64_t)&unk_100E9D588);
  sub_1008BD0B8((uint64_t)&unk_100E9D590);
  uint64_t result = static Array<A>.read(from:)();
  if (!v0)
  {
    static Date.read(from:)();
    static WeatherMetadata.read(from:)();
    sub_1008BD0B8((uint64_t)&qword_100E9D5C8);
    sub_1008BD0B8((uint64_t)&qword_100E9D5D0);
    sub_1008BD0B8((uint64_t)&qword_100E9D5D8);
    return MonthlyWeatherStatistics.init(months:baselineStartDate:metadata:)();
  }
  return result;
}

uint64_t sub_1008BC520(uint64_t a1)
{
  uint64_t v4 = sub_10017DF08(&qword_100E65250);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v16 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v16 - v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v16 - v11;
  sub_10017DF08(&qword_100E9D3A0);
  uint64_t v17 = v1;
  Percentiles.p10.getter();
  uint64_t v18 = a1;
  sub_1008BA04C();
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  uint64_t result = v13(v12, v4);
  if (!v2)
  {
    Percentiles.p50.getter();
    sub_1008BA04C();
    v13(v9, v4);
    uint64_t v15 = v16;
    Percentiles.p90.getter();
    sub_1008BA04C();
    return v13(v15, v4);
  }
  return result;
}

uint64_t sub_1008BC748()
{
  uint64_t v1 = sub_10017DF08(&qword_100E65250);
  __chkstk_darwin(v1);
  __chkstk_darwin(v2);
  __chkstk_darwin(v3);
  uint64_t result = static FixedSizeTypeBinaryCodable.read(from:)();
  if (!v0)
  {
    sub_1001ABC4C(0, (unint64_t *)&qword_100E659A0);
    static NSUnitTemperature.read(from:)();
    Measurement.init(value:unit:)();
    static FixedSizeTypeBinaryCodable.read(from:)();
    static NSUnitTemperature.read(from:)();
    Measurement.init(value:unit:)();
    static FixedSizeTypeBinaryCodable.read(from:)();
    static NSUnitTemperature.read(from:)();
    Measurement.init(value:unit:)();
    return Percentiles.init(p10:p50:p90:)();
  }
  return result;
}

uint64_t sub_1008BC9E8()
{
  swift_retain();
  FixedSizeTypeBinaryCodable.write(to:)();
  if (!v0)
  {
    sub_100150344();
    sub_1008923EC(v1);
  }
  return swift_release();
}

void sub_1008BCA6C()
{
  sub_100127C8C();
  uint64_t v3 = type metadata accessor for VFXTestViewState();
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  uint64_t v5 = sub_10017C704();
  type metadata accessor for ViewState.SecondaryViewState(v5);
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_100162EB8();
  uint64_t v7 = sub_10019DE68();
  sub_10013C234(v7, v8);
  sub_1008C86C0();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1008C5A14(v0, v2);
    sub_100165320();
    if (!v1) {
      WeatherCondition.write(to:)();
    }
    sub_10013C2E8();
  }
  else
  {
    sub_100165320();
    if (!v1)
    {
      sub_1008C68B0();
      sub_100892740();
    }
    swift_release();
  }
  sub_1008C79A0();
}

uint64_t sub_1008BCBF0(uint64_t a1)
{
  uint64_t result = UIInterfaceOrientation.write(to:)(a1, *v1);
  if (!v2)
  {
    uint64_t v4 = sub_1008C6790();
    UIUserInterfaceSizeClass.write(to:)(v4, v5);
    sub_1008C6790();
    sub_1008C02E8();
    sub_1008C6790();
    sub_1008C2D88();
    sub_1008C6790();
    sub_1008C3650();
    type metadata accessor for DisplayMetrics();
    sub_1008C6790();
    return DynamicTypeSize.write(to:)();
  }
  return result;
}

uint64_t sub_1008BCC98()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    sub_1001D2538();
    if (v2)
    {
      type metadata accessor for ListViewState._Storage();
      sub_1001D4110();
      return sub_1008921A4();
    }
    else
    {
      type metadata accessor for BinaryDecoder.Error();
      sub_1008BD0B8((uint64_t)&qword_100E95730);
      uint64_t v3 = sub_10017D4A4();
      sub_100183208(v3, v4);
      sub_100162880();
      sub_10017A8E8();
      v5();
      return swift_willThrow();
    }
  }
  return result;
}

void sub_1008BCD84()
{
  sub_10017F304();
  sub_10008B8A8();
  type metadata accessor for WeatherCondition();
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_100166B4C();
  uint64_t v3 = type metadata accessor for VFXTestViewState();
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_100109370();
  sub_1008C6724();
  if (!v1)
  {
    if (v12 == 2)
    {
      sub_100127BC8();
      static WeatherCondition.read(from:)();
      sub_1008C7728();
      sub_1008C7558();
      v6();
      uint64_t v7 = sub_1008C86CC();
      sub_1008C5A14(v7, v8);
      type metadata accessor for ViewState.SecondaryViewState(0);
    }
    else
    {
      if (v12 != 1)
      {
        type metadata accessor for BinaryDecoder.Error();
        sub_1008BD0B8((uint64_t)&qword_100E95730);
        uint64_t v9 = sub_100166B68();
        sub_1008C7DD0(v9, v10);
        sub_100162880();
        sub_1001631E8();
        v11();
        swift_willThrow();
        goto LABEL_2;
      }
      type metadata accessor for LocationViewerViewState._Storage(0);
      sub_100127BC8();
      sub_1008925CC();
      *uint64_t v0 = v5;
      type metadata accessor for ViewState.SecondaryViewState(0);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_2:
  sub_1008C7994();
  sub_100182EF8();
}

void sub_1008BCF88()
{
  sub_10016314C();
  sub_10008B8A8();
  type metadata accessor for DynamicTypeSize();
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_1008C6D6C();
  uint64_t v3 = static UIInterfaceOrientation.read(from:)();
  if (!v1)
  {
    uint64_t v4 = v3;
    sub_1008C6D6C();
    uint64_t v5 = static UIUserInterfaceSizeClass.read(from:)();
    sub_1008C6D6C();
    char v6 = sub_1008C03F8();
    sub_1008C6D6C();
    char v7 = sub_1008C2DE8();
    char v14 = v7;
    sub_1008C6D6C();
    char v8 = sub_1008C384C();
    char v13 = v8;
    sub_1008C6D6C();
    static DynamicTypeSize.read(from:)(v9);
    *(void *)uint64_t v0 = v4;
    *(void *)(v0 + 8) = v5;
    *(unsigned char *)(v0 + 16) = v6;
    *(unsigned char *)(v0 + 17) = v14 & 1;
    *(unsigned char *)(v0 + 18) = v13;
    uint64_t v10 = type metadata accessor for DisplayMetrics();
    uint64_t v11 = sub_1008C7778(*(int *)(v10 + 36));
    v12(v11);
  }
  sub_1002EE5D4();
  sub_100163164();
}

unint64_t sub_1008BD0B8(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_1008BD0FC(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    sub_1001ABC4C(255, v3);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_1008BD13C(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    sub_10018C6DC(&qword_100E65250);
    sub_1008C8244((uint64_t)&unk_100E9D258);
    sub_1008C8244((uint64_t)&unk_100E9D260);
    unint64_t result = sub_1008C7F00();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_1008BD1E8(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    sub_10018C6DC(&qword_100E6D0A8);
    sub_1008C8244((uint64_t)&unk_100E9D280);
    sub_1008C8244((uint64_t)&unk_100E9D288);
    unint64_t result = sub_1008C7F00();
    atomic_store(result, v1);
  }
  return result;
}

void sub_1008BD294()
{
  sub_10017F304();
  uint64_t v3 = v2;
  uint64_t v4 = sub_10017DF08(&qword_100E749B0);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  uint64_t v6 = sub_1008C70EC();
  if (!v0)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v7;
    uint64_t v10 = sub_1008C76F8();
    uint64_t v12 = v11;
    type metadata accessor for URL();
    static Optional<A>.read(from:)();
    *uint64_t v3 = v8;
    v3[1] = v9;
    v3[2] = v10;
    v3[3] = v12;
    uint64_t v13 = type metadata accessor for NewsChannel();
    sub_1001278D0(v1, (uint64_t)v3 + *(int *)(v13 + 24), &qword_100E749B0);
  }
  sub_1008C6B8C();
  sub_100182EF8();
}

uint64_t sub_1008BD3A0()
{
  uint64_t result = String.write(to:)();
  if (!v0)
  {
    sub_1008C7340();
    type metadata accessor for NewsChannel();
    sub_1008C7F4C();
    sub_10017DF08(&qword_100E749B0);
    return Optional<A>.write(to:)();
  }
  return result;
}

uint64_t sub_1008BD428()
{
  return static String.read(from:)();
}

uint64_t sub_1008BD440()
{
  return String.write(to:)();
}

uint64_t sub_1008BD458()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    uint64_t result = sub_1008C7E5C(result, v2, v3, v4, v5, v6, v7, v8, v12, v13, SWORD2(v13), SBYTE6(v13), HIBYTE(v13));
    if (result >= 6)
    {
      type metadata accessor for BinaryDecoder.Error();
      sub_1008BD0B8((uint64_t)&qword_100E95730);
      uint64_t v9 = sub_10017D4A4();
      sub_100183208(v9, v10);
      sub_100162880();
      sub_10017A8E8();
      v11();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1008BD524()
{
  return FixedSizeTypeBinaryCodable.write(to:)();
}

uint64_t sub_1008BD63C()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    sub_1001D2538();
    if (v3)
    {
      return 0;
    }
    else if (v2 == 3)
    {
      return 0;
    }
    else if (v2 == 2)
    {
      return sub_1008C76E0();
    }
    else
    {
      type metadata accessor for BinaryDecoder.Error();
      sub_1008BD0B8((uint64_t)&qword_100E95730);
      uint64_t v4 = sub_10017D4A4();
      sub_100183208(v4, v5);
      sub_100162880();
      sub_10017A8E8();
      v6();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1008BD744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a3)
  {
    sub_1008C7F7C();
    return FixedSizeTypeBinaryCodable.write(to:)();
  }
  if (a3 == 1) {
    return FixedSizeTypeBinaryCodable.write(to:)();
  }
  uint64_t result = sub_1008C7390();
  if (!v3) {
    return sub_1008C7C80();
  }
  return result;
}

void sub_1008BD7F0()
{
  sub_1001A69AC();
  uint64_t v3 = v2;
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_1008C7118();
  char v6 = sub_1008BD458();
  if (!v0)
  {
    char v7 = v6;
    uint64_t v8 = sub_1008BD63C();
    uint64_t v10 = v9;
    type metadata accessor for Date();
    static Optional<A>.read(from:)();
    *(unsigned char *)uint64_t v3 = v7;
    *(void *)(v3 + 8) = v8;
    *(void *)(v3 + 16) = v10;
    uint64_t v11 = type metadata accessor for ContentStatusBanner();
    sub_1001278D0(v1, v3 + *(int *)(v11 + 24), (uint64_t *)&unk_100E73CA0);
  }
  sub_1002EEAFC();
  sub_1001847DC();
}

uint64_t sub_1008BD8F4()
{
  uint64_t result = sub_1008BD524();
  if (!v0)
  {
    uint64_t v2 = sub_1001D4110();
    sub_1008BD744(v2, v3, v4);
    type metadata accessor for ContentStatusBanner();
    sub_1008C7F4C();
    sub_10017DF08((uint64_t *)&unk_100E73CA0);
    return Optional<A>.write(to:)();
  }
  return result;
}

void sub_1008BD980()
{
  sub_100214F08();
  uint64_t v17 = v2;
  uint64_t v3 = type metadata accessor for SearchLocation();
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_10017C704();
  type metadata accessor for LocationOfInterest();
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_1008C7678();
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_10008B8C0();
  static FixedSizeTypeBinaryCodable.read(from:)();
  if (!v0)
  {
    sub_1008C73C0();
    switch(v7)
    {
      case 0:
        static Location.read(from:)();
        sub_1001190D4();
        v8();
        type metadata accessor for PreviewLocation();
        sub_1008C6A80();
        goto LABEL_13;
      case 1:
        static LocationOfInterest.read(from:)();
        sub_1001A3510();
        sub_1001190D4();
        v12();
        type metadata accessor for PreviewLocation();
        sub_1008C6A90();
        goto LABEL_13;
      case 2:
        static SearchLocation.read(from:)();
        sub_1008C5A14(v1, v17);
        type metadata accessor for PreviewLocation();
        goto LABEL_13;
      case 3:
        static CLLocationCoordinate2D.read(from:)();
        uint64_t v15 = v13;
        uint64_t v16 = v14;
        static Optional<A>.read(from:)();
        *(void *)uint64_t v17 = v15;
        *(void *)(v17 + 8) = v16;
        *(_OWORD *)(v17 + 16) = v18;
        type metadata accessor for PreviewLocation();
LABEL_13:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        type metadata accessor for BinaryDecoder.Error();
        sub_1008BD0B8((uint64_t)&qword_100E95730);
        uint64_t v9 = sub_100166B68();
        sub_1008C6B60(v9, v10);
        sub_100162880();
        sub_1001631E8();
        v11();
        swift_willThrow();
        break;
    }
  }
  sub_1008C67D0();
}

void sub_1008BDCB0()
{
  sub_100214F08();
  type metadata accessor for SearchLocation();
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_100128A8C(v3, v13);
  type metadata accessor for LocationOfInterest();
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_1008C7678();
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_10017E3A0();
  type metadata accessor for PreviewLocation();
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_100162E88();
  uint64_t v7 = sub_100127A9C();
  sub_10013C234(v7, v8);
  sub_1008C76A0();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1008C86CC();
      sub_1001627D4();
      v11();
      sub_1008C82DC();
      if (!v1) {
        LocationOfInterest.write(to:)();
      }
      sub_10016285C();
      v12();
      break;
    case 2u:
      sub_1008C5A14(v0, v14);
      sub_1008C82DC();
      if (!v1)
      {
        sub_1008C7340();
        sub_1008C7340();
        sub_1008C7340();
        sub_10017DF08(&qword_100E639E8);
        sub_1008BD0B8((uint64_t)&unk_100E9D3A8);
        sub_1008BD0B8((uint64_t)&unk_100E9D3B0);
        sub_100127C2C();
        Optional<A>.write(to:)();
        sub_10017DF08(&qword_100E9D3B8);
        sub_1008BD0B8((uint64_t)&unk_100E9D3C0);
        sub_1008BD0B8((uint64_t)&unk_100E9D3C8);
        sub_100127C2C();
        Optional<A>.write(to:)();
      }
      sub_10013C2E8();
      break;
    case 3u:
      sub_1008C6890();
      if (!v1)
      {
        CLLocationCoordinate2D.write(to:)();
        sub_10017DF08(&qword_100E65F18);
        sub_100214EA0();
        Optional<A>.write(to:)();
      }
      swift_bridgeObjectRelease();
      break;
    default:
      sub_1008C7564();
      sub_1001627D4();
      v9();
      sub_1008C6AFC();
      if (!v1) {
        Location.write(to:)();
      }
      sub_1001629F8();
      v10();
      break;
  }
  sub_1008C67D0();
}

void sub_1008BE148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_10016314C();
  sub_1008C7EE8();
  sub_100179C0C();
  __chkstk_darwin(v14);
  sub_1001870B8();
  __chkstk_darwin(v15);
  sub_100181E70();
  __chkstk_darwin(v16);
  sub_1008C68FC();
  if (!v13)
  {
    if (a13 == 3 || a13 == 2 || a13 == 1)
    {
      sub_1008C8670();
      sub_1001191A8();
      v17();
      type metadata accessor for MoonDetailSelectedDate();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      type metadata accessor for BinaryDecoder.Error();
      sub_1008BD0B8((uint64_t)&qword_100E95730);
      uint64_t v18 = sub_100166B68();
      sub_1008C6B60(v18, v19);
      sub_100162880();
      sub_1001631E8();
      v20();
      swift_willThrow();
    }
  }
  sub_1001194B0();
  sub_100163164();
}

void sub_1008BE33C()
{
  sub_10016314C();
  sub_1008C7A64();
  type metadata accessor for Date();
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_100129860();
  __chkstk_darwin(v4);
  sub_10019D2C0();
  __chkstk_darwin(v5);
  sub_1001CB758();
  type metadata accessor for MoonDetailSelectedDate();
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_100162F18();
  sub_10013C234(v0, v2);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1001627D4();
    v9();
    sub_1008C73CC();
    FixedSizeTypeBinaryCodable.write(to:)();
    if (v1) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1001627D4();
    v8();
    sub_1008C6EC0();
    FixedSizeTypeBinaryCodable.write(to:)();
    if (v1) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  sub_1008C70B4();
  sub_1001627D4();
  v10();
  sub_1008C6E48();
  sub_1008C7E74();
  FixedSizeTypeBinaryCodable.write(to:)();
  if (!v1) {
LABEL_9:
  }
    Date.write(to:)();
LABEL_10:
  sub_1001629F8();
  v11();
  sub_10018B184();
  sub_100163164();
}

void sub_1008BE59C()
{
  sub_10017F304();
  static String.read(from:)();
  if (!v0)
  {
    type metadata accessor for LocationWeatherDataState(0);
    sub_1008BD0B8((uint64_t)&unk_100E9D3D0);
    sub_1008BD0B8((uint64_t)&unk_100E9D3D8);
    static Dictionary<>.read(from:)();
    uint64_t v1 = sub_1008C6D48();
    type metadata accessor for LocationAvailableDataSetState(v1);
    sub_1008BD0B8((uint64_t)&unk_100E9D3E0);
    sub_1008BD0B8((uint64_t)&unk_100E9D3E8);
    static Dictionary<>.read(from:)();
  }
  sub_100182EF8();
}

uint64_t sub_1008BE764()
{
  uint64_t result = String.write(to:)();
  if (!v0)
  {
    type metadata accessor for LocationWeatherDataState(0);
    sub_1008BD0B8((uint64_t)&unk_100E9D3D0);
    sub_1008BD0B8((uint64_t)&unk_100E9D3D8);
    Dictionary<>.write(to:)();
    type metadata accessor for LocationAvailableDataSetState(0);
    sub_1008BD0B8((uint64_t)&unk_100E9D3E0);
    sub_1008BD0B8((uint64_t)&unk_100E9D3E8);
    sub_1008C7D40();
    return Dictionary<>.write(to:)();
  }
  return result;
}

void sub_1008BE910()
{
  sub_10017F304();
  uint64_t v5 = v4;
  sub_10008B8A8();
  uint64_t v6 = type metadata accessor for PreprocessedWeatherData();
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  uint64_t v8 = sub_10017C704();
  uint64_t v9 = type metadata accessor for WeatherData(v8);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  uint64_t v11 = sub_100119564();
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_1001870B8();
  __chkstk_darwin(v13);
  sub_100152388();
  sub_1008C7710();
  if (!v1)
  {
    sub_1008C73C0();
    switch(v21)
    {
      case 0:
        type metadata accessor for LocationWeatherDataState(0);
        goto LABEL_9;
      case 1:
        sub_1008A917C(v5, v14, v15, v16, v17, v18, v19, v20, v41, v42, SWORD2(v42), SBYTE6(v42), SHIBYTE(v42));
        sub_1008C5A14(v3, (uint64_t)v0);
        type metadata accessor for LocationWeatherDataState(0);
        goto LABEL_9;
      case 2:
        sub_100A20300();
        sub_1008C6CF8();
        sub_1007CB770();
        sub_1008A917C(v5, v25, v26, v27, v28, v29, v30, v31, v41, v42, SWORD2(v42), SBYTE6(v42), SHIBYTE(v42));
        sub_10017DF08(&qword_100E63748);
        sub_1008C5A14(v2, (uint64_t)v0);
        uint64_t v37 = sub_100127C2C();
        sub_1008C5A14(v37, v38);
        uint64_t v39 = sub_1001195A8();
        sub_1008C5A14(v39, v40);
        type metadata accessor for LocationWeatherDataState(0);
        goto LABEL_9;
      case 3:
        uint64_t v32 = static String.read(from:)();
        uint64_t v34 = v33;
        uint64_t v35 = sub_1008C3BA0();
        *uint64_t v0 = v32;
        v0[1] = v34;
        v0[2] = v35;
        v0[3] = v36;
        type metadata accessor for LocationWeatherDataState(0);
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        type metadata accessor for BinaryDecoder.Error();
        sub_1008BD0B8((uint64_t)&qword_100E95730);
        uint64_t v22 = sub_100166B68();
        sub_1008C6B60(v22, v23);
        sub_100162880();
        sub_1001631E8();
        v24();
        swift_willThrow();
        break;
    }
  }
  sub_1002EEAFC();
  sub_100182EF8();
}

void sub_1008BECA0()
{
  sub_10016314C();
  sub_1008C6D48();
  uint64_t v6 = type metadata accessor for PreprocessedWeatherData();
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v9 = v8;
  uint64_t v10 = sub_100129064();
  type metadata accessor for WeatherData(v10);
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_10017C704();
  uint64_t v12 = type metadata accessor for NewsDataModel();
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_1001870B8();
  __chkstk_darwin(v14);
  sub_100152388();
  type metadata accessor for LocationWeatherDataState(0);
  sub_100162E4C();
  __chkstk_darwin(v15);
  sub_10008B8C0();
  sub_10013C234(v0, v5);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v16 = v5 + *(int *)(sub_10017DF08(&qword_100E63748) + 48);
      sub_1008C5A14(v5, v2);
      sub_1008C5A14(v16, v9);
      uint64_t v17 = sub_1008C86C0();
      sub_1008C5A14(v17, v18);
      sub_1008C84C4();
      if (!v1)
      {
        sub_1008C6DB4();
        String.write(to:)();
        sub_1008C6DB4();
        WeatherDataModel.write(to:)();
        sub_1008C6DB4();
        sub_1008C63D0();
        sub_1008C6DB4();
        sub_1008C60D0();
        sub_100150344();
        sub_1007CB224();
        sub_1008C8114();
        sub_1008A93EC();
      }
      sub_10013C2E8();
      sub_10013C2E8();
      goto LABEL_13;
    case 2u:
      uint64_t v19 = *(void *)(v5 + 16);
      unint64_t v20 = *(void *)(v5 + 24);
      sub_1008C84C4();
      if (v1)
      {
        sub_100303D6C(v19, v20);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1008C7BB8();
        String.write(to:)();
        swift_bridgeObjectRelease();
        sub_1008C3918(v3, v19, v20);
        sub_100303D6C(v19, v20);
      }
      break;
    case 3u:
      sub_1008C84C4();
      break;
    default:
      sub_1008C5A14(v5, v4);
      sub_1008C84C4();
      if (!v1) {
        sub_1008A93EC();
      }
LABEL_13:
      sub_10013C2E8();
      break;
  }
  sub_10016EF08();
  sub_100163164();
}

void sub_1008BF0BC()
{
  sub_1001A69AC();
  sub_1008C6BAC();
  type metadata accessor for AvailableDataSets();
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_100125FF8();
  sub_1001D1EFC();
  if (!v0)
  {
    sub_1008C77DC();
    if (v4)
    {
      *uint64_t v1 = sub_100214DD8();
      v1[1] = v5;
      type metadata accessor for LocationAvailableDataSetState(0);
      sub_1008C6A90();
    }
    else if (v3 == 2)
    {
      sub_1001D1EFC();
      AvailableDataSets.init(rawValue:)();
      sub_1001823C8();
      sub_1008C68CC();
      v6();
      type metadata accessor for LocationAvailableDataSetState(0);
      sub_1008C6A80();
    }
    else
    {
      if (v3 != 1)
      {
        type metadata accessor for BinaryDecoder.Error();
        sub_1008BD0B8((uint64_t)&qword_100E95730);
        uint64_t v7 = sub_10017D4A4();
        sub_100183208(v7, v8);
        sub_100162880();
        sub_10017A8E8();
        v9();
        swift_willThrow();
        goto LABEL_10;
      }
      type metadata accessor for LocationAvailableDataSetState(0);
      sub_1008C72C4();
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_10:
  sub_1008C6B8C();
  sub_1001847DC();
}

void sub_1008BF278()
{
  sub_10017F304();
  sub_100127C8C();
  type metadata accessor for AvailableDataSets();
  sub_100179C0C();
  __chkstk_darwin(v1);
  uint64_t v2 = sub_10011BA28();
  type metadata accessor for LocationAvailableDataSetState(v2);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100162EB8();
  sub_1008C74C4();
  int v4 = sub_1008C86A8();
  if (v4)
  {
    if (v4 == 1)
    {
      sub_1008C6E48();
      sub_1001825F4();
      if (!v0)
      {
        sub_1008C7A58();
        String.write(to:)();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1001825F4();
    }
  }
  else
  {
    sub_10019DE68();
    sub_1001627D4();
    v5();
    sub_1008C6EC0();
    sub_1001825F4();
    if (!v0)
    {
      AvailableDataSets.rawValue.getter();
      sub_1001825F4();
    }
    sub_100164F40();
    v6();
  }
  sub_100182C7C();
  sub_100182EF8();
}

void sub_1008BF434()
{
}

uint64_t sub_1008BF514()
{
  return Dictionary<>.write(to:)();
}

uint64_t sub_1008BF60C()
{
  return AppConfiguration.write(to:)();
}

#error "1008BF658: call analysis failed (funcsize=16)"

void sub_1008BF664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_10017F304();
  a17 = v20;
  a18 = v21;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v26 = sub_10008B8A8();
  uint64_t v28 = v27(v26);
  sub_100179C0C();
  uint64_t v30 = v29;
  sub_100165058();
  __n128 v32 = __chkstk_darwin(v31);
  uint64_t v34 = (char *)&a9 - v33;
  v23(v25, v32);
  if (!v19) {
    (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v18, v34, v28);
  }
  sub_1002EEAFC();
  sub_100182EF8();
}

void BackgroundMoonData.write(to:)()
{
  sub_10016314C();
  sub_10017DF08((uint64_t *)&unk_100E73CA0);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100158494();
  __chkstk_darwin(v4);
  sub_1008C67F8();
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_100127B10();
  BackgroundMoonData.date.getter();
  Date.write(to:)();
  if (v0)
  {
    uint64_t v6 = sub_10019AAEC();
    v7(v6);
  }
  else
  {
    uint64_t v8 = sub_10019AAEC();
    v9(v8);
    BackgroundMoonData.moonrise.getter();
    Optional<A>.write(to:)();
    sub_1008C59C8(v2, (uint64_t)&unk_100E73CA0);
    BackgroundMoonData.moonset.getter();
    sub_1008C73A8();
    sub_1008C59C8(v1, (uint64_t)&unk_100E73CA0);
    BackgroundMoonData.elevation.getter();
    sub_100165320();
    BackgroundMoonData.phaseAngle.getter();
    sub_100165320();
    BackgroundMoonData.rotationAngle.getter();
    sub_100165320();
    BackgroundMoonData.moonImageName.getter();
    sub_1001A4BA8();
    sub_1001195EC();
  }
  sub_10016EF08();
  sub_100163164();
}

uint64_t static BackgroundMoonData.read(from:)()
{
  uint64_t v1 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_1001870B8();
  __chkstk_darwin(v3);
  type metadata accessor for Date();
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_10020FA24();
  uint64_t result = static Date.read(from:)();
  if (!v0)
  {
    static Optional<A>.read(from:)();
    sub_1008C7B24();
    static Optional<A>.read(from:)();
    sub_1001D1EFC();
    sub_1001D1EFC();
    sub_1001D1EFC();
    sub_1008C6B3C();
    return BackgroundMoonData.init(date:moonrise:moonset:elevation:phaseAngle:rotationAngle:moonImageName:)();
  }
  return result;
}

void sub_1008BFB84()
{
  sub_1008C7868();
  FixedSizeTypeBinaryCodable.write(to:)();
  if (!v0)
  {
    type metadata accessor for WeatherCondition();
    sub_1008BD0B8((uint64_t)&unk_100E9D3F0);
    sub_1008BD0B8((uint64_t)&unk_100E9D3F8);
    sub_100127C2C();
    Dictionary<>.write(to:)();
  }
  sub_1008C7BA4();
}

void sub_1008BFC88()
{
  sub_1008C7868();
  sub_10017B3A0();
  if (!v0)
  {
    type metadata accessor for WeatherCondition();
    sub_1008BD0B8((uint64_t)&unk_100E9D3F0);
    sub_1008BD0B8((uint64_t)&unk_100E9D3F8);
    static Dictionary<>.read(from:)();
  }
  sub_1008C7BA4();
}

uint64_t sub_1008BFD94()
{
  uint64_t result = FixedSizeTypeBinaryCodable.write(to:)();
  if (!v0)
  {
    sub_1001A4838();
    LocationAuthorizationState.write(to:)();
    uint64_t v2 = sub_1001A4838();
    sub_1008B9854(v2, v3);
    type metadata accessor for EnvironmentState();
    sub_1001A4838();
    Locale.write(to:)();
    sub_100179168();
    sub_1008C70A8();
    sub_1001825F4();
    sub_1008C70A8();
    sub_1001825F4();
    sub_1008C70A8();
    sub_1001825F4();
    sub_1008C70A8();
    sub_1001825F4();
    sub_1001825F4();
    sub_1008C70A8();
    sub_1001825F4();
    sub_1008C70A8();
    sub_1001825F4();
    sub_1008C70A8();
    return sub_1001825F4();
  }
  return result;
}

void sub_1008BFF90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11, char a12, char a13, char a14, char a15, char a16, char a17)
{
  sub_10016314C();
  sub_1008C86EC();
  type metadata accessor for Locale();
  sub_100179C0C();
  __chkstk_darwin(v20);
  sub_10012B938();
  sub_1001D1EFC();
  if (!v17)
  {
    sub_1008C6E08();
    char v21 = static LocationAuthorizationState.read(from:)();
    sub_1008C6E08();
    char v22 = sub_1008B9758();
    static Locale.read(from:)();
    uint64_t v24 = sub_1008C6914();
    uint64_t v25 = v23;
    sub_1001D1EFC();
    sub_1001D1EFC();
    sub_1001D1EFC();
    sub_1001D1EFC();
    sub_1001D1EFC();
    sub_1001D1EFC();
    sub_1001D1EFC();
    sub_1001D1EFC();
    sub_1000EC078();
    sub_1000F13F0(a17, v21, v22, v18, v24, v25, a16, a15, v19, a14, a13, v26, a12, a11, a10, (uint64_t)&v27);
  }
  sub_100191138();
  sub_100163164();
}

void sub_1008C0280()
{
}

uint64_t sub_1008C02E8()
{
  return FixedSizeTypeBinaryCodable.write(to:)();
}

void sub_1008C03B8()
{
}

uint64_t sub_1008C03F8()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    uint64_t result = sub_1008C775C(result, v2, v3, v4, v5, v6, v7, v8, v13, v14, SWORD2(v14), SBYTE6(v14), HIBYTE(v14));
    if (v9 >= 4)
    {
      type metadata accessor for BinaryDecoder.Error();
      sub_1008BD0B8((uint64_t)&unk_100E95730);
      uint64_t v10 = sub_10017D4A4();
      sub_100183208(v10, v11);
      sub_100162880();
      sub_10017A8E8();
      v12();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1008C04C4()
{
  sub_10017DF08((uint64_t *)&unk_100EADD50);
  sub_1008BD0B8((uint64_t)&unk_100E9D4C8);
  sub_1008BD0B8((uint64_t)&unk_100E9D4D0);
  uint64_t result = sub_100214E4C();
  if (!v0)
  {
    type metadata accessor for LocationsState();
    type metadata accessor for SavedLocation();
    sub_1008BD0B8((uint64_t)&unk_100E9D4D8);
    sub_1008BD0B8((uint64_t)&unk_100E9D4E0);
    sub_1008C77E8();
    type metadata accessor for LocationModel();
    sub_1008BD0B8((uint64_t)&unk_100E9D4E8);
    sub_1008BD0B8((uint64_t)&unk_100E9D4F0);
    sub_1008C7AFC();
    Array<A>.write(to:)();
    type metadata accessor for LocationOfInterest();
    sub_1008BD0B8((uint64_t)&unk_100E9D4F8);
    sub_1008BD0B8((uint64_t)&unk_100E9D500);
    Array<A>.write(to:)();
    type metadata accessor for Location();
    sub_1008BD0B8((uint64_t)&unk_100E9D3A8);
    sub_1008BD0B8((uint64_t)&unk_100E9D3B0);
    sub_1008C76A0();
    Array<A>.write(to:)();
    type metadata accessor for Location.Identifier();
    sub_1008BD0B8((uint64_t)&unk_100E9D508);
    sub_1008BD0B8((uint64_t)&unk_100E9D510);
    Array<A>.write(to:)();
    Dictionary<>.write(to:)();
    Dictionary<>.write(to:)();
    uint64_t v2 = sub_1008C6790();
    sub_1008C0A04(v2, v3, v4, v5);
    type metadata accessor for LocationDisplayContext();
    sub_1008BD0B8((uint64_t)&unk_100E9D518);
    sub_1008BD0B8((uint64_t)&unk_100E9D520);
    sub_10012B950();
    return Dictionary<>.write(to:)();
  }
  return result;
}

void sub_1008C0A04(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 2:
      sub_1008C6E14();
      if (!v4)
      {
        type metadata accessor for LocationOfInterest();
        sub_1008BD0B8((uint64_t)&unk_100E9D4F8);
        sub_1008BD0B8((uint64_t)&unk_100E9D500);
        sub_100214E34();
        sub_1008C7AFC();
        Array<A>.write(to:)();
        sub_1008C7AFC();
        goto LABEL_4;
      }
      break;
    case 3:
      FixedSizeTypeBinaryCodable.write(to:)();
      break;
    default:
      FixedSizeTypeBinaryCodable.write(to:)();
      if (!v4)
      {
        type metadata accessor for LocationOfInterest();
        sub_1008BD0B8((uint64_t)&unk_100E9D4F8);
        sub_1008BD0B8((uint64_t)&unk_100E9D500);
        sub_100214E34();
LABEL_4:
        Array<A>.write(to:)();
      }
      break;
  }
  sub_1001847DC();
}

void sub_1008C0C30()
{
  sub_10016314C();
  uint64_t v1 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_10017F948();
  type metadata accessor for CurrentLocation();
  sub_1008BD0B8((uint64_t)&unk_100E9D4C8);
  sub_1008BD0B8((uint64_t)&unk_100E9D4D0);
  sub_1008C8514();
  static Optional<A>.read(from:)();
  if (!v0)
  {
    uint64_t v3 = type metadata accessor for SavedLocation();
    sub_1008BD0B8((uint64_t)&unk_100E9D4D8);
    sub_1008BD0B8((uint64_t)&unk_100E9D4E0);
    sub_1008C8514();
    static Array<A>.read(from:)();
    sub_1008C7A64();
    type metadata accessor for LocationModel();
    sub_1008BD0B8((uint64_t)&unk_100E9D4E8);
    sub_1008BD0B8((uint64_t)&unk_100E9D4F0);
    uint64_t v17 = static Array<A>.read(from:)();
    type metadata accessor for LocationOfInterest();
    sub_1008BD0B8((uint64_t)&unk_100E9D4F8);
    sub_1008BD0B8((uint64_t)&unk_100E9D500);
    uint64_t v15 = static Array<A>.read(from:)();
    type metadata accessor for Location();
    sub_1008BD0B8((uint64_t)&unk_100E9D3A8);
    sub_1008BD0B8((uint64_t)&unk_100E9D3B0);
    uint64_t v14 = static Array<A>.read(from:)();
    type metadata accessor for Location.Identifier();
    sub_1008BD0B8((uint64_t)&unk_100E9D508);
    sub_1008BD0B8((uint64_t)&unk_100E9D510);
    sub_10011958C();
    static Array<A>.read(from:)();
    uint64_t v4 = static Dictionary<>.read(from:)();
    uint64_t v5 = static Dictionary<>.read(from:)();
    uint64_t v16 = v4;
    sub_100214EA0();
    sub_1008C1338();
    LOBYTE(v4) = v6;
    uint64_t v12 = v8;
    uint64_t v13 = v7;
    type metadata accessor for LocationDisplayContext();
    sub_1008BD0B8((uint64_t)&unk_100E9D518);
    sub_1008BD0B8((uint64_t)&unk_100E9D520);
    uint64_t v11 = static Dictionary<>.read(from:)();
    uint64_t v9 = sub_1008C7C34();
    sub_100901E10(v9, v3, v17, v15, v14, v16, v5, v10, v13, v12, v4, v11);
  }
  sub_100191138();
  sub_100163164();
}

void sub_1008C1338()
{
  sub_1008C7868();
  sub_10017B3A0();
  if (!v0)
  {
    sub_1008C67EC();
    switch(v1)
    {
      case 0:
        break;
      case 1:
      case 2:
        type metadata accessor for LocationOfInterest();
        sub_1008BD0B8((uint64_t)&unk_100E9D4F8);
        sub_1008BD0B8((uint64_t)&unk_100E9D500);
        sub_1008C79AC();
        break;
      case 3:
        type metadata accessor for LocationOfInterest();
        sub_1008BD0B8((uint64_t)&unk_100E9D4F8);
        sub_1008BD0B8((uint64_t)&unk_100E9D500);
        sub_1008C7D1C();
        sub_1008C7D1C();
        break;
      default:
        type metadata accessor for BinaryDecoder.Error();
        sub_1008BD0B8((uint64_t)&qword_100E95730);
        uint64_t v2 = sub_10017D4A4();
        sub_100183208(v2, v3);
        sub_100162880();
        sub_10017A8E8();
        v4();
        swift_willThrow();
        break;
    }
  }
  sub_1008C7BA4();
}

uint64_t sub_1008C1608()
{
  return Date.write(to:)();
}

void sub_1008C1620()
{
  sub_10016314C();
  uint64_t v6 = sub_1001D3FE4();
  uint64_t v7 = type metadata accessor for ModalViewState.LocationDetailModal(v6);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_10016279C();
  sub_10017DF08(&qword_100E663E8);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_1008C75E4();
  sub_100162E4C();
  __chkstk_darwin(v10);
  uint64_t v11 = sub_100163770();
  type metadata accessor for ModalViewState(v11);
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_10008B8C0();
  sub_10013C234(v0, v5);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1008C6D54();
      if (!v1)
      {
        sub_1008C6DB4();
        sub_1008C2CA4();
      }
      goto LABEL_19;
    case 2u:
      sub_1008C6D54();
      if (!v1)
      {
        sub_1008C6790();
        sub_100899C14();
      }
      goto LABEL_11;
    case 3u:
      sub_1008C6D54();
      if (!v1)
      {
        sub_1008C68B0();
        sub_100894BF0();
      }
LABEL_11:
      swift_release();
      goto LABEL_19;
    case 4u:
      uint64_t v13 = sub_1008C8414();
      sub_1001278D0(v13, v14, v15);
      sub_1008C6D54();
      if (!v1)
      {
        sub_1008BD0B8((uint64_t)&unk_100E9D420);
        sub_1008BD0B8((uint64_t)&unk_100E9D428);
        sub_1001A2B64();
        sub_1008C6AD0();
        Optional<A>.write(to:)();
      }
      sub_1008C59C8(v3, (uint64_t)&qword_100E663E8);
      goto LABEL_19;
    case 5u:
      sub_1008C5A14(v5, v2);
      sub_1008C6D54();
      if (!v1)
      {
        sub_1008C68B0();
        sub_1008C3D84();
      }
      goto LABEL_17;
    case 6u:
    case 7u:
      sub_1008C6D54();
      goto LABEL_19;
    default:
      sub_1008C5A14(v5, v4);
      sub_1008C6D54();
      if (!v1)
      {
        sub_1008C7308();
        sub_1008BDCB0();
        sub_1008C6790();
        sub_10089845C();
      }
LABEL_17:
      sub_10013C2E8();
LABEL_19:
      sub_10016EF08();
      sub_100163164();
      return;
  }
}

uint64_t sub_1008C1A98()
{
  sub_1008C7EE8();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10012B938();
  uint64_t result = static Date.read(from:)();
  if (!v0)
  {
    uint64_t v3 = sub_100214E34();
    return v4(v3);
  }
  return result;
}

void sub_1008C1B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_1001A69AC();
  uint64_t v17 = sub_1008C6B98();
  uint64_t v18 = type metadata accessor for ModalViewState.LocationDetailModal(v17);
  uint64_t v19 = sub_100109308(v18);
  __chkstk_darwin(v19);
  sub_10011C760();
  uint64_t v20 = sub_10017DF08(&qword_100E663E8);
  uint64_t v21 = sub_100109308(v20);
  __chkstk_darwin(v21);
  uint64_t v22 = sub_1008C75E4();
  uint64_t v23 = sub_100109308(v22);
  __chkstk_darwin(v23);
  sub_100109370();
  sub_1001D1EFC();
  if (!v13)
  {
    switch(a13)
    {
      case 1:
      case 8:
        type metadata accessor for ModalViewState(0);
        sub_1008C85CC();
        goto LABEL_11;
      case 2:
        sub_1008C6AB8();
        sub_100897608();
        sub_1008C5A14(v16, (uint64_t)v14);
        type metadata accessor for ModalViewState(0);
        sub_1008C6A80();
        goto LABEL_11;
      case 3:
        sub_1008C6AB8();
        __int16 v27 = sub_1008C2D10();
        *uint64_t v14 = v27 & 1;
        v14[1] = HIBYTE(v27) & 1;
        type metadata accessor for ModalViewState(0);
        sub_1008C6A90();
        goto LABEL_11;
      case 4:
        sub_1008C6AB8();
        int v28 = sub_100899B44();
        type metadata accessor for NotificationsOptInViewState._Storage();
        uint64_t v29 = swift_allocObject();
        *(_WORD *)(v29 + 16) = v28;
        *(unsigned char *)(v29 + 18) = BYTE2(v28) & 1;
        *(unsigned char *)(v29 + 19) = HIBYTE(v28);
        *(void *)uint64_t v14 = v29;
        type metadata accessor for ModalViewState(0);
        sub_1008C72C4();
        goto LABEL_11;
      case 5:
        sub_1008C6AB8();
        sub_100896808(v30);
        type metadata accessor for ReportWeatherViewState._Storage();
        uint64_t v31 = swift_allocObject();
        sub_1002A8CC8((uint64_t)&v35, v31 + 16);
        *(void *)uint64_t v14 = v31;
        type metadata accessor for ModalViewState(0);
        goto LABEL_11;
      case 6:
        type metadata accessor for ModalViewState.MapViewModal(0);
        sub_1008BD0B8((uint64_t)&unk_100E9D420);
        sub_1008BD0B8((uint64_t)&unk_100E9D428);
        static Optional<A>.read(from:)();
        uint64_t v32 = sub_100119464();
        sub_1001278D0(v32, v33, v34);
        type metadata accessor for ModalViewState(0);
        goto LABEL_11;
      case 7:
        sub_1008C6AB8();
        sub_1008C4A8C();
        sub_1008C5A14(v15, (uint64_t)v14);
        type metadata accessor for ModalViewState(0);
        sub_1008C85CC();
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        type metadata accessor for BinaryDecoder.Error();
        sub_1008BD0B8((uint64_t)&qword_100E95730);
        uint64_t v24 = sub_10017D4A4();
        sub_100183208(v24, v25);
        sub_100162880();
        sub_10017A8E8();
        v26();
        swift_willThrow();
        break;
    }
  }
  sub_1008C6B8C();
  sub_1001847DC();
}

uint64_t sub_1008C1F3C()
{
  uint64_t result = sub_1008C6AA0();
  if (!v0)
  {
    sub_10012C01C();
    type metadata accessor for NewsArticle();
    sub_10017DF08(&qword_100E749B0);
    sub_1008C72D4();
    sub_1008C78E0();
    sub_1001A4838();
    URL.write(to:)();
    sub_10012C01C();
    sub_10012C01C();
    type metadata accessor for NewsChannel();
    sub_1008C7F4C();
    sub_1008C72D4();
    Array<A>.write(to:)();
    Array<A>.write(to:)();
    type metadata accessor for UUID();
    sub_10012B950();
    return Array<A>.write(to:)();
  }
  return result;
}

void sub_1008C20E0()
{
  sub_10016314C();
  sub_1008C81F4(v4);
  uint64_t v5 = type metadata accessor for NewsChannel();
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_10017F948();
  type metadata accessor for URL();
  sub_100179C0C();
  __chkstk_darwin(v7);
  sub_1008C6A58();
  sub_100179C0C();
  __chkstk_darwin(v8);
  sub_100109370();
  uint64_t v9 = sub_10017DF08(&qword_100E749B0);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100158494();
  __chkstk_darwin(v11);
  sub_100182F0C();
  uint64_t v12 = static String.read(from:)();
  if (!v1)
  {
    uint64_t v30 = (uint64_t)v0;
    uint64_t v29 = v12;
    uint64_t v33 = v13;
    uint64_t v31 = v3;
    uint64_t v14 = sub_1008C7DAC();
    uint64_t v16 = v15;
    static Optional<A>.read(from:)();
    sub_1008C6B80();
    static Date.read(from:)();
    sub_1008C6B80();
    static URL.read(from:)();
    uint64_t v27 = sub_1008C7DAC();
    uint64_t v28 = v17;
    uint64_t v25 = sub_1008C7DAC();
    uint64_t v26 = v18;
    static Optional<A>.read(from:)();
    *uint64_t v0 = v27;
    v0[1] = v28;
    v0[2] = v25;
    v0[3] = v26;
    sub_1001278D0(v2, (uint64_t)v0 + *(int *)(v5 + 24), &qword_100E749B0);
    sub_1008C6B80();
    uint64_t v19 = static Array<A>.read(from:)();
    uint64_t v20 = static Array<A>.read(from:)();
    type metadata accessor for UUID();
    uint64_t v21 = static Array<A>.read(from:)();
    *uint64_t v32 = v29;
    v32[1] = v33;
    void v32[2] = v14;
    void v32[3] = v16;
    uint64_t v22 = (int *)type metadata accessor for NewsArticle();
    sub_1001278D0(v31, (uint64_t)v32 + v22[6], &qword_100E749B0);
    sub_1001190D4();
    v23();
    sub_1001190D4();
    v24();
    sub_1008C5A14(v30, (uint64_t)v32 + v22[9]);
    *(uint64_t *)((char *)v32 + v22[10]) = v19;
    *(uint64_t *)((char *)v32 + v22[11]) = v20;
    *(uint64_t *)((char *)v32 + v22[12]) = v21;
  }
  sub_10016EF08();
  sub_100163164();
}

void sub_1008C264C()
{
  sub_1001A69AC();
  sub_1008C8160();
  type metadata accessor for NewsArticle();
  sub_1008BD0B8((uint64_t)&unk_100E9D578);
  sub_1008BD0B8((uint64_t)&unk_100E9D580);
  sub_1008C7000();
  if (!v0)
  {
    type metadata accessor for NewsArticlePlacement();
    sub_1008C6790();
    ArticlePlacementLocation.write(to:)();
  }
  sub_1001847DC();
}

void sub_1008C271C()
{
  sub_10016314C();
  uint64_t v2 = v1;
  type metadata accessor for ArticlePlacementLocation();
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_100152344();
  type metadata accessor for NewsArticle();
  sub_1008BD0B8((uint64_t)&unk_100E9D578);
  sub_1008BD0B8((uint64_t)&unk_100E9D580);
  sub_1001A2B64();
  uint64_t v4 = static Array<A>.read(from:)();
  if (!v0)
  {
    uint64_t v5 = v4;
    sub_1008C6D6C();
    static ArticlePlacementLocation.read(from:)();
    *uint64_t v2 = v5;
    uint64_t v6 = type metadata accessor for NewsArticlePlacement();
    uint64_t v7 = sub_1008C7778(*(int *)(v6 + 20));
    v8(v7);
  }
  sub_1002EE5D4();
  sub_100163164();
}

uint64_t sub_1008C285C()
{
  uint64_t result = Location.write(to:)();
  if (!v1)
  {
    uint64_t HourPrecipitationDetailViewState = type metadata accessor for NextHourPrecipitationDetailViewState();
    sub_10018B318(v0 + *(int *)(HourPrecipitationDetailViewState + 20));
    sub_10017DF08(&qword_100E64498);
    sub_1008BD0B8((uint64_t)&unk_100E9D430);
    sub_1008BD0B8((uint64_t)&unk_100E9D438);
    return sub_10018BF00();
  }
  return result;
}

void sub_1008C2930()
{
  sub_10016314C();
  sub_10012BF4C();
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_1008C6760();
  if (!v1)
  {
    type metadata accessor for CGRect(0);
    sub_1008BD0B8((uint64_t)&unk_100E9D430);
    sub_1008BD0B8((uint64_t)&unk_100E9D438);
    sub_1008C7478();
    sub_1008C7F58();
    sub_1001191A8();
    v3();
    uint64_t HourPrecipitationDetailViewState = type metadata accessor for NextHourPrecipitationDetailViewState();
    sub_1008C6BB8((__n128 *)(v0 + *(int *)(HourPrecipitationDetailViewState + 20)));
    *(void *)(v5 + 16) = v6;
    *(void *)(v5 + 24) = v7;
    *(unsigned char *)(v5 + 32) = v8;
  }
  sub_1001194B0();
  sub_100163164();
}

uint64_t sub_1008C2A78()
{
  uint64_t result = sub_1008C6AA0();
  if (!v0)
  {
    String.write(to:)();
    sub_1008C6E14();
    sub_1008C7390();
    sub_1008C7E30();
    return FixedSizeTypeBinaryCodable.write(to:)();
  }
  return result;
}

uint64_t sub_1008C2B3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = static String.read(from:)();
  if (!v1)
  {
    uint64_t v5 = result;
    uint64_t v6 = v4;
    uint64_t v7 = sub_1008C6914();
    uint64_t v9 = v8;
    sub_1001D1EFC();
    sub_1001D1EFC();
    sub_1001D1EFC();
    uint64_t result = sub_1001D1EFC();
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v9;
    *(unsigned char *)(a1 + 32) = v13;
    *(unsigned char *)(a1 + 33) = v12;
    *(unsigned char *)(a1 + 34) = v11;
    *(unsigned char *)(a1 + 35) = v10;
  }
  return result;
}

uint64_t sub_1008C2CA4()
{
  uint64_t result = FixedSizeTypeBinaryCodable.write(to:)();
  if (!v0) {
    return sub_1008C7390();
  }
  return result;
}

uint64_t sub_1008C2D10()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    sub_10011B0C4();
    if (v3) {
      int v2 = 256;
    }
    else {
      int v2 = 0;
    }
    return v2 | v4;
  }
  return result;
}

uint64_t sub_1008C2D88()
{
  return FixedSizeTypeBinaryCodable.write(to:)();
}

uint64_t sub_1008C2DE8()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    sub_1001D2538();
    if (v3)
    {
      return 0;
    }
    else if (v2 == 2)
    {
      return 1;
    }
    else
    {
      type metadata accessor for BinaryDecoder.Error();
      sub_1008BD0B8((uint64_t)&unk_100E95730);
      uint64_t v4 = sub_10017D4A4();
      sub_100183208(v4, v5);
      sub_100162880();
      sub_10017A8E8();
      v6();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t SearchLocation.write(to:)()
{
  sub_1008C6D78();
  uint64_t result = String.write(to:)();
  if (!v0)
  {
    sub_10011C0C4();
    sub_10011C0C4();
    type metadata accessor for SearchLocation();
    sub_10017DF08(&qword_100E639E8);
    sub_1008BD0B8((uint64_t)&unk_100E9D3A8);
    sub_1008BD0B8((uint64_t)&unk_100E9D3B0);
    sub_1008C686C();
    sub_10017DF08(&qword_100E9D3B8);
    sub_1008BD0B8((uint64_t)&unk_100E9D3C0);
    sub_1008BD0B8((uint64_t)&unk_100E9D3C8);
    return sub_1008C7450();
  }
  return result;
}

void static SearchLocation.read(from:)()
{
  sub_10016314C();
  char v3 = v2;
  uint64_t v4 = sub_10017DF08(&qword_100E639E8);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_10012B938();
  uint64_t v6 = sub_100214DD8();
  if (!v0)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v7;
    uint64_t v10 = sub_100214DD8();
    uint64_t v12 = v11;
    uint64_t v16 = sub_100214DD8();
    uint64_t v20 = v13;
    type metadata accessor for Location();
    sub_1008BD0B8((uint64_t)&unk_100E9D3A8);
    sub_1008BD0B8((uint64_t)&unk_100E9D3B0);
    static Optional<A>.read(from:)();
    type metadata accessor for CLLocationCoordinate2D(0);
    sub_1008BD0B8((uint64_t)&unk_100E9D3C0);
    sub_1008BD0B8((uint64_t)&unk_100E9D3C8);
    static Optional<A>.read(from:)();
    *char v3 = 0;
    v3[1] = v8;
    v3[2] = v9;
    v3[3] = v10;
    v3[4] = v12;
    v3[5] = v16;
    v3[6] = v20;
    uint64_t v14 = type metadata accessor for SearchLocation();
    sub_1001278D0(v1, (uint64_t)v3 + *(int *)(v14 + 32), &qword_100E639E8);
    uint64_t v15 = (char *)v3 + *(int *)(v14 + 36);
    *(void *)uint64_t v15 = v17;
    *((void *)v15 + 1) = v18;
    unsigned char v15[16] = v19;
  }
  sub_100191138();
  sub_100163164();
}

unint64_t sub_1008C32DC()
{
  unint64_t result = qword_100E9D400;
  if (!qword_100E9D400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9D400);
  }
  return result;
}

unint64_t sub_1008C3328()
{
  unint64_t result = qword_100E9D408;
  if (!qword_100E9D408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9D408);
  }
  return result;
}

uint64_t sub_1008C3374()
{
  uint64_t result = sub_1008C6AA0();
  if (!v0)
  {
    dispatch thunk of BinaryEncodable.write(to:)();
    return dispatch thunk of BinaryEncodable.write(to:)();
  }
  return result;
}

void sub_1008C33DC()
{
  sub_10016314C();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  sub_100162880();
  __chkstk_darwin(v9);
  sub_10012B938();
  __chkstk_darwin(v10);
  sub_10011C760();
  uint64_t v11 = static String.read(from:)();
  if (!v0)
  {
    uint64_t v13 = v11;
    uint64_t v14 = v12;
    sub_1008C7B24();
    dispatch thunk of static BinaryDecodable.read(from:)();
    dispatch thunk of static BinaryDecodable.read(from:)();
    sub_100A24EEC(v13, v14, v2, v1, v6, v4, v8);
  }
  sub_1008C754C();
  sub_100163164();
}

uint64_t sub_1008C3564()
{
  uint64_t result = sub_1008C8700();
  if (!v0)
  {
    uint64_t v3 = type metadata accessor for SunriseSunsetDetailViewState();
    sub_10018B318(v1 + *(int *)(v3 + 20));
    sub_10017DF08(&qword_100E64498);
    sub_1008BD0B8((uint64_t)&unk_100E9D430);
    sub_1008BD0B8((uint64_t)&unk_100E9D438);
    sub_1008C7428();
    return sub_1008C7834();
  }
  return result;
}

uint64_t sub_1008C3650()
{
  return FixedSizeTypeBinaryCodable.write(to:)();
}

void sub_1008C36DC()
{
  sub_10016314C();
  sub_10012BF4C();
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_1008C6760();
  if (!v1)
  {
    type metadata accessor for CGRect(0);
    sub_1008BD0B8((uint64_t)&unk_100E9D430);
    sub_1008BD0B8((uint64_t)&unk_100E9D438);
    sub_1008C7478();
    char v3 = sub_1008C384C();
    sub_1001191A8();
    v4();
    uint64_t v5 = type metadata accessor for SunriseSunsetDetailViewState();
    uint64_t v6 = v0 + *(int *)(v5 + 20);
    *(void *)uint64_t v6 = v7;
    *(void *)(v6 + 8) = v8;
    *(void *)(v6 + 16) = v9;
    *(void *)(v6 + 24) = v10;
    *(unsigned char *)(v6 + 32) = v11;
    *(unsigned char *)(v0 + *(int *)(v5 + 24)) = v3;
  }
  sub_1001194B0();
  sub_100163164();
}

uint64_t sub_1008C384C()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    uint64_t result = sub_1008C7E5C(result, v2, v3, v4, v5, v6, v7, v8, v12, v13, SWORD2(v13), SBYTE6(v13), HIBYTE(v13));
    if (result >= 3)
    {
      type metadata accessor for BinaryDecoder.Error();
      sub_1008BD0B8((uint64_t)&unk_100E95730);
      uint64_t v9 = sub_10017D4A4();
      sub_100183208(v9, v10);
      sub_100162880();
      sub_10017A8E8();
      v11();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1008C3918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      uint64_t result = FixedSizeTypeBinaryCodable.write(to:)();
      break;
    default:
      uint64_t result = sub_1008C6E14();
      if (!v3) {
        uint64_t result = sub_1008C7C80();
      }
      break;
  }
  return result;
}

uint64_t sub_1008C3BA0()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    sub_1008C67EC();
    uint64_t result = 0;
    switch(v2)
    {
      case 0:
        return result;
      case 1:
        uint64_t result = 0;
        break;
      case 2:
        uint64_t result = 0;
        break;
      case 3:
        uint64_t result = 0;
        break;
      case 4:
        uint64_t result = 0;
        break;
      case 5:
        uint64_t result = 0;
        break;
      case 6:
        uint64_t result = 0;
        break;
      case 7:
        uint64_t result = 0;
        break;
      case 8:
        uint64_t result = 0;
        break;
      case 9:
        uint64_t result = 0;
        break;
      case 10:
        uint64_t result = 0;
        break;
      case 11:
        uint64_t result = 0;
        break;
      case 12:
        uint64_t result = 0;
        break;
      case 13:
        uint64_t result = 0;
        break;
      case 14:
        uint64_t result = sub_1008C76E0();
        break;
      default:
        type metadata accessor for BinaryDecoder.Error();
        sub_1008BD0B8((uint64_t)&qword_100E95730);
        uint64_t v3 = sub_10017D4A4();
        sub_100183208(v3, v4);
        sub_100162880();
        sub_10017A8E8();
        v5();
        uint64_t result = swift_willThrow();
        break;
    }
  }
  return result;
}

void sub_1008C3D84()
{
  sub_10016314C();
  uint64_t v33 = type metadata accessor for HomeAndWorkRefinementViewState();
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_1008C7254(v6, v27);
  sub_100179C0C();
  __chkstk_darwin(v7);
  sub_10011BA28();
  uint64_t v34 = type metadata accessor for AveragesDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v8);
  uint64_t v35 = sub_1008C71BC(v9, v28);
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_100128A8C(v11, v29);
  uint64_t v30 = type metadata accessor for SunriseSunsetDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_1008C71E8(v13, v30);
  uint64_t HourPrecipitationDetailViewState = type metadata accessor for NextHourPrecipitationDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v15);
  sub_10017E3A0();
  uint64_t v16 = type metadata accessor for AirQualityDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v17);
  sub_10017FDD0();
  uint64_t v32 = type metadata accessor for ConditionDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v18);
  sub_100109314();
  uint64_t v20 = v19;
  uint64_t v21 = sub_100129064();
  type metadata accessor for ModalViewState.LocationDetailModal(v21);
  sub_100162E4C();
  __chkstk_darwin(v22);
  sub_10012B938();
  sub_10013C234(v1, v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1008C5A14(v3, v0);
      sub_1008C6890();
      if (!v2)
      {
        sub_1008C81DC();
        Location.write(to:)();
        sub_1008C2D88();
        sub_100166D60(v0 + *(int *)(v16 + 24));
        sub_10017DF08(&qword_100E64498);
        sub_1008BD0B8((uint64_t)&unk_100E9D430);
        sub_1008BD0B8((uint64_t)&unk_100E9D438);
        sub_100119464();
        Optional<A>.write(to:)();
      }
      goto LABEL_25;
    case 2u:
      sub_1008C5A14(v3, v4);
      sub_1008C6AFC();
      if (!v2)
      {
        Location.write(to:)();
        sub_100166D60(v4 + *(int *)(HourPrecipitationDetailViewState + 20));
        sub_10017DF08(&qword_100E64498);
        sub_1008BD0B8((uint64_t)&unk_100E9D430);
        sub_1008BD0B8((uint64_t)&unk_100E9D438);
        sub_1008C69A8();
      }
      goto LABEL_25;
    case 3u:
      sub_1008C5A14(v3, v36);
      sub_1008C6AFC();
      if (!v2)
      {
        Location.write(to:)();
        sub_100166D60(v36 + *(int *)(v31 + 20));
        sub_10017DF08(&qword_100E64498);
        sub_1008BD0B8((uint64_t)&unk_100E9D430);
        sub_1008BD0B8((uint64_t)&unk_100E9D438);
        sub_1008C69A8();
        sub_1008C3650();
      }
      goto LABEL_25;
    case 4u:
      sub_1008C5A14(v3, v39);
      sub_1008C6890();
      if (!v2)
      {
        Location.write(to:)();
        sub_10017DF08(&qword_100E67240);
        sub_1008BD0B8((uint64_t)&unk_100E9D460);
        sub_1008BD0B8((uint64_t)&unk_100E9D468);
        sub_1008C6C74();
        sub_10017DF08((uint64_t *)&unk_100E73CA0);
        Optional<A>.write(to:)();
        sub_100166D60(v39 + *(int *)(v35 + 28));
        sub_10017DF08(&qword_100E64498);
        sub_1008BD0B8((uint64_t)&unk_100E9D430);
        sub_1008BD0B8((uint64_t)&unk_100E9D438);
        sub_1008C69A8();
        sub_1008C3650();
      }
      goto LABEL_25;
    case 5u:
      sub_1008C5A14(v3, v38);
      sub_1008C6890();
      if (!v2)
      {
        Location.write(to:)();
        sub_1008C2D88();
        sub_10017DF08(&qword_100E6B670);
        sub_1008BD0B8((uint64_t)&unk_100E9D440);
        sub_1008BD0B8((uint64_t)&unk_100E9D448);
        sub_1008C6C74();
        sub_100166D60(v38 + *(int *)(v34 + 28));
        sub_10017DF08(&qword_100E64498);
        sub_1008BD0B8((uint64_t)&unk_100E9D430);
        sub_1008BD0B8((uint64_t)&unk_100E9D438);
        sub_1008C69A8();
      }
      goto LABEL_25;
    case 6u:
      sub_1008C74B8();
      sub_100119464();
      sub_1001627D4();
      v25();
      FixedSizeTypeBinaryCodable.write(to:)();
      if (!v2) {
        URL.write(to:)();
      }
      sub_100119464();
      sub_10016285C();
      v26();
      goto LABEL_26;
    case 7u:
      sub_1008C5A14(v3, v37);
      sub_1008C6AFC();
      if (!v2)
      {
        Location.write(to:)();
        LocationOfInterest.write(to:)();
        sub_100166D60(v37 + *(int *)(v33 + 24));
        sub_10017DF08(&qword_100E64498);
        sub_1008BD0B8((uint64_t)&unk_100E9D430);
        sub_1008BD0B8((uint64_t)&unk_100E9D438);
        sub_1008C69A8();
      }
      goto LABEL_25;
    default:
      uint64_t v23 = sub_1001A3510();
      sub_1008C5A14(v23, v24);
      sub_1008C6890();
      if (!v2)
      {
        DetailCondition.write(to:)();
        Location.write(to:)();
        sub_10017DF08((uint64_t *)&unk_100E73CA0);
        Optional<A>.write(to:)();
        sub_100166D60(v20 + *(int *)(v32 + 28));
        sub_10017DF08(&qword_100E64498);
        sub_1008BD0B8((uint64_t)&unk_100E9D430);
        sub_1008BD0B8((uint64_t)&unk_100E9D438);
        sub_1008C69A8();
        sub_10017DF08(&qword_100E711F8);
        sub_1008BD0B8((uint64_t)&unk_100E9D450);
        sub_1008BD0B8((uint64_t)&unk_100E9D458);
        sub_1008C6C74();
        FixedSizeTypeBinaryCodable.write(to:)();
      }
LABEL_25:
      sub_10013C2E8();
LABEL_26:
      sub_10012B96C();
      sub_100163164();
      return;
  }
}

void sub_1008C4A8C()
{
  sub_10016314C();
  uint64_t v117 = v0;
  uint64_t v5 = v4;
  uint64_t v106 = v6;
  uint64_t v103 = type metadata accessor for LocationOfInterest();
  sub_100179C0C();
  uint64_t v102 = v7;
  __chkstk_darwin(v8);
  sub_1002EEBB0(v9, v97);
  uint64_t v101 = type metadata accessor for HomeAndWorkRefinementViewState();
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_1008C673C(v11, v97);
  uint64_t v105 = type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v104 = v12;
  __chkstk_darwin(v13);
  sub_10017225C(v14, v97);
  uint64_t v15 = sub_10017DF08(&qword_100E6B670);
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  uint64_t v99 = sub_1008C7208(v17, v97);
  sub_100162E4C();
  __chkstk_darwin(v18);
  sub_100214F50(v19, v97);
  uint64_t v20 = type metadata accessor for MoonDetailViewState();
  uint64_t v21 = sub_100109308(v20);
  __chkstk_darwin(v21);
  sub_10018B484(v22, v97);
  uint64_t v113 = type metadata accessor for SunriseSunsetDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v23);
  sub_1008C7234(v24, v97);
  uint64_t HourPrecipitationDetailViewState = type metadata accessor for NextHourPrecipitationDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v25);
  sub_1008C7280(v26, v97);
  type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v107 = v27;
  uint64_t v108 = v28;
  __chkstk_darwin(v27);
  uint64_t v109 = (char *)&v97 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v30);
  sub_1001190EC();
  __chkstk_darwin(v31);
  sub_1000B692C();
  __chkstk_darwin(v32);
  sub_100164000();
  __chkstk_darwin(v33);
  sub_1008C6B54();
  uint64_t v34 = type metadata accessor for AirQualityDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v35);
  sub_100163770();
  uint64_t v36 = type metadata accessor for ConditionDetailViewState();
  uint64_t v37 = sub_100109308(v36);
  __chkstk_darwin(v37);
  sub_10012B938();
  uint64_t v38 = v5;
  uint64_t v39 = v117;
  static FixedSizeTypeBinaryCodable.read(from:)();
  if (!v39)
  {
    uint64_t v97 = v2;
    uint64_t v40 = v113;
    uint64_t v41 = v110;
    uint64_t v43 = HourPrecipitationDetailViewState;
    uint64_t v42 = v112;
    uint64_t v117 = v3;
    uint64_t v44 = v114;
    uint64_t v45 = v116;
    sub_1008C73C0();
    switch(v54)
    {
      case 0:
        sub_100896FAC(v38, v46, v47, v48, v49, v50, v51, v52, v97, v98, SWORD2(v98), SBYTE6(v98), SHIBYTE(v98));
        sub_1008C7378(v1);
        goto LABEL_24;
      case 1:
        static Location.read(from:)();
        char v58 = sub_1008C2DE8();
        sub_1008C85A8();
        sub_1008BD0B8((uint64_t)&unk_100E9D430);
        sub_1008BD0B8((uint64_t)&unk_100E9D438);
        static Optional<A>.read(from:)();
        if (v45)
        {
          sub_1008C7334();
          goto LABEL_21;
        }
        sub_1008C7B74();
        uint64_t v74 = v119;
        uint64_t v75 = v120;
        char v76 = v121;
        sub_1008C8438();
        uint64_t v77 = v97;
        sub_1001190D4();
        v78();
        *(unsigned char *)(v77 + *(int *)(v34 + 20)) = v58 & 1;
        sub_1008C6BB8((__n128 *)(v77 + *(int *)(v34 + 24)));
        *(void *)(v79 + 16) = v74;
        *(void *)(v79 + 24) = v75;
        *(unsigned char *)(v79 + 32) = v76;
        sub_1008C7378(v77);
        goto LABEL_24;
      case 2:
        static Location.read(from:)();
        sub_1008C85A8();
        sub_1008BD0B8((uint64_t)&unk_100E9D430);
        sub_1008BD0B8((uint64_t)&unk_100E9D438);
        sub_1008C79F4();
        sub_1008C85EC();
        static Optional<A>.read(from:)();
        if (v45)
        {
          uint64_t v59 = sub_1008C7334();
          goto LABEL_16;
        }
        sub_1008C7B74();
        uint64_t v64 = v119;
        uint64_t v63 = v120;
        char v65 = v121;
        sub_1008C8438();
        sub_1008C7BB8();
        sub_1001190D4();
        v66();
        sub_1008C6BB8((__n128 *)(v41 + *(int *)(v43 + 20)));
        *(void *)(v67 + 16) = v64;
        *(void *)(v67 + 24) = v63;
        *(unsigned char *)(v67 + 32) = v65;
        sub_1008C7378(v41);
        goto LABEL_24;
      case 3:
        static Location.read(from:)();
        sub_1008C85A8();
        sub_1008BD0B8((uint64_t)&unk_100E9D430);
        sub_1008BD0B8((uint64_t)&unk_100E9D438);
        sub_1008C79F4();
        static Optional<A>.read(from:)();
        if (!v45)
        {
          long long v68 = v118;
          uint64_t v69 = v119;
          uint64_t v117 = v120;
          char v70 = v121;
          char v80 = sub_1008C384C();
          sub_1008C8438();
          sub_1001190D4();
          v81();
          uint64_t v82 = v42 + *(int *)(v40 + 20);
          *(_OWORD *)uint64_t v82 = v68;
          uint64_t v83 = v117;
          *(void *)(v82 + 16) = v69;
          *(void *)(v82 + 24) = v83;
          *(unsigned char *)(v82 + 32) = v70;
          *(unsigned char *)(v42 + *(int *)(v40 + 24)) = v80;
          sub_1008C7378(v42);
          goto LABEL_24;
        }
        uint64_t v59 = sub_1008C7888();
LABEL_16:
        v60(v59, v107);
        break;
      case 4:
        uint64_t v61 = v53;
        sub_100896A80();
        sub_1008C7378(v61);
        goto LABEL_24;
      case 5:
        sub_1008C7E74();
        static Location.read(from:)();
        char v71 = sub_1008C2DE8();
        type metadata accessor for DetailHeroChartLollipopPosition(0);
        sub_1008BD0B8((uint64_t)&unk_100E9D440);
        sub_1008BD0B8((uint64_t)&unk_100E9D448);
        sub_1008C839C();
        type metadata accessor for CGRect(0);
        sub_1008BD0B8((uint64_t)&unk_100E9D430);
        sub_1008BD0B8((uint64_t)&unk_100E9D438);
        sub_1008C79F4();
        sub_1008C839C();
        long long v116 = v118;
        uint64_t v92 = v120;
        uint64_t v115 = v119;
        char v93 = v121;
        uint64_t v94 = v98;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v108 + 32))(v98, v117, v107);
        uint64_t v95 = v99;
        *(unsigned char *)(v94 + *(int *)(v99 + 20)) = v71 & 1;
        sub_1001278D0(v44, v94 + *(int *)(v95 + 24), &qword_100E6B670);
        uint64_t v96 = v94 + *(int *)(v95 + 28);
        *(_OWORD *)uint64_t v96 = v116;
        *(void *)(v96 + 16) = v115;
        *(void *)(v96 + 24) = v92;
        *(unsigned char *)(v96 + 32) = v93;
        sub_1008C7378(v94);
        goto LABEL_24;
      case 6:
        static URL.read(from:)();
        sub_1001190D4();
        v62();
        goto LABEL_24;
      case 7:
        static Location.read(from:)();
        static LocationOfInterest.read(from:)();
        sub_1008C85A8();
        sub_1008BD0B8((uint64_t)&unk_100E9D430);
        sub_1008BD0B8((uint64_t)&unk_100E9D438);
        sub_1008C79F4();
        static Optional<A>.read(from:)();
        if (v45)
        {
          sub_10012BF98();
          sub_100162F0C();
          v72();
          sub_1008C7328();
LABEL_21:
          sub_100162F0C();
          v73();
        }
        else
        {
          sub_1008C7B74();
          uint64_t v84 = v119;
          uint64_t v85 = v120;
          char v86 = v121;
          sub_1008C8438();
          uint64_t v87 = v100;
          sub_1001190D4();
          v88();
          uint64_t v89 = v101;
          sub_1001190D4();
          v90();
          sub_1008C6BB8((__n128 *)(v87 + *(int *)(v89 + 24)));
          *(void *)(v91 + 16) = v84;
          *(void *)(v91 + 24) = v85;
          *(unsigned char *)(v91 + 32) = v86;
          sub_1008C7378(v87);
LABEL_24:
          type metadata accessor for ModalViewState.LocationDetailModal(0);
          sub_1008C85CC();
          swift_storeEnumTagMultiPayload();
        }
        break;
      default:
        type metadata accessor for BinaryDecoder.Error();
        sub_1008BD0B8((uint64_t)&qword_100E95730);
        uint64_t v55 = sub_100166B68();
        sub_1008C6B60(v55, v56);
        sub_100162880();
        sub_1001631E8();
        v57();
        swift_willThrow();
        break;
    }
  }
  sub_100163164();
}

unint64_t sub_1008C5684()
{
  unint64_t result = qword_100E9D470;
  if (!qword_100E9D470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9D470);
  }
  return result;
}

unint64_t sub_1008C56D0()
{
  unint64_t result = qword_100E9D478;
  if (!qword_100E9D478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9D478);
  }
  return result;
}

unint64_t sub_1008C571C()
{
  unint64_t result = qword_100E9D480;
  if (!qword_100E9D480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9D480);
  }
  return result;
}

unint64_t sub_1008C5768()
{
  unint64_t result = qword_100E9D488;
  if (!qword_100E9D488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9D488);
  }
  return result;
}

unint64_t sub_1008C57B4()
{
  unint64_t result = qword_100E9D490;
  if (!qword_100E9D490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9D490);
  }
  return result;
}

unint64_t sub_1008C5800()
{
  unint64_t result = qword_100E9D498;
  if (!qword_100E9D498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9D498);
  }
  return result;
}

unint64_t sub_1008C584C()
{
  unint64_t result = qword_100E9D4A0;
  if (!qword_100E9D4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9D4A0);
  }
  return result;
}

unint64_t sub_1008C5898()
{
  unint64_t result = qword_100E9D4A8;
  if (!qword_100E9D4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9D4A8);
  }
  return result;
}

unint64_t sub_1008C58E4()
{
  unint64_t result = qword_100E9D4B0;
  if (!qword_100E9D4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9D4B0);
  }
  return result;
}

unint64_t sub_1008C5930()
{
  unint64_t result = qword_100E9D548;
  if (!qword_100E9D548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9D548);
  }
  return result;
}

unint64_t sub_1008C597C()
{
  unint64_t result = qword_100E9D550;
  if (!qword_100E9D550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9D550);
  }
  return result;
}

uint64_t sub_1008C59C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)sub_100183208(a1, a2);
  sub_10017DF08(v3);
  sub_100162E4C();
  sub_100162F0C();
  v4();
  return v2;
}

uint64_t sub_1008C5A14(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100162708();
  v4(v3);
  sub_100162E4C();
  sub_1001190D4();
  v5();
  return a2;
}

uint64_t sub_1008C5A6C()
{
  uint64_t v3 = sub_1001D3FE4();
  type metadata accessor for LocationPreviewViewState(v3);
  sub_100162E4C();
  __chkstk_darwin(v4);
  uint64_t v5 = sub_10017FDD0();
  uint64_t v6 = type metadata accessor for ModalViewState.MapViewModal(v5);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_10011C760();
  uint64_t v8 = sub_1008C86C0();
  sub_10013C234(v8, v9);
  sub_1008C5A14(v2, v0);
  FixedSizeTypeBinaryCodable.write(to:)();
  if (!v1)
  {
    sub_1008C81E8();
    sub_1008BDCB0();
    sub_10089845C();
  }
  return sub_10013C2E8();
}

void sub_1008C5BBC()
{
  uint64_t v3 = sub_10008B8A8();
  uint64_t v4 = type metadata accessor for LocationPreviewViewState(v3);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_10016279C();
  static FixedSizeTypeBinaryCodable.read(from:)();
  if (!v1)
  {
    if (v9 == 1)
    {
      sub_1008C6CF8();
      sub_100897608();
      sub_1008C5A14(v2, v0);
    }
    else
    {
      type metadata accessor for BinaryDecoder.Error();
      sub_1008BD0B8((uint64_t)&qword_100E95730);
      uint64_t v6 = sub_100166B68();
      sub_1008C6B60(v6, v7);
      sub_100162880();
      sub_1001631E8();
      v8();
      swift_willThrow();
    }
  }
  sub_1008C7F64();
}

void sub_1008C5D18()
{
}

void sub_1008C5D80()
{
  sub_10016314C();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v22 = v0;
  uint64_t v6 = sub_1001D3FE4();
  uint64_t v8 = v7(v6);
  sub_100179C0C();
  uint64_t v10 = v9;
  sub_100165058();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v21 - v12;
  uint64_t v14 = sub_1008C6B54();
  v5(v14);
  sub_100165058();
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v21 - v16;
  uint64_t v18 = sub_1008C8420();
  sub_10013C234(v18, v19);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v8) == 1)
  {
    sub_1008C6D54();
  }
  else
  {
    sub_1008C74B8();
    sub_1008C83BC();
    sub_1001627D4();
    v20();
    sub_1008C787C();
    sub_1008C6D54();
    if (!v0) {
      v3(v1);
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
  }
  sub_1002EE5D4();
  sub_100163164();
}

void sub_1008C5F08()
{
}

void sub_1008C5F48()
{
  sub_10017F304();
  uint64_t v3 = v2;
  uint64_t v4 = sub_10008B8A8();
  uint64_t v6 = v5(v4);
  sub_100179C0C();
  sub_100165058();
  __chkstk_darwin(v7);
  sub_1008C72A0();
  sub_1008C7710();
  if (!v1)
  {
    uint64_t v8 = v14;
    if (v14 != 1)
    {
      if (v14 != 2)
      {
        type metadata accessor for BinaryDecoder.Error();
        sub_1008BD0B8((uint64_t)&unk_100E95730);
        uint64_t v11 = sub_100166B68();
        sub_1008C6B60(v11, v12);
        sub_100162880();
        sub_1001631E8();
        v13();
        swift_willThrow();
        goto LABEL_8;
      }
      uint64_t v9 = sub_1008C75D8();
      v3(v9);
      sub_1008C85EC();
      sub_1008C7558();
      v10();
      uint64_t v8 = 0;
    }
    _s7Weather24LocationCompositionStateOwst_0(v0, v8, 1, v6);
  }
LABEL_8:
  sub_1002EEAFC();
  sub_100182EF8();
}

void sub_1008C60D0()
{
  sub_1001A69AC();
  sub_1001D3FE4();
  type metadata accessor for Date();
  sub_100179C0C();
  __chkstk_darwin(v2);
  uint64_t v3 = sub_10011BA28();
  uint64_t v4 = type metadata accessor for WeatherData.CachingState(v3);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100162EB8();
  sub_1008C74C4();
  uint64_t v6 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0(v0, 1, v6) == 1)
  {
    FixedSizeTypeBinaryCodable.write(to:)();
  }
  else
  {
    sub_10019DE68();
    sub_1001627D4();
    v7();
    FixedSizeTypeBinaryCodable.write(to:)();
    if (!v1) {
      Date.write(to:)();
    }
    uint64_t v8 = sub_1008C7364();
    v9(v8);
  }
  sub_100182C7C();
  sub_1001847DC();
}

void sub_1008C6248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, unsigned __int8 a13)
{
  sub_1001A69AC();
  sub_1008C7EE8();
  sub_100179C0C();
  __chkstk_darwin(v15);
  sub_100125FF8();
  static FixedSizeTypeBinaryCodable.read(from:)();
  if (!v14)
  {
    uint64_t v16 = a13;
    if (a13 != 1)
    {
      if (a13 != 2)
      {
        type metadata accessor for BinaryDecoder.Error();
        sub_1008BD0B8((uint64_t)&qword_100E95730);
        uint64_t v19 = sub_100166B68();
        sub_1008C6B60(v19, v20);
        sub_100162880();
        sub_1001631E8();
        v21();
        swift_willThrow();
        goto LABEL_8;
      }
      sub_1008C8670();
      sub_1008C7A58();
      sub_1008C68CC();
      v17();
      uint64_t v16 = 0;
    }
    uint64_t v18 = sub_10017DF08(&qword_100E63738);
    _s7Weather24LocationCompositionStateOwst_0(v13, v16, 1, v18);
  }
LABEL_8:
  sub_1002EEAFC();
  sub_1001847DC();
}

void sub_1008C63D0()
{
  sub_10017F304();
  sub_100127C8C();
  type metadata accessor for WeatherStatisticsModel();
  sub_100179C0C();
  __chkstk_darwin(v1);
  uint64_t v2 = sub_10011BA28();
  type metadata accessor for WeatherData.WeatherStatisticsState(v2);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100162EB8();
  sub_1008C74C4();
  int v4 = sub_1008C86A8();
  if (v4)
  {
    if (v4 == 1)
    {
      sub_1001627D4();
      v5();
      sub_1008C6E48();
      sub_100165320();
      if (!v0)
      {
        sub_1008C6AD0();
        WeatherStatisticsModel.write(to:)();
      }
      sub_100164F40();
      v6();
    }
    else
    {
      sub_1008C6EC0();
      sub_100165320();
    }
  }
  else
  {
    sub_1008C73CC();
    sub_100165320();
    if (!v0)
    {
      sub_1008C76A0();
      String.write(to:)();
    }
    swift_bridgeObjectRelease();
  }
  sub_1008C7994();
  sub_100182EF8();
}

void sub_1008C6574()
{
  sub_1001A69AC();
  sub_1008C6B98();
  type metadata accessor for WeatherStatisticsModel();
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10011C760();
  sub_1001D1EFC();
  if (!v0)
  {
    sub_1008C77DC();
    if (v4)
    {
      sub_1008C6AB8();
      static WeatherStatisticsModel.read(from:)();
      sub_1008C68CC();
      v6();
      type metadata accessor for WeatherData.WeatherStatisticsState(0);
      sub_1008C6A90();
    }
    else if (v3 == 2)
    {
      type metadata accessor for WeatherData.WeatherStatisticsState(0);
      sub_1008C72C4();
    }
    else
    {
      if (v3 != 1)
      {
        type metadata accessor for BinaryDecoder.Error();
        sub_1008BD0B8((uint64_t)&qword_100E95730);
        uint64_t v7 = sub_10017D4A4();
        sub_100183208(v7, v8);
        sub_100162880();
        sub_10017A8E8();
        v9();
        swift_willThrow();
        goto LABEL_10;
      }
      *uint64_t v1 = sub_1008C76F8();
      v1[1] = v5;
      type metadata accessor for WeatherData.WeatherStatisticsState(0);
      sub_1008C6A80();
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_10:
  sub_1008C6B8C();
  sub_1001847DC();
}

uint64_t sub_1008C670C()
{
  return static FixedSizeTypeBinaryCodable.read(from:)();
}

uint64_t sub_1008C6724()
{
  return static FixedSizeTypeBinaryCodable.read(from:)();
}

uint64_t sub_1008C673C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 296) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_1008C6760()
{
  return static Location.read(from:)();
}

uint64_t sub_1008C6790()
{
  return v0;
}

uint64_t sub_1008C679C()
{
  return _diagnoseUnexpectedEnumCase<A>(type:)();
}

uint64_t sub_1008C67B4()
{
  return static FixedSizeTypeBinaryCodable.read(from:)();
}

uint64_t sub_1008C67F8()
{
  return type metadata accessor for Date();
}

uint64_t sub_1008C6818()
{
  return v0;
}

uint64_t sub_1008C6830()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1008C6848()
{
  return Optional<A>.write(to:)();
}

uint64_t sub_1008C686C()
{
  return Optional<A>.write(to:)();
}

uint64_t sub_1008C6890()
{
  return FixedSizeTypeBinaryCodable.write(to:)();
}

uint64_t sub_1008C68B0()
{
  return v0;
}

uint64_t sub_1008C68D8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1008C68FC()
{
  return static FixedSizeTypeBinaryCodable.read(from:)();
}

uint64_t sub_1008C6914()
{
  return static String.read(from:)();
}

uint64_t sub_1008C692C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return type metadata accessor for Wind();
}

uint64_t sub_1008C6948@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return type metadata accessor for UVIndex();
}

void sub_1008C6964()
{
  static PrecipitationAmountByType.read(from:)();
}

uint64_t sub_1008C6980()
{
  return Array<A>.write(to:)();
}

uint64_t sub_1008C69A8()
{
  return Optional<A>.write(to:)();
}

uint64_t sub_1008C69C4()
{
  return static Optional<A>.read(from:)();
}

uint64_t sub_1008C69EC()
{
  return String.write(to:)();
}

void sub_1008C6A14()
{
  sub_1008BA04C();
}

uint64_t sub_1008C6A30()
{
  return type metadata accessor for Date();
}

uint64_t sub_1008C6A58()
{
  return type metadata accessor for Date();
}

uint64_t sub_1008C6A80()
{
  return v0;
}

uint64_t sub_1008C6A90()
{
  return v0;
}

uint64_t sub_1008C6AA0()
{
  return String.write(to:)();
}

uint64_t sub_1008C6AB8()
{
  return v0;
}

uint64_t sub_1008C6ADC()
{
  return static NSUnitLength.read(from:)();
}

uint64_t sub_1008C6AFC()
{
  return FixedSizeTypeBinaryCodable.write(to:)();
}

uint64_t sub_1008C6B1C()
{
  return FixedSizeTypeBinaryCodable.write(to:)();
}

uint64_t sub_1008C6B3C()
{
  return static String.read(from:)();
}

uint64_t sub_1008C6B54()
{
  return 0;
}

uint64_t sub_1008C6B60(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1008C6B6C()
{
  return v0;
}

uint64_t sub_1008C6B80()
{
  return v0;
}

uint64_t sub_1008C6B98()
{
  return 0;
}

uint64_t sub_1008C6BAC()
{
  return 0;
}

__n128 sub_1008C6BB8@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 - 144);
  *a1 = result;
  return result;
}

uint64_t sub_1008C6BC4@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return type metadata accessor for ApparentPrecipitationIntensity();
}

uint64_t sub_1008C6BE0@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return type metadata accessor for PrecipitationAmountByType();
}

double sub_1008C6BFC()
{
  return v0;
}

uint64_t sub_1008C6C24()
{
  return *(void *)(v0 - 240);
}

uint64_t sub_1008C6C50()
{
  return Optional<A>.write(to:)();
}

uint64_t sub_1008C6C74()
{
  return Optional<A>.write(to:)();
}

uint64_t sub_1008C6C98()
{
  return Optional<A>.write(to:)();
}

uint64_t sub_1008C6CBC()
{
  return static Array<A>.read(from:)();
}

uint64_t sub_1008C6CE0()
{
  return v0;
}

uint64_t sub_1008C6CF8()
{
  return v0;
}

uint64_t sub_1008C6D14()
{
  return static Date.read(from:)();
}

uint64_t sub_1008C6D48()
{
  return 0;
}

uint64_t sub_1008C6D54()
{
  return FixedSizeTypeBinaryCodable.write(to:)();
}

uint64_t sub_1008C6D6C()
{
  return v0;
}

uint64_t sub_1008C6D90()
{
  return Measurement.init(value:unit:)();
}

uint64_t sub_1008C6DB4()
{
  return v0;
}

uint64_t sub_1008C6DC0@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 408) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_1008C6DF0()
{
  return static Optional<A>.read(from:)();
}

uint64_t sub_1008C6E08()
{
  return v0;
}

uint64_t sub_1008C6E14()
{
  return FixedSizeTypeBinaryCodable.write(to:)();
}

uint64_t sub_1008C6E2C()
{
  return FixedSizeTypeBinaryCodable.write(to:)();
}

void sub_1008C6E48()
{
  *(unsigned char *)(v0 - 65) = 3;
}

uint64_t sub_1008C6E54()
{
  return Date.write(to:)();
}

uint64_t sub_1008C6E8C()
{
  return v0;
}

uint64_t sub_1008C6EA0()
{
  return *(void *)(v0 - 304);
}

void sub_1008C6EC0()
{
  *(unsigned char *)(v0 - 66) = 2;
}

uint64_t sub_1008C6EE0()
{
  return *(void *)(v0 - 384);
}

uint64_t sub_1008C6EEC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1008C6F04@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

uint64_t sub_1008C6F24()
{
  return static Optional<A>.read(from:)();
}

uint64_t sub_1008C6F50()
{
  return *(void *)(v0 - 192);
}

uint64_t sub_1008C6F64()
{
  return Measurement.init(value:unit:)();
}

uint64_t sub_1008C6F84()
{
  return v0;
}

uint64_t sub_1008C6FBC()
{
  return FixedSizeTypeBinaryCodable.write(to:)();
}

uint64_t sub_1008C6FDC()
{
  return v0;
}

uint64_t sub_1008C6FE8()
{
  return static FixedSizeTypeBinaryCodable.read(from:)();
}

uint64_t sub_1008C7000()
{
  return Array<A>.write(to:)();
}

void sub_1008C701C()
{
  sub_1008BA04C();
}

uint64_t sub_1008C7038()
{
  return Optional<A>.write(to:)();
}

uint64_t sub_1008C7064()
{
  return WeatherChange.Direction.write(to:)();
}

uint64_t sub_1008C7080()
{
  return *(void *)(v0 - 336);
}

uint64_t sub_1008C7090()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1008C70B4()
{
  return v0;
}

uint64_t sub_1008C70EC()
{
  return static String.read(from:)();
}

uint64_t sub_1008C7118()
{
  return v0;
}

uint64_t sub_1008C7138@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 128) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for ViewState(0);
}

uint64_t sub_1008C7164@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 112) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for NextHourToken();
}

uint64_t sub_1008C7190@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 168) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for SunriseSunsetDetailViewState();
}

uint64_t sub_1008C71BC@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for MoonDetailViewState();
}

uint64_t sub_1008C71E8@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_1008C7208@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for AveragesDetailViewState();
}

uint64_t sub_1008C7234@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 200) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_1008C7254@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for URL();
}

uint64_t sub_1008C7280@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 216) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_1008C72B0()
{
  return *(void *)(v0 - 192);
}

uint64_t sub_1008C72C4()
{
  return v0;
}

uint64_t sub_1008C72D4()
{
  return Optional<A>.write(to:)();
}

uint64_t sub_1008C72F0()
{
  return sub_1008C3650();
}

uint64_t sub_1008C7308()
{
  return v0;
}

uint64_t sub_1008C7318()
{
  return v0;
}

uint64_t sub_1008C7328()
{
  return v0;
}

uint64_t sub_1008C7334()
{
  return v0;
}

uint64_t sub_1008C7340()
{
  return String.write(to:)();
}

uint64_t sub_1008C7364()
{
  return v0;
}

uint64_t sub_1008C7378(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 248);
  return sub_1008C5A14(a1, v3);
}

uint64_t sub_1008C7390()
{
  return FixedSizeTypeBinaryCodable.write(to:)();
}

uint64_t sub_1008C73A8()
{
  return Optional<A>.write(to:)();
}

void sub_1008C73CC()
{
  *(unsigned char *)(v0 - 67) = 1;
}

uint64_t sub_1008C73D8()
{
  return *(void *)(v0 - 384);
}

uint64_t sub_1008C73F4()
{
  return *(void *)(v0 - 400);
}

uint64_t sub_1008C7410()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1008C7428()
{
  return Optional<A>.write(to:)();
}

uint64_t sub_1008C7450()
{
  return Optional<A>.write(to:)();
}

uint64_t sub_1008C7478()
{
  return static Optional<A>.read(from:)();
}

double sub_1008C74A0@<D0>(uint64_t a1@<X8>)
{
  return *(double *)(v1 + a1);
}

uint64_t sub_1008C74C4()
{
  return sub_10013C234(v1, v0);
}

uint64_t sub_1008C74DC()
{
  return *(void *)(v0 - 280);
}

uint64_t sub_1008C74F8()
{
  return *(void *)(v0 - 424);
}

uint64_t sub_1008C7514()
{
  return *(void *)(v0 - 320);
}

uint64_t sub_1008C7530()
{
  return *(void *)(v0 - 360);
}