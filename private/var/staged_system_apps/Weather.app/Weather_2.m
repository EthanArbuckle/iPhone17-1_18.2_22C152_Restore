uint64_t sub_1001626AC()
{
  uint64_t v0;

  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_100162708()
{
  return 0;
}

uint64_t sub_100162728()
{
  return v0;
}

uint64_t sub_100162738()
{
  return type metadata accessor for DynamicTypeSize();
}

uint64_t sub_100162774()
{
  return swift_allocObject();
}

uint64_t sub_1001627B4()
{
  return v0 + 8;
}

uint64_t sub_1001627C0(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_1001627E0@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

uint64_t sub_1001627F4@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

uint64_t sub_100162814()
{
  return 0;
}

uint64_t sub_100162840()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t sub_100162874(uint64_t result)
{
  *(void *)(v1 - 120) = result;
  return result;
}

uint64_t sub_10016288C()
{
  return swift_allocObject();
}

uint64_t sub_1001628C0(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  v6 = (char *)a1 + v4;
  uint64_t v7 = *(void *)(v5 - 368);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)&v6[*(int *)(v7 + 24)], 1, 1, *(void *)(v5 - 360));
  v8 = &v6[*(int *)(v7 + 28)];
  *(void *)v8 = v2;
  *((void *)v8 + 1) = v3;
  return type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
}

void sub_10016291C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_10016293C()
{
  return *(void *)(v0 - 104);
}

uint64_t sub_100162950()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_10016296C()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

BOOL sub_100162988(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void sub_1001629A4(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 240) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1001629C0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001629D8()
{
  return v0;
}

uint64_t sub_100162A04(int *a1)
{
  *(void *)(v1 + a1[5]) = *(void *)(v2 + a1[5]);
  *(void *)(v1 + a1[6]) = *(void *)(v2 + a1[6]);
  uint64_t v4 = a1[7];
  uint64_t v5 = v1 + v4;
  uint64_t v6 = v2 + v4;
  *(void *)uint64_t v5 = *(void *)v6;
  *(unsigned char *)(v5 + 8) = *(unsigned char *)(v6 + 8);
  *(unsigned char *)(v1 + a1[8]) = *(unsigned char *)(v2 + a1[8]);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100162A60()
{
  return v0;
}

uint64_t sub_100162A74()
{
  return CurrentWeather.condition.getter();
}

void sub_100162AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 104) = (char *)&a9 - v9;
}

uint64_t sub_100162AE4(uint64_t result)
{
  *(unsigned char *)(result + 16) = 33;
  return result;
}

uint64_t sub_100162B00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + a1;
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  uint64_t v9 = *(void *)(v3 + 40);
  uint64_t v10 = *(void *)(v3 + 48);
  uint64_t v11 = *(void *)(v3 + 56);
  char v14 = *(unsigned char *)(v3 + 72);
  uint64_t v13 = *(void *)(v3 + 64);
  return sub_10018CCC4(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
}

uint64_t sub_100162B34()
{
  return v0;
}

uint64_t sub_100162B40()
{
  return v0;
}

uint64_t sub_100162B80(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v1);
}

uint64_t sub_100162BA8()
{
  return static Measurement<>.read(from:)();
}

uint64_t sub_100162BDC()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_100162C20(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 256);
  return _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v3);
}

uint64_t sub_100162C3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 256);
  return sub_100931C98(v4, v2, v1);
}

uint64_t sub_100162C5C()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_100162C78()
{
  return v0 - 96;
}

uint64_t sub_100162CB0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)(a2 - 256) = a1;
  return v2;
}

uint64_t sub_100162CC4(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v1);
}

void sub_100162CDC()
{
  *(void *)(v1 - 416) = v0;
}

uint64_t sub_100162CFC()
{
  return v0;
}

uint64_t sub_100162D0C(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t type metadata accessor for WeatherDataUpdateRequestLog.Event(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E8ACB0);
}

unsigned char **sub_100162D6C(unsigned char **a1, uint64_t a2, uint64_t a3)
{
  return sub_100162D74(a1, a2, a3, *(unsigned char *)(v3 + 16));
}

unsigned char **sub_100162D74(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4 = *result;
  *uint64_t v4 = a4;
  *result = v4 + 1;
  return result;
}

void sub_100162D84()
{
  sub_10010977C();
  uint64_t v3 = sub_10018289C(v1, v2);
  sub_10018233C(v3, v4);
  uint64_t v7 = (void *)(v5 + v6);
  swift_retain();
  sub_10017DF08(&qword_100E63D98);
  if (sub_100162F5C() == 1)
  {
    sub_10019E5B8();
    sub_1001A1C2C();
    sub_100162E4C();
    uint64_t v8 = sub_1001A4520();
    v9(v8);
  }
  else
  {
    *uint64_t v0 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  sub_1001A03D4();
  swift_retain();
  sub_100162714();
}

uint64_t _s7Weather31SessionEventsAndDataCoordinatorC25lastPushedTemperatureUnit33_8ECD549B82C3B8992579EA0CB842041CLLSo06NSUnitI0CSgvpfi_0()
{
  return 0;
}

uint64_t sub_100162E38()
{
  return v0;
}

uint64_t sub_100162E5C(uint64_t a1)
{
  *(void *)(v1 - 176) = a1;
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t sub_100162EE0()
{
  return swift_slowDealloc();
}

uint64_t sub_100162F48()
{
  return 0;
}

uint64_t sub_100162F5C()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_100162F78(uint64_t result)
{
  *(void *)(result + 16) = v2;
  *(void *)(result + 24) = v1;
  return result;
}

uint64_t sub_100162F8C(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v1);
}

uint64_t sub_100162FAC()
{
  return static Date.== infix(_:_:)();
}

uint64_t sub_100162FCC(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t sub_100162FDC()
{
  return swift_task_alloc();
}

void sub_100162FF8(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v4, a4, v6, 2u);
}

uint64_t sub_100163020@<X0>(unint64_t a1@<X8>)
{
  if (a1 >= 0xFFFFFFFF) {
    LODWORD(a1) = -1;
  }
  return (a1 + 1);
}

uint64_t sub_100163034(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  return sub_1001659F0(a1, a2, a3, a4, a5, 0, 0, 0, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

uint64_t sub_100163050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, a4);
}

uint64_t sub_100163068()
{
  return 2;
}

uint64_t sub_100163080(char a1)
{
  return sub_100389228(v2, v1 & 1, a1 & 1);
}

uint64_t sub_1001630A0(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v1);
}

uint64_t sub_1001630C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, a4);
  return type metadata accessor for LocationsState();
}

uint64_t sub_1001630F0(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, a1);
}

uint64_t sub_100163110()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t sub_100163134@<X0>(uint64_t a1@<X8>)
{
  return sub_1001184F4(v2 + a1, v1);
}

uint64_t sub_10016317C()
{
  *(void *)(v1 - 88) = v0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001631A8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001631C0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100163204()
{
  return swift_allocObject();
}

uint64_t sub_100163220@<X0>(uint64_t a1@<X8>)
{
  return v2 + *(int *)(v1 + 20) + a1;
}

uint64_t sub_100163230@<X0>(uint64_t a1@<X8>)
{
  return sub_10031F6A8(v3 + a1, v2, v1);
}

__n128 sub_10016324C(__n128 *a1)
{
  __n128 result = *(__n128 *)(v1 - 128);
  a1[1] = result;
  return result;
}

__n128 sub_100163264(__n128 *a1)
{
  __n128 result = *(__n128 *)(v1 - 128);
  a1[1] = result;
  return result;
}

uint64_t sub_10016327C@<X0>(uint64_t a1@<X8>)
{
  return sub_10031F6A8(v1 + a1, v2, v3);
}

uint64_t sub_1001632AC(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, a1);
}

void sub_1001632CC()
{
  *(void *)(v0 - 96) = 1752392040;
}

uint64_t sub_1001632E0()
{
  return v0;
}

uint64_t sub_1001632F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, NSBundle a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = 0;
  unint64_t v10 = 0xE000000000000000;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&a1, *(Swift::String_optional *)&a3, a5, *(Swift::String *)&v9, *(Swift::String *)&a8)._countAndFlagsBits;
}

uint64_t sub_100163310()
{
  return v0;
}

uint64_t sub_100163324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unint64_t v13 = 0xE000000000000000;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&a1, *(Swift::String_optional *)&v10, v8, *(Swift::String *)&v12, *(Swift::String *)&a8)._countAndFlagsBits;
}

uint64_t sub_100163354@<X0>(uint64_t a1@<X8>)
{
  return v1 + *(int *)(v2 + 20) + a1;
}

uint64_t sub_100163364()
{
  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, v0);
}

uint64_t sub_100163380()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_100163398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, a4);
  return type metadata accessor for ViewState(0);
}

uint64_t sub_1001633C8(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, a1);
}

void sub_100163400(uint64_t a1@<X8>)
{
  *(void *)(a1 - 256) = v1;
}

void sub_10016340C()
{
  *(void *)(v0 - 112) = 0;
  *(void *)(v0 - 104) = 0xE000000000000000;
  _StringGuts.grow(_:)(85);
}

uint64_t sub_100163430()
{
  return v0;
}

uint64_t sub_100163444()
{
  return static Published.subscript.getter();
}

BOOL sub_100163468@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_100163490()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_1001634BC()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1001634D8()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t sub_10016350C()
{
  return v0;
}

__n128 sub_100163520(uint64_t a1)
{
  long long v2 = *(_OWORD *)(v1 - 168);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 - 184);
  *(_OWORD *)(a1 + 32) = v2;
  __n128 result = *(__n128 *)(v1 - 152);
  long long v4 = *(_OWORD *)(v1 - 136);
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v4;
  return result;
}

uint64_t sub_10016353C()
{
  return Measurement.value.getter();
}

uint64_t sub_100163554(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5 = *(void *)(v3 - 184);
  return sub_1001C65AC(a1, v5, a3);
}

uint64_t sub_10016356C()
{
  return 0;
}

uint64_t sub_100163590@<X0>(uint64_t a1@<X8>)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 8);
  if (v1 > 1) {
    return (v1 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1001635A4@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 168) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_1001635C4()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_1001635DC()
{
  return v0;
}

uint64_t sub_1001635F4()
{
  return v0;
}

uint64_t sub_100163610()
{
  return swift_beginAccess();
}

uint64_t sub_10016362C()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_100163640()
{
  return v0;
}

uint64_t sub_100163668()
{
  return v0;
}

uint64_t sub_10016367C()
{
  *(void *)(v2 - 128) = 0;
  *(_OWORD *)(v2 - 160) = 0u;
  *(_OWORD *)(v2 - 144) = 0u;
  return sub_1001AAF58(v1, v2 - 160, v0);
}

uint64_t sub_1001636A8()
{
  return v0;
}

uint64_t sub_1001636BC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001636D4(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v1);
}

uint64_t sub_1001636F4()
{
  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, v0);
}

uint64_t sub_100163718()
{
  return sub_100147E60(v0, v1, v3, v2);
}

uint64_t sub_100163738()
{
  return v0;
}

uint64_t sub_100163744(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, a1);
}

uint64_t sub_100163760()
{
  return 7630696;
}

uint64_t sub_100163770()
{
  return 0;
}

double sub_10016378C()
{
  return v0;
}

uint64_t sub_100163798()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_1001637B8()
{
  return v0;
}

uint64_t sub_1001637CC()
{
  return v0;
}

uint64_t sub_1001637D8(uint64_t result)
{
  *(unsigned char *)(result + 16) = 8;
  return result;
}

uint64_t sub_1001637E8()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_100163804()
{
  uint64_t v2 = v1 + *(int *)(v0 + 96);
  sub_10014DC00(*(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(unsigned char *)(v2 + 48));
  return swift_release();
}

uint64_t sub_10016384C@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_100163870()
{
  return DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
}

uint64_t sub_1001638AC()
{
  return type metadata accessor for PrecipitationAveragesHeroChartView();
}

uint64_t sub_1001638D4()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1001638F0(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, a1);
}

uint64_t sub_10016393C()
{
  return v0;
}

uint64_t sub_100163950()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t sub_100163968()
{
  return v1 + *(int *)(v0 + 52);
}

uint64_t sub_100163988@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for Location();
}

void sub_1001639B4()
{
  Hasher._combine(_:)(1u);
}

uint64_t sub_1001639CC()
{
  return v0;
}

uint64_t sub_1001639D8()
{
  *(void *)(v1 - 280) = v0;
  *(unsigned char *)(v1 - 272) = 0;
  return swift_retain();
}

uint64_t sub_1001639FC()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_100163A20(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, a1);
  return type metadata accessor for DisplayMetrics();
}

uint64_t sub_100163A58(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 120), 1, 1, a1);
  return type metadata accessor for LocationsState();
}

uint64_t sub_100163A90(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 264), 1, 1, a1);
  return type metadata accessor for NotificationsOptInState();
}

uint64_t sub_100163AD0()
{
  return UIListContentConfiguration.text.setter();
}

uint64_t sub_100163AEC()
{
  return swift_beginAccess();
}

uint64_t sub_100163B20@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 128) = a1;
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_100163B44(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, *(void *)(v1 - 200));
  return type metadata accessor for TimeState();
}

uint64_t sub_100163B78(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 328);
  return _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v3);
}

uint64_t sub_100163B98()
{
  return 0;
}

uint64_t sub_100163BAC()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_100163BD8()
{
  return v0;
}

uint64_t sub_100163BF0()
{
  return static Measurement.== infix<A, B>(_:_:)();
}

uint64_t sub_100163C14(uint64_t a1)
{
  uint64_t v4 = a1 + *(void *)(v1 + 448);
  uint64_t v5 = *(void (**)(void))(v1 + 424);
  return sub_1000F66B0(v2, v4, v5);
}

uint64_t sub_100163C48()
{
  return v0;
}

uint64_t sub_100163C60()
{
  return sub_1001EC58C(v1, v0);
}

uint64_t sub_100163C78()
{
  uint64_t v2 = v1 + *(int *)(v0 + 60);
  return sub_100191934(*(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned char *)(v2 + 32));
}

uint64_t sub_100163CA8()
{
  uint64_t v6 = *(void **)(v4 - 152);
  void *v6 = v3;
  v6[1] = v1;
  v6[2] = v2;
  v6[3] = v0;
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100163CE8()
{
  return 0x65736E6F6F4DLL;
}

uint64_t sub_100163D24(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 - 152);
  return _s7Weather24LocationCompositionStateOwst_0(v4, 1, 1, a1);
}

uint64_t sub_100163D48()
{
  *(void *)(v0 - 160) = 0;
  return State.init(wrappedValue:)();
}

uint64_t sub_100163D6C()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t sub_100163D88()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_100163DC4()
{
  return swift_slowAlloc();
}

uint64_t sub_100163DDC()
{
  return sub_100136460();
}

uint64_t sub_100163DF4()
{
  return v0;
}

uint64_t sub_100163E04(float a1)
{
  *uint64_t v1 = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

unint64_t sub_100163E3C()
{
  *(void *)(v2 - 104) = v1;
  *(void *)(v2 - 144) = v0;
  *(unsigned char *)(v2 - 81) = 0;
  return sub_1002E8390();
}

uint64_t sub_100163E60(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_10017DF08(a3);
}

uint64_t sub_100163E88()
{
  return 0;
}

uint64_t sub_100163EA4@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

uint64_t sub_100163EB8()
{
  return Hasher.init(_seed:)();
}

uint64_t sub_100163ED0()
{
  return swift_allocObject();
}

uint64_t sub_100163EE8()
{
  return v0;
}

uint64_t sub_100163EF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + a1;
  uint64_t v4 = *(void *)v3;
  char v5 = *(unsigned char *)(v3 + 8);
  return sub_10018F6D8(v4, v5);
}

uint64_t sub_100163F10(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v1);
}

uint64_t sub_100163F30()
{
  return _s7Weather24LocationCompositionStateOwet_0(v0, 1, v1);
}

uint64_t sub_100163F4C()
{
  return swift_allocObject();
}

void sub_100163F64(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 200) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_100163F80()
{
  return Location.init(id:name:timeZone:coordinate:lastRefreshDate:searchTitle:searchSubtitle:preciseName:secondaryName:)();
}

size_t sub_100163FA0(void *a1)
{
  size_t result = j__malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

uint64_t sub_100163FC8()
{
  return swift_bridgeObjectRetain();
}

BOOL sub_100163FE4(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_100164010()
{
  *(void *)(v2 - 136) = v0;
  return v1;
}

uint64_t sub_100164028()
{
  return 0;
}

uint64_t sub_10016403C()
{
  return v0;
}

uint64_t sub_100164060()
{
  return type metadata accessor for URL();
}

uint64_t sub_100164080@<X0>(void (*a1)(void)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a2 - 256);
  uint64_t v5 = *(void *)(v2 - 408);
  return sub_100178CEC(v4, v5, a1);
}

uint64_t sub_1001640AC()
{
  return static os_log_type_t.fault.getter();
}

uint64_t sub_1001640D4(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_10016414C(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_10016414C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_100164270(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1001643C8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1001643C8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v12);
  return v7;
}

uint64_t _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_100164270(void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_100477A14((char *)__src, HIBYTE(a6) & 0xF, __dst);
      UnsafeMutableRawBufferPointer.subscript.setter();
      uint64_t result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    uint64_t result = (uint64_t)sub_10016F25C(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    uint64_t v8 = _StringObject.sharedUTF8.getter();
    if (!v8)
    {
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1001643C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100164428()
{
  return sub_100164430(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100164430(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10016445C(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_1001640D4(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_100164464()
{
  return swift_slowAlloc();
}

uint64_t sub_10016446C()
{
  return swift_slowDealloc();
}

uint64_t sub_100164478(uint64_t a1, uint64_t a2)
{
  uint64_t updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 16))(a2, a1, updated);
  return a2;
}

void *sub_1001644DC(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain();
      goto LABEL_13;
    case 2u:
    case 0xAu:
    case 0xEu:
      uint64_t v19 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
      goto LABEL_13;
    case 3u:
      uint64_t v7 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = sub_10017DF08(&qword_100E8AC28);
      *(void *)((char *)a1 + *(int *)(v8 + 48)) = *(void *)((char *)a2 + *(int *)(v8 + 48));
      goto LABEL_13;
    case 4u:
      uint64_t v9 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      uint64_t v10 = sub_10017DF08(&qword_100E8AC20);
      *(void *)((char *)a1 + *(int *)(v10 + 48)) = *(void *)((char *)a2 + *(int *)(v10 + 48));
      *(void *)((char *)a1 + *(int *)(v10 + 64)) = *(void *)((char *)a2 + *(int *)(v10 + 64));
      goto LABEL_13;
    case 5u:
      uint64_t v17 = a2[1];
      if (v17 == 1)
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
      }
      else
      {
        *a1 = *a2;
        a1[1] = v17;
        swift_bridgeObjectRetain();
      }
      goto LABEL_13;
    case 6u:
    case 7u:
      uint64_t v11 = *a2;
      swift_errorRetain();
      *a1 = v11;
      goto LABEL_13;
    case 0xCu:
      uint64_t v18 = a2[1];
      *a1 = *a2;
      a1[1] = v18;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      swift_bridgeObjectRetain();
      goto LABEL_13;
    case 0xFu:
    case 0x10u:
      uint64_t v12 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      uint64_t v13 = *(int *)(sub_10017DF08(&qword_100E8AC10) + 48);
      char v14 = (void *)((char *)a1 + v13);
      v15 = (void *)((char *)a2 + v13);
      uint64_t v16 = v15[1];
      *char v14 = *v15;
      v14[1] = v16;
      swift_bridgeObjectRetain();
LABEL_13:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t sub_1001648BC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1001648EC(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_100164908(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1001DF004(v3, v4, a3);
}

uint64_t sub_100164920(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_100164968()
{
  **(void **)(v1 - 656) = v0;
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100164998()
{
  return v0;
}

uint64_t sub_1001649B4()
{
  return ChartLineStyle.init(strokeStyle:lineThickness:lineColor:lineDash:opacity:opacityIncreasedContrast:areaStyle:)();
}

uint64_t sub_1001649DC@<X0>(unint64_t a1@<X8>)
{
  return sub_1007E9A64(a1 > 1, v1, 1, v2);
}

uint64_t sub_100164A14(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v1);
}

void sub_100164A2C()
{
  *(unsigned char *)(v1 + *(int *)(v2 + 20) + 8) = -v0;
}

__n128 sub_100164A40@<Q0>(unint64_t a1@<X1>, unsigned __int8 a2@<W2>, __n128 *a3@<X8>)
{
  __n128 result = v4[3];
  a3[3] = result;
  a3[4].n128_u64[0] = v3;
  a3[4].n128_u64[1] = a1;
  a3[5].n128_u8[0] = a2;
  return result;
}

uint64_t sub_100164A54()
{
  sub_10018F6E4();
  sub_10018F6E4();
  sub_10018F6E4();
  return swift_release();
}

uint64_t sub_100164ABC()
{
  return v0;
}

void sub_100164ACC(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 - 728) = a1;
  *(void *)(v3 - 736) = a2;
}

uint64_t sub_100164B04(uint64_t result)
{
  *(unsigned char *)(result + 16) = 8;
  return result;
}

uint64_t sub_100164B14@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = (void *)(v3 + a3);
  *uint64_t v4 = result;
  v4[1] = a2;
  return result;
}

uint64_t sub_100164B20()
{
  return v0 + 56;
}

uint64_t sub_100164B48()
{
  return dispatch thunk of Hashable.hash(into:)();
}

void sub_100164B64(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 192) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

double sub_100164B9C()
{
  return 0.0;
}

uint64_t sub_100164BD4()
{
  return v0;
}

uint64_t sub_100164BE0()
{
  return type metadata accessor for ViewState.SecondaryViewState(0);
}

uint64_t sub_100164C1C()
{
  return *(void *)(v0 - 232);
}

uint64_t sub_100164C30()
{
  return type metadata accessor for Date();
}

void sub_100164C50()
{
  uint64_t v4 = *(void *)(v2 - 320);
  uint64_t v5 = *(void *)(v2 - 216);
  uint64_t v6 = *(void *)(v2 - 168);
  uint64_t v7 = *(void *)(v2 - 208);
  int v8 = *(_DWORD *)(v2 - 240);
  sub_100B639C4(v0, v4, v5, v1, v6, v7, v8);
}

uint64_t sub_100164C8C@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 - 128) + a1;
}

uint64_t sub_100164CA0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_100164D00(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_100164D60(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100164DC8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_100164E28(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

void sub_100164E7C()
{
  sub_1007F3084();
}

uint64_t sub_100164EA0()
{
  return sub_100178160(v0, v1);
}

uint64_t sub_100164EB8(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, a1);
}

uint64_t sub_100164ED8()
{
  return dispatch thunk of Disposable.dispose(on:)();
}

uint64_t sub_100164F10()
{
  return 0;
}

uint64_t sub_100164F30@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

uint64_t sub_100164F4C()
{
  *(void *)(v1 - 112) = v0;
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

void *sub_100164F78()
{
  return sub_1001B1E64(v0, v0[3]);
}

uint64_t sub_100164F9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X7>, uint64_t a3@<X8>)
{
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  unint64_t v9 = 0xE000000000000000;
  unint64_t v5 = (a3 - 32) | 0x8000000000000000;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&a1, *(Swift::String_optional *)&v6, v3, *(Swift::String *)&v8, *(Swift::String *)&a2)._countAndFlagsBits;
}

uint64_t sub_100164FF8()
{
  return 0;
}

uint64_t sub_10016500C()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_10016502C()
{
  return 0;
}

uint64_t sub_100165038()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_100165064()
{
  return sub_1001ABC4C(0, v0);
}

uint64_t sub_100165084()
{
  return v0;
}

uint64_t sub_10016509C()
{
  return v0;
}

uint64_t sub_1001650B4()
{
  return static Tips.OptionsBuilder.buildPartialBlock<A>(first:)();
}

uint64_t sub_1001650D8()
{
  return 0;
}

uint64_t sub_1001650F0()
{
  return v0;
}

uint64_t sub_1001650FC@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 152) = a1;
  return type metadata accessor for AutomationInfo(0);
}

uint64_t sub_100165114(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5 = *(void *)(v3 - 328);
  return sub_1001E4534(a1, v5, a3);
}

uint64_t sub_100165150(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, a1);
}

uint64_t sub_10016518C()
{
  return v0;
}

BOOL sub_10016519C()
{
  *(_DWORD *)(v1 - 168) = v0;
  uint64_t v3 = *(NSObject **)(v1 - 160);
  return os_log_type_enabled(v3, (os_log_type_t)v0);
}

uint64_t sub_1001651BC()
{
  return *(void *)(v0 - 256);
}

uint64_t sub_1001651E0@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a3 - 256);
  return sub_10021D380(a1, v4, a2);
}

uint64_t sub_1001651F8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return sub_10074BA4C(v4, v3, a3);
}

uint64_t sub_100165210()
{
  return v0;
}

uint64_t sub_100165228()
{
  return Measurement.formatted<A>(_:placeholder:unitManager:)();
}

uint64_t sub_100165240()
{
  return v0;
}

void sub_10016527C()
{
  Hasher._combine(_:)(0);
}

__n128 sub_100165294@<Q0>(__int16 a1@<W8>)
{
  __n128 result = *(__n128 *)(v2 - 256);
  long long v4 = *(_OWORD *)(v2 - 240);
  *(__n128 *)(v2 - 304) = result;
  *(_OWORD *)(v2 - 288) = v4;
  *(_WORD *)(v2 - 272) = v1 | a1;
  return result;
}

uint64_t sub_1001652BC()
{
  return v0;
}

uint64_t sub_1001652DC()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1001652FC()
{
  return 0x7469706963657270;
}

uint64_t sub_100165320()
{
  return FixedSizeTypeBinaryCodable.write(to:)();
}

uint64_t sub_100165338()
{
  return v0;
}

BOOL sub_10016534C@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_100165360()
{
  uint64_t v2 = *(void *)(v0 - 224);
  uint64_t v3 = *(void *)(v0 - 168);
  return _s7Weather24LocationCompositionStateOwst_0(v2, 1, 1, v3);
}

uint64_t sub_100165384()
{
  return type metadata accessor for LocationViewModel();
}

uint64_t sub_1001653AC()
{
  return ShortDescription.init(name:_:)();
}

uint64_t sub_1001653D0()
{
  uint64_t v4 = *v0;
  return sub_1001262FC(v4, v1, v2);
}

uint64_t sub_1001653EC()
{
  return v0;
}

uint64_t sub_100165400()
{
  return 0x43776F4E5F415045;
}

uint64_t sub_100165428(uint64_t a1)
{
  uint64_t v4 = v1 + *(int *)(a1 + 32);
  return _s7Weather24LocationCompositionStateOwet_0(v4, 1, v2);
}

uint64_t sub_100165450()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_10016546C()
{
  sub_100A42A3C();
}

uint64_t sub_10016548C()
{
  return v0;
}

uint64_t sub_1001654A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Location.Identifier();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v4(a1, v2);
  }
  return result;
}

uint64_t sub_10016552C()
{
  type metadata accessor for WeatherDataAction();
  sub_100162E4C();
  __chkstk_darwin(v1);
  uint64_t v3 = (void *)((char *)v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10016598C(v0, (uint64_t)v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v4 = v3[1];
      sub_1001885A0();
      _StringGuts.grow(_:)(35);
      swift_bridgeObjectRelease();
      sub_10019F940();
      goto LABEL_11;
    case 2u:
      uint64_t v7 = *v3;
      uint64_t v8 = (void *)v3[1];
      uint64_t v9 = v3[2];
      unint64_t v10 = v3[3];
      uint64_t v11 = v3[4];
      uint64_t v4 = v3[5];
      sub_100303D6C(v9, v10);
      sub_1001885A0();
      _StringGuts.grow(_:)(22);
      swift_bridgeObjectRelease();
      uint64_t v12 = 0x4C64656C6961662ELL;
      unint64_t v13 = 0xEF28676E6964616FLL;
      goto LABEL_16;
    case 3u:
      uint64_t v7 = *v3;
      uint64_t v8 = (void *)v3[1];
      uint64_t v11 = v3[2];
      uint64_t v4 = v3[3];
      sub_1001885A0();
      _StringGuts.grow(_:)(38);
      swift_bridgeObjectRelease();
      sub_10019F940();
      uint64_t v12 = v14 - 1;
      v15 = ".failedLoadingAvailableDataSet(";
      goto LABEL_15;
    case 4u:
      uint64_t v16 = *v3;
      uint64_t v17 = (void *)v3[1];
      uint64_t v18 = (int *)sub_10017DF08(&qword_100E6BBC0);
      uint64_t v19 = (char *)v3 + v18[12];
      uint64_t v20 = (uint64_t)v3 + v18[16];
      uint64_t v21 = (uint64_t)v3 + v18[20];
      sub_1001885A0();
      _StringGuts.grow(_:)(21);
      swift_bridgeObjectRelease();
      strcpy((char *)v41, ".updatedData(");
      HIWORD(v41[1]) = -4864;
      v22._countAndFlagsBits = v16;
      v22._object = v17;
      String.append(_:)(v22);
      swift_bridgeObjectRelease();
      sub_10017DD30();
      uint64_t v23 = v41[0];
      sub_100176980(v21, (void (*)(void))type metadata accessor for NewsDataModel);
      sub_100176980(v20, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      v24 = (void (*)(void))type metadata accessor for WeatherData;
      uint64_t v25 = (uint64_t)v19;
      goto LABEL_8;
    case 5u:
      v26 = (void *)v3[1];
      v27 = (char *)v3 + *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
      sub_1001885A0();
      _StringGuts.grow(_:)(25);
      swift_bridgeObjectRelease();
      sub_10019F940();
      v29._countAndFlagsBits = sub_1001A142C(v28 - 15);
      v29._object = v26;
      String.append(_:)(v29);
      swift_bridgeObjectRelease();
      sub_10017DD30();
      uint64_t v23 = v41[0];
      v24 = (void (*)(void))type metadata accessor for NewsDataModel;
      uint64_t v25 = (uint64_t)v27;
LABEL_8:
      sub_100176980(v25, v24);
      return v23;
    case 6u:
      v30 = (char *)v3 + *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
      sub_1001885A0();
      _StringGuts.grow(_:)(33);
      swift_bridgeObjectRelease();
      sub_10019F940();
      sub_100180CB0(v31 - 7);
      swift_bridgeObjectRelease();
      sub_10017DD30();
      uint64_t v23 = v41[0];
      type metadata accessor for AvailableDataSets();
      goto LABEL_13;
    case 7u:
      uint64_t v4 = v3[1];
      sub_1001885A0();
      _StringGuts.grow(_:)(36);
      swift_bridgeObjectRelease();
      sub_10019F940();
      uint64_t v6 = v32 | 1;
      goto LABEL_11;
    case 8u:
      v30 = (char *)v3 + *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
      sub_1001885A0();
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      sub_10019F940();
      sub_100180CB0(v34 - 6);
      swift_bridgeObjectRelease();
      sub_10017DD30();
      uint64_t v23 = v41[0];
      type metadata accessor for WeatherStatisticsModel();
LABEL_13:
      sub_100162E4C();
      (*(void (**)(char *))(v35 + 8))(v30);
      return v23;
    case 9u:
      uint64_t v7 = *v3;
      uint64_t v8 = (void *)v3[1];
      uint64_t v11 = v3[2];
      uint64_t v4 = v3[3];
      sub_1001885A0();
      _StringGuts.grow(_:)(39);
      swift_bridgeObjectRelease();
      sub_10019F940();
      v15 = ".failedLoadingWeatherStatistics(";
LABEL_15:
      unint64_t v13 = (unint64_t)(v15 - 32) | 0x8000000000000000;
LABEL_16:
      v41[0] = v12;
      v41[1] = v13;
      v36._countAndFlagsBits = v7;
      v36._object = v8;
      String.append(_:)(v36);
      swift_bridgeObjectRelease();
      v37._countAndFlagsBits = 8236;
      v37._object = (void *)0xE200000000000000;
      String.append(_:)(v37);
      uint64_t v33 = v11;
      goto LABEL_17;
    default:
      uint64_t v4 = v3[1];
      sub_1001885A0();
      _StringGuts.grow(_:)(19);
      swift_bridgeObjectRelease();
      sub_10019F940();
      uint64_t v6 = v5 - 16;
LABEL_11:
      uint64_t v33 = sub_1001A142C(v6);
LABEL_17:
      uint64_t v38 = v4;
      String.append(_:)(*(Swift::String *)&v33);
      swift_bridgeObjectRelease();
      v39._countAndFlagsBits = 41;
      v39._object = (void *)0xE100000000000000;
      String.append(_:)(v39);
      return v41[0];
  }
}

uint64_t sub_10016598C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherDataAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001659F0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v100 = a8;
  uint64_t v99 = a7;
  uint64_t v107 = a6;
  uint64_t v96 = a5;
  uint64_t v95 = a4;
  uint64_t v103 = a3;
  int v117 = a2;
  uint64_t v114 = a1;
  uint64_t v106 = a13;
  uint64_t v23 = sub_10017DF08(&qword_100E66418);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100109314();
  uint64_t v102 = v25;
  uint64_t v101 = type metadata accessor for ViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v26);
  sub_1001648EC(v27, v94);
  uint64_t v28 = sub_10017DF08(&qword_100E66420);
  uint64_t v29 = sub_100109308(v28);
  __chkstk_darwin(v29);
  sub_100109314();
  uint64_t v98 = v30;
  sub_100129064();
  uint64_t v97 = type metadata accessor for TimeState();
  sub_100162E4C();
  __chkstk_darwin(v31);
  sub_100109314();
  uint64_t v112 = v32;
  uint64_t v33 = sub_10017DF08(&qword_100E66428);
  uint64_t v34 = sub_100109308(v33);
  __chkstk_darwin(v34);
  sub_100109314();
  uint64_t v105 = v35;
  sub_100129064();
  uint64_t v104 = type metadata accessor for NotificationsOptInState();
  sub_100162E4C();
  __chkstk_darwin(v36);
  sub_100109314();
  uint64_t v111 = v37;
  uint64_t v38 = sub_10017DF08(&qword_100E66430);
  uint64_t v39 = sub_100109308(v38);
  __chkstk_darwin(v39);
  sub_1001626E0();
  uint64_t v42 = v41 - v40;
  uint64_t v94 = type metadata accessor for LocationsState();
  sub_100162E4C();
  __chkstk_darwin(v43);
  uint64_t v110 = (uint64_t)&v94 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_10017DF08(&qword_100E66438);
  uint64_t v46 = sub_100109308(v45);
  __chkstk_darwin(v46);
  sub_1001626E0();
  uint64_t v49 = v48 - v47;
  uint64_t v50 = type metadata accessor for EnvironmentState();
  sub_100162E4C();
  __chkstk_darwin(v51);
  sub_100109314();
  uint64_t v109 = v52;
  uint64_t v53 = sub_10017DF08(&qword_100E66440);
  uint64_t v54 = sub_100109308(v53);
  __chkstk_darwin(v54);
  sub_10017F948();
  uint64_t v55 = type metadata accessor for AppConfigurationState();
  sub_100162E4C();
  __chkstk_darwin(v56);
  sub_100164B64(v57, v94);
  uint64_t v58 = sub_10017DF08(&qword_100E663F0);
  uint64_t v59 = sub_100109308(v58);
  __chkstk_darwin(v59);
  sub_10008B8C0();
  uint64_t v60 = type metadata accessor for ModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v61);
  sub_100162EF8();
  uint64_t v116 = v62;
  sub_1001626D4();
  uint64_t v64 = __chkstk_darwin(v63);
  v66 = (char *)&v94 - v65;
  __chkstk_darwin(v64);
  v115 = (char *)&v94 - v67;
  sub_10016688C();
  sub_10006DF38(v106, v22, &qword_100E663F0);
  sub_10012B520(v22, 1, v60);
  if (v68)
  {
    sub_100178110(v22, &qword_100E663F0);
  }
  else
  {
    sub_100159138((uint64_t)v66, (void (*)(void))type metadata accessor for ModalViewState);
    sub_10016E3A8();
  }
  uint64_t v70 = v100;
  uint64_t v69 = v101;
  uint64_t v71 = v99;
  sub_10016E3A8();
  if (v114)
  {
    uint64_t v106 = v114;
  }
  else
  {
    uint64_t v106 = *(void *)(a21 + 16);
    swift_bridgeObjectRetain();
  }
  int v72 = v107;
  if (v117 == 3) {
    int v117 = *(unsigned __int8 *)(a21 + 24);
  }
  sub_10006DF38(v103, v21, &qword_100E66440);
  sub_10012B520(v21, 1, v55);
  if (v68)
  {
    sub_10016688C();
    swift_bridgeObjectRetain();
    sub_100178110(v21, &qword_100E66440);
  }
  else
  {
    sub_10016E3A8();
    swift_bridgeObjectRetain();
  }
  sub_10006DF38(v95, v49, &qword_100E66438);
  sub_10012B520(v49, 1, v50);
  if (v68)
  {
    swift_beginAccess();
    sub_10016688C();
    sub_100178110(v49, &qword_100E66438);
  }
  else
  {
    sub_10016E3A8();
  }
  uint64_t v73 = v94;
  sub_10006DF38(v96, v42, &qword_100E66430);
  uint64_t v74 = sub_10017F088();
  sub_10012B520(v74, v75, v73);
  if (v68)
  {
    sub_10016688C();
    sub_100178110(v42, &qword_100E66430);
  }
  else
  {
    sub_10016E3A8();
  }
  uint64_t v76 = v102;
  if (v71)
  {
    LODWORD(v102) = a9 & 1;
    LODWORD(v114) = v72;
    uint64_t v107 = v71;
    uint64_t v103 = v70;
  }
  else
  {
    LODWORD(v114) = *(unsigned __int8 *)(a21 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications);
    uint64_t v77 = *(void *)(a21 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications + 8);
    uint64_t v78 = *(void *)(a21 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications + 16);
    LODWORD(v102) = *(unsigned __int8 *)(a21 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications + 24);
    uint64_t v107 = v77;
    swift_bridgeObjectRetain();
    uint64_t v103 = v78;
    swift_bridgeObjectRetain();
  }
  uint64_t v79 = v105;
  sub_10006DF38(a10, v105, &qword_100E66428);
  sub_10012B520(v79, 1, v104);
  if (v68)
  {
    sub_10016688C();
    sub_1001857E4();
    sub_100178110(v79, &qword_100E66428);
  }
  else
  {
    sub_10016E3A8();
    sub_1001857E4();
  }
  uint64_t v80 = v98;
  uint64_t v81 = v97;
  sub_10006DF38(a11, v98, &qword_100E66420);
  sub_10012B520(v80, 1, v81);
  if (v68)
  {
    sub_10016688C();
    sub_100178110(v80, &qword_100E66420);
  }
  else
  {
    sub_10016E3A8();
  }
  uint64_t v82 = a16;
  uint64_t v83 = a14;
  sub_10006DF38(a12, v76, &qword_100E66418);
  uint64_t v84 = sub_10017F088();
  sub_10012B520(v84, v85, v69);
  if (v68)
  {
    sub_10016688C();
    sub_100178110(v76, &qword_100E66418);
  }
  else
  {
    sub_10016E3A8();
  }
  sub_10016E3A8();
  uint64_t v104 = a16;
  uint64_t v105 = a17;
  uint64_t v101 = a14;
  if (a15)
  {
    uint64_t v86 = a15;
    uint64_t v87 = a17;
  }
  else
  {
    uint64_t v83 = *(void *)(a21 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
    uint64_t v86 = *(void *)(a21 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 8);
    uint64_t v82 = *(void *)(a21 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
    uint64_t v87 = *(void *)(a21 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  if (!a19)
  {
    char v88 = *(unsigned char *)(a21 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState);
    uint64_t v89 = *(void *)(a21 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState + 8);
    swift_bridgeObjectRetain();
    if (a20) {
      goto LABEL_35;
    }
LABEL_37:
    uint64_t v90 = *(void *)(a21 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_contentStatusBanners);
    swift_bridgeObjectRetain();
    goto LABEL_38;
  }
  char v88 = a18 & 1;
  uint64_t v89 = a19;
  if (!a20) {
    goto LABEL_37;
  }
LABEL_35:
  uint64_t v90 = a20;
LABEL_38:
  type metadata accessor for MainState._Storage(0);
  swift_allocObject();
  *(void *)&long long v93 = v83;
  *((void *)&v93 + 1) = v86;
  uint64_t v91 = sub_10016E888(v106, v117, v108, v109, v110, v114, v107, v103, v102, v111, v112, v113, v116, v93, v82, v87, v88, v89, v90);
  sub_10016EC5C(v101, a15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v91;
}

uint64_t sub_100166440(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1001664A0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_100166500(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_100166560(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1001665C0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162880();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_100166618(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_10016666C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001666D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100162708();
  v4(v3);
  sub_100162E4C();
  uint64_t v5 = sub_10011BFA4();
  v6(v5);
  return a2;
}

uint64_t sub_100166724(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_100166778(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1001667D8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_100166838(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_10016688C()
{
  uint64_t v1 = sub_100162814();
  v2(v1);
  sub_100162E4C();
  uint64_t v3 = sub_10011BFA4();
  v4(v3);
  return v0;
}

uint64_t sub_1001668D8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_10016692C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_10016698C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1001669EC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t type metadata accessor for MainAction()
{
  uint64_t result = qword_100E7F4B8;
  if (!qword_100E7F4B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100166AB4()
{
  return sub_100247C04();
}

uint64_t sub_100166AD0(uint64_t result)
{
  *(void *)uint64_t v1 = result;
  *(unsigned char *)(v1 + 8) = 0;
  return result;
}

uint64_t sub_100166ADC(uint64_t a1)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  return v1;
}

uint64_t sub_100166AF4@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

void sub_100166B08()
{
  *(void *)(v0 + 16) = *(void *)(v1 - 72);
  *(unsigned char *)(v1 - 82) = 1;
}

uint64_t sub_100166B28(uint64_t result)
{
  uint64_t v4 = (void *)(v2 + *(int *)(result + 20));
  *uint64_t v4 = v3;
  v4[1] = v1;
  return result;
}

uint64_t sub_100166B4C()
{
  return 0;
}

uint64_t sub_100166B68()
{
  return swift_allocError();
}

uint64_t sub_100166B80()
{
  return v0;
}

uint64_t sub_100166B94(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_10017DF08(a3);
}

void sub_100166BBC(uint64_t a1@<X8>)
{
  uint64_t v2 = *v1;
  char v3 = *((unsigned char *)v1 + 8);
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
}

void sub_100166BD4(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 224) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_100166C04()
{
  return v0;
}

uint64_t sub_100166C14@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 344) = a1;
  return 0;
}

void *sub_100166C28()
{
  uint64_t v2 = *(void *)(v0 - 264);
  uint64_t v3 = *(void *)(v2 + 80);
  return sub_1001B1E64((void *)(v2 + 56), v3);
}

uint64_t sub_100166C48()
{
  return *v0;
}

uint64_t sub_100166C54(uint64_t result)
{
  *(unsigned char *)(result + 16) = 2;
  return result;
}

uint64_t sub_100166C60()
{
  return type metadata accessor for DynamicTypeSize();
}

uint64_t sub_100166C7C()
{
  return v0;
}

uint64_t sub_100166CB8()
{
  return Array<A>.write(to:)();
}

uint64_t sub_100166CE0@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_100166D04@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 120) = a1;
  return swift_getOpaqueTypeConformance2();
}

__n128 sub_100166D24@<Q0>(__int16 a1@<W8>)
{
  __n128 result = *(__n128 *)(v2 - 256);
  long long v4 = *(_OWORD *)(v2 - 240);
  *(__n128 *)(v2 - 304) = result;
  *(_OWORD *)(v2 - 288) = v4;
  *(unsigned char *)(v2 - 270) = BYTE2(v1);
  *(_WORD *)(v2 - 272) = a1;
  return result;
}

__n128 sub_100166D60@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(a1 + 32);
  __n128 result = *(__n128 *)a1;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 - 128) = *(_OWORD *)a1;
  *(_OWORD *)(v1 - 112) = v4;
  *(unsigned char *)(v1 - 96) = v2;
  return result;
}

uint64_t sub_100166D74@<X0>(uint64_t a1@<X8>)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(a1 - 256), 1, 1, *(void *)(v2 - 168));
  return v1;
}

uint64_t sub_100166D9C()
{
  return sub_10018F6D8(*(void *)(v0 + 144), *(unsigned char *)(v0 + 152));
}

uint64_t sub_100166DC0()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_100166DD8()
{
  return 1684107116;
}

uint64_t sub_100166DEC()
{
  return *(void *)(v0 - 256);
}

uint64_t sub_100166E28()
{
  uint64_t v4 = v0 + *(int *)(v2 + 80);
  return _s7Weather24LocationCompositionStateOwet_0(v4, 1, v1);
}

uint64_t sub_100166E4C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100166E6C()
{
  return type metadata accessor for Date();
}

uint64_t sub_100166E90@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1);
}

uint64_t *sub_100166EA8(uint64_t *a1, unsigned __int8 *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = type metadata accessor for AppConfiguration();
      (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_214;
    case 2u:
      uint64_t v14 = type metadata accessor for EnvironmentAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v25 = type metadata accessor for Locale();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
          goto LABEL_213;
        case 3u:
          uint64_t v33 = type metadata accessor for ActivityAction();
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 1)
          {
            type metadata accessor for PreviewLocation();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                uint64_t v211 = type metadata accessor for LocationOfInterest();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v211 - 8) + 16))(a1, a2, v211);
                break;
              case 2u:
                uint64_t v212 = *((void *)a2 + 1);
                v398 = *(void **)a2;
                *a1 = *(void *)a2;
                a1[1] = v212;
                uint64_t v213 = *((void *)a2 + 3);
                a1[2] = *((void *)a2 + 2);
                a1[3] = v213;
                uint64_t v214 = *((void *)a2 + 5);
                a1[4] = *((void *)a2 + 4);
                a1[5] = v214;
                a1[6] = *((void *)a2 + 6);
                uint64_t v215 = type metadata accessor for SearchLocation();
                uint64_t v216 = *(int *)(v215 + 32);
                v402 = (char *)a1 + v216;
                uint64_t v406 = v215;
                v217 = &a2[v216];
                uint64_t v395 = type metadata accessor for Location();
                id v218 = v398;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v217, 1, v395))
                {
                  uint64_t v219 = sub_10017DF08(&qword_100E639E8);
                  memcpy(v402, v217, *(void *)(*(void *)(v219 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v395 - 8) + 16))(v402, v217, v395);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v402, 0, 1, v395);
                }
                uint64_t v368 = *(int *)(v406 + 36);
                v369 = (char *)a1 + v368;
                v370 = &a2[v368];
                *(_OWORD *)v369 = *(_OWORD *)v370;
                v369[16] = v370[16];
                break;
              case 3u:
                *(_OWORD *)a1 = *(_OWORD *)a2;
                uint64_t v220 = *((void *)a2 + 3);
                a1[2] = *((void *)a2 + 2);
                a1[3] = v220;
                swift_bridgeObjectRetain();
                break;
              default:
                uint64_t v149 = type metadata accessor for Location();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v149 - 8) + 16))(a1, a2, v149);
                break;
            }
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            if (EnumCaseMultiPayload) {
              goto LABEL_99;
            }
            type metadata accessor for SavedLocation();
            if (swift_getEnumCaseMultiPayload() == 1) {
              uint64_t v94 = type metadata accessor for SavedLocation.Placeholder();
            }
            else {
              uint64_t v94 = type metadata accessor for Location();
            }
            (*(void (**)(uint64_t *, unsigned __int8 *))(*(void *)(v94 - 8) + 16))(a1, a2);
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_212;
        case 4u:
          uint64_t v84 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v84;
          swift_bridgeObjectRetain();
          goto LABEL_213;
        case 9u:
          unint64_t v95 = *((void *)a2 + 1);
          if (v95 >= 2)
          {
            *a1 = *(void *)a2;
            a1[1] = v95;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
          }
          goto LABEL_213;
        case 0xBu:
          uint64_t v33 = type metadata accessor for ConfiguredUnitsAction();
          int v96 = swift_getEnumCaseMultiPayload();
          if (v96 == 1)
          {
            uint64_t v150 = type metadata accessor for UnitConfiguration.Temperature();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v150))
            {
              uint64_t v151 = sub_10017DF08(&qword_100E6F620);
              memcpy(a1, a2, *(void *)(*(void *)(v151 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v150 - 8) + 16))(a1, a2, v150);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v150);
            }
          }
          else
          {
            if (v96) {
              goto LABEL_99;
            }
            uint64_t v97 = type metadata accessor for ConfiguredUnit();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v97 - 8) + 16))(a1, a2, v97);
          }
          break;
        default:
          goto LABEL_59;
      }
      goto LABEL_212;
    case 3u:
      uint64_t v7 = type metadata accessor for LocationsAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v8 = type metadata accessor for CurrentLocation();
          if (swift_getEnumCaseMultiPayload() > 2)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          }
          else
          {
            uint64_t v171 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v171 - 8) + 16))(a1, a2, v171);
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_140;
        case 1u:
          uint64_t v77 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v77 - 8) + 16))(a1, a2, v77);
          uint64_t v78 = sub_10017DF08(&qword_100E6F628);
          *((unsigned char *)a1 + *(int *)(v78 + 48)) = a2[*(int *)(v78 + 48)];
          goto LABEL_140;
        case 2u:
          uint64_t v79 = *(void *)a2;
          uint64_t v80 = *((void *)a2 + 1);
          *a1 = v79;
          a1[1] = v80;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_140;
        case 5u:
          *a1 = *(void *)a2;
          swift_bridgeObjectRetain();
          goto LABEL_140;
        case 6u:
          uint64_t v85 = *(void *)a2;
          uint64_t v86 = *((void *)a2 + 1);
          unsigned __int8 v87 = a2[16];
          sub_10015458C(v85, v86, v87);
          *a1 = v85;
          a1[1] = v86;
          *((unsigned char *)a1 + 16) = v87;
LABEL_140:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
          break;
      }
      goto LABEL_214;
    case 4u:
      uint64_t v26 = type metadata accessor for NotificationsAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v27 = type metadata accessor for LocationModel();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v27))
          {
            uint64_t v28 = type metadata accessor for NotificationLocation();
            memcpy(a1, a2, *(void *)(*(void *)(v28 - 8) + 64));
          }
          else
          {
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v27);
          }
          uint64_t v143 = *(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48);
          v144 = (char *)a1 + v143;
          v145 = &a2[v143];
          uint64_t v146 = type metadata accessor for URL();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v145, 1, v146))
          {
            uint64_t v147 = sub_10017DF08(&qword_100E749B0);
            memcpy(v144, v145, *(void *)(*(void *)(v147 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v146 - 8) + 16))(v144, v145, v146);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v144, 0, 1, v146);
          }
          goto LABEL_117;
        case 2u:
          uint64_t v98 = type metadata accessor for NotificationSubscription.Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v98 - 8) + 16))(a1, a2, v98);
          uint64_t v99 = *(int *)(sub_10017DF08(&qword_100E6F630) + 48);
          uint64_t v100 = (char *)a1 + v99;
          uint64_t v101 = &a2[v99];
          uint64_t v102 = type metadata accessor for NotificationSubscription.Kind();
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v102 - 8) + 16))(v100, v101, v102);
          goto LABEL_117;
        case 3u:
        case 4u:
          *a1 = *(void *)a2;
          swift_bridgeObjectRetain();
          goto LABEL_117;
        case 5u:
          uint64_t v103 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v103 - 8) + 16))(a1, a2, v103);
          uint64_t v104 = *(int *)(sub_10017DF08(&qword_100E6F638) + 48);
          uint64_t v105 = (char *)a1 + v104;
          uint64_t v106 = &a2[v104];
          uint64_t v107 = type metadata accessor for NotificationSubscription.Kind();
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v107 - 8) + 16))(v105, v106, v107);
LABEL_117:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v26 - 8) + 64));
          break;
      }
      goto LABEL_214;
    case 5u:
      uint64_t v14 = type metadata accessor for NotificationsOptInAction();
      int v29 = swift_getEnumCaseMultiPayload();
      switch(v29)
      {
        case 4:
          goto LABEL_13;
        case 3:
          *a1 = *(void *)a2;
          *((unsigned char *)a1 + 8) = a2[8];
          swift_bridgeObjectRetain();
          break;
        case 2:
          uint64_t v30 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
          uint64_t v31 = sub_10017DF08(&qword_100E6BBD8);
          *((unsigned char *)a1 + *(int *)(v31 + 48)) = a2[*(int *)(v31 + 48)];
          break;
        default:
          goto LABEL_59;
      }
      goto LABEL_213;
    case 6u:
      uint64_t v9 = type metadata accessor for ViewAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v10 = type metadata accessor for ListViewAction();
          int v11 = swift_getEnumCaseMultiPayload();
          if (v11 == 2) {
            goto LABEL_119;
          }
          if (v11) {
            goto LABEL_166;
          }
          uint64_t v12 = type metadata accessor for LocationModel();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
          uint64_t v13 = sub_10017DF08(&qword_100E6F640);
          *((unsigned char *)a1 + *(int *)(v13 + 48)) = a2[*(int *)(v13 + 48)];
          goto LABEL_206;
        case 1u:
          uint64_t v10 = type metadata accessor for LocationViewerViewAction();
          int v81 = swift_getEnumCaseMultiPayload();
          if (v81 == 2)
          {
LABEL_119:
            uint64_t v148 = type metadata accessor for Location.Identifier();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v148 - 8) + 16))(a1, a2, v148);
          }
          else if (v81 == 1)
          {
            uint64_t v172 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v172 - 8) + 16))(a1, a2, v172);
          }
          else
          {
            if (v81)
            {
LABEL_166:
              memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
              goto LABEL_207;
            }
            uint64_t v82 = type metadata accessor for LocationModel();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v82 - 8) + 16))(a1, a2, v82);
          }
LABEL_206:
          swift_storeEnumTagMultiPayload();
LABEL_207:
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          uint64_t v10 = type metadata accessor for SearchViewAction();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v83 = type metadata accessor for CodableError();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v83 - 8) + 16))(a1, a2, v83);
              goto LABEL_206;
            case 1u:
              *a1 = *(void *)a2;
              swift_bridgeObjectRetain();
              goto LABEL_206;
            case 2u:
              uint64_t v199 = *((void *)a2 + 1);
              *a1 = *(void *)a2;
              a1[1] = v199;
              swift_bridgeObjectRetain();
              goto LABEL_206;
            case 3u:
            case 6u:
              uint64_t v200 = type metadata accessor for Location();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v200 - 8) + 16))(a1, a2, v200);
              goto LABEL_206;
            case 4u:
              uint64_t v201 = type metadata accessor for LocationOfInterest();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v201 - 8) + 16))(a1, a2, v201);
              goto LABEL_206;
            case 5u:
              v203 = *(void **)a2;
              uint64_t v202 = *((void *)a2 + 1);
              *a1 = *(void *)a2;
              a1[1] = v202;
              uint64_t v204 = *((void *)a2 + 3);
              a1[2] = *((void *)a2 + 2);
              a1[3] = v204;
              uint64_t v205 = *((void *)a2 + 5);
              a1[4] = *((void *)a2 + 4);
              a1[5] = v205;
              a1[6] = *((void *)a2 + 6);
              uint64_t v206 = type metadata accessor for SearchLocation();
              uint64_t v207 = *(int *)(v206 + 32);
              v401 = (char *)a1 + v207;
              uint64_t v405 = v206;
              v397 = &a2[v207];
              uint64_t v208 = type metadata accessor for Location();
              id v209 = v203;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v397, 1, v208))
              {
                uint64_t v210 = sub_10017DF08(&qword_100E639E8);
                memcpy(v401, v397, *(void *)(*(void *)(v210 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v208 - 8) + 16))(v401, v397, v208);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v401, 0, 1, v208);
              }
              uint64_t v365 = *(int *)(v405 + 36);
              v366 = (char *)a1 + v365;
              v367 = &a2[v365];
              *(_OWORD *)v366 = *(_OWORD *)v367;
              v366[16] = v367[16];
              goto LABEL_206;
            default:
              goto LABEL_166;
          }
        case 4u:
          uint64_t v88 = type metadata accessor for InteractiveMapViewAction();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
            case 1u:
            case 2u:
            case 4u:
              uint64_t v198 = type metadata accessor for Location();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v198 - 8) + 16))(a1, a2, v198);
              goto LABEL_162;
            case 3u:
              uint64_t v197 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v197 - 8) + 16))(a1, a2, v197);
LABEL_162:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v88 - 8) + 64));
              break;
          }
          goto LABEL_207;
        case 5u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((unsigned char *)a1 + 16) = a2[16];
          *((unsigned char *)a1 + 17) = a2[17];
          *((unsigned char *)a1 + 18) = a2[18];
          uint64_t v89 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
          uint64_t v90 = (char *)a1 + v89;
          uint64_t v91 = &a2[v89];
          uint64_t v92 = type metadata accessor for DynamicTypeSize();
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v92 - 8) + 16))(v90, v91, v92);
          goto LABEL_207;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
          goto LABEL_214;
      }
      goto LABEL_214;
    case 7u:
      uint64_t v14 = type metadata accessor for ModalViewAction();
      int v32 = swift_getEnumCaseMultiPayload();
      if (v32 == 3)
      {
        uint64_t v43 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000006) != 0)
        {
          uint64_t v108 = *((void *)a2 + 1);
          uint64_t v109 = *((void *)a2 + 2);
          uint64_t v110 = *((void *)a2 + 3);
          uint64_t v111 = *((void *)a2 + 4);
          uint64_t v112 = *((void *)a2 + 7);
          uint64_t v389 = *((void *)a2 + 5);
          uint64_t v393 = *((void *)a2 + 8);
          uint64_t v396 = *((void *)a2 + 9);
          uint64_t v400 = *((void *)a2 + 10);
          uint64_t v404 = *((void *)a2 + 11);
          uint64_t v113 = *((void *)a2 + 6);
          sub_100274EDC(v43);
          *a1 = v43;
          a1[1] = v108;
          a1[2] = v109;
          a1[3] = v110;
          a1[4] = v111;
          a1[5] = v389;
          a1[6] = v113;
          a1[7] = v112;
          a1[8] = v393;
          a1[9] = v396;
          a1[10] = v400;
          a1[11] = v404;
        }
        else
        {
          memcpy(a1, a2, 0x60uLL);
        }
      }
      else
      {
        if (v32) {
          goto LABEL_59;
        }
        uint64_t v33 = type metadata accessor for LocationPreviewViewAction();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v34 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v34 - 8) + 16))(a1, a2, v34);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
LABEL_99:
          memcpy(a1, a2, *(void *)(*(void *)(v33 - 8) + 64));
        }
      }
      goto LABEL_213;
    case 8u:
      uint64_t v14 = type metadata accessor for LocationViewAction();
      int v35 = swift_getEnumCaseMultiPayload();
      if (v35 == 2)
      {
        uint64_t v55 = type metadata accessor for Location();
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v55 - 8) + 16))(a1, a2, v55);
        uint64_t v56 = *(int *)(sub_10017DF08(&qword_100E66450) + 48);
        uint64_t v57 = (char *)a1 + v56;
        uint64_t v58 = &a2[v56];
        uint64_t v59 = type metadata accessor for LocationOfInterest();
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
        uint64_t v60 = *(int *)(sub_10017DF08(&qword_100E66448) + 48);
        uint64_t v61 = (char *)a1 + v60;
        uint64_t v62 = &a2[v60];
        long long v63 = *((_OWORD *)v62 + 1);
        *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
        *((_OWORD *)v61 + 1) = v63;
        v61[32] = v62[32];
      }
      else if (v35 == 1)
      {
        uint64_t v64 = type metadata accessor for LocationComponentAction(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v65 = type metadata accessor for URL();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v65 - 8) + 16))(a1, a2, v65);
            uint64_t v66 = sub_10017DF08(&qword_100E66478);
            *((unsigned char *)a1 + *(int *)(v66 + 48)) = a2[*(int *)(v66 + 48)];
            goto LABEL_131;
          case 1u:
            uint64_t v152 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v152 - 8) + 16))(a1, a2, v152);
            goto LABEL_131;
          case 2u:
            uint64_t v153 = type metadata accessor for DetailCondition();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v153 - 8) + 16))(a1, a2, v153);
            uint64_t v154 = sub_10017DF08(&qword_100E66488);
            *((unsigned char *)a1 + *(int *)(v154 + 48)) = a2[*(int *)(v154 + 48)];
            goto LABEL_131;
          case 4u:
            *(unsigned char *)a1 = *a2;
            uint64_t v155 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
            v156 = (char *)a1 + v155;
            v157 = &a2[v155];
            uint64_t v158 = type metadata accessor for Location();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v158 - 8) + 16))(v156, v157, v158);
LABEL_131:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v64 - 8) + 64));
            break;
        }
        uint64_t v159 = sub_10017DF08(&qword_100E66458);
        uint64_t v160 = *(int *)(v159 + 48);
        v161 = (char *)a1 + v160;
        v162 = &a2[v160];
        long long v163 = *((_OWORD *)v162 + 1);
        *(_OWORD *)v161 = *(_OWORD *)v162;
        *((_OWORD *)v161 + 1) = v163;
        v161[32] = v162[32];
        uint64_t v164 = *(int *)(v159 + 64);
        v165 = (char *)a1 + v164;
        v166 = &a2[v164];
        uint64_t v167 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v166, 1, v167))
        {
          uint64_t v168 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v165, v166, *(void *)(*(void *)(v168 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v167 - 8) + 16))(v165, v166, v167);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v165, 0, 1, v167);
        }
      }
      else
      {
        if (v35) {
          goto LABEL_59;
        }
LABEL_36:
        uint64_t v36 = type metadata accessor for Location();
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v36 - 8) + 16))(a1, a2, v36);
      }
      goto LABEL_213;
    case 9u:
      type metadata accessor for WeatherDataAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v118 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v118;
          v119 = (uint64_t *)(a2 + 16);
          unint64_t v120 = *((void *)a2 + 3);
          swift_bridgeObjectRetain();
          if (v120 >= 0xE)
          {
            a1[2] = *v119;
            a1[3] = v120;
            swift_bridgeObjectRetain();
          }
          else
          {
            *((_OWORD *)a1 + 1) = *(_OWORD *)v119;
          }
          uint64_t v169 = *((void *)a2 + 5);
          a1[4] = *((void *)a2 + 4);
          a1[5] = v169;
          goto LABEL_137;
        case 3u:
        case 9u:
          uint64_t v67 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v67;
          uint64_t v68 = *((void *)a2 + 2);
          uint64_t v69 = *((void *)a2 + 3);
          a1[2] = v68;
          a1[3] = v69;
          swift_bridgeObjectRetain();
          goto LABEL_137;
        case 4u:
          uint64_t v121 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v121;
          swift_bridgeObjectRetain();
          v394 = (int *)sub_10017DF08(&qword_100E6BBC0);
          uint64_t v122 = v394[12];
          v123 = (uint64_t *)((char *)a1 + v122);
          v124 = &a2[v122];
          uint64_t v125 = *(void *)&a2[v122 + 8];
          void *v123 = *(void *)&a2[v122];
          v123[1] = v125;
          v126 = (int *)type metadata accessor for WeatherData(0);
          uint64_t v127 = v126[5];
          v128 = (char *)v123 + v127;
          v129 = (char *)&v124[v127];
          uint64_t v130 = type metadata accessor for Locale();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v129, 1, v130))
          {
            uint64_t v131 = sub_10017DF08(&qword_100E63730);
            memcpy(v128, v129, *(void *)(*(void *)(v131 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 16))(v128, v129, v130);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v128, 0, 1, v130);
          }
          uint64_t v173 = v126[6];
          v174 = (char *)v123 + v173;
          v175 = (char *)&v124[v173];
          uint64_t v176 = type metadata accessor for WeatherDataModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 16))(v174, v175, v176);
          uint64_t v177 = v126[7];
          v178 = (char *)v123 + v177;
          v179 = (char *)&v124[v177];
          uint64_t v180 = sub_10017DF08(&qword_100E63738);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v179, 1, v180))
          {
            uint64_t v181 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v178, v179, *(void *)(*(void *)(v181 - 8) + 64));
          }
          else
          {
            uint64_t v182 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 16))(v178, v179, v182);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v178, 0, 1, v180);
          }
          uint64_t v183 = v126[8];
          v184 = (void *)((char *)v123 + v183);
          v185 = (char *)&v124[v183];
          uint64_t v186 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          int v187 = swift_getEnumCaseMultiPayload();
          if (v187 == 1)
          {
            uint64_t v189 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v189 - 8) + 16))(v184, v185, v189);
            goto LABEL_153;
          }
          if (!v187)
          {
            uint64_t v188 = *((void *)v185 + 1);
            void *v184 = *(void *)v185;
            v184[1] = v188;
            swift_bridgeObjectRetain();
LABEL_153:
            swift_storeEnumTagMultiPayload();
            goto LABEL_155;
          }
          memcpy(v184, v185, *(void *)(*(void *)(v186 - 8) + 64));
LABEL_155:
          uint64_t v190 = v126[9];
          v191 = (char *)v123 + v190;
          v192 = (char *)&v124[v190];
          uint64_t v193 = type metadata accessor for WeatherDataOverrides();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v192, 1, v193))
          {
            uint64_t v194 = sub_10017DF08(&qword_100E63740);
            memcpy(v191, v192, *(void *)(*(void *)(v194 - 8) + 64));
          }
          else
          {
            uint64_t v195 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v192, 1, v195))
            {
              uint64_t v196 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v191, v192, *(void *)(*(void *)(v196 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 16))(v191, v192, v195);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v191, 0, 1, v195);
            }
            uint64_t v221 = *(int *)(v193 + 20);
            v222 = &v191[v221];
            v223 = &v192[v221];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v192[v221], 1, v195))
            {
              uint64_t v224 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v222, v223, *(void *)(*(void *)(v224 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 16))(v222, v223, v195);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v222, 0, 1, v195);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v191, 0, 1, v193);
          }
          uint64_t v225 = v394[16];
          v226 = (char *)a1 + v225;
          v227 = &a2[v225];
          uint64_t v228 = type metadata accessor for UUID();
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v228 - 8) + 16))(v226, v227, v228);
          uint64_t v229 = type metadata accessor for PreprocessedWeatherData();
          *(void *)&v226[*(int *)(v229 + 20)] = *(void *)&v227[*(int *)(v229 + 20)];
          v399 = (int *)v229;
          v403 = v227;
          uint64_t v230 = *(int *)(v229 + 24);
          v407 = v226;
          v231 = &v226[v230];
          v232 = (char *)&v227[v230];
          uint64_t v233 = *(void *)&v227[v230 + 8];
          *(void *)v231 = *(void *)&v227[v230];
          *((void *)v231 + 1) = v233;
          uint64_t v234 = *(void *)&v227[v230 + 24];
          *((void *)v231 + 2) = *(void *)&v227[v230 + 16];
          *((void *)v231 + 3) = v234;
          uint64_t v235 = *(void *)&v227[v230 + 32];
          uint64_t v236 = *((void *)v232 + 5);
          *((void *)v231 + 4) = v235;
          *((void *)v231 + 5) = v236;
          uint64_t v390 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
          uint64_t v237 = *(int *)(v390 + 28);
          v385 = &v231[v237];
          v238 = &v232[v237];
          uint64_t v239 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
          swift_bridgeObjectRetain();
          v240 = v238;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v238, 1, v239))
          {
            uint64_t v241 = sub_10017DF08(&qword_100E63750);
            memcpy(v385, v238, *(void *)(*(void *)(v241 - 8) + 64));
          }
          else
          {
            uint64_t v242 = *((void *)v238 + 1);
            *(void *)v385 = *v240;
            *((void *)v385 + 1) = v242;
            uint64_t v384 = v239;
            uint64_t v243 = *(int *)(v239 + 20);
            v244 = &v385[v243];
            v245 = (char *)v240 + v243;
            uint64_t v246 = type metadata accessor for TemperatureScaleConfiguration();
            v387 = *(void (**)(char *, char *, uint64_t))(*(void *)(v246 - 8) + 16);
            swift_bridgeObjectRetain();
            v387(v244, v245, v246);
            v247 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
            *(void *)&v244[v247[5]] = *(void *)&v245[v247[5]];
            *(void *)&v244[v247[6]] = *(void *)&v245[v247[6]];
            *(void *)&v244[v247[7]] = *(void *)&v245[v247[7]];
            uint64_t v248 = v247[8];
            v249 = &v244[v248];
            v250 = &v245[v248];
            uint64_t v252 = *(void *)v250;
            uint64_t v251 = *((void *)v250 + 1);
            *(void *)v249 = v252;
            *((void *)v249 + 1) = v251;
            v244[v247[9]] = v245[v247[9]];
            swift_bridgeObjectRetain();
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v385, 0, 1, v384);
          }
          uint64_t v253 = *(int *)(v390 + 32);
          v254 = &v231[v253];
          v255 = &v232[v253];
          uint64_t v256 = *((void *)v255 + 1);
          *(void *)v254 = *(void *)v255;
          *((void *)v254 + 1) = v256;
          uint64_t v257 = v399[7];
          v258 = &v407[v257];
          v259 = &v403[v257];
          *(void *)&v407[v257] = *(void *)&v403[v257];
          uint64_t v260 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
          v261 = &v258[v260];
          v262 = &v259[v260];
          uint64_t v263 = type metadata accessor for WeatherDescription();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v380 = v263;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v262, 1, v263))
          {
            uint64_t v264 = sub_10017DF08(&qword_100E63758);
            memcpy(v261, v262, *(void *)(*(void *)(v264 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v263 - 8) + 16))(v261, v262, v263);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v261, 0, 1, v263);
          }
          uint64_t v265 = v399[8];
          v266 = &v407[v265];
          v267 = &v403[v265];
          uint64_t v391 = *(void *)&v403[v265 + 8];
          *(void *)v266 = *(void *)&v403[v265];
          *((void *)v266 + 1) = v391;
          uint64_t v268 = *(void *)&v403[v265 + 24];
          *((void *)v266 + 2) = *(void *)&v403[v265 + 16];
          *((void *)v266 + 3) = v268;
          uint64_t v269 = *(void *)&v403[v265 + 40];
          *((void *)v266 + 4) = *(void *)&v403[v265 + 32];
          *((void *)v266 + 5) = v269;
          uint64_t v270 = *(void *)&v403[v265 + 56];
          *((void *)v266 + 6) = *(void *)&v403[v265 + 48];
          *((void *)v266 + 7) = v270;
          uint64_t v271 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
          v272 = &v266[v271];
          v377 = &v267[v271];
          uint64_t v273 = type metadata accessor for Date();
          v274 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v273 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v386 = v274;
          uint64_t v388 = v273;
          v274(v272, v377, v273);
          v275 = v272;
          uint64_t v276 = type metadata accessor for WeatherConditionBackgroundTimeData();
          uint64_t v277 = *(int *)(v276 + 20);
          v278 = &v272[v277];
          v279 = &v377[v277];
          uint64_t v280 = type metadata accessor for Elevation();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v279, 1, v280))
          {
            uint64_t v281 = sub_10017DF08(&qword_100E63760);
            memcpy(v278, v279, *(void *)(*(void *)(v281 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v280 - 8) + 16))(v278, v279, v280);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v278, 0, 1, v280);
          }
          uint64_t v282 = *(int *)(v276 + 24);
          v283 = &v275[v282];
          v284 = &v377[v282];
          uint64_t v285 = type metadata accessor for BackgroundMoonData();
          uint64_t v392 = v276;
          uint64_t v383 = v280;
          uint64_t v372 = v285;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v284, 1, v285))
          {
            uint64_t v286 = sub_10017DF08(&qword_100E63768);
            memcpy(v283, v284, *(void *)(*(void *)(v286 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v285 - 8) + 16))(v283, v284, v285);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v283, 0, 1, v285);
          }
          uint64_t v287 = v399[9];
          v288 = &v407[v287];
          v289 = &v403[v287];
          uint64_t v290 = *((void *)v289 + 1);
          *(void *)v288 = *(void *)v289;
          *((void *)v288 + 1) = v290;
          uint64_t v291 = *((void *)v289 + 3);
          *((void *)v288 + 2) = *((void *)v289 + 2);
          *((void *)v288 + 3) = v291;
          uint64_t v292 = *((void *)v289 + 5);
          *((void *)v288 + 4) = *((void *)v289 + 4);
          *((void *)v288 + 5) = v292;
          uint64_t v293 = *((void *)v289 + 7);
          *((void *)v288 + 6) = *((void *)v289 + 6);
          *((void *)v288 + 7) = v293;
          uint64_t v294 = *((void *)v289 + 9);
          *((void *)v288 + 8) = *((void *)v289 + 8);
          *((void *)v288 + 9) = v294;
          uint64_t v295 = *((void *)v289 + 11);
          *((void *)v288 + 10) = *((void *)v289 + 10);
          *((void *)v288 + 11) = v295;
          uint64_t v296 = *((void *)v289 + 13);
          *((void *)v288 + 12) = *((void *)v289 + 12);
          *((void *)v288 + 13) = v296;
          uint64_t v297 = v399[10];
          v375 = &v403[v297];
          v378 = &v407[v297];
          v374 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v380 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v374(v378, v375, v380);
          uint64_t v298 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
          v299 = &v378[v298];
          v300 = &v375[v298];
          uint64_t v301 = *((void *)v300 + 1);
          *(void *)v299 = *(void *)v300;
          *((void *)v299 + 1) = v301;
          uint64_t v302 = v399[11];
          v303 = &v407[v302];
          v304 = &v403[v302];
          uint64_t v305 = *((void *)v304 + 1);
          *(void *)v303 = *(void *)v304;
          *((void *)v303 + 1) = v305;
          uint64_t v306 = *((void *)v304 + 3);
          *((void *)v303 + 2) = *((void *)v304 + 2);
          *((void *)v303 + 3) = v306;
          uint64_t v307 = *((void *)v304 + 5);
          *((void *)v303 + 4) = *((void *)v304 + 4);
          *((void *)v303 + 5) = v307;
          uint64_t v308 = v399[12];
          v309 = &v407[v308];
          v310 = &v403[v308];
          uint64_t v311 = type metadata accessor for PressureTrend();
          v381 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v311 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v381(v309, v310, v311);
          v312 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
          uint64_t v313 = v312[5];
          v314 = &v309[v313];
          v315 = &v310[v313];
          uint64_t v316 = *((void *)v315 + 1);
          *(void *)v314 = *(void *)v315;
          *((void *)v314 + 1) = v316;
          uint64_t v317 = v312[6];
          v318 = &v309[v317];
          v319 = &v310[v317];
          uint64_t v382 = *((void *)v319 + 1);
          *(void *)v318 = *(void *)v319;
          *((void *)v318 + 1) = v382;
          uint64_t v320 = v312[7];
          v321 = &v309[v320];
          v322 = &v310[v320];
          uint64_t v379 = *((void *)v322 + 1);
          *(void *)v321 = *(void *)v322;
          *((void *)v321 + 1) = v379;
          *(void *)&v309[v312[8]] = *(void *)&v310[v312[8]];
          uint64_t v323 = v312[9];
          v324 = &v309[v323];
          v325 = &v310[v323];
          uint64_t v376 = *((void *)v325 + 1);
          *(void *)v324 = *(void *)v325;
          *((void *)v324 + 1) = v376;
          uint64_t v326 = v399[13];
          v327 = &v407[v326];
          v328 = &v403[v326];
          uint64_t v329 = *((void *)v328 + 1);
          *(void *)v327 = *(void *)v328;
          *((void *)v327 + 1) = v329;
          uint64_t v330 = *((void *)v328 + 3);
          *((void *)v327 + 2) = *((void *)v328 + 2);
          *((void *)v327 + 3) = v330;
          uint64_t v331 = *((void *)v328 + 5);
          *((void *)v327 + 4) = *((void *)v328 + 4);
          *((void *)v327 + 5) = v331;
          uint64_t v332 = *((void *)v328 + 7);
          *((void *)v327 + 6) = *((void *)v328 + 6);
          *((void *)v327 + 7) = v332;
          uint64_t v333 = *((void *)v328 + 9);
          *((void *)v327 + 8) = *((void *)v328 + 8);
          *((void *)v327 + 9) = v333;
          uint64_t v334 = *((void *)v328 + 11);
          *((void *)v327 + 10) = *((void *)v328 + 10);
          *((void *)v327 + 11) = v334;
          uint64_t v335 = *((void *)v328 + 13);
          *((void *)v327 + 12) = *((void *)v328 + 12);
          *((void *)v327 + 13) = v335;
          uint64_t v336 = *((void *)v328 + 15);
          *((void *)v327 + 14) = *((void *)v328 + 14);
          *((void *)v327 + 15) = v336;
          uint64_t v337 = *((void *)v328 + 17);
          *((void *)v327 + 16) = *((void *)v328 + 16);
          *((void *)v327 + 17) = v337;
          uint64_t v338 = *((void *)v328 + 19);
          *((void *)v327 + 18) = *((void *)v328 + 18);
          *((void *)v327 + 19) = v338;
          uint64_t v339 = *((void *)v328 + 21);
          *((void *)v327 + 20) = *((void *)v328 + 20);
          *((void *)v327 + 21) = v339;
          uint64_t v340 = *((void *)v328 + 23);
          *((void *)v327 + 22) = *((void *)v328 + 22);
          *((void *)v327 + 23) = v340;
          uint64_t v341 = *((void *)v328 + 25);
          *((void *)v327 + 24) = *((void *)v328 + 24);
          *((void *)v327 + 25) = v341;
          *((_OWORD *)v327 + 13) = *((_OWORD *)v328 + 13);
          *((void *)v327 + 28) = *((void *)v328 + 28);
          uint64_t v342 = v399[14];
          v343 = &v407[v342];
          v373 = &v403[v342];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v386(v343, v373, v388);
          uint64_t v344 = *(int *)(v392 + 20);
          v345 = &v343[v344];
          v346 = &v373[v344];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v373[v344], 1, v383))
          {
            uint64_t v347 = sub_10017DF08(&qword_100E63760);
            memcpy(v345, v346, *(void *)(*(void *)(v347 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v383 - 8) + 16))(v345, v346, v383);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v345, 0, 1, v383);
          }
          uint64_t v348 = *(int *)(v392 + 24);
          v349 = &v343[v348];
          v350 = &v373[v348];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v373[v348], 1, v372))
          {
            uint64_t v351 = sub_10017DF08(&qword_100E63768);
            memcpy(v349, v350, *(void *)(*(void *)(v351 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v372 - 8) + 16))(v349, v350, v372);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v349, 0, 1, v372);
          }
          uint64_t v352 = v399[15];
          v353 = &v407[v352];
          v354 = &v403[v352];
          uint64_t v355 = *((void *)v354 + 1);
          *(void *)v353 = *(void *)v354;
          *((void *)v353 + 1) = v355;
          uint64_t v356 = *((void *)v354 + 3);
          *((void *)v353 + 2) = *((void *)v354 + 2);
          *((void *)v353 + 3) = v356;
          uint64_t v357 = *((void *)v354 + 5);
          *((void *)v353 + 4) = *((void *)v354 + 4);
          *((void *)v353 + 5) = v357;
          uint64_t v358 = *((void *)v354 + 7);
          *((void *)v353 + 6) = *((void *)v354 + 6);
          *((void *)v353 + 7) = v358;
          uint64_t v359 = *((void *)v354 + 9);
          *((void *)v353 + 8) = *((void *)v354 + 8);
          *((void *)v353 + 9) = v359;
          uint64_t v360 = *((void *)v354 + 11);
          *((void *)v353 + 10) = *((void *)v354 + 10);
          *((void *)v353 + 11) = v360;
          uint64_t v361 = *((void *)v354 + 13);
          *((void *)v353 + 12) = *((void *)v354 + 12);
          *((void *)v353 + 13) = v361;
          uint64_t v362 = v394[20];
          v408 = (uint64_t *)((char *)a1 + v362);
          v363 = &a2[v362];
          type metadata accessor for NewsDataModel();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            void *v408 = *(void *)v363;
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v364 = type metadata accessor for News();
            (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v364 - 8) + 16))(v408, v363, v364);
          }
LABEL_212:
          swift_storeEnumTagMultiPayload();
LABEL_213:
          swift_storeEnumTagMultiPayload();
LABEL_214:
          swift_storeEnumTagMultiPayload();
          return a1;
        case 5u:
          uint64_t v132 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v132;
          swift_bridgeObjectRetain();
          uint64_t v133 = *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
          v134 = (uint64_t *)((char *)a1 + v133);
          v135 = &a2[v133];
          type metadata accessor for NewsDataModel();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            void *v134 = *(void *)v135;
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v170 = type metadata accessor for News();
            (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v170 - 8) + 16))(v134, v135, v170);
          }
          goto LABEL_212;
        case 6u:
          uint64_t v136 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v136;
          swift_bridgeObjectRetain();
          uint64_t v137 = *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
          v138 = (char *)a1 + v137;
          v139 = &a2[v137];
          uint64_t v140 = type metadata accessor for AvailableDataSets();
          goto LABEL_111;
        case 8u:
          uint64_t v141 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v141;
          swift_bridgeObjectRetain();
          uint64_t v142 = *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
          v138 = (char *)a1 + v142;
          v139 = &a2[v142];
          uint64_t v140 = type metadata accessor for WeatherStatisticsModel();
LABEL_111:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v140 - 8) + 16))(v138, v139, v140);
          goto LABEL_213;
        default:
          uint64_t v37 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v37;
LABEL_137:
          swift_bridgeObjectRetain();
          goto LABEL_213;
      }
    case 0xAu:
      uint64_t v14 = type metadata accessor for DebugAction();
      int v38 = swift_getEnumCaseMultiPayload();
      if (v38 == 1) {
        goto LABEL_36;
      }
      if (v38) {
        goto LABEL_59;
      }
      uint64_t v39 = type metadata accessor for WeatherCondition();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v39))
      {
        uint64_t v40 = sub_10017DF08(&qword_100E63A50);
        memcpy(a1, a2, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v39 - 8) + 16))(a1, a2, v39);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v39);
      }
      uint64_t v114 = *(int *)(sub_10017DF08(&qword_100E6F648) + 48);
      v115 = (uint64_t *)((char *)a1 + v114);
      uint64_t v116 = &a2[v114];
      uint64_t v117 = *((void *)v116 + 1);
      void *v115 = *(void *)v116;
      v115[1] = v117;
      swift_bridgeObjectRetain();
      goto LABEL_213;
    case 0xBu:
      uint64_t v14 = type metadata accessor for ConditionDetailViewAction();
      int v15 = swift_getEnumCaseMultiPayload();
      switch(v15)
      {
        case 2:
          uint64_t v44 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v44;
          uint64_t v45 = (int *)type metadata accessor for DetailChartSelection();
          uint64_t v46 = v45[5];
          uint64_t v47 = (char *)a1 + v46;
          uint64_t v48 = &a2[v46];
          uint64_t v49 = type metadata accessor for Date();
          uint64_t v50 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v49 - 8) + 16);
          swift_bridgeObjectRetain();
          v50(v47, v48, v49);
          v50((char *)a1 + v45[6], &a2[v45[6]], v49);
          v50((char *)a1 + v45[7], &a2[v45[7]], v49);
          *(uint64_t *)((char *)a1 + v45[8]) = *(void *)&a2[v45[8]];
          uint64_t v51 = v45[9];
          uint64_t v52 = (char *)a1 + v51;
          uint64_t v53 = &a2[v51];
          v52[8] = v53[8];
          *(void *)uint64_t v52 = *(void *)v53;
          goto LABEL_213;
        case 1:
          uint64_t v54 = type metadata accessor for DetailCondition();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v54 - 8) + 16))(a1, a2, v54);
          goto LABEL_213;
        case 0:
LABEL_13:
          uint64_t v16 = type metadata accessor for Date();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
          goto LABEL_213;
      }
LABEL_59:
      memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
      goto LABEL_214;
    case 0xDu:
      uint64_t v14 = type metadata accessor for MoonDetailViewAction();
      int v17 = swift_getEnumCaseMultiPayload();
      if (v17 == 1) {
        goto LABEL_13;
      }
      if (v17) {
        goto LABEL_59;
      }
      type metadata accessor for MoonDetailSelectedDate();
      swift_getEnumCaseMultiPayload();
      uint64_t v18 = type metadata accessor for Date();
      (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
      swift_storeEnumTagMultiPayload();
      goto LABEL_213;
    case 0xEu:
      uint64_t v14 = type metadata accessor for AveragesDetailViewAction();
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_59;
      }
      *a1 = *(void *)a2;
      uint64_t v19 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      uint64_t v20 = v19[5];
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = &a2[v20];
      uint64_t v23 = type metadata accessor for Date();
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
      *(uint64_t *)((char *)a1 + v19[6]) = *(void *)&a2[v19[6]];
      *(uint64_t *)((char *)a1 + v19[7]) = *(void *)&a2[v19[7]];
      swift_storeEnumTagMultiPayload();
      goto LABEL_214;
    case 0x10u:
      uint64_t v24 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v24;
      swift_bridgeObjectRetain();
      goto LABEL_214;
    case 0x11u:
      uint64_t v41 = type metadata accessor for PerformanceTestAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v42 = type metadata accessor for DetailCondition();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v42 - 8) + 16))(a1, a2, v42);
          goto LABEL_69;
        case 2u:
          uint64_t v70 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v70 - 8) + 16))(a1, a2, v70);
          goto LABEL_69;
        case 3u:
          *a1 = *(void *)a2;
          uint64_t v71 = sub_10017DF08((uint64_t *)&unk_100EA0250);
          uint64_t v72 = *(int *)(v71 + 48);
          uint64_t v73 = (char *)a1 + v72;
          uint64_t v74 = &a2[v72];
          uint64_t v75 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v75 - 8) + 16))(v73, v74, v75);
          *((unsigned char *)a1 + *(int *)(v71 + 64)) = a2[*(int *)(v71 + 64)];
          goto LABEL_69;
        case 4u:
          uint64_t v76 = type metadata accessor for WeatherCondition();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v76 - 8) + 16))(a1, a2, v76);
LABEL_69:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v41 - 8) + 64));
          break;
      }
      goto LABEL_214;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
  }
}

uint64_t type metadata accessor for WeatherDataAction()
{
  uint64_t result = qword_100EB70A8;
  if (!qword_100EB70A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for ModalViewState(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100EA25E8);
}

uint64_t type metadata accessor for ViewState(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100EA47A0);
}

uint64_t type metadata accessor for WeatherData(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100EA9F98);
}

uint64_t type metadata accessor for TimeState()
{
  uint64_t result = qword_100EA4260;
  if (!qword_100EA4260) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for NewsDataModel()
{
  uint64_t result = qword_100EB6E38;
  if (!qword_100EB6E38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for EnvironmentState()
{
  uint64_t result = qword_100EA4490;
  if (!qword_100EA4490) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for NotificationsOptInState()
{
  uint64_t result = qword_100E8D9E0;
  if (!qword_100E8D9E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for WeatherData.WeatherStatisticsState(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EA9E88);
}

uint64_t type metadata accessor for WeatherDataOverrides()
{
  uint64_t result = qword_100E80020;
  if (!qword_100E80020) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10016A4F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100577C0C);
}

uint64_t type metadata accessor for WeatherConditionBackgroundTimeData()
{
  uint64_t result = qword_100E86B90;
  if (!qword_100E86B90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for AppConfigurationState()
{
  uint64_t result = qword_100EA5548;
  if (!qword_100EA5548) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for PreprocessedWeatherData()
{
  uint64_t result = qword_100EAE800;
  if (!qword_100EAE800) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for EnvironmentAction()
{
  uint64_t result = qword_100E89AE8;
  if (!qword_100E89AE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E76168);
}

uint64_t sub_10016A648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10042B2BC);
}

uint64_t type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E76208);
}

uint64_t type metadata accessor for HourlyForecastComponentPreprocessedDataModel()
{
  uint64_t result = qword_100E794A0;
  if (!qword_100E794A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FeelsLikeComponentPreprocessedDataModel()
{
  uint64_t result = qword_100E9CAF0;
  if (!qword_100E9CAF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for PressureComponentPreprocessedDataModel()
{
  uint64_t result = qword_100E747F8;
  if (!qword_100E747F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for UVIndexComponentPreprocessedDataModel()
{
  uint64_t result = qword_100E6E3F0;
  if (!qword_100E6E3F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for ListPreprocessedDataModel()
{
  uint64_t result = qword_100E8C938;
  if (!qword_100E8C938) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10016A7E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B59D74);
}

uint64_t sub_10016A7F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10090103C);
}

uint64_t type metadata accessor for WeatherData.CachingState(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100EA9F30);
}

uint64_t sub_10016A82C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10099F720);
}

uint64_t type metadata accessor for NotificationsOptInAction()
{
  uint64_t result = qword_100EAA2B8;
  if (!qword_100EAA2B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10016A888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006E36E8);
}

uint64_t sub_10016A89C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100983E8C);
}

uint64_t sub_10016A8B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10098C794);
}

uint64_t type metadata accessor for LocationsAction()
{
  uint64_t result = qword_100E91C38;
  if (!qword_100E91C38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_10016A90C(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      uint64_t v8 = a2 + 2;
      unint64_t v9 = a2[3];
      swift_bridgeObjectRetain();
      if (v9 >= 0xE)
      {
        a1[2] = *v8;
        a1[3] = v9;
        swift_bridgeObjectRetain();
      }
      else
      {
        *((_OWORD *)a1 + 1) = *(_OWORD *)v8;
      }
      uint64_t v33 = a2[5];
      a1[4] = a2[4];
      a1[5] = v33;
      goto LABEL_15;
    case 3u:
    case 9u:
      uint64_t v5 = a2[1];
      *a1 = *a2;
      a1[1] = v5;
      uint64_t v6 = a2[3];
      a1[2] = a2[2];
      a1[3] = v6;
      swift_bridgeObjectRetain();
      goto LABEL_15;
    case 4u:
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_10017DF08(&qword_100E6BBC0);
      uint64_t v12 = *(int *)(v11 + 48);
      uint64_t v13 = (void *)((char *)a1 + v12);
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = *(void *)((char *)a2 + v12 + 8);
      *uint64_t v13 = *(void *)((char *)a2 + v12);
      v13[1] = v15;
      uint64_t v16 = (int *)type metadata accessor for WeatherData(0);
      uint64_t v17 = v16[5];
      uint64_t v18 = (char *)v13 + v17;
      uint64_t v19 = &v14[v17];
      uint64_t v20 = type metadata accessor for Locale();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
      {
        uint64_t v21 = sub_10017DF08(&qword_100E63730);
        memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
      }
      uint64_t v35 = v16[6];
      uint64_t v36 = (char *)v13 + v35;
      uint64_t v37 = &v14[v35];
      uint64_t v38 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
      uint64_t v39 = v16[7];
      uint64_t v40 = (char *)v13 + v39;
      uint64_t v41 = &v14[v39];
      uint64_t v42 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v42))
      {
        uint64_t v43 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        uint64_t v44 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v40, v41, v44);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v42);
      }
      uint64_t v45 = v16[8];
      uint64_t v46 = (void *)((char *)v13 + v45);
      uint64_t v47 = &v14[v45];
      uint64_t v48 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v51 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v46, v47, v51);
        goto LABEL_25;
      }
      if (!EnumCaseMultiPayload)
      {
        uint64_t v50 = *((void *)v47 + 1);
        *uint64_t v46 = *(void *)v47;
        v46[1] = v50;
        swift_bridgeObjectRetain();
LABEL_25:
        swift_storeEnumTagMultiPayload();
        goto LABEL_27;
      }
      memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
LABEL_27:
      uint64_t v52 = v16[9];
      uint64_t v53 = (char *)v13 + v52;
      uint64_t v54 = &v14[v52];
      uint64_t v55 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v55))
      {
        uint64_t v56 = sub_10017DF08(&qword_100E63740);
        memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        uint64_t v57 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v57))
        {
          uint64_t v58 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v53, v54, *(void *)(*(void *)(v58 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v53, v54, v57);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v57);
        }
        uint64_t v59 = *(int *)(v55 + 20);
        uint64_t v60 = &v53[v59];
        uint64_t v61 = &v54[v59];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v54[v59], 1, v57))
        {
          uint64_t v62 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v60, v61, v57);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v57);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v55);
      }
      uint64_t v224 = v11;
      uint64_t v63 = *(int *)(v11 + 64);
      uint64_t v64 = (char *)a1 + v63;
      uint64_t v65 = (char *)a2 + v63;
      uint64_t v66 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16))(v64, v65, v66);
      uint64_t v67 = type metadata accessor for PreprocessedWeatherData();
      *(void *)&v64[*(int *)(v67 + 20)] = *(void *)&v65[*(int *)(v67 + 20)];
      uint64_t v225 = (int *)v67;
      v226 = v65;
      uint64_t v68 = *(int *)(v67 + 24);
      v227 = v64;
      uint64_t v69 = &v64[v68];
      uint64_t v70 = &v65[v68];
      uint64_t v71 = *(void *)&v65[v68];
      uint64_t v72 = *((void *)v70 + 1);
      *(void *)uint64_t v69 = v71;
      *((void *)v69 + 1) = v72;
      uint64_t v73 = *((void *)v70 + 3);
      *((void *)v69 + 2) = *((void *)v70 + 2);
      *((void *)v69 + 3) = v73;
      uint64_t v74 = *((void *)v70 + 5);
      *((void *)v69 + 4) = *((void *)v70 + 4);
      *((void *)v69 + 5) = v74;
      uint64_t v75 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
      uint64_t v76 = *(int *)(v75 + 28);
      __dst = &v69[v76];
      uint64_t v222 = v75;
      uint64_t v77 = &v70[v76];
      uint64_t v78 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v77, 1, v78))
      {
        uint64_t v79 = sub_10017DF08(&qword_100E63750);
        memcpy(__dst, v77, *(void *)(*(void *)(v79 - 8) + 64));
      }
      else
      {
        uint64_t v80 = *((void *)v77 + 1);
        *(void *)__dst = *(void *)v77;
        *((void *)__dst + 1) = v80;
        uint64_t v81 = *(int *)(v78 + 20);
        uint64_t v82 = &__dst[v81];
        uint64_t v83 = &v77[v81];
        uint64_t v84 = type metadata accessor for TemperatureScaleConfiguration();
        id v218 = *(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16);
        swift_bridgeObjectRetain();
        v218(v82, v83, v84);
        uint64_t v85 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        *(void *)&v82[v85[5]] = *(void *)&v83[v85[5]];
        *(void *)&v82[v85[6]] = *(void *)&v83[v85[6]];
        *(void *)&v82[v85[7]] = *(void *)&v83[v85[7]];
        uint64_t v86 = v85[8];
        unsigned __int8 v87 = &v82[v86];
        uint64_t v88 = &v83[v86];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        *(void *)unsigned __int8 v87 = v90;
        *((void *)v87 + 1) = v89;
        v82[v85[9]] = v83[v85[9]];
        swift_bridgeObjectRetain();
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v78);
      }
      uint64_t v91 = *(int *)(v222 + 32);
      uint64_t v92 = &v69[v91];
      long long v93 = &v70[v91];
      uint64_t v94 = *((void *)v93 + 1);
      *(void *)uint64_t v92 = *(void *)v93;
      *((void *)v92 + 1) = v94;
      uint64_t v95 = v225[7];
      int v96 = &v227[v95];
      uint64_t v97 = &v226[v95];
      *(void *)&v227[v95] = *(void *)&v226[v95];
      uint64_t v98 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
      uint64_t v99 = &v96[v98];
      uint64_t v100 = &v97[v98];
      uint64_t v101 = type metadata accessor for WeatherDescription();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v215 = v101;
      uint64_t v208 = a1;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v100, 1, v101))
      {
        uint64_t v102 = sub_10017DF08(&qword_100E63758);
        memcpy(v99, v100, *(void *)(*(void *)(v102 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16))(v99, v100, v101);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v99, 0, 1, v101);
      }
      uint64_t v103 = v225[8];
      uint64_t v104 = &v227[v103];
      uint64_t v105 = &v226[v103];
      uint64_t v106 = *(void *)&v226[v103 + 8];
      *(void *)uint64_t v104 = *(void *)&v226[v103];
      *((void *)v104 + 1) = v106;
      uint64_t v107 = *(void *)&v226[v103 + 24];
      *((void *)v104 + 2) = *(void *)&v226[v103 + 16];
      *((void *)v104 + 3) = v107;
      uint64_t v108 = *(void *)&v226[v103 + 40];
      *((void *)v104 + 4) = *(void *)&v226[v103 + 32];
      *((void *)v104 + 5) = v108;
      uint64_t v109 = *(void *)&v226[v103 + 56];
      *((void *)v104 + 6) = *(void *)&v226[v103 + 48];
      *((void *)v104 + 7) = v109;
      uint64_t v110 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
      uint64_t v111 = &v104[v110];
      uint64_t v112 = &v105[v110];
      uint64_t v113 = type metadata accessor for Date();
      uint64_t v114 = *(void (**)(char *, char *, void *))(*(void *)(v113 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v219 = v114;
      __dsta = (void *)v113;
      v114(v111, v112, (void *)v113);
      uint64_t v115 = type metadata accessor for WeatherConditionBackgroundTimeData();
      uint64_t v116 = *(int *)(v115 + 20);
      uint64_t v117 = &v111[v116];
      uint64_t v118 = &v112[v116];
      uint64_t v119 = type metadata accessor for Elevation();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v118, 1, v119))
      {
        uint64_t v120 = sub_10017DF08(&qword_100E63760);
        memcpy(v117, v118, *(void *)(*(void *)(v120 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 16))(v117, v118, v119);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v117, 0, 1, v119);
      }
      uint64_t v121 = *(int *)(v115 + 24);
      uint64_t v122 = &v111[v121];
      v123 = &v112[v121];
      uint64_t v124 = type metadata accessor for BackgroundMoonData();
      uint64_t v209 = v124;
      uint64_t v210 = a2;
      uint64_t v223 = v115;
      uint64_t v217 = v119;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v123, 1, v124))
      {
        uint64_t v125 = sub_10017DF08(&qword_100E63768);
        memcpy(v122, v123, *(void *)(*(void *)(v125 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 16))(v122, v123, v124);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v122, 0, 1, v124);
      }
      a1 = v208;
      uint64_t v126 = v225[9];
      uint64_t v127 = &v227[v126];
      v128 = &v226[v126];
      uint64_t v129 = *((void *)v128 + 1);
      *(void *)uint64_t v127 = *(void *)v128;
      *((void *)v127 + 1) = v129;
      uint64_t v130 = *((void *)v128 + 3);
      *((void *)v127 + 2) = *((void *)v128 + 2);
      *((void *)v127 + 3) = v130;
      uint64_t v131 = *((void *)v128 + 5);
      *((void *)v127 + 4) = *((void *)v128 + 4);
      *((void *)v127 + 5) = v131;
      uint64_t v132 = *((void *)v128 + 7);
      *((void *)v127 + 6) = *((void *)v128 + 6);
      *((void *)v127 + 7) = v132;
      uint64_t v133 = *((void *)v128 + 9);
      *((void *)v127 + 8) = *((void *)v128 + 8);
      *((void *)v127 + 9) = v133;
      uint64_t v134 = *((void *)v128 + 11);
      *((void *)v127 + 10) = *((void *)v128 + 10);
      *((void *)v127 + 11) = v134;
      uint64_t v135 = *((void *)v128 + 13);
      *((void *)v127 + 12) = *((void *)v128 + 12);
      *((void *)v127 + 13) = v135;
      uint64_t v136 = v225[10];
      uint64_t v137 = &v227[v136];
      v138 = &v226[v136];
      uint64_t v213 = *(void (**)(char *, char *, uint64_t))(*(void *)(v215 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v213(v137, v138, v215);
      uint64_t v139 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
      uint64_t v140 = &v137[v139];
      uint64_t v141 = &v138[v139];
      uint64_t v142 = *((void *)v141 + 1);
      *(void *)uint64_t v140 = *(void *)v141;
      *((void *)v140 + 1) = v142;
      uint64_t v143 = v225[11];
      v144 = &v227[v143];
      v145 = &v226[v143];
      uint64_t v146 = *((void *)v145 + 1);
      *(void *)v144 = *(void *)v145;
      *((void *)v144 + 1) = v146;
      uint64_t v147 = *((void *)v145 + 3);
      *((void *)v144 + 2) = *((void *)v145 + 2);
      *((void *)v144 + 3) = v147;
      uint64_t v148 = *((void *)v145 + 5);
      *((void *)v144 + 4) = *((void *)v145 + 4);
      *((void *)v144 + 5) = v148;
      uint64_t v149 = v225[12];
      uint64_t v150 = &v227[v149];
      uint64_t v151 = &v226[v149];
      uint64_t v152 = type metadata accessor for PressureTrend();
      uint64_t v153 = *(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v153(v150, v151, v152);
      uint64_t v154 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
      uint64_t v155 = v154[5];
      v156 = &v150[v155];
      v157 = &v151[v155];
      uint64_t v158 = *((void *)v157 + 1);
      *(void *)v156 = *(void *)v157;
      *((void *)v156 + 1) = v158;
      uint64_t v159 = v154[6];
      uint64_t v160 = &v150[v159];
      v161 = &v151[v159];
      uint64_t v216 = *((void *)v161 + 1);
      *(void *)uint64_t v160 = *(void *)v161;
      *((void *)v160 + 1) = v216;
      uint64_t v162 = v154[7];
      long long v163 = &v150[v162];
      uint64_t v164 = &v151[v162];
      uint64_t v214 = *((void *)v164 + 1);
      *(void *)long long v163 = *(void *)v164;
      *((void *)v163 + 1) = v214;
      *(void *)&v150[v154[8]] = *(void *)&v151[v154[8]];
      uint64_t v165 = v154[9];
      v166 = &v150[v165];
      uint64_t v167 = &v151[v165];
      uint64_t v212 = *((void *)v167 + 1);
      *(void *)v166 = *(void *)v167;
      *((void *)v166 + 1) = v212;
      uint64_t v168 = v225[13];
      uint64_t v169 = &v227[v168];
      uint64_t v170 = &v226[v168];
      uint64_t v171 = *((void *)v170 + 1);
      *(void *)uint64_t v169 = *(void *)v170;
      *((void *)v169 + 1) = v171;
      uint64_t v172 = *((void *)v170 + 3);
      *((void *)v169 + 2) = *((void *)v170 + 2);
      *((void *)v169 + 3) = v172;
      uint64_t v173 = *((void *)v170 + 5);
      *((void *)v169 + 4) = *((void *)v170 + 4);
      *((void *)v169 + 5) = v173;
      uint64_t v174 = *((void *)v170 + 7);
      *((void *)v169 + 6) = *((void *)v170 + 6);
      *((void *)v169 + 7) = v174;
      uint64_t v175 = *((void *)v170 + 9);
      *((void *)v169 + 8) = *((void *)v170 + 8);
      *((void *)v169 + 9) = v175;
      uint64_t v176 = *((void *)v170 + 11);
      *((void *)v169 + 10) = *((void *)v170 + 10);
      *((void *)v169 + 11) = v176;
      uint64_t v177 = *((void *)v170 + 13);
      *((void *)v169 + 12) = *((void *)v170 + 12);
      *((void *)v169 + 13) = v177;
      uint64_t v178 = *((void *)v170 + 15);
      *((void *)v169 + 14) = *((void *)v170 + 14);
      *((void *)v169 + 15) = v178;
      uint64_t v179 = *((void *)v170 + 17);
      *((void *)v169 + 16) = *((void *)v170 + 16);
      *((void *)v169 + 17) = v179;
      uint64_t v180 = *((void *)v170 + 19);
      *((void *)v169 + 18) = *((void *)v170 + 18);
      *((void *)v169 + 19) = v180;
      uint64_t v181 = *((void *)v170 + 21);
      *((void *)v169 + 20) = *((void *)v170 + 20);
      *((void *)v169 + 21) = v181;
      uint64_t v182 = *((void *)v170 + 23);
      *((void *)v169 + 22) = *((void *)v170 + 22);
      *((void *)v169 + 23) = v182;
      uint64_t v183 = *((void *)v170 + 25);
      *((void *)v169 + 24) = *((void *)v170 + 24);
      *((void *)v169 + 25) = v183;
      *((_OWORD *)v169 + 13) = *((_OWORD *)v170 + 13);
      *((void *)v169 + 28) = *((void *)v170 + 28);
      uint64_t v184 = v225[14];
      uint64_t v211 = &v227[v184];
      v185 = &v226[v184];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v219(v211, v185, __dsta);
      uint64_t v186 = *(int *)(v223 + 20);
      int v187 = &v211[v186];
      uint64_t v188 = &v185[v186];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v185[v186], 1, v217))
      {
        uint64_t v189 = sub_10017DF08(&qword_100E63760);
        memcpy(v187, v188, *(void *)(*(void *)(v189 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v217 - 8) + 16))(v187, v188, v217);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v187, 0, 1, v217);
      }
      uint64_t v190 = *(int *)(v223 + 24);
      v191 = &v211[v190];
      v192 = &v185[v190];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v185[v190], 1, v209))
      {
        uint64_t v193 = sub_10017DF08(&qword_100E63768);
        memcpy(v191, v192, *(void *)(*(void *)(v193 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v209 - 8) + 16))(v191, v192, v209);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v191, 0, 1, v209);
      }
      uint64_t v194 = v225[15];
      uint64_t v195 = &v227[v194];
      uint64_t v196 = &v226[v194];
      uint64_t v197 = *((void *)v196 + 1);
      *(void *)uint64_t v195 = *(void *)v196;
      *((void *)v195 + 1) = v197;
      uint64_t v198 = *((void *)v196 + 3);
      *((void *)v195 + 2) = *((void *)v196 + 2);
      *((void *)v195 + 3) = v198;
      uint64_t v199 = *((void *)v196 + 5);
      *((void *)v195 + 4) = *((void *)v196 + 4);
      *((void *)v195 + 5) = v199;
      uint64_t v200 = *((void *)v196 + 7);
      *((void *)v195 + 6) = *((void *)v196 + 6);
      *((void *)v195 + 7) = v200;
      uint64_t v201 = *((void *)v196 + 9);
      *((void *)v195 + 8) = *((void *)v196 + 8);
      *((void *)v195 + 9) = v201;
      uint64_t v202 = *((void *)v196 + 11);
      *((void *)v195 + 10) = *((void *)v196 + 10);
      *((void *)v195 + 11) = v202;
      uint64_t v203 = *((void *)v196 + 13);
      *((void *)v195 + 12) = *((void *)v196 + 12);
      *((void *)v195 + 13) = v203;
      uint64_t v204 = *(int *)(v224 + 80);
      uint64_t v228 = (void *)((char *)v208 + v204);
      uint64_t v205 = (void *)((char *)v210 + v204);
      type metadata accessor for NewsDataModel();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *uint64_t v228 = *v205;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v206 = type metadata accessor for News();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v206 - 8) + 16))(v228, v205, v206);
      }
LABEL_57:
      swift_storeEnumTagMultiPayload();
LABEL_58:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 5u:
      uint64_t v22 = a2[1];
      *a1 = *a2;
      a1[1] = v22;
      swift_bridgeObjectRetain();
      uint64_t v23 = *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
      uint64_t v24 = (void *)((char *)a1 + v23);
      uint64_t v25 = (void *)((char *)a2 + v23);
      type metadata accessor for NewsDataModel();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *uint64_t v24 = *v25;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v34 = type metadata accessor for News();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 16))(v24, v25, v34);
      }
      goto LABEL_57;
    case 6u:
      uint64_t v26 = a2[1];
      *a1 = *a2;
      a1[1] = v26;
      swift_bridgeObjectRetain();
      uint64_t v27 = *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
      uint64_t v28 = (char *)a1 + v27;
      int v29 = (char *)a2 + v27;
      uint64_t v30 = type metadata accessor for AvailableDataSets();
      goto LABEL_12;
    case 8u:
      uint64_t v31 = a2[1];
      *a1 = *a2;
      a1[1] = v31;
      swift_bridgeObjectRetain();
      uint64_t v32 = *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
      uint64_t v28 = (char *)a1 + v32;
      int v29 = (char *)a2 + v32;
      uint64_t v30 = type metadata accessor for WeatherStatisticsModel();
LABEL_12:
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      goto LABEL_58;
    default:
      uint64_t v4 = a2[1];
      *a1 = *a2;
      a1[1] = v4;
LABEL_15:
      swift_bridgeObjectRetain();
      goto LABEL_58;
  }
}

uint64_t sub_10016BA54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10042B338);
}

uint64_t sub_10016BA68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A20038);
}

uint64_t type metadata accessor for NotificationsAction()
{
  uint64_t result = qword_100E86968;
  if (!qword_100E86968) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void **sub_10016BAC4(void **a1, void **a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for PreviewLocation();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v21 = type metadata accessor for LocationOfInterest();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
          break;
        case 2u:
          uint64_t v23 = *a2;
          uint64_t v22 = a2[1];
          *a1 = *a2;
          a1[1] = v22;
          uint64_t v24 = a2[3];
          a1[2] = a2[2];
          a1[3] = v24;
          uint64_t v25 = a2[5];
          a1[4] = a2[4];
          a1[5] = v25;
          a1[6] = a2[6];
          uint64_t v26 = type metadata accessor for SearchLocation();
          uint64_t v27 = *(int *)(v26 + 32);
          __dst = (char *)a1 + v27;
          uint64_t v28 = (char *)a2 + v27;
          uint64_t v29 = type metadata accessor for Location();
          id v30 = v23;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v29))
          {
            uint64_t v31 = sub_10017DF08(&qword_100E639E8);
            memcpy(__dst, v28, *(void *)(*(void *)(v31 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(__dst, v28, v29);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v29);
          }
          uint64_t v87 = *(int *)(v26 + 36);
          uint64_t v88 = (char *)a1 + v87;
          uint64_t v89 = (char *)a2 + v87;
          *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
          v88[16] = v89[16];
          break;
        case 3u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v32 = a2[3];
          a1[2] = a2[2];
          a1[3] = v32;
          swift_bridgeObjectRetain();
          break;
        default:
          uint64_t v6 = type metadata accessor for Location();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
          break;
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v90 = *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
      uint64_t v91 = (void **)((char *)a1 + v90);
      uint64_t v92 = (void **)((char *)a2 + v90);
      uint64_t v93 = type metadata accessor for LocationPreviewModalViewState(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v94 = type metadata accessor for URL();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v94 - 8) + 16))(v91, v92, v94);
          goto LABEL_78;
        case 1u:
          uint64_t v95 = type metadata accessor for DetailCondition();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v95 - 8) + 16))(v91, v92, v95);
          int v96 = (int *)type metadata accessor for ConditionDetailViewState();
          uint64_t v97 = v96[5];
          uint64_t v98 = (char *)v91 + v97;
          uint64_t v99 = (char *)v92 + v97;
          uint64_t v100 = type metadata accessor for Location();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16))(v98, v99, v100);
          uint64_t v101 = v96[6];
          uint64_t v102 = (char *)v91 + v101;
          uint64_t v103 = (char *)v92 + v101;
          uint64_t v104 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v103, 1, v104))
          {
            uint64_t v105 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v102, v103, *(void *)(*(void *)(v105 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16))(v102, v103, v104);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v102, 0, 1, v104);
          }
          uint64_t v188 = v96[7];
          uint64_t v189 = (char *)v91 + v188;
          uint64_t v190 = (char *)v92 + v188;
          long long v191 = *((_OWORD *)v190 + 1);
          *(_OWORD *)uint64_t v189 = *(_OWORD *)v190;
          *((_OWORD *)v189 + 1) = v191;
          v189[32] = v190[32];
          uint64_t v192 = v96[8];
          uint64_t v193 = (void *)((char *)v91 + v192);
          uint64_t v194 = (void *)((char *)v92 + v192);
          uint64_t v195 = (int *)type metadata accessor for DetailChartSelection();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v194, 1, (uint64_t)v195))
          {
            uint64_t v196 = sub_10017DF08(&qword_100E711F8);
            memcpy(v193, v194, *(void *)(*(void *)(v196 - 8) + 64));
          }
          else
          {
            uint64_t v224 = v194[1];
            *uint64_t v193 = *v194;
            v193[1] = v224;
            uint64_t v225 = v195[5];
            uint64_t v352 = (char *)v194 + v225;
            uint64_t v356 = (char *)v193 + v225;
            v226 = *(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16);
            swift_bridgeObjectRetain();
            v226(v356, v352, v104);
            v226((char *)v193 + v195[6], (char *)v194 + v195[6], v104);
            v226((char *)v193 + v195[7], (char *)v194 + v195[7], v104);
            *(void *)((char *)v193 + v195[8]) = *(void *)((char *)v194 + v195[8]);
            uint64_t v227 = v195[9];
            uint64_t v228 = (char *)v193 + v227;
            uint64_t v229 = (char *)v194 + v227;
            v228[8] = v229[8];
            *(void *)uint64_t v228 = *(void *)v229;
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v193, 0, 1, (uint64_t)v195);
          }
          *((unsigned char *)v91 + v96[9]) = *((unsigned char *)v92 + v96[9]);
          goto LABEL_78;
        case 2u:
          uint64_t v106 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v106 - 8) + 16))(v91, v92, v106);
          uint64_t v107 = type metadata accessor for AirQualityDetailViewState();
          *((unsigned char *)v91 + *(int *)(v107 + 20)) = *((unsigned char *)v92 + *(int *)(v107 + 20));
          uint64_t v108 = *(int *)(v107 + 24);
          uint64_t v109 = (char *)v91 + v108;
          uint64_t v110 = (char *)v92 + v108;
          v109[32] = v110[32];
          long long v111 = *((_OWORD *)v110 + 1);
          *(_OWORD *)uint64_t v109 = *(_OWORD *)v110;
          *((_OWORD *)v109 + 1) = v111;
          goto LABEL_78;
        case 3u:
          uint64_t v112 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v112 - 8) + 16))(v91, v92, v112);
          uint64_t v113 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
          uint64_t v114 = (char *)v91 + v113;
          uint64_t v115 = (char *)v92 + v113;
          long long v116 = *((_OWORD *)v115 + 1);
          *(_OWORD *)uint64_t v114 = *(_OWORD *)v115;
          *((_OWORD *)v114 + 1) = v116;
          v114[32] = v115[32];
          goto LABEL_78;
        case 4u:
          uint64_t v117 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v117 - 8) + 16))(v91, v92, v117);
          uint64_t v118 = type metadata accessor for SunriseSunsetDetailViewState();
          uint64_t v119 = *(int *)(v118 + 20);
          uint64_t v120 = (char *)v91 + v119;
          uint64_t v121 = (char *)v92 + v119;
          long long v122 = *((_OWORD *)v121 + 1);
          *(_OWORD *)uint64_t v120 = *(_OWORD *)v121;
          *((_OWORD *)v120 + 1) = v122;
          v120[32] = v121[32];
          *((unsigned char *)v91 + *(int *)(v118 + 24)) = *((unsigned char *)v92 + *(int *)(v118 + 24));
          goto LABEL_78;
        case 5u:
          uint64_t v123 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v123 - 8) + 16))(v91, v92, v123);
          uint64_t v124 = (int *)type metadata accessor for MoonDetailViewState();
          uint64_t v125 = v124[5];
          uint64_t v126 = (char *)v91 + v125;
          uint64_t v127 = (char *)v92 + v125;
          uint64_t v128 = type metadata accessor for MoonDetailSelectedDate();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v127, 1, v128))
          {
            uint64_t v129 = sub_10017DF08(&qword_100E67240);
            memcpy(v126, v127, *(void *)(*(void *)(v129 - 8) + 64));
          }
          else
          {
            swift_getEnumCaseMultiPayload();
            uint64_t v197 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v197 - 8) + 16))(v126, v127, v197);
            swift_storeEnumTagMultiPayload();
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v126, 0, 1, v128);
          }
          uint64_t v198 = v124[6];
          uint64_t v199 = (char *)v91 + v198;
          uint64_t v200 = (char *)v92 + v198;
          uint64_t v201 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v200, 1, v201))
          {
            uint64_t v202 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v199, v200, *(void *)(*(void *)(v202 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v201 - 8) + 16))(v199, v200, v201);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v199, 0, 1, v201);
          }
          uint64_t v230 = v124[7];
          v231 = (char *)v91 + v230;
          v232 = (char *)v92 + v230;
          long long v233 = *((_OWORD *)v232 + 1);
          *(_OWORD *)v231 = *(_OWORD *)v232;
          *((_OWORD *)v231 + 1) = v233;
          v231[32] = v232[32];
          *((unsigned char *)v91 + v124[8]) = *((unsigned char *)v92 + v124[8]);
          goto LABEL_78;
        case 6u:
          uint64_t v130 = v92[1];
          *uint64_t v91 = *v92;
          v91[1] = v130;
          uint64_t v131 = v92[3];
          v91[2] = v92[2];
          v91[3] = v131;
          uint64_t v132 = (int *)type metadata accessor for NewsArticle();
          uint64_t v133 = v132[6];
          uint64_t v134 = (char *)v91 + v133;
          uint64_t v135 = (char *)v92 + v133;
          uint64_t v136 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v135, 1, v136))
          {
            uint64_t v137 = sub_10017DF08(&qword_100E749B0);
            memcpy(v134, v135, *(void *)(*(void *)(v137 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 16))(v134, v135, v136);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v134, 0, 1, v136);
          }
          uint64_t v203 = v132[7];
          uint64_t v204 = (char *)v91 + v203;
          uint64_t v205 = (char *)v92 + v203;
          uint64_t v206 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v206 - 8) + 16))(v204, v205, v206);
          __dstb = *(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 16);
          __dstb((char *)v91 + v132[8], (char *)v92 + v132[8], v136);
          uint64_t v207 = v132[9];
          uint64_t v208 = (void *)((char *)v91 + v207);
          uint64_t v209 = (char *)v92 + v207;
          uint64_t v210 = *(void *)((char *)v92 + v207 + 8);
          *uint64_t v208 = *(void *)((char *)v92 + v207);
          v208[1] = v210;
          uint64_t v211 = *(void *)((char *)v92 + v207 + 24);
          v208[2] = *(void *)((char *)v92 + v207 + 16);
          v208[3] = v211;
          uint64_t v212 = *(int *)(type metadata accessor for NewsChannel() + 24);
          uint64_t v213 = (char *)v208 + v212;
          uint64_t v214 = &v209[v212];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v214, 1, v136))
          {
            uint64_t v215 = sub_10017DF08(&qword_100E749B0);
            memcpy(v213, v214, *(void *)(*(void *)(v215 - 8) + 64));
          }
          else
          {
            __dstb(v213, v214, v136);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v213, 0, 1, v136);
          }
          *(void *)((char *)v91 + v132[10]) = *(void *)((char *)v92 + v132[10]);
          *(void *)((char *)v91 + v132[11]) = *(void *)((char *)v92 + v132[11]);
          *(void *)((char *)v91 + v132[12]) = *(void *)((char *)v92 + v132[12]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_78;
        case 7u:
          uint64_t v138 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v138 - 8) + 16))(v91, v92, v138);
          uint64_t v139 = (int *)type metadata accessor for AveragesDetailViewState();
          *((unsigned char *)v91 + v139[5]) = *((unsigned char *)v92 + v139[5]);
          uint64_t v140 = v139[6];
          uint64_t v141 = (void *)((char *)v91 + v140);
          uint64_t v142 = (void *)((char *)v92 + v140);
          uint64_t v143 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v142, 1, (uint64_t)v143))
          {
            uint64_t v144 = sub_10017DF08(&qword_100E6B670);
            memcpy(v141, v142, *(void *)(*(void *)(v144 - 8) + 64));
          }
          else
          {
            *uint64_t v141 = *v142;
            uint64_t v216 = v143[5];
            uint64_t v217 = (char *)v141 + v216;
            id v218 = (char *)v142 + v216;
            uint64_t v219 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v219 - 8) + 16))(v217, v218, v219);
            *(void *)((char *)v141 + v143[6]) = *(void *)((char *)v142 + v143[6]);
            *(void *)((char *)v141 + v143[7]) = *(void *)((char *)v142 + v143[7]);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v141, 0, 1, (uint64_t)v143);
          }
          uint64_t v220 = v139[7];
          uint64_t v221 = (char *)v91 + v220;
          uint64_t v222 = (char *)v92 + v220;
          long long v223 = *((_OWORD *)v222 + 1);
          *(_OWORD *)uint64_t v221 = *(_OWORD *)v222;
          *((_OWORD *)v221 + 1) = v223;
          v221[32] = v222[32];
          goto LABEL_78;
        case 8u:
          uint64_t v145 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v145 - 8) + 16))(v91, v92, v145);
          uint64_t v146 = type metadata accessor for HomeAndWorkRefinementViewState();
          uint64_t v147 = *(int *)(v146 + 20);
          uint64_t v148 = (char *)v91 + v147;
          uint64_t v149 = (char *)v92 + v147;
          uint64_t v150 = type metadata accessor for LocationOfInterest();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 16))(v148, v149, v150);
          uint64_t v151 = *(int *)(v146 + 24);
          uint64_t v152 = (char *)v91 + v151;
          uint64_t v153 = (char *)v92 + v151;
          long long v154 = *((_OWORD *)v153 + 1);
          *(_OWORD *)uint64_t v152 = *(_OWORD *)v153;
          *((_OWORD *)v152 + 1) = v154;
          v152[32] = v153[32];
LABEL_78:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v91, v92, *(void *)(*(void *)(v93 - 8) + 64));
          break;
      }
      goto LABEL_118;
    case 2u:
    case 3u:
      *a1 = *a2;
      swift_retain();
      goto LABEL_118;
    case 4u:
      uint64_t v7 = type metadata accessor for ModalViewState.MapViewModal(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
      {
        uint64_t v8 = sub_10017DF08(&qword_100E663E8);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        type metadata accessor for PreviewLocation();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v75 = type metadata accessor for LocationOfInterest();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v75 - 8) + 16))(a1, a2, v75);
            goto LABEL_30;
          case 2u:
            __dsta = (void *)v7;
            uint64_t v77 = *a2;
            uint64_t v76 = a2[1];
            *a1 = *a2;
            a1[1] = v76;
            uint64_t v78 = a2[3];
            a1[2] = a2[2];
            a1[3] = v78;
            uint64_t v79 = a2[5];
            a1[4] = a2[4];
            a1[5] = v79;
            a1[6] = a2[6];
            uint64_t v80 = type metadata accessor for SearchLocation();
            uint64_t v81 = *(int *)(v80 + 32);
            v354 = (char *)a1 + v81;
            uint64_t v82 = (char *)a2 + v81;
            uint64_t v83 = type metadata accessor for Location();
            id v84 = v77;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v83))
            {
              uint64_t v85 = sub_10017DF08(&qword_100E639E8);
              memcpy(v354, v82, *(void *)(*(void *)(v85 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16))(v354, v82, v83);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v354, 0, 1, v83);
            }
            uint64_t v234 = *(int *)(v80 + 36);
            uint64_t v235 = (char *)a1 + v234;
            uint64_t v236 = (char *)a2 + v234;
            *(_OWORD *)uint64_t v235 = *(_OWORD *)v236;
            v235[16] = v236[16];
            swift_storeEnumTagMultiPayload();
            uint64_t v7 = (uint64_t)__dsta;
            goto LABEL_82;
          case 3u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            uint64_t v86 = a2[3];
            a1[2] = a2[2];
            a1[3] = v86;
            swift_bridgeObjectRetain();
            goto LABEL_30;
          default:
            uint64_t v20 = type metadata accessor for Location();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
LABEL_30:
            swift_storeEnumTagMultiPayload();
LABEL_82:
            uint64_t v237 = *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
            v238 = (void **)((char *)a1 + v237);
            uint64_t v239 = (void **)((char *)a2 + v237);
            uint64_t v240 = type metadata accessor for LocationPreviewModalViewState(0);
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                uint64_t v241 = type metadata accessor for URL();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v241 - 8) + 16))(v238, v239, v241);
                goto LABEL_116;
              case 1u:
                __dstc = (void *)v7;
                uint64_t v242 = type metadata accessor for DetailCondition();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v242 - 8) + 16))(v238, v239, v242);
                uint64_t v243 = type metadata accessor for ConditionDetailViewState();
                uint64_t v244 = *(int *)(v243 + 20);
                v245 = (char *)v238 + v244;
                uint64_t v246 = (char *)v239 + v244;
                uint64_t v247 = type metadata accessor for Location();
                uint64_t v248 = v245;
                v249 = (int *)v243;
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v247 - 8) + 16))(v248, v246, v247);
                uint64_t v250 = *(int *)(v243 + 24);
                uint64_t v251 = (char *)v238 + v250;
                uint64_t v252 = (char *)v239 + v250;
                uint64_t v253 = type metadata accessor for Date();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v252, 1, v253))
                {
                  uint64_t v254 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v251, v252, *(void *)(*(void *)(v254 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v253 - 8) + 16))(v251, v252, v253);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v251, 0, 1, v253);
                }
                uint64_t v304 = v249[7];
                uint64_t v305 = (char *)v238 + v304;
                uint64_t v306 = (char *)v239 + v304;
                long long v307 = *((_OWORD *)v306 + 1);
                *(_OWORD *)uint64_t v305 = *(_OWORD *)v306;
                *((_OWORD *)v305 + 1) = v307;
                v305[32] = v306[32];
                uint64_t v308 = v249[8];
                v309 = (void *)((char *)v238 + v308);
                v310 = (void *)((char *)v239 + v308);
                uint64_t v311 = (int *)type metadata accessor for DetailChartSelection();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v310, 1, (uint64_t)v311))
                {
                  uint64_t v312 = sub_10017DF08(&qword_100E711F8);
                  memcpy(v309, v310, *(void *)(*(void *)(v312 - 8) + 64));
                }
                else
                {
                  uint64_t v340 = v310[1];
                  void *v309 = *v310;
                  v309[1] = v340;
                  uint64_t v341 = v311[5];
                  uint64_t v351 = (char *)v310 + v341;
                  v353 = (char *)v309 + v341;
                  uint64_t v358 = v249;
                  uint64_t v342 = *(void (**)(char *, char *, uint64_t))(*(void *)(v253 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v342(v353, v351, v253);
                  v342((char *)v309 + v311[6], (char *)v310 + v311[6], v253);
                  v342((char *)v309 + v311[7], (char *)v310 + v311[7], v253);
                  v249 = v358;
                  *(void *)((char *)v309 + v311[8]) = *(void *)((char *)v310 + v311[8]);
                  uint64_t v343 = v311[9];
                  uint64_t v344 = (char *)v309 + v343;
                  v345 = (char *)v310 + v343;
                  v344[8] = v345[8];
                  *(void *)uint64_t v344 = *(void *)v345;
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v309, 0, 1, (uint64_t)v311);
                }
                uint64_t v7 = (uint64_t)__dstc;
                *((unsigned char *)v238 + v249[9]) = *((unsigned char *)v239 + v249[9]);
                goto LABEL_116;
              case 2u:
                uint64_t v255 = type metadata accessor for Location();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v255 - 8) + 16))(v238, v239, v255);
                uint64_t v256 = type metadata accessor for AirQualityDetailViewState();
                *((unsigned char *)v238 + *(int *)(v256 + 20)) = *((unsigned char *)v239 + *(int *)(v256 + 20));
                uint64_t v257 = *(int *)(v256 + 24);
                v258 = (char *)v238 + v257;
                v259 = (char *)v239 + v257;
                v258[32] = v259[32];
                long long v260 = *((_OWORD *)v259 + 1);
                *(_OWORD *)v258 = *(_OWORD *)v259;
                *((_OWORD *)v258 + 1) = v260;
                goto LABEL_116;
              case 3u:
                uint64_t v261 = type metadata accessor for Location();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v261 - 8) + 16))(v238, v239, v261);
                uint64_t v262 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
                uint64_t v263 = (char *)v238 + v262;
                uint64_t v264 = (char *)v239 + v262;
                long long v265 = *((_OWORD *)v264 + 1);
                *(_OWORD *)uint64_t v263 = *(_OWORD *)v264;
                *((_OWORD *)v263 + 1) = v265;
                v263[32] = v264[32];
                goto LABEL_116;
              case 4u:
                uint64_t v266 = type metadata accessor for Location();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v266 - 8) + 16))(v238, v239, v266);
                uint64_t v267 = type metadata accessor for SunriseSunsetDetailViewState();
                uint64_t v268 = *(int *)(v267 + 20);
                uint64_t v269 = (char *)v238 + v268;
                uint64_t v270 = (char *)v239 + v268;
                long long v271 = *((_OWORD *)v270 + 1);
                *(_OWORD *)uint64_t v269 = *(_OWORD *)v270;
                *((_OWORD *)v269 + 1) = v271;
                v269[32] = v270[32];
                *((unsigned char *)v238 + *(int *)(v267 + 24)) = *((unsigned char *)v239 + *(int *)(v267 + 24));
                goto LABEL_116;
              case 5u:
                __dstd = (void *)v7;
                uint64_t v272 = type metadata accessor for Location();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v272 - 8) + 16))(v238, v239, v272);
                uint64_t v273 = (int *)type metadata accessor for MoonDetailViewState();
                uint64_t v274 = v273[5];
                v275 = (char *)v238 + v274;
                uint64_t v276 = (char *)v239 + v274;
                uint64_t v277 = type metadata accessor for MoonDetailSelectedDate();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v276, 1, v277))
                {
                  uint64_t v278 = sub_10017DF08(&qword_100E67240);
                  memcpy(v275, v276, *(void *)(*(void *)(v278 - 8) + 64));
                }
                else
                {
                  swift_getEnumCaseMultiPayload();
                  uint64_t v313 = type metadata accessor for Date();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v313 - 8) + 16))(v275, v276, v313);
                  swift_storeEnumTagMultiPayload();
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v275, 0, 1, v277);
                }
                uint64_t v314 = v273[6];
                v315 = (char *)v238 + v314;
                uint64_t v316 = (char *)v239 + v314;
                uint64_t v317 = type metadata accessor for Date();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v316, 1, v317))
                {
                  uint64_t v318 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v315, v316, *(void *)(*(void *)(v318 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v317 - 8) + 16))(v315, v316, v317);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v315, 0, 1, v317);
                }
                uint64_t v346 = v273[7];
                uint64_t v347 = (char *)v238 + v346;
                uint64_t v348 = (char *)v239 + v346;
                long long v349 = *((_OWORD *)v348 + 1);
                *(_OWORD *)uint64_t v347 = *(_OWORD *)v348;
                *((_OWORD *)v347 + 1) = v349;
                v347[32] = v348[32];
                *((unsigned char *)v238 + v273[8]) = *((unsigned char *)v239 + v273[8]);
                goto LABEL_113;
              case 6u:
                __dste = (void *)v7;
                uint64_t v279 = v239[1];
                void *v238 = *v239;
                v238[1] = v279;
                uint64_t v280 = v239[3];
                v238[2] = v239[2];
                v238[3] = v280;
                uint64_t v281 = (int *)type metadata accessor for NewsArticle();
                uint64_t v282 = v281[6];
                v283 = (char *)v238 + v282;
                v284 = (char *)v239 + v282;
                uint64_t v285 = type metadata accessor for URL();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v284, 1, v285))
                {
                  uint64_t v286 = sub_10017DF08(&qword_100E749B0);
                  memcpy(v283, v284, *(void *)(*(void *)(v286 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v285 - 8) + 16))(v283, v284, v285);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v283, 0, 1, v285);
                }
                uint64_t v319 = v281[7];
                uint64_t v320 = (char *)v238 + v319;
                v321 = (char *)v239 + v319;
                uint64_t v322 = type metadata accessor for Date();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v322 - 8) + 16))(v320, v321, v322);
                uint64_t v357 = *(void (**)(char *, char *, uint64_t))(*(void *)(v285 - 8) + 16);
                v357((char *)v238 + v281[8], (char *)v239 + v281[8], v285);
                uint64_t v323 = v281[9];
                v324 = (void *)((char *)v238 + v323);
                v325 = (char *)v239 + v323;
                uint64_t v326 = *(void *)((char *)v239 + v323 + 8);
                void *v324 = *(void *)((char *)v239 + v323);
                v324[1] = v326;
                uint64_t v327 = *(void *)((char *)v239 + v323 + 24);
                v324[2] = *(void *)((char *)v239 + v323 + 16);
                v324[3] = v327;
                uint64_t v328 = *(int *)(type metadata accessor for NewsChannel() + 24);
                uint64_t v329 = (char *)v324 + v328;
                uint64_t v330 = &v325[v328];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v330, 1, v285))
                {
                  uint64_t v331 = sub_10017DF08(&qword_100E749B0);
                  memcpy(v329, v330, *(void *)(*(void *)(v331 - 8) + 64));
                }
                else
                {
                  v357(v329, v330, v285);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v329, 0, 1, v285);
                }
                uint64_t v7 = (uint64_t)__dste;
                *(void *)((char *)v238 + v281[10]) = *(void *)((char *)v239 + v281[10]);
                *(void *)((char *)v238 + v281[11]) = *(void *)((char *)v239 + v281[11]);
                *(void *)((char *)v238 + v281[12]) = *(void *)((char *)v239 + v281[12]);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                goto LABEL_116;
              case 7u:
                __dstd = (void *)v7;
                uint64_t v287 = type metadata accessor for Location();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v287 - 8) + 16))(v238, v239, v287);
                v288 = (int *)type metadata accessor for AveragesDetailViewState();
                *((unsigned char *)v238 + v288[5]) = *((unsigned char *)v239 + v288[5]);
                uint64_t v289 = v288[6];
                uint64_t v290 = (void *)((char *)v238 + v289);
                uint64_t v291 = (void *)((char *)v239 + v289);
                uint64_t v292 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v291, 1, (uint64_t)v292))
                {
                  uint64_t v293 = sub_10017DF08(&qword_100E6B670);
                  memcpy(v290, v291, *(void *)(*(void *)(v293 - 8) + 64));
                }
                else
                {
                  *uint64_t v290 = *v291;
                  uint64_t v332 = v292[5];
                  uint64_t v333 = (char *)v290 + v332;
                  uint64_t v334 = (char *)v291 + v332;
                  uint64_t v335 = type metadata accessor for Date();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v335 - 8) + 16))(v333, v334, v335);
                  *(void *)((char *)v290 + v292[6]) = *(void *)((char *)v291 + v292[6]);
                  *(void *)((char *)v290 + v292[7]) = *(void *)((char *)v291 + v292[7]);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v290, 0, 1, (uint64_t)v292);
                }
                uint64_t v336 = v288[7];
                uint64_t v337 = (char *)v238 + v336;
                uint64_t v338 = (char *)v239 + v336;
                long long v339 = *((_OWORD *)v338 + 1);
                *(_OWORD *)uint64_t v337 = *(_OWORD *)v338;
                *((_OWORD *)v337 + 1) = v339;
                v337[32] = v338[32];
LABEL_113:
                swift_storeEnumTagMultiPayload();
                uint64_t v7 = (uint64_t)__dstd;
                break;
              case 8u:
                uint64_t v294 = type metadata accessor for Location();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v294 - 8) + 16))(v238, v239, v294);
                uint64_t v295 = type metadata accessor for HomeAndWorkRefinementViewState();
                uint64_t v296 = *(int *)(v295 + 20);
                uint64_t v297 = (char *)v238 + v296;
                uint64_t v298 = (char *)v239 + v296;
                uint64_t v299 = type metadata accessor for LocationOfInterest();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v299 - 8) + 16))(v297, v298, v299);
                uint64_t v300 = *(int *)(v295 + 24);
                uint64_t v301 = (char *)v238 + v300;
                uint64_t v302 = (char *)v239 + v300;
                long long v303 = *((_OWORD *)v302 + 1);
                *(_OWORD *)uint64_t v301 = *(_OWORD *)v302;
                *((_OWORD *)v301 + 1) = v303;
                v301[32] = v302[32];
LABEL_116:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v238, v239, *(void *)(*(void *)(v240 - 8) + 64));
                break;
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
            break;
        }
      }
      goto LABEL_118;
    case 5u:
      type metadata accessor for ModalViewState.LocationDetailModal(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v33 = type metadata accessor for Location();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v33 - 8) + 16))(a1, a2, v33);
          uint64_t v34 = type metadata accessor for AirQualityDetailViewState();
          *((unsigned char *)a1 + *(int *)(v34 + 20)) = *((unsigned char *)a2 + *(int *)(v34 + 20));
          uint64_t v35 = *(int *)(v34 + 24);
          uint64_t v36 = (char *)a1 + v35;
          uint64_t v37 = (char *)a2 + v35;
          v36[32] = v37[32];
          long long v38 = *((_OWORD *)v37 + 1);
          *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
          *((_OWORD *)v36 + 1) = v38;
          break;
        case 2u:
          uint64_t v39 = type metadata accessor for Location();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v39 - 8) + 16))(a1, a2, v39);
          uint64_t v40 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
          uint64_t v41 = (char *)a1 + v40;
          uint64_t v42 = (char *)a2 + v40;
          long long v43 = *((_OWORD *)v42 + 1);
          *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
          *((_OWORD *)v41 + 1) = v43;
          v41[32] = v42[32];
          break;
        case 3u:
          uint64_t v44 = type metadata accessor for Location();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v44 - 8) + 16))(a1, a2, v44);
          uint64_t v45 = type metadata accessor for SunriseSunsetDetailViewState();
          uint64_t v46 = *(int *)(v45 + 20);
          uint64_t v47 = (char *)a1 + v46;
          uint64_t v48 = (char *)a2 + v46;
          long long v49 = *((_OWORD *)v48 + 1);
          *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
          *((_OWORD *)v47 + 1) = v49;
          v47[32] = v48[32];
          *((unsigned char *)a1 + *(int *)(v45 + 24)) = *((unsigned char *)a2 + *(int *)(v45 + 24));
          break;
        case 4u:
          uint64_t v50 = type metadata accessor for Location();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v50 - 8) + 16))(a1, a2, v50);
          uint64_t v51 = (int *)type metadata accessor for MoonDetailViewState();
          uint64_t v52 = v51[5];
          uint64_t v53 = (char *)a1 + v52;
          uint64_t v54 = (char *)a2 + v52;
          uint64_t v55 = type metadata accessor for MoonDetailSelectedDate();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v55))
          {
            uint64_t v56 = sub_10017DF08(&qword_100E67240);
            memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
          }
          else
          {
            swift_getEnumCaseMultiPayload();
            uint64_t v164 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 16))(v53, v54, v164);
            swift_storeEnumTagMultiPayload();
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v55);
          }
          uint64_t v165 = v51[6];
          v166 = (char *)a1 + v165;
          uint64_t v167 = (char *)a2 + v165;
          uint64_t v168 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v167, 1, v168))
          {
            uint64_t v169 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v166, v167, *(void *)(*(void *)(v169 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 16))(v166, v167, v168);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v166, 0, 1, v168);
          }
          uint64_t v184 = v51[7];
          v185 = (char *)a1 + v184;
          uint64_t v186 = (char *)a2 + v184;
          long long v187 = *((_OWORD *)v186 + 1);
          *(_OWORD *)v185 = *(_OWORD *)v186;
          *((_OWORD *)v185 + 1) = v187;
          v185[32] = v186[32];
          *((unsigned char *)a1 + v51[8]) = *((unsigned char *)a2 + v51[8]);
          break;
        case 5u:
          uint64_t v57 = type metadata accessor for Location();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v57 - 8) + 16))(a1, a2, v57);
          uint64_t v58 = (int *)type metadata accessor for AveragesDetailViewState();
          *((unsigned char *)a1 + v58[5]) = *((unsigned char *)a2 + v58[5]);
          uint64_t v59 = v58[6];
          uint64_t v60 = (void **)((char *)a1 + v59);
          uint64_t v61 = (void **)((char *)a2 + v59);
          uint64_t v62 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, (uint64_t)v62))
          {
            uint64_t v63 = sub_10017DF08(&qword_100E6B670);
            memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
          }
          else
          {
            *uint64_t v60 = *v61;
            uint64_t v170 = v62[5];
            uint64_t v171 = (char *)v60 + v170;
            uint64_t v172 = (char *)v61 + v170;
            uint64_t v173 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 16))(v171, v172, v173);
            *(void *)((char *)v60 + v62[6]) = *(void *)((char *)v61 + v62[6]);
            *(void *)((char *)v60 + v62[7]) = *(void *)((char *)v61 + v62[7]);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, (uint64_t)v62);
          }
          uint64_t v174 = v58[7];
          uint64_t v175 = (char *)a1 + v174;
          uint64_t v176 = (char *)a2 + v174;
          long long v177 = *((_OWORD *)v176 + 1);
          *(_OWORD *)uint64_t v175 = *(_OWORD *)v176;
          *((_OWORD *)v175 + 1) = v177;
          v175[32] = v176[32];
          break;
        case 6u:
          uint64_t v64 = type metadata accessor for URL();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v64 - 8) + 16))(a1, a2, v64);
          break;
        case 7u:
          uint64_t v65 = type metadata accessor for Location();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v65 - 8) + 16))(a1, a2, v65);
          uint64_t v66 = type metadata accessor for HomeAndWorkRefinementViewState();
          uint64_t v67 = *(int *)(v66 + 20);
          uint64_t v68 = (char *)a1 + v67;
          uint64_t v69 = (char *)a2 + v67;
          uint64_t v70 = type metadata accessor for LocationOfInterest();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16))(v68, v69, v70);
          uint64_t v71 = *(int *)(v66 + 24);
          uint64_t v72 = (char *)a1 + v71;
          uint64_t v73 = (char *)a2 + v71;
          long long v74 = *((_OWORD *)v73 + 1);
          *(_OWORD *)uint64_t v72 = *(_OWORD *)v73;
          *((_OWORD *)v72 + 1) = v74;
          v72[32] = v73[32];
          break;
        default:
          uint64_t v9 = type metadata accessor for DetailCondition();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
          uint64_t v10 = (int *)type metadata accessor for ConditionDetailViewState();
          uint64_t v11 = v10[5];
          uint64_t v12 = (char *)a1 + v11;
          uint64_t v13 = (char *)a2 + v11;
          uint64_t v14 = type metadata accessor for Location();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
          uint64_t v15 = v10[6];
          uint64_t v16 = (char *)a1 + v15;
          uint64_t v17 = (char *)a2 + v15;
          uint64_t v18 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
          {
            uint64_t v19 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
          }
          uint64_t v155 = v10[7];
          v156 = (char *)a1 + v155;
          v157 = (char *)a2 + v155;
          long long v158 = *((_OWORD *)v157 + 1);
          *(_OWORD *)v156 = *(_OWORD *)v157;
          *((_OWORD *)v156 + 1) = v158;
          v156[32] = v157[32];
          uint64_t v159 = v10[8];
          uint64_t v160 = (void **)((char *)a1 + v159);
          v161 = (void **)((char *)a2 + v159);
          uint64_t v162 = (int *)type metadata accessor for DetailChartSelection();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v161, 1, (uint64_t)v162))
          {
            uint64_t v163 = sub_10017DF08(&qword_100E711F8);
            memcpy(v160, v161, *(void *)(*(void *)(v163 - 8) + 64));
          }
          else
          {
            uint64_t v178 = v161[1];
            *uint64_t v160 = *v161;
            v160[1] = v178;
            uint64_t v179 = v162[5];
            uint64_t v355 = (char *)v161 + v179;
            __dstf = (char *)v160 + v179;
            uint64_t v180 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
            swift_bridgeObjectRetain();
            v180(__dstf, v355, v18);
            v180((char *)v160 + v162[6], (char *)v161 + v162[6], v18);
            v180((char *)v160 + v162[7], (char *)v161 + v162[7], v18);
            *(void *)((char *)v160 + v162[8]) = *(void *)((char *)v161 + v162[8]);
            uint64_t v181 = v162[9];
            uint64_t v182 = (char *)v160 + v181;
            uint64_t v183 = (char *)v161 + v181;
            v182[8] = v183[8];
            *(void *)uint64_t v182 = *(void *)v183;
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v160, 0, 1, (uint64_t)v162);
          }
          *((unsigned char *)a1 + v10[9]) = *((unsigned char *)a2 + v10[9]);
          break;
      }
      swift_storeEnumTagMultiPayload();
LABEL_118:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t sub_10016DF84(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for Locale();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[8];
  uint64_t v11 = a3[9];
  uint64_t v12 = (void *)(a1 + v10);
  uint64_t v13 = (void *)(a2 + v10);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v15 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  uint64_t v16 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v17 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  uint64_t v18 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = a2 + v18;
  uint64_t v21 = *(void **)v20;
  uint64_t v22 = *(void **)(v20 + 8);
  *uint64_t v19 = *(void *)v20;
  v19[1] = v22;
  uint64_t v23 = *(void **)(v20 + 16);
  uint64_t v24 = *(void **)(v20 + 24);
  v19[2] = v23;
  v19[3] = v24;
  uint64_t v25 = *(void **)(v20 + 32);
  uint64_t v26 = *(void **)(v20 + 40);
  v19[4] = v25;
  v19[5] = v26;
  swift_bridgeObjectRetain();
  id v27 = v21;
  id v28 = v22;
  id v29 = v23;
  id v30 = v24;
  id v31 = v25;
  id v32 = v26;
  return a1;
}

uint64_t sub_10016E0C0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_10016E114(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10016E174(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10016E1D4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10016E234(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10016E294(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_10016E2E8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10016E348(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10016E3A8()
{
  uint64_t v2 = sub_100162814();
  v3(v2);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

uint64_t sub_10016E400(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10016E460(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v6 = a3[10];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  uint64_t v13 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  return a1;
}

char *sub_10016E554(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CurrentLocation();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100EADD50);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() > 2)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      uint64_t v8 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[v9] = *(void *)&a2[v9];
  uint64_t v10 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  *(void *)&a1[v10] = *(void *)&a2[v10];
  uint64_t v11 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  *(void *)&a1[v11] = *(void *)&a2[v11];
  uint64_t v12 = a3[12];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  uint64_t v18 = a3;
  uint64_t v13 = &a1[v12];
  uint64_t v14 = *(void *)&a2[v12];
  uint64_t v17 = *(void *)&a2[v12 + 8];
  unsigned __int8 v16 = a2[v12 + 16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10015458C(v14, v17, v16);
  *(void *)uint64_t v13 = v14;
  *((void *)v13 + 1) = v17;
  v13[16] = v16;
  *(void *)&a1[v18[13]] = *(void *)&a2[v18[13]];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10016E804(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t type metadata accessor for MainState._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E691B8);
}

uint64_t sub_10016E888(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, long long a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19)
{
  *(void *)(v19 + 16) = a1;
  *(unsigned char *)(v19 + 24) = a2;
  sub_10016EAB0();
  sub_10016EAB0();
  sub_10016EAB0();
  uint64_t v23 = v19 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications;
  *(unsigned char *)uint64_t v23 = a6;
  *(void *)(v23 + 8) = a7;
  *(void *)(v23 + 16) = a8;
  *(unsigned char *)(v23 + 24) = a9;
  sub_10016EAB0();
  sub_10016EAB0();
  sub_10016EAB0();
  sub_10016EAB0();
  uint64_t v24 = v19 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData;
  *(_OWORD *)uint64_t v24 = a14;
  *(void *)(v24 + 16) = a15;
  *(void *)(v24 + 24) = a16;
  uint64_t v25 = v19 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState;
  *(unsigned char *)uint64_t v25 = a17;
  *(void *)(v25 + 8) = a18;
  *(void *)(v19 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_contentStatusBanners) = a19;
  return v19;
}

uint64_t sub_10016EAB0()
{
  uint64_t v1 = sub_100162814();
  v2(v1);
  sub_100162E4C();
  sub_1001190D4();
  v3();
  return v0;
}

uint64_t sub_10016EB04(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10016EB64(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_10016EBB8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10016EC18(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10016EC5C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10016ECAC(uint64_t a1, uint64_t a2)
{
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(active - 8) + 16))(a2, a1, active);
  return a2;
}

uint64_t type metadata accessor for LocationViewerActiveLocationState()
{
  uint64_t result = qword_100EAB8A0;
  if (!qword_100EAB8A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_10016ED58(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

uint64_t sub_10016EE18(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = type metadata accessor for News();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
}

uint64_t sub_10016EEA8()
{
  return swift_slowAlloc();
}

uint64_t sub_10016EEC0()
{
  return *(void *)(v0 + 480);
}

uint64_t sub_10016EED4(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v1);
}

uint64_t sub_10016EEEC()
{
  return swift_allocObject();
}

uint64_t sub_10016EF14()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_10016EF60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10008B740(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_10016EF84()
{
  return sub_10016EF8C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10016EF8C(uint64_t a1, uint64_t a2)
{
  if (a2 == 1) {
    return 1701736302;
  }
  sub_10016EFE8();
  return ShortDescribable.description.getter();
}

unint64_t sub_10016EFE8()
{
  unint64_t result = qword_100E8AC30;
  if (!qword_100E8AC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8AC30);
  }
  return result;
}

unint64_t sub_10016F034(uint64_t a1)
{
  unint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 2:
      uint64_t v3 = type metadata accessor for Locale();
      goto LABEL_21;
    case 3:
      type metadata accessor for ActivityAction();
      unint64_t result = swift_getEnumCaseMultiPayload();
      if (result == 1)
      {
        type metadata accessor for PreviewLocation();
        unint64_t result = swift_getEnumCaseMultiPayload();
        switch((int)result)
        {
          case 0:
            goto LABEL_15;
          case 1:
            uint64_t v3 = type metadata accessor for LocationOfInterest();
            goto LABEL_21;
          case 2:

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            a1 += *(int *)(type metadata accessor for SearchLocation() + 32);
            uint64_t v4 = type metadata accessor for Location();
            goto LABEL_17;
          case 3:
            goto LABEL_8;
          default:
            return result;
        }
        return result;
      }
      if (result) {
        return result;
      }
      type metadata accessor for SavedLocation();
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v3 = type metadata accessor for SavedLocation.Placeholder();
      }
      else {
LABEL_15:
      }
        uint64_t v3 = type metadata accessor for Location();
      goto LABEL_21;
    case 4:
      goto LABEL_8;
    case 9:
      unint64_t result = *(void *)(a1 + 8);
      if (result >= 2)
      {
LABEL_8:
        return swift_bridgeObjectRelease();
      }
      return result;
    case 11:
      type metadata accessor for ConfiguredUnitsAction();
      unint64_t result = swift_getEnumCaseMultiPayload();
      if (result != 1)
      {
        if (result) {
          return result;
        }
        uint64_t v3 = type metadata accessor for ConfiguredUnit();
LABEL_21:
        uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
        uint64_t v8 = v3;
        uint64_t v7 = a1;
        goto LABEL_22;
      }
      uint64_t v4 = type metadata accessor for UnitConfiguration.Temperature();
LABEL_17:
      uint64_t v5 = v4;
      unint64_t result = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v4);
      if (!result)
      {
        uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
        uint64_t v7 = a1;
        uint64_t v8 = v5;
LABEL_22:
        return v6(v7, v8);
      }
      return result;
    default:
      return result;
  }
}

void *sub_10016F25C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_10016F2F4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100477AEC(0, v2[2] + 1, 1, (uint64_t)v2);
  }
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_100477AEC((char *)(v3 > 1), v4 + 1, 1, (uint64_t)v2);
  }
  v2[2] = v4 + 1;
  *((unsigned char *)v2 + v4 + 32) = 0;
  return v2;
}

void *sub_10016F2F4(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    Swift::Int v2 = String.UTF8View._foreignCount()();
    if (v2) {
      goto LABEL_6;
    }
    return &_swiftEmptyArrayStorage;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    Swift::Int v2 = HIBYTE(a2) & 0xF;
  }
  else {
    Swift::Int v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
LABEL_6:
  unint64_t v3 = sub_10016F468(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v4 = v3;
    uint64_t v5 = _StringGuts.copyUTF8(into:)();
    if ((v6 & 1) != 0 || v5 != v2) {
      goto LABEL_14;
    }
    return v4;
  }
  _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
LABEL_14:
  unint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_10016F468(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_10017DF08(&qword_100E77FC0);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_10016F4D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v125 = type metadata accessor for AveragesDetailViewAction();
  sub_100162E4C();
  __chkstk_darwin(v1);
  sub_100109314();
  uint64_t v127 = v2;
  sub_100129064();
  uint64_t v123 = type metadata accessor for MoonDetailViewAction();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v126 = v4;
  sub_100129064();
  uint64_t v121 = type metadata accessor for ConditionDetailViewAction();
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v124 = v6;
  sub_100129064();
  uint64_t v119 = type metadata accessor for DebugAction();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v122 = v8;
  sub_100129064();
  uint64_t v117 = type metadata accessor for PerformanceTestAction();
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v120 = v10;
  sub_100129064();
  uint64_t v115 = type metadata accessor for WeatherDataAction();
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_100109314();
  uint64_t v118 = v12;
  sub_100129064();
  uint64_t v113 = type metadata accessor for LocationViewAction();
  sub_100162E4C();
  __chkstk_darwin(v13);
  sub_100109314();
  uint64_t v116 = v14;
  sub_100129064();
  uint64_t v111 = type metadata accessor for ModalViewAction();
  sub_100162E4C();
  __chkstk_darwin(v15);
  sub_100109314();
  uint64_t v114 = v16;
  sub_100129064();
  uint64_t v109 = type metadata accessor for ViewAction();
  sub_100162E4C();
  __chkstk_darwin(v17);
  sub_100109314();
  uint64_t v112 = v18;
  sub_100129064();
  uint64_t v107 = type metadata accessor for NotificationsOptInAction();
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v110 = v20;
  sub_100129064();
  uint64_t v21 = type metadata accessor for NotificationsAction();
  sub_100162E4C();
  __chkstk_darwin(v22);
  sub_100109314();
  uint64_t v108 = v23;
  sub_100129064();
  uint64_t v24 = type metadata accessor for LocationsAction();
  sub_100162E4C();
  __chkstk_darwin(v25);
  sub_1001626E0();
  uint64_t v28 = v27 - v26;
  uint64_t v29 = type metadata accessor for EnvironmentAction();
  sub_100162E4C();
  __chkstk_darwin(v30);
  sub_1001626E0();
  uint64_t v33 = v32 - v31;
  uint64_t v34 = type metadata accessor for AppConfigurationAction();
  sub_100162E4C();
  __chkstk_darwin(v35);
  sub_1001626E0();
  uint64_t v38 = v37 - v36;
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v39);
  sub_1001626E0();
  uint64_t v42 = v41 - v40;
  uint64_t v43 = sub_10017DF08(&qword_100E7F4F8);
  uint64_t v130 = *(void *)(v43 - 8);
  uint64_t v131 = v43;
  __chkstk_darwin(v43);
  sub_100109314();
  uint64_t v128 = v44;
  sub_100166560(v129, v42, (void (*)(void))type metadata accessor for MainAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100171D14(v42, v38, (void (*)(void))type metadata accessor for AppConfigurationAction);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v48 = sub_100163ED0();
      *(_OWORD *)(v48 + 16) = xmmword_100C251B0;
      *(void *)(v48 + 32) = 0x6E6F69746361;
      *(void *)(v48 + 40) = 0xE600000000000000;
      *(void *)(v48 + 72) = v34;
      long long v49 = sub_100170694((uint64_t *)(v48 + 48));
      sub_100166560(v38, (uint64_t)v49, (void (*)(void))type metadata accessor for AppConfigurationAction);
      Dictionary.init(dictionaryLiteral:)();
      uint64_t v34 = v128;
      ShortDescription.init(name:_:)();
      uint64_t v50 = v38;
      uint64_t v51 = type metadata accessor for AppConfigurationAction;
      goto LABEL_22;
    case 2u:
      sub_100171D14(v42, v33, (void (*)(void))type metadata accessor for EnvironmentAction);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v52 = (__n128 *)sub_100163ED0();
      uint64_t v53 = sub_10017A300(v52, (__n128)xmmword_100C251B0);
      v52[4].n128_u64[1] = v29;
      uint64_t v54 = sub_100170694((uint64_t *)v53);
      uint64_t v55 = type metadata accessor for EnvironmentAction;
      sub_100166560(v33, (uint64_t)v54, (void (*)(void))type metadata accessor for EnvironmentAction);
      Dictionary.init(dictionaryLiteral:)();
      sub_1001D1A88();
      ShortDescription.init(name:_:)();
      uint64_t v50 = v33;
      goto LABEL_21;
    case 3u:
      sub_100171D14(v42, v28, (void (*)(void))type metadata accessor for LocationsAction);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v56 = (__n128 *)sub_100163ED0();
      uint64_t v57 = sub_10017A300(v56, (__n128)xmmword_100C251B0);
      v56[4].n128_u64[1] = v24;
      uint64_t v58 = sub_100170694((uint64_t *)v57);
      uint64_t v55 = type metadata accessor for LocationsAction;
      sub_100166560(v28, (uint64_t)v58, (void (*)(void))type metadata accessor for LocationsAction);
      Dictionary.init(dictionaryLiteral:)();
      sub_1001D1A88();
      sub_10016362C();
      ShortDescription.init(name:_:)();
      uint64_t v50 = v28;
      goto LABEL_21;
    case 4u:
      sub_100171D14(v42, v108, (void (*)(void))type metadata accessor for NotificationsAction);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v59 = (__n128 *)sub_100163ED0();
      uint64_t v60 = sub_10017A300(v59, (__n128)xmmword_100C251B0);
      v59[4].n128_u64[1] = v21;
      uint64_t v61 = sub_100170694((uint64_t *)v60);
      uint64_t v55 = type metadata accessor for NotificationsAction;
      sub_100166560(v108, (uint64_t)v61, (void (*)(void))type metadata accessor for NotificationsAction);
      Dictionary.init(dictionaryLiteral:)();
      sub_1001D1A88();
      ShortDescription.init(name:_:)();
      uint64_t v50 = v108;
      goto LABEL_21;
    case 5u:
      uint64_t v62 = v110;
      sub_100171D14(v42, v110, (void (*)(void))type metadata accessor for NotificationsOptInAction);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v63 = (__n128 *)sub_100163ED0();
      uint64_t v64 = sub_10017A300(v63, (__n128)xmmword_100C251B0);
      v63[4].n128_u64[1] = v107;
      uint64_t v65 = sub_100170694((uint64_t *)v64);
      uint64_t v55 = type metadata accessor for NotificationsOptInAction;
      sub_100166560(v110, (uint64_t)v65, (void (*)(void))type metadata accessor for NotificationsOptInAction);
      Dictionary.init(dictionaryLiteral:)();
      sub_100181400();
      goto LABEL_20;
    case 6u:
      uint64_t v62 = v112;
      sub_100171D14(v42, v112, (void (*)(void))type metadata accessor for ViewAction);
      sub_10017DF08(&qword_100E635E0);
      inited = (__n128 *)swift_initStackObject();
      uint64_t v67 = sub_10017A300(inited, (__n128)xmmword_100C251B0);
      inited[4].n128_u64[1] = v109;
      uint64_t v68 = sub_100170694((uint64_t *)v67);
      uint64_t v55 = type metadata accessor for ViewAction;
      sub_100166560(v112, (uint64_t)v68, (void (*)(void))type metadata accessor for ViewAction);
      Dictionary.init(dictionaryLiteral:)();
      sub_10017A4D4();
      goto LABEL_20;
    case 7u:
      uint64_t v62 = v114;
      sub_100171D14(v42, v114, (void (*)(void))type metadata accessor for ModalViewAction);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v69 = (__n128 *)swift_initStackObject();
      uint64_t v70 = sub_10017A300(v69, (__n128)xmmword_100C251B0);
      v69[4].n128_u64[1] = v111;
      uint64_t v71 = sub_100170694((uint64_t *)v70);
      uint64_t v55 = type metadata accessor for ModalViewAction;
      sub_100166560(v114, (uint64_t)v71, (void (*)(void))type metadata accessor for ModalViewAction);
      Dictionary.init(dictionaryLiteral:)();
      uint64_t v34 = v128;
      goto LABEL_20;
    case 8u:
      uint64_t v62 = v116;
      sub_100171D14(v42, v116, (void (*)(void))type metadata accessor for LocationViewAction);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v72 = (__n128 *)swift_initStackObject();
      uint64_t v73 = sub_10017A300(v72, (__n128)xmmword_100C251B0);
      v72[4].n128_u64[1] = v113;
      long long v74 = sub_100170694((uint64_t *)v73);
      uint64_t v55 = type metadata accessor for LocationViewAction;
      sub_100166560(v116, (uint64_t)v74, (void (*)(void))type metadata accessor for LocationViewAction);
      Dictionary.init(dictionaryLiteral:)();
      sub_10017A4D4();
      sub_10016362C();
      goto LABEL_20;
    case 9u:
      uint64_t v62 = v118;
      sub_100171D14(v42, v118, (void (*)(void))type metadata accessor for WeatherDataAction);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v75 = (__n128 *)swift_initStackObject();
      uint64_t v76 = sub_10017A300(v75, (__n128)xmmword_100C251B0);
      v75[4].n128_u64[1] = v115;
      uint64_t v77 = sub_100170694((uint64_t *)v76);
      uint64_t v55 = type metadata accessor for WeatherDataAction;
      sub_100166560(v118, (uint64_t)v77, (void (*)(void))type metadata accessor for WeatherDataAction);
      Dictionary.init(dictionaryLiteral:)();
      sub_10017A4D4();
      goto LABEL_20;
    case 0xAu:
      uint64_t v62 = v122;
      sub_100171D14(v42, v122, (void (*)(void))type metadata accessor for DebugAction);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v78 = (__n128 *)swift_initStackObject();
      uint64_t v79 = sub_10017A300(v78, (__n128)xmmword_100C251B0);
      v78[4].n128_u64[1] = v119;
      uint64_t v80 = sub_100170694((uint64_t *)v79);
      uint64_t v55 = type metadata accessor for DebugAction;
      sub_100166560(v122, (uint64_t)v80, (void (*)(void))type metadata accessor for DebugAction);
      Dictionary.init(dictionaryLiteral:)();
      sub_10017A4D4();
      goto LABEL_20;
    case 0xBu:
      uint64_t v62 = v124;
      sub_100171D14(v42, v124, (void (*)(void))type metadata accessor for ConditionDetailViewAction);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v81 = (__n128 *)swift_initStackObject();
      uint64_t v82 = sub_10017A300(v81, (__n128)xmmword_100C251B0);
      v81[4].n128_u64[1] = v121;
      uint64_t v83 = sub_100170694((uint64_t *)v82);
      uint64_t v55 = type metadata accessor for ConditionDetailViewAction;
      sub_100166560(v124, (uint64_t)v83, (void (*)(void))type metadata accessor for ConditionDetailViewAction);
      Dictionary.init(dictionaryLiteral:)();
      sub_10017A4D4();
      goto LABEL_20;
    case 0xCu:
      unsigned __int8 v84 = *(unsigned char *)v42;
      sub_10017DF08(&qword_100E635E0);
      uint64_t v85 = (__n128 *)swift_initStackObject();
      uint64_t v86 = sub_10017FEC4(v85, (__n128)xmmword_100C251B0);
      v86[4].n128_u64[1] = (unint64_t)&type metadata for SunriseSunsetDetailViewAction;
      v86[3].n128_u8[0] = v84;
      Dictionary.init(dictionaryLiteral:)();
      uint64_t v34 = v128;
      goto LABEL_25;
    case 0xDu:
      uint64_t v62 = v126;
      sub_100171D14(v42, v126, (void (*)(void))type metadata accessor for MoonDetailViewAction);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v87 = (__n128 *)swift_initStackObject();
      uint64_t v88 = sub_10017A300(v87, (__n128)xmmword_100C251B0);
      v87[4].n128_u64[1] = v123;
      uint64_t v89 = sub_100170694((uint64_t *)v88);
      uint64_t v55 = type metadata accessor for MoonDetailViewAction;
      sub_100166560(v126, (uint64_t)v89, (void (*)(void))type metadata accessor for MoonDetailViewAction);
      Dictionary.init(dictionaryLiteral:)();
      uint64_t v34 = v128;
      goto LABEL_20;
    case 0xEu:
      uint64_t v62 = v127;
      sub_100171D14(v42, v127, (void (*)(void))type metadata accessor for AveragesDetailViewAction);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v90 = (__n128 *)swift_initStackObject();
      uint64_t v91 = sub_10017A300(v90, (__n128)xmmword_100C251B0);
      v90[4].n128_u64[1] = v125;
      uint64_t v92 = sub_100170694((uint64_t *)v91);
      uint64_t v55 = type metadata accessor for AveragesDetailViewAction;
      sub_100166560(v127, (uint64_t)v92, (void (*)(void))type metadata accessor for AveragesDetailViewAction);
      Dictionary.init(dictionaryLiteral:)();
      sub_10017A4D4();
      goto LABEL_20;
    case 0xFu:
      unsigned __int8 v93 = *(unsigned char *)v42;
      sub_10017DF08(&qword_100E635E0);
      uint64_t v94 = (__n128 *)swift_initStackObject();
      uint64_t v95 = sub_10017FEC4(v94, (__n128)xmmword_100C251B0);
      v95[4].n128_u64[1] = (unint64_t)&type metadata for UnitsConfigurationViewAction;
      v95[3].n128_u8[0] = v93;
      Dictionary.init(dictionaryLiteral:)();
      sub_100181400();
      goto LABEL_25;
    case 0x10u:
      unint64_t v96 = *(void *)v42;
      unint64_t v97 = *(void *)(v42 + 8);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v98 = (__n128 *)swift_initStackObject();
      uint64_t v99 = sub_10017FEC4(v98, (__n128)xmmword_100C251B0);
      v99[4].n128_u64[1] = (unint64_t)&type metadata for MonitoringAction;
      v99[3].n128_u64[0] = v96;
      v99[3].n128_u64[1] = v97;
      Dictionary.init(dictionaryLiteral:)();
      sub_10017A4D4();
      goto LABEL_25;
    case 0x11u:
      uint64_t v62 = v120;
      sub_100171D14(v42, v120, (void (*)(void))type metadata accessor for PerformanceTestAction);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v100 = (__n128 *)swift_initStackObject();
      uint64_t v101 = sub_10017A300(v100, (__n128)xmmword_100C251B0);
      v100[4].n128_u64[1] = v117;
      uint64_t v102 = sub_100170694((uint64_t *)v101);
      uint64_t v55 = type metadata accessor for PerformanceTestAction;
      sub_100166560(v120, (uint64_t)v102, (void (*)(void))type metadata accessor for PerformanceTestAction);
      Dictionary.init(dictionaryLiteral:)();
      sub_10017A4D4();
LABEL_20:
      ShortDescription.init(name:_:)();
      uint64_t v50 = v62;
LABEL_21:
      uint64_t v51 = v55;
LABEL_22:
      sub_100158BC8(v50, (void (*)(void))v51);
      goto LABEL_26;
    case 0x12u:
      sub_10017DF08(&qword_100E635E0);
      uint64_t v103 = (__n128 *)sub_100163ED0();
      sub_10017FEC4(v103, (__n128)xmmword_100C251B0)[4].n128_u64[1] = (unint64_t)&type metadata for AutomationAction;
      Dictionary.init(dictionaryLiteral:)();
      uint64_t v34 = v128;
      goto LABEL_25;
    case 0x13u:
      sub_10017DF08(&qword_100E635E0);
      uint64_t v104 = (__n128 *)sub_100163ED0();
      sub_10017FEC4(v104, (__n128)xmmword_100C251B0)[4].n128_u64[1] = (unint64_t)&type metadata for TimeAction;
      Dictionary.init(dictionaryLiteral:)();
      sub_10017A4D4();
      goto LABEL_25;
    default:
      unsigned __int8 v45 = *(unsigned char *)v42;
      sub_10017DF08(&qword_100E635E0);
      uint64_t v46 = (__n128 *)sub_100163ED0();
      uint64_t v47 = sub_10017FEC4(v46, (__n128)xmmword_100C251B0);
      v47[4].n128_u64[1] = (unint64_t)&type metadata for AppLifecycleAction;
      v47[3].n128_u8[0] = v45;
      Dictionary.init(dictionaryLiteral:)();
      sub_10017A4D4();
LABEL_25:
      ShortDescription.init(name:_:)();
LABEL_26:
      a1[3] = v131;
      a1[4] = sub_1001706F8();
      uint64_t v105 = sub_100170694(a1);
      return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v130 + 32))(v105, v34, v131);
  }
}

uint64_t *sub_100170694(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

unint64_t sub_1001706F8()
{
  unint64_t result = qword_100E7F500;
  if (!qword_100E7F500)
  {
    sub_10018C6DC(&qword_100E7F4F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7F500);
  }
  return result;
}

uint64_t sub_10017074C(uint64_t a1, uint64_t a2)
{
  uint64_t v262 = a2;
  uint64_t v263 = a1;
  uint64_t v2 = type metadata accessor for AveragesDetailViewAction();
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v248 = v4;
  sub_100129064();
  uint64_t v5 = type metadata accessor for MoonDetailViewAction();
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v247 = v7;
  sub_100129064();
  uint64_t v8 = type metadata accessor for ConditionDetailViewAction();
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v246 = v10;
  sub_100129064();
  uint64_t v11 = type metadata accessor for DebugAction();
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_100109314();
  sub_100109328(v13);
  uint64_t v14 = type metadata accessor for PerformanceTestAction();
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_100109314();
  sub_100109328(v16);
  uint64_t v17 = type metadata accessor for WeatherDataAction();
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  sub_100109314();
  uint64_t v249 = v19;
  sub_100129064();
  uint64_t v253 = type metadata accessor for NotificationsOptInState();
  sub_100162E4C();
  __chkstk_darwin(v20);
  sub_100109314();
  sub_100109328(v21);
  uint64_t v22 = type metadata accessor for NotificationsOptInAction();
  uint64_t v23 = sub_100109308(v22);
  __chkstk_darwin(v23);
  sub_100109314();
  sub_100109328(v24);
  uint64_t v25 = type metadata accessor for NotificationsAction();
  uint64_t v26 = sub_100109308(v25);
  __chkstk_darwin(v26);
  sub_100109314();
  sub_100109328(v27);
  uint64_t v28 = type metadata accessor for LocationViewAction();
  uint64_t v29 = sub_100109308(v28);
  __chkstk_darwin(v29);
  sub_100109314();
  uint64_t v31 = sub_100109328(v30);
  uint64_t v255 = type metadata accessor for ModalViewState(v31);
  sub_100162E4C();
  __chkstk_darwin(v32);
  sub_100109314();
  sub_100109328(v33);
  uint64_t v34 = type metadata accessor for ModalViewAction();
  uint64_t v35 = sub_100109308(v34);
  __chkstk_darwin(v35);
  sub_100109314();
  uint64_t v37 = sub_100109328(v36);
  uint64_t v252 = type metadata accessor for ViewState(v37);
  sub_100162E4C();
  __chkstk_darwin(v38);
  sub_100109314();
  sub_100109328(v39);
  uint64_t v40 = type metadata accessor for ViewAction();
  uint64_t v41 = sub_100109308(v40);
  __chkstk_darwin(v41);
  sub_1001626E0();
  uint64_t v44 = v43 - v42;
  uint64_t v251 = type metadata accessor for LocationsState();
  sub_100162E4C();
  __chkstk_darwin(v45);
  sub_1001626E0();
  uint64_t v48 = v47 - v46;
  uint64_t v49 = type metadata accessor for LocationsAction();
  uint64_t v50 = sub_100109308(v49);
  __chkstk_darwin(v50);
  sub_1001626E0();
  uint64_t v53 = v52 - v51;
  uint64_t v250 = type metadata accessor for EnvironmentState();
  sub_100162E4C();
  __chkstk_darwin(v54);
  sub_1001626E0();
  uint64_t v57 = v56 - v55;
  uint64_t v58 = type metadata accessor for EnvironmentAction();
  uint64_t v59 = sub_100109308(v58);
  __chkstk_darwin(v59);
  sub_1001626E0();
  uint64_t v62 = v61 - v60;
  uint64_t v63 = type metadata accessor for AppConfigurationAction();
  uint64_t v64 = sub_100109308(v63);
  __chkstk_darwin(v64);
  uint64_t v66 = (char *)&v236 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v67);
  uint64_t v69 = (char *)&v236 - v68;
  uint64_t v70 = sub_10017DF08(&qword_100E663F0);
  uint64_t v71 = sub_100109308(v70);
  __chkstk_darwin(v71);
  sub_100109314();
  uint64_t v254 = v72;
  uint64_t v73 = sub_10017DF08(&qword_100E66418);
  uint64_t v74 = sub_100109308(v73);
  __chkstk_darwin(v74);
  sub_100109314();
  uint64_t v256 = v75;
  uint64_t v76 = sub_10017DF08(&qword_100E66420);
  uint64_t v77 = sub_100109308(v76);
  __chkstk_darwin(v77);
  sub_100109314();
  uint64_t v257 = v78;
  uint64_t v79 = sub_10017DF08(&qword_100E66428);
  uint64_t v80 = sub_100109308(v79);
  __chkstk_darwin(v80);
  sub_100109314();
  uint64_t v258 = v81;
  uint64_t v82 = sub_10017DF08(&qword_100E66430);
  uint64_t v83 = sub_100109308(v82);
  __chkstk_darwin(v83);
  sub_100109314();
  uint64_t v259 = v84;
  uint64_t v85 = sub_10017DF08(&qword_100E66438);
  uint64_t v86 = sub_100109308(v85);
  __chkstk_darwin(v86);
  sub_100109314();
  uint64_t v260 = v87;
  uint64_t v88 = sub_10017DF08(&qword_100E66440);
  uint64_t v89 = sub_100109308(v88);
  __chkstk_darwin(v89);
  sub_100109314();
  uint64_t v91 = v90;
  sub_100129064();
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v92);
  sub_1001626E0();
  uint64_t v95 = (char *)(v94 - v93);
  sub_100166778(v262, v94 - v93, (void (*)(void))type metadata accessor for MainAction);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      sub_100171D74((uint64_t)v95, (uint64_t)v69, (void (*)(void))type metadata accessor for AppConfigurationAction);
      sub_100166778((uint64_t)v69, (uint64_t)v66, (void (*)(void))type metadata accessor for AppConfigurationAction);
      type metadata accessor for AppConfiguration();
      sub_100162E4C();
      uint64_t v165 = v91;
      (*(void (**)(uint64_t, char *))(v164 + 32))(v91, v66);
      uint64_t v166 = type metadata accessor for AppConfigurationState();
      _s7Weather24LocationCompositionStateOwst_0(v91, 0, 1, v166);
      uint64_t v167 = v260;
      sub_100184148(v260);
      uint64_t v168 = v259;
      sub_1001D207C(v259);
      uint64_t v169 = v258;
      uint64_t v170 = sub_100163B44(v258);
      uint64_t v171 = v257;
      _s7Weather24LocationCompositionStateOwst_0(v257, 1, 1, v170);
      uint64_t v172 = v256;
      uint64_t v173 = _s7Weather24LocationCompositionStateOwst_0(v256, 1, 1, v252);
      uint64_t v174 = v254;
      sub_10017EC40(v173, v175, v176, v255);
      uint64_t v234 = v263;
      sub_100183844();
      uint64_t v177 = sub_10016356C();
      sub_100163034(v177, v178, v165, v167, v168, v179, v180, v181, v222, v169, v171, v172, v174, v226, v228, v229, v230, v231, v232,
        0,
        v234);
      sub_10017F4A8();
      sub_1001781AC(v174, &qword_100E663F0);
      sub_1001781AC(v172, &qword_100E66418);
      sub_1001781AC(v171, &qword_100E66420);
      sub_1001781AC(v169, &qword_100E66428);
      sub_1001781AC(v168, &qword_100E66430);
      sub_1001781AC(v167, &qword_100E66438);
      sub_1001781AC(v165, &qword_100E66440);
      uint64_t v125 = type metadata accessor for AppConfigurationAction;
      uint64_t v126 = (uint64_t)v69;
      goto LABEL_26;
    case 2:
      sub_100171D74((uint64_t)v95, v62, (void (*)(void))type metadata accessor for EnvironmentAction);
      sub_1001B1E64(v261 + 17, v261[20]);
      uint64_t v129 = v263;
      uint64_t v130 = v263 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
      swift_beginAccess();
      sub_100166778(v130, v57, (void (*)(void))type metadata accessor for EnvironmentState);
      uint64_t v95 = (char *)sub_1001C7328(v57, v129, v62);
      sub_100171DD4(v57, (void (*)(void))type metadata accessor for EnvironmentState);
      uint64_t v125 = type metadata accessor for EnvironmentAction;
      uint64_t v126 = v62;
      goto LABEL_26;
    case 3:
      sub_100171D74((uint64_t)v95, v53, (void (*)(void))type metadata accessor for LocationsAction);
      sub_1001B1E64(v261 + 22, v261[25]);
      uint64_t v182 = sub_1001A1A04(OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations);
      sub_100166778(v182, v48, (void (*)(void))type metadata accessor for LocationsState);
      uint64_t v95 = (char *)sub_1001CB864(v48, v57, v53);
      sub_100171DD4(v48, (void (*)(void))type metadata accessor for LocationsState);
      uint64_t v125 = type metadata accessor for LocationsAction;
      uint64_t v126 = v53;
      goto LABEL_26;
    case 4:
      uint64_t v119 = v241;
      sub_100171D74((uint64_t)v95, v241, (void (*)(void))type metadata accessor for NotificationsAction);
      sub_1001B1E64(v261 + 62, v261[65]);
      uint64_t v120 = v263;
      uint64_t v121 = *(void *)(v263 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications + 8);
      uint64_t v122 = *(void *)(v263 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications + 16);
      int v123 = *(unsigned __int8 *)(v263 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications + 24);
      uint64_t v124 = *(unsigned __int8 *)(v263 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v95 = (char *)sub_1001DFAF0(v124, v121, v122, v123, v120, v119);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v125 = type metadata accessor for NotificationsAction;
      uint64_t v126 = v119;
      goto LABEL_26;
    case 5:
      uint64_t v183 = v242;
      sub_100171D74((uint64_t)v95, v242, (void (*)(void))type metadata accessor for NotificationsOptInAction);
      sub_1001B1E64(v261 + 67, v261[70]);
      uint64_t v184 = sub_1001A1A04(OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn);
      uint64_t v185 = v243;
      sub_100166778(v184, v243, (void (*)(void))type metadata accessor for NotificationsOptInState);
      uint64_t v186 = sub_1001A495C();
      uint64_t v95 = (char *)sub_1001C4FF4(v186, v187, v188);
      sub_100171DD4(v185, (void (*)(void))type metadata accessor for NotificationsOptInState);
      uint64_t v189 = type metadata accessor for NotificationsOptInAction;
      goto LABEL_16;
    case 6:
      sub_100171D74((uint64_t)v95, v44, (void (*)(void))type metadata accessor for ViewAction);
      sub_1001B1E64(v261 + 37, v261[40]);
      uint64_t v214 = sub_1001A1A04(OBJC_IVAR____TtCV7Weather9MainState8_Storage_view);
      uint64_t v215 = v237;
      sub_100166778(v214, v237, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v95 = (char *)sub_1001E1864(v215, v57, v44);
      sub_100171DD4(v215, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v216 = type metadata accessor for ViewAction;
      goto LABEL_25;
    case 7:
      uint64_t v183 = v238;
      sub_100171D74((uint64_t)v95, v238, (void (*)(void))type metadata accessor for ModalViewAction);
      sub_1001B1E64(v261 + 42, v261[45]);
      uint64_t v190 = sub_1001A1A04(OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView);
      uint64_t v191 = v239;
      sub_100166778(v190, v239, (void (*)(void))type metadata accessor for ModalViewState);
      uint64_t v192 = sub_1001A495C();
      uint64_t v95 = (char *)sub_100A7A528(v192, v193, v194);
      sub_100171DD4(v191, (void (*)(void))type metadata accessor for ModalViewState);
      uint64_t v189 = type metadata accessor for ModalViewAction;
LABEL_16:
      uint64_t v125 = v189;
      uint64_t v126 = v183;
      goto LABEL_26;
    case 8:
      uint64_t v115 = v240;
      sub_100171D74((uint64_t)v95, v240, (void (*)(void))type metadata accessor for LocationViewAction);
      uint64_t v217 = sub_1001A2758(v261 + 47, v261[50]);
      uint64_t v95 = sub_10029F554(v217, v218);
      uint64_t v118 = type metadata accessor for LocationViewAction;
      goto LABEL_23;
    case 9:
      uint64_t v131 = v249;
      sub_100171D74((uint64_t)v95, v249, (void (*)(void))type metadata accessor for WeatherDataAction);
      uint64_t v132 = type metadata accessor for AppConfigurationState();
      uint64_t v236 = v91;
      sub_10017EC40(v132, v133, v134, v132);
      sub_100184148(v260);
      sub_1001D207C(v259);
      uint64_t v135 = sub_100163B44(v258);
      _s7Weather24LocationCompositionStateOwst_0(v257, 1, 1, v135);
      uint64_t v136 = v256;
      uint64_t v137 = _s7Weather24LocationCompositionStateOwst_0(v256, 1, 1, v252);
      uint64_t v138 = v254;
      sub_10017EC40(v137, v139, v140, v255);
      sub_1001B1E64(v261 + 52, v261[55]);
      uint64_t v141 = v263;
      uint64_t v142 = *(int **)(v263 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
      uint64_t v143 = *(void *)(v263 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 8);
      uint64_t v95 = *(char **)(v263 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
      uint64_t v144 = *(void *)(v263 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v145 = sub_1001BAAA4(v142, v143, (uint64_t)v95, v144, v141, v131);
      uint64_t v147 = v146;
      uint64_t v149 = v148;
      uint64_t v151 = v150;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v233 = v141;
      uint64_t v227 = (uint64_t)v145;
      uint64_t v225 = v136;
      uint64_t v152 = v257;
      uint64_t v224 = v257;
      uint64_t v153 = v258;
      uint64_t v223 = v258;
      uint64_t v154 = sub_10016356C();
      uint64_t v155 = v236;
      uint64_t v157 = v259;
      uint64_t v156 = v260;
      sub_100163034(v154, v158, v236, v260, v259, v159, v160, v161, v222, v223, v224, v225, v138, v227, v147, v149, v151, 0, 0,
        0,
        v233);
      sub_10017F4A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1001781AC(v138, &qword_100E663F0);
      sub_1001781AC(v256, &qword_100E66418);
      sub_1001781AC(v152, &qword_100E66420);
      sub_1001781AC(v153, &qword_100E66428);
      sub_1001781AC(v157, &qword_100E66430);
      sub_1001781AC(v156, &qword_100E66438);
      sub_1001781AC(v155, &qword_100E66440);
      uint64_t v125 = type metadata accessor for WeatherDataAction;
      uint64_t v126 = v249;
      goto LABEL_26;
    case 10:
      uint64_t v44 = v245;
      sub_100171D74((uint64_t)v95, v245, (void (*)(void))type metadata accessor for DebugAction);
      sub_1001B1E64(v261 + 57, v261[60]);
      uint64_t v219 = v263;
      uint64_t v220 = *(unsigned __int8 *)(v263 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState);
      uint64_t v221 = *(void *)(v263 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState + 8);
      swift_bridgeObjectRetain();
      uint64_t v95 = (char *)sub_10039B930(v220, v221, v219, v44);
      swift_bridgeObjectRelease();
      uint64_t v216 = type metadata accessor for DebugAction;
LABEL_25:
      uint64_t v125 = v216;
      uint64_t v126 = v44;
      goto LABEL_26;
    case 11:
      uint64_t v115 = v246;
      sub_100171D74((uint64_t)v95, v246, (void (*)(void))type metadata accessor for ConditionDetailViewAction);
      uint64_t v127 = sub_1001A2758(v261 + 72, v261[75]);
      uint64_t v95 = (char *)sub_100B34364(v127, v128);
      uint64_t v118 = type metadata accessor for ConditionDetailViewAction;
      goto LABEL_23;
    case 12:
      char v162 = *v95;
      sub_1001B1E64(v261 + 77, v261[80]);
      return sub_100879B00(v263, v162);
    case 13:
      uint64_t v115 = v247;
      sub_100171D74((uint64_t)v95, v247, (void (*)(void))type metadata accessor for MoonDetailViewAction);
      uint64_t v195 = sub_1001A2758(v261 + 82, v261[85]);
      uint64_t v95 = (char *)sub_100871F94(v195, v196);
      uint64_t v118 = type metadata accessor for MoonDetailViewAction;
      goto LABEL_23;
    case 14:
      uint64_t v115 = v248;
      sub_100171D74((uint64_t)v95, v248, (void (*)(void))type metadata accessor for AveragesDetailViewAction);
      uint64_t v116 = sub_1001A2758(v261 + 87, v261[90]);
      uint64_t v95 = (char *)sub_1009B7F38(v116, v117);
      uint64_t v118 = type metadata accessor for AveragesDetailViewAction;
      goto LABEL_23;
    case 15:
      sub_1001B1E64(v261 + 92, v261[95]);
      return sub_100A907E0(v263);
    case 16:
      swift_bridgeObjectRelease();
      uint64_t v95 = (char *)v263;
      swift_retain();
      return (uint64_t)v95;
    case 17:
      uint64_t v115 = v244;
      sub_100171D74((uint64_t)v95, v244, (void (*)(void))type metadata accessor for PerformanceTestAction);
      uint64_t v197 = sub_1001A2758(v261 + 27, v261[30]);
      uint64_t v95 = (char *)sub_100883E08(v197, v198);
      uint64_t v118 = type metadata accessor for PerformanceTestAction;
LABEL_23:
      uint64_t v125 = v118;
      uint64_t v126 = v115;
LABEL_26:
      sub_100171DD4(v126, (void (*)(void))v125);
      return (uint64_t)v95;
    case 18:
      __break(1u);
      return result;
    case 19:
      uint64_t v199 = type metadata accessor for AppConfigurationState();
      sub_10017EC40(v199, v200, v201, v199);
      uint64_t v202 = v260;
      sub_100184148(v260);
      uint64_t v203 = v259;
      sub_1001D207C(v259);
      uint64_t v204 = v258;
      _s7Weather24LocationCompositionStateOwst_0(v258, 1, 1, v253);
      uint64_t v205 = v257;
      Date.init()();
      uint64_t v206 = type metadata accessor for TimeState();
      _s7Weather24LocationCompositionStateOwst_0(v205, 0, 1, v206);
      uint64_t v207 = v256;
      _s7Weather24LocationCompositionStateOwst_0(v256, 1, 1, v252);
      uint64_t v208 = v254;
      _s7Weather24LocationCompositionStateOwst_0(v254, 1, 1, v255);
      uint64_t v235 = v263;
      sub_100183844();
      uint64_t v209 = sub_10016356C();
      sub_100163034(v209, v210, v91, v202, v203, v211, v212, v213, v222, v204, v205, v207, v208, v226, v228, v229, v230, v231, v232,
        0,
        v235);
      sub_10017F4A8();
      sub_1001781AC(v208, &qword_100E663F0);
      sub_1001781AC(v207, &qword_100E66418);
      sub_1001781AC(v205, &qword_100E66420);
      sub_1001781AC(v204, &qword_100E66428);
      sub_1001781AC(v203, &qword_100E66430);
      sub_1001781AC(v202, &qword_100E66438);
      uint64_t v114 = v91;
      goto LABEL_20;
    default:
      unsigned __int8 v97 = *v95;
      sub_1001B1E64(v261 + 7, v261[10]);
      uint64_t v98 = v263;
      BOOL v99 = sub_1001E1410(*(unsigned __int8 *)(v263 + 24), v97);
      uint64_t v100 = type metadata accessor for AppConfigurationState();
      uint64_t v101 = v91;
      sub_10017EC40(v100, v102, v103, v100);
      uint64_t v104 = v260;
      sub_100184148(v260);
      uint64_t v105 = v259;
      sub_1001D207C(v259);
      uint64_t v106 = v258;
      uint64_t v107 = sub_100163B44(v258);
      uint64_t v108 = v257;
      _s7Weather24LocationCompositionStateOwst_0(v257, 1, 1, v107);
      uint64_t v109 = v256;
      _s7Weather24LocationCompositionStateOwst_0(v256, 1, 1, v252);
      uint64_t v110 = v254;
      _s7Weather24LocationCompositionStateOwst_0(v254, 1, 1, v255);
      sub_100183844();
      sub_100163034(0, v99, v101, v104, v105, v111, v112, v113, 0, v106, v108, v109, v110, v226, v228, v229, v230, v231, v232,
        0,
        v98);
      sub_10017F4A8();
      sub_1001781AC(v110, &qword_100E663F0);
      sub_1001781AC(v109, &qword_100E66418);
      sub_1001781AC(v108, &qword_100E66420);
      sub_1001781AC(v106, &qword_100E66428);
      sub_1001781AC(v105, &qword_100E66430);
      sub_1001781AC(v104, &qword_100E66438);
      uint64_t v114 = v101;
LABEL_20:
      sub_1001781AC(v114, &qword_100E66440);
      return (uint64_t)v95;
  }
}

uint64_t type metadata accessor for LocationViewAction()
{
  uint64_t result = qword_100E791E0;
  if (!qword_100E791E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for ConditionDetailViewAction()
{
  uint64_t result = qword_100E86728;
  if (!qword_100E86728) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for AveragesDetailViewAction()
{
  uint64_t result = qword_100E6FAB8;
  if (!qword_100E6FAB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for AppConfigurationAction()
{
  uint64_t result = qword_100EA3BA8;
  if (!qword_100EA3BA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for PerformanceTestAction()
{
  uint64_t result = qword_100EA2188;
  if (!qword_100EA2188) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for MoonDetailViewAction()
{
  uint64_t result = qword_100EB34E0;
  if (!qword_100EB34E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for DebugAction()
{
  uint64_t result = qword_100E9D938;
  if (!qword_100E9D938) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100171D14(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_100171D74(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_100171DD4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100171E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E663F0);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v67 = v6;
  uint64_t v7 = sub_10017DF08(&qword_100E66418);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v66 = v9;
  uint64_t v10 = sub_10017DF08(&qword_100E66420);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = sub_10017DF08(&qword_100E66428);
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_1001626E0();
  uint64_t v19 = v18 - v17;
  uint64_t v20 = sub_10017DF08(&qword_100E66430);
  uint64_t v21 = sub_100109308(v20);
  __chkstk_darwin(v21);
  sub_1001626E0();
  uint64_t v24 = v23 - v22;
  uint64_t v25 = sub_10017DF08(&qword_100E66438);
  uint64_t v26 = sub_100109308(v25);
  __chkstk_darwin(v26);
  sub_1001626E0();
  uint64_t v29 = v28 - v27;
  uint64_t v30 = sub_10017DF08(&qword_100E66440);
  uint64_t v31 = sub_100109308(v30);
  __chkstk_darwin(v31);
  sub_1001626E0();
  uint64_t v34 = v33 - v32;
  uint64_t v35 = type metadata accessor for BannerStateComputer();
  uint64_t v36 = (int *)(v35 - 8);
  __chkstk_darwin(v35);
  sub_1001626E0();
  uint64_t v39 = v38 - v37;
  sub_100166838(a2, v38 - v37, (void (*)(void))type metadata accessor for MainAction);
  uint64_t v40 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_contentStatusBanners);
  *(void *)(v39 + v36[7]) = a1;
  *(void *)(v39 + v36[8]) = v40;
  uint64_t v41 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess();
  *(unsigned char *)(v39 + v36[9]) = *(unsigned char *)(v41 + 2) == 4;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_10017263C();
  uint64_t v43 = type metadata accessor for AppConfigurationState();
  sub_100179C70(v34, v44, v45, v43);
  uint64_t v46 = type metadata accessor for EnvironmentState();
  sub_100179C70(v29, v47, v48, v46);
  uint64_t v49 = type metadata accessor for LocationsState();
  sub_100179C70(v24, v50, v51, v49);
  uint64_t v52 = type metadata accessor for NotificationsOptInState();
  sub_100179C70(v19, v53, v54, v52);
  uint64_t v55 = type metadata accessor for TimeState();
  uint64_t v58 = sub_100179C70(v14, v56, v57, v55);
  uint64_t v59 = type metadata accessor for ViewState(v58);
  uint64_t v62 = sub_100179C70(v66, v60, v61, v59);
  uint64_t v63 = type metadata accessor for ModalViewState(v62);
  _s7Weather24LocationCompositionStateOwst_0(v67, 1, 1, v63);
  uint64_t v64 = sub_1001659F0(0, 3, v34, v29, v24, 0, 0, 0, 0, v19, v14, v66, v67, 0, 0, 0, 0, 0, 0, v42, a1);
  swift_bridgeObjectRelease();
  sub_1001781AC(v67, &qword_100E663F0);
  sub_1001781AC(v66, &qword_100E66418);
  sub_1001781AC(v14, &qword_100E66420);
  sub_1001781AC(v19, &qword_100E66428);
  sub_1001781AC(v24, &qword_100E66430);
  sub_1001781AC(v29, &qword_100E66438);
  sub_1001781AC(v34, &qword_100E66440);
  sub_100173018(v39, (void (*)(void))type metadata accessor for BannerStateComputer);
  return v64;
}

void sub_10017225C(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 168) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_100172278(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_1001722A4()
{
  return v0;
}

uint64_t sub_1001722D8@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return sub_1001B49E8(v2, (uint64_t)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
}

uint64_t sub_100172308(uint64_t a1)
{
  uint64_t v4 = *(void **)(v1 + 1192);
  uint64_t v5 = (uint64_t)v4 + *(int *)(a1 + 48);
  *uint64_t v4 = 6;
  return _s7Weather24LocationCompositionStateOwst_0(v5, 1, 1, v2);
}

uint64_t sub_10017234C()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t sub_100172370(uint64_t a1, uint64_t *a2)
{
  return sub_10018C6DC(a2);
}

uint64_t sub_10017238C()
{
  return v0;
}

uint64_t sub_1001723A0(uint64_t a1)
{
  uint64_t v4 = *(int *)(a1 + 20);
  uint64_t v5 = v1 + v4;
  uint64_t v6 = v2 + v4;
  uint64_t v8 = *(void *)(v2 + v4);
  uint64_t v7 = *(void *)(v2 + v4 + 8);
  *(void *)uint64_t v5 = v8;
  *(void *)(v5 + 8) = v7;
  uint64_t v9 = *(void *)(v6 + 24);
  *(void *)(v5 + 16) = *(void *)(v6 + 16);
  *(void *)(v5 + 24) = v9;
  *(unsigned char *)(v5 + 32) = *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 48);
  *(void *)(v5 + 40) = *(void *)(v6 + 40);
  *(void *)(v5 + 48) = v10;
  *(unsigned char *)(v1 + *(int *)(a1 + 24)) = *(unsigned char *)(v2 + *(int *)(a1 + 24));
  return swift_bridgeObjectRetain();
}

uint64_t sub_100172408()
{
  return v0;
}

uint64_t sub_100172420()
{
  return TimeZone.init(identifier:)();
}

uint64_t sub_100172440()
{
  return v0;
}

uint64_t sub_10017244C()
{
  *uint64_t v0 = 0x8000000000000000;
  return v1;
}

uint64_t sub_100172470()
{
  return sub_1001781AC(v1, v0);
}

uint64_t sub_100172494()
{
  return 0;
}

uint64_t sub_1001724A8()
{
  return v0;
}

uint64_t sub_1001724C0()
{
  return type metadata accessor for Text.Measurements();
}

uint64_t sub_1001724DC()
{
  return type metadata accessor for ModalViewState.LocationDetailModal(0);
}

uint64_t sub_100172510()
{
  return *(void *)(v0 - 544);
}

uint64_t sub_100172528()
{
  return 2;
}

uint64_t sub_10017253C()
{
  return Measurement.init(value:unit:)();
}

uint64_t sub_100172564()
{
  return v0;
}

uint64_t type metadata accessor for BannerStateComputer()
{
  uint64_t result = qword_100EA99F8;
  if (!qword_100EA99F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001725D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009010CC);
}

uint64_t sub_1001725EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10098C88C);
}

uint64_t sub_100172600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006E3770);
}

uint64_t sub_100172614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100983F20);
}

uint64_t sub_100172628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10099F768);
}

uint64_t sub_10017263C()
{
  uint64_t v0 = type metadata accessor for CurrentLocation();
  __chkstk_darwin(v0 - 8);
  uint64_t v64 = (uint64_t)&v60 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for LocationsAction();
  uint64_t v2 = __chkstk_darwin(v68);
  uint64_t v69 = (uint64_t)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v71 = (uint64_t)&v60 - v4;
  uint64_t v5 = type metadata accessor for LocationViewAction();
  __chkstk_darwin(v5 - 8);
  uint64_t v67 = (uint64_t)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for LocationViewerViewAction();
  uint64_t v7 = __chkstk_darwin(v61);
  uint64_t v63 = (uint64_t)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v62 = (uint64_t)&v60 - v9;
  uint64_t v65 = type metadata accessor for ViewAction();
  uint64_t v10 = __chkstk_darwin(v65);
  uint64_t v66 = (uint64_t)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v70 = (uint64_t)&v60 - v12;
  uint64_t v13 = type metadata accessor for ModalViewAction();
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v60 - v17;
  uint64_t v19 = type metadata accessor for WeatherDataAction();
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v22 = (uint64_t *)((char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v20);
  uint64_t v72 = (uint64_t)&v60 - v23;
  uint64_t v24 = type metadata accessor for EnvironmentAction();
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v60 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v60 - v28;
  uint64_t v30 = type metadata accessor for MainAction();
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v60 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100166838(v73, (uint64_t)v32, (void (*)(void))type metadata accessor for MainAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      sub_10017487C((uint64_t)v32, (uint64_t)v29, (void (*)(void))type metadata accessor for EnvironmentAction);
      sub_100166838((uint64_t)v29, (uint64_t)v27, (void (*)(void))type metadata accessor for EnvironmentAction);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_100033D34();
        sub_1001E1218();
        sub_10002253C();
      }
      else
      {
        sub_100173018((uint64_t)v27, (void (*)(void))type metadata accessor for EnvironmentAction);
      }
      uint64_t v48 = type metadata accessor for EnvironmentAction;
      uint64_t v49 = (uint64_t)v29;
      goto LABEL_35;
    case 3u:
      uint64_t v41 = v71;
      sub_10017487C((uint64_t)v32, v71, (void (*)(void))type metadata accessor for LocationsAction);
      uint64_t v42 = v69;
      sub_100166838(v41, v69, (void (*)(void))type metadata accessor for LocationsAction);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_100173018(v42, (void (*)(void))type metadata accessor for LocationsAction);
      }
      else
      {
        uint64_t v50 = v42;
        uint64_t v51 = v64;
        sub_10017487C(v50, v64, (void (*)(void))&type metadata accessor for CurrentLocation);
        sub_100A083A0(v51);
        sub_100173018(v51, (void (*)(void))&type metadata accessor for CurrentLocation);
      }
      uint64_t v52 = type metadata accessor for LocationsAction;
      goto LABEL_34;
    case 6u:
      uint64_t v41 = v70;
      sub_10017487C((uint64_t)v32, v70, (void (*)(void))type metadata accessor for ViewAction);
      uint64_t v43 = v66;
      sub_100166838(v41, v66, (void (*)(void))type metadata accessor for ViewAction);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if ((EnumCaseMultiPayload - 8) < 2)
      {
        sub_10002253C();
        goto LABEL_33;
      }
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v57 = v62;
        sub_10017487C(v43, v62, (void (*)(void))type metadata accessor for LocationViewerViewAction);
        uint64_t v58 = v63;
        sub_100166838(v57, v63, (void (*)(void))type metadata accessor for LocationViewerViewAction);
        if (swift_getEnumCaseMultiPayload() == 6)
        {
          sub_10002253C();
          uint64_t v45 = type metadata accessor for LocationViewerViewAction;
          uint64_t v46 = v57;
        }
        else
        {
          sub_100173018(v57, (void (*)(void))type metadata accessor for LocationViewerViewAction);
          uint64_t v46 = v58;
          uint64_t v45 = type metadata accessor for LocationViewerViewAction;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 5)
        {
          sub_100173018(v43, (void (*)(void))type metadata accessor for ViewAction);
          goto LABEL_33;
        }
        sub_1001E1218();
        uint64_t v45 = type metadata accessor for ViewAction;
        uint64_t v46 = v43;
      }
      sub_100173018(v46, (void (*)(void))v45);
LABEL_33:
      uint64_t v52 = type metadata accessor for ViewAction;
LABEL_34:
      uint64_t v48 = v52;
      uint64_t v49 = v41;
LABEL_35:
      sub_100173018(v49, (void (*)(void))v48);
LABEL_36:
      type metadata accessor for BannerStateComputer();
      return swift_bridgeObjectRetain();
    case 7u:
      sub_10017487C((uint64_t)v32, (uint64_t)v18, (void (*)(void))type metadata accessor for ModalViewAction);
      sub_100166838((uint64_t)v18, (uint64_t)v16, (void (*)(void))type metadata accessor for ModalViewAction);
      if (swift_getEnumCaseMultiPayload() == 4) {
        sub_10002253C();
      }
      else {
        sub_100173018((uint64_t)v16, (void (*)(void))type metadata accessor for ModalViewAction);
      }
      uint64_t v48 = type metadata accessor for ModalViewAction;
      uint64_t v49 = (uint64_t)v18;
      goto LABEL_35;
    case 8u:
      uint64_t v47 = v67;
      sub_10017487C((uint64_t)v32, v67, (void (*)(void))type metadata accessor for LocationViewAction);
      sub_100A057F0(v47);
      uint64_t v48 = type metadata accessor for LocationViewAction;
      uint64_t v49 = v47;
      goto LABEL_35;
    case 9u:
      uint64_t v33 = v72;
      sub_10017487C((uint64_t)v32, v72, (void (*)(void))type metadata accessor for WeatherDataAction);
      sub_100166838(v33, (uint64_t)v22, (void (*)(void))type metadata accessor for WeatherDataAction);
      int v34 = swift_getEnumCaseMultiPayload();
      if (v34 == 2)
      {
        uint64_t v53 = *v22;
        unint64_t v54 = v22[1];
        uint64_t v55 = v22[2];
        unint64_t v56 = v22[3];
        swift_bridgeObjectRelease();
        sub_100303D6C(v55, v56);
        sub_100A062F4(v53, v54, v33);
        swift_bridgeObjectRelease();
      }
      else if (v34 == 4)
      {
        uint64_t v35 = *v22;
        unint64_t v36 = v22[1];
        uint64_t v37 = (int *)sub_10017DF08(&qword_100E6BBC0);
        uint64_t v38 = (uint64_t)v22 + v37[12];
        uint64_t v39 = (uint64_t)v22 + v37[16];
        uint64_t v40 = (uint64_t)v22 + v37[20];
        sub_1001EAAFC(v35, v36, v33);
        swift_bridgeObjectRelease();
        sub_100173018(v40, (void (*)(void))type metadata accessor for NewsDataModel);
        sub_100173018(v39, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
        sub_100173018(v38, (void (*)(void))type metadata accessor for WeatherData);
      }
      else
      {
        sub_100173018((uint64_t)v22, (void (*)(void))type metadata accessor for WeatherDataAction);
      }
      uint64_t v48 = type metadata accessor for WeatherDataAction;
      uint64_t v49 = v33;
      goto LABEL_35;
    case 0x10u:
      sub_100A05B84(*(void *)v32, *((void *)v32 + 1));
      swift_bridgeObjectRelease();
      goto LABEL_36;
    default:
      sub_100173018((uint64_t)v32, (void (*)(void))type metadata accessor for MainAction);
      goto LABEL_36;
  }
}

uint64_t sub_100173018(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

void sub_100173070(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v6 = type metadata accessor for WeatherDataAction();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ViewAction();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ModalViewAction();
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for EnvironmentAction();
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for MainAction();
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001669EC(a1, (uint64_t)v20, (void (*)(void))type metadata accessor for MainAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      sub_10022522C(*v20, a2, a3);
      return;
    case 2u:
      sub_100164E28((uint64_t)v20, (uint64_t)v17, (void (*)(void))type metadata accessor for EnvironmentAction);
      sub_1001E5158((uint64_t)v17, a2, a3);
      uint64_t v21 = type metadata accessor for EnvironmentAction;
      uint64_t v22 = (uint64_t)v17;
      goto LABEL_8;
    case 6u:
      sub_100164E28((uint64_t)v20, (uint64_t)v11, (void (*)(void))type metadata accessor for ViewAction);
      sub_100C0AC94((uint64_t)v11, a2, a3);
      uint64_t v21 = type metadata accessor for ViewAction;
      uint64_t v22 = (uint64_t)v11;
      goto LABEL_8;
    case 7u:
      sub_100164E28((uint64_t)v20, (uint64_t)v14, (void (*)(void))type metadata accessor for ModalViewAction);
      sub_100C0A670((uint64_t)v14, a2, a3);
      uint64_t v21 = type metadata accessor for ModalViewAction;
      uint64_t v22 = (uint64_t)v14;
      goto LABEL_8;
    case 9u:
      sub_100164E28((uint64_t)v20, (uint64_t)v8, (void (*)(void))type metadata accessor for WeatherDataAction);
      sub_100174E70((uint64_t)v8, a2, a3);
      uint64_t v21 = type metadata accessor for WeatherDataAction;
      uint64_t v22 = (uint64_t)v8;
      goto LABEL_8;
    default:
      uint64_t v21 = type metadata accessor for MainAction;
      uint64_t v22 = (uint64_t)v20;
LABEL_8:
      sub_100159398(v22, (void (*)(void))v21);
      return;
  }
}

uint64_t type metadata accessor for ViewAction()
{
  uint64_t result = qword_100EB2140;
  if (!qword_100EB2140) {
    return swift_getSingletonMetadata();
  }
  return result;
}

{
  return type metadata accessor for ViewAction();
}

uint64_t type metadata accessor for ModalViewAction()
{
  uint64_t result = qword_100E7FF70;
  if (!qword_100E7FF70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for LocationViewerViewAction()
{
  uint64_t result = qword_100E969A8;
  if (!qword_100E969A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001734A8(uint64_t a1)
{
  type metadata accessor for MainAction();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v2 = type metadata accessor for AppConfiguration();
      goto LABEL_78;
    case 2u:
      type metadata accessor for EnvironmentAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v2 = type metadata accessor for Locale();
          goto LABEL_78;
        case 3u:
          type metadata accessor for ActivityAction();
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 1)
          {
            type metadata accessor for PreviewLocation();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                goto LABEL_77;
              case 1u:
                goto LABEL_96;
              case 2u:
                goto LABEL_106;
              case 3u:
                goto LABEL_75;
              default:
                goto LABEL_129;
            }
            goto LABEL_129;
          }
          if (EnumCaseMultiPayload) {
            goto LABEL_129;
          }
          type metadata accessor for SavedLocation();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v2 = type metadata accessor for SavedLocation.Placeholder();
            goto LABEL_78;
          }
          goto LABEL_77;
        case 4u:
          goto LABEL_75;
        case 9u:
          if (*(void *)(a1 + 8) >= 2uLL) {
            goto LABEL_75;
          }
          goto LABEL_129;
        case 0xBu:
          type metadata accessor for ConfiguredUnitsAction();
          int v23 = swift_getEnumCaseMultiPayload();
          if (v23 == 1)
          {
            uint64_t v40 = type metadata accessor for UnitConfiguration.Temperature();
            if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v40)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(a1, v40);
            }
            goto LABEL_129;
          }
          if (v23) {
            goto LABEL_129;
          }
          uint64_t v2 = type metadata accessor for ConfiguredUnit();
          break;
        default:
          goto LABEL_129;
      }
      goto LABEL_78;
    case 3u:
      type metadata accessor for LocationsAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for CurrentLocation();
          int v3 = swift_getEnumCaseMultiPayload();
          if (v3 == 2 || v3 == 1) {
            goto LABEL_77;
          }
          goto LABEL_26;
        case 1u:
          goto LABEL_77;
        case 2u:
          goto LABEL_29;
        case 5u:
          goto LABEL_75;
        case 6u:
          sub_10015303C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
          break;
        default:
          goto LABEL_129;
      }
      goto LABEL_129;
    case 4u:
      type metadata accessor for NotificationsAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v4 = type metadata accessor for LocationModel();
          if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v4)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
          }
          uint64_t v5 = a1 + *(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48);
          uint64_t v6 = type metadata accessor for URL();
          goto LABEL_104;
        case 2u:
          uint64_t v24 = type metadata accessor for NotificationSubscription.Location();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(a1, v24);
          uint64_t v25 = &qword_100E6F630;
          goto LABEL_68;
        case 3u:
        case 4u:
          goto LABEL_75;
        case 5u:
          uint64_t v26 = type metadata accessor for Location();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(a1, v26);
          uint64_t v25 = &qword_100E6F638;
LABEL_68:
          uint64_t v14 = a1 + *(int *)(sub_10017DF08(v25) + 48);
          uint64_t v15 = type metadata accessor for NotificationSubscription.Kind();
          goto LABEL_128;
        default:
          goto LABEL_129;
      }
    case 5u:
      type metadata accessor for NotificationsOptInAction();
      int v7 = swift_getEnumCaseMultiPayload();
      if (v7 == 4) {
        goto LABEL_43;
      }
      if (v7 == 3) {
        goto LABEL_75;
      }
      if (v7 != 2) {
        goto LABEL_129;
      }
      goto LABEL_77;
    case 6u:
      type metadata accessor for ViewAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for ListViewAction();
          int v8 = swift_getEnumCaseMultiPayload();
          if (v8 == 2) {
            goto LABEL_80;
          }
          goto LABEL_71;
        case 1u:
          type metadata accessor for LocationViewerViewAction();
          int v8 = swift_getEnumCaseMultiPayload();
          if (v8 == 2)
          {
LABEL_80:
            uint64_t v2 = type metadata accessor for Location.Identifier();
          }
          else if (v8 == 1)
          {
LABEL_94:
            uint64_t v2 = type metadata accessor for WeatherMapOverlayKind();
          }
          else
          {
LABEL_71:
            if (v8) {
              goto LABEL_129;
            }
            uint64_t v2 = type metadata accessor for LocationModel();
          }
          break;
        case 3u:
          type metadata accessor for SearchViewAction();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v2 = type metadata accessor for CodableError();
              goto LABEL_78;
            case 1u:
            case 2u:
              goto LABEL_75;
            case 3u:
            case 6u:
              goto LABEL_77;
            case 4u:
LABEL_96:
              uint64_t v2 = type metadata accessor for LocationOfInterest();
              goto LABEL_78;
            case 5u:
LABEL_106:

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v5 = a1 + *(int *)(type metadata accessor for SearchLocation() + 32);
              uint64_t v6 = type metadata accessor for Location();
              goto LABEL_104;
            default:
              goto LABEL_129;
          }
          goto LABEL_129;
        case 4u:
          type metadata accessor for InteractiveMapViewAction();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
            case 1u:
            case 2u:
            case 4u:
              goto LABEL_77;
            case 3u:
              goto LABEL_94;
            default:
              goto LABEL_129;
          }
          goto LABEL_129;
        case 5u:
          uint64_t v14 = a1 + *(int *)(type metadata accessor for DisplayMetrics() + 36);
          uint64_t v15 = type metadata accessor for DynamicTypeSize();
          goto LABEL_128;
        default:
          goto LABEL_129;
      }
      goto LABEL_78;
    case 7u:
      type metadata accessor for ModalViewAction();
      int v9 = swift_getEnumCaseMultiPayload();
      if (v9 == 3)
      {
        if ((~*(void *)a1 & 0xF000000000000006) != 0) {
          sub_100274E38(*(void *)a1);
        }
      }
      else if (!v9)
      {
        type metadata accessor for LocationPreviewViewAction();
        if (swift_getEnumCaseMultiPayload() == 1) {
          goto LABEL_77;
        }
      }
      goto LABEL_129;
    case 8u:
      type metadata accessor for LocationViewAction();
      int v3 = swift_getEnumCaseMultiPayload();
      if (v3 == 2)
      {
        uint64_t v16 = type metadata accessor for Location();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a1, v16);
        uint64_t v14 = a1 + *(int *)(sub_10017DF08(&qword_100E66450) + 48);
        uint64_t v15 = type metadata accessor for LocationOfInterest();
LABEL_128:
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
        goto LABEL_129;
      }
      if (v3 == 1)
      {
        type metadata accessor for LocationComponentAction(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v17 = type metadata accessor for URL();
            goto LABEL_101;
          case 1u:
            uint64_t v17 = type metadata accessor for WeatherMapOverlayKind();
            goto LABEL_101;
          case 2u:
            uint64_t v17 = type metadata accessor for DetailCondition();
LABEL_101:
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a1, v17);
            break;
          case 4u:
            uint64_t v41 = a1 + *(int *)(sub_10017DF08(&qword_100E66480) + 48);
            uint64_t v42 = type metadata accessor for Location();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
            break;
          default:
            break;
        }
        uint64_t v5 = a1 + *(int *)(sub_10017DF08(&qword_100E66458) + 64);
        uint64_t v6 = type metadata accessor for Date();
LABEL_104:
        uint64_t v43 = v6;
        if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v5, v43);
        }
        goto LABEL_129;
      }
LABEL_26:
      if (v3) {
        goto LABEL_129;
      }
LABEL_77:
      uint64_t v2 = type metadata accessor for Location();
      goto LABEL_78;
    case 9u:
      type metadata accessor for WeatherDataAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 7u:
          goto LABEL_75;
        case 2u:
          swift_bridgeObjectRelease();
          if (*(void *)(a1 + 24) >= 0xEuLL) {
            swift_bridgeObjectRelease();
          }
          goto LABEL_75;
        case 3u:
        case 9u:
LABEL_29:
          swift_bridgeObjectRelease();
          goto LABEL_75;
        case 4u:
          swift_bridgeObjectRelease();
          uint64_t v27 = sub_10017DF08(&qword_100E6BBC0);
          uint64_t v28 = a1 + *(int *)(v27 + 48);
          swift_bridgeObjectRelease();
          uint64_t v29 = (int *)type metadata accessor for WeatherData(0);
          uint64_t v30 = v28 + v29[5];
          uint64_t v31 = type metadata accessor for Locale();
          if (!_s7Weather24LocationCompositionStateOwet_0(v30, 1, v31)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v30, v31);
          }
          uint64_t v32 = v28 + v29[6];
          uint64_t v33 = type metadata accessor for WeatherDataModel();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
          uint64_t v34 = v28 + v29[7];
          uint64_t v35 = sub_10017DF08(&qword_100E63738);
          if (!_s7Weather24LocationCompositionStateOwet_0(v34, 1, v35))
          {
            uint64_t v36 = type metadata accessor for Date();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v34, v36);
          }
          uint64_t v37 = v28 + v29[8];
          type metadata accessor for WeatherData.WeatherStatisticsState(0);
          int v38 = swift_getEnumCaseMultiPayload();
          if (v38 == 1)
          {
            uint64_t v44 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v37, v44);
          }
          else if (!v38)
          {
            swift_bridgeObjectRelease();
          }
          uint64_t v45 = v28 + v29[9];
          uint64_t v46 = type metadata accessor for WeatherDataOverrides();
          if (!_s7Weather24LocationCompositionStateOwet_0(v45, 1, v46))
          {
            uint64_t v47 = type metadata accessor for Date();
            if (!_s7Weather24LocationCompositionStateOwet_0(v45, 1, v47)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v45, v47);
            }
            uint64_t v48 = v45 + *(int *)(v46 + 20);
            if (!_s7Weather24LocationCompositionStateOwet_0(v48, 1, v47)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v48, v47);
            }
          }
          uint64_t v75 = v27;
          uint64_t v49 = a1 + *(int *)(v27 + 64);
          uint64_t v50 = type metadata accessor for UUID();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v49, v50);
          uint64_t v51 = (int *)type metadata accessor for PreprocessedWeatherData();
          swift_bridgeObjectRelease();
          uint64_t v52 = v49 + v51[6];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v53 = v52 + *(int *)(type metadata accessor for FeelsLikeComponentPreprocessedDataModel() + 28);
          uint64_t v54 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
          if (!_s7Weather24LocationCompositionStateOwet_0(v53, 1, v54))
          {
            swift_bridgeObjectRelease();
            uint64_t v55 = v53 + *(int *)(v54 + 20);
            uint64_t v56 = type metadata accessor for TemperatureScaleConfiguration();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v56 - 8) + 8))(v55, v56);
            type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          uint64_t v57 = v49 + v51[7];
          swift_bridgeObjectRelease();
          uint64_t v58 = v57 + *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
          uint64_t v59 = type metadata accessor for WeatherDescription();
          if (!_s7Weather24LocationCompositionStateOwet_0(v58, 1, v59)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v59 - 8) + 8))(v58, v59);
          }
          uint64_t v60 = v49 + v51[8];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v61 = v60 + *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
          uint64_t v62 = type metadata accessor for Date();
          uint64_t v74 = *(void (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8);
          v74(v61, v62);
          uint64_t v63 = type metadata accessor for WeatherConditionBackgroundTimeData();
          uint64_t v64 = v61 + *(int *)(v63 + 20);
          uint64_t v65 = type metadata accessor for Elevation();
          if (!_s7Weather24LocationCompositionStateOwet_0(v64, 1, v65)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v65 - 8) + 8))(v64, v65);
          }
          uint64_t v66 = v61 + *(int *)(v63 + 24);
          uint64_t v67 = type metadata accessor for BackgroundMoonData();
          if (!_s7Weather24LocationCompositionStateOwet_0(v66, 1, v67)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v67 - 8) + 8))(v66, v67);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v59 - 8) + 8))(v49 + v51[10], v59);
          type metadata accessor for UVIndexComponentPreprocessedDataModel();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v68 = v49 + v51[12];
          uint64_t v69 = type metadata accessor for PressureTrend();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v69 - 8) + 8))(v68, v69);
          type metadata accessor for PressureComponentPreprocessedDataModel();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v70 = v49 + v51[14];
          v74(v70, v62);
          uint64_t v71 = v70 + *(int *)(v63 + 20);
          if (!_s7Weather24LocationCompositionStateOwet_0(v71, 1, v65)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v65 - 8) + 8))(v71, v65);
          }
          uint64_t v72 = v70 + *(int *)(v63 + 24);
          if (!_s7Weather24LocationCompositionStateOwet_0(v72, 1, v67)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v67 - 8) + 8))(v72, v67);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v39 = *(int *)(v75 + 80);
          goto LABEL_126;
        case 5u:
          swift_bridgeObjectRelease();
          uint64_t v39 = *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
LABEL_126:
          uint64_t v14 = a1 + v39;
          type metadata accessor for NewsDataModel();
          if (swift_getEnumCaseMultiPayload() == 1) {
            goto LABEL_75;
          }
          uint64_t v15 = type metadata accessor for News();
          break;
        case 6u:
          swift_bridgeObjectRelease();
          uint64_t v14 = a1 + *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
          uint64_t v15 = type metadata accessor for AvailableDataSets();
          goto LABEL_128;
        case 8u:
          swift_bridgeObjectRelease();
          uint64_t v14 = a1 + *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
          uint64_t v15 = type metadata accessor for WeatherStatisticsModel();
          goto LABEL_128;
        default:
          goto LABEL_129;
      }
      goto LABEL_128;
    case 0xAu:
      type metadata accessor for DebugAction();
      int v10 = swift_getEnumCaseMultiPayload();
      if (v10 == 1) {
        goto LABEL_77;
      }
      if (v10) {
        goto LABEL_129;
      }
      uint64_t v11 = type metadata accessor for WeatherCondition();
      if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v11)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
      }
      sub_10017DF08(&qword_100E6F648);
LABEL_75:
      swift_bridgeObjectRelease();
      goto LABEL_129;
    case 0xBu:
      type metadata accessor for ConditionDetailViewAction();
      int v12 = swift_getEnumCaseMultiPayload();
      if (v12 == 2)
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = (int *)type metadata accessor for DetailChartSelection();
        uint64_t v19 = a1 + v18[5];
        uint64_t v20 = type metadata accessor for Date();
        uint64_t v21 = *(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8);
        v21(v19, v20);
        v21(a1 + v18[6], v20);
        v21(a1 + v18[7], v20);
      }
      else
      {
        if (v12 == 1)
        {
LABEL_47:
          uint64_t v2 = type metadata accessor for DetailCondition();
        }
        else
        {
LABEL_42:
          if (v12) {
            goto LABEL_129;
          }
LABEL_43:
          uint64_t v2 = type metadata accessor for Date();
        }
LABEL_78:
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
      }
LABEL_129:
      swift_release();
      return swift_bridgeObjectRelease();
    case 0xDu:
      type metadata accessor for MoonDetailViewAction();
      int v13 = swift_getEnumCaseMultiPayload();
      if (v13 == 1) {
        goto LABEL_43;
      }
      if (v13) {
        goto LABEL_129;
      }
      type metadata accessor for MoonDetailSelectedDate();
      int v12 = swift_getEnumCaseMultiPayload();
      if (v12 != 2 && v12 != 1) {
        goto LABEL_42;
      }
      goto LABEL_43;
    case 0xEu:
      type metadata accessor for AveragesDetailViewAction();
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_129;
      }
      uint64_t v14 = a1 + *(int *)(type metadata accessor for DetailHeroChartLollipopPosition(0) + 20);
      uint64_t v15 = type metadata accessor for Date();
      goto LABEL_128;
    case 0x10u:
      goto LABEL_75;
    case 0x11u:
      type metadata accessor for PerformanceTestAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          goto LABEL_47;
        case 2u:
          goto LABEL_77;
        case 3u:
          uint64_t v14 = a1 + *(int *)(sub_10017DF08((uint64_t *)&unk_100EA0250) + 48);
          uint64_t v15 = type metadata accessor for WeatherMapOverlayKind();
          goto LABEL_128;
        case 4u:
          uint64_t v2 = type metadata accessor for WeatherCondition();
          goto LABEL_78;
        default:
          goto LABEL_129;
      }
      goto LABEL_129;
    default:
      goto LABEL_129;
  }
}

uint64_t sub_10017481C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10017487C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_1001748D0(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + a2[6];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v5 + *(int *)(type metadata accessor for FeelsLikeComponentPreprocessedDataModel() + 28);
  uint64_t v7 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = v6 + *(int *)(v7 + 20);
    uint64_t v9 = type metadata accessor for TemperatureScaleConfiguration();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = a1 + a2[7];
  swift_bridgeObjectRelease();
  uint64_t v11 = v10 + *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
  uint64_t v12 = type metadata accessor for WeatherDescription();
  if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  uint64_t v13 = a1 + a2[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = v13 + *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
  v16(v14, v15);
  uint64_t v17 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v18 = v14 + *(int *)(v17 + 20);
  uint64_t v19 = type metadata accessor for Elevation();
  if (!_s7Weather24LocationCompositionStateOwet_0(v18, 1, v19)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  }
  uint64_t v20 = v14 + *(int *)(v17 + 24);
  uint64_t v21 = type metadata accessor for BackgroundMoonData();
  if (!_s7Weather24LocationCompositionStateOwet_0(v20, 1, v21)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1 + a2[10], v12);
  type metadata accessor for UVIndexComponentPreprocessedDataModel();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = a1 + a2[12];
  uint64_t v23 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
  type metadata accessor for PressureComponentPreprocessedDataModel();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v24 = a1 + a2[14];
  v16(v24, v15);
  uint64_t v25 = v24 + *(int *)(v17 + 20);
  if (!_s7Weather24LocationCompositionStateOwet_0(v25, 1, v19)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v25, v19);
  }
  uint64_t v26 = v24 + *(int *)(v17 + 24);
  if (!_s7Weather24LocationCompositionStateOwet_0(v26, 1, v21)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v26, v21);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void sub_100174E70(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v151 = a3;
  uint64_t v157 = (void (**)(char *, char *, uint64_t))a2;
  uint64_t v139 = (void *)type metadata accessor for VisibleLocationFailedLoadingEvent();
  uint64_t v138 = *(v139 - 1);
  __chkstk_darwin(v139);
  uint64_t v137 = (char *)v133 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = type metadata accessor for VisibleLocationFinishedLoadingEvent.EndReason();
  uint64_t v142 = *(void *)(v143 - 8);
  __chkstk_darwin(v143);
  uint64_t v144 = (char *)v133 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = type metadata accessor for VisibleLocationFinishedLoadingEvent();
  uint64_t v145 = *(void *)(v146 - 8);
  __chkstk_darwin(v146);
  uint64_t v150 = (char *)v133 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = type metadata accessor for Date();
  uint64_t v154 = *(void (***)(char *, char *, uint64_t))(v156 - 8);
  __chkstk_darwin(v156);
  uint64_t v148 = (char *)v133 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v147 = (char *)v133 - v9;
  __chkstk_darwin(v10);
  uint64_t v153 = (char *)v133 - v11;
  __chkstk_darwin(v12);
  uint64_t v149 = (char *)v133 - v13;
  __chkstk_darwin(v14);
  uint64_t v141 = (char *)v133 - v15;
  __chkstk_darwin(v16);
  uint64_t v140 = (char *)v133 - v17;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)v133 - v19;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)v133 - v22;
  __chkstk_darwin(v24);
  uint64_t v26 = (void (*)(char *, char *, uint64_t))((char *)v133 - v25);
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)v133 - v28;
  uint64_t v30 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v30 - 8);
  uint64_t v32 = (char *)v133 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)v133 - v34;
  __chkstk_darwin(v36);
  uint64_t v152 = (char *)v133 - v37;
  __chkstk_darwin(v38);
  uint64_t v40 = (char *)v133 - v39;
  uint64_t v41 = type metadata accessor for WeatherDataAction();
  __chkstk_darwin(v41);
  uint64_t v43 = (void *)((char *)v133 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1001669EC(a1, (uint64_t)v43, (void (*)(void))type metadata accessor for WeatherDataAction);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 4)
  {
    uint64_t v135 = v26;
    uint64_t v136 = v29;
    uint64_t v51 = *v43;
    unint64_t v52 = v43[1];
    uint64_t v53 = (int *)sub_10017DF08(&qword_100E6BBC0);
    uint64_t v54 = (char *)v43 + v53[12];
    uint64_t v55 = (uint64_t)v43 + v53[16];
    uint64_t v56 = (uint64_t)v43 + v53[20];
    uint64_t v57 = sub_100177428((uint64_t)v157);
    if (v58)
    {
      if (v51 == v57 && v58 == v52)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v60 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v60 & 1) == 0) {
          goto LABEL_17;
        }
      }
      uint64_t v149 = (char *)v56;
      uint64_t v153 = v54;
      uint64_t v79 = v155 + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_startLoadTime;
      swift_beginAccess();
      sub_10006DF38(v79, (uint64_t)v35, (uint64_t *)&unk_100E73CA0);
      uint64_t v80 = v156;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v156) == 1)
      {
        swift_bridgeObjectRelease();
        sub_100178160((uint64_t)v35, (uint64_t *)&unk_100E73CA0);
        sub_100159398((uint64_t)v149, (void (*)(void))type metadata accessor for NewsDataModel);
        uint64_t v81 = v55;
      }
      else
      {
        uint64_t v148 = (char *)v55;
        BOOL v99 = v154;
        uint64_t v100 = v136;
        v154[4](v136, v35, v80);
        sub_10004B4C4(v51, v52, (uint64_t)v157);
        if (v101)
        {
          ((void (*)(char *, uint64_t))v99[1])(v100, v80);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v102 = v99[2];
          uint64_t v139 = v102;
          uint64_t v147 = (char *)v79;
          uint64_t v103 = (char *)v135;
          v102((char *)v135, v151, v80);
          v102(v23, v100, v80);
          uint64_t v104 = v103;
          uint64_t v105 = (uint64_t)v147;
          uint64_t v157 = v99 + 2;
          v102(v20, v104, v80);
          swift_bridgeObjectRetain();
          uint64_t v106 = Logger.logObject.getter();
          os_log_type_t v107 = static os_log_type_t.default.getter();
          int v108 = v107;
          if (os_log_type_enabled(v106, v107))
          {
            uint64_t v109 = swift_slowAlloc();
            LODWORD(v151) = v108;
            uint64_t v110 = v109;
            uint64_t v111 = swift_slowAlloc();
            *(_DWORD *)uint64_t v110 = 141558531;
            uint64_t v158 = 1752392040;
            v159[0] = v111;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v110 + 12) = 2081;
            swift_bridgeObjectRetain();
            uint64_t v158 = sub_10016414C(v51, v52, v159);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v110 + 22) = 2048;
            Date.distance(to:)();
            uint64_t v158 = v112;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            uint64_t v113 = v154[1];
            ((void (*)(char *, uint64_t))v113)(v23, v80);
            ((void (*)(char *, uint64_t))v113)(v20, v80);
            _os_log_impl((void *)&_mh_execute_header, v106, (os_log_type_t)v151, "%{private,mask.hash}s finished loading while displayed. User witnessed %fs of loading.", (uint8_t *)v110, 0x20u);
            swift_arrayDestroy();
            swift_slowDealloc();
            uint64_t v114 = v135;
            uint64_t v100 = v136;
            swift_slowDealloc();

            uint64_t v105 = (uint64_t)v147;
          }
          else
          {
            swift_bridgeObjectRelease_n();

            uint64_t v113 = v154[1];
            ((void (*)(char *, uint64_t))v113)(v23, v80);
            ((void (*)(char *, uint64_t))v113)(v20, v80);
            uint64_t v114 = v135;
          }
          uint64_t v128 = (void (*)(char *, void, uint64_t))v139;
          ((void (*)(char *, char *, uint64_t))v139)(v140, v100, v80);
          v128(v141, v114, v80);
          (*(void (**)(char *, void, uint64_t))(v142 + 104))(v144, enum case for VisibleLocationFinishedLoadingEvent.EndReason.loadCompleted(_:), v143);
          uint64_t v129 = v155;
          uint64_t v130 = v114;
          uint64_t v131 = v150;
          VisibleLocationFinishedLoadingEvent.init(location:startTime:endTime:endReason:loadingBeganDuringObservation:)();
          uint64_t v132 = (uint64_t)v152;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v152, 1, 1, v80);
          swift_beginAccess();
          sub_1001E75A0(v132, v105);
          swift_endAccess();
          sub_1001B1E64((void *)(v129 + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_backend), *(void *)(v129 + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_backend + 24));
          dispatch thunk of WeatherDataVisibleLocationLoadingTelemetryBackend.record(event:)();
          (*(void (**)(char *, uint64_t))(v145 + 8))(v131, v146);
          ((void (*)(void (*)(char *, char *, uint64_t), uint64_t))v113)(v130, v80);
          ((void (*)(char *, uint64_t))v113)(v136, v80);
        }
        sub_100159398((uint64_t)v149, (void (*)(void))type metadata accessor for NewsDataModel);
        uint64_t v81 = (uint64_t)v148;
      }
      sub_100159398(v81, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      uint64_t v61 = (void (*)(void))type metadata accessor for WeatherData;
      uint64_t v62 = (uint64_t)v153;
      goto LABEL_55;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    sub_100159398(v56, (void (*)(void))type metadata accessor for NewsDataModel);
    sub_100159398(v55, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
    uint64_t v61 = (void (*)(void))type metadata accessor for WeatherData;
    uint64_t v62 = (uint64_t)v54;
    goto LABEL_55;
  }
  if (EnumCaseMultiPayload != 2)
  {
    if (!EnumCaseMultiPayload)
    {
      uint64_t v46 = *v43;
      unint64_t v45 = v43[1];
      uint64_t v47 = sub_100177428((uint64_t)v157);
      if (v48)
      {
        if (v46 == v47 && v48 == v45)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v50 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v50 & 1) == 0) {
            goto LABEL_45;
          }
        }
        uint64_t v71 = v155;
        uint64_t v72 = v155 + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_startLoadTime;
        swift_beginAccess();
        sub_10006DF38(v72, (uint64_t)v40, (uint64_t *)&unk_100E73CA0);
        uint64_t v73 = v156;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v156) == 1)
        {
          sub_100178160((uint64_t)v40, (uint64_t *)&unk_100E73CA0);
          uint64_t v74 = (uint64_t)v152;
          v154[2](v152, v151, v73);
          _s7Weather24LocationCompositionStateOwst_0(v74, 0, 1, v73);
          swift_beginAccess();
          sub_1001E75A0(v74, v72);
          swift_endAccess();
          *(unsigned char *)(v71
                   + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_loadBeganDuringObservation) = 0;
          swift_bridgeObjectRetain();
          uint64_t v75 = Logger.logObject.getter();
          os_log_type_t v76 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v75, v76))
          {
            uint64_t v77 = swift_slowAlloc();
            uint64_t v78 = swift_slowAlloc();
            *(_DWORD *)uint64_t v77 = 141558275;
            uint64_t v158 = 1752392040;
            v159[0] = v78;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v77 + 12) = 2081;
            swift_bridgeObjectRetain();
            uint64_t v158 = sub_10016414C(v46, v45, v159);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v75, v76, "%{private,mask.hash}s started loading while displayed.", (uint8_t *)v77, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          return;
        }
        swift_bridgeObjectRelease();
        uint64_t v84 = (uint64_t)v40;
LABEL_40:
        sub_100178160(v84, (uint64_t *)&unk_100E73CA0);
        return;
      }
LABEL_45:
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v61 = (void (*)(void))type metadata accessor for WeatherDataAction;
    uint64_t v62 = (uint64_t)v43;
LABEL_55:
    sub_100159398(v62, v61);
    return;
  }
  uint64_t v64 = *v43;
  unint64_t v63 = v43[1];
  uint64_t v66 = v43[4];
  unint64_t v65 = v43[5];
  sub_100303D6C(v43[2], v43[3]);
  uint64_t v67 = sub_100177428((uint64_t)v157);
  if (!v68)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  if (v64 == v67 && v68 == v63)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v70 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v70 & 1) == 0) {
      goto LABEL_24;
    }
  }
  uint64_t v82 = v155 + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_startLoadTime;
  swift_beginAccess();
  sub_10006DF38(v82, (uint64_t)v32, (uint64_t *)&unk_100E73CA0);
  uint64_t v83 = v156;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v156) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v84 = (uint64_t)v32;
    goto LABEL_40;
  }
  uint64_t v85 = v154;
  uint64_t v86 = (uint64_t)v149;
  v154[4](v149, v32, v83);
  sub_10004B4C4(v64, v63, (uint64_t)v157);
  if (v87)
  {
    ((void (*)(uint64_t, uint64_t))v85[1])(v86, v83);
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  uint64_t v157 = (void (**)(char *, char *, uint64_t))v66;
  uint64_t v136 = (char *)v82;
  uint64_t v88 = v85[2];
  uint64_t v89 = v153;
  v88(v153, v151, v83);
  v88(v147, (char *)v86, v83);
  uint64_t v151 = (char *)(v85 + 2);
  uint64_t v135 = v88;
  v88(v148, v89, v83);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v90 = Logger.logObject.getter();
  os_log_type_t v91 = static os_log_type_t.default.getter();
  BOOL v92 = os_log_type_enabled(v90, v91);
  v133[1] = v65;
  if (v92)
  {
    uint64_t v93 = swift_slowAlloc();
    uint64_t v94 = swift_slowAlloc();
    *(_DWORD *)uint64_t v93 = 141558787;
    uint64_t v158 = 1752392040;
    v159[0] = v94;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v93 + 12) = 2081;
    swift_bridgeObjectRetain();
    uint64_t v158 = sub_10016414C(v64, v63, v159);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v93 + 22) = 2048;
    uint64_t v95 = v147;
    unint64_t v96 = v148;
    Date.distance(to:)();
    uint64_t v158 = v97;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v98 = (void (**)(char *, char *, uint64_t))v85[1];
    uint64_t v134 = (unint64_t)(v85 + 1) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    ((void (*)(char *, uint64_t))v98)(v95, v156);
    uint64_t v154 = v98;
    ((void (*)(char *, uint64_t))v98)(v96, v156);
    *(_WORD *)(v93 + 32) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v158 = sub_10016414C((uint64_t)v157, v65, v159);
    uint64_t v83 = v156;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v90, v91, "%{private,mask.hash}s failed loading while displayed. User witnessed %fs of loading. Error=%s", (uint8_t *)v93, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v86 = (uint64_t)v149;
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();

    uint64_t v115 = (void (**)(char *, char *, uint64_t))v85[1];
    uint64_t v134 = (unint64_t)(v85 + 1) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    ((void (*)(char *, uint64_t))v115)(v147, v83);
    uint64_t v154 = v115;
    ((void (*)(char *, uint64_t))v115)(v148, v83);
    swift_bridgeObjectRelease_n();
  }
  uint64_t v116 = v140;
  uint64_t v117 = v135;
  v135(v140, (char *)v86, v83);
  uint64_t v118 = v141;
  v117(v141, v153, v83);
  (*(void (**)(char *, void, uint64_t))(v142 + 104))(v144, enum case for VisibleLocationFinishedLoadingEvent.EndReason.loadFailed(_:), v143);
  uint64_t v119 = v155;
  VisibleLocationFinishedLoadingEvent.init(location:startTime:endTime:endReason:loadingBeganDuringObservation:)();
  uint64_t v120 = (void *)(v119 + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_backend);
  sub_1001B1E64(v120, v120[3]);
  dispatch thunk of WeatherDataVisibleLocationLoadingTelemetryBackend.record(event:)();
  uint64_t v121 = v86;
  uint64_t v122 = v86;
  uint64_t v123 = v156;
  v117(v116, (char *)v121, v156);
  v117(v118, v153, v123);
  uint64_t v124 = v137;
  VisibleLocationFailedLoadingEvent.init(location:startTime:endTime:errorDescription:)();
  uint64_t v125 = (uint64_t)v152;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v152, 1, 1, v123);
  uint64_t v126 = (uint64_t)v136;
  swift_beginAccess();
  sub_1001E75A0(v125, v126);
  swift_endAccess();
  sub_1001B1E64(v120, v120[3]);
  dispatch thunk of WeatherDataVisibleLocationLoadingTelemetryBackend.record(event:)();
  (*(void (**)(char *, void *))(v138 + 8))(v124, v139);
  (*(void (**)(char *, uint64_t))(v145 + 8))(v150, v146);
  uint64_t v127 = v154;
  ((void (*)(char *, uint64_t))v154)(v153, v123);
  ((void (*)(uint64_t, uint64_t))v127)(v122, v123);
}

void **sub_100176244(void **a1, void **a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      uint64_t v6 = type metadata accessor for Locale();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_32;
    case 3u:
      uint64_t v8 = type metadata accessor for ActivityAction();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        type metadata accessor for PreviewLocation();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v17 = type metadata accessor for LocationOfInterest();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
            break;
          case 2u:
            uint64_t v19 = *a2;
            uint64_t v18 = a2[1];
            *a1 = *a2;
            a1[1] = v18;
            uint64_t v20 = a2[3];
            a1[2] = a2[2];
            a1[3] = v20;
            uint64_t v21 = a2[5];
            a1[4] = a2[4];
            a1[5] = v21;
            a1[6] = a2[6];
            uint64_t v22 = type metadata accessor for SearchLocation();
            uint64_t v23 = *(int *)(v22 + 32);
            uint64_t v33 = v22;
            __dst = (char *)a1 + v23;
            uint64_t v32 = (char *)a2 + v23;
            uint64_t v24 = type metadata accessor for Location();
            id v25 = v19;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v24))
            {
              uint64_t v26 = sub_10017DF08(&qword_100E639E8);
              memcpy(__dst, v32, *(void *)(*(void *)(v26 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(__dst, v32, v24);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v24);
            }
            uint64_t v28 = *(int *)(v33 + 36);
            uint64_t v29 = (char *)a1 + v28;
            uint64_t v30 = (char *)a2 + v28;
            *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
            v29[16] = v30[16];
            break;
          case 3u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            uint64_t v27 = a2[3];
            a1[2] = a2[2];
            a1[3] = v27;
            swift_bridgeObjectRetain();
            break;
          default:
            uint64_t v14 = type metadata accessor for Location();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
            break;
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (EnumCaseMultiPayload) {
          goto LABEL_17;
        }
        type metadata accessor for SavedLocation();
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v10 = type metadata accessor for SavedLocation.Placeholder();
        }
        else {
          uint64_t v10 = type metadata accessor for Location();
        }
        (*(void (**)(void **, void **))(*(void *)(v10 - 8) + 16))(a1, a2);
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_31;
    case 4u:
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
      goto LABEL_32;
    case 9u:
      unint64_t v11 = (unint64_t)a2[1];
      if (v11 >= 2)
      {
        *a1 = *a2;
        a1[1] = (void *)v11;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
      }
      goto LABEL_32;
    case 0xBu:
      uint64_t v8 = type metadata accessor for ConfiguredUnitsAction();
      int v12 = swift_getEnumCaseMultiPayload();
      if (v12 == 1)
      {
        uint64_t v15 = type metadata accessor for UnitConfiguration.Temperature();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v15))
        {
          uint64_t v16 = sub_10017DF08(&qword_100E6F620);
          memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v15);
        }
      }
      else
      {
        if (v12)
        {
LABEL_17:
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          goto LABEL_32;
        }
        uint64_t v13 = type metadata accessor for ConfiguredUnit();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
      }
LABEL_31:
      swift_storeEnumTagMultiPayload();
LABEL_32:
      swift_storeEnumTagMultiPayload();
      return a1;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
  }
}

uint64_t sub_1001767F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for Elevation();
  if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = type metadata accessor for BackgroundMoonData();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v10(v7, v8);
  }
  return result;
}

uint64_t sub_100176928(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100176980(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001769D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100AB503C);
}

uint64_t sub_1001769EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003CDBBC);
}

uint64_t sub_100176A00(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      type metadata accessor for CurrentLocation();
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result <= 2) {
        goto LABEL_3;
      }
      break;
    case 1:
LABEL_3:
      uint64_t v3 = type metadata accessor for Location();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    case 2:
      swift_bridgeObjectRelease();
      goto LABEL_8;
    case 5:
LABEL_8:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 6:
      uint64_t v5 = *(void *)a1;
      uint64_t v6 = *(void *)(a1 + 8);
      unsigned __int8 v7 = *(unsigned char *)(a1 + 16);
      uint64_t result = sub_10015303C(v5, v6, v7);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100176B1C()
{
  sub_10018AF90();
  uint64_t v1 = sub_10017DF08(&qword_100E63770);
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  uint64_t v3 = sub_100152344();
  type metadata accessor for LocationWeatherDataState(v3);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_10012B520(v0, 1, v5);
  if (v6)
  {
    sub_100181DE8();
    sub_10017B210();
    swift_bridgeObjectRelease();
    return sub_100164EA0();
  }
  else
  {
    uint64_t v7 = sub_100176C84();
    sub_10019B358(v7, v8, v9, (uint64_t)&unk_100E63A38, (uint64_t)type metadata accessor for LocationWeatherDataState, v10, (uint64_t)type metadata accessor for LocationWeatherDataState, v11, v13, v14);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100176C84()
{
  uint64_t v1 = sub_100176CD4();
  v2(v1);
  sub_100162E4C();
  sub_1001190D4();
  v3();
  return v0;
}

uint64_t sub_100176CD4()
{
  return 0;
}

uint64_t sub_100176D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, NSBundle a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = 0x74617265706D6554;
  unint64_t v10 = 0xEB00000000657275;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&a1, *(Swift::String_optional *)&a3, a5, *(Swift::String *)&v9, *(Swift::String *)&a8)._countAndFlagsBits;
}

uint64_t sub_100176D30()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100176D50()
{
  return EdgeInsets.init(_all:)();
}

uint64_t sub_100176D68()
{
  return type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
}

uint64_t sub_100176D98()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_100176DB8()
{
  return 0;
}

uint64_t sub_100176DC4()
{
  return v0;
}

uint64_t sub_100176DD8()
{
  return v0 + 32;
}

uint64_t sub_100176DE4()
{
  return type metadata accessor for DynamicTypeSize();
}

uint64_t sub_100176E04()
{
  return v0;
}

uint64_t sub_100176E1C()
{
  return v0;
}

uint64_t sub_100176E34()
{
  return 0;
}

uint64_t sub_100176E60()
{
  return v0;
}

void sub_100176E94()
{
  uint64_t v2 = *(void *)(v1 - 712);
  *uint64_t v0 = *(void *)(v1 - 704);
  v0[1] = v2;
}

uint64_t sub_100176EAC()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100176EC8()
{
  return static os_log_type_t.fault.getter();
}

uint64_t sub_100176EF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1001837E8();
  swift_isUniquelyReferenced_nonNull_native();
  sub_100188F0C();
  sub_100176F84();
  *unint64_t v10 = a10;
  sub_100166A98();
  return swift_bridgeObjectRelease();
}

void sub_100176F84()
{
  sub_1001837E8();
  uint64_t v23 = v1;
  uint64_t v24 = v2;
  uint64_t v4 = v3;
  uint64_t v5 = v0;
  char v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  Swift::Int v14 = *v0;
  sub_1001D23B8();
  sub_1001A03C0();
  if (v17)
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v18 = v15;
  char v19 = v16;
  sub_10017DF08(v4);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(v7 & 1, v14)) {
    goto LABEL_5;
  }
  unint64_t v20 = sub_1001D23B8();
  if ((v19 & 1) != (v21 & 1))
  {
LABEL_11:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v18 = v20;
LABEL_5:
  if (v19)
  {
    v23(0);
    sub_1001DFA9C();
    sub_100166A98();
  }
  else
  {
    sub_1001770CC(v18, v11, v9, v13, *v5, v24);
    sub_100166A98();
    swift_bridgeObjectRetain();
  }
}

void sub_1001770CC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void))
{
  *(void *)(a5 + 8 * (a1 >> 6) + 64) |= 1 << a1;
  char v7 = (void *)(*(void *)(a5 + 48) + 16 * a1);
  *char v7 = a2;
  v7[1] = a3;
  a6(0);
  sub_100176C84();
  sub_100172298();
  if (v9) {
    __break(1u);
  }
  else {
    *(void *)(a5 + 16) = v8;
  }
}

uint64_t sub_100177178(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_100177180(a1, a2, a3, *(void (**)(void))(v3 + 16));
}

uint64_t sub_100177180(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  uint64_t v5 = *a1 + 8;
  uint64_t result = UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *a1 = v5;
  return result;
}

uint64_t sub_1001771DC()
{
  return sub_1001771E4(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1001771E4(uint64_t (*a1)(void))
{
  return a1();
}

double sub_10017720C()
{
  return *(double *)(v0 + 16);
}

uint64_t sub_100177214(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 4)
  {
    uint64_t v3 = type metadata accessor for Date();
LABEL_6:
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  if (result != 3)
  {
    if (result != 2) {
      return result;
    }
    uint64_t v3 = type metadata accessor for Location();
    goto LABEL_6;
  }

  return swift_bridgeObjectRelease();
}

unsigned char *sub_1001772CC(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  char v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, active))
  {
    uint64_t v10 = sub_10017DF08(&qword_100E663D0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = type metadata accessor for Location.Identifier();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v11))
    {
      memcpy(v7, v8, *(void *)(*(void *)(active - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 16))(v7, v8, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v11);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, active);
  }
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100177428(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E663D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v46 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v47 = (char *)&v45 - v5;
  uint64_t v50 = type metadata accessor for ViewState.SecondaryViewState(0);
  __chkstk_darwin(v50);
  uint64_t v48 = (uint64_t *)((char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v49 = type metadata accessor for ViewState(0);
  __chkstk_darwin(v49);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LocationPreviewViewState(0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ModalViewState(0);
  __chkstk_darwin(v12);
  Swift::Int v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100E663E8);
  __chkstk_darwin(v15 - 8);
  char v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  unint64_t v20 = (char *)&v45 - v19;
  uint64_t v21 = sub_10017DF08(&qword_100E663D8);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for PreviewLocation();
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v45 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001783B4();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24) == 1)
  {
    uint64_t v27 = (int *)v49;
    sub_100178160((uint64_t)v23, &qword_100E663D8);
    sub_1001669EC(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, (uint64_t)v14, (void (*)(void))type metadata accessor for ModalViewState);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_10024D364((uint64_t)v14, (uint64_t)v20, &qword_100E663E8);
      sub_10006DF38((uint64_t)v20, (uint64_t)v17, &qword_100E663E8);
      uint64_t v28 = type metadata accessor for ModalViewState.MapViewModal(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v28) != 1)
      {
        sub_100164E28((uint64_t)v17, (uint64_t)v11, (void (*)(void))type metadata accessor for LocationPreviewViewState);
        sub_10081B8DC();
        uint64_t v30 = v37;
        sub_100159398((uint64_t)v11, (void (*)(void))type metadata accessor for LocationPreviewViewState);
        sub_100178160((uint64_t)v20, &qword_100E663E8);
        return v30;
      }
      sub_100178160((uint64_t)v20, &qword_100E663E8);
      sub_100178160((uint64_t)v17, &qword_100E663E8);
    }
    else
    {
      sub_100159398((uint64_t)v14, (void (*)(void))type metadata accessor for ModalViewState);
    }
    uint64_t v32 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
    uint64_t v33 = v27[10];
    uint64_t v34 = (uint64_t *)(v32 + v33 + *(int *)(type metadata accessor for WeatherMapPresentationState(0) + 28));
    if (v34[1])
    {
      uint64_t v30 = *v34;
      swift_bridgeObjectRetain();
      return v30;
    }
    uint64_t v35 = (uint64_t)v8;
    sub_1001669EC(v32, (uint64_t)v8, (void (*)(void))type metadata accessor for ViewState);
    uint64_t v36 = v48;
    sub_1001669EC((uint64_t)&v8[v27[5]], (uint64_t)v48, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_100159398((uint64_t)v36, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
    }
    else
    {
      uint64_t v38 = *v36;
      if (*(void *)&v8[v27[9] + 8] != 1
        || (id v39 = [self currentDevice],
            [v39 userInterfaceIdiom],
            v39,
            uint64_t v35 = (uint64_t)v8,
            (v8[v27[7]] & 1) != 0))
      {
LABEL_17:
        uint64_t v26 = v46;
        uint64_t v40 = (uint64_t)v47;
        sub_100159398(v35, (void (*)(void))type metadata accessor for ViewState);
        if (v38)
        {
          sub_1001669EC(v38 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, v40, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
          uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
          uint64_t v42 = v40;
          uint64_t v43 = 0;
        }
        else
        {
          uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
          uint64_t v42 = v40;
          uint64_t v43 = 1;
        }
        _s7Weather24LocationCompositionStateOwst_0(v42, v43, 1, active);
        sub_10006DF38(v40, (uint64_t)v26, &qword_100E663D0);
        type metadata accessor for LocationViewerActiveLocationState();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, active) == 1)
        {
          sub_100178160(v40, &qword_100E663D0);
          swift_release();
          sub_100178160((uint64_t)v26, &qword_100E663D0);
          return 0;
        }
        uint64_t v30 = sub_1001782AC();
        swift_release();
        sub_100178160(v40, &qword_100E663D0);
        uint64_t v31 = type metadata accessor for LocationViewerActiveLocationState;
        goto LABEL_6;
      }
      swift_release();
    }
    uint64_t v38 = 0;
    goto LABEL_17;
  }
  sub_100164E28((uint64_t)v23, (uint64_t)v26, (void (*)(void))type metadata accessor for PreviewLocation);
  sub_10081B8DC();
  uint64_t v30 = v29;
  uint64_t v31 = type metadata accessor for PreviewLocation;
LABEL_6:
  sub_100159398((uint64_t)v26, (void (*)(void))v31);
  return v30;
}

uint64_t sub_100177B04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A3D110);
}

uint64_t sub_100177B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A3D158);
}

uint64_t type metadata accessor for LocationPreviewViewState(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E7C208);
}

uint64_t sub_100177B4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  uint64_t v2 = sub_10017DF08(&qword_100E6D1D8);
  __chkstk_darwin(v2 - 8);
  uint64_t v39 = (uint64_t)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100E6DC08);
  __chkstk_darwin(v4 - 8);
  uint64_t v37 = (uint64_t)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Location();
  uint64_t v35 = *(void *)(v6 - 8);
  uint64_t v36 = v6;
  __chkstk_darwin(v6);
  uint64_t v34 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v40 = (uint64_t)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v38 = (char *)&v33 - v12;
  __chkstk_darwin(v11);
  Swift::Int v14 = (char *)&v33 - v13;
  uint64_t v33 = type metadata accessor for TimeZone();
  __chkstk_darwin(v33);
  uint64_t v15 = type metadata accessor for Location.Identifier();
  __chkstk_darwin(v15);
  uint64_t v16 = type metadata accessor for SavedLocation.Placeholder();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for SavedLocation();
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10016698C(v41, (uint64_t)v22, (void (*)(void))&type metadata accessor for SavedLocation);
  uint64_t v41 = v20;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v22, v16);
    SavedLocation.Placeholder.identifier.getter();
    static TimeZone.current.getter();
    static Date.now.getter();
    uint64_t v23 = type metadata accessor for Date();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v23);
    SavedLocation.Placeholder.searchTitle.getter();
    SavedLocation.Placeholder.searchSubtitle.getter();
    Location.init(identifier:timeZone:lastRefreshDate:searchTitle:searchSubtitle:preciseName:)();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  else
  {
    uint64_t v24 = v34;
    uint64_t v25 = v35;
    uint64_t v26 = v36;
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v34, v22, v36);
    uint64_t v27 = v37;
    _s7Weather24LocationCompositionStateOwst_0(v37, 1, 1, v15);
    uint64_t v28 = v39;
    _s7Weather24LocationCompositionStateOwst_0(v39, 1, 1, v33);
    uint64_t v29 = v40;
    Location.lastRefreshDate.getter();
    uint64_t v30 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0(v29, 1, v30) == 1)
    {
      uint64_t v31 = (uint64_t)v38;
      static Date.now.getter();
      sub_100178160(v40, (uint64_t *)&unk_100E73CA0);
    }
    else
    {
      uint64_t v31 = (uint64_t)v38;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v38, v40, v30);
    }
    _s7Weather24LocationCompositionStateOwst_0(v31, 0, 1, v30);
    Location.with(identifier:timeZone:lastRefreshDate:searchTitle:searchSubtitle:preciseName:secondaryName:)();
    sub_100178160(v31, (uint64_t *)&unk_100E73CA0);
    sub_100178160(v28, &qword_100E6D1D8);
    sub_100178160(v27, &qword_100E6DC08);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v24, v26);
  }
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100178110(uint64_t a1, uint64_t *a2)
{
  sub_10017DF08(a2);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_100178160(uint64_t a1, uint64_t *a2)
{
  sub_10017DF08(a2);
  sub_100162E4C();
  uint64_t v3 = sub_100162728();
  v4(v3);
  return a1;
}

uint64_t sub_1001781AC(uint64_t a1, uint64_t *a2)
{
  sub_10017DF08(a2);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100178200(uint64_t a1, uint64_t *a2)
{
  sub_10017DF08(a2);
  sub_100162880();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_100178254(uint64_t a1, uint64_t *a2)
{
  sub_10017DF08(a2);
  sub_100162880();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001782AC()
{
  uint64_t v2 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  uint64_t v6 = sub_1001D216C();
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_10011BFD8();
  sub_10016ECAC(v0, v1);
  sub_10017A364(v1);
  if (v8) {
    return static Location.currentLocationID.getter();
  }
  sub_100181630();
  v9();
  uint64_t v10 = Location.Identifier.id.getter();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0, v2);
  return v10;
}

uint64_t sub_1001783B4()
{
  type metadata accessor for ModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  sub_100182D40();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v21 - v5;
  uint64_t v7 = type metadata accessor for LocationPreviewViewState(0);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  sub_10016688C();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 4)
  {
    sub_10016688C();
    uint64_t v13 = type metadata accessor for ModalViewState.MapViewModal(0);
    sub_10012B520((uint64_t)v2, 1, v13);
    if (!v14) {
      goto LABEL_8;
    }
    sub_100178110((uint64_t)v2, &qword_100E663E8);
LABEL_7:
    uint64_t v15 = type metadata accessor for PreviewLocation();
    sub_1001633C8(v15);
    return sub_100159138((uint64_t)v6, (void (*)(void))type metadata accessor for ModalViewState);
  }
  if (EnumCaseMultiPayload) {
    goto LABEL_7;
  }
  sub_10016688C();
LABEL_8:
  sub_10016E3A8();
  sub_100159138((uint64_t)v6, (void (*)(void))type metadata accessor for ModalViewState);
  sub_10016688C();
  sub_100159138(v11, (void (*)(void))type metadata accessor for LocationPreviewViewState);
  type metadata accessor for PreviewLocation();
  sub_1001093B0();
  return _s7Weather24LocationCompositionStateOwst_0(v17, v18, v19, v20);
}

uint64_t type metadata accessor for PreviewLocation()
{
  uint64_t result = qword_100E99280;
  if (!qword_100E99280) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unsigned char *sub_100178660(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 4:
      uint64_t v9 = type metadata accessor for Date();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      break;
    case 3:
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      swift_bridgeObjectRetain();
      break;
    case 2:
      uint64_t v7 = type metadata accessor for Location();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = sub_10017DF08(&qword_100E6BBD8);
      a1[*(int *)(v8 + 48)] = a2[*(int *)(v8 + 48)];
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *sub_1001787B0(uint64_t *a1, unsigned __int8 *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = type metadata accessor for CurrentLocation();
      if (swift_getEnumCaseMultiPayload() > 2)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        uint64_t v14 = type metadata accessor for Location();
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_10;
    case 1u:
      uint64_t v7 = type metadata accessor for Location();
      (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = sub_10017DF08(&qword_100E6F628);
      *((unsigned char *)a1 + *(int *)(v8 + 48)) = a2[*(int *)(v8 + 48)];
      goto LABEL_10;
    case 2u:
      uint64_t v9 = *(void *)a2;
      uint64_t v10 = *((void *)a2 + 1);
      *a1 = v9;
      a1[1] = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_10;
    case 5u:
      *a1 = *(void *)a2;
      swift_bridgeObjectRetain();
      goto LABEL_10;
    case 6u:
      uint64_t v11 = *(void *)a2;
      uint64_t v12 = *((void *)a2 + 1);
      unsigned __int8 v13 = a2[16];
      sub_10015458C(v11, v12, v13);
      *a1 = v11;
      a1[1] = v12;
      *((unsigned char *)a1 + 16) = v13;
LABEL_10:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t sub_100178A60(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  a4(&v7);
  uint64_t v5 = *a1 + 8;
  uint64_t result = UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *a1 = v5;
  return result;
}

uint64_t sub_100178AC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100178AC8(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_100178ACC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t sub_100178B70(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_100178BD0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  sub_1001190D4();
  v4();
  return a2;
}

uint64_t sub_100178C2C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_100178C8C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_100178CEC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  sub_1001190D4();
  v4();
  return a2;
}

uint64_t sub_100178D48(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  sub_1001190D4();
  v4();
  return a2;
}

#error "100178DF0: call analysis failed (funcsize=31)"

uint64_t sub_100178E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_1001837E8();
  uint64_t v45 = v16;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  char v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  sub_100178F74(v27, v25);
  sub_1001D23B8();
  sub_1001A03C0();
  if (v30)
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v31 = v28;
  char v32 = v29;
  sub_10017DF08(v20);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(v22 & 1, (Swift::Int)v15)) {
    goto LABEL_5;
  }
  unint64_t v33 = sub_1001D23B8();
  if ((v32 & 1) != (v34 & 1))
  {
LABEL_13:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v31 = v33;
LABEL_5:
  if (v32)
  {
    v18(0);
    sub_100162E4C();
    sub_100166A98();
    return v38(v35, v36, v37, v38, v39, v40, v41, v42, a9, v45, a11, a12, a13, a14);
  }
  else
  {
    sub_100179234(v31, v26, v24, v14, *v15);
    sub_100166A98();
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_100178F74(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100178F88@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  v13[2] = a9;
  v13[3] = result;
  v13[4] = a2;
  v13[5] = a3;
  v13[6] = a4;
  v13[7] = a5;
  v13[8] = a6;
  v13[9] = a7;
  v13[10] = a8;
  v13[11] = v9;
  v13[12] = v10;
  v13[13] = v11;
  v13[14] = v12;
  return result;
}

uint64_t sub_100178FA8(uint64_t a1, uint64_t *a2)
{
  return sub_1001781AC(v2, a2);
}

uint64_t sub_100178FC0()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_100178FDC()
{
  *(void *)(v1 - 112) = v0;
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t sub_100179008()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10017902C()
{
  return type metadata accessor for DetailChartCondition();
}

uint64_t sub_100179048()
{
  return dispatch thunk of Collection.formIndex(after:)();
}

uint64_t sub_100179064()
{
  return type metadata accessor for WindComponentCompassViewModel();
}

uint64_t sub_100179088()
{
  return _s7Weather24LocationCompositionStateOwst_0(v0, 0, 1, v1);
}

uint64_t sub_1001790A8(uint64_t a1)
{
  *(unsigned char *)(a1 + 16) = v1;
  return swift_retain();
}

uint64_t sub_1001790C4@<X0>(unsigned int a1@<W8>)
{
  if (a1 > 1) {
    return (a1 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1001790D4()
{
  return v0;
}

uint64_t sub_100179100()
{
  return v0;
}

uint64_t sub_100179114()
{
  return v0;
}

uint64_t sub_10017912C()
{
  sub_1001B1E64(v0, *(void *)(v1 + 40));
  return dispatch thunk of SavedLocationsManagerType.savedLocations.getter();
}

uint64_t sub_100179168()
{
  return String.write(to:)();
}

uint64_t sub_100179188@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return sub_10052E3A0(a1, v3);
}

uint64_t sub_1001791B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return v9 + a9;
}

uint64_t sub_1001791CC()
{
  return 0;
}

uint64_t sub_1001791DC()
{
  uint64_t v3 = *(void *)(v1 - 320);
  return _s7Weather24LocationCompositionStateOwst_0(v0, 1, 1, v3);
}

uint64_t sub_100179200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a2 - 256);
  return sub_100178CEC(a1, v4, v2);
}

uint64_t sub_10017921C()
{
  return sub_100178110(v0, v1);
}

void sub_100179234(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = sub_100180F44(a1, a2, a3, a4, a5);
  v7(v6);
  sub_100162E4C();
  sub_1001190D4();
  v8();
  sub_100172298();
  if (v10) {
    __break(1u);
  }
  else {
    *(void *)(v5 + 16) = v9;
  }
}

uint64_t sub_1001792A0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100179304()
{
  return sub_1001792A0((uint64_t (*)(void))&Location.id.getter);
}

void sub_100179320(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
}

uint64_t sub_100179330(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_100179338(a1, a2, a3, *(void (**)(uint64_t *__return_ptr))(v3 + 16));
}

uint64_t sub_100179338(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  a4(&v7);
  uint64_t v5 = *a1 + 4;
  uint64_t result = UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *a1 = v5;
  return result;
}

uint64_t sub_10017939C@<X0>(_DWORD *a1@<X8>)
{
  return sub_1001793A4(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1001793A4@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1001793D8()
{
  return sub_1001793E0(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1001793E0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10017940C()
{
  return sub_100179414(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100179414(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_100179440()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_100179448(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      uint64_t v3 = type metadata accessor for LocationModel();
      if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v3)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      }
      uint64_t v4 = a1 + *(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48);
      uint64_t v5 = type metadata accessor for URL();
      uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v4, 1, v5);
      if (!result)
      {
        uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
        uint64_t v13 = v4;
        uint64_t v12 = v5;
        goto LABEL_12;
      }
      break;
    case 2:
      uint64_t v6 = type metadata accessor for NotificationSubscription.Location();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
      uint64_t v7 = &qword_100E6F630;
      goto LABEL_11;
    case 3:
    case 4:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 5:
      uint64_t v8 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
      uint64_t v7 = &qword_100E6F638;
LABEL_11:
      uint64_t v9 = a1 + *(int *)(sub_10017DF08(v7) + 48);
      uint64_t v10 = type metadata accessor for NotificationSubscription.Kind();
      uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
      uint64_t v12 = v10;
      uint64_t v13 = v9;
LABEL_12:
      uint64_t result = v11(v13, v12);
      break;
    default:
      return result;
  }
  return result;
}

void *sub_100179644(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = type metadata accessor for LocationModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
      {
        uint64_t v7 = type metadata accessor for NotificationLocation();
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
      }
      uint64_t v18 = *(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48);
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      uint64_t v21 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
      {
        uint64_t v22 = sub_10017DF08(&qword_100E749B0);
        memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
      }
      goto LABEL_12;
    case 2u:
      uint64_t v8 = type metadata accessor for NotificationSubscription.Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = *(int *)(sub_10017DF08(&qword_100E6F630) + 48);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for NotificationSubscription.Kind();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
      goto LABEL_12;
    case 3u:
    case 4u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 5u:
      uint64_t v13 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
      uint64_t v14 = *(int *)(sub_10017DF08(&qword_100E6F638) + 48);
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = type metadata accessor for NotificationSubscription.Kind();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
LABEL_12:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void sub_1001799A8()
{
  sub_10016314C();
  type metadata accessor for HourWeather();
  sub_100179C0C();
  uint64_t v19 = v2;
  __chkstk_darwin(v3);
  uint64_t v4 = sub_100163770();
  uint64_t v5 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(v4);
  uint64_t v6 = sub_100164920(v5);
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v20 = v7;
  sub_10017DF08(&qword_100E66CC8);
  sub_1001AEBF8();
  uint64_t v8 = dispatch thunk of Collection.count.getter();
  if (!v8)
  {
LABEL_11:
    sub_100191138();
    sub_100163164();
    return;
  }
  uint64_t v9 = v8;
  sub_1001791CC();
  sub_10019E22C();
  dispatch thunk of Collection.startIndex.getter();
  if ((v9 & 0x8000000000000000) == 0)
  {
    while (1)
    {
      uint64_t v10 = (void (*)(uint64_t *, void))dispatch thunk of Collection.subscript.read();
      (*(void (**)(uint64_t))(v19 + 16))(v1);
      v10(&v21, 0);
      sub_10017AADC();
      v11();
      if (v0) {
        break;
      }
      uint64_t v12 = sub_10017B4F8();
      v13(v12);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1001A69DC();
      }
      unint64_t v14 = _swiftEmptyArrayStorage[2];
      if (v14 >= _swiftEmptyArrayStorage[3] >> 1) {
        sub_10019E22C();
      }
      _swiftEmptyArrayStorage[2] = v14 + 1;
      sub_10017E6E0();
      sub_100183754(v20, (uint64_t)_swiftEmptyArrayStorage + v15 + *(void *)(v16 + 72) * v14, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
      dispatch thunk of Collection.formIndex(after:)();
      if (!--v9) {
        goto LABEL_11;
      }
    }
    uint64_t v17 = sub_10017B4F8();
    v18(v17);
    swift_release();
    goto LABEL_11;
  }
  __break(1u);
}

uint64_t sub_100179C28()
{
  return v0;
}

void sub_100179C44(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t sub_100179C64()
{
  return v0;
}

uint64_t sub_100179C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return 0;
}

void sub_100179C90()
{
  *(void *)(v1 - 256) = v0;
}

uint64_t sub_100179CA0()
{
  return v0;
}

uint64_t sub_100179CB8()
{
  return 0;
}

void *sub_100179CF4(void *result)
{
  result[2] = v6;
  result[3] = v2;
  result[4] = v1;
  result[5] = v3;
  result[6] = v4;
  result[7] = v5;
  return result;
}

uint64_t sub_100179D0C()
{
  return RegistrationContainer.register<A>(_:name:factory:)();
}

uint64_t sub_100179D2C()
{
  return swift_getTupleTypeMetadata();
}

double sub_100179D44@<D0>(uint64_t a1@<X8>)
{
  return *(double *)(*(void *)(v1 - 136) + a1);
}

uint64_t sub_100179D64()
{
  return v0;
}

uint64_t sub_100179D98()
{
  return v0;
}

uint64_t sub_100179DE0(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 376), 1, 1, a1);
  return type metadata accessor for EnvironmentState();
}

uint64_t sub_100179E1C()
{
  return v0;
}

uint64_t sub_100179E34(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 - 96);
  return _s7Weather24LocationCompositionStateOwst_0(v4, 1, 1, a1);
}

uint64_t sub_100179E58()
{
  return v0;
}

uint64_t sub_100179E6C(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, a1);
  return type metadata accessor for NotificationsOptInState();
}

uint64_t sub_100179EA4()
{
  return v0;
}

uint64_t sub_100179EBC()
{
  return v0;
}

uint64_t sub_100179ED8()
{
  return v0;
}

uint64_t sub_100179F0C(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v1);
}

__n128 sub_100179F48(__n128 *a1)
{
  __n128 result = *(__n128 *)(v1 - 128);
  a1[1] = result;
  return result;
}

__n128 sub_100179F54(__n128 *a1)
{
  __n128 result = *(__n128 *)(v1 - 128);
  a1[1] = result;
  return result;
}

uint64_t sub_100179F64()
{
  return swift_slowAlloc();
}

uint64_t sub_100179FAC()
{
  return type metadata accessor for WeatherAsyncImage();
}

uint64_t sub_100179FCC()
{
  uint64_t v1 = *v0;
  if ((unint64_t)*v0 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_100179FF4()
{
  return v0;
}

uint64_t sub_10017A018()
{
  return sub_1000A0944(v0 - 120);
}

uint64_t sub_10017A030()
{
  long long v2 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v0 + 160) = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 176) = v2;
  *(_OWORD *)(v0 + 192) = *(_OWORD *)(v1 + 32);
  *(void *)(v0 + 208) = *(void *)(v1 + 48);
  return v0 + 32;
}

uint64_t sub_10017A060()
{
  return ShortDescription.init(name:_:)();
}

uint64_t sub_10017A08C()
{
  return v0;
}

uint64_t sub_10017A0A0()
{
  return type metadata accessor for Domain();
}

uint64_t sub_10017A0C8()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_10017A0E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, a4);
  return type metadata accessor for TimeState();
}

uint64_t sub_10017A110()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

void sub_10017A130(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 104) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_10017A14C()
{
  return swift_slowDealloc();
}

uint64_t sub_10017A168()
{
  sub_10018F6D8(*(void *)(v1 + *(int *)(v0 + 20)), *(unsigned char *)(v1 + *(int *)(v0 + 20) + 8));
  return swift_release();
}

uint64_t sub_10017A1B0()
{
  return == infix(_:_:)();
}

__n128 sub_10017A1E0(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, long long a10, long long a11, __n128 a12)
{
  a1[1] = a10;
  a1[2] = a11;
  __n128 result = a12;
  a1[3] = a12;
  return result;
}

uint64_t sub_10017A1FC()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

void sub_10017A218(uint64_t a1, uint64_t a2)
{
  sub_100098B8C(a1, a2, 0x6E6F697461636F6CLL, 0xEA00000000004449);
}

uint64_t sub_10017A244()
{
  return *(void *)(v0 - 152);
}

uint64_t sub_10017A258()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t sub_10017A278()
{
  return v0;
}

double sub_10017A290()
{
  return v0;
}

uint64_t sub_10017A2AC()
{
  return dispatch thunk of Collection.subscript.read();
}

uint64_t sub_10017A2CC()
{
  return v0;
}

uint64_t sub_10017A2F0()
{
  return v0;
}

__n128 *sub_10017A300(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  __n128 result = a1 + 3;
  *(void *)(v2 + 32) = 0x6E6F69746361;
  *(void *)(v2 + 40) = 0xE600000000000000;
  return result;
}

uint64_t sub_10017A320()
{
  return v0;
}

__n128 sub_10017A334(__n128 *a1)
{
  __n128 result = *(__n128 *)(v1 - 128);
  a1[1] = result;
  return result;
}

uint64_t sub_10017A344(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v1);
}

uint64_t sub_10017A364(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v1);
}

uint64_t sub_10017A384()
{
  *(void *)(v0 + 24) = *(void *)(v1 + 24);
  uint64_t result = *(void *)(v1 + 32);
  *(void *)(v0 + 32) = result;
  return result;
}

uint64_t sub_10017A3A4()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_10017A3CC(uint64_t a1)
{
  *(void *)(v1 - 88) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

__n128 sub_10017A3F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, __n128 a11)
{
  *uint64_t v11 = a9;
  v11[1] = a10;
  __n128 result = a11;
  v11[2] = a11;
  return result;
}

uint64_t sub_10017A424(float a1)
{
  *uint64_t v1 = a1;
  *(void *)(v2 - 320) = 1752392040;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10017A460()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_10017A490()
{
  return v0;
}

uint64_t sub_10017A4A4()
{
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_10017A4FC()
{
  return v0;
}

NSString sub_10017A514()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_10017A534()
{
  return sub_1001CB2DC(v0, v1);
}

uint64_t sub_10017A54C()
{
  return RegistrationContainer.register<A>(_:name:factory:)();
}

uint64_t sub_10017A56C()
{
  return v0;
}

uint64_t sub_10017A580(uint64_t a1, uint64_t a2)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, *(void *)(v2 - 96));
  return type metadata accessor for TimeState();
}

uint64_t sub_10017A5B0()
{
  *(void *)(v0 - 104) = 1752392040;
  return v0 - 104;
}

uint64_t sub_10017A5C4()
{
  return 8;
}

uint64_t sub_10017A5E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, a4);
  return type metadata accessor for NotificationsOptInState();
}

uint64_t sub_10017A62C()
{
  return v0;
}

uint64_t sub_10017A650()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

unint64_t sub_10017A66C()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_10017A684()
{
  return v0;
}

uint64_t sub_10017A69C()
{
  return v0;
}

uint64_t sub_10017A6B4(void (*a1)(void))
{
  return sub_100665550(a1);
}

uint64_t sub_10017A6D8(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v1);
}

uint64_t sub_10017A734()
{
  return v0;
}

uint64_t sub_10017A740()
{
  return swift_allocObject();
}

uint64_t sub_10017A758()
{
  return swift_arrayDestroy();
}

uint64_t sub_10017A778()
{
  return v0;
}

uint64_t sub_10017A7AC()
{
  return v0;
}

uint64_t sub_10017A7C4()
{
  return v0;
}

uint64_t sub_10017A7D8()
{
  return *(void *)(v1 + 56) + *(void *)(*(void *)(v2 - 128) + 72) * v0;
}

double sub_10017A7F0()
{
  return 0.0;
}

uint64_t sub_10017A80C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return sub_10074B928(v2, (uint64_t)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0));
}

uint64_t sub_10017A838()
{
  return v0;
}

uint64_t sub_10017A86C()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_10017A8B0()
{
  return v0;
}

uint64_t sub_10017A8D4()
{
  return 0;
}

void sub_10017A8F8()
{
  sub_10012B78C();
}

uint64_t sub_10017A91C()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t sub_10017A940()
{
  return swift_retain();
}

uint64_t sub_10017A958()
{
  return v0;
}

uint64_t sub_10017A970()
{
  uint64_t v1 = type metadata accessor for TransitionContext();
  return _s7Weather24LocationCompositionStateOwet_0(v0, 1, v1);
}

uint64_t sub_10017A9A8()
{
  return swift_retain();
}

uint64_t sub_10017A9D4()
{
  return type metadata accessor for PressureComponentViewModel();
}

uint64_t sub_10017AA08()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_10017AA2C(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 96), 1, 1, a1);
  return type metadata accessor for EnvironmentState();
}

uint64_t sub_10017AA64(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, *(void *)(v1 - 256));
  return type metadata accessor for LocationsState();
}

uint64_t sub_10017AA98()
{
  return v0;
}

uint64_t sub_10017AAB0()
{
  return sub_1001CCEF8(v0, 0, 0, 2, 0, 0);
}

uint64_t sub_10017AAFC()
{
  return v0;
}

uint64_t sub_10017AB14()
{
  return swift_slowAlloc();
}

uint64_t sub_10017AB44()
{
  *(void *)(v2 - 136) = v0;
  return v1;
}

uint64_t sub_10017AB60(uint64_t a1, uint64_t *a2)
{
  return sub_10009779C(a1, a2);
}

uint64_t sub_10017AB78()
{
  return v0;
}

uint64_t sub_10017AB90(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, a1);
  return type metadata accessor for ViewState(0);
}

uint64_t sub_10017ABC8()
{
  return v0;
}

id sub_10017ABE4(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + *(int *)(a1 + 68) + 40);
  return v3;
}

uint64_t sub_10017AC08()
{
  unint64_t v1 = *(void *)(v0 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_10017AC20()
{
  *(void *)(v1 - 128) = v0;
  double result = 0.0;
  *(_OWORD *)(v1 - 120) = 0u;
  *(_OWORD *)(v1 - 104) = 0u;
  *(void *)(v1 - 88) = 0;
  return result;
}

uint64_t sub_10017AC4C()
{
  return type metadata accessor for Date();
}

uint64_t sub_10017AC90()
{
  return type metadata accessor for GridGeometryRoot();
}

uint64_t sub_10017ACC8(uint64_t result)
{
  *(void *)(v1 - 192) = result;
  *(unsigned char *)(v1 - 65) = 1;
  return result;
}

uint64_t sub_10017ACDC()
{
  return RegistrationContainer.register<A>(_:name:factory:)();
}

uint64_t sub_10017AD00()
{
  return v0;
}

uint64_t sub_10017AD20()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_10017AD48()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_10017AD80@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t sub_10017AD94()
{
  return swift_beginAccess();
}

uint64_t sub_10017ADB4()
{
  return sub_10016414C(v0, v1, (uint64_t *)(v2 - 144));
}

uint64_t sub_10017ADD0()
{
  return v0;
}

uint64_t sub_10017ADE8()
{
  return v0;
}

uint64_t sub_10017AE00()
{
  return type metadata accessor for Access();
}

uint64_t sub_10017AE28()
{
  uint64_t v3 = *(void *)(v1 - 272);
  return _s7Weather24LocationCompositionStateOwst_0(v0, 1, 1, v3);
}

uint64_t sub_10017AE4C()
{
  return v0;
}

uint64_t sub_10017AE78(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 280), 1, 1, a1);
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 288), 1, 1, *(void *)(v1 - 232));
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10017AEE4()
{
  return v0;
}

uint64_t sub_10017AF10(uint64_t a1, uint64_t a2)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, *(void *)(v2 - 224));
  return type metadata accessor for TimeState();
}

uint64_t sub_10017AF40()
{
  return *(void *)(v0 + 104);
}

uint64_t sub_10017AF64()
{
  return sub_1001EC5EC(v1, v0);
}

uint64_t sub_10017AF7C()
{
  return *(void *)(v0 - 128);
}

uint64_t sub_10017AF90(uint64_t a1)
{
  *(void *)(v1 + 64) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10017AFB8()
{
  return v0;
}

uint64_t sub_10017AFE4()
{
  return v0;
}

uint64_t sub_10017AFFC@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v3 - 136) = v1;
  *(void *)(v3 - 128) = a1;
  uint64_t v4 = *(void *)(v3 - 328);
  *(void *)(v3 - 120) = v2;
  *(void *)(v3 - 112) = v4;
  return v3 - 136;
}

uint64_t sub_10017B014()
{
  return 0x79746964696D7568;
}

uint64_t sub_10017B02C()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_10017B058()
{
  return *(void *)(v0 - 288);
}

uint64_t sub_10017B088@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + a1);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10017B0A0@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1);
}

uint64_t sub_10017B0B8()
{
  return type metadata accessor for WeatherConditionBackgroundModifier(0);
}

uint64_t sub_10017B0EC()
{
  return v0;
}

uint64_t sub_10017B108()
{
  return type metadata accessor for TemperatureChartKind();
}

uint64_t sub_10017B124()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_10017B144()
{
  return *(void *)(v0 - 320);
}

unint64_t sub_10017B168()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_10017B180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_100BD7CB0(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_10017B1A4()
{
  *(void *)(v0 - 64) = 0;
  *(_OWORD *)(v0 - 96) = 0u;
  *(_OWORD *)(v0 - 80) = 0u;
  return swift_retain();
}

double sub_10017B1C4()
{
  return 0.0;
}

uint64_t sub_10017B1E8()
{
  return _s7Weather24LocationCompositionStateOwet_0(v0, 1, v1);
}

uint64_t sub_10017B204()
{
  return v0;
}

uint64_t sub_10017B210()
{
  return sub_100247AE8(v1, v0);
}

uint64_t sub_10017B23C()
{
  return sub_1001522B4();
}

uint64_t sub_10017B254()
{
  return v0;
}

uint64_t sub_10017B29C()
{
  *(void *)(v0 - 224) = 1752392040;
  return v0 - 224;
}

void sub_10017B2B0(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_10017B2CC(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_10017B2E8()
{
  *(void *)(v3 - 136) = v2;
  *(void *)(v3 - 128) = v0;
  *(void *)(v3 - 88) = v1;
  return KeyedDecodingContainer.allKeys.getter();
}

uint64_t sub_10017B30C(uint64_t a1)
{
  uint64_t v4 = *(int *)(a1 + 20);
  uint64_t v5 = v1 + v4;
  uint64_t v6 = v2 + v4;
  long long v7 = *(_OWORD *)(v6 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)v6;
  *(_OWORD *)(v5 + 16) = v7;
  *(_OWORD *)(v5 + 32) = *(_OWORD *)(v6 + 32);
  *(void *)(v5 + 48) = *(void *)(v6 + 48);
  *(unsigned char *)(v1 + *(int *)(a1 + 24)) = *(unsigned char *)(v2 + *(int *)(a1 + 24));
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10017B358@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + a1;
  uint64_t v4 = *(void *)v3;
  char v5 = *(unsigned char *)(v3 + 8);
  return sub_10018F6D8(v4, v5);
}

uint64_t sub_10017B380()
{
  return _s7Weather24LocationCompositionStateOwst_0(v0, 0, 1, v1);
}

uint64_t sub_10017B3A0()
{
  return static FixedSizeTypeBinaryCodable.read(from:)();
}

uint64_t sub_10017B3B8()
{
  return v0;
}

uint64_t sub_10017B3D0()
{
  return *(void *)(v0 - 216);
}

uint64_t sub_10017B400()
{
  return dispatch thunk of Hashable.hash(into:)();
}

__n128 sub_10017B41C()
{
  char v1 = *(unsigned char *)(v0 - 224);
  __n128 result = *(__n128 *)(v0 - 256);
  long long v3 = *(_OWORD *)(v0 - 240);
  *(__n128 *)(v0 - 304) = result;
  *(_OWORD *)(v0 - 288) = v3;
  *(unsigned char *)(v0 - 272) = v1;
  return result;
}

uint64_t sub_10017B444(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  return sub_10016414C(a1, a2, (uint64_t *)va);
}

uint64_t sub_10017B45C()
{
  return v0;
}

uint64_t sub_10017B474()
{
  _s7Weather24LocationCompositionStateOwst_0(v0, 0, 1, *(void *)(v1 - 120));
  return *(void *)(v1 - 192);
}

uint64_t sub_10017B4A8()
{
  return ShortDescription.init(name:_:)();
}

uint64_t sub_10017B4E8()
{
  return v0;
}

uint64_t sub_10017B4F8()
{
  return v0;
}

uint64_t sub_10017B510(uint64_t a1)
{
  uint64_t v4 = *(void *)(v2 - 408);
  return sub_100178CEC(a1, v4, v1);
}

uint64_t sub_10017B530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return a18;
}

uint64_t sub_10017B54C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10017B574(a1, *(void *)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), a2);
}

uint64_t sub_10017B574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v61 = a6;
  uint64_t v60 = a5;
  uint64_t countAndFlagsBits = a4;
  uint64_t v53 = a2;
  object = a3;
  uint64_t v65 = a1;
  uint64_t v6 = sub_10017DF08(&qword_100E65250);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v59 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v58 = (char *)&v47 - v9;
  uint64_t v10 = type metadata accessor for Precipitation();
  __chkstk_darwin(v10 - 8);
  uint64_t v57 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for WeatherCondition();
  unint64_t v51 = *(void *)(v12 - 8);
  uint64_t v52 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v55 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v47 - v15;
  uint64_t v17 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v62 = (uint64_t)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v63 = (uint64_t)&v47 - v20;
  uint64_t v50 = (void (*)(char *, uint64_t))type metadata accessor for TimeZone();
  uint64_t v21 = *((void *)v50 - 1);
  __chkstk_darwin(v50);
  uint64_t v23 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for Date();
  uint64_t v24 = *(void *)(v64 - 8);
  uint64_t v25 = __chkstk_darwin(v64);
  uint64_t v27 = (char *)&v47 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  char v29 = (char *)&v47 - v28;
  HourWeather.date.getter();
  Location.timeZone.getter();
  Date.zeroMinutes(timeZone:)();
  (*(void (**)(char *, void *))(v21 + 8))(v23, v50);
  char v30 = *(void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v49 = v24 + 8;
  uint64_t v50 = v30;
  uint64_t v48 = v27;
  uint64_t v31 = v64;
  v30(v27, v64);
  sub_100189820(v63, v62, v53, (uint64_t)v29, (uint64_t)object, countAndFlagsBits);
  char v32 = v29;
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v27, v29, v31);
  uint64_t v33 = (uint64_t)v23;
  Location.timeZone.getter();
  HourWeather.condition.getter();
  char v34 = Date.isDaytime(sunrise:sunset:)();
  Swift::String_optional v35 = WeatherCondition.conditionIconName(isDaytime:)(v34 & 1);
  uint64_t countAndFlagsBits = v35.value._countAndFlagsBits;
  object = v35.value._object;
  uint64_t v36 = v52;
  uint64_t v37 = *(void (**)(char *, uint64_t))(v51 + 8);
  v37(v16, v52);
  HourWeather.condition.getter();
  uint64_t v53 = WeatherCondition.description.getter();
  unint64_t v51 = v38;
  v37(v16, v36);
  HourWeather.precipitationChance.getter();
  Double.roundedPrecipitationPercent.getter();
  double v40 = v39;
  uint64_t v41 = v55;
  HourWeather.condition.getter();
  LOBYTE(v16) = WeatherCondition.isPrecipitation.getter();
  v37(v41, v36);
  uint64_t v42 = (uint64_t)v57;
  HourWeather.precipitation.getter();
  uint64_t v43 = (uint64_t)v58;
  HourWeather.temperature.getter();
  uint64_t v44 = (uint64_t)v59;
  CurrentWeather.temperature.getter();
  sub_10017BAF4();
  uint64_t v45 = static NSDateFormatter.prevailingPeriodSymbols.getter();
  sub_100187414((uint64_t)v48, v33, countAndFlagsBits, (uint64_t)object, v53, v51, v16 & 1, v42, v61, v40, v43, v44, v45, 0);
  sub_1001781AC(v62, (uint64_t *)&unk_100E73CA0);
  sub_1001781AC(v63, (uint64_t *)&unk_100E73CA0);
  v50(v32, v64);
  type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(0);
  return swift_storeEnumTagMultiPayload();
}

unint64_t sub_10017BAF4()
{
  unint64_t result = qword_100E65240;
  if (!qword_100E65240)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100E65240);
  }
  return result;
}

uint64_t sub_10017BB34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v117 = a4;
  uint64_t v118 = a2;
  uint64_t v119 = a3;
  uint64_t v7 = sub_10017DF08(&qword_100E66678);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100162F18();
  uint64_t v9 = sub_10017DF08(&qword_100E63508);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100163770();
  uint64_t v122 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v115 = v11;
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v113 = v13;
  uint64_t v121 = sub_10017DF08(&qword_100E6EEC0);
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_100109314();
  uint64_t v126 = v15;
  uint64_t v16 = sub_10017DF08(&qword_100E639E8);
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v114 = v18;
  sub_1001626D4();
  __chkstk_darwin(v19);
  uint64_t v128 = (uint64_t)&v112 - v20;
  sub_1001626D4();
  __chkstk_darwin(v21);
  sub_100128F8C();
  uint64_t v129 = v22;
  sub_100129064();
  uint64_t v133 = type metadata accessor for SavedLocation();
  sub_100179C0C();
  uint64_t v125 = v23;
  __chkstk_darwin(v24);
  sub_100162EF8();
  uint64_t v132 = v25;
  sub_1001626D4();
  __chkstk_darwin(v26);
  sub_100109770();
  uint64_t v124 = v27;
  sub_1001626D4();
  __chkstk_darwin(v28);
  uint64_t v123 = (uint64_t)&v112 - v29;
  sub_1001626D4();
  __chkstk_darwin(v30);
  sub_100128F8C();
  uint64_t v127 = v31;
  sub_100129064();
  uint64_t v32 = type metadata accessor for LocationModel();
  sub_100179C0C();
  uint64_t v34 = v33;
  __chkstk_darwin(v35);
  sub_10016278C();
  uint64_t v38 = v36 - v37;
  __chkstk_darwin(v39);
  uint64_t v116 = (char *)&v112 - v40;
  sub_1001626D4();
  __chkstk_darwin(v41);
  uint64_t v43 = (char *)&v112 - v42;
  __chkstk_darwin(v44);
  sub_100109770();
  uint64_t v136 = v45;
  sub_1001626D4();
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v112 - v47;
  uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16);
  uint64_t v50 = a1;
  uint64_t v134 = (void (*)(uint64_t))(v34 + 16);
  uint64_t v135 = v49;
  sub_100162808();
  v51();
  uint64_t v52 = sub_100181E80();
  uint64_t v130 = v54;
  uint64_t v131 = v53;
  int v55 = ((uint64_t (*)(uint64_t))v54)(v52);
  uint64_t v120 = v48;
  if (v55 == enum case for LocationModel.current(_:))
  {
    uint64_t v56 = sub_100181E80();
    uint64_t v121 = (uint64_t)v58;
    uint64_t v122 = v57;
    v58(v56);
    uint64_t v59 = (uint64_t)&v48[*(int *)(sub_10017DF08(&qword_100E63878) + 48)];
    uint64_t v116 = (char *)v4;
    sub_10018CCD4(v59, v4);
    uint64_t v60 = *(void *)(v119 + 16);
    if (v60)
    {
      uint64_t v61 = v119 + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
      uint64_t v129 = *(void *)(v34 + 72);
      LODWORD(v128) = enum case for LocationModel.saved(_:);
      swift_bridgeObjectRetain();
      uint64_t v62 = _swiftEmptyArrayStorage;
      uint64_t v127 = (void (**)(uint64_t, uint64_t))(v34 + 8);
      uint64_t v126 = (v34 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v63 = v135;
      do
      {
        uint64_t v64 = v136;
        v63(v136, v61, v32);
        v63((uint64_t)v43, v64, v32);
        int v65 = v130(v43, v32);
        if (v65 == v128)
        {
          ((void (*)(char *, uint64_t))v121)(v43, v32);
          uint64_t v66 = &v43[*(int *)(sub_10017DF08(&qword_100E63870) + 48)];
          uint64_t v64 = v124;
          sub_10017DE2C((uint64_t)v43, v124, (void (*)(void))&type metadata accessor for SavedLocation);
          uint64_t v67 = (uint64_t)v66;
          uint64_t v63 = v135;
          sub_100178110(v67, &qword_100E63508);
          sub_10017DE2C(v64, v5, (void (*)(void))&type metadata accessor for SavedLocation);
          sub_100184B5C(v5, 0);
          (*v127)(v136, v32);
        }
        else
        {
          uint64_t v68 = *v127;
          (*v127)((uint64_t)v43, v32);
          sub_100184B5C(v5, 1);
          v68(v136, v32);
        }
        uint64_t v69 = sub_10011C004();
        if (_s7Weather24LocationCompositionStateOwet_0(v69, v70, v5) == 1)
        {
          sub_100178110(v64, &qword_100E66678);
          uint64_t v5 = v64;
        }
        else
        {
          uint64_t v71 = v123;
          sub_10017DE2C(v64, v123, (void (*)(void))&type metadata accessor for SavedLocation);
          sub_10017DE2C(v71, v132, (void (*)(void))&type metadata accessor for SavedLocation);
          uint64_t v5 = v64;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v62 = (void *)sub_10018A66C(0, v62[2] + 1, 1, (uint64_t)v62);
          }
          unint64_t v73 = v62[2];
          unint64_t v72 = v62[3];
          if (v73 >= v72 >> 1) {
            uint64_t v62 = (void *)sub_10018A66C(v72 > 1, v73 + 1, 1, (uint64_t)v62);
          }
          v62[2] = v73 + 1;
          sub_10017DE2C(v132, (uint64_t)v62+ ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80))+ *(void *)(v125 + 72) * v73, (void (*)(void))&type metadata accessor for SavedLocation);
          uint64_t v63 = v135;
        }
        v61 += v129;
        --v60;
      }
      while (v60);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v62 = _swiftEmptyArrayStorage;
    }
    uint64_t v94 = swift_bridgeObjectRetain();
    sub_10018CD3C(v94, (uint64_t)v62);
    uint64_t v96 = *(void *)(v95 + 16);
    uint64_t v97 = (uint64_t)v116;
    if (v96)
    {
      uint64_t v98 = v95 + ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80));
      uint64_t v99 = *(void *)(v125 + 72);
      uint64_t v100 = v96 - 1;
      do
      {
        uint64_t v101 = v100;
        char v83 = static SavedLocation.== infix(_:_:)();
        if (v83) {
          break;
        }
        uint64_t v100 = v101 - 1;
        v98 += v99;
      }
      while (v101);
    }
    else
    {
      char v83 = 0;
    }
    sub_100178110(v97, &qword_100E63508);
    swift_bridgeObjectRelease();
    sub_10018CFC4((uint64_t)v120, (void (*)(void))&type metadata accessor for CurrentLocation);
  }
  else if (v55 == enum case for LocationModel.saved(_:))
  {
    uint64_t v74 = sub_100181E80();
    v75(v74);
    os_log_type_t v76 = v127;
    sub_10017DE2C((uint64_t)v48, (uint64_t)v127, (void (*)(void))&type metadata accessor for SavedLocation);
    uint64_t v77 = v129;
    uint64_t v78 = v122;
    SavedLocation.location.getter();
    uint64_t v79 = v128;
    SavedLocation.location.getter();
    uint64_t v80 = v126;
    uint64_t v81 = v126 + *(int *)(v121 + 48);
    uint64_t v82 = &qword_100E639E8;
    sub_10006DF38(v77, v126, &qword_100E639E8);
    sub_10006DF38(v79, v81, &qword_100E639E8);
    sub_1001630A0(v80);
    if (v103)
    {
      sub_100178110(v79, &qword_100E639E8);
      sub_100178110(v77, &qword_100E639E8);
      sub_10018CFC4((uint64_t)v76, (void (*)(void))&type metadata accessor for SavedLocation);
      sub_1001630A0(v81);
      if (v103)
      {
        char v83 = -1;
      }
      else
      {
        uint64_t v82 = &qword_100E6EEC0;
        char v83 = 0;
      }
    }
    else
    {
      uint64_t v102 = v114;
      sub_10006DF38(v80, v114, &qword_100E639E8);
      sub_1001630A0(v81);
      if (v103)
      {
        sub_100178110(v79, &qword_100E639E8);
        sub_100178110(v77, &qword_100E639E8);
        sub_10018CFC4((uint64_t)v76, (void (*)(void))&type metadata accessor for SavedLocation);
        sub_100162F0C();
        v104();
        char v83 = 0;
        uint64_t v82 = &qword_100E6EEC0;
      }
      else
      {
        uint64_t v106 = v115;
        uint64_t v107 = v113;
        sub_1001627D4();
        v108();
        sub_10018A5FC();
        char v83 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v109 = *(void (**)(uint64_t, uint64_t))(v106 + 8);
        v109(v107, v78);
        uint64_t v82 = &qword_100E639E8;
        sub_100178110(v128, &qword_100E639E8);
        sub_100178110(v129, &qword_100E639E8);
        sub_10018CFC4((uint64_t)v127, (void (*)(void))&type metadata accessor for SavedLocation);
        v109(v102, v78);
      }
    }
    sub_100178110(v80, v82);
    uint64_t v110 = sub_10017DF08(&qword_100E63870);
    sub_100178110((uint64_t)&v120[*(int *)(v110 + 48)], &qword_100E63508);
  }
  else
  {
    if (qword_100E627A8 != -1) {
      swift_once();
    }
    uint64_t v84 = type metadata accessor for Logger();
    sub_1002102B0(v84, (uint64_t)qword_100F51E10);
    uint64_t v85 = v116;
    uint64_t v86 = v134;
    char v87 = (void (*)(uint64_t, char *, uint64_t))v135;
    v135((uint64_t)v116, v50, v32);
    uint64_t v88 = Logger.logObject.getter();
    os_log_type_t v89 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v88, v89))
    {
      uint64_t v90 = (uint8_t *)swift_slowAlloc();
      uint64_t v136 = swift_slowAlloc();
      uint64_t v138 = v136;
      *(_DWORD *)uint64_t v90 = 136446210;
      uint64_t v133 = (uint64_t)(v90 + 4);
      v87(v38, v85, v32);
      uint64_t v91 = String.init<A>(describing:)();
      uint64_t v137 = sub_10016414C(v91, v92, &v138);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v93 = sub_1001A485C();
      v86(v93);
      _os_log_impl((void *)&_mh_execute_header, v88, v89, "Failed find matched savedLocation with unknown type=%{public}s", v90, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v105 = sub_1001A485C();
      v86(v105);
    }

    ((void (*)(char *, uint64_t))v86)(v120, v32);
    char v83 = 0;
  }
  return v83 & 1;
}

uint64_t sub_10017C698(uint64_t a1)
{
  *(_OWORD *)(v1 - 128) = 0u;
  *(_OWORD *)(v1 - 112) = 0u;
  *(unsigned char *)(v1 - 96) = 0;
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 168), 1, 1, a1);
  uint64_t v3 = *(void *)(v1 - 160);
  return _s7Weather24LocationCompositionStateOwst_0(v3, 1, 1, a1);
}

uint64_t sub_10017C704()
{
  return 0;
}

uint64_t sub_10017C730(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  a1[2] = v17;
  a1[3] = a13;
  a1[4] = a15;
  a1[5] = a11;
  a1[6] = v15;
  a1[7] = a10;
  a1[8] = v16;
  return swift_retain();
}

uint64_t sub_10017C778()
{
  return v0;
}

uint64_t sub_10017C794()
{
  return swift_getTupleTypeMetadata();
}

uint64_t sub_10017C7D0()
{
  return v0;
}

uint64_t sub_10017C7EC()
{
  return v0;
}

uint64_t sub_10017C81C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 - 256) = result;
  return result;
}

char *sub_10017C854@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_10017C888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v4 - 120), 1, 1, a4);
  return type metadata accessor for EnvironmentState();
}

void sub_10017C8C0()
{
  uint64_t v7 = v1 + v2[7];
  *(void *)uint64_t v7 = v6;
  *(void *)(v7 + 8) = v5;
  *(unsigned char *)(v7 + 16) = 0;
  uint64_t v8 = (void *)(v1 + v2[8]);
  void *v8 = v0;
  v8[1] = v3;
  *(void *)(v1 + v2[10]) = *(void *)(v4 - 176);
}

unint64_t sub_10017C8EC()
{
  *(void *)(v0 + 16) = v2;
  return v0
       + ((*(unsigned __int8 *)(*(void *)(v3 - 216) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 216) + 80))
       + *(void *)(*(void *)(v3 - 216) + 72) * v1;
}

uint64_t sub_10017C948()
{
  return v0;
}

uint64_t sub_10017C984()
{
  return swift_allocObject();
}

uint64_t sub_10017C9A0@<X0>(uint64_t a1@<X8>)
{
  return sub_10031F6A8(v3 + a1, v2, v1);
}

uint64_t sub_10017C9D8()
{
  *(void *)(v0 - 64) = 0;
  *(_OWORD *)(v0 - 96) = 0u;
  *(_OWORD *)(v0 - 80) = 0u;
  return swift_retain();
}

uint64_t sub_10017CA20()
{
  return BidirectionalCollection<>.starts<A>(with:)();
}

uint64_t sub_10017CA94(uint64_t a1)
{
  return *(void *)a1;
}

void *sub_10017CAB0(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t sub_10017CAC4()
{
  return withAnimation<A>(_:_:)();
}

uint64_t sub_10017CAF8()
{
  return *(void *)(v0 - 144);
}

uint64_t sub_10017CB10@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(result + 48) = *v2;
  *(void *)(result + 72) = a2;
  *(void *)(result + 80) = 0x4F79616C70736964;
  *(void *)(result + 88) = 0xE90000000000006ELL;
  return result;
}

uint64_t sub_10017CB50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  return sub_1001659F0(0, 3, v23, v21, v22, 0, 0, 0, 0, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

uint64_t sub_10017CB84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unint64_t v13 = 0xE000000000000000;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&a1, *(Swift::String_optional *)&v10, v8, *(Swift::String *)&v12, *(Swift::String *)&a8)._countAndFlagsBits;
}

uint64_t sub_10017CBA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s7Weather24LocationCompositionStateOwst_0(v4, 1, 1, a4);
  return type metadata accessor for LocationsState();
}

uint64_t sub_10017CBDC()
{
  return swift_deallocObject();
}

uint64_t sub_10017CBEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X7>, uint64_t a3@<X8>)
{
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  unint64_t v9 = 0xE000000000000000;
  unint64_t v5 = (a3 - 32) | 0x8000000000000000;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&a1, *(Swift::String_optional *)&v6, v3, *(Swift::String *)&v8, *(Swift::String *)&a2)._countAndFlagsBits;
}

uint64_t sub_10017CC38()
{
  *(void *)(v0 - 48) = 0;
  *(_OWORD *)(v0 - 80) = 0u;
  *(_OWORD *)(v0 - 64) = 0u;
  return swift_retain();
}

uint64_t sub_10017CC58()
{
  return static UIListContentConfiguration.valueCell()();
}

uint64_t sub_10017CC80()
{
  return v0;
}

uint64_t sub_10017CC9C@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1);
}

uint64_t sub_10017CCB4()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

double sub_10017CCDC()
{
  *(void *)(v0 - 136) = 1;
  double result = 0.0;
  *(_OWORD *)(v0 - 128) = 0u;
  *(_OWORD *)(v0 - 112) = 0u;
  *(void *)(v0 - 96) = 0;
  return result;
}

uint64_t sub_10017CD3C(void *a1, uint64_t a2)
{
  sub_1001B1E64(a1, a2);
  return *(void *)(v2 - 232);
}

uint64_t sub_10017CD60()
{
  return v0;
}

uint64_t sub_10017CD74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s7Weather24LocationCompositionStateOwst_0(v4, 1, 1, a4);
  return type metadata accessor for EnvironmentState();
}

uint64_t sub_10017CDA8(uint64_t a1)
{
  return v1 + *(int *)(a1 + 20);
}

uint64_t sub_10017CE20()
{
  return _s7Weather24LocationCompositionStateOwst_0(v1, 0, 1, v0);
}

uint64_t sub_10017CE40()
{
  return 16;
}

uint64_t sub_10017CE4C(float a1)
{
  *uint64_t v1 = a1;
  *(void *)(v2 - 88) = 1752392040;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10017CE84()
{
  return v0;
}

uint64_t sub_10017CE9C()
{
  return v0;
}

uint64_t sub_10017CEB8()
{
  *(void *)(v0 - 312) = 0;
  *(void *)(v0 - 304) = 0xE000000000000000;
  *(void *)(v0 - 296) = 0;
  *(void *)(v0 - 288) = 0;
  *(void *)(v0 - 280) = 0;
  *(void *)(v0 - 272) = 0xE000000000000000;
  *(void *)(v0 - 264) = 0;
  *(void *)(v0 - 256) = 0xE000000000000000;
  *(void *)(v0 - 248) = 0;
  *(void *)(v0 - 240) = 0xE000000000000000;
  *(void *)(v0 - 232) = 0;
  *(void *)(v0 - 224) = 0xE000000000000000;
  *(void *)(v0 - 216) = 0;
  *(void *)(v0 - 208) = 0;
  *(void *)(v0 - 200) = 0;
  *(void *)(v0 - 192) = 0xE000000000000000;
  *(void *)(v0 - 184) = 0;
  *(void *)(v0 - 176) = 0xE000000000000000;
  *(void *)(v0 - 168) = 0;
  *(void *)(v0 - 160) = 0xE000000000000000;
  *(void *)(v0 - 152) = 0;
  *(void *)(v0 - 144) = 0;
  *(void *)(v0 - 136) = 0;
  *(void *)(v0 - 128) = 0xE000000000000000;
  *(void *)(v0 - 120) = 0;
  *(void *)(v0 - 112) = 0xE000000000000000;
  uint64_t v2 = *(void *)(v0 - 344);
  uint64_t v3 = *(void *)(v0 - 328);
  return sub_1000454D4((const void *)(v0 - 312), 0, v3, v2);
}

uint64_t sub_10017CF4C(uint64_t a1, uint64_t *a2)
{
  return sub_100535F70(a1, a2);
}

uint64_t sub_10017CF90(uint64_t a1, uint64_t a2)
{
  sub_1002102B0(a1, a2);
  return swift_beginAccess();
}

uint64_t sub_10017CFC4(void *a1)
{
  return sub_100560E94(a1);
}

uint64_t sub_10017CFCC()
{
  return os_signpost(_:dso:log:name:signpostID:)();
}

uint64_t sub_10017CFF4()
{
  return 0;
}

uint64_t sub_10017D00C()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_10017D038()
{
  return sub_1001CB2DC(v0, v1);
}

uint64_t sub_10017D058()
{
  return StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
}

uint64_t sub_10017D080()
{
  return v0;
}

uint64_t sub_10017D104(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, a1);
  return type metadata accessor for EnvironmentState();
}

uint64_t sub_10017D13C()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10017D164()
{
  return swift_deallocObject();
}

uint64_t sub_10017D194()
{
  uint64_t v2 = 0x7372756F68203432;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  unint64_t v7 = 0xE000000000000000;
  unint64_t v8 = 0xD000000000000021;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v2, *(Swift::String_optional *)&v4, v0, *(Swift::String *)&v6, *(Swift::String *)&v8)._countAndFlagsBits;
}

uint64_t sub_10017D1D4@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return sub_1001262FC(v2, (uint64_t)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
}

uint64_t sub_10017D214()
{
  return v0;
}

uint64_t sub_10017D22C()
{
  return v0;
}

unint64_t sub_10017D240@<X0>(uint64_t a1@<X8>)
{
  return (a1 - 32) | 0x8000000000000000;
}

uint64_t sub_10017D274()
{
  return 0x7265746544746F6ELL;
}

uint64_t sub_10017D288()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_10017D2B4()
{
  return v0;
}

uint64_t sub_10017D2C8(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return sub_10005D0F4(a1, a2, a3 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a4, a5);
}

uint64_t sub_10017D2D0()
{
  return v0;
}

uint64_t sub_10017D2E8()
{
  *(void *)(v2 - 72) = v0;
  return v1;
}

uint64_t sub_10017D304()
{
  return v0;
}

uint64_t sub_10017D310()
{
  return v0;
}

unint64_t sub_10017D324()
{
  return sub_1001AB3E0();
}

uint64_t sub_10017D34C(uint64_t a1, void *a2)
{
  return a1;
}

uint64_t sub_10017D384(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 168), 1, 1, a1);
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 176), 1, 1, *(void *)(v1 - 192));
  return type metadata accessor for TimeState();
}

uint64_t sub_10017D3D0()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_10017D3F4()
{
  return *(void *)(v0 + 56);
}

uint64_t sub_10017D410(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, v1);
}

uint64_t sub_10017D42C()
{
  return v0;
}

uint64_t sub_10017D448(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t sub_10017D454()
{
  return v0;
}

uint64_t sub_10017D46C(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 - 160) = a2;
  return v2;
}

uint64_t sub_10017D498@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t sub_10017D4A4()
{
  return swift_allocError();
}

uint64_t sub_10017D4C4(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return sub_100041C50(a1, a2, a3 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a4, a5);
}

uint64_t sub_10017D4CC(uint64_t a1, uint64_t a2)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v2);
  return type metadata accessor for LocationCompositionState();
}

uint64_t sub_10017D50C()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_10017D538()
{
  sub_10080FB6C();
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_10017D584()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

unint64_t sub_10017D5A4()
{
  sub_1001B1E64((void *)(v0 + 32), *(void *)(v0 + 56));
  return sub_100218EB8();
}

uint64_t sub_10017D5DC()
{
  return _ConditionalContent<>.init(storage:)();
}

void sub_10017D604(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v6, a4, v4, 2u);
}

uint64_t sub_10017D624()
{
  return v0;
}

uint64_t sub_10017D63C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unint64_t v13 = 0xE000000000000000;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&a1, *(Swift::String_optional *)&v10, v8, *(Swift::String *)&v12, *(Swift::String *)&a8)._countAndFlagsBits;
}

uint64_t sub_10017D660()
{
  return v0;
}

double sub_10017D678()
{
  return 0.0;
}

uint64_t sub_10017D698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v27 = *(void *)(v25 - 432);
  uint64_t v28 = *(void *)(v25 - 120);
  uint64_t v29 = *(void *)(v25 - 128);
  return sub_1001659F0(0, 3, v27, v28, v29, 0, 0, 0, 0, v22, v23, v24, v21, 0, 0, 0, 0, 0, 0,
           a20,
           a21);
}

uint64_t sub_10017D718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s7Weather24LocationCompositionStateOwst_0(v4, 1, 1, a4);
  return _s7Weather24LocationCompositionStateOwst_0(v6, 1, 1, v5);
}

__n128 sub_10017D770(__n128 *a1)
{
  return a1[4];
}

uint64_t sub_10017D798()
{
  return v0;
}

__n128 sub_10017D7E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,long long a32)
{
  return (__n128)a32;
}

uint64_t sub_10017D7F8(uint64_t a1, uint64_t *a2)
{
  return sub_10009779C(a1, a2);
}

uint64_t sub_10017D800(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 136), 1, 1, a1);
  return type metadata accessor for LocationsState();
}

uint64_t sub_10017D838()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_10017D854()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10017D870()
{
  return v0;
}

uint64_t sub_10017D888@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 128) = a1;
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10017D8D0()
{
  _s7Weather24LocationCompositionStateOwst_0(v1, 0, 1, v2);
  return sub_10014A8A8(v3, v4, v0 & 1, v1);
}

uint64_t sub_10017D914()
{
  return v0;
}

uint64_t sub_10017D92C()
{
  return v0;
}

double sub_10017D940@<D0>(unsigned char *a1@<X8>)
{
  *a1 = 0;
  return 4.0;
}

uint64_t sub_10017D94C()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

NSString sub_10017D970()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_10017D994()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_10017D9B0()
{
  return swift_dynamicCast();
}

uint64_t sub_10017D9CC()
{
  return type metadata accessor for MainAction();
}

uint64_t sub_10017D9E4()
{
  return v0;
}

double sub_10017D9F8@<D0>(uint64_t a1@<X8>)
{
  return v2 / *(double *)(v1 + 8 * a1);
}

uint64_t sub_10017DA1C()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_10017DA48()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10017DA64()
{
  return v0;
}

uint64_t sub_10017DA7C(uint64_t result)
{
  *(void *)(v1 - 112) = 1752392040;
  *(void *)(v1 - 104) = result;
  return result;
}

uint64_t sub_10017DA90(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return sub_1000910D4(a1, a2, a3 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a4, a5);
}

uint64_t sub_10017DA98()
{
  return swift_beginAccess();
}

uint64_t sub_10017DAB4()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_10017DAE8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10017DB08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  return sub_1001659F0(0, 3, v21, v22, v23, 0, 0, 0, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

uint64_t sub_10017DB60()
{
  return v0;
}

uint64_t sub_10017DB78()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10017DB94()
{
  return v0;
}

uint64_t sub_10017DBAC()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_10017DBD8()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

void sub_10017DC04()
{
  *(unsigned char *)(v0 - 320) = 0;
  *(unsigned char *)(v0 - 328) = 0;
}

uint64_t sub_10017DC24()
{
  return _s7Weather24LocationCompositionStateOwet_0(v0, 1, v1);
}

uint64_t sub_10017DC48()
{
  return v0 - 136;
}

uint64_t sub_10017DC6C()
{
  return v0;
}

uint64_t sub_10017DC80()
{
  return v0;
}

uint64_t sub_10017DC94()
{
  return 0;
}

uint64_t sub_10017DCAC()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_10017DCE0()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_10017DD0C()
{
  return 0x7265746544746F6ELL;
}

void sub_10017DD30()
{
  uint64_t v1 = 0x292E2E2E202CLL;
  unint64_t v2 = 0xE600000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

double sub_10017DD50@<D0>(double a1@<X8>, double a2@<D0>)
{
  return a2 + a1 + 40.0;
}

double sub_10017DDA0()
{
  return 0.0;
}

uint64_t sub_10017DDCC()
{
  uint64_t v2 = *(void *)(v0 + 56);
  sub_1001B1E64(v1, v2);
  return v2;
}

NSString sub_10017DDF8()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_10017DE2C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10017DE8C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t _s7Weather24LocationCompositionStateOwst_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_10017DF08(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_10017DF4C(uint64_t a1, uint64_t *a2)
{
  sub_10017DF08(a2);
  sub_100179DC0();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_10017DF98()
{
  return v0;
}

uint64_t sub_10017DFB0()
{
  return IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:resolvers:)();
}

uint64_t sub_10017DFE0(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_10017DFEC(void *a1)
{
  sub_1001B1E64(a1, v1);
  return swift_retain();
}

uint64_t sub_10017E01C()
{
  return *(void *)(v0 - 184);
}

uint64_t sub_10017E030()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10017E050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, a4);
  return type metadata accessor for EnvironmentState();
}

uint64_t sub_10017E080()
{
  *(void *)(v1 - 128) = v0;
  return dispatch thunk of Collection.endIndex.getter();
}

uint64_t sub_10017E0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s7Weather24LocationCompositionStateOwst_0(v4, 1, 1, a4);
  return type metadata accessor for EnvironmentState();
}

uint64_t sub_10017E0E0()
{
  return v0;
}

uint64_t sub_10017E0F8()
{
  return *(void *)(v0 - 416);
}

uint64_t sub_10017E130()
{
  uint64_t v1 = *(void *)(*(void *)(v0 - 296) + 96);
  sub_1001B1E64(*(void **)(v0 - 408), v1);
  return v1;
}

uint64_t sub_10017E178()
{
  return sub_1001AAF58(v1, v2 - 128, v0);
}

__n128 sub_10017E198(__n128 *a1)
{
  __n128 result = *(__n128 *)(v1 - 128);
  a1[1] = result;
  return result;
}

uint64_t sub_10017E1C0()
{
  return v0;
}

uint64_t sub_10017E1D4()
{
  return v0;
}

uint64_t sub_10017E1E8@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

void sub_10017E1F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10035067C(a1, a2, a3, v3, v4, 0);
}

uint64_t sub_10017E214()
{
  return swift_allocObject();
}

uint64_t sub_10017E23C()
{
  return type metadata accessor for NewsArticleComponentViewModel(0);
}

uint64_t sub_10017E264()
{
  return v0;
}

uint64_t sub_10017E27C()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_10017E2A8()
{
  return sub_1001EC074();
}

uint64_t sub_10017E2C4@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  *(unsigned char *)(result + 96) = a2;
  *(void *)(result + 120) = v3;
  *(void *)(result + 128) = 1702125924;
  *(void *)(result + 136) = v2;
  *(void *)(v4 + 40) = v5;
  return result;
}

uint64_t sub_10017E2F4(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, a1);
  return type metadata accessor for EnvironmentState();
}

void sub_10017E32C(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 96) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_10017E348()
{
  return v0;
}

uint64_t sub_10017E360@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1);
}

uint64_t sub_10017E36C()
{
  return v0;
}

uint64_t sub_10017E380(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwst_0(v1, 0, 1, a1);
}

uint64_t sub_10017E3A0()
{
  return 0;
}

double sub_10017E3BC@<D0>(uint64_t a1@<X8>)
{
  return *(double *)(v1 + a1);
}

void sub_10017E3D8()
{
  WeatherConditionPlaybackCoordinatorType.pause(_:)(0);
}

uint64_t sub_10017E3FC()
{
  return v0;
}

uint64_t sub_10017E410()
{
  return v0;
}

uint64_t sub_10017E428()
{
  return type metadata accessor for SevereAlertComponentViewModel();
}

uint64_t sub_10017E458(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, *(void *)(v1 - 168));
  return type metadata accessor for TimeState();
}

uint64_t sub_10017E48C()
{
  sub_10018F6D8(*(void *)(v1 + *(int *)(v0 + 24)), *(unsigned char *)(v1 + *(int *)(v0 + 24) + 8));
  return sub_10018F6D8(*(void *)(v1 + *(int *)(v0 + 28)), *(unsigned char *)(v1 + *(int *)(v0 + 28) + 8));
}

uint64_t sub_10017E4CC()
{
  return v0;
}

__n128 sub_10017E4F4@<Q0>(__n128 **a1@<X0>, __n128 *a2@<X8>)
{
  unsigned __int8 v2 = (*a1)->n128_u8[8];
  unint64_t v3 = (*a1)[1].n128_u64[0];
  unsigned __int8 v4 = (*a1)[1].n128_u8[8];
  unint64_t v5 = (*a1)[2].n128_u64[0];
  unsigned __int8 v6 = (*a1)[2].n128_u8[8];
  __n128 result = (*a1)[3];
  a2->n128_u64[0] = (*a1)->n128_u64[0];
  a2->n128_u8[8] = v2;
  a2[1].n128_u64[0] = v3;
  a2[1].n128_u8[8] = v4;
  a2[2].n128_u64[0] = v5;
  a2[2].n128_u8[8] = v6;
  a2[3] = result;
  return result;
}

void sub_10017E53C()
{
  *(unsigned char *)(v0 + 72) = *(unsigned char *)(v1 + 72);
}

uint64_t sub_10017E548(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v6 = *(void *)(v4 - 272);
  return sub_1004E8280(v3, v6, a3);
}

uint64_t sub_10017E57C()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_10017E59C()
{
  return v0;
}

uint64_t sub_10017E5BC()
{
  unint64_t v2 = *(void *)(v0 + *(int *)(v1 + 20));
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10017E5D8()
{
  return Tips.Rule.init<A>(_:_:)();
}

uint64_t sub_10017E5F4(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, SEL *a5)
{
  return sub_100560FC4(a1, a2, a3 & 0xFFFFFFFFFFFFLL | 0x6574000000000000, 0xE800000000000000, a5);
}

double sub_10017E600@<D0>(uint64_t a1@<X8>)
{
  return *(double *)(v1 + a1);
}

uint64_t sub_10017E610()
{
  return swift_weakInit();
}

uint64_t sub_10017E628(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, a1);
}

uint64_t sub_10017E648(uint64_t a1, unint64_t a2)
{
  return sub_10016414C(a1, a2, (uint64_t *)(v2 - 96));
}

uint64_t sub_10017E670()
{
  return swift_slowAlloc();
}

uint64_t sub_10017E688()
{
  return v0;
}

uint64_t sub_10017E6B0()
{
  return v0;
}

void sub_10017E6BC(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 352) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_10017E6F0@<X0>(uint64_t a1@<X8>)
{
  return v1 + *(int *)(*(void *)(v2 - 128) + 40) + a1;
}

void sub_10017E720()
{
  *(void *)(v0 - 64) = 0;
  *(void *)(v0 - 56) = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
}

uint64_t sub_10017E740()
{
  return type metadata accessor for MainAction();
}

uint64_t sub_10017E76C()
{
  return 1684957559;
}

uint64_t sub_10017E77C()
{
  return v0;
}

uint64_t sub_10017E790@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(result + 32) = a2;
  *(void *)(result + 40) = (v2 - 32) | 0x8000000000000000;
  return result;
}

uint64_t sub_10017E7A0()
{
  return v0;
}

uint64_t sub_10017E7BC(uint64_t result)
{
  *(void *)(v2 - 128) = result;
  *(void *)(v2 - 120) = 0;
  *uint64_t v1 = 258;
  *(void *)(v2 - 112) = v1 + 1;
  return result;
}

uint64_t sub_10017E7D8()
{
  return *(void *)(v0 - 96);
}

uint64_t sub_10017E7E8()
{
  return ShortDescription.init(name:_:)();
}

uint64_t sub_10017E810()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10017E830()
{
  return v0;
}

uint64_t sub_10017E848()
{
  return sub_1001361BC(v0, v1);
}

uint64_t sub_10017E874()
{
  return sub_10016EC18(v1, v0);
}

uint64_t sub_10017E890()
{
  return 0;
}

uint64_t sub_10017E89C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10017E8B4()
{
  return v0;
}

uint64_t sub_10017E8C4()
{
  return v0;
}

uint64_t sub_10017E8E4()
{
  return v0;
}

uint64_t sub_10017E904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s7Weather24LocationCompositionStateOwst_0(v4, 1, 1, a4);
}

uint64_t sub_10017E920()
{
  return *(void *)(v0 + 360);
}

uint64_t sub_10017E954()
{
  return TimeZone.init(abbreviation:)(5524807, 0xE300000000000000);
}

uint64_t sub_10017E970()
{
  return v0;
}

uint64_t sub_10017E98C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10017E9B4()
{
  return v0;
}

uint64_t sub_10017E9CC()
{
  return v0 + *(int *)(v1 + 20);
}

_WORD *sub_10017E9E4(_WORD *result)
{
  *__n128 result = 0;
  return result;
}

uint64_t sub_10017E9F0()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_10017EA10()
{
  return v0;
}

uint64_t sub_10017EA28(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 208), 1, 1, a1);
  return type metadata accessor for DisplayMetrics();
}

char *sub_10017EA64@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

double sub_10017EA98@<D0>(unsigned __int8 a1@<W0>, unsigned char *a2@<X8>, char a3, char a4, char a5, uint64_t a6, char a7, char a8, char a9, uint64_t a10)
{
  return sub_1000F0AD4(a1, 5, 5, v10, 0, 0, 2, 2, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

void sub_10017EAC8(uint64_t a1)
{
  *(void *)(a1 + 32) = v1;
  *(void *)(a1 + 40) = v3;
  type metadata accessor for TraitKey(0);
}

uint64_t sub_10017EAE4()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_10017EAFC(uint64_t a1)
{
  *(void *)(v1 + 96) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10017EB24()
{
  uint64_t v4 = *(void *)(v2 - 136);
  return sub_1001262FC(v1, v4, v0);
}

uint64_t sub_10017EB44(uint64_t a1, uint64_t *a2)
{
  return sub_10009779C(a1, a2);
}

uint64_t sub_10017EB60()
{
  return v0;
}

uint64_t sub_10017EB78()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10017EB98()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_10017EBC0()
{
  return v0 - 160;
}

uint64_t sub_10017EBDC()
{
  return swift_beginAccess();
}

uint64_t sub_10017EC00()
{
  return String.hash(into:)();
}

uint64_t sub_10017EC28()
{
  return NSObject.hash(into:)();
}

uint64_t sub_10017EC40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s7Weather24LocationCompositionStateOwst_0(v4, 1, 1, a4);
}

uint64_t sub_10017EC5C()
{
  return v0;
}

uint64_t sub_10017EC70()
{
  return Definition.inScope(_:)();
}

uint64_t sub_10017EC98()
{
  return 0;
}

uint64_t sub_10017ECB0()
{
  return 0x53657369726E7573;
}

uint64_t sub_10017ECD4()
{
  return Definition.inScope(_:)();
}

uint64_t sub_10017ECEC(uint64_t a1, uint64_t a2)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v2);
  return type metadata accessor for NotificationsOptInState();
}

uint64_t sub_10017ED1C()
{
  return type metadata accessor for Location();
}

double sub_10017ED44()
{
  return (double)((2 * v0) | 1);
}

uint64_t sub_10017ED5C()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_10017ED78()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_10017ED94()
{
  return swift_slowAlloc();
}

uint64_t sub_10017EDC0()
{
  return 0;
}

uint64_t sub_10017EDF8()
{
  return v0;
}

uint64_t sub_10017EE0C()
{
  return *(void *)(v0 - 272);
}

uint64_t sub_10017EE18()
{
  return swift_slowAlloc();
}

uint64_t sub_10017EE40()
{
  return *(void *)(v0 - 480);
}

uint64_t sub_10017EE78()
{
  return 0x6F6F4D207478654ELL;
}

void sub_10017EE98(uint64_t a1@<X8>)
{
  *(void *)(v3 - 136) = v1;
  *(void *)(v3 - 128) = a1;
  uint64_t v4 = *(void *)(v3 - 320);
  *(void *)(v3 - 120) = v2;
  *(void *)(v3 - 112) = v4;
}

uint64_t sub_10017EEAC()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t sub_10017EED4()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_10017EEF8()
{
  return v0;
}

uint64_t sub_10017EF0C()
{
  return v0;
}

uint64_t sub_10017EF24()
{
  return 0;
}

void sub_10017EF38(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 112) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_10017EF54()
{
  sub_1007F30E8();
}

uint64_t sub_10017EF78()
{
  return v0;
}

uint64_t sub_10017EF8C()
{
  return swift_task_alloc();
}

__n128 sub_10017EFA4@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *a1;
  *(__n128 *)(v1 - 256) = *a1;
  *(void *)(v1 - 272) = a1[1].n128_u64[0];
  *(void *)(v1 - 288) = a1[1].n128_u64[1];
  return result;
}

uint64_t sub_10017EFCC@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

void sub_10017EFE0(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 144) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_10017F010()
{
  return v1 + *(int *)(v0 + 24);
}

void sub_10017F024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 144) = (char *)&a9 - v9;
}

uint64_t sub_10017F04C()
{
  return _ConditionalContent<>.init(storage:)();
}

void sub_10017F074(uint64_t a1@<X8>)
{
  uint64_t v2 = *v1;
  char v3 = *((unsigned char *)v1 + 8);
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
}

uint64_t sub_10017F088()
{
  return v0;
}

uint64_t sub_10017F094(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t sub_10017F0A8()
{
  return UIListContentConfiguration.text.setter();
}

uint64_t sub_10017F0C8()
{
  *(void *)(v2 - 200) = v0;
  return v1;
}

uint64_t sub_10017F0F4@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10017F118@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t sub_10017F124()
{
  return type metadata accessor for Page();
}

__n128 sub_10017F144()
{
  char v2 = *(unsigned char *)(v1 - 224);
  __n128 result = *(__n128 *)(v1 - 256);
  long long v4 = *(_OWORD *)(v1 - 240);
  *(__n128 *)(v1 - 304) = result;
  *(_OWORD *)(v1 - 288) = v4;
  *(unsigned char *)(v1 - 272) = v2;
  *(unsigned char *)(v1 - 271) = v0;
  return result;
}

uint64_t sub_10017F170()
{
  return 0x6D756964656DLL;
}

uint64_t sub_10017F180()
{
  return 0;
}

uint64_t sub_10017F1A0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 - 376) = a1;
  *(void *)(v2 - 200) = a2;
  return swift_release();
}

uint64_t sub_10017F1C0()
{
  return v0;
}

void sub_10017F1D4()
{
  *uint64_t v0 = 0x8000000000000000;
}

uint64_t sub_10017F1F4()
{
  return type metadata accessor for ListView.ListContentView(0);
}

uint64_t _s7Weather27LocalSearchCompleterManagerC8delegateAA0bcdE8Delegate_pSgvpfi_0()
{
  return 0;
}

BOOL sub_10017F230(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_10017F24C()
{
  *uint64_t v0 = 0x8000000000000000;
  return sub_10017DF08(v1);
}

uint64_t sub_10017F2A8()
{
  return swift_allocObject();
}

uint64_t sub_10017F2C0()
{
  return type metadata accessor for Calendar();
}

void *sub_10017F2E8(void *a1)
{
  return sub_1001B1E64(a1, v1);
}

uint64_t sub_10017F318()
{
  return swift_release();
}

uint64_t sub_10017F338()
{
  return swift_slowAlloc();
}

uint64_t sub_10017F368()
{
  uint64_t v2 = *(void *)(v0 + 16) + 1;
  return sub_1007E9A64(0, v2, 1, v0);
}

uint64_t sub_10017F3AC()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_10017F3C8()
{
  return v0;
}

uint64_t sub_10017F3D4()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10017F3EC()
{
  return v0;
}

uint64_t sub_10017F408()
{
  return v0;
}

uint64_t sub_10017F414@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (void *)(v1 + a1);
  uint64_t v3 = *(void *)(v1 + a1 + 24);
  sub_1001B1E64(v2, v3);
  return v3;
}

uint64_t sub_10017F440(int *a1)
{
  *(void *)(v1 + a1[5]) = *(void *)(v2 + a1[5]);
  *(void *)(v1 + a1[6]) = *(void *)(v2 + a1[6]);
  uint64_t v3 = a1[7];
  uint64_t v4 = v1 + v3;
  uint64_t v5 = v2 + v3;
  *(void *)uint64_t v4 = *(void *)v5;
  *(unsigned char *)(v4 + 8) = *(unsigned char *)(v5 + 8);
  *(unsigned char *)(v1 + a1[8]) = *(unsigned char *)(v2 + a1[8]);
  return v1;
}

uint64_t sub_10017F490()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10017F4C0(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v1);
}

uint64_t sub_10017F4D8()
{
  return 0x6E696E746867696CLL;
}

uint64_t sub_10017F4EC()
{
  return UIListContentConfiguration.text.setter();
}

uint64_t sub_10017F508()
{
  return swift_allocObject();
}

uint64_t sub_10017F520()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_10017F550()
{
  return 0;
}

uint64_t sub_10017F55C()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_10017F580()
{
  return v0;
}

uint64_t sub_10017F594()
{
  return v0;
}

uint64_t sub_10017F5A0()
{
  *(void *)(v1 - 280) = v0;
  *(unsigned char *)(v1 - 272) = 1;
  return swift_retain();
}

uint64_t sub_10017F5C8()
{
  return 1684957559;
}

uint64_t sub_10017F5F4()
{
  return v0;
}

uint64_t sub_10017F604()
{
  return _s7Weather24LocationCompositionStateOwet_0(v0, 1, *(void *)(v1 - 144));
}

uint64_t sub_10017F62C(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_10017F648()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_10017F678()
{
  *(unsigned char *)(v0 - 96) = 0;
  return 0x686372616573;
}

uint64_t sub_10017F690()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_10017F6B0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10017F704()
{
  return swift_release();
}

uint64_t sub_10017F720()
{
  return v0;
}

uint64_t sub_10017F744()
{
  return type metadata accessor for CollisionViewMetrics();
}

uint64_t sub_10017F760(uint64_t a1, uint64_t a2)
{
  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v2);
}

uint64_t sub_10017F778()
{
  return sub_100126E18(v1, v0);
}

uint64_t sub_10017F7A4()
{
  return v0;
}

uint64_t sub_10017F7C0()
{
  return type metadata accessor for TupleView();
}

uint64_t sub_10017F7D8()
{
  return v0;
}

uint64_t sub_10017F7FC()
{
  return sub_100B57764(2, v0, 0, 4.0, 10.0);
}

uint64_t sub_10017F820(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10017F830()
{
  return _ConditionalContent<>.init(storage:)();
}

double sub_10017F850()
{
  return 0.0;
}

uint64_t sub_10017F884()
{
  return v0;
}

uint64_t sub_10017F89C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s7Weather24LocationCompositionStateOwst_0(v4, 1, 1, a4);
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v5 - 152), 1, 1, *(void *)(v5 - 160));
  return type metadata accessor for TimeState();
}

uint64_t sub_10017F8E4()
{
  return swift_dynamicCast();
}

void sub_10017F904()
{
  uint64_t v2 = *(void *)(v1 - 192);
  *(void *)(v1 - 184) = v2 + 16;
  *(void *)(v1 - 176) = v0 + 16;
  *(void *)(v1 - 192) = v2 + 8;
  *(void *)(v1 - 216) = v0;
  *(void *)(v1 - 208) = v0 + 8;
}

uint64_t sub_10017F930()
{
  return v0;
}

uint64_t sub_10017F948()
{
  return 0;
}

uint64_t sub_10017F964(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  return sub_1001659F0(a1, a2, a3, v21, v22, 0, 0, 0, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

uint64_t sub_10017F988()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_10017F9B4(float a1)
{
  *uint64_t v1 = a1;
  *(void *)(v2 - 96) = 1752392040;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10017F9EC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 - 296) + 96);
  sub_1001B1E64(*(void **)(v0 - 408), v1);
  return v1;
}

uint64_t sub_10017FA34()
{
  return 0;
}

uint64_t sub_10017FA58()
{
  return *(void *)(v0 + 336);
}

uint64_t sub_10017FA74()
{
  return sub_1001AAF58(v0, v2 - 96, v1);
}

uint64_t sub_10017FA94()
{
  return static _SetStorage.allocate(capacity:)();
}

uint64_t sub_10017FAE8()
{
  return v0;
}

uint64_t sub_10017FB00()
{
  return v0;
}

uint64_t sub_10017FB14()
{
  return v0 + 32;
}

uint64_t sub_10017FB24()
{
  return v0;
}

uint64_t sub_10017FB48()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t sub_10017FB70()
{
  return dispatch thunk of Collection.distance(from:to:)();
}

uint64_t sub_10017FB90()
{
  return v0;
}

__n128 sub_10017FBA8(__n128 *a1)
{
  __n128 result = *(__n128 *)(v1 - 128);
  a1[1] = result;
  return result;
}

uint64_t sub_10017FBBC()
{
  return type metadata accessor for PresetAppState();
}

uint64_t sub_10017FBF4()
{
  return v0;
}

uint64_t sub_10017FC28()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_10017FC4C()
{
  return *(void *)v0;
}

uint64_t sub_10017FC94()
{
  return type metadata accessor for MoonComponentView(0) - 8;
}

void sub_10017FCBC()
{
  uint64_t v4 = (void *)(v3 + *(int *)(v0 + 24));
  *uint64_t v4 = 0;
  v4[1] = 0;
  uint64_t v5 = (void *)(v3 + *(int *)(v0 + 28));
  *uint64_t v5 = v1;
  v5[1] = v2;
}

uint64_t sub_10017FCDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, v4, 1, a4);
  return TipGroup.currentTip.getter();
}

uint64_t sub_10017FD0C()
{
  return type metadata accessor for LocationComponentHeaderViewModel(0);
}

uint64_t sub_10017FD28()
{
  return sub_1004B8648(v1, v0);
}

__n128 sub_10017FD48@<Q0>(__n128 *a1@<X8>)
{
  unint64_t v2 = v1->n128_u64[0];
  unsigned __int8 v3 = v1->n128_u8[8];
  unint64_t v4 = v1[1].n128_u64[0];
  unsigned __int8 v5 = v1[1].n128_u8[8];
  unint64_t v6 = v1[2].n128_u64[0];
  __n128 result = v1[3];
  unsigned __int8 v8 = v1[2].n128_u8[8];
  a1->n128_u64[0] = v2;
  a1->n128_u8[8] = v3;
  a1[1].n128_u64[0] = v4;
  a1[1].n128_u8[8] = v5;
  a1[2].n128_u64[0] = v6;
  a1[2].n128_u8[8] = v8;
  a1[3] = result;
  return result;
}

uint64_t sub_10017FD84()
{
  return v0;
}

uint64_t sub_10017FD94@<X0>(uint64_t a1@<X8>)
{
  return *(void *)a1;
}

uint64_t sub_10017FDD0()
{
  return 0;
}

__n128 sub_10017FDEC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10017FDF8()
{
  return v0;
}

uint64_t sub_10017FE10()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_10017FE34()
{
  return 255;
}

uint64_t sub_10017FE40()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_10017FE60()
{
  return *(void *)(v0 - 424);
}

uint64_t sub_10017FEA8()
{
  return v0;
}

__n128 *sub_10017FEC4(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x6E6F69746361;
  result[2].n128_u64[1] = 0xE600000000000000;
  return result;
}

uint64_t sub_10017FEE0()
{
  return swift_beginAccess();
}

uint64_t sub_10017FF00()
{
  return v0;
}

uint64_t sub_10017FF10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unint64_t v13 = 0xE000000000000000;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&a1, *(Swift::String_optional *)&v10, v8, *(Swift::String *)&v12, *(Swift::String *)&a8)._countAndFlagsBits;
}

uint64_t sub_10017FF34()
{
  return v0;
}

void *sub_10017FF60()
{
  return sub_1001B1E64((void *)(v1 - 120), v0);
}

uint64_t sub_10017FF80()
{
  *(void *)(v1 - 136) = v0;
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_10017FFDC()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10017FFF8()
{
  return v0;
}

uint64_t sub_100180014()
{
  char v9 = v4 & 1;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = v2;
  *(unsigned char *)(v3 + 16) = v9;
  *(void *)(v3 + 24) = v0;
  *(void *)(v3 + 32) = v5;
  *(void *)(v3 + 40) = v6;
  *(void *)(v3 + 48) = v8;
  *(void *)(v3 + 56) = v7;
  sub_100190CC4(v1, v2, v9);
  return swift_bridgeObjectRetain();
}

uint64_t sub_100180060()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10018007C()
{
  return 0x636120736D656553;
}

uint64_t sub_1001800A0()
{
  return v0;
}

uint64_t sub_1001800B8()
{
  return v0;
}

uint64_t sub_1001800D0()
{
  return v0;
}

uint64_t sub_1001800E4()
{
  return v0;
}

uint64_t sub_1001800F4()
{
  return v0;
}

uint64_t sub_10018010C(uint64_t a1)
{
  return sub_10031F6A8(a1, v2, v1);
}

uint64_t sub_100180148()
{
  return v0;
}

uint64_t sub_100180158()
{
  return sub_1001648BC(v0);
}

uint64_t sub_100180160()
{
  return v0;
}

uint64_t sub_100180170()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_100180190()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_1001801A8@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 65) = a1;
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1001801CC()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1001801E4()
{
  sub_10018F6D8(*(void *)(v1 + v0[10]), *(unsigned char *)(v1 + v0[10] + 8));
  sub_10018F6D8(*(void *)(v1 + v0[11]), *(unsigned char *)(v1 + v0[11] + 8));
  sub_10018F6D8(*(void *)(v1 + v0[12]), *(unsigned char *)(v1 + v0[12] + 8));
  uint64_t v2 = v1 + v0[13];
  sub_100191934(*(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned char *)(v2 + 32));
  sub_10018F6D8(*(void *)(v1 + v0[14]), *(unsigned char *)(v1 + v0[14] + 8));
  return swift_release();
}

uint64_t sub_100180278()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_100180298()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_1001802D0()
{
  return v0;
}

uint64_t sub_1001802FC()
{
  return v0 + 8;
}

uint64_t sub_100180310()
{
  return type metadata accessor for SunriseSunsetDetailViewModel();
}

uint64_t sub_100180338()
{
  return sub_100B57764(2, v0, 1, 4.0, 10.0);
}

uint64_t sub_10018035C()
{
  *(void *)(v0 - 80) = 0;
  *(_OWORD *)(v0 - 112) = 0u;
  *(_OWORD *)(v0 - 96) = 0u;
  return swift_retain();
}

uint64_t sub_10018037C()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_100180398()
{
  _s7Weather24LocationCompositionStateOwst_0(v0, 0, 1, v1);
  return swift_beginAccess();
}

uint64_t sub_1001803DC()
{
  _s7Weather24LocationCompositionStateOwst_0(v0, 1, 1, *(void *)(v1 - 144));
  return static WeatherFormatStyle<>.weather(_:usage:locale:)();
}

uint64_t sub_100180420()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_100180440()
{
  return *(void *)(v0 - 104);
}

uint64_t sub_100180464()
{
  return ShortDescription.init(name:_:)();
}

uint64_t sub_10018048C(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_100180498()
{
  sub_10018F6D8(*(void *)(v1 + v0[22]), *(unsigned char *)(v1 + v0[22] + 8));
  sub_10018F6D8(*(void *)(v1 + v0[23]), *(unsigned char *)(v1 + v0[23] + 8));
  sub_10018F6D8(*(void *)(v1 + v0[24]), *(unsigned char *)(v1 + v0[24] + 8));
  return swift_deallocObject();
}

uint64_t sub_100180500()
{
  return type metadata accessor for SearchLocation();
}

uint64_t sub_100180538()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_100180560()
{
  return swift_slowDealloc();
}

uint64_t sub_10018057C()
{
  return v0;
}

void sub_100180594()
{
  *(void *)(v0 + 16) = v1;
}

uint64_t sub_1001805B8()
{
  return v0;
}

uint64_t sub_1001805D4(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 288), 1, 1, a1);
  return type metadata accessor for ModalViewState(0);
}

uint64_t sub_100180614()
{
  return ShortDescription.init(name:_:)();
}

void sub_100180634()
{
  uint64_t v3 = v0;
  uint64_t v4 = v1;
  String.append(_:)(*(Swift::String *)&v3);
}

NSDictionary sub_100180650()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_100180670()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_100180690()
{
  return *(void *)(v0 - 120);
}

uint64_t sub_1001806C4()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_1001806F4()
{
  return v0;
}

uint64_t sub_100180708(uint64_t a1, uint64_t *a2)
{
  return sub_10009779C(a1, a2);
}

uint64_t sub_100180710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, a4);
  return type metadata accessor for WeatherMapPresentationState(0);
}

uint64_t sub_100180740()
{
  uint64_t v2 = v1 + v0[16];
  sub_100191934(*(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned char *)(v2 + 32));
  sub_10018F6D8(*(void *)(v1 + v0[17]), *(unsigned char *)(v1 + v0[17] + 8));
  sub_10018F6D8(*(void *)(v1 + v0[18]), *(unsigned char *)(v1 + v0[18] + 8));
  uint64_t v3 = v1 + v0[19];
  sub_10014DC00(*(void *)v3, *(void *)(v3 + 8), *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(unsigned char *)(v3 + 48));
  sub_10018F6E4();
  return swift_release();
}

uint64_t sub_1001807D8(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, a1);
}

uint64_t sub_1001807F8()
{
  *(void *)(v2 - 128) = 0;
  *(_OWORD *)(v2 - 160) = 0u;
  *(_OWORD *)(v2 - 144) = 0u;
  return sub_1001AAF58(v1, v2 - 160, v0);
}

uint64_t sub_100180824()
{
  return v0;
}

uint64_t sub_10018083C()
{
  return v0;
}

uint64_t sub_100180870()
{
  return swift_beginAccess();
}

uint64_t sub_100180894()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1001808C8()
{
  return v0;
}

uint64_t sub_1001808DC()
{
  return v0;
}

char *sub_1001808F4@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

double sub_100180920@<D0>(unsigned char *a1@<X8>)
{
  *a1 = 0;
  return 10.0;
}

uint64_t sub_10018092C()
{
  return v0;
}

uint64_t sub_100180940()
{
  return type metadata accessor for MeasurementEditorView();
}

double sub_100180978()
{
  return sub_100A03948();
}

uint64_t sub_100180994()
{
  return v0;
}

uint64_t sub_1001809A8()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

__n128 *sub_1001809C8(__n128 *result, __n128 a2)
{
  result[1] = a2;
  strcpy((char *)&result[2], "overThreshold");
  result[2].n128_u16[7] = -4864;
  return result;
}

double sub_1001809F4()
{
  return 20.0;
}

uint64_t sub_100180A04(uint64_t result)
{
  *(void *)(v1 - 128) = 1752392040;
  *(void *)(v1 - 120) = result;
  return result;
}

uint64_t sub_100180A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return sub_100A5B914(a1, a2 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a3, a4);
}

uint64_t sub_100180A2C(uint64_t a1)
{
  return static MonthlyWeatherStatistics.== infix(_:_:)(v1, v2, v3, v4, v5, a1);
}

uint64_t sub_100180A54(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100180A7C()
{
  return v0;
}

void sub_100180A94(void *a1, uint64_t a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, v4, a3, a4, v5, 8u);
}

uint64_t sub_100180AB0()
{
  return v0;
}

uint64_t sub_100180AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  return sub_1001659F0(0, 3, v21, v22, v23, 0, 0, 0, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

double sub_100180B18()
{
  return 0.0;
}

uint64_t sub_100180B34()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

double sub_100180B60()
{
  uint64_t v5 = v4;
  uint64_t v6 = v3;
  uint64_t v7 = v2;
  uint64_t v8 = v1;
  return CGRectGetMinY(*(CGRect *)&v5);
}

uint64_t sub_100180B80()
{
  return sub_1007EC358(v0 - 89, 1);
}

uint64_t sub_100180B9C()
{
  return _s7Weather24LocationCompositionStateOwst_0(v1, 0, 1, v0);
}

uint64_t sub_100180BBC()
{
  return v0;
}

uint64_t sub_100180BE8()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

void sub_100180C0C()
{
  uint64_t v3 = *(void *)(v2 - 336);
  *(void *)(v2 - 136) = v0;
  *(void *)(v2 - 128) = v3;
  uint64_t v4 = *(void *)(v2 - 344);
  *(void *)(v2 - 120) = v1;
  *(void *)(v2 - 112) = v4;
}

uint64_t sub_100180C28()
{
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_100180C64()
{
  return swift_storeEnumTagMultiPayload();
}

__n128 *sub_100180C80(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return a1 + 3;
}

uint64_t sub_100180C98()
{
  return sub_100318440(v1, v0);
}

void sub_100180CB0(uint64_t a1@<X8>)
{
  *(void *)(v4 - 80) = a1;
  *(void *)(v4 - 72) = (v1 - 32) | 0x8000000000000000;
  uint64_t v6 = v2;
  uint64_t v7 = v3;
  String.append(_:)(*(Swift::String *)&v6);
}

uint64_t sub_100180CD4()
{
  return type metadata accessor for Date();
}

uint64_t sub_100180D0C()
{
  return v0;
}

uint64_t sub_100180D1C()
{
  return sub_1001AAF58(v0, v2 - 96, v1);
}

uint64_t sub_100180D3C@<X0>(unint64_t a1@<X8>)
{
  return sub_1001A6D34(a1 > 1, v1, 1, v2);
}

void sub_100180D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_10010977C();
  a17 = v19;
  a18 = v20;
  type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(0);
  sub_100162E4C();
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&a9 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(0);
  __chkstk_darwin(v24 - 8);
  sub_1001831C0();
  sub_100162E4C();
  __chkstk_darwin(v25);
  sub_100125FF8();
  sub_100184760(v26, v27, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
  uint64_t v28 = sub_100182544();
  if (v28 > 1)
  {
    sub_10018355C(v28, v29, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
    type metadata accessor for Date();
    sub_100162E4C();
    uint64_t v34 = sub_10011BFA4();
    v35(v34);
    uint64_t v32 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel;
    uint64_t v33 = (uint64_t)v23;
  }
  else
  {
    sub_1001CA894(v28, v29, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
    type metadata accessor for Date();
    sub_100162E4C();
    uint64_t v30 = sub_10011BFA4();
    v31(v30);
    uint64_t v32 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel;
    uint64_t v33 = v18;
  }
  sub_100184648(v33, (void (*)(void))v32);
  sub_100162714();
}

uint64_t sub_100180F44(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(a5 + 8 * (a1 >> 6) + 64) |= 1 << a1;
  uint64_t v5 = (void *)(*(void *)(a5 + 48) + 16 * a1);
  *uint64_t v5 = a2;
  v5[1] = a3;
  return 0;
}

uint64_t sub_100180FA0(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, v1);
  return type metadata accessor for SearchViewState(0);
}

uint64_t sub_100180FD4()
{
  _s7Weather24LocationCompositionStateOwst_0(v1, 0, 1, v2);
  return v0;
}

uint64_t sub_100181000()
{
  return swift_release();
}

uint64_t sub_100181024@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_100181044()
{
  return swift_allocObject();
}

uint64_t sub_10018106C()
{
  return *(void *)(v0 - 408);
}

uint64_t sub_1001810A0(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, a1);
}

uint64_t sub_1001810C0()
{
  return v0;
}

uint64_t sub_1001810EC()
{
  return v0;
}

void sub_100181110()
{
  sub_1000A8368();
}

uint64_t sub_100181130()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_100181140()
{
  sub_10018F6E4();
  sub_10018F6E4();
  return swift_release();
}

uint64_t sub_100181194(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 - 96);
  return _s7Weather24LocationCompositionStateOwst_0(v4, 1, 1, a1);
}

uint64_t sub_1001811DC(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 112), 1, 1, a1);
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 120), 1, 1, *(void *)(v1 - 152));
  uint64_t v2 = *(void *)(v1 - 144);
  uint64_t v3 = *(void *)(v1 - 136);
  return _s7Weather24LocationCompositionStateOwst_0(v3, 1, 1, v2);
}

uint64_t sub_10018124C()
{
  return v0;
}

uint64_t sub_100181260()
{
  return v0;
}

uint64_t sub_10018126C()
{
  return v0;
}

uint64_t sub_100181294(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, a1);
}

uint64_t sub_1001812C8()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t sub_1001812E8()
{
  return 2;
}

uint64_t sub_100181320()
{
  return 0x646570706174;
}

uint64_t sub_100181338()
{
  return TipView.init(_:arrowEdge:action:)();
}

uint64_t sub_100181354()
{
  return swift_allocObject();
}

uint64_t sub_10018138C()
{
  return v0;
}

uint64_t sub_10018139C()
{
  return v0;
}

uint64_t sub_1001813AC(uint64_t a1, uint64_t a2)
{
  sub_1002102B0(v2, a2);
  return swift_beginAccess();
}

uint64_t sub_1001813E4()
{
  return v0;
}

unint64_t sub_100181400()
{
  return 0xD000000000000012;
}

uint64_t sub_10018141C()
{
  return _s7Weather24LocationCompositionStateOwst_0(v0, 1, 1, v1);
}

uint64_t sub_10018143C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void *)(v2 - 88) + a1;
  return sub_1001C6DA8(v4, v1);
}

uint64_t sub_100181458@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 280) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for NotificationsOptInState();
}

uint64_t sub_100181488()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_1001814A0()
{
  return v0;
}

uint64_t sub_1001814B8()
{
  return dispatch thunk of RawRepresentable.rawValue.getter();
}

void sub_1001814F4(float a1)
{
  *uint64_t v1 = a1;
  *(void *)(v2 - 112) = 1752392040;
}

uint64_t sub_100181520(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v1);
}

uint64_t sub_100181564()
{
  return sub_1001AAF58(v0, v2 - 112, v1);
}

uint64_t sub_100181584()
{
  return 1835819363;
}

uint64_t sub_100181594()
{
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 - 128);
}

uint64_t sub_1001815D4()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_1001815F4()
{
  return 25971;
}

__n128 sub_100181608(__n128 *a1)
{
  __n128 result = *(__n128 *)(v1 - 128);
  a1[1] = result;
  return result;
}

uint64_t sub_100181618()
{
  return v0;
}

uint64_t sub_100181640()
{
  return swift_retain();
}

uint64_t sub_100181660(__n128 a1)
{
  a1.n128_u64[0] = 1.0;
  return Debouncer.init(interval:queue:)(v1, a1);
}

uint64_t sub_1001816B8()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_1001816F0()
{
  return 0;
}

uint64_t sub_1001816FC()
{
  return v0 + *(int *)(type metadata accessor for ComparisonCapsuleViewModel.Row(0) + 20);
}

uint64_t sub_10018171C()
{
  return v0;
}

uint64_t sub_100181778()
{
  return Definition.inScope(_:)();
}

uint64_t sub_100181790()
{
  return swift_weakInit();
}

void *sub_1001817AC(void *result)
{
  result[2] = *(void *)(v2 - 280);
  result[3] = v1;
  uint64_t v3 = *(void *)(v2 - 288);
  result[4] = *(void *)(v2 - 296);
  result[5] = v3;
  return result;
}

uint64_t sub_1001817D4()
{
  return swift_release();
}

uint64_t sub_1001817EC()
{
  return v0;
}

uint64_t sub_10018180C()
{
  return WeatherDataModel.currentWeather.getter();
}

__n128 sub_100181838@<Q0>(__int16 a1@<W8>)
{
  __n128 result = *(__n128 *)(v2 - 256);
  long long v4 = *(_OWORD *)(v2 - 240);
  *(__n128 *)(v2 - 304) = result;
  *(_OWORD *)(v2 - 288) = v4;
  *(_WORD *)(v2 - 272) = v1 | a1;
  *(unsigned char *)(v2 - 270) = 0;
  return result;
}

uint64_t sub_100181864()
{
  return v0;
}

void sub_100181880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 96) = (char *)&a9 - v9;
}

uint64_t sub_1001818C8()
{
  return 0;
}

uint64_t sub_100181900()
{
  return *(void *)(v0 - 512);
}

__n128 sub_100181928(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9)
{
  __n128 result = a9;
  a1[1] = a9;
  return result;
}

uint64_t sub_100181938(uint64_t a1, uint64_t *a2)
{
  return sub_10009779C(a1, a2);
}

uint64_t sub_100181940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  return sub_1001910C8(a1, v10, v11, v12, v13, v14, v15, v16, a9, a10);
}

uint64_t sub_10018196C(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, a1);
  return type metadata accessor for LocationsState();
}

__n128 *sub_1001819B4(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  __n128 result = a1 + 3;
  *(void *)(v2 + 32) = 0x6574617473;
  *(void *)(v2 + 40) = 0xE500000000000000;
  return result;
}

uint64_t sub_1001819D4()
{
  return v0;
}

uint64_t sub_1001819EC()
{
  return v0;
}

uint64_t sub_100181A00()
{
  return v0;
}

uint64_t sub_100181A18()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_100181A2C()
{
  return 0;
}

uint64_t sub_100181A40()
{
  return swift_release();
}

uint64_t sub_100181A58()
{
  return v0;
}

uint64_t sub_100181A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14 = (void *)(v12 + *(int *)(v10 + 32));
  *uint64_t v14 = a10;
  v14[1] = v11;
  return swift_retain();
}

uint64_t sub_100181A90()
{
  return v0;
}

uint64_t sub_100181AA8(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v1);
}

uint64_t sub_100181AE0()
{
  return v0 + v1;
}

void sub_100181AF8()
{
  *(_DWORD *)(v0 + 104) = 1;
  *(_DWORD *)(v0 + 112) = 1;
}

uint64_t sub_100181B24()
{
  return v0;
}

uint64_t sub_100181B38()
{
  return *(void *)(v0 + 184);
}

void sub_100181B50(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 128) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_100181B70()
{
  return _s7Weather24LocationCompositionStateOwet_0(v0, 1, v1);
}

uint64_t sub_100181B8C()
{
  return v0;
}

uint64_t sub_100181BCC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100181BE8()
{
  return swift_release();
}

uint64_t sub_100181C00()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_100181C20()
{
  uint64_t v2 = *(void *)(v0 - 392);
  uint64_t v3 = *(void *)(*(void *)(v0 - 232) + 64);
  return sub_10001B1D4(v3, v2);
}

uint64_t sub_100181C48()
{
  sub_10018F6D8(*(void *)(v1 + *(int *)(v0 + 32)), *(unsigned char *)(v1 + *(int *)(v0 + 32) + 8));
  sub_10018F6D8(*(void *)(v1 + *(int *)(v0 + 36)), *(unsigned char *)(v1 + *(int *)(v0 + 36) + 8));
  return type metadata accessor for WeatherConditionBackgroundModel();
}

uint64_t sub_100181C9C()
{
  return v0;
}

uint64_t sub_100181CB0()
{
  return v0;
}

void sub_100181CC8()
{
  *(void *)(v0 + 16) = v1;
}

uint64_t sub_100181CE8()
{
  return 0;
}

uint64_t sub_100181CF4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_100181D48(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_100181D9C()
{
  return type metadata accessor for Locale();
}

uint64_t sub_100181DC4(uint64_t a1)
{
  *(void *)(v1 - 144) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100181DE8()
{
  return sub_100178160(v0, v1);
}

uint64_t sub_100181E00()
{
  return swift_allocObject();
}

uint64_t sub_100181E38()
{
  return 0;
}

uint64_t sub_100181E80()
{
  return v0;
}

uint64_t sub_100181E8C()
{
  return *(void *)(v0 - 128);
}

uint64_t sub_100181EA0()
{
  return *(void *)(v0 - 200);
}

__n128 sub_100181EB4(__n128 *a1)
{
  __n128 result = v1[14];
  a1[1] = result;
  return result;
}

uint64_t sub_100181ECC()
{
  return dispatch thunk of Collection.subscript.read();
}

uint64_t sub_100181EF0(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, a1);
}

uint64_t sub_100181F24()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t sub_100181F48()
{
  return _s7Weather24LocationCompositionStateOwet_0(v1, 3, v0);
}

uint64_t sub_100181F64()
{
  return v0;
}

uint64_t sub_100181F84()
{
  return *(void *)(v0 + 40);
}

unint64_t sub_100181FA4()
{
  return 0xD000000000000020;
}

uint64_t sub_100181FB8()
{
  return v0;
}

uint64_t sub_100181FD0()
{
  return v0 - 120;
}

uint64_t sub_100181FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, a4);
}

uint64_t sub_100181FFC()
{
  return swift_beginAccess();
}

uint64_t sub_100182024()
{
  return 0;
}

uint64_t sub_100182038()
{
  return v0;
}

uint64_t sub_100182050()
{
  return swift_release_n();
}

uint64_t sub_10018207C()
{
  return _s7Weather24LocationCompositionStateOwst_0(v0, 0, 1, v1);
}

uint64_t sub_10018209C()
{
  return v0;
}

uint64_t sub_1001820B0()
{
  return sub_1007A3B74(v0, v2, v1);
}

uint64_t sub_1001820DC()
{
  return static FixedSizeTypeBinaryCodable.read(from:)();
}

uint64_t sub_1001820F8()
{
  return v0;
}

uint64_t sub_100182118(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwst_0(v1, 0, 1, a1);
}

uint64_t sub_100182138(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 216), 1, 1, a1);
  uint64_t v2 = *(void *)(v1 - 208);
  uint64_t v3 = *(void *)(v1 - 280);
  return _s7Weather24LocationCompositionStateOwst_0(v2, 1, 1, v3);
}

uint64_t sub_1001821AC()
{
  return v0;
}

uint64_t sub_1001821C4()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_1001821E0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 168);
  return _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v3);
}

uint64_t sub_1001821FC()
{
  return swift_retain();
}

uint64_t sub_100182220()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10018223C()
{
  return v0;
}

uint64_t sub_100182264()
{
  return Forecast.init(_:metadata:)();
}

uint64_t sub_100182298()
{
  return String.hash(into:)();
}

uint64_t type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E8F430);
}

uint64_t sub_100182304()
{
  return v0;
}

unint64_t sub_10018231C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 8 * (result >> 6) + 64) |= 1 << result;
  return result;
}

uint64_t sub_10018233C@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = a2;
  return result;
}

uint64_t sub_100182350()
{
  return swift_beginAccess();
}

uint64_t sub_100182368@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

uint64_t sub_10018237C()
{
  return swift_allocObject();
}

uint64_t sub_1001823C8()
{
  return v0;
}

uint64_t sub_1001823D4()
{
  return v0;
}

uint64_t sub_1001823E8()
{
  return sub_1001B7204(v2, v0, v1);
}

unint64_t sub_100182404()
{
  return 0xD000000000000018;
}

void sub_100182420(uint64_t a1@<X8>)
{
  uint64_t v2 = *v1;
  char v3 = *((unsigned char *)v1 + 8);
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
}

void sub_100182438(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 232) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_100182454()
{
  return v0;
}

uint64_t sub_100182460()
{
  uint64_t v3 = *(void *)(v1 + 8);
  *(void *)uint64_t v0 = *(void *)v1;
  *(void *)(v0 + 8) = v3;
  uint64_t v4 = *(void *)(v1 + 24);
  *(void *)(v0 + 16) = *(void *)(v1 + 16);
  *(void *)(v0 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + 40);
  *(void *)(v0 + 32) = *(void *)(v1 + 32);
  *(void *)(v0 + 40) = v5;
  uint64_t v6 = *(void *)(v1 + 56);
  *(void *)(v0 + 48) = *(void *)(v1 + 48);
  *(void *)(v0 + 56) = v6;
  uint64_t v7 = *(void *)(v1 + 72);
  *(void *)(v0 + 64) = *(void *)(v1 + 64);
  *(void *)(v0 + 72) = v7;
  uint64_t v8 = *(void *)(v1 + 88);
  *(void *)(v0 + 80) = *(void *)(v1 + 80);
  *(void *)(v0 + 88) = v8;
  *(unsigned char *)(v0 + 96) = *(unsigned char *)(v1 + 96);
  uint64_t v9 = *(void *)(v1 + 112);
  *(void *)(v0 + 104) = *(void *)(v1 + 104);
  *(void *)(v0 + 112) = v9;
  *(unsigned char *)(v0 + 120) = *(unsigned char *)(v1 + 120);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001824B8()
{
  return swift_retain();
}

uint64_t sub_1001824D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unint64_t v13 = 0xE000000000000000;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&a1, *(Swift::String_optional *)&v10, v8, *(Swift::String *)&v12, *(Swift::String *)&a8)._countAndFlagsBits;
}

id sub_1001824FC(uint64_t a1, const char *a2)
{
  return [v2 a2:1];
}

uint64_t sub_100182528()
{
  return type metadata accessor for LocationModel();
}

uint64_t sub_100182544()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_10018255C()
{
  return _s7Weather24LocationCompositionStateOwst_0(v0, 1, 1, v1);
}

uint64_t sub_10018257C()
{
  return type metadata accessor for CurrentWeather();
}

uint64_t sub_1001825A4()
{
  return v0;
}

uint64_t sub_1001825BC()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_1001825F4()
{
  return FixedSizeTypeBinaryCodable.write(to:)();
}

uint64_t sub_10018260C()
{
  return static Logger.automation.getter();
}

uint64_t sub_100182624()
{
  return swift_storeEnumTagMultiPayload();
}

Swift::Int sub_100182654(Swift::String string, Swift::OpaquePointer cases)
{
  object = string._object;
  uint64_t countAndFlagsBits = string._countAndFlagsBits;
  uint64_t v6 = object;
  return _findStringSwitchCase(cases:string:)(cases, *(Swift::String *)&countAndFlagsBits);
}

uint64_t sub_100182674()
{
  return *(void *)(v0 - 256);
}

uint64_t sub_100182680()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t sub_1001826A0()
{
  return v0;
}

void sub_1001826C0(char a1@<W8>)
{
  *(unsigned char *)(v2 + *(int *)(v3 + 24)) = a1;
  *(unsigned char *)(v2 + *(int *)(v3 + 28)) = v1;
}

uint64_t sub_1001826D8@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 288) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for WeatherDataModel();
}

uint64_t sub_100182708()
{
  return 0x74617265706D6574;
}

uint64_t sub_100182734()
{
  *(void *)(v0 - 104) = 1752392040;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100182758()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t sub_100182770(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1001827D0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  sub_1001190D4();
  v4();
  return a2;
}

uint64_t sub_10018282C()
{
  uint64_t v1 = sub_100162814();
  v2(v1);
  sub_100162E4C();
  sub_1001190D4();
  v3();
  return v0;
}

uint64_t sub_100182880()
{
  return swift_slowAlloc();
}

uint64_t sub_10018289C(uint64_t a1, uint64_t a2)
{
  return *(void *)a2;
}

uint64_t sub_1001828B4()
{
  return *(void *)(v0 + 256);
}

void sub_1001828F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 120) = (char *)&a9 - v9;
}

void sub_100182904(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

unint64_t sub_10018292C()
{
  *(_WORD *)(v0 + 12) = 2081;
  return sub_1002FF134();
}

uint64_t sub_10018295C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10018297C()
{
  return v0;
}

BOOL sub_100182988(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1001829A4()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_1001829F4@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = v1;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = 0;
  return sub_100178110(v3, v2);
}

uint64_t sub_100182A28(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v1);
}

uint64_t sub_100182A54()
{
  return v0;
}

uint64_t sub_100182A6C()
{
  return swift_bridgeObjectRelease();
}

void sub_100182A84()
{
  *(void *)(v2 - 352) = v1;
  *(void *)(v2 - 344) = v0;
}

uint64_t sub_100182A98(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, a1);
}

uint64_t sub_100182AB8(uint64_t result)
{
  *uint64_t v1 = result & 1;
  return result;
}

uint64_t sub_100182AC4()
{
  return swift_beginAccess();
}

uint64_t sub_100182AE8()
{
  return 1684957559;
}

uint64_t sub_100182AF8()
{
  return 0;
}

uint64_t sub_100182B10(uint64_t result)
{
  *(void *)(result + 16) = 1752392040;
  return result;
}

uint64_t sub_100182B34()
{
  return sub_10071D6CC(v2, v1, v0);
}

uint64_t sub_100182B50()
{
  return v0;
}

uint64_t sub_100182B68()
{
  return 0;
}

uint64_t sub_100182B98(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, a1);
}

uint64_t sub_100182BB8()
{
  return v0;
}

uint64_t sub_100182BD0()
{
  return Optional<A>.write(to:)();
}

uint64_t sub_100182BF4@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1);
}

uint64_t sub_100182C00()
{
  return v0;
}

uint64_t sub_100182C14()
{
  return 255;
}

uint64_t sub_100182C20()
{
  return dispatch thunk of Hashable.hash(into:)();
}

__n128 sub_100182C3C()
{
  char v1 = *(unsigned char *)(v0 - 224);
  __n128 result = *(__n128 *)(v0 - 256);
  long long v3 = *(_OWORD *)(v0 - 240);
  *(__n128 *)(v0 - 304) = result;
  *(_OWORD *)(v0 - 288) = v3;
  *(unsigned char *)(v0 - 272) = v1;
  *(unsigned char *)(v0 - 271) = 1;
  return result;
}

uint64_t sub_100182C6C()
{
  return v0;
}

uint64_t sub_100182C88()
{
  return v0 + 8;
}

uint64_t sub_100182C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, a2, a3, a4);
  return type metadata accessor for DisplayMetrics();
}

uint64_t sub_100182CC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 56);
  char v12 = *(unsigned char *)(a1 + 72);
  uint64_t v11 = *(void *)(a1 + 64);
  return sub_10018CCC4(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_100182CF0()
{
  return v0;
}

uint64_t sub_100182D04()
{
  return v0;
}

uint64_t sub_100182D1C()
{
  return swift_beginAccess();
}

uint64_t sub_100182D54()
{
  return v0;
}

uint64_t sub_100182D78()
{
  return v0;
}

uint64_t sub_100182D88(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v1);
}

uint64_t sub_100182DA4()
{
  return swift_release();
}

uint64_t sub_100182DD0()
{
  return v0;
}

void sub_100182DE4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v2 - 320);
  uint64_t v5 = *(void *)(v2 - 216);
  uint64_t v6 = *(void *)(v2 - 168);
  uint64_t v7 = *(void *)(v2 - 208);
  int v8 = *(_DWORD *)(v2 - 240);
  sub_100B639C4(a1, v4, v5, v1, v6, v7, v8);
}

uint64_t sub_100182E1C(uint64_t a1, void (*a2)(void))
{
  uint64_t v4 = *(void *)(v2 - 312);
  return sub_10015918C(v4, a2);
}

uint64_t sub_100182E50()
{
  *(void *)(v0 - 104) = 1752392040;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100182E74()
{
  *uint64_t v0 = 0x8000000000000000;
  return v1;
}

uint64_t sub_100182E98()
{
  return swift_allocObject();
}

uint64_t sub_100182EC0()
{
  return 0;
}

uint64_t sub_100182EE0()
{
  return v0 - 112;
}

uint64_t sub_100182F1C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100182F34()
{
  return v0;
}

uint64_t sub_100182F48(uint64_t a1, unint64_t a2)
{
  return sub_10016414C(a1, a2, (uint64_t *)(v2 - 120));
}

uint64_t sub_100182F60(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwst_0(v1, 0, 1, a1);
}

uint64_t sub_100182F80()
{
  return type metadata accessor for PressureComponent();
}

uint64_t sub_100182FA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a2 - 256);
  return sub_1001B7204(a1, v4, v2);
}

uint64_t sub_100182FC0()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_100182FDC()
{
  return _ConditionalContent<>.init(storage:)();
}

__n128 sub_10018301C()
{
  return *(__n128 *)(v0 + 56);
}

uint64_t sub_100183034()
{
  return v0;
}

uint64_t sub_100183044()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10018305C()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_10018307C()
{
  return static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
}

uint64_t sub_100183094()
{
  return v0;
}

uint64_t sub_1001830A0()
{
  *(void *)(v1 - 96) = v0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001830B8()
{
  return v0 + *(int *)(v1 + 28);
}

void sub_1001830CC()
{
  *(void *)(v0 - 272) += 8;
}

uint64_t sub_1001830E4()
{
  return *(void *)(v0 - 312);
}

uint64_t sub_10018310C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_10063E848((uint64_t)&a9 - v9);
}

uint64_t sub_10018312C()
{
  return 24904;
}

uint64_t sub_100183140()
{
  return 0x746E617361656C70;
}

uint64_t sub_100183158()
{
  return swift_beginAccess();
}

uint64_t sub_10018317C@<X0>(int a1@<W8>)
{
  if (a1 == 1) {
    return 0xD000000000000011;
  }
  else {
    return 0x6974736974617473;
  }
}

uint64_t sub_1001831B0()
{
  return v0;
}

uint64_t sub_1001831C0()
{
  return type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(0);
}

uint64_t sub_1001831E8()
{
  return v0;
}

uint64_t sub_1001831F4()
{
  return 0;
}

uint64_t sub_100183208(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100183214()
{
  return *(void *)(v0 - 136);
}

uint64_t sub_100183230()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_100183248()
{
  *(void *)(v1 - 280) = v0;
  *(unsigned char *)(v1 - 272) = 1;
  return swift_retain();
}

uint64_t sub_10018326C()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_100183298()
{
  return 0;
}

uint64_t sub_1001832A8()
{
  return 0x6F4C686372616573;
}

void sub_1001832CC()
{
  *(unsigned char *)(v0 - 67) = 2;
}

uint64_t sub_1001832D8()
{
  return v0;
}

uint64_t sub_1001832E8()
{
  return 0;
}

uint64_t sub_10018330C()
{
  return v0;
}

uint64_t sub_100183334()
{
  return Forecast.init(_:metadata:)();
}

uint64_t sub_100183368()
{
  return v0;
}

uint64_t sub_100183384()
{
  return *(void *)(v0 - 272);
}

uint64_t sub_1001833B4()
{
  return swift_release();
}

uint64_t sub_1001833E0()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void *sub_100183404(void *result)
{
  result[2] = v6;
  result[3] = v2;
  result[4] = v1;
  result[5] = v3;
  result[6] = v4;
  result[7] = v5;
  return result;
}

__n128 sub_100183428@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 - 256);
  *a1 = result;
  unint64_t v3 = *(void *)(v1 - 288);
  a1[1].n128_u64[0] = *(void *)(v1 - 272);
  a1[1].n128_u64[1] = v3;
  return result;
}

Swift::Int sub_100183448()
{
  return sub_1002C4BE0();
}

uint64_t sub_100183458(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = *(void *)(v3 + 1360);
  uint64_t v6 = *(void *)(v3 + 1184);
  return sub_1001B7204(v5, v6, a3);
}

void *sub_100183470(void *a1)
{
  return sub_1001B1E64(a1, v1);
}

uint64_t sub_1001834B4()
{
  return v1 + *(int *)(v0 + 20);
}

__n128 sub_1001834C8@<Q0>(uint64_t a1@<X8>)
{
  return *(__n128 *)(a1 + 40);
}

uint64_t sub_1001834DC()
{
  *(void *)uint64_t v0 = *(void *)v1;
  *(void *)(v0 + 8) = *(void *)(v1 + 8);
  *(void *)(v0 + 16) = *(void *)(v1 + 16);
  *(void *)(v0 + 24) = *(void *)(v1 + 24);
  *(unsigned char *)(v0 + 32) = *(unsigned char *)(v1 + 32);
  *(void *)(v0 + 40) = *(void *)(v1 + 40);
  *(void *)(v0 + 48) = *(void *)(v1 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_100183530()
{
  *(void *)(v1 - 200) = v0;
  return swift_retain();
}

uint64_t sub_10018355C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return sub_1001827D0(v4, v3, a3);
}

uint64_t sub_100183574()
{
  return v0;
}

uint64_t sub_100183588()
{
  return v0;
}

void sub_1001835A8(void *a1)
{
  LocationSearchEntity.init(id:name:placemark:isLocal:)(v1, v3, a1, 0, v2);
}

uint64_t sub_1001835FC()
{
  return type metadata accessor for Date();
}

uint64_t sub_10018363C()
{
  return *(void *)(v0 - 336) + *(int *)(*(void *)(v0 - 144) + 20);
}

uint64_t sub_100183660()
{
  return v1 + *(int *)(v0 + 56);
}

void sub_100183680()
{
  *(void *)(v1 + 16) = v0;
}

uint64_t sub_1001836AC()
{
  return 0;
}

uint64_t sub_1001836B8(uint64_t a1, void (*a2)(void))
{
  uint64_t v4 = *(void *)(v2 - 336);
  return sub_1000C134C(v4, a2);
}

double sub_1001836D0()
{
  double result = *(double *)(v1 - 104);
  uint64_t v3 = *(void *)(v1 - 96);
  *(double *)uint64_t v0 = result;
  *(void *)(v0 + 8) = v3;
  return result;
}

uint64_t sub_100183700()
{
  uint64_t v1 = sub_100162814();
  v2(v1);
  sub_100162E4C();
  sub_1001190D4();
  v3();
  return v0;
}

uint64_t sub_100183754(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  sub_1001190D4();
  v4();
  return a2;
}

void sub_1001837B0(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

unint64_t sub_1001837D0(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

uint64_t sub_100183804()
{
  return swift_storeEnumTagMultiPayload();
}

double sub_100183844()
{
  return 0.0;
}

uint64_t sub_100183858(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v2 - 144), 1, 1, a1);
  uint64_t v3 = *(void *)(v2 - 88);
  return _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, v3);
}

uint64_t sub_1001838A0()
{
  *(unsigned char *)(v0 - 83) = 2;
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_1001838E8()
{
  return v0;
}

__n128 *sub_100183900(__n128 *result, __n128 a2)
{
  *(__n128 *)(v2 - 128) = a2;
  result[1] = a2;
  return result;
}

uint64_t sub_100183918(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, a1);
}

uint64_t sub_100183938()
{
  return type metadata accessor for LocationViewObserverView();
}

uint64_t sub_100183954()
{
  return v0;
}

uint64_t sub_100183968()
{
  return v0;
}

uint64_t sub_10018397C()
{
  return sub_1001781AC(v1, v0);
}

uint64_t sub_100183994()
{
  return dispatch thunk of Collection.endIndex.getter();
}

void sub_1001839B8(float a1)
{
  *uint64_t v2 = a1;
  *(void *)(v1 + 248) = v2 + 1;
}

uint64_t sub_1001839CC()
{
  sub_10018F6D8(*(void *)(v1 + *(int *)(v0 + 36)), *(unsigned char *)(v1 + *(int *)(v0 + 36) + 8));
  return swift_release();
}

uint64_t sub_100183A10(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 96), 1, 1, a1);
  return type metadata accessor for NotificationsOptInState();
}

uint64_t sub_100183A5C()
{
  return v0;
}

uint64_t sub_100183A74()
{
  return v0;
}

void sub_100183A8C()
{
  sub_1007E9CF4(0, 1, 1, v0);
}

uint64_t sub_100183AAC(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwst_0(v1, 0, 1, a1);
}

unint64_t sub_100183ACC()
{
  return sub_1001AB3E0();
}

uint64_t sub_100183AF4()
{
  return dispatch thunk of Collection.startIndex.getter();
}

uint64_t sub_100183B14@<X0>(uint64_t a1@<X7>, uint64_t a2@<X8>)
{
  unint64_t v5 = 0xD000000000000018;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 1953066581;
  unint64_t v9 = 0xE400000000000000;
  unint64_t v4 = (a2 - 32) | 0x8000000000000000;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v5, *(Swift::String_optional *)&v6, v2, *(Swift::String *)&v8, *(Swift::String *)&a1)._countAndFlagsBits;
}

uint64_t sub_100183B58()
{
  return swift_beginAccess();
}

__n128 sub_100183B78(__n128 *a1)
{
  __n128 result = *(__n128 *)(v1 - 128);
  a1[1] = result;
  return result;
}

BOOL sub_100183B8C@<W0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  uint64_t v10 = a1[3];
  return CGRectEqualToRect(*(CGRect *)&v3, *(CGRect *)&v7);
}

uint64_t sub_100183BAC()
{
  return 0;
}

void sub_100183BE8(uint64_t a1, unint64_t a2, char *a3, uint64_t a4, uint64_t (*a5)(void))
{
  unint64_t v7 = *(void *)(v5 - 272);
  uint64_t v8 = *(void (**)(unint64_t, uint64_t, unint64_t, __n128))(v5 - 256);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t))(v5 - 248);
  uint64_t v10 = *(void (**)(uint64_t))(v5 - 264);
  sub_1005624DC(a1, a2, a3, v7, a5, v8, v10, v9);
}

uint64_t sub_100183C10()
{
  return _s7Weather24LocationCompositionStateOwst_0(v1, 0, 1, v0);
}

uint64_t sub_100183C30()
{
  return 0;
}

uint64_t sub_100183C48@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

uint64_t sub_100183C5C()
{
  return v0;
}

void sub_100183C7C(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 240) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_100183CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, a4);
  uint64_t v5 = *(void *)(v4 - 216);
  uint64_t v6 = *(void *)(v4 - 144);
  return _s7Weather24LocationCompositionStateOwst_0(v5, 1, 1, v6);
}

uint64_t sub_100183CF0()
{
  return v0;
}

void sub_100183D00()
{
  *(_DWORD *)(v0 - 496) = 0;
  *(void *)(v0 - 728) = 0;
  *(void *)(v0 - 736) = 0;
  *(void *)(v0 - 760) = 0;
  *(void *)(v0 - 768) = 0;
}

void sub_100183D40()
{
}

uint64_t sub_100183D58()
{
  return swift_release();
}

uint64_t sub_100183D70()
{
  return 1734833517;
}

id sub_100183D80()
{
  *(void *)(v0 - 120) = 0x3A64657461657263;
  *(void *)(v0 - 112) = 0xE900000000000020;
  return sub_100695B90();
}

uint64_t sub_100183DC4()
{
  return swift_slowAlloc();
}

uint64_t sub_100183DE0()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_100183E00()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v1 + *(int *)(v0 + 80));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v1 + *(int *)(v0 + 84));
  return type metadata accessor for Text.Measurements();
}

uint64_t sub_100183E44()
{
  return type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(0) - 8;
}

uint64_t sub_100183E78()
{
  return v0;
}

uint64_t sub_100183E90()
{
  return 0;
}

uint64_t sub_100183EB0@<X0>(unint64_t a1@<X8>)
{
  return sub_1001A6D34(a1 > 1, v1, 1, v2);
}

uint64_t sub_100183ED4()
{
  return swift_beginAccess();
}

uint64_t sub_100183EF8@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a3 - 256);
  return sub_10013F1C8(a1, v4, a2);
}

uint64_t sub_100183F10()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100183F28(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, *(void *)(v1 - 144));
  return static Set<>.full.getter();
}

uint64_t sub_100183F58(uint64_t a1)
{
  return _swift_dynamicCastUnknownClassUnconditional(a1, v1, 0, 0, 0);
}

void sub_100183FA4(float a1)
{
  *uint64_t v1 = a1;
  *(void *)(v2 - 152) = 1752392040;
}

uint64_t sub_100183FC4(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 216), 1, 1, a1);
  uint64_t v2 = *(void *)(v1 - 224);
  uint64_t v3 = *(void *)(v1 - 248);
  return _s7Weather24LocationCompositionStateOwst_0(v2, 1, 1, v3);
}

uint64_t sub_100184010()
{
  return swift_allocObject();
}

uint64_t sub_10018402C(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 128), 1, 1, a1);
  return type metadata accessor for NotificationsOptInState();
}

uint64_t sub_100184070(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  return sub_1001659F0(a1, a2, a3, v22, v21, 0, 0, 0, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

uint64_t sub_100184094()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

void sub_1001840B0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

void sub_1001840D0()
{
  *(void *)(*(void *)v1 + 16) = v0 + 1;
}

uint64_t sub_1001840E4()
{
  return v0;
}

uint64_t sub_1001840F8()
{
  return v0;
}

uint64_t sub_100184110()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_100184130()
{
  return v0;
}

uint64_t sub_100184148(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 224);
  return _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v3);
}

uint64_t sub_100184164()
{
  return v0;
}

uint64_t sub_100184174()
{
  uint64_t v4 = v1 + *(int *)(v0 + 44);
  return _s7Weather24LocationCompositionStateOwet_0(v4, 1, v2);
}

uint64_t sub_100184198(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return sub_1001416B0(v6, v5, v4, a4);
}

__n128 *sub_1001841C8(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

uint64_t sub_1001841EC()
{
  return v0;
}

uint64_t sub_100184204(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 280), 1, 1, a1);
  uint64_t v2 = *(void *)(v1 - 288);
  uint64_t v3 = *(void *)(v1 - 232);
  return _s7Weather24LocationCompositionStateOwst_0(v2, 1, 1, v3);
}

uint64_t sub_100184258()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_100184274()
{
  return v0;
}

uint64_t sub_100184288()
{
  return sub_1001087F8();
}

uint64_t sub_1001842A0()
{
  return v0;
}

uint64_t sub_1001842CC(uint64_t a1, void (*a2)(void))
{
  return sub_10015918C(v2, a2);
}

uint64_t *sub_1001842FC(uint64_t a1)
{
  v1[4] = a1;
  return sub_100170694(v1);
}

uint64_t sub_100184314()
{
  return v0 - 216;
}

uint64_t sub_10018432C()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_100184360()
{
  return swift_slowAlloc();
}

double sub_100184398()
{
  return 0.0;
}

uint64_t sub_1001843C0()
{
  return sub_10011818C();
}

void sub_1001843F8()
{
  **(void **)(v1 - 104) = v0;
}

void *sub_10018440C(void *a1, uint64_t a2)
{
  return sub_1001B1E64(a1, a2);
}

uint64_t sub_100184434()
{
  return sub_100178110(v1, v0);
}

uint64_t sub_10018444C()
{
  return type metadata accessor for Date();
}

uint64_t sub_100184468()
{
  return swift_slowAlloc();
}

uint64_t sub_100184484@<X0>(void (*a1)(void)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a2 - 256);
  uint64_t v5 = *(void *)(v2 - 200);
  return sub_1001E4534(v4, v5, a1);
}

void sub_1001844A4()
{
  *(void *)(v0 - 120) = 91;
  *(void *)(v0 - 112) = 0xE100000000000000;
}

__n128 *sub_1001844C4(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return a1 + 3;
}

uint64_t sub_1001844D0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001844EC@<X0>(uint64_t a1@<X8>)
{
  return sub_100178254(v2 + a1, v1);
}

__n128 sub_100184514()
{
  *(void *)(v1 + 16) = v2;
  uint64_t v4 = v1 + 40 * v0;
  __n128 result = *(__n128 *)v3;
  long long v6 = *(_OWORD *)(v3 + 16);
  *(unsigned char *)(v4 + 64) = *(unsigned char *)(v3 + 32);
  *(__n128 *)(v4 + 32) = result;
  *(_OWORD *)(v4 + 48) = v6;
  return result;
}

uint64_t sub_10018453C()
{
  _s7Weather24LocationCompositionStateOwst_0(v0, 0, 1, *(void *)(v1 - 272));
  return 0;
}

unint64_t sub_100184574()
{
  return 0xD000000000000012;
}

uint64_t sub_100184588()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001845A0()
{
  return String.init<A>(describing:)();
}

uint64_t sub_1001845DC()
{
  return v0;
}

uint64_t sub_1001845F0()
{
  return *(void *)(v0 - 232);
}

uint64_t sub_100184618()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100184634()
{
  return v0;
}

uint64_t sub_100184648(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_10018469C()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_1001846A8()
{
  return *(void *)(v0 + 864);
}

uint64_t sub_1001846C4()
{
  sub_1001B1E64((void *)(*(void *)(v0 - 352) + 216), *(void *)(*(void *)(v0 - 352) + 240));
  return Forecast.forecast.getter();
}

uint64_t sub_100184704()
{
  return v0;
}

uint64_t sub_100184710(uint64_t a1)
{
  return sub_10006DF38(a1, v2, v1);
}

void sub_100184728(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_100184748()
{
  return swift_release();
}

uint64_t sub_100184760(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return sub_100181D48(v3, v4, a3);
}

uint64_t sub_100184778()
{
  return FixedSizeTypeBinaryCodable.write(to:)();
}

uint64_t sub_1001847B0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5 = *(void *)(v3 - 288);
  uint64_t v6 = *(void *)(v3 - 248);
  return sub_100886FF8(v5, v6, a3);
}

BOOL sub_1001847F0()
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v0, v1);
}

uint64_t sub_10018481C()
{
  return 0;
}

uint64_t sub_100184834@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

uint64_t sub_100184848()
{
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E8F4C0);
}

void sub_100184898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 168) = (char *)&a9 - v9;
}

void sub_1001848AC()
{
  sub_1007F30E8();
}

unint64_t sub_1001848D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, uint64_t a5, uint64_t a6)
{
  return sub_1001CF0E0(v6, a2, a3, a4, v7, a6);
}

uint64_t sub_1001848F8()
{
  return sub_10006DF38(v0, v1, v2);
}

uint64_t sub_100184914(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t sub_100184924()
{
  return v0;
}

void sub_100184934()
{
  *(void *)(v1 - 152) = v0 | 7;
}

uint64_t sub_100184960()
{
  return sub_1000C13A0(v0);
}

uint64_t sub_100184978()
{
  return swift_allocObject();
}

uint64_t sub_1001849C8()
{
  uint64_t v4 = *(void *)(v2 - 208);
  return sub_10006DF38(v1, v4, v0);
}

uint64_t sub_1001849F8(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, a1);
}

void sub_100184A18(uint64_t a1@<X8>)
{
  uint64_t v2 = *v1;
  char v3 = *((unsigned char *)v1 + 8);
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
}

uint64_t sub_100184A30()
{
  return v0;
}

uint64_t sub_100184A58()
{
  return *(void *)(v0 - 88);
}

uint64_t sub_100184A6C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 208);
  return _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v3);
}

uint64_t sub_100184A88()
{
  return v0;
}

uint64_t sub_100184A98()
{
  return v0;
}

unint64_t sub_100184AA8()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_100184ABC(uint64_t result)
{
  *(void *)(v2 - 128) = result;
  *(void *)(v2 - 120) = 0;
  *(void *)(v2 - 232) = v1;
  *uint64_t v1 = 771;
  *(void *)(v2 - 112) = v1 + 1;
  return result;
}

uint64_t sub_100184AD8@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
  return v1 - 72;
}

uint64_t sub_100184AEC()
{
  return sub_10071D720(v1, v0);
}

uint64_t sub_100184B04(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return sub_10074BA4C(v4, v3, a3);
}

uint64_t sub_100184B1C()
{
  uint64_t v3 = *(void *)(v1 - 144);
  return _s7Weather24LocationCompositionStateOwst_0(v0, 1, 1, v3);
}

id sub_100184B3C(uint64_t a1)
{
  uint64_t v4 = *(const char **)(v2 + 2840);
  return [v1 v4:a1];
}

uint64_t sub_100184B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 - 128);
  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v4);
}

uint64_t sub_100184B7C@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
  return v1 - 72;
}

uint64_t sub_100184B90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + a1;
  uint64_t v4 = *(void *)v3;
  char v5 = *(unsigned char *)(v3 + 8);
  return sub_10018F6D8(v4, v5);
}

uint64_t sub_100184BAC()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_100184BCC()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_100184BF0()
{
  sub_10018F6D8(*(void *)(v1 + v0[13]), *(unsigned char *)(v1 + v0[13] + 8));
  sub_10018F6D8(*(void *)(v1 + v0[14]), *(unsigned char *)(v1 + v0[14] + 8));
  uint64_t v2 = v1 + v0[15];
  uint64_t v3 = *(void *)v2;
  uint64_t v4 = *(void *)(v2 + 8);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(v2 + 32);
  uint64_t v8 = *(void *)(v2 + 40);
  uint64_t v9 = *(void *)(v2 + 48);
  uint64_t v10 = *(void *)(v2 + 56);
  char v14 = *(unsigned char *)(v2 + 72);
  uint64_t v13 = *(void *)(v2 + 64);
  return sub_10018CCC4(v3, v4, v5, v6, v7, v8, v9, v10, v13, v14);
}

uint64_t sub_100184C60()
{
  return *(void *)(v0 - 176);
}

uint64_t sub_100184C9C()
{
  return v0;
}

uint64_t sub_100184CB0()
{
  return static Logger.automation.getter();
}

uint64_t sub_100184CD8()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_100184D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, char a14, uint64_t a15)
{
  return sub_1007210CC(0, 256, 2, 2, 3, 0, 0, 0, v15, 0, a11, a12, a13, a14, a15);
}

uint64_t sub_100184D40()
{
  uint64_t v5 = v0 + *(int *)(v1 + 56);
  return sub_10020E72C(v3, v5, v2);
}

uint64_t sub_100184D60()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100184D88()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_100184DAC()
{
  return v0;
}

unint64_t sub_100184DC0()
{
  return v2
       + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
       + *(void *)(v1 + 72) * v0;
}

uint64_t sub_100184DE4()
{
  uint64_t v2 = *(void *)(v0 - 264);
  uint64_t v3 = *(void *)(v0 - 240);
  return _s7Weather24LocationCompositionStateOwst_0(v2, 1, 1, v3);
}

uint64_t sub_100184E0C()
{
  return v0;
}

uint64_t sub_100184E20()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100184E54()
{
  return State.init(wrappedValue:)();
}

uint64_t sub_100184E70()
{
  return v0;
}

uint64_t sub_100184E88()
{
  return _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
}

uint64_t sub_100184EBC()
{
  return v0;
}

uint64_t sub_100184EC8()
{
  *(void *)(v0 - 640) = *(void *)(v0 - 232);
  return static NSUnitSpeed.read(from:)();
}

uint64_t sub_100184EF0(uint64_t a1)
{
  Hasher._combine(_:)(*(void *)v1);
  if (*(void *)(v1 + 16))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  swift_bridgeObjectRetain();
  sub_100187228();
  swift_bridgeObjectRelease();
  if ((*(void *)(v1 + 40) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = *(void *)(v1 + 40);
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(*(unsigned char *)(v1 + 48));
  uint64_t v4 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(0);
  type metadata accessor for Precipitation();
  sub_100186EE8(&qword_100E8F3B8, (void (*)(uint64_t))&type metadata accessor for Precipitation);
  sub_100186B34();
  sub_10018551C();
  sub_100185BD0();
  swift_bridgeObjectRelease();
  sub_10018551C();
  sub_100185BD0();
  swift_bridgeObjectRelease();
  sub_10018551C();
  sub_100185BD0();
  swift_bridgeObjectRelease();
  type metadata accessor for Date();
  sub_100186EE8((unint64_t *)&qword_100E63978, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_100186B34();
  type metadata accessor for TimeZone();
  sub_100186EE8(&qword_100E6BFA8, (void (*)(uint64_t))&type metadata accessor for TimeZone);
  sub_100186B34();
  Hasher._combine(_:)(*(unsigned char *)(v1 + *(int *)(v4 + 60)));
  uint64_t v5 = *(void *)(v1 + *(int *)(v4 + 64));
  swift_bridgeObjectRetain();
  sub_1001897A8(a1, v5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100185128()
{
  return v0;
}

uint64_t sub_100185148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, a4);
  uint64_t v5 = *(void *)(v4 - 624);
  uint64_t v6 = *(void *)(v4 - 648);
  return _s7Weather24LocationCompositionStateOwst_0(v5, 1, 1, v6);
}

uint64_t sub_10018519C()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_1001851B8()
{
  return swift_slowAlloc();
}

uint64_t sub_1001851D4(void *a1)
{
  sub_1001B1E64(a1, v1);
  return v1;
}

uint64_t sub_100185204()
{
  return sub_10031F75C(v0, v1);
}

uint64_t sub_10018521C()
{
  return v0;
}

uint64_t sub_100185248()
{
  return v0;
}

uint64_t sub_100185268()
{
  return sub_10018F6D8(*(void *)(v1 + *(int *)(v0 + 28)), *(unsigned char *)(v1 + *(int *)(v0 + 28) + 8));
}

uint64_t sub_100185294()
{
  return v0;
}

uint64_t sub_1001852B8()
{
  return v0;
}

uint64_t sub_1001852D0()
{
  return dispatch thunk of SetAlgebra.isSuperset(of:)();
}

double sub_1001852F0()
{
  return 0.0;
}

uint64_t sub_10018530C()
{
  return type metadata accessor for ListLocationViewModel(0);
}

uint64_t sub_100185328()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_100185338@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_100185358()
{
  return type metadata accessor for ListViewAction();
}

uint64_t sub_100185394()
{
  return static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:locale:)();
}

uint64_t sub_1001853BC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001853DC(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100185404()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10018541C()
{
  return v0;
}

uint64_t sub_100185434(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 272);
  return _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v3);
}

uint64_t sub_100185454(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 248);
  return _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v3);
}

uint64_t sub_100185470()
{
  return WeatherDataModel.currentWeather.getter();
}

uint64_t sub_10018548C@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1);
}

void sub_1001854C4()
{
  uint64_t v1 = 0x696669646F6D203BLL;
  unint64_t v2 = 0xEC000000203A6465;
  String.append(_:)(*(Swift::String *)&v1);
}

void sub_1001854F0(uint64_t a1@<X8>)
{
  uint64_t v4 = (void *)(a1 + 16 * v1);
  *uint64_t v4 = v3;
  v4[1] = v2;
}

uint64_t sub_1001854FC()
{
  return 0x6465766965636572;
}

uint64_t sub_10018551C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100185538()
{
  uint64_t v4 = *(void *)(v2 - 264);
  return sub_10071D6CC(v1, v4, v0);
}

uint64_t sub_10018555C()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100185578()
{
  return Location.init(id:name:timeZone:coordinate:lastRefreshDate:searchTitle:searchSubtitle:preciseName:secondaryName:)();
}

uint64_t sub_1001855A8()
{
  return _s7Weather24LocationCompositionStateOwst_0(v1, 0, 1, v0);
}

uint64_t sub_1001855C8()
{
  return v0;
}

uint64_t sub_1001855E0()
{
  *(void *)(v0 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001855F8()
{
  return 0;
}

uint64_t sub_100185614()
{
  return sub_1001781AC(v1, v0);
}

uint64_t sub_10018562C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, a4);
  return type metadata accessor for SearchViewState(0);
}

uint64_t sub_10018565C()
{
  _s7Weather24LocationCompositionStateOwst_0(v0, 0, 1, *(void *)(v1 - 256));
  return type metadata accessor for LocationViewerViewState._Storage(0);
}

uint64_t sub_100185694()
{
  *(unsigned char *)(v0 - 66) = 1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001856B0()
{
  return 0;
}

uint64_t sub_1001856C8()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_1001856F4()
{
  return type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
}

uint64_t sub_100185714()
{
  return v0;
}

uint64_t sub_100185744()
{
  return type metadata accessor for WeatherNetworkActivity.Label();
}

uint64_t sub_100185764()
{
  return v0;
}

uint64_t sub_10018577C()
{
  return 0;
}

uint64_t sub_100185790()
{
  return 0;
}

uint64_t sub_1001857A4()
{
  return AirQualityScaleCategory.init(description:number:color:recommendation:range:glyph:)();
}

uint64_t sub_1001857E4()
{
  return sub_10016EC18(v0, v1);
}

uint64_t sub_100185804()
{
  return v0;
}

uint64_t sub_100185818(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 400);
  return _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v3);
}

uint64_t sub_100185838@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_100185850()
{
  return v0;
}

void sub_100185864(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 320) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_100185884()
{
  _s7Weather24LocationCompositionStateOwst_0(v1, 0, 1, v0);
  return type metadata accessor for IntentDialog();
}

_WORD *sub_1001858BC(_WORD *result)
{
  *__n128 result = 0;
  return result;
}

uint64_t sub_1001858D8()
{
  return swift_beginAccess();
}

uint64_t sub_10018591C()
{
  return dispatch thunk of Collection.formIndex(after:)();
}

void *sub_10018593C()
{
  return sub_1001B1E64(v0, v0[3]);
}

uint64_t sub_100185960()
{
  *(void *)(v1 - 144) = (v0 + 32) & ~v0;
  return 0;
}

uint64_t sub_100185978()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_100185994()
{
  return *(void *)(v0 - 488);
}

uint64_t sub_1001859A8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_10031F6A8(v3 + a2, a1, v2);
}

uint64_t sub_1001859C0()
{
  return 0;
}

uint64_t sub_1001859CC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v2 - 184);
  return sub_100178BD0(a1, v4, v1);
}

uint64_t sub_1001859E8()
{
  return *(void *)(v0 - 152);
}

uint64_t sub_100185A08()
{
  return v0;
}

uint64_t sub_100185A34()
{
  return swift_slowDealloc();
}

uint64_t sub_100185A50()
{
  return type metadata accessor for NotificationsOptInState();
}

void sub_100185A80(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 144) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_100185A9C()
{
  return *(void *)(v0 + 24);
}

uint64_t sub_100185AC0()
{
  return v0;
}

uint64_t sub_100185AD4()
{
  return v0;
}

uint64_t sub_100185AEC()
{
  return *(void *)(v0 - 400);
}

uint64_t sub_100185B08()
{
  sub_10018F6D8(v0, 0);
  return v1;
}

uint64_t sub_100185B38()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100185B50()
{
  return type metadata accessor for LocationModel();
}

void sub_100185B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 216) = (char *)&a9 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_100185B94()
{
  return v0;
}

BOOL sub_100185BB8()
{
  return os_log_type_enabled(v0, v1);
}

uint64_t sub_100185BD0()
{
  return String.hash(into:)();
}

uint64_t sub_100185BEC()
{
  return sub_10071D6CC(v2, v1, v0);
}

uint64_t sub_100185C08()
{
  return *(void *)(v0 - 152);
}

uint64_t sub_100185C1C()
{
  return 0;
}

uint64_t sub_100185C28()
{
  return v0;
}

uint64_t sub_100185C40()
{
  return v0;
}

uint64_t sub_100185C58()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_100185C8C()
{
  return 0;
}

uint64_t sub_100185CA8@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

uint64_t sub_100185CE0()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_100185D00()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

double sub_100185D20()
{
  return 0.0;
}

uint64_t sub_100185D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v4 - 216), 1, 1, a4);
  return type metadata accessor for WeatherMapPresentationState(0);
}

uint64_t sub_100185D70(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 264), 1, 1, a1);
  return type metadata accessor for NotificationsOptInState();
}

uint64_t sub_100185DB0()
{
  return v0 - 128;
}

uint64_t sub_100185DC0()
{
  return *(void *)(v0 - 144);
}

uint64_t sub_100185DF0()
{
  return swift_beginAccess();
}

uint64_t sub_100185E0C()
{
  return type metadata accessor for ModalViewState(0);
}

void sub_100185E34()
{
  *(void *)(v1 + 8) = (v0 - 1);
}

uint64_t sub_100185E40(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, a1);
}

uint64_t sub_100185E60()
{
  return WeatherCondition.conditionIcon(isDaylight:isFilled:forLightBackground:)();
}

__n128 *sub_100185E8C(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x656C746974;
  result[2].n128_u64[1] = 0xE500000000000000;
  result[3].n128_u64[0] = v3;
  result[3].n128_u64[1] = v2;
  return result;
}

uint64_t sub_100185EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 176) = (char *)&a9 - v9;
  return type metadata accessor for DayWeather();
}

uint64_t sub_100185ED0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 - 424) = a1;
  *(void *)(v2 - 432) = a2;
  return swift_release();
}

uint64_t sub_100185EF4()
{
  return type metadata accessor for Optional();
}

uint64_t sub_100185F14(uint64_t a1, uint64_t a2)
{
  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v2);
}

void sub_100185F2C()
{
  sub_10024FA08();
}

uint64_t sub_100185F44@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

__n128 sub_100185F50(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, __n128 a11, long long a12)
{
  a1[2] = a9;
  a1[3] = a10;
  __n128 result = a11;
  a1[4] = a11;
  a1[5] = a12;
  return result;
}

uint64_t sub_100185F64(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 312);
  return _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, v3);
}

uint64_t sub_100185F84()
{
  return 0;
}

uint64_t sub_100185FA8()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_100185FC4()
{
  return *(void *)(v0 - 440);
}

uint64_t sub_100186010()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_100186030(uint64_t result)
{
  *(void *)uint64_t v1 = result;
  *(unsigned char *)(v1 + 8) = 0;
  return result;
}

uint64_t sub_10018603C(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[9];
  uint64_t v5 = type metadata accessor for Precipitation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[13];
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + a2[14];
  uint64_t v9 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100186180(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = (int *)type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(0);
    uint64_t v7 = a1 + v6[9];
    uint64_t v8 = type metadata accessor for Precipitation();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = a1 + v6[13];
    uint64_t v10 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    uint64_t v11 = a1 + v6[14];
    uint64_t v12 = type metadata accessor for TimeZone();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    if (result > 1) {
      return result;
    }
    uint64_t v3 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    uint64_t v4 = a1 + *(int *)(type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(0) + 20);
    uint64_t v5 = type metadata accessor for TimeZone();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001863A8(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v18 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v18;
    uint64_t v19 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v19;
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    uint64_t v20 = (int *)type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(0);
    uint64_t v21 = v20[9];
    uint64_t v22 = a1 + v21;
    uint64_t v23 = a2 + v21;
    uint64_t v24 = type metadata accessor for Precipitation();
    uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25(v22, v23, v24);
    uint64_t v26 = v20[10];
    uint64_t v27 = (void *)(a1 + v26);
    uint64_t v28 = (void *)(a2 + v26);
    uint64_t v29 = v28[1];
    void *v27 = *v28;
    v27[1] = v29;
    uint64_t v30 = v20[11];
    uint64_t v31 = (void *)(a1 + v30);
    uint64_t v32 = (void *)(a2 + v30);
    uint64_t v33 = v32[1];
    *uint64_t v31 = *v32;
    v31[1] = v33;
    uint64_t v34 = v20[12];
    uint64_t v35 = (void *)(a1 + v34);
    uint64_t v36 = (void *)(a2 + v34);
    uint64_t v37 = v36[1];
    *uint64_t v35 = *v36;
    v35[1] = v37;
    uint64_t v38 = v20[13];
    uint64_t v47 = a1 + v38;
    uint64_t v39 = a2 + v38;
    uint64_t v40 = type metadata accessor for Date();
    uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v41(v47, v39, v40);
    uint64_t v42 = v20[14];
    uint64_t v43 = a1 + v42;
    uint64_t v44 = a2 + v42;
    uint64_t v45 = type metadata accessor for TimeZone();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
    *(unsigned char *)(a1 + v20[15]) = *(unsigned char *)(a2 + v20[15]);
    *(void *)(a1 + v20[16]) = *(void *)(a2 + v20[16]);
  }
  else
  {
    uint64_t v4 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    uint64_t v5 = (int *)type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(0);
    uint64_t v6 = v5[5];
    uint64_t v7 = a1 + v6;
    uint64_t v8 = a2 + v6;
    uint64_t v9 = type metadata accessor for TimeZone();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    *(void *)(a1 + v5[6]) = *(void *)(a2 + v5[6]);
    uint64_t v10 = v5[7];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    uint64_t v13 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v13;
    uint64_t v14 = v5[8];
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    uint64_t v17 = v16[1];
    void *v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10018678C(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E8F560);
}

uint64_t sub_1001867F8()
{
  *uint64_t v0 = 0x8000000000000000;
  return v1;
}

uint64_t sub_100186820(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 488);
  return _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v3);
}

uint64_t static LocationSearchEntityFromStringResolver.__derived_struct_equals(_:_:)()
{
  return 1;
}

uint64_t sub_100186848()
{
  *(unsigned char *)(v1 - 83) = 2;
  *(void *)(v1 - 168) = v0;
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_100186888()
{
  return *(void *)(v0 - 280);
}

void sub_10018689C()
{
  sub_10030D9E0(1, v0, 2, v1);
}

NSString sub_1001868C0()
{
  return String._bridgeToObjectiveC()();
}

void sub_1001868E0(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(a1 - 256);
  sub_1000277CC(v2);
}

uint64_t sub_100186930()
{
  return swift_slowAlloc();
}

uint64_t sub_10018694C()
{
  return type metadata accessor for URL();
}

uint64_t sub_100186988()
{
  *(void *)(v1 - 144) = v0;
  return 1;
}

uint64_t sub_1001869AC()
{
  return v0;
}

double sub_1001869C0()
{
  return 0.0;
}

uint64_t sub_1001869E4()
{
  return v0;
}

uint64_t sub_1001869F0()
{
  return v0;
}

uint64_t sub_100186A08()
{
  return v0;
}

uint64_t sub_100186A24()
{
  return v0;
}

void sub_100186A3C()
{
  *(void *)(v1 + *(int *)(v2 + 24) + 24) = (v0 - 1);
}

void sub_100186A50()
{
}

uint64_t sub_100186A58()
{
  return View.accessibilityElement(children:)();
}

double sub_100186A7C()
{
  return 0.0;
}

uint64_t sub_100186AB0()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_100186AE8()
{
  return v0;
}

uint64_t sub_100186B00()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v1 + *(int *)(v0 + 68));
  return swift_unknownObjectRelease();
}

uint64_t sub_100186B34()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t sub_100186B60()
{
  return type metadata accessor for DecodingError();
}

uint64_t sub_100186B98()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_100186BB0(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  unsigned __int8 v5 = *(unsigned char *)(a1 + 24);
  sub_10027D954(v2, v3, v4, v5);
}

uint64_t sub_100186BCC()
{
  return FixedSizeTypeBinaryCodable.write(to:)();
}

uint64_t sub_100186BE4()
{
  return _s7Weather24LocationCompositionStateOwst_0(v0, 0, 1, v1);
}

uint64_t sub_100186C10(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 - 160);
  return _s7Weather24LocationCompositionStateOwst_0(v4, 1, 1, a1);
}

uint64_t sub_100186C34()
{
  return swift_release();
}

void sub_100186C50()
{
  *(void *)(*(void *)(v1 - 192) + 16) = v0;
}

uint64_t sub_100186C74()
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v0 - 272), 1, 1, *(void *)(v0 - 208));
  uint64_t v1 = *(void *)(v0 - 280);
  uint64_t v2 = *(void *)(v0 - 256);
  return _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, v2);
}

uint64_t sub_100186CC8()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 56);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 96);
  return swift_release();
}

uint64_t sub_100186CFC()
{
  return v0;
}

uint64_t sub_100186D0C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100186D24()
{
  uint64_t v3 = *(void *)(v1 - 400);
  return _s7Weather24LocationCompositionStateOwst_0(v3, 1, 1, v0);
}

uint64_t sub_100186D4C()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_100186D74(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5 = *(void *)(v3 + 944);
  uint64_t v6 = *(void *)(v3 + 264);
  return sub_1001D9BA8(v5, v6, a3);
}

uint64_t sub_100186D94(uint64_t a1)
{
  uint64_t v4 = *(void *)(v2 - 104);
  return sub_10014FE48(a1, v4, v1);
}

uint64_t sub_100186DB0()
{
  return v0;
}

uint64_t sub_100186DC8()
{
  return swift_release();
}

uint64_t sub_100186DF0()
{
  return 0;
}

uint64_t sub_100186E04()
{
  return CurrentWeather.init(date:cloudCover:cloudCoverLow:cloudCoverMid:cloudCoverHigh:cloudCoverByAltitude:condition:symbolName:dewPoint:humidity:precipitationIntensity:pressure:pressureTrend:rainfallAmount:snowfallAmount:pastHourPrecipitationAmountByType:pastSixHoursPrecipitationAmountByType:pastTwentyFourHoursPrecipitationAmountByType:nextHourPrecipitationAmountByType:nextSixHoursPrecipitationAmountByType:nextTwentyFourHoursPrecipitationAmountByType:apparentPrecipitationIntensity:isDaylight:temperature:apparentTemperature:highTemperature:lowTemperature:uvIndex:visibility:wind:metadata:)();
}

uint64_t sub_100186E2C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100186E64()
{
  return v0;
}

uint64_t sub_100186E74()
{
  return v0;
}

uint64_t sub_100186EA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100186EE8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100186F30(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100186F78(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100186FC0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100187008(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100187050()
{
  return String.hash(into:)();
}

uint64_t sub_100187074()
{
  return v0;
}

uint64_t sub_100187094(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_1001870EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, NSBundle a5)
{
  uint64_t v6 = 0;
  unint64_t v7 = 0xE000000000000000;
  unint64_t v8 = 0xD000000000000024;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&a1, *(Swift::String_optional *)&a3, a5, *(Swift::String *)&v6, *(Swift::String *)&v8)._countAndFlagsBits;
}

uint64_t sub_10018711C()
{
  return v0;
}

uint64_t sub_100187128()
{
  return type metadata accessor for TimeZone();
}

void sub_100187144(uint64_t a1@<X8>)
{
  uint64_t v2 = *v1;
  char v3 = *((unsigned char *)v1 + 8);
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
}

uint64_t sub_10018715C()
{
  _s7Weather24LocationCompositionStateOwst_0(v0, 1, 1, *(void *)(v1 - 264));
  return static Set<>.full.getter();
}

uint64_t sub_100187194()
{
  return *(void *)(v0 - 312);
}

uint64_t sub_1001871A8()
{
  return 0x74617265706D6574;
}

double sub_1001871D8(double a1, double a2)
{
  return a1 * a2;
}

uint64_t sub_1001871EC()
{
  return v0;
}

BOOL sub_100187200(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_100187228()
{
  return String.hash(into:)();
}

uint64_t sub_100187270()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_10018729C()
{
  return v0;
}

uint64_t sub_1001872B4()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_1001872CC()
{
  *(void *)(v1 - 280) = v0;
  *(unsigned char *)(v1 - 272) = 1;
  return swift_retain();
}

uint64_t sub_1001872F4@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

unint64_t sub_100187340()
{
  return sub_1001D23B8();
}

uint64_t sub_100187358()
{
  sub_100191924(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
  return swift_bridgeObjectRelease();
}

uint64_t sub_100187388()
{
  return v0;
}

uint64_t sub_100187394()
{
  _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, v0);
  return v1;
}

uint64_t sub_1001873C0()
{
  return v0;
}

uint64_t sub_1001873E4(uint64_t a1)
{
  *(void *)(v1 - 104) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100187414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 a14)
{
  uint64_t v102 = a8;
  LODWORD(v89) = a7;
  uint64_t v88 = a5;
  uint64_t v82 = a4;
  uint64_t v103 = a1;
  uint64_t v100 = a11;
  uint64_t v101 = a12;
  LODWORD(v85) = a14;
  uint64_t v84 = a13;
  type metadata accessor for WeatherFormatPlaceholder();
  sub_100179C0C();
  uint64_t v95 = v23;
  uint64_t v96 = v22;
  __chkstk_darwin(v22);
  sub_10017E3A0();
  uint64_t v94 = type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle();
  sub_100179C0C();
  uint64_t v93 = v24;
  __chkstk_darwin(v25);
  sub_10016278C();
  uint64_t v90 = (char *)(v26 - v27);
  __chkstk_darwin(v28);
  char v87 = (char *)&v82 - v29;
  uint64_t v30 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v32 = v31;
  __chkstk_darwin(v33);
  sub_10011C760();
  *(void *)a9 = 0;
  uint64_t v34 = (int *)type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(0);
  uint64_t v35 = a9 + v34[13];
  uint64_t v98 = v32;
  uint64_t v99 = v30;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v35, a1, v30);
  uint64_t v36 = a9 + v34[14];
  type metadata accessor for TimeZone();
  sub_100162F30();
  uint64_t v91 = v37;
  uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v37 + 16);
  uint64_t v92 = v39;
  v38(v36, a2);
  uint64_t v40 = v82;
  *(void *)(a9 + 8) = a3;
  *(void *)(a9 + 16) = v40;
  uint64_t v41 = v88;
  if (!a6) {
    uint64_t v41 = 0;
  }
  unint64_t v42 = 0xE000000000000000;
  if (a6) {
    unint64_t v42 = a6;
  }
  *(void *)(a9 + 24) = v41;
  *(void *)(a9 + 32) = v42;
  *(double *)(a9 + 40) = a10;
  *(unsigned char *)(a9 + 48) = v89;
  uint64_t v43 = a9 + v34[9];
  type metadata accessor for Precipitation();
  sub_100162F30();
  uint64_t v88 = v44;
  uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v44 + 16);
  uint64_t v89 = v46;
  v45(v43, v102);
  *(void *)(a9 + v34[16]) = v84;
  Date.init()();
  uint64_t v97 = v14;
  uint64_t v86 = a2;
  char v83 = v34;
  if ((v85 & 1) != 0
    && (Date.timeIntervalSinceReferenceDate.getter(),
        double v48 = v47,
        Date.timeIntervalSinceReferenceDate.getter(),
        v48 - v49 <= 0.0)
    && (Date.timeIntervalSinceReferenceDate.getter(),
        double v51 = v50,
        Date.timeIntervalSinceReferenceDate.getter(),
        v51 - v52 > -3600.0))
  {
    id v53 = [self mainBundle];
    v105._object = (void *)0x8000000100CAF6D0;
    sub_10019EE1C();
    v105._uint64_t countAndFlagsBits = 0xD000000000000035;
    Swift::String v58 = NSLocalizedString(_:tableName:bundle:value:comment:)(v54, v55, v56, v57, v105);

    *(Swift::String *)(a9 + v34[11]) = v58;
    *(Swift::String *)(a9 + v34[12]) = v58;
    *(unsigned char *)(a9 + v34[15]) = 1;
    swift_bridgeObjectRetain();
    static WeatherFormatStyle<>.weather.getter();
    NSUnitTemperature.BaseWeatherFormatStyle.secondary.getter();
    uint64_t v59 = *(void (**)(void))(v93 + 8);
    sub_100164F40();
    v59();
    (*(void (**)(uint64_t, void, uint64_t))(v95 + 104))(v15, enum case for WeatherFormatPlaceholder.none(_:), v96);
    type metadata accessor for UnitManager();
    static UnitManager.standard.getter();
    sub_10017DF08(&qword_100E65250);
    sub_100186EE8((unint64_t *)&qword_100E6BF60, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
    uint64_t v60 = v101;
    uint64_t v61 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    sub_10019D228(v61);
    sub_100188B08();
    v62();
    sub_100164F40();
    v59();
  }
  else
  {
    uint64_t v63 = Date.formattedHours(timeZone:forAccessibility:)();
    uint64_t v64 = (uint64_t *)(a9 + v34[11]);
    *uint64_t v64 = v63;
    v64[1] = v65;
    uint64_t v66 = Date.formattedHours(timeZone:forAccessibility:)();
    uint64_t v67 = (uint64_t *)(a9 + v34[12]);
    *uint64_t v67 = v66;
    v67[1] = v68;
    *(unsigned char *)(a9 + v34[15]) = 0;
    uint64_t v69 = v87;
    static WeatherFormatStyle<>.weather.getter();
    uint64_t v70 = v90;
    NSUnitTemperature.BaseWeatherFormatStyle.secondary.getter();
    uint64_t v85 = *(void (**)(char *, uint64_t))(v93 + 8);
    uint64_t v71 = v94;
    v85(v69, v94);
    (*(void (**)(uint64_t, void, uint64_t))(v95 + 104))(v15, enum case for WeatherFormatPlaceholder.none(_:), v96);
    type metadata accessor for UnitManager();
    static UnitManager.standard.getter();
    sub_10017DF08(&qword_100E65250);
    sub_100186EE8((unint64_t *)&qword_100E6BF60, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
    uint64_t v60 = v100;
    uint64_t v72 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    sub_10019D228(v72);
    sub_100164F40();
    v73();
    v85(v70, v71);
  }
  uint64_t v74 = (void *)(a9 + v83[10]);
  *uint64_t v74 = v93;
  v74[1] = v60;
  Hasher.init(_seed:)();
  sub_100184EF0((uint64_t)v104);
  Swift::Int v75 = Hasher._finalize()();
  sub_10017DF08(&qword_100E65250);
  sub_100162E4C();
  uint64_t v77 = *(void (**)(void))(v76 + 8);
  sub_1001802C0();
  v77();
  sub_1001802C0();
  v77();
  sub_100162F0C();
  v78();
  sub_100162F0C();
  v79();
  uint64_t v80 = *(void (**)(void))(v98 + 8);
  sub_100188B08();
  v80();
  sub_100188B08();
  uint64_t result = ((uint64_t (*)(void))v80)();
  *(void *)a9 = v75;
  return result;
}

uint64_t sub_100187B88(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 112), 1, 1, a1);
  return type metadata accessor for LocationsState();
}

uint64_t sub_100187BC4()
{
  return v0 - 120;
}

void sub_100187BE4(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, os_log_t log)
{
  _os_log_impl(a1, log, v10, a4, v11, 2u);
}

uint64_t sub_100187C04()
{
  return v0;
}

void sub_100187C24(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t sub_100187C44()
{
  return v0;
}

uint64_t sub_100187C54()
{
  return swift_beginAccess();
}

uint64_t sub_100187C74()
{
  uint64_t v2 = 0x72656874616577;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  unint64_t v7 = 0xE000000000000000;
  unint64_t v8 = 0xD000000000000036;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v2, *(Swift::String_optional *)&v4, v0, *(Swift::String *)&v6, *(Swift::String *)&v8)._countAndFlagsBits;
}

uint64_t sub_100187CB4()
{
  return v0;
}

uint64_t sub_100187CC8(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 120), 1, 1, a1);
  return type metadata accessor for LocationsState();
}

uint64_t sub_100187D04()
{
  return sub_1004B8648(v0, v1);
}

uint64_t sub_100187D38()
{
  return URLHandlerPattern.init(scheme:host:path:fragment:params:conditions:)();
}

uint64_t sub_100187D7C()
{
  return swift_retain();
}

uint64_t sub_100187DB4(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, a1);
}

uint64_t sub_100187DD4(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, a1);
  return type metadata accessor for ViewState(0);
}

uint64_t sub_100187E0C()
{
  return sub_100098CC0(v0);
}

uint64_t sub_100187E28()
{
  sub_1001B1E64((void *)(v0 + 16), *(void *)(v0 + 40));
  return v1;
}

uint64_t sub_100187E54()
{
  return v0;
}

uint64_t sub_100187E6C()
{
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
}

uint64_t sub_100187EA0()
{
  return v0;
}

uint64_t sub_100187EB4()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_100187EE4()
{
  return v0;
}

uint64_t sub_100187EFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X7>, uint64_t a3@<X8>)
{
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  unint64_t v9 = 0xE000000000000000;
  unint64_t v5 = (a3 - 32) | 0x8000000000000000;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&a1, *(Swift::String_optional *)&v6, v3, *(Swift::String *)&v8, *(Swift::String *)&a2)._countAndFlagsBits;
}

void sub_100187F28()
{
  int v1 = *(unsigned __int8 *)(v0 + 953);
  *(_DWORD *)(v0 + 168) = *(unsigned __int8 *)(v0 + 952);
  *(_DWORD *)(v0 + 172) = v1;
  uint64_t v2 = *(void *)(v0 + 936);
  *(void *)(v0 + 152) = *(void *)(v0 + 944);
  *(void *)(v0 + 160) = v2;
  uint64_t v3 = *(void *)(v0 + 920);
  *(void *)(v0 + 136) = *(void *)(v0 + 928);
  *(void *)(v0 + 144) = v3;
  LODWORD(v3) = *(unsigned __int8 *)(v0 + 913);
  *(_DWORD *)(v0 + 128) = *(unsigned __int8 *)(v0 + 912);
  *(_DWORD *)(v0 + 132) = v3;
  uint64_t v4 = *(void *)(v0 + 896);
  *(void *)(v0 + 112) = *(void *)(v0 + 904);
  *(void *)(v0 + 120) = v4;
  uint64_t v5 = *(void *)(v0 + 880);
  *(void *)(v0 + 96) = *(void *)(v0 + 888);
  *(void *)(v0 + 104) = v5;
  LODWORD(v5) = *(unsigned __int8 *)(v0 + 873);
  *(_DWORD *)(v0 + 88) = *(unsigned __int8 *)(v0 + 872);
  *(_DWORD *)(v0 + 92) = v5;
  uint64_t v6 = *(void *)(v0 + 856);
  *(void *)(v0 + 72) = *(void *)(v0 + 864);
  *(void *)(v0 + 80) = v6;
  uint64_t v7 = *(void *)(v0 + 840);
  *(void *)(v0 + 56) = *(void *)(v0 + 848);
  *(void *)(v0 + 64) = v7;
  LODWORD(v7) = *(unsigned __int8 *)(v0 + 833);
  *(_DWORD *)(v0 + 48) = *(unsigned __int8 *)(v0 + 832);
  *(_DWORD *)(v0 + 52) = v7;
  uint64_t v8 = *(void *)(v0 + 816);
  *(void *)(v0 + 32) = *(void *)(v0 + 824);
  *(void *)(v0 + 40) = v8;
  uint64_t v9 = *(void *)(v0 + 800);
  *(void *)(v0 + 16) = *(void *)(v0 + 808);
  *(void *)(v0 + 24) = v9;
  *(_DWORD *)(v0 + 204) = *(unsigned __int8 *)(v0 + 792);
  *(void *)(v0 + 8) = *(void *)(v0 + 776);
  uint64_t v10 = *(void *)(v0 + 784);
  *(void *)(v0 + 184) = *(void *)(v0 + 760);
  *(void *)(v0 + 192) = v10;
  *(void *)(v0 + 176) = *(void *)(v0 + 768);
}

uint64_t sub_100187FFC@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 65) = a1;
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_100188020()
{
  return *(void *)(v0 - 96);
}

uint64_t sub_100188038@<X0>(uint64_t a1@<X8>)
{
  return sub_1001DBA6C(v1 + a1, v2);
}

uint64_t sub_100188050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X7>, uint64_t a3@<X8>)
{
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  unint64_t v9 = 0xE000000000000000;
  unint64_t v5 = (a3 - 32) | 0x8000000000000000;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&a1, *(Swift::String_optional *)&v6, v3, *(Swift::String *)&v8, *(Swift::String *)&a2)._countAndFlagsBits;
}

uint64_t sub_10018807C()
{
  return type metadata accessor for LocationViewCollisionOptionsUpdatingView(0) - 8;
}

uint64_t sub_1001880A4()
{
  return v0;
}

void sub_1001880CC(unsigned char *a1@<X8>)
{
  *a1 = v1;
}

uint64_t sub_1001880D4()
{
  return *(void *)(v0 - 72);
}

uint64_t sub_1001880EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return sub_1000825E8(a1, a2 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a3, a4);
}

uint64_t sub_1001880F4()
{
  return 0x64692D656D6F73;
}

uint64_t sub_100188130()
{
  return v0;
}

int8x8_t sub_100188148(int8x16_t a1, int8x16_t a2)
{
  int8x16_t v2 = vorrq_s8(a1, a2);
  return vorr_s8(*(int8x8_t *)v2.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v2, v2, 8uLL));
}

void *sub_100188158()
{
  NSBundle v3 = (const void *)(v0 + *(int *)(*(void *)(v1 - 320) + 60));
  return memcpy((void *)(v1 - 176), v3, 0x49uLL);
}

uint64_t sub_100188188()
{
  return v0;
}

uint64_t sub_100188198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return sub_1008819E4(a1, a2 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a3, a4);
}

uint64_t sub_1001881A0()
{
  return v0;
}

uint64_t sub_1001881C0()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_1001881DC()
{
  *(void *)(v1 - 136) = v0;
  *(_OWORD *)(v1 - 128) = 0u;
  *(_OWORD *)(v1 - 112) = 0u;
  *(void *)(v1 - 96) = 0;
  return 2;
}

uint64_t sub_100188240()
{
  return sub_1008E0C40(v0);
}

int8x8_t sub_100188290(int8x16_t a1, int8x16_t a2, int8x16_t a3, int8x16_t a4)
{
  int8x16_t v4 = vorrq_s8(vorrq_s8(a3, a1), vorrq_s8(a4, a2));
  return vorr_s8(*(int8x8_t *)v4.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL));
}

uint64_t sub_1001882AC(uint64_t a1, uint64_t *a2)
{
  return sub_10009779C(a1, a2);
}

uint64_t sub_1001882C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  return sub_1001659F0(0, 3, v27, v26, v25, 0, 0, 0, 0, v24, v23, v22, v21, 0, 0, 0, 0, 0, 0,
           a20,
           a21);
}

uint64_t sub_100188314()
{
  return 255;
}

double sub_100188328()
{
  return 16.0;
}

uint64_t sub_100188330()
{
  return v0;
}

uint64_t sub_100188348()
{
  return *(void *)(v0 - 192);
}

uint64_t sub_10018835C()
{
  return v0;
}

uint64_t sub_100188384()
{
  return v0;
}

uint64_t sub_10018839C()
{
  return v0;
}

uint64_t sub_1001883B4()
{
  return v0;
}

uint64_t sub_1001883CC()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1001883F8()
{
  return v0;
}

uint64_t sub_100188410()
{
  return v0;
}

unint64_t sub_100188430()
{
  return 0xD000000000000010;
}

uint64_t sub_100188448()
{
  return *(void *)(v0 - 144);
}

uint64_t sub_10018846C()
{
  return type metadata accessor for ScrubberView(0) - 8;
}

uint64_t sub_100188494()
{
  return swift_retain();
}

void sub_1001884BC()
{
  sub_10012B78C();
}

uint64_t sub_1001884E0()
{
  return v0;
}

uint64_t sub_1001884F8()
{
  return v0;
}

uint64_t sub_100188510()
{
  return v0;
}

uint64_t sub_100188528()
{
  return swift_beginAccess();
}

uint64_t sub_10018854C()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t sub_10018856C()
{
  return 0;
}

void sub_1001885A0()
{
  *(void *)(v0 - 80) = 0;
  *(void *)(v0 - 72) = 0xE000000000000000;
}

uint64_t sub_1001885CC(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  return sub_100BD77AC(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a2, a3, a4);
}

uint64_t sub_1001885D4()
{
  return sub_100051F58();
}

id sub_100188618(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  return [super a2:v9];
}

uint64_t sub_100188630()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_100188658()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_100188670()
{
  return String.hash(into:)();
}

uint64_t sub_10018868C(uint64_t a1)
{
  return v1 + *(int *)(a1 + 48);
}

uint64_t sub_100188698()
{
  return type metadata accessor for TimeZone();
}

uint64_t sub_1001886B8()
{
  return 2;
}

uint64_t sub_1001886E4()
{
  return swift_release();
}

uint64_t sub_1001886FC()
{
  return v0;
}

uint64_t sub_100188708@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return sub_1005EFB58(v3, (uint64_t)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
}

uint64_t sub_10018874C()
{
  return swift_arrayDestroy();
}

double sub_100188774()
{
  return 0.0;
}

uint64_t sub_1001887A4()
{
  return v0;
}

uint64_t sub_1001887B0()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_1001887FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a2 - 256);
  return sub_10091EF44(a1, v4, v2);
}

uint64_t sub_100188818()
{
  return v0;
}

uint64_t sub_10018883C(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, a1);
}

uint64_t sub_10018885C@<X0>(void (*a1)(void)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a2 - 256);
  uint64_t v5 = *(void *)(v2 - 408);
  return sub_100178CEC(v4, v5, a1);
}

void sub_10018887C()
{
}

BOOL sub_100188884(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1001888A0()
{
  return sub_100178DA8(v2, v1, v0);
}

uint64_t sub_1001888F0(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v2 - 464), 1, 1, a1);
  uint64_t v3 = *(void *)(v2 - 552);
  return _s7Weather24LocationCompositionStateOwst_0(v3, 1, 1, v1);
}

uint64_t sub_100188948()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

void *sub_1001889A8(uint64_t a1)
{
  uint64_t v4 = (void *)(v2 + *(int *)(a1 + 20));
  return memcpy(v4, v1, 0xE8uLL);
}

void *sub_1001889D8()
{
  return sub_1001B1E64(v0, v1);
}

uint64_t sub_1001889F8()
{
  *uint64_t v3 = v1;
  v3[1] = v2;
  *uint64_t v4 = 0;
  v4[1] = 0;
  uint64_t v8 = (uint64_t)v4 + *(int *)(v6 + 36);
  return sub_10024D364(v0, v8, v5);
}

uint64_t sub_100188A20()
{
  uint64_t v4 = v0 + *(int *)(v2 + 20);
  return _s7Weather24LocationCompositionStateOwet_0(v4, 1, v1);
}

uint64_t sub_100188A58@<X0>(unint64_t a1@<X8>)
{
  if (a1 >= 0xFFFFFFFF) {
    LODWORD(a1) = -1;
  }
  int v1 = a1 - 1;
  if (v1 < 0) {
    int v1 = -1;
  }
  return (v1 + 1);
}

uint64_t sub_100188A78()
{
  return v0;
}

uint64_t sub_100188A8C()
{
  return v0;
}

uint64_t sub_100188AA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return sub_10014FDF0(a1, v3);
}

uint64_t sub_100188AB8()
{
  return v0;
}

uint64_t sub_100188AC8()
{
  return swift_arrayDestroy();
}

uint64_t sub_100188AE4()
{
  return ShortDescription.init(name:_:)();
}

uint64_t sub_100188B18()
{
  return v0;
}

uint64_t sub_100188B2C()
{
  return 0;
}

uint64_t sub_100188B38()
{
  return 0;
}

uint64_t sub_100188B4C()
{
  return v0;
}

uint64_t sub_100188B64()
{
  return Optional<A>.write(to:)();
}

uint64_t sub_100188B8C@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
  return v1 - 72;
}

uint64_t sub_100188BAC(uint64_t a1)
{
  return v1 + *(int *)(a1 + 52);
}

uint64_t sub_100188BC8()
{
  return v0;
}

double sub_100188BF0()
{
  return 0.0;
}

uint64_t sub_100188C20()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_100188C58()
{
  return v0 - 152;
}

uint64_t sub_100188C68()
{
  return v0;
}

uint64_t sub_100188C8C(uint64_t a1, __int16 a2, char a3, char a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char a13, char a14, uint64_t a15)
{
  return sub_1007210CC(a1, a2, a3, a4, a5, 0, 0, 0, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_100188CA8(uint64_t a1, void (*a2)(void))
{
  uint64_t v4 = *(void *)(v2 - 320);
  return sub_10015918C(v4, a2);
}

uint64_t sub_100188CC0()
{
  return type metadata accessor for AnimatedGradient();
}

uint64_t sub_100188CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_100BD8688(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_100188D20()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_100188D3C()
{
  return *(void *)(v0 - 208);
}

uint64_t sub_100188D64(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, a1);
}

uint64_t sub_100188D90()
{
  return v0;
}

uint64_t sub_100188DA0@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_100188DE4()
{
  return v0;
}

uint64_t sub_100188E04()
{
  return v0;
}

uint64_t sub_100188E10(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5 = *(void *)(v3 - 192);
  return sub_100886FF8(a1, v5, a3);
}

uint64_t sub_100188E28()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_100188E48()
{
  return _s7Weather24LocationCompositionStateOwet_0(v2 + *(int *)(v0 + 24), 1, v1);
}

uint64_t sub_100188E7C()
{
  return v0;
}

uint64_t sub_100188E8C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a3 - 256);
  return sub_10006DF38(a1, v4, a2);
}

uint64_t sub_100188EA4()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_100188EBC()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_100188EE0()
{
  return *(void *)(v0 - 152);
}

void sub_100188F0C()
{
  *uint64_t v0 = 0x8000000000000000;
}

uint64_t sub_100188F28()
{
  return v0 + v1;
}

uint64_t sub_100188F40@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 - 104) + a1;
}

uint64_t sub_100188F4C()
{
  return 0;
}

uint64_t sub_100188F64(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(v2 - 336);
  return sub_100178110(v4, a2);
}

uint64_t sub_100188FB0@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 - 576) + a1;
}

uint64_t sub_100188FC0()
{
  return swift_beginAccess();
}

void sub_100188FE0()
{
  *(void *)(v2 - 192) = v1 + 8;
  *(void *)(v2 - 184) = v0 + 16;
  *(void *)(v2 - 176) = v0 + 32;
  *(void *)(v2 - 200) = v0 + 8;
}

uint64_t sub_100189008()
{
  return 0;
}

double sub_10018901C(char a1)
{
  *(unsigned char *)(v1 + 32) = a1;
  double result = 0.0;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(unsigned char *)(v1 + 72) = 1;
  return result;
}

uint64_t sub_100189038@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(a1 - 256);
  return sub_100178110(v3, v1);
}

uint64_t sub_100189050()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10018906C()
{
  return 0x7463656C65736544;
}

uint64_t sub_100189080()
{
  return v0;
}

id sub_100189094(uint64_t a1, const char *a2)
{
  return [v2 a2:v3];
}

uint64_t sub_1001890AC()
{
  return v0;
}

uint64_t sub_1001890C0(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, a1);
  return type metadata accessor for WeatherMapPresentationState(0);
}

uint64_t sub_100189104()
{
  *(_OWORD *)*(void *)(v0 - 248) = *(_OWORD *)(v0 - 144);
  return type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
}

uint64_t sub_100189124()
{
  return *(void *)(v0 - 328);
}

uint64_t sub_100189140(uint64_t result)
{
  *(void *)(v1 - 96) = 1752392040;
  *(void *)(v1 - 88) = result;
  return result;
}

uint64_t sub_100189184()
{
  return swift_arrayDestroy();
}

uint64_t sub_1001891A4()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_1001891BC()
{
  return v0;
}

uint64_t sub_1001891D4()
{
  return swift_arrayDestroy();
}

uint64_t sub_1001891F0()
{
  return v0 - 120;
}

uint64_t sub_100189204()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_100189220()
{
  *(void *)(v1 - 232) = v0;
  *(void *)(v1 - 264) = *(void *)(v0 + 16);
}

uint64_t sub_10018923C()
{
  return v0;
}

uint64_t sub_100189250()
{
  return swift_arrayDestroy();
}

uint64_t sub_1001892A0()
{
  return 0x7720739980E27449;
}

uint64_t sub_1001892C0()
{
  return _s7Weather24LocationCompositionStateOwet_0(v0, 1, v1);
}

uint64_t sub_1001892DC()
{
  return 1702519144;
}

uint64_t sub_1001892EC()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_100189310()
{
  *(void *)(v3 - 136) = v0;
  *(void *)(v3 - 128) = v2;
  *(void *)(v3 - 88) = v1;
  return KeyedDecodingContainer.allKeys.getter();
}

uint64_t sub_100189354@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return sub_10074B928(v2, (uint64_t)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0));
}

uint64_t sub_100189380()
{
  return type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
}

uint64_t sub_1001893A8()
{
  return swift_retain();
}

uint64_t sub_1001893C0()
{
  return v0;
}

uint64_t sub_1001893D8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)(a2 - 256) = a1;
  return swift_release();
}

uint64_t sub_1001893F0@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_100189438()
{
  return 255;
}

uint64_t sub_100189444()
{
  return v0;
}

uint64_t sub_100189458()
{
  return v0;
}

__n128 sub_100189478@<Q0>(__int16 a1@<W8>)
{
  __n128 result = *(__n128 *)(v2 - 256);
  long long v4 = *(_OWORD *)(v2 - 240);
  *(__n128 *)(v2 - 304) = result;
  *(_OWORD *)(v2 - 288) = v4;
  *(unsigned char *)(v2 - 270) = BYTE2(v1);
  *(_WORD *)(v2 - 272) = a1;
  *(unsigned char *)(v2 - 269) = 0;
  return result;
}

uint64_t sub_1001894AC()
{
  return ShortDescription.init(name:_:)();
}

uint64_t sub_1001894D4()
{
  return v0;
}

uint64_t sub_1001894E8()
{
  return v0;
}

double sub_100189504()
{
  *(void *)(v1 - 136) = v0;
  double result = 0.0;
  *(_OWORD *)(v1 - 128) = 0u;
  *(_OWORD *)(v1 - 112) = 0u;
  *(void *)(v1 - 96) = 0;
  return result;
}

uint64_t sub_10018952C()
{
  return v0;
}

void sub_100189540()
{
  *(void *)(v0 + 8 * (v1 >> 6) + 64) |= 1 << v1;
  long long v4 = (void *)(*(void *)(v0 + 48) + 16 * v1);
  *long long v4 = v2;
  v4[1] = v3;
}

uint64_t sub_100189584()
{
  return v0;
}

uint64_t sub_10018959C()
{
  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v6 = v2 + *(int *)(v0 + 56);
  return sub_1001262FC(v5, v6, v3);
}

uint64_t sub_1001895C0()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_1001895E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, a4);
  uint64_t v5 = *(void *)(v4 - 176);
  uint64_t v6 = *(void *)(v4 - 152);
  return _s7Weather24LocationCompositionStateOwst_0(v5, 1, 1, v6);
}

BOOL sub_100189644()
{
  return *(double *)(v1 + 64) == *(double *)(v0 + 64);
}

uint64_t sub_100189658()
{
  return v0;
}

void sub_10018966C()
{
  sub_100155CD4();
}

uint64_t sub_1001896B8()
{
  _s7Weather24LocationCompositionStateOwst_0(v0, 1, 1, v1);
  return WeatherMetadata.init(date:expirationDate:attribution:)();
}

uint64_t sub_1001896FC()
{
  return swift_arrayDestroy();
}

uint64_t sub_10018971C()
{
  return *(void *)(v0 - 368);
}

uint64_t sub_100189738()
{
  return v0;
}

uint64_t sub_10018974C(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_100189764()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100189780()
{
  return os_signpost(_:dso:log:name:signpostID:)();
}

void sub_1001897A8(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3 = *(void *)(a2 + 16);
  Hasher._combine(_:)(v3);
  if (v3)
  {
    uint64_t v4 = a2 + 40;
    do
    {
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      v4 += 16;
      --v3;
    }
    while (v3);
  }
}

uint64_t sub_100189820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v33 = a5;
  uint64_t v34 = a6;
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  uint64_t v6 = type metadata accessor for SunEvents();
  uint64_t v35 = *(void *)(v6 - 8);
  uint64_t v36 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v33 - v10;
  uint64_t v12 = sub_10017DF08(&qword_100E6B6C8);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v33 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v33 - v19;
  uint64_t v21 = type metadata accessor for DayWeather();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (Calendar.isDateInToday(_:)())
  {
    sub_10006DF38(v33, (uint64_t)v20, &qword_100E6B6C8);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v20, v21);
      DayWeather.sun.getter();
      SunEvents.sunrise.getter();
      uint64_t v30 = v36;
      uint64_t v31 = *(void (**)(char *, uint64_t))(v35 + 8);
      v31(v11, v36);
      DayWeather.sun.getter();
      SunEvents.sunset.getter();
      v31(v9, v30);
      return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v21);
    }
    sub_1001781AC((uint64_t)v20, &qword_100E6B6C8);
    uint64_t v25 = type metadata accessor for Date();
    _s7Weather24LocationCompositionStateOwst_0(v37, 1, 1, v25);
    uint64_t v26 = v38;
    uint64_t v27 = v25;
    return _s7Weather24LocationCompositionStateOwst_0(v26, 1, 1, v27);
  }
  uint64_t v28 = v34;
  sub_10006DF38(v34, (uint64_t)v18, &qword_100E6B6C8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v21) == 1)
  {
    sub_1001781AC((uint64_t)v18, &qword_100E6B6C8);
    uint64_t v29 = type metadata accessor for Date();
    _s7Weather24LocationCompositionStateOwst_0(v37, 1, 1, v29);
  }
  else
  {
    DayWeather.sun.getter();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v18, v21);
    SunEvents.sunrise.getter();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v36);
  }
  sub_10006DF38(v28, (uint64_t)v15, &qword_100E6B6C8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v21) == 1)
  {
    sub_1001781AC((uint64_t)v15, &qword_100E6B6C8);
    uint64_t v27 = type metadata accessor for Date();
    uint64_t v26 = v38;
    return _s7Weather24LocationCompositionStateOwst_0(v26, 1, 1, v27);
  }
  DayWeather.sun.getter();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v15, v21);
  SunEvents.sunset.getter();
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v11, v36);
}

uint64_t _s7Weather24LocationCompositionStateOwet_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_100189C90()
{
  return sub_10015458C(v1, v0, v2);
}

uint64_t sub_100189CAC()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t sub_100189CD4()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_100189CF0()
{
  *(void *)(v2 - 120) = v0;
  *(void *)(v2 - 152) = v1;
  uint64_t v3 = v1 + 64;
  unint64_t v4 = (unint64_t)((1 << *(unsigned char *)(v3 - 32)) + 63) >> 6;
  uint64_t v5 = *(void *)(v2 - 88);
  *(void *)(v2 - 104) = 0;
  *(void *)(v2 - 96) = v5 + 16;
  *(void *)(v2 - 144) = v5 + 32;
  *(void *)(v2 - 136) = v5 + 8;
  *(void *)(v2 - 168) = v3;
  *(void *)(v2 - 160) = v4;
  *(void *)(v2 - 176) = v4 - 1;
}

uint64_t sub_100189D4C()
{
  uint64_t v3 = *(void *)(v1 - 704);
  return _s7Weather24LocationCompositionStateOwst_0(v0, 1, 1, v3);
}

uint64_t sub_100189D7C()
{
  return v0;
}

uint64_t sub_100189D88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  unint64_t v7 = 0xE000000000000000;
  unint64_t v8 = 0xD000000000000030;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&a1, *(Swift::String_optional *)&v4, v2, *(Swift::String *)&v6, *(Swift::String *)&v8)._countAndFlagsBits;
}

__n128 sub_100189DC0(__n128 *a1)
{
  __n128 result = v1[16];
  a1[1] = result;
  return result;
}

uint64_t sub_100189DEC@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t sub_100189DF8()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_100189E18()
{
  return static UIListContentConfiguration.subtitleCell()();
}

uint64_t sub_100189E54()
{
  return sub_100466894(v0, v1 - 184);
}

uint64_t sub_100189E70(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 120), 1, 1, a1);
  return type metadata accessor for LocationsState();
}

uint64_t destroy for TabViewTransition()
{
  return swift_release();
}

uint64_t sub_100189EB4()
{
  return 0x617465446E6F6F6DLL;
}

uint64_t sub_100189ED8()
{
  return swift_release();
}

__n128 sub_100189EF0()
{
  *(void *)(v1 - 120) = *(void *)v0;
  __n128 result = *(__n128 *)(v0 + 8);
  *(__n128 *)(v1 - 112) = result;
  return result;
}

void sub_100189F04(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 184) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_100189F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, a4);
  return sub_10006D9DC(6, 254, v4, 0, 0, v5, v6);
}

uint64_t sub_100189F84()
{
  return swift_slowAlloc();
}

uint64_t sub_100189F9C()
{
  return *(void *)(v0 - 360);
}

uint64_t sub_100189FB0()
{
  return swift_getEnumCaseMultiPayload();
}

void sub_100189FD4(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 - 352) = a1;
  *(void *)(v3 - 392) = a2;
}

uint64_t sub_10018A00C()
{
  return v0;
}

uint64_t sub_10018A034()
{
  return v0;
}

uint64_t sub_10018A048()
{
  return v0;
}

void sub_10018A058(uint64_t a1@<X8>)
{
  *(void *)(v2 - 96) = *(void *)(v1 + a1);
}

double sub_10018A064()
{
  return 0.0;
}

uint64_t sub_10018A080()
{
  return 0;
}

uint64_t sub_10018A08C()
{
  return sub_10020E72C(v1, v0, v2);
}

uint64_t sub_10018A0A8(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, a1);
}

uint64_t sub_10018A0C8()
{
  return v0;
}

uint64_t sub_10018A0D8()
{
  return 7364973;
}

uint64_t sub_10018A0E8()
{
  return swift_allocObject();
}

uint64_t sub_10018A108()
{
  return v0;
}

uint64_t sub_10018A120()
{
  return v0;
}

uint64_t sub_10018A138()
{
  return 0;
}

uint64_t sub_10018A150@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

double sub_10018A164@<D0>(uint64_t a1@<X8>)
{
  return *(double *)(v1 + a1);
}

uint64_t sub_10018A180()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_10018A1C0()
{
  return v0;
}

uint64_t sub_10018A1D8()
{
  return v0;
}

uint64_t type metadata accessor for LearnMoreAttributorViewModel()
{
  uint64_t result = qword_100E96630;
  if (!qword_100E96630) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10018A258()
{
  return *(void *)(v0 + 1224);
}

void sub_10018A27C()
{
}

void sub_10018A284(uint64_t a1@<X8>)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * (a1 / v3);
}

uint64_t sub_10018A294()
{
  return v0;
}

uint64_t sub_10018A2A8()
{
  return type metadata accessor for PressureComponent();
}

uint64_t sub_10018A2E0()
{
  return 0x746174536E69614DLL;
}

uint64_t sub_10018A2FC()
{
  return swift_release();
}

uint64_t sub_10018A314()
{
  return *(void *)(v0 - 112);
}

uint64_t sub_10018A348(uint64_t a1, uint64_t a2)
{
  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v2);
}

uint64_t sub_10018A370()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_10018A394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 - 104) = a3;
  return type metadata accessor for EnvironmentValues();
}

uint64_t sub_10018A3C0()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_10018A3E0()
{
  return swift_getObjCClassFromMetadata();
}

uint64_t sub_10018A3F8()
{
  return v0 + 32;
}

uint64_t sub_10018A404()
{
  return *(void *)(v0 - 152);
}

uint64_t sub_10018A418(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, a1);
}

void sub_10018A438()
{
  sub_10011D8AC();
}

uint64_t sub_10018A45C()
{
  return 0x70614D646E6977;
}

uint64_t sub_10018A488(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, a1);
  return 0;
}

void sub_10018A4B4()
{
  *(void *)(v1 + *(int *)(v2 + 20) + 24) = (v0 - 1);
}

void sub_10018A4E4()
{
  *(void *)(v2 - 72) = v0;
  *(void *)(v2 - 104) = *(void *)(v1 + 16);
}

uint64_t sub_10018A4F4()
{
  return CloudCoverByAltitude.init(low:medium:high:)();
}

uint64_t sub_10018A518@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 256);
  uint64_t v5 = *(void *)(v2 - 416);
  return sub_100178CEC(v4, v5, v1);
}

uint64_t sub_10018A558(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for Font.Leading();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v4, 1, v5);
  if (!result)
  {
    unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v7(v4, v5);
  }
  return result;
}

unint64_t sub_10018A5FC()
{
  unint64_t result = qword_100E639A8;
  if (!qword_100E639A8)
  {
    type metadata accessor for Location();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E639A8);
  }
  return result;
}

uint64_t type metadata accessor for ConditionPickerMenuViewModel(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E79080);
}

uint64_t sub_10018A66C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E94A48, (uint64_t (*)(void))&type metadata accessor for SavedLocation, (void (*)(void))&type metadata accessor for SavedLocation);
}

void sub_10018A6B4()
{
  sub_100162EA0();
  uint64_t v3 = v2;
  sub_10018B130();
  if (v6)
  {
    sub_10017E9A4();
    if (v8 != v9)
    {
      sub_100183F88();
      if (v8)
      {
LABEL_23:
        __break(1u);
        return;
      }
      sub_1001A24A0();
    }
  }
  else
  {
    uint64_t v7 = v4;
  }
  uint64_t v10 = *(void *)(v0 + 16);
  if (v7 <= v10) {
    uint64_t v11 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v11 = v7;
  }
  if (!v11) {
    goto LABEL_17;
  }
  sub_10017DF08(v5);
  uint64_t v12 = v3(0);
  sub_100164920(v12);
  uint64_t v14 = *(void *)(v13 + 72);
  uint64_t v15 = (const void *)sub_1001A38A8();
  j__malloc_size(v15);
  if (!v14)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_10018BEF4();
  BOOL v17 = v17 && v14 == -1;
  if (v17) {
    goto LABEL_22;
  }
  sub_10018B308(v16);
LABEL_17:
  uint64_t v18 = *(void *)(v3(0) - 8);
  uint64_t v19 = v0 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  if (v1)
  {
    sub_10018B36C(v19, v10);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    sub_10018BE08(v19, v10);
  }
  swift_release();
  sub_100162694();
}

uint64_t sub_10018A800()
{
  return swift_beginAccess();
}

uint64_t sub_10018A81C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result = *v10;
  *uint64_t v10 = a10;
  return result;
}

uint64_t sub_10018A82C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 - 464);
  return _s7Weather24LocationCompositionStateOwst_0(v4, 1, 1, a1);
}

uint64_t sub_10018A854()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_10018A8D4()
{
  return 0x6E6F697461636F6CLL;
}

double sub_10018A8EC()
{
  return 0.0;
}

uint64_t sub_10018A904()
{
  return v0;
}

uint64_t sub_10018A914()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v1 + *(int *)(v0 + 28));
  return type metadata accessor for Date();
}

void sub_10018A94C()
{
}

uint64_t sub_10018A954()
{
  return v0;
}

uint64_t sub_10018A96C()
{
  return *(void *)(v0 - 320);
}

uint64_t sub_10018A9AC()
{
  return v0;
}

uint64_t sub_10018A9B8()
{
  return 0x6E696E746867696CLL;
}

uint64_t sub_10018A9D4()
{
  return type metadata accessor for UIListContentConfiguration();
}

uint64_t sub_10018A9FC()
{
  return swift_slowAlloc();
}

uint64_t sub_10018AA18()
{
  return v0;
}

uint64_t sub_10018AA2C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10018AA58()
{
  return v0;
}

uint64_t sub_10018AA9C()
{
  return v0;
}

uint64_t sub_10018AAB0()
{
  return v0;
}

uint64_t sub_10018AAC0@<X0>(int a1@<W8>)
{
  *(void *)(v7 - 304) = v1;
  *(void *)(v7 - 296) = v2;
  *(void *)(v7 - 288) = v3;
  *(void *)(v7 - 280) = v4;
  *(_DWORD *)(v7 - 272) = a1 | v5;
  *(unsigned char *)(v7 - 268) = 0;
  return sub_10085B9E0(v1, v2, v3, v4, v5, v6);
}

uint64_t sub_10018AB1C()
{
  return 0;
}

uint64_t sub_10018AB64@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(unsigned char *)(a1 + 72) = 0;
  return v1;
}

uint64_t sub_10018AB84(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, a1);
}

uint64_t sub_10018ABA4()
{
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
}

uint64_t sub_10018ABE0()
{
  return v0;
}

uint64_t sub_10018ABF4()
{
  return v0;
}

uint64_t sub_10018AC0C()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v1 + *(int *)(v0 + 36));
  return swift_bridgeObjectRelease();
}

uint64_t sub_10018AC44@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>, char a4, char a5, char a6, char a7, char a8)
{
  return sub_1001C6768(a1, a2, 0, 2, 2, 2, v8, 2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_10018AC6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 256);
  uint64_t v5 = *(void *)(v2 - 416);
  return sub_100178CEC(v4, v5, v1);
}

uint64_t sub_10018AC9C()
{
  return v0;
}

uint64_t sub_10018ACAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void), void (*a7)(void))
{
  sub_10018B130();
  if (v13)
  {
    sub_10017E9A4();
    if (v15 != v16)
    {
      sub_100183F88();
      if (v15)
      {
        __break(1u);
        goto LABEL_23;
      }
      sub_1001A24A0();
    }
  }
  else
  {
    uint64_t v14 = v11;
  }
  uint64_t v17 = *(void *)(v7 + 16);
  if (v14 <= v17) {
    uint64_t v18 = *(void *)(v7 + 16);
  }
  else {
    uint64_t v18 = v14;
  }
  if (!v18)
  {
    uint64_t v22 = &_swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  sub_10017DF08(v12);
  uint64_t v19 = a6(0);
  sub_100164920(v19);
  uint64_t v21 = *(void *)(v20 + 72);
  uint64_t v22 = (const void *)sub_1001A38A8();
  j__malloc_size(v22);
  if (!v21 || ((sub_10018BEF4(), v24) ? (BOOL v24 = v21 == -1) : (BOOL v24 = 0), v24))
  {
LABEL_23:
    sub_100187288();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  sub_10018B308(v23);
LABEL_18:
  uint64_t v25 = *(void *)(a6(0) - 8);
  unint64_t v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  if (v8)
  {
    sub_10018B36C(v7 + v26, v17);
    sub_1001855E0();
  }
  else
  {
    sub_10018C724(0, v17, (unint64_t)v22 + v26, v7, a7);
  }
  return (uint64_t)v22;
}

uint64_t sub_10018AE7C@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

uint64_t sub_10018AE90()
{
  return sub_10017DF08(v0);
}

__n128 *sub_10018AED8(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

uint64_t sub_10018AEE4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10018AF2C()
{
  return type metadata accessor for Date();
}

uint64_t sub_10018AF54()
{
  return WeatherMetadata.init(date:expirationDate:attribution:)();
}

uint64_t sub_10018AF6C()
{
  return v0;
}

uint64_t sub_10018AF78(char a1)
{
  return sub_100238A4C(a1, 0, 0);
}

uint64_t sub_10018AFA0()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_10018AFB0(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, *(void *)(v1 - 640));
}

uint64_t sub_10018AFEC()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10018B004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)(v4 - 72) = v3;
  *(void *)(v4 - 136) = a1;
  *(void *)(v4 - 128) = a2;
  *(void *)(v4 - 208) = a3;
  return 0;
}

uint64_t sub_10018B02C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10018B044()
{
  sub_1004C7978(v1 + *(int *)(v0 + 28));
  return swift_bridgeObjectRelease();
}

uint64_t sub_10018B07C()
{
  *uint64_t v0 = *v1;
  uint64_t result = v1[1];
  v0[1] = result;
  v0[2] = v1[2];
  v0[3] = v1[3];
  v0[4] = v1[4];
  v0[5] = v1[5];
  v0[6] = v1[6];
  v0[7] = v1[7];
  return result;
}

uint64_t sub_10018B0C0()
{
  return v0;
}

unint64_t sub_10018B0F0()
{
  return 0xD000000000000011;
}

uint64_t sub_10018B104(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1007A3BC0(v3, v4, a3);
}

void sub_10018B11C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 216) = (char *)&a9 - v9;
}

uint64_t sub_10018B13C()
{
  return type metadata accessor for UnitConfiguration.Distance();
}

__n128 sub_10018B158()
{
  __int16 v2 = *(unsigned __int8 *)(v1 - 224);
  __n128 result = *(__n128 *)(v1 - 256);
  long long v4 = *(_OWORD *)(v1 - 240);
  *(__n128 *)(v1 - 304) = result;
  *(_OWORD *)(v1 - 288) = v4;
  *(_WORD *)(v1 - 272) = v2;
  *(_WORD *)(v1 - 270) = v0;
  return result;
}

double sub_10018B190()
{
  return 0.0;
}

uint64_t sub_10018B1C0()
{
  return type metadata accessor for ModalViewState(0);
}

uint64_t sub_10018B218()
{
  return *(void *)(v1 + *(int *)(v0 + 56) + 16);
}

uint64_t sub_10018B22C()
{
  return v0;
}

uint64_t sub_10018B23C()
{
  return sub_100126E18(v1, v0);
}

uint64_t sub_10018B254()
{
  return type metadata accessor for WeatherDataModel();
}

uint64_t sub_10018B27C()
{
  return Optional<A>.write(to:)();
}

uint64_t sub_10018B2CC()
{
  return v0;
}

uint64_t sub_10018B2E8()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

void sub_10018B308(uint64_t a1@<X8>)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * (a1 / v3);
}

__n128 sub_10018B318@<Q0>(uint64_t a1@<X8>)
{
  return *(__n128 *)a1;
}

uint64_t sub_10018B32C(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, a1);
}

uint64_t sub_10018B358()
{
  return 0;
}

void sub_10018B36C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_100187288();
    sub_10017A91C();
    __break(1u);
  }
  else
  {
    sub_10018B4C0();
    if (v6 && (v5(0), sub_100162E4C(), v3 + *(void *)(v7 + 72) * v2 > v4))
    {
      if (v4 != v3)
      {
        sub_10017F580();
        swift_arrayInitWithTakeBackToFront();
      }
    }
    else
    {
      v5(0);
      sub_10017F580();
      swift_arrayInitWithTakeFrontToBack();
    }
  }
}

uint64_t sub_10018B484@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 184) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_10018B4A4()
{
  return type metadata accessor for TemperatureScaleConfiguration();
}

uint64_t sub_10018B4D8()
{
  return v0;
}

uint64_t destroy for ExternalSearchQuery()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10018B510(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  uint64_t v6 = *(void *)(a3 + 32);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = v5 + v9;
  unint64_t v11 = *(void *)(v7 + 64);
  unint64_t v12 = ((v5 + v9) & ~v9) + v11;
  if (v12 <= v11) {
    unint64_t v12 = *(void *)(v7 + 64);
  }
  if (v12 <= 0x20) {
    uint64_t v13 = 32;
  }
  else {
    uint64_t v13 = v12;
  }
  unsigned int v14 = a2[v13];
  unsigned int v15 = v14 - 3;
  if (v14 >= 3)
  {
    if (v13 <= 3) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *a2;
        goto LABEL_15;
      case 2:
        int v17 = *(unsigned __int16 *)a2;
        goto LABEL_15;
      case 3:
        int v17 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_15;
      case 4:
        int v17 = *(_DWORD *)a2;
LABEL_15:
        int v18 = (v17 | (v15 << (8 * v13))) + 3;
        unsigned int v14 = v17 + 3;
        if (v13 < 4) {
          unsigned int v14 = v18;
        }
        break;
      default:
        break;
    }
  }
  if (v14 == 2)
  {
    (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v8 + 16))(a1, a2, v6);
    char v20 = 2;
  }
  else
  {
    if (v14 != 1)
    {
      *(void *)a1 = *(void *)a2;
      uint64_t v21 = *((void *)a2 + 3);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(void *)(a1 + 24) = v21;
      *(unsigned char *)(a1 + v13) = 0;
      swift_retain();
      swift_retain();
      return a1;
    }
    uint64_t v19 = ~v9;
    (*(void (**)(uint64_t, unsigned __int8 *))(*(void *)(*(void *)(a3 + 24) - 8) + 16))(a1, a2);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))((v10 + a1) & v19, (unint64_t)&a2[v10] & v19, v6);
    char v20 = 1;
  }
  *(unsigned char *)(a1 + v13) = v20;
  return a1;
}

uint64_t sub_10018B730(uint64_t a1)
{
  sub_10017DFE0(a1);
  swift_release();
  sub_10017DF08(&qword_100E63D98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for LocationHeaderViewMeasurements(0);
    type metadata accessor for DisplayMetrics();
    type metadata accessor for DynamicTypeSize();
    sub_100162E4C();
    sub_100162F0C();
    v1();
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

uint64_t type metadata accessor for LocationHeaderViewMeasurements(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E64080);
}

uint64_t sub_10018B820(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_10018F6D8(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  uint64_t v2 = a1 + *(int *)(type metadata accessor for AutomationInfoProperty() + 24);
  type metadata accessor for AutomationInfo(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 2:
      uint64_t v4 = *(void *)v2;
      uint64_t v5 = *(void *)(v2 + 8);
      unsigned __int8 v6 = *(unsigned char *)(v2 + 16);
      return sub_10014D144(v4, v5, v6);
    case 1:
      type metadata accessor for AutomationCellInfo(0);
      uint64_t result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 7:
        case 10:
          goto LABEL_9;
        case 6:
LABEL_13:
          uint64_t v7 = type metadata accessor for WeatherMapOverlayKind();
          uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
          return v8(v2, v7);
        case 8:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_9;
        case 9:
        case 11:
          swift_bridgeObjectRelease();
LABEL_9:
          uint64_t result = swift_bridgeObjectRelease();
          break;
        default:
          return result;
      }
      break;
    case 0:
      type metadata accessor for AutomationViewInfo(0);
      uint64_t result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
        case 1:
        case 3:
          goto LABEL_9;
        case 2:
          goto LABEL_13;
        default:
          return result;
      }
  }
  return result;
}

uint64_t sub_10018B9C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  sub_100195B7C(v5, v6);
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  uint64_t v7 = *(int *)(type metadata accessor for AutomationInfoProperty() + 24);
  uint64_t v8 = (uint64_t *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  type metadata accessor for AutomationInfo(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v13 = *(void *)v9;
    uint64_t v14 = *((void *)v9 + 1);
    unsigned __int8 v15 = *((unsigned char *)v9 + 16);
    sub_10018F6EC(v13, v14, v15);
    uint64_t *v8 = v13;
    v8[1] = v14;
    *((unsigned char *)v8 + 16) = v15;
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v11 = type metadata accessor for AutomationCellInfo(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 3u:
        case 4u:
        case 5u:
        case 7u:
        case 0xAu:
          goto LABEL_7;
        case 2u:
          uint64_t v12 = *((void *)v9 + 1);
          uint64_t *v8 = *(void *)v9;
          v8[1] = v12;
          swift_bridgeObjectRetain();
          goto LABEL_14;
        case 6u:
          uint64_t v18 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(uint64_t *, const void *, uint64_t))(*(void *)(v18 - 8) + 16))(v8, v9, v18);
          goto LABEL_14;
        case 8u:
          uint64_t v19 = *((void *)v9 + 1);
          uint64_t *v8 = *(void *)v9;
          v8[1] = v19;
          uint64_t v20 = *((void *)v9 + 3);
          v8[2] = *((void *)v9 + 2);
          v8[3] = v20;
          uint64_t v21 = *((void *)v9 + 4);
          uint64_t v22 = *((void *)v9 + 5);
          v8[4] = v21;
          v8[5] = v22;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_14;
        case 9u:
        case 0xBu:
          uint64_t v23 = *((void *)v9 + 1);
          uint64_t *v8 = *(void *)v9;
          v8[1] = v23;
          uint64_t v24 = *((void *)v9 + 2);
          uint64_t v25 = *((void *)v9 + 3);
          v8[2] = v24;
          v8[3] = v25;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_14;
        default:
          goto LABEL_8;
      }
    }
    uint64_t v11 = type metadata accessor for AutomationViewInfo(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 3u:
LABEL_7:
        uint64_t v16 = *((void *)v9 + 1);
        uint64_t *v8 = *(void *)v9;
        v8[1] = v16;
        swift_bridgeObjectRetain();
        goto LABEL_14;
      case 2u:
        uint64_t v17 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(uint64_t *, const void *, uint64_t))(*(void *)(v17 - 8) + 16))(v8, v9, v17);
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      default:
LABEL_8:
        memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
        break;
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t type metadata accessor for AutomationInfo(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EA7AF8);
}

uint64_t type metadata accessor for AutomationInfoProperty()
{
  uint64_t result = qword_100E88FA8;
  if (!qword_100E88FA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for AutomationCellInfo(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EA7C48);
}

uint64_t sub_10018BDD8()
{
  return v0;
}

uint64_t sub_10018BDEC()
{
  return *(void *)(v0 - 376);
}

uint64_t sub_10018BE08(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_100187288();
    sub_1001D1DF8();
LABEL_11:
    uint64_t result = sub_100163950();
    __break(1u);
    return result;
  }
  sub_100188B9C();
  v3(0);
  sub_100162E4C();
  sub_10019C9C4();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    sub_100187288();
    sub_100181768();
    goto LABEL_11;
  }
  sub_100182C00();

  return swift_arrayInitWithCopy();
}

double sub_10018BECC()
{
  return 0.0;
}

uint64_t sub_10018BED8()
{
  return type metadata accessor for WeatherData.WeatherStatisticsState(0);
}

uint64_t sub_10018BF00()
{
  return Optional<A>.write(to:)();
}

uint64_t sub_10018BF28()
{
  return 0;
}

uint64_t sub_10018BF34()
{
  return sub_100126E18(v0, v1);
}

uint64_t sub_10018BF4C(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + a2[7];
  uint64_t v6 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[8];
  uint64_t v8 = sub_10017DF08(&qword_100E65250);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(a1 + a2[9], v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = a1 + a2[15];
  uint64_t v11 = type metadata accessor for Precipitation();
  if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10018C148(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for LocationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  void *v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  uint64_t v11 = type metadata accessor for ConditionPickerMenuViewModel(0);
  uint64_t v12 = *(int *)(v11 + 20);
  __dst = (char *)v8 + v12;
  uint64_t v13 = (const void *)(v9 + v12);
  uint64_t v14 = type metadata accessor for WeatherCondition();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = sub_10017DF08(&qword_100E63A50);
    memcpy(__dst, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(__dst, v13, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v14);
  }
  *(void *)((char *)v8 + *(int *)(v11 + 24)) = *(void *)(v9 + *(int *)(v11 + 24));
  uint64_t v16 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  uint64_t v17 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  uint64_t v18 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  uint64_t v19 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = v21[3];
  v20[2] = v21[2];
  v20[3] = v23;
  uint64_t v24 = v21[5];
  v20[4] = v21[4];
  v20[5] = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10018C354()
{
  return v0;
}

uint64_t sub_10018C36C()
{
  return 0;
}

uint64_t sub_10018C384()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10018C3A0(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, *(void *)(v1 - 272));
  return type metadata accessor for SearchViewState(0);
}

void *sub_10018C3D8(void *a1, uint64_t a2)
{
  return sub_1001B1E64(a1, a2);
}

uint64_t sub_10018C408()
{
  return v1 + *(int *)(v0 + 28);
}

uint64_t sub_10018C430(uint64_t a1, unint64_t a2)
{
  return sub_10016414C(a1, a2, (uint64_t *)(v2 - 192));
}

uint64_t sub_10018C448()
{
  return v0;
}

void sub_10018C458(uint64_t a1@<X8>, __n128 a2@<Q0>, __n128 a3@<Q1>)
{
  *(unsigned char *)(a1 + 40) = v3;
  *(unsigned char *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 56) = a2;
  *(__n128 *)(a1 + 72) = a3;
  *(unsigned char *)(a1 + 88) = v5;
}

uint64_t sub_10018C470()
{
  return 0;
}

uint64_t sub_10018C480()
{
  _s7Weather24LocationCompositionStateOwst_0(v0, 0, 1, v1);
  return sub_10063643C(v0);
}

uint64_t sub_10018C4BC()
{
  return v0;
}

uint64_t sub_10018C4D0()
{
  return swift_retain_n();
}

uint64_t sub_10018C4EC()
{
  return v0;
}

uint64_t sub_10018C4F8()
{
  return TimeZone.init(identifier:)();
}

uint64_t sub_10018C51C()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t sub_10018C568()
{
  return 255;
}

__n128 sub_10018C574()
{
  char v2 = *(unsigned char *)(v1 - 224);
  __n128 result = *(__n128 *)(v1 - 256);
  long long v4 = *(_OWORD *)(v1 - 240);
  *(__n128 *)(v1 - 304) = result;
  *(_OWORD *)(v1 - 288) = v4;
  *(unsigned char *)(v1 - 272) = v2;
  *(unsigned char *)(v1 - 271) = v0;
  return result;
}

uint64_t sub_10018C5B0()
{
  return *(void *)(v0 - 208);
}

uint64_t sub_10018C5C8()
{
  return v0;
}

uint64_t sub_10018C5D8()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10018C614()
{
  return type metadata accessor for Date();
}

uint64_t sub_10018C644()
{
  _s7Weather24LocationCompositionStateOwst_0(v0, 1, 1, v1);
  return WeatherMetadata.init(date:expirationDate:attribution:)();
}

uint64_t sub_10018C688()
{
  return v0;
}

uint64_t sub_10018C698(uint64_t a1, void (*a2)(void))
{
  uint64_t v4 = *(void *)(v2 - 344);
  return sub_1000C134C(v4, a2);
}

uint64_t sub_10018C6B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + a1;
  uint64_t v4 = *(void *)v3;
  char v5 = *(unsigned char *)(v3 + 8);
  return sub_10018F6D8(v4, v5);
}

uint64_t sub_10018C6DC(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_10018C724(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(void))
{
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    sub_100187288();
    sub_1001D1DF8();
    goto LABEL_11;
  }
  a5(0);
  sub_100179EF0();
  sub_1001D3FCC();
  if (v8) {
    BOOL v9 = 0;
  }
  else {
    BOOL v9 = v7 > a3;
  }
  if (!v9)
  {
    swift_arrayInitWithCopy();
    swift_bridgeObjectRelease();
    return a1;
  }
  sub_100187288();
  sub_100181768();
LABEL_11:
  uint64_t result = sub_100163950();
  __break(1u);
  return result;
}

uint64_t sub_10018C820()
{
  return Hasher.init(_seed:)();
}

uint64_t sub_10018C838(uint64_t result, double a2)
{
  *(void *)(v2 + 32) = result;
  *(double *)(v2 + 40) = a2;
  return result;
}

uint64_t sub_10018C844()
{
  return type metadata accessor for NextHourPrecipitationChartViewModel();
}

uint64_t sub_10018C860()
{
  return Set.init(minimumCapacity:)();
}

uint64_t sub_10018C87C()
{
  return type metadata accessor for Elevation();
}

uint64_t sub_10018C8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = v7;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  uint64_t v12 = v10 + 16;
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = (v13 + 49 + a1) & ~v13;
  uint64_t v15 = (v13 + 49 + a2) & ~v13;
  swift_bridgeObjectRetain();
  v11(v14, v15, v9);
  v11((*(void *)(v12 + 48) + v13 + v14) & ~v13, (*(void *)(v12 + 48) + v13 + v15) & ~v13, v9);
  return a1;
}

uint64_t sub_10018C9CC(void (*a1)(void))
{
  a1();
  EnvironmentValues.subscript.getter();
  return v2;
}

uint64_t sub_10018CA14(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[9];
  uint64_t v5 = type metadata accessor for PinnedScrollableViews();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  sub_10018F6D8(*(void *)(a1 + a2[11]), *(unsigned char *)(a1 + a2[11] + 8));
  uint64_t v6 = a1 + a2[12];
  return sub_10018CCC4(*(void *)v6, *(void *)(v6 + 8), *(void *)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), *(void *)(v6 + 48), *(void *)(v6 + 56), *(void *)(v6 + 64), *(unsigned char *)(v6 + 72));
}

uint64_t type metadata accessor for TransitionContext()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10018CAF0(uint64_t a1)
{
  if (*(void *)(a1 + 24)) {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_10018CB34(uint64_t a1, uint64_t a2)
{
  sub_10018CCC4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(unsigned char *)(a1 + 72));
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for Location.Identifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v6 = a1 + *(int *)(a2 + 40);
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for LayoutDirection();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

uint64_t _s7Weather49DetermineLocationComponentHeaderLineLimitModifierVwxx_0(uint64_t a1)
{
  return sub_10018CCC4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(unsigned char *)(a1 + 72));
}

uint64_t sub_10018CCC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  if ((a10 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_10018CCD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E63508);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10018CD3C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for SavedLocation();
  uint64_t v20 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v21 = (uint64_t)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v22 = _swiftEmptyArrayStorage;
  uint64_t v19 = *(void *)(a1 + 16);
  if (v19)
  {
    uint64_t v18 = v2;
    unint64_t v10 = 0;
    while (v10 < *(void *)(a1 + 16))
    {
      unint64_t v11 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
      uint64_t v12 = *(void *)(v20 + 72);
      uint64_t v13 = a1;
      sub_10018D06C(a1 + v11 + v12 * v10, (uint64_t)v9, (void (*)(void))&type metadata accessor for SavedLocation);
      uint64_t v14 = *(void *)(a2 + 16);
      if (v14)
      {
        uint64_t v15 = a2 + v11;
        swift_bridgeObjectRetain();
        while ((static SavedLocation.== infix(_:_:)() & 1) == 0)
        {
          v15 += v12;
          if (!--v14)
          {
            swift_bridgeObjectRelease();
            goto LABEL_9;
          }
        }
        swift_bridgeObjectRelease();
        sub_10018CFC4((uint64_t)v9, (void (*)(void))&type metadata accessor for SavedLocation);
      }
      else
      {
LABEL_9:
        sub_10017DE2C((uint64_t)v9, v21, (void (*)(void))&type metadata accessor for SavedLocation);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_10018D170();
        }
        uint64_t v16 = v22;
        unint64_t v17 = v22[2];
        if (v17 >= v22[3] >> 1)
        {
          sub_10018D170();
          uint64_t v16 = v22;
        }
        v16[2] = v17 + 1;
        sub_10017DE2C(v21, (uint64_t)v16 + v11 + v17 * v12, (void (*)(void))&type metadata accessor for SavedLocation);
      }
      ++v10;
      a1 = v13;
      if (v10 == v19) {
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10018CFC4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_10018D018(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_10018D06C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_10018D0C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100162708();
  v4(v3);
  sub_100162E4C();
  uint64_t v5 = sub_10011BFA4();
  v6(v5);
  return a2;
}

uint64_t sub_10018D110(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

void sub_10018D170()
{
  sub_10018A6B4();
  *uint64_t v0 = v1;
}

uint64_t type metadata accessor for AutomationViewInfo(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EA7BA0);
}

uint64_t sub_10018D1F4(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for MainViewModel.ModalModule(0);
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_10017DF08(&qword_100E94AE8);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
      if (swift_getEnumCaseMultiPayload() == 6)
      {
        uint64_t v12 = type metadata accessor for URL();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 16))(v7, v8, v12);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v13 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v40 = a3;
  uint64_t v41 = a2;
  uint64_t v14 = a3[9];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(_WORD *)(a1 + v14) = *(_WORD *)(a2 + v14);
  unint64_t v17 = (int *)type metadata accessor for WeatherMapPresentationState(0);
  uint64_t v18 = v17[6];
  uint64_t v19 = v15 + v18;
  uint64_t v20 = v16 + v18;
  uint64_t v21 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16);
  v22(v19, v20, v21);
  uint64_t v23 = v17[7];
  uint64_t v24 = (void *)(v15 + v23);
  uint64_t v25 = (void *)(v16 + v23);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  uint64_t v27 = v17[8];
  uint64_t v28 = (unsigned char *)(v15 + v27);
  uint64_t v29 = (unsigned char *)(v16 + v27);
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_10017DF08(&qword_100E66460);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 3, v30))
  {
    uint64_t v31 = type metadata accessor for WeatherMapTrackingState(0);
    memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    *uint64_t v28 = *v29;
    v22((uint64_t)&v28[*(int *)(v30 + 48)], (uint64_t)&v29[*(int *)(v30 + 48)], v21);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 3, v30);
  }
  *(unsigned char *)(v15 + v17[9]) = *(unsigned char *)(v16 + v17[9]);
  uint64_t v32 = v40[10];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = v41 + v32;
  *(_OWORD *)uint64_t v33 = *(_OWORD *)(v41 + v32);
  *(unsigned char *)(v33 + 16) = *(unsigned char *)(v41 + v32 + 16);
  *(unsigned char *)(v33 + 17) = *(unsigned char *)(v41 + v32 + 17);
  *(unsigned char *)(v33 + 18) = *(unsigned char *)(v41 + v32 + 18);
  uint64_t v35 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v36 = v33 + v35;
  uint64_t v37 = v34 + v35;
  uint64_t v38 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  return a1;
}

void *sub_10018D568(void *a1, void *a2, int *a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  type metadata accessor for ViewState.SecondaryViewState(0);
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for WeatherCondition();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    *uint64_t v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = v3[7];
  *((unsigned char *)a1 + v3[6]) = *((unsigned char *)v4 + v3[6]);
  *((unsigned char *)a1 + v10) = *((unsigned char *)v4 + v10);
  uint64_t v11 = v3[8];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)v4 + v11);
  uint64_t v14 = (int *)type metadata accessor for SearchViewState(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, (uint64_t)v14))
  {
    uint64_t v15 = sub_10017DF08(&qword_100E66408);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_16;
  }
  uint64_t v16 = v3;
  unint64_t v17 = v4;
  uint64_t v18 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v18;
  uint64_t v19 = v14[5];
  uint64_t v20 = (void *)((char *)v12 + v19);
  uint64_t v21 = (void *)((char *)v13 + v19);
  uint64_t v22 = type metadata accessor for SearchViewState.ViewState(0);
  swift_bridgeObjectRetain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *uint64_t v20 = *v21;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      goto LABEL_12;
    }
    uint64_t v24 = type metadata accessor for CodableError();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v20, v21, v24);
  }
  swift_storeEnumTagMultiPayload();
LABEL_12:
  *((unsigned char *)v12 + v14[6]) = *((unsigned char *)v13 + v14[6]);
  uint64_t v25 = v14[7];
  uint64_t v26 = (char *)v12 + v25;
  uint64_t v27 = (char *)v13 + v25;
  uint64_t v28 = type metadata accessor for Location();
  uint64_t v3 = v16;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
  {
    uint64_t v29 = sub_10017DF08(&qword_100E639E8);
    memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
  }
  uint64_t v4 = v17;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, (uint64_t)v14);
LABEL_16:
  uint64_t v30 = v3[9];
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)v4 + v30;
  *(_OWORD *)uint64_t v31 = *(_OWORD *)((char *)v4 + v30);
  v31[16] = *((unsigned char *)v4 + v30 + 16);
  v31[17] = *((unsigned char *)v4 + v30 + 17);
  v31[18] = *((unsigned char *)v4 + v30 + 18);
  uint64_t v33 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v34 = &v31[v33];
  uint64_t v35 = &v32[v33];
  uint64_t v36 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
  NSBundle v56 = v3;
  Swift::String v57 = v4;
  uint64_t v37 = v3[10];
  uint64_t v38 = (char *)a1 + v37;
  uint64_t v39 = (char *)v4 + v37;
  *(_WORD *)((char *)a1 + v37) = *(_WORD *)((char *)v4 + v37);
  uint64_t v40 = (int *)type metadata accessor for WeatherMapPresentationState(0);
  uint64_t v41 = v40[6];
  unint64_t v42 = &v38[v41];
  uint64_t v43 = &v39[v41];
  uint64_t v44 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16);
  v45(v42, v43, v44);
  uint64_t v46 = v40[7];
  double v47 = &v38[v46];
  double v48 = &v39[v46];
  uint64_t v49 = *((void *)v48 + 1);
  *(void *)double v47 = *(void *)v48;
  *((void *)v47 + 1) = v49;
  uint64_t v50 = v40[8];
  double v51 = &v38[v50];
  double v52 = &v39[v50];
  swift_bridgeObjectRetain();
  uint64_t v53 = sub_10017DF08(&qword_100E66460);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 3, v53))
  {
    uint64_t v54 = type metadata accessor for WeatherMapTrackingState(0);
    memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
  }
  else
  {
    *double v51 = *v52;
    v45(&v51[*(int *)(v53 + 48)], &v52[*(int *)(v53 + 48)], v44);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v51, 0, 3, v53);
  }
  v38[v40[9]] = v39[v40[9]];
  *((unsigned char *)a1 + v56[11]) = *((unsigned char *)v57 + v56[11]);
  return a1;
}

uint64_t type metadata accessor for WeatherMapTrackingState(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E72BA8);
}

uint64_t sub_10018DA3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10038C4A8);
}

uint64_t sub_10018DA50(uint64_t a1, int *a2)
{
  swift_release();
  uint64_t v4 = a1 + a2[5];
  type metadata accessor for ViewState.SecondaryViewState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for WeatherCondition();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[8];
  uint64_t v7 = type metadata accessor for SearchViewState(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = v6 + *(int *)(v7 + 20);
    type metadata accessor for SearchViewState.ViewState(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
    }
    else if (!EnumCaseMultiPayload)
    {
      uint64_t v10 = type metadata accessor for CodableError();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
    }
    uint64_t v11 = v6 + *(int *)(v7 + 28);
    uint64_t v12 = type metadata accessor for Location();
    if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
    }
  }
  uint64_t v13 = a1 + a2[9];
  uint64_t v14 = v13 + *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v15 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  uint64_t v16 = a1 + a2[10];
  uint64_t v17 = type metadata accessor for WeatherMapPresentationState(0);
  uint64_t v18 = v16 + *(int *)(v17 + 24);
  uint64_t v19 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8);
  v24(v18, v19);
  swift_bridgeObjectRelease();
  uint64_t v20 = v16 + *(int *)(v17 + 32);
  uint64_t v21 = sub_10017DF08(&qword_100E66460);
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v20, 3, v21);
  if (!result)
  {
    uint64_t v23 = v20 + *(int *)(v21 + 48);
    return ((uint64_t (*)(uint64_t, uint64_t))v24)(v23, v19);
  }
  return result;
}

uint64_t type metadata accessor for DisplayMetrics()
{
  uint64_t result = qword_100EB3308;
  if (!qword_100EB3308) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for WeatherMapPresentationState(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E72C10);
}

uint64_t type metadata accessor for ViewState.SecondaryViewState(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EA4710);
}

uint64_t type metadata accessor for SearchViewState.ViewState(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E70890);
}

uint64_t sub_10018DDC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10038C3F8);
}

uint64_t type metadata accessor for SearchViewState(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E70920);
}

uint64_t sub_10018DDF4(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = type metadata accessor for MainViewModel.ModalModule(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)
    && swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      uint64_t v6 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
    }
  }
  uint64_t v7 = a1 + a2[9];
  uint64_t v8 = type metadata accessor for WeatherMapPresentationState(0);
  uint64_t v9 = v7 + *(int *)(v8 + 24);
  uint64_t v10 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  v11(v9, v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v7 + *(int *)(v8 + 32);
  uint64_t v13 = sub_10017DF08(&qword_100E66460);
  if (!_s7Weather24LocationCompositionStateOwet_0(v12, 3, v13)) {
    v11(v12 + *(int *)(v13 + 48), v10);
  }
  uint64_t v14 = a1 + a2[10];
  uint64_t v15 = v14 + *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v16 = type metadata accessor for DynamicTypeSize();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);

  return v17(v15, v16);
}

uint64_t type metadata accessor for MainViewModel.ModalModule(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EA9CE0);
}

uint64_t sub_10018DFF0()
{
  return _s7Weather24LocationCompositionStateOwst_0(v1, 0, 1, v0);
}

void *sub_10018E010(void *a1)
{
  return sub_1001B1E64(a1, v1);
}

BOOL sub_10018E038()
{
  return v0 != 0;
}

uint64_t sub_10018E040()
{
  return 0;
}

void sub_10018E07C(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(a1 - 256);
  sub_1000277CC(v2);
}

double sub_10018E0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return *(double *)&a7;
}

uint64_t sub_10018E0B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  if (_s7Weather24LocationCompositionStateOwet_0(a2 + v8, 1, v6))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v6);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(a2 + v12 + 8);
  *(void *)uint64_t v13 = *(void *)(a2 + v12);
  *(void *)(v13 + 8) = v15;
  uint64_t v16 = *(void *)(a2 + v12 + 16);
  uint64_t v17 = *(void *)(a2 + v12 + 24);
  uint64_t v18 = *(void *)(a2 + v12 + 32);
  uint64_t v19 = *(void *)(a2 + v12 + 40);
  char v20 = *(unsigned char *)(a2 + v12 + 48);
  swift_bridgeObjectRetain();
  sub_100193004(v16, v17, v18, v19, v20);
  *(void *)(v13 + 16) = v16;
  *(void *)(v13 + 24) = v17;
  *(void *)(v13 + 32) = v18;
  *(void *)(v13 + 40) = v19;
  *(unsigned char *)(v13 + 48) = v20;
  uint64_t v21 = *(void *)(v14 + 64);
  *(void *)(v13 + 56) = *(void *)(v14 + 56);
  *(void *)(v13 + 64) = v21;
  uint64_t v22 = *(void *)(v14 + 80);
  *(void *)(v13 + 72) = *(void *)(v14 + 72);
  *(void *)(v13 + 80) = v22;
  uint64_t v23 = *(void *)(v14 + 96);
  *(void *)(v13 + 88) = *(void *)(v14 + 88);
  *(void *)(v13 + 96) = v23;
  uint64_t v24 = *(void *)(v14 + 112);
  *(void *)(v13 + 104) = *(void *)(v14 + 104);
  *(void *)(v13 + 112) = v24;
  uint64_t v25 = *(void *)(v14 + 128);
  *(void *)(v13 + 120) = *(void *)(v14 + 120);
  *(void *)(v13 + 128) = v25;
  *(unsigned char *)(v13 + 136) = *(unsigned char *)(v14 + 136);
  *(_WORD *)(v13 + 137) = *(_WORD *)(v14 + 137);
  uint64_t v26 = *(void *)(v14 + 144);
  uint64_t v27 = *(void *)(v14 + 152);
  *(unsigned char *)(v13 + 160) = *(unsigned char *)(v14 + 160);
  *(unsigned char *)(v13 + 161) = *(unsigned char *)(v14 + 161);
  uint64_t v28 = a3[7];
  uint64_t v29 = a3[8];
  uint64_t v30 = *(void *)(a2 + v28);
  *(void *)(v13 + 144) = v26;
  *(void *)(v13 + 152) = v27;
  *(void *)(a1 + v28) = v30;
  *(void *)(a1 + v29) = *(void *)(a2 + v29);
  uint64_t v97 = a3;
  uint64_t v98 = a2;
  uint64_t v31 = a3[9];
  uint64_t v32 = a1;
  uint64_t v33 = (unsigned char *)(a1 + v31);
  uint64_t v34 = (unsigned char *)(a2 + v31);
  uint64_t v35 = type metadata accessor for LocationFooterViewModel();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35))
  {
    uint64_t v36 = sub_10017DF08(&qword_100E6DC18);
    memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
    uint64_t v37 = v98;
    uint64_t v38 = v32;
  }
  else
  {
    *uint64_t v33 = *v34;
    *(_WORD *)(v33 + 1) = *(_WORD *)(v34 + 1);
    uint64_t v39 = *((void *)v34 + 2);
    *((void *)v33 + 1) = *((void *)v34 + 1);
    *((void *)v33 + 2) = v39;
    uint64_t v40 = *(int *)(v35 + 32);
    uint64_t v41 = v33;
    unint64_t v42 = &v33[v40];
    uint64_t v43 = &v34[v40];
    uint64_t v44 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44))
    {
      uint64_t v45 = sub_10017DF08(&qword_100E749B0);
      memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v44);
    }
    uint64_t v38 = v32;
    uint64_t v96 = (int *)v35;
    uint64_t v46 = *(int *)(v35 + 36);
    uint64_t v47 = (uint64_t)v41;
    double v48 = &v41[v46];
    uint64_t v49 = &v34[v46];
    *double v48 = v34[v46];
    *((void *)v48 + 1) = *(void *)&v34[v46 + 8];
    uint64_t v50 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
    uint64_t v51 = v50[6];
    double v52 = &v48[v51];
    uint64_t v53 = &v49[v51];
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v44))
    {
      uint64_t v54 = sub_10017DF08(&qword_100E749B0);
      memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v44 - 8) + 16))(v52, v53, v44);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v44);
    }
    uint64_t v55 = v50[7];
    NSBundle v56 = &v48[v55];
    Swift::String v57 = &v49[v55];
    uint64_t v58 = v57[1];
    *NSBundle v56 = *v57;
    v56[1] = v58;
    *(void *)&v48[v50[8]] = *(void *)&v49[v50[8]];
    *(unsigned char *)(v47 + v96[10]) = v34[v96[10]];
    uint64_t v59 = v96[11];
    uint64_t v60 = (void *)(v47 + v59);
    uint64_t v61 = &v34[v59];
    uint64_t v62 = type metadata accessor for LocationOfInterest();
    swift_bridgeObjectRetain();
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62))
    {
      uint64_t v63 = sub_10017DF08(&qword_100E63508);
      memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, unsigned char *, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v62);
    }
    *(unsigned char *)(v47 + v96[12]) = v34[v96[12]];
    *(unsigned char *)(v47 + v96[13]) = v34[v96[13]];
    uint64_t v64 = v96[14];
    uint64_t v65 = (unsigned char *)(v47 + v64);
    uint64_t v66 = &v34[v64];
    uint64_t v67 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, (uint64_t)v67))
    {
      uint64_t v68 = sub_10017DF08(&qword_100E6DC10);
      memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
    }
    else
    {
      *uint64_t v65 = *v66;
      uint64_t v69 = v67[5];
      uint64_t v70 = &v65[v69];
      uint64_t v71 = &v66[v69];
      uint64_t v72 = type metadata accessor for Location();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v72 - 8) + 16))(v70, v71, v72);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v62 - 8) + 16))(&v65[v67[6]], &v66[v67[6]], v62);
      v65[v67[7]] = v66[v67[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 0, 1, (uint64_t)v67);
    }
    a3 = v97;
    _s7Weather24LocationCompositionStateOwst_0(v47, 0, 1, (uint64_t)v96);
    uint64_t v37 = v98;
  }
  uint64_t v73 = a3[11];
  *(unsigned char *)(v38 + a3[10]) = *(unsigned char *)(v37 + a3[10]);
  *(unsigned char *)(v38 + v73) = *(unsigned char *)(v37 + v73);
  uint64_t v74 = a3[13];
  *(unsigned char *)(v38 + a3[12]) = *(unsigned char *)(v37 + a3[12]);
  *(unsigned char *)(v38 + v74) = *(unsigned char *)(v37 + v74);
  uint64_t v75 = a3[15];
  *(unsigned char *)(v38 + a3[14]) = *(unsigned char *)(v37 + a3[14]);
  uint64_t v76 = *(void **)(v37 + v75);
  *(void *)(v38 + v75) = v76;
  uint64_t v77 = a3[17];
  *(unsigned char *)(v38 + a3[16]) = *(unsigned char *)(v37 + a3[16]);
  *(unsigned char *)(v38 + v77) = *(unsigned char *)(v37 + v77);
  uint64_t v78 = a3[19];
  *(unsigned char *)(v38 + a3[18]) = *(unsigned char *)(v37 + a3[18]);
  uint64_t v79 = v38 + v78;
  uint64_t v80 = v37 + v78;
  uint64_t v81 = type metadata accessor for Date();
  uint64_t v82 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 16);
  id v83 = v76;
  v82(v79, v80, v81);
  uint64_t v84 = a3[20];
  uint64_t v85 = (void *)(v38 + v84);
  uint64_t v86 = (const void *)(v37 + v84);
  uint64_t v87 = type metadata accessor for ForegroundEffect();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v86, 1, v87))
  {
    uint64_t v88 = sub_10017DF08(&qword_100E65FA8);
    memcpy(v85, v86, *(void *)(*(void *)(v88 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v85, 0, 1, v87);
  }
  uint64_t v89 = a3[22];
  *(unsigned char *)(v38 + a3[21]) = *(unsigned char *)(v37 + a3[21]);
  *(void *)(v38 + v89) = *(void *)(v37 + v89);
  uint64_t v90 = a3[24];
  *(unsigned char *)(v38 + a3[23]) = *(unsigned char *)(v37 + a3[23]);
  uint64_t v91 = v38 + v90;
  uint64_t v92 = v37 + v90;
  uint64_t v93 = type metadata accessor for LocationEntity();
  uint64_t v94 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 16);
  swift_bridgeObjectRetain();
  v94(v91, v92, v93);
  return v38;
}

uint64_t sub_10018E8A0(uint64_t a1, int *a2)
{
  type metadata accessor for LocationComponentHeaderViewModel(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 3u:
      uint64_t v4 = type metadata accessor for WeatherDescription();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
      type metadata accessor for LocationComponentHeaderViewModel.Description(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_7:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  uint64_t v5 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v6 = a1 + *(int *)(v5 + 20);
  type metadata accessor for LocationComponentViewModel();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_48;
    case 1u:
      swift_bridgeObjectRelease();
      uint64_t v7 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
      uint64_t v8 = v6 + v7[5];
      uint64_t v9 = sub_10017DF08(&qword_100E65250);
      uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
      v10(v8, v9);
      v10(v6 + v7[6], v9);
      v10(v6 + v7[7], v9);
      goto LABEL_33;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v11 = v6 + *(int *)(type metadata accessor for FeelsLikeComponentViewModel(0) + 24);
      uint64_t v12 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12))
      {
        swift_bridgeObjectRelease();
        uint64_t v13 = v11 + *(int *)(v12 + 20);
        uint64_t v14 = type metadata accessor for TemperatureScaleConfiguration();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
        type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        swift_bridgeObjectRelease();
      }
      goto LABEL_48;
    case 3u:
    case 4u:
      goto LABEL_48;
    case 5u:
      uint64_t v15 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v6, v15);
      uint64_t v16 = type metadata accessor for MapComponentViewModel();
      uint64_t v17 = v6 + *(int *)(v16 + 20);
      uint64_t v18 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
      uint64_t v19 = v6 + *(int *)(v16 + 24);
      char v20 = (int *)type metadata accessor for WeatherData(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v19, 1, (uint64_t)v20))
      {
        swift_bridgeObjectRelease();
        uint64_t v21 = v19 + v20[5];
        uint64_t v22 = type metadata accessor for Locale();
        if (!_s7Weather24LocationCompositionStateOwet_0(v21, 1, v22)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
        }
        uint64_t v23 = v19 + v20[6];
        uint64_t v24 = type metadata accessor for WeatherDataModel();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
        uint64_t v25 = v19 + v20[7];
        uint64_t v26 = sub_10017DF08(&qword_100E63738);
        if (!_s7Weather24LocationCompositionStateOwet_0(v25, 1, v26))
        {
          uint64_t v27 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v25, v27);
        }
        uint64_t v28 = v19 + v20[8];
        type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v42 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v28, v42);
        }
        else if (!EnumCaseMultiPayload)
        {
          swift_bridgeObjectRelease();
        }
        uint64_t v43 = v19 + v20[9];
        uint64_t v44 = type metadata accessor for WeatherDataOverrides();
        if (!_s7Weather24LocationCompositionStateOwet_0(v43, 1, v44))
        {
          uint64_t v45 = type metadata accessor for Date();
          if (!_s7Weather24LocationCompositionStateOwet_0(v43, 1, v45)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v43, v45);
          }
          uint64_t v46 = v43 + *(int *)(v44 + 20);
          if (!_s7Weather24LocationCompositionStateOwet_0(v46, 1, v45)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v46, v45);
          }
        }
      }
      goto LABEL_48;
    case 6u:
      swift_bridgeObjectRelease();
      int v30 = *(unsigned __int8 *)(v6 + 32);
      if (v30 != 255) {
        sub_1001F3C7C(*(void *)(v6 + 16), *(void *)(v6 + 24), v30);
      }
      swift_bridgeObjectRelease();
      v6 += *(int *)(type metadata accessor for MoonComponentViewModel() + 28);
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for Date();
      goto LABEL_36;
    case 7u:
      type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v32 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v33 = v6 + v32[5];
        uint64_t v34 = type metadata accessor for URL();
        if (!_s7Weather24LocationCompositionStateOwet_0(v33, 1, v34)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v33, v34);
        }
        swift_bridgeObjectRelease();
        uint64_t v35 = *(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8);
        v35(v6 + v32[7], v34);
        uint64_t v36 = v6 + v32[8];
        if (!_s7Weather24LocationCompositionStateOwet_0(v36, 1, v34)) {
          v35(v36, v34);
        }
      }
      break;
    case 8u:
      swift_bridgeObjectRelease();
      v6 += *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel() + 20);
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
      goto LABEL_36;
    case 9u:
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for Location();
      goto LABEL_36;
    case 0xAu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_48;
    case 0xBu:
      uint64_t v37 = type metadata accessor for PressureTrend();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v6, v37);
      type metadata accessor for PressureComponentViewModel();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_33:
      swift_bridgeObjectRelease();
      goto LABEL_48;
    case 0xDu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 += *(int *)(type metadata accessor for SevereAlertComponentViewModel() + 36);
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for WeatherAlert.Prominence();
      goto LABEL_36;
    case 0xEu:
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for SunriseSunsetViewModel();
LABEL_36:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 8))(v6, HourPrecipitationChartViewModel);
      break;
    case 0xFu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_48;
    case 0x10u:
      swift_bridgeObjectRelease();
      uint64_t v38 = v6 + *(int *)(type metadata accessor for UVIndexComponentViewModel() + 28);
      uint64_t v39 = type metadata accessor for WeatherDescription();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v38, v39);
      goto LABEL_48;
    case 0x11u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_48;
    case 0x12u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v40 = v6 + *(int *)(type metadata accessor for WindComponentViewModel() + 68);
      uint64_t v41 = type metadata accessor for WindComponentCompassViewModel();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v40, v41);
LABEL_48:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  uint64_t v47 = a1 + *(int *)(v5 + 28);
  uint64_t v48 = type metadata accessor for LocationComponentAction(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v47, 1, v48))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v49 = type metadata accessor for URL();
        goto LABEL_55;
      case 1u:
        uint64_t v49 = type metadata accessor for WeatherMapOverlayKind();
        goto LABEL_55;
      case 2u:
        uint64_t v49 = type metadata accessor for DetailCondition();
        goto LABEL_55;
      case 4u:
        v47 += *(int *)(sub_10017DF08(&qword_100E66480) + 48);
        uint64_t v49 = type metadata accessor for Location();
LABEL_55:
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8))(v47, v49);
        break;
      default:
        break;
    }
  }
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + a2[6]);
  uint64_t v50 = a1 + a2[8];
  uint64_t v51 = type metadata accessor for Location.Identifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v51 - 8) + 8))(v50, v51);
  swift_release();
  swift_release();
  sub_10018F6E4();
  sub_10018F6E4();
  sub_10018F6E4();
  swift_release();
  uint64_t v52 = a1 + a2[18];
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v53 = type metadata accessor for LayoutDirection();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v53 - 8) + 8))(v52, v53);
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(a1 + a2[19]), *(unsigned char *)(a1 + a2[19] + 8));
  sub_10018F6D8(*(void *)(a1 + a2[20]), *(unsigned char *)(a1 + a2[20] + 8));
  uint64_t v54 = a1 + a2[21];
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v55 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v55 - 8) + 8))(v54, v55);
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(a1 + a2[22]), *(unsigned char *)(a1 + a2[22] + 8));
  sub_10018F6D8(*(void *)(a1 + a2[23]), *(unsigned char *)(a1 + a2[23] + 8));
  sub_10018F6D8(*(void *)(a1 + a2[24]), *(unsigned char *)(a1 + a2[24] + 8));
  sub_10018F6D8(*(void *)(a1 + a2[25]), *(unsigned char *)(a1 + a2[25] + 8));
  sub_10018F6D8(*(void *)(a1 + a2[26]), *(unsigned char *)(a1 + a2[26] + 8));
  sub_10018F6D8(*(void *)(a1 + a2[27]), *(unsigned char *)(a1 + a2[27] + 8));
  uint64_t v56 = a1 + a2[28];
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v57 = v56 + *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v58 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v58 - 8) + 8))(v57, v58);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_10018F6D8(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_10018F6E4()
{
  return swift_release();
}

uint64_t sub_10018F6EC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10018F704(uint64_t a1, uint64_t a2, int *a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  uint64_t v13 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v48 = v10;
  uint64_t v49 = v9;
  v10(a1 + a3[14], a2 + a3[14], v9);
  uint64_t v14 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = v16[1];
  void *v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = v16[3];
  v15[2] = v16[2];
  v15[3] = v18;
  uint64_t v19 = a3[17];
  char v20 = (void *)(a1 + v19);
  uint64_t v21 = (const void *)(a2 + v19);
  uint64_t v22 = type metadata accessor for CurrentLocation();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
  {
    uint64_t v23 = sub_10017DF08((uint64_t *)&unk_100EADD50);
    memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() > 2)
    {
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      uint64_t v24 = type metadata accessor for Location();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 16))(v20, v21, v24);
      swift_storeEnumTagMultiPayload();
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
  }
  uint64_t v25 = a3[19];
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = a2 + v25;
  uint64_t v28 = *(void **)v27;
  uint64_t v29 = *(void **)(v27 + 8);
  void *v26 = *(void *)v27;
  v26[1] = v29;
  int v30 = *(void **)(v27 + 16);
  uint64_t v31 = *(void **)(v27 + 24);
  v26[2] = v30;
  v26[3] = v31;
  uint64_t v32 = *(void **)(v27 + 32);
  uint64_t v33 = *(void **)(v27 + 40);
  v26[4] = v32;
  v26[5] = v33;
  uint64_t v34 = a3[21];
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  uint64_t v47 = a1 + v34;
  uint64_t v35 = a2 + v34;
  id v36 = v28;
  id v37 = v29;
  id v38 = v30;
  id v39 = v31;
  id v40 = v32;
  id v41 = v33;
  swift_bridgeObjectRetain();
  v48(v47, v35, v49);
  uint64_t v42 = a3[22];
  uint64_t v43 = a3[23];
  uint64_t v44 = a1 + v42;
  uint64_t v45 = a2 + v42;
  *(unsigned char *)uint64_t v44 = *(unsigned char *)v45;
  *(void *)(v44 + 8) = *(void *)(v45 + 8);
  *(unsigned char *)(a1 + v43) = *(unsigned char *)(a2 + v43);
  *(void *)(a1 + a3[24]) = *(void *)(a2 + a3[24]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for CalculateLocationComponentContainerBackgroundPinningOffsetViewModifier(uint64_t a1)
{
  return sub_10018F6D8(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t sub_10018FABC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  sub_100195B7C(v8, v9);
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v9;
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    *uint64_t v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  else
  {
    void *v15 = *v16;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = *(void *)v20;
  char v22 = *(unsigned char *)(v20 + 8);
  sub_100195B7C(*(void *)v20, v22);
  *(void *)uint64_t v19 = v21;
  *(unsigned char *)(v19 + 8) = v22;
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = *(void *)v25;
  char v27 = *(unsigned char *)(v25 + 8);
  sub_100195B7C(*(void *)v25, v27);
  *(void *)uint64_t v24 = v26;
  *(unsigned char *)(v24 + 8) = v27;
  uint64_t v28 = a3[10];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    *(unsigned char *)(v29 + 16) = *(unsigned char *)(v30 + 16);
    *(unsigned char *)(v29 + 17) = *(unsigned char *)(v30 + 17);
    *(unsigned char *)(v29 + 18) = *(unsigned char *)(v30 + 18);
    uint64_t v31 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v32 = v29 + v31;
    uint64_t v33 = v30 + v31;
    uint64_t v34 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  }
  else
  {
    *(void *)uint64_t v29 = *(void *)v30;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v35 = a3[11];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = *(void *)v37;
  char v39 = *(unsigned char *)(v37 + 8);
  sub_100195B7C(*(void *)v37, v39);
  *(void *)uint64_t v36 = v38;
  *(unsigned char *)(v36 + 8) = v39;
  uint64_t v40 = a3[12];
  id v41 = (void *)(a1 + v40);
  uint64_t v42 = (void *)(a2 + v40);
  sub_10017DF08(&qword_100E63BD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v43 = type metadata accessor for Font.Context();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
  }
  else
  {
    *id v41 = *v42;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v44 = a3[13];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = a2 + v44;
  uint64_t v47 = *(void *)v46;
  char v48 = *(unsigned char *)(v46 + 8);
  sub_100195B7C(*(void *)v46, v48);
  *(void *)uint64_t v45 = v47;
  *(unsigned char *)(v45 + 8) = v48;
  uint64_t v49 = a3[14];
  uint64_t v50 = a1 + v49;
  uint64_t v51 = a2 + v49;
  uint64_t v52 = *(void *)v51;
  uint64_t v53 = *(void *)(v51 + 8);
  uint64_t v54 = *(void *)(v51 + 16);
  uint64_t v55 = *(void *)(v51 + 24);
  uint64_t v110 = a1;
  char v56 = *(unsigned char *)(v51 + 32);
  sub_100190CD4(*(void *)v51, v53, v54, v55, v56);
  *(void *)uint64_t v50 = v52;
  *(void *)(v50 + 8) = v53;
  *(void *)(v50 + 16) = v54;
  *(void *)(v50 + 24) = v55;
  *(unsigned char *)(v50 + 32) = v56;
  uint64_t v57 = a3[15];
  uint64_t v58 = a1 + v57;
  uint64_t v59 = a2 + v57;
  uint64_t v60 = *(void *)v59;
  uint64_t v61 = *(void *)(v59 + 8);
  uint64_t v62 = *(void *)(v59 + 16);
  uint64_t v63 = *(void *)(v59 + 24);
  int v108 = a3;
  uint64_t v64 = *(void *)(v59 + 32);
  uint64_t v65 = *(void *)(v59 + 40);
  char v66 = *(unsigned char *)(v59 + 48);
  sub_100193D54(*(void *)v59, v61, v62, v63, v64, v65, v66);
  *(void *)uint64_t v58 = v60;
  *(void *)(v58 + 8) = v61;
  *(void *)(v58 + 16) = v62;
  *(void *)(v58 + 24) = v63;
  *(void *)(v58 + 32) = v64;
  *(void *)(v58 + 40) = v65;
  *(unsigned char *)(v58 + 48) = v66;
  uint64_t v67 = v108[16];
  uint64_t v68 = a1 + v67;
  uint64_t v69 = a2 + v67;
  uint64_t v70 = *(void *)(a2 + v67 + 8);
  *(void *)uint64_t v68 = *(void *)(a2 + v67);
  *(void *)(v68 + 8) = v70;
  uint64_t v71 = *(void *)(a2 + v67 + 16);
  uint64_t v72 = *(void *)(a2 + v67 + 24);
  uint64_t v73 = *(void *)(a2 + v67 + 32);
  uint64_t v74 = *(void *)(a2 + v67 + 40);
  LOBYTE(v64) = *(unsigned char *)(a2 + v67 + 48);
  swift_bridgeObjectRetain();
  sub_100193004(v71, v72, v73, v74, v64);
  *(void *)(v68 + 16) = v71;
  *(void *)(v68 + 24) = v72;
  *(void *)(v68 + 32) = v73;
  *(void *)(v68 + 40) = v74;
  *(unsigned char *)(v68 + 48) = v64;
  uint64_t v75 = *(void *)(v69 + 64);
  *(void *)(v68 + 56) = *(void *)(v69 + 56);
  *(void *)(v68 + 64) = v75;
  uint64_t v76 = *(void *)(v69 + 80);
  *(void *)(v68 + 72) = *(void *)(v69 + 72);
  *(void *)(v68 + 80) = v76;
  uint64_t v77 = *(void *)(v69 + 96);
  *(void *)(v68 + 88) = *(void *)(v69 + 88);
  *(void *)(v68 + 96) = v77;
  uint64_t v78 = *(void *)(v69 + 112);
  *(void *)(v68 + 104) = *(void *)(v69 + 104);
  *(void *)(v68 + 112) = v78;
  uint64_t v79 = *(void *)(v69 + 128);
  *(void *)(v68 + 120) = *(void *)(v69 + 120);
  *(void *)(v68 + 128) = v79;
  *(unsigned char *)(v68 + 136) = *(unsigned char *)(v69 + 136);
  *(_WORD *)(v68 + 137) = *(_WORD *)(v69 + 137);
  uint64_t v80 = *(void *)(v69 + 152);
  *(void *)(v68 + 144) = *(void *)(v69 + 144);
  *(void *)(v68 + 152) = v80;
  *(unsigned char *)(v68 + 160) = *(unsigned char *)(v69 + 160);
  *(unsigned char *)(v68 + 161) = *(unsigned char *)(v69 + 161);
  uint64_t v81 = v108[17];
  uint64_t v109 = a2;
  uint64_t v82 = a1 + v81;
  uint64_t v83 = v109 + v81;
  uint64_t v84 = *(void *)(v109 + v81);
  uint64_t v85 = *(void *)(v109 + v81 + 8);
  LOBYTE(v68) = *(unsigned char *)(v109 + v81 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100190CC4(v84, v85, v68);
  *(void *)uint64_t v82 = v84;
  *(void *)(v82 + 8) = v85;
  *(unsigned char *)(v82 + 16) = v68;
  *(void *)(v82 + 24) = *(void *)(v83 + 24);
  uint64_t v86 = v108[18];
  uint64_t v87 = v110 + v86;
  uint64_t v88 = v109 + v86;
  uint64_t v89 = *(void *)(v109 + v86);
  uint64_t v90 = *(void *)(v109 + v86 + 8);
  LOBYTE(v77) = *(unsigned char *)(v109 + v86 + 16);
  swift_bridgeObjectRetain();
  sub_100190CC4(v89, v90, v77);
  *(void *)uint64_t v87 = v89;
  *(void *)(v87 + 8) = v90;
  *(unsigned char *)(v87 + 16) = v77;
  *(void *)(v87 + 24) = *(void *)(v88 + 24);
  uint64_t v91 = v108[19];
  uint64_t v92 = v110 + v91;
  uint64_t v93 = v109 + v91;
  uint64_t v94 = *(void *)(v109 + v91 + 24);
  swift_bridgeObjectRetain();
  if (v94)
  {
    uint64_t v95 = *(void *)v93;
    uint64_t v96 = *(void *)(v93 + 8);
    char v97 = *(unsigned char *)(v93 + 16);
    sub_100190CC4(*(void *)v93, v96, v97);
    *(void *)uint64_t v92 = v95;
    *(void *)(v92 + 8) = v96;
    *(unsigned char *)(v92 + 16) = v97;
    *(void *)(v92 + 24) = *(void *)(v93 + 24);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v98 = *(_OWORD *)(v93 + 16);
    *(_OWORD *)uint64_t v92 = *(_OWORD *)v93;
    *(_OWORD *)(v92 + 16) = v98;
  }
  uint64_t v99 = v108[21];
  *(void *)(v110 + v108[20]) = *(void *)(v109 + v108[20]);
  uint64_t v100 = v110 + v99;
  uint64_t v101 = v109 + v99;
  uint64_t v102 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 16))(v100, v101, v102);
  uint64_t v103 = v108[23];
  *(void *)(v110 + v108[22]) = *(void *)(v109 + v108[22]);
  uint64_t v104 = v110 + v103;
  uint64_t v105 = v109 + v103;
  uint64_t v106 = sub_10017DF08(&qword_100E63BE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v106 - 8) + 16))(v104, v105, v106);
  return v110;
}

uint64_t sub_100190138(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = type metadata accessor for Location.Identifier();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  v6(a1, a2, v5);
  uint64_t v7 = type metadata accessor for LocationViewModel();
  uint64_t v8 = *(int *)(v7 + 20);
  char v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  if (_s7Weather24LocationCompositionStateOwet_0(a2 + v8, 1, v5))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v6((uint64_t)v9, (uint64_t)v10, v5);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v5);
  }
  uint64_t v12 = *(int *)(v7 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(a2 + v12 + 8);
  *(void *)uint64_t v13 = *(void *)(a2 + v12);
  *(void *)(v13 + 8) = v15;
  uint64_t v16 = *(void *)(a2 + v12 + 16);
  uint64_t v17 = *(void *)(a2 + v12 + 24);
  uint64_t v18 = *(void *)(a2 + v12 + 32);
  uint64_t v19 = *(void *)(a2 + v12 + 40);
  char v20 = *(unsigned char *)(a2 + v12 + 48);
  swift_bridgeObjectRetain();
  sub_100193004(v16, v17, v18, v19, v20);
  *(void *)(v13 + 16) = v16;
  *(void *)(v13 + 24) = v17;
  *(void *)(v13 + 32) = v18;
  *(void *)(v13 + 40) = v19;
  *(unsigned char *)(v13 + 48) = v20;
  uint64_t v21 = *(void *)(v14 + 64);
  *(void *)(v13 + 56) = *(void *)(v14 + 56);
  *(void *)(v13 + 64) = v21;
  uint64_t v22 = *(void *)(v14 + 80);
  *(void *)(v13 + 72) = *(void *)(v14 + 72);
  *(void *)(v13 + 80) = v22;
  uint64_t v23 = a1;
  uint64_t v24 = *(void *)(v14 + 96);
  *(void *)(v13 + 88) = *(void *)(v14 + 88);
  *(void *)(v13 + 96) = v24;
  uint64_t v25 = (int *)v7;
  uint64_t v26 = *(void *)(v14 + 112);
  *(void *)(v13 + 104) = *(void *)(v14 + 104);
  *(void *)(v13 + 112) = v26;
  uint64_t v27 = *(void *)(v14 + 128);
  *(void *)(v13 + 120) = *(void *)(v14 + 120);
  *(void *)(v13 + 128) = v27;
  *(unsigned char *)(v13 + 136) = *(unsigned char *)(v14 + 136);
  *(_WORD *)(v13 + 137) = *(_WORD *)(v14 + 137);
  uint64_t v28 = *(void *)(v14 + 152);
  *(void *)(v13 + 144) = *(void *)(v14 + 144);
  *(void *)(v13 + 152) = v28;
  *(unsigned char *)(v13 + 160) = *(unsigned char *)(v14 + 160);
  *(unsigned char *)(v13 + 161) = *(unsigned char *)(v14 + 161);
  *(void *)(v23 + v25[7]) = *(void *)(a2 + v25[7]);
  uint64_t v153 = v25;
  *(void *)(v23 + v25[8]) = *(void *)(a2 + v25[8]);
  uint64_t v29 = v25[9];
  uint64_t v156 = a2;
  uint64_t v157 = v23;
  uint64_t v30 = (unsigned char *)(v23 + v29);
  uint64_t v31 = (unsigned char *)(a2 + v29);
  uint64_t v32 = type metadata accessor for LocationFooterViewModel();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v33 = (int *)v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v32))
  {
    uint64_t v34 = sub_10017DF08(&qword_100E6DC18);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    uint64_t v35 = a3;
    uint64_t v36 = v156;
    uint64_t v37 = v157;
    uint64_t v38 = v153;
  }
  else
  {
    unsigned char *v30 = *v31;
    *(_WORD *)(v30 + 1) = *(_WORD *)(v31 + 1);
    uint64_t v39 = *((void *)v31 + 2);
    *((void *)v30 + 1) = *((void *)v31 + 1);
    *((void *)v30 + 2) = v39;
    uint64_t v40 = *(int *)(v32 + 32);
    id v41 = &v30[v40];
    uint64_t v42 = &v31[v40];
    uint64_t v43 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    uint64_t v44 = (uint64_t)v30;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
    {
      uint64_t v45 = sub_10017DF08(&qword_100E749B0);
      memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
    }
    uint64_t v46 = v33;
    uint64_t v47 = v33[9];
    uint64_t v48 = v44 + v47;
    uint64_t v49 = &v31[v47];
    *(unsigned char *)uint64_t v48 = v31[v47];
    *(void *)(v48 + 8) = *(void *)&v31[v47 + 8];
    uint64_t v50 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
    uint64_t v51 = v50[6];
    uint64_t v52 = (void *)(v48 + v51);
    uint64_t v53 = &v49[v51];
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v43))
    {
      uint64_t v54 = sub_10017DF08(&qword_100E749B0);
      memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, unsigned char *, uint64_t))(*(void *)(v43 - 8) + 16))(v52, v53, v43);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v43);
    }
    uint64_t v55 = v50[7];
    char v56 = (void *)(v48 + v55);
    uint64_t v57 = &v49[v55];
    uint64_t v58 = v57[1];
    *char v56 = *v57;
    v56[1] = v58;
    *(void *)(v48 + v50[8]) = *(void *)&v49[v50[8]];
    *(unsigned char *)(v44 + v46[10]) = v31[v46[10]];
    uint64_t v59 = v46[11];
    uint64_t v60 = (void *)(v44 + v59);
    uint64_t v61 = &v31[v59];
    uint64_t v62 = type metadata accessor for LocationOfInterest();
    swift_bridgeObjectRetain();
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62))
    {
      uint64_t v63 = sub_10017DF08(&qword_100E63508);
      memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, unsigned char *, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v62);
    }
    *(unsigned char *)(v44 + v46[12]) = v31[v46[12]];
    *(unsigned char *)(v44 + v46[13]) = v31[v46[13]];
    uint64_t v64 = v46[14];
    uint64_t v65 = (unsigned char *)(v44 + v64);
    char v66 = &v31[v64];
    uint64_t v67 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, (uint64_t)v67))
    {
      uint64_t v68 = sub_10017DF08(&qword_100E6DC10);
      memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
    }
    else
    {
      *uint64_t v65 = *v66;
      uint64_t v69 = v67[5];
      uint64_t v70 = &v65[v69];
      uint64_t v71 = &v66[v69];
      uint64_t v72 = type metadata accessor for Location();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v72 - 8) + 16))(v70, v71, v72);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v62 - 8) + 16))(&v65[v67[6]], &v66[v67[6]], v62);
      v65[v67[7]] = v66[v67[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 0, 1, (uint64_t)v67);
    }
    uint64_t v36 = v156;
    uint64_t v38 = v153;
    _s7Weather24LocationCompositionStateOwst_0(v44, 0, 1, (uint64_t)v46);
    uint64_t v35 = a3;
    uint64_t v37 = v157;
  }
  *(unsigned char *)(v37 + v38[10]) = *(unsigned char *)(v36 + v38[10]);
  *(unsigned char *)(v37 + v38[11]) = *(unsigned char *)(v36 + v38[11]);
  *(unsigned char *)(v37 + v38[12]) = *(unsigned char *)(v36 + v38[12]);
  *(unsigned char *)(v37 + v38[13]) = *(unsigned char *)(v36 + v38[13]);
  *(unsigned char *)(v37 + v38[14]) = *(unsigned char *)(v36 + v38[14]);
  uint64_t v73 = v38[15];
  uint64_t v74 = *(void **)(v36 + v73);
  *(void *)(v37 + v73) = v74;
  *(unsigned char *)(v37 + v38[16]) = *(unsigned char *)(v36 + v38[16]);
  *(unsigned char *)(v37 + v38[17]) = *(unsigned char *)(v36 + v38[17]);
  *(unsigned char *)(v37 + v38[18]) = *(unsigned char *)(v36 + v38[18]);
  uint64_t v75 = v38[19];
  uint64_t v76 = v37 + v75;
  uint64_t v77 = v36 + v75;
  uint64_t v78 = type metadata accessor for Date();
  uint64_t v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 16);
  id v80 = v74;
  v79(v76, v77, v78);
  uint64_t v81 = v38[20];
  uint64_t v82 = (void *)(v37 + v81);
  uint64_t v83 = (const void *)(v36 + v81);
  uint64_t v84 = type metadata accessor for ForegroundEffect();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, v84))
  {
    uint64_t v85 = sub_10017DF08(&qword_100E65FA8);
    memcpy(v82, v83, *(void *)(*(void *)(v85 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v84 - 8) + 16))(v82, v83, v84);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v82, 0, 1, v84);
  }
  *(unsigned char *)(v37 + v38[21]) = *(unsigned char *)(v36 + v38[21]);
  *(void *)(v37 + v38[22]) = *(void *)(v36 + v38[22]);
  *(unsigned char *)(v37 + v38[23]) = *(unsigned char *)(v36 + v38[23]);
  uint64_t v86 = v38[24];
  uint64_t v87 = v37 + v86;
  uint64_t v88 = v36 + v86;
  uint64_t v89 = type metadata accessor for LocationEntity();
  uint64_t v90 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 16);
  swift_bridgeObjectRetain();
  v90(v87, v88, v89);
  uint64_t v91 = v35[5];
  uint64_t v92 = v37 + v91;
  uint64_t v93 = v36 + v91;
  uint64_t v94 = *(void *)(v36 + v91);
  uint64_t v95 = *(void *)(v36 + v91 + 8);
  LOBYTE(v88) = *(unsigned char *)(v36 + v91 + 16);
  sub_100190CC4(v94, v95, v88);
  *(void *)uint64_t v92 = v94;
  *(void *)(v92 + 8) = v95;
  *(unsigned char *)(v92 + 16) = v88;
  *(void *)(v92 + 24) = *(void *)(v93 + 24);
  uint64_t v96 = v35[6];
  uint64_t v97 = v37 + v96;
  uint64_t v98 = v36 + v96;
  uint64_t v99 = *(void *)(v36 + v96);
  uint64_t v100 = *(void *)(v36 + v96 + 8);
  LOBYTE(v88) = *(unsigned char *)(v36 + v96 + 16);
  swift_bridgeObjectRetain();
  sub_100190CC4(v99, v100, v88);
  *(void *)uint64_t v97 = v99;
  *(void *)(v97 + 8) = v100;
  *(unsigned char *)(v97 + 16) = v88;
  *(void *)(v97 + 24) = *(void *)(v98 + 24);
  uint64_t v101 = v35[7];
  uint64_t v102 = v37 + v101;
  uint64_t v103 = v36 + v101;
  uint64_t v104 = *(void *)(v36 + v101 + 24);
  swift_bridgeObjectRetain();
  if (v104)
  {
    uint64_t v105 = *(void *)v103;
    uint64_t v106 = *(void *)(v103 + 8);
    char v107 = *(unsigned char *)(v103 + 16);
    sub_100190CC4(*(void *)v103, v106, v107);
    *(void *)uint64_t v102 = v105;
    *(void *)(v102 + 8) = v106;
    *(unsigned char *)(v102 + 16) = v107;
    *(void *)(v102 + 24) = *(void *)(v103 + 24);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v108 = *(_OWORD *)(v103 + 16);
    *(_OWORD *)uint64_t v102 = *(_OWORD *)v103;
    *(_OWORD *)(v102 + 16) = v108;
  }
  uint64_t v109 = v35[8];
  uint64_t v110 = v37 + v109;
  uint64_t v111 = v36 + v109;
  uint64_t v112 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 16))(v110, v111, v112);
  uint64_t v113 = v35[9];
  uint64_t v114 = v37 + v113;
  uint64_t v115 = v36 + v113;
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)uint64_t v114 = *(_OWORD *)v115;
    *(unsigned char *)(v114 + 16) = *(unsigned char *)(v115 + 16);
    *(unsigned char *)(v114 + 17) = *(unsigned char *)(v115 + 17);
    *(unsigned char *)(v114 + 18) = *(unsigned char *)(v115 + 18);
    uint64_t v116 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v117 = v114 + v116;
    uint64_t v118 = v115 + v116;
    uint64_t v119 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v119 - 8) + 16))(v117, v118, v119);
  }
  else
  {
    *(void *)uint64_t v114 = *(void *)v115;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v120 = v35[10];
  uint64_t v121 = v37 + v120;
  uint64_t v122 = v36 + v120;
  uint64_t v123 = *(void *)v122;
  uint64_t v124 = *(void *)(v122 + 8);
  uint64_t v125 = *(void *)(v122 + 16);
  uint64_t v126 = *(void *)(v122 + 24);
  uint64_t v127 = *(void *)(v122 + 32);
  uint64_t v128 = *(void *)(v122 + 40);
  uint64_t v129 = *(void *)(v122 + 48);
  uint64_t v130 = *(void *)(v122 + 56);
  uint64_t v131 = *(void *)(v122 + 64);
  char v154 = *(unsigned char *)(v122 + 72);
  sub_1001910C8(*(void *)v122, v124, v125, v126, v127, v128, v129, v130, v131, v154);
  *(void *)uint64_t v121 = v123;
  *(void *)(v121 + 8) = v124;
  *(void *)(v121 + 16) = v125;
  *(void *)(v121 + 24) = v126;
  *(void *)(v121 + 32) = v127;
  *(void *)(v121 + 40) = v128;
  *(void *)(v121 + 48) = v129;
  *(void *)(v121 + 56) = v130;
  *(void *)(v121 + 64) = v131;
  *(unsigned char *)(v121 + 72) = v154;
  uint64_t v132 = a3[11];
  uint64_t v133 = v157 + v132;
  uint64_t v134 = v156 + v132;
  uint64_t v135 = *(void *)v134;
  LOBYTE(v124) = *(unsigned char *)(v134 + 8);
  sub_100195B7C(*(void *)v134, v124);
  *(void *)uint64_t v133 = v135;
  *(unsigned char *)(v133 + 8) = v124;
  uint64_t v136 = a3[12];
  uint64_t v137 = v157 + v136;
  uint64_t v138 = v156 + v136;
  uint64_t v139 = *(void *)v138;
  uint64_t v140 = *(void *)(v138 + 8);
  uint64_t v141 = *(void *)(v138 + 16);
  uint64_t v142 = *(void *)(v138 + 24);
  LOBYTE(v127) = *(unsigned char *)(v138 + 32);
  sub_100190CD4(*(void *)v138, v140, v141, v142, v127);
  *(void *)uint64_t v137 = v139;
  *(void *)(v137 + 8) = v140;
  *(void *)(v137 + 16) = v141;
  *(void *)(v137 + 24) = v142;
  *(unsigned char *)(v137 + 32) = v127;
  uint64_t v143 = a3[13];
  uint64_t v144 = (void *)(v157 + v143);
  uint64_t v145 = (void *)(v156 + v143);
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v146 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v146 - 8) + 16))(v144, v145, v146);
  }
  else
  {
    void *v144 = *v145;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v147 = a3[14];
  uint64_t v148 = v157 + v147;
  uint64_t v149 = v156 + v147;
  uint64_t v150 = *(void *)v149;
  char v151 = *(unsigned char *)(v149 + 8);
  sub_100195B7C(*(void *)v149, v151);
  *(void *)uint64_t v148 = v150;
  *(unsigned char *)(v148 + 8) = v151;
  return v157;
}

uint64_t sub_100190CC4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_100190CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

void *sub_100190CE0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[9];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for PinnedScrollableViews();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[10];
  uint64_t v11 = a3[11];
  uint64_t v12 = (void *)((char *)a1 + v10);
  uint64_t v13 = (void *)((char *)a2 + v10);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = (char *)a1 + v11;
  uint64_t v16 = *(void *)((char *)a2 + v11);
  LOBYTE(v8) = *((unsigned char *)a2 + v11 + 8);
  swift_retain();
  sub_100195B7C(v16, (char)v8);
  *(void *)uint64_t v15 = v16;
  v15[8] = (char)v8;
  uint64_t v17 = a3[12];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = *(void *)v19;
  uint64_t v21 = *((void *)v19 + 1);
  uint64_t v22 = *((void *)v19 + 2);
  uint64_t v23 = *((void *)v19 + 3);
  uint64_t v24 = *((void *)v19 + 4);
  uint64_t v25 = *((void *)v19 + 5);
  uint64_t v26 = *((void *)v19 + 6);
  uint64_t v27 = *((void *)v19 + 7);
  uint64_t v29 = *((void *)v19 + 8);
  char v30 = v19[72];
  sub_1001910C8(*(void *)v19, v21, v22, v23, v24, v25, v26, v27, v29, v30);
  *(void *)uint64_t v18 = v20;
  *((void *)v18 + 1) = v21;
  *((void *)v18 + 2) = v22;
  *((void *)v18 + 3) = v23;
  *((void *)v18 + 4) = v24;
  *((void *)v18 + 5) = v25;
  *((void *)v18 + 6) = v26;
  *((void *)v18 + 7) = v27;
  *((void *)v18 + 8) = v29;
  v18[72] = v30;
  return a1;
}

uint64_t sub_100190E38(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v36 = *(void *)(a2 + 64);
  char v37 = *(unsigned char *)(a2 + 72);
  sub_1001910C8(*(void *)a2, v6, v7, v8, v9, v10, v12, v11, v36, v37);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v36;
  *(unsigned char *)(a1 + 72) = v37;
  uint64_t v13 = a3[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  uint64_t v16 = type metadata accessor for Location.Identifier();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
  swift_bridgeObjectRetain();
  v17(v14, v15, v16);
  uint64_t v18 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = a3[9];
  uint64_t v23 = a3[10];
  uint64_t v24 = (void *)(a1 + v22);
  uint64_t v25 = (void *)(a2 + v22);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  uint64_t v27 = (void *)(a1 + v23);
  uint64_t v28 = (void *)(a2 + v23);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v29 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  }
  else
  {
    void *v27 = *v28;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v30 = a3[11];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (uint64_t *)(a2 + v30);
  uint64_t v33 = *v32;
  uint64_t v34 = v32[1];
  *uint64_t v31 = v33;
  v31[1] = v34;
  swift_retain();
  return a1;
}

uint64_t _s7Weather49DetermineLocationComponentHeaderLineLimitModifierVwcp_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100181940(*(void *)a2, a2, a3, a4, a5, a6, a7, a8, *(void *)(a2 + 64), *(unsigned char *)(a2 + 72));
  sub_10019D2EC();
  *(unsigned char *)(a1 + 72) = v10;
  return a1;
}

uint64_t sub_1001910C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  if ((a10 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1001910F0()
{
  return sub_1001522B4();
}

uint64_t sub_10019111C()
{
  return String.hash(into:)();
}

uint64_t sub_100191144()
{
  return v0;
}

uint64_t sub_10019115C()
{
  return type metadata accessor for URL();
}

void sub_10019117C()
{
}

uint64_t sub_100191184(uint64_t result, uint64_t a2)
{
  *(void *)(v2 - 400) = result;
  *(void *)(v2 - 408) = a2;
  return result;
}

BOOL sub_100191198()
{
  os_log_type_t v2 = *(_DWORD *)(v0 - 184);
  uint64_t v3 = *(NSObject **)(v0 - 176);
  return os_log_type_enabled(v3, v2);
}

uint64_t sub_1001911C4()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_1001911FC()
{
  return v0;
}

uint64_t sub_100191210()
{
  return v0;
}

uint64_t sub_100191220(uint64_t a1)
{
  uint64_t v4 = v1 + *(int *)(a1 + 20);
  return _s7Weather24LocationCompositionStateOwet_0(v4, 1, v2);
}

uint64_t sub_100191248(uint64_t a1)
{
  *(void *)(v1 - 104) = a1;
  return v1 - 104;
}

uint64_t sub_100191270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 192) = (char *)&a9 - v9;
  return 0;
}

uint64_t sub_100191288()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1001912A4()
{
  return v0;
}

uint64_t sub_1001912BC()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_1001912D8(uint64_t result, uint64_t a2)
{
  *(void *)(v2 - 176) = result;
  *(void *)(v2 - 240) = a2;
  return result;
}

uint64_t sub_1001912E4(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 416);
  uint64_t v4 = *(void (**)(void))(v1 - 192);
  return sub_100178CEC(a1, v3, v4);
}

uint64_t sub_100191304(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Location.Identifier();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = (int *)type metadata accessor for LocationViewModel();
  uint64_t v7 = a1 + v6[5];
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v4)) {
    v5(v7, v4);
  }
  uint64_t v8 = a1 + v6[6];
  swift_bridgeObjectRelease();
  sub_100191D78(*(void *)(v8 + 16), *(void *)(v8 + 24), *(void *)(v8 + 32), *(void *)(v8 + 40), *(unsigned char *)(v8 + 48));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v9 = a1 + v6[9];
  uint64_t v10 = (int *)type metadata accessor for LocationFooterViewModel();
  if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, (uint64_t)v10))
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = v9 + v10[8];
    uint64_t v12 = type metadata accessor for URL();
    if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
    }
    uint64_t v13 = v9 + v10[9];
    swift_bridgeObjectRelease();
    uint64_t v14 = v13 + *(int *)(type metadata accessor for LearnMoreAttributorViewModel() + 24);
    if (!_s7Weather24LocationCompositionStateOwet_0(v14, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v14, v12);
    }
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v15 = v9 + v10[11];
    uint64_t v16 = type metadata accessor for LocationOfInterest();
    if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
    }
    uint64_t v17 = v9 + v10[14];
    uint64_t v18 = type metadata accessor for HomeAndWorkRefinementRowViewModel();
    if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v18))
    {
      uint64_t v19 = v17 + *(int *)(v18 + 20);
      uint64_t v20 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v17 + *(int *)(v18 + 24), v16);
    }
  }

  uint64_t v21 = a1 + v6[19];
  uint64_t v22 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + v6[20];
  uint64_t v24 = type metadata accessor for ForegroundEffect();
  if (!_s7Weather24LocationCompositionStateOwet_0(v23, 1, v24)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  }
  swift_bridgeObjectRelease();
  uint64_t v25 = a1 + v6[24];
  uint64_t v26 = type metadata accessor for LocationEntity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  sub_100191924(*(void *)(a1 + a2[5]), *(void *)(a1 + a2[5] + 8), *(unsigned char *)(a1 + a2[5] + 16));
  swift_bridgeObjectRelease();
  sub_100191924(*(void *)(a1 + a2[6]), *(void *)(a1 + a2[6] + 8), *(unsigned char *)(a1 + a2[6] + 16));
  swift_bridgeObjectRelease();
  uint64_t v27 = a1 + a2[7];
  if (*(void *)(v27 + 24))
  {
    sub_100191924(*(void *)v27, *(void *)(v27 + 8), *(unsigned char *)(v27 + 16));
    swift_bridgeObjectRelease();
  }
  uint64_t v28 = a1 + a2[8];
  uint64_t v29 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
  uint64_t v30 = a1 + a2[9];
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v31 = v30 + *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v32 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
  }
  else
  {
    swift_release();
  }
  uint64_t v33 = a1 + a2[10];
  sub_10018CCC4(*(void *)v33, *(void *)(v33 + 8), *(void *)(v33 + 16), *(void *)(v33 + 24), *(void *)(v33 + 32), *(void *)(v33 + 40), *(void *)(v33 + 48), *(void *)(v33 + 56), *(void *)(v33 + 64), *(unsigned char *)(v33 + 72));
  sub_10018F6D8(*(void *)(a1 + a2[11]), *(unsigned char *)(a1 + a2[11] + 8));
  uint64_t v34 = a1 + a2[12];
  sub_100191934(*(void *)v34, *(void *)(v34 + 8), *(void *)(v34 + 16), *(void *)(v34 + 24), *(unsigned char *)(v34 + 32));
  uint64_t v35 = a1 + a2[13];
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v36 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v35, v36);
  }
  else
  {
    swift_release();
  }
  uint64_t v37 = a1 + a2[14];
  uint64_t v38 = *(void *)v37;
  char v39 = *(unsigned char *)(v37 + 8);

  return sub_10018F6D8(v38, v39);
}

uint64_t sub_100191924(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100191934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_100191940(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Location.Identifier();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(a1, v2);
  uint64_t v4 = (int *)type metadata accessor for LocationViewModel();
  uint64_t v5 = a1 + v4[5];
  if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v2)) {
    v3(v5, v2);
  }
  uint64_t v6 = a1 + v4[6];
  swift_bridgeObjectRelease();
  sub_100191D78(*(void *)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), *(unsigned char *)(v6 + 48));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v7 = a1 + v4[9];
  uint64_t v8 = (int *)type metadata accessor for LocationFooterViewModel();
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, (uint64_t)v8))
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = v7 + v8[8];
    uint64_t v10 = type metadata accessor for URL();
    if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    }
    uint64_t v11 = v7 + v8[9];
    swift_bridgeObjectRelease();
    uint64_t v12 = v11 + *(int *)(type metadata accessor for LearnMoreAttributorViewModel() + 24);
    if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v12, v10);
    }
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v13 = v7 + v8[11];
    uint64_t v14 = type metadata accessor for LocationOfInterest();
    if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v14)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
    }
    uint64_t v15 = v7 + v8[14];
    uint64_t v16 = type metadata accessor for HomeAndWorkRefinementRowViewModel();
    if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v16))
    {
      uint64_t v17 = v15 + *(int *)(v16 + 20);
      uint64_t v18 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v15 + *(int *)(v16 + 24), v14);
    }
  }

  uint64_t v19 = a1 + v4[19];
  uint64_t v20 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + v4[20];
  uint64_t v22 = type metadata accessor for ForegroundEffect();
  if (!_s7Weather24LocationCompositionStateOwet_0(v21, 1, v22)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  }
  swift_bridgeObjectRelease();
  uint64_t v23 = a1 + v4[24];
  uint64_t v24 = type metadata accessor for LocationEntity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);

  return swift_release();
}

uint64_t sub_100191D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    if (a5 != 1) {
      return result;
    }
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

void *sub_100191DD8(void *a1, void *a2, int *a3)
{
  sub_10017DF08(&qword_100EAA740);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ScenePhase();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *((void *)v9 + 1);
  char v12 = v9[16];
  sub_100195B88();
  *(void *)uint64_t v8 = v10;
  *((void *)v8 + 1) = v11;
  v8[16] = v12;
  uint64_t v106 = a3;
  uint64_t v13 = a3[6];
  long long v108 = a1;
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for Location.Identifier();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
  v17(v14, v15, v16);
  uint64_t v18 = type metadata accessor for LocationViewModel();
  uint64_t v19 = *(int *)(v18 + 20);
  uint64_t v20 = &v14[v19];
  uint64_t v105 = v15;
  uint64_t v21 = &v15[v19];
  char v107 = a2;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v16))
  {
    uint64_t v22 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    v17(v20, v21, v16);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v16);
  }
  uint64_t v23 = *(int *)(v18 + 24);
  uint64_t v24 = (int *)v18;
  uint64_t v25 = &v14[v23];
  uint64_t v26 = &v105[v23];
  uint64_t v27 = *(void *)&v105[v23 + 8];
  *(void *)uint64_t v25 = *(void *)&v105[v23];
  *((void *)v25 + 1) = v27;
  uint64_t v28 = *(void *)&v105[v23 + 16];
  uint64_t v29 = *(void *)&v105[v23 + 24];
  uint64_t v30 = *(void *)&v105[v23 + 32];
  uint64_t v31 = *(void *)&v105[v23 + 40];
  char v32 = v105[v23 + 48];
  swift_bridgeObjectRetain();
  sub_100193004(v28, v29, v30, v31, v32);
  *((void *)v25 + 2) = v28;
  *((void *)v25 + 3) = v29;
  *((void *)v25 + 4) = v30;
  *((void *)v25 + 5) = v31;
  v25[48] = v32;
  uint64_t v33 = *((void *)v26 + 8);
  *((void *)v25 + 7) = *((void *)v26 + 7);
  *((void *)v25 + 8) = v33;
  uint64_t v34 = *((void *)v26 + 10);
  *((void *)v25 + 9) = *((void *)v26 + 9);
  *((void *)v25 + 10) = v34;
  uint64_t v35 = *((void *)v26 + 12);
  *((void *)v25 + 11) = *((void *)v26 + 11);
  *((void *)v25 + 12) = v35;
  uint64_t v36 = *((void *)v26 + 14);
  *((void *)v25 + 13) = *((void *)v26 + 13);
  *((void *)v25 + 14) = v36;
  uint64_t v37 = *((void *)v26 + 16);
  *((void *)v25 + 15) = *((void *)v26 + 15);
  *((void *)v25 + 16) = v37;
  v25[136] = v26[136];
  *(_WORD *)(v25 + 137) = *(_WORD *)(v26 + 137);
  uint64_t v38 = *((void *)v26 + 19);
  *((void *)v25 + 18) = *((void *)v26 + 18);
  *((void *)v25 + 19) = v38;
  v25[160] = v26[160];
  v25[161] = v26[161];
  *(void *)&v14[v24[7]] = *(void *)&v105[v24[7]];
  *(void *)&v14[v24[8]] = *(void *)&v105[v24[8]];
  uint64_t v103 = v14;
  uint64_t v104 = v24;
  uint64_t v39 = v24[9];
  uint64_t v40 = &v14[v39];
  id v41 = &v105[v39];
  uint64_t v42 = type metadata accessor for LocationFooterViewModel();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v43 = (int *)v42;
  swift_bridgeObjectRetain();
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v42))
  {
    uint64_t v44 = sub_10017DF08(&qword_100E6DC18);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
    uint64_t v45 = v103;
    uint64_t v46 = v104;
  }
  else
  {
    *uint64_t v40 = *v41;
    *(_WORD *)(v40 + 1) = *(_WORD *)(v41 + 1);
    uint64_t v47 = *((void *)v41 + 2);
    *((void *)v40 + 1) = *((void *)v41 + 1);
    *((void *)v40 + 2) = v47;
    uint64_t v48 = *(int *)(v42 + 32);
    uint64_t v49 = &v40[v48];
    uint64_t v50 = &v41[v48];
    uint64_t v51 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v51))
    {
      uint64_t v52 = sub_10017DF08(&qword_100E749B0);
      memcpy(v49, v50, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v51);
    }
    uint64_t v102 = (uint64_t)v43;
    uint64_t v53 = v43[9];
    uint64_t v54 = &v40[v53];
    uint64_t v55 = &v41[v53];
    *uint64_t v54 = v41[v53];
    *((void *)v54 + 1) = *(void *)&v41[v53 + 8];
    char v56 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
    uint64_t v57 = v56[6];
    uint64_t v58 = &v54[v57];
    uint64_t v59 = &v55[v57];
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v51))
    {
      uint64_t v60 = sub_10017DF08(&qword_100E749B0);
      memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v58, v59, v51);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v51);
    }
    uint64_t v61 = v56[7];
    uint64_t v62 = &v54[v61];
    uint64_t v63 = &v55[v61];
    uint64_t v64 = *((void *)v63 + 1);
    *(void *)uint64_t v62 = *(void *)v63;
    *((void *)v62 + 1) = v64;
    *(void *)&v54[v56[8]] = *(void *)&v55[v56[8]];
    v40[v43[10]] = v41[v43[10]];
    uint64_t v65 = v43[11];
    char v66 = &v40[v65];
    uint64_t v67 = &v41[v65];
    uint64_t v68 = type metadata accessor for LocationOfInterest();
    swift_bridgeObjectRetain();
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, v68))
    {
      uint64_t v69 = sub_10017DF08(&qword_100E63508);
      memcpy(v66, v67, *(void *)(*(void *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v66, v67, v68);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v66, 0, 1, v68);
    }
    v40[v43[12]] = v41[v43[12]];
    v40[v43[13]] = v41[v43[13]];
    uint64_t v70 = v43[14];
    uint64_t v71 = &v40[v70];
    uint64_t v72 = &v41[v70];
    uint64_t v73 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v72, 1, (uint64_t)v73))
    {
      uint64_t v74 = sub_10017DF08(&qword_100E6DC10);
      memcpy(v71, v72, *(void *)(*(void *)(v74 - 8) + 64));
    }
    else
    {
      *uint64_t v71 = *v72;
      uint64_t v75 = v73[5];
      uint64_t v76 = &v71[v75];
      uint64_t v77 = &v72[v75];
      uint64_t v78 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16))(v76, v77, v78);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(&v71[v73[6]], &v72[v73[6]], v68);
      v71[v73[7]] = v72[v73[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v71, 0, 1, (uint64_t)v73);
    }
    uint64_t v45 = v103;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v102);
    uint64_t v46 = v104;
  }
  v45[v46[10]] = v105[v46[10]];
  v45[v46[11]] = v105[v46[11]];
  v45[v46[12]] = v105[v46[12]];
  v45[v46[13]] = v105[v46[13]];
  v45[v46[14]] = v105[v46[14]];
  uint64_t v79 = v46[15];
  id v80 = *(void **)&v105[v79];
  *(void *)&v45[v79] = v80;
  v45[v46[16]] = v105[v46[16]];
  v45[v46[17]] = v105[v46[17]];
  v45[v46[18]] = v105[v46[18]];
  uint64_t v81 = v46[19];
  uint64_t v82 = &v45[v81];
  uint64_t v83 = &v105[v81];
  uint64_t v84 = type metadata accessor for Date();
  uint64_t v85 = *(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16);
  id v86 = v80;
  v85(v82, v83, v84);
  uint64_t v87 = v46[20];
  uint64_t v88 = &v45[v87];
  uint64_t v89 = &v105[v87];
  uint64_t v90 = type metadata accessor for ForegroundEffect();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v89, 1, v90))
  {
    uint64_t v91 = sub_10017DF08(&qword_100E65FA8);
    memcpy(v88, v89, *(void *)(*(void *)(v91 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16))(v88, v89, v90);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v88, 0, 1, v90);
  }
  v45[v46[21]] = v105[v46[21]];
  *(void *)&v45[v46[22]] = *(void *)&v105[v46[22]];
  v45[v46[23]] = v105[v46[23]];
  uint64_t v92 = v46[24];
  uint64_t v93 = &v45[v92];
  uint64_t v94 = &v105[v92];
  uint64_t v95 = type metadata accessor for LocationEntity();
  uint64_t v96 = *(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16);
  swift_bridgeObjectRetain();
  v96(v93, v94, v95);
  uint64_t v97 = v106[8];
  *(_OWORD *)((char *)v108 + v106[7]) = *(_OWORD *)((char *)v107 + v106[7]);
  uint64_t v98 = (void *)((char *)v108 + v97);
  uint64_t v99 = (void *)((char *)v107 + v97);
  uint64_t v100 = v99[1];
  *uint64_t v98 = *v99;
  v98[1] = v100;
  *(void *)((char *)v108 + v106[9]) = *(void *)((char *)v107 + v106[9]);
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  return v108;
}

uint64_t sub_100192710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Location.Identifier();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  v6(a1, a2, v5);
  uint64_t v7 = (int *)type metadata accessor for LocationViewModel();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  if (_s7Weather24LocationCompositionStateOwet_0(a2 + v8, 1, v5))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v6((uint64_t)v9, (uint64_t)v10, v5);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v5);
  }
  uint64_t v12 = v7[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(a2 + v12 + 8);
  *(void *)uint64_t v13 = *(void *)(a2 + v12);
  *(void *)(v13 + 8) = v15;
  uint64_t v16 = *(void *)(a2 + v12 + 16);
  uint64_t v17 = *(void *)(a2 + v12 + 24);
  uint64_t v18 = *(void *)(a2 + v12 + 32);
  uint64_t v19 = *(void *)(a2 + v12 + 40);
  char v20 = *(unsigned char *)(a2 + v12 + 48);
  swift_bridgeObjectRetain();
  sub_100193004(v16, v17, v18, v19, v20);
  *(void *)(v13 + 16) = v16;
  *(void *)(v13 + 24) = v17;
  *(void *)(v13 + 32) = v18;
  *(void *)(v13 + 40) = v19;
  *(unsigned char *)(v13 + 48) = v20;
  uint64_t v21 = *(void *)(v14 + 64);
  *(void *)(v13 + 56) = *(void *)(v14 + 56);
  *(void *)(v13 + 64) = v21;
  uint64_t v22 = *(void *)(v14 + 80);
  *(void *)(v13 + 72) = *(void *)(v14 + 72);
  *(void *)(v13 + 80) = v22;
  uint64_t v23 = *(void *)(v14 + 96);
  *(void *)(v13 + 88) = *(void *)(v14 + 88);
  *(void *)(v13 + 96) = v23;
  uint64_t v24 = *(void *)(v14 + 112);
  *(void *)(v13 + 104) = *(void *)(v14 + 104);
  *(void *)(v13 + 112) = v24;
  uint64_t v25 = *(void *)(v14 + 128);
  *(void *)(v13 + 120) = *(void *)(v14 + 120);
  *(void *)(v13 + 128) = v25;
  *(unsigned char *)(v13 + 136) = *(unsigned char *)(v14 + 136);
  *(_WORD *)(v13 + 137) = *(_WORD *)(v14 + 137);
  uint64_t v26 = *(void *)(v14 + 152);
  *(void *)(v13 + 144) = *(void *)(v14 + 144);
  *(void *)(v13 + 152) = v26;
  *(unsigned char *)(v13 + 160) = *(unsigned char *)(v14 + 160);
  *(unsigned char *)(v13 + 161) = *(unsigned char *)(v14 + 161);
  *(void *)(a1 + v7[7]) = *(void *)(a2 + v7[7]);
  *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
  uint64_t v94 = a2;
  uint64_t v95 = v7;
  uint64_t v27 = v7[9];
  uint64_t v28 = a1;
  uint64_t v29 = (unsigned char *)(a1 + v27);
  uint64_t v30 = (unsigned char *)(a2 + v27);
  uint64_t v31 = type metadata accessor for LocationFooterViewModel();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v32 = (int *)v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31))
  {
    uint64_t v33 = sub_10017DF08(&qword_100E6DC18);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    uint64_t v34 = a2;
    uint64_t v35 = v28;
  }
  else
  {
    *uint64_t v29 = *v30;
    *(_WORD *)(v29 + 1) = *(_WORD *)(v30 + 1);
    uint64_t v36 = *((void *)v30 + 2);
    *((void *)v29 + 1) = *((void *)v30 + 1);
    *((void *)v29 + 2) = v36;
    uint64_t v37 = *(int *)(v31 + 32);
    uint64_t v38 = v29;
    uint64_t v39 = &v29[v37];
    uint64_t v40 = &v30[v37];
    uint64_t v41 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
    {
      uint64_t v42 = sub_10017DF08(&qword_100E749B0);
      memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
    }
    uint64_t v35 = v28;
    uint64_t v93 = v32;
    uint64_t v43 = v32[9];
    uint64_t v44 = (uint64_t)v38;
    uint64_t v45 = &v38[v43];
    uint64_t v46 = &v30[v43];
    *uint64_t v45 = v30[v43];
    *((void *)v45 + 1) = *(void *)&v30[v43 + 8];
    uint64_t v47 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
    uint64_t v48 = v47[6];
    uint64_t v49 = &v45[v48];
    uint64_t v50 = &v46[v48];
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v41))
    {
      uint64_t v51 = sub_10017DF08(&qword_100E749B0);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v41 - 8) + 16))(v49, v50, v41);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v41);
    }
    uint64_t v52 = v47[7];
    uint64_t v53 = &v45[v52];
    uint64_t v54 = &v46[v52];
    uint64_t v55 = v54[1];
    *uint64_t v53 = *v54;
    v53[1] = v55;
    *(void *)&v45[v47[8]] = *(void *)&v46[v47[8]];
    v38[v93[10]] = v30[v93[10]];
    uint64_t v56 = v93[11];
    uint64_t v57 = &v38[v56];
    uint64_t v58 = &v30[v56];
    uint64_t v59 = type metadata accessor for LocationOfInterest();
    swift_bridgeObjectRetain();
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v59))
    {
      uint64_t v60 = sub_10017DF08(&qword_100E63508);
      memcpy(v57, v58, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 0, 1, v59);
    }
    v38[v93[12]] = v30[v93[12]];
    v38[v93[13]] = v30[v93[13]];
    uint64_t v61 = v93[14];
    uint64_t v62 = &v38[v61];
    uint64_t v63 = &v30[v61];
    uint64_t v64 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, (uint64_t)v64))
    {
      uint64_t v65 = sub_10017DF08(&qword_100E6DC10);
      memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      *uint64_t v62 = *v63;
      uint64_t v66 = v64[5];
      uint64_t v67 = &v62[v66];
      uint64_t v68 = &v63[v66];
      uint64_t v69 = type metadata accessor for Location();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v59 - 8) + 16))(&v62[v64[6]], &v63[v64[6]], v59);
      v62[v64[7]] = v63[v64[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v62, 0, 1, (uint64_t)v64);
    }
    uint64_t v34 = v94;
    _s7Weather24LocationCompositionStateOwst_0(v44, 0, 1, (uint64_t)v93);
  }
  *(unsigned char *)(v35 + v95[10]) = *(unsigned char *)(v34 + v95[10]);
  *(unsigned char *)(v35 + v95[11]) = *(unsigned char *)(v34 + v95[11]);
  *(unsigned char *)(v35 + v95[12]) = *(unsigned char *)(v34 + v95[12]);
  *(unsigned char *)(v35 + v95[13]) = *(unsigned char *)(v34 + v95[13]);
  *(unsigned char *)(v35 + v95[14]) = *(unsigned char *)(v34 + v95[14]);
  uint64_t v70 = v95[15];
  uint64_t v71 = *(void **)(v34 + v70);
  *(void *)(v35 + v70) = v71;
  *(unsigned char *)(v35 + v95[16]) = *(unsigned char *)(v34 + v95[16]);
  *(unsigned char *)(v35 + v95[17]) = *(unsigned char *)(v34 + v95[17]);
  *(unsigned char *)(v35 + v95[18]) = *(unsigned char *)(v34 + v95[18]);
  uint64_t v72 = v95[19];
  uint64_t v73 = v35 + v72;
  uint64_t v74 = v34 + v72;
  uint64_t v75 = type metadata accessor for Date();
  uint64_t v76 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 16);
  id v77 = v71;
  v76(v73, v74, v75);
  uint64_t v78 = v95[20];
  uint64_t v79 = (void *)(v35 + v78);
  id v80 = (const void *)(v34 + v78);
  uint64_t v81 = type metadata accessor for ForegroundEffect();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v80, 1, v81))
  {
    uint64_t v82 = sub_10017DF08(&qword_100E65FA8);
    memcpy(v79, v80, *(void *)(*(void *)(v82 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v81 - 8) + 16))(v79, v80, v81);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v79, 0, 1, v81);
  }
  *(unsigned char *)(v35 + v95[21]) = *(unsigned char *)(v34 + v95[21]);
  *(void *)(v35 + v95[22]) = *(void *)(v34 + v95[22]);
  *(unsigned char *)(v35 + v95[23]) = *(unsigned char *)(v34 + v95[23]);
  uint64_t v83 = v95[24];
  uint64_t v84 = v35 + v83;
  uint64_t v85 = v34 + v83;
  uint64_t v86 = type metadata accessor for LocationEntity();
  uint64_t v87 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 16);
  swift_bridgeObjectRetain();
  v87(v84, v85, v86);
  uint64_t v88 = *(int *)(a3 + 20);
  uint64_t v89 = (void *)(v35 + v88);
  uint64_t v90 = (void *)(v34 + v88);
  uint64_t v91 = v90[1];
  *uint64_t v89 = *v90;
  v89[1] = v91;
  swift_retain();
  return v35;
}

uint64_t sub_100192F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007D533C);
}

uint64_t sub_100192F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004EA570);
}

uint64_t type metadata accessor for LocationFooterViewModel()
{
  uint64_t result = qword_100E7C508;
  if (!qword_100E7C508) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for LocationViewModel()
{
  uint64_t result = qword_100EA0A50;
  if (!qword_100EA0A50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100193004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    if (a5 != 1) {
      return result;
    }
    swift_bridgeObjectRetain();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_100193064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10052D6F4);
}

uint64_t type metadata accessor for HomeAndWorkRefinementRowViewModel()
{
  uint64_t result = qword_100E7E7A8;
  if (!qword_100E7E7A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001930C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004EA67C);
}

uint64_t sub_1001930D4(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for LocationComponentHeaderViewModel(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v9 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v9;
      uint64_t v10 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v10;
      uint64_t v11 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v11;
      uint64_t v12 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v12;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      uint64_t v13 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = v13;
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 2u:
      uint64_t v14 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v14;
      uint64_t v15 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v15;
      uint64_t v16 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v16;
      uint64_t v17 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v17;
      uint64_t v18 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v18;
      uint64_t v19 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v19;
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      uint64_t v20 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v20;
      *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 3u:
      uint64_t v21 = type metadata accessor for WeatherDescription();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
      uint64_t v22 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
      uint64_t v23 = *(int *)(v22 + 20);
      uint64_t v24 = a1 + v23;
      uint64_t v25 = a2 + v23;
      uint64_t v27 = *(void *)(a2 + v23);
      uint64_t v26 = *(void *)(a2 + v23 + 8);
      *(void *)uint64_t v24 = v27;
      *(void *)(v24 + 8) = v26;
      uint64_t v28 = *(void *)(v25 + 24);
      *(void *)(v24 + 16) = *(void *)(v25 + 16);
      *(void *)(v24 + 24) = v28;
      *(unsigned char *)(v24 + 32) = *(unsigned char *)(v25 + 32);
      uint64_t v29 = *(void *)(v25 + 48);
      *(void *)(v24 + 40) = *(void *)(v25 + 40);
      *(void *)(v24 + 48) = v29;
      *(unsigned char *)(a1 + *(int *)(v22 + 24)) = *(unsigned char *)(a2 + *(int *)(v22 + 24));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 5u:
      uint64_t v30 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v30;
      uint64_t v31 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v31;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      uint64_t v32 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v32;
      uint64_t v33 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v33;
      uint64_t v34 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v34;
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
      uint64_t v35 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v6 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v6;
      uint64_t v7 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v7;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      uint64_t v8 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v36 = a3[5];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  uint64_t v39 = *(void *)v38;
  char v40 = *(unsigned char *)(v38 + 8);
  sub_100195B7C(*(void *)v38, v40);
  *(void *)uint64_t v37 = v39;
  *(unsigned char *)(v37 + 8) = v40;
  uint64_t v41 = a3[6];
  uint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (void *)(a2 + v41);
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v44 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
  }
  else
  {
    *uint64_t v42 = *v43;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v45 = a3[7];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (void *)(a2 + v45);
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v48 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
  }
  else
  {
    *uint64_t v46 = *v47;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v49 = a3[8];
  uint64_t v50 = a1 + v49;
  uint64_t v51 = a2 + v49;
  uint64_t v52 = *(void *)v51;
  char v53 = *(unsigned char *)(v51 + 8);
  sub_100195B7C(*(void *)v51, v53);
  *(void *)uint64_t v50 = v52;
  *(unsigned char *)(v50 + 8) = v53;
  uint64_t v54 = a3[9];
  uint64_t v55 = a1 + v54;
  uint64_t v56 = a2 + v54;
  uint64_t v57 = *(void *)v56;
  char v58 = *(unsigned char *)(v56 + 8);
  sub_100195B7C(*(void *)v56, v58);
  *(void *)uint64_t v55 = v57;
  *(unsigned char *)(v55 + 8) = v58;
  uint64_t v59 = a3[10];
  uint64_t v60 = a1 + v59;
  uint64_t v61 = a2 + v59;
  uint64_t v62 = *(void *)v61;
  char v63 = *(unsigned char *)(v61 + 8);
  sub_100195B7C(*(void *)v61, v63);
  *(void *)uint64_t v60 = v62;
  *(unsigned char *)(v60 + 8) = v63;
  uint64_t v64 = a3[11];
  uint64_t v65 = (void *)(a1 + v64);
  uint64_t v66 = (void *)(a2 + v64);
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v67 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v67 - 8) + 16))(v65, v66, v67);
  }
  else
  {
    *uint64_t v65 = *v66;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v68 = a3[12];
  uint64_t v69 = a1 + v68;
  uint64_t v70 = a2 + v68;
  uint64_t v71 = *(void *)v70;
  char v72 = *(unsigned char *)(v70 + 9);
  unsigned __int8 v73 = *(unsigned char *)(v70 + 8);
  sub_100193DD4(*(void *)v70, v73, v72);
  *(void *)uint64_t v69 = v71;
  *(unsigned char *)(v69 + 8) = v73;
  *(unsigned char *)(v69 + 9) = v72;
  uint64_t v74 = a3[13];
  uint64_t v75 = a1 + v74;
  uint64_t v76 = a2 + v74;
  uint64_t v77 = sub_10017DF08(&qword_100E63BE8);
  uint64_t v78 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 16);
  v78(v75, v76, v77);
  v78(a1 + a3[14], a2 + a3[14], v77);
  return a1;
}

uint64_t sub_100193718(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 16);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  swift_retain();
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
    *(unsigned char *)(v9 + 17) = *(unsigned char *)(v10 + 17);
    *(unsigned char *)(v9 + 18) = *(unsigned char *)(v10 + 18);
    uint64_t v11 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v12 = v9 + v11;
    uint64_t v13 = v10 + v11;
    uint64_t v14 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *(void *)uint64_t v9 = *(void *)v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = *(void *)v17;
  char v19 = *(unsigned char *)(v17 + 9);
  unsigned __int8 v20 = *(unsigned char *)(v17 + 8);
  sub_100193DD4(*(void *)v17, v20, v19);
  *(void *)uint64_t v16 = v18;
  *(unsigned char *)(v16 + 8) = v20;
  *(unsigned char *)(v16 + 9) = v19;
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  }
  else
  {
    *uint64_t v22 = *v23;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = a3[9];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v28 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
    {
      uint64_t v29 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
    }
  }
  else
  {
    void *v26 = *v27;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v30 = a3[10];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = *(void *)v32;
  char v34 = *(unsigned char *)(v32 + 8);
  sub_100195B7C(*(void *)v32, v34);
  *(void *)uint64_t v31 = v33;
  *(unsigned char *)(v31 + 8) = v34;
  uint64_t v35 = a3[11];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = *(void *)v37;
  char v39 = *(unsigned char *)(v37 + 8);
  sub_100195B7C(*(void *)v37, v39);
  *(void *)uint64_t v36 = v38;
  *(unsigned char *)(v36 + 8) = v39;
  uint64_t v40 = a3[12];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  uint64_t v43 = *(void *)v42;
  char v44 = *(unsigned char *)(v42 + 8);
  sub_100195B7C(*(void *)v42, v44);
  *(void *)uint64_t v41 = v43;
  *(unsigned char *)(v41 + 8) = v44;
  uint64_t v45 = a3[13];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  uint64_t v48 = *(void *)v47;
  uint64_t v49 = *(void *)(v47 + 8);
  uint64_t v50 = *(void *)(v47 + 16);
  uint64_t v51 = *(void *)(v47 + 24);
  char v52 = *(unsigned char *)(v47 + 32);
  sub_100190CD4(*(void *)v47, v49, v50, v51, v52);
  *(void *)uint64_t v46 = v48;
  *(void *)(v46 + 8) = v49;
  *(void *)(v46 + 16) = v50;
  *(void *)(v46 + 24) = v51;
  *(unsigned char *)(v46 + 32) = v52;
  uint64_t v53 = a3[14];
  uint64_t v54 = a1 + v53;
  uint64_t v55 = a2 + v53;
  uint64_t v56 = *(void *)v55;
  LOBYTE(v49) = *(unsigned char *)(v55 + 8);
  sub_100195B7C(*(void *)v55, v49);
  *(void *)uint64_t v54 = v56;
  *(unsigned char *)(v54 + 8) = v49;
  uint64_t v57 = a3[15];
  uint64_t v58 = a3[16];
  uint64_t v59 = (void *)(a1 + v57);
  uint64_t v60 = (void *)(a2 + v57);
  uint64_t v61 = v60[1];
  *uint64_t v59 = *v60;
  v59[1] = v61;
  *(void *)(a1 + v58) = *(void *)(a2 + v58);
  uint64_t v62 = a3[17];
  uint64_t v63 = a1 + v62;
  uint64_t v64 = a2 + v62;
  long long v65 = *(_OWORD *)(a2 + v62 + 24);
  *(_OWORD *)(a1 + v62 + 24) = v65;
  uint64_t v66 = v65;
  uint64_t v67 = **(void (***)(uint64_t, uint64_t, uint64_t))(v65 - 8);
  swift_retain();
  swift_retain();
  v67(v63, v64, v66);
  uint64_t v68 = a3[19];
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  *(_OWORD *)(a1 + v68) = *(_OWORD *)(a2 + v68);
  uint64_t v69 = a3[20];
  uint64_t v70 = a1 + v69;
  uint64_t v71 = a2 + v69;
  long long v72 = *(_OWORD *)(a2 + v69 + 24);
  *(_OWORD *)(a1 + v69 + 24) = v72;
  uint64_t v73 = v72;
  uint64_t v74 = **(void (***)(uint64_t, uint64_t, uint64_t))(v72 - 8);
  swift_unknownObjectRetain();
  v74(v70, v71, v73);
  uint64_t v75 = a3[21];
  long long v76 = *(_OWORD *)(a2 + v75 + 24);
  *(_OWORD *)(a1 + v75 + 24) = v76;
  (**(void (***)(void))(v76 - 8))();
  uint64_t v77 = a3[22];
  uint64_t v78 = a1 + v77;
  uint64_t v79 = a2 + v77;
  uint64_t v80 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 16))(v78, v79, v80);
  uint64_t v81 = a3[23];
  uint64_t v82 = a3[24];
  uint64_t v83 = a1 + v81;
  uint64_t v84 = (uint64_t *)(a2 + v81);
  uint64_t v85 = *v84;
  LOBYTE(v84) = *((unsigned char *)v84 + 8);
  *(void *)uint64_t v83 = v85;
  *(unsigned char *)(v83 + 8) = (_BYTE)v84;
  uint64_t v106 = a3;
  uint64_t v86 = a1 + v82;
  uint64_t v87 = *(void *)(a2 + v82);
  uint64_t v88 = *(void *)(a2 + v82 + 8);
  uint64_t v89 = *(void *)(a2 + v82 + 16);
  uint64_t v90 = *(void *)(a2 + v82 + 24);
  uint64_t v91 = *(void *)(a2 + v82 + 32);
  uint64_t v92 = *(void *)(a2 + v82 + 40);
  char v93 = *(unsigned char *)(a2 + v82 + 48);
  swift_retain();
  sub_100193D54(v87, v88, v89, v90, v91, v92, v93);
  *(void *)uint64_t v86 = v87;
  *(void *)(v86 + 8) = v88;
  *(void *)(v86 + 16) = v89;
  *(void *)(v86 + 24) = v90;
  *(void *)(v86 + 32) = v91;
  *(void *)(v86 + 40) = v92;
  *(unsigned char *)(v86 + 48) = v93;
  uint64_t v94 = v106[25];
  uint64_t v95 = v106[26];
  uint64_t v96 = a1 + v94;
  uint64_t v97 = a2 + v94;
  *(unsigned char *)uint64_t v96 = *(unsigned char *)v97;
  *(void *)(v96 + 8) = *(void *)(v97 + 8);
  uint64_t v98 = a1 + v95;
  uint64_t v99 = *(void *)(a2 + v95);
  uint64_t v100 = *(void *)(a2 + v95 + 8);
  LOBYTE(v89) = *(unsigned char *)(a2 + v95 + 16);
  swift_retain();
  sub_100195B88();
  *(void *)uint64_t v98 = v99;
  *(void *)(v98 + 8) = v100;
  *(unsigned char *)(v98 + 16) = v89;
  uint64_t v101 = v106[27];
  uint64_t v102 = v106[28];
  uint64_t v103 = *(void **)(a2 + v101);
  *(void *)(a1 + v101) = v103;
  *(void *)(a1 + v102) = *(void *)(a2 + v102);
  id v104 = v103;
  swift_retain();
  return a1;
}

uint64_t sub_100193D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t initializeWithCopy for ApplyLocationComponentContentWidthModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 25);
  uint64_t v8 = *(unsigned __int8 *)(a2 + 24);
  sub_100193DD4(v6, v8, v7);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 25) = v7;
  return a1;
}

uint64_t sub_100193DD4(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_100193DE0(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for LocationComponentHeaderViewModel(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v9 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v9;
      uint64_t v10 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v10;
      uint64_t v11 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v11;
      uint64_t v12 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v12;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      uint64_t v13 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = v13;
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 2u:
      uint64_t v14 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v14;
      uint64_t v15 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v15;
      uint64_t v16 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v16;
      uint64_t v17 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v17;
      uint64_t v18 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v18;
      uint64_t v19 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v19;
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      uint64_t v20 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v20;
      *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 3u:
      uint64_t v21 = type metadata accessor for WeatherDescription();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
      uint64_t v22 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
      uint64_t v23 = *(int *)(v22 + 20);
      uint64_t v24 = a1 + v23;
      uint64_t v25 = a2 + v23;
      uint64_t v27 = *(void *)(a2 + v23);
      uint64_t v26 = *(void *)(a2 + v23 + 8);
      *(void *)uint64_t v24 = v27;
      *(void *)(v24 + 8) = v26;
      uint64_t v28 = *(void *)(v25 + 24);
      *(void *)(v24 + 16) = *(void *)(v25 + 16);
      *(void *)(v24 + 24) = v28;
      *(unsigned char *)(v24 + 32) = *(unsigned char *)(v25 + 32);
      uint64_t v29 = *(void *)(v25 + 48);
      *(void *)(v24 + 40) = *(void *)(v25 + 40);
      *(void *)(v24 + 48) = v29;
      *(unsigned char *)(a1 + *(int *)(v22 + 24)) = *(unsigned char *)(a2 + *(int *)(v22 + 24));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 5u:
      uint64_t v30 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v30;
      uint64_t v31 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v31;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      uint64_t v32 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v32;
      uint64_t v33 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v33;
      uint64_t v34 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v34;
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
      uint64_t v35 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v6 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v6;
      uint64_t v7 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v7;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      uint64_t v8 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v36 = (int *)type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v37 = v36[5];
  uint64_t v38 = (void *)(a1 + v37);
  char v39 = (void *)(a2 + v37);
  uint64_t v40 = type metadata accessor for LocationComponentViewModel();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *uint64_t v38 = *v39;
      *(_OWORD *)(v38 + 1) = *(_OWORD *)(v39 + 1);
      *(_OWORD *)(v38 + 3) = *(_OWORD *)(v39 + 3);
      uint64_t v41 = v39[6];
      v38[5] = v39[5];
      v38[6] = v41;
      uint64_t v42 = v39[8];
      v38[7] = v39[7];
      v38[8] = v42;
      uint64_t v43 = v39[10];
      v38[9] = v39[9];
      v38[10] = v43;
      v38[11] = v39[11];
      *((_WORD *)v38 + 48) = *((_WORD *)v39 + 48);
      v38[13] = v39[13];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_65;
    case 1u:
      *uint64_t v38 = *v39;
      v371 = v36;
      char v44 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
      uint64_t v45 = v44[5];
      uint64_t v46 = (char *)v38 + v45;
      __dstb = (char *)v39 + v45;
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_10017DF08(&qword_100E65250);
      uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16);
      uint64_t v49 = v46;
      uint64_t v36 = v371;
      v48(v49, __dstb, v47);
      v48((char *)v38 + v44[6], (char *)v39 + v44[6], v47);
      v48((char *)v38 + v44[7], (char *)v39 + v44[7], v47);
      uint64_t v50 = v44[8];
      uint64_t v51 = (void *)((char *)v38 + v50);
      char v52 = (void *)((char *)v39 + v50);
      uint64_t v53 = v52[1];
      *uint64_t v51 = *v52;
      v51[1] = v53;
      uint64_t v54 = v44[9];
      uint64_t v55 = (void *)((char *)v38 + v54);
      uint64_t v56 = (void *)((char *)v39 + v54);
      uint64_t v57 = v56[1];
      *uint64_t v55 = *v56;
      v55[1] = v57;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_65;
    case 2u:
      uint64_t v58 = v39[1];
      *uint64_t v38 = *v39;
      v38[1] = v58;
      uint64_t v59 = v39[3];
      v38[2] = v39[2];
      v38[3] = v59;
      uint64_t v60 = type metadata accessor for FeelsLikeComponentViewModel(0);
      uint64_t v61 = *(int *)(v60 + 24);
      uint64_t v357 = v60;
      __dst = (void *)((char *)v38 + v61);
      uint64_t v62 = (void *)((char *)v39 + v61);
      uint64_t v63 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, v63))
      {
        uint64_t v64 = sub_10017DF08(&qword_100E63750);
        memcpy(__dst, v62, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        uint64_t v163 = v62[1];
        void *__dst = *v62;
        __dst[1] = v163;
        uint64_t v164 = *(int *)(v63 + 20);
        uint64_t v165 = (char *)__dst + v164;
        uint64_t v166 = (char *)v62 + v164;
        uint64_t v376 = v36;
        uint64_t v167 = type metadata accessor for TemperatureScaleConfiguration();
        uint64_t v352 = *(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v168 = v167;
        uint64_t v36 = v376;
        v352(v165, v166, v168);
        uint64_t v169 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        *(void *)&v165[v169[5]] = *(void *)&v166[v169[5]];
        *(void *)&v165[v169[6]] = *(void *)&v166[v169[6]];
        *(void *)&v165[v169[7]] = *(void *)&v166[v169[7]];
        uint64_t v170 = v169[8];
        uint64_t v171 = &v165[v170];
        uint64_t v172 = &v166[v170];
        uint64_t v174 = *(void *)v172;
        uint64_t v173 = *((void *)v172 + 1);
        *(void *)uint64_t v171 = v174;
        *((void *)v171 + 1) = v173;
        v165[v169[9]] = v166[v169[9]];
        swift_bridgeObjectRetain();
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v63);
      }
      uint64_t v175 = *(int *)(v357 + 28);
      uint64_t v176 = (void *)((char *)v38 + v175);
      uint64_t v177 = (void *)((char *)v39 + v175);
      uint64_t v178 = v177[1];
      *uint64_t v176 = *v177;
      v176[1] = v178;
      swift_bridgeObjectRetain();
      goto LABEL_65;
    case 3u:
      *uint64_t v38 = *v39;
      swift_bridgeObjectRetain();
      goto LABEL_65;
    case 4u:
      *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
      v38[2] = v39[2];
      swift_bridgeObjectRetain();
      goto LABEL_65;
    case 5u:
      uint64_t v65 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v65 - 8) + 16))(v38, v39, v65);
      uint64_t v66 = type metadata accessor for MapComponentViewModel();
      uint64_t v67 = *(int *)(v66 + 20);
      uint64_t v68 = (char *)v38 + v67;
      uint64_t v69 = (char *)v39 + v67;
      uint64_t v70 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16))(v68, v69, v70);
      __dsta = (int *)v66;
      uint64_t v71 = *(int *)(v66 + 24);
      long long v72 = (char *)v38 + v71;
      uint64_t v73 = (void *)((char *)v39 + v71);
      uint64_t v74 = type metadata accessor for WeatherData(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v73, 1, v74))
      {
        uint64_t v75 = sub_10017DF08(&qword_100E63850);
        memcpy(v72, v73, *(void *)(*(void *)(v75 - 8) + 64));
        goto LABEL_64;
      }
      v377 = v36;
      uint64_t v179 = v72;
      uint64_t v180 = v73[1];
      void *v179 = *v73;
      v179[1] = v180;
      uint64_t v356 = v179;
      uint64_t v360 = (int *)v74;
      uint64_t v181 = *(int *)(v74 + 20);
      uint64_t v182 = (char *)v179 + v181;
      uint64_t v183 = (char *)v73 + v181;
      uint64_t v184 = type metadata accessor for Locale();
      swift_bridgeObjectRetain();
      v353 = (char *)v73;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v183, 1, v184))
      {
        uint64_t v185 = sub_10017DF08(&qword_100E63730);
        memcpy(v182, v183, *(void *)(*(void *)(v185 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v184 - 8) + 16))(v182, v183, v184);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v182, 0, 1, v184);
      }
      uint64_t v202 = v360[6];
      uint64_t v203 = (char *)v356 + v202;
      uint64_t v204 = (char *)v73 + v202;
      uint64_t v205 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v205 - 8) + 16))(v203, v204, v205);
      uint64_t v206 = v360[7];
      uint64_t v207 = (char *)v356 + v206;
      uint64_t v208 = (char *)v73 + v206;
      uint64_t v209 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v208, 1, v209))
      {
        uint64_t v210 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v207, v208, *(void *)(*(void *)(v210 - 8) + 64));
      }
      else
      {
        uint64_t v211 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v211 - 8) + 16))(v207, v208, v211);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v207, 0, 1, v209);
      }
      uint64_t v212 = v360[8];
      uint64_t v213 = (void *)((char *)v356 + v212);
      uint64_t v214 = &v353[v212];
      uint64_t v215 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v218 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v218 - 8) + 16))(v213, v214, v218);
        goto LABEL_52;
      }
      if (!EnumCaseMultiPayload)
      {
        uint64_t v217 = *((void *)v214 + 1);
        *uint64_t v213 = *(void *)v214;
        v213[1] = v217;
        swift_bridgeObjectRetain();
LABEL_52:
        swift_storeEnumTagMultiPayload();
        goto LABEL_54;
      }
      memcpy(v213, v214, *(void *)(*(void *)(v215 - 8) + 64));
LABEL_54:
      uint64_t v36 = v377;
      uint64_t v219 = v360[9];
      uint64_t v220 = (char *)v356 + v219;
      uint64_t v221 = &v353[v219];
      uint64_t v222 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v221, 1, v222))
      {
        uint64_t v223 = sub_10017DF08(&qword_100E63740);
        memcpy(v220, v221, *(void *)(*(void *)(v223 - 8) + 64));
        uint64_t v224 = (uint64_t)v356;
      }
      else
      {
        uint64_t v350 = v222;
        v354 = v220;
        uint64_t v225 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v221, 1, v225))
        {
          uint64_t v226 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v220, v221, *(void *)(*(void *)(v226 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v225 - 8) + 16))(v220, v221, v225);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v220, 0, 1, v225);
        }
        uint64_t v227 = *(int *)(v350 + 20);
        uint64_t v228 = &v220[v227];
        uint64_t v229 = &v221[v227];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v229, 1, v225))
        {
          uint64_t v230 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v228, v229, *(void *)(*(void *)(v230 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v225 - 8) + 16))(v228, v229, v225);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v228, 0, 1, v225);
        }
        uint64_t v224 = (uint64_t)v356;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v354, 0, 1, v350);
      }
      _s7Weather24LocationCompositionStateOwst_0(v224, 0, 1, (uint64_t)v360);
LABEL_64:
      uint64_t v231 = __dsta[7];
      uint64_t v232 = (void *)((char *)v38 + v231);
      uint64_t v233 = (void *)((char *)v39 + v231);
      uint64_t v234 = v233[1];
      void *v232 = *v233;
      v232[1] = v234;
      swift_bridgeObjectRetain();
LABEL_65:
      swift_storeEnumTagMultiPayload();
LABEL_66:
      *(_WORD *)(a1 + v36[6]) = *(_WORD *)(a2 + v36[6]);
      uint64_t v235 = v36[7];
      uint64_t v236 = (unsigned char *)(a1 + v235);
      uint64_t v237 = (unsigned char *)(a2 + v235);
      uint64_t v238 = type metadata accessor for LocationComponentAction(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v237, 1, v238))
      {
        uint64_t v239 = sub_10017DF08(&qword_100E7AF78);
        memcpy(v236, v237, *(void *)(*(void *)(v239 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v240 = type metadata accessor for URL();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v240 - 8) + 16))(v236, v237, v240);
            uint64_t v241 = sub_10017DF08(&qword_100E66478);
            v236[*(int *)(v241 + 48)] = v237[*(int *)(v241 + 48)];
            goto LABEL_74;
          case 1u:
            uint64_t v242 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v242 - 8) + 16))(v236, v237, v242);
            goto LABEL_74;
          case 2u:
            uint64_t v243 = type metadata accessor for DetailCondition();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v243 - 8) + 16))(v236, v237, v243);
            uint64_t v244 = sub_10017DF08(&qword_100E66488);
            v236[*(int *)(v244 + 48)] = v237[*(int *)(v244 + 48)];
            goto LABEL_74;
          case 4u:
            *uint64_t v236 = *v237;
            uint64_t v245 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
            uint64_t v246 = &v236[v245];
            uint64_t v247 = &v237[v245];
            uint64_t v248 = type metadata accessor for Location();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v248 - 8) + 16))(v246, v247, v248);
LABEL_74:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v236, v237, *(void *)(*(void *)(v238 - 8) + 64));
            break;
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v236, 0, 1, v238);
      }
      uint64_t v249 = a3[6];
      *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
      uint64_t v250 = a1 + v249;
      uint64_t v251 = a2 + v249;
      long long v252 = *(_OWORD *)(a2 + v249 + 24);
      *(_OWORD *)(a1 + v249 + 24) = v252;
      uint64_t v253 = v252;
      uint64_t v254 = **(void (***)(uint64_t, uint64_t, uint64_t))(v252 - 8);
      swift_unknownObjectRetain();
      v254(v250, v251, v253);
      uint64_t v255 = a3[8];
      *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
      uint64_t v256 = a1 + v255;
      uint64_t v257 = a2 + v255;
      uint64_t v258 = type metadata accessor for Location.Identifier();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v258 - 8) + 16))(v256, v257, v258);
      uint64_t v259 = a3[10];
      *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
      *(void *)(a1 + v259) = *(void *)(a2 + v259);
      uint64_t v260 = a3[12];
      *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
      *(_OWORD *)(a1 + v260) = *(_OWORD *)(a2 + v260);
      uint64_t v261 = a3[13];
      uint64_t v262 = a3[14];
      uint64_t v263 = a1 + v261;
      uint64_t v264 = a2 + v261;
      *(unsigned char *)(v263 + 16) = *(unsigned char *)(v264 + 16);
      *(_OWORD *)uint64_t v263 = *(_OWORD *)v264;
      *(void *)(v263 + 24) = *(void *)(v264 + 24);
      uint64_t v265 = a1 + v262;
      uint64_t v266 = *(void *)(a2 + v262);
      uint64_t v267 = *(void *)(a2 + v262 + 8);
      LOBYTE(v254) = *(unsigned char *)(a2 + v262 + 16);
      swift_retain();
      swift_retain();
      sub_100195B88();
      *(void *)uint64_t v265 = v266;
      *(void *)(v265 + 8) = v267;
      *(unsigned char *)(v265 + 16) = (_BYTE)v254;
      uint64_t v268 = a3[15];
      uint64_t v269 = a1 + v268;
      uint64_t v270 = (uint64_t *)(a2 + v268);
      uint64_t v271 = *v270;
      uint64_t v272 = v270[1];
      LOBYTE(v267) = *((unsigned char *)v270 + 16);
      sub_100195B88();
      *(void *)uint64_t v269 = v271;
      *(void *)(v269 + 8) = v272;
      *(unsigned char *)(v269 + 16) = v267;
      uint64_t v273 = a3[16];
      uint64_t v274 = a1 + v273;
      v275 = (uint64_t *)(a2 + v273);
      uint64_t v276 = *v275;
      uint64_t v277 = v275[1];
      LOBYTE(v267) = *((unsigned char *)v275 + 16);
      sub_100195B88();
      *(void *)uint64_t v274 = v276;
      *(void *)(v274 + 8) = v277;
      *(unsigned char *)(v274 + 16) = v267;
      uint64_t v278 = a3[17];
      uint64_t v279 = a3[18];
      uint64_t v280 = a1 + v278;
      uint64_t v281 = a2 + v278;
      *(unsigned char *)uint64_t v280 = *(unsigned char *)v281;
      *(void *)(v280 + 8) = *(void *)(v281 + 8);
      uint64_t v282 = (void *)(a1 + v279);
      v283 = (void *)(a2 + v279);
      swift_retain();
      sub_10017DF08(&qword_100E62CB8);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v284 = type metadata accessor for LayoutDirection();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v284 - 8) + 16))(v282, v283, v284);
      }
      else
      {
        *uint64_t v282 = *v283;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v285 = a3[19];
      uint64_t v286 = a1 + v285;
      uint64_t v287 = a2 + v285;
      uint64_t v288 = *(void *)v287;
      char v289 = *(unsigned char *)(v287 + 8);
      sub_100195B7C(*(void *)v287, v289);
      *(void *)uint64_t v286 = v288;
      *(unsigned char *)(v286 + 8) = v289;
      uint64_t v290 = a3[20];
      uint64_t v291 = a1 + v290;
      uint64_t v292 = a2 + v290;
      uint64_t v293 = *(void *)v292;
      char v294 = *(unsigned char *)(v292 + 8);
      sub_100195B7C(*(void *)v292, v294);
      *(void *)uint64_t v291 = v293;
      *(unsigned char *)(v291 + 8) = v294;
      uint64_t v295 = a3[21];
      uint64_t v296 = (void *)(a1 + v295);
      uint64_t v297 = (void *)(a2 + v295);
      sub_10017DF08(&qword_100E63BC8);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v298 = type metadata accessor for ContentSizeCategory();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v298 - 8) + 16))(v296, v297, v298);
      }
      else
      {
        *uint64_t v296 = *v297;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v299 = a3[22];
      uint64_t v300 = a1 + v299;
      uint64_t v301 = a2 + v299;
      uint64_t v302 = *(void *)v301;
      char v303 = *(unsigned char *)(v301 + 8);
      sub_100195B7C(*(void *)v301, v303);
      *(void *)uint64_t v300 = v302;
      *(unsigned char *)(v300 + 8) = v303;
      uint64_t v304 = a3[23];
      uint64_t v305 = a1 + v304;
      uint64_t v306 = a2 + v304;
      uint64_t v307 = *(void *)v306;
      char v308 = *(unsigned char *)(v306 + 8);
      sub_100195B7C(*(void *)v306, v308);
      *(void *)uint64_t v305 = v307;
      *(unsigned char *)(v305 + 8) = v308;
      uint64_t v309 = a3[24];
      uint64_t v310 = a1 + v309;
      uint64_t v311 = a2 + v309;
      uint64_t v312 = *(void *)v311;
      char v313 = *(unsigned char *)(v311 + 8);
      sub_100195B7C(*(void *)v311, v313);
      *(void *)uint64_t v310 = v312;
      *(unsigned char *)(v310 + 8) = v313;
      uint64_t v314 = a3[25];
      uint64_t v315 = a1 + v314;
      uint64_t v316 = a2 + v314;
      uint64_t v317 = *(void *)v316;
      char v318 = *(unsigned char *)(v316 + 8);
      sub_100195B7C(*(void *)v316, v318);
      *(void *)uint64_t v315 = v317;
      *(unsigned char *)(v315 + 8) = v318;
      uint64_t v319 = a3[26];
      uint64_t v320 = a1 + v319;
      uint64_t v321 = a2 + v319;
      uint64_t v322 = *(void *)v321;
      char v323 = *(unsigned char *)(v321 + 8);
      sub_100195B7C(*(void *)v321, v323);
      *(void *)uint64_t v320 = v322;
      *(unsigned char *)(v320 + 8) = v323;
      uint64_t v324 = a3[27];
      uint64_t v325 = a1 + v324;
      uint64_t v326 = a2 + v324;
      uint64_t v327 = *(void *)v326;
      char v328 = *(unsigned char *)(v326 + 8);
      sub_100195B7C(*(void *)v326, v328);
      *(void *)uint64_t v325 = v327;
      *(unsigned char *)(v325 + 8) = v328;
      uint64_t v329 = a3[28];
      uint64_t v330 = a1 + v329;
      uint64_t v331 = a2 + v329;
      sub_10017DF08(&qword_100E63BD0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(_OWORD *)uint64_t v330 = *(_OWORD *)v331;
        *(unsigned char *)(v330 + 16) = *(unsigned char *)(v331 + 16);
        *(unsigned char *)(v330 + 17) = *(unsigned char *)(v331 + 17);
        *(unsigned char *)(v330 + 18) = *(unsigned char *)(v331 + 18);
        uint64_t v332 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
        uint64_t v333 = v330 + v332;
        uint64_t v334 = v331 + v332;
        uint64_t v335 = type metadata accessor for DynamicTypeSize();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v335 - 8) + 16))(v333, v334, v335);
      }
      else
      {
        *(void *)uint64_t v330 = *(void *)v331;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v336 = a3[29];
      uint64_t v337 = a3[30];
      uint64_t v338 = (void *)(a1 + v336);
      long long v339 = (uint64_t *)(a2 + v336);
      uint64_t v340 = *v339;
      uint64_t v341 = v339[1];
      *uint64_t v338 = v340;
      v338[1] = v341;
      uint64_t v342 = (void *)(a1 + v337);
      uint64_t v343 = (void *)(a2 + v337);
      uint64_t v344 = v343[1];
      *uint64_t v342 = *v343;
      v342[1] = v344;
      swift_retain();
      swift_retain();
      swift_retain();
      return a1;
    case 6u:
      uint64_t v76 = v39[1];
      *uint64_t v38 = *v39;
      v38[1] = v76;
      int v77 = *((unsigned __int8 *)v39 + 32);
      swift_bridgeObjectRetain();
      if (v77 == 255)
      {
        *((_OWORD *)v38 + 1) = *((_OWORD *)v39 + 1);
        *((unsigned char *)v38 + 32) = *((unsigned char *)v39 + 32);
      }
      else
      {
        uint64_t v78 = v39[2];
        uint64_t v79 = v39[3];
        sub_1001F3C64(v78, v79, v77);
        v38[2] = v78;
        v38[3] = v79;
        *((unsigned char *)v38 + 32) = v77;
      }
      v38[5] = v39[5];
      uint64_t v186 = (int *)type metadata accessor for MoonComponentViewModel();
      uint64_t v187 = v186[7];
      uint64_t v361 = (char *)v39 + v187;
      __dstg = (char *)v38 + v187;
      uint64_t v188 = type metadata accessor for Date();
      uint64_t v189 = *(void (**)(char *, char *, uint64_t))(*(void *)(v188 - 8) + 16);
      swift_bridgeObjectRetain();
      v189(__dstg, v361, v188);
      *((unsigned char *)v38 + v186[8]) = *((unsigned char *)v39 + v186[8]);
      *(void *)((char *)v38 + v186[9]) = *(void *)((char *)v39 + v186[9]);
      swift_storeEnumTagMultiPayload();
      goto LABEL_66;
    case 7u:
      uint64_t v80 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v372 = v36;
        uint64_t v81 = v39[1];
        *uint64_t v38 = *v39;
        v38[1] = v81;
        uint64_t v82 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v83 = v82[5];
        uint64_t v84 = (char *)v38 + v83;
        uint64_t v85 = (char *)v39 + v83;
        uint64_t v86 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v86))
        {
          uint64_t v87 = sub_10017DF08(&qword_100E749B0);
          memcpy(v84, v85, *(void *)(*(void *)(v87 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(v84, v85, v86);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, v86);
        }
        uint64_t v190 = v82[6];
        uint64_t v191 = (void *)((char *)v38 + v190);
        uint64_t v192 = (void *)((char *)v39 + v190);
        uint64_t v193 = v192[1];
        void *v191 = *v192;
        v191[1] = v193;
        uint64_t v194 = v82[7];
        uint64_t v195 = (char *)v38 + v194;
        uint64_t v362 = v82;
        uint64_t v196 = (char *)v39 + v194;
        uint64_t v197 = *(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16);
        swift_bridgeObjectRetain();
        v197(v195, v196, v86);
        uint64_t v198 = v362[8];
        uint64_t v199 = (char *)v38 + v198;
        uint64_t v200 = (char *)v39 + v198;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39 + v198, 1, v86))
        {
          uint64_t v201 = sub_10017DF08(&qword_100E749B0);
          memcpy(v199, v200, *(void *)(*(void *)(v201 - 8) + 64));
        }
        else
        {
          v197(v199, v200, v86);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v199, 0, 1, v86);
        }
        uint64_t v36 = v372;
        *((unsigned char *)v38 + v362[9]) = *((unsigned char *)v39 + v362[9]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v38, v39, *(void *)(*(void *)(v80 - 8) + 64));
      }
      goto LABEL_65;
    case 8u:
      uint64_t v88 = v39[1];
      *uint64_t v38 = *v39;
      v38[1] = v88;
      uint64_t v89 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel() + 20);
      uint64_t v358 = (char *)v39 + v89;
      __dstc = (char *)v38 + v89;
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
      uint64_t v91 = *(void (**)(char *, char *, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 16);
      swift_bridgeObjectRetain();
      v91(__dstc, v358, HourPrecipitationChartViewModel);
      goto LABEL_65;
    case 9u:
      uint64_t v92 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v92 - 8) + 16))(v38, v39, v92);
      uint64_t v93 = type metadata accessor for NotificationsOptInComponentViewModel();
      *((unsigned char *)v38 + *(int *)(v93 + 20)) = *((unsigned char *)v39 + *(int *)(v93 + 20));
      goto LABEL_65;
    case 0xAu:
      uint64_t v94 = v39[1];
      *uint64_t v38 = *v39;
      v38[1] = v94;
      uint64_t v95 = v39[3];
      v38[2] = v39[2];
      v38[3] = v95;
      uint64_t v96 = v39[5];
      v38[4] = v39[4];
      v38[5] = v96;
      uint64_t v97 = v39[7];
      v38[6] = v39[6];
      v38[7] = v97;
      uint64_t v98 = v39[9];
      v38[8] = v39[8];
      v38[9] = v98;
      uint64_t v99 = v39[10];
      uint64_t v100 = v39[11];
      v38[10] = v99;
      v38[11] = v100;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_65;
    case 0xBu:
      uint64_t v101 = type metadata accessor for PressureTrend();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v101 - 8) + 16))(v38, v39, v101);
      uint64_t v102 = (int *)type metadata accessor for PressureComponentViewModel();
      uint64_t v103 = v102[5];
      id v104 = (void *)((char *)v38 + v103);
      uint64_t v105 = (void *)((char *)v39 + v103);
      uint64_t v107 = *v105;
      uint64_t v106 = v105[1];
      *id v104 = v107;
      v104[1] = v106;
      uint64_t v108 = v102[6];
      uint64_t v109 = (void *)((char *)v38 + v108);
      uint64_t v110 = (void *)((char *)v39 + v108);
      uint64_t v111 = v110[1];
      *uint64_t v109 = *v110;
      v109[1] = v111;
      uint64_t v112 = v102[7];
      uint64_t v113 = (void *)((char *)v38 + v112);
      uint64_t v114 = (void *)((char *)v39 + v112);
      uint64_t v115 = v114[1];
      *uint64_t v113 = *v114;
      v113[1] = v115;
      *(void *)((char *)v38 + v102[8]) = *(void *)((char *)v39 + v102[8]);
      uint64_t v116 = v102[9];
      uint64_t v117 = (void *)((char *)v38 + v116);
      uint64_t v118 = (void *)((char *)v39 + v116);
      uint64_t v119 = v118[1];
      *uint64_t v117 = *v118;
      v117[1] = v119;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_65;
    case 0xDu:
      uint64_t v120 = v39[1];
      *uint64_t v38 = *v39;
      v38[1] = v120;
      uint64_t v121 = v39[3];
      v38[2] = v39[2];
      v38[3] = v121;
      uint64_t v122 = v39[5];
      v38[4] = v39[4];
      v38[5] = v122;
      uint64_t v123 = v39[7];
      v38[6] = v39[6];
      v38[7] = v123;
      v38[8] = v39[8];
      __dstd = (int *)type metadata accessor for SevereAlertComponentViewModel();
      uint64_t v124 = __dstd[9];
      uint64_t v351 = (char *)v39 + v124;
      uint64_t v355 = (char *)v38 + v124;
      uint64_t v125 = type metadata accessor for WeatherAlert.Prominence();
      long long v349 = *(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v349(v355, v351, v125);
      *(void *)((char *)v38 + __dstd[10]) = *(void *)((char *)v39 + __dstd[10]);
      goto LABEL_65;
    case 0xEu:
      uint64_t v126 = type metadata accessor for SunriseSunsetViewModel();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v126 - 8) + 16))(v38, v39, v126);
      goto LABEL_65;
    case 0xFu:
      uint64_t v127 = v39[1];
      *uint64_t v38 = *v39;
      v38[1] = v127;
      uint64_t v128 = v39[3];
      v38[2] = v39[2];
      v38[3] = v128;
      uint64_t v129 = v39[5];
      v38[4] = v39[4];
      v38[5] = v129;
      uint64_t v130 = v39[7];
      v38[6] = v39[6];
      v38[7] = v130;
      v373 = v36;
      uint64_t v131 = v39[9];
      v38[8] = v39[8];
      v38[9] = v131;
      uint64_t v132 = v39[11];
      v38[10] = v39[10];
      v38[11] = v132;
      uint64_t v133 = v39[13];
      v38[12] = v39[12];
      v38[13] = v133;
      uint64_t v134 = v39[15];
      v38[14] = v39[14];
      v38[15] = v134;
      uint64_t v135 = v39[17];
      v38[16] = v39[16];
      v38[17] = v135;
      uint64_t v136 = v39[19];
      v38[18] = v39[18];
      v38[19] = v136;
      uint64_t v137 = v39[21];
      v38[20] = v39[20];
      v38[21] = v137;
      uint64_t v138 = v39[23];
      v38[22] = v39[22];
      v38[23] = v138;
      uint64_t v139 = v39[24];
      uint64_t v140 = v39[25];
      v38[24] = v139;
      v38[25] = v140;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v36 = v373;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_65;
    case 0x10u:
      *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
      uint64_t v141 = v39[3];
      v38[2] = v39[2];
      v38[3] = v141;
      uint64_t v142 = type metadata accessor for UVIndexComponentViewModel();
      uint64_t v143 = *(int *)(v142 + 28);
      uint64_t v359 = (char *)v39 + v143;
      __dste = (char *)v38 + v143;
      v374 = v36;
      uint64_t v144 = type metadata accessor for WeatherDescription();
      uint64_t v145 = *(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v146 = v144;
      uint64_t v36 = v374;
      v145(__dste, v359, v146);
      *(void *)((char *)v38 + *(int *)(v142 + 32)) = *(void *)((char *)v39 + *(int *)(v142 + 32));
      swift_bridgeObjectRetain();
      goto LABEL_65;
    case 0x11u:
      uint64_t v147 = v39[1];
      *uint64_t v38 = *v39;
      v38[1] = v147;
      uint64_t v148 = v39[3];
      v38[2] = v39[2];
      v38[3] = v148;
      uint64_t v149 = v39[5];
      v38[4] = v39[4];
      v38[5] = v149;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_65;
    case 0x12u:
      v375 = v36;
      uint64_t v150 = v39[1];
      *uint64_t v38 = *v39;
      v38[1] = v150;
      uint64_t v151 = v39[3];
      v38[2] = v39[2];
      v38[3] = v151;
      uint64_t v152 = v39[5];
      v38[4] = v39[4];
      v38[5] = v152;
      uint64_t v153 = v39[7];
      v38[6] = v39[6];
      v38[7] = v153;
      uint64_t v154 = v39[9];
      v38[8] = v39[8];
      v38[9] = v154;
      uint64_t v155 = v39[11];
      v38[10] = v39[10];
      v38[11] = v155;
      uint64_t v156 = v39[13];
      v38[12] = v39[12];
      v38[13] = v156;
      uint64_t v157 = v39[15];
      v38[14] = v39[14];
      v38[15] = v157;
      uint64_t v158 = v39[17];
      v38[16] = v39[16];
      v38[17] = v158;
      uint64_t v159 = v39[19];
      v38[18] = v39[18];
      v38[19] = v159;
      uint64_t v160 = v39[21];
      v38[20] = v39[20];
      v38[21] = v160;
      *((_OWORD *)v38 + 11) = *((_OWORD *)v39 + 11);
      v38[24] = v39[24];
      __dstf = (int *)type metadata accessor for WindComponentViewModel();
      uint64_t v161 = __dstf[17];
      uint64_t v347 = (char *)v39 + v161;
      uint64_t v348 = (char *)v38 + v161;
      uint64_t v162 = type metadata accessor for WindComponentCompassViewModel();
      uint64_t v346 = *(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v36 = v375;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v346(v348, v347, v162);
      *(void *)((char *)v38 + __dstf[18]) = *(void *)((char *)v39 + __dstf[18]);
      swift_bridgeObjectRetain();
      goto LABEL_65;
    default:
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
      goto LABEL_66;
  }
}

uint64_t sub_100195B7C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_100195B88()
{
  return swift_retain();
}

uint64_t sub_100195B90(uint64_t a1, uint64_t a2)
{
  sub_10018F6D8(*(void *)a1, *(unsigned char *)(a1 + 8));
  sub_10018F6D8(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  type metadata accessor for LocationComponentHeaderViewModel(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 3u:
      uint64_t v5 = type metadata accessor for WeatherDescription();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
      type metadata accessor for LocationComponentHeaderViewModel.Description(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_7:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  uint64_t v6 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v7 = v4 + *(int *)(v6 + 20);
  type metadata accessor for LocationComponentViewModel();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_48;
    case 1u:
      swift_bridgeObjectRelease();
      uint64_t v8 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
      uint64_t v9 = v7 + v8[5];
      uint64_t v10 = sub_10017DF08(&qword_100E65250);
      uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
      v11(v9, v10);
      v11(v7 + v8[6], v10);
      v11(v7 + v8[7], v10);
      goto LABEL_33;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = v7 + *(int *)(type metadata accessor for FeelsLikeComponentViewModel(0) + 24);
      uint64_t v13 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v13))
      {
        swift_bridgeObjectRelease();
        uint64_t v14 = v12 + *(int *)(v13 + 20);
        uint64_t v15 = type metadata accessor for TemperatureScaleConfiguration();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
        type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        swift_bridgeObjectRelease();
      }
      goto LABEL_48;
    case 3u:
    case 4u:
      goto LABEL_48;
    case 5u:
      uint64_t v16 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v7, v16);
      uint64_t v17 = type metadata accessor for MapComponentViewModel();
      uint64_t v18 = v7 + *(int *)(v17 + 20);
      uint64_t v19 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
      uint64_t v20 = v7 + *(int *)(v17 + 24);
      uint64_t v21 = (int *)type metadata accessor for WeatherData(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v20, 1, (uint64_t)v21))
      {
        swift_bridgeObjectRelease();
        uint64_t v22 = v20 + v21[5];
        uint64_t v23 = type metadata accessor for Locale();
        if (!_s7Weather24LocationCompositionStateOwet_0(v22, 1, v23)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
        }
        uint64_t v24 = v20 + v21[6];
        uint64_t v25 = type metadata accessor for WeatherDataModel();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
        uint64_t v26 = v20 + v21[7];
        uint64_t v27 = sub_10017DF08(&qword_100E63738);
        if (!_s7Weather24LocationCompositionStateOwet_0(v26, 1, v27))
        {
          uint64_t v28 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v26, v28);
        }
        uint64_t v29 = v20 + v21[8];
        type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v43 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v29, v43);
        }
        else if (!EnumCaseMultiPayload)
        {
          swift_bridgeObjectRelease();
        }
        uint64_t v44 = v20 + v21[9];
        uint64_t v45 = type metadata accessor for WeatherDataOverrides();
        if (!_s7Weather24LocationCompositionStateOwet_0(v44, 1, v45))
        {
          uint64_t v46 = type metadata accessor for Date();
          if (!_s7Weather24LocationCompositionStateOwet_0(v44, 1, v46)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v46 - 8) + 8))(v44, v46);
          }
          uint64_t v47 = v44 + *(int *)(v45 + 20);
          if (!_s7Weather24LocationCompositionStateOwet_0(v47, 1, v46)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v46 - 8) + 8))(v47, v46);
          }
        }
      }
      goto LABEL_48;
    case 6u:
      swift_bridgeObjectRelease();
      int v31 = *(unsigned __int8 *)(v7 + 32);
      if (v31 != 255) {
        sub_1001F3C7C(*(void *)(v7 + 16), *(void *)(v7 + 24), v31);
      }
      swift_bridgeObjectRelease();
      v7 += *(int *)(type metadata accessor for MoonComponentViewModel() + 28);
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for Date();
      goto LABEL_36;
    case 7u:
      type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v33 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v34 = v7 + v33[5];
        uint64_t v35 = type metadata accessor for URL();
        if (!_s7Weather24LocationCompositionStateOwet_0(v34, 1, v35)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
        }
        swift_bridgeObjectRelease();
        uint64_t v36 = *(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8);
        v36(v7 + v33[7], v35);
        uint64_t v37 = v7 + v33[8];
        if (!_s7Weather24LocationCompositionStateOwet_0(v37, 1, v35)) {
          v36(v37, v35);
        }
      }
      break;
    case 8u:
      swift_bridgeObjectRelease();
      v7 += *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel() + 20);
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
      goto LABEL_36;
    case 9u:
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for Location();
      goto LABEL_36;
    case 0xAu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_48;
    case 0xBu:
      uint64_t v38 = type metadata accessor for PressureTrend();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v7, v38);
      type metadata accessor for PressureComponentViewModel();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_33:
      swift_bridgeObjectRelease();
      goto LABEL_48;
    case 0xDu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 += *(int *)(type metadata accessor for SevereAlertComponentViewModel() + 36);
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for WeatherAlert.Prominence();
      goto LABEL_36;
    case 0xEu:
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for SunriseSunsetViewModel();
LABEL_36:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 8))(v7, HourPrecipitationChartViewModel);
      break;
    case 0xFu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_48;
    case 0x10u:
      swift_bridgeObjectRelease();
      uint64_t v39 = v7 + *(int *)(type metadata accessor for UVIndexComponentViewModel() + 28);
      uint64_t v40 = type metadata accessor for WeatherDescription();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);
      goto LABEL_48;
    case 0x11u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_48;
    case 0x12u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v41 = v7 + *(int *)(type metadata accessor for WindComponentViewModel() + 68);
      uint64_t v42 = type metadata accessor for WindComponentCompassViewModel();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
LABEL_48:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  uint64_t v48 = v4 + *(int *)(v6 + 28);
  uint64_t v49 = type metadata accessor for LocationComponentAction(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v48, 1, v49))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v50 = type metadata accessor for URL();
        goto LABEL_55;
      case 1u:
        uint64_t v50 = type metadata accessor for WeatherMapOverlayKind();
        goto LABEL_55;
      case 2u:
        uint64_t v50 = type metadata accessor for DetailCondition();
        goto LABEL_55;
      case 4u:
        v48 += *(int *)(sub_10017DF08(&qword_100E66480) + 48);
        uint64_t v50 = type metadata accessor for Location();
LABEL_55:
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v48, v50);
        break;
      default:
        break;
    }
  }
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_100196754(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  sub_100195B7C(v8, v9);
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v9;
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (void *)(a2 + v10);
  type metadata accessor for LocationComponentHeaderViewModel(0);
  uint64_t v330 = a3;
  uint64_t v331 = a1;
  uint64_t v329 = a2;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v16 = v12[1];
      *(void *)uint64_t v11 = *v12;
      *(void *)(v11 + 8) = v16;
      uint64_t v17 = v12[3];
      *(void *)(v11 + 16) = v12[2];
      *(void *)(v11 + 24) = v17;
      uint64_t v18 = v12[5];
      *(void *)(v11 + 32) = v12[4];
      *(void *)(v11 + 40) = v18;
      uint64_t v19 = v12[7];
      *(void *)(v11 + 48) = v12[6];
      *(void *)(v11 + 56) = v19;
      *(unsigned char *)(v11 + 64) = *((unsigned char *)v12 + 64);
      uint64_t v20 = v12[10];
      *(void *)(v11 + 72) = v12[9];
      *(void *)(v11 + 80) = v20;
      *(unsigned char *)(v11 + 88) = *((unsigned char *)v12 + 88);
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 2u:
      uint64_t v21 = v12[1];
      *(void *)uint64_t v11 = *v12;
      *(void *)(v11 + 8) = v21;
      uint64_t v22 = v12[3];
      *(void *)(v11 + 16) = v12[2];
      *(void *)(v11 + 24) = v22;
      uint64_t v23 = v12[5];
      *(void *)(v11 + 32) = v12[4];
      *(void *)(v11 + 40) = v23;
      uint64_t v24 = v12[7];
      *(void *)(v11 + 48) = v12[6];
      *(void *)(v11 + 56) = v24;
      uint64_t v25 = v12[9];
      *(void *)(v11 + 64) = v12[8];
      *(void *)(v11 + 72) = v25;
      uint64_t v26 = v12[11];
      *(void *)(v11 + 80) = v12[10];
      *(void *)(v11 + 88) = v26;
      *(unsigned char *)(v11 + 96) = *((unsigned char *)v12 + 96);
      uint64_t v27 = v12[14];
      *(void *)(v11 + 104) = v12[13];
      *(void *)(v11 + 112) = v27;
      *(unsigned char *)(v11 + 120) = *((unsigned char *)v12 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 3u:
      uint64_t v28 = type metadata accessor for WeatherDescription();
      (*(void (**)(uint64_t, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v11, v12, v28);
      uint64_t v29 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
      uint64_t v30 = *(int *)(v29 + 20);
      uint64_t v31 = v11 + v30;
      uint64_t v32 = (char *)v12 + v30;
      uint64_t v33 = *((void *)v32 + 1);
      *(void *)uint64_t v31 = *(void *)v32;
      *(void *)(v31 + 8) = v33;
      uint64_t v34 = *((void *)v32 + 3);
      *(void *)(v31 + 16) = *((void *)v32 + 2);
      *(void *)(v31 + 24) = v34;
      *(unsigned char *)(v31 + 32) = v32[32];
      uint64_t v35 = *((void *)v32 + 6);
      *(void *)(v31 + 40) = *((void *)v32 + 5);
      *(void *)(v31 + 48) = v35;
      *(unsigned char *)(v11 + *(int *)(v29 + 24)) = *((unsigned char *)v12 + *(int *)(v29 + 24));
      break;
    case 5u:
      uint64_t v36 = v12[1];
      *(void *)uint64_t v11 = *v12;
      *(void *)(v11 + 8) = v36;
      uint64_t v37 = v12[3];
      *(void *)(v11 + 16) = v12[2];
      *(void *)(v11 + 24) = v37;
      *(_OWORD *)(v11 + 32) = *((_OWORD *)v12 + 2);
      uint64_t v38 = v12[7];
      *(void *)(v11 + 48) = v12[6];
      *(void *)(v11 + 56) = v38;
      uint64_t v39 = v12[9];
      *(void *)(v11 + 64) = v12[8];
      *(void *)(v11 + 72) = v39;
      uint64_t v40 = v12[11];
      *(void *)(v11 + 80) = v12[10];
      *(void *)(v11 + 88) = v40;
      *(void *)(v11 + 96) = v12[12];
      *(unsigned char *)(v11 + 104) = *((unsigned char *)v12 + 104);
      uint64_t v41 = v12[15];
      *(void *)(v11 + 112) = v12[14];
      *(void *)(v11 + 120) = v41;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_7:
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v13 = v12[1];
      *(void *)uint64_t v11 = *v12;
      *(void *)(v11 + 8) = v13;
      uint64_t v14 = v12[3];
      *(void *)(v11 + 16) = v12[2];
      *(void *)(v11 + 24) = v14;
      *(unsigned char *)(v11 + 32) = *((unsigned char *)v12 + 32);
      uint64_t v15 = v12[6];
      *(void *)(v11 + 40) = v12[5];
      *(void *)(v11 + 48) = v15;
      break;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  uint64_t v42 = (int *)type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v43 = v42[5];
  uint64_t v44 = (void *)(v11 + v43);
  uint64_t v45 = (void *)((char *)v12 + v43);
  uint64_t v46 = type metadata accessor for LocationComponentViewModel();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *uint64_t v44 = *v45;
      *(_OWORD *)(v44 + 1) = *(_OWORD *)(v45 + 1);
      *(_OWORD *)(v44 + 3) = *(_OWORD *)(v45 + 3);
      uint64_t v47 = v45[6];
      v44[5] = v45[5];
      v44[6] = v47;
      uint64_t v48 = v45[8];
      v44[7] = v45[7];
      v44[8] = v48;
      uint64_t v49 = v45[10];
      v44[9] = v45[9];
      v44[10] = v49;
      v44[11] = v45[11];
      *((_WORD *)v44 + 48) = *((_WORD *)v45 + 48);
      v44[13] = v45[13];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_33;
    case 1u:
      *uint64_t v44 = *v45;
      uint64_t v50 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
      uint64_t v51 = v50[5];
      char v52 = (char *)v44 + v51;
      uint64_t v53 = v12;
      uint64_t v54 = v11;
      uint64_t v55 = (char *)v45 + v51;
      swift_bridgeObjectRetain();
      uint64_t v56 = sub_10017DF08(&qword_100E65250);
      uint64_t v324 = v42;
      uint64_t v57 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16);
      uint64_t v58 = v55;
      uint64_t v11 = v54;
      uint64_t v12 = v53;
      v57(v52, v58, v56);
      v57((char *)v44 + v50[6], (char *)v45 + v50[6], v56);
      v57((char *)v44 + v50[7], (char *)v45 + v50[7], v56);
      uint64_t v42 = v324;
      uint64_t v59 = v50[8];
      uint64_t v60 = (void *)((char *)v44 + v59);
      uint64_t v61 = (void *)((char *)v45 + v59);
      uint64_t v62 = v61[1];
      *uint64_t v60 = *v61;
      v60[1] = v62;
      uint64_t v63 = v50[9];
      uint64_t v64 = (void *)((char *)v44 + v63);
      uint64_t v65 = (void *)((char *)v45 + v63);
      uint64_t v66 = v65[1];
      *uint64_t v64 = *v65;
      v64[1] = v66;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_33;
    case 2u:
      uint64_t v67 = v45[1];
      *uint64_t v44 = *v45;
      v44[1] = v67;
      uint64_t v68 = v45[3];
      v44[2] = v45[2];
      v44[3] = v68;
      uint64_t v310 = type metadata accessor for FeelsLikeComponentViewModel(0);
      uint64_t v69 = *(int *)(v310 + 24);
      uint64_t v70 = (void *)((char *)v44 + v69);
      uint64_t v71 = (void *)((char *)v45 + v69);
      uint64_t v72 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v72))
      {
        uint64_t v73 = sub_10017DF08(&qword_100E63750);
        memcpy(v70, v71, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        uint64_t v218 = v71[1];
        *uint64_t v70 = *v71;
        v70[1] = v218;
        uint64_t v219 = *(int *)(v72 + 20);
        uint64_t v220 = (char *)v70 + v219;
        uint64_t v308 = (uint64_t)v70;
        uint64_t v221 = (char *)v71 + v219;
        __dstg = v12;
        uint64_t v222 = v11;
        uint64_t v223 = type metadata accessor for TemperatureScaleConfiguration();
        uint64_t v224 = v42;
        uint64_t v225 = *(void (**)(char *, char *, uint64_t))(*(void *)(v223 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v226 = v223;
        uint64_t v11 = v222;
        uint64_t v12 = __dstg;
        v225(v220, v221, v226);
        uint64_t v42 = v224;
        uint64_t v227 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        *(void *)&v220[v227[5]] = *(void *)&v221[v227[5]];
        *(void *)&v220[v227[6]] = *(void *)&v221[v227[6]];
        *(void *)&v220[v227[7]] = *(void *)&v221[v227[7]];
        uint64_t v228 = v227[8];
        uint64_t v229 = &v220[v228];
        uint64_t v230 = &v221[v228];
        uint64_t v232 = *(void *)v230;
        uint64_t v231 = *((void *)v230 + 1);
        *(void *)uint64_t v229 = v232;
        *((void *)v229 + 1) = v231;
        v220[v227[9]] = v221[v227[9]];
        swift_bridgeObjectRetain();
        _s7Weather24LocationCompositionStateOwst_0(v308, 0, 1, v72);
      }
      uint64_t v88 = v330;
      uint64_t v87 = v331;
      uint64_t v89 = v329;
      uint64_t v233 = *(int *)(v310 + 28);
      uint64_t v234 = (void *)((char *)v44 + v233);
      uint64_t v235 = (void *)((char *)v45 + v233);
      uint64_t v236 = v235[1];
      *uint64_t v234 = *v235;
      v234[1] = v236;
      swift_bridgeObjectRetain();
      goto LABEL_79;
    case 3u:
      *uint64_t v44 = *v45;
      swift_bridgeObjectRetain();
      goto LABEL_33;
    case 4u:
      *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
      v44[2] = v45[2];
      swift_bridgeObjectRetain();
      goto LABEL_33;
    case 5u:
      uint64_t v74 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v74 - 8) + 16))(v44, v45, v74);
      uint64_t v75 = type metadata accessor for MapComponentViewModel();
      uint64_t v76 = *(int *)(v75 + 20);
      int v77 = (char *)v44 + v76;
      uint64_t v78 = (char *)v45 + v76;
      uint64_t v79 = type metadata accessor for Location();
      uint64_t v80 = v77;
      uint64_t v81 = v75;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16))(v80, v78, v79);
      uint64_t v82 = *(int *)(v75 + 24);
      uint64_t v83 = (void *)((char *)v44 + v82);
      uint64_t v84 = (void *)((char *)v45 + v82);
      uint64_t v85 = type metadata accessor for WeatherData(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v84, 1, v85))
      {
        uint64_t v86 = sub_10017DF08(&qword_100E63850);
        memcpy(v83, v84, *(void *)(*(void *)(v86 - 8) + 64));
        uint64_t v88 = v330;
        uint64_t v87 = v331;
        uint64_t v89 = v329;
        goto LABEL_78;
      }
      uint64_t v304 = v81;
      uint64_t v237 = v84[1];
      *uint64_t v83 = *v84;
      v83[1] = v237;
      char v313 = (int *)v85;
      __dsta = (char *)v84;
      uint64_t v238 = *(int *)(v85 + 20);
      uint64_t v239 = (char *)v83 + v238;
      uint64_t v240 = (char *)v84 + v238;
      uint64_t v241 = type metadata accessor for Locale();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v240, 1, v241))
      {
        uint64_t v242 = sub_10017DF08(&qword_100E63730);
        memcpy(v239, v240, *(void *)(*(void *)(v242 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v241 - 8) + 16))(v239, v240, v241);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v239, 0, 1, v241);
      }
      uint64_t v264 = v313[6];
      uint64_t v265 = (char *)v83 + v264;
      uint64_t v266 = v83;
      uint64_t v267 = &__dsta[v264];
      uint64_t v268 = type metadata accessor for WeatherDataModel();
      uint64_t v269 = v267;
      uint64_t v270 = v266;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v268 - 8) + 16))(v265, v269, v268);
      uint64_t v271 = v313[7];
      uint64_t v272 = (char *)v266 + v271;
      uint64_t v273 = &__dsta[v271];
      uint64_t v274 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v273, 1, v274))
      {
        uint64_t v275 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v272, v273, *(void *)(*(void *)(v275 - 8) + 64));
      }
      else
      {
        uint64_t v276 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v276 - 8) + 16))(v272, v273, v276);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v272, 0, 1, v274);
      }
      uint64_t v89 = v329;
      uint64_t v81 = v304;
      uint64_t v277 = v313[8];
      uint64_t v309 = (uint64_t)v270;
      uint64_t v278 = (void *)((char *)v270 + v277);
      uint64_t v279 = &__dsta[v277];
      uint64_t v305 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v282 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v282 - 8) + 16))(v278, v279, v282);
        goto LABEL_66;
      }
      if (!EnumCaseMultiPayload)
      {
        uint64_t v281 = *((void *)v279 + 1);
        void *v278 = *(void *)v279;
        v278[1] = v281;
        swift_bridgeObjectRetain();
LABEL_66:
        swift_storeEnumTagMultiPayload();
        goto LABEL_68;
      }
      memcpy(v278, v279, *(void *)(*(void *)(v305 - 8) + 64));
LABEL_68:
      uint64_t v283 = v313[9];
      uint64_t v284 = (char *)(v309 + v283);
      uint64_t v285 = &__dsta[v283];
      uint64_t v286 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v285, 1, v286))
      {
        uint64_t v287 = sub_10017DF08(&qword_100E63740);
        memcpy(v284, v285, *(void *)(*(void *)(v287 - 8) + 64));
        uint64_t v88 = v330;
        uint64_t v87 = v331;
        uint64_t v288 = v309;
      }
      else
      {
        __dstb = (int *)v286;
        char v289 = v284;
        uint64_t v290 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v285, 1, v290))
        {
          uint64_t v291 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v289, v285, *(void *)(*(void *)(v291 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v290 - 8) + 16))(v289, v285, v290);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v289, 0, 1, v290);
        }
        uint64_t v292 = v290;
        uint64_t v288 = v309;
        uint64_t v293 = __dstb[5];
        char v303 = &v289[v293];
        uint64_t v306 = (uint64_t)v289;
        char v294 = &v285[v293];
        uint64_t v295 = v292;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v294, 1, v292))
        {
          uint64_t v296 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v303, v294, *(void *)(*(void *)(v296 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *))(*(void *)(v295 - 8) + 16))(v303, v294);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v303, 0, 1, v295);
        }
        _s7Weather24LocationCompositionStateOwst_0(v306, 0, 1, (uint64_t)__dstb);
        uint64_t v88 = v330;
        uint64_t v87 = v331;
      }
      _s7Weather24LocationCompositionStateOwst_0(v288, 0, 1, (uint64_t)v313);
LABEL_78:
      uint64_t v297 = *(int *)(v81 + 28);
      uint64_t v298 = (void *)((char *)v44 + v297);
      uint64_t v299 = (void *)((char *)v45 + v297);
      uint64_t v300 = v299[1];
      *uint64_t v298 = *v299;
      v298[1] = v300;
      swift_bridgeObjectRetain();
LABEL_79:
      swift_storeEnumTagMultiPayload();
LABEL_35:
      *(_WORD *)(v11 + v42[6]) = *(_WORD *)((char *)v12 + v42[6]);
      uint64_t v191 = v42[7];
      uint64_t v192 = (unsigned char *)(v11 + v191);
      uint64_t v193 = (char *)v12 + v191;
      uint64_t v194 = type metadata accessor for LocationComponentAction(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v193, 1, v194))
      {
        uint64_t v195 = sub_10017DF08(&qword_100E7AF78);
        memcpy(v192, v193, *(void *)(*(void *)(v195 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v196 = type metadata accessor for URL();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v196 - 8) + 16))(v192, v193, v196);
            uint64_t v197 = sub_10017DF08(&qword_100E66478);
            v192[*(int *)(v197 + 48)] = v193[*(int *)(v197 + 48)];
            goto LABEL_43;
          case 1u:
            uint64_t v198 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v198 - 8) + 16))(v192, v193, v198);
            goto LABEL_43;
          case 2u:
            uint64_t v199 = type metadata accessor for DetailCondition();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v199 - 8) + 16))(v192, v193, v199);
            uint64_t v200 = sub_10017DF08(&qword_100E66488);
            v192[*(int *)(v200 + 48)] = v193[*(int *)(v200 + 48)];
            goto LABEL_43;
          case 4u:
            unsigned char *v192 = *v193;
            uint64_t v201 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
            uint64_t v202 = &v192[v201];
            uint64_t v203 = &v193[v201];
            uint64_t v204 = type metadata accessor for Location();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v204 - 8) + 16))(v202, v203, v204);
LABEL_43:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v192, v193, *(void *)(*(void *)(v194 - 8) + 64));
            break;
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v192, 0, 1, v194);
      }
      uint64_t v205 = v88[8];
      *(_OWORD *)(v87 + v88[7]) = *(_OWORD *)(v89 + v88[7]);
      uint64_t v206 = (void *)(v87 + v205);
      uint64_t v207 = (void *)(v89 + v205);
      uint64_t v208 = v207[1];
      *uint64_t v206 = *v207;
      v206[1] = v208;
      uint64_t v209 = v88[9];
      uint64_t v210 = v88[10];
      uint64_t v211 = (void *)(v87 + v209);
      uint64_t v212 = (void *)(v89 + v209);
      uint64_t v213 = v212[1];
      *uint64_t v211 = *v212;
      v211[1] = v213;
      uint64_t v214 = v87 + v210;
      uint64_t v215 = v89 + v210;
      uint64_t v216 = *(void *)(v215 + 8);
      *(void *)uint64_t v214 = *(void *)v215;
      *(void *)(v214 + 8) = v216;
      *(unsigned char *)(v214 + 32) = *(unsigned char *)(v215 + 32);
      *(_OWORD *)(v214 + 16) = *(_OWORD *)(v215 + 16);
      swift_unknownObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      return v87;
    case 6u:
      uint64_t v90 = v45[1];
      *uint64_t v44 = *v45;
      v44[1] = v90;
      int v91 = *((unsigned __int8 *)v45 + 32);
      swift_bridgeObjectRetain();
      uint64_t v322 = v11;
      uint64_t v325 = v42;
      if (v91 == 255)
      {
        *((_OWORD *)v44 + 1) = *((_OWORD *)v45 + 1);
        *((unsigned char *)v44 + 32) = *((unsigned char *)v45 + 32);
      }
      else
      {
        uint64_t v92 = v45[2];
        uint64_t v93 = v45[3];
        sub_1001F3C64(v92, v93, v91);
        v44[2] = v92;
        v44[3] = v93;
        *((unsigned char *)v44 + 32) = v91;
      }
      v44[5] = v45[5];
      uint64_t v243 = (int *)type metadata accessor for MoonComponentViewModel();
      uint64_t v244 = v243[7];
      uint64_t v245 = (char *)v44 + v244;
      uint64_t v246 = (char *)v45 + v244;
      uint64_t v247 = type metadata accessor for Date();
      uint64_t v248 = *(void (**)(char *, char *, uint64_t))(*(void *)(v247 - 8) + 16);
      swift_bridgeObjectRetain();
      v248(v245, v246, v247);
      *((unsigned char *)v44 + v243[8]) = *((unsigned char *)v45 + v243[8]);
      *(void *)((char *)v44 + v243[9]) = *(void *)((char *)v45 + v243[9]);
      swift_storeEnumTagMultiPayload();
      uint64_t v88 = v330;
      uint64_t v87 = v331;
      uint64_t v89 = v329;
      uint64_t v11 = v322;
      uint64_t v42 = v325;
      goto LABEL_35;
    case 7u:
      uint64_t v94 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v326 = v42;
        uint64_t v95 = v45[1];
        *uint64_t v44 = *v45;
        v44[1] = v95;
        uint64_t v96 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v97 = v96[5];
        __dst = (char *)v44 + v97;
        uint64_t v98 = (char *)v45 + v97;
        uint64_t v99 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v98, 1, v99))
        {
          uint64_t v100 = sub_10017DF08(&qword_100E749B0);
          memcpy(__dst, v98, *(void *)(*(void *)(v100 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 16))(__dst, v98, v99);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v99);
        }
        uint64_t v249 = v96[6];
        uint64_t v250 = (void *)((char *)v44 + v249);
        uint64_t v251 = (void *)((char *)v45 + v249);
        uint64_t v252 = v251[1];
        void *v250 = *v251;
        v250[1] = v252;
        uint64_t v253 = v96[7];
        uint64_t v254 = (char *)v44 + v253;
        uint64_t v255 = v96;
        uint64_t v256 = (char *)v45 + v253;
        uint64_t v257 = *(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v258 = v254;
        uint64_t v259 = v255;
        v257(v258, v256, v99);
        uint64_t v260 = v255[8];
        uint64_t v261 = (char *)v44 + v260;
        uint64_t v262 = (char *)v45 + v260;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45 + v260, 1, v99))
        {
          uint64_t v263 = sub_10017DF08(&qword_100E749B0);
          memcpy(v261, v262, *(void *)(*(void *)(v263 - 8) + 64));
        }
        else
        {
          v257(v261, v262, v99);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v261, 0, 1, v99);
        }
        uint64_t v89 = v329;
        *((unsigned char *)v44 + v259[9]) = *((unsigned char *)v45 + v259[9]);
        swift_storeEnumTagMultiPayload();
        uint64_t v88 = v330;
        uint64_t v87 = v331;
        uint64_t v42 = v326;
      }
      else
      {
        memcpy(v44, v45, *(void *)(*(void *)(v94 - 8) + 64));
        uint64_t v88 = v330;
        uint64_t v87 = v331;
        uint64_t v89 = v329;
      }
      goto LABEL_79;
    case 8u:
      uint64_t v101 = v45[1];
      *uint64_t v44 = *v45;
      v44[1] = v101;
      uint64_t v102 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel() + 20);
      __dstc = (char *)v44 + v102;
      uint64_t v103 = (char *)v45 + v102;
      id v104 = v12;
      uint64_t v105 = v11;
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
      uint64_t v107 = v42;
      uint64_t v108 = *(void (**)(char *, char *, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v109 = HourPrecipitationChartViewModel;
      uint64_t v11 = v105;
      uint64_t v12 = v104;
      v108(__dstc, v103, v109);
      uint64_t v42 = v107;
      goto LABEL_33;
    case 9u:
      uint64_t v110 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v110 - 8) + 16))(v44, v45, v110);
      uint64_t v111 = type metadata accessor for NotificationsOptInComponentViewModel();
      *((unsigned char *)v44 + *(int *)(v111 + 20)) = *((unsigned char *)v45 + *(int *)(v111 + 20));
      goto LABEL_33;
    case 0xAu:
      uint64_t v112 = v45[1];
      *uint64_t v44 = *v45;
      v44[1] = v112;
      uint64_t v113 = v45[3];
      v44[2] = v45[2];
      v44[3] = v113;
      uint64_t v114 = v45[5];
      v44[4] = v45[4];
      v44[5] = v114;
      uint64_t v115 = v45[7];
      v44[6] = v45[6];
      v44[7] = v115;
      uint64_t v116 = v42;
      uint64_t v117 = v12;
      uint64_t v118 = v11;
      uint64_t v119 = v45[9];
      v44[8] = v45[8];
      v44[9] = v119;
      uint64_t v120 = v45[10];
      uint64_t v121 = v45[11];
      v44[10] = v120;
      v44[11] = v121;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v11 = v118;
      uint64_t v12 = v117;
      uint64_t v42 = v116;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_33;
    case 0xBu:
      uint64_t v122 = type metadata accessor for PressureTrend();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v122 - 8) + 16))(v44, v45, v122);
      uint64_t v123 = (int *)type metadata accessor for PressureComponentViewModel();
      uint64_t v124 = v123[5];
      uint64_t v125 = (void *)((char *)v44 + v124);
      uint64_t v126 = (void *)((char *)v45 + v124);
      uint64_t v128 = *v126;
      uint64_t v127 = v126[1];
      *uint64_t v125 = v128;
      v125[1] = v127;
      uint64_t v129 = v123[6];
      uint64_t v130 = (void *)((char *)v44 + v129);
      uint64_t v131 = (void *)((char *)v45 + v129);
      uint64_t v132 = v131[1];
      *uint64_t v130 = *v131;
      v130[1] = v132;
      uint64_t v133 = v123[7];
      uint64_t v134 = (void *)((char *)v44 + v133);
      uint64_t v135 = (void *)((char *)v45 + v133);
      uint64_t v136 = v135[1];
      void *v134 = *v135;
      v134[1] = v136;
      *(void *)((char *)v44 + v123[8]) = *(void *)((char *)v45 + v123[8]);
      uint64_t v137 = v123[9];
      uint64_t v138 = (void *)((char *)v44 + v137);
      uint64_t v139 = (void *)((char *)v45 + v137);
      uint64_t v140 = v139[1];
      void *v138 = *v139;
      v138[1] = v140;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_33;
    case 0xDu:
      uint64_t v141 = v45[1];
      *uint64_t v44 = *v45;
      v44[1] = v141;
      uint64_t v142 = v45[3];
      v44[2] = v45[2];
      v44[3] = v142;
      uint64_t v143 = v45[5];
      v44[4] = v45[4];
      v44[5] = v143;
      uint64_t v144 = v45[7];
      v44[6] = v45[6];
      v44[7] = v144;
      v44[8] = v45[8];
      uint64_t v145 = type metadata accessor for SevereAlertComponentViewModel();
      uint64_t v146 = *(int *)(v145 + 36);
      uint64_t v311 = (char *)v45 + v146;
      __dstd = (char *)v44 + v146;
      uint64_t v327 = v42;
      uint64_t v147 = type metadata accessor for WeatherAlert.Prominence();
      uint64_t v307 = *(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v148 = v147;
      uint64_t v42 = v327;
      v307(__dstd, v311, v148);
      *(void *)((char *)v44 + *(int *)(v145 + 40)) = *(void *)((char *)v45 + *(int *)(v145 + 40));
      goto LABEL_33;
    case 0xEu:
      uint64_t v149 = type metadata accessor for SunriseSunsetViewModel();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v149 - 8) + 16))(v44, v45, v149);
      goto LABEL_33;
    case 0xFu:
      uint64_t v150 = v45[1];
      *uint64_t v44 = *v45;
      v44[1] = v150;
      uint64_t v151 = v45[3];
      v44[2] = v45[2];
      v44[3] = v151;
      uint64_t v152 = v45[5];
      v44[4] = v45[4];
      v44[5] = v152;
      uint64_t v153 = v45[7];
      v44[6] = v45[6];
      v44[7] = v153;
      uint64_t v323 = v11;
      char v328 = v42;
      uint64_t v154 = v45[9];
      v44[8] = v45[8];
      v44[9] = v154;
      uint64_t v155 = v45[11];
      v44[10] = v45[10];
      v44[11] = v155;
      uint64_t v156 = v45[13];
      v44[12] = v45[12];
      v44[13] = v156;
      uint64_t v157 = v45[15];
      v44[14] = v45[14];
      v44[15] = v157;
      uint64_t v158 = v45[17];
      v44[16] = v45[16];
      v44[17] = v158;
      uint64_t v159 = v45[19];
      v44[18] = v45[18];
      v44[19] = v159;
      uint64_t v160 = v45[21];
      v44[20] = v45[20];
      v44[21] = v160;
      uint64_t v161 = v45[23];
      v44[22] = v45[22];
      v44[23] = v161;
      uint64_t v162 = v45[24];
      uint64_t v163 = v45[25];
      v44[24] = v162;
      v44[25] = v163;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v11 = v323;
      swift_bridgeObjectRetain();
      uint64_t v42 = v328;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_33;
    case 0x10u:
      *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
      uint64_t v164 = v45[3];
      v44[2] = v45[2];
      v44[3] = v164;
      uint64_t v165 = type metadata accessor for UVIndexComponentViewModel();
      uint64_t v166 = *(int *)(v165 + 28);
      uint64_t v312 = (char *)v44 + v166;
      __dste = v12;
      uint64_t v167 = v11;
      uint64_t v168 = (char *)v45 + v166;
      uint64_t v169 = v42;
      uint64_t v170 = type metadata accessor for WeatherDescription();
      uint64_t v171 = *(void (**)(char *, char *, uint64_t))(*(void *)(v170 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v172 = v168;
      uint64_t v11 = v167;
      uint64_t v12 = __dste;
      uint64_t v173 = v170;
      uint64_t v42 = v169;
      v171(v312, v172, v173);
      *(void *)((char *)v44 + *(int *)(v165 + 32)) = *(void *)((char *)v45 + *(int *)(v165 + 32));
      swift_bridgeObjectRetain();
      goto LABEL_33;
    case 0x11u:
      uint64_t v174 = v45[1];
      *uint64_t v44 = *v45;
      v44[1] = v174;
      uint64_t v175 = v45[3];
      v44[2] = v45[2];
      v44[3] = v175;
      uint64_t v176 = v45[5];
      v44[4] = v45[4];
      v44[5] = v176;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_33;
    case 0x12u:
      uint64_t v177 = v45[1];
      *uint64_t v44 = *v45;
      v44[1] = v177;
      uint64_t v178 = v45[3];
      v44[2] = v45[2];
      v44[3] = v178;
      uint64_t v179 = v45[5];
      v44[4] = v45[4];
      v44[5] = v179;
      uint64_t v180 = v45[7];
      v44[6] = v45[6];
      v44[7] = v180;
      uint64_t v181 = v45[9];
      v44[8] = v45[8];
      v44[9] = v181;
      uint64_t v182 = v45[11];
      v44[10] = v45[10];
      v44[11] = v182;
      uint64_t v183 = v45[13];
      v44[12] = v45[12];
      v44[13] = v183;
      uint64_t v184 = v45[15];
      v44[14] = v45[14];
      v44[15] = v184;
      uint64_t v185 = v45[17];
      v44[16] = v45[16];
      v44[17] = v185;
      uint64_t v186 = v45[19];
      v44[18] = v45[18];
      v44[19] = v186;
      uint64_t v187 = v45[21];
      v44[20] = v45[20];
      v44[21] = v187;
      *((_OWORD *)v44 + 11) = *((_OWORD *)v45 + 11);
      v44[24] = v45[24];
      __dstf = (int *)type metadata accessor for WindComponentViewModel();
      uint64_t v188 = __dstf[17];
      uint64_t v301 = (char *)v45 + v188;
      uint64_t v302 = (char *)v44 + v188;
      uint64_t v189 = type metadata accessor for WindComponentCompassViewModel();
      uint64_t v190 = *(void (**)(char *, char *, uint64_t))(*(void *)(v189 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v190(v302, v301, v189);
      *(void *)((char *)v44 + __dstf[18]) = *(void *)((char *)v45 + __dstf[18]);
      swift_bridgeObjectRetain();
LABEL_33:
      swift_storeEnumTagMultiPayload();
      goto LABEL_34;
    default:
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
LABEL_34:
      uint64_t v88 = v330;
      uint64_t v87 = v331;
      uint64_t v89 = v329;
      goto LABEL_35;
  }
}

uint64_t type metadata accessor for LocationComponentHeaderViewModel(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E6F5C8);
}

uint64_t type metadata accessor for LocationComponentViewModel()
{
  uint64_t result = qword_100EA9108;
  if (!qword_100EA9108) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for LocationComponentContainerViewModel()
{
  uint64_t result = qword_100EB3880;
  if (!qword_100EB3880) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for LocationComponentAction(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E6E108);
}

uint64_t type metadata accessor for LocationComponentHeaderViewModel.Description(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E6F518);
}

uint64_t sub_10019816C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v153 = type metadata accessor for Date();
  uint64_t v150 = *(void (**)(uint64_t, uint64_t))(*(void *)(v153 - 8) + 16);
  v150(a1, a2);
  uint64_t v5 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  uint64_t v6 = v5[5];
  char v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = v8[1];
  *char v7 = *v8;
  v7[1] = v9;
  uint64_t v10 = v5[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  uint64_t v14 = v5[7];
  uint64_t v15 = (char *)(a1 + v14);
  uint64_t v16 = (char *)(a2 + v14);
  uint64_t v17 = type metadata accessor for TimeZone();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v147 = v18;
  uint64_t v148 = v17;
  v18(v15, v16, v17);
  uint64_t v19 = v5[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_10017DF08(&qword_100E65250);
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16);
  v23(v20, v21, v22);
  uint64_t v152 = v23;
  v23(a1 + v5[9], a2 + v5[9], v22);
  uint64_t v24 = v5[10];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (void *)(a2 + v24);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = v5[11];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(a2 + v28);
  uint64_t v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  *(void *)(a1 + v5[12]) = *(void *)(a2 + v5[12]);
  *(unsigned char *)(a1 + v5[13]) = *(unsigned char *)(a2 + v5[13]);
  uint64_t v32 = v5[14];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (void *)(a2 + v32);
  uint64_t v35 = v34[1];
  *uint64_t v33 = *v34;
  v33[1] = v35;
  uint64_t v36 = v5[15];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (const void *)(a2 + v36);
  uint64_t v39 = type metadata accessor for Precipitation();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v149 = v39;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
  {
    uint64_t v40 = sub_10017DF08(&qword_100E6B8C8);
    memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
  }
  *(unsigned char *)(a1 + v5[16]) = *(unsigned char *)(a2 + v5[16]);
  uint64_t v41 = v5[17];
  uint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (void *)(a2 + v41);
  uint64_t v44 = v43[1];
  *uint64_t v42 = *v43;
  v42[1] = v44;
  uint64_t v45 = v5[18];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (void *)(a2 + v45);
  uint64_t v48 = v47[1];
  *uint64_t v46 = *v47;
  v46[1] = v48;
  uint64_t v49 = v5[19];
  uint64_t v50 = (void *)(a1 + v49);
  uint64_t v51 = (void *)(a2 + v49);
  uint64_t v52 = v51[1];
  *uint64_t v50 = *v51;
  v50[1] = v52;
  *(void *)(a1 + v5[20]) = *(void *)(a2 + v5[20]);
  uint64_t v53 = a3[5];
  uint64_t v54 = a1 + v53;
  uint64_t v55 = a2 + v53;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v152(v54, v55, v22);
  v152(a1 + a3[6], a2 + a3[6], v22);
  uint64_t v56 = a3[7];
  uint64_t v57 = (void *)(a1 + v56);
  uint64_t v58 = (const void *)(a2 + v56);
  if (_s7Weather24LocationCompositionStateOwet_0(a2 + v56, 1, v22))
  {
    uint64_t v59 = sub_10017DF08(qword_100E65268);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    v152((uint64_t)v57, (uint64_t)v58, v22);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 0, 1, v22);
  }
  uint64_t v60 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v60) = *(_OWORD *)(a2 + v60);
  uint64_t v61 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  uint64_t v62 = (void *)(a1 + v61);
  uint64_t v63 = (void *)(a2 + v61);
  uint64_t v64 = v63[1];
  *uint64_t v62 = *v63;
  v62[1] = v64;
  uint64_t v65 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v65) = *(unsigned char *)(a2 + v65);
  uint64_t v66 = a3[14];
  uint64_t v67 = (void *)(a1 + v66);
  uint64_t v68 = a2 + v66;
  uint64_t v69 = *(void *)(a2 + v66 + 8);
  *uint64_t v67 = *(void *)(a2 + v66);
  v67[1] = v69;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v70 = *(int *)(sub_10017DF08(&qword_100E6B8C0) + 32);
  uint64_t v71 = (char *)v67 + v70;
  uint64_t v72 = (char *)(v68 + v70);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v72, 1, (uint64_t)v5))
  {
    uint64_t v73 = sub_10017DF08(&qword_100E6B8D0);
    memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v150)(v71, v72, v153);
    uint64_t v74 = v5[5];
    uint64_t v75 = &v71[v74];
    uint64_t v76 = &v72[v74];
    uint64_t v77 = *((void *)v76 + 1);
    *(void *)uint64_t v75 = *(void *)v76;
    *((void *)v75 + 1) = v77;
    uint64_t v78 = v5[6];
    uint64_t v79 = &v71[v78];
    uint64_t v80 = &v72[v78];
    uint64_t v81 = *((void *)v80 + 1);
    *(void *)uint64_t v79 = *(void *)v80;
    *((void *)v79 + 1) = v81;
    uint64_t v82 = v5[7];
    uint64_t v83 = &v71[v82];
    uint64_t v84 = &v72[v82];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v147(v83, v84, v148);
    v152((uint64_t)&v71[v5[8]], (uint64_t)&v72[v5[8]], v22);
    v152((uint64_t)&v71[v5[9]], (uint64_t)&v72[v5[9]], v22);
    uint64_t v85 = v5[10];
    uint64_t v86 = &v71[v85];
    uint64_t v87 = &v72[v85];
    uint64_t v88 = *((void *)v87 + 1);
    *(void *)uint64_t v86 = *(void *)v87;
    *((void *)v86 + 1) = v88;
    uint64_t v89 = v5[11];
    uint64_t v90 = &v71[v89];
    int v91 = &v72[v89];
    uint64_t v92 = *((void *)v91 + 1);
    *(void *)uint64_t v90 = *(void *)v91;
    *((void *)v90 + 1) = v92;
    *(void *)&v71[v5[12]] = *(void *)&v72[v5[12]];
    v71[v5[13]] = v72[v5[13]];
    uint64_t v93 = v5[14];
    uint64_t v94 = &v71[v93];
    uint64_t v95 = &v72[v93];
    uint64_t v96 = *((void *)v95 + 1);
    *(void *)uint64_t v94 = *(void *)v95;
    *((void *)v94 + 1) = v96;
    uint64_t v97 = v5[15];
    uint64_t v98 = &v71[v97];
    uint64_t v99 = &v72[v97];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v99, 1, v149))
    {
      uint64_t v100 = sub_10017DF08(&qword_100E6B8C8);
      memcpy(v98, v99, *(void *)(*(void *)(v100 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 16))(v98, v99, v149);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 0, 1, v149);
    }
    v71[v5[16]] = v72[v5[16]];
    uint64_t v101 = v5[17];
    uint64_t v102 = &v71[v101];
    uint64_t v103 = &v72[v101];
    uint64_t v104 = *((void *)v103 + 1);
    *(void *)uint64_t v102 = *(void *)v103;
    *((void *)v102 + 1) = v104;
    uint64_t v105 = v5[18];
    uint64_t v106 = &v71[v105];
    uint64_t v107 = &v72[v105];
    uint64_t v108 = *((void *)v107 + 1);
    *(void *)uint64_t v106 = *(void *)v107;
    *((void *)v106 + 1) = v108;
    uint64_t v109 = v5[19];
    uint64_t v110 = &v71[v109];
    uint64_t v111 = &v72[v109];
    uint64_t v112 = *((void *)v111 + 1);
    *(void *)uint64_t v110 = *(void *)v111;
    *((void *)v110 + 1) = v112;
    *(void *)&v71[v5[20]] = *(void *)&v72[v5[20]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v71, 0, 1, (uint64_t)v5);
  }
  uint64_t v113 = a3[15];
  uint64_t v114 = a1 + v113;
  uint64_t v115 = a2 + v113;
  uint64_t v116 = sub_10017DF08(&qword_100E73A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 16))(v114, v115, v116);
  uint64_t v117 = a3[16];
  uint64_t v118 = a1 + v117;
  uint64_t v119 = a2 + v117;
  uint64_t v120 = sub_10017DF08(&qword_100E7DDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v120 - 8) + 16))(v118, v119, v120);
  uint64_t v121 = a3[17];
  uint64_t v122 = a1 + v121;
  uint64_t v123 = a2 + v121;
  uint64_t v124 = *(void *)v123;
  LOBYTE(v119) = *(unsigned char *)(v123 + 8);
  sub_100195B7C(*(void *)v123, v119);
  *(void *)uint64_t v122 = v124;
  *(unsigned char *)(v122 + 8) = v119;
  uint64_t v125 = a3[18];
  uint64_t v126 = a1 + v125;
  uint64_t v127 = a2 + v125;
  uint64_t v128 = *(void *)v127;
  LOBYTE(v119) = *(unsigned char *)(v127 + 8);
  sub_100195B7C(*(void *)v127, v119);
  *(void *)uint64_t v126 = v128;
  *(unsigned char *)(v126 + 8) = v119;
  uint64_t v129 = a3[19];
  uint64_t v130 = a1 + v129;
  uint64_t v131 = a2 + v129;
  uint64_t v132 = *(void *)v131;
  LOBYTE(v119) = *(unsigned char *)(v131 + 8);
  sub_100195B7C(*(void *)v131, v119);
  *(void *)uint64_t v130 = v132;
  *(unsigned char *)(v130 + 8) = v119;
  uint64_t v133 = a3[20];
  uint64_t v134 = (void *)(a1 + v133);
  uint64_t v135 = (void *)(a2 + v133);
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v136 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v136 - 8) + 16))(v134, v135, v136);
  }
  else
  {
    void *v134 = *v135;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v137 = a3[21];
  uint64_t v138 = a3[22];
  uint64_t v139 = (void *)(a1 + v137);
  uint64_t v140 = (void *)(a2 + v137);
  uint64_t v141 = v140[1];
  void *v139 = *v140;
  v139[1] = v141;
  uint64_t v142 = (char *)(a1 + v138);
  uint64_t v143 = (char *)(a2 + v138);
  swift_retain();
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v143, 1, v153))
  {
    uint64_t v144 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v142, v143, *(void *)(*(void *)(v144 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v150)(v142, v143, v153);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v142, 0, 1, v153);
  }
  uint64_t v145 = sub_10017DF08(&qword_100E7DDF8);
  *(void *)&v142[*(int *)(v145 + 28)] = *(void *)&v143[*(int *)(v145 + 28)];
  swift_retain();
  return a1;
}

void *sub_100198AB8(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_10017DF08(&qword_100E65250);
  uint64_t v132 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  v132(v8, v9, v10);
  v132(&a1[v6[6]], &a2[v6[6]], v10);
  v132(&a1[v6[7]], &a2[v6[7]], v10);
  uint64_t v11 = v6[8];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = *((void *)v13 + 1);
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = v14;
  uint64_t v15 = v6[9];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = *((void *)v17 + 1);
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = v18;
  uint64_t v19 = a3[5];
  uint64_t v20 = a3[6];
  uint64_t v21 = &a1[v19];
  uint64_t v22 = (uint64_t *)&a2[v19];
  uint64_t v23 = *v22;
  uint64_t v24 = v22[1];
  uint64_t v25 = *(void *)&a2[v20];
  *(void *)uint64_t v21 = v23;
  *((void *)v21 + 1) = v24;
  *(void *)&a1[v20] = v25;
  uint64_t v130 = a3;
  uint64_t v131 = a1;
  uint64_t v26 = a3[7];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  uint64_t v29 = type metadata accessor for Date();
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v124 = v30;
  uint64_t v125 = v29;
  v30(v27, v28, v29);
  uint64_t v31 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  uint64_t v32 = v31[5];
  uint64_t v33 = &v27[v32];
  uint64_t v34 = &v28[v32];
  uint64_t v35 = *((void *)v34 + 1);
  *(void *)uint64_t v33 = *(void *)v34;
  *((void *)v33 + 1) = v35;
  uint64_t v36 = v31[6];
  uint64_t v37 = &v27[v36];
  uint64_t v38 = &v28[v36];
  uint64_t v39 = *((void *)v38 + 1);
  *(void *)uint64_t v37 = *(void *)v38;
  *((void *)v37 + 1) = v39;
  uint64_t v40 = v31[7];
  uint64_t v126 = &v28[v40];
  uint64_t v128 = &v27[v40];
  uint64_t v41 = type metadata accessor for TimeZone();
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v122 = v42;
  uint64_t v123 = v41;
  v42(v128, v126, v41);
  v132(&v27[v31[8]], &v28[v31[8]], v10);
  uint64_t v129 = v10;
  v132(&v27[v31[9]], &v28[v31[9]], v10);
  uint64_t v43 = v31[10];
  uint64_t v44 = &v27[v43];
  uint64_t v45 = &v28[v43];
  uint64_t v46 = *((void *)v45 + 1);
  *(void *)uint64_t v44 = *(void *)v45;
  *((void *)v44 + 1) = v46;
  uint64_t v47 = v31[11];
  uint64_t v48 = &v27[v47];
  uint64_t v49 = &v28[v47];
  uint64_t v50 = *((void *)v49 + 1);
  *(void *)uint64_t v48 = *(void *)v49;
  *((void *)v48 + 1) = v50;
  *(void *)&v27[v31[12]] = *(void *)&v28[v31[12]];
  v27[v31[13]] = v28[v31[13]];
  uint64_t v51 = v31[14];
  uint64_t v52 = &v27[v51];
  uint64_t v53 = &v28[v51];
  uint64_t v54 = *((void *)v53 + 1);
  *(void *)uint64_t v52 = *(void *)v53;
  *((void *)v52 + 1) = v54;
  uint64_t v55 = v31[15];
  uint64_t v56 = &v27[v55];
  uint64_t v57 = &v28[v55];
  uint64_t v58 = type metadata accessor for Precipitation();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v127 = v58;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v58))
  {
    uint64_t v59 = sub_10017DF08(&qword_100E6B8C8);
    memcpy(v56, v57, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, 0, 1, v58);
  }
  v27[v31[16]] = v28[v31[16]];
  uint64_t v60 = v31[17];
  uint64_t v61 = &v27[v60];
  uint64_t v62 = &v28[v60];
  uint64_t v63 = *((void *)v62 + 1);
  *(void *)uint64_t v61 = *(void *)v62;
  *((void *)v61 + 1) = v63;
  uint64_t v64 = v31[18];
  uint64_t v65 = &v27[v64];
  uint64_t v66 = &v28[v64];
  uint64_t v67 = *((void *)v66 + 1);
  *(void *)uint64_t v65 = *(void *)v66;
  *((void *)v65 + 1) = v67;
  uint64_t v68 = v31[19];
  uint64_t v69 = &v27[v68];
  uint64_t v70 = &v28[v68];
  uint64_t v71 = *((void *)v70 + 1);
  *(void *)uint64_t v69 = *(void *)v70;
  *((void *)v69 + 1) = v71;
  *(void *)&v27[v31[20]] = *(void *)&v28[v31[20]];
  uint64_t v72 = v130[9];
  *(void *)((char *)v131 + v130[8]) = *(void *)&a2[v130[8]];
  *(_OWORD *)((char *)v131 + v72) = *(_OWORD *)&a2[v72];
  uint64_t v73 = v130[11];
  *(_OWORD *)((char *)v131 + v130[10]) = *(_OWORD *)&a2[v130[10]];
  *(void *)((char *)v131 + v73) = *(void *)&a2[v73];
  uint64_t v74 = v130[13];
  *((unsigned char *)v131 + v130[12]) = a2[v130[12]];
  uint64_t v75 = (void *)((char *)v131 + v74);
  uint64_t v76 = &a2[v74];
  uint64_t v77 = *(void *)&a2[v74 + 8];
  *uint64_t v75 = *(void *)&a2[v74];
  v75[1] = v77;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  uint64_t v78 = *(int *)(sub_10017DF08(&qword_100E6B8C0) + 32);
  uint64_t v79 = (char *)v75 + v78;
  uint64_t v80 = &v76[v78];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v76[v78], 1, (uint64_t)v31))
  {
    uint64_t v81 = sub_10017DF08(&qword_100E6B8D0);
    memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
  }
  else
  {
    v124(v79, v80, v125);
    uint64_t v82 = v31[5];
    uint64_t v83 = &v79[v82];
    uint64_t v84 = &v80[v82];
    uint64_t v85 = *((void *)v84 + 1);
    *(void *)uint64_t v83 = *(void *)v84;
    *((void *)v83 + 1) = v85;
    uint64_t v86 = v31[6];
    uint64_t v87 = &v79[v86];
    uint64_t v88 = &v80[v86];
    uint64_t v89 = *((void *)v88 + 1);
    *(void *)uint64_t v87 = *(void *)v88;
    *((void *)v87 + 1) = v89;
    uint64_t v90 = v31[7];
    int v91 = &v79[v90];
    uint64_t v92 = &v80[v90];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v122(v91, v92, v123);
    v132(&v79[v31[8]], &v80[v31[8]], v129);
    v132(&v79[v31[9]], &v80[v31[9]], v129);
    uint64_t v93 = v31[10];
    uint64_t v94 = &v79[v93];
    uint64_t v95 = &v80[v93];
    uint64_t v96 = *((void *)v95 + 1);
    *(void *)uint64_t v94 = *(void *)v95;
    *((void *)v94 + 1) = v96;
    uint64_t v97 = v31[11];
    uint64_t v98 = &v79[v97];
    uint64_t v99 = &v80[v97];
    uint64_t v100 = *((void *)v99 + 1);
    *(void *)uint64_t v98 = *(void *)v99;
    *((void *)v98 + 1) = v100;
    *(void *)&v79[v31[12]] = *(void *)&v80[v31[12]];
    v79[v31[13]] = v80[v31[13]];
    uint64_t v101 = v31[14];
    uint64_t v102 = &v79[v101];
    uint64_t v103 = &v80[v101];
    uint64_t v104 = *((void *)v103 + 1);
    *(void *)uint64_t v102 = *(void *)v103;
    *((void *)v102 + 1) = v104;
    uint64_t v105 = v31[15];
    uint64_t v106 = &v79[v105];
    uint64_t v107 = &v80[v105];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v107, 1, v127))
    {
      uint64_t v108 = sub_10017DF08(&qword_100E6B8C8);
      memcpy(v106, v107, *(void *)(*(void *)(v108 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 16))(v106, v107, v127);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v106, 0, 1, v127);
    }
    v79[v31[16]] = v80[v31[16]];
    uint64_t v109 = v31[17];
    uint64_t v110 = &v79[v109];
    uint64_t v111 = &v80[v109];
    uint64_t v112 = *((void *)v111 + 1);
    *(void *)uint64_t v110 = *(void *)v111;
    *((void *)v110 + 1) = v112;
    uint64_t v113 = v31[18];
    uint64_t v114 = &v79[v113];
    uint64_t v115 = &v80[v113];
    uint64_t v116 = *((void *)v115 + 1);
    *(void *)uint64_t v114 = *(void *)v115;
    *((void *)v114 + 1) = v116;
    uint64_t v117 = v31[19];
    uint64_t v118 = &v79[v117];
    uint64_t v119 = &v80[v117];
    uint64_t v120 = *((void *)v119 + 1);
    *(void *)uint64_t v118 = *(void *)v119;
    *((void *)v118 + 1) = v120;
    *(void *)&v79[v31[20]] = *(void *)&v80[v31[20]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v79, 0, 1, (uint64_t)v31);
  }
  return v131;
}

uint64_t sub_1001991B8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_10017DF08(&qword_100E65250);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(a1 + v4[6], v6);
  v7(a1 + v4[7], v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v21 = a2;
  uint64_t v8 = a1 + *(int *)(a2 + 28);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v20(v8, v9);
  uint64_t v10 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = v8 + v10[7];
  uint64_t v12 = type metadata accessor for TimeZone();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  v19(v11, v12);
  v7(v8 + v10[8], v6);
  v7(v8 + v10[9], v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = v8 + v10[15];
  uint64_t v14 = type metadata accessor for Precipitation();
  if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = a1 + *(int *)(v21 + 52);
  swift_release();
  swift_release();
  uint64_t v16 = v15 + *(int *)(sub_10017DF08(&qword_100E6B8C0) + 32);
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v16, 1, (uint64_t)v10);
  if (!result)
  {
    v20(v16, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v19(v16 + v10[7], v12);
    v7(v16 + v10[8], v6);
    v7(v16 + v10[9], v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v18 = v16 + v10[15];
    if (!_s7Weather24LocationCompositionStateOwet_0(v18, 1, v14)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v18, v14);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E96E40);
}

uint64_t sub_100199640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007E50B8);
}

uint64_t type metadata accessor for DailyForecastComponentViewModel(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E96D48);
}

uint64_t sub_100199674(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for Locale();
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = type metadata accessor for WeatherDataModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + a2[7];
  uint64_t v9 = sub_10017DF08(&qword_100E63738);
  if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9))
  {
    uint64_t v10 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
  }
  uint64_t v11 = a1 + a2[8];
  type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v13 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v11, v13);
  }
  else if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = a1 + a2[9];
  uint64_t v15 = type metadata accessor for WeatherDataOverrides();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v14, 1, v15);
  if (!result)
  {
    uint64_t v17 = type metadata accessor for Date();
    if (!_s7Weather24LocationCompositionStateOwet_0(v14, 1, v17)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v14, v17);
    }
    uint64_t v18 = v14 + *(int *)(v15 + 20);
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v18, 1, v17);
    if (!result)
    {
      uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8);
      return v19(v18, v17);
    }
  }
  return result;
}

uint64_t sub_1001998EC()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_100199938(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v10 = v5 + 8;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (a1 + v6 + 49) & ~v6;
  v11(v7, v4);
  uint64_t v8 = (*(void *)(v10 + 56) + v6 + v7) & ~v6;

  return ((uint64_t (*)(uint64_t, uint64_t))v11)(v8, v4);
}

uint64_t sub_100199A00()
{
  return sub_100199A24();
}

uint64_t sub_100199A24()
{
  unint64_t v0 = sub_100199A64();
  sub_10017F820(v0, (uint64_t)&unk_100E0CF88);

  return EnvironmentValues.subscript.getter();
}

unint64_t sub_100199A64()
{
  unint64_t result = qword_100E65F90;
  if (!qword_100E65F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65F90);
  }
  return result;
}

uint64_t sub_100199AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for RecordLocationHeaderFrameViewModifier(uint64_t a1)
{
  swift_release();
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  char v6 = *(unsigned char *)(a1 + 56);

  return sub_100191934(v2, v3, v4, v5, v6);
}

uint64_t destroy for LocationNameModifier()
{
  return swift_release();
}

uint64_t sub_100199C00(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for SearchViewState.ViewState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!EnumCaseMultiPayload)
  {
    uint64_t v6 = type metadata accessor for CodableError();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  uint64_t v8 = type metadata accessor for Location();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v10(v7, v8);
  }
  return result;
}

uint64_t sub_100199D14(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_10017DF08(&qword_100E63D98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = v4 + *(int *)(type metadata accessor for LocationHeaderViewMeasurements(0) + 32);
    uint64_t v6 = v5 + *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

uint64_t sub_100199DF0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10018CCC4(*(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(unsigned char *)(a1 + 96));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ContentSizeCategory();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_100199EE0(uint64_t a1, void (*a2)(void))
{
  return EnvironmentValues.subscript.setter();
}

uint64_t sub_100199F28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = *(int *)(a3 + 40);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
    *(unsigned char *)(v8 + 17) = *(unsigned char *)(v9 + 17);
    *(unsigned char *)(v8 + 18) = *(unsigned char *)(v9 + 18);
    uint64_t v10 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v11 = v8 + v10;
    uint64_t v12 = v9 + v10;
    uint64_t v13 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    *(void *)uint64_t v8 = *(void *)v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = *(int *)(a3 + 44);
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)v16;
  uint64_t v18 = *(void *)(v16 + 8);
  uint64_t v19 = *(void *)(v16 + 16);
  uint64_t v20 = *(void *)(v16 + 24);
  uint64_t v21 = *(void *)(v16 + 32);
  uint64_t v22 = *(void *)(v16 + 40);
  uint64_t v24 = *(void *)(v16 + 48);
  uint64_t v23 = *(void *)(v16 + 56);
  uint64_t v32 = a1;
  uint64_t v25 = *(void *)(v16 + 64);
  char v31 = *(unsigned char *)(v16 + 72);
  sub_1001910C8(*(void *)v16, v18, v19, v20, v21, v22, v24, v23, v25, v31);
  *(void *)uint64_t v15 = v17;
  *(void *)(v15 + 8) = v18;
  *(void *)(v15 + 16) = v19;
  *(void *)(v15 + 24) = v20;
  *(void *)(v15 + 32) = v21;
  *(void *)(v15 + 40) = v22;
  *(void *)(v15 + 48) = v24;
  *(void *)(v15 + 56) = v23;
  *(void *)(v15 + 64) = v25;
  *(unsigned char *)(v15 + 72) = v31;
  uint64_t v26 = *(int *)(v34 + 48);
  uint64_t v27 = v32 + v26;
  uint64_t v28 = v33 + v26;
  uint64_t v29 = *(void *)v28;
  LOBYTE(v23) = *(unsigned char *)(v28 + 8);
  sub_100195B7C(*(void *)v28, v23);
  *(void *)uint64_t v27 = v29;
  *(unsigned char *)(v27 + 8) = v23;
  return v32;
}

uint64_t destroy for NotificationsOptInView(uint64_t a1)
{
  swift_release();
  swift_release();

  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 32);
}

uint64_t sub_10019A14C(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = a1 + a2[10];
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = v4 + *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + a2[11];
  sub_10018CCC4(*(void *)v7, *(void *)(v7 + 8), *(void *)(v7 + 16), *(void *)(v7 + 24), *(void *)(v7 + 32), *(void *)(v7 + 40), *(void *)(v7 + 48), *(void *)(v7 + 56), *(void *)(v7 + 64), *(unsigned char *)(v7 + 72));
  uint64_t v8 = a1 + a2[12];
  uint64_t v9 = *(void *)v8;
  char v10 = *(unsigned char *)(v8 + 8);

  return sub_10018F6D8(v9, v10);
}

uint64_t sub_10019A258(uint64_t a1, uint64_t a2)
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 16);
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v4, 1, v5);
    if (!result)
    {
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
      return v7(v4, v5);
    }
  }
  else
  {
    return swift_release();
  }
  return result;
}

unint64_t sub_10019A344()
{
  unint64_t result = qword_100E65F68;
  if (!qword_100E65F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65F68);
  }
  return result;
}

uint64_t sub_10019A390(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MainViewModel.ModalModule(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v4)
    && swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      uint64_t v5 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
    }
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v6 = a1 + *(int *)(a2 + 36);
  uint64_t v7 = *(void *)v6;
  char v8 = *(unsigned char *)(v6 + 8);

  return sub_10018F6D8(v7, v8);
}

uint64_t sub_10019A4B8()
{
  uint64_t v0 = type metadata accessor for LocationModel();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for LocationViewerViewModel();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001520F8();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, v0);
  sub_100151660();
  LocationModel.identifier.getter();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_10019A614()
{
  sub_10019A65C();

  return EnvironmentValues.subscript.getter();
}

unint64_t sub_10019A65C()
{
  unint64_t result = qword_100E63DC8;
  if (!qword_100E63DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E63DC8);
  }
  return result;
}

uint64_t sub_10019A6A8(void (*a1)(void))
{
  a1();
  EnvironmentValues.subscript.getter();
  return v2;
}

uint64_t sub_10019A6F0()
{
  swift_release();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_10019A738()
{
  sub_100162EA0();
  sub_10017B0B8();
  swift_release();
  sub_10019D3B0();
  sub_10017DF08(&qword_100E62D60);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for DynamicTypeSize();
    sub_100162E4C();
    sub_100162F0C();
    v0();
  }
  else
  {
    swift_release();
  }
  sub_100188768();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (sub_10017A0C8() == 1)
  {
    uint64_t v1 = type metadata accessor for UserInterfaceSizeClass();
    if (!sub_100129098(v1))
    {
      sub_100162880();
      sub_100162F0C();
      v2();
    }
  }
  else
  {
    swift_release();
  }
  sub_1001640A0();
  sub_10017DF08(&qword_100E83C68);
  if (sub_10017A0C8() == 1)
  {
    uint64_t v3 = type metadata accessor for TargetWindowSizeClass();
    if (!sub_100129098(v3))
    {
      sub_100162880();
      sub_100162F0C();
      v4();
    }
  }
  else
  {
    swift_release();
  }
  sub_100181C48();
  sub_100162E4C();
  uint64_t v6 = *(void (**)(uint64_t))(v5 + 8);
  uint64_t v7 = sub_100185804();
  v6(v7);
  sub_100188EA4();
  sub_1001A4A84();
  sub_1001D14B0();
  sub_100188CC0();
  sub_100162E4C();
  sub_100162F0C();
  v8();
  sub_10017DF08(&qword_100EB4850);
  sub_10019DCE8();
  if (!sub_1001A1B54())
  {
    uint64_t v9 = sub_100186E74();
    v6(v9);
  }
  sub_10017DF08(&qword_100EB4860);
  sub_10019DCE8();
  uint64_t v10 = sub_10019B810();
  if (!sub_100129098(v10))
  {
    sub_100162880();
    uint64_t v11 = sub_100162CFC();
    v12(v11);
  }
  sub_10017DF08(&qword_100EB4868);
  sub_1001D16B8();
  sub_10017F744();
  if (!sub_100164A14((uint64_t)v6))
  {
    sub_100162880();
    uint64_t v13 = sub_10018AC9C();
    v14(v13);
  }
  sub_10017DF08(&qword_100EB4870);
  sub_10012B664();
  sub_1001833B4();
  swift_release();
  sub_1001A36A8();
  sub_1001A36A8();
  sub_1001D2300();
  sub_1001A02F0();
  swift_release();
  sub_100162694();
  return swift_deallocObject();
}

void sub_10019AA18(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X7>, uint64_t a7@<X8>, unint64_t a8)
{
  sub_10020FA74(a1, a2, a3, a4, a5, 0xD000000000000017, (a7 - 32) | 0x8000000000000000, a6, a8);
}

uint64_t sub_10019AA38()
{
  return 0;
}

uint64_t sub_10019AA4C()
{
  return swift_beginAccess();
}

unsigned char *sub_10019AA68@<X0>(unsigned char *result@<X0>, char a2@<W8>)
{
  *unint64_t result = a2;
  return result;
}

uint64_t sub_10019AA70(uint64_t result)
{
  *(void *)(v1 + 1128) = result;
  return result;
}

uint64_t sub_10019AA7C()
{
  return v0;
}

uint64_t sub_10019AA90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void *)(v2 - 360);
  return _s7Weather24LocationCompositionStateOwst_0(v1 + a1, 1, 1, v4);
}

uint64_t sub_10019AAC0()
{
  return sub_1001781AC(v1, v0);
}

uint64_t sub_10019AAEC()
{
  return v0;
}

uint64_t sub_10019AB04()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_10019AB3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 240) = (char *)&a9 - v9;
  return 0;
}

void sub_10019AB54()
{
  sub_10016314C();
  sub_10018B004(v4, v5, v6);
  type metadata accessor for DayWeather();
  sub_100179C0C();
  __chkstk_darwin(v7);
  sub_100189DD0();
  uint64_t v9 = __chkstk_darwin(v8);
  sub_10017F024(v9, v10, v11, v12, v13, v14, v15, v16, v36);
  sub_10017DF08(&qword_100E66CA0);
  sub_100179C0C();
  __chkstk_darwin(v17);
  sub_100162E88();
  sub_10017DF08(&qword_100E66CA8);
  sub_10018A360();
  __chkstk_darwin(v18);
  uint64_t v19 = sub_1001A0560();
  v20(v19);
  sub_1001246C8((unint64_t *)&qword_100E66CB0, &qword_100E66CA0);
  sub_10019B444();
  sub_10018A270();
  sub_1001246C8((unint64_t *)&qword_100E66CB8, &qword_100E66CA0);
  sub_100183994();
  sub_10019112C();
  if (v21)
  {
LABEL_8:
    sub_100178110(v3, &qword_100E66CA8);
    sub_1001D138C();
  }
  else
  {
    sub_100188FE0();
    while (1)
    {
      sub_100181ECC();
      uint64_t v22 = sub_100185248();
      v23(v22);
      uint64_t v24 = sub_100182EE0();
      v1(v24);
      uint64_t v25 = sub_1001859E8();
      v26(v25);
      sub_100179048();
      sub_100162F0C();
      v27();
      uint64_t v28 = sub_1001A3184();
      v0(v28);
      uint64_t v29 = sub_1001823D4();
      char v31 = v30(v29);
      uint64_t v1 = v2;
      if (v2)
      {
        sub_100162F0C();
        v34();
        sub_100178110(v3, &qword_100E66CA8);
        goto LABEL_12;
      }
      if (v31) {
        break;
      }
      sub_100162F0C();
      v32();
      sub_100183994();
      sub_10019112C();
      if (v21) {
        goto LABEL_8;
      }
    }
    sub_100178110(v3, &qword_100E66CA8);
    uint64_t v35 = sub_10019D508();
    v0(v35);
    uint64_t v33 = 0;
  }
  sub_10018A348(v3, v33);
LABEL_12:
  sub_1001194B0();
  sub_100163164();
}

uint64_t sub_10019ADB0()
{
  return v0;
}

uint64_t sub_10019ADF8@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t sub_10019AE08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a2 - 256);
  return sub_10024D364(a1, v4, v2);
}

uint64_t sub_10019AE24()
{
  return type metadata accessor for WeatherDescription();
}

uint64_t sub_10019AE5C(uint64_t a1)
{
  *(void *)(a1 + 16) = v2;
  return swift_retain();
}

uint64_t sub_10019AE78()
{
  return 30035;
}

uint64_t sub_10019AE98()
{
  return sub_1001781AC(v0, v1);
}

BOOL sub_10019AEC0@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_10019AEE4()
{
  return type metadata accessor for AppConfiguration();
}

uint64_t sub_10019AF1C()
{
  return Date.wc_addHours(_:calendar:)();
}

uint64_t sub_10019AF50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  return a23;
}

uint64_t sub_10019AF6C()
{
  return sub_10019AF8C() & 1;
}

uint64_t sub_10019AF8C()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  DayWeather.date.getter();
  char v4 = static Date.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4 & 1;
}

uint64_t sub_10019B078()
{
  return sub_100178160(v0, v1);
}

void sub_10019B090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v9[2] = v11;
  v9[3] = v10;
  v9[4] = a5;
  v9[5] = a6;
  v9[6] = a7;
  v9[7] = a8;
  v9[8] = v8;
  v9[9] = v12;
  v9[10] = v13;
  v9[11] = v14;
}

uint64_t sub_10019B0A8@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a3 - 256);
  return sub_100151718(a1, v4, a2);
}

uint64_t sub_10019B0C0(uint64_t a1)
{
  *(void *)(v1 - 88) = a1;
  return type metadata accessor for LocationComponentContainerViewModel();
}

uint64_t sub_10019B114@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 - 256);
  return sub_10024D364(a1, v4, a2);
}

uint64_t sub_10019B15C(uint64_t a1)
{
  return *(void *)a1;
}

void sub_10019B174(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3 = *(void *)(a2 + 16);
  Hasher._combine(_:)(v3);
}

uint64_t sub_10019B1A8()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_10019B1C4()
{
  _s7Weather24LocationCompositionStateOwst_0(v1, 0, 1, v0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_10019B1FC()
{
  sub_1001B1E64(v1, *(void *)(v0 + 40));
  return dispatch thunk of SavedLocationsManagerType.savedLocations.getter();
}

void sub_10019B238(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t sub_10019B258()
{
  return swift_retain();
}

uint64_t sub_10019B270()
{
  return type metadata accessor for BackgroundMoonData();
}

uint64_t sub_10019B298()
{
  return v0;
}

uint64_t sub_10019B2A4()
{
  return v0;
}

void sub_10019B2B4(uint64_t a1@<X8>)
{
  uint64_t v2 = *(uint64_t **)(a1 - 256);
  sub_1000C1470(v2);
}

void sub_10019B2FC()
{
}

uint64_t sub_10019B324()
{
  return *(void *)(v0 - 112);
}

uint64_t sub_10019B340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 200) = (char *)&a9 - v9;
  return 0;
}

uint64_t sub_10019B358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_100176EF0(v13, v11, v10, a4, a5, v12, a7, a8, a9, a10);
}

uint64_t sub_10019B378()
{
  return v0 + *(int *)(v1 + 20);
}

uint64_t sub_10019B38C()
{
  return swift_retain();
}

uint64_t sub_10019B3A4()
{
  return type metadata accessor for Date();
}

uint64_t sub_10019B3CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v5 - 464), 1, 1, a4);
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v5 - 552), 1, 1, v4);
  return type metadata accessor for PreviewLocation();
}

void sub_10019B424(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
}

uint64_t sub_10019B438()
{
  return v0;
}

uint64_t sub_10019B444()
{
  *(void *)(v1 - 152) = v0;
  return dispatch thunk of Sequence.makeIterator()();
}

uint64_t sub_10019B468()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_10019B484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a2 - 256);
  return sub_10006DF38(a1, v4, v2);
}

uint64_t sub_10019B4A0()
{
  return v0;
}

uint64_t sub_10019B4BC()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_10019B4DC()
{
  return swift_getOpaqueTypeConformance2();
}

__n128 sub_10019B4F4(__n128 *a1)
{
  __n128 result = *(__n128 *)(v1 - 272);
  a1[1] = result;
  return result;
}

uint64_t sub_10019B508()
{
  uint64_t v3 = *(void *)(v1 + 8);
  *(void *)uint64_t v0 = *(void *)v1;
  *(void *)(v0 + 8) = v3;
  uint64_t v4 = *(void *)(v1 + 24);
  *(void *)(v0 + 16) = *(void *)(v1 + 16);
  *(void *)(v0 + 24) = v4;
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 56);
  *(void *)(v0 + 48) = *(void *)(v1 + 48);
  *(void *)(v0 + 56) = v5;
  uint64_t v6 = *(void *)(v1 + 72);
  *(void *)(v0 + 64) = *(void *)(v1 + 64);
  *(void *)(v0 + 72) = v6;
  uint64_t v7 = *(void *)(v1 + 88);
  *(void *)(v0 + 80) = *(void *)(v1 + 80);
  *(void *)(v0 + 88) = v7;
  *(void *)(v0 + 96) = *(void *)(v1 + 96);
  *(unsigned char *)(v0 + 104) = *(unsigned char *)(v1 + 104);
  uint64_t v8 = *(void *)(v1 + 120);
  *(void *)(v0 + 112) = *(void *)(v1 + 112);
  *(void *)(v0 + 120) = v8;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10019B564(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v6 = *(void *)(v4 - 280);
  return sub_1001182A0(v3, v6, a3);
}

uint64_t sub_10019B598()
{
  return Hasher.init(_seed:)();
}

void sub_10019B5B0(__int16 a1@<W8>)
{
  *uint64_t v1 = a1;
  *(void *)(v2 - 112) = v1 + 1;
}

uint64_t sub_10019B5BC()
{
  return v0;
}

char *sub_10019B5D4@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_10019B5F4(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, a1);
}

uint64_t sub_10019B61C(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v1);
}

uint64_t sub_10019B634()
{
  return v0;
}

uint64_t sub_10019B640()
{
  return v0 - 112;
}

__n128 sub_10019B654()
{
  char v1 = *(unsigned char *)(v0 - 224);
  __n128 result = *(__n128 *)(v0 - 256);
  long long v3 = *(_OWORD *)(v0 - 240);
  *(__n128 *)(v0 - 304) = result;
  *(_OWORD *)(v0 - 288) = v3;
  *(unsigned char *)(v0 - 272) = v1;
  return result;
}

uint64_t sub_10019B678()
{
  return ShortDescription.init(name:_:)();
}

double sub_10019B6A0()
{
  return 0.0;
}

uint64_t *sub_10019B6E8(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  uint64_t v5 = (uint64_t *)&a1[3];
  v2[4] = 0x6574617473;
  v2[5] = 0xE500000000000000;
  v2[9] = v3;
  return sub_10023C310(v5);
}

uint64_t sub_10019B718()
{
  return Color.init(_:white:opacity:)();
}

uint64_t sub_10019B730()
{
  return Measurement.formatted<A>(_:placeholder:unitManager:)();
}

__n128 *sub_10019B750(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 1701667182;
  result[2].n128_u64[1] = 0xE400000000000000;
  return result;
}

uint64_t sub_10019B768()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_10019B788()
{
  return v0 + v1;
}

uint64_t sub_10019B7A0()
{
  return 0;
}

uint64_t sub_10019B7B0()
{
  return *(void *)(v0 - 288);
}

uint64_t sub_10019B7D8()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_10019B810()
{
  return type metadata accessor for TargetWindowSizeClass();
}

uint64_t sub_10019B838()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_10019B860()
{
  return v0;
}

uint64_t sub_10019B874()
{
  return type metadata accessor for ConditionDetailInput.Input(0);
}

uint64_t sub_10019B894()
{
  return _s7Weather24LocationCompositionStateOwet_0(v0 + *(int *)(v2 + 32), 1, v1);
}

uint64_t sub_10019B8C0@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 104) = a1;
  return 0;
}

id sub_10019B8D0()
{
  uint64_t v3 = *(const char **)(v0 + 2968);
  return [v1 v3];
}

__n128 sub_10019B8E8(__n128 *a1)
{
  __n128 result = v1[39];
  a1[1] = result;
  return result;
}

uint64_t destroy for DetermineCompactGridLayoutModifier(uint64_t a1)
{
  sub_10018CCC4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(unsigned char *)(a1 + 72));
  uint64_t v2 = *(void *)(a1 + 80);
  char v3 = *(unsigned char *)(a1 + 88);

  return sub_10018F6D8(v2, v3);
}

uint64_t destroy for LocationHeaderViewGradientBackgroundViewModifier()
{
  return swift_release();
}

unint64_t sub_10019B968()
{
  unint64_t result = qword_100E65FB8;
  if (!qword_100E65FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65FB8);
  }
  return result;
}

unint64_t sub_10019B9B4()
{
  unint64_t result = qword_100EA18E0;
  if (!qword_100EA18E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA18E0);
  }
  return result;
}

uint64_t sub_10019BA00(uint64_t a1, uint64_t a2)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_10017DF08(&qword_100EAA740);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ScenePhase();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t destroy for DetermineWhetherViewsShouldConsiderMapPinnedToTopModifier(uint64_t a1)
{
  return sub_10018CCC4(*(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80));
}

uint64_t sub_10019BAF8()
{
  uint64_t v1 = v0;
  type metadata accessor for Locale.Language();
  sub_100179C0C();
  uint64_t v49 = v3;
  uint64_t v50 = v2;
  __chkstk_darwin(v2);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = type metadata accessor for Locale();
  sub_100179C0C();
  uint64_t v48 = v8;
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_10017DF08(&qword_100E63DC0);
  __chkstk_darwin(v13 - 8);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = type metadata accessor for ContentSizeCategory();
  sub_100179C0C();
  uint64_t v19 = v18;
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v23 = (char *)v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)v47 - v24;
  sub_10019BF90();
  EnvironmentValues.subscript.getter();
  if (v51 != 1) {
    goto LABEL_57;
  }
  EnvironmentValues.sizeCategory.getter();
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v23, v25, v17);
  int v26 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v23, v17);
  if (v26 == enum case for ContentSizeCategory.extraSmall(_:)
    || v26 == enum case for ContentSizeCategory.small(_:)
    || v26 == enum case for ContentSizeCategory.medium(_:)
    || v26 == enum case for ContentSizeCategory.large(_:)
    || v26 == enum case for ContentSizeCategory.extraLarge(_:)
    || v26 == enum case for ContentSizeCategory.extraExtraLarge(_:)
    || v26 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v25, v17);
  }
  else
  {
    uint64_t v33 = *(void (**)(char *, uint64_t))(v19 + 8);
    if (v26 == enum case for ContentSizeCategory.accessibilityMedium(_:)
      || v26 == enum case for ContentSizeCategory.accessibilityLarge(_:)
      || v26 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:)
      || v26 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:)
      || v26 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
    {
      v33(v25, v17);
LABEL_57:
      char v45 = 0;
      return v45 & 1;
    }
    v47[1] = v1;
    v33(v23, v17);
    v33(v25, v17);
  }
  if (EnvironmentValues.accessibilityVoiceOverEnabled.getter()) {
    goto LABEL_57;
  }
  static Locale.current.getter();
  Locale.language.getter();
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v12, v7);
  Locale.Language.languageCode.getter();
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v6, v50);
  uint64_t v38 = type metadata accessor for Locale.LanguageCode();
  if (_s7Weather24LocationCompositionStateOwet_0(v16, 1, v38) == 1)
  {
    sub_1000F3400(v16, &qword_100E63DC0);
    uint64_t v39 = 0;
    uint64_t v40 = 0;
  }
  else
  {
    uint64_t v39 = Locale.LanguageCode.identifier.getter();
    uint64_t v40 = v41;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v16, v38);
  }
  if ((sub_10019C008() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_55;
  }
  if (!v40)
  {
LABEL_55:
    char v45 = 1;
    return v45 & 1;
  }
  BOOL v42 = v39 == 29281 && v40 == 0xE200000000000000;
  if (v42
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || (v39 == 26984 ? (BOOL v43 = v40 == 0xE200000000000000) : (BOOL v43 = 0), v43))
  {
    swift_bridgeObjectRelease();
    goto LABEL_57;
  }
  char v44 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  char v45 = v44 ^ 1;
  return v45 & 1;
}

unint64_t sub_10019BF90()
{
  unint64_t result = qword_100E65EE0;
  if (!qword_100E65EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65EE0);
  }
  return result;
}

uint64_t sub_10019BFDC()
{
  uint64_t v0 = sub_10019C008();
  return sub_100182AB8(v0);
}

uint64_t sub_10019C008()
{
  uint64_t v1 = type metadata accessor for EnvironmentValues();
  sub_100179C0C();
  uint64_t v3 = v2;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v16 - v8;
  sub_10019C26C();
  EnvironmentValues.subscript.getter();
  double v10 = sub_1000E0B50();
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v11(v9, v0, v1);
  if (v10 <= 320.0)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v1);
    return 1;
  }
  else
  {
    v11(v7, (uint64_t)v9, v1);
    if (v10 <= 375.0)
    {
      EnvironmentValues.displayScale.getter();
      BOOL v12 = v13 <= 2.0;
    }
    else
    {
      BOOL v12 = 0;
    }
    uint64_t v14 = *(void (**)(char *, uint64_t))(v3 + 8);
    v14(v7, v1);
    v14(v9, v1);
  }
  return v12;
}

void *sub_10019C1AC@<X0>(void *a1@<X8>)
{
  sub_10019C1F0((uint64_t)__src);
  return memcpy(a1, __src, 0x48uLL);
}

double sub_10019C1F0@<D0>(uint64_t a1@<X8>)
{
  sub_10019C26C();
  EnvironmentValues.subscript.getter();
  double result = v3;
  *(double *)a1 = v3;
  *(_OWORD *)(a1 + 8) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(_WORD *)(a1 + 48) = v8;
  *(_OWORD *)(a1 + 56) = v9;
  return result;
}

unint64_t sub_10019C26C()
{
  unint64_t result = qword_100E65F80;
  if (!qword_100E65F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65F80);
  }
  return result;
}

unint64_t sub_10019C2B8()
{
  unint64_t result = qword_100E65F98;
  if (!qword_100E65F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65F98);
  }
  return result;
}

uint64_t sub_10019C304()
{
  return static Array<A>.read(from:)();
}

uint64_t sub_10019C328()
{
  return type metadata accessor for LocationComponentViewModel();
}

unint64_t sub_10019C348()
{
  unint64_t result = qword_100E65F78;
  if (!qword_100E65F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65F78);
  }
  return result;
}

uint64_t sub_10019C394()
{
  return sub_10019A6A8((void (*)(void))sub_10019B9B4);
}

uint64_t sub_10019C3B4(uint64_t a1, int *a2)
{
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = a1 + *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v5 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[5];
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    }
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(a1 + a2[6]), *(unsigned char *)(a1 + a2[6] + 8));
  sub_10018F6D8(*(void *)(a1 + a2[7]), *(unsigned char *)(a1 + a2[7] + 8));
  uint64_t v8 = a1 + a2[8];
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = a1 + a2[9];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    }
  }
  else
  {
    swift_release();
  }

  return sub_10018F6E4();
}

uint64_t sub_10019C610()
{
  uint64_t v0 = sub_10019C63C();
  return sub_100182AB8(v0);
}

uint64_t sub_10019C63C()
{
  return sub_10018C9CC((void (*)(void))sub_10019A344);
}

unint64_t sub_10019C65C()
{
  unint64_t result = qword_100EA14A0;
  if (!qword_100EA14A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA14A0);
  }
  return result;
}

uint64_t sub_10019C6A8(uint64_t a1)
{
  return sub_10019C6DC(a1, *(void *)(v1 + 16), (uint64_t (*)(uint64_t))&Calendar.isDateInTomorrow(_:)) & 1;
}

uint64_t sub_10019C6DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_10011C760();
  DayWeather.date.getter();
  LOBYTE(a3) = a3(v3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v5);
  return a3 & 1;
}

unint64_t sub_10019C7A0()
{
  unint64_t result = qword_100E65FD8;
  if (!qword_100E65FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65FD8);
  }
  return result;
}

unint64_t sub_10019C7EC()
{
  unint64_t result = qword_100E65EE8;
  if (!qword_100E65EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65EE8);
  }
  return result;
}

double sub_10019C838()
{
  sub_10019C874();
  EnvironmentValues.subscript.getter();
  return v1;
}

unint64_t sub_10019C874()
{
  unint64_t result = qword_100E65FC0;
  if (!qword_100E65FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65FC0);
  }
  return result;
}

uint64_t sub_10019C8C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10099A6D0);
}

unint64_t sub_10019C8D4()
{
  unint64_t result = qword_100E65F88;
  if (!qword_100E65F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65F88);
  }
  return result;
}

uint64_t sub_10019C920(uint64_t a1, void (*a2)(void))
{
  return EnvironmentValues.subscript.setter();
}

uint64_t sub_10019C968()
{
  return sub_10019A6A8((void (*)(void))sub_10019C65C);
}

unint64_t sub_10019C988()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_10019C9D8()
{
  return static FixedSizeTypeBinaryCodable.read(from:)();
}

uint64_t sub_10019C9F8()
{
  return type metadata accessor for Location();
}

void sub_10019CA18(uint64_t a1@<X8>)
{
  *(unsigned char *)(v1 + a1) = *(_DWORD *)(v2 - 240);
}

uint64_t sub_10019CA2C()
{
  return sub_100126E18(v0, v1);
}

uint64_t destroy for MainViewFullscreenMapZoomTransitionModifier(uint64_t a1)
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 8);

  return swift_release();
}

unint64_t sub_10019CA88()
{
  unint64_t result = qword_100E65F70;
  if (!qword_100E65F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65F70);
  }
  return result;
}

char *sub_10019CAD4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_10017DF08(&qword_100E6DC08);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(void *)uint64_t v9 = *(void *)v10;
  v9[8] = v10[8];
  return a1;
}

uint64_t sub_10019CBBC()
{
  uint64_t v0 = sub_10019CBE8();
  return sub_100182AB8(v0);
}

uint64_t sub_10019CBE8()
{
  return sub_10018C9CC((void (*)(void))sub_10019B968);
}

uint64_t sub_10019CC08()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10019CC20(uint64_t a1, unint64_t a2)
{
  return sub_10016414C(a1, a2, (uint64_t *)(v2 - 144));
}

uint64_t sub_10019CC38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a3, *(void *)(v3 - 616));
}

uint64_t sub_10019CC58(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 552);
  uint64_t v4 = *(void (**)(void))(v1 - 192);
  return sub_100178CEC(a1, v3, v4);
}

uint64_t sub_10019CC78()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_10019CC90()
{
  sub_10019CE50();
  EnvironmentValues.subscript.getter();
  return v1;
}

uint64_t sub_10019CCCC()
{
  return sub_10019CCF4();
}

uint64_t sub_10019CCF4()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t sub_10019CD34@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10019CD60();
  *a1 = result;
  return result;
}

uint64_t sub_10019CD60()
{
  sub_10019CD9C();
  EnvironmentValues.subscript.getter();
  return v1;
}

unint64_t sub_10019CD9C()
{
  unint64_t result = qword_100E65FA0;
  if (!qword_100E65FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65FA0);
  }
  return result;
}

uint64_t sub_10019CDE8()
{
  return sub_10019CE14();
}

uint64_t sub_10019CE14()
{
  return EnvironmentValues.subscript.setter();
}

unint64_t sub_10019CE50()
{
  unint64_t result = qword_100E65F60;
  if (!qword_100E65F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65F60);
  }
  return result;
}

uint64_t sub_10019CE9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t a6, uint64_t (*a7)(char *))
{
  uint64_t v8 = a5(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v12 - v9;
  sub_10015176C();
  return a7(v10);
}

void sub_10019CF40()
{
  sub_10016314C();
  uint64_t v4 = sub_10018A138();
  uint64_t v5 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(v4);
  uint64_t v6 = sub_100164920(v5);
  uint64_t v19 = v7;
  __chkstk_darwin(v6);
  uint64_t v18 = (uint64_t)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v9);
  sub_100152388();
  sub_10018A4E4();
  if (v10)
  {
    uint64_t v17 = v1;
    uint64_t v16 = v2;
    while (*(void *)(v1 + 16))
    {
      unint64_t v11 = sub_10019DBC0();
      sub_10019DD78(v11, v3, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
      sub_1001826B4();
      char v12 = v2();
      if (v0)
      {
        sub_10019E1D8(v3, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      if (v12)
      {
        sub_100183754(v3, v18, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1001A69DC();
        }
        sub_10017F6F0();
        if (v13)
        {
          sub_100188C7C();
          sub_10019E22C();
        }
        sub_100183680();
        sub_100183754(v18, v14, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
        uint64_t v1 = v17;
        uint64_t v2 = v16;
      }
      else
      {
        sub_10019E1D8(v3, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
      }
      sub_10019D364();
      if (v15) {
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
LABEL_17:
    sub_100191138();
    sub_100163164();
  }
}

uint64_t sub_10019D12C()
{
  return Hasher.init(_seed:)();
}

uint64_t sub_10019D144()
{
  return swift_getEnumCaseMultiPayload();
}

__n128 *sub_10019D168(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

void sub_10019D174(uint64_t a1, int a2)
{
  *(void *)(v3 - 88) = v2;
  *(_DWORD *)(v3 - 72) = a2;
}

uint64_t sub_10019D184()
{
  return v0;
}

uint64_t sub_10019D1A8()
{
  uint64_t v3 = *(void *)(v1 + 8);
  *(void *)uint64_t v0 = *(void *)v1;
  *(void *)(v0 + 8) = v3;
  uint64_t v4 = *(void *)(v1 + 24);
  *(void *)(v0 + 16) = *(void *)(v1 + 16);
  *(void *)(v0 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + 40);
  *(void *)(v0 + 32) = *(void *)(v1 + 32);
  *(void *)(v0 + 40) = v5;
  uint64_t v6 = *(void *)(v1 + 56);
  *(void *)(v0 + 48) = *(void *)(v1 + 48);
  *(void *)(v0 + 56) = v6;
  *(unsigned char *)(v0 + 64) = *(unsigned char *)(v1 + 64);
  uint64_t v7 = *(void *)(v1 + 80);
  *(void *)(v0 + 72) = *(void *)(v1 + 72);
  *(void *)(v0 + 80) = v7;
  *(unsigned char *)(v0 + 88) = *(unsigned char *)(v1 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t sub_10019D1F0(uint64_t result, uint64_t a2)
{
  *(void *)(v2 - 360) = result;
  *(void *)(v2 - 368) = a2;
  return result;
}

void sub_10019D204(void *a1, uint64_t a2, os_log_type_t a3, const char *a4)
{
  uint64_t v6 = *(NSObject **)(v4 - 176);
  uint64_t v7 = *(uint8_t **)(v4 - 232);
  _os_log_impl(a1, v6, a3, a4, v7, 0x20u);
}

uint64_t sub_10019D228(uint64_t a1)
{
  *(void *)(v1 - 264) = a1;
  return swift_release();
}

uint64_t sub_10019D264()
{
  return sub_1001781AC(v1, v0);
}

uint64_t sub_10019D27C(uint64_t a1)
{
  uint64_t v4 = v1 + *(int *)(a1 + 24);
  return _s7Weather24LocationCompositionStateOwet_0(v4, 1, v2);
}

uint64_t sub_10019D2A4()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10019D2D0()
{
  return type metadata accessor for LocationPreviewModalViewState(0);
}

void sub_10019D2EC()
{
  *uint64_t v0 = v1;
  v0[1] = v2;
  v0[2] = v3;
  v0[3] = v4;
  v0[4] = v5;
  v0[5] = v6;
  v0[6] = v7;
  v0[7] = v8;
  v0[8] = v9;
}

uint64_t sub_10019D304()
{
  return v0;
}

uint64_t sub_10019D310()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_10019D348()
{
  return _s7Weather24LocationCompositionStateOwet_0(v0, 1, v1);
}

uint64_t sub_10019D374()
{
  uint64_t v2 = *(void *)(v0 - 256);
  uint64_t v3 = *(void *)(v0 - 864);
  return _s7Weather24LocationCompositionStateOwst_0(v2, 1, 1, v3);
}

void sub_10019D3D0()
{
  *uint64_t v0 = 0x8000000000000000;
}

uint64_t sub_10019D3EC()
{
  return swift_beginAccess();
}

uint64_t sub_10019D410()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10019D430()
{
  *(unsigned char *)(v0 - 84) = 3;
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

void sub_10019D464(uint64_t a1@<X8>)
{
  *(void *)(v1 + 16) = v3;
  *(void *)(v1 + 24) = 2 * (a1 / v2);
}

BOOL sub_10019D484(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_10019D4A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, long long a16, uint64_t a17, unsigned __int8 a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char *a32)
{
  uint64_t v34 = v32[108];
  uint64_t v35 = v32[153];
  uint64_t v36 = v32[173];
  uint64_t v37 = v32[156];
  uint64_t v38 = v32[172];
  uint64_t v39 = v32[149];
  return sub_100719DD8(a1, a2, v34, v35, v36, v37, v38, v39, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

uint64_t sub_10019D4C8()
{
  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, v0);
}

uint64_t sub_10019D508()
{
  return *(void *)(v0 - 208);
}

uint64_t sub_10019D52C()
{
  return dispatch thunk of ShortDescriptionType.describe(withIndentation:)();
}

uint64_t sub_10019D54C()
{
  return type metadata accessor for SearchViewState.ViewState(0);
}

uint64_t sub_10019D574()
{
  return v0 + v1;
}

uint64_t sub_10019D58C()
{
  return DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
}

unint64_t sub_10019D5A8()
{
  return 0xD000000000000010;
}

uint64_t sub_10019D5BC()
{
  return _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, v0);
}

uint64_t sub_10019D5EC()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_10019D614()
{
  return v0;
}

uint64_t sub_10019D624()
{
  return v0;
}

uint64_t sub_10019D63C()
{
  return 0x697472417377656ELL;
}

uint64_t sub_10019D65C()
{
  return 0;
}

uint64_t sub_10019D670()
{
  return v0;
}

uint64_t sub_10019D684()
{
  return v0;
}

uint64_t sub_10019D6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v23 = *(void *)(v21 - 136);
  uint64_t v24 = *(void *)(v21 - 152);
  uint64_t v25 = *(void *)(v21 - 160);
  return sub_1001659F0(0, 3, v23, v24, v25, 0, 0, 0, 0, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

uint64_t sub_10019D6DC()
{
  return 0x7469706963657270;
}

uint64_t sub_10019D70C()
{
  return 6778726;
}

uint64_t sub_10019D71C()
{
  _s7Weather24LocationCompositionStateOwst_0(v0, 0, 1, v1);
  return swift_beginAccess();
}

uint64_t sub_10019D76C(uint64_t result)
{
  *(void *)(v2 - 128) = result;
  *(void *)(v2 - 120) = 0;
  *uint64_t v1 = 514;
  *(void *)(v2 - 112) = v1 + 1;
  return result;
}

uint64_t sub_10019D788()
{
  return sub_10014D82C(*(void *)(v1 + *(int *)(v0 + 28)), *(unsigned __int8 *)(v1 + *(int *)(v0 + 28) + 8), *(unsigned char *)(v1 + *(int *)(v0 + 28) + 9));
}

void sub_10019D7B8(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 352) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_10019D7E8(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 184), 1, 1, a1);
  return _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 216), 1, 1, *(void *)(v1 - 136));
}

uint64_t sub_10019D82C()
{
  return _s10PolarModelVMa();
}

uint64_t sub_10019D854()
{
  return type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle();
}

uint64_t sub_10019D87C()
{
  *(void *)(v0 - 80) = 0;
  *(_OWORD *)(v0 - 112) = 0u;
  *(_OWORD *)(v0 - 96) = 0u;
  return v0 - 112;
}

uint64_t sub_10019D890()
{
  return 0;
}

uint64_t sub_10019D8A0()
{
  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, v0);
}

uint64_t sub_10019D8C4()
{
  return v0;
}

uint64_t sub_10019D8D8()
{
  return 0;
}

uint64_t sub_10019D8E4()
{
  return Measurement.formatted<A>(_:placeholder:unitManager:)();
}

uint64_t sub_10019D900()
{
  return v0;
}

NSDate sub_10019D910()
{
  return Date._bridgeToObjectiveC()();
}

uint64_t sub_10019D934()
{
  return v0;
}

uint64_t sub_10019D948()
{
  return 0;
}

uint64_t sub_10019D95C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return sub_10085D284(v4, v3, a3);
}

uint64_t sub_10019D974()
{
  return 0x64656C696166;
}

uint64_t sub_10019D990(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 280), 1, 1, a1);
  return type metadata accessor for WeatherMapPresentationState(0);
}

uint64_t sub_10019D9D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, NSBundle a5)
{
  uint64_t v6 = 0;
  unint64_t v7 = 0xE000000000000000;
  unint64_t v8 = 0xD000000000000031;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&a1, *(Swift::String_optional *)&a3, a5, *(Swift::String *)&v6, *(Swift::String *)&v8)._countAndFlagsBits;
}

uint64_t sub_10019D9F0()
{
  return v0;
}

double sub_10019DA08()
{
  *(void *)(v1 - 136) = v0;
  double result = 0.0;
  *(_OWORD *)(v1 - 128) = 0u;
  *(_OWORD *)(v1 - 112) = 0u;
  *(void *)(v1 - 96) = 0;
  return result;
}

void sub_10019DA30()
{
  *(void *)(v0 - 120) = 0;
  *(void *)(v0 - 112) = 0xE000000000000000;
}

void sub_10019DA3C(uint64_t a1@<X8>)
{
  uint64_t v4 = v2 + a1 + v1;
  *(void *)uint64_t v4 = v3;
  *(unsigned char *)(v4 + 8) = 0;
}

uint64_t sub_10019DA50()
{
  return sub_10018F6D8(*(void *)(v1 + *(int *)(v0 + 56)), *(unsigned char *)(v1 + *(int *)(v0 + 56) + 8));
}

uint64_t sub_10019DA7C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10019DA98()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_10019DAB8()
{
  return swift_getWitnessTable();
}

uint64_t sub_10019DAD8@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 128) = a1;
  return v1 - 128;
}

uint64_t sub_10019DAF0()
{
  return *(void *)(v0 - 216);
}

char *sub_10019DB04@<X0>(void *a1@<X8>)
{
  double result = (char *)a1 + v1;
  *a1 = 0x4B79616C7265766FLL;
  a1[1] = 0xEB00000000646E69;
  return result;
}

uint64_t sub_10019DB2C(uint64_t result, uint64_t a2)
{
  uint64_t v5 = *(void *)(v3 + 88);
  v4[7] = v2;
  v4[8] = v5;
  v4[4] = result;
  v4[5] = a2;
  return result;
}

uint64_t sub_10019DB54()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10019DB74()
{
  return 0x64656E6E6970;
}

uint64_t sub_10019DB88()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10019DBA4()
{
  return swift_storeEnumTagMultiPayload();
}

unint64_t sub_10019DBC0()
{
  return v0
       + ((*(unsigned __int8 *)(*(void *)(v2 - 88) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 88) + 80))
       + *(void *)(*(void *)(v2 - 88) + 72) * v1;
}

uint64_t sub_10019DBE0(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 256), 1, 1, a1);
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 264), 1, 1, *(void *)(v1 - 240));
  return type metadata accessor for ModalViewState(0);
}

void sub_10019DC5C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

uint64_t sub_10019DC7C()
{
  return dispatch thunk of Collection.endIndex.getter();
}

uint64_t sub_10019DCB4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 - 256) = result;
  return result;
}

void sub_10019DCC0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(void *)(a6 - 256) = v7;
  uint64_t v10 = *(void *)(v8 - 296);
  sub_100063DCC(a1, a2, a3, a4, a5, v10, v6);
}

uint64_t sub_10019DCE8()
{
  return swift_release();
}

void sub_10019DD00()
{
  uint64_t v1 = 0;
  unint64_t v2 = 0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v1);
}

uint64_t sub_10019DD18()
{
  return v0;
}

uint64_t sub_10019DD24()
{
  uint64_t v1 = sub_100162814();
  v2(v1);
  sub_100162E4C();
  sub_10008B8B4();
  v3();
  return v0;
}

uint64_t sub_10019DD78(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  sub_10008B8B4();
  v4();
  return a2;
}

uint64_t sub_10019DE04()
{
  return v0;
}

void sub_10019DE20(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 208) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_10019DE4C()
{
}

uint64_t sub_10019DE68()
{
  return v0;
}

uint64_t sub_10019DE74@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + a1);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10019DE8C()
{
  return type metadata accessor for Location();
}

void sub_10019DEAC(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

void sub_10019DED8()
{
  *(void *)(v0 - 120) = 0;
  *(void *)(v0 - 112) = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
}

uint64_t sub_10019DEF8(uint64_t result)
{
  *(unsigned char *)(result + 16) = 112;
  return result;
}

void sub_10019DF10()
{
  sub_1001CF8D0();
}

uint64_t sub_10019DF30()
{
  return v0;
}

uint64_t sub_10019DF5C()
{
  return 0;
}

uint64_t sub_10019DF6C()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t sub_10019DF88()
{
  return v0;
}

uint64_t sub_10019DFB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return a12;
}

uint64_t sub_10019DFBC()
{
  uint64_t v2 = *(void *)(v0 - 192);
  uint64_t v3 = *(void *)(v2 + 16) + 1;
  return sub_1001D262C(0, v3, 1, v2);
}

uint64_t sub_10019DFE0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5 = *(void *)(v3 - 240);
  return sub_10091EF44(a1, v5, a3);
}

uint64_t sub_10019DFF8()
{
  return type metadata accessor for ViewState.SecondaryViewState(0);
}

uint64_t sub_10019E020(uint64_t result, uint64_t a2)
{
  *(void *)(v2 - 264) = result;
  *(void *)(v2 - 344) = a2;
  return result;
}

uint64_t sub_10019E034()
{
  return v0;
}

uint64_t sub_10019E044@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return _s7Weather24LocationCompositionStateOwst_0(v3, 1, 1, a1);
}

uint64_t sub_10019E064()
{
  return static Date.== infix(_:_:)();
}

uint64_t sub_10019E084()
{
  return sub_10019E0A4() & 1;
}

uint64_t sub_10019E0A4()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v7 = (char *)&v26 - v6;
  sub_100180D60(v5, v8, v9, v10, v11, v12, v13, v14, v26, v27, v28, v29, v30, v31, v32, v33, vars0, vars8);
  sub_100180D60(v15, v16, v17, v18, v19, v20, v21, v22, v26, v27, v28, v29, v30, v31, v32, v33, vars0, vars8);
  char v23 = static Date.> infix(_:_:)();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v1 + 8);
  v24(v4, v0);
  v24(v7, v0);
  return v23 & 1;
}

uint64_t sub_10019E1D8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

void sub_10019E22C()
{
  sub_10018A6B4();
  *uint64_t v0 = v1;
}

uint64_t *sub_10019E290(uint64_t a1, uint64_t a2)
{
  v40[10] = a1;
  v40[11] = a2;
  uint64_t v4 = &qword_100E66CC8;
  sub_10017DF08(&qword_100E66CC8);
  sub_100179C0C();
  v40[4] = v5;
  __chkstk_darwin(v6);
  sub_100181024(v7, v40[0]);
  v40[3] = type metadata accessor for HourWeather();
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_1001D17A4(v11, v40[0]);
  __chkstk_darwin(v12);
  v40[8] = (uint64_t)v40 - v13;
  sub_1001626D4();
  uint64_t v15 = __chkstk_darwin(v14);
  sub_1001828F0(v15, v16, v17, v18, v19, v20, v21, v22, v40[0]);
  uint64_t v23 = sub_10017DF08(&qword_100E66CD0);
  __chkstk_darwin(v23);
  sub_10008B8C0();
  BOOL v43 = _swiftEmptyArrayStorage;
  sub_1001246C8(&qword_100E66CD8, &qword_100E66CC8);
  dispatch thunk of Sequence.makeIterator()();
  sub_1001246C8((unint64_t *)&qword_100E66CE0, &qword_100E66CC8);
  sub_10017E080();
  sub_100185190();
  if (v24)
  {
    uint64_t v25 = v41;
    uint64_t v4 = _swiftEmptyArrayStorage;
LABEL_16:
    sub_1001B36E0(v25, &qword_100E66CD0);
  }
  else
  {
    sub_10017F904();
    while (1)
    {
      sub_1001A30CC();
      uint64_t v26 = sub_1001A049C();
      v27(v26);
      uint64_t v28 = sub_100182EE0();
      ((void (*)(uint64_t))v9)(v28);
      uint64_t v29 = sub_1001A1C84();
      v30(v29);
      sub_10018591C();
      sub_100162F0C();
      v31();
      uint64_t v9 = *v3;
      uint64_t v25 = v42;
      sub_10019E774();
      v9();
      uint64_t v32 = sub_1001A2B18();
      char v34 = v33(v32);
      if (v2) {
        break;
      }
      if (v34)
      {
        sub_10019E774();
        v9();
        uint64_t v25 = (uint64_t)v43;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100188F4C();
          sub_1001A3A38();
          uint64_t v25 = (uint64_t)v43;
        }
        if (*(void *)(v25 + 16) >= *(void *)(v25 + 24) >> 1)
        {
          sub_1001A3A38();
          uint64_t v25 = (uint64_t)v43;
        }
        unint64_t v35 = sub_10017C8EC();
        ((void (*)(unint64_t))v9)(v35);
        BOOL v43 = (uint64_t *)v25;
      }
      else
      {
        uint64_t v36 = sub_1001A4534();
        v37(v36);
      }
      sub_1001A14FC();
      sub_100185190();
      if (v24)
      {
        uint64_t v4 = v43;
        goto LABEL_16;
      }
    }
    sub_100162F0C();
    v38();
    sub_1001B36E0(v41, &qword_100E66CD0);
    swift_release();
  }
  return v4;
}

uint64_t sub_10019E598()
{
  return v0;
}

uint64_t sub_10019E5B8()
{
  long long v2 = v1[1];
  *uint64_t v0 = *v1;
  v0[1] = v2;
  long long v3 = v1[3];
  v0[2] = v1[2];
  v0[3] = v3;
  uint64_t v4 = *(int *)(type metadata accessor for LocationHeaderViewMeasurements(0) + 32);
  uint64_t v5 = (char *)v0 + v4;
  *(_OWORD *)uint64_t v5 = *(_OWORD *)((char *)v1 + v4);
  v5[16] = *((unsigned char *)v1 + v4 + 16);
  v5[17] = *((unsigned char *)v1 + v4 + 17);
  v5[18] = *((unsigned char *)v1 + v4 + 18);
  return type metadata accessor for DisplayMetrics();
}

uint64_t sub_10019E620@<X0>(void *a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  a1[2] = v11;
  a1[3] = a2;
  a1[4] = a9;
  a1[5] = a5;
  a1[6] = v9;
  a1[7] = a4;
  a1[8] = v10;
  return swift_retain();
}

uint64_t sub_10019E650()
{
  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, v0);
}

uint64_t sub_10019E690()
{
  return *(void *)(v0 - 192);
}

uint64_t sub_10019E6A8()
{
  return v0;
}

uint64_t sub_10019E6C0(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, *(void *)(v1 - 560));
  return type metadata accessor for TimeState();
}

uint64_t sub_10019E6F8()
{
  return swift_beginAccess();
}

uint64_t sub_10019E71C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, a4);
  uint64_t v7 = v4 + *(int *)(v5 + 36);
  uint64_t v8 = *(void *)(v6 - 168);
  return sub_1001C7278(v8, v7);
}

void sub_10019E754()
{
  *(void *)(v0 - 120) = 0;
  *(void *)(v0 - 112) = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
}

uint64_t sub_10019E784@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t sub_10019E798()
{
  return 0;
}

uint64_t sub_10019E7C0()
{
  return *(void *)(v0 - 112);
}

uint64_t sub_10019E7D8()
{
  uint64_t v1 = *(void *)(v0 - 296);
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void *)(v1 + 104);
  sub_1001B1E64(*(void **)(v0 - 408), v2);
  return dispatch thunk of NotificationsOptInManagerType.didEnterSettingsApp()(v2, v3);
}

uint64_t sub_10019E868()
{
  return v0;
}

uint64_t sub_10019E87C()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_10019E894()
{
  sub_1001B1E64(v1, *(void *)(v0 + 72));
  return dispatch thunk of SavedLocationsManagerType.savedLocations.getter();
}

uint64_t sub_10019E8D0()
{
  return v0;
}

id sub_10019E8FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(const char **)(v6 + 3432);
  return [a1 v8:v5 a4:a5];
}

uint64_t sub_10019E950()
{
  return dispatch thunk of Collection.distance(from:to:)();
}

uint64_t sub_10019E970()
{
  return v0;
}

uint64_t sub_10019E988(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, a1);
  return type metadata accessor for NotificationsOptInState();
}

uint64_t sub_10019E9C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s7Weather24LocationCompositionStateOwst_0(v4, 1, 1, a4);
  return type metadata accessor for EnvironmentState();
}

uint64_t sub_10019E9F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, long long a17, long long a18, uint64_t a19)
{
  a19 = 0;
  a17 = 0u;
  a18 = 0u;
  return sub_1001AB0B0((uint64_t)&a17, (uint64_t)&a10);
}

uint64_t sub_10019EA30()
{
  return v0 - 136;
}

uint64_t sub_10019EA44()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10019EA60()
{
  return v0;
}

uint64_t sub_10019EA78()
{
  return v0;
}

uint64_t sub_10019EA94()
{
  return *(void *)(v0 - 104);
}

uint64_t sub_10019EAA8()
{
  return v0;
}

uint64_t sub_10019EAC0()
{
  return v0;
}

uint64_t sub_10019EAD8(void *a1, uint64_t a2)
{
  sub_1001B1E64(a1, a2);
  return *(void *)(v2 - 232);
}

uint64_t sub_10019EAF8(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v1);
}

uint64_t sub_10019EB18(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 - 128);
  return _s7Weather24LocationCompositionStateOwst_0(v4, 1, 1, a1);
}

void sub_10019EB3C()
{
  *(void *)(v0 + 80) = 0x6552656372756F73;
  *(void *)(v0 + 88) = 0xEA00000000007463;
}

uint64_t sub_10019EB5C()
{
  return swift_dynamicCast();
}

uint64_t sub_10019EB78()
{
  return v0;
}

uint64_t sub_10019EB8C()
{
  return _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, v0);
}

uint64_t sub_10019EBAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  return sub_100195B7C(v3, v4);
}

uint64_t sub_10019EBD4()
{
  return v0;
}

uint64_t sub_10019EBEC()
{
  return v0;
}

uint64_t sub_10019EC08()
{
  return sub_1001CB39C();
}

uint64_t sub_10019EC30()
{
  return type metadata accessor for AveragesDetailInput.Content(0);
}

uint64_t sub_10019EC64(uint64_t a1, uint64_t *a2)
{
  return sub_100535E24(a1, a2);
}

uint64_t sub_10019EC80()
{
  return Location.identifier.getter();
}

uint64_t sub_10019ECB0()
{
  return v0;
}

uint64_t sub_10019ECF4()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_10019ED2C()
{
  return v0;
}

void sub_10019ED40()
{
  *(void *)uint64_t v0 = v6;
  *(_DWORD *)(v0 + 8) = v2;
  *(_DWORD *)(v0 + 12) = v3;
  *(void *)(v0 + 16) = v4;
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 32) = v5;
}

uint64_t sub_10019ED58()
{
  return v0;
}

uint64_t sub_10019ED74(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, a1);
  return type metadata accessor for LocationsState();
}

uint64_t sub_10019EDF4()
{
  return type metadata accessor for AccessibilityChildBehavior();
}

uint64_t sub_10019EE34()
{
  return v0 - 136;
}

uint64_t sub_10019EE48()
{
  return v0;
}

uint64_t sub_10019EE64()
{
  return v0;
}

Swift::Int sub_10019EE94()
{
  return sub_100652A58();
}

uint64_t sub_10019EEA4()
{
  return v0;
}

uint64_t sub_10019EEC8()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_10019EEF4()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_10019EF24()
{
  return v0;
}

uint64_t sub_10019EF40()
{
  return 0x796C6C696863;
}

uint64_t sub_10019EF54()
{
  return 0x7463697274736572;
}

uint64_t sub_10019EF68()
{
  return Option.init(label:value:description:)();
}

uint64_t sub_10019EF84()
{
  return v0;
}

uint64_t sub_10019EF9C()
{
  return sub_100162D0C((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 - 144), v0 - 112, v0 - 120, v0 - 128);
}

uint64_t sub_10019EFBC()
{
  return v0;
}

uint64_t sub_10019EFD8@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10019EFFC()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_10019F014@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 120) = a1;
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10019F038()
{
  return *(void *)(v0 - 144);
}

uint64_t sub_10019F050()
{
  return v0;
}

uint64_t sub_10019F06C()
{
  return _s11NormalModelVMa();
}

uint64_t sub_10019F094()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10019F0B0()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_10019F0D8()
{
  return sub_10020D948(v0, v1 - 240);
}

double sub_10019F0F4()
{
  return v0;
}

double sub_10019F11C()
{
  return v0;
}

uint64_t sub_10019F130()
{
  return v0;
}

uint64_t sub_10019F158()
{
  return v0;
}

uint64_t sub_10019F174()
{
  return static NumberFormatStyleConfiguration.Precision.fractionLength<A>(_:)();
}

uint64_t sub_10019F198()
{
  return *(void *)(v0 - 136);
}

void sub_10019F1B4()
{
  *(void *)(v1 - 152) = *(void *)(v0 + 112);
}

uint64_t sub_10019F1D4()
{
  return *(void *)(v0 - 472);
}

uint64_t sub_10019F1F8()
{
  uint64_t v4 = *(void *)(v2 - 312);
  return sub_1001262FC(v1, v4, v0);
}

void sub_10019F240(uint64_t a1@<X8>)
{
  *(void *)(v2 - 336) = v1;
  *(void *)(v2 - 304) = v1;
  *(void *)(v2 - 296) = a1;
}

uint64_t sub_10019F25C()
{
  return v0;
}

uint64_t sub_10019F278()
{
  return v0;
}

uint64_t sub_10019F290()
{
  return 0x7361206E776F6853;
}

void sub_10019F2C4(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 224), 1, 1, a1);
  sub_10011D8AC();
}

uint64_t sub_10019F328()
{
  return 0;
}

uint64_t sub_10019F340(uint64_t a1, uint64_t a2)
{
  return sub_10033AAA4(a1, a2);
}

uint64_t sub_10019F360(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 280), 1, 1, a1);
  return type metadata accessor for ViewState(0);
}

uint64_t sub_10019F3A0()
{
  return v0;
}

uint64_t sub_10019F3B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return sub_1008E457C(a1, a2 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a3, a4);
}

uint64_t sub_10019F3C0()
{
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t sub_10019F3E4()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_10019F408()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10019F43C()
{
  return v0;
}

uint64_t sub_10019F458()
{
  return UIListContentConfiguration.text.setter();
}

uint64_t sub_10019F488()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_10019F4B4(uint64_t a1, uint64_t *a2)
{
  return sub_10009779C(a1, a2);
}

uint64_t sub_10019F4BC()
{
  return type metadata accessor for WindComponentCompassViewModel();
}

uint64_t sub_10019F4E0()
{
  return v0;
}

uint64_t sub_10019F518()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10019F534()
{
  return *(void *)(v0 - 288);
}

uint64_t sub_10019F568()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t sub_10019F584(uint64_t a1)
{
  *uint64_t v1 = *(unsigned char *)(v2 + *(int *)(a1 + 20));
  return type metadata accessor for Location();
}

uint64_t sub_10019F5AC()
{
  return v1 + *(int *)(v0 + 20);
}

uint64_t sub_10019F5C4()
{
  return v0;
}

uint64_t sub_10019F5EC()
{
  return v0;
}

uint64_t sub_10019F60C()
{
  *(unsigned char *)(v0 - 104) = 2;
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10019F64C()
{
  return v0;
}

double sub_10019F664()
{
  return 0.0;
}

uint64_t sub_10019F684()
{
  return v0;
}

uint64_t sub_10019F6A0()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10019F6BC()
{
  return v0;
}

id sub_10019F6D8(float a1)
{
  *uint64_t v1 = a1;
  *(void *)(v4 - 160) = v1 + 1;
  uint64_t v6 = *(const char **)(v3 + 1920);
  return [v2 v6];
}

BOOL sub_10019F700(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_10019F73C()
{
  return swift_bridgeObjectRelease();
}

double sub_10019F760()
{
  return v0;
}

uint64_t sub_10019F774()
{
  return sub_1007EC358(v0 - 89, 0);
}

uint64_t sub_10019F790()
{
  return *(void *)(v0 - 104);
}

uint64_t sub_10019F7A4()
{
  return *(void *)(v0 - 376);
}

uint64_t sub_10019F7CC()
{
  return v0;
}

uint64_t sub_10019F7E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10019F7FC()
{
  return 0;
}

uint64_t sub_10019F830()
{
  return swift_release_n();
}

id sub_10019F84C()
{
  uint64_t v4 = *(const char **)(v2 + 2840);
  return [v1 v4:v0];
}

uint64_t sub_10019F868()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_10019F88C()
{
  return *(void *)(v0 - 288);
}

uint64_t sub_10019F8BC()
{
  return v0;
}

uint64_t sub_10019F8EC()
{
  return type metadata accessor for HomeAndWorkRefinementViewModel(0);
}

uint64_t sub_10019F914()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_10019F94C()
{
  return v0;
}

void sub_10019F968()
{
  sub_1000C4E58();
}

uint64_t sub_10019F98C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10019F9A4()
{
  return v0;
}

uint64_t sub_10019F9BC()
{
  return type metadata accessor for LocationPreviewViewAction();
}

uint64_t sub_10019F9E8()
{
  *(_OWORD *)(v0 - 240) = *(_OWORD *)(v0 - 128);
  *(_OWORD *)(v0 - 272) = *(_OWORD *)(v0 - 112);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10019FA1C@<X0>(unint64_t a1@<X8>)
{
  return sub_1001A6D34(a1 > 1, v1, 1, v2);
}

uint64_t sub_10019FA40()
{
  return v0;
}

uint64_t sub_10019FA5C@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  int v3 = v2 - 1;
  if (v3 < 0) {
    int v3 = -1;
  }
  return (v3 + 1);
}

void sub_10019FA9C(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 616), 1, 1, a1);
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 624), 1, 1, *(void *)(v1 - 648));
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 632), 1, 1, *(void *)(v1 - 640));
  sub_10011D8AC();
}

uint64_t sub_10019FB58()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v1 + *(int *)(v0 + 24));
  return swift_release();
}

uint64_t sub_10019FBA0(uint64_t a1)
{
  *(void *)(v1 - 152) = a1;
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_10019FC04()
{
  return v0;
}

uint64_t sub_10019FC1C()
{
  return 0;
}

uint64_t sub_10019FC30()
{
  return *(void *)(v0 - 312);
}

void *sub_10019FC44()
{
  return sub_1001B1E64(v0, *(void *)(v1 + 72));
}

uint64_t sub_10019FC64(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v2 - 96), 1, 1, a1);
  return v1;
}

void sub_10019FCA4(uint64_t a1@<X8>)
{
  unint64_t v3 = 0xD000000000000027;
  unint64_t v2 = (a1 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&v3);
}

uint64_t sub_10019FCC4()
{
  return v0;
}

uint64_t sub_10019FCEC(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, a1);
  return type metadata accessor for DisplayMetrics();
}

uint64_t sub_10019FD38@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>, char a4, char a5, char a6, char a7, char a8)
{
  return sub_1001C6768(a1, a2, 2, 2, 2, 2, v8, 2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_10019FD60(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, *(void *)(v1 - 232));
  return swift_bridgeObjectRelease();
}

uint64_t sub_10019FD98(uint64_t result)
{
  *(unsigned char *)(result + 16) = *(_DWORD *)(v1 - 204);
  return result;
}

uint64_t sub_10019FDA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  char v6 = *(unsigned char *)(a1 + 32);
  return sub_100191D78(v2, v3, v4, v5, v6);
}

uint64_t sub_10019FDC0()
{
  return *(void *)(v0 - 176);
}

uint64_t sub_10019FDD8()
{
  *(_WORD *)(v0 + 12) = 2081;
  return swift_bridgeObjectRetain();
}

unint64_t sub_10019FDF8()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_10019FE0C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 200) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t sub_10019FE38()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10019FE58()
{
  return v0;
}

void *sub_10019FE74()
{
  return sub_1001B1E64(v0, v0[3]);
}

uint64_t sub_10019FE98()
{
  return Text.init<A>(_:)();
}

uint64_t sub_10019FEB0()
{
  sub_10018F6D8(*(void *)(v1 + *(int *)(v0 + 20)), *(unsigned char *)(v1 + *(int *)(v0 + 20) + 8));
  return sub_10018F6D8(*(void *)(v1 + *(int *)(v0 + 24)), *(unsigned char *)(v1 + *(int *)(v0 + 24) + 8));
}

uint64_t sub_10019FEEC()
{
  return 0x656B6F6D73;
}

uint64_t sub_10019FF00()
{
  *(void *)(v2 - 184) = v0;
  return v1;
}

void sub_10019FF24(uint64_t a1@<X8>)
{
  *(void *)(a1 + 64) |= 1 << v1;
}

uint64_t sub_10019FF3C(uint64_t result)
{
  *(unsigned char *)(result + 16) = 34;
  return result;
}

uint64_t sub_10019FF48()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_10019FF80()
{
  return static Forecast.== infix(_:_:)();
}

uint64_t sub_10019FFA8()
{
  return v0;
}

uint64_t sub_10019FFBC()
{
  return v0;
}

void sub_10019FFE0()
{
  ++*(void *)(v0 + 16);
}

uint64_t sub_1001A0004()
{
  return 0;
}

uint64_t sub_1001A0018()
{
  return v0;
}

uint64_t sub_1001A0038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char a13, char a14)
{
  return sub_1000EC58C(0, 0, 1, 0, 0, 0, 0xE000000000000000, 0, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1001A009C()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1001A00B8()
{
  return v0;
}

uint64_t sub_1001A00CC()
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v0 - 224), 1, 1, *(void *)(v0 - 168));
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v0 - 232), 1, 1, *(void *)(v0 - 144));
  return type metadata accessor for DisplayMetrics();
}

double sub_1001A0120()
{
  double result = 0.0;
  *(_OWORD *)(v0 + 408) = 0u;
  *(_OWORD *)(v0 + 424) = 0u;
  *(_OWORD *)(v0 + 440) = 0u;
  *(_OWORD *)(v0 + 456) = 0u;
  *(unsigned char *)(v0 + 472) = 0;
  return result;
}

uint64_t sub_1001A014C@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t sub_1001A015C@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 112) = a1;
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1001A0180()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_1001A01A0()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1001A01C8()
{
  return type metadata accessor for Measurement();
}

double sub_1001A01F4()
{
  return *(double *)(v0 - 96);
}

uint64_t sub_1001A0208()
{
  return v0;
}

void sub_1001A0220()
{
  sub_100865224();
}

uint64_t sub_1001A0248()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_1001A0260()
{
  return *(void *)(v0 - 296);
}

uint64_t sub_1001A0288@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 312) = a1;
  return 0;
}

uint64_t sub_1001A0298()
{
  return *(void *)(v0 - 352);
}

uint64_t sub_1001A02B8()
{
  return type metadata accessor for MoonRiseSet();
}

uint64_t sub_1001A02F0()
{
  sub_10018F6E4();
  return swift_release();
}

uint64_t sub_1001A0330()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_1001A0380()
{
  return type metadata accessor for LocalizedStringResource.BundleDescription();
}

uint64_t sub_1001A03A8()
{
  return v0;
}

uint64_t sub_1001A03D4()
{
  uint64_t v3 = v2[7];
  *(unsigned char *)(v0 + v2[6]) = *(unsigned char *)(v1 + v2[6]);
  *(void *)(v0 + v3) = *(void *)(v1 + v3);
  uint64_t v4 = v2[9];
  *(void *)(v0 + v2[8]) = *(void *)(v1 + v2[8]);
  *(void *)(v0 + v4) = *(void *)(v1 + v4);
  uint64_t v5 = v2[10];
  char v6 = (void *)(v0 + v5);
  uint64_t v7 = (void *)(v1 + v5);
  uint64_t result = v7[1];
  void *v6 = *v7;
  v6[1] = result;
  return result;
}

uint64_t sub_1001A0414()
{
  return v0;
}

uint64_t sub_1001A0428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  return sub_1001659F0(0, 3, v26, v25, v27, 0, 0, 0, 0, v24, v23, v22, v21, 0, 0, 0, 0, 0, 0,
           a20,
           a21);
}

uint64_t sub_1001A0474()
{
  *(void *)(v0 - 120) = 1752392040;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1001A049C()
{
  return *(void *)(v0 - 160);
}

uint64_t sub_1001A04C0(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, a1);
  return type metadata accessor for ViewState(0);
}

uint64_t sub_1001A04F8()
{
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
}

uint64_t sub_1001A0520()
{
  return *(void *)(v0 - 176);
}

uint64_t sub_1001A0560()
{
  uint64_t result = v0;
  *(void *)(v2 - 168) = *(void *)(v1 + 16);
  *(void *)(v2 - 160) = v1 + 16;
  return result;
}

uint64_t sub_1001A0598@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return sub_1003630A4(v2, (uint64_t)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0));
}

id sub_1001A05C4()
{
  uint64_t v3 = *(const char **)(v1 + 2848);
  return [v0 v3];
}

uint64_t sub_1001A05DC()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1001A05F4()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_1001A0618()
{
  return sub_1001EC074();
}

uint64_t sub_1001A0654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s7Weather24LocationCompositionStateOwst_0(v4, 1, 1, a4);
  return type metadata accessor for LocationsState();
}

uint64_t sub_1001A0688()
{
  return *(void *)(v0 - 304);
}

uint64_t sub_1001A06A4()
{
  return *(void *)(v0 - 280);
}

uint64_t sub_1001A06CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v28 = *(void *)(v26 - 304);
  return sub_1001659F0(0, 3, v28, v24, v25, v21, v22, v23, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

void sub_1001A0748(uint64_t a1@<X3>, unint64_t a2@<X8>)
{
  sub_1007E9CF4(a2 > 1, v2, 1, a1);
}

void sub_1001A0768(uint64_t a1, uint64_t a2)
{
  sub_100098B8C(a1, a2, 0x656D614E79746963, 0xEB0000000079654BLL);
}

uint64_t sub_1001A0794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return a24;
}

uint64_t sub_1001A07A8()
{
  return type metadata accessor for MoonScrubberHeaderView();
}

char *sub_1001A07D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  return &a10;
}

uint64_t sub_1001A07E4@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1);
}

uint64_t sub_1001A083C(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 152), 1, 1, a1);
  return type metadata accessor for ModalViewState(0);
}

unint64_t sub_1001A0878()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1001A0894()
{
  return sub_10021A144(v0, v1);
}

__n128 sub_1001A08B4@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int8 v2 = v1->n128_u8[8];
  unint64_t v3 = v1[1].n128_u64[0];
  unsigned __int8 v4 = v1[1].n128_u8[8];
  unint64_t v5 = v1[2].n128_u64[0];
  unsigned __int8 v6 = v1[2].n128_u8[8];
  __n128 result = v1[3];
  a1->n128_u64[0] = v1->n128_u64[0];
  a1->n128_u8[8] = v2;
  a1[1].n128_u64[0] = v3;
  a1[1].n128_u8[8] = v4;
  a1[2].n128_u64[0] = v5;
  a1[2].n128_u8[8] = v6;
  a1[3] = result;
  return result;
}

uint64_t sub_1001A0928()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1001A0944()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_1001A095C()
{
  return *(void *)(v0 - 520);
}

uint64_t sub_1001A0970()
{
  return v0;
}

uint64_t sub_1001A0988()
{
  return type metadata accessor for DailyForecastComponentViewModel(0);
}

uint64_t sub_1001A09A4()
{
  return v0;
}

uint64_t sub_1001A09B8()
{
  return URLHandlerPattern.init(scheme:host:path:fragment:params:conditions:)();
}

uint64_t sub_1001A09E4()
{
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_1001A0A10()
{
  return v0;
}

uint64_t sub_1001A0A28()
{
  return swift_retain();
}

uint64_t sub_1001A0A40()
{
  return sub_1001CB2DC(v0, v1);
}

uint64_t sub_1001A0A5C()
{
  return dispatch thunk of CallbackRegistrationType.whenResolving<A>(_:scope:callback:)();
}

uint64_t sub_1001A0A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Publisher.handleEvents(receiveSubscription:receiveOutput:receiveCompletion:receiveCancel:receiveRequest:)(a1, a2, a3, a4, 0, 0, 0, 0);
}

uint64_t sub_1001A0AA8@<X0>(int a1@<W8>, int a2, char a3)
{
  return sub_1001C6768(2u, 0, 0, 2, 2, 2, v3, 2, v4, a1, SBYTE1(a1), SBYTE2(a1), SHIBYTE(a1), a3);
}

uint64_t sub_1001A0AE0()
{
  return *(void *)(v0 - 240);
}

uint64_t sub_1001A0B18()
{
  return v0;
}

uint64_t sub_1001A0B34(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 136), 1, 1, a1);
  return type metadata accessor for EnvironmentState();
}

uint64_t sub_1001A0B6C()
{
  return String.hash(into:)();
}

uint64_t sub_1001A0BBC()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t sub_1001A0BDC(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = 1684957547;
  a1[2].n128_u64[1] = 0xE400000000000000;
  return NotificationSubscription.Kind.description.getter();
}

uint64_t sub_1001A0C00(void (*a1)(void))
{
  return sub_100665550(a1);
}

uint64_t sub_1001A0C08()
{
  return 0x617361656C706E75;
}

uint64_t sub_1001A0C40()
{
  return == infix(_:_:)();
}

uint64_t sub_1001A0C6C()
{
  return type metadata accessor for UnitsConfigurationViewModel.Temperature(0);
}

uint64_t sub_1001A0C94(uint64_t a1)
{
  *(void *)(v1 - 104) = a1;
  return v1 - 104;
}

uint64_t sub_1001A0CA4()
{
  return type metadata accessor for LocationPreviewModalViewModel(0);
}

uint64_t sub_1001A0CCC()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1001A0CE8()
{
  return v0;
}

uint64_t sub_1001A0D00()
{
  return RegistrationContainer.register<A>(_:name:factory:)();
}

uint64_t sub_1001A0D18()
{
  return v0 - 120;
}

uint64_t sub_1001A0D30()
{
  return v0 - 136;
}

uint64_t sub_1001A0D44()
{
  return v0;
}

uint64_t sub_1001A0D58@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t sub_1001A0D84@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  unsigned __int8 v6 = *(double **)(a1 - 256);
  double *v6 = a4;
  v6[1] = a5;
  v6[2] = a2;
  v6[3] = a3;
  return type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
}

uint64_t sub_1001A0DC8()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t sub_1001A0DE0()
{
  return Promise.init(value:)();
}

void *sub_1001A0DFC@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  return memmove(__dst, a2, v2);
}

uint64_t sub_1001A0E18()
{
  return swift_release();
}

uint64_t sub_1001A0E30()
{
  return v0;
}

uint64_t sub_1001A0E5C()
{
  return v0;
}

uint64_t sub_1001A0E74()
{
  return 0x6F4C686372616573;
}

void sub_1001A0E98(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 112) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

__n128 sub_1001A0EB8()
{
  char v1 = *(unsigned char *)(v0 - 224);
  __n128 result = *(__n128 *)(v0 - 256);
  long long v3 = *(_OWORD *)(v0 - 240);
  *(__n128 *)(v0 - 304) = result;
  *(_OWORD *)(v0 - 288) = v3;
  *(unsigned char *)(v0 - 272) = v1;
  *(unsigned char *)(v0 - 271) = 0;
  return result;
}

uint64_t sub_1001A0EE4()
{
  return _FrameLayout.init(width:height:alignment:)();
}

uint64_t sub_1001A0F04()
{
  return v0;
}

uint64_t sub_1001A0F1C()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1001A0F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 - 432) = v4;
  _s7Weather24LocationCompositionStateOwst_0(v4, 1, 1, a4);
  return type metadata accessor for EnvironmentState();
}

uint64_t sub_1001A0F74()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_1001A0F90()
{
  return 2;
}

void sub_1001A0FE8(uint64_t a1)
{
  *(void *)(v1 + 64) = a1;
  *(void *)(v1 + 40) = v2;
  type metadata accessor for AttributeName(0);
}

uint64_t sub_1001A1004(uint64_t a1, uint64_t *a2)
{
  return sub_10009779C(a1, a2);
}

uint64_t sub_1001A1018(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, a1);
  return type metadata accessor for TimeState();
}

uint64_t sub_1001A1050()
{
  return 2;
}

uint64_t sub_1001A106C@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 128) = a1;
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1001A1090()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_1001A10D4()
{
  return v0;
}

char *sub_1001A10E8@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1001A1108(uint64_t a1)
{
  uint64_t result = _s7Weather24LocationCompositionStateOwst_0(v4, 1, 1, a1);
  *uint64_t v1 = v3;
  v1[1] = v2;
  return result;
}

unint64_t sub_1001A1148@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 192) = a1;
  *(unsigned char *)(v1 - 65) = 0;
  return sub_1009DC0A0();
}

uint64_t sub_1001A1160()
{
  return Definition.inScope(_:)();
}

uint64_t sub_1001A1178()
{
  return v0;
}

uint64_t sub_1001A1198@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 72) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001A11B4()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_1001A11DC()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_1001A1204@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 + 488) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001A1230()
{
  return v0;
}

uint64_t sub_1001A1244()
{
  return Tips.Parameter.wrappedValue.getter();
}

uint64_t sub_1001A1260()
{
  return v0;
}

uint64_t sub_1001A1274(uint64_t a1)
{
  uint64_t v4 = *(void *)(v2 - 360);
  return sub_10006DF38(a1, v4, v1);
}

void *sub_1001A1294(void *a1)
{
  return sub_1001B1E64(a1, a1[3]);
}

uint64_t sub_1001A12BC()
{
  return 0;
}

uint64_t sub_1001A12D0()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_getErrorValue();
}

uint64_t sub_1001A132C()
{
  return sub_10021A144(v0, v1);
}

void sub_1001A136C()
{
  uint64_t v1 = *(void *)(v0 - 376);
  *(void *)(v0 - 136) = *(void *)(v0 - 368);
  *(void *)(v0 - 128) = v1;
}

uint64_t sub_1001A1384()
{
  return 0x6572757373657270;
}

BOOL sub_1001A139C@<W0>(char a1@<W1>, uint64_t a2@<X8>)
{
  return *(double *)(v2 + 8 * a2) < *(double *)(v2 + 8 * a1);
}

uint64_t sub_1001A13B4()
{
  uint64_t v3 = *(void *)(v1 - 240);
  return _s7Weather24LocationCompositionStateOwst_0(v0, 1, 1, v3);
}

uint64_t sub_1001A13D8()
{
  return v0;
}

uint64_t sub_1001A13E4()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_1001A1400()
{
  return 0x6465696E6564;
}

uint64_t sub_1001A1414()
{
  return v0;
}

uint64_t sub_1001A142C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v3 - 80) = a1;
  *(void *)(v3 - 72) = (v1 - 32) | 0x8000000000000000;
  return v2;
}

uint64_t sub_1001A1440()
{
  return WeatherInterpolator.reduce(_:from:to:clampRange:useMonotone:)();
}

uint64_t sub_1001A1464()
{
  return type metadata accessor for Locale();
}

uint64_t sub_1001A148C()
{
  return _s7Weather24LocationCompositionStateOwet_0(v0, 1, v1);
}

double sub_1001A14B0()
{
  uint64_t v3 = *(int *)(v2 + 40);
  uint64_t v4 = (void *)(v0 + v3);
  uint64_t v5 = (double *)(v1 + v3);
  double result = *v5;
  *uint64_t v4 = *(void *)v5;
  return result;
}

uint64_t sub_1001A14C8()
{
  return swift_weakInit();
}

uint64_t sub_1001A14E4@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a3 - 256);
  return sub_100151718(a1, v4, a2);
}

uint64_t sub_1001A14FC()
{
  return dispatch thunk of Collection.endIndex.getter();
}

uint64_t sub_1001A1520()
{
  return v0;
}

uint64_t sub_1001A152C()
{
  return swift_arrayDestroy();
}

uint64_t sub_1001A1548(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, v2);
  return _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, v2);
}

uint64_t sub_1001A1588@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = _s7Weather24LocationCompositionStateOwst_0(v2 + a1, 1, 1, v1);
  *(void *)uint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  *(unsigned char *)(v2 + 16) = 2;
  uint64_t v5 = *(void *)(v3 - 376);
  *(void *)(v2 + 24) = *(void *)(v3 - 256);
  *(void *)(v2 + 32) = v5;
  return result;
}

uint64_t sub_1001A15C8()
{
  return sub_10016414C(v1, v2, (uint64_t *)(v0 + 440));
}

uint64_t sub_1001A15E4()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_1001A15FC()
{
  return *(void *)(v0 - 368);
}

uint64_t sub_1001A1624()
{
  return v0;
}

uint64_t sub_1001A1638()
{
  return *(void *)(v0 - 368);
}

uint64_t sub_1001A1650()
{
  return v0;
}

void sub_1001A1660(uint64_t a1@<X8>)
{
  uint64_t v2 = *v1;
  char v3 = *((unsigned char *)v1 + 8);
  char v4 = *((unsigned char *)v1 + 9);
  char v5 = *((unsigned char *)v1 + 10);
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 9) = v4;
  *(unsigned char *)(a1 + 10) = v5;
}

uint64_t sub_1001A1684()
{
  return 0;
}

void sub_1001A1698(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 256) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1001A16B4()
{
  return v0;
}

uint64_t sub_1001A16E4()
{
  sub_10018F6D8(*(void *)(v1 + v0[22]), *(unsigned char *)(v1 + v0[22] + 8));
  sub_10018F6D8(*(void *)(v1 + v0[23]), *(unsigned char *)(v1 + v0[23] + 8));
  sub_10018F6D8(*(void *)(v1 + v0[24]), *(unsigned char *)(v1 + v0[24] + 8));
  sub_10018F6D8(*(void *)(v1 + v0[25]), *(unsigned char *)(v1 + v0[25] + 8));
  sub_10018F6D8(*(void *)(v1 + v0[26]), *(unsigned char *)(v1 + v0[26] + 8));
  return sub_10018F6D8(*(void *)(v1 + v0[27]), *(unsigned char *)(v1 + v0[27] + 8));
}

uint64_t sub_1001A1774()
{
  return v0;
}

uint64_t sub_1001A17A0()
{
  return v0;
}

uint64_t sub_1001A17B4()
{
  return v0;
}

void sub_1001A17C4()
{
  sub_10018F6E4();
  uint64_t v2 = *(void **)(v1 + *(int *)(v0 + 108));
}

uint64_t sub_1001A1800(uint64_t a1, uint64_t a2)
{
  return sub_10071D6CC(a1, a2, v2);
}

uint64_t sub_1001A1818()
{
  return v0;
}

uint64_t sub_1001A1824()
{
  return static String.localizedStringWithFormat(_:_:)();
}

uint64_t sub_1001A184C()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t sub_1001A1868()
{
  return Location.Identifier.init(id:name:coordinate:)(v0, v1, v2, v3);
}

void sub_1001A1890()
{
  *(void *)(v1 - 96) = v0;
}

uint64_t sub_1001A18B4()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

unsigned char *sub_1001A18D0(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t sub_1001A18E4()
{
  return swift_retain_n();
}

uint64_t sub_1001A18FC()
{
  return v0;
}

uint64_t sub_1001A190C()
{
  return 0x616E6964726F6F63;
}

uint64_t sub_1001A1944@<X0>(unint64_t a1@<X8>)
{
  uint64_t v4 = *(void *)(v2 - 192);
  return sub_1001D262C(a1 > 1, v1, 1, v4);
}

uint64_t sub_1001A1968@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + 32) + a1;
}

uint64_t sub_1001A197C(uint64_t a1, uint64_t a2)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, *(void *)(v2 - 144));
  return type metadata accessor for DisplayMetrics();
}

uint64_t sub_1001A19AC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v2 - 288);
  return sub_1001262FC(a1, v4, v1);
}

uint64_t sub_1001A19DC()
{
  return v0;
}

uint64_t sub_1001A19F8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v2 + a2) = result & 1;
  return result;
}

uint64_t sub_1001A1A04@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 - 120) + a1;
}

uint64_t sub_1001A1A10()
{
  return v0;
}

uint64_t sub_1001A1A30()
{
  return type metadata accessor for State();
}

uint64_t sub_1001A1A48()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001A1A6C(uint64_t a1, uint64_t a2)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v2);
  return swift_storeEnumTagMultiPayload();
}

void sub_1001A1AA4(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 16) = v1 & 1;
}

double sub_1001A1AC4()
{
  double result = *(double *)(v1 - 144);
  uint64_t v3 = *(void *)(v1 - 136);
  *(double *)uint64_t v0 = result;
  *(void *)(v0 + 8) = v3;
  return result;
}

uint64_t sub_1001A1AD8()
{
  return 0x6F697469646E6F63;
}

void sub_1001A1AFC()
{
  uint64_t v3 = *(void *)(v1 - 184);
  uint64_t v4 = *(void *)(v1 - 320);
  uint64_t v5 = *(void *)(v1 - 216);
  uint64_t v6 = *(void *)(v1 - 168);
  uint64_t v7 = *(void *)(v1 - 208);
  int v8 = *(_DWORD *)(v1 - 240);
  sub_100B639C4(v3, v4, v5, v0, v6, v7, v8);
}

uint64_t sub_1001A1B3C@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a3 - 256);
  return sub_1001668D8(a1, v4, a2);
}

uint64_t sub_1001A1B54()
{
  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, v0);
}

void sub_1001A1B70()
{
  sub_1007F3214();
}

uint64_t sub_1001A1B94()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1001A1BB0()
{
  *(void *)(v4 + 16) = v0;
  return sub_10008FF6C(v2, v4 + v5 + v1 * v3);
}

uint64_t sub_1001A1BD0(uint64_t a1, uint64_t a2)
{
  return a2 & a1;
}

uint64_t sub_1001A1BD8()
{
  return type metadata accessor for String.LocalizationValue();
}

uint64_t sub_1001A1C10()
{
  return v0;
}

uint64_t sub_1001A1C2C()
{
  return type metadata accessor for DynamicTypeSize();
}

uint64_t sub_1001A1C60()
{
  return type metadata accessor for Location();
}

uint64_t sub_1001A1C84()
{
  return *(void *)(v0 - 152);
}

uint64_t sub_1001A1CA8(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, a1);
  return type metadata accessor for TimeState();
}

uint64_t sub_1001A1CF4(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1001A1D18()
{
  return v0;
}

uint64_t sub_1001A1D34()
{
  return v0;
}

void sub_1001A1D40()
{
  sub_1000A8368();
}

uint64_t sub_1001A1D64()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_1001A1D78(uint64_t a1)
{
  *(void *)(v1 + 664) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1001A1DA0()
{
  return *(void *)(v0 - 160);
}

uint64_t sub_1001A1DB8()
{
  return 0;
}

uint64_t sub_1001A1E20@<X0>(uint64_t a1@<X8>)
{
  return v1 + ((a1 + 16) & ~a1);
}

void sub_1001A1E50(uint64_t a1)
{
  unint64_t v2 = 0xEF3D6C65646F6D20;
  String.append(_:)(*(Swift::String *)&a1);
}

uint64_t sub_1001A1E70()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

double sub_1001A1E8C@<D0>(unsigned __int8 a1@<W0>, int a2@<W1>, unsigned char *a3@<X8>, char a4, char a5, char a6, uint64_t a7, char a8, char a9, char a10, uint64_t a11)
{
  return sub_1000F0AD4(a1, a2, 5, v11, 0, 0, 2, 2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_1001A1EB4()
{
  return swift_getTupleTypeMetadata3();
}

void sub_1001A1EDC()
{
  uint64_t v2 = v0 + v1[10];
  *(void *)uint64_t v2 = 0;
  *(unsigned char *)(v2 + 8) = 1;
  uint64_t v3 = (void *)(v0 + v1[12]);
  *uint64_t v3 = 0;
  v3[1] = 0;
  uint64_t v4 = (void *)(v0 + v1[13]);
  *uint64_t v4 = 0;
  v4[1] = 0;
}

uint64_t sub_1001A1F14()
{
  return *(void *)v0;
}

uint64_t sub_1001A1F40()
{
  return Measurement.init(value:unit:)();
}

uint64_t sub_1001A1F64(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 144), 1, 1, a1);
  return type metadata accessor for ViewState(0);
}

void sub_1001A1FA0()
{
  uint64_t v4 = (void *)(v3 + *(int *)(v0 + 36));
  *uint64_t v4 = v1;
  v4[1] = v2;
  uint64_t v5 = (void *)(v3 + *(int *)(v0 + 40));
  *uint64_t v5 = 0;
  v5[1] = 0;
}

_OWORD *sub_1001A1FC0(void *a1)
{
  *(void *)(v1 + 328) = a1;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_100098DB4((_OWORD *)(v1 + 328), v2);
}

uint64_t sub_1001A1FE4()
{
  return v0;
}

uint64_t sub_1001A1FFC()
{
  return v0;
}

uint64_t sub_1001A2010()
{
  return sub_10016414C(v0, v1, (uint64_t *)(v2 - 104));
}

uint64_t sub_1001A202C(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, *(void *)(v1 - 88));
}

uint64_t sub_1001A204C()
{
  return swift_beginAccess();
}

void sub_1001A206C(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = 0;
}

uint64_t sub_1001A2080()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_1001A20A4()
{
  return *(void *)(v0 - 440);
}

uint64_t sub_1001A20CC()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_1001A20F4()
{
  return type metadata accessor for Tips.Rule();
}

uint64_t sub_1001A211C()
{
  return v0;
}

double sub_1001A2138@<D0>(uint64_t a1@<X8>)
{
  return *(double *)(v1 + a1);
}

uint64_t sub_1001A2148()
{
  return 0x206D6F7266204025;
}

uint64_t sub_1001A2178()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_1001A21AC()
{
  return v0;
}

uint64_t sub_1001A21C4()
{
  return swift_allocObject();
}

uint64_t sub_1001A21E0()
{
  return v0;
}

uint64_t sub_1001A21F4()
{
  return v0;
}

uint64_t sub_1001A2210()
{
  return Hasher.init(_seed:)();
}

uint64_t sub_1001A2230()
{
  unint64_t v4 = 0xD00000000000001CLL;
  uint64_t v5 = v2;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  unint64_t v9 = 0xE000000000000000;
  uint64_t v10 = v1;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, *(Swift::String_optional *)&v6, v0, *(Swift::String *)&v8, *(Swift::String *)&v10)._countAndFlagsBits;
}

uint64_t sub_1001A2264()
{
  return _s7Weather24LocationCompositionStateOwst_0(v0, 0, 1, v1);
}

unint64_t sub_1001A2284(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, a1);
  return sub_1002AB8F0();
}

uint64_t sub_1001A22B8()
{
  return v0;
}

uint64_t sub_1001A22F0()
{
  return dispatch thunk of SetAlgebra.isSuperset(of:)();
}

double sub_1001A2310()
{
  *(void *)(v0 - 64) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 - 96) = 0u;
  *(_OWORD *)(v0 - 80) = 0u;
  return result;
}

uint64_t sub_1001A2320()
{
  return v0;
}

uint64_t sub_1001A2334()
{
  return 7959140;
}

uint64_t sub_1001A2350()
{
  return type metadata accessor for ArticleModel();
}

uint64_t sub_1001A2378@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(result + 72) = a2;
  *(unsigned char *)(result + 48) = v2;
  return result;
}

uint64_t sub_1001A2384()
{
  return sub_100162D0C((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 - 144), v0 - 112, v0 - 120, v0 - 128);
}

uint64_t sub_1001A23A8()
{
  return v0;
}

uint64_t sub_1001A23C0()
{
  return type metadata accessor for LocationPreviewViewModel(0);
}

uint64_t sub_1001A23E8()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_1001A2410()
{
  return v0;
}

uint64_t sub_1001A2424()
{
  return v0;
}

uint64_t sub_1001A2458()
{
  return v0 - 96;
}

uint64_t sub_1001A2474()
{
  return 0;
}

uint64_t sub_1001A24B0()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t sub_1001A24D4()
{
  return v0;
}

uint64_t sub_1001A24FC()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1001A251C()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_1001A2558()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t sub_1001A2578()
{
  return v0;
}

__n128 sub_1001A2588()
{
  long long v1 = *(_OWORD *)(v0 + 976);
  *(_OWORD *)(v0 + 512) = *(_OWORD *)(v0 + 992);
  *(_OWORD *)(v0 + 528) = v1;
  long long v2 = *(_OWORD *)(v0 + 1008);
  *(_OWORD *)(v0 + 464) = *(_OWORD *)(v0 + 1024);
  *(_OWORD *)(v0 + 480) = v2;
  long long v3 = *(_OWORD *)(v0 + 1040);
  __n128 result = *(__n128 *)(v0 + 1056);
  *(__n128 *)(v0 + 416) = result;
  *(_OWORD *)(v0 + 432) = v3;
  return result;
}

uint64_t sub_1001A25B4()
{
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

double sub_1001A25D0()
{
  double result = 0.0;
  *(_OWORD *)(v0 - 128) = 0u;
  *(_OWORD *)(v0 - 112) = 0u;
  *(void *)(v0 - 96) = 0;
  return result;
}

uint64_t sub_1001A2610()
{
  uint64_t v3 = *(void *)(v1 + 8);
  *(void *)(v2 - 400) = (v1 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t result = v0;
  *(void *)(v2 - 392) = v3;
  return result;
}

uint64_t sub_1001A2640()
{
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t sub_1001A265C(float a1)
{
  *uint64_t v3 = a1;
  *(void *)(v2 + 88) = v1;
  return swift_errorRetain();
}

uint64_t sub_1001A2688(uint64_t a1, uint64_t *a2)
{
  return sub_10009779C(a1, a2);
}

uint64_t sub_1001A2690()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_1001A26B4(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, a1);
  return type metadata accessor for NotificationsOptInState();
}

uint64_t sub_1001A26EC()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_1001A2714()
{
  return v0;
}

uint64_t sub_1001A2734(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, a1);
}

uint64_t sub_1001A2758(void *a1, uint64_t a2)
{
  sub_1001B1E64(a1, a2);
  return *(void *)(v2 - 120);
}

uint64_t sub_1001A278C()
{
  return v0;
}

uint64_t sub_1001A27CC(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 104), 1, 1, a1);
  return type metadata accessor for EnvironmentState();
}

uint64_t sub_1001A2828()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_1001A2844()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

double sub_1001A2860()
{
  return v0;
}

uint64_t sub_1001A2874()
{
  return swift_endAccess();
}

uint64_t sub_1001A288C()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_1001A28A4()
{
  return *(void *)(v0 + 104);
}

double sub_1001A28B8()
{
  return 0.0;
}

uint64_t sub_1001A2950()
{
  return sub_1001EC5EC(v1, v0);
}

uint64_t sub_1001A2968()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_1001A2980(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1001A29A8()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_1001A29C0()
{
  return 0x657369726E6F6F4DLL;
}

uint64_t sub_1001A29E0()
{
  return *(void *)(v0 - 120);
}

uint64_t sub_1001A29F4()
{
  return v0;
}

uint64_t sub_1001A2A0C()
{
  return v0;
}

uint64_t sub_1001A2A2C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5 = *(void *)(v3 - 336);
  return sub_1001668D8(a1, v5, a3);
}

uint64_t sub_1001A2A48()
{
  return v0;
}

unint64_t sub_1001A2A60@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  return a1
       + ((*(unsigned __int8 *)(*(void *)(v2 - 120) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 120) + 80))
       + *(void *)(*(void *)(v2 - 120) + 72) * a2;
}

uint64_t sub_1001A2A84()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_1001A2AA0()
{
  *(void *)(v1 - 96) = v0;
  sub_1007F3084();
}

uint64_t sub_1001A2AC4()
{
  return 0;
}

uint64_t sub_1001A2AD0()
{
  return Location.timeZone.getter();
}

uint64_t sub_1001A2B18()
{
  return v0;
}

uint64_t sub_1001A2B2C@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

void sub_1001A2B38(uint64_t a1@<X8>)
{
  *(void *)(v1 - 576) = a1;
}

char *sub_1001A2B44(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + 1192);
  uint64_t result = (char *)v2 + *(int *)(a1 + 48);
  *uint64_t v2 = 6;
  return result;
}

uint64_t sub_1001A2B64()
{
  return v0;
}

uint64_t sub_1001A2B70()
{
  uint64_t result = _s7Weather24LocationCompositionStateOwst_0(v1 + v2[8], 1, 1, v0);
  *(void *)uint64_t v1 = 0;
  *(void *)(v1 + 8) = 0;
  *(unsigned char *)(v1 + 16) = 2;
  uint64_t v5 = *(void *)(v3 - 376);
  *(void *)(v1 + 24) = *(void *)(v3 - 256);
  *(void *)(v1 + 32) = v5;
  *(unsigned char *)(v1 + v2[9]) = 0;
  *(unsigned char *)(v1 + v2[10]) = 0;
  return result;
}

uint64_t sub_1001A2BD0(uint64_t a1)
{
  return sub_10006DF38(v2, a1, v1);
}

uint64_t sub_1001A2BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return type metadata accessor for ConditionDetailInput(0);
}

uint64_t sub_1001A2C10()
{
  return 0;
}

uint64_t sub_1001A2C24()
{
  return v0;
}

uint64_t sub_1001A2C84()
{
  return type metadata accessor for Tips.MaxDisplayCount();
}

uint64_t sub_1001A2CAC()
{
  return v0;
}

uint64_t sub_1001A2CBC()
{
  return swift_release();
}

uint64_t sub_1001A2CDC()
{
  uint64_t v3 = *(void *)(v1 + 8);
  *(void *)uint64_t v0 = *(void *)v1;
  *(void *)(v0 + 8) = v3;
  uint64_t v4 = *(void *)(v1 + 24);
  *(void *)(v0 + 16) = *(void *)(v1 + 16);
  *(void *)(v0 + 24) = v4;
  *(unsigned char *)(v0 + 32) = *(unsigned char *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 48);
  *(void *)(v0 + 40) = *(void *)(v1 + 40);
  *(void *)(v0 + 48) = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001A2D0C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 - 184);
  return _s7Weather24LocationCompositionStateOwst_0(v4, 1, 1, a1);
}

uint64_t sub_1001A2D30()
{
  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, v0);
}

uint64_t sub_1001A2D58(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v1);
}

uint64_t sub_1001A2D70()
{
  return 0x617361656C706E75;
}

uint64_t sub_1001A2D8C()
{
  return UIListContentConfiguration.text.setter();
}

uint64_t sub_1001A2DB4()
{
  return 0x646570706174;
}

uint64_t sub_1001A2DD0(uint64_t a1)
{
  return sub_10071D6CC(a1, v2, v1);
}

uint64_t sub_1001A2DE8()
{
  return v0;
}

uint64_t sub_1001A2E00()
{
  return v0;
}

uint64_t sub_1001A2E20()
{
  return v0;
}

uint64_t sub_1001A2E4C()
{
  return type metadata accessor for Optional();
}

uint64_t sub_1001A2E94(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t sub_1001A2EA0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  return sub_1001659F0(a1, a2, a3, a4, v21, 0, 0, 0, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

uint64_t sub_1001A2EC0()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

BOOL sub_1001A2EE4(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1001A2F00@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1);
}

uint64_t sub_1001A2F20()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001A2F38()
{
  return v0;
}

uint64_t sub_1001A2F50()
{
  return v0;
}

uint64_t sub_1001A2F68()
{
  return v0;
}

uint64_t sub_1001A2F80()
{
  return _s7Weather24LocationCompositionStateOwet_0(v0, 1, v1);
}

uint64_t sub_1001A2F9C()
{
  return v0;
}

uint64_t sub_1001A2FAC()
{
  return *(void *)(v0 - 288);
}

uint64_t sub_1001A2FDC()
{
  uint64_t v3 = *(void *)(v1 - 264);
  return _s7Weather24LocationCompositionStateOwst_0(v0, 1, 1, v3);
}

uint64_t sub_1001A301C()
{
  return v0;
}

uint64_t sub_1001A3030()
{
  return *(void *)v0;
}

uint64_t sub_1001A303C()
{
  return v1 + *(int *)(v0 + 20);
}

uint64_t sub_1001A3054()
{
  return v0;
}

uint64_t sub_1001A3068(uint64_t a1, uint64_t a2)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v2);
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v3 - 464), 1, 1, *(void *)(v3 - 328));
  return _s7Weather24LocationCompositionStateOwst_0(*(void *)(v3 - 552), 1, 1, *(void *)(v3 - 280));
}

uint64_t sub_1001A30CC()
{
  return dispatch thunk of Collection.subscript.read();
}

uint64_t sub_1001A30EC()
{
  return v0;
}

uint64_t sub_1001A3100()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_1001A312C()
{
  return swift_retain();
}

uint64_t sub_1001A3148(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, a1);
}

uint64_t sub_1001A3168(uint64_t a1)
{
  uint64_t v4 = *(void *)(v2 - 240);
  return sub_100178BD0(a1, v4, v1);
}

uint64_t sub_1001A3184()
{
  return v0;
}

uint64_t sub_1001A31A4()
{
  return swift_slowAlloc();
}

uint64_t sub_1001A31C0()
{
  return sub_1001B7204(v2, v1, v0);
}

uint64_t sub_1001A31E0()
{
  return v0 - 136;
}

uint64_t sub_1001A3214()
{
  return 2;
}

uint64_t sub_1001A323C()
{
  return *(void *)(v0 + 32);
}

unint64_t sub_1001A324C()
{
  *(unsigned char *)(v1 - 65) = v0;
  *(unsigned char *)(v1 - 66) = 0;
  return sub_1004E84B4();
}

uint64_t sub_1001A3264()
{
  return 0;
}

uint64_t sub_1001A3270()
{
  return v0;
}

uint64_t sub_1001A3284()
{
  return v0;
}

uint64_t sub_1001A329C()
{
  return type metadata accessor for Date();
}

uint64_t sub_1001A32BC()
{
  return v0;
}

uint64_t sub_1001A32D0()
{
  return View.accessibilityElement(children:)();
}

uint64_t sub_1001A32F8()
{
  return 0;
}

void sub_1001A330C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 224) = (char *)&a9 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1001A3328()
{
  return 0x739980E27449;
}

void sub_1001A3344(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1001A3364()
{
  return v0;
}

uint64_t sub_1001A3370()
{
  return v0;
}

uint64_t sub_1001A3380()
{
  return type metadata accessor for SunriseSunsetDetailViewModel();
}

uint64_t sub_1001A33A8()
{
  return v0;
}

uint64_t sub_1001A33BC@<X0>(uint64_t a1@<X8>)
{
  return _s7Weather24LocationCompositionStateOwst_0(v1 + a1, 1, 1, v2);
}

id sub_1001A33DC(uint64_t a1)
{
  return [v1 stringFromDate:a1];
}

uint64_t sub_1001A3400()
{
  return static Measurement.== infix<A, B>(_:_:)();
}

void sub_1001A341C()
{
  *(void *)(v0 + 16) = *(void *)(v1 + 16);
}

uint64_t sub_1001A3458()
{
  *(void *)(v1 - 488) = v0;
  return swift_slowAlloc();
}

uint64_t sub_1001A347C()
{
  return v0;
}

uint64_t sub_1001A3494()
{
  return type metadata accessor for PreviewLocation();
}

uint64_t sub_1001A34BC()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_1001A3510()
{
  return v0;
}

uint64_t sub_1001A3548()
{
  return sub_1001262FC(v2, v0, v1);
}

uint64_t sub_1001A3564@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t sub_1001A3574(uint64_t result, uint64_t a2)
{
  *(void *)(v2 - 376) = result;
  *(void *)(v2 - 200) = a2;
  return result;
}

uint64_t sub_1001A3594()
{
  return 0;
}

uint64_t sub_1001A35A8()
{
  return v0;
}

uint64_t sub_1001A35C0()
{
  return v0;
}

uint64_t sub_1001A35D4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5 = *(void *)(v3 - 280);
  return sub_100AA88B0(a1, v5, a3);
}

void sub_1001A35F0(__n128 a1, __n128 a2)
{
  *(__n128 *)(v2 - 312) = a1;
  *(__n128 *)(v2 - 296) = a2;
}

uint64_t sub_1001A3620()
{
  return swift_release();
}

uint64_t sub_1001A3638()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001A3650()
{
  return swift_release();
}

uint64_t sub_1001A3668()
{
  return *(void *)(v0 - 440);
}

uint64_t sub_1001A36A8()
{
  return swift_release();
}

uint64_t sub_1001A36C0()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

BOOL sub_1001A370C(uint64_t a1)
{
  return sub_1001A3740(a1, *(void *)(v1 + 16), (void (*)(void))&HourWeather.date.getter);
}

BOOL sub_1001A3740(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_10011C760();
  a3();
  sub_1001A3960((unint64_t *)&qword_100E66CC0, (void (*)(uint64_t))&type metadata accessor for Date);
  char v9 = dispatch thunk of static Comparable.< infix(_:_:)();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v5);
  return (v9 & 1) == 0;
}

uint64_t sub_1001A3848()
{
  return dispatch thunk of RawRepresentable.rawValue.getter();
}

uint64_t sub_1001A3874(float a1)
{
  *uint64_t v1 = a1;
  uint64_t v4 = *(void *)(v2 - 104);
  unint64_t v5 = *(void *)(v2 - 120);
  return sub_10016414C(v4, v5, (uint64_t *)(v2 - 88));
}

uint64_t sub_1001A389C(uint64_t result)
{
  *(void *)uint64_t v1 = result;
  *(unsigned char *)(v1 + 8) = 0;
  return result;
}

uint64_t sub_1001A38A8()
{
  return swift_allocObject();
}

uint64_t sub_1001A38D0()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1001A3918(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001A3960(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001A39A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001A39F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1001A3A38()
{
  sub_10018A6B4();
  *uint64_t v0 = v1;
}

uint64_t sub_1001A3A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void (*a8)(uint64_t)@<X7>, char *a9@<X8>, double a10@<D0>, uint64_t a11, unsigned __int8 a12, uint64_t a13, unsigned __int8 a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  uint64_t v126 = a8;
  uint64_t v125 = a7;
  uint64_t v124 = a6;
  uint64_t v145 = a5;
  uint64_t v146 = a2;
  uint64_t v153 = a4;
  uint64_t v148 = a3;
  uint64_t v132 = a17;
  uint64_t v134 = a16;
  uint64_t v133 = a15;
  LODWORD(v127) = a14;
  uint64_t v147 = a13;
  int v122 = a12;
  uint64_t v120 = a11;
  uint64_t v131 = type metadata accessor for WeatherFormatPlaceholder();
  sub_10017C83C();
  uint64_t v152 = v21;
  __chkstk_darwin(v22);
  sub_100109314();
  uint64_t v144 = v23;
  uint64_t v130 = type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle();
  sub_10017C83C();
  uint64_t v151 = v24;
  __chkstk_darwin(v25);
  uint64_t v143 = (char *)v119 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v27);
  sub_100109328((uint64_t)v119 - v28);
  uint64_t v29 = type metadata accessor for Date();
  uint64_t v142 = v29;
  sub_10017C83C();
  uint64_t v31 = v30;
  uint64_t v149 = v30;
  __chkstk_darwin(v32);
  sub_100162EF8();
  v119[1] = v33;
  sub_1001626D4();
  __chkstk_darwin(v34);
  sub_100109770();
  v119[0] = v35;
  sub_1001626D4();
  __chkstk_darwin(v36);
  sub_100109770();
  v119[2] = v37;
  sub_1001626D4();
  uint64_t v39 = __chkstk_darwin(v38);
  sub_10018B11C(v39, v40, v41, v42, v43, v44, v45, v46, v119[0]);
  uint64_t v47 = type metadata accessor for Calendar();
  sub_10017C83C();
  uint64_t v49 = v48;
  __chkstk_darwin(v50);
  sub_100162EF8();
  uint64_t v136 = v51;
  sub_1001626D4();
  uint64_t v53 = __chkstk_darwin(v52);
  uint64_t v55 = (void (*)(void))((char *)v119 - v54);
  __chkstk_darwin(v53);
  uint64_t v57 = (char *)v119 - v56;
  uint64_t v58 = *(void (**)(void))(v31 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v58)(a9, a1, v29);
  uint64_t v150 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  uint64_t v59 = v150[7];
  uint64_t v135 = a9;
  uint64_t v60 = &a9[v59];
  type metadata accessor for TimeZone();
  sub_100162F30();
  uint64_t v121 = v61;
  uint64_t v62 = *(void (**)(char *, uint64_t))(v61 + 16);
  uint64_t v123 = v63;
  v62(v60, v148);
  static Calendar.currentCalendar(with:)();
  char v64 = Calendar.isDateInToday(_:)();
  uint64_t v65 = *(void (**)(void))(v49 + 16);
  uint64_t v139 = v55;
  uint64_t v128 = v57;
  uint64_t v141 = v47;
  sub_100163E30();
  v65();
  uint64_t v137 = a1;
  sub_1001A2E2C();
  v58();
  sub_1001A2E2C();
  v58();
  uint64_t v138 = v49;
  if (v64)
  {
    uint64_t v66 = *(void (**)(void))(v149 + 8);
    sub_10019FFF4();
    v66();
    sub_10019FFF4();
    v66();
    sub_100127BA4();
    v67();
    uint64_t v68 = v150;
  }
  else
  {
    sub_100163E30();
    v65();
    sub_1001A2E2C();
    v58();
    sub_1001A2E2C();
    v58();
    if (a18) {
      char v69 = Calendar.isDate(_:inSameDayAs:)();
    }
    else {
      char v69 = 0;
    }
    uint64_t v68 = v150;
    uint64_t v70 = v138;
    uint64_t v71 = *(void (**)(void))(v149 + 8);
    sub_10019FFF4();
    v71();
    sub_10019FFF4();
    v71();
    uint64_t v72 = *(void (**)(void))(v70 + 8);
    sub_100164938();
    v72();
    sub_10019FFF4();
    v71();
    sub_10019FFF4();
    v71();
    sub_100164938();
    v72();
    if ((v69 & 1) == 0)
    {
      uint64_t v78 = Date.shortDayOfWeek(timeZone:isStandalone:)();
      uint64_t v77 = v135;
      uint64_t v79 = (uint64_t *)&v135[v68[5]];
      *uint64_t v79 = v78;
      v79[1] = v80;
      uint64_t v81 = Date.dayOfWeek(timeZone:context:)();
      uint64_t v82 = (uint64_t *)&v77[v68[6]];
      *uint64_t v82 = v81;
      v82[1] = v83;
      goto LABEL_9;
    }
  }
  id v73 = [self mainBundle];
  v154._uint64_t countAndFlagsBits = 0xD000000000000044;
  v154._object = (void *)0x8000000100CB3870;
  v74._object = (void *)0x8000000100CB3850;
  v74._uint64_t countAndFlagsBits = 0xD000000000000015;
  v75._uint64_t countAndFlagsBits = 0x7961646F54;
  v75._object = (void *)0xE500000000000000;
  Swift::String v76 = NSLocalizedString(_:tableName:bundle:value:comment:)(v74, (Swift::String_optional)0, (NSBundle)v73, v75, v154);

  uint64_t v77 = v135;
  *(Swift::String *)&v135[v68[5]] = v76;
  *(Swift::String *)&v77[v68[6]] = v76;
  swift_bridgeObjectRetain();
LABEL_9:
  uint64_t v84 = &v77[v68[8]];
  uint64_t v85 = sub_10017DF08(&qword_100E65250);
  uint64_t v140 = v85;
  sub_10017C83C();
  uint64_t v136 = v86;
  uint64_t v88 = *(void (**)(char *, uint64_t, uint64_t))(v87 + 16);
  v88(v84, v153, v85);
  v88(&v77[v68[9]], v145, v85);
  uint64_t v89 = (uint64_t *)&v77[v68[10]];
  uint64_t v90 = v125;
  *uint64_t v89 = v124;
  v89[1] = v90;
  int v91 = &v77[v68[11]];
  uint64_t v92 = v120;
  *(void *)int v91 = v126;
  *((void *)v91 + 1) = v92;
  v77[v68[13]] = v122 & 1;
  *(double *)&v77[v68[12]] = a10;
  *(Swift::String *)&v77[v68[14]] = Double.formattedPercent(roundToNearestPercent:)(1);
  sub_1001A4C54(v147, (uint64_t)&v77[v68[15]]);
  v77[v68[16]] = v127 & 1;
  static WeatherFormatStyle<>.weather.getter();
  NSUnitTemperature.BaseWeatherFormatStyle.secondary.getter();
  uint64_t v139 = *(void (**)(void))(v151 + 8);
  v151 += 8;
  uint64_t v93 = v130;
  sub_100127BA4();
  v94();
  LODWORD(v127) = enum case for WeatherFormatPlaceholder.none(_:);
  uint64_t v95 = v152;
  uint64_t v126 = *(void (**)(uint64_t))(v152 + 104);
  uint64_t v96 = v144;
  uint64_t v97 = v131;
  v126(v144);
  uint64_t v125 = type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  uint64_t v124 = sub_1001A4CBC((unint64_t *)&qword_100E6BF60, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
  uint64_t v98 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v100 = v99;
  swift_release();
  uint64_t v101 = *(char **)(v95 + 8);
  uint64_t v152 = v95 + 8;
  uint64_t v135 = v101;
  ((void (*)(uint64_t, uint64_t))v101)(v96, v97);
  uint64_t v102 = v143;
  uint64_t v103 = v139;
  sub_10016285C();
  v103();
  uint64_t v104 = (uint64_t *)&v77[v150[17]];
  *uint64_t v104 = v98;
  v104[1] = v100;
  static WeatherFormatStyle<>.weather.getter();
  NSUnitTemperature.BaseWeatherFormatStyle.secondary.getter();
  sub_10016285C();
  v103();
  ((void (*)(uint64_t, void, uint64_t))v126)(v144, v127, v97);
  static UnitManager.standard.getter();
  uint64_t v129 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v127 = v105;
  swift_release();
  uint64_t v106 = *(void (**)(void))(v136 + 8);
  sub_100183838();
  v106();
  sub_100183838();
  v106();
  sub_100162F0C();
  v107();
  uint64_t v108 = *(void (**)(uint64_t, uint64_t))(v149 + 8);
  uint64_t v109 = v142;
  v108(v146, v142);
  v108(v137, v109);
  sub_100162F0C();
  v110();
  ((void (*)(char *, uint64_t))v139)(v102, v93);
  sub_100162F0C();
  v111();
  uint64_t v112 = v150;
  uint64_t v113 = (uint64_t *)&v77[v150[18]];
  uint64_t v114 = v127;
  *uint64_t v113 = v129;
  v113[1] = v114;
  uint64_t v115 = v112;
  *(void *)&v77[v112[20]] = v132;
  uint64_t result = sub_100178110(v147, &qword_100E6B8C8);
  uint64_t v117 = &v77[v115[19]];
  uint64_t v118 = v134;
  *(void *)uint64_t v117 = v133;
  *((void *)v117 + 1) = v118;
  return result;
}

uint64_t sub_1001A44B8()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t sub_1001A44E0@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 120) = a1;
  return swift_beginAccess();
}

uint64_t sub_1001A4500()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1001A4520()
{
  return v0;
}

uint64_t sub_1001A4534()
{
  return *(void *)(v0 - 120);
}

uint64_t sub_1001A454C()
{
  return *(void *)(v0 - 112);
}

uint64_t sub_1001A4564()
{
  return v0;
}

uint64_t sub_1001A4584@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 96);
  sub_1001B1E64(*(void **)(v1 - 408), v2);
  return v2;
}

uint64_t sub_1001A45D0()
{
  return 0;
}

uint64_t sub_1001A45E4()
{
  return v0 + 32;
}

uint64_t sub_1001A45F0()
{
  return *(void *)(v0 - 200);
}

uint64_t sub_1001A4610()
{
  return 0;
}

uint64_t sub_1001A4620(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_1001A4630()
{
  return _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, v0);
}

uint64_t sub_1001A4650()
{
  return v0;
}

uint64_t sub_1001A4678(uint64_t a1)
{
  v1[8] = a1;
  v1[4] = *(void *)(v3 - 104);
  v1[5] = v2;
  return static String.localizedStringWithFormat(_:_:)();
}

uint64_t sub_1001A46A0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001A46C4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001A46DC()
{
  return v0;
}

uint64_t sub_1001A46F0()
{
  return Section<>.init(header:content:)();
}

uint64_t sub_1001A4710()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_1001A4738()
{
  return v0;
}

uint64_t sub_1001A4754@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1001A4770()
{
  return 1818845544;
}

uint64_t sub_1001A478C(uint64_t result)
{
  *(unsigned char *)(result + 16) = 8;
  return result;
}

uint64_t sub_1001A47A8()
{
  return type metadata accessor for SunriseSunsetDetailViewModel();
}

uint64_t sub_1001A47D0()
{
  return type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
}

uint64_t sub_1001A47F8()
{
  return sub_1001AAF58(v0, v2 - 96, v1);
}

uint64_t sub_1001A4818()
{
  return 0x25203A7374737547;
}

uint64_t sub_1001A4838()
{
  return v0;
}

uint64_t sub_1001A4844()
{
  return *(void *)(v0 + 136);
}

uint64_t sub_1001A485C()
{
  return v0;
}

uint64_t sub_1001A4894()
{
  return 0;
}

uint64_t sub_1001A48A8()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

void sub_1001A48CC()
{
  sub_1001BEAF4();
}

__n128 *sub_1001A48E4(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x726F727265;
  result[2].n128_u64[1] = 0xE500000000000000;
  return result;
}

void sub_1001A4900(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 88) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1001A491C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, a4);
  return type metadata accessor for LocationsState();
}

uint64_t sub_1001A495C()
{
  return v0;
}

uint64_t sub_1001A4970()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001A4988()
{
  return Measurement.init(value:unit:)();
}

void sub_1001A49A4()
{
  *(unsigned char *)(v0 - 96) = 0;
}

uint64_t sub_1001A49B0()
{
  return type metadata accessor for Optional();
}

uint64_t sub_1001A49C8(uint64_t a1)
{
  return *(void *)(*(void *)(v1 + 56) + 8 * a1);
}

uint64_t sub_1001A49D4()
{
  return sub_100A73924(v0, v1);
}

uint64_t sub_1001A49EC()
{
  return 2;
}

uint64_t sub_1001A4A18()
{
  return v0;
}

uint64_t sub_1001A4A2C()
{
  return v0;
}

uint64_t sub_1001A4A44()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001A4A6C(uint64_t a1, void (*a2)(void))
{
  uint64_t v4 = *(void *)(v2 - 312);
  return sub_1000C134C(v4, a2);
}

uint64_t sub_1001A4A84()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v1 + *(int *)(v0 + 48));
  return swift_bridgeObjectRelease();
}

void sub_1001A4AD0()
{
  sub_1007F3214();
}

uint64_t sub_1001A4B04(uint64_t result)
{
  *(void *)(result + 16) = v2;
  *(void *)(result + 24) = v1;
  return result;
}

uint64_t sub_1001A4B10()
{
  return v0;
}

uint64_t sub_1001A4B38@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  *(unsigned char *)(result + 1) = a2;
  return result;
}

void *sub_1001A4B40()
{
  uint64_t v2 = *(void *)(v0 + 688);
  uint64_t v3 = *(void *)(v2 + 40);
  return sub_1001B1E64((void *)(v2 + 16), v3);
}

uint64_t sub_1001A4B64()
{
  return v0;
}

uint64_t sub_1001A4B78@<X0>(uint64_t a1@<X8>)
{
  return v1 + ((a1 + 16) & ~a1);
}

void sub_1001A4B8C()
{
  *uint64_t v0 = 0x8000000000000000;
}

uint64_t sub_1001A4BA8()
{
  return String.write(to:)();
}

uint64_t sub_1001A4BD0()
{
  return type metadata accessor for OSSignpostID();
}

void sub_1001A4BEC()
{
  *(void *)(v1 + *(int *)(v2 + 20) + 8) = (v0 - 1);
}

uint64_t sub_1001A4C38()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1001A4C54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6B8C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001A4CBC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001A4D04(uint64_t a1)
{
  return sub_1001A4D24(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1001A4D24(uint64_t a1, uint64_t a2)
{
  v16[1] = a2;
  uint64_t v2 = type metadata accessor for CurrentWeather();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v16 - v11;
  DayWeather.date.getter();
  type metadata accessor for WeatherData(0);
  WeatherDataModel.currentWeather.getter();
  CurrentWeather.date.getter();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  char v13 = Calendar.isDate(_:inSameDayAs:)();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v10, v6);
  v14(v12, v6);
  return v13 & 1;
}

uint64_t destroy for LocationTipOverlayModifier(uint64_t a1)
{
  swift_release();
  sub_10018F6D8(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  sub_10018F6D8(*(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  sub_10014D82C(*(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
  sub_10018F6D8(*(void *)(a1 + 72), *(unsigned char *)(a1 + 80));
  uint64_t v2 = *(void *)(a1 + 88);
  char v3 = *(unsigned char *)(a1 + 96);

  return sub_10018F6D8(v2, v3);
}

uint64_t sub_1001A4F84(uint64_t a1, uint64_t a2)
{
  sub_10018F6D8(*(void *)a1, *(unsigned char *)(a1 + 8));
  sub_10018F6D8(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  swift_bridgeObjectRelease();
  uint64_t v7 = (int *)type metadata accessor for LocationFooterViewModel();
  uint64_t v8 = v6 + v7[8];
  uint64_t v9 = type metadata accessor for URL();
  if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  uint64_t v10 = v6 + v7[9];
  swift_bridgeObjectRelease();
  uint64_t v11 = v10 + *(int *)(type metadata accessor for LearnMoreAttributorViewModel() + 24);
  if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v11, v9);
  }
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v12 = v6 + v7[11];
  uint64_t v13 = type metadata accessor for LocationOfInterest();
  if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  uint64_t v14 = v6 + v7[14];
  uint64_t v15 = type metadata accessor for HomeAndWorkRefinementRowViewModel();
  if (!_s7Weather24LocationCompositionStateOwet_0(v14, 1, v15))
  {
    uint64_t v16 = v14 + *(int *)(v15 + 20);
    uint64_t v17 = type metadata accessor for Location();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v14 + *(int *)(v15 + 24), v13);
  }

  return swift_unknownObjectRelease();
}

uint64_t sub_1001A5248(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ColorScheme();
  if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  }
  sub_10017DF08(&qword_100E79370);

  return swift_release();
}

uint64_t sub_1001A52DC(uint64_t a1)
{
  uint64_t v43 = a1;
  uint64_t v41 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v40 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for DispatchQoS();
  uint64_t v4 = *(char **)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v38 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t *)(v1 + 40);
  swift_beginAccess();
  unint64_t v7 = *(void *)(v1 + 40);
  __src[0] = _swiftEmptyArrayStorage;
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v8 = result;
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  uint64_t v42 = (void (**)(char *, uint64_t))v4;
  if (v8)
  {
    if (v8 < 1)
    {
      __break(1u);
      goto LABEL_31;
    }
    for (uint64_t i = 0; i != v8; ++i)
    {
      if ((v7 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      if (swift_unknownObjectWeakLoadStrong())
      {
        swift_unknownObjectRelease();
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = (void *)__src[0];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = _swiftEmptyArrayStorage;
  }
  uint64_t *v6 = (uint64_t)v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *v6;
  if (!((unint64_t)*v6 >> 62))
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_17;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
  if (!v13) {
    return swift_bridgeObjectRelease();
  }
LABEL_17:
  uint64_t result = sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
  if (v13 >= 1)
  {
    uint64_t v14 = 0;
    unint64_t v15 = v12 & 0xC000000000000001;
    uint64_t v35 = v46;
    uint64_t v34 = (void (**)(char *, uint64_t))(v2 + 8);
    uint64_t v33 = v42 + 1;
    uint64_t v37 = v12;
    uint64_t v36 = result;
    do
    {
      if (v15)
      {
        uint64_t v16 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v16 = *(void *)(v12 + 8 * v14 + 32);
        swift_retain();
      }
      id v17 = *(id *)(v16 + 40);
      uint64_t v18 = (void *)static OS_dispatch_queue.main.getter();
      char v19 = static NSObject.== infix(_:_:)();

      if (v19)
      {
        uint64_t v20 = *(void (**)(uint64_t))(v16 + 16);
        swift_retain();
        v20(v43);
        swift_release();
      }
      else
      {
        uint64_t v21 = *(void **)(v16 + 40);
        sub_10006DF38(v43, (uint64_t)__src, &qword_100E647A8);
        uint64_t v22 = swift_allocObject();
        *(void *)(v22 + 16) = v16;
        memcpy((void *)(v22 + 24), __src, 0x48uLL);
        v46[2] = sub_10010A518;
        v46[3] = v22;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        v46[0] = sub_10010A4D4;
        v46[1] = &unk_100E28AE0;
        uint64_t v23 = _Block_copy(aBlock);
        uint64_t v42 = v21;
        swift_retain();
        uint64_t v24 = v38;
        static DispatchQoS.unspecified.getter();
        uint64_t v44 = _swiftEmptyArrayStorage;
        sub_1001A58D4((unint64_t *)&qword_100EA0200, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10017DF08(&qword_100E75530);
        sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
        uint64_t v25 = v13;
        uint64_t v26 = v40;
        unint64_t v27 = v15;
        uint64_t v28 = v41;
        uint64_t v12 = v37;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        uint64_t v29 = v42;
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v23);
        swift_release();

        uint64_t v30 = v26;
        uint64_t v13 = v25;
        uint64_t v31 = v28;
        unint64_t v15 = v27;
        (*v34)(v30, v31);
        (*v33)(v24, v39);
      }
      swift_release();
      ++v14;
    }
    while (v13 != v14);
    return swift_bridgeObjectRelease();
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1001A58D4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001A591C(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8]);
}

uint64_t sub_1001A5938(uint64_t a1)
{
  return sub_1001A591C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_1001A5950);
}

uint64_t sub_1001A5950(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v41 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v38 = *(void *)(v45 - 8);
  uint64_t v17 = __chkstk_darwin(v45);
  char v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v44 = (char *)v36 - v20;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v37 = v14;
    double v23 = COERCE_DOUBLE(a3(a1));
    char v25 = v24;
    uint64_t v46 = a8;
    sub_10006DF38(a1, (uint64_t)__src, &qword_100E647A8);
    uint64_t v26 = v46;
    sub_10006DF38((uint64_t)__src, (uint64_t)v48, &qword_100E647A8);
    unint64_t v27 = (void *)swift_allocObject();
    v27[2] = a5;
    v27[3] = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v27[13] = v22;
    v27[14] = a7;
    v27[15] = v26;
    if (v25)
    {
      if (v23 == 0.0)
      {
        swift_retain_n();
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      uint64_t v28 = qword_100E62BC0;
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      if (v28 != -1) {
        swift_once();
      }
      sub_1002104B8(v22, (uint64_t)sub_100210B14, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_1001AB3E0();
        swift_retain_n();
        v36[1] = a6;
        swift_retain_n();
        swift_retain_n();
        v36[0] = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v38 = *(void *)(v38 + 8);
        ((void (*)(char *, uint64_t))v38)(v19, v45);
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_100210B14;
        *(void *)(v29 + 24) = v27;
        aBlock[4] = sub_100276768;
        aBlock[5] = v29;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        void aBlock[2] = sub_10010A4D4;
        aBlock[3] = &unk_100E0AFF0;
        uint64_t v30 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        uint64_t v31 = v39;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100128B0C((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10017DF08(&qword_100E75530);
        sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
        uint64_t v32 = v41;
        uint64_t v33 = v37;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        uint64_t v34 = v44;
        uint64_t v35 = (void *)v36[0];
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v33);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v42);
        ((void (*)(char *, uint64_t))v38)(v34, v45);
        swift_release();
        swift_release();
        goto LABEL_12;
      }
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      sub_100138204(a5, a6, (uint64_t)v48, v22, a7, v26);
    }
    swift_release();
LABEL_12:
    swift_release();
    sub_1001781AC((uint64_t)v48, &qword_100E647A8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001A6008(uint64_t a1)
{
  return sub_10019C6DC(a1, *(void *)(v1 + 16), (uint64_t (*)(uint64_t))&Calendar.isDateInToday(_:)) & 1;
}

uint64_t sub_1001A603C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v93 = a3;
  uint64_t v7 = sub_10017DF08(&qword_100E6B8A8);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v91 = v9;
  uint64_t v10 = sub_10017DF08(&qword_100E6D1C8);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_100109314();
  uint64_t v89 = v12;
  uint64_t v13 = sub_10017DF08(&qword_100E63758);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_100109314();
  uint64_t v92 = v15;
  uint64_t v16 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(0);
  uint64_t v94 = *(void *)(v16 - 8);
  uint64_t v95 = v16 - 8;
  uint64_t v96 = v94;
  __chkstk_darwin(v16 - 8);
  sub_100109314();
  uint64_t v100 = v17;
  uint64_t v18 = sub_10017DF08(&qword_100E6B6C8);
  uint64_t v19 = sub_100109308(v18);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v99 = (uint64_t)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v98 = (void (*)(char *, char *, uint64_t))((char *)&v74 - v22);
  uint64_t v23 = type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v25 = v24;
  __chkstk_darwin(v26);
  sub_1001626E0();
  uint64_t v29 = v28 - v27;
  uint64_t v88 = type metadata accessor for Calendar();
  sub_100179C0C();
  uint64_t v87 = v30;
  __chkstk_darwin(v31);
  sub_10012B938();
  uint64_t v83 = sub_10017DF08(&qword_100E66CA0);
  sub_100179C0C();
  uint64_t v81 = v32;
  __chkstk_darwin(v33);
  sub_1001626E0();
  uint64_t v36 = v35 - v34;
  uint64_t v80 = sub_10017DF08(&qword_100E66CC8);
  sub_100179C0C();
  uint64_t v79 = v37;
  __chkstk_darwin(v38);
  sub_10011C760();
  uint64_t v78 = type metadata accessor for CurrentWeather();
  sub_100179C0C();
  uint64_t v77 = v39;
  __chkstk_darwin(v40);
  sub_1001626E0();
  uint64_t v43 = (void (*)(char *, uint64_t))(v42 - v41);
  uint64_t v44 = a1 + *(int *)(type metadata accessor for WeatherData(0) + 24);
  WeatherDataModel.currentWeather.getter();
  WeatherDataModel.hourlyForecast.getter();
  uint64_t v76 = v44;
  WeatherDataModel.dailyForecast.getter();
  Location.timeZone.getter();
  static Calendar.currentCalendar(with:)();
  uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
  uint64_t v82 = v29;
  uint64_t v85 = v23;
  uint64_t v84 = v25 + 8;
  Swift::String v75 = v45;
  v45(v29, v23);
  uint64_t v108 = v3;
  uint64_t v46 = v98;
  uint64_t v97 = v36;
  sub_10019AB54();
  uint64_t v107 = v3;
  uint64_t v47 = v99;
  sub_10019AB54();
  sub_1001AA328(a2, v100);
  uint64_t v102 = a2;
  uint64_t v103 = v3;
  uint64_t v104 = v46;
  uint64_t v105 = v47;
  uint64_t v106 = v43;
  sub_1001799A8();
  uint64_t v49 = v48;
  uint64_t v90 = a2;
  uint64_t v86 = v3;
  uint64_t v50 = sub_1001A88C0(a2, v43, v4, v97, v3, v46, v47);
  v109[0] = v49;
  uint64_t v51 = swift_bridgeObjectRetain();
  sub_1001A6E30(v51);
  uint64_t v52 = v100;
  uint64_t v101 = v100;
  sub_10019CF40();
  uint64_t v54 = v53;
  sub_10017DF08(&qword_100E84C30);
  unint64_t v55 = (*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
  uint64_t v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = xmmword_100C251B0;
  sub_100181CF4(v52, v56 + v55, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
  v109[0] = v56;
  sub_1001A6E30(v54);
  uint64_t v57 = v109[0];
  uint64_t v58 = *((void *)v50 + 2);
  swift_bridgeObjectRelease();
  if (__OFADD__(v58, 24))
  {
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    v109[0] = v57;
    swift_bridgeObjectRetain();
    sub_1001A6FE0(v109);
    swift_bridgeObjectRelease();
    v109[0] = sub_1001AA2FC(v58 + 24, v109[0]);
    v109[1] = v59;
    v109[2] = v60;
    v109[3] = v61;
    sub_10017DF08(&qword_100E84C38);
    sub_1001AA2A8();
    uint64_t v62 = Sequence.unique<A>(by:)();
    swift_unknownObjectRelease();
    uint64_t v63 = v89;
    WeatherDataModel.weatherChanges.getter();
    uint64_t v64 = v91;
    WeatherDataModel.historicalFacts.getter();
    uint64_t v65 = v82;
    Location.timeZone.getter();
    uint64_t v66 = v92;
    WeatherForecastDescriptionStringBuilder.buildWeatherDescription(from:hourlyForecast:dailyForecast:weatherChanges:historicalFacts:timeZone:)();
    v75(v65, v85);
    sub_1001781AC(v64, &qword_100E6B8A8);
    sub_1001781AC(v63, &qword_100E6D1C8);
    sub_1001781AC(v99, &qword_100E6B6C8);
    sub_1001781AC((uint64_t)v98, &qword_100E6B6C8);
    sub_10012BF98();
    sub_10017F874();
    v67();
    sub_10012BF98();
    sub_10017F874();
    v68();
    sub_10012BF98();
    sub_10017F874();
    v69();
    uint64_t v70 = v93;
    *uint64_t v93 = v62;
    uint64_t v71 = type metadata accessor for HourlyForecastComponentPreprocessedDataModel();
    sub_1001A8858(v66, (uint64_t)v70 + *(int *)(v71 + 20));
    sub_1001A8674(v100, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
    sub_10012BF98();
    sub_10017F874();
    return v72();
  }
  return result;
}

uint64_t sub_1001A6874(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_1001A688C@<X0>(uint64_t result@<X0>, __int16 a2@<W8>)
{
  *(_WORD *)(result + 1) = a2;
  return result;
}

uint64_t sub_1001A6894()
{
  return ChartLineStyle.init(strokeStyle:lineThickness:lineColor:lineDash:opacity:opacityIncreasedContrast:areaStyle:)();
}

uint64_t sub_1001A68BC()
{
  _s7Weather24LocationCompositionStateOwst_0(v1, 0, 1, v0);
  return v1;
}

uint64_t sub_1001A68E8(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, a1);
}

uint64_t sub_1001A6904(uint64_t result)
{
  *(void *)(v1 - 208) = result;
  *(unsigned char *)(result + 16) = 8;
  return result;
}

uint64_t sub_1001A6918()
{
  return swift_release();
}

uint64_t sub_1001A6930(uint64_t a1, unint64_t *a2)
{
  return sub_1001ABC4C(0, a2);
}

void *sub_1001A6948()
{
  return sub_1001B1E64(v0, v1);
}

uint64_t sub_1001A6968()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_1001A6980()
{
  return swift_storeEnumTagMultiPayload();
}

unint64_t sub_1001A69A0()
{
  return 0xD000000000000010;
}

uint64_t sub_1001A69C0()
{
  return v0;
}

void sub_1001A69DC()
{
  sub_10019E22C();
}

void sub_1001A69FC(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_10017DF08(&qword_100E63480);
    uint64_t v11 = *(void *)(type metadata accessor for MainAction() - 8);
    unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_100C251B0;
    sub_10015B0C4(a2, v13 + v12);
    uint64_t v14 = v5;
    swift_bridgeObjectRetain();
    sub_1001A6DF0(v13);
LABEL_6:
    uint64_t v10 = v14;
    goto LABEL_7;
  }
  char v7 = *(unsigned char *)(Strong + OBJC_IVAR____TtC7Weather29WeatherDataDebounceMiddleware_resetAccumulator);
  sub_10017DF08(&qword_100E63480);
  uint64_t v8 = *(void *)(type metadata accessor for MainAction() - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_100C251B0;
  sub_10015B0C4(a2, v10 + v9);
  if ((v7 & 1) == 0)
  {
    uint64_t v14 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001A6DF0(v10);
    swift_release();
    swift_setDeallocating();
    sub_1001A6DC0();
    goto LABEL_6;
  }
  swift_release();
LABEL_7:
  *a3 = v10;
}

void sub_1001A6C04(uint64_t a1, uint64_t (*a2)(void), void (*a3)(unint64_t, uint64_t, unint64_t), uint64_t (*a4)(void))
{
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *v5;
  uint64_t v8 = *(void *)(*v5 + 16);
  if (__OFADD__(v8, v6))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1001A05DC() || v8 + v6 > *(void *)(v7 + 24) >> 1)
  {
    sub_10017A054();
    uint64_t v7 = a2();
  }
  if (!*(void *)(v4 + 16))
  {
    if (!v6) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  uint64_t v12 = *(void *)(v7 + 16);
  uint64_t v13 = (*(void *)(v7 + 24) >> 1) - v12;
  uint64_t v14 = *(void *)(a4(0) - 8);
  if (v13 < v6)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  a3(v4 + v15, v6, v7 + v15 + *(void *)(v14 + 72) * v12);
  if (!v6)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *uint64_t v5 = v7;
    return;
  }
  sub_1001A1D6C();
  if (!v17)
  {
    *(void *)(v7 + 16) = v16;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_1001A6D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&qword_100E63480, (uint64_t (*)(void))type metadata accessor for MainAction, (void (*)(void))type metadata accessor for MainAction);
}

uint64_t sub_1001A6D7C(void (*a1)(void))
{
  a1(0);
  sub_100187FE0();
  sub_10017A758();
  sub_100180160();

  return swift_deallocClassInstance();
}

uint64_t sub_1001A6DC0()
{
  return sub_1001A6D7C((void (*)(void))type metadata accessor for MainAction);
}

uint64_t sub_1001A6DD8(uint64_t a1, uint64_t a2)
{
  return sub_10018BE08(a1, a2);
}

void sub_1001A6DF0(uint64_t a1)
{
}

void sub_1001A6E30(uint64_t a1)
{
}

uint64_t sub_1001A6E70(uint64_t result, uint64_t a2, uint64_t (*a3)(void, uint64_t, void, uint64_t), uint64_t (*a4)(void))
{
  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v6 = *(void *)(a2 + 16);
  uint64_t result = a3(0, result, *(void *)(a2 + 16), a2);
  if (v7) {
    unint64_t v8 = v6;
  }
  else {
    unint64_t v8 = result;
  }
  if ((v8 & 0x8000000000000000) != 0) {
    goto LABEL_9;
  }
  if (v6 >= v8)
  {
    a4(0);
    return a2;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1001A6F30(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 - result;
  if (__OFSUB__(a3, result))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (a2 < 1)
  {
    if (v3 <= 0 && v3 > a2) {
      return 0;
    }
  }
  else if ((v3 & 0x8000000000000000) == 0 && v3 < (unint64_t)a2)
  {
    return 0;
  }
  BOOL v5 = __OFADD__(result, a2);
  result += a2;
  if (v5) {
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_1001A6F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E84C30, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
}

uint64_t sub_1001A6FC8(uint64_t a1, uint64_t a2)
{
  return sub_10018BE08(a1, a2);
}

void sub_1001A6FE0(uint64_t *a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(0) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1001A7088();
    uint64_t v3 = v4;
  }
  uint64_t v5 = *(void *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_1001A70E0(v6);
  *a1 = v3;
}

void sub_1001A7088()
{
}

void sub_1001A7098()
{
}

void sub_1001A70E0(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v207 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(0);
  __chkstk_darwin(v207);
  uint64_t v206 = (uint64_t)&v184 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v215 = (uint64_t)&v184 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v184 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v221 = (char *)&v184 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v184 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v202 = (char *)&v184 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v189 = (char *)&v184 - v20;
  __chkstk_darwin(v19);
  uint64_t v191 = (char *)&v184 - v21;
  uint64_t v214 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(0);
  uint64_t v204 = *(void *)(v214 - 8);
  uint64_t v22 = __chkstk_darwin(v214);
  uint64_t v197 = (uint64_t)&v184 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v216 = (uint64_t)&v184 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v220 = (uint64_t)&v184 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v219 = (uint64_t)&v184 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v225 = (uint64_t)&v184 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v218 = (uint64_t)&v184 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v201 = (uint64_t)&v184 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v200 = (uint64_t)&v184 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v205 = (uint64_t)&v184 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v199 = (uint64_t)&v184 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v188 = (char *)&v184 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v190 = (uint64_t)&v184 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v193 = (uint64_t)&v184 - v47;
  __chkstk_darwin(v46);
  uint64_t v192 = (uint64_t)&v184 - v48;
  uint64_t v223 = a1;
  Swift::Int v49 = a1[1];
  Swift::Int v50 = _minimumMergeRunLength(_:)(v49);
  if (v50 >= v49)
  {
    if ((v49 & 0x8000000000000000) == 0)
    {
      if (v49) {
        sub_1005FA3F4(0, v49, 1, v223);
      }
      return;
    }
LABEL_164:
    __break(1u);
LABEL_165:
    __break(1u);
LABEL_166:
    __break(1u);
LABEL_167:
    __break(1u);
    goto LABEL_168;
  }
  Swift::Int v187 = v50;
  uint64_t v185 = sub_1001A86CC(v49 / 2);
  unint64_t v203 = v51;
  uint64_t v186 = v49;
  if (v49 <= 0)
  {
    uint64_t v53 = (char *)_swiftEmptyArrayStorage;
    unint64_t v127 = _swiftEmptyArrayStorage[2];
LABEL_126:
    if (v127 < 2) {
      goto LABEL_140;
    }
    uint64_t v177 = *v223;
    while (1)
    {
      unint64_t v178 = v127 - 2;
      if (v127 < 2) {
        break;
      }
      if (!v177) {
        goto LABEL_172;
      }
      uint64_t v179 = v53;
      uint64_t v180 = *(void *)&v53[16 * v178 + 32];
      uint64_t v181 = *(void *)&v53[16 * v127 + 24];
      sub_1005FAAB0(v177 + *(void *)(v204 + 72) * v180, v177 + *(void *)(v204 + 72) * *(void *)&v53[16 * v127 + 16], (char *)(v177 + *(void *)(v204 + 72) * v181), v203);
      if (v2) {
        goto LABEL_138;
      }
      if (v181 < v180) {
        goto LABEL_159;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v179 = sub_10031515C();
      }
      if (v178 >= *((void *)v179 + 2)) {
        goto LABEL_160;
      }
      uint64_t v182 = &v179[16 * v178 + 32];
      *(void *)uint64_t v182 = v180;
      *((void *)v182 + 1) = v181;
      unint64_t v183 = *((void *)v179 + 2);
      if (v127 > v183) {
        goto LABEL_161;
      }
      memmove(&v179[16 * v127 + 16], &v179[16 * v127 + 32], 16 * (v183 - v127));
      uint64_t v53 = v179;
      *((void *)v179 + 2) = v183 - 1;
      unint64_t v127 = v183 - 1;
      if (v183 <= 2) {
        goto LABEL_140;
      }
    }
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
LABEL_162:
    __break(1u);
LABEL_163:
    __break(1u);
    goto LABEL_164;
  }
  uint64_t v208 = v11;
  uint64_t v52 = 0;
  uint64_t v224 = (void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v212 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v53 = (char *)_swiftEmptyArrayStorage;
  uint64_t v54 = v49;
  uint64_t v222 = v7;
  uint64_t v195 = v16;
  while (1)
  {
    uint64_t v55 = v52;
    uint64_t v56 = v52 + 1;
    uint64_t v196 = v53;
    uint64_t v198 = v52;
    if (v52 + 1 >= v54)
    {
      uint64_t v65 = v52 + 1;
      uint64_t v66 = v208;
    }
    else
    {
      uint64_t v57 = *v223;
      uint64_t v58 = *(void *)(v204 + 72);
      uint64_t v59 = v192;
      sub_100181CF4(*v223 + v58 * v56, v192, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
      uint64_t v194 = v57;
      uint64_t v217 = v58;
      sub_100181CF4(v57 + v58 * v55, v193, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
      sub_100181CF4(v59, v190, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        uint64_t v61 = (uint64_t)v188;
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v62 = v215;
          sub_100182770(v190, v215, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
          uint64_t v63 = *v224;
          (*v224)(v191, v62, v7);
          uint64_t v64 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel;
        }
        else
        {
          uint64_t v62 = v206;
          sub_100182770(v190, v206, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
          uint64_t v63 = *v224;
          (*v224)(v191, v62 + *(int *)(v207 + 52), v7);
          uint64_t v64 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel;
        }
        sub_1001A8674(v62, (void (*)(void))v64);
      }
      else
      {
        uint64_t v67 = v215;
        sub_100182770(v190, v215, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
        uint64_t v63 = *v224;
        (*v224)(v191, v67, v7);
        sub_1001A8674(v67, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
        uint64_t v61 = (uint64_t)v188;
      }
      sub_100181CF4(v193, v61, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
      unsigned int v68 = swift_getEnumCaseMultiPayload();
      uint64_t v213 = v54;
      uint64_t v210 = v63;
      if (v68 > 1)
      {
        uint64_t v69 = v206;
        sub_100182770(v61, v206, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
        uint64_t v70 = v189;
        v63(v189, v69 + *(int *)(v207 + 52), v7);
        uint64_t v71 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel;
      }
      else
      {
        uint64_t v69 = v215;
        sub_100182770(v61, v215, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
        uint64_t v70 = v189;
        v63(v189, v69, v7);
        uint64_t v71 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel;
      }
      sub_1001A8674(v69, (void (*)(void))v71);
      uint64_t v72 = v191;
      LODWORD(v211) = static Date.< infix(_:_:)();
      id v73 = *v212;
      (*v212)(v70, v7);
      v73(v72, v7);
      sub_1001A8674(v193, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
      sub_1001A8674(v192, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
      uint64_t v55 = v198;
      uint64_t v65 = v198 + 2;
      uint64_t v54 = v213;
      if (v198 + 2 < v213)
      {
        uint64_t v209 = v217 * v56;
        uint64_t v74 = v194;
        uint64_t v75 = v217 * v65;
        while (1)
        {
          uint64_t v76 = v65;
          uint64_t v77 = v199;
          sub_100181CF4(v74 + v75, v199, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
          sub_100181CF4(v74 + v209, v205, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
          sub_100181CF4(v77, v200, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
          int v78 = swift_getEnumCaseMultiPayload();
          if (!v78) {
            break;
          }
          uint64_t v79 = v210;
          if (v78 == 1)
          {
            uint64_t v80 = v215;
            sub_100182770(v200, v215, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
            uint64_t v81 = v202;
            uint64_t v82 = v80;
            uint64_t v83 = v7;
LABEL_21:
            v79(v81, v82, v83);
            uint64_t v84 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel;
            goto LABEL_23;
          }
          uint64_t v80 = v206;
          sub_100182770(v200, v206, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
          v79(v202, v80 + *(int *)(v207 + 52), v7);
          uint64_t v84 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel;
LABEL_23:
          sub_1001A8674(v80, (void (*)(void))v84);
          sub_100181CF4(v205, v201, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
          if (swift_getEnumCaseMultiPayload() > 1)
          {
            uint64_t v85 = v206;
            sub_100182770(v201, v206, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
            uint64_t v86 = v195;
            v79(v195, v85 + *(int *)(v207 + 52), v7);
            uint64_t v87 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel;
          }
          else
          {
            uint64_t v85 = v215;
            sub_100182770(v201, v215, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
            uint64_t v86 = v195;
            v79(v195, v85, v7);
            uint64_t v87 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel;
          }
          sub_1001A8674(v85, (void (*)(void))v87);
          uint64_t v88 = v202;
          int v89 = static Date.< infix(_:_:)();
          v73(v86, v7);
          v73(v88, v7);
          sub_1001A8674(v205, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
          sub_1001A8674(v199, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
          if ((v211 ^ v89))
          {
            uint64_t v65 = v76;
            uint64_t v55 = v198;
            uint64_t v54 = v213;
            goto LABEL_30;
          }
          uint64_t v65 = v76 + 1;
          v74 += v217;
          if (v76 + 1 >= v213)
          {
            uint64_t v54 = v213;
            uint64_t v65 = v213;
            uint64_t v55 = v198;
            goto LABEL_30;
          }
        }
        uint64_t v80 = v215;
        sub_100182770(v200, v215, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
        uint64_t v81 = v202;
        uint64_t v82 = v80;
        uint64_t v83 = v7;
        uint64_t v79 = v210;
        goto LABEL_21;
      }
LABEL_30:
      uint64_t v66 = v208;
      if (v211)
      {
        if (v65 < v55) {
          goto LABEL_165;
        }
        if (v55 < v65)
        {
          uint64_t v90 = 0;
          uint64_t v91 = v217 * (v65 - 1);
          uint64_t v92 = v55;
          uint64_t v93 = v65 * v217;
          uint64_t v94 = v92;
          uint64_t v95 = v92 * v217;
          do
          {
            if (v94 != v65 + v90 - 1)
            {
              uint64_t v96 = v65;
              uint64_t v97 = v194;
              if (!v194) {
                goto LABEL_171;
              }
              unint64_t v98 = v194 + v95;
              uint64_t v211 = v194 + v91;
              sub_100182770(v194 + v95, v197, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
              if (v95 < v91 || v98 >= v97 + v93)
              {
                uint64_t v100 = v211;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v100 = v211;
                if (v95 != v91) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              sub_100182770(v197, v100, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
              uint64_t v65 = v96;
            }
            ++v94;
            --v90;
            v91 -= v217;
            v93 -= v217;
            v95 += v217;
          }
          while (v94 < v65 + v90);
          uint64_t v7 = v222;
          uint64_t v66 = v208;
          uint64_t v54 = v213;
          uint64_t v55 = v198;
        }
      }
    }
    if (v65 < v54)
    {
      if (__OFSUB__(v65, v55)) {
        goto LABEL_163;
      }
      if (v65 - v55 < v187)
      {
        if (__OFADD__(v55, v187)) {
          goto LABEL_166;
        }
        if (v55 + v187 >= v54) {
          uint64_t v101 = v54;
        }
        else {
          uint64_t v101 = v55 + v187;
        }
        if (v101 < v55) {
          goto LABEL_167;
        }
        if (v65 != v101)
        {
          uint64_t v184 = v2;
          uint64_t v102 = *(void *)(v204 + 72);
          uint64_t v103 = v102 * (v65 - 1);
          uint64_t v209 = v102;
          uint64_t v104 = v65 * v102;
          uint64_t v194 = v101;
          do
          {
            uint64_t v105 = 0;
            uint64_t v210 = (void (*)(char *, uint64_t, uint64_t))v104;
            uint64_t v211 = v103;
            uint64_t v213 = v65;
            while (1)
            {
              uint64_t v106 = *v223;
              uint64_t v217 = v104 + v105;
              uint64_t v107 = v104 + v105 + v106;
              uint64_t v108 = v218;
              sub_100181CF4(v107, v218, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
              sub_100181CF4(v103 + v105 + v106, v225, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
              sub_100181CF4(v108, v219, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
              if (swift_getEnumCaseMultiPayload() > 1)
              {
                uint64_t v109 = v206;
                sub_100182770(v219, v206, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
                uint64_t v110 = *v224;
                (*v224)(v221, v109 + *(int *)(v207 + 52), v222);
                uint64_t v111 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel;
              }
              else
              {
                uint64_t v109 = v215;
                sub_100182770(v219, v215, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
                uint64_t v110 = *v224;
                (*v224)(v221, v109, v222);
                uint64_t v111 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel;
              }
              sub_1001A8674(v109, (void (*)(void))v111);
              sub_100181CF4(v225, v220, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
              if (swift_getEnumCaseMultiPayload() > 1)
              {
                uint64_t v112 = v206;
                sub_100182770(v220, v206, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
                uint64_t v117 = v66;
                uint64_t v114 = v66;
                uint64_t v115 = v222;
                v110(v117, v112 + *(int *)(v207 + 52), v222);
                uint64_t v116 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel;
              }
              else
              {
                uint64_t v112 = v215;
                sub_100182770(v220, v215, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
                uint64_t v113 = v66;
                uint64_t v114 = v66;
                uint64_t v115 = v222;
                v110(v113, v112, v222);
                uint64_t v116 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel;
              }
              sub_1001A8674(v112, (void (*)(void))v116);
              uint64_t v118 = v221;
              char v119 = static Date.< infix(_:_:)();
              uint64_t v120 = *v212;
              (*v212)(v114, v115);
              v120(v118, v115);
              sub_1001A8674(v225, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
              sub_1001A8674(v218, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
              if ((v119 & 1) == 0) {
                break;
              }
              uint64_t v121 = *v223;
              uint64_t v104 = (uint64_t)v210;
              uint64_t v103 = v211;
              if (!*v223) {
                goto LABEL_169;
              }
              uint64_t v122 = v121 + v211 + v105;
              sub_100182770((uint64_t)v210 + v121 + v105, v216, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
              uint64_t v66 = v208;
              swift_arrayInitWithTakeFrontToBack();
              sub_100182770(v216, v122, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
              v105 -= v209;
              ++v55;
              uint64_t v123 = v213;
              if (v213 == v55) {
                goto LABEL_69;
              }
            }
            uint64_t v66 = v208;
            uint64_t v123 = v213;
            uint64_t v104 = (uint64_t)v210;
            uint64_t v103 = v211;
LABEL_69:
            uint64_t v65 = v123 + 1;
            v103 += v209;
            v104 += v209;
            uint64_t v55 = v198;
          }
          while (v65 != v194);
          uint64_t v65 = v194;
          uint64_t v2 = v184;
          uint64_t v7 = v222;
        }
      }
    }
    if (v65 < v55) {
      goto LABEL_162;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v213 = v65;
    if (isUniquelyReferenced_nonNull_native) {
      uint64_t v53 = v196;
    }
    else {
      uint64_t v53 = sub_1001AA1B0(0, *((void *)v196 + 2) + 1, 1, v196);
    }
    unint64_t v126 = *((void *)v53 + 2);
    unint64_t v125 = *((void *)v53 + 3);
    unint64_t v127 = v126 + 1;
    if (v126 >= v125 >> 1) {
      uint64_t v53 = sub_1001AA1B0((char *)(v125 > 1), v126 + 1, 1, v53);
    }
    *((void *)v53 + 2) = v127;
    uint64_t v128 = v53 + 32;
    uint64_t v129 = &v53[16 * v126 + 32];
    uint64_t v130 = v213;
    *(void *)uint64_t v129 = v55;
    *((void *)v129 + 1) = v130;
    if (v126) {
      break;
    }
    unint64_t v127 = 1;
LABEL_119:
    uint64_t v54 = v223[1];
    uint64_t v52 = v213;
    if (v213 >= v54) {
      goto LABEL_126;
    }
  }
  while (1)
  {
    unint64_t v131 = v127 - 1;
    if (v127 >= 4)
    {
      uint64_t v136 = &v128[16 * v127];
      uint64_t v137 = *((void *)v136 - 8);
      uint64_t v138 = *((void *)v136 - 7);
      BOOL v142 = __OFSUB__(v138, v137);
      uint64_t v139 = v138 - v137;
      if (v142) {
        goto LABEL_147;
      }
      uint64_t v141 = *((void *)v136 - 6);
      uint64_t v140 = *((void *)v136 - 5);
      BOOL v142 = __OFSUB__(v140, v141);
      uint64_t v134 = v140 - v141;
      char v135 = v142;
      if (v142) {
        goto LABEL_148;
      }
      unint64_t v143 = v127 - 2;
      uint64_t v144 = &v128[16 * v127 - 32];
      uint64_t v146 = *(void *)v144;
      uint64_t v145 = *((void *)v144 + 1);
      BOOL v142 = __OFSUB__(v145, v146);
      uint64_t v147 = v145 - v146;
      if (v142) {
        goto LABEL_149;
      }
      BOOL v142 = __OFADD__(v134, v147);
      uint64_t v148 = v134 + v147;
      if (v142) {
        goto LABEL_151;
      }
      if (v148 >= v139)
      {
        uint64_t v166 = &v128[16 * v131];
        uint64_t v168 = *(void *)v166;
        uint64_t v167 = *((void *)v166 + 1);
        BOOL v142 = __OFSUB__(v167, v168);
        uint64_t v169 = v167 - v168;
        if (v142) {
          goto LABEL_157;
        }
        BOOL v159 = v134 < v169;
        goto LABEL_108;
      }
    }
    else
    {
      if (v127 != 3)
      {
        uint64_t v160 = *((void *)v53 + 4);
        uint64_t v161 = *((void *)v53 + 5);
        BOOL v142 = __OFSUB__(v161, v160);
        uint64_t v153 = v161 - v160;
        char v154 = v142;
        goto LABEL_102;
      }
      uint64_t v133 = *((void *)v53 + 4);
      uint64_t v132 = *((void *)v53 + 5);
      BOOL v142 = __OFSUB__(v132, v133);
      uint64_t v134 = v132 - v133;
      char v135 = v142;
    }
    if (v135) {
      goto LABEL_150;
    }
    unint64_t v143 = v127 - 2;
    uint64_t v149 = &v128[16 * v127 - 32];
    uint64_t v151 = *(void *)v149;
    uint64_t v150 = *((void *)v149 + 1);
    BOOL v152 = __OFSUB__(v150, v151);
    uint64_t v153 = v150 - v151;
    char v154 = v152;
    if (v152) {
      goto LABEL_152;
    }
    uint64_t v155 = &v128[16 * v131];
    uint64_t v157 = *(void *)v155;
    uint64_t v156 = *((void *)v155 + 1);
    BOOL v142 = __OFSUB__(v156, v157);
    uint64_t v158 = v156 - v157;
    if (v142) {
      goto LABEL_154;
    }
    if (__OFADD__(v153, v158)) {
      goto LABEL_156;
    }
    if (v153 + v158 >= v134)
    {
      BOOL v159 = v134 < v158;
LABEL_108:
      if (v159) {
        unint64_t v131 = v143;
      }
      goto LABEL_110;
    }
LABEL_102:
    if (v154) {
      goto LABEL_153;
    }
    uint64_t v162 = &v128[16 * v131];
    uint64_t v164 = *(void *)v162;
    uint64_t v163 = *((void *)v162 + 1);
    BOOL v142 = __OFSUB__(v163, v164);
    uint64_t v165 = v163 - v164;
    if (v142) {
      goto LABEL_155;
    }
    if (v165 < v153) {
      goto LABEL_119;
    }
LABEL_110:
    unint64_t v170 = v131 - 1;
    if (v131 - 1 >= v127)
    {
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
      goto LABEL_158;
    }
    if (!*v223) {
      goto LABEL_170;
    }
    uint64_t v171 = v53;
    uint64_t v172 = &v128[16 * v170];
    uint64_t v173 = *(void *)v172;
    uint64_t v174 = &v128[16 * v131];
    uint64_t v175 = *((void *)v174 + 1);
    sub_1005FAAB0(*v223 + *(void *)(v204 + 72) * *(void *)v172, *v223 + *(void *)(v204 + 72) * *(void *)v174, (char *)(*v223 + *(void *)(v204 + 72) * v175), v203);
    if (v2) {
      break;
    }
    if (v175 < v173) {
      goto LABEL_144;
    }
    if (v131 > *((void *)v171 + 2)) {
      goto LABEL_145;
    }
    *(void *)uint64_t v172 = v173;
    *(void *)&v128[16 * v170 + 8] = v175;
    unint64_t v176 = *((void *)v171 + 2);
    if (v131 >= v176) {
      goto LABEL_146;
    }
    unint64_t v127 = v176 - 1;
    memmove(&v128[16 * v131], v174 + 16, 16 * (v176 - 1 - v131));
    uint64_t v53 = v171;
    *((void *)v171 + 2) = v176 - 1;
    uint64_t v7 = v222;
    if (v176 <= 2) {
      goto LABEL_119;
    }
  }
LABEL_138:
  swift_bridgeObjectRelease();
  if (v186 >= -1) {
    goto LABEL_141;
  }
  __break(1u);
LABEL_140:
  swift_bridgeObjectRelease();
  if (v186 >= -1)
  {
LABEL_141:
    *(void *)(v185 + 16) = 0;
    swift_bridgeObjectRelease();
    return;
  }
LABEL_168:
  __break(1u);
LABEL_169:
  __break(1u);
LABEL_170:
  __break(1u);
LABEL_171:
  __break(1u);
LABEL_172:
  __break(1u);
}

uint64_t sub_1001A8674(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001A86CC(uint64_t a1)
{
  return sub_1001A86E4(a1, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
}

uint64_t sub_1001A86E4(uint64_t a1, void (*a2)(void))
{
  if (a1 < 0)
  {
    sub_1001A3608();
    uint64_t result = sub_10012B72C();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      a2(0);
      *(void *)(static Array._allocateBufferUninitialized(minimumCapacity:)() + 16) = a1;
    }
    a2(0);
    return sub_1001A8818();
  }
  return result;
}

uint64_t sub_1001A87BC()
{
  return *(void *)(v0 + 904);
}

uint64_t sub_1001A87D0()
{
  return type metadata accessor for Date();
}

uint64_t sub_1001A87EC()
{
  return Optional<A>.write(to:)();
}

uint64_t sub_1001A8818()
{
  return v0;
}

uint64_t sub_1001A8858(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E63758);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void (*sub_1001A88C0(uint64_t a1, void (*a2)(char *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *, char *, uint64_t), uint64_t a7))(char *, char *, uint64_t)
{
  uint64_t v232 = a7;
  uint64_t v240 = a6;
  uint64_t v218 = a3;
  uint64_t v235 = a2;
  uint64_t v223 = a1;
  uint64_t v7 = sub_10017DF08(&qword_100E6BEC0);
  __chkstk_darwin(v7 - 8);
  uint64_t v233 = (void (*)(char *, uint64_t))((char *)&v194 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v227 = type metadata accessor for HourWeather();
  uint64_t v219 = *(void *)(v227 - 8);
  __chkstk_darwin(v227);
  uint64_t v226 = (char *)&v194 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v228 = type metadata accessor for TimeZone();
  uint64_t v225 = *(void *)(v228 - 8);
  uint64_t v10 = __chkstk_darwin(v228);
  uint64_t v221 = (char *)&v194 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v234 = (char *)&v194 - v12;
  uint64_t v222 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(0);
  uint64_t v224 = *(void *)(v222 - 8);
  uint64_t v13 = __chkstk_darwin(v222);
  uint64_t v204 = (char *)&v194 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v194 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v216 = (char *)&v194 - v19;
  __chkstk_darwin(v18);
  uint64_t v208 = (char *)&v194 - v20;
  uint64_t v21 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v212 = (char *)&v194 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v210 = (char *)&v194 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v230 = (void (*)(char *, uint64_t, uint64_t))((char *)&v194 - v27);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v194 - v28;
  uint64_t v30 = type metadata accessor for SunEvents();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v211 = (char *)&v194 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v209 = (char *)&v194 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v229 = (char *)&v194 - v37;
  __chkstk_darwin(v36);
  uint64_t v39 = (char *)&v194 - v38;
  uint64_t v40 = type metadata accessor for Date();
  uint64_t v236 = *(void *)(v40 - 8);
  uint64_t v41 = __chkstk_darwin(v40);
  uint64_t v206 = (char *)&v194 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v205 = (char *)&v194 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v238 = (char *)&v194 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v239 = (char *)&v194 - v48;
  __chkstk_darwin(v47);
  uint64_t v215 = (char *)&v194 - v49;
  uint64_t v50 = sub_10017DF08(&qword_100E6B6C8);
  uint64_t v51 = __chkstk_darwin(v50 - 8);
  uint64_t v231 = (uint64_t)&v194 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51);
  uint64_t v54 = (char *)&v194 - v53;
  uint64_t v55 = type metadata accessor for DayWeather();
  uint64_t v56 = *(void *)(v55 - 8);
  uint64_t v57 = __chkstk_darwin(v55);
  uint64_t v237 = (char *)&v194 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v57);
  uint64_t v60 = (char *)&v194 - v59;
  uint64_t v62 = v61;
  sub_10006DF38((uint64_t)v240, (uint64_t)v54, &qword_100E6B6C8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v62) == 1)
  {
    sub_1001781AC((uint64_t)v54, &qword_100E6B6C8);
    return (void (*)(char *, char *, uint64_t))_swiftEmptyArrayStorage;
  }
  uint64_t v200 = v17;
  uint64_t v64 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 32);
  uint64_t v202 = v56 + 32;
  uint64_t v201 = v64;
  v64(v60, (uint64_t)v54, v62);
  uint64_t v214 = v60;
  DayWeather.sun.getter();
  SunEvents.sunrise.getter();
  uint64_t v65 = *(void (**)(char *, uint64_t))(v31 + 8);
  uint64_t v220 = v31 + 8;
  uint64_t v217 = v65;
  v65(v39, v30);
  int v66 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v40);
  uint64_t v67 = v40;
  uint64_t v207 = v30;
  uint64_t v213 = v56;
  if (v66 == 1)
  {
    uint64_t v68 = v30;
    sub_1001781AC((uint64_t)v29, (uint64_t *)&unk_100E73CA0);
    uint64_t v240 = (void (*)(char *, char *, uint64_t))_swiftEmptyArrayStorage;
    uint64_t v69 = v239;
LABEL_10:
    uint64_t v91 = v238;
    goto LABEL_11;
  }
  uint64_t v70 = v236;
  uint64_t v71 = v215;
  uint64_t v240 = *(void (**)(char *, char *, uint64_t))(v236 + 32);
  v240(v215, v29, v40);
  uint64_t v69 = v239;
  CurrentWeather.date.getter();
  char v72 = static Date.< infix(_:_:)();
  id v73 = *(void (**)(char *, uint64_t))(v70 + 8);
  v73(v69, v67);
  if ((v72 & 1) == 0)
  {
    v73(v71, v67);
    uint64_t v240 = (void (*)(char *, char *, uint64_t))_swiftEmptyArrayStorage;
    uint64_t v68 = v207;
    goto LABEL_10;
  }
  uint64_t v194 = v73;
  uint64_t v203 = v62;
  (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v69, v71, v67);
  uint64_t v74 = v221;
  Location.timeZone.getter();
  sub_10017BAF4();
  uint64_t v198 = static NSDateFormatter.prevailingPeriodSymbols.getter();
  Location.timeZone.getter();
  uint64_t v197 = Date.formattedTime(timeZone:)();
  uint64_t v196 = v75;
  uint64_t v76 = v225;
  uint64_t v199 = v67;
  uint64_t v77 = *(void (**)(char *, uint64_t))(v225 + 8);
  v77(v74, v228);
  uint64_t v69 = v239;
  uint64_t v78 = v228;
  Location.timeZone.getter();
  uint64_t v79 = Date.accessibilityFormattedTime(timeZone:)();
  uint64_t v195 = v80;
  v77(v74, v78);
  uint64_t v67 = v199;
  uint64_t v81 = (uint64_t)v208;
  v240(v208, v69, v199);
  uint64_t v82 = (int *)type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(0);
  (*(void (**)(uint64_t, char *, uint64_t))(v76 + 32))(v81 + v82[5], v234, v78);
  *(void *)(v81 + v82[6]) = v198;
  uint64_t v83 = (uint64_t *)(v81 + v82[7]);
  uint64_t v84 = v196;
  *uint64_t v83 = v197;
  v83[1] = v84;
  uint64_t v85 = (uint64_t *)(v81 + v82[8]);
  uint64_t v86 = v195;
  *uint64_t v85 = v79;
  v85[1] = v86;
  swift_storeEnumTagMultiPayload();
  uint64_t v87 = (void (*)(char *, char *, uint64_t))sub_1001A6F80(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
  unint64_t v89 = *((void *)v87 + 2);
  unint64_t v88 = *((void *)v87 + 3);
  if (v89 >= v88 >> 1) {
    uint64_t v87 = (void (*)(char *, char *, uint64_t))sub_1001A6F80(v88 > 1, v89 + 1, 1, (uint64_t)v87);
  }
  uint64_t v90 = v194;
  uint64_t v91 = v238;
  *((void *)v87 + 2) = v89 + 1;
  unint64_t v92 = (*(unsigned __int8 *)(v224 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v224 + 80);
  uint64_t v240 = v87;
  sub_100182770(v81, (uint64_t)v87 + v92 + *(void *)(v224 + 72) * v89, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
  v90(v71, v67);
  uint64_t v56 = v213;
  uint64_t v62 = v203;
  uint64_t v68 = v207;
LABEL_11:
  uint64_t v93 = v229;
  uint64_t v94 = v214;
  DayWeather.sun.getter();
  uint64_t v95 = (uint64_t)v230;
  SunEvents.sunset.getter();
  v217(v93, v68);
  if (_s7Weather24LocationCompositionStateOwet_0(v95, 1, v67) == 1)
  {
    sub_1001781AC(v95, (uint64_t *)&unk_100E73CA0);
    uint64_t v96 = v237;
LABEL_20:
    uint64_t v121 = (uint64_t)v233;
    goto LABEL_21;
  }
  uint64_t v97 = v236;
  uint64_t v230 = *(void (**)(char *, uint64_t, uint64_t))(v236 + 32);
  v230(v91, v95, v67);
  CurrentWeather.date.getter();
  char v98 = static Date.< infix(_:_:)();
  uint64_t v99 = *(void (**)(char *, uint64_t))(v97 + 8);
  v99(v69, v67);
  if ((v98 & 1) == 0)
  {
    v99(v91, v67);
    uint64_t v56 = v213;
    uint64_t v96 = v237;
    uint64_t v68 = v207;
    goto LABEL_20;
  }
  uint64_t v229 = (char *)v99;
  uint64_t v203 = v62;
  (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v69, v91, v67);
  uint64_t v100 = v221;
  Location.timeZone.getter();
  sub_10017BAF4();
  uint64_t v215 = (char *)static NSDateFormatter.prevailingPeriodSymbols.getter();
  Location.timeZone.getter();
  uint64_t v208 = (char *)Date.formattedTime(timeZone:)();
  uint64_t v199 = v101;
  uint64_t v102 = v225;
  uint64_t v103 = *(void (**)(char *, uint64_t))(v225 + 8);
  uint64_t v104 = v228;
  v103(v100, v228);
  Location.timeZone.getter();
  uint64_t v105 = Date.accessibilityFormattedTime(timeZone:)();
  uint64_t v107 = v106;
  uint64_t v108 = v100;
  uint64_t v69 = v239;
  v103(v108, v104);
  uint64_t v109 = (uint64_t)v216;
  uint64_t v110 = v67;
  v230(v216, (uint64_t)v69, v67);
  uint64_t v111 = (int *)type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(0);
  (*(void (**)(uint64_t, char *, uint64_t))(v102 + 32))(v109 + v111[5], v234, v104);
  *(void *)(v109 + v111[6]) = v215;
  uint64_t v112 = (void *)(v109 + v111[7]);
  uint64_t v113 = v199;
  *uint64_t v112 = v208;
  v112[1] = v113;
  uint64_t v114 = (uint64_t *)(v109 + v111[8]);
  *uint64_t v114 = v105;
  v114[1] = v107;
  swift_storeEnumTagMultiPayload();
  uint64_t v115 = v240;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v115 = (void (*)(char *, char *, uint64_t))sub_1001A6F80(0, *((void *)v115 + 2) + 1, 1, (uint64_t)v115);
  }
  unint64_t v117 = *((void *)v115 + 2);
  unint64_t v116 = *((void *)v115 + 3);
  uint64_t v240 = v115;
  uint64_t v62 = v203;
  uint64_t v67 = v110;
  uint64_t v118 = v237;
  char v119 = v238;
  if (v117 >= v116 >> 1) {
    uint64_t v240 = (void (*)(char *, char *, uint64_t))sub_1001A6F80(v116 > 1, v117 + 1, 1, (uint64_t)v240);
  }
  uint64_t v68 = v207;
  uint64_t v120 = v240;
  *((void *)v240 + 2) = v117 + 1;
  sub_100182770((uint64_t)v216, (uint64_t)v120+ ((*(unsigned __int8 *)(v224 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v224 + 80))+ *(void *)(v224 + 72) * v117, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
  ((void (*)(char *, uint64_t))v229)(v119, v67);
  uint64_t v56 = v213;
  uint64_t v121 = (uint64_t)v233;
  uint64_t v96 = v118;
  uint64_t v94 = v214;
LABEL_21:
  uint64_t v122 = v231;
  sub_10006DF38(v232, v231, &qword_100E6B6C8);
  if (_s7Weather24LocationCompositionStateOwet_0(v122, 1, v62) == 1)
  {
    (*(void (**)(char *, uint64_t))(v56 + 8))(v94, v62);
    uint64_t v123 = &qword_100E6B6C8;
    uint64_t v124 = v122;
LABEL_38:
    sub_1001781AC(v124, v123);
    return v240;
  }
  v201(v96, v122, v62);
  sub_1001AA004(v121);
  uint64_t v125 = v227;
  if (_s7Weather24LocationCompositionStateOwet_0(v121, 1, v227) == 1)
  {
    unint64_t v126 = *(void (**)(char *, uint64_t))(v213 + 8);
    v126(v96, v62);
    v126(v94, v62);
    uint64_t v123 = &qword_100E6BEC0;
    uint64_t v124 = v121;
    goto LABEL_38;
  }
  uint64_t v127 = v121;
  uint64_t v128 = v68;
  uint64_t v129 = v226;
  (*(void (**)(char *, uint64_t, uint64_t))(v219 + 32))(v226, v127, v125);
  uint64_t v130 = v209;
  DayWeather.sun.getter();
  uint64_t v131 = (uint64_t)v210;
  SunEvents.sunrise.getter();
  v217(v130, v128);
  int v132 = _s7Weather24LocationCompositionStateOwet_0(v131, 1, v67);
  uint64_t v203 = v62;
  if (v132 == 1)
  {
    sub_1001781AC(v131, (uint64_t *)&unk_100E73CA0);
LABEL_35:
    uint64_t v139 = v237;
    goto LABEL_36;
  }
  uint64_t v133 = v236;
  uint64_t v134 = v205;
  uint64_t v238 = *(char **)(v236 + 32);
  ((void (*)(char *, uint64_t, uint64_t))v238)(v205, v131, v67);
  CurrentWeather.date.getter();
  char v135 = static Date.< infix(_:_:)();
  uint64_t v136 = *(void (**)(char *, uint64_t))(v133 + 8);
  v136(v69, v67);
  if ((v135 & 1) == 0)
  {
    v136(v134, v67);
    uint64_t v129 = v226;
    uint64_t v62 = v203;
    goto LABEL_35;
  }
  HourWeather.date.getter();
  char v137 = static Date.< infix(_:_:)();
  v136(v69, v67);
  uint64_t v138 = v136;
  uint64_t v139 = v237;
  if (v137)
  {
    uint64_t v233 = v138;
    (*(void (**)(char *, char *, uint64_t))(v236 + 16))(v69, v134, v67);
    Location.timeZone.getter();
    sub_10017BAF4();
    uint64_t v232 = static NSDateFormatter.prevailingPeriodSymbols.getter();
    uint64_t v140 = v221;
    Location.timeZone.getter();
    uint64_t v141 = Date.formattedTime(timeZone:)();
    uint64_t v230 = v142;
    uint64_t v231 = v141;
    unint64_t v143 = *(void (**)(char *, uint64_t))(v225 + 8);
    v143(v140, v228);
    Location.timeZone.getter();
    uint64_t v144 = Date.accessibilityFormattedTime(timeZone:)();
    uint64_t v146 = v145;
    uint64_t v147 = v228;
    v143(v140, v228);
    uint64_t v148 = (uint64_t)v200;
    uint64_t v149 = v67;
    ((void (*)(char *, char *, uint64_t))v238)(v200, v69, v67);
    uint64_t v150 = (int *)type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(0);
    (*(void (**)(uint64_t, char *, uint64_t))(v225 + 32))(v148 + v150[5], v234, v147);
    *(void *)(v148 + v150[6]) = v232;
    uint64_t v151 = (void *)(v148 + v150[7]);
    BOOL v152 = v230;
    *uint64_t v151 = v231;
    v151[1] = v152;
    uint64_t v153 = (uint64_t *)(v148 + v150[8]);
    *uint64_t v153 = v144;
    v153[1] = v146;
    swift_storeEnumTagMultiPayload();
    char v154 = v240;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v154 = (void (*)(char *, char *, uint64_t))sub_1001A6F80(0, *((void *)v154 + 2) + 1, 1, (uint64_t)v154);
    }
    unint64_t v156 = *((void *)v154 + 2);
    unint64_t v155 = *((void *)v154 + 3);
    uint64_t v240 = v154;
    uint64_t v62 = v203;
    uint64_t v67 = v149;
    uint64_t v139 = v237;
    uint64_t v157 = v205;
    if (v156 >= v155 >> 1) {
      uint64_t v240 = (void (*)(char *, char *, uint64_t))sub_1001A6F80(v155 > 1, v156 + 1, 1, (uint64_t)v240);
    }
    uint64_t v94 = v214;
    uint64_t v158 = v240;
    *((void *)v240 + 2) = v156 + 1;
    sub_100182770((uint64_t)v200, (uint64_t)v158+ ((*(unsigned __int8 *)(v224 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v224 + 80))+ *(void *)(v224 + 72) * v156, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
    v233(v157, v67);
    uint64_t v129 = v226;
    uint64_t v69 = v239;
  }
  else
  {
    v138(v134, v67);
    uint64_t v129 = v226;
    uint64_t v62 = v203;
  }
LABEL_36:
  BOOL v159 = v211;
  DayWeather.sun.getter();
  uint64_t v160 = (uint64_t)v212;
  SunEvents.sunset.getter();
  v217(v159, v207);
  if (_s7Weather24LocationCompositionStateOwet_0(v160, 1, v67) == 1)
  {
    (*(void (**)(char *, uint64_t))(v219 + 8))(v129, v227);
    uint64_t v161 = v160;
    uint64_t v162 = *(void (**)(char *, uint64_t))(v213 + 8);
    v162(v139, v62);
    v162(v94, v62);
    uint64_t v123 = (uint64_t *)&unk_100E73CA0;
    uint64_t v124 = v161;
    goto LABEL_38;
  }
  uint64_t v164 = v236;
  uint64_t v165 = v206;
  uint64_t v239 = *(char **)(v236 + 32);
  ((void (*)(char *, uint64_t, uint64_t))v239)(v206, v160, v67);
  CurrentWeather.date.getter();
  char v166 = static Date.< infix(_:_:)();
  uint64_t v169 = *(void (**)(char *, uint64_t))(v164 + 8);
  uint64_t v168 = (char *)(v164 + 8);
  uint64_t v167 = v169;
  v169(v69, v67);
  if ((v166 & 1) == 0)
  {
    v167(v165, v67);
    (*(void (**)(char *, uint64_t))(v219 + 8))(v226, v227);
LABEL_51:
    uint64_t v192 = *(void (**)(char *, uint64_t))(v213 + 8);
    uint64_t v193 = v203;
    v192(v139, v203);
    v192(v94, v193);
    return v240;
  }
  unint64_t v170 = v226;
  HourWeather.date.getter();
  char v171 = static Date.< infix(_:_:)();
  v167(v69, v67);
  if ((v171 & 1) == 0)
  {
    v167(v165, v67);
    (*(void (**)(char *, uint64_t))(v219 + 8))(v170, v227);
    goto LABEL_51;
  }
  uint64_t v235 = v167;
  uint64_t v238 = v168;
  (*(void (**)(char *, char *, uint64_t))(v236 + 16))(v69, v165, v67);
  Location.timeZone.getter();
  sub_10017BAF4();
  uint64_t v236 = static NSDateFormatter.prevailingPeriodSymbols.getter();
  uint64_t v172 = v221;
  Location.timeZone.getter();
  uint64_t v173 = Date.formattedTime(timeZone:)();
  uint64_t v232 = v174;
  uint64_t v233 = (void (*)(char *, uint64_t))v173;
  uint64_t v175 = v225;
  unint64_t v176 = *(void (**)(char *, uint64_t))(v225 + 8);
  v176(v172, v228);
  Location.timeZone.getter();
  uint64_t v177 = Date.accessibilityFormattedTime(timeZone:)();
  uint64_t v179 = v178;
  uint64_t v180 = v228;
  v176(v172, v228);
  uint64_t v181 = (uint64_t)v204;
  uint64_t v182 = v67;
  ((void (*)(char *, char *, uint64_t))v239)(v204, v69, v67);
  unint64_t v183 = (int *)type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(0);
  (*(void (**)(uint64_t, char *, uint64_t))(v175 + 32))(v181 + v183[5], v234, v180);
  *(void *)(v181 + v183[6]) = v236;
  uint64_t v184 = (void (**)(char *, uint64_t))(v181 + v183[7]);
  uint64_t v185 = v232;
  void *v184 = v233;
  v184[1] = (void (*)(char *, uint64_t))v185;
  uint64_t v186 = (uint64_t *)(v181 + v183[8]);
  *uint64_t v186 = v177;
  v186[1] = v179;
  swift_storeEnumTagMultiPayload();
  uint64_t v63 = v240;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v63 = (void *)sub_1001A6F80(0, v63[2] + 1, 1, (uint64_t)v63);
  }
  unint64_t v188 = v63[2];
  unint64_t v187 = v63[3];
  uint64_t v189 = v203;
  uint64_t v190 = v206;
  if (v188 >= v187 >> 1) {
    uint64_t v63 = (void *)sub_1001A6F80(v187 > 1, v188 + 1, 1, (uint64_t)v63);
  }
  v63[2] = v188 + 1;
  sub_100182770(v181, (uint64_t)v63+ ((*(unsigned __int8 *)(v224 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v224 + 80))+ *(void *)(v224 + 72) * v188, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
  v235(v190, v182);
  (*(void (**)(char *, uint64_t))(v219 + 8))(v226, v227);
  uint64_t v191 = *(void (**)(char *, uint64_t))(v213 + 8);
  v191(v237, v189);
  v191(v214, v189);
  return (void (*)(char *, char *, uint64_t))v63;
}

uint64_t sub_1001AA004@<X0>(uint64_t a1@<X8>)
{
  sub_10017DF08(&qword_100E66CC8);
  sub_1001AA168((unint64_t *)&qword_100E66CE0);
  if (dispatch thunk of Collection.isEmpty.getter())
  {
    type metadata accessor for HourWeather();
    uint64_t v3 = sub_100162E38();
    return _s7Weather24LocationCompositionStateOwst_0(v3, v4, v5, v6);
  }
  else
  {
    dispatch thunk of Collection.endIndex.getter();
    sub_1001AA168(&qword_100E6BF80);
    dispatch thunk of BidirectionalCollection.index(before:)();
    dispatch thunk of Collection.subscript.read();
    sub_1001DE200();
    type metadata accessor for HourWeather();
    sub_100162E4C();
    sub_10008B8B4();
    v8();
    v1(v9, 0);
    return sub_10018A348(a1, 0);
  }
}

uint64_t sub_1001AA168(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(&qword_100E66CC8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_1001AA1B0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10017DF08(&qword_100E6BF70);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12) {
      memmove(v12, v13, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_1001AA2A8()
{
  unint64_t result = qword_100E84C40;
  if (!qword_100E84C40)
  {
    sub_10018C6DC(&qword_100E84C38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E84C40);
  }
  return result;
}

uint64_t sub_1001AA2FC(uint64_t a1, uint64_t a2)
{
  return sub_1001A6E70(a1, a2, (uint64_t (*)(void, uint64_t, void, uint64_t))sub_1001A6F7C, type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
}

uint64_t sub_1001AA328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t countAndFlagsBits = a1;
  uint64_t v38 = a2;
  uint64_t v2 = sub_10017DF08(&qword_100E65250);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v37 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v36 = (char *)&v31 - v5;
  uint64_t v6 = type metadata accessor for Precipitation();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v34 = (char *)&v31 - v11;
  uint64_t v12 = type metadata accessor for WeatherCondition();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for TimeZone();
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Date();
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  CurrentWeather.date.getter();
  Location.timeZone.getter();
  CurrentWeather.condition.getter();
  char v22 = CurrentWeather.isDaylight.getter();
  Swift::String_optional v23 = WeatherCondition.conditionIconName(isDaytime:)(v22 & 1);
  uint64_t countAndFlagsBits = v23.value._countAndFlagsBits;
  object = v23.value._object;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v32 = CurrentWeather.conditionDescription.getter();
  unint64_t v25 = v24;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v10, enum case for Precipitation.rain(_:), v6);
  uint64_t v26 = (uint64_t)v34;
  static Precipitation.mock(kind:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  uint64_t v27 = (uint64_t)v36;
  CurrentWeather.temperature.getter();
  uint64_t v28 = (uint64_t)v37;
  CurrentWeather.temperature.getter();
  sub_10017BAF4();
  uint64_t v29 = static NSDateFormatter.prevailingPeriodSymbols.getter();
  sub_100187414((uint64_t)v21, (uint64_t)v18, countAndFlagsBits, (uint64_t)object, v32, v25, 0, v26, v38, 0.0, v27, v28, v29, 1u);
  type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1001AA6C0(uint64_t a1, uint64_t a2)
{
  uint64_t v51 = a2;
  uint64_t v50 = type metadata accessor for Location();
  uint64_t v3 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v49 = (uint64_t)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LocationComponentAction(0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  uint64_t v52 = (uint64_t)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v44 - v9;
  uint64_t v11 = type metadata accessor for LocationViewAction();
  sub_100162E4C();
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v44 - v16;
  uint64_t v18 = type metadata accessor for MainAction();
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *(void *)(a1 + 40);
  uint64_t v23 = *(void *)(result + 16);
  if (v23)
  {
    uint64_t v24 = result + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    uint64_t v53 = *(void *)(v19 + 72);
    uint64_t v45 = (void (**)(uint64_t, uint64_t))(v3 + 8);
    uint64_t v46 = (void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
    uint64_t v44 = result;
    swift_bridgeObjectRetain();
    uint64_t v47 = v18;
    uint64_t v48 = v10;
    while (1)
    {
      sub_100166500(v24, (uint64_t)v21, (void (*)(void))type metadata accessor for MainAction);
      if (swift_getEnumCaseMultiPayload() == 8)
      {
        sub_1003FDC04((uint64_t)v21, (uint64_t)v17, (void (*)(void))type metadata accessor for LocationViewAction);
        sub_100166500((uint64_t)v17, (uint64_t)v14, (void (*)(void))type metadata accessor for LocationViewAction);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_1003FDC04((uint64_t)v14, (uint64_t)v10, (void (*)(void))type metadata accessor for LocationComponentAction);
          sub_100166500((uint64_t)v10, v52, (void (*)(void))type metadata accessor for LocationComponentAction);
          if (swift_getEnumCaseMultiPayload() == 4)
          {
            uint64_t v25 = sub_10017DF08(&qword_100E66480);
            uint64_t v26 = v49;
            uint64_t v27 = v17;
            uint64_t v28 = v11;
            uint64_t v29 = v5;
            uint64_t v30 = v50;
            (*v46)(v49, v52 + *(int *)(v25 + 48), v50);
            sub_100A41A54(v26, 0, v31, v32, v33, v34, v35, v36, v44, (uint64_t)v45, (uint64_t)v46, v47, (uint64_t)v48, v49, v50, v51, v52, v53, v54,
              v55);
            uint64_t v37 = v26;
            uint64_t v38 = v30;
            uint64_t v5 = v29;
            uint64_t v11 = v28;
            uint64_t v17 = v27;
            uint64_t v10 = v48;
            (*v45)(v37, v38);
            sub_100158B70((uint64_t)v10, (void (*)(void))type metadata accessor for LocationComponentAction);
            uint64_t v39 = (void (*)(void))type metadata accessor for LocationViewAction;
            uint64_t v40 = (uint64_t)v27;
          }
          else
          {
            sub_100158B70((uint64_t)v10, (void (*)(void))type metadata accessor for LocationComponentAction);
            sub_100158B70((uint64_t)v17, (void (*)(void))type metadata accessor for LocationViewAction);
            uint64_t v40 = v52;
            uint64_t v39 = (void (*)(void))type metadata accessor for LocationComponentAction;
          }
          sub_100158B70(v40, v39);
          uint64_t v43 = sub_10017DF08(&qword_100E66458);
          sub_1001E7540((uint64_t)&v14[*(int *)(v43 + 64)]);
          goto LABEL_12;
        }
        sub_100158B70((uint64_t)v17, (void (*)(void))type metadata accessor for LocationViewAction);
        uint64_t v42 = (uint64_t)v14;
        uint64_t v41 = type metadata accessor for LocationViewAction;
      }
      else
      {
        uint64_t v41 = type metadata accessor for MainAction;
        uint64_t v42 = (uint64_t)v21;
      }
      sub_100158B70(v42, (void (*)(void))v41);
LABEL_12:
      v24 += v53;
      if (!--v23) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1001AAB68(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001AABF8(uint64_t a1)
{
  uint64_t v18 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TimeState();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for MainAction();
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *(void *)(a1 + 40);
  uint64_t v13 = *(void *)(result + 16);
  if (v13)
  {
    uint64_t v14 = a1;
    uint64_t v15 = result + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v16 = *(void *)(v9 + 72);
    v17[1] = result;
    swift_bridgeObjectRetain();
    do
    {
      sub_10016666C(v15, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MainAction);
      if (swift_getEnumCaseMultiPayload() == 19)
      {
        sub_10016666C(*(void *)(v14 + 64) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TimeState);
        (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v18);
        sub_1002B4610((uint64_t)v4);
      }
      sub_1001ABE70((uint64_t)v11);
      v15 += v16;
      --v13;
    }
    while (v13);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001AAE54()
{
  sub_100127C8C();
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v1);
  sub_1001626E0();
  uint64_t v4 = (uint64_t *)(v3 - v2);
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 48);
  swift_retain();
  *uint64_t v4 = Location.id.getter();
  v4[1] = v6;
  type metadata accessor for WeatherDataAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = 0;
  memset(v8, 0, sizeof(v8));
  sub_1001AAF58((uint64_t)v4, (uint64_t)v8, v5);
  sub_10017DF4C((uint64_t)v8, (uint64_t *)&unk_100EA01F0);
  sub_1001BC5DC();
  return swift_release();
}

uint64_t sub_1001AAF58(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  sub_10017DF08(&qword_100E63480);
  uint64_t v6 = *(void *)(type metadata accessor for MainAction() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100C251B0;
  sub_10015B0C4(a1, v8 + v7);
  sub_1001AB0B0(a2, (uint64_t)v10);
  uint64_t v11 = v8;
  char v12 = 0;
  sub_1001AB2DC((uint64_t)v10, a3);
  return sub_1001AB060((uint64_t)v10, &qword_100E63488);
}

uint64_t sub_1001AB060(uint64_t a1, uint64_t *a2)
{
  sub_10017DF08(a2);
  sub_100179DC0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001AB0B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100EA01F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001AB118()
{
  uint64_t v0 = type metadata accessor for DispatchPredicate();
  sub_100179C0C();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  uint64_t v5 = (void *)((char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1001AB3E0();
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v2 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v0);
  char v6 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v2 + 8))(v5, v0);
  if (v6)
  {
    __chkstk_darwin(result);
    v11[-4] = &unk_100E0DAD8;
    uint64_t v8 = type metadata accessor for MainAction();
    v11[-3] = v8;
    unint64_t v9 = sub_1001ABC88();
    v11[-2] = v9;
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    v11[-4] = &unk_100E0DAD8;
    v11[-3] = v8;
    v11[-2] = v9;
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    return v11[1];
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001AB2DC(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = (uint64_t *)(v9 - v8);
  sub_1001AB3E0();
  *uint64_t v10 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v4);
  char v11 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v10, v4);
  if (v11) {
    return a2(a1);
  }
  __break(1u);
  return result;
}

unint64_t sub_1001AB3E0()
{
  unint64_t result = qword_100E62D10;
  if (!qword_100E62D10)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100E62D10);
  }
  return result;
}

uint64_t sub_1001AB420(uint64_t a1)
{
  return sub_1001AB444(a1);
}

uint64_t sub_1001AB444(uint64_t a1)
{
  void (*v5)(_OWORD *__return_ptr, _OWORD *);
  _OWORD v7[2];
  long long v8;
  char v9;
  _OWORD v10[3];
  char v11;

  sub_10006DF38(a1, (uint64_t)v10, &qword_100E63488);
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = v2 + 40;
    while (1)
    {
      uint64_t v5 = *(void (**)(_OWORD *__return_ptr, _OWORD *))(v4 - 8);
      swift_retain();
      v5(v7, v10);
      swift_release();
      if (*((void *)&v8 + 1))
      {
        if (*((void *)&v8 + 1) == 1)
        {
          swift_bridgeObjectRelease();
          return sub_1001781AC((uint64_t)v10, &qword_100E63488);
        }
        sub_1001781AC((uint64_t)v10, &qword_100E63488);
        v10[0] = v7[0];
        v10[1] = v7[1];
        v10[2] = v8;
        char v11 = v9;
      }
      v4 += 16;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  sub_1001AB55C((uint64_t)v10);
  return sub_1001781AC((uint64_t)v10, &qword_100E63488);
}

uint64_t sub_1001AB55C(uint64_t a1)
{
  void (*v22)(_OWORD *__return_ptr, _OWORD *, char *);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD v44[3];
  char v45;
  _OWORD v46[3];
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for OSSignpostID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v41 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for MainAction();
  uint64_t v42 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
  *uint64_t v13 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  char v14 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if (v14)
  {
    uint64_t v37 = v5;
    uint64_t v38 = v4;
    __chkstk_darwin(result);
    *(&v35 - 4) = (uint64_t)&unk_100E0DAD8;
    *(&v35 - 3) = v7;
    unint64_t v16 = sub_1001ABC88();
    *(&v35 - 2) = v16;
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v35 - 4) = (uint64_t)&unk_100E0DAD8;
    *(&v35 - 3) = v7;
    *(&v35 - 2) = v16;
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    uint64_t v18 = swift_release();
    __chkstk_darwin(v18);
    *(&v35 - 4) = (uint64_t)&unk_100E0DAD8;
    *(&v35 - 3) = v7;
    *(&v35 - 2) = v16;
    uint64_t v19 = swift_getKeyPath();
    __chkstk_darwin(v19);
    *(&v35 - 4) = (uint64_t)&unk_100E0DAD8;
    *(&v35 - 3) = v7;
    uint64_t v40 = v7;
    uint64_t v36 = v16;
    *(&v35 - 2) = v16;
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v39 = a1;
    uint64_t v20 = *(void *)(a1 + 40);
    uint64_t v21 = *(void *)(v20 + 16);
    if (v21)
    {
      char v22 = *(void (**)(_OWORD *__return_ptr, _OWORD *, char *))(v2 + 16);
      uint64_t v35 = v2;
      uint64_t v23 = v20 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80));
      uint64_t v24 = *(void *)(v42 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_1001666D4(v23, (uint64_t)v9);
        *(void *)&v44[0] = v50;
        v22(v46, v44, v9);
        uint64_t v25 = *(void *)&v46[0];
        sub_100158F34((uint64_t)v9, (void (*)(void))type metadata accessor for MainAction);
        swift_release();
        uint64_t v50 = v25;
        v23 += v24;
        --v21;
      }
      while (v21);
      swift_bridgeObjectRelease();
    }
    uint64_t v26 = v50;
    if (v51 == v50)
    {
      return swift_release_n();
    }
    else
    {
      type metadata accessor for MainState._Storage(0);
      sub_10011796C();
      if ((v27 & 1) == 0)
      {
        __chkstk_darwin(v27);
        uint64_t v28 = v40;
        *(&v35 - 4) = (uint64_t)&unk_100E0DAD8;
        *(&v35 - 3) = v28;
        uint64_t v29 = v36;
        *(&v35 - 2) = v36;
        uint64_t v30 = swift_getKeyPath();
        __chkstk_darwin(v30);
        *(&v35 - 4) = (uint64_t)&unk_100E0DAD8;
        *(&v35 - 3) = v28;
        *(&v35 - 2) = v29;
        swift_getKeyPath();
        *(void *)&v46[0] = v26;
        swift_retain();
        swift_retain();
        static Published.subscript.setter();
        static os_signpost_type_t.event.getter();
        uint64_t v31 = v41;
        static OSSignpostID.exclusive.getter();
        os_signpost(_:dso:log:name:signpostID:)();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v31, v38);
        uint64_t v32 = sub_10006DF38(v39, (uint64_t)v44, &qword_100E63488);
        uint64_t v33 = v51;
        __chkstk_darwin(v32);
        *(&v35 - 4) = (uint64_t)&unk_100E0DAD8;
        *(&v35 - 3) = v28;
        *(&v35 - 2) = v29;
        uint64_t v34 = swift_getKeyPath();
        __chkstk_darwin(v34);
        *(&v35 - 4) = (uint64_t)&unk_100E0DAD8;
        *(&v35 - 3) = v28;
        *(&v35 - 2) = v29;
        swift_getKeyPath();
        swift_retain();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        uint64_t v48 = v33;
        uint64_t v49 = v43;
        v46[0] = v44[0];
        v46[1] = v44[1];
        v46[2] = v44[2];
        uint64_t v47 = v45;
        sub_1001A52DC((uint64_t)v46);
        sub_1001781AC((uint64_t)v46, &qword_100E647A8);
      }
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001ABC4C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_1001ABC88()
{
  unint64_t result = qword_100E81B18;
  if (!qword_100E81B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E81B18);
  }
  return result;
}

double sub_1001ABCD4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100158574(a1, a2);
}

double sub_1001ABCF8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001ABCD4(a1, a2);
}

double sub_1001ABD00@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001ABD24(a1, a2);
}

double sub_1001ABD24@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for MainAction();
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v10 = v8 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v11 = *(void *)(v5 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_10015B0C4(v10, (uint64_t)v7);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_1001ABE70((uint64_t)v7);
      }
      else if (*v7 == 2)
      {
        sub_100A850F4();
      }
      v10 += v11;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  *(unsigned char *)(a2 + 48) = 0;
  double result = 0.0;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
  return result;
}

uint64_t sub_1001ABE70(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MainAction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_1001ABECC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001ABD00(a1, a2);
}

uint64_t sub_1001ABED4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001ABEF8(a1, a2);
}

uint64_t sub_1001ABEF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(qword_100E77770);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v70 = v6;
  uint64_t v7 = sub_10017DF08(&qword_100E6F620);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v69 = v9;
  uint64_t v10 = sub_10017DF08(&qword_100E77768);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_100109314();
  uint64_t v71 = v12;
  uint64_t v13 = sub_10017DF08(&qword_100E77760);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_100109314();
  uint64_t v74 = v15;
  uint64_t v16 = sub_10017DF08(&qword_100E77758);
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  sub_100109314();
  uint64_t v76 = v18;
  uint64_t v19 = type metadata accessor for ConfiguredUnitsAction();
  sub_100162E4C();
  __chkstk_darwin(v20);
  char v22 = &v65[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v23);
  uint64_t v80 = &v65[-v24];
  type metadata accessor for MainAction();
  sub_100179C0C();
  uint64_t v26 = v25;
  __chkstk_darwin(v27);
  uint64_t v29 = &v65[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v79 = type metadata accessor for EnvironmentAction();
  sub_100162E4C();
  __chkstk_darwin(v30);
  uint64_t v32 = &v65[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v33);
  uint64_t v35 = &v65[-v34];
  uint64_t result = *(void *)(a1 + 40);
  uint64_t v37 = *(void *)(result + 16);
  if (!v37)
  {
LABEL_26:
    *(unsigned char *)(a2 + 48) = 0;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
    return result;
  }
  uint64_t v73 = a2;
  uint64_t v38 = result + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
  int v77 = enum case for ConfiguredUnit.distance(_:);
  int v75 = enum case for ConfiguredUnit.precipitation(_:);
  int v67 = enum case for ConfiguredUnit.temperature(_:);
  int v68 = enum case for ConfiguredUnit.pressure(_:);
  int v66 = enum case for ConfiguredUnit.windSpeed(_:);
  uint64_t v39 = *(void *)(v26 + 72);
  uint64_t v72 = result;
  swift_bridgeObjectRetain();
  uint64_t v78 = v19;
  while (1)
  {
    sub_10016692C(v38, (uint64_t)v29, (void (*)(void))type metadata accessor for MainAction);
    if (swift_getEnumCaseMultiPayload() == 2) {
      break;
    }
    uint64_t v44 = type metadata accessor for MainAction;
    uint64_t v43 = (uint64_t)v29;
LABEL_11:
    sub_1001591E0(v43, (void (*)(void))v44);
LABEL_12:
    v38 += v39;
    if (!--v37)
    {
      uint64_t result = swift_bridgeObjectRelease();
      a2 = v73;
      goto LABEL_26;
    }
  }
  sub_100116FFC((uint64_t)v29, (uint64_t)v35, (void (*)(void))type metadata accessor for EnvironmentAction);
  sub_10016692C((uint64_t)v35, (uint64_t)v32, (void (*)(void))type metadata accessor for EnvironmentAction);
  if (swift_getEnumCaseMultiPayload() != 11)
  {
    uint64_t v42 = type metadata accessor for EnvironmentAction;
    sub_1001591E0((uint64_t)v35, (void (*)(void))type metadata accessor for EnvironmentAction);
    uint64_t v43 = (uint64_t)v32;
LABEL_10:
    uint64_t v44 = v42;
    goto LABEL_11;
  }
  uint64_t v40 = v80;
  sub_100116FFC((uint64_t)v32, (uint64_t)v80, (void (*)(void))type metadata accessor for ConfiguredUnitsAction);
  sub_10016692C((uint64_t)v40, (uint64_t)v22, (void (*)(void))type metadata accessor for ConfiguredUnitsAction);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      type metadata accessor for UnitManager();
      static UnitManager.standard.getter();
      UnitManager.resetPreferredUnits()();
      swift_release();
      sub_1001591E0((uint64_t)v80, (void (*)(void))type metadata accessor for ConfiguredUnitsAction);
      uint64_t v44 = type metadata accessor for EnvironmentAction;
      uint64_t v43 = (uint64_t)v35;
      goto LABEL_11;
    }
    uint64_t v42 = type metadata accessor for ConfiguredUnitsAction;
    sub_1001591E0((uint64_t)v80, (void (*)(void))type metadata accessor for ConfiguredUnitsAction);
    sub_1001591E0((uint64_t)v35, (void (*)(void))type metadata accessor for EnvironmentAction);
    uint64_t v43 = (uint64_t)v22;
    goto LABEL_10;
  }
  uint64_t v45 = type metadata accessor for ConfiguredUnit();
  sub_100179C0C();
  int v47 = (*(uint64_t (**)(unsigned char *, uint64_t))(v46 + 88))(v22, v45);
  if (v47 == v77)
  {
    uint64_t v48 = sub_100188510();
    v49(v48);
    uint64_t v50 = v76;
    sub_10024D364((uint64_t)v22, v76, &qword_100E77758);
    type metadata accessor for UnitManager();
    static UnitManager.standard.getter();
    sub_1001A13D8();
    UnitManager.setPreferredDistanceUnit(_:)();
    swift_release();
    uint64_t v51 = v50;
    uint64_t v52 = &qword_100E77758;
LABEL_25:
    sub_1001781AC(v51, v52);
    sub_1001591E0((uint64_t)v80, (void (*)(void))type metadata accessor for ConfiguredUnitsAction);
    sub_1001591E0((uint64_t)v35, (void (*)(void))type metadata accessor for EnvironmentAction);
    goto LABEL_12;
  }
  if (v47 == v75)
  {
    uint64_t v53 = sub_100188510();
    v54(v53);
    uint64_t v55 = v74;
    sub_10024D364((uint64_t)v22, v74, &qword_100E77760);
    type metadata accessor for UnitManager();
    static UnitManager.standard.getter();
    sub_1001A13D8();
    UnitManager.setPreferredPrecipitationUnit(_:)();
    swift_release();
    uint64_t v51 = v55;
    uint64_t v52 = &qword_100E77760;
    goto LABEL_25;
  }
  if (v47 == v68)
  {
    uint64_t v56 = sub_100188510();
    v57(v56);
    uint64_t v58 = v71;
    sub_10024D364((uint64_t)v22, v71, &qword_100E77768);
    type metadata accessor for UnitManager();
    static UnitManager.standard.getter();
    sub_1001A13D8();
    UnitManager.setPreferredPressureUnit(_:)();
    swift_release();
    uint64_t v51 = v58;
    uint64_t v52 = &qword_100E77768;
    goto LABEL_25;
  }
  if (v47 == v67)
  {
    uint64_t v59 = sub_100188510();
    v60(v59);
    uint64_t v61 = v69;
    sub_10024D364((uint64_t)v22, v69, &qword_100E6F620);
    type metadata accessor for UnitManager();
    static UnitManager.standard.getter();
    sub_1001A13D8();
    UnitManager.setPreferredTemperatureUnit(_:)();
    swift_release();
    uint64_t v51 = v61;
    uint64_t v52 = &qword_100E6F620;
    goto LABEL_25;
  }
  if (v47 == v66)
  {
    uint64_t v62 = sub_100188510();
    v63(v62);
    uint64_t v64 = v70;
    sub_10024D364((uint64_t)v22, v70, qword_100E77770);
    type metadata accessor for UnitManager();
    static UnitManager.standard.getter();
    sub_1001A13D8();
    UnitManager.setPreferredWindSpeedUnit(_:)();
    swift_release();
    uint64_t v51 = v64;
    uint64_t v52 = qword_100E77770;
    goto LABEL_25;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ConfiguredUnitsAction()
{
  uint64_t result = qword_100EA4D00;
  if (!qword_100EA4D00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001AC6A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001ABED4(a1, a2);
}

uint64_t sub_1001AC6A8(uint64_t a1)
{
  return sub_1001AB420(a1);
}

uint64_t sub_1001AC6B0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1001AC6B8(a1, a2, (uint64_t *)(v3 + 16), a3);
}

uint64_t sub_1001AC6B8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_1001AC6E8(*a1, a2, *a3);
  *a4 = result;
  return result;
}

uint64_t sub_1001AC6E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v8)(uint64_t *__return_ptr, uint64_t *, uint64_t);
  uint64_t v10;
  uint64_t v11;

  uint64_t v4 = *(void *)(a3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain_n();
    swift_retain();
    uint64_t v7 = a3 + 40;
    do
    {
      uint64_t v8 = *(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t))(v7 - 8);
      uint64_t v10 = a1;
      swift_retain();
      v8(&v11, &v10, a2);
      swift_release();
      swift_release();
      a1 = v11;
      v7 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_retain();
  }
  return a1;
}

uint64_t sub_1001AC7B0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1001AC7D8(a1, a2, a3);
}

uint64_t sub_1001AC7D8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_1001AC808(*a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001AC808(uint64_t a1, uint64_t a2)
{
  return sub_10017074C(a1, a2);
}

uint64_t sub_1001AC82C(uint64_t a1)
{
  uint64_t v2 = sub_10018048C(a1);
  uint64_t result = sub_1001AC854(v2, v3);
  *uint64_t v1 = result;
  return result;
}

uint64_t sub_1001AC858@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v95 = a2;
  uint64_t v87 = a1;
  uint64_t v2 = (void *)a1[3];
  uint64_t v4 = a1[4];
  uint64_t v5 = (void *)a1[5];
  uint64_t v118 = a1[2];
  uint64_t v3 = v118;
  char v119 = v2;
  uint64_t v6 = v2;
  uint64_t v120 = v4;
  uint64_t v121 = v5;
  uint64_t v7 = v4;
  uint64_t v8 = v5;
  uint64_t v85 = v5;
  type metadata accessor for TransitionContext();
  uint64_t v94 = type metadata accessor for Optional();
  uint64_t v92 = *(void *)(v94 - 8);
  uint64_t v9 = __chkstk_darwin(v94);
  uint64_t v91 = (char *)&v65 - v10;
  uint64_t v90 = *(v6 - 1);
  __chkstk_darwin(v9);
  unint64_t v88 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = v3;
  char v119 = v6;
  uint64_t v84 = v6;
  uint64_t v120 = v7;
  uint64_t v121 = v8;
  uint64_t v96 = type metadata accessor for RebuildPageWhenSidebarCollapsesDuringTransitionModifier();
  uint64_t v93 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v89 = (uint64_t)&v65 - v12;
  uint64_t v118 = v3;
  char v119 = v6;
  uint64_t v98 = v3;
  uint64_t v120 = v7;
  uint64_t v121 = v8;
  uint64_t v13 = v7;
  type metadata accessor for IDView();
  sub_10018C6DC(&qword_100E64440);
  type metadata accessor for ModifiedContent();
  type metadata accessor for ModifiedContent();
  sub_10018C6DC(&qword_100EAAE30);
  type metadata accessor for ModifiedContent();
  type metadata accessor for ModifiedContent();
  uint64_t v14 = type metadata accessor for _ConditionalContent();
  uint64_t v81 = &protocol conformance descriptor for IDView<A, B>;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v16 = sub_1001246C8(&qword_100E64438, &qword_100E64440);
  uint64_t v116 = WitnessTable;
  uint64_t v117 = v16;
  uint64_t v114 = swift_getWitnessTable();
  uint64_t v115 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v18 = sub_1001246C8(&qword_100E70D10, &qword_100EAAE30);
  uint64_t v112 = v17;
  uint64_t v113 = v18;
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v110 = v13;
  uint64_t v111 = v16;
  uint64_t v20 = v13;
  uint64_t v21 = swift_getWitnessTable();
  uint64_t v108 = v19;
  uint64_t v109 = v21;
  uint64_t v69 = v14;
  swift_getWitnessTable();
  uint64_t v22 = type metadata accessor for VStack();
  uint64_t v68 = v22;
  uint64_t v78 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v65 - v23;
  uint64_t v67 = swift_getWitnessTable();
  uint64_t v118 = v22;
  char v119 = &type metadata for Bool;
  uint64_t v120 = v67;
  uint64_t v121 = &protocol witness table for Bool;
  uint64_t v25 = type metadata accessor for IDView();
  uint64_t v82 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v97 = (char *)&v65 - v26;
  uint64_t v71 = v25;
  uint64_t v27 = type metadata accessor for ModifiedContent();
  uint64_t v83 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v73 = (char *)&v65 - v28;
  uint64_t v29 = (void *)type metadata accessor for PageContainerSidebarState();
  int v77 = v29;
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v70 = v30;
  uint64_t v31 = swift_getWitnessTable();
  uint64_t v106 = v30;
  uint64_t v107 = v31;
  uint64_t v74 = v27;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v76 = v32;
  uint64_t v75 = sub_100128D04(&qword_100E989D0, (void (*)(uint64_t))type metadata accessor for PageContainerSidebarState);
  uint64_t v118 = v27;
  char v119 = v29;
  uint64_t v120 = v32;
  uint64_t v121 = (void *)v75;
  uint64_t v79 = &opaque type descriptor for <<opaque return type of View.environment<A>(_:)>>;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v81 = *(void **)(OpaqueTypeMetadata2 - 8);
  uint64_t v33 = __chkstk_darwin(OpaqueTypeMetadata2);
  int v66 = (char *)&v65 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v72 = (uint64_t)&v65 - v35;
  uint64_t v36 = v98;
  uint64_t v99 = v98;
  uint64_t v37 = v84;
  uint64_t v100 = v84;
  uint64_t v38 = v85;
  uint64_t v101 = v20;
  uint64_t v102 = v85;
  uint64_t v39 = v86;
  uint64_t v103 = v86;
  static HorizontalAlignment.center.getter();
  VStack.init(alignment:spacing:content:)();
  uint64_t v40 = v87;
  uint64_t v41 = v39 + *((int *)v87 + 15);
  uint64_t v42 = *(void **)(v41 + 8);
  LOBYTE(v118) = *(unsigned char *)v41;
  char v119 = v42;
  uint64_t v69 = sub_10017DF08(&qword_100E65950);
  State.wrappedValue.getter();
  LOBYTE(v118) = v104;
  uint64_t v43 = v68;
  View.id<A>(_:)();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v24, v43);
  uint64_t v118 = v36;
  char v119 = v37;
  uint64_t v120 = v20;
  uint64_t v121 = v38;
  uint64_t v44 = type metadata accessor for Page();
  uint64_t v45 = (uint64_t)v88;
  (*(void (**)(char *, uint64_t, void *))(v90 + 16))(v88, v39 + *(int *)(v44 + 52), v37);
  uint64_t v46 = (uint64_t)v91;
  (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v91, v39 + *((int *)v40 + 14), v94);
  uint64_t v47 = *(void *)(v41 + 8);
  LOBYTE(v104) = *(unsigned char *)v41;
  uint64_t v105 = v47;
  State.projectedValue.getter();
  uint64_t v48 = v89;
  sub_1001AD5BC(v45, v46, v118, (uint64_t)v119, v120, (uint64_t)v37, v89);
  uint64_t v49 = v73;
  uint64_t v50 = v71;
  uint64_t v51 = v96;
  uint64_t v52 = v97;
  View.modifier<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v48, v51);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v50);
  uint64_t v53 = (uint64_t *)(v39 + *((int *)v40 + 16));
  uint64_t v55 = *v53;
  uint64_t v54 = (void *)v53[1];
  uint64_t v118 = v55;
  char v119 = v54;
  sub_10017DF08(qword_100E989D8);
  State.wrappedValue.getter();
  uint64_t v56 = (uint64_t)v66;
  uint64_t v57 = v74;
  uint64_t v58 = v77;
  uint64_t v59 = v76;
  uint64_t v60 = (void *)v75;
  View.environment<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v49, v57);
  uint64_t v118 = v57;
  char v119 = v58;
  uint64_t v120 = v59;
  uint64_t v121 = v60;
  swift_getOpaqueTypeConformance2();
  uint64_t v61 = v72;
  uint64_t v62 = OpaqueTypeMetadata2;
  sub_100121584(v56, OpaqueTypeMetadata2, v72);
  uint64_t v63 = (void (*)(uint64_t, uint64_t))v81[1];
  v63(v56, v62);
  sub_100121584(v61, v62, v95);
  return ((uint64_t (*)(uint64_t, uint64_t))v63)(v61, v62);
}

uint64_t sub_1001AD344(uint64_t a1, uint64_t a2)
{
  swift_release();
  unint64_t v4 = a1 & 0xFFFFFFFFFFFFFFF8;
  sub_10018F6D8(*(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16), *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFF8) + 24));
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6 + 8;
  int v8 = *(_DWORD *)(v6 + 80);
  uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  unint64_t v30 = ~(unint64_t)v8;
  uint64_t v9 = (v4 + v8 + 25) & v30;
  v29(v9, v5);
  uint64_t v10 = *(void *)(v7 + 56);
  uint64_t v11 = v9 + v10;
  uint64_t v12 = *(void *)(a2 + 16);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80) | v8;
  uint64_t v15 = (_DWORD *)((v11 + (v14 | 7)) & ~(v14 | 7));
  unsigned int v16 = *(_DWORD *)(v13 + 84);
  uint64_t v17 = *(unsigned int *)(v7 + 76);
  uint64_t v18 = *(void *)(v13 + 64) + v8;
  uint64_t v19 = (v18 & v30) + v10;
  unint64_t v20 = ((v19 + ((v19 + v14) & ~v14) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v28 = v19 + v14;
  if (v17 | v16)
  {
    if (v16 >= v17)
    {
      uint64_t v21 = (uint64_t)v15;
      uint64_t v17 = *(unsigned int *)(v13 + 84);
      uint64_t v22 = v12;
    }
    else
    {
      uint64_t v21 = ((unint64_t)v15 + v18) & v30;
      uint64_t v22 = v5;
    }
    if (_s7Weather24LocationCompositionStateOwet_0(v21, v17, v22)) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (!*((unsigned char *)v15 + v20)) {
    goto LABEL_11;
  }
  int v23 = *((unsigned __int8 *)v15 + v20) - 1;
  int v24 = v20 & 0xFFFFFFF8;
  if ((v20 & 0xFFFFFFF8) != 0)
  {
    int v23 = 0;
    int v24 = *v15;
  }
  if ((v24 | v23) == 0xFFFFFFFF)
  {
LABEL_11:
    uint64_t v25 = *(void (**)(_DWORD *, uint64_t))(v13 + 8);
    v25(v15, v12);
    v29(((unint64_t)v15 + v18) & v30, v5);
    unint64_t v26 = ((unint64_t)v15 + v28) & ~v14;
    v25((_DWORD *)v26, v12);
    v29((v18 + v26) & v30, v5);
  }
LABEL_12:
  swift_release();

  return swift_release();
}

uint64_t sub_1001AD5BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  type metadata accessor for PageContainerSidebarState();
  sub_100128D04(&qword_100E989D0, (void (*)(uint64_t))type metadata accessor for PageContainerSidebarState);
  *(void *)a7 = Environment.init<A>(_:)();
  *(unsigned char *)(a7 + 8) = v13 & 1;
  *(void *)(a7 + 16) = swift_getKeyPath();
  *(unsigned char *)(a7 + 24) = 0;
  uint64_t v14 = (int *)type metadata accessor for RebuildPageWhenSidebarCollapsesDuringTransitionModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(a7 + v14[14], a1, a6);
  uint64_t v15 = a7 + v14[15];
  type metadata accessor for TransitionContext();
  uint64_t v16 = type metadata accessor for Optional();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v15, a2, v16);
  uint64_t v18 = a7 + v14[16];
  *(void *)uint64_t v18 = a3;
  *(void *)(v18 + 8) = a4;
  *(unsigned char *)(v18 + 16) = a5;
  return result;
}

uint64_t type metadata accessor for RebuildPageWhenSidebarCollapsesDuringTransitionModifier()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1001AD770(uint64_t a1)
{
  return sub_1001AD778(a1, (void *)(v1 + 16));
}

uint64_t sub_1001AD778(uint64_t a1, void *a2)
{
  uint64_t v3 = *sub_1001B1E64(a2, a2[3]);

  return sub_1001AA6C0(a1, v3);
}

uint64_t sub_1001AD7C0(uint64_t a1)
{
  return sub_1001AD7C8(a1, (void *)(v1 + 16));
}

uint64_t sub_1001AD7C8(uint64_t a1, void *a2)
{
  return sub_1001AD874(a1);
}

uint64_t sub_1001AD80C(uint64_t a1)
{
  return sub_1001AD814(a1, (void *)(v1 + 16));
}

uint64_t sub_1001AD814(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[3];
  uint64_t v4 = a2[4];
  sub_1001B1E64(a2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4);
}

uint64_t sub_1001AD874(uint64_t a1)
{
  uint64_t v4 = v1;
  uint64_t v6 = sub_10017DF08(&qword_100EB9408);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  sub_10012B938();
  uint64_t v8 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_10011C760();
  sub_1001B1E64((void *)(v1 + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_clock), *(void *)(v1 + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_clock + 24));
  dispatch thunk of Clock.time.getter();
  uint64_t v12 = sub_1001B1E64((void *)(v4 + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_queue), *(void *)(v4 + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_queue + 24));
  char v13 = (char *)v2 + *(int *)(v7 + 72);
  *uint64_t v2 = v4;
  sub_10006DF38(a1, (uint64_t)(v2 + 1), &qword_100E647A8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v3, v8);
  uint64_t v14 = *v12;
  swift_retain();
  sub_1001ADA14((uint64_t)v2, (uint64_t)sub_10010B658, 0, v14);
  sub_100178160((uint64_t)v2, &qword_100EB9408);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v3, v8);
}

uint64_t sub_1001ADA14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a4;
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v26 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100EB9408);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v23 - v16;
  sub_10006DF38(a1, (uint64_t)&v23 - v16, &qword_100EB9408);
  sub_10006DF38((uint64_t)v17, (uint64_t)v14, &qword_100EB9408);
  unint64_t v18 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = v24;
  *(void *)(v19 + 16) = v23;
  *(void *)(v19 + 24) = v20;
  sub_10024D364((uint64_t)v14, v19 + v18, &qword_100EB9408);
  aBlock[4] = sub_10010B0A4;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10010A4D4;
  aBlock[3] = &unk_100E3C220;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v28 = _swiftEmptyArrayStorage;
  sub_100128F44((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10017DF08(&qword_100E75530);
  sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v25);
  sub_100178160((uint64_t)v17, &qword_100EB9408);
  return swift_release();
}

uint64_t sub_1001ADDC4(uint64_t a1)
{
  uint64_t v81 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind();
  sub_10017C83C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_10016278C();
  sub_100179C90();
  __chkstk_darwin(v5);
  sub_100179C90();
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v62 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v62 - v11;
  __chkstk_darwin(v10);
  sub_100179C90();
  __chkstk_darwin(v13);
  uint64_t v75 = (uint64_t)&v62 - v14;
  uint64_t v15 = sub_10017DF08(&qword_100E634B0);
  __chkstk_darwin(v15 - 8);
  sub_10016278C();
  uint64_t v18 = v16 - v17;
  __chkstk_darwin(v19);
  uint64_t v74 = (uint64_t)&v62 - v20;
  uint64_t v80 = type metadata accessor for MainAction();
  __chkstk_darwin(v80);
  uint64_t v23 = (char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = a1;
  uint64_t result = *(void *)(a1 + 40);
  uint64_t v25 = *(void *)(result + 16);
  if (v25)
  {
    uint64_t v66 = v18;
    uint64_t v67 = v12;
    uint64_t v68 = v9;
    uint64_t v72 = OBJC_IVAR____TtC7Weather39WeatherConditionBackgroundStoreObserver_hasPrewarmDone;
    uint64_t v26 = result + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    unsigned int v79 = enum case for Settings.VFX.AnimatedBackgrounds.AnimationKind.vfx(_:);
    uint64_t v78 = (void (**)(uint64_t, void, uint64_t))(v3 + 104);
    int v77 = (void (**)(void))(v3 + 8);
    uint64_t v27 = *(void *)(v21 + 72);
    uint64_t v62 = result;
    swift_bridgeObjectRetain();
    uint64_t v65 = (char *)&type metadata for () + 8;
    uint64_t v28 = v81;
    uint64_t v82 = v27;
    while (1)
    {
      sub_1001665C0(v26, (uint64_t)v23, (void (*)(void))type metadata accessor for MainAction);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_100158D70((uint64_t)v23, (void (*)(void))type metadata accessor for MainAction);
      }
      else if (*v23)
      {
        if (*v23 == 1)
        {
          sub_10062E134(&OBJC_IVAR____TtC7Weather39WeatherConditionBackgroundStoreObserver____lazy_storage___locationAnimationKind, (void (*)(void))&Settings.VFX.AnimatedBackgrounds.locationAnimationKind.getter, v75);
          uint64_t v29 = *v78;
          (*v78)(v76, v79, v28);
          sub_10062E4BC(&qword_100E80578, (void (*)(uint64_t))&type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind);
          sub_1001814B8();
          sub_1001814B8();
          if (__src[0] == v89 && __src[1] == (void)v90) {
            char v31 = 1;
          }
          else {
            char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v37 = *v77;
          sub_1001629EC();
          v37();
          uint64_t v73 = v37;
          sub_1001629EC();
          v37();
          if (v31)
          {
            if (qword_100E627D0 != -1) {
              swift_once();
            }
            uint64_t v38 = type metadata accessor for Logger();
            sub_1002102B0(v38, (uint64_t)qword_100F51E88);
            uint64_t v39 = Logger.logObject.getter();
            os_log_type_t v40 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v39, v40))
            {
              uint64_t v41 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v41 = 0;
              _os_log_impl((void *)&_mh_execute_header, v39, v40, "Requesting default background manager to execute pending requests because app will enter foreground", v41, 2u);
              swift_slowDealloc();
            }

            swift_getObjectType();
            dispatch thunk of WeatherConditionBackgroundManagerType.executeRequests(forcePrepare:)();
          }
          sub_10062E134(&OBJC_IVAR____TtC7Weather39WeatherConditionBackgroundStoreObserver____lazy_storage___listAnimationKind, (void (*)(void))&Settings.VFX.AnimatedBackgrounds.listAnimationKind.getter, (uint64_t)v67);
          uint64_t v28 = v81;
          uint64_t v69 = v29;
          v29((uint64_t)v68, v79, v81);
          sub_1001814B8();
          sub_1001814B8();
          uint64_t v42 = v90;
          if (__src[0] == v89 && __src[1] == (void)v90)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v46 = sub_10017A62C();
            ((void (*)(uint64_t))v42)(v46);
            sub_1001629EC();
            v42();
            uint64_t v27 = v82;
LABEL_31:
            uint64_t v47 = *(void *)(v83 + 16);
            uint64_t v48 = *(void *)(v83 + 32);
            uint64_t ObjectType = swift_getObjectType();
            if (v47 != v48) {
              goto LABEL_33;
            }
            uint64_t v49 = v63;
            sub_10062E134(&OBJC_IVAR____TtC7Weather39WeatherConditionBackgroundStoreObserver____lazy_storage___locationAnimationKind, (void (*)(void))&Settings.VFX.AnimatedBackgrounds.locationAnimationKind.getter, v63);
            uint64_t v50 = v64;
            v69(v64, v79, v28);
            sub_10062E4BC(&qword_100E85908, (void (*)(uint64_t))&type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind);
            LODWORD(v69) = dispatch thunk of static Equatable.== infix(_:_:)();
            uint64_t v51 = v73;
            ((void (*)(uint64_t, uint64_t))v73)(v50, v28);
            uint64_t v52 = v49;
            uint64_t v27 = v82;
            ((void (*)(uint64_t, uint64_t))v51)(v52, v28);
            if ((v69 & 1) == 0)
            {
LABEL_33:
              if (qword_100E627D0 != -1) {
                swift_once();
              }
              uint64_t v53 = type metadata accessor for Logger();
              sub_1002102B0(v53, (uint64_t)qword_100F51E88);
              uint64_t v54 = Logger.logObject.getter();
              os_log_type_t v55 = static os_log_type_t.default.getter();
              if (os_log_type_enabled(v54, v55))
              {
                uint64_t v56 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v56 = 0;
                _os_log_impl((void *)&_mh_execute_header, v54, v55, "Requesting list background manager to execute pending requests because app will enter foreground", v56, 2u);
                uint64_t v27 = v82;
                swift_slowDealloc();
              }

              dispatch thunk of WeatherConditionBackgroundManagerType.executeRequests(forcePrepare:)();
            }
            goto LABEL_5;
          }
          char v44 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v45 = sub_10017A62C();
          ((void (*)(uint64_t))v42)(v45);
          sub_1001629EC();
          v42();
          uint64_t v27 = v82;
          if (v44) {
            goto LABEL_31;
          }
        }
      }
      else
      {
        if (*(unsigned char *)(v83 + v72)) {
          return swift_bridgeObjectRelease();
        }
        uint64_t v32 = v83;
        *(unsigned char *)(v83 + v72) = 1;
        uint64_t v33 = v74;
        static TaskPriority.userInitiated.getter();
        uint64_t v34 = type metadata accessor for TaskPriority();
        _s7Weather24LocationCompositionStateOwst_0(v33, 0, 1, v34);
        sub_1001E4B50(v71, (uint64_t)__src, &qword_100E647A8);
        uint64_t v35 = (void *)swift_allocObject();
        v35[2] = 0;
        v35[3] = 0;
        v35[4] = v32;
        memcpy(v35 + 5, __src, 0x48uLL);
        uint64_t v36 = v66;
        sub_1001E4B50(v33, v66, &qword_100E634B0);
        LODWORD(v33) = _s7Weather24LocationCompositionStateOwet_0(v36, 1, v34);
        swift_retain();
        if (v33 == 1)
        {
          sub_100178254(v36, &qword_100E634B0);
        }
        else
        {
          TaskPriority.rawValue.getter();
          sub_100162880();
          (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v36, v34);
        }
        uint64_t v28 = v81;
        if (v35[2])
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v58 = dispatch thunk of Actor.unownedExecutor.getter();
          uint64_t v60 = v59;
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v58 = 0;
          uint64_t v60 = 0;
        }
        uint64_t v61 = swift_allocObject();
        *(void *)(v61 + 16) = &unk_100E85918;
        *(void *)(v61 + 24) = v35;
        if (v60 | v58)
        {
          uint64_t v84 = 0;
          uint64_t v85 = 0;
          uint64_t v86 = v58;
          uint64_t v87 = v60;
        }
        uint64_t v27 = v82;
        swift_task_create();
        swift_release();
        sub_100178254(v74, &qword_100E634B0);
      }
LABEL_5:
      v26 += v27;
      if (!--v25) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

void sub_1001AE818(double *a1@<X8>)
{
  *a1 = sub_1001AE844();
}

double sub_1001AE844()
{
  sub_1001AE880();
  EnvironmentValues.subscript.getter();
  return v1;
}

unint64_t sub_1001AE880()
{
  unint64_t result = qword_100E82828;
  if (!qword_100E82828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E82828);
  }
  return result;
}

uint64_t sub_1001AE8CC(uint64_t a1)
{
  return sub_100199EE0(a1, (void (*)(void))sub_10019C2B8);
}

uint64_t sub_1001AE8EC()
{
  uint64_t v0 = sub_1001AE918();
  return sub_100182AB8(v0);
}

uint64_t sub_1001AE918()
{
  return sub_10018C9CC((void (*)(void))sub_10019C2B8);
}

uint64_t sub_1001AE938()
{
  uint64_t v0 = type metadata accessor for ContentStatusBannerPresentationMetrics(0);
  __chkstk_darwin(v0 - 8);
  sub_10015176C();
  sub_1001AEA48();
  EnvironmentValues.subscript.setter();
  return sub_100151660();
}

uint64_t sub_1001AEA00()
{
  sub_1001AEA48();

  return EnvironmentValues.subscript.getter();
}

unint64_t sub_1001AEA48()
{
  unint64_t result = qword_100E8E258;
  if (!qword_100E8E258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8E258);
  }
  return result;
}

uint64_t sub_1001AEA94()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t sub_1001AEAD0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1001AEB00();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1001AEB00()
{
  return sub_10018C9CC((void (*)(void))sub_10019C7A0);
}

uint64_t sub_1001AEB20@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1001AEB50();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1001AEB50()
{
  return sub_10018C9CC((void (*)(void))sub_10019C7EC);
}

uint64_t sub_1001AEB70()
{
  sub_1001AEBAC();
  EnvironmentValues.subscript.getter();
  return v1;
}

unint64_t sub_1001AEBAC()
{
  unint64_t result = qword_100E73440;
  if (!qword_100E73440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E73440);
  }
  return result;
}

unint64_t sub_1001AEBF8()
{
  unint64_t result = qword_100E66CE0;
  if (!qword_100E66CE0)
  {
    sub_10018C6DC(&qword_100E66CC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E66CE0);
  }
  return result;
}

unint64_t sub_1001AEC4C()
{
  unint64_t result = qword_100E65FD0;
  if (!qword_100E65FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65FD0);
  }
  return result;
}

uint64_t sub_1001AEC98()
{
  sub_1001AECE0();

  return EnvironmentValues.subscript.getter();
}

unint64_t sub_1001AECE0()
{
  unint64_t result = qword_100E7AED0;
  if (!qword_100E7AED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7AED0);
  }
  return result;
}

uint64_t sub_1001AED2C()
{
  unint64_t v0 = sub_1001AED6C();
  sub_10017F820(v0, (uint64_t)&type metadata for ForegroundEffectKey);

  return EnvironmentValues.subscript.getter();
}

unint64_t sub_1001AED6C()
{
  unint64_t result = qword_100E65FB0;
  if (!qword_100E65FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65FB0);
  }
  return result;
}

uint64_t sub_1001AEDB8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1001AEDC0(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1001AEDC0@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1001AEDF0(uint64_t a1)
{
  return sub_1001A591C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_1001AEE08);
}

uint64_t sub_1001AEE08(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void *(*a5)(uint64_t *__return_ptr, uint64_t, __n128), uint64_t a6, void (*a7)(uint64_t *), uint64_t a8)
{
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v41 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v38 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v18 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  char v44 = (char *)v36 - v20;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v37 = v14;
    double v23 = COERCE_DOUBLE(a3(a1));
    char v25 = v24;
    uint64_t v46 = a8;
    sub_10006DF38(a1, (uint64_t)__src, &qword_100E647A8);
    uint64_t v26 = v46;
    sub_10006DF38((uint64_t)__src, (uint64_t)v48, &qword_100E647A8);
    uint64_t v27 = (void *)swift_allocObject();
    v27[2] = a5;
    v27[3] = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v27[13] = v22;
    v27[14] = a7;
    v27[15] = v26;
    if (v25)
    {
      if (v23 == 0.0)
      {
        swift_retain_n();
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      uint64_t v28 = qword_100E62BC0;
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      if (v28 != -1) {
        swift_once();
      }
      sub_1001B0A34(v22, (uint64_t)sub_100216A34, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_1001AB3E0();
        swift_retain_n();
        v36[1] = a6;
        swift_retain_n();
        swift_retain_n();
        v36[0] = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v38 = *(void *)(v38 + 8);
        ((void (*)(char *, uint64_t))v38)(v18, v45);
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_100216A34;
        *(void *)(v29 + 24) = v27;
        aBlock[4] = sub_100276768;
        aBlock[5] = v29;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        void aBlock[2] = sub_10010A4D4;
        aBlock[3] = &unk_100E0B9C8;
        unint64_t v30 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        char v31 = v39;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100128B0C((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10017DF08(&qword_100E75530);
        sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
        uint64_t v32 = v41;
        uint64_t v33 = v37;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        uint64_t v34 = v44;
        uint64_t v35 = (void *)v36[0];
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v33);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v42);
        ((void (*)(char *, uint64_t))v38)(v34, v45);
        swift_release();
        swift_release();
        goto LABEL_12;
      }
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      sub_100052F30(a5, a6, (uint64_t)v48, v22, a7);
    }
    swift_release();
LABEL_12:
    swift_release();
    sub_1001781AC((uint64_t)v48, &qword_100E647A8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001AF4C0(uint64_t a1)
{
  uint64_t v1 = (unsigned char *)(*(void *)(a1 + 64) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment);
  swift_beginAccess();
  if (*v1) {
    return 1;
  }
  sub_100B311D0();
  return 0;
}

uint64_t sub_1001AF534(uint64_t a1)
{
  return sub_1001A591C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_1001B02EC);
}

uint64_t sub_1001AF54C(uint64_t a1)
{
  return sub_1001A591C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_1001AF564);
}

uint64_t sub_1001AF564(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t, __n128), uint64_t a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v41 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v38 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v18 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  char v44 = (char *)v36 - v20;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v37 = v14;
    double v23 = COERCE_DOUBLE(a3(a1));
    char v25 = v24;
    uint64_t v46 = a8;
    sub_10006DF38(a1, (uint64_t)__src, &qword_100E647A8);
    uint64_t v26 = v46;
    sub_10006DF38((uint64_t)__src, (uint64_t)v48, &qword_100E647A8);
    uint64_t v27 = (void *)swift_allocObject();
    v27[2] = a5;
    v27[3] = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v27[13] = v22;
    v27[14] = a7;
    v27[15] = v26;
    if (v25)
    {
      if (v23 == 0.0)
      {
        swift_retain_n();
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      uint64_t v28 = qword_100E62BC0;
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      if (v28 != -1) {
        swift_once();
      }
      sub_1001B11C0(v22, (uint64_t)sub_100216A64, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_1001AB3E0();
        swift_retain_n();
        v36[1] = a6;
        swift_retain_n();
        swift_retain_n();
        v36[0] = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v38 = *(void *)(v38 + 8);
        ((void (*)(char *, uint64_t))v38)(v18, v45);
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_100216A64;
        *(void *)(v29 + 24) = v27;
        aBlock[4] = sub_100276768;
        aBlock[5] = v29;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        void aBlock[2] = sub_10010A4D4;
        aBlock[3] = &unk_100E0B158;
        unint64_t v30 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        char v31 = v39;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100128B0C((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10017DF08(&qword_100E75530);
        sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
        uint64_t v32 = v41;
        uint64_t v33 = v37;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        uint64_t v34 = v44;
        uint64_t v35 = (void *)v36[0];
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v33);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v42);
        ((void (*)(char *, uint64_t))v38)(v34, v45);
        swift_release();
        swift_release();
        goto LABEL_12;
      }
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      sub_100082E00(a5, a6, (uint64_t)v48, v22, a7, v26);
    }
    swift_release();
LABEL_12:
    swift_release();
    sub_1001781AC((uint64_t)v48, &qword_100E647A8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001AFC1C(uint64_t a1)
{
  return sub_1001A591C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_1001AFC34);
}

uint64_t sub_1001AFC34(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, void (*a7)(char *), uint64_t a8)
{
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v41 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v38 = *(void *)(v45 - 8);
  uint64_t v17 = __chkstk_darwin(v45);
  uint64_t v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  char v44 = (char *)v36 - v20;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v37 = v14;
    double v23 = COERCE_DOUBLE(a3(a1));
    char v25 = v24;
    uint64_t v46 = a8;
    sub_10006DF38(a1, (uint64_t)__src, &qword_100E647A8);
    uint64_t v26 = v46;
    sub_10006DF38((uint64_t)__src, (uint64_t)v48, &qword_100E647A8);
    uint64_t v27 = (void *)swift_allocObject();
    v27[2] = a5;
    v27[3] = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v27[13] = v22;
    v27[14] = a7;
    v27[15] = v26;
    if (v25)
    {
      if (v23 == 0.0)
      {
        swift_retain_n();
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      uint64_t v28 = qword_100E62BC0;
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      if (v28 != -1) {
        swift_once();
      }
      sub_1001B1588(v22, (uint64_t)sub_100216A7C, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_1001AB3E0();
        swift_retain_n();
        v36[1] = a6;
        swift_retain_n();
        swift_retain_n();
        v36[0] = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v38 = *(void *)(v38 + 8);
        ((void (*)(char *, uint64_t))v38)(v19, v45);
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_100216A7C;
        *(void *)(v29 + 24) = v27;
        aBlock[4] = sub_100276768;
        aBlock[5] = v29;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        void aBlock[2] = sub_10010A4D4;
        aBlock[3] = &unk_100E0B2C0;
        unint64_t v30 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        char v31 = v39;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100128B0C((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10017DF08(&qword_100E75530);
        sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
        uint64_t v32 = v41;
        uint64_t v33 = v37;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        uint64_t v34 = v44;
        uint64_t v35 = (void *)v36[0];
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v33);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v42);
        ((void (*)(char *, uint64_t))v38)(v34, v45);
        swift_release();
        swift_release();
        goto LABEL_12;
      }
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      sub_100078300(a5, a6, (uint64_t)v48, v22, a7, v26);
    }
    swift_release();
LABEL_12:
    swift_release();
    sub_1001781AC((uint64_t)v48, &qword_100E647A8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001B02EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v41 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v38 = *(void *)(v45 - 8);
  uint64_t v17 = __chkstk_darwin(v45);
  uint64_t v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  char v44 = (char *)v36 - v20;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v37 = v14;
    double v23 = COERCE_DOUBLE(a3(a1));
    char v25 = v24;
    uint64_t v46 = a8;
    sub_10006DF38(a1, (uint64_t)__src, &qword_100E647A8);
    uint64_t v26 = v46;
    sub_10006DF38((uint64_t)__src, (uint64_t)v48, &qword_100E647A8);
    uint64_t v27 = (void *)swift_allocObject();
    v27[2] = a5;
    v27[3] = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v27[13] = v22;
    v27[14] = a7;
    v27[15] = v26;
    if (v25)
    {
      if (v23 == 0.0)
      {
        swift_retain_n();
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      uint64_t v28 = qword_100E62BC0;
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      if (v28 != -1) {
        swift_once();
      }
      sub_1001B0DFC(v22, (uint64_t)sub_100216A4C, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_1001AB3E0();
        swift_retain_n();
        v36[1] = a6;
        swift_retain_n();
        swift_retain_n();
        v36[0] = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v38 = *(void *)(v38 + 8);
        ((void (*)(char *, uint64_t))v38)(v19, v45);
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_100216A4C;
        *(void *)(v29 + 24) = v27;
        aBlock[4] = sub_100276768;
        aBlock[5] = v29;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        void aBlock[2] = sub_10010A4D4;
        aBlock[3] = &unk_100E0B428;
        unint64_t v30 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        char v31 = v39;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100128B0C((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10017DF08(&qword_100E75530);
        sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
        uint64_t v32 = v41;
        uint64_t v33 = v37;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        uint64_t v34 = v44;
        uint64_t v35 = (void *)v36[0];
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v33);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v42);
        ((void (*)(char *, uint64_t))v38)(v34, v45);
        swift_release();
        swift_release();
        goto LABEL_12;
      }
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      sub_10008704C(a5, a6, (uint64_t)v48, v22, a7, v26);
    }
    swift_release();
LABEL_12:
    swift_release();
    sub_1001781AC((uint64_t)v48, &qword_100E647A8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001B09A4(uint64_t a1)
{
  uint64_t v1 = (unsigned char *)(*(void *)(a1 + 64) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment);
  swift_beginAccess();
  if (*v1) {
    return 1;
  }
  if ((sub_100B311D0() & 1) == 0) {
    return 0;
  }
  if (DeviceIsSlow()) {
    return 0x3FB999999999999ALL;
  }
  return 0;
}

void sub_1001B0A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = UnsafeMutableRawPointer.hashValue.getter();
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 16);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1002109DC(v6), (v9 & 1) != 0)) {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  }
  else {
    uint64_t v10 = 0;
  }
  swift_endAccess();
  uint64_t v11 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_100210878();
    swift_endAccess();
    if (qword_100E62828 == -1) {
      goto LABEL_7;
    }
  }
  swift_once();
LABEL_7:
  uint64_t v12 = type metadata accessor for Logger();
  sub_1002102B0(v12, (uint64_t)qword_100F51F80);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315906;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2080;
    sub_10016414C(0x776569566E69614DLL, 0xED00006C65646F4DLL, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 32) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v16 = [self sharedApplication];
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v6;
  v18[4] = v11;
  v18[5] = a2;
  v18[6] = a3;
  aBlock[4] = (uint64_t)sub_100115DB4;
  aBlock[5] = (uint64_t)v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = (uint64_t)sub_10010A4D4;
  aBlock[3] = (uint64_t)&unk_100E0BA18;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v16 installCACommitCompletionBlock:v19];
  _Block_release(v19);
}

void sub_1001B0DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = UnsafeMutableRawPointer.hashValue.getter();
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 16);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1002109DC(v6), (v9 & 1) != 0)) {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  }
  else {
    uint64_t v10 = 0;
  }
  swift_endAccess();
  uint64_t v11 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_100210878();
    swift_endAccess();
    if (qword_100E62828 == -1) {
      goto LABEL_7;
    }
  }
  swift_once();
LABEL_7:
  uint64_t v12 = type metadata accessor for Logger();
  sub_1002102B0(v12, (uint64_t)qword_100F51F80);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315906;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    sub_10016414C(0xD000000000000013, 0x8000000100C970D0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2080;
    sub_10016414C(0xD000000000000017, 0x8000000100C970F0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 32) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v16 = [self sharedApplication];
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v6;
  v18[4] = v11;
  v18[5] = a2;
  v18[6] = a3;
  aBlock[4] = (uint64_t)sub_100115E04;
  aBlock[5] = (uint64_t)v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = (uint64_t)sub_10010A4D4;
  aBlock[3] = (uint64_t)&unk_100E0B478;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v16 installCACommitCompletionBlock:v19];
  _Block_release(v19);
}

void sub_1001B11C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = UnsafeMutableRawPointer.hashValue.getter();
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 16);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1002109DC(v6), (v9 & 1) != 0)) {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  }
  else {
    uint64_t v10 = 0;
  }
  swift_endAccess();
  uint64_t v11 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_100210878();
    swift_endAccess();
    if (qword_100E62828 == -1) {
      goto LABEL_7;
    }
  }
  swift_once();
LABEL_7:
  uint64_t v12 = type metadata accessor for Logger();
  sub_1002102B0(v12, (uint64_t)qword_100F51F80);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315906;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    sub_10016414C(0x6E6F697461636F4CLL, 0xED00007475706E49, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2080;
    sub_10016414C(0xD000000000000011, 0x8000000100C97060, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 32) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v16 = [self sharedApplication];
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v6;
  v18[4] = v11;
  v18[5] = a2;
  v18[6] = a3;
  aBlock[4] = (uint64_t)sub_100115E48;
  aBlock[5] = (uint64_t)v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = (uint64_t)sub_10010A4D4;
  aBlock[3] = (uint64_t)&unk_100E0B1A8;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v16 installCACommitCompletionBlock:v19];
  _Block_release(v19);
}

void sub_1001B1588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = UnsafeMutableRawPointer.hashValue.getter();
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 16);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1002109DC(v6), (v9 & 1) != 0)) {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  }
  else {
    uint64_t v10 = 0;
  }
  swift_endAccess();
  uint64_t v11 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_100210878();
    swift_endAccess();
    if (qword_100E62828 == -1) {
      goto LABEL_7;
    }
  }
  swift_once();
LABEL_7:
  uint64_t v12 = type metadata accessor for Logger();
  sub_1002102B0(v12, (uint64_t)qword_100F51F80);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315906;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    sub_10016414C(0xD00000000000002BLL, 0x8000000100C97080, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2080;
    sub_10016414C(0xD00000000000001FLL, 0x8000000100C970B0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 32) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v16 = [self sharedApplication];
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v6;
  v18[4] = v11;
  v18[5] = a2;
  v18[6] = a3;
  aBlock[4] = (uint64_t)sub_100115E88;
  aBlock[5] = (uint64_t)v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = (uint64_t)sub_10010A4D4;
  aBlock[3] = (uint64_t)&unk_100E0B310;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v16 installCACommitCompletionBlock:v19];
  _Block_release(v19);
}

uint64_t sub_1001B194C(uint64_t a1)
{
  uint64_t v1 = (unsigned char *)(*(void *)(a1 + 64) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment);
  swift_beginAccess();
  if (*v1) {
    return 1;
  }
  if (sub_100B311D0()) {
    return 0x3FB999999999999ALL;
  }
  return 0;
}

uint64_t sub_1001B19C8(uint64_t a1)
{
  uint64_t v1 = (unsigned char *)(*(void *)(a1 + 64) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment);
  swift_beginAccess();
  if (*v1) {
    return 1;
  }
  if (sub_100B311D0()) {
    return 0x3FA999999999999ALL;
  }
  return 0;
}

uint64_t sub_1001B1A48()
{
  return *(void *)(v0 + 16);
}

void *sub_1001B1A54@<X0>(void *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v37 = a5;
  uint64_t v34 = a4;
  uint64_t v8 = type metadata accessor for UUID();
  __chkstk_darwin(v8 - 8);
  uint64_t v36 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel();
  __chkstk_darwin(v10 - 8);
  uint64_t v35 = (uint64_t)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for PressureComponentPreprocessedDataModel();
  __chkstk_darwin(v12 - 8);
  uint64_t v42 = (uint64_t)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
  __chkstk_darwin(v14 - 8);
  id v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ListPreprocessedDataModel();
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v31 = v19;
  uint64_t v20 = type metadata accessor for HourlyForecastComponentPreprocessedDataModel();
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (uint64_t *)((char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = v22;
  uint64_t v23 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  __chkstk_darwin(v23 - 8);
  char v25 = (uint64_t *)((char *)&v31 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1001B1E64(a1 + 4, a1[7]);
  uint64_t v33 = sub_1001B64D0((uint64_t)a2, a3);
  sub_1001B1E64(a1 + 9, a1[12]);
  sub_1001B4B90((uint64_t)a2, v25);
  sub_1001B1E64(a1 + 14, a1[17]);
  sub_1001A603C((uint64_t)a2, a3, v22);
  sub_1001B1E64(a1 + 19, a1[22]);
  uint64_t v26 = v19;
  uint64_t v27 = v34;
  sub_1001B3AD0(a2, v34, v26);
  sub_1001B1E64(a1 + 24, a1[27]);
  sub_1001B1EA8((uint64_t)a2, a3, v38);
  sub_1001B1E64(a1 + 29, a1[32]);
  sub_1001B694C(a3, (uint64_t)v16);
  sub_1001B1E64(a1 + 34, a1[37]);
  sub_1001D4240((uint64_t)a2, v39);
  sub_1001B1E64(a1 + 39, a1[42]);
  sub_1001C1CF4(v42);
  sub_1001B1E64(a1 + 44, a1[47]);
  sub_1001C2950(a2, v40);
  sub_1001B1E64(a1 + 49, a1[52]);
  uint64_t v28 = v35;
  sub_1001E4CD0((uint64_t)a2, v27, v35);
  sub_1001B1E64(a1 + 54, a1[57]);
  sub_1001D5960((uint64_t)a2, a3, v41);
  uint64_t v29 = (uint64_t)v36;
  UUID.init()();
  return sub_1001E6F7C(v29, v33, (uint64_t)v25, (uint64_t)v32, (uint64_t)v31, v38, (uint64_t)v16, v39, v37, v42, v40, v28, v41);
}

void *sub_1001B1E64(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_1001B1EA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v164 = a2;
  uint64_t v144 = a3;
  uint64_t v143 = type metadata accessor for PrecipitationTotalStringAmount();
  sub_100179C0C();
  uint64_t v142 = v5;
  __chkstk_darwin(v6);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v7);
  sub_100128F8C();
  uint64_t v140 = v8;
  uint64_t v9 = sub_10017DF08(&qword_100E9A638);
  __chkstk_darwin(v9 - 8);
  sub_100109314();
  sub_100109328(v10);
  uint64_t v155 = type metadata accessor for PrecipitationComponentDescriptionContext();
  sub_100179C0C();
  uint64_t v137 = v11;
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v134 = v13;
  uint64_t v154 = sub_10017DF08(&qword_100E6B648);
  sub_100179C0C();
  uint64_t v135 = v14;
  __chkstk_darwin(v15);
  sub_100109314();
  sub_100109328(v16);
  uint64_t v139 = type metadata accessor for PrecipitationTotalHeroString();
  sub_100179C0C();
  uint64_t v138 = v17;
  __chkstk_darwin(v18);
  sub_100109314();
  uint64_t v158 = v19;
  uint64_t v20 = sub_10017DF08(&qword_100E6B6C8);
  __chkstk_darwin(v20 - 8);
  sub_100109314();
  sub_100109328(v21);
  uint64_t v148 = type metadata accessor for DayWeather();
  sub_100179C0C();
  uint64_t v145 = v22;
  __chkstk_darwin(v23);
  sub_100109314();
  uint64_t v165 = v24;
  sub_10017DF08(&qword_100E66CA0);
  sub_100179C0C();
  uint64_t v159 = v25;
  uint64_t v160 = v26;
  __chkstk_darwin(v25);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v27);
  sub_100179C90();
  __chkstk_darwin(v28);
  sub_100179C90();
  __chkstk_darwin(v29);
  sub_100128F8C();
  uint64_t v161 = v30;
  uint64_t v31 = type metadata accessor for WeatherMetadata();
  __chkstk_darwin(v31 - 8);
  sub_100109314();
  uint64_t v146 = v32;
  uint64_t v163 = sub_10017DF08(&qword_100E66CC8);
  sub_100179C0C();
  uint64_t v152 = v33;
  __chkstk_darwin(v34);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v35);
  sub_100179C90();
  __chkstk_darwin(v36);
  sub_100128F8C();
  uint64_t v162 = v37;
  uint64_t v147 = type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v39 = v38;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)v120 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for CurrentWeather();
  sub_100179C0C();
  uint64_t v45 = v44;
  __chkstk_darwin(v46);
  sub_10011C760();
  uint64_t v47 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v49 = v48;
  uint64_t v51 = __chkstk_darwin(v50);
  uint64_t v53 = (char *)v120 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51);
  sub_100128F8C();
  uint64_t v55 = sub_100109328(v54);
  uint64_t v56 = *(int *)(type metadata accessor for WeatherData(v55) + 24);
  uint64_t v132 = a1;
  uint64_t v57 = a1 + v56;
  WeatherDataModel.currentWeather.getter();
  CurrentWeather.date.getter();
  uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
  uint64_t v150 = v3;
  uint64_t v122 = (void (*)(uint64_t, uint64_t, uint64_t))v43;
  uint64_t v121 = v45 + 8;
  v120[2] = v58;
  v58(v3, v43);
  Location.timeZone.getter();
  uint64_t v59 = v157;
  Date.startOfDay(timeZone:)();
  uint64_t v60 = *(void (**)(char *, uint64_t))(v39 + 8);
  uint64_t v151 = v42;
  uint64_t countAndFlagsBits = v39 + 8;
  v120[1] = v60;
  v60(v42, v147);
  uint64_t v61 = *(void (**)(void, void))(v49 + 8);
  uint64_t v131 = v47;
  uint64_t v130 = v49 + 8;
  uint64_t v129 = v61;
  v61(v53, v47);
  WeatherDataModel.hourlyForecast.getter();
  uint64_t v170 = v59;
  uint64_t v62 = v59;
  sub_10019E290((uint64_t)sub_1001A370C, (uint64_t)v169);
  uint64_t v63 = v153;
  WeatherDataModel.hourlyForecast.getter();
  uint64_t v64 = v163;
  Forecast.metadata.getter();
  uint64_t v65 = *(void (**)(void, void))(v152 + 8);
  uint64_t v128 = v152 + 8;
  uint64_t v127 = v65;
  v65(v63, v64);
  type metadata accessor for HourWeather();
  sub_1001A3960(&qword_100E712F0, (void (*)(uint64_t))&type metadata accessor for HourWeather);
  sub_1001A3960(&qword_100E712F8, (void (*)(uint64_t))&type metadata accessor for HourWeather);
  sub_1001A3960(&qword_100E71300, (void (*)(uint64_t))&type metadata accessor for HourWeather);
  Forecast.init(_:metadata:)();
  WeatherDataModel.dailyForecast.getter();
  uint64_t v168 = v62;
  sub_1001B31D0((uint64_t)sub_1001B36AC, (uint64_t)v167);
  uint64_t v156 = v57;
  WeatherDataModel.dailyForecast.getter();
  uint64_t v66 = v159;
  Forecast.metadata.getter();
  uint64_t v67 = v160;
  uint64_t v68 = v160;
  uint64_t v149 = *(void *)(v160 + 8);
  sub_10016285C();
  v69();
  sub_1001A3960(&qword_100E71318, (void (*)(uint64_t))&type metadata accessor for DayWeather);
  sub_1001A3960(&qword_100E71320, (void (*)(uint64_t))&type metadata accessor for DayWeather);
  sub_1001A3960(&qword_100E71328, (void (*)(uint64_t))&type metadata accessor for DayWeather);
  uint64_t v70 = v161;
  uint64_t v71 = v125;
  uint64_t v72 = v148;
  Forecast.init(_:metadata:)();
  uint64_t v166 = v157;
  sub_10019AB54();
  uint64_t v73 = *(void (**)(void, void, void))(v67 + 16);
  uint64_t v160 = v67 + 16;
  uint64_t v146 = v73;
  v73(object, v70, v66);
  int v74 = _s7Weather24LocationCompositionStateOwet_0(v71, 1, v72);
  uint64_t v126 = v68 + 8;
  if (v74 == 1)
  {
    uint64_t v75 = Forecast.startIndex.getter();
    sub_1001B3738(v75);
    Forecast.subscript.getter();
    sub_10016285C();
    v76();
    sub_1001B4AE8(v71);
  }
  else
  {
    sub_10016285C();
    v77();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v145 + 32))(v165, v71, v72);
  }
  uint64_t v78 = v133;
  sub_1001B1E64((void *)(v133 + 64), *(void *)(v133 + 88));
  sub_10018180C();
  Location.timeZone.getter();
  uint64_t v79 = v162;
  dispatch thunk of PrecipitationTotalHeroStringBuilderType.buildTodayString(currentWeather:hourlyForecast:dayWeather:timeZone:)();
  sub_100180528();
  v80();
  sub_100180528();
  v81();
  uint64_t v132 = sub_1001B37D0(v78, v132, v161);
  uint64_t v125 = v82;
  id v83 = [self mainBundle];
  v171._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
  v171._object = (void *)0x8000000100CB4290;
  v84._object = (void *)0x8000000100CB4260;
  v84._uint64_t countAndFlagsBits = 0xD000000000000024;
  v85._uint64_t countAndFlagsBits = 0x7469706963657250;
  v85._object = (void *)0xED00006E6F697461;
  Swift::String v86 = NSLocalizedString(_:tableName:bundle:value:comment:)(v84, (Swift::String_optional)0, (NSBundle)v83, v85, v171);
  uint64_t countAndFlagsBits = v86._countAndFlagsBits;
  object = v86._object;

  uint64_t v147 = *(void *)(v78 + 16);
  DayWeather.precipitationAmount.getter();
  sub_10018180C();
  sub_1001A2540();
  v87();
  uint64_t v122 = *(void (**)(uint64_t, uint64_t, uint64_t))(v152 + 16);
  uint64_t v88 = v153;
  v122(v153, v79, v163);
  Location.timeZone.getter();
  uint64_t v89 = v136;
  PrecipitationTotalHeroString.type.getter();
  uint64_t v121 = type metadata accessor for DominantPrecipitation();
  _s7Weather24LocationCompositionStateOwst_0(v89, 0, 1, v121);
  PrecipitationTotalHeroString.isDescriptionAllowedToShowNext24HourTotal.getter();
  uint64_t v90 = v134;
  PrecipitationComponentDescriptionContext.init(currentWeather:dailyForecast:hourlyForecast:timeZone:heroStringPrecipitationType:isAllowedToShowNext24HourTotal:)();
  uint64_t v152 = StringBuilder.makeString(for:data:formattedForAccessibility:)();
  uint64_t v133 = v91;
  uint64_t v137 = *(void *)(v137 + 8);
  ((void (*)(uint64_t, uint64_t))v137)(v90, v155);
  uint64_t v135 = *(void *)(v135 + 8);
  sub_10016285C();
  v92();
  DayWeather.precipitationAmount.getter();
  sub_10018180C();
  sub_1001A2540();
  v93();
  v122(v88, v162, v163);
  Location.timeZone.getter();
  uint64_t v94 = v158;
  PrecipitationTotalHeroString.type.getter();
  _s7Weather24LocationCompositionStateOwst_0(v89, 0, 1, v121);
  uint64_t v95 = v94;
  PrecipitationTotalHeroString.isDescriptionAllowedToShowNext24HourTotal.getter();
  PrecipitationComponentDescriptionContext.init(currentWeather:dailyForecast:hourlyForecast:timeZone:heroStringPrecipitationType:isAllowedToShowNext24HourTotal:)();
  uint64_t v164 = StringBuilder.makeString(for:data:formattedForAccessibility:)();
  uint64_t v160 = v96;
  ((void (*)(uint64_t, uint64_t))v137)(v90, v155);
  sub_10016285C();
  v97();
  uint64_t v98 = v140;
  PrecipitationTotalHeroString.amount.getter();
  uint64_t v99 = PrecipitationTotalStringAmount.formattedString.getter();
  uint64_t v101 = v100;
  uint64_t v102 = *(void (**)(uint64_t, uint64_t))(v142 + 8);
  uint64_t v103 = v143;
  v102(v98, v143);
  uint64_t v104 = v141;
  PrecipitationTotalHeroString.amount.getter();
  uint64_t v105 = PrecipitationTotalStringAmount.formattedAccessibleString.getter();
  uint64_t v107 = v106;
  v102(v104, v103);
  uint64_t v108 = PrecipitationTotalHeroString.shortSubtitle.getter();
  uint64_t v110 = v109;
  (*(void (**)(uint64_t, uint64_t))(v138 + 8))(v95, v139);
  (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v165, v148);
  sub_100180528();
  v111();
  sub_100180528();
  v112();
  sub_100180528();
  uint64_t result = v113();
  uint64_t v115 = v144;
  uint64_t *v144 = v99;
  v115[1] = v101;
  v115[2] = v105;
  v115[3] = v107;
  v115[4] = v108;
  v115[5] = v110;
  uint64_t v116 = v133;
  v115[6] = v152;
  v115[7] = v116;
  uint64_t v117 = v160;
  v115[8] = v164;
  v115[9] = v117;
  uint64_t v118 = (uint64_t)object;
  v115[10] = countAndFlagsBits;
  v115[11] = v118;
  uint64_t v119 = v125;
  v115[12] = v132;
  v115[13] = v119;
  return result;
}

void *sub_1001B2DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v58 = a5;
  uint64_t v48 = a4;
  uint64_t v53 = a3;
  sub_10017DF08(&qword_100E66CA0);
  sub_100179C0C();
  uint64_t v56 = v7;
  uint64_t v57 = v6;
  __chkstk_darwin(v6);
  uint64_t v54 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v9);
  uint64_t v55 = (char *)&v48 - v10;
  uint64_t v52 = type metadata accessor for CurrentWeather();
  sub_100179C0C();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_10016279C();
  uint64_t v59 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v15 = v14;
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v60 = (char *)&v48 - v20;
  sub_1001626D4();
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v48 - v23;
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v48 - v25;
  type metadata accessor for Calendar();
  sub_100179C0C();
  uint64_t v49 = v28;
  uint64_t v50 = v27;
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v48 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.currentCalendar(with:)();
  type metadata accessor for WeatherData(0);
  WeatherDataModel.currentWeather.getter();
  CurrentWeather.date.getter();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v5, v52);
  IsSameDayCache.startOfDay(_:calendar:)();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v15 + 8);
  uint64_t v32 = v59;
  v31(v24, v59);
  uint64_t v51 = v26;
  if (v53 < 1) {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v19, v26, v32);
  }
  else {
    Date.wc_addDays(_:calendar:)();
  }
  uint64_t v33 = (uint64_t)v60;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v60, v19, v32);
  uint64_t v34 = v55;
  WeatherDataModel.dailyForecast.getter();
  uint64_t v36 = v56;
  uint64_t v35 = v57;
  uint64_t v37 = (*(uint64_t (**)(char *, char *, uint64_t))(v56 + 16))(v54, v34, v57);
  __chkstk_darwin(v37);
  *(&v48 - 2) = v33;
  uint64_t v38 = sub_1001B31D0((uint64_t)sub_1001B34D8, (uint64_t)(&v48 - 4));
  (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v35);
  if ((v58 & 1) == 0)
  {
    uint64_t v39 = sub_1001A6E70(v48, (uint64_t)v38, (uint64_t (*)(void, uint64_t, void, uint64_t))sub_1001A6F7C, (uint64_t (*)(void))&type metadata accessor for DayWeather);
    uint64_t v38 = sub_1001B64B8(v39, v40, v41, v42);
  }
  uint64_t v43 = v59;
  uint64_t v45 = v50;
  uint64_t v44 = v51;
  uint64_t v46 = v49;
  v31(v60, v59);
  v31(v44, v43);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v30, v45);
  return v38;
}

uint64_t *sub_1001B31D0(uint64_t a1, uint64_t a2)
{
  v40[10] = a1;
  v40[11] = a2;
  uint64_t v4 = &qword_100E66CA0;
  sub_10017DF08(&qword_100E66CA0);
  sub_100179C0C();
  v40[4] = v5;
  __chkstk_darwin(v6);
  sub_100181024(v7, v40[0]);
  v40[3] = type metadata accessor for DayWeather();
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_1001D17A4(v11, v40[0]);
  __chkstk_darwin(v12);
  v40[8] = (uint64_t)v40 - v13;
  sub_1001626D4();
  uint64_t v15 = __chkstk_darwin(v14);
  sub_1001828F0(v15, v16, v17, v18, v19, v20, v21, v22, v40[0]);
  uint64_t v23 = sub_10017DF08(&qword_100E66CA8);
  __chkstk_darwin(v23);
  sub_10008B8C0();
  uint64_t v43 = (uint64_t *)&_swiftEmptyArrayStorage;
  sub_1001246C8((unint64_t *)&qword_100E66CB0, &qword_100E66CA0);
  dispatch thunk of Sequence.makeIterator()();
  sub_1001246C8((unint64_t *)&qword_100E66CB8, &qword_100E66CA0);
  sub_10017E080();
  sub_100185190();
  if (v24)
  {
    uint64_t v25 = v41;
    uint64_t v4 = (uint64_t *)&_swiftEmptyArrayStorage;
LABEL_16:
    sub_1001B36E0(v25, &qword_100E66CA8);
  }
  else
  {
    sub_10017F904();
    while (1)
    {
      sub_1001A30CC();
      uint64_t v26 = sub_1001A049C();
      v27(v26);
      uint64_t v28 = sub_100182EE0();
      ((void (*)(uint64_t))v9)(v28);
      uint64_t v29 = sub_1001A1C84();
      v30(v29);
      sub_10018591C();
      sub_100162F0C();
      v31();
      uint64_t v9 = *v3;
      uint64_t v25 = v42;
      sub_10019E774();
      v9();
      uint64_t v32 = sub_1001A2B18();
      char v34 = v33(v32);
      if (v2) {
        break;
      }
      if (v34)
      {
        sub_10019E774();
        v9();
        uint64_t v25 = (uint64_t)v43;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100188F4C();
          sub_1001B3648();
          uint64_t v25 = (uint64_t)v43;
        }
        if (*(void *)(v25 + 16) >= *(void *)(v25 + 24) >> 1)
        {
          sub_1001B3648();
          uint64_t v25 = (uint64_t)v43;
        }
        unint64_t v35 = sub_10017C8EC();
        ((void (*)(unint64_t))v9)(v35);
        uint64_t v43 = (uint64_t *)v25;
      }
      else
      {
        uint64_t v36 = sub_1001A4534();
        v37(v36);
      }
      sub_1001A14FC();
      sub_100185190();
      if (v24)
      {
        uint64_t v4 = v43;
        goto LABEL_16;
      }
    }
    sub_100162F0C();
    v38();
    sub_1001B36E0(v41, &qword_100E66CA8);
    swift_release();
  }
  return v4;
}

BOOL sub_1001B34D8()
{
  return sub_1001B34F8();
}

BOOL sub_1001B34F8()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  DayWeather.date.getter();
  sub_1001B35F8();
  char v4 = dispatch thunk of static Comparable.< infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (v4 & 1) == 0;
}

unint64_t sub_1001B35F8()
{
  unint64_t result = qword_100E66CC0;
  if (!qword_100E66CC0)
  {
    type metadata accessor for Date();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E66CC0);
  }
  return result;
}

void sub_1001B3648()
{
  sub_10018A6B4();
  *uint64_t v0 = v1;
}

BOOL sub_1001B36AC(uint64_t a1)
{
  return sub_1001A3740(a1, *(void *)(v1 + 16), (void (*)(void))&DayWeather.date.getter);
}

uint64_t sub_1001B36E0(uint64_t a1, uint64_t *a2)
{
  sub_10017DF08(a2);
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_1001B3738(uint64_t a1)
{
  sub_10017DF08(&qword_100E66CA0);
  sub_1001B4A94();
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  dispatch thunk of Collection._failEarlyRangeCheck(_:bounds:)();
  uint64_t result = a1 + 1;
  if (__OFADD__(a1, 1)) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001B37D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v19[1] = a3;
  v19[0] = type metadata accessor for CurrentWeather();
  uint64_t v4 = *(void *)(v19[0] - 8);
  __chkstk_darwin(v19[0]);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DominantPrecipitation();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v19 - v12;
  sub_1001B1E64((void *)(a1 + 24), *(void *)(a1 + 48));
  type metadata accessor for WeatherData(0);
  WeatherDataModel.currentWeather.getter();
  dispatch thunk of PrecipitationCalculatorType.findUniquePrecipitation(currentWeather:dailyForecast:)();
  (*(void (**)(char *, void))(v4 + 8))(v6, v19[0]);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  int v14 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v11, v7);
  if (v14 == enum case for DominantPrecipitation.none(_:)) {
    goto LABEL_2;
  }
  if (v14 == enum case for DominantPrecipitation.wintryMix(_:))
  {
    uint64_t v15 = 0x61682E64756F6C63;
    goto LABEL_7;
  }
  if (v14 == enum case for DominantPrecipitation.snowfall(_:))
  {
    uint64_t v15 = 0x6B616C66776F6E73;
    goto LABEL_7;
  }
  BOOL v17 = v14 == enum case for DominantPrecipitation.rainfall(_:) || v14 == enum case for DominantPrecipitation.sleet(_:);
  if (v17 || v14 == enum case for DominantPrecipitation.generic(_:))
  {
LABEL_2:
    uint64_t v15 = 0x6C69662E706F7264;
LABEL_7:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    return v15;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B3AD0@<X0>(char *a1@<X0>, void (*a2)(void)@<X2>, void *a3@<X8>)
{
  uint64_t v145 = a2;
  uint64_t v137 = a1;
  uint64_t v135 = a3;
  type metadata accessor for WeatherFormatPlaceholder();
  sub_100179C0C();
  uint64_t v147 = v5;
  uint64_t v148 = v4;
  __chkstk_darwin(v4);
  sub_100109314();
  sub_100109338(v6);
  uint64_t v7 = sub_10017DF08(&qword_100E63730);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100109328((uint64_t)v126 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v143 = type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle();
  sub_100179C0C();
  uint64_t v150 = v10;
  __chkstk_darwin(v11);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v12);
  sub_100128F8C();
  uint64_t v144 = v13;
  uint64_t v146 = sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  uint64_t v151 = v14;
  __chkstk_darwin(v15);
  sub_100109314();
  uint64_t v155 = v16;
  uint64_t v142 = type metadata accessor for CurrentWeather();
  sub_100179C0C();
  uint64_t v152 = v17;
  __chkstk_darwin(v18);
  sub_100109314();
  unint64_t v141 = v19;
  sub_100129064();
  uint64_t v139 = (void (*)(uint64_t))type metadata accessor for Locale.Language();
  sub_100179C0C();
  uint64_t v138 = v20;
  __chkstk_darwin(v21);
  sub_100109314();
  sub_100109328(v22);
  uint64_t v136 = type metadata accessor for Locale();
  sub_100179C0C();
  uint64_t v127 = v23;
  __chkstk_darwin(v24);
  sub_100109314();
  sub_100109338(v25);
  uint64_t v26 = sub_10017DF08(&qword_100E63850);
  uint64_t v27 = sub_100109308(v26);
  __chkstk_darwin(v27);
  sub_100109314();
  sub_100109338(v28);
  uint64_t v29 = sub_10017DF08(&qword_100E639E8);
  uint64_t v30 = sub_100109308(v29);
  __chkstk_darwin(v30);
  sub_1001626E0();
  uint64_t v33 = v32 - v31;
  uint64_t v34 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v35 = sub_100109308(v34);
  __chkstk_darwin(v35);
  sub_100109314();
  uint64_t v149 = v36;
  uint64_t v153 = sub_10017DF08(&qword_100E66CA0);
  sub_100179C0C();
  uint64_t v38 = v37;
  __chkstk_darwin(v39);
  sub_10016279C();
  uint64_t v40 = sub_10017DF08(&qword_100E6B6C8);
  uint64_t v41 = sub_100109308(v40);
  __chkstk_darwin(v41);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v42);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)v126 - v44;
  uint64_t v46 = type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v48 = v47;
  __chkstk_darwin(v49);
  sub_1001626E0();
  uint64_t v52 = v51 - v50;
  uint64_t v134 = type metadata accessor for Calendar();
  sub_100179C0C();
  uint64_t v133 = v53;
  __chkstk_darwin(v54);
  sub_1001626E0();
  uint64_t v57 = v56 - v55;
  Location.timeZone.getter();
  static Calendar.currentCalendar(with:)();
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v52, v46);
  uint64_t v58 = type metadata accessor for WeatherData(0);
  uint64_t v59 = (void (*)(void, void))v137;
  uint64_t v60 = &v137[*(int *)(v58 + 24)];
  WeatherDataModel.dailyForecast.getter();
  uint64_t v132 = v57;
  uint64_t v157 = v57;
  uint64_t v158 = v59;
  uint64_t v61 = (uint64_t)v59;
  uint64_t v154 = v45;
  sub_10019AB54();
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v3, v153);
  uint64_t v153 = type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  uint64_t v62 = UnitManager.temperature.getter();
  swift_release();
  uint64_t v63 = v140;
  uint64_t v64 = *(void **)(v140 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_temperatureUnitUsedToPreprocess);
  *(void *)(v140 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_temperatureUnitUsedToPreprocess) = v62;
  uint64_t v65 = v63;

  sub_1001B1E64((void *)(v65 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_weatherConditionBackgroundTimeDataFactory), *(void *)(v65 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_weatherConditionBackgroundTimeDataFactory + 24));
  sub_100162708();
  uint64_t v66 = type metadata accessor for Location();
  sub_100162E4C();
  sub_10008B8B4();
  v67();
  _s7Weather24LocationCompositionStateOwst_0(v33, 0, 1, v66);
  sub_100188AA0(v61, (uint64_t)v156);
  sub_100179088();
  sub_10020D9C0(v33, v65, v145, v149);
  uint64_t v68 = v155;
  sub_100178110(v65, &qword_100E63850);
  sub_100178110(v33, &qword_100E639E8);
  sub_100162868();
  static Locale.current.getter();
  Locale.language.getter();
  uint64_t v69 = v136;
  sub_100162F0C();
  v70();
  LOBYTE(v65) = Locale.Language.prefersFullTemperatureScale.getter();
  sub_10012BF98();
  sub_10017F874();
  v71();
  v126[5] = v60;
  WeatherDataModel.currentWeather.getter();
  CurrentWeather.temperature.getter();
  uint64_t v72 = *(void (**)(void))(v152 + 8);
  v152 += 8;
  sub_100127BA4();
  v72();
  if (v65)
  {
    static Set<>.value.getter();
    uint64_t v73 = v126[3];
    sub_100181514();
    _s7Weather24LocationCompositionStateOwst_0(v74, v75, v76, v69);
    uint64_t v77 = v144;
    static WeatherFormatStyle<>.weather(_:locale:)();
    swift_bridgeObjectRelease();
    sub_100178110(v73, &qword_100E63730);
    LODWORD(v140) = enum case for WeatherFormatPlaceholder.none(_:);
    uint64_t v78 = v147;
    uint64_t v139 = *(void (**)(uint64_t))(v147 + 104);
    v126[4] = v147 + 104;
    uint64_t v79 = v131;
    uint64_t v80 = v148;
    v139(v131);
    v126[1] = v72;
    static UnitManager.standard.getter();
    v126[2] = sub_100186EA0((unint64_t *)&qword_100E6BF60, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
    uint64_t v81 = v146;
    uint64_t v82 = v143;
    uint64_t v83 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    sub_10019D1F0(v83, v84);
    swift_release();
    uint64_t v138 = *(void (**)(uint64_t, uint64_t))(v78 + 8);
    v138(v79, v80);
    uint64_t v145 = *(void (**)(void))(v150 + 8);
    ((void (*)(uint64_t, uint64_t))v145)(v77, v82);
    uint64_t v137 = *(char **)(v151 + 8);
    ((void (*)(uint64_t, uint64_t))v137)(v155, v81);
    WeatherDataModel.currentWeather.getter();
    CurrentWeather.temperature.getter();
    sub_100127BA4();
    v85();
    static Set<>.unit.getter();
    sub_100181514();
    _s7Weather24LocationCompositionStateOwst_0(v86, v87, v88, v136);
    static WeatherFormatStyle<>.weather(_:locale:)();
    swift_bridgeObjectRelease();
    sub_100178110(v73, &qword_100E63730);
    sub_10018A984();
    v89();
    static UnitManager.standard.getter();
    uint64_t v90 = v77;
    uint64_t v91 = v143;
    uint64_t v152 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    uint64_t v142 = v92;
    swift_release();
    v138(v79, v80);
    uint64_t v68 = v155;
    ((void (*)(uint64_t, uint64_t))v145)(v90, v91);
    ((void (*)(uint64_t, uint64_t))v137)(v68, v81);
  }
  else
  {
    static WeatherFormatStyle<>.weather.getter();
    uint64_t v93 = v147;
    uint64_t v94 = *(void (**)(uint64_t))(v147 + 104);
    LODWORD(v140) = enum case for WeatherFormatPlaceholder.none(_:);
    uint64_t v139 = v94;
    v94(v131);
    static UnitManager.standard.getter();
    sub_100186EA0((unint64_t *)&qword_100E6BF60, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
    uint64_t v95 = v146;
    uint64_t v96 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    sub_10019D1F0(v96, v97);
    swift_release();
    uint64_t v138 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
    sub_100127BA4();
    v98();
    uint64_t v145 = *(void (**)(void))(v150 + 8);
    sub_100127BA4();
    v99();
    uint64_t v137 = *(char **)(v151 + 8);
    sub_100127BA4();
    v100();
    uint64_t v152 = 0;
    uint64_t v142 = 0;
    uint64_t v81 = v95;
  }
  uint64_t v101 = v129;
  sub_1001B49E8((uint64_t)v154, v129, &qword_100E6B6C8);
  uint64_t v102 = type metadata accessor for DayWeather();
  sub_10012B520(v101, 1, v102);
  if (v103)
  {
    sub_100178110(v101, &qword_100E6B6C8);
    unint64_t v141 = 0xE200000000000000;
    uint64_t v136 = 11565;
  }
  else
  {
    DayWeather.highTemperature.getter();
    sub_100162F0C();
    v104();
    static WeatherFormatStyle<>.weather.getter();
    NSUnitTemperature.BaseWeatherFormatStyle.secondary.getter();
    uint64_t v105 = v145;
    sub_100183838();
    v105();
    sub_10018A984();
    v106();
    static UnitManager.standard.getter();
    sub_100186EA0((unint64_t *)&qword_100E6BF60, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
    uint64_t v136 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    unint64_t v141 = v107;
    swift_release();
    sub_100127BA4();
    v108();
    uint64_t v68 = v155;
    sub_100183838();
    v105();
    uint64_t v81 = v146;
    ((void (*)(uint64_t, uint64_t))v137)(v68, v146);
  }
  uint64_t v109 = v130;
  sub_1001B49E8((uint64_t)v154, v130, &qword_100E6B6C8);
  sub_10012B520(v109, 1, v102);
  if (v103)
  {
    sub_100178110(v109, &qword_100E6B6C8);
    unint64_t v116 = 0xE200000000000000;
    uint64_t v114 = 11565;
  }
  else
  {
    DayWeather.lowTemperature.getter();
    sub_100162F0C();
    v110();
    static WeatherFormatStyle<>.weather.getter();
    NSUnitTemperature.BaseWeatherFormatStyle.secondary.getter();
    v150 += 8;
    sub_100162F0C();
    v111();
    sub_10018A984();
    v112();
    static UnitManager.standard.getter();
    sub_100186EA0((unint64_t *)&qword_100E6BF60, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
    uint64_t v113 = v81;
    uint64_t v114 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    unint64_t v116 = v115;
    swift_release();
    sub_100127BA4();
    v117();
    sub_100162F0C();
    v118();
    ((void (*)(uint64_t, uint64_t))v137)(v68, v113);
  }
  sub_100178110((uint64_t)v154, &qword_100E6B6C8);
  uint64_t v119 = type metadata accessor for ListPreprocessedDataModel();
  uint64_t v120 = v135;
  sub_100150350(v149, (uint64_t)v135 + *(int *)(v119 + 32));
  uint64_t v121 = v127;
  *uint64_t v120 = v128;
  v120[1] = v121;
  uint64_t v122 = v142;
  v120[2] = v152;
  void v120[3] = v122;
  unint64_t v123 = v141;
  v120[4] = v136;
  v120[5] = v123;
  v120[6] = v114;
  v120[7] = v116;
  sub_10012BF98();
  sub_10017F874();
  return v124();
}

uint64_t sub_1001B49E8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100163E60(a1, a2, a3);
  sub_100162E4C();
  sub_10008B8B4();
  v4();
  return v3;
}

uint64_t sub_1001B4A34(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10017DF08(a3);
  sub_100162880();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

unint64_t sub_1001B4A94()
{
  unint64_t result = qword_100E66CB8;
  if (!qword_100E66CB8)
  {
    sub_10018C6DC(&qword_100E66CA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E66CB8);
  }
  return result;
}

uint64_t sub_1001B4AE8(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E6B6C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel()
{
  uint64_t result = qword_100E8F228;
  if (!qword_100E8F228) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001B4B90@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v118 = a1;
  unint64_t v107 = a2;
  uint64_t v4 = sub_10017DF08(&qword_100E63750);
  __chkstk_darwin(v4 - 8);
  sub_100162EF8();
  uint64_t v106 = v5;
  __chkstk_darwin(v6);
  uint64_t v105 = (uint64_t)v87 - v7;
  uint64_t v111 = type metadata accessor for WeatherFormatPlaceholder();
  sub_100179C0C();
  uint64_t countAndFlagsBits = v8;
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v110 = v10;
  uint64_t v11 = sub_10017DF08(&qword_100E63730);
  __chkstk_darwin(v11 - 8);
  sub_100109314();
  uint64_t v95 = v12;
  uint64_t v102 = type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle();
  sub_100179C0C();
  object = v13;
  __chkstk_darwin(v14);
  sub_100109314();
  uint64_t v97 = v15;
  uint64_t v117 = sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  uint64_t v108 = v16;
  __chkstk_darwin(v17);
  sub_100109370();
  uint64_t v18 = type metadata accessor for CurrentWeather();
  sub_100179C0C();
  uint64_t v20 = v19;
  __chkstk_darwin(v21);
  sub_100162EF8();
  uint64_t v103 = v22;
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)v87 - v24;
  uint64_t v26 = type metadata accessor for Locale.Language();
  sub_100179C0C();
  uint64_t v28 = v27;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)v87 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for Locale();
  sub_100179C0C();
  uint64_t v34 = v33;
  __chkstk_darwin(v35);
  sub_100162EB8();
  static Locale.current.getter();
  Locale.language.getter();
  uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
  uint64_t v96 = v32;
  v36(v2, v32);
  LOBYTE(v34) = Locale.Language.prefersFullTemperatureScale.getter();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v26);
  uint64_t v101 = type metadata accessor for WeatherData(0);
  uint64_t v37 = v118 + *(int *)(v101 + 24);
  WeatherDataModel.currentWeather.getter();
  uint64_t v114 = v3;
  CurrentWeather.apparentTemperature.getter();
  uint64_t v38 = *(void (**)(char *, uint64_t))(v20 + 8);
  uint64_t v112 = v20 + 8;
  uint64_t v113 = v18;
  uint64_t v109 = v38;
  v38(v25, v18);
  if (v34)
  {
    static Set<>.value.getter();
    uint64_t v39 = v95;
    sub_10017AE28();
    uint64_t v90 = v37;
    uint64_t v88 = v25;
    static WeatherFormatStyle<>.weather(_:locale:)();
    swift_bridgeObjectRelease();
    sub_100178110(v39, &qword_100E63730);
    int v94 = enum case for WeatherFormatPlaceholder.none(_:);
    uint64_t v40 = countAndFlagsBits;
    uint64_t v41 = *(void *)(countAndFlagsBits + 104);
    uint64_t v92 = countAndFlagsBits + 104;
    uint64_t v93 = v41;
    uint64_t v42 = v110;
    uint64_t v43 = v111;
    sub_1001631E8();
    v44();
    uint64_t v91 = type metadata accessor for UnitManager();
    static UnitManager.standard.getter();
    uint64_t v89 = sub_100186FC0((unint64_t *)&qword_100E6BF60, 255, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
    uint64_t v45 = v117;
    uint64_t v46 = v114;
    uint64_t v47 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    uint64_t v99 = v48;
    uint64_t v100 = v47;
    swift_release();
    uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
    uint64_t countAndFlagsBits = v40 + 8;
    v87[1] = v49;
    v49(v42, v43);
    uint64_t v50 = object[1];
    ++object;
    v87[0] = v50;
    uint64_t v25 = v88;
    sub_100162F0C();
    v51();
    unint64_t v52 = (unint64_t)v108 + 8;
    uint64_t v108 = (void (*)(uint64_t, uint64_t))*((void *)v108 + 1);
    uint64_t v98 = v52 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v108(v46, v45);
    WeatherDataModel.currentWeather.getter();
    CurrentWeather.apparentTemperature.getter();
    v109(v25, v113);
    static Set<>.unit.getter();
    sub_10017AE28();
    static WeatherFormatStyle<>.weather(_:locale:)();
    swift_bridgeObjectRelease();
    sub_100178110(v39, &qword_100E63730);
    sub_1001631E8();
    v53();
    static UnitManager.standard.getter();
    uint64_t v96 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    uint64_t v95 = v54;
    swift_release();
    sub_100162F0C();
    v55();
    sub_100162F0C();
    v56();
    v108(v46, v45);
  }
  else
  {
    static WeatherFormatStyle<>.weather.getter();
    uint64_t v57 = countAndFlagsBits;
    uint64_t v59 = v110;
    uint64_t v58 = v111;
    (*(void (**)(uint64_t, void, uint64_t))(countAndFlagsBits + 104))(v110, enum case for WeatherFormatPlaceholder.none(_:), v111);
    type metadata accessor for UnitManager();
    static UnitManager.standard.getter();
    sub_100186FC0((unint64_t *)&qword_100E6BF60, 255, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
    uint64_t v60 = v117;
    uint64_t v61 = v114;
    uint64_t v62 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    uint64_t v99 = v63;
    uint64_t v100 = v62;
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v59, v58);
    sub_100162F0C();
    v64();
    uint64_t v65 = (void (*)(uint64_t, uint64_t))*((void *)v108 + 1);
    uint64_t v98 = ((unint64_t)v108 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v108 = v65;
    v65(v61, v60);
    uint64_t v96 = 0;
    uint64_t v95 = 0;
  }
  uint64_t v66 = v105;
  sub_1001B54D4(v104, v118, v105);
  id v67 = [self mainBundle];
  v119._object = (void *)0x8000000100CBBDA0;
  v68._uint64_t countAndFlagsBits = 0x694C20736C656546;
  v68._object = (void *)0xEA0000000000656BLL;
  v69._uint64_t countAndFlagsBits = 0;
  v69._object = (void *)0xE000000000000000;
  v119._uint64_t countAndFlagsBits = 0x10000000000002E6;
  Swift::String v70 = NSLocalizedString(_:tableName:bundle:value:comment:)(v68, (Swift::String_optional)0, (NSBundle)v67, v69, v119);
  object = v70._object;
  uint64_t countAndFlagsBits = v70._countAndFlagsBits;

  uint64_t v71 = v106;
  sub_1001B62F0(v66, v106);
  WeatherDataModel.currentWeather.getter();
  uint64_t v72 = v114;
  CurrentWeather.apparentTemperature.getter();
  uint64_t v73 = v25;
  uint64_t v74 = v113;
  uint64_t v75 = (void (*)(uint64_t, uint64_t))v109;
  v109(v73, v113);
  uint64_t v76 = v103;
  WeatherDataModel.currentWeather.getter();
  uint64_t v77 = StringBuilder.makeString(for:data:formattedForAccessibility:)();
  uint64_t v79 = v78;
  v75(v76, v74);
  v108(v72, v117);
  sub_100178110(v66, &qword_100E63750);
  uint64_t v80 = v107;
  uint64_t v81 = object;
  *unint64_t v107 = countAndFlagsBits;
  v80[1] = (uint64_t)v81;
  uint64_t v82 = v99;
  v80[2] = v100;
  v80[3] = v82;
  uint64_t v83 = v95;
  v80[4] = v96;
  v80[5] = v83;
  uint64_t v84 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  uint64_t result = sub_1001B6358(v71, (uint64_t)v80 + *(int *)(v84 + 28));
  uint64_t v86 = (uint64_t *)((char *)v80 + *(int *)(v84 + 32));
  *uint64_t v86 = v77;
  v86[1] = v79;
  return result;
}

uint64_t sub_1001B54D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v130 = (void *)a3;
  uint64_t v5 = type metadata accessor for TemperatureScaleConfiguration();
  uint64_t v120 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v126 = (char *)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = type metadata accessor for AppConfiguration();
  uint64_t v115 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v114 = (char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = type metadata accessor for WeatherFormatPlaceholder();
  uint64_t v128 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  Swift::String v119 = (char *)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle();
  uint64_t v118 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  unint64_t v116 = (char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E65250);
  uint64_t v132 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v113 = (char *)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  unint64_t v123 = (char *)&v98 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v127 = (char *)&v98 - v16;
  __chkstk_darwin(v15);
  uint64_t v133 = (char *)&v98 - v17;
  uint64_t v129 = type metadata accessor for CurrentWeather();
  uint64_t v131 = *(void *)(v129 - 8);
  uint64_t v18 = __chkstk_darwin(v129);
  uint64_t v20 = (char *)&v98 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v98 - v21;
  uint64_t v23 = (void *)type metadata accessor for TemperatureDifferenceThresholdDetector();
  uint64_t v121 = *(v23 - 1);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v98 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100E62A58 != -1) {
    swift_once();
  }
  type metadata accessor for FeelsLikeComponentViewModelFactory();
  sub_100186FC0(&qword_100EACE08, v26, (void (*)(uint64_t))type metadata accessor for FeelsLikeComponentViewModelFactory);
  Configurable.setting<A>(_:)();
  if (v134 == 1)
  {
    if (qword_100E622D8 != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
    uint64_t v28 = sub_1002102B0(v27, (uint64_t)qword_100F51450);
    uint64_t v29 = (uint64_t)v130;
    sub_10021B1EC(v28, (uint64_t)v130, (void (*)(void))type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference);
    uint64_t v30 = v29;
  }
  else
  {
    uint64_t v107 = a1;
    uint64_t v108 = v5;
    TemperatureDifferenceThresholdDetector.init()();
    uint64_t v31 = *(int *)(type metadata accessor for WeatherData(0) + 24);
    id v109 = v23;
    uint64_t v32 = v10;
    uint64_t v33 = a2 + v31;
    WeatherDataModel.currentWeather.getter();
    uint64_t v34 = v133;
    CurrentWeather.temperature.getter();
    uint64_t v35 = v131 + 8;
    uint64_t v36 = *(void (**)(char *, uint64_t))(v131 + 8);
    uint64_t v111 = v22;
    uint64_t v37 = v129;
    v36(v22, v129);
    uint64_t v122 = v33;
    uint64_t v38 = v32;
    WeatherDataModel.currentWeather.getter();
    uint64_t v39 = v127;
    CurrentWeather.apparentTemperature.getter();
    uint64_t v40 = v20;
    uint64_t v41 = v37;
    uint64_t v112 = v36;
    v36(v40, v37);
    id v42 = [self fahrenheit];
    char v43 = TemperatureDifferenceThresholdDetector.areTemperaturesSignificantlyDifferent(_:_:threshold:thresholdUnit:)();

    uint64_t v45 = v132 + 8;
    uint64_t v44 = *(void (**)(char *, uint64_t))(v132 + 8);
    v44(v39, v38);
    uint64_t v110 = v44;
    v44(v34, v38);
    (*(void (**)(char *, id))(v121 + 8))(v25, v109);
    if ((v43 & 1) == 0)
    {
      uint64_t v96 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      uint64_t v30 = (uint64_t)v130;
      uint64_t v95 = 1;
      return _s7Weather24LocationCompositionStateOwst_0(v30, v95, 1, v96);
    }
    uint64_t v121 = type metadata accessor for UnitManager();
    static UnitManager.standard.getter();
    uint64_t v46 = (void *)UnitManager.temperature.getter();
    swift_release();
    NSUnitTemperature.feelsLikeVarianceThreshold.getter();
    uint64_t v48 = v47;

    static UnitManager.standard.getter();
    id v109 = (id)UnitManager.temperature.getter();
    swift_release();
    uint64_t v49 = v111;
    WeatherDataModel.currentWeather.getter();
    uint64_t v50 = v123;
    CurrentWeather.temperature.getter();
    v112(v49, v41);
    Measurement<>.converted(to:)();
    uint64_t v51 = v38;
    uint64_t v52 = v45;
    uint64_t v53 = v38;
    uint64_t v54 = v110;
    v110(v50, v51);
    Measurement.rounded.getter();
    v54(v39, v53);
    WeatherDataModel.currentWeather.getter();
    uint64_t v131 = v35;
    uint64_t v55 = v113;
    CurrentWeather.apparentTemperature.getter();
    uint64_t v56 = v112;
    v112(v49, v41);
    uint64_t v57 = v56;
    id v58 = v109;
    uint64_t v59 = v55;
    Measurement<>.converted(to:)();
    uint64_t v132 = v52;
    v54(v55, v53);
    Measurement.rounded.getter();
    v54(v50, v53);
    Measurement.value.getter();
    Measurement.value.getter();
    sub_1001433AC();
    id v109 = v58;
    Measurement.init(value:unit:)();
    id v60 = [self mainBundle];
    v135._uint64_t countAndFlagsBits = 0xD00000000000004ALL;
    v135._object = (void *)0x8000000100CBC0C0;
    v61._object = (void *)0x8000000100CBC090;
    v61._uint64_t countAndFlagsBits = 0xD000000000000027;
    v62._uint64_t countAndFlagsBits = 0x203A6C6175746341;
    v62._object = (void *)0xEA00000000004025;
    Swift::String v63 = NSLocalizedString(_:tableName:bundle:value:comment:)(v61, (Swift::String_optional)0, (NSBundle)v60, v62, v135);
    uint64_t countAndFlagsBits = v63._countAndFlagsBits;
    object = v63._object;

    sub_10017DF08(&qword_100E64020);
    uint64_t v64 = swift_allocObject();
    *(_OWORD *)(v64 + 16) = xmmword_100C251B0;
    uint64_t v65 = v111;
    WeatherDataModel.currentWeather.getter();
    CurrentWeather.temperature.getter();
    v57(v65, v129);
    uint64_t v66 = v116;
    static WeatherFormatStyle<>.weather.getter();
    unsigned int v106 = enum case for WeatherFormatPlaceholder.none(_:);
    uint64_t v67 = v128;
    Swift::String v68 = *(void (**)(void))(v128 + 104);
    uint64_t v104 = v128 + 104;
    uint64_t v105 = (void (*)(char *, void, uint64_t))v68;
    Swift::String v69 = v119;
    uint64_t v70 = v125;
    v68(v119);
    static UnitManager.standard.getter();
    uint64_t v101 = sub_100186FC0((unint64_t *)&qword_100E6BF60, 255, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
    uint64_t v71 = v124;
    uint64_t v72 = v59;
    uint64_t v98 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    uint64_t v74 = v73;
    swift_release();
    uint64_t v75 = *(void (**)(char *, uint64_t))(v67 + 8);
    uint64_t v128 = v67 + 8;
    uint64_t v100 = v75;
    v75(v69, v70);
    uint64_t v99 = *(void (**)(char *, uint64_t))(v118 + 8);
    v99(v66, v71);
    v110(v72, v53);
    *(void *)(v64 + 56) = &type metadata for String;
    *(void *)(v64 + 64) = sub_10012B7C0();
    *(void *)(v64 + 32) = v98;
    *(void *)(v64 + 40) = v74;
    uint64_t v113 = (char *)static String.localizedStringWithFormat(_:_:)();
    uint64_t v118 = v76;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1001B1E64((void *)(v107 + 24), *(void *)(v107 + 48));
    uint64_t v77 = v114;
    dispatch thunk of AppConfigurationManagerType.appConfiguration.getter();
    AppConfiguration.temperatureScale.getter();
    (*(void (**)(char *, uint64_t))(v115 + 8))(v77, v117);
    Measurement.value.getter();
    uint64_t v79 = v78;
    uint64_t v80 = v127;
    Measurement.value.getter();
    uint64_t v82 = v81;
    static WeatherFormatStyle<>.weather.getter();
    uint64_t v83 = v125;
    v105(v69, v106, v125);
    static UnitManager.standard.getter();
    Swift::String v85 = v123;
    uint64_t v84 = v124;
    uint64_t v121 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    uint64_t v117 = v86;
    swift_release();
    v100(v69, v83);
    v99(v66, v84);
    uint64_t v87 = v111;
    WeatherDataModel.currentWeather.getter();
    LOBYTE(v72) = CurrentWeather.isDaylight.getter();

    v112(v87, v129);
    uint64_t v88 = v110;
    v110(v85, v53);
    v88(v80, v53);
    v88(v133, v53);
    uint64_t v27 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
    uint64_t v89 = v130;
    uint64_t v90 = (char *)v130 + *(int *)(v27 + 20);
    (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v90, v126, v108);
    uint64_t v91 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    *(void *)&v90[v91[5]] = v79;
    *(void *)&v90[v91[6]] = v82;
    *(void *)&v90[v91[7]] = v48;
    uint64_t v92 = (uint64_t *)&v90[v91[8]];
    uint64_t v93 = v117;
    *uint64_t v92 = v121;
    v92[1] = v93;
    v90[v91[9]] = v72 & 1;
    uint64_t v94 = v118;
    *uint64_t v89 = v113;
    v89[1] = v94;
    uint64_t v30 = (uint64_t)v89;
  }
  uint64_t v95 = 0;
  uint64_t v96 = v27;
  return _s7Weather24LocationCompositionStateOwst_0(v30, v95, 1, v96);
}

uint64_t type metadata accessor for FeelsLikeComponentViewModelFactory()
{
  return self;
}

uint64_t sub_1001B62F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E63750);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001B6358(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E63750);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_1001B63C0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, unint64_t))
{
  if ((a4 & 1) == 0) {
    goto LABEL_2;
  }
  type metadata accessor for __ContiguousArrayStorageBase();
  swift_unknownObjectRetain_n();
  uint64_t v11 = (void *)swift_dynamicCastClass();
  if (!v11)
  {
    swift_unknownObjectRelease();
    uint64_t v11 = &_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v11[2];
  swift_release();
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v12 != (a4 >> 1) - a3)
  {
LABEL_11:
    swift_unknownObjectRelease();
LABEL_2:
    uint64_t v10 = (void *)a5(a1, a2, a3, a4);
    goto LABEL_9;
  }
  uint64_t v10 = (void *)swift_dynamicCastClass();
  if (!v10)
  {
    swift_unknownObjectRelease();
    uint64_t v10 = &_swiftEmptyArrayStorage;
  }
LABEL_9:
  swift_unknownObjectRelease();
  return v10;
}

void *sub_1001B64B8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1001B63C0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_100903A08);
}

uint64_t sub_1001B64D0(uint64_t a1, uint64_t a2)
{
  uint64_t v52 = a1;
  uint64_t v4 = type metadata accessor for TemperatureScaleConfiguration.Gradient();
  __chkstk_darwin(v4 - 8);
  sub_100109314();
  uint64_t v50 = v5;
  uint64_t v51 = type metadata accessor for TemperatureScaleConfiguration();
  sub_10017C83C();
  uint64_t v49 = v6;
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v44 = v8;
  uint64_t v45 = type metadata accessor for AppConfiguration();
  sub_10017C83C();
  uint64_t v43 = v9;
  __chkstk_darwin(v10);
  sub_10012B938();
  uint64_t v11 = type metadata accessor for TimeZone();
  uint64_t v42 = v11;
  sub_10017C83C();
  uint64_t v53 = v12;
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = type metadata accessor for CurrentWeather();
  sub_10017C83C();
  uint64_t v19 = v18;
  __chkstk_darwin(v20);
  sub_1001626E0();
  uint64_t v23 = v22 - v21;
  type metadata accessor for Date();
  sub_10017C83C();
  uint64_t v46 = v25;
  uint64_t v47 = v24;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v42 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v42 - v29;
  type metadata accessor for WeatherData(0);
  WeatherDataModel.currentWeather.getter();
  CurrentWeather.date.getter();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v17);
  Location.timeZone.getter();
  Date.startOfDay(timeZone:)();
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
  v53 += 8;
  v31(v16, v11);
  uint64_t v32 = v48;
  sub_1001B1E64((void *)(v48 + 16), *(void *)(v48 + 40));
  dispatch thunk of AppConfigurationManagerType.appConfiguration.getter();
  uint64_t v33 = v44;
  AppConfiguration.temperatureScale.getter();
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v2, v45);
  uint64_t v34 = v50;
  TemperatureScaleConfiguration.gradient.getter();
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v33, v51);
  uint64_t v35 = sub_1001B6D94(v34);
  sub_1001B1E64((void *)(v32 + 56), *(void *)(v32 + 80));
  Location.timeZone.getter();
  uint64_t v36 = v52;
  sub_1001B2DAC(v52, v16, 0, 10, 0);
  v31(v16, v42);
  uint64_t v54 = v28;
  uint64_t v55 = v36;
  uint64_t v56 = v32;
  uint64_t v57 = a2;
  id v58 = v30;
  uint64_t v59 = v35;
  sub_1001B68E4();
  uint64_t v38 = v37;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v39 = v47;
  uint64_t v40 = *(void (**)(char *, uint64_t))(v46 + 8);
  v40(v28, v47);
  v40(v30, v39);
  return v38;
}

void sub_1001B68E4()
{
}

uint64_t sub_1001B694C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v53 = a1;
  uint64_t v54 = a2;
  uint64_t v3 = type metadata accessor for TimeZone();
  __chkstk_darwin(v3 - 8);
  sub_100109314();
  uint64_t v52 = v4;
  uint64_t v5 = sub_10017DF08(&qword_100E66CC8);
  __chkstk_darwin(v5 - 8);
  sub_100109314();
  uint64_t v49 = v6;
  uint64_t v7 = sub_10017DF08(&qword_100E66CA0);
  __chkstk_darwin(v7 - 8);
  sub_1001626E0();
  type metadata accessor for UVIndexComponentDescriptionContext();
  sub_10017C83C();
  uint64_t v50 = v9;
  uint64_t v51 = v8;
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v46 = v10;
  type metadata accessor for UVIndex();
  sub_10017C83C();
  uint64_t v47 = v12;
  uint64_t v48 = v11;
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = type metadata accessor for CurrentWeather();
  uint64_t v43 = v16;
  sub_10017C83C();
  uint64_t v18 = v17;
  uint64_t v20 = __chkstk_darwin(v19);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)v42 - v21;
  uint64_t v45 = type metadata accessor for WeatherDescription();
  sub_10017C83C();
  uint64_t v24 = v23;
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v55 = (char *)v42 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)v42 - v28;
  v42[1] = *(void *)(v2 + 16);
  type metadata accessor for WeatherData(0);
  WeatherDataModel.currentWeather.getter();
  CurrentWeather.uvIndex.getter();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v18 + 8);
  v42[2] = v18 + 8;
  uint64_t v44 = v30;
  v30(v22, v16);
  WeatherDataModel.currentWeather.getter();
  WeatherDataModel.dailyForecast.getter();
  WeatherDataModel.hourlyForecast.getter();
  Location.timeZone.getter();
  uint64_t v31 = v46;
  UVIndexComponentDescriptionContext.init(currentWeather:dailyForecast:hourlyForecast:timeZone:)();
  v42[0] = v29;
  StringBuilder.makeWeatherDescription(for:data:)();
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v31, v51);
  uint64_t v32 = v48;
  uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
  v33(v15, v48);
  uint64_t v34 = v29;
  uint64_t v35 = v45;
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v55, v34, v45);
  WeatherDataModel.currentWeather.getter();
  CurrentWeather.uvIndex.getter();
  v44(v22, v43);
  UVIndex.category.getter();
  v33(v15, v32);
  uint64_t v36 = UVIndex.ExposureCategory.localizedString.getter();
  uint64_t v38 = v37;
  (*(void (**)(void, uint64_t))(v24 + 8))(v42[0], v35);
  uint64_t v39 = v54;
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v54, v55, v35);
  uint64_t result = type metadata accessor for UVIndexComponentPreprocessedDataModel();
  uint64_t v41 = (uint64_t *)(v39 + *(int *)(result + 20));
  *uint64_t v41 = v36;
  v41[1] = v38;
  return result;
}

void *sub_1001B6D94(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for TemperatureScaleConfiguration.ColorStop();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_10016279C();
  uint64_t v7 = TemperatureScaleConfiguration.Gradient.stops.getter();
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    sub_1001B6FD8(0, v8, 0);
    sub_1001B71C4();
    uint64_t v10 = *(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16);
    uint64_t v9 = v5 + 16;
    uint64_t v31 = v10;
    unint64_t v11 = v7 + ((*(unsigned __int8 *)(v9 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 64));
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = (void (**)(uint64_t, uint64_t))(v9 - 8);
    do
    {
      v31(v1, v11, v3);
      v14._uint64_t countAndFlagsBits = TemperatureScaleConfiguration.ColorStop.color.getter();
      Class isa = UIColor.init(hex:)(v14).super.isa;
      UIColor.rgbaComponents.getter();
      uint64_t v17 = v16;
      uint64_t v19 = v18;
      uint64_t v21 = v20;
      uint64_t v23 = v22;

      TemperatureScaleConfiguration.ColorStop.location.getter();
      uint64_t v25 = v24;
      (*v13)(v1, v3);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1001B6FD8(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v27 = _swiftEmptyArrayStorage[2];
      unint64_t v26 = _swiftEmptyArrayStorage[3];
      if (v27 >= v26 >> 1) {
        sub_1001B6FD8(v26 > 1, v27 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v27 + 1;
      uint64_t v28 = &_swiftEmptyArrayStorage[5 * v27];
      v28[4] = v17;
      v28[5] = v19;
      v28[6] = v21;
      v28[7] = v23;
      v28[8] = v25;
      v11 += v12;
      --v8;
    }
    while (v8);
  }
  uint64_t v29 = type metadata accessor for TemperatureScaleConfiguration.Gradient();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(a1, v29);
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void sub_1001B6FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001B7028(a1, a2, a3, *v3, (uint64_t)&unk_100E97040, (void (*)(uint64_t))sub_1007EAED8, (void (*)(uint64_t))sub_1001B70E4);
  *uint64_t v3 = v4;
}

void sub_1001B7028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t), void (*a7)(uint64_t))
{
  sub_10018B130();
  if (v12)
  {
    sub_10017E9A4();
    if (v13 != v14)
    {
      sub_100183F88();
      if (v13)
      {
        __break(1u);
        return;
      }
      sub_1001A24A0();
    }
  }
  sub_100185C7C();
  if (v9)
  {
    sub_10017DF08(v15);
    uint64_t v16 = (void *)sub_10016EEEC();
    sub_100163FA0(v16);
  }
  uint64_t v17 = sub_100176DD8();
  if (v8)
  {
    a6(v17);
    *(void *)(v7 + 16) = 0;
  }
  else
  {
    a7(v17);
  }
  swift_release();
}

void *sub_1001B70E4(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0 || (&__dst[40 * a2] > __src ? (BOOL v3 = &__src[40 * a2] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, 40 * a2);
  }
  return result;
}

unint64_t sub_1001B71C4()
{
  unint64_t result = qword_100E7B3F8;
  if (!qword_100E7B3F8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100E7B3F8);
  }
  return result;
}

uint64_t sub_1001B7204(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10017DF08(a3);
  sub_100162E4C();
  sub_10008B8B4();
  v4();
  return a2;
}

uint64_t destroy for ApplyLocationComponentContentWidthModifier(uint64_t a1)
{
  sub_10018F6D8(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 25);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 24);

  return sub_10014D82C(v2, v4, v3);
}

uint64_t destroy for LocationHeaderViewGradientBackground(uint64_t a1)
{
  return sub_10018F6D8(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t sub_1001B72B4(uint64_t a1)
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return sub_10018F6E4();
}

uint64_t destroy for LocationViewerViewWeatherConditionBackground(uint64_t a1)
{
  swift_release();
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 24);

  return swift_release();
}

uint64_t sub_1001B7358(uint64_t a1, uint64_t a2)
{
  sub_10018CCC4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(unsigned char *)(a1 + 72));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ContentSizeCategory();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_1001B7438(uint64_t a1, uint64_t a2)
{
  sub_10018F6D8(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = v4 + 8;
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 10) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v6);
  unint64_t v7 = (*(void *)(v5 + 56) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  unint64_t v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  sub_100191924(*(void *)v8, *(void *)(v8 + 8), *(unsigned char *)(v8 + 16));
  swift_bridgeObjectRelease();
  unint64_t v9 = (v8 + 39) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80) & 0xF8 | 7;
  uint64_t v13 = (v9 + v12 + 16) & ~v12;
  if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v10);
  }

  return swift_release();
}

uint64_t sub_1001B75A4()
{
  sub_10017DF08(&qword_100E829F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for LocationComponentHeaderViewModel(0);
    uint64_t result = swift_getEnumCaseMultiPayload();
    switch((int)result)
    {
      case 0:
      case 4:
        goto LABEL_9;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_11;
      case 2:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_11;
      case 3:
        type metadata accessor for WeatherDescription();
        sub_100179DC0();
        sub_100162F0C();
        v1();
        type metadata accessor for LocationComponentHeaderViewModel.Description(0);
LABEL_9:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_11;
      case 5:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_11:
        uint64_t result = swift_bridgeObjectRelease();
        break;
      default:
        return result;
    }
  }
  else
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_1001B7750(uint64_t a1, uint64_t a2)
{
  sub_10017DF08(&qword_100E829F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for LocationComponentHeaderViewModel(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_9;
      case 1u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_9;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_9;
      case 3u:
        uint64_t v4 = type metadata accessor for WeatherDescription();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
        type metadata accessor for LocationComponentHeaderViewModel.Description(0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_9;
      case 5u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_9:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(a1 + *(int *)(a2 + 20)), *(unsigned char *)(a1 + *(int *)(a2 + 20) + 8));

  return swift_release();
}

uint64_t destroy for LocationViewerViewVFXEnvironment()
{
  return sub_10018F6E4();
}

uint64_t sub_1001B7940(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Location.Identifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  return sub_10018CCC4(*(void *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(void *)(v5 + 48), *(void *)(v5 + 56), *(void *)(v5 + 64), *(unsigned char *)(v5 + 72));
}

uint64_t sub_1001B79D0(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for Date();
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  sub_10017DF08(&qword_100E7DDF8);
  swift_release();

  return swift_release();
}

uint64_t sub_1001B7A90(uint64_t a1, uint64_t a2)
{
  sub_100191934(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_10017DF08(&qword_100EAA740);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ScenePhase();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = v6 + *(int *)(type metadata accessor for ContentStatusBannerPresentationMetrics(0) + 20);
  uint64_t v8 = type metadata accessor for ContentStatusBanner();
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8))
  {
    if (*(void *)(v7 + 16) >= 2uLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v9 = v7 + *(int *)(v8 + 24);
    uint64_t v10 = type metadata accessor for Date();
    if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    }
  }
  sub_10017DF08(&qword_100E8EF18);

  return swift_release();
}

uint64_t sub_1001B7C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t a1), uint64_t a6, uint64_t (*a7)(), int a8, char a9, uint64_t a10)
{
  LODWORD(v208) = a8;
  uint64_t v234 = a7;
  uint64_t v215 = a6;
  uint64_t v232 = a3;
  uint64_t v233 = a5;
  uint64_t v236 = a4;
  uint64_t v231 = a2;
  uint64_t v239 = a10;
  uint64_t v224 = *v10;
  uint64_t v12 = sub_10017DF08(&qword_100E63770);
  __chkstk_darwin(v12 - 8);
  uint64_t v198 = (uint64_t)v179 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for NewsDataModel();
  uint64_t v191 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v193 = (uint64_t)v179 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v192 = v16;
  __chkstk_darwin(v15);
  uint64_t v195 = (char *)v179 - v17;
  uint64_t v18 = type metadata accessor for WeatherData(0);
  uint64_t v188 = *(void *)(v18 - 8);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v190 = (uint64_t)v179 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = v20;
  __chkstk_darwin(v19);
  unint64_t v194 = (unint64_t)v179 - v21;
  uint64_t v226 = (void *)type metadata accessor for Location.Identifier();
  uint64_t v225 = *(v226 - 1);
  __chkstk_darwin(v226);
  uint64_t v197 = (uint64_t)v179 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10017DF08(&qword_100E6DC08);
  __chkstk_darwin(v23 - 8);
  uint64_t v196 = (uint64_t)v179 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for TimeState();
  uint64_t v201 = *(void *)(v25 - 8);
  __chkstk_darwin(v25 - 8);
  uint64_t v213 = v26;
  uint64_t v223 = (uint64_t)v179 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for AppConfiguration();
  uint64_t v229 = *(void *)(v27 - 8);
  uint64_t v230 = v27;
  __chkstk_darwin(v27);
  uint64_t v200 = v28;
  uint64_t v228 = (char *)v179 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v207 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v206 = *(void (***)(char *, uint64_t))(v207 - 8);
  __chkstk_darwin(v207);
  uint64_t v203 = (char *)v179 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v205 = type metadata accessor for DispatchQoS();
  uint64_t v204 = *(void (***)(uint64_t (*)(), uint64_t))(v205 - 8);
  __chkstk_darwin(v205);
  uint64_t v202 = (uint64_t (*)())((char *)v179 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v216 = type metadata accessor for OSSignpostID();
  uint64_t v214 = *(void *)(v216 - 8);
  uint64_t v31 = __chkstk_darwin(v216);
  uint64_t v219 = (char *)v179 - ((unint64_t)(v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v199 = v32;
  __chkstk_darwin(v31);
  uint64_t v222 = (char *)v179 - v33;
  uint64_t updated = (void (*)(unint64_t, char *, uint64_t))type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  __chkstk_darwin(updated);
  uint64_t v218 = (void (*)(uint64_t, char *, uint64_t))((char *)v179 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v221 = type metadata accessor for WeatherServiceLocationOptions();
  uint64_t v212 = *(void *)(v221 - 8);
  uint64_t v35 = *(void *)(v212 + 64);
  uint64_t v36 = __chkstk_darwin(v221);
  uint64_t v220 = (char *)v179 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  uint64_t v227 = (char *)v179 - v37;
  uint64_t v211 = type metadata accessor for WeatherDataConfiguration();
  uint64_t v210 = *(void *)(v211 - 8);
  __chkstk_darwin(v211);
  uint64_t v209 = (char *)v179 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v235 = sub_10017DF08(&qword_100EABDF0);
  __chkstk_darwin(v235);
  uint64_t v40 = (char *)v179 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for Location();
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = *(void *)(v42 + 64);
  uint64_t v44 = __chkstk_darwin(v41);
  __chkstk_darwin(v44);
  uint64_t v46 = (char *)v179 - v45;
  Location.coordinate.getter();
  double v48 = v47;
  uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  uint64_t v237 = a1;
  v49(v46, a1, v41);
  if (v48 == 0.0)
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v46, v41);
LABEL_4:
    sub_1006A7CD8(0xD000000000000038, 0x8000000100CBB2B0);
    uint64_t v56 = v237;
    return sub_1000CBE94(v56);
  }
  unint64_t v183 = (unsigned __int8 *)v40;
  uint64_t v50 = v235;
  uint64_t v181 = v35;
  uint64_t v182 = v43;
  uint64_t v184 = v49;
  uint64_t v185 = v42 + 16;
  uint64_t v186 = (char *)v179 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = v236;
  uint64_t v187 = v41;
  Location.coordinate.getter();
  double v53 = v52;
  uint64_t v54 = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v46, v187);
  uint64_t v55 = v238;
  if (v53 == 0.0) {
    goto LABEL_4;
  }
  uint64_t v180 = v42;
  v179[2] = v179;
  uint64_t v247 = *(void **)(v238 + 472);
  uint64_t v58 = __chkstk_darwin(v54);
  v179[1] = v179;
  uint64_t v59 = v237;
  v179[-2] = v55;
  v179[-1] = v59;
  __chkstk_darwin(v58);
  v179[-2] = sub_1000A247C;
  v179[-1] = v60;
  type metadata accessor for UnfairLock();
  swift_retain();
  Swift::String v61 = v183;
  Lock.sync<A>(_:)();
  swift_release();
  int v62 = *v61;
  Swift::String v63 = *(void (**)(unsigned __int8 *, void *))(v225 + 8);
  uint64_t v64 = v226;
  v63(&v61[*(int *)(v50 + 48)], v226);
  if (v62 == 1)
  {
    LODWORD(v235) = a9 & 1;
    uint64_t v65 = v209;
    AppConfiguration.weatherData.getter();
    WeatherDataConfiguration.intervalBetweenUpdates.getter();
    double v67 = v66;
    (*(void (**)(char *, uint64_t))(v210 + 8))(v65, v211);
    uint64_t v68 = v51;
    uint64_t v69 = v51;
    uint64_t v70 = v59;
    if (sub_1001BA54C(v59, v67, v231, v232, v69, (uint64_t)v233, v239) & 1) != 0 || (v208)
    {
      AppConfiguration.locationDecimalPrecision.getter();
      WeatherServiceLocationOptions.init(decimalPrecision:limitsPrecision:)();
      uint64_t v78 = v186;
      uint64_t v79 = v187;
      v184(v186, v59, v187);
      uint64_t v80 = *(unsigned __int8 *)(v180 + 80);
      uint64_t v81 = v180;
      uint64_t v82 = (v80 + 24) & ~v80;
      uint64_t v209 = (char *)(v82 + v182);
      uint64_t v210 = v82;
      uint64_t v225 = v80 | 7;
      uint64_t v83 = v80;
      uint64_t v84 = swift_allocObject();
      *(void *)(v84 + 16) = v55;
      Swift::String v85 = *(void **)(v81 + 32);
      uint64_t v180 = v81 + 32;
      uint64_t v226 = v85;
      ((void (*)(uint64_t, char *, uint64_t))v85)(v84 + v82, v78, v79);
      swift_retain();
      asyncMain(block:)();
      swift_release();
      sub_1001B1E64((void *)(v55 + 328), *(void *)(v55 + 352));
      uint64_t v86 = Location.id.getter();
      sub_1001B9B50(v86, v87);
      swift_bridgeObjectRelease();
      uint64_t v88 = (uint64_t)v218;
      swift_storeEnumTagMultiPayload();
      uint64_t v89 = v239;
      sub_10015B128(v88);
      sub_1001BC5DC();
      id v90 = *(id *)(v55 + 448);
      uint64_t v91 = v222;
      OSSignpostID.init(log:)();
      uint64_t v195 = (char *)sub_10020F9AC(v235);
      uint64_t v92 = swift_allocObject();
      swift_weakInit();
      uint64_t v93 = v214;
      uint64_t v94 = *(void (**)(char *, char *, uint64_t))(v214 + 16);
      uint64_t v196 = v214 + 16;
      uint64_t v197 = (uint64_t)v94;
      uint64_t v95 = v219;
      uint64_t v96 = v91;
      uint64_t v97 = v216;
      v94(v219, v96, v216);
      uint64_t v98 = v186;
      uint64_t v99 = v187;
      v184(v186, v59, v187);
      uint64_t v198 = *(unsigned __int8 *)(v93 + 80);
      uint64_t v100 = v93;
      uint64_t v101 = (v198 + 32) & ~v198;
      uint64_t v211 = v83;
      v199 += v83;
      uint64_t v102 = (unint64_t)&v199[v101] & ~v83;
      uint64_t v208 = (uint64_t (*)())(v225 | v198);
      uint64_t v103 = swift_allocObject();
      *(void *)(v103 + 16) = v92;
      *(void *)(v103 + 24) = v89;
      uint64_t v104 = *(void (**)(uint64_t, char *, uint64_t))(v100 + 32);
      uint64_t updated = (void (*)(unint64_t, char *, uint64_t))(v100 + 32);
      uint64_t v218 = v104;
      v104(v103 + v101, v95, v97);
      ((void (*)(uint64_t, char *, uint64_t))v226)(v103 + v102, v98, v99);
      uint64_t v245 = sub_10010A714;
      uint64_t v246 = v103;
      aBlock = _NSConcreteStackBlock;
      uint64_t v242 = 1107296256;
      uint64_t v243 = sub_10010A4D4;
      uint64_t v244 = &unk_100E35150;
      uint64_t v105 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      unsigned int v106 = v202;
      static DispatchQoS.unspecified.getter();
      uint64_t v247 = _swiftEmptyArrayStorage;
      sub_100128EB4((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10017DF08(&qword_100E75530);
      sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
      uint64_t v107 = v203;
      uint64_t v108 = v207;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      id v109 = v195;
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v105);

      v206[1](v107, v108);
      v204[1](v106, v205);
      swift_release();
      swift_release();
      id v110 = sub_10020F9AC(v235);
      uint64_t v111 = v186;
      uint64_t v112 = v237;
      uint64_t v113 = v187;
      uint64_t v114 = v184;
      v184(v186, v237, v187);
      uint64_t v115 = (v211 + 16) & ~v211;
      uint64_t v116 = v182;
      uint64_t v117 = swift_allocObject();
      ((void (*)(uint64_t, char *, uint64_t))v226)(v117 + v115, v111, v113);
      sub_10017DF08(&qword_100EABDF8);
      uint64_t v207 = firstly<A, B>(on:disposeOn:closure:)();

      swift_release();
      uint64_t v118 = v216;
      ((void (*)(char *, char *, uint64_t))v197)(v219, v222, v216);
      v114(v111, v112, v113);
      uint64_t v119 = v212;
      uint64_t v120 = *(void (***)(char *, uint64_t))(v212 + 16);
      uint64_t v205 = v212 + 16;
      uint64_t v206 = v120;
      ((void (*)(char *, char *, uint64_t))v120)(v220, v227, v221);
      uint64_t v121 = v229;
      uint64_t v122 = *(void (***)(uint64_t (*)(), uint64_t))(v229 + 16);
      uint64_t v203 = (char *)(v229 + 16);
      uint64_t v204 = v122;
      ((void (*)(char *, uint64_t (*)(), uint64_t))v122)(v228, v234, v230);
      uint64_t v202 = type metadata accessor for TimeState;
      sub_1001B9A30(v215, v223, (void (*)(void))type metadata accessor for TimeState);
      uint64_t v123 = (v198 + 24) & ~v198;
      uint64_t v124 = (unint64_t)&v199[v123] & ~v211;
      unint64_t v125 = (v116 + v124 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v126 = (v125 + *(unsigned __int8 *)(v119 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80);
      uint64_t v127 = *(unsigned __int8 *)(v119 + 80);
      uint64_t v196 = v127;
      uint64_t v128 = *(unsigned __int8 *)(v121 + 80);
      uint64_t v211 = v181 + v128;
      unint64_t v129 = (v181 + v128 + v126) & ~v128;
      uint64_t v197 = v128;
      v200 += 7;
      unint64_t v130 = (v200 + v129) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v198 = *(unsigned __int8 *)(v201 + 80);
      uint64_t v199 = (char *)(v198 + 32);
      unint64_t v194 = (v198 + 32 + v130) & ~v198;
      uint64_t v195 = (char *)(v194 + v213);
      uint64_t v201 = v128 | v127;
      unint64_t v131 = (v194 + v213) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v132 = swift_allocObject();
      uint64_t v193 = v131 + v132;
      *(void *)(v132 + 16) = v238;
      v218(v132 + v123, v219, v118);
      uint64_t v133 = v186;
      ((void (*)(uint64_t, char *, uint64_t))v226)(v132 + v124, v186, v187);
      *(void *)(v132 + v125) = v239;
      unint64_t v134 = v132 + v126;
      Swift::String v135 = *(char **)(v119 + 32);
      uint64_t v218 = (void (*)(uint64_t, char *, uint64_t))(v119 + 32);
      uint64_t v219 = v135;
      uint64_t v136 = v220;
      uint64_t v137 = v221;
      ((void (*)(unint64_t, char *, uint64_t))v135)(v134, v220, v221);
      uint64_t v138 = *(void (**)(unint64_t, char *, uint64_t))(v229 + 32);
      v229 += 32;
      uint64_t updated = v138;
      v138(v132 + v129, v228, v230);
      uint64_t v139 = (void *)(v132 + v130);
      uint64_t v140 = v232;
      void *v139 = v231;
      v139[1] = v140;
      unint64_t v141 = v233;
      v139[2] = v236;
      v139[3] = v141;
      uint64_t v208 = type metadata accessor for TimeState;
      uint64_t v142 = v223;
      sub_1001B9AF4(v223, v132 + v194, (void (*)(void))type metadata accessor for TimeState);
      v195[v132] = v235;
      *(void *)(v193 + 8) = v224;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v143 = (void *)zalgo.getter();
      uint64_t v195 = (char *)Promise.then<A>(on:closure:)();
      swift_release();
      swift_release();

      uint64_t v144 = v133;
      uint64_t v145 = v133;
      uint64_t v146 = v187;
      v184(v145, v237, v187);
      ((void (*)(char *, char *, uint64_t))v206)(v136, v227, v137);
      ((void (*)(char *, uint64_t (*)(), uint64_t))v204)(v228, v234, v230);
      sub_1001B9A30(v215, v142, (void (*)(void))v202);
      uint64_t v147 = (unint64_t)&v209[v196] & ~v196;
      unint64_t v148 = (v211 + v147) & ~v197;
      unint64_t v149 = (v200 + v148) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v150 = (v149 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v151 = (unint64_t)&v199[v150] & ~v198;
      uint64_t v152 = v151 + v213;
      uint64_t v153 = swift_allocObject();
      uint64_t v237 = (v152 & 0xFFFFFFFFFFFFFFF8) + v153;
      *(void *)(v153 + 16) = v239;
      ((void (*)(uint64_t, char *, uint64_t))v226)(v153 + v210, v144, v146);
      uint64_t v154 = v221;
      ((void (*)(uint64_t, char *, uint64_t))v219)(v153 + v147, v220, v221);
      updated(v153 + v148, v228, v230);
      *(void *)(v153 + v149) = v238;
      uint64_t v155 = (void *)(v153 + v150);
      uint64_t v156 = v232;
      *uint64_t v155 = v231;
      v155[1] = v156;
      uint64_t v157 = v233;
      v155[2] = v236;
      v155[3] = v157;
      sub_1001B9AF4(v223, v153 + v151, (void (*)(void))v208);
      *(unsigned char *)(v153 + v152) = v235;
      *(void *)(v237 + 8) = v224;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v158 = (void *)zalgo.getter();
      Promise.error(on:closure:)();
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(char *, uint64_t))(v214 + 8))(v222, v216);
      return (*(uint64_t (**)(char *, uint64_t))(v212 + 8))(v227, v154);
    }
    else
    {
      UnfairLock.lock()();
      uint64_t v71 = v197;
      Location.identifier.getter();
      swift_beginAccess();
      uint64_t v72 = v196;
      sub_1001E5CE4(v71, v196);
      swift_endAccess();
      v63((unsigned __int8 *)v71, v64);
      sub_10017DF4C(v72, &qword_100E6DC08);
      UnfairLock.unlock()();
      uint64_t v73 = Location.id.getter();
      uint64_t v74 = v198;
      sub_1001BBE9C(v73, v75, v68);
      swift_bridgeObjectRelease();
      uint64_t v76 = type metadata accessor for LocationWeatherDataState(0);
      if (_s7Weather24LocationCompositionStateOwet_0(v74, 1, v76) == 1)
      {
        sub_10017DF4C(v74, &qword_100E63770);
LABEL_16:
        sub_1000CA914();
        uint64_t v56 = v70;
        return sub_1000CBE94(v56);
      }
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v160 = v239;
      if (EnumCaseMultiPayload != 1)
      {
        sub_1001BC5DC();
        goto LABEL_16;
      }
      uint64_t v161 = v74 + *(int *)(sub_10017DF08(&qword_100E63748) + 64);
      uint64_t v233 = type metadata accessor for WeatherData;
      uint64_t v162 = v74;
      uint64_t v163 = v194;
      sub_1001B9AF4(v162, v194, (void (*)(void))type metadata accessor for WeatherData);
      uint64_t v234 = type metadata accessor for NewsDataModel;
      uint64_t v164 = (uint64_t)v195;
      sub_1001B9AF4(v161, (uint64_t)v195, (void (*)(void))type metadata accessor for NewsDataModel);
      sub_1001BC5DC();
      uint64_t v235 = (uint64_t)sub_10020F9AC(v235);
      uint64_t v236 = swift_allocObject();
      swift_weakInit();
      uint64_t v165 = v190;
      sub_1001B9A30(v163, v190, (void (*)(void))type metadata accessor for WeatherData);
      uint64_t v166 = v186;
      uint64_t v167 = v187;
      v184(v186, v70, v187);
      uint64_t v168 = v193;
      sub_1001B9A30(v164, v193, (void (*)(void))type metadata accessor for NewsDataModel);
      unint64_t v169 = (*(unsigned __int8 *)(v188 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v188 + 80);
      uint64_t v170 = v180;
      unint64_t v171 = (v189 + *(unsigned __int8 *)(v180 + 80) + v169) & ~(unint64_t)*(unsigned __int8 *)(v180 + 80);
      unint64_t v172 = (v182 + *(unsigned __int8 *)(v191 + 80) + v171) & ~(unint64_t)*(unsigned __int8 *)(v191 + 80);
      uint64_t v173 = swift_allocObject();
      *(void *)(v173 + 16) = v236;
      *(void *)(v173 + 24) = v160;
      sub_1001B9AF4(v165, v173 + v169, (void (*)(void))v233);
      (*(void (**)(unint64_t, char *, uint64_t))(v170 + 32))(v173 + v171, v166, v167);
      sub_1001B9AF4(v168, v173 + v172, (void (*)(void))v234);
      uint64_t v245 = sub_100A52C00;
      uint64_t v246 = v173;
      aBlock = _NSConcreteStackBlock;
      uint64_t v242 = 1107296256;
      uint64_t v243 = sub_10010A4D4;
      uint64_t v244 = &unk_100E350D8;
      uint64_t v174 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      uint64_t v175 = v202;
      static DispatchQoS.unspecified.getter();
      uint64_t v240 = _swiftEmptyArrayStorage;
      sub_100128EB4((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10017DF08(&qword_100E75530);
      sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
      unint64_t v176 = v203;
      uint64_t v177 = v207;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v178 = (void *)v235;
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v174);

      v206[1](v176, v177);
      v204[1](v175, v205);
      sub_1001BC5DC();
      sub_1001BC5DC();
      swift_release();
      return swift_release();
    }
  }
  else
  {
    uint64_t v77 = (uint64_t)v218;
    swift_storeEnumTagMultiPayload();
    sub_10015B128(v77);
    return sub_1001BC5DC();
  }
}

uint64_t sub_1001B991C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1001B997C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_1001B99D0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1001B9A30(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  sub_10008B8B4();
  v4();
  return a2;
}

uint64_t sub_1001B9A8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001B9AF4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  sub_1001190D4();
  v4();
  return a2;
}

void sub_1001B9B50(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v8 = v7;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v44 - v13;
  uint64_t v48 = *(void *)(v2 + 16);
  UnfairLock.lock()();
  swift_beginAccess();
  uint64_t v15 = *(void *)(v2 + 48);
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1001BA1DC(a1, a2, v15);
  swift_bridgeObjectRelease();
  uint64_t v49 = a1;
  uint64_t v47 = v6;
  if (v16)
  {
    id v45 = v16;
    uint64_t v46 = v14;
    swift_endAccess();
    if (qword_100E62880 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_1002102B0(v17, (uint64_t)qword_100F52088);
    swift_bridgeObjectRetain_n();
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v44 = v21;
      *(_DWORD *)uint64_t v20 = 141558275;
      sub_100180A04(v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v20 + 12) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_10016414C(v49, a2, v51);
      a1 = v49;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Potentially leaked timer, is there a missing call to stopMonitoringLocationLoad? ID=%{private,mask.hash}s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      uint64_t v6 = v47;
      sub_100162EE0();
      sub_100162EE0();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v14 = v46;
    sub_10017AD94();
    swift_bridgeObjectRetain();
    uint64_t v22 = (void *)sub_1001E5BC4(a1, a2);
    swift_endAccess();
    swift_bridgeObjectRelease();

    id v23 = v45;
    [v45 invalidate];
  }
  else
  {
    swift_endAccess();
  }
  Date.init()();
  uint64_t v24 = *(void *)(v3 + 40);
  Date.addingTimeInterval(_:)();
  id v45 = *(id *)(v8 + 8);
  uint64_t v46 = (char *)(v8 + 8);
  ((void (*)(char *, uint64_t))v45)(v12, v6);
  uint64_t v25 = (void *)swift_allocObject();
  v25[2] = a1;
  v25[3] = a2;
  v25[4] = v3;
  id v26 = objc_allocWithZone((Class)NSTimer);
  swift_bridgeObjectRetain();
  swift_retain();
  id v27 = sub_1001BA224((uint64_t)v14, 0, (uint64_t)sub_100A3A640, (uint64_t)v25, 0.0);
  sub_10017AD94();
  swift_bridgeObjectRetain();
  id v28 = v27;
  sub_1001BA534((uint64_t)v28, a1, a2, v29, v30, v31, v32, v33, v44, (uint64_t)v45);
  swift_endAccess();
  swift_bridgeObjectRelease();
  UnfairLock.unlock()();
  if (qword_100E62880 != -1) {
    swift_once();
  }
  uint64_t v34 = type metadata accessor for Logger();
  sub_1002102B0(v34, (uint64_t)qword_100F52088);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v48 = v38;
    *(_DWORD *)uint64_t v37 = 141558787;
    sub_100180A04(v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v37 + 12) = 2081;
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_10016414C(v49, a2, v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v37 + 22) = 2048;
    uint64_t v50 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    *(_WORD *)(v37 + 32) = 2080;
    Date.init()();
    sub_1000EF168(&qword_100E656D8, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v39 = v47;
    uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v42 = v41;
    ((void (*)(char *, uint64_t))v45)(v14, v39);
    uint64_t v50 = sub_10016414C(v40, v42, v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Starting to monitor location load. ID=%{private,mask.hash}s, Timeout=%f (s), Now=%s", (uint8_t *)v37, 0x2Au);
    swift_arrayDestroy();
    sub_100162EE0();
    sub_100162EE0();
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  id v43 = [self mainRunLoop];
  [v43 addTimer:v28 forMode:NSDefaultRunLoopMode];
}

void *sub_1001BA1DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  unint64_t v4 = sub_1001D23B8();
  if ((v5 & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(void **)(*(void *)(a3 + 56) + 8 * v4);
  id v7 = v6;
  return v6;
}

id sub_1001BA224(uint64_t a1, char a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v6 = v5;
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  v17[4] = a3;
  v17[5] = a4;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  void v17[2] = sub_1003169EC;
  v17[3] = &unk_100E14940;
  uint64_t v13 = _Block_copy(v17);
  id v14 = [v6 initWithFireDate:isa interval:a2 & 1 repeats:v13 block:a5];
  _Block_release(v13);

  uint64_t v15 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a1, v15);
  swift_release();
  return v14;
}

uint64_t sub_1001BA348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_100188D00();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  swift_isUniquelyReferenced_nonNull_native();
  sub_100188F0C();
  v12(v18, v16, v14);
  *uint64_t v10 = a10;
  sub_10018A2CC();
  return swift_bridgeObjectRelease();
}

void sub_1001BA3C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v11 = sub_1001D23B8();
  uint64_t v13 = v10[2];
  BOOL v14 = (v12 & 1) == 0;
  Swift::Int v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v16 = v11;
  char v17 = v12;
  sub_10017DF08(&qword_100E639B0);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a4 & 1, v15)) {
    goto LABEL_5;
  }
  unint64_t v18 = sub_1001D23B8();
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_11:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v16 = v18;
LABEL_5:
  uint64_t v20 = *v5;
  if (v17)
  {
    uint64_t v21 = v20[7];

    *(void *)(v21 + 8 * v16) = a1;
  }
  else
  {
    sub_1001BA4EC(v16, a2, a3, a1, v20);
    swift_bridgeObjectRetain();
  }
}

unint64_t sub_1001BA4EC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  char v5 = (void *)(a5[6] + 16 * result);
  *char v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_1001BA534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_1001BA348(a1, a2, a3, (uint64_t)sub_1001BA3C4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_1001BA54C(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v47 = a1;
  uint64_t v48 = (char *)a5;
  uint64_t v44 = type metadata accessor for CurrentWeather();
  uint64_t v42 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  unint64_t v41 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v43 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  Swift::Int v15 = (char *)&v41 - v14;
  uint64_t v16 = sub_10017DF08(&qword_100E63770);
  __chkstk_darwin(v16 - 8);
  unint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10017DF08(&qword_100E63850);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for WeatherData(0);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v41 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  __chkstk_darwin(updated);
  id v27 = (double *)((char *)&v41 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  double *v27 = a2;
  swift_storeEnumTagMultiPayload();
  uint64_t v46 = a7;
  sub_10015B128((uint64_t)v27);
  sub_1001BC5DC();
  uint64_t v28 = Location.id.getter();
  sub_1001BBE9C(v28, v29, (uint64_t)v48);
  swift_bridgeObjectRelease();
  uint64_t v30 = type metadata accessor for LocationWeatherDataState(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v30) == 1)
  {
    sub_10017DF4C((uint64_t)v18, &qword_100E63770);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 1, 1, v22);
  }
  else
  {
    uint64_t v47 = v10;
    uint64_t v48 = v13;
    uint64_t v32 = v44;
    uint64_t v31 = v45;
    sub_1001177B0((uint64_t)v21);
    sub_1001BC5DC();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22) != 1)
    {
      sub_1001B9AF4((uint64_t)v21, (uint64_t)v24, (void (*)(void))type metadata accessor for WeatherData);
      if (WeatherDataModel.isExpired.getter())
      {
        if ((*(unsigned char *)(v31 + 320) & 1) == 0)
        {
          Date.init()();
          uint64_t v35 = v41;
          WeatherDataModel.currentWeather.getter();
          uint64_t v36 = (uint64_t)v48;
          CurrentWeather.date.getter();
          (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v32);
          Date.timeIntervalSince(_:)();
          double v38 = v37;
          uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
          uint64_t v40 = v47;
          v39(v36, v47);
          v39((uint64_t)v15, v40);
          BOOL v33 = v38 >= a2;
          *(unsigned char *)id v27 = v33;
          v27[1] = v38;
          swift_storeEnumTagMultiPayload();
          sub_10015B128((uint64_t)v27);
          sub_1001BC5DC();
          sub_1001BC5DC();
          return v33;
        }
      }
      else
      {
        swift_storeEnumTagMultiPayload();
        sub_10015B128((uint64_t)v27);
        sub_1001BC5DC();
      }
      sub_1001BC5DC();
      return 0;
    }
  }
  sub_10017DF4C((uint64_t)v21, &qword_100E63850);
  swift_storeEnumTagMultiPayload();
  sub_10015B128((uint64_t)v27);
  sub_1001BC5DC();
  return 1;
}

int *sub_1001BAAA4(int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v198 = a6;
  uint64_t v199 = a3;
  uint64_t v180 = a5;
  uint64_t v195 = a4;
  uint64_t v196 = a1;
  uint64_t v197 = a2;
  type metadata accessor for WeatherStatisticsModel();
  sub_100179C0C();
  uint64_t v187 = v7;
  uint64_t v188 = v6;
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v186 = v8;
  uint64_t v9 = sub_100129064();
  uint64_t v193 = type metadata accessor for WeatherData.WeatherStatisticsState(v9);
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = (int **)(v12 - v11);
  type metadata accessor for AvailableDataSets();
  sub_100179C0C();
  uint64_t v184 = v15;
  uint64_t v185 = v14;
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = type metadata accessor for LocationAvailableDataSetState(0);
  sub_100162E4C();
  __chkstk_darwin(v20);
  sub_1001626E0();
  uint64_t v23 = (void *)(v22 - v21);
  uint64_t v24 = sub_10017DF08(&qword_100E63A40);
  uint64_t v25 = sub_100109308(v24);
  __chkstk_darwin(v25);
  sub_1001626E0();
  uint64_t v28 = v27 - v26;
  uint64_t v29 = type metadata accessor for TimeState();
  uint64_t v30 = sub_100109308(v29);
  __chkstk_darwin(v30);
  sub_100109314();
  uint64_t v176 = v31;
  uint64_t v32 = sub_100129064();
  uint64_t v33 = type metadata accessor for WeatherData.CachingState(v32);
  uint64_t v34 = sub_100109308(v33);
  __chkstk_darwin(v34);
  sub_100109314();
  uint64_t v179 = v35;
  sub_100129064();
  uint64_t v36 = type metadata accessor for NewsDataModel();
  uint64_t v37 = sub_100109308(v36);
  __chkstk_darwin(v37);
  sub_100162EF8();
  uint64_t v182 = v38;
  sub_1001626D4();
  __chkstk_darwin(v39);
  sub_100128F8C();
  uint64_t v191 = (int **)v40;
  sub_100129064();
  uint64_t v41 = type metadata accessor for PreprocessedWeatherData();
  uint64_t v42 = sub_100109308(v41);
  __chkstk_darwin(v42);
  sub_100162EF8();
  uint64_t v181 = v43;
  sub_1001626D4();
  __chkstk_darwin(v44);
  sub_100128F8C();
  uint64_t v190 = v45;
  uint64_t v46 = sub_100129064();
  uint64_t v178 = type metadata accessor for WeatherData(v46);
  sub_100162E4C();
  __chkstk_darwin(v47);
  sub_100162EF8();
  uint64_t v177 = v48;
  sub_1001626D4();
  __chkstk_darwin(v49);
  uint64_t v175 = (uint64_t *)((char *)&v175 - v50);
  sub_1001626D4();
  __chkstk_darwin(v51);
  sub_100128F8C();
  uint64_t v189 = (void *)v52;
  uint64_t v53 = sub_100129064();
  uint64_t v194 = type metadata accessor for LocationWeatherDataState(v53);
  sub_100162E4C();
  __chkstk_darwin(v54);
  uint64_t v56 = (char *)&v175 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v57);
  uint64_t v183 = (uint64_t)&v175 - v58;
  sub_1001626D4();
  __chkstk_darwin(v59);
  sub_100128F8C();
  uint64_t v192 = v60;
  uint64_t v61 = sub_10017DF08(&qword_100E63770);
  uint64_t v62 = sub_100109308(v61);
  __chkstk_darwin(v62);
  uint64_t v64 = (char *)&v175 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v65);
  double v67 = (char *)&v175 - v66;
  uint64_t v68 = (int *)type metadata accessor for WeatherDataAction();
  sub_100162E4C();
  __chkstk_darwin(v69);
  sub_1001626E0();
  uint64_t v72 = (uint64_t *)(v71 - v70);
  sub_1001BC334(v198, v71 - v70, (void (*)(void))type metadata accessor for WeatherDataAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v90 = *v72;
      uint64_t v89 = v72[1];
      swift_bridgeObjectRetain();
      sub_1001BC76C(v90, v89, v195);
      swift_bridgeObjectRelease();
      int v91 = _s7Weather24LocationCompositionStateOwet_0(v28, 1, v19);
      uint64_t v68 = v196;
      if (v91 == 1) {
        goto LABEL_9;
      }
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          swift_bridgeObjectRelease();
LABEL_9:
          swift_storeEnumTagMultiPayload();
          goto LABEL_13;
        }
LABEL_30:
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1001BC2DC(v28, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
      }
LABEL_31:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return v68;
    case 2u:
      uint64_t v93 = *v72;
      uint64_t v94 = v72[1];
      uint64_t v96 = v72[2];
      unint64_t v95 = v72[3];
      uint64_t v68 = (int *)v72[4];
      uint64_t v97 = v72[5];
      swift_bridgeObjectRetain();
      sub_1001BBE9C(v93, v94, v199);
      swift_bridgeObjectRelease();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v194) == 1)
      {
        sub_100318664((uint64_t)v64);
        sub_100163CA8();
        sub_1001D21D8();
        sub_10019F73C();
        unint64_t v87 = type metadata accessor for LocationWeatherDataState;
        uint64_t v88 = (uint64_t)v56;
      }
      else
      {
        uint64_t v115 = (uint64_t)v64;
        uint64_t v116 = v183;
        sub_1001C8A0C(v115, v183, (void (*)(void))type metadata accessor for LocationWeatherDataState);
        sub_1001BC334(v116, (uint64_t)v56, (void (*)(void))type metadata accessor for LocationWeatherDataState);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v143 = sub_10017DF08(&qword_100E63748);
            uint64_t v144 = &v56[*(int *)(v143 + 48)];
            uint64_t v145 = (uint64_t)&v56[*(int *)(v143 + 64)];
            uint64_t v146 = (uint64_t)v56;
            uint64_t v147 = v177;
            sub_1001C8A0C(v146, v177, (void (*)(void))type metadata accessor for WeatherData);
            uint64_t v148 = (uint64_t)v144;
            unint64_t v149 = (uint64_t *)v147;
            sub_1001C8A0C(v148, v181, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
            sub_1001C8A0C(v145, v182, (void (*)(void))type metadata accessor for NewsDataModel);
            uint64_t v150 = v147;
            uint64_t v151 = v180;
            if (sub_100A77C8C(v150, v180))
            {
              uint64_t v152 = v192;
              unsigned char *v192 = v68;
              v152[1] = (int *)v97;
              v152[2] = (int *)v96;
              v152[3] = (int *)v95;
              swift_storeEnumTagMultiPayload();
              sub_10018966C();
              uint64_t v68 = v153;
              swift_bridgeObjectRelease();
              uint64_t v140 = type metadata accessor for LocationWeatherDataState;
              sub_1001BC2DC((uint64_t)v152, (void (*)(void))type metadata accessor for LocationWeatherDataState);
              sub_1001BC2DC(v182, (void (*)(void))type metadata accessor for NewsDataModel);
              sub_1001BC2DC(v181, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
              uint64_t v154 = type metadata accessor for WeatherData;
              uint64_t v155 = (uint64_t)v149;
            }
            else
            {
              sub_100303D6C(v96, v95);
              swift_bridgeObjectRelease();
              uint64_t v157 = v151 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time;
              uint64_t v158 = v176;
              sub_1001BC334(v157, v176, (void (*)(void))type metadata accessor for TimeState);
              type metadata accessor for Date();
              sub_100162E4C();
              uint64_t v160 = v179;
              (*(void (**)(uint64_t, uint64_t))(v159 + 32))(v179, v158);
              uint64_t v161 = sub_10017DF08(&qword_100E63738);
              _s7Weather24LocationCompositionStateOwst_0(v160, 0, 1, v161);
              uint64_t v162 = v149[1];
              uint64_t v198 = *v149;
              uint64_t v68 = (int *)v178;
              uint64_t v163 = v189;
              sub_10006DF38((uint64_t)v149 + *(int *)(v178 + 20), (uint64_t)v189 + *(int *)(v178 + 20), &qword_100E63730);
              uint64_t v164 = v68[6];
              uint64_t v165 = (char *)v149 + v164;
              uint64_t v166 = (char *)v163 + v164;
              type metadata accessor for WeatherDataModel();
              sub_100162E4C();
              (*(void (**)(char *, char *))(v167 + 16))(v166, v165);
              uint64_t v168 = sub_100185F44(v68[8]);
              sub_1001BC334(v168, v169, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
              sub_1001BC334(v160, (uint64_t)v163 + v68[7], (void (*)(void))type metadata accessor for WeatherData.CachingState);
              uint64_t v170 = sub_100185F44(v68[9]);
              sub_10006DF38(v170, v171, &qword_100E63740);
              *uint64_t v163 = v198;
              v163[1] = v162;
              swift_bridgeObjectRetain();
              sub_1001BC2DC(v160, (void (*)(void))type metadata accessor for WeatherData.CachingState);
              unint64_t v172 = v192;
              uint64_t v173 = (uint64_t)v192 + *(int *)(v143 + 48);
              uint64_t v174 = (uint64_t)v192 + *(int *)(v143 + 64);
              sub_1001BC334((uint64_t)v163, (uint64_t)v192, (void (*)(void))type metadata accessor for WeatherData);
              sub_1001BC334(v181, v173, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
              sub_1001BC334(v182, v174, (void (*)(void))type metadata accessor for NewsDataModel);
              sub_10019DBA4();
              sub_10018966C();
              sub_10019F73C();
              uint64_t v140 = type metadata accessor for LocationWeatherDataState;
              sub_1001BC2DC((uint64_t)v172, (void (*)(void))type metadata accessor for LocationWeatherDataState);
              sub_1001BC2DC((uint64_t)v163, (void (*)(void))type metadata accessor for WeatherData);
              sub_1001BC2DC(v182, (void (*)(void))type metadata accessor for NewsDataModel);
              sub_1001BC2DC(v181, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
              uint64_t v155 = v177;
              uint64_t v154 = type metadata accessor for WeatherData;
            }
            goto LABEL_36;
          case 2u:
            uint64_t v156 = *((void *)v56 + 2);
            uint64_t v56 = (char *)*((void *)v56 + 3);
            swift_bridgeObjectRelease();
            sub_100303D6C(v156, (unint64_t)v56);
            goto LABEL_35;
          case 3u:
            goto LABEL_35;
          default:
            sub_1001BC2DC((uint64_t)v56, (void (*)(void))type metadata accessor for LocationWeatherDataState);
LABEL_35:
            sub_100163CA8();
            sub_1001D21D8();
            sub_10019F73C();
            uint64_t v140 = type metadata accessor for LocationWeatherDataState;
            uint64_t v155 = (uint64_t)v56;
            uint64_t v154 = type metadata accessor for LocationWeatherDataState;
LABEL_36:
            sub_1001BC2DC(v155, (void (*)(void))v154);
            uint64_t v88 = v183;
            break;
        }
LABEL_37:
        unint64_t v87 = v140;
      }
      goto LABEL_20;
    case 3u:
      uint64_t v98 = v72[3];
      *uint64_t v23 = v72[2];
      v23[1] = v98;
      swift_storeEnumTagMultiPayload();
      sub_10017AE60();
LABEL_13:
      sub_1008650BC();
      uint64_t v68 = v99;
      sub_10017DAE8();
      unint64_t v87 = type metadata accessor for LocationAvailableDataSetState;
      uint64_t v88 = (uint64_t)v23;
      goto LABEL_20;
    case 4u:
      uint64_t v77 = (int *)sub_10017DF08(&qword_100E6BBC0);
      uint64_t v78 = (uint64_t)v72 + v77[16];
      uint64_t v79 = (uint64_t)v72 + v77[20];
      uint64_t v80 = (uint64_t)v189;
      sub_1001C8A0C((uint64_t)v72 + v77[12], (uint64_t)v189, (void (*)(void))type metadata accessor for WeatherData);
      uint64_t v81 = v190;
      sub_1001C8A0C(v78, v190, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      uint64_t v82 = (uint64_t)v191;
      sub_1001C8A0C(v79, (uint64_t)v191, (void (*)(void))type metadata accessor for NewsDataModel);
      uint64_t v83 = sub_10017DF08(&qword_100E63748);
      uint64_t v84 = v192;
      uint64_t v85 = (uint64_t)v192 + *(int *)(v83 + 48);
      uint64_t v86 = (uint64_t)v192 + *(int *)(v83 + 64);
      sub_1001BC334(v80, (uint64_t)v192, (void (*)(void))type metadata accessor for WeatherData);
      sub_1001BC334(v81, v85, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      sub_1001BC334(v82, v86, (void (*)(void))type metadata accessor for NewsDataModel);
      sub_10019DBA4();
      sub_100155CD4();
      sub_10019F73C();
      sub_1001BC2DC((uint64_t)v84, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      sub_1001BC2DC(v82, (void (*)(void))type metadata accessor for NewsDataModel);
      sub_1001BC2DC(v81, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      unint64_t v87 = type metadata accessor for WeatherData;
      uint64_t v88 = v80;
      goto LABEL_20;
    case 5u:
      uint64_t v100 = sub_10017DF08(&qword_100E6BBB0);
      uint64_t v13 = v191;
      sub_1001C8A0C((uint64_t)v72 + *(int *)(v100 + 48), (uint64_t)v191, (void (*)(void))type metadata accessor for NewsDataModel);
      sub_10017AE60();
      sub_10005D630();
      uint64_t v68 = v101;
      sub_10017DAE8();
      uint64_t v76 = (uint64_t (*)(uint64_t))type metadata accessor for NewsDataModel;
      goto LABEL_19;
    case 6u:
      uint64_t v102 = sub_10017DF08(&qword_100E6BBB8);
      uint64_t v104 = v184;
      uint64_t v103 = v185;
      (*(void (**)(uint64_t, char *, uint64_t))(v184 + 32))(v18, (char *)v72 + *(int *)(v102 + 48), v185);
      (*(void (**)(void *, uint64_t, uint64_t))(v104 + 16))(v23, v18, v103);
      swift_storeEnumTagMultiPayload();
      sub_10017AE60();
      sub_1008650BC();
      uint64_t v106 = v105;
      sub_10017DAE8();
      sub_1001BC2DC((uint64_t)v23, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
      (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v18, v103);
      return (int *)v106;
    case 7u:
      goto LABEL_18;
    case 8u:
      uint64_t v107 = sub_10017DF08(&qword_100E6BBA8);
      uint64_t v109 = v186;
      uint64_t v108 = v187;
      uint64_t v110 = v188;
      (*(void (**)(uint64_t, char *, uint64_t))(v187 + 32))(v186, (char *)v72 + *(int *)(v107 + 48), v188);
      (*(void (**)(int **, uint64_t, uint64_t))(v108 + 16))(v13, v109, v110);
      swift_storeEnumTagMultiPayload();
      sub_1001A0220();
      uint64_t v68 = v111;
      sub_10017DAE8();
      sub_1001BC2DC((uint64_t)v13, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
      (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v109, v110);
      return v68;
    case 9u:
      uint64_t v112 = v72[3];
      *uint64_t v13 = (int *)v72[2];
      v13[1] = (int *)v112;
LABEL_18:
      swift_storeEnumTagMultiPayload();
      sub_1001A0220();
      uint64_t v68 = v113;
      sub_10017DAE8();
      uint64_t v76 = type metadata accessor for WeatherData.WeatherStatisticsState;
      goto LABEL_19;
    default:
      uint64_t v74 = *v72;
      uint64_t v73 = v72[1];
      swift_bridgeObjectRetain();
      sub_1001BBE9C(v74, v73, v199);
      swift_bridgeObjectRelease();
      int v75 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, v194);
      uint64_t v68 = v196;
      if (v75 != 1)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v198 = sub_10017DF08(&qword_100E63748);
            uint64_t v117 = (uint64_t)&v67[*(int *)(v198 + 48)];
            uint64_t v118 = (uint64_t)&v67[*(int *)(v198 + 64)];
            uint64_t v119 = (uint64_t)v67;
            uint64_t v120 = v189;
            sub_1001C8A0C(v119, (uint64_t)v189, (void (*)(void))type metadata accessor for WeatherData);
            sub_1001C8A0C(v117, v190, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
            sub_1001C8A0C(v118, (uint64_t)v191, (void (*)(void))type metadata accessor for NewsDataModel);
            uint64_t v121 = v176;
            sub_1001BC334(v180 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v176, (void (*)(void))type metadata accessor for TimeState);
            type metadata accessor for Date();
            sub_100162E4C();
            uint64_t v123 = v179;
            (*(void (**)(uint64_t, uint64_t))(v122 + 32))(v179, v121);
            uint64_t v124 = sub_10017DF08(&qword_100E63738);
            _s7Weather24LocationCompositionStateOwst_0(v123, 0, 1, v124);
            uint64_t v193 = *v120;
            uint64_t v188 = v120[1];
            unint64_t v125 = (int *)v178;
            unint64_t v126 = v175;
            sub_10006DF38((uint64_t)v120 + *(int *)(v178 + 20), (uint64_t)v175 + *(int *)(v178 + 20), &qword_100E63730);
            uint64_t v127 = v125[6];
            uint64_t v128 = (char *)v120 + v127;
            unint64_t v129 = (char *)v126 + v127;
            type metadata accessor for WeatherDataModel();
            sub_100162E4C();
            (*(void (**)(char *, char *))(v130 + 16))(v129, v128);
            uint64_t v131 = sub_100185F44(v125[8]);
            sub_1001BC334(v131, v132, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
            sub_1001BC334(v123, (uint64_t)v126 + v125[7], (void (*)(void))type metadata accessor for WeatherData.CachingState);
            uint64_t v133 = sub_100185F44(v125[9]);
            sub_10006DF38(v133, v134, &qword_100E63740);
            uint64_t v135 = v188;
            uint64_t *v126 = v193;
            v126[1] = v135;
            swift_bridgeObjectRetain();
            sub_1001BC2DC(v123, (void (*)(void))type metadata accessor for WeatherData.CachingState);
            uint64_t v136 = v192;
            uint64_t v137 = (uint64_t)v192 + *(int *)(v198 + 48);
            uint64_t v138 = (uint64_t)v192 + *(int *)(v198 + 64);
            sub_1001BC334((uint64_t)v126, (uint64_t)v192, (void (*)(void))type metadata accessor for WeatherData);
            sub_1001BC334(v190, v137, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
            uint64_t v139 = (uint64_t)v191;
            sub_1001BC334((uint64_t)v191, v138, (void (*)(void))type metadata accessor for NewsDataModel);
            sub_10019DBA4();
            sub_100182D64();
            sub_100155CD4();
            sub_1001A1A48();
            sub_1001BC2DC((uint64_t)v136, (void (*)(void))type metadata accessor for LocationWeatherDataState);
            uint64_t v140 = type metadata accessor for WeatherData;
            sub_1001BC2DC((uint64_t)v126, (void (*)(void))type metadata accessor for WeatherData);
            sub_1001BC2DC(v139, (void (*)(void))type metadata accessor for NewsDataModel);
            sub_1001BC2DC(v190, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
            uint64_t v88 = (uint64_t)v189;
            goto LABEL_37;
          case 2u:
            uint64_t v141 = *((void *)v67 + 2);
            unint64_t v142 = *((void *)v67 + 3);
            swift_bridgeObjectRelease();
            sub_100303D6C(v141, v142);
            break;
          case 3u:
            goto LABEL_30;
          default:
            swift_bridgeObjectRelease();
            sub_1001BC2DC((uint64_t)v67, (void (*)(void))type metadata accessor for LocationWeatherDataState);
            goto LABEL_31;
        }
      }
      uint64_t v13 = v192;
      swift_storeEnumTagMultiPayload();
      sub_100182D64();
      sub_100155CD4();
      sub_1001A1A48();
      uint64_t v76 = type metadata accessor for LocationWeatherDataState;
LABEL_19:
      unint64_t v87 = v76;
      uint64_t v88 = (uint64_t)v13;
LABEL_20:
      sub_1001BC2DC(v88, (void (*)(void))v87);
      return v68;
  }
}

uint64_t sub_1001BBDD4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  sub_100189638();
  if (v8 && (v9 = v7, uint64_t v10 = v6, v11 = sub_1001D23B8(), (v12 & 1) != 0))
  {
    unint64_t v13 = v11;
    uint64_t v14 = *(void *)(v10 + 56);
    a4(0);
    sub_100162E4C();
    sub_1001BCC70(v14 + *(void *)(v15 + 72) * v13, v4, v9);
    uint64_t v16 = sub_100180994();
  }
  else
  {
    a4(0);
    uint64_t v16 = sub_100162E38();
  }

  return _s7Weather24LocationCompositionStateOwst_0(v16, v17, v18, v19);
}

uint64_t type metadata accessor for LocationAvailableDataSetState(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E9BDA0);
}

uint64_t sub_1001BBE9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BBDD4(a1, a2, a3, (void (*)(void))type metadata accessor for LocationWeatherDataState);
}

uint64_t sub_1001BBEC8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100179DC0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001BBF1C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001BBF74(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_1001BBFC8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001BC020(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_1001BC074(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001BC0CC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001BC124(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001BC184(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001BC1DC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_1001BC230(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001BC288(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_1001BC2DC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001BC334(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_1001BC388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = sub_10017DF08(&qword_100E63A40);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  __chkstk_darwin(updated);
  unint64_t v11 = (uint64_t *)((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_storeEnumTagMultiPayload();
  sub_10015B128((uint64_t)v11);
  sub_1001BC5DC();
  uint64_t v12 = Location.id.getter();
  sub_1001BC76C(v12, v13, a5);
  swift_bridgeObjectRelease();
  uint64_t v14 = type metadata accessor for LocationAvailableDataSetState(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v14) == 1) {
    goto LABEL_5;
  }
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v16 = v8[1];
      *unint64_t v11 = *v8;
      v11[1] = v16;
LABEL_5:
      swift_storeEnumTagMultiPayload();
      sub_10015B128((uint64_t)v11);
      sub_1001BC5DC();
      return 1;
    }
    swift_storeEnumTagMultiPayload();
    sub_10015B128((uint64_t)v11);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_10015B128((uint64_t)v11);
    sub_1001BC5DC();
  }
  sub_1001BC5DC();
  return 0;
}

uint64_t sub_1001BC5DC()
{
  uint64_t v1 = sub_100127C8C();
  v2(v1);
  sub_100179DC0();
  sub_100162F0C();
  v3();
  return v0;
}

uint64_t sub_1001BC628(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 12:
      goto LABEL_10;
    case 2:
    case 3:
    case 4:
    case 10:
    case 14:
      uint64_t v3 = type metadata accessor for Location();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      return v4(a1, v3);
    case 5:
      uint64_t result = *(void *)(a1 + 8);
      if (result != 1) {
        goto LABEL_10;
      }
      return result;
    case 6:
    case 7:
      return swift_errorRelease();
    case 15:
    case 16:
      uint64_t v5 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
      sub_10017DF08(&qword_100E8AC10);
LABEL_10:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001BC76C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BBDD4(a1, a2, a3, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
}

void *sub_1001BC798(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v4 = type metadata accessor for News();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1001BC848(uint64_t a1, uint64_t a2)
{
  sub_10018F6D8(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  sub_10017DF08(&qword_100E82BD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = v4 + *(int *)(type metadata accessor for LocationComponentCornerRadiusConfiguration(0) + 20);
    uint64_t v6 = type metadata accessor for RoundedCornerStyle();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

uint64_t sub_1001BC918(uint64_t a1, uint64_t a2)
{
  sub_10018F6D8(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

uint64_t sub_1001BC990(uint64_t a1, uint64_t a2)
{
  sub_10018F6D8(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_10017DF08(&qword_100E829F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for LocationComponentHeaderViewModel(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 4u:
        goto LABEL_7;
      case 1u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_9;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_9;
      case 3u:
        uint64_t v5 = type metadata accessor for WeatherDescription();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
        type metadata accessor for LocationComponentHeaderViewModel.Description(0);
LABEL_7:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_9;
      case 5u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_9:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(a1 + *(int *)(a2 + 24)), *(unsigned char *)(a1 + *(int *)(a2 + 24) + 8));

  return swift_release();
}

uint64_t sub_1001BCB6C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_1001BCBC0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  sub_10008B8B4();
  v4();
  return a2;
}

uint64_t sub_1001BCC1C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_1001BCC70(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  sub_10008B8B4();
  v4();
  return a2;
}

uint64_t type metadata accessor for DailyForecastFilter()
{
  return self;
}

uint64_t sub_1001BCCF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  if (_s7Weather24LocationCompositionStateOwet_0(a1, 1, v6) == 1)
  {
    sub_100178110(a1, &qword_100E634B0);
  }
  else
  {
    TaskPriority.rawValue.getter();
    sub_100162F0C();
    v7();
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1001BCE5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_10017DF08(&qword_100E66CE8);
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_10008B8C0();
  sub_10017DF08(&qword_100E66CF0);
  sub_100179C0C();
  __chkstk_darwin(v11);
  sub_10016279C();
  NonEmpty.init<A>(arrayWith:_:)();
  NonEmpty.map<A>(_:)();
  NonEmpty.max<>()();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v3, v7);
  uint64_t v12 = sub_1001B2DAC(a1, a2, 0xD000000000000010, 0, 1);
  uint64_t result = NonEmpty.makeIterator()();
  unint64_t v14 = 0x8000000100C97FC0;
  if (0x8000000100C97FC0 == MEMORY[0xD000000000000020]) {
    goto LABEL_2;
  }
  if (0x8000000100C97FC0 >= MEMORY[0xD000000000000020])
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v17 = *(void *)(40 * 0x8000000100C97FC0 - 0x2FFFFFFFFFFFFFD0);
  uint64_t v18 = *(void *)(40 * 0x8000000100C97FC0 - 0x2FFFFFFFFFFFFFC8);
  uint64_t v15 = *(void *)(40 * 0x8000000100C97FC0 - 0x2FFFFFFFFFFFFFB8);
  uint64_t v20 = *(void *)(40 * 0x8000000100C97FC0 - 0x2FFFFFFFFFFFFFB0);
  uint64_t v21 = 0xD000000000000010 - v20;
  if (__OFSUB__(0xD000000000000010, v20))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v22 = v12[2];
  uint64_t v16 = v22 - v21;
  if (!__OFSUB__(v22, v21))
  {
    if (v16 < v15)
    {
LABEL_12:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v19 = 1;
      goto LABEL_13;
    }
    uint64_t v23 = (void *)(40 * 0x8000000100C97FC0 - 0x2FFFFFFFFFFFFF88);
    while (MEMORY[0xD000000000000020] - 1 != v14)
    {
      uint64_t v17 = *(v23 - 4);
      uint64_t v18 = *(v23 - 3);
      uint64_t v15 = *(v23 - 1);
      unint64_t v24 = 0xD000000000000010 - *v23;
      if (__OFSUB__(0xD000000000000010, *v23))
      {
        __break(1u);
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
      uint64_t v16 = v22 - v24;
      if (__OFSUB__(v22, v24)) {
        goto LABEL_15;
      }
      ++v14;
      v23 += 5;
      if (v16 < v15) {
        goto LABEL_12;
      }
    }
LABEL_2:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    char v19 = 0;
LABEL_13:
    sub_100162F0C();
    uint64_t result = v25();
    *(void *)a3 = v15;
    *(void *)(a3 + 8) = v16;
    *(void *)(a3 + 16) = v17;
    *(void *)(a3 + 24) = v18;
    *(unsigned char *)(a3 + 32) = v19;
    return result;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1001BD128@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (void (*)(void))((char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1001BD23C();
  sub_1001B1A54(v4, a1, a2, v11, a3);
  return (*(uint64_t (**)(void (*)(void), uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1001BD23C()
{
  return swift_release();
}

uint64_t sub_1001BD294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100577C58);
}

uint64_t sub_1001BD2A8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v66 = a3;
  uint64_t v65 = a2;
  uint64_t v39 = a1;
  uint64_t v67 = a4;
  uint64_t v64 = sub_10017DF08(&qword_100EABE30);
  uint64_t v63 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v60 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_10017DF08(&qword_100EABE38);
  uint64_t v61 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v49 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_10017DF08(&qword_100EABE40);
  uint64_t v58 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v46 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_10017DF08(&qword_100EABE48);
  uint64_t v56 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v43 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_10017DF08(&qword_100EABE50);
  uint64_t v54 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_10017DF08(&qword_100EABE58);
  uint64_t v52 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_10017DF08(&qword_100EABE60);
  uint64_t v50 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_10017DF08(&qword_100EABE68);
  uint64_t v47 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_10017DF08(&qword_100EABE70);
  uint64_t v44 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v17 = (char *)v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_10017DF08(&qword_100EABE78);
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  char v19 = (char *)v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10017DF08(&qword_100EABE28);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v41 = (char *)v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  unint64_t v24 = (char *)v35 - v23;
  uint64_t v25 = swift_projectBox();
  sub_1001B7204(v25, (uint64_t)v24, &qword_100EABE28);
  uint64_t Fetched = type metadata accessor for WeatherServiceLastFetched();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, Fetched) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(Fetched - 8) + 32))(v67, v24, Fetched);
  }
  sub_10017DF4C((uint64_t)v24, &qword_100EABE28);
  v35[1] = *(void *)(v39 + 64);
  ProductRequirementsFactory.AppRequiredProducts.current.getter();
  uint64_t v78 = v19;
  uint64_t v38 = v17;
  ProductRequirementsFactory.AppRequiredProducts.minutely.getter();
  uint64_t v79 = v17;
  uint64_t v37 = v15;
  ProductRequirementsFactory.AppRequiredProducts.hourly.getter();
  uint64_t v80 = v15;
  uint64_t v36 = v13;
  ProductRequirementsFactory.AppRequiredProducts.daily.getter();
  uint64_t v81 = v13;
  ProductRequirementsFactory.AppRequiredProducts.airQuality.getter();
  uint64_t v82 = v11;
  ProductRequirementsFactory.AppRequiredProducts.changes.getter();
  uint64_t v83 = v9;
  uint64_t v27 = v43;
  ProductRequirementsFactory.AppRequiredProducts.alerts.getter();
  uint64_t v84 = v27;
  uint64_t v28 = v46;
  ProductRequirementsFactory.AppRequiredProducts.availability.getter();
  uint64_t v85 = v28;
  uint64_t v39 = v25;
  uint64_t v29 = v49;
  ProductRequirementsFactory.AppRequiredProducts.news.getter();
  uint64_t v86 = v29;
  uint64_t v30 = v60;
  ProductRequirementsFactory.AppRequiredProducts.historicalComparisons.getter();
  unint64_t v87 = v30;
  uint64_t v68 = type metadata accessor for CurrentWeather();
  uint64_t v69 = sub_10017DF08(&qword_100E6E8F8);
  uint64_t v70 = sub_10017DF08(&qword_100E66CC8);
  uint64_t v71 = sub_10017DF08(&qword_100E66CA0);
  uint64_t v72 = sub_10017DF08(&qword_100E885C0);
  uint64_t v73 = sub_10017DF08(&qword_100E6D1C8);
  uint64_t v74 = sub_10017DF08(&qword_100E957B8);
  uint64_t v75 = type metadata accessor for WeatherAvailability();
  uint64_t v76 = sub_10017DF08(&qword_100EABE80);
  uint64_t v77 = sub_10017DF08(&qword_100E6B8B8);
  uint64_t v31 = v67;
  WeatherService.lastServerFetch<each A>(for:including:options:)();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v30, v64);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v29, v62);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v28, v59);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v27, v57);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v9, v55);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v11, v53);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v36, v51);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v48);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v38, v45);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v42);
  uint64_t v32 = (uint64_t)v41;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(Fetched - 8) + 16))(v41, v31, Fetched);
  _s7Weather24LocationCompositionStateOwst_0(v32, 0, 1, Fetched);
  uint64_t v33 = v39;
  swift_beginAccess();
  return sub_1001C0CF0(v32, v33);
}

void sub_1001BDCF0()
{
  sub_100162EA0();
  v12[1] = v1;
  v12[2] = v2;
  uint64_t v3 = type metadata accessor for MainViewSheetViewModifier(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001BE268(v0, (uint64_t)v6, (void (*)(void))type metadata accessor for MainViewSheetViewModifier);
  type metadata accessor for MainActor();
  uint64_t v7 = static MainActor.shared.getter();
  unint64_t v8 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v7;
  *(void *)(v9 + 24) = &protocol witness table for MainActor;
  sub_1001BE1F4((uint64_t)v6, v9 + v8, (void (*)(void))type metadata accessor for MainViewSheetViewModifier);
  sub_1001BE268(v0, (uint64_t)v6, (void (*)(void))type metadata accessor for MainViewSheetViewModifier);
  uint64_t v10 = static MainActor.shared.getter();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = &protocol witness table for MainActor;
  sub_1001BE1F4((uint64_t)v6, v11 + v8, (void (*)(void))type metadata accessor for MainViewSheetViewModifier);
  Binding.init(get:set:)();
  sub_100162694();
}

uint64_t sub_1001BDEA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v36 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v3 - 8);
  uint64_t v35 = &v32[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for ModalPresentationViewModifier(0);
  uint64_t v6 = v5 - 8;
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v5);
  uint64_t v9 = sub_10017DF08(&qword_100EAD6C8);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = &v32[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = v2 + *(int *)(v6 + 28);
  uint64_t v15 = *(void *)v13;
  uint64_t v14 = *(void *)(v13 + 8);
  int v33 = *(unsigned __int8 *)(v13 + 16);
  sub_1001BE268(v2, (uint64_t)&v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], (void (*)(void))type metadata accessor for ModalPresentationViewModifier);
  unint64_t v16 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v17 = swift_allocObject();
  sub_1001BE1F4((uint64_t)&v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], v17 + v16, (void (*)(void))type metadata accessor for ModalPresentationViewModifier);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_100A83D50;
  *(void *)(v18 + 24) = v17;
  char v37 = 0;
  swift_retain();
  swift_retain();
  swift_retain();
  State.init(wrappedValue:)();
  char v19 = v38;
  uint64_t v20 = v39;
  uint64_t v21 = sub_10017DF08(&qword_100EAD6D0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v12, v34, v21);
  swift_release();
  uint64_t v22 = &v12[*(int *)(v10 + 44)];
  *(void *)uint64_t v22 = v15;
  *((void *)v22 + 1) = v14;
  *((_WORD *)v22 + 8) = v33;
  *((void *)v22 + 3) = sub_100109B70;
  *((void *)v22 + 4) = v18;
  v22[40] = v19;
  *((void *)v22 + 6) = v20;
  uint64_t v23 = v2 + *(int *)(v6 + 32);
  uint64_t v24 = *(void *)v23;
  uint64_t v25 = *(void *)(v23 + 8);
  LOBYTE(v20) = *(unsigned char *)(v23 + 16);
  uint64_t v26 = v35;
  sub_1001BE6BC((uint64_t)v35);
  uint64_t v27 = sub_10017DF08(&qword_100EAD6D8);
  uint64_t v28 = v36;
  uint64_t v29 = v36 + *(int *)(v27 + 36);
  uint64_t v30 = type metadata accessor for SafariSheetModifier(0);
  sub_10006DF38((uint64_t)v26, v29 + *(int *)(v30 + 20), &qword_100E749B0);
  *(void *)uint64_t v29 = v24;
  *(void *)(v29 + 8) = v25;
  *(unsigned char *)(v29 + 16) = v20;
  sub_10006DF38((uint64_t)v12, v28, &qword_100EAD6C8);
  swift_retain();
  swift_retain();
  sub_1001781AC((uint64_t)v26, &qword_100E749B0);
  return sub_1001781AC((uint64_t)v12, &qword_100EAD6C8);
}

uint64_t sub_1001BE1F4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t type metadata accessor for ModalPresentationViewModifier(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EAD668);
}

uint64_t sub_1001BE268(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

char *sub_1001BE2BC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for MainViewModel.ModalModule(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_10017DF08(&qword_100E94AE8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
      if (swift_getEnumCaseMultiPayload() == 6)
      {
        uint64_t v9 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v10];
  uint64_t v13 = &a2[v10];
  uint64_t v14 = *((void *)v13 + 1);
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = v14;
  v12[16] = v13[16];
  uint64_t v15 = &a1[v11];
  unint64_t v16 = &a2[v11];
  uint64_t v17 = *((void *)v16 + 1);
  *(void *)uint64_t v15 = *(void *)v16;
  *((void *)v15 + 1) = v17;
  v15[16] = v16[16];
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = &a1[v18];
  uint64_t v21 = &a2[v18];
  uint64_t v22 = *((void *)v21 + 1);
  *(void *)uint64_t v20 = *(void *)v21;
  *((void *)v20 + 1) = v22;
  v20[16] = v21[16];
  uint64_t v23 = &a1[v19];
  uint64_t v24 = &a2[v19];
  uint64_t v26 = *(void *)v24;
  uint64_t v25 = *((void *)v24 + 1);
  *(void *)uint64_t v23 = v26;
  *((void *)v23 + 1) = v25;
  uint64_t v27 = a3[9];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  uint64_t v30 = *(void *)v29;
  char v31 = v29[8];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100195B7C(v30, v31);
  *(void *)uint64_t v28 = v30;
  v28[8] = v31;
  return a1;
}

uint64_t sub_1001BE504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = a2 + 16;
  long long v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_retain();
  v10(a1 + 16, v7, v9);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  swift_retain();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
    {
      uint64_t v15 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
    }
  }
  else
  {
    *uint64_t v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t type metadata accessor for SafariSheetModifier(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E74A18);
}

uint64_t sub_1001BE6BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10017DF08(&qword_100E94AE8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v21 - v11;
  sub_10006DF38(v2, (uint64_t)v6, &qword_100E94AE8);
  uint64_t v13 = type metadata accessor for MainViewModel.ModalModule(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v13) == 1)
  {
    sub_1001781AC((uint64_t)v6, &qword_100E94AE8);
LABEL_9:
    uint64_t v17 = type metadata accessor for URL();
    uint64_t v15 = a1;
    uint64_t v16 = 1;
    return _s7Weather24LocationCompositionStateOwst_0(v15, v16, 1, v17);
  }
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v18 = type metadata accessor for MainViewModel.ModalModule;
    uint64_t v19 = (uint64_t)v6;
LABEL_8:
    sub_1001BFF70(v19, (void (*)(void))v18);
    goto LABEL_9;
  }
  sub_1001BE1F4((uint64_t)v6, (uint64_t)v12, (void (*)(void))type metadata accessor for MainViewModel.ModalModule.LocationDetailModule);
  sub_1001BE1F4((uint64_t)v12, (uint64_t)v10, (void (*)(void))type metadata accessor for MainViewModel.ModalModule.LocationDetailModule);
  if (swift_getEnumCaseMultiPayload() != 6)
  {
    uint64_t v18 = type metadata accessor for MainViewModel.ModalModule.LocationDetailModule;
    uint64_t v19 = (uint64_t)v10;
    goto LABEL_8;
  }
  uint64_t v14 = type metadata accessor for URL();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, v10, v14);
  uint64_t v15 = a1;
  uint64_t v16 = 0;
  uint64_t v17 = v14;
  return _s7Weather24LocationCompositionStateOwst_0(v15, v16, 1, v17);
}

uint64_t sub_1001BE900(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DisplayMetrics();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v6 = type metadata accessor for LocationStackView();
  memcpy(__dst, (const void *)(a2 + *(int *)(v6 + 44)), 0x49uLL);
  sub_1001BEAB0((uint64_t)__dst);
  sub_1001BEAF4();
  sub_1001BEAB0((uint64_t)__dst);
  char v7 = v12[57];
  sub_1001EFFBC();
  uint64_t v8 = a2 + *(int *)(v6 + 48);
  uint64_t v9 = *(void *)v8;
  LOBYTE(a2) = *(unsigned char *)(v8 + 8);
  sub_100195B7C(*(void *)v8, a2);
  sub_100149AE8();
  LOBYTE(v6) = v10;
  sub_10018F6D8(v9, a2);
  LOBYTE(v9) = sub_1001F3798(v7, (uint64_t)v5, v6 & 1);
  sub_1001338DC((uint64_t)v5, (void (*)(void))type metadata accessor for DisplayMetrics);
  return v9 & 1;
}

uint64_t type metadata accessor for LocationStackView()
{
  return sub_100109098();
}

uint64_t sub_1001BEAB0(uint64_t a1)
{
  uint64_t v2 = sub_10017F62C(a1);
  v3(v2);
  return v1;
}

void sub_1001BEAF4()
{
  sub_100162EA0();
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for EnvironmentValues();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_10012B938();
  if (*(unsigned char *)(v0 + 72) == 1)
  {
    uint64_t v9 = *(void *)(v0 + 48);
    uint64_t v10 = *(void *)(v0 + 40);
    char v11 = *(_DWORD *)(v0 + 32);
    uint64_t v12 = *(void *)(v0 + 24);
    *(void *)uint64_t v4 = *(void *)v0;
    *(_OWORD *)(v4 + 8) = *(_OWORD *)(v0 + 8);
    *(void *)(v4 + 24) = v12;
    *(unsigned char *)(v4 + 32) = v11 & 1;
    *(void *)(v4 + 40) = v10;
    *(_WORD *)(v4 + 48) = v9;
    *(_OWORD *)(v4 + 56) = *(_OWORD *)(v0 + 56);
  }
  else
  {
    sub_1001F4E44(v0);
    static os_log_type_t.fault.getter();
    uint64_t v13 = static Log.runtimeIssuesLog.getter();
    if (sub_1005EFDD0(v13))
    {
      sub_10017E670();
      uint64_t v17 = sub_10016EEA8();
      sub_100214F3C(4.8149e-34);
      uint64_t v14 = sub_10016414C(0x6D6F654764697247, 0xEC00000079727465, &v17);
      sub_10017F094(v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_1005EFC40((void *)&_mh_execute_header, v15, v16, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.");
      sub_1001891D4();
      sub_100162EE0();
      sub_100162EE0();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    sub_1001F4E44(v0);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v5);
  }
  sub_100162694();
}

uint64_t sub_1001BECD0@<X0>(uint64_t a1@<X2>, unsigned char *a2@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v43 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v41 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  char v38 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_10017DF08(&qword_100E662F0);
  __chkstk_darwin(v40);
  uint64_t v42 = (uint64_t)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E65ED8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v39 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v44 = (char *)&v37 - v9;
  __chkstk_darwin(v8);
  uint64_t v45 = (char *)&v37 - v10;
  uint64_t v11 = type metadata accessor for MainViewSheetViewModifier(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100E94AE8);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for MainViewModel(0);
  uint64_t v18 = v17 - 8;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for MainViewModel.ModalModule(0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1001BFFC8();
  swift_release();
  sub_10006DF38((uint64_t)&v20[*(int *)(v18 + 32)], (uint64_t)v16, &qword_100E94AE8);
  sub_1001BFF70((uint64_t)v20, (void (*)(void))type metadata accessor for MainViewModel);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v21) != 1)
  {
    sub_1001BE1F4((uint64_t)v16, (uint64_t)v23, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
    if (qword_100E62668 != -1) {
      swift_once();
    }
    int v26 = byte_100F51C48;
    sub_1001BE268(a1, (uint64_t)v13, (void (*)(void))type metadata accessor for MainViewSheetViewModifier);
    uint64_t v28 = (uint64_t)v44;
    uint64_t v27 = (uint64_t)v45;
    if (v26 == 1)
    {
      sub_10019B2FC();
      uint64_t v29 = v41;
      uint64_t v30 = v43;
      (*(void (**)(uint64_t, void, uint64_t))(v41 + 104))(v28, enum case for UserInterfaceSizeClass.compact(_:), v43);
      _s7Weather24LocationCompositionStateOwst_0(v28, 0, 1, v30);
      uint64_t v31 = v42;
      uint64_t v32 = v42 + *(int *)(v40 + 48);
      sub_10006DF38(v27, v42, &qword_100E65ED8);
      sub_10006DF38(v28, v32, &qword_100E65ED8);
      if (_s7Weather24LocationCompositionStateOwet_0(v31, 1, v30) == 1)
      {
        sub_1001781AC(v28, &qword_100E65ED8);
        sub_1001781AC(v27, &qword_100E65ED8);
        sub_1001BFF70((uint64_t)v13, (void (*)(void))type metadata accessor for MainViewSheetViewModifier);
        if (_s7Weather24LocationCompositionStateOwet_0(v32, 1, v30) == 1)
        {
          sub_1001781AC(v31, &qword_100E65ED8);
LABEL_17:
          uint64_t result = sub_1001BFF70((uint64_t)v23, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
          goto LABEL_3;
        }
        goto LABEL_13;
      }
      uint64_t v33 = (uint64_t)v39;
      sub_10006DF38(v31, (uint64_t)v39, &qword_100E65ED8);
      if (_s7Weather24LocationCompositionStateOwet_0(v32, 1, v30) == 1)
      {
        sub_1001781AC(v28, &qword_100E65ED8);
        sub_1001781AC(v27, &qword_100E65ED8);
        sub_1001BFF70((uint64_t)v13, (void (*)(void))type metadata accessor for MainViewSheetViewModifier);
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v33, v30);
LABEL_13:
        sub_1001781AC(v31, &qword_100E662F0);
        goto LABEL_14;
      }
      uint64_t v35 = v38;
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v38, v32, v30);
      sub_10013516C((uint64_t)&unk_100E65F28);
      LODWORD(v40) = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v36 = *(void (**)(char *, uint64_t))(v29 + 8);
      v36(v35, v30);
      sub_1001781AC(v28, &qword_100E65ED8);
      sub_1001781AC(v27, &qword_100E65ED8);
      sub_1001BFF70((uint64_t)v13, (void (*)(void))type metadata accessor for MainViewSheetViewModifier);
      v36(v39, v30);
      sub_1001781AC(v31, &qword_100E65ED8);
      if (v40) {
        goto LABEL_17;
      }
    }
    else
    {
      sub_1001BFF70((uint64_t)v13, (void (*)(void))type metadata accessor for MainViewSheetViewModifier);
    }
LABEL_14:
    char v34 = sub_100A1BC34();
    uint64_t result = sub_1001BFF70((uint64_t)v23, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
    char v25 = v34 & 1;
    goto LABEL_15;
  }
  uint64_t result = sub_1001781AC((uint64_t)v16, &qword_100E94AE8);
LABEL_3:
  char v25 = 0;
LABEL_15:
  *uint64_t v46 = v25;
  return result;
}

uint64_t sub_1001BF3AC@<X0>(uint64_t a1@<X2>, unsigned char *a2@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v3 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v48 = v3;
  uint64_t v49 = v4;
  __chkstk_darwin(v3);
  uint64_t v43 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_10017DF08(&qword_100E662F0);
  __chkstk_darwin(v46);
  uint64_t v47 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E65ED8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v45 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v50 = (char *)&v43 - v11;
  __chkstk_darwin(v10);
  uint64_t v51 = (uint64_t)&v43 - v12;
  uint64_t v13 = type metadata accessor for MainViewSheetViewModifier(0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E94AE8);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for MainViewModel(0);
  uint64_t v20 = v19 - 8;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v44 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v43 - v23;
  uint64_t v25 = type metadata accessor for MainViewModel.ModalModule(0);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v43 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1001BFFC8();
  swift_release();
  sub_10006DF38((uint64_t)&v24[*(int *)(v20 + 32)], (uint64_t)v18, &qword_100E94AE8);
  sub_1001BFF70((uint64_t)v24, (void (*)(void))type metadata accessor for MainViewModel);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v25) != 1)
  {
    sub_1001BE1F4((uint64_t)v18, (uint64_t)v27, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
    uint64_t v30 = (uint64_t)v27;
    if (qword_100E62668 != -1) {
      swift_once();
    }
    int v31 = byte_100F51C48;
    sub_1001BE268(a1, (uint64_t)v15, (void (*)(void))type metadata accessor for MainViewSheetViewModifier);
    uint64_t v33 = (uint64_t)v50;
    uint64_t v32 = v51;
    if (v31 == 1)
    {
      sub_10019B2FC();
      uint64_t v34 = v48;
      (*(void (**)(uint64_t, void, uint64_t))(v49 + 104))(v33, enum case for UserInterfaceSizeClass.compact(_:), v48);
      _s7Weather24LocationCompositionStateOwst_0(v33, 0, 1, v34);
      uint64_t v35 = v47;
      uint64_t v36 = v47 + *(int *)(v46 + 48);
      sub_10006DF38(v32, v47, &qword_100E65ED8);
      sub_10006DF38(v33, v36, &qword_100E65ED8);
      if (_s7Weather24LocationCompositionStateOwet_0(v35, 1, v34) == 1)
      {
        sub_1001781AC(v33, &qword_100E65ED8);
        sub_1001781AC(v32, &qword_100E65ED8);
        sub_1001BFF70((uint64_t)v15, (void (*)(void))type metadata accessor for MainViewSheetViewModifier);
        if (_s7Weather24LocationCompositionStateOwet_0(v36, 1, v34) == 1)
        {
          sub_1001781AC(v35, &qword_100E65ED8);
LABEL_17:
          swift_retain();
          uint64_t v42 = (uint64_t)v44;
          sub_1001BFFC8();
          swift_release();
          swift_bridgeObjectRetain();
          sub_1001BFF70(v42, (void (*)(void))type metadata accessor for MainViewModel);
          swift_bridgeObjectRelease();
          sub_100A1B7E0();
          goto LABEL_14;
        }
        goto LABEL_12;
      }
      uint64_t v37 = (uint64_t)v45;
      sub_10006DF38(v35, (uint64_t)v45, &qword_100E65ED8);
      if (_s7Weather24LocationCompositionStateOwet_0(v36, 1, v34) == 1)
      {
        sub_1001781AC(v33, &qword_100E65ED8);
        sub_1001781AC(v32, &qword_100E65ED8);
        sub_1001BFF70((uint64_t)v15, (void (*)(void))type metadata accessor for MainViewSheetViewModifier);
        (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v37, v34);
LABEL_12:
        sub_1001781AC(v35, &qword_100E662F0);
        goto LABEL_13;
      }
      uint64_t v39 = v49;
      uint64_t v40 = v43;
      (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v43, v36, v34);
      sub_10013516C((uint64_t)&unk_100E65F28);
      LODWORD(v46) = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v41 = *(void (**)(char *, uint64_t))(v39 + 8);
      v41(v40, v34);
      sub_1001781AC(v33, &qword_100E65ED8);
      sub_1001781AC(v51, &qword_100E65ED8);
      sub_1001BFF70((uint64_t)v15, (void (*)(void))type metadata accessor for MainViewSheetViewModifier);
      v41(v45, v34);
      sub_1001781AC(v35, &qword_100E65ED8);
      if (v46) {
        goto LABEL_17;
      }
    }
    else
    {
      sub_1001BFF70((uint64_t)v15, (void (*)(void))type metadata accessor for MainViewSheetViewModifier);
    }
LABEL_13:
    char v38 = sub_100A1BAE0();
LABEL_14:
    char v29 = v38;
    uint64_t result = sub_1001BFF70(v30, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
    goto LABEL_15;
  }
  uint64_t result = sub_1001781AC((uint64_t)v18, &qword_100E94AE8);
  char v29 = 0;
LABEL_15:
  *uint64_t v52 = v29 & 1;
  return result;
}

void sub_1001BFAF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_100162EA0();
  a19 = v21;
  a20 = v22;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v27 = sub_10017DF08(&qword_100E94AE8);
  uint64_t v28 = sub_100109308(v27);
  __chkstk_darwin(v28);
  sub_10012B938();
  uint64_t v29 = type metadata accessor for MainViewModel(0);
  uint64_t v30 = v29 - 8;
  __chkstk_darwin(v29);
  sub_1001626E0();
  uint64_t v33 = v32 - v31;
  uint64_t v34 = type metadata accessor for MainViewModel.ModalModule(0);
  sub_100162E4C();
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)&a9 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1001BFFC8();
  swift_release();
  sub_10006DF38(v33 + *(int *)(v30 + 32), v20, &qword_100E94AE8);
  sub_1001BFF70(v33, (void (*)(void))type metadata accessor for MainViewModel);
  if (_s7Weather24LocationCompositionStateOwet_0(v20, 1, v34) == 1)
  {
    sub_1001781AC(v20, &qword_100E94AE8);
    char v38 = 0;
  }
  else
  {
    uint64_t v39 = sub_1001BE1F4(v20, (uint64_t)v37, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
    char v40 = v24(v39);
    sub_1001BFF70((uint64_t)v37, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
    char v38 = v40 & 1;
  }
  unsigned char *v26 = v38;
  sub_100162694();
}

uint64_t sub_1001BFCD0()
{
  sub_10018F6D8(*(void *)(v0 + v1), *(unsigned char *)(v0 + v1 + 8));
  sub_10018F6D8(*(void *)(v0 + v1 + 16), *(unsigned char *)(v0 + v1 + 24));
  return type metadata accessor for LocationComponentHeaderViewModel(0);
}

uint64_t sub_1001BFD28()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001BFD40(uint64_t a1)
{
  uint64_t v4 = *(void *)(v2 - 552);
  return sub_100178CEC(a1, v4, v1);
}

void sub_1001BFD60()
{
  void (*v17)(void *__return_ptr);
  void (*v18)(void *);
  uint64_t v19;
  void v20[4];

  sub_100162EA0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  sub_10017DF08(v5);
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_10016278C();
  uint64_t v10 = (void *)(v8 - v9);
  __chkstk_darwin(v11);
  uint64_t v13 = (void *)((char *)v20 - v12 + 16);
  sub_1001D0DE0();
  uint64_t v15 = v0 + *(void *)(v14 + 120);
  sub_100126024();
  sub_10006DF38(v15, (uint64_t)v13, v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_10017DF08(v4);
      sub_1001522B4();
      swift_release();
    }
    else
    {
      sub_1001522B4();
    }
  }
  else
  {
    uint64_t v17 = (void (*)(void *__return_ptr))*v13;
    uint64_t v19 = v2;
    uint64_t v18 = (void (*)(void *))v13[2];
    v17(v20);
    v18(v20);
    swift_release();
    swift_release();
    sub_10017DF08(v4);
    *uint64_t v10 = v20[0];
    sub_100136460();
    swift_storeEnumTagMultiPayload();
    sub_100182350();
    sub_1001DF004((uint64_t)v10, v15, v6);
    swift_endAccess();
  }
  sub_100162694();
}

uint64_t sub_1001BFF18(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001BFF70(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

void sub_1001BFFC8()
{
}

uint64_t sub_1001BFFF0(uint64_t (*a1)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = type metadata accessor for MainViewSheetViewModifier(0);
  sub_1001627C0(v2);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return a1(v4, v5, v6);
}

uint64_t type metadata accessor for MainViewSheetViewModifier(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EAD5C0);
}

uint64_t type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EA9C38);
}

uint64_t sub_1001C0098(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v10(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = sub_10017DF08(&qword_100E66460);
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v6, 3, v7);
  if (!result)
  {
    uint64_t v9 = v6 + *(int *)(v7 + 48);
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v9, v5);
  }
  return result;
}

uint64_t sub_1001C018C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  uint64_t v156 = a3;
  uint64_t v157 = a2;
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v158 = a1;
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  void *v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = v9[3];
  _OWORD v8[2] = v9[2];
  v8[3] = v11;
  uint64_t v12 = v9[5];
  v8[4] = v9[4];
  v8[5] = v12;
  uint64_t v13 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  uint64_t v14 = *(int *)(v13 + 28);
  uint64_t v15 = (void *)((char *)v8 + v14);
  uint64_t v16 = (void *)((char *)v9 + v14);
  uint64_t v17 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
  {
    uint64_t v18 = sub_10017DF08(&qword_100E63750);
    memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    uint64_t v19 = v16[1];
    void *v15 = *v16;
    v15[1] = v19;
    uint64_t v20 = *(int *)(v17 + 20);
    uint64_t v21 = (char *)v15 + v20;
    uint64_t v22 = (char *)v16 + v20;
    uint64_t v23 = type metadata accessor for TemperatureScaleConfiguration();
    uint64_t v154 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
    swift_bridgeObjectRetain();
    v154(v21, v22, v23);
    uint64_t v24 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    *(void *)&v21[v24[5]] = *(void *)&v22[v24[5]];
    *(void *)&v21[v24[6]] = *(void *)&v22[v24[6]];
    *(void *)&v21[v24[7]] = *(void *)&v22[v24[7]];
    uint64_t v25 = v24[8];
    uint64_t v26 = &v21[v25];
    uint64_t v27 = &v22[v25];
    uint64_t v29 = *(void *)v27;
    uint64_t v28 = *((void *)v27 + 1);
    *(void *)uint64_t v26 = v29;
    *((void *)v26 + 1) = v28;
    v21[v24[9]] = v22[v24[9]];
    swift_bridgeObjectRetain();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
  }
  uint64_t v30 = *(int *)(v13 + 32);
  uint64_t v31 = (void *)((char *)v8 + v30);
  uint64_t v32 = (void *)((char *)v9 + v30);
  uint64_t v33 = v32[1];
  *uint64_t v31 = *v32;
  v31[1] = v33;
  uint64_t v34 = v156[7];
  uint64_t v35 = v158 + v34;
  uint64_t v36 = v157 + v34;
  *(void *)(v158 + v34) = *(void *)(v157 + v34);
  uint64_t v37 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
  char v38 = (void *)(v35 + v37);
  uint64_t v39 = (const void *)(v36 + v37);
  uint64_t v40 = type metadata accessor for WeatherDescription();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v148 = v40;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
  {
    uint64_t v41 = sub_10017DF08(&qword_100E63758);
    memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
  }
  uint64_t v42 = v156[8];
  uint64_t v43 = (void *)(v158 + v42);
  uint64_t v44 = v157 + v42;
  uint64_t v45 = *(void *)(v157 + v42 + 8);
  *uint64_t v43 = *(void *)(v157 + v42);
  v43[1] = v45;
  uint64_t v46 = *(void *)(v157 + v42 + 24);
  v43[2] = *(void *)(v157 + v42 + 16);
  v43[3] = v46;
  uint64_t v47 = *(void *)(v157 + v42 + 40);
  v43[4] = *(void *)(v157 + v42 + 32);
  v43[5] = v47;
  uint64_t v48 = *(void *)(v157 + v42 + 56);
  v43[6] = *(void *)(v157 + v42 + 48);
  v43[7] = v48;
  uint64_t v49 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
  uint64_t v50 = (char *)v43 + v49;
  uint64_t v51 = v44 + v49;
  uint64_t v52 = type metadata accessor for Date();
  uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v152 = v53;
  uint64_t v153 = v52;
  v53((uint64_t)v50, v51, v52);
  uint64_t v54 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v55 = *(int *)(v54 + 20);
  uint64_t v56 = &v50[v55];
  uint64_t v57 = (const void *)(v51 + v55);
  uint64_t v58 = type metadata accessor for Elevation();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v58))
  {
    uint64_t v59 = sub_10017DF08(&qword_100E63760);
    memcpy(v56, v57, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, 0, 1, v58);
  }
  uint64_t v60 = *(int *)(v54 + 24);
  uint64_t v61 = &v50[v60];
  uint64_t v62 = (const void *)(v51 + v60);
  uint64_t v63 = type metadata accessor for BackgroundMoonData();
  uint64_t v155 = v54;
  uint64_t v150 = v63;
  uint64_t v151 = v58;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, v63))
  {
    uint64_t v64 = sub_10017DF08(&qword_100E63768);
    memcpy(v61, v62, *(void *)(*(void *)(v64 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v61, 0, 1, v63);
  }
  uint64_t v65 = v156[9];
  uint64_t v66 = v156[10];
  uint64_t v67 = (void *)(v158 + v65);
  uint64_t v68 = (void *)(v157 + v65);
  uint64_t v69 = v68[1];
  *uint64_t v67 = *v68;
  v67[1] = v69;
  uint64_t v70 = v68[3];
  v67[2] = v68[2];
  v67[3] = v70;
  uint64_t v71 = v68[5];
  v67[4] = v68[4];
  v67[5] = v71;
  uint64_t v72 = v68[7];
  v67[6] = v68[6];
  v67[7] = v72;
  uint64_t v73 = v68[9];
  v67[8] = v68[8];
  v67[9] = v73;
  uint64_t v74 = v68[11];
  v67[10] = v68[10];
  v67[11] = v74;
  uint64_t v75 = v68[13];
  v67[12] = v68[12];
  v67[13] = v75;
  uint64_t v76 = v158 + v66;
  uint64_t v77 = v157 + v66;
  uint64_t v146 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v148 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v146(v76, v77, v148);
  uint64_t v78 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
  uint64_t v79 = (void *)(v76 + v78);
  uint64_t v80 = (void *)(v77 + v78);
  uint64_t v81 = v80[1];
  *uint64_t v79 = *v80;
  v79[1] = v81;
  uint64_t v82 = v156[11];
  uint64_t v83 = v156[12];
  uint64_t v84 = (void *)(v158 + v82);
  uint64_t v85 = (void *)(v157 + v82);
  uint64_t v86 = v85[1];
  *uint64_t v84 = *v85;
  v84[1] = v86;
  uint64_t v87 = v85[3];
  v84[2] = v85[2];
  v84[3] = v87;
  uint64_t v88 = v85[5];
  v84[4] = v85[4];
  v84[5] = v88;
  uint64_t v89 = v158 + v83;
  uint64_t v90 = v157 + v83;
  uint64_t v91 = type metadata accessor for PressureTrend();
  uint64_t v92 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v92(v89, v90, v91);
  uint64_t v93 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
  uint64_t v94 = v93[5];
  unint64_t v95 = (void *)(v89 + v94);
  uint64_t v96 = (void *)(v90 + v94);
  uint64_t v97 = v96[1];
  *unint64_t v95 = *v96;
  v95[1] = v97;
  uint64_t v98 = v93[6];
  uint64_t v99 = (void *)(v89 + v98);
  uint64_t v100 = (void *)(v90 + v98);
  uint64_t v149 = v100[1];
  *uint64_t v99 = *v100;
  v99[1] = v149;
  uint64_t v101 = v93[7];
  uint64_t v102 = (void *)(v89 + v101);
  uint64_t v103 = (void *)(v90 + v101);
  uint64_t v147 = v103[1];
  *uint64_t v102 = *v103;
  v102[1] = v147;
  *(void *)(v89 + v93[8]) = *(void *)(v90 + v93[8]);
  uint64_t v104 = v93[9];
  uint64_t v105 = (void *)(v89 + v104);
  uint64_t v106 = (void *)(v90 + v104);
  uint64_t v145 = v106[1];
  *uint64_t v105 = *v106;
  v105[1] = v145;
  uint64_t v107 = v156[13];
  uint64_t v108 = v156[14];
  uint64_t v109 = v158 + v107;
  uint64_t v110 = v157 + v107;
  uint64_t v111 = *(void *)(v110 + 8);
  *(void *)uint64_t v109 = *(void *)v110;
  *(void *)(v109 + 8) = v111;
  uint64_t v112 = *(void *)(v110 + 24);
  *(void *)(v109 + 16) = *(void *)(v110 + 16);
  *(void *)(v109 + 24) = v112;
  uint64_t v113 = *(void *)(v110 + 40);
  *(void *)(v109 + 32) = *(void *)(v110 + 32);
  *(void *)(v109 + 40) = v113;
  uint64_t v114 = *(void *)(v110 + 56);
  *(void *)(v109 + 48) = *(void *)(v110 + 48);
  *(void *)(v109 + 56) = v114;
  uint64_t v115 = *(void *)(v110 + 72);
  *(void *)(v109 + 64) = *(void *)(v110 + 64);
  *(void *)(v109 + 72) = v115;
  uint64_t v116 = *(void *)(v110 + 88);
  *(void *)(v109 + 80) = *(void *)(v110 + 80);
  *(void *)(v109 + 88) = v116;
  uint64_t v117 = *(void *)(v110 + 104);
  *(void *)(v109 + 96) = *(void *)(v110 + 96);
  *(void *)(v109 + 104) = v117;
  uint64_t v118 = *(void *)(v110 + 120);
  *(void *)(v109 + 112) = *(void *)(v110 + 112);
  *(void *)(v109 + 120) = v118;
  uint64_t v119 = *(void *)(v110 + 136);
  *(void *)(v109 + 128) = *(void *)(v110 + 128);
  *(void *)(v109 + 136) = v119;
  uint64_t v120 = *(void *)(v110 + 152);
  *(void *)(v109 + 144) = *(void *)(v110 + 144);
  *(void *)(v109 + 152) = v120;
  uint64_t v121 = *(void *)(v110 + 168);
  *(void *)(v109 + 160) = *(void *)(v110 + 160);
  *(void *)(v109 + 168) = v121;
  uint64_t v122 = *(void *)(v110 + 184);
  *(void *)(v109 + 176) = *(void *)(v110 + 176);
  *(void *)(v109 + 184) = v122;
  uint64_t v123 = *(void *)(v110 + 200);
  *(void *)(v109 + 192) = *(void *)(v110 + 192);
  *(void *)(v109 + 200) = v123;
  *(_OWORD *)(v109 + 208) = *(_OWORD *)(v110 + 208);
  *(void *)(v109 + 224) = *(void *)(v110 + 224);
  uint64_t v124 = v158 + v108;
  uint64_t v125 = v157 + v108;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v152(v124, v125, v153);
  uint64_t v126 = *(int *)(v155 + 20);
  uint64_t v127 = (void *)(v124 + v126);
  uint64_t v128 = (const void *)(v125 + v126);
  if (_s7Weather24LocationCompositionStateOwet_0(v125 + v126, 1, v151))
  {
    uint64_t v129 = sub_10017DF08(&qword_100E63760);
    memcpy(v127, v128, *(void *)(*(void *)(v129 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v151 - 8) + 16))(v127, v128, v151);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v127, 0, 1, v151);
  }
  uint64_t v130 = *(int *)(v155 + 24);
  uint64_t v131 = (void *)(v124 + v130);
  uint64_t v132 = (const void *)(v125 + v130);
  if (_s7Weather24LocationCompositionStateOwet_0(v125 + v130, 1, v150))
  {
    uint64_t v133 = sub_10017DF08(&qword_100E63768);
    memcpy(v131, v132, *(void *)(*(void *)(v133 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v150 - 8) + 16))(v131, v132, v150);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v131, 0, 1, v150);
  }
  uint64_t v134 = v156[15];
  uint64_t v135 = (void *)(v158 + v134);
  uint64_t v136 = (void *)(v157 + v134);
  uint64_t v137 = v136[1];
  void *v135 = *v136;
  v135[1] = v137;
  uint64_t v138 = v136[3];
  v135[2] = v136[2];
  v135[3] = v138;
  uint64_t v139 = v136[5];
  v135[4] = v136[4];
  v135[5] = v139;
  uint64_t v140 = v136[7];
  v135[6] = v136[6];
  v135[7] = v140;
  uint64_t v141 = v136[9];
  v135[8] = v136[8];
  v135[9] = v141;
  uint64_t v142 = v136[11];
  v135[10] = v136[10];
  v135[11] = v142;
  uint64_t v143 = v136[13];
  v135[12] = v136[12];
  v135[13] = v143;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v158;
}

uint64_t sub_1001C0BB0()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t sub_1001C0BF0()
{
  uint64_t v0 = sub_1001C0C1C();
  return sub_100182AB8(v0);
}

uint64_t sub_1001C0C1C()
{
  sub_1001C0C58();
  EnvironmentValues.subscript.getter();
  return v1;
}

unint64_t sub_1001C0C58()
{
  unint64_t result = qword_100E78CD8;
  if (!qword_100E78CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E78CD8);
  }
  return result;
}

uint64_t sub_1001C0CA4()
{
  uint64_t v0 = sub_1001C0CD0();
  return sub_100182AB8(v0);
}

uint64_t sub_1001C0CD0()
{
  return sub_10018C9CC((void (*)(void))sub_10019C8D4);
}

uint64_t sub_1001C0CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100EABE28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001C0D58(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[8];
  uint64_t v5 = type metadata accessor for URL();
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = a1 + a2[9];
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + *(int *)(type metadata accessor for LearnMoreAttributorViewModel() + 24);
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v7, v5);
  }
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v8 = a1 + a2[11];
  uint64_t v9 = type metadata accessor for LocationOfInterest();
  if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  uint64_t v10 = a1 + a2[14];
  uint64_t v11 = type metadata accessor for HomeAndWorkRefinementRowViewModel();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v10, 1, v11);
  if (!result)
  {
    uint64_t v13 = v10 + *(int *)(v11 + 20);
    uint64_t v14 = type metadata accessor for Location();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
    uint64_t v15 = v10 + *(int *)(v11 + 24);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    return v16(v15, v9);
  }
  return result;
}

uint64_t sub_1001C0F84(id *a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      type metadata accessor for ListViewAction();
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result != 2) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 1:
      type metadata accessor for LocationViewerViewAction();
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result == 2)
      {
LABEL_13:
        uint64_t v3 = type metadata accessor for Location.Identifier();
      }
      else if (result == 1)
      {
LABEL_14:
        uint64_t v3 = type metadata accessor for WeatherMapOverlayKind();
      }
      else
      {
LABEL_6:
        if (result) {
          return result;
        }
        uint64_t v3 = type metadata accessor for LocationModel();
      }
LABEL_19:
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t v5 = v3;
      uint64_t v6 = (uint64_t)a1;
LABEL_20:
      return v4(v6, v5);
    case 3:
      type metadata accessor for SearchViewAction();
      uint64_t result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
          uint64_t v3 = type metadata accessor for CodableError();
          goto LABEL_19;
        case 1:
        case 2:
          return swift_bridgeObjectRelease();
        case 3:
        case 6:
          goto LABEL_11;
        case 4:
          uint64_t v3 = type metadata accessor for LocationOfInterest();
          goto LABEL_19;
        case 5:

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v7 = (uint64_t)a1 + *(int *)(type metadata accessor for SearchLocation() + 32);
          uint64_t v8 = type metadata accessor for Location();
          uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v7, 1, v8);
          if (result) {
            return result;
          }
          uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
          uint64_t v6 = v7;
          uint64_t v5 = v8;
          break;
        default:
          return result;
      }
      goto LABEL_20;
    case 4:
      type metadata accessor for InteractiveMapViewAction();
      uint64_t result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
        case 1:
        case 2:
        case 4:
LABEL_11:
          uint64_t v3 = type metadata accessor for Location();
          goto LABEL_19;
        case 3:
          goto LABEL_14;
        default:
          return result;
      }
      return result;
    case 5:
      a1 = (id *)((char *)a1 + *(int *)(type metadata accessor for DisplayMetrics() + 36));
      uint64_t v3 = type metadata accessor for DynamicTypeSize();
      goto LABEL_19;
    default:
      return result;
  }
}

uint64_t sub_1001C11E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  uint64_t v2 = type metadata accessor for ContentStatusBannerPresentationViewModifier(0);
  uint64_t v24 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10017DF08(&qword_100E8F098);
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10017DF08(&qword_100E8F0A0);
  __chkstk_darwin(v25);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E8F0A8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E8F0B0);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10015176C();
  uint64_t v16 = swift_allocObject();
  sub_1001516CC();
  uint64_t v17 = sub_10017DF08(&qword_100E8F0B8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v6, v26, v17);
  uint64_t v18 = (uint64_t (**)())&v6[*(int *)(v4 + 44)];
  *uint64_t v18 = sub_1006FE5F0;
  v18[1] = (uint64_t (*)())v16;
  if (sub_1001C15A0()) {
    double v19 = 1.0;
  }
  else {
    double v19 = 0.0;
  }
  sub_10006DF38((uint64_t)v6, (uint64_t)v8, &qword_100E8F098);
  *(double *)&v8[*(int *)(v25 + 36)] = v19;
  sub_10017DF4C((uint64_t)v6, &qword_100E8F098);
  sub_1001C15A0();
  sub_1001C1C7C((uint64_t)&unk_100E8F0C0);
  View.accessibilityHidden(_:)();
  sub_10017DF4C((uint64_t)v8, &qword_100E8F0A0);
  sub_1000FA290();
  uint64_t v21 = v20;
  sub_10006DF38((uint64_t)v11, (uint64_t)v15, &qword_100E8F0A8);
  uint64_t v22 = &v15[*(int *)(v13 + 44)];
  *(void *)uint64_t v22 = 0;
  *((void *)v22 + 1) = v21;
  sub_10017DF4C((uint64_t)v11, &qword_100E8F0A8);
  return sub_10024D364((uint64_t)v15, v27, &qword_100E8F0B0);
}

BOOL sub_1001C15A0()
{
  uint64_t v0 = sub_10017DF08(&qword_100E63A10);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for ContentStatusBannerPresentationMetrics(0);
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ContentStatusBannerPresentationViewModifier(0);
  sub_10017DF08(&qword_100E8EF18);
  State.wrappedValue.getter();
  sub_10006DF38((uint64_t)&v6[*(int *)(v4 + 28)], (uint64_t)v2, &qword_100E63A10);
  uint64_t v7 = type metadata accessor for ContentStatusBanner();
  BOOL v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v2, 1, v7) != 1;
  sub_10017DF4C((uint64_t)v2, &qword_100E63A10);
  sub_100151660();
  return v8;
}

uint64_t type metadata accessor for ContentStatusBannerPresentationViewModifier(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E8EF78);
}

uint64_t sub_1001C1708@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v30 = sub_10017DF08(&qword_100E651D0);
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for BorderlessButtonStyle();
  uint64_t v35 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PrimitiveButtonStyleConfiguration();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = sub_10017DF08(&qword_100E8EBC8);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v33 = v10;
  uint64_t v34 = v11;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100E8EBD0);
  uint64_t v28 = *(void *)(v14 - 8);
  uint64_t v29 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  unint64_t v17 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v18 = swift_allocObject() + v17;
  uint64_t v19 = v4;
  uint64_t v20 = (uint64_t)v32;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v18, (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  uint64_t v36 = a1;
  sub_10017DF08(&qword_100E8EBD8);
  sub_1001C1C7C((uint64_t)&unk_100E8EBE0);
  Button.init(action:label:)();
  BorderlessButtonStyle.init()();
  unint64_t v21 = sub_10024D5E4((uint64_t)&unk_100E8EBF8);
  unint64_t v22 = sub_10015180C((uint64_t)&qword_100E653B0);
  uint64_t v23 = v33;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v6, v19);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v23);
  uint64_t v24 = enum case for DynamicTypeSize.xxLarge(_:);
  uint64_t v25 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v20, v24, v25);
  sub_10015180C((uint64_t)&qword_100E651F0);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    uint64_t v37 = v23;
    uint64_t v38 = v19;
    unint64_t v39 = v21;
    unint64_t v40 = v22;
    swift_getOpaqueTypeConformance2();
    sub_10024D5E4((uint64_t)&unk_100EAADB0);
    uint64_t v27 = v29;
    View.dynamicTypeSize<A>(_:)();
    sub_10017DF4C(v20, &qword_100E651D0);
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v16, v27);
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1001C1C7C(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    sub_10018C6DC(v3);
    v5();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_1001C1CF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v110 = a1;
  uint64_t v108 = type metadata accessor for WeatherFormatPlaceholder();
  sub_100179C0C();
  uint64_t v128 = v1;
  __chkstk_darwin(v2);
  sub_100109314();
  uint64_t v109 = v3;
  uint64_t v4 = sub_10017DF08(&qword_100E63730);
  __chkstk_darwin(v4 - 8);
  sub_100109314();
  uint64_t v107 = v5;
  uint64_t v122 = type metadata accessor for NSUnitPressure.BaseWeatherFormatStyle();
  sub_100179C0C();
  uint64_t v127 = v6;
  __chkstk_darwin(v7);
  sub_100162EF8();
  uint64_t v105 = v8;
  __chkstk_darwin(v9);
  uint64_t v120 = (char *)&v129._object - v10;
  uint64_t v11 = type metadata accessor for PressureTrend();
  sub_100179C0C();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_100162EF8();
  uint64_t v119 = v15;
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v129._object - v18;
  __chkstk_darwin(v17);
  unint64_t v21 = (char *)&v129._object - v20;
  type metadata accessor for CurrentWeather();
  sub_100179C0C();
  uint64_t v23 = v22;
  __chkstk_darwin(v24);
  sub_1001626E0();
  uint64_t v118 = sub_10017DF08(&qword_100E6BED0);
  sub_100179C0C();
  uint64_t v106 = v25;
  __chkstk_darwin(v26);
  sub_1001626E0();
  uint64_t v29 = v28 - v27;
  type metadata accessor for WeatherData(0);
  WeatherDataModel.currentWeather.getter();
  uint64_t v126 = v29;
  CurrentWeather.pressure.getter();
  uint64_t v30 = *(void (**)(uint64_t))(v23 + 8);
  uint64_t v31 = sub_10017EEF8();
  v30(v31);
  WeatherDataModel.currentWeather.getter();
  CurrentWeather.pressureTrend.getter();
  uint64_t v32 = sub_10017EEF8();
  v30(v32);
  uint64_t v33 = *(void (**)(uint64_t, char *, uint64_t))(v13 + 16);
  uint64_t v121 = v21;
  uint64_t v104 = v13 + 16;
  uint64_t v103 = v33;
  v33((uint64_t)v19, v21, v11);
  uint64_t v111 = v13;
  uint64_t v34 = *(uint64_t (**)(char *, uint64_t))(v13 + 88);
  uint64_t v123 = v11;
  int v35 = v34(v19, v11);
  if (v35 == enum case for PressureTrend.rising(_:))
  {
    id v36 = [self mainBundle];
    sub_1001631D8();
    uint64_t v37 = 0x676E69736972;
LABEL_7:
    unint64_t v46 = 0xE600000000000000;
    v47._uint64_t countAndFlagsBits = 0;
    v47._object = (void *)0xE000000000000000;
    v129._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
    Swift::String v48 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v37, (Swift::String_optional)0, (NSBundle)v36, v47, v129);
    uint64_t countAndFlagsBits = v48._countAndFlagsBits;
    object = v48._object;

    goto LABEL_8;
  }
  if (v35 != enum case for PressureTrend.falling(_:))
  {
    if (v35 != enum case for PressureTrend.steady(_:))
    {
      (*(void (**)(char *, uint64_t))(v111 + 8))(v19, v123);
      uint64_t countAndFlagsBits = 0;
      object = (void *)0xE000000000000000;
      goto LABEL_8;
    }
    id v36 = [self mainBundle];
    sub_1001631D8();
    uint64_t v37 = 0x796461657473;
    goto LABEL_7;
  }
  id v38 = [self mainBundle];
  sub_1001631D8();
  uint64_t countAndFlagsBits = sub_1001824D8(0x676E696C6C6166, 0xE700000000000000, v39, v40, v41, v42, v43, v44);
  object = v45;

LABEL_8:
  id v49 = [self mainBundle];
  sub_1001631D8();
  uint64_t v102 = sub_1001824D8(0x3225202C40243125, 0xEA00000000004024, v50, v51, v52, v53, v54, v55);
  uint64_t v101 = v56;

  sub_10017DF08(&qword_100E64020);
  uint64_t v57 = swift_allocObject();
  *(_OWORD *)(v57 + 16) = xmmword_100C25ED0;
  uint64_t v112 = type metadata accessor for Locale();
  uint64_t v58 = v107;
  _s7Weather24LocationCompositionStateOwst_0(v107, 1, 1, v112);
  static Set<>.full.getter();
  uint64_t v59 = v120;
  static WeatherFormatStyle<>.weather(_:locale:)();
  swift_bridgeObjectRelease();
  sub_10012B8A0(v58);
  uint64_t v60 = v105;
  NSUnitPressure.BaseWeatherFormatStyle.accessible.getter();
  uint64_t v124 = *(void (**)(char *, uint64_t))(v127 + 8);
  v127 += 8;
  uint64_t v61 = v122;
  v124(v59, v122);
  unsigned int v100 = enum case for WeatherFormatPlaceholder.none(_:);
  uint64_t v62 = v128;
  v129._object = *(void **)(v128 + 104);
  uint64_t v116 = v128 + 104;
  uint64_t v63 = v109;
  uint64_t v64 = v108;
  ((void (*)(uint64_t))v129._object)(v109);
  uint64_t v115 = type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  unint64_t v114 = sub_1001C2670();
  uint64_t v65 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v67 = v66;
  swift_release();
  uint64_t v68 = *(void (**)(void, void))(v62 + 8);
  uint64_t v128 = v62 + 8;
  uint64_t v113 = v68;
  v68(v63, v64);
  v124((char *)v60, v61);
  *(void *)(v57 + 56) = &type metadata for String;
  unint64_t v69 = sub_10012B7C0();
  *(void *)(v57 + 32) = v65;
  *(void *)(v57 + 40) = v67;
  *(void *)(v57 + 96) = &type metadata for String;
  *(void *)(v57 + 104) = v69;
  uint64_t v70 = countAndFlagsBits;
  *(void *)(v57 + 64) = v69;
  *(void *)(v57 + 72) = v70;
  *(void *)(v57 + 80) = object;
  swift_bridgeObjectRetain();
  uint64_t v105 = String.init(format:_:)();
  uint64_t v102 = v71;
  swift_bridgeObjectRelease();
  v103(v119, v121, v123);
  static Set<>.value.getter();
  sub_1001A13B4();
  uint64_t v72 = v120;
  static WeatherFormatStyle<>.weather(_:locale:)();
  swift_bridgeObjectRelease();
  sub_10012B8A0(v58);
  uint64_t v73 = v100;
  uint64_t v74 = (void (*)(uint64_t, uint64_t, uint64_t))v129._object;
  ((void (*)(uint64_t, void, uint64_t))v129._object)(v63, v100, v64);
  static UnitManager.standard.getter();
  uint64_t v75 = v118;
  uint64_t v76 = v122;
  uint64_t v104 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v103 = v77;
  swift_release();
  uint64_t v78 = sub_10017B0EC();
  v79(v78);
  v124(v72, v76);
  static Set<>.unit.getter();
  sub_1001A13B4();
  static WeatherFormatStyle<>.weather(_:locale:)();
  swift_bridgeObjectRelease();
  sub_10012B8A0(v58);
  v74(v63, v73, v64);
  static UnitManager.standard.getter();
  uint64_t v80 = v126;
  uint64_t v81 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v83 = v82;
  swift_release();
  uint64_t v84 = sub_10017B0EC();
  v85(v84);
  v124(v72, v76);
  sub_1001C26C0();
  uint64_t v87 = v86;
  (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v80, v75);
  uint64_t v88 = v110;
  uint64_t v89 = v111;
  uint64_t v90 = v123;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v111 + 32))(v110, v119, v123);
  uint64_t v91 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
  uint64_t v92 = (uint64_t *)(v88 + v91[5]);
  uint64_t v93 = (uint64_t)object;
  *uint64_t v92 = countAndFlagsBits;
  v92[1] = v93;
  uint64_t v94 = (uint64_t *)(v88 + v91[6]);
  unint64_t v95 = v103;
  *uint64_t v94 = v104;
  v94[1] = (uint64_t)v95;
  uint64_t v96 = (uint64_t *)(v88 + v91[7]);
  *uint64_t v96 = v81;
  v96[1] = v83;
  *(void *)(v88 + v91[8]) = v87;
  uint64_t v97 = (uint64_t *)(v88 + v91[9]);
  uint64_t v98 = v102;
  *uint64_t v97 = v105;
  v97[1] = v98;
  return (*(uint64_t (**)(char *, uint64_t))(v89 + 8))(v121, v90);
}

unint64_t sub_1001C2670()
{
  unint64_t result = qword_100E6BF58;
  if (!qword_100E6BF58)
  {
    type metadata accessor for NSUnitPressure.BaseWeatherFormatStyle();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6BF58);
  }
  return result;
}

uint64_t sub_1001C26C0()
{
  uint64_t v0 = sub_10017DF08(&qword_100E6BED0);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v7 = (char *)&v16 - v6;
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v16 - v8;
  type metadata accessor for PressureFormatter();
  static PressureFormatter.minPressure.getter();
  static PressureFormatter.maxPressure.getter();
  uint64_t v10 = (void *)Measurement.unit.getter();
  Measurement<>.converted(to:)();

  Measurement.value.getter();
  Measurement.value.getter();
  double v12 = v11;
  uint64_t result = Measurement.value.getter();
  if (v12 > v14)
  {
    __break(1u);
  }
  else
  {
    Double.clamped(to:)();
    Measurement.value.getter();
    Measurement.value.getter();
    Measurement.value.getter();
    uint64_t v15 = *(void (**)(char *, uint64_t))(v1 + 8);
    v15(v4, v0);
    v15(v7, v0);
    return ((uint64_t (*)(char *, uint64_t))v15)(v9, v0);
  }
  return result;
}

uint64_t sub_1001C28EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001C2950@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  char v289 = a1;
  uint64_t v277 = a2;
  *(void *)&long long v300 = *v2;
  uint64_t v292 = type metadata accessor for WeatherFormatPlaceholder();
  sub_100179C0C();
  uint64_t v310 = v3;
  __chkstk_darwin(v4);
  sub_100109314();
  v288[0] = v5;
  uint64_t v6 = sub_10017DF08(&qword_100E63730);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v291 = v8;
  uint64_t v308 = type metadata accessor for NSUnitSpeed.WeatherFormatUsage();
  sub_100179C0C();
  uint64_t v305 = v9;
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v287 = v11;
  uint64_t v302 = type metadata accessor for NSUnitSpeed.BaseWeatherFormatStyle();
  sub_100179C0C();
  uint64_t v306 = v12;
  __chkstk_darwin(v13);
  sub_100162EF8();
  uint64_t v276 = v14;
  __chkstk_darwin(v15);
  uint64_t v281 = (char *)v253 - v16;
  uint64_t v17 = sub_10017DF08(&qword_100E952A8);
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  sub_100109314();
  uint64_t v299 = v19;
  uint64_t v307 = type metadata accessor for Locale();
  sub_100162E4C();
  __chkstk_darwin(v20);
  sub_100109314();
  uint64_t v298 = v21;
  uint64_t v22 = sub_10017DF08(&qword_100E952B0);
  uint64_t v23 = sub_100109308(v22);
  __chkstk_darwin(v23);
  sub_100109314();
  uint64_t v296 = v24;
  uint64_t v25 = sub_10017DF08(&qword_100E952B8);
  uint64_t v26 = sub_100109308(v25);
  __chkstk_darwin(v26);
  sub_100109314();
  uint64_t v290 = v27;
  uint64_t v297 = sub_10017DF08(&qword_100E952C0);
  sub_100179C0C();
  uint64_t v295 = v28;
  __chkstk_darwin(v29);
  sub_100109314();
  uint64_t v294 = v30;
  sub_10017DF08(&qword_100E6BF38);
  sub_100179C0C();
  char v303 = v31;
  uint64_t v304 = v32;
  __chkstk_darwin(v31);
  sub_100109314();
  uint64_t v301 = v33;
  uint64_t v34 = sub_10017DF08(&qword_100E6ECB0);
  uint64_t v35 = sub_100109308(v34);
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)v253 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v309 = sub_10017DF08(&qword_100E6D0A8);
  sub_100179C0C();
  uint64_t v279 = v38;
  __chkstk_darwin(v39);
  sub_100162EF8();
  uint64_t v293 = v40;
  __chkstk_darwin(v41);
  uint64_t v43 = (char *)v253 - v42;
  uint64_t v44 = type metadata accessor for CurrentWeather();
  sub_100179C0C();
  uint64_t v46 = v45;
  __chkstk_darwin(v47);
  id v49 = (char *)v253 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for Wind();
  sub_100179C0C();
  uint64_t v52 = v51;
  uint64_t v54 = __chkstk_darwin(v53);
  uint64_t v56 = (char *)v253 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v54);
  uint64_t v58 = (char *)v253 - v57;
  type metadata accessor for WeatherData(0);
  WeatherDataModel.currentWeather.getter();
  CurrentWeather.wind.getter();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v49, v44);
  char v289 = v43;
  Wind.speed.getter();
  Wind.gust.getter();
  uint64_t v59 = v309;
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v56, v58, v50);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v59) == 1)
  {
    Wind.speed.getter();
    sub_100127BA4();
    v60();
    sub_100178110((uint64_t)v37, &qword_100E6ECB0);
  }
  else
  {
    sub_100127BA4();
    v61();
    (*(void (**)(uint64_t, char *, uint64_t))(v279 + 32))(v293, v37, v59);
  }
  Wind.compassDirection.getter();
  uint64_t v284 = Wind.CompassDirection.abbreviation.getter();
  uint64_t v280 = v62;
  Wind.direction.getter();
  Measurement.value.getter();
  long double v64 = v63;
  uint64_t v65 = *(void *)(v304 + 8);
  v304 += 8;
  uint64_t v283 = v65;
  sub_100127BA4();
  v66();
  if (qword_100E62A50 != -1) {
    swift_once();
  }
  sub_1001C43E0(&qword_100E952C8, v67, (void (*)(uint64_t))type metadata accessor for WindComponentViewModelFactory);
  Configurable.setting<A>(_:)();
  if (v313)
  {
    uint64_t v272 = 0xD00000000000004ALL;
    sub_100162AD8();
    uint64_t v271 = v68;
  }
  else
  {
    type metadata accessor for UnitManager();
    static UnitManager.standard.getter();
    unint64_t v69 = (void *)UnitManager.windSpeed.getter();
    swift_release();
    char v70 = NSUnitSpeed.isBeaufort.getter();

    id v71 = [self mainBundle];
    sub_1001631D8();
    if (v70)
    {
      uint64_t v78 = 0x726F4620646E6957;
      uint64_t v79 = 0xEA00000000006563;
    }
    else
    {
      uint64_t v78 = 1684957527;
      uint64_t v79 = 0xE400000000000000;
    }
    uint64_t v272 = sub_100163324(v78, v79, v72, v73, v74, v75, v76, v77);
    uint64_t v271 = v80;
  }
  Configurable.setting<A>(_:)();
  uint64_t v275 = v50;
  if (v312)
  {
    uint64_t v270 = 0xD00000000000004BLL;
    sub_100162AD8();
    uint64_t v269 = v81;
  }
  else
  {
    id v82 = [self mainBundle];
    v253[0] = 0x8000000100CB2760;
    uint64_t v270 = sub_1001824D8(0x7374737547, 0xE500000000000000, v83, v84, v85, v86, v87, 0xD000000000000038);
    uint64_t v269 = v88;
  }
  Configurable.setting<A>(_:)();
  uint64_t v274 = v52;
  if (v311)
  {
    uint64_t v268 = 0xD00000000000004FLL;
    sub_100162AD8();
    uint64_t v267 = v89;
  }
  else
  {
    id v90 = [self mainBundle];
    sub_1001631D8();
    uint64_t v268 = sub_100163324(0x6F69746365726944, v91, v92, v93, v94, v95, v96, v97);
    uint64_t v267 = v98;
  }
  id v285 = self;
  id v99 = [v285 mainBundle];
  sub_1001631D8();
  v100._object = (void *)0x8000000100CB27F0;
  v100._uint64_t countAndFlagsBits = 0xD000000000000022;
  v101._uint64_t countAndFlagsBits = 0x4025204025;
  v101._object = (void *)0xE500000000000000;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v100, (Swift::String_optional)0, (NSBundle)v99, v101, v315)._countAndFlagsBits;

  uint64_t v286 = sub_10017DF08(&qword_100E64020);
  uint64_t v102 = swift_allocObject();
  long long v300 = xmmword_100C25ED0;
  *(_OWORD *)(v102 + 16) = xmmword_100C25ED0;
  uint64_t v273 = v58;
  Wind.direction.getter();
  sub_1001C4428();
  static Measurement<>.FormatStyle.UnitWidth.narrow.getter();
  uint64_t v103 = sub_10017DF08(&qword_100E6ED20);
  _s7Weather24LocationCompositionStateOwst_0(v296, 1, 1, v103);
  static Locale.autoupdatingCurrent.getter();
  static MeasurementFormatUnitUsage.general.getter();
  Measurement<>.FormatStyle.init(width:locale:usage:numberFormatStyle:)();
  *(void *)(v102 + 56) = &type metadata for String;
  unint64_t v104 = sub_10012B7C0();
  *(void *)(v102 + 64) = v104;
  unint64_t v105 = v104;
  v288[1] = v104;
  sub_1001CB6C4();
  Measurement<>.formatted<A>(_:)();
  sub_100162F0C();
  v106();
  sub_100127BA4();
  v107();
  *(void *)(v102 + 96) = &type metadata for String;
  *(void *)(v102 + 104) = v105;
  uint64_t v108 = v280;
  *(void *)(v102 + 72) = v284;
  *(void *)(v102 + 80) = v108;
  swift_bridgeObjectRetain();
  uint64_t v266 = static String.localizedStringWithFormat(_:_:)();
  uint64_t v265 = v109;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v110 = [v285 mainBundle];
  uint64_t v111 = sub_1001A4818();
  uint64_t v118 = sub_100163324(v111, 0xEC00000040252040, v112, v113, v114, v115, v116, v117);
  sub_100189FD4(v118, v119);
  uint64_t v120 = swift_allocObject();
  *(_OWORD *)(v120 + 16) = v300;
  LODWORD(v290) = enum case for NSUnitSpeed.WeatherFormatUsage.windGust(_:);
  uint64_t v121 = v305;
  uint64_t v301 = *(void (**)(void))(v305 + 104);
  uint64_t v294 = v305 + 104;
  uint64_t v122 = v287;
  uint64_t v123 = v308;
  sub_1001649D0();
  v124();
  uint64_t v125 = v291;
  sub_100183F28(v291);
  static WeatherFormatStyle<>.weather(_:usage:locale:)();
  swift_bridgeObjectRelease();
  sub_100178110(v125, &qword_100E63730);
  uint64_t v304 = *(void *)(v121 + 8);
  uint64_t v305 = v121 + 8;
  ((void (*)(uint64_t, uint64_t))v304)(v122, v123);
  LODWORD(v299) = enum case for WeatherFormatPlaceholder.none(_:);
  uint64_t v298 = *(void (**)(void))(v310 + 104);
  *(void *)&long long v300 = v310 + 104;
  sub_1001649D0();
  v126();
  uint64_t v297 = type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  uint64_t v296 = sub_1001C43E0(&qword_100E6ECD0, 255, (void (*)(uint64_t))&type metadata accessor for NSUnitSpeed.BaseWeatherFormatStyle);
  uint64_t v127 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v129 = v128;
  swift_release();
  uint64_t v295 = *(void (**)(void))(v310 + 8);
  v310 += 8;
  sub_100127BA4();
  v130();
  char v303 = *(void (**)(void))(v306 + 8);
  v306 += 8;
  sub_100127BA4();
  v131();
  sub_1001A2E14();
  *(void *)(v120 + 56) = &type metadata for String;
  *(void *)(v120 + 64) = v132;
  *(void *)(v120 + 32) = v127;
  *(void *)(v120 + 40) = v129;
  *(void *)(v120 + 96) = &type metadata for String;
  *(void *)(v120 + 104) = v132;
  *(void *)(v120 + 72) = v284;
  *(void *)(v120 + 80) = v108;
  swift_bridgeObjectRetain();
  uint64_t v264 = sub_1001A1824();
  uint64_t v263 = v133;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v134 = [v285 mainBundle];
  uint64_t v135 = sub_1001A4818();
  uint64_t v142 = sub_100163324(v135, 0xE900000000000040, v136, v137, v138, v139, v140, v141);
  sub_100189FD4(v142, v143);
  uint64_t v144 = swift_allocObject();
  *(_OWORD *)(v144 + 16) = xmmword_100C251B0;
  uint64_t v145 = v287;
  uint64_t v146 = v308;
  sub_1001649D0();
  v147();
  uint64_t v148 = v291;
  sub_100183F28(v291);
  static WeatherFormatStyle<>.weather(_:usage:locale:)();
  swift_bridgeObjectRelease();
  sub_100178110(v148, &qword_100E63730);
  ((void (*)(uint64_t, uint64_t))v304)(v145, v146);
  sub_1001A0DA4();
  v149();
  static UnitManager.standard.getter();
  uint64_t v150 = sub_10019D8E4();
  uint64_t v152 = v151;
  swift_release();
  sub_100127BA4();
  v153();
  sub_100162F0C();
  v154();
  sub_1001A2E14();
  *(void *)(v144 + 56) = v156;
  *(void *)(v144 + 64) = v155;
  *(void *)(v144 + 32) = v150;
  *(void *)(v144 + 40) = v152;
  uint64_t v262 = sub_1001A1824();
  uint64_t v261 = v157;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LODWORD(v283) = enum case for NSUnitSpeed.WeatherFormatUsage.windSpeed(_:);
  uint64_t v158 = v145;
  uint64_t v159 = v308;
  uint64_t v160 = v301;
  ((void (*)(uint64_t))v301)(v145);
  uint64_t v161 = v291;
  sub_100183F28(v291);
  static WeatherFormatStyle<>.weather(_:usage:locale:)();
  swift_bridgeObjectRelease();
  sub_100178110(v161, &qword_100E63730);
  ((void (*)(uint64_t, uint64_t))v304)(v145, v159);
  uint64_t v162 = v299;
  uint64_t v163 = v292;
  sub_1001A0DA4();
  v164();
  static UnitManager.standard.getter();
  uint64_t countAndFlagsBits = sub_100165228();
  sub_1001893D8(v165, (uint64_t)&v291);
  sub_100127BA4();
  v166();
  sub_100162F0C();
  v167();
  static Set<>.value.getter();
  sub_10019FFCC();
  v160();
  uint64_t v168 = v291;
  _s7Weather24LocationCompositionStateOwst_0(v291, 1, 1, v307);
  static WeatherFormatStyle<>.weather(_:usage:locale:)();
  swift_bridgeObjectRelease();
  sub_100178110(v168, &qword_100E63730);
  sub_100127BA4();
  v169();
  uint64_t v170 = v288[0];
  ((void (*)(void, uint64_t, uint64_t))v298)(v288[0], v162, v163);
  static UnitManager.standard.getter();
  uint64_t v259 = sub_100165228();
  sub_1001893D8(v171, (uint64_t)&v289);
  sub_100127BA4();
  v172();
  sub_100164938();
  v173();
  static Set<>.unit.getter();
  sub_10019FFCC();
  sub_10017E8D0();
  v174();
  sub_1001803DC();
  swift_bridgeObjectRelease();
  sub_100178110(v168, &qword_100E63730);
  sub_100127BA4();
  v175();
  uint64_t v176 = v298;
  ((void (*)(uint64_t, void, uint64_t))v298)(v170, v299, v163);
  static UnitManager.standard.getter();
  sub_1001D1DD4();
  uint64_t v257 = sub_100165228();
  sub_1001893D8(v177, (uint64_t)v288);
  sub_100185C28();
  uint64_t v178 = v295;
  sub_100127BA4();
  v178();
  sub_100164938();
  v179();
  sub_10018AA58();
  uint64_t v180 = v308;
  sub_10017E8D0();
  v181();
  sub_100183F28(v168);
  static WeatherFormatStyle<>.weather(_:usage:locale:)();
  swift_bridgeObjectRelease();
  sub_100178110(v168, &qword_100E63730);
  ((void (*)(uint64_t, uint64_t))v304)(v158, v180);
  sub_1001649D0();
  v176();
  uint64_t v182 = v297;
  static UnitManager.standard.getter();
  sub_1001D1DD4();
  v315._object = (void *)sub_10019D8E4();
  sub_1001893D8(v183, (uint64_t)&v286);
  sub_100185C28();
  sub_100127BA4();
  v178();
  sub_1001629F8();
  v184();
  static Set<>.value.getter();
  sub_10018AA58();
  uint64_t v185 = v308;
  sub_10017E8D0();
  v186();
  sub_1001803DC();
  swift_bridgeObjectRelease();
  sub_100178110(v168, &qword_100E63730);
  ((void (*)(uint64_t, uint64_t))v304)(v158, v185);
  uint64_t v187 = v182;
  sub_1001A0DA4();
  v188();
  static UnitManager.standard.getter();
  sub_1001D1DD4();
  uint64_t v254 = sub_10019D8E4();
  sub_1001893D8(v189, (uint64_t)&v284);
  sub_100127BA4();
  v190();
  uint64_t v191 = v303;
  sub_1001629F8();
  v191();
  static Set<>.unit.getter();
  sub_10018AA58();
  sub_10017E8D0();
  v192();
  sub_1001803DC();
  swift_bridgeObjectRelease();
  sub_100178110(v168, &qword_100E63730);
  sub_100162F0C();
  v193();
  ((void (*)(uint64_t, void, uint64_t))v298)(v170, v299, v182);
  static UnitManager.standard.getter();
  sub_1001D1DD4();
  uint64_t v194 = sub_10019D8E4();
  sub_1001893D8(v195, (uint64_t)&v283);
  ((void (*)(uint64_t, uint64_t))v295)(v170, v187);
  sub_100162F0C();
  v191();
  id v196 = [v285 mainBundle];
  sub_1001631D8();
  uint64_t v203 = sub_1001824D8(0x1000000000000030, 0x8000000100CB2A10, v197, v198, v199, v200, v201, v202);
  uint64_t v205 = v204;

  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_100C31870;
  if ((~*(void *)&v64 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v286 = v194;
  if (v64 <= -9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v64 < 9.22337204e18)
  {
    uint64_t v207 = (void *)result;
    *(void *)(result + 56) = &type metadata for Int;
    *(void *)(result + 64) = &protocol witness table for Int;
    *(void *)(result + 32) = (uint64_t)v64;
    sub_1001D487C(v64);
    sub_1001A2E14();
    v207[12] = v209;
    v207[13] = v208;
    v207[9] = v210;
    v207[10] = v211;
    static Set<>.full.getter();
    sub_10019FFCC();
    sub_1001649D0();
    v212();
    id v285 = v205;
    uint64_t v213 = v291;
    sub_100184B1C();
    uint64_t v214 = v281;
    static WeatherFormatStyle<>.weather(_:usage:locale:)();
    swift_bridgeObjectRelease();
    sub_100178110(v213, &qword_100E63730);
    sub_100162F0C();
    v215();
    uint64_t v283 = v203;
    NSUnitSpeed.BaseWeatherFormatStyle.accessible.getter();
    ((void (*)(char *, uint64_t))v303)(v214, v302);
    sub_1001A0DA4();
    v216();
    static UnitManager.standard.getter();
    uint64_t v217 = sub_100165228();
    sub_1001893D8(v218, (uint64_t)v314);
    sub_100164938();
    v219();
    sub_100164938();
    v220();
    sub_1001A2E14();
    v207[17] = v222;
    v207[18] = v221;
    uint64_t v223 = v282;
    v207[14] = v217;
    v207[15] = v223;
    static Set<>.full.getter();
    sub_1001649D0();
    v224();
    sub_100184B1C();
    static WeatherFormatStyle<>.weather(_:usage:locale:)();
    swift_bridgeObjectRelease();
    sub_100178110(v213, &qword_100E63730);
    sub_100162F0C();
    v225();
    NSUnitSpeed.BaseWeatherFormatStyle.accessible.getter();
    uint64_t v226 = v303;
    sub_100164938();
    v226();
    sub_1001A0DA4();
    v227();
    static UnitManager.standard.getter();
    uint64_t v228 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    uint64_t v230 = v229;
    swift_release();
    sub_100162F0C();
    v231();
    sub_100127BA4();
    v226();
    sub_1001A2E14();
    v207[22] = v233;
    v207[23] = v232;
    v207[19] = v228;
    v207[20] = v230;
    uint64_t v234 = static String.localizedStringWithFormat(_:_:)();
    uint64_t v236 = v235;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v237 = *(void (**)(void))(v279 + 8);
    sub_1001629F8();
    v237();
    sub_1001629F8();
    v237();
    sub_100162F0C();
    uint64_t result = v238();
    uint64_t v239 = v277;
    uint64_t v240 = v260;
    *uint64_t v277 = countAndFlagsBits;
    v239[1] = v240;
    uint64_t v241 = v258;
    v239[2] = v259;
    v239[3] = v241;
    uint64_t v242 = v256;
    v239[4] = v257;
    v239[5] = v242;
    uint64_t v243 = v271;
    v239[6] = v272;
    v239[7] = v243;
    uint64_t v244 = v255;
    v239[8] = (uint64_t)v315._object;
    v239[9] = v244;
    uint64_t v245 = v253[1];
    v239[10] = v254;
    v239[11] = v245;
    uint64_t v246 = v253[0];
    v239[12] = v286;
    v239[13] = v246;
    uint64_t v247 = v269;
    v239[14] = v270;
    v239[15] = v247;
    uint64_t v248 = v265;
    v239[16] = v266;
    v239[17] = v248;
    uint64_t v249 = v267;
    v239[18] = v268;
    v239[19] = v249;
    uint64_t v250 = v263;
    v239[20] = v264;
    v239[21] = v250;
    uint64_t v251 = v261;
    v239[22] = v262;
    v239[23] = v251;
    uint64_t v252 = v280;
    v239[24] = v284;
    v239[25] = v252;
    *((long double *)v239 + 26) = v64 + 180.0;
    v239[27] = v234;
    v239[28] = v236;
    return result;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1001C43E0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001C4428()
{
  unint64_t result = qword_100E952D0;
  if (!qword_100E952D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100E952D0);
  }
  return result;
}

void sub_1001C4468()
{
  sub_100162EA0();
  uint64_t v64 = v2;
  uint64_t v62 = type metadata accessor for LocationModel();
  sub_10017C83C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v7 = v6;
  uint64_t v8 = type metadata accessor for LocationViewerViewModel();
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v59 = type metadata accessor for Location.Identifier();
  sub_10017C83C();
  uint64_t v57 = v13;
  __chkstk_darwin(v14);
  sub_10016279C();
  uint64_t v15 = type metadata accessor for LocationViewerFullscreenMapPresentationSourceModifier(0);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  sub_1001626E0();
  uint64_t v19 = v18 - v17;
  uint64_t v20 = sub_10017DF08(&qword_100E8E1C0);
  uint64_t v21 = sub_100109308(v20);
  __chkstk_darwin(v21);
  sub_1001626E0();
  uint64_t v24 = (uint64_t *)(v23 - v22);
  uint64_t v54 = sub_10017DF08(&qword_100E8E1C8);
  sub_100162E4C();
  __chkstk_darwin(v25);
  sub_1001626E0();
  uint64_t v28 = v27 - v26;
  uint64_t v61 = sub_10017DF08(&qword_100E8E1D0);
  sub_100162E4C();
  __chkstk_darwin(v29);
  sub_100109314();
  uint64_t v53 = v30;
  uint64_t v60 = sub_10017DF08(&qword_100E8E1D8);
  sub_100162E4C();
  __chkstk_darwin(v31);
  sub_100109314();
  uint64_t v56 = v32;
  uint64_t v33 = sub_10017DF08(&qword_100E8E1E0);
  sub_10017C83C();
  uint64_t v63 = v34;
  __chkstk_darwin(v35);
  sub_10016278C();
  uint64_t v55 = v36 - v37;
  __chkstk_darwin(v38);
  uint64_t v58 = (uint64_t)&v52 - v39;
  *uint64_t v24 = static Alignment.center.getter();
  v24[1] = v40;
  uint64_t v41 = sub_10017DF08(&qword_100E8E1E8);
  sub_1001C49F8(v0, (uint64_t)v24 + *(int *)(v41 + 44));
  type metadata accessor for MeasuredLocationViewerView(0);
  sub_10012B9AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v7, v12, v62);
  sub_100151660();
  LocationModel.coalesceLocationIdentifier.getter();
  uint64_t v42 = sub_100127A9C();
  v43(v42);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 32))(v19, v1, v59);
  uint64_t v44 = v19 + *(int *)(v16 + 28);
  *(void *)uint64_t v44 = swift_getKeyPath();
  *(_OWORD *)(v44 + 8) = 0u;
  *(_OWORD *)(v44 + 24) = 0u;
  *(_OWORD *)(v44 + 40) = 0u;
  *(_OWORD *)(v44 + 56) = 0u;
  *(unsigned char *)(v44 + 72) = 0;
  sub_10006DF38((uint64_t)v24, v28, &qword_100E8E1C0);
  sub_1001516CC();
  sub_10017DF4C((uint64_t)v24, &qword_100E8E1C0);
  uint64_t v65 = sub_100213F1C;
  unint64_t v66 = 0;
  char v67 = 0;
  sub_1001CB5F4();
  uint64_t v45 = v53;
  View.modifier<A>(_:)();
  sub_10017DF4C(v28, &qword_100E8E1C8);
  uint64_t v65 = sub_100219088;
  unint64_t v66 = 0;
  char v67 = 0;
  sub_1001CB570((uint64_t)&unk_100E8E208);
  uint64_t v46 = v56;
  View.modifier<A>(_:)();
  sub_10017DF4C(v45, &qword_100E8E1D0);
  unint64_t v47 = sub_1001CB4BC();
  uint64_t v48 = v55;
  id v49 = (uint64_t (*)())v60;
  View.enableForegroundEffects()();
  sub_10017DF4C(v46, &qword_100E8E1D8);
  uint64_t v65 = v49;
  unint64_t v66 = v47;
  swift_getOpaqueTypeConformance2();
  uint64_t v50 = v58;
  sub_100121584(v48, v33, v58);
  uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
  v51(v48, v33);
  sub_100121584(v50, v33, v64);
  v51(v50, v33);
  sub_100162694();
}

uint64_t type metadata accessor for LocationViewerFullscreenMapPresentationSourceModifier(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E8E778);
}

uint64_t sub_1001C49F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v50 = a2;
  uint64_t v2 = type metadata accessor for MeasuredLocationViewerView(0);
  uint64_t v47 = *(void *)(v2 - 8);
  uint64_t v40 = v2 - 8;
  __chkstk_darwin(v2 - 8);
  uint64_t v48 = v3;
  id v49 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for ContentStatusBanner();
  uint64_t v4 = __chkstk_darwin(v46);
  uint64_t v45 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v44 = (char *)&v39 - v6;
  uint64_t v41 = type metadata accessor for LocationModel();
  uint64_t v7 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Location.Identifier();
  uint64_t v42 = *(void *)(v10 - 8);
  uint64_t v43 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for LocationViewerViewModel();
  uint64_t v14 = v13 - 8;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v39 - v18;
  uint64_t v20 = type metadata accessor for LocationViewBannerContainer(0);
  uint64_t v21 = (int *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001520F8();
  uint64_t v24 = *(void *)&v19[*(int *)(v14 + 56)];
  swift_bridgeObjectRetain();
  sub_100151660();
  sub_1001520F8();
  uint64_t v25 = v41;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v17, v41);
  sub_100151660();
  LocationModel.identifier.getter();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v25);
  uint64_t v26 = Location.Identifier.id.getter();
  uint64_t v28 = v27;
  (*(void (**)(char *, uint64_t))(v42 + 8))(v12, v43);
  sub_1001C4FC8(v26, v28, v24);
  uint64_t v29 = v39;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001E9994(v29 + *(int *)(v40 + 92), (uint64_t)&v23[v21[7]]);
  uint64_t v30 = &v23[v21[8]];
  *(void *)uint64_t v30 = swift_getKeyPath();
  *((void *)v30 + 1) = 0;
  *((void *)v30 + 2) = 0;
  *((void *)v30 + 3) = 0;
  v30[32] = 0;
  uint64_t v31 = (uint64_t *)&v23[v21[9]];
  *uint64_t v31 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BD0);
  swift_storeEnumTagMultiPayload();
  if (qword_100E62558 != -1) {
    swift_once();
  }
  sub_1002102B0(v46, (uint64_t)qword_100E8DEE0);
  sub_10015176C();
  sub_10015176C();
  State.init(wrappedValue:)();
  sub_100151660();
  sub_10015176C();
  uint64_t v32 = swift_allocObject();
  sub_1001516CC();
  uint64_t v33 = static Alignment.center.getter();
  uint64_t v35 = v34;
  uint64_t v36 = v50;
  sub_10015176C();
  uint64_t v37 = (uint64_t (**)(uint64_t))(v36 + *(int *)(sub_10017DF08(&qword_100E8E228) + 36));
  *uint64_t v37 = sub_100213630;
  v37[1] = (uint64_t (*)(uint64_t))v32;
  v37[2] = (uint64_t (*)(uint64_t))v33;
  v37[3] = v35;
  return sub_100151660();
}

uint64_t sub_1001C4FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BBDD4(a1, a2, a3, (void (*)(void))type metadata accessor for ContentStatusBanner);
}

uint64_t sub_1001C4FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v295 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = sub_10017DF08(&qword_100E663F0);
  uint64_t v19 = sub_100109308(v18);
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v298 = v20;
  uint64_t v21 = sub_10017DF08(&qword_100E66418);
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_100109314();
  uint64_t v299 = v23;
  uint64_t v24 = sub_10017DF08(&qword_100E66420);
  uint64_t v25 = sub_100109308(v24);
  __chkstk_darwin(v25);
  sub_100109314();
  uint64_t v300 = v26;
  uint64_t v27 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v28 = sub_100109308(v27);
  __chkstk_darwin(v28);
  sub_100109314();
  uint64_t v293 = v29;
  uint64_t v297 = type metadata accessor for NotificationsOptInState();
  sub_100162E4C();
  __chkstk_darwin(v30);
  sub_100109314();
  uint64_t v294 = v31;
  uint64_t v32 = sub_10017DF08(&qword_100E66428);
  uint64_t v33 = sub_100109308(v32);
  __chkstk_darwin(v33);
  sub_100109314();
  uint64_t v301 = v34;
  uint64_t v35 = sub_10017DF08(&qword_100E66430);
  uint64_t v36 = sub_100109308(v35);
  __chkstk_darwin(v36);
  sub_100109314();
  uint64_t v302 = v37;
  uint64_t v38 = sub_10017DF08(&qword_100E66438);
  uint64_t v39 = sub_100109308(v38);
  __chkstk_darwin(v39);
  sub_100109314();
  uint64_t v303 = v40;
  uint64_t v41 = sub_10017DF08(&qword_100E66440);
  uint64_t v42 = sub_100109308(v41);
  __chkstk_darwin(v42);
  sub_100109314();
  uint64_t v44 = v43;
  type metadata accessor for NotificationsOptInAction();
  sub_100162E4C();
  __chkstk_darwin(v45);
  sub_1001626E0();
  uint64_t v48 = (uint64_t *)(v47 - v46);
  sub_1001C65AC(a3, v47 - v46, (void (*)(void))type metadata accessor for NotificationsOptInAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v57 = type metadata accessor for AppConfigurationState();
      uint64_t v60 = sub_10017CD74(v57, v58, v59, v57);
      uint64_t v61 = sub_100187CC8(v60);
      sub_10019EB18(v61);
      uint64_t v62 = sub_1001D1974(OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn);
      sub_100163554(v62, v63, (void (*)(void))type metadata accessor for NotificationsOptInState);
      uint64_t v56 = v293;
      _s7Weather24LocationCompositionStateOwst_0(v293, 1, 1, v295);
      sub_1001849E8();
      int v64 = 33686017;
      goto LABEL_29;
    case 2u:
      unsigned __int8 v292 = *((unsigned char *)v48 + *(int *)(sub_10017DF08(&qword_100E6BBD8) + 48));
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v13 + 32))(v17, v48, v11);
      a3 = a2 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn;
      uint64_t v306 = *(void *)(a2 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn + 8);
      swift_bridgeObjectRetain();
      uint64_t v65 = Location.id.getter();
      sub_1007EC5C0(&v305, v65, v66);
      swift_bridgeObjectRelease();
      uint64_t v67 = type metadata accessor for AppConfigurationState();
      uint64_t v70 = sub_10017CD74(v67, v68, v69, v67);
      uint64_t v71 = sub_100189E70(v70);
      sub_100163050(v302, v72, v73, v71);
      sub_100163554(a3, v74, (void (*)(void))type metadata accessor for NotificationsOptInState);
      uint64_t v75 = v306;
      Date.init()();
      _s7Weather24LocationCompositionStateOwst_0(v293, 0, 1, v295);
      sub_1001A2C48();
      sub_10019FD38(v292, v75, v301, v290[0], v290[1], v290[2], v290[3], v290[4]);
      swift_bridgeObjectRelease();
      sub_1001781AC(v293, (uint64_t *)&unk_100E73CA0);
      sub_1001C6664((uint64_t)&v306, (void (*)(void))type metadata accessor for NotificationsOptInState);
      uint64_t v76 = sub_10017E458(v301);
      uint64_t v77 = sub_1001A1F64(v76);
      uint64_t v78 = sub_1001A083C(v77);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v298, 1, 1, v78);
      sub_10018A8EC();
      uint64_t v79 = sub_10016356C();
      sub_100163034(v79, v80, v44, v44, v302, v81, v82, v83, v279, v301, v293, v282, v283, v284, v285, v286, v287, v288, v289,
        0,
        a2);
      sub_100182A1C();
      sub_1001781AC((uint64_t)v298, &qword_100E663F0);
      sub_1001781AC((uint64_t)&v306, &qword_100E66418);
      sub_1001781AC(v293, &qword_100E66420);
      sub_1001781AC(v301, &qword_100E66428);
      sub_1001781AC(v302, &qword_100E66430);
      sub_1001781AC(v44, &qword_100E66438);
      sub_1001781AC(v44, &qword_100E66440);
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v17, v11);
      return a3;
    case 3u:
      uint64_t v84 = *v48;
      uint64_t v85 = type metadata accessor for AppConfigurationState();
      uint64_t v88 = sub_10017CD74(v85, v86, v87, v85);
      uint64_t v89 = sub_100187CC8(v88);
      sub_100163050(v302, v90, v91, v89);
      a3 = v294;
      sub_1001C65AC(a2 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn, v294, (void (*)(void))type metadata accessor for NotificationsOptInState);
      sub_100012CD8(v84);
      _s7Weather24LocationCompositionStateOwst_0(v293, 1, 1, v295);
      sub_1001A2C48();
      sub_100183008();
      sub_1001C6768(v92, v93, v94, v95, v96, v97, v98, v99, v100, v290[0], v290[1], v290[2], v290[3], v290[4]);
      swift_bridgeObjectRelease();
      sub_1001781AC(v293, (uint64_t *)&unk_100E73CA0);
      sub_1001C6664(v294, (void (*)(void))type metadata accessor for NotificationsOptInState);
      uint64_t v101 = sub_10017E458(v301);
      uint64_t v102 = sub_1001A1F64(v101);
      uint64_t v103 = sub_1001A083C(v102);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v298, 1, 1, v103);
      sub_10018A8EC();
      uint64_t v104 = sub_10016356C();
      sub_100163034(v104, v105, v44, v11, v302, v106, v107, v108, v279, v301, v293, v282, v283, v284, v285, v286, v287, v288, v289,
        0,
        a2);
      sub_100182A1C();
      sub_1001781AC((uint64_t)v298, &qword_100E663F0);
      sub_1001781AC(v294, &qword_100E66418);
      sub_1001781AC(v293, &qword_100E66420);
      sub_1001781AC(v301, &qword_100E66428);
      sub_1001781AC(v302, &qword_100E66430);
      sub_1001781AC(v11, &qword_100E66438);
      uint64_t v109 = v44;
      goto LABEL_35;
    case 4u:
      uint64_t v110 = v6;
      uint64_t v111 = v295;
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v6 + 32))(v10, v48, v295);
      uint64_t v112 = type metadata accessor for AppConfigurationState();
      a3 = v44;
      _s7Weather24LocationCompositionStateOwst_0(v44, 1, 1, v112);
      uint64_t v113 = type metadata accessor for EnvironmentState();
      uint64_t v114 = sub_100189E70(v113);
      sub_10019EB18(v114);
      uint64_t v115 = sub_1001D1974(OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn);
      sub_100163554(v115, v116, (void (*)(void))type metadata accessor for NotificationsOptInState);
      uint64_t v117 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      uint64_t v118 = v293;
      v117(v293, v10, v295);
      _s7Weather24LocationCompositionStateOwst_0(v293, 0, 1, v295);
      unsigned __int8 v119 = sub_1001812E8();
      sub_1001C6768(v119, v120, v121, v122, v123, 2, v293, 2, v124, v290[0], v290[1], v290[2], v290[3], v290[4]);
      sub_1001781AC(v293, (uint64_t *)&unk_100E73CA0);
      sub_1001C6664(v3, (void (*)(void))type metadata accessor for NotificationsOptInState);
      uint64_t v125 = sub_10017E458(v295);
      uint64_t v126 = sub_1001A1F64(v125);
      uint64_t v127 = sub_1001A083C(v126);
      uint64_t v128 = (uint64_t)v298;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v298, 1, 1, v127);
      sub_1001852F0();
      uint64_t v129 = sub_10016356C();
      sub_100163034(v129, v130, v44, v44, (uint64_t)v48, v131, v132, v133, v291, v295, v293, v3, (uint64_t)v298, v297, (uint64_t)v298, v299, v300, v301, v302,
        v303,
        a2);
      sub_100182A1C();
      sub_1001781AC(v128, &qword_100E663F0);
      sub_1001781AC(v3, &qword_100E66418);
      sub_1001781AC(v118, &qword_100E66420);
      sub_1001781AC(v111, &qword_100E66428);
      sub_1001781AC((uint64_t)v48, &qword_100E66430);
      sub_1001781AC(v44, &qword_100E66438);
      sub_1001781AC(v44, &qword_100E66440);
      (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v10, v296);
      return a3;
    case 5u:
      uint64_t v134 = type metadata accessor for AppConfigurationState();
      uint64_t v137 = sub_10017CD74(v134, v135, v136, v134);
      uint64_t v138 = sub_100187CC8(v137);
      sub_10019EB18(v138);
      uint64_t v139 = sub_1001D1974(OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn);
      sub_100163554(v139, v140, (void (*)(void))type metadata accessor for NotificationsOptInState);
      uint64_t v56 = v293;
      _s7Weather24LocationCompositionStateOwst_0(v293, 1, 1, v295);
      uint64_t v17 = v301;
      uint64_t v141 = v301;
      unsigned __int8 v142 = 2;
      uint64_t v143 = 0;
      int v144 = 1;
      goto LABEL_30;
    case 6u:
      uint64_t v145 = type metadata accessor for AppConfigurationState();
      uint64_t v148 = sub_10017CD74(v145, v146, v147, v145);
      uint64_t v149 = sub_100187CC8(v148);
      sub_10019EB18(v149);
      uint64_t v150 = sub_1001D1974(OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn);
      sub_100163554(v150, v151, (void (*)(void))type metadata accessor for NotificationsOptInState);
      uint64_t v56 = v293;
      _s7Weather24LocationCompositionStateOwst_0(v293, 1, 1, v295);
      sub_10019FB44();
      goto LABEL_23;
    case 7u:
      uint64_t v153 = type metadata accessor for AppConfigurationState();
      uint64_t v156 = sub_10017CD74(v153, v154, v155, v153);
      uint64_t v157 = sub_100187CC8(v156);
      sub_100163050(v302, v158, v159, v157);
      _s7Weather24LocationCompositionStateOwst_0(v301, 1, 1, v297);
      uint64_t v160 = type metadata accessor for TimeState();
      _s7Weather24LocationCompositionStateOwst_0(v300, 1, 1, v160);
      uint64_t v161 = type metadata accessor for ViewState(0);
      sub_100163050(v299, v162, v163, v161);
      *uint64_t v298 = 256;
      uint64_t v164 = type metadata accessor for ModalViewState(0);
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v298, 0, 1, v164);
      sub_1001869C0();
      uint64_t v165 = sub_10016356C();
      sub_100163034(v165, v166, v44, v11, v302, v167, v168, v169, v278, v301, v300, v280, v281, v282, v283, v284, v285, v286, v287,
        0,
        a2);
      sub_100182A1C();
      sub_1001781AC((uint64_t)v298, &qword_100E663F0);
      sub_1001781AC(v299, &qword_100E66418);
      sub_1001781AC(v300, &qword_100E66420);
      sub_1001781AC(v301, &qword_100E66428);
      sub_1001781AC(v302, &qword_100E66430);
      sub_1001781AC(v11, &qword_100E66438);
      uint64_t v109 = v44;
      goto LABEL_35;
    case 8u:
      uint64_t v170 = type metadata accessor for AppConfigurationState();
      uint64_t v173 = sub_10017CD74(v170, v171, v172, v170);
      uint64_t v174 = sub_100187CC8(v173);
      sub_10019EB18(v174);
      uint64_t v175 = sub_1001D1974(OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn);
      sub_100163554(v175, v176, (void (*)(void))type metadata accessor for NotificationsOptInState);
      uint64_t v56 = v293;
      _s7Weather24LocationCompositionStateOwst_0(v293, 1, 1, v295);
      unsigned __int8 v142 = sub_1001812E8();
      int v179 = 1;
      goto LABEL_32;
    case 9u:
      uint64_t v180 = type metadata accessor for AppConfigurationState();
      uint64_t v183 = sub_10017CD74(v180, v181, v182, v180);
      uint64_t v184 = sub_100187CC8(v183);
      sub_10019EB18(v184);
      uint64_t v185 = sub_1001D1974(OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn);
      sub_100163554(v185, v186, (void (*)(void))type metadata accessor for NotificationsOptInState);
      uint64_t v56 = v293;
      _s7Weather24LocationCompositionStateOwst_0(v293, 1, 1, v295);
      unsigned __int8 v142 = sub_1001A3214();
      int v178 = 1;
      goto LABEL_31;
    case 0xAu:
      a3 = a2;
      uint64_t v187 = swift_retain();
      char v188 = sub_10069837C(v187);
      int v189 = sub_10047AB40(a2);
      if (qword_100E622A0 != -1) {
        swift_once();
      }
      sub_10047ACF4();
      Configurable.setting<A>(_:)();
      int v190 = v305;
      if ((v188 & 0xFE) != 2 || ((v189 ^ 1) & 1) != 0 || (_BYTE)v305)
      {
        if (qword_100E627B8 != -1) {
          swift_once();
        }
        uint64_t v274 = type metadata accessor for Logger();
        sub_1002102B0(v274, (uint64_t)qword_100F51E40);
        uint64_t v275 = Logger.logObject.getter();
        os_log_type_t v276 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v275, v276))
        {
          uint64_t v277 = swift_slowAlloc();
          *(_DWORD *)uint64_t v277 = 67109632;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v277 + 8) = 1024;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v277 + 14) = 1024;
          int v305 = v190;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v275, v276, "Skipping Severe Weather sheet, isNewUser=%{BOOL}d, isSevereAvailable=%{BOOL}d, isSevereWeatherFeatureAcknowledged=%{BOOL}d", (uint8_t *)v277, 0x14u);
          swift_slowDealloc();
        }

        swift_retain();
      }
      else
      {
        if (qword_100E627B8 != -1) {
          swift_once();
        }
        uint64_t v191 = type metadata accessor for Logger();
        sub_1002102B0(v191, (uint64_t)qword_100F51E40);
        uint64_t v192 = Logger.logObject.getter();
        os_log_type_t v193 = static os_log_type_t.default.getter();
        uint64_t v194 = v193;
        if (os_log_type_enabled(v192, v193))
        {
          uint64_t v195 = swift_slowAlloc();
          *(_DWORD *)uint64_t v195 = 67109632;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v195 + 8) = 1024;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v195 + 14) = 1024;
          int v305 = 0;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v192, (os_log_type_t)v194, "Showing Severe Weather sheet, isNewUser=%{BOOL}d, isSevereAvailable=%{BOOL}d, isSevereWeatherFeatureAcknowledged=%{BOOL}d", (uint8_t *)v195, 0x14u);
          swift_slowDealloc();
        }

        uint64_t v196 = type metadata accessor for AppConfigurationState();
        uint64_t v199 = sub_10017CD74(v196, v197, v198, v196);
        uint64_t v200 = sub_100187CC8(v199);
        sub_100163050(v302, v201, v202, v200);
        sub_100163554(a2 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn, v203, (void (*)(void))type metadata accessor for NotificationsOptInState);
        _s7Weather24LocationCompositionStateOwst_0(v293, 1, 1, v295);
        sub_1001849E8();
        sub_10019FD38(2u, 0, v301, 3, 1, 2, 2, v290[4]);
        sub_1001781AC(v293, (uint64_t *)&unk_100E73CA0);
        sub_1001C6664((uint64_t)v192, (void (*)(void))type metadata accessor for NotificationsOptInState);
        uint64_t v204 = sub_10017E458(v301);
        _s7Weather24LocationCompositionStateOwst_0(v300, 1, 1, v204);
        uint64_t v205 = type metadata accessor for ViewState(0);
        sub_100163050(v299, v206, v207, v205);
        uint64_t v208 = swift_retain();
        char v209 = sub_10069837C(v208);
        type metadata accessor for NotificationsOptInViewState._Storage();
        uint64_t v210 = swift_allocObject();
        *(_WORD *)(v210 + 16) = 1538;
        *(unsigned char *)(v210 + 18) = 0;
        *(unsigned char *)(v210 + 19) = v209;
        *(void *)uint64_t v298 = v210;
        uint64_t v211 = type metadata accessor for ModalViewState(0);
        swift_storeEnumTagMultiPayload();
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v298, 0, 1, v211);
        sub_1001869C0();
        uint64_t v212 = sub_10016356C();
        sub_100163034(v212, v213, v44, v194, v302, v214, v215, v216, v279, v301, v300, v282, v283, v284, v285, v286, v287, v288, v289,
          0,
          a2);
        sub_100182A1C();
        sub_1001781AC((uint64_t)v298, &qword_100E663F0);
        sub_1001781AC(v299, &qword_100E66418);
        sub_1001781AC(v300, &qword_100E66420);
        sub_1001781AC(v301, &qword_100E66428);
        sub_1001781AC(v302, &qword_100E66430);
        sub_1001781AC(v194, &qword_100E66438);
        uint64_t v109 = v44;
LABEL_35:
        sub_1001781AC(v109, &qword_100E66440);
      }
      return a3;
    case 0xBu:
      uint64_t v217 = type metadata accessor for AppConfigurationState();
      uint64_t v220 = sub_10017CD74(v217, v218, v219, v217);
      uint64_t v221 = sub_100187CC8(v220);
      sub_10019EB18(v221);
      uint64_t v222 = sub_1001D1974(OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn);
      sub_100163554(v222, v223, (void (*)(void))type metadata accessor for NotificationsOptInState);
      uint64_t v56 = v293;
      _s7Weather24LocationCompositionStateOwst_0(v293, 1, 1, v295);
      sub_1001849E8();
      unsigned __int16 v152 = 3;
LABEL_23:
      uint64_t v17 = v301;
      sub_1001C6768(2u, 0, 2, 2, 2, 2, v56, 1, v301, v152, SHIBYTE(v152), 2, (v152 | 0x2020000u) >> 24, v290[4]);
      goto LABEL_33;
    case 0xCu:
      uint64_t v224 = type metadata accessor for AppConfigurationState();
      uint64_t v227 = sub_10017CD74(v224, v225, v226, v224);
      uint64_t v228 = sub_100187CC8(v227);
      sub_10019EB18(v228);
      uint64_t v229 = sub_1001D1974(OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn);
      uint64_t v55 = v294;
      sub_1001C65AC(v229, v294, (void (*)(void))type metadata accessor for NotificationsOptInState);
      uint64_t v56 = v293;
      _s7Weather24LocationCompositionStateOwst_0(v293, 1, 1, v295);
      BYTE4(v289) = 1;
      sub_1001A3214();
      goto LABEL_25;
    case 0xDu:
      uint64_t v240 = type metadata accessor for AppConfigurationState();
      uint64_t v243 = sub_10017CD74(v240, v241, v242, v240);
      uint64_t v244 = sub_100187CC8(v243);
      sub_10019EB18(v244);
      uint64_t v245 = sub_1001D1974(OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn);
      sub_100163554(v245, v246, (void (*)(void))type metadata accessor for NotificationsOptInState);
      uint64_t v56 = v293;
      _s7Weather24LocationCompositionStateOwst_0(v293, 1, 1, v295);
      sub_10019FB44();
      int v64 = v247 | 0x2010000;
      goto LABEL_29;
    case 0xEu:
      uint64_t v248 = type metadata accessor for AppConfigurationState();
      uint64_t v251 = sub_10017CD74(v248, v249, v250, v248);
      uint64_t v252 = sub_100187CC8(v251);
      sub_10019EB18(v252);
      uint64_t v253 = sub_1001D1974(OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn);
      sub_100163554(v253, v254, (void (*)(void))type metadata accessor for NotificationsOptInState);
      uint64_t v56 = v293;
      _s7Weather24LocationCompositionStateOwst_0(v293, 1, 1, v295);
      sub_10019FB44();
      int v64 = v255 | 0x1020000;
      goto LABEL_29;
    case 0xFu:
      uint64_t v256 = type metadata accessor for AppConfigurationState();
      uint64_t v259 = sub_10017CD74(v256, v257, v258, v256);
      uint64_t v260 = sub_100187CC8(v259);
      sub_10019EB18(v260);
      uint64_t v261 = sub_1001D1974(OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn);
      sub_100163554(v261, v262, (void (*)(void))type metadata accessor for NotificationsOptInState);
      uint64_t v56 = v293;
      _s7Weather24LocationCompositionStateOwst_0(v293, 1, 1, v295);
      sub_10019FB44();
      int v64 = v263 | 0x20000;
LABEL_29:
      *(_DWORD *)uint64_t v290 = v64;
      uint64_t v17 = v301;
      uint64_t v141 = v301;
      unsigned __int8 v142 = 2;
      uint64_t v143 = 0;
      int v144 = 2;
LABEL_30:
      int v177 = 2;
      int v178 = 2;
LABEL_31:
      int v179 = 2;
LABEL_32:
      sub_1001C6768(v142, v143, v144, v177, v178, v179, v56, 2, v141, v290[0], v290[1], v290[2], v290[3], v290[4]);
LABEL_33:
      sub_1001781AC(v56, (uint64_t *)&unk_100E73CA0);
      uint64_t v239 = v3;
      goto LABEL_34;
    default:
      uint64_t v49 = type metadata accessor for AppConfigurationState();
      uint64_t v52 = sub_10017CD74(v49, v50, v51, v49);
      uint64_t v53 = sub_100187CC8(v52);
      sub_10019EB18(v53);
      uint64_t v54 = sub_1001D1974(OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn);
      uint64_t v55 = v294;
      sub_1001C65AC(v54, v294, (void (*)(void))type metadata accessor for NotificationsOptInState);
      uint64_t v56 = v293;
      Date.init()();
      _s7Weather24LocationCompositionStateOwst_0(v293, 0, 1, v295);
      BYTE4(v289) = 2;
      LODWORD(v289) = 33686019;
      uint64_t v17 = v301;
LABEL_25:
      sub_100183008();
      uint64_t v3 = v55;
      sub_1001C6768(v230, v231, v232, v233, v234, v235, v236, v237, v238, v289, SBYTE1(v289), SBYTE2(v289), SBYTE3(v289), SBYTE4(v289));
      sub_1001781AC(v56, (uint64_t *)&unk_100E73CA0);
      uint64_t v239 = v55;
LABEL_34:
      sub_1001C6664(v239, (void (*)(void))type metadata accessor for NotificationsOptInState);
      uint64_t v264 = sub_10017E458(v17);
      uint64_t v265 = sub_1001A1F64(v264);
      uint64_t v266 = sub_1001A083C(v265);
      uint64_t v267 = (uint64_t)v298;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v298, 1, 1, v266);
      sub_1001852F0();
      uint64_t v268 = sub_10016356C();
      sub_100163034(v268, v269, v44, v11, (uint64_t)v48, v270, v271, v272, v291, v17, v56, v3, (uint64_t)v298, v297, (uint64_t)v298, v299, v300, v301, v302,
        v303,
        a2);
      sub_100182A1C();
      sub_1001781AC(v267, &qword_100E663F0);
      sub_1001781AC(v3, &qword_100E66418);
      sub_1001781AC(v56, &qword_100E66420);
      sub_1001781AC(v17, &qword_100E66428);
      sub_1001781AC((uint64_t)v48, &qword_100E66430);
      sub_1001781AC(v11, &qword_100E66438);
      uint64_t v109 = v44;
      goto LABEL_35;
  }
}

uint64_t sub_1001C65AC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1001C660C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001C6664(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001C66BC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001C6714(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_1001C6768@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, char a10, char a11, char a12, char a13, char a14)
{
  int v90 = a8;
  uint64_t v101 = a7;
  int v87 = a5;
  int v88 = a6;
  int v100 = a4;
  LODWORD(v95) = a3;
  uint64_t v103 = a9;
  int v16 = a1;
  uint64_t v17 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v17 - 8);
  sub_100109314();
  uint64_t v94 = v18;
  type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v91 = v20;
  uint64_t v92 = v19;
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v104 = v21;
  uint64_t v98 = type metadata accessor for NotificationsOptInState();
  sub_100162E4C();
  __chkstk_darwin(v22);
  int v99 = (char *)&v85 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v24);
  sub_100109770();
  uint64_t v102 = v25;
  sub_1001626D4();
  __chkstk_darwin(v26);
  sub_100109770();
  uint64_t v97 = v27;
  sub_1001626D4();
  __chkstk_darwin(v28);
  sub_100109770();
  uint64_t v96 = v29;
  sub_1001626D4();
  __chkstk_darwin(v30);
  sub_100109770();
  uint64_t v93 = v31;
  sub_1001626D4();
  __chkstk_darwin(v32);
  sub_100109770();
  uint64_t v89 = v33;
  sub_1001626D4();
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&v85 - v35;
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v85 - v38;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v85 - v41;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v85 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v85 - v47;
  __chkstk_darwin(v49);
  uint64_t v51 = (char *)&v85 - v50;
  __chkstk_darwin(v52);
  uint64_t v54 = (unsigned __int8 *)&v85 - v53;
  sub_1001C6DA8(v14, (uint64_t)&v85 - v53);
  if (v16 == 2) {
    int v55 = *v54;
  }
  else {
    int v55 = v16 & 1;
  }
  int v86 = v55;
  int v56 = v95;
  sub_1001C6D4C((uint64_t)v54);
  sub_1001C6DA8(v14, (uint64_t)v51);
  if (a2)
  {
    uint64_t v95 = a2;
  }
  else
  {
    uint64_t v95 = *((void *)v51 + 1);
    swift_bridgeObjectRetain();
  }
  int v57 = v100;
  swift_bridgeObjectRetain();
  sub_1001C6D4C((uint64_t)v51);
  sub_1001C6DA8(v14, (uint64_t)v48);
  if (v56 == 2) {
    int v58 = v48[16];
  }
  else {
    int v58 = v56 & 1;
  }
  int v85 = v58;
  uint64_t v59 = v97;
  uint64_t v60 = v93;
  int v61 = v87;
  sub_1001C6D4C((uint64_t)v48);
  sub_1001C6DA8(v14, (uint64_t)v45);
  if (v57 == 2) {
    int v62 = v45[17];
  }
  else {
    int v62 = v57 & 1;
  }
  int v100 = v62;
  uint64_t v63 = (uint64_t)v99;
  int v64 = v88;
  sub_1001C6D4C((uint64_t)v45);
  sub_1001C6DA8(v14, (uint64_t)v42);
  if (v61 == 2) {
    int v65 = v42[18];
  }
  else {
    int v65 = v61 & 1;
  }
  LODWORD(v99) = v65;
  uint64_t v66 = (int *)v98;
  uint64_t v67 = v94;
  sub_1001C6D4C((uint64_t)v42);
  sub_1001C6DA8(v14, (uint64_t)v39);
  if (v64 == 2) {
    int v68 = v39[19];
  }
  else {
    int v68 = v64 & 1;
  }
  LODWORD(v98) = v68;
  uint64_t v69 = v92;
  int v70 = v90;
  sub_1001C6D4C((uint64_t)v39);
  sub_1001C7278(v101, v67);
  sub_1001C6DA8(v14, (uint64_t)v36);
  if (_s7Weather24LocationCompositionStateOwet_0(v67, 1, v69) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v91 + 16))(v104, &v36[v66[10]], v69);
    sub_1001C6D4C((uint64_t)v36);
    sub_1001E7540(v67);
  }
  else
  {
    sub_1001C6D4C((uint64_t)v36);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v91 + 32))(v104, v67, v69);
  }
  uint64_t v71 = v96;
  uint64_t v72 = v89;
  char v73 = a10;
  sub_1001C6DA8(v14, v89);
  if (v70 == 2) {
    char v74 = *(unsigned char *)(v72 + v66[11]);
  }
  else {
    char v74 = v70 & 1;
  }
  sub_1001C6D4C(v72);
  sub_1001C6DA8(v14, v60);
  if (a10 == 3) {
    char v73 = *(unsigned char *)(v60 + v66[12]);
  }
  sub_1001C6D4C(v60);
  sub_1001C6DA8(v14, v71);
  if (a11 == 2) {
    char v75 = *(unsigned char *)(v71 + v66[13]);
  }
  else {
    char v75 = a11 & 1;
  }
  sub_1001C6D4C(v71);
  sub_1001C6DA8(v14, v59);
  if (a12 == 2) {
    char v76 = *(unsigned char *)(v59 + v66[14]);
  }
  else {
    char v76 = a12 & 1;
  }
  sub_1001C6D4C(v59);
  uint64_t v77 = v102;
  sub_1001C6DA8(v14, v102);
  if (a13 == 2) {
    char v78 = *(unsigned char *)(v77 + v66[15]);
  }
  else {
    char v78 = a13 & 1;
  }
  uint64_t v79 = v77;
  uint64_t v80 = v95;
  sub_1001C6D4C(v79);
  sub_1001C6DA8(v14, v63);
  if (a14 == 2) {
    char v81 = *(unsigned char *)(v63 + v66[16]);
  }
  else {
    char v81 = a14 & 1;
  }
  char v83 = v85;
  char v82 = v86;
  sub_1001C6D4C(v63);
  return sub_1001C6E0C(v82, v80, v83, v100, (char)v99, v98, v104, v74, v103, v73, v75, v76, v78, v81);
}

uint64_t sub_1001C6D4C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NotificationsOptInState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001C6DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NotificationsOptInState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001C6E0C@<X0>(char a1@<W0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, char a10, char a11, char a12, char a13, char a14)
{
  *(unsigned char *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 17) = a4;
  *(unsigned char *)(a9 + 18) = a5;
  *(unsigned char *)(a9 + 19) = a6;
  uint64_t v17 = (int *)type metadata accessor for NotificationsOptInState();
  uint64_t v18 = a9 + v17[10];
  type metadata accessor for Date();
  sub_100162E4C();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 32))(v18, a7);
  *(unsigned char *)(a9 + v17[11]) = a8;
  *(unsigned char *)(a9 + v17[12]) = a10;
  *(unsigned char *)(a9 + v17[13]) = a11;
  *(unsigned char *)(a9 + v17[14]) = a12;
  *(unsigned char *)(a9 + v17[15]) = a13;
  *(unsigned char *)(a9 + v17[16]) = a14;
  return result;
}

BOOL sub_1001C6EF8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v6 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_10011BFD8();
  uint64_t v10 = sub_10017DF08(&qword_100E64D60);
  sub_100162880();
  __chkstk_darwin(v11);
  sub_100162E88();
  uint64_t v12 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v13 = sub_100109308(v12);
  uint64_t v14 = __chkstk_darwin(v13);
  int v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v33 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v33 - v20;
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v22 = *((void *)a1 + 2);
  unint64_t v23 = *((void *)a2 + 2);
  if (!v22)
  {
    if (v23) {
      return 0;
    }
    goto LABEL_14;
  }
  if (v22 == 1)
  {
    if (v23 != 1) {
      return 0;
    }
LABEL_14:
    uint64_t v34 = v8;
    uint64_t v27 = type metadata accessor for ContentStatusBanner();
    sub_1001C7278((uint64_t)&a1[*(int *)(v27 + 24)], (uint64_t)v21);
    sub_1001C7278((uint64_t)&a2[*(int *)(v27 + 24)], (uint64_t)v19);
    uint64_t v28 = v2 + *(int *)(v10 + 48);
    sub_1001C7278((uint64_t)v21, v2);
    sub_1001C7278((uint64_t)v19, v28);
    sub_100162F8C(v2);
    if (v24)
    {
      sub_100178200((uint64_t)v19, (uint64_t *)&unk_100E73CA0);
      sub_100178200((uint64_t)v21, (uint64_t *)&unk_100E73CA0);
      sub_100162F8C(v28);
      if (v24)
      {
        sub_100178200(v2, (uint64_t *)&unk_100E73CA0);
        return 1;
      }
    }
    else
    {
      sub_1001C7278(v2, (uint64_t)v16);
      sub_100162F8C(v28);
      uint64_t v30 = v34;
      if (!v29)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v3, v28, v6);
        sub_1001C72E0((unint64_t *)&qword_100E63980, (void (*)(uint64_t))&type metadata accessor for Date);
        char v31 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v32 = *(void (**)(void))(v30 + 8);
        sub_100164F40();
        v32();
        sub_100178200((uint64_t)v19, (uint64_t *)&unk_100E73CA0);
        sub_100178200((uint64_t)v21, (uint64_t *)&unk_100E73CA0);
        sub_100164F40();
        v32();
        sub_100178200(v2, (uint64_t *)&unk_100E73CA0);
        return (v31 & 1) != 0;
      }
      sub_100178200((uint64_t)v19, (uint64_t *)&unk_100E73CA0);
      sub_100178200((uint64_t)v21, (uint64_t *)&unk_100E73CA0);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v16, v6);
    }
    sub_100178200(v2, &qword_100E64D60);
    return 0;
  }
  if (v23 < 2) {
    return 0;
  }
  BOOL v24 = *((void *)a1 + 1) == *((void *)a2 + 1) && v22 == v23;
  if (v24) {
    goto LABEL_14;
  }
  char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
  BOOL result = 0;
  if (v25) {
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_1001C7278(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001C72E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001C7328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for ActivityAction();
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = type metadata accessor for Locale();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = sub_10017DF08(&qword_100E663F0);
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_100109314();
  sub_100109338(v17);
  uint64_t v18 = sub_10017DF08(&qword_100E66418);
  uint64_t v19 = sub_100109308(v18);
  __chkstk_darwin(v19);
  sub_100109314();
  sub_100109338(v20);
  uint64_t v21 = sub_10017DF08(&qword_100E66420);
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_100109314();
  sub_100109338(v23);
  uint64_t v24 = sub_10017DF08(&qword_100E66428);
  uint64_t v25 = sub_100109308(v24);
  __chkstk_darwin(v25);
  sub_100109314();
  sub_100109338(v26);
  uint64_t v27 = sub_10017DF08(&qword_100E66430);
  uint64_t v28 = sub_100109308(v27);
  __chkstk_darwin(v28);
  sub_100109314();
  sub_100109338(v29);
  uint64_t v30 = sub_10017DF08(&qword_100E63730);
  uint64_t v31 = sub_100109308(v30);
  __chkstk_darwin(v31);
  sub_1001626E0();
  uint64_t v34 = v33 - v32;
  uint64_t v35 = sub_10017DF08(&qword_100E66438);
  uint64_t v36 = sub_100109308(v35);
  __chkstk_darwin(v36);
  sub_100109314();
  sub_100109338(v37);
  uint64_t v38 = sub_10017DF08(&qword_100E66440);
  uint64_t v39 = sub_100109308(v38);
  __chkstk_darwin(v39);
  sub_100109314();
  uint64_t v41 = v40;
  type metadata accessor for EnvironmentAction();
  sub_100162E4C();
  __chkstk_darwin(v42);
  sub_1001626E0();
  uint64_t v45 = (unsigned __int8 *)(v44 - v43);
  sub_1001C819C(a3, v44 - v43);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      int v48 = *v45;
      int v49 = v45[1];
      sub_1001B1E64((void *)(v3 + 56), *(void *)(v3 + 80));
      uint64_t v47 = sub_10007A938(*(unsigned __int8 *)(a1 + 2), a2, v48 | (v49 << 8));
      goto LABEL_4;
    case 2u:
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v11 + 32))(v14, v45, v10);
      uint64_t v50 = type metadata accessor for AppConfigurationState();
      uint64_t v3 = 1;
      uint64_t v51 = v41;
      _s7Weather24LocationCompositionStateOwst_0(v41, 1, 1, v50);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v34, v14, v10);
      _s7Weather24LocationCompositionStateOwst_0(v34, 0, 1, v10);
      uint64_t v215 = 1;
      sub_1001A25D0();
      uint64_t v53 = *(unsigned char **)(v52 - 256);
      sub_10017EA98(2u, v53, v190[0], v190[1], v190[2], v11, (char)v193, SBYTE1(v193), SBYTE2(v193), v194);
      sub_1001781AC(v34, &qword_100E63730);
      uint64_t v54 = type metadata accessor for EnvironmentState();
      uint64_t v57 = sub_1001A491C((uint64_t)v53, v55, v56, v54);
      uint64_t v58 = sub_100185D70(v57);
      _s7Weather24LocationCompositionStateOwst_0(v200, 1, 1, v58);
      uint64_t v59 = type metadata accessor for TimeState();
      _s7Weather24LocationCompositionStateOwst_0(v199, 1, 1, v59);
      uint64_t v60 = type metadata accessor for ViewState(0);
      _s7Weather24LocationCompositionStateOwst_0(v198, 1, 1, v60);
      uint64_t v61 = type metadata accessor for ModalViewState(0);
      _s7Weather24LocationCompositionStateOwst_0(v195, 1, 1, v61);
      sub_1001A2EA0(0, 3, v51, (uint64_t)v53, v62, v63, v64, v65, 0, v200, v199, v198, v195, 0, 0, 0, 0, 0, 0,
        0,
        a2);
      sub_100176CF8();
      sub_1001781AC(v195, &qword_100E663F0);
      sub_1001781AC(v198, &qword_100E66418);
      sub_1001781AC(v199, &qword_100E66420);
      sub_1001781AC(v200, &qword_100E66428);
      sub_1001781AC(v11 + 16, &qword_100E66430);
      sub_1001781AC((uint64_t)v53, &qword_100E66438);
      sub_1001781AC(v51, &qword_100E66440);
      (*(void (**)(uint64_t, uint64_t))(v192 + 8))(v14, v10);
      return v3;
    case 3u:
      sub_1008CBB2C((uint64_t)v45, v9);
      sub_1001B1E64((void *)(v3 + 96), *(void *)(v3 + 120));
      uint64_t v3 = sub_10087B86C(a2, v9);
      uint64_t v66 = type metadata accessor for ActivityAction;
      uint64_t v67 = v9;
      goto LABEL_17;
    case 4u:
      uint64_t v68 = *(void *)v45;
      uint64_t v69 = *((void *)v45 + 1);
      uint64_t v70 = type metadata accessor for AppConfigurationState();
      _s7Weather24LocationCompositionStateOwst_0(v41, 1, 1, v70);
      _s7Weather24LocationCompositionStateOwst_0(v34, 1, 1, v10);
      uint64_t v215 = 1;
      long long v216 = 0u;
      long long v217 = 0u;
      uint64_t v218 = 0;
      uint64_t v11 = (uint64_t)v193;
      uint64_t v3 = a1;
      sub_1000F0AD4(2u, 5, 5, v34, v68, v69, 2, 2, v193, 2, 2, 2, 0, 1, 2, 2, (uint64_t)&v215);
      swift_bridgeObjectRelease();
      sub_1001781AC(v34, &qword_100E63730);
      uint64_t v71 = type metadata accessor for EnvironmentState();
      uint64_t v72 = (uint64_t)v193;
      goto LABEL_23;
    case 5u:
      uint64_t v73 = *v45;
      uint64_t v74 = type metadata accessor for AppConfigurationState();
      uint64_t v75 = v41;
      _s7Weather24LocationCompositionStateOwst_0(v41, 1, 1, v74);
      _s7Weather24LocationCompositionStateOwst_0(v34, 1, 1, v10);
      unsigned __int8 v76 = sub_1001881DC();
      int v83 = v73;
      int v84 = 2;
      goto LABEL_10;
    case 6u:
      uint64_t v73 = *v45;
      uint64_t v85 = type metadata accessor for AppConfigurationState();
      uint64_t v75 = v41;
      _s7Weather24LocationCompositionStateOwst_0(v41, 1, 1, v85);
      _s7Weather24LocationCompositionStateOwst_0(v34, 1, 1, v10);
      unsigned __int8 v76 = sub_1001881DC();
      int v83 = 2;
      int v84 = v73;
LABEL_10:
      uint64_t v3 = a1;
      sub_1000F0AD4(v76, v77, v78, v79, v80, v81, v83, v84, v82, v190[0], v190[1], v190[2], v191, (char)v193, SBYTE1(v193), SBYTE2(v193), v194);
      sub_1001781AC(v34, &qword_100E63730);
      uint64_t v86 = type metadata accessor for EnvironmentState();
      uint64_t v89 = sub_1001A491C(v11, v87, v88, v86);
      uint64_t v90 = sub_100163A90(v89);
      uint64_t v91 = sub_1001D1F14(v90);
      uint64_t v92 = sub_10019F360(v91);
      uint64_t v93 = sub_1001805D4(v92);
      _s7Weather24LocationCompositionStateOwst_0(v196, 1, 1, v93);
      uint64_t v94 = sub_1001818C8();
      sub_100184070(v94, v95, v96, v97, v98, v99, v100, v101, v198, v199, v200, v201, a1, a2, v204, (uint64_t)v205, v206, SBYTE8(v206), v207,
        *((uint64_t *)&v207 + 1),
        (uint64_t)v208);
      sub_100176CF8();
      sub_1001781AC(v196, &qword_100E663F0);
      sub_1001781AC(a3, &qword_100E66418);
      sub_1001781AC(v9, &qword_100E66420);
      sub_1001781AC(v41, &qword_100E66428);
      sub_1001781AC(v73, &qword_100E66430);
      uint64_t v102 = v11;
      goto LABEL_20;
    case 7u:
      unsigned int v103 = *v45;
      uint64_t v68 = type metadata accessor for EnvironmentState();
      uint64_t v3 = a1;
      uint64_t v9 = *(unsigned __int8 *)(a1 + *(int *)(v68 + 56)) | v103;
      uint64_t v104 = type metadata accessor for AppConfigurationState();
      sub_10017D718(v104, v105, v106, v104);
      sub_10019DA08();
      unsigned __int8 v107 = sub_1001A0F90();
      goto LABEL_22;
    case 8u:
      unsigned __int8 v116 = *v45;
      uint64_t v117 = type metadata accessor for AppConfigurationState();
      uint64_t v3 = 1;
      uint64_t v75 = v41;
      _s7Weather24LocationCompositionStateOwst_0(v41, 1, 1, v117);
      _s7Weather24LocationCompositionStateOwst_0(v34, 1, 1, v10);
      sub_100189504();
      LOWORD(v193) = 513;
      uint64_t v191 = 0;
      *(_WORD *)&v190[1] = 514;
      v190[0] = v116;
      goto LABEL_15;
    case 9u:
      uint64_t v118 = *(void *)v45;
      unint64_t v119 = *((void *)v45 + 1);
      sub_1001B1E64((void *)(v3 + 136), *(void *)(v3 + 160));
      uint64_t v3 = sub_10033B5B0(a2, v118, v119);
      sub_1001EB5EC(v118, v119);
      return v3;
    case 0xAu:
      uint64_t v120 = *(void *)v45;
      uint64_t v121 = type metadata accessor for AppConfigurationState();
      uint64_t v3 = 1;
      uint64_t v75 = v41;
      _s7Weather24LocationCompositionStateOwst_0(v41, 1, 1, v121);
      _s7Weather24LocationCompositionStateOwst_0(v34, 1, 1, v10);
      sub_100189504();
      LOWORD(v193) = 512;
      uint64_t v191 = v120;
      v190[2] = v122;
      *(_WORD *)int v190 = 514;
LABEL_15:
      uint64_t v123 = (uint64_t)v193;
      uint64_t v124 = v193;
      unsigned __int8 v125 = 2;
      goto LABEL_19;
    case 0xBu:
      uint64_t v126 = type metadata accessor for AppConfigurationState();
      sub_10017D718(v126, v127, v128, v126);
      sub_1000EC078();
      uint64_t v215 = (uint64_t)v205;
      long long v216 = v206;
      long long v217 = v207;
      uint64_t v218 = v208;
      unsigned __int8 v129 = sub_1001A0F90();
      uint64_t v3 = a1;
      sub_1000F0AD4(v129, v130, v131, v132, v133, v134, v135, v136, v137, v187[0], v187[1], v187[2], v188, v189, SHIBYTE(v189), 2, (uint64_t)&v215);
      id v214 = v205;
      sub_10011CB1C(&v214);
      id v213 = (id)v206;
      sub_10011CB1C(&v213);
      id v212 = (id)*((void *)&v206 + 1);
      sub_10011CB1C(&v212);
      id v211 = (id)v207;
      sub_10011CB1C(&v211);
      id v210 = (id)*((void *)&v207 + 1);
      sub_10011CB1C(&v210);
      id v209 = v208;
      sub_10011CB1C(&v209);
      sub_1001781AC(v34, &qword_100E63730);
      uint64_t v138 = type metadata accessor for EnvironmentState();
      uint64_t v141 = sub_1001A491C(v11, v139, v140, v138);
      uint64_t v142 = sub_100163A90(v141);
      uint64_t v143 = sub_1001D1F14(v142);
      uint64_t v144 = sub_10019F360(v143);
      uint64_t v145 = sub_1001805D4(v144);
      _s7Weather24LocationCompositionStateOwst_0(v194, 1, 1, v145);
      sub_100184070(0, 3, v41, v146, v147, v148, v149, v150, 0, (uint64_t)v205, v206, *((uint64_t *)&v206 + 1), v194, 0, 0, 0, 0, 0, 0,
        0,
        a2);
      sub_100176CF8();
      sub_1001781AC(v194, &qword_100E663F0);
      sub_1001781AC(*((uint64_t *)&v206 + 1), &qword_100E66418);
      sub_1001781AC(v206, &qword_100E66420);
      sub_1001781AC((uint64_t)v205, &qword_100E66428);
      sub_1001781AC((uint64_t)v208, &qword_100E66430);
      sub_1001781AC(v11, &qword_100E66438);
      sub_1001781AC(v41, &qword_100E66440);
      uint64_t v66 = type metadata accessor for EnvironmentAction;
      uint64_t v67 = (uint64_t)v45;
LABEL_17:
      sub_100220D28(v67, (void (*)(void))v66);
      return v3;
    case 0xCu:
      uint64_t v151 = type metadata accessor for AppConfigurationState();
      uint64_t v75 = v41;
      sub_10017D718(v151, v152, v153, v151);
      uint64_t v215 = 1;
      sub_1001A25D0();
      uint64_t v123 = *(void *)(v154 - 256);
      uint64_t v124 = (unsigned char *)v123;
      unsigned __int8 v125 = 0;
LABEL_19:
      sub_10017EA98(v125, v124, v190[0], v190[1], v190[2], v191, (char)v193, SBYTE1(v193), SBYTE2(v193), v194);
      sub_1001781AC(v34, &qword_100E63730);
      uint64_t v155 = type metadata accessor for EnvironmentState();
      uint64_t v158 = sub_1001A491C(v123, v156, v157, v155);
      uint64_t v159 = sub_100185D70(v158);
      uint64_t v160 = sub_1001D1F14(v159);
      uint64_t v161 = sub_10019F360(v160);
      uint64_t v162 = sub_1001805D4(v161);
      _s7Weather24LocationCompositionStateOwst_0(v197, 1, 1, v162);
      uint64_t v163 = sub_1001818C8();
      sub_1001A2EA0(v163, v164, v165, v123, v166, v167, v168, v169, v198, v199, v200, v201, a1, a2, v204, (uint64_t)v205, v206, SBYTE8(v206), v207,
        *((uint64_t *)&v207 + 1),
        (uint64_t)v208);
      sub_100176CF8();
      sub_1001781AC(v197, &qword_100E663F0);
      sub_1001781AC(a3, &qword_100E66418);
      sub_1001781AC(v9, &qword_100E66420);
      sub_1001781AC(v41, &qword_100E66428);
      sub_1001781AC(v11, &qword_100E66430);
      uint64_t v102 = v123;
LABEL_20:
      sub_1001781AC(v102, &qword_100E66438);
      uint64_t v170 = v75;
      goto LABEL_24;
    case 0xDu:
      swift_beginAccess();
      uint64_t v68 = type metadata accessor for EnvironmentState();
      uint64_t v171 = type metadata accessor for AppConfigurationState();
      sub_10017D718(v171, v172, v173, v171);
      sub_10019DA08();
      BYTE1(v193) = v174;
      LOBYTE(v193) = 1;
      uint64_t v191 = 0;
      v190[2] = v175;
      *(_WORD *)int v190 = 514;
      uint64_t v11 = (uint64_t)v193;
      uint64_t v115 = v193;
      unsigned __int8 v107 = 2;
      int v108 = 5;
      int v109 = 5;
      uint64_t v110 = v34;
      uint64_t v111 = 0;
      uint64_t v112 = 0;
      int v113 = 2;
      int v114 = 2;
      uint64_t v3 = a1;
LABEL_22:
      sub_1000F0AD4(v107, v108, v109, v110, v111, v112, v113, v114, v115, v190[0], v190[1], v190[2], v191, (char)v193, SBYTE1(v193), SBYTE2(v193), v194);
      sub_1001781AC(v34, &qword_100E63730);
      uint64_t v72 = v11;
      uint64_t v71 = v68;
LABEL_23:
      _s7Weather24LocationCompositionStateOwst_0(v72, 0, 1, v71);
      uint64_t v176 = type metadata accessor for LocationsState();
      uint64_t v177 = sub_100163A90(v176);
      _s7Weather24LocationCompositionStateOwst_0(v200, 1, 1, v177);
      uint64_t v178 = type metadata accessor for TimeState();
      uint64_t v179 = sub_10019F360(v178);
      uint64_t v180 = sub_1001805D4(v179);
      _s7Weather24LocationCompositionStateOwst_0(v194, 1, 1, v180);
      sub_100184070(0, 3, v41, v181, v182, v183, v184, v185, 0, v200, v9, a3, v194, 0, 0, 0, 0, 0, 0,
        0,
        a2);
      sub_100176CF8();
      sub_1001781AC(v194, &qword_100E663F0);
      sub_1001781AC(a3, &qword_100E66418);
      sub_1001781AC(v9, &qword_100E66420);
      sub_1001781AC(v200, &qword_100E66428);
      sub_1001781AC(v68, &qword_100E66430);
      sub_1001781AC(v11, &qword_100E66438);
      uint64_t v170 = v41;
LABEL_24:
      sub_1001781AC(v170, &qword_100E66440);
      break;
    default:
      int v46 = *v45;
      sub_1001B1E64((void *)(v3 + 16), *(void *)(v3 + 40));
      uint64_t v47 = sub_100435368(*(unsigned __int8 *)(a1 + 1), a2, v46);
LABEL_4:
      uint64_t v3 = v47;
      break;
  }
  return v3;
}

uint64_t type metadata accessor for ActivityAction()
{
  uint64_t result = qword_100E8AD58;
  if (!qword_100E8AD58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001C819C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EnvironmentAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1001C8200()
{
  sub_100162EA0();
  uint64_t v2 = sub_10017DF08(&qword_100E66678);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = type metadata accessor for SavedLocation();
  sub_100179C0C();
  uint64_t v61 = v8;
  __chkstk_darwin(v9);
  sub_100162EF8();
  uint64_t v70 = v10;
  sub_1001626D4();
  __chkstk_darwin(v11);
  uint64_t v60 = (uint64_t)v58 - v12;
  sub_1001626D4();
  __chkstk_darwin(v13);
  sub_100191270(v14, v15, v16, v17, v18, v19, v20, v21, v58[0]);
  uint64_t v22 = type metadata accessor for LocationModel();
  sub_100179C0C();
  uint64_t v24 = v23;
  __chkstk_darwin(v25);
  sub_1001190EC();
  __chkstk_darwin(v26);
  sub_100128F8C();
  uint64_t v71 = v27;
  uint64_t v28 = type metadata accessor for LocationsState();
  uint64_t v29 = *(void *)(*(void *)(v0 + *(int *)(v28 + 24)) + 16);
  if (v29)
  {
    v58[1] = v28;
    v58[2] = v0;
    uint64_t v31 = *(void (**)(void))(v24 + 16);
    uint64_t v30 = v24 + 16;
    uint64_t v66 = v6;
    uint64_t v67 = v31;
    sub_100129058();
    uint64_t v34 = v33 + v32;
    uint64_t v35 = *(void *)(v30 + 56);
    uint64_t v64 = v30 + 72;
    uint64_t v65 = v35;
    int v63 = enum case for LocationModel.saved(_:);
    uint64_t v36 = (void (**)(uint64_t, uint64_t))(v30 - 8);
    v58[3] = v30 + 80;
    v58[0] = v33;
    swift_bridgeObjectRetain();
    uint64_t v37 = _swiftEmptyArrayStorage;
    uint64_t v68 = v30;
    uint64_t v69 = v7;
    uint64_t v62 = (void (**)(uint64_t, uint64_t))(v30 - 8);
    do
    {
      uint64_t v38 = v67;
      sub_100179020();
      v38();
      sub_100179020();
      v38();
      sub_1001D145C();
      if (v39() == v63)
      {
        sub_1001821D4();
        v40();
        uint64_t v41 = v1 + *(int *)(sub_10017DF08(&qword_100E63870) + 48);
        uint64_t v42 = v60;
        sub_1001D113C(v1, v60);
        sub_100178110(v41, &qword_100E63508);
        uint64_t v43 = v36;
        uint64_t v44 = v66;
        uint64_t v7 = v69;
        sub_1001D113C(v42, v66);
        _s7Weather24LocationCompositionStateOwst_0(v44, 0, 1, v7);
        (*v43)(v71, v22);
      }
      else
      {
        uint64_t v45 = *v36;
        (*v36)(v1, v22);
        uint64_t v44 = v66;
        _s7Weather24LocationCompositionStateOwst_0(v66, 1, 1, v7);
        v45(v71, v22);
      }
      sub_10012B520(v44, 1, v7);
      if (v46)
      {
        sub_100178110(v44, &qword_100E66678);
        uint64_t v36 = v62;
      }
      else
      {
        uint64_t v47 = v59;
        sub_1001D113C(v44, v59);
        sub_1001D113C(v47, v70);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v36 = v62;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v53 = sub_100183298();
          uint64_t v37 = (void *)sub_10018A66C(v53, v54, v55, (uint64_t)v37);
        }
        unint64_t v50 = v37[2];
        unint64_t v49 = v37[3];
        if (v50 >= v49 >> 1)
        {
          BOOL v56 = sub_10019AEC0(v49);
          uint64_t v37 = (void *)sub_10018A66C(v56, v50 + 1, 1, (uint64_t)v37);
        }
        v37[2] = v50 + 1;
        sub_100129058();
        sub_1001D113C(v70, (uint64_t)v37 + v51 + *(void *)(v52 + 72) * v50);
        uint64_t v7 = v69;
      }
      v34 += v65;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v37 = _swiftEmptyArrayStorage;
  }
  uint64_t v57 = swift_bridgeObjectRetain();
  sub_1001C8784(v57, (uint64_t)v37);
  sub_100162694();
}

BOOL sub_1001C8634(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v10, v11);
}

void sub_1001C8654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *uint64_t v9 = v10;
  v9[1] = v12;
  v9[2] = v11;
  v9[3] = a5;
  v9[4] = a6;
  v9[5] = a7;
  v9[6] = a8;
  v9[7] = v8;
  v9[8] = v13;
  v9[9] = v14;
}

uint64_t sub_1001C866C()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_1001C86A0()
{
  return v0;
}

uint64_t sub_1001C86B4()
{
  return v0;
}

uint64_t sub_1001C86C8()
{
  return static Optional<A>.read(from:)();
}

uint64_t sub_1001C86E8()
{
  return 0;
}

uint64_t sub_1001C86FC(uint64_t a1)
{
  *(void *)(v1 - 104) = a1;
  return v1 - 104;
}

uint64_t sub_1001C8738()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001C875C()
{
  return v0;
}

uint64_t sub_1001C8774()
{
  return v0;
}

void sub_1001C8784(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for SavedLocation();
  uint64_t v20 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v21 = (uint64_t)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v22 = _swiftEmptyArrayStorage;
  uint64_t v19 = *(void *)(a1 + 16);
  if (v19)
  {
    uint64_t v18 = v2;
    unint64_t v10 = 0;
    while (v10 < *(void *)(a1 + 16))
    {
      unint64_t v11 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
      uint64_t v12 = *(void *)(v20 + 72);
      uint64_t v13 = a1;
      sub_10018D0C0(a1 + v11 + v12 * v10, (uint64_t)v9);
      uint64_t v14 = *(void *)(a2 + 16);
      if (v14)
      {
        uint64_t v15 = a2 + v11;
        swift_bridgeObjectRetain();
        while ((static SavedLocation.== infix(_:_:)() & 1) == 0)
        {
          v15 += v12;
          if (!--v14)
          {
            swift_bridgeObjectRelease();
            goto LABEL_9;
          }
        }
        swift_bridgeObjectRelease();
        sub_1001D1298((uint64_t)v9, (void (*)(void))&type metadata accessor for SavedLocation);
      }
      else
      {
LABEL_9:
        sub_1001D113C((uint64_t)v9, v21);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_10018D170();
        }
        uint64_t v16 = v22;
        unint64_t v17 = v22[2];
        if (v17 >= v22[3] >> 1)
        {
          sub_10018D170();
          uint64_t v16 = v22;
        }
        void v16[2] = v17 + 1;
        sub_1001D113C(v21, (uint64_t)v16 + v11 + v17 * v12);
      }
      ++v10;
      a1 = v13;
      if (v10 == v19) {
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1001C8A0C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1001C8A6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v163 = a2;
  uint64_t v162 = type metadata accessor for NSNotificationCenter.Publisher();
  sub_100179C0C();
  uint64_t v161 = v4;
  __chkstk_darwin(v5);
  sub_100109314();
  sub_100109338(v6);
  id v167 = (id)sub_10017DF08(&qword_100EAA930);
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v149 = v8;
  uint64_t v140 = type metadata accessor for DynamicTypeSize();
  sub_100179C0C();
  uint64_t v141 = v9;
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v135 = v11;
  uint64_t v12 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  uint64_t v13 = sub_100164920(v12);
  uint64_t v173 = v14;
  uint64_t v16 = *(void *)(v15 + 64);
  unint64_t v17 = (uint64_t (*)(uint64_t))v13;
  __chkstk_darwin(v13);
  uint64_t v18 = type metadata accessor for WeatherConditionBackgroundModel();
  sub_100179C0C();
  uint64_t v132 = v19;
  __chkstk_darwin(v20);
  sub_10011C760();
  uint64_t v133 = (void *)sub_10017DF08(&qword_100EB49E0);
  sub_100162E4C();
  __chkstk_darwin(v21);
  sub_1001626E0();
  uint64_t v24 = (uint64_t *)(v23 - v22);
  uint64_t v134 = sub_10017DF08(&qword_100EB49E8);
  sub_100179C0C();
  uint64_t v136 = v25;
  __chkstk_darwin(v26);
  sub_100109314();
  uint64_t v164 = v27;
  uint64_t v139 = sub_10017DF08(&qword_100EB49F0);
  sub_100179C0C();
  uint64_t v138 = v28;
  __chkstk_darwin(v29);
  sub_100109314();
  sub_100109338(v30);
  uint64_t v165 = sub_10017DF08(&qword_100EB49F8);
  sub_100162E4C();
  __chkstk_darwin(v31);
  sub_100109314();
  sub_100109338(v32);
  uint64_t v142 = sub_10017DF08(&qword_100EB4A00);
  sub_100179C0C();
  uint64_t v143 = v33;
  __chkstk_darwin(v34);
  sub_100182438(v35, v132);
  uint64_t v144 = sub_10017DF08(&qword_100EB4A08);
  sub_100179C0C();
  uint64_t v145 = v36;
  __chkstk_darwin(v37);
  sub_100166BD4(v38, v132);
  uint64_t v148 = sub_10017DF08(&qword_100EB4A10);
  sub_100179C0C();
  uint64_t v147 = v39;
  __chkstk_darwin(v40);
  sub_100109314();
  uint64_t v166 = v41;
  uint64_t v153 = sub_10017DF08(&qword_100EB4A18);
  sub_100179C0C();
  uint64_t v152 = v42;
  __chkstk_darwin(v43);
  sub_100109314();
  sub_100109338(v44);
  uint64_t v146 = sub_10017DF08(&qword_100EB4A20);
  sub_100162E4C();
  __chkstk_darwin(v45);
  sub_100109314();
  sub_100109338(v46);
  uint64_t v151 = sub_10017DF08(&qword_100EB4A28);
  sub_100162E4C();
  __chkstk_darwin(v47);
  sub_100109314();
  sub_100109338(v48);
  uint64_t v155 = sub_10017DF08(&qword_100EB4A30);
  sub_100162E4C();
  __chkstk_darwin(v49);
  sub_100109314();
  sub_100109338(v50);
  uint64_t v157 = sub_10017DF08(&qword_100EB49A8);
  sub_100162E4C();
  __chkstk_darwin(v51);
  sub_100109314();
  sub_100109338(v52);
  uint64_t v170 = (void *)v2;
  char v53 = sub_1001CAB48();
  *uint64_t v24 = static Alignment.top.getter();
  v24[1] = v54;
  uint64_t v55 = sub_10017DF08(&qword_100EB4A38);
  sub_1001CADE0(v2, v53 & 1, a1, (uint64_t)v24 + *(int *)(v55 + 44));
  uint64_t v168 = v17;
  sub_100162808();
  v56();
  uint64_t v169 = type metadata accessor for WeatherConditionBackgroundModifier;
  sub_1001C9BA4(v2, (uint64_t)&v132 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
  uint64_t v57 = *(unsigned __int8 *)(v173 + 80);
  uint64_t v172 = ((v57 + 16) & ~v57) + v16;
  uint64_t v173 = (v57 + 16) & ~v57;
  uint64_t v58 = v173;
  uint64_t v171 = v57 | 7;
  uint64_t v59 = swift_allocObject();
  uint64_t v60 = (uint64_t (*)(uint64_t))((char *)&v132 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1001CA430((uint64_t)v60, v59 + v58);
  uint64_t v61 = sub_1001246C8(&qword_100EB4A40, &qword_100EB49E0);
  uint64_t v62 = sub_1001CA9B8((unint64_t *)&qword_100E64A80, (void (*)(uint64_t))&type metadata accessor for WeatherConditionBackgroundModel);
  uint64_t v63 = (uint64_t)v133;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_100162F0C();
  v64();
  sub_100178110((uint64_t)v24, &qword_100EB49E0);
  uint64_t v65 = (uint64_t)v170;
  sub_1001CAA20();
  sub_1001C9BA4(v65, (uint64_t)v60, (void (*)(void))v169);
  uint64_t v66 = swift_allocObject();
  sub_1001CA430((uint64_t)v60, v66 + v173);
  uint64_t v176 = v63;
  id v177 = (id)v18;
  unint64_t v178 = v61;
  uint64_t v179 = (void *)v62;
  uint64_t v133 = &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>;
  swift_getOpaqueTypeConformance2();
  sub_1001CA9B8(&qword_100E651F0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_100162F0C();
  v67();
  sub_10018A1D8();
  sub_100162F0C();
  v68();
  uint64_t v69 = (uint64_t)v170;
  type metadata accessor for AnimatedBackgroundsUserDefaultsMonitor(0);
  sub_1001CA9B8(&qword_100EB4A48, (void (*)(uint64_t))type metadata accessor for AnimatedBackgroundsUserDefaultsMonitor);
  StateObject.wrappedValue.getter();
  LODWORD(v164) = sub_1001CAA88();
  swift_release();
  uint64_t v70 = v169;
  sub_1001C9BA4(v69, (uint64_t)v60, (void (*)(void))v169);
  uint64_t v71 = swift_allocObject();
  uint64_t v72 = v173;
  uint64_t v73 = v60;
  sub_1001CA430((uint64_t)v60, v71 + v173);
  uint64_t v74 = v137;
  sub_100162808();
  v75();
  uint64_t v76 = v74 + *(int *)(v165 + 36);
  *(unsigned char *)uint64_t v76 = v164 & 1;
  *(void *)(v76 + 8) = sub_100B7F0DC;
  *(void *)(v76 + 16) = v71;
  sub_100162F0C();
  v77();
  int v78 = v168;
  LOBYTE(v176) = *((unsigned char *)v170 + *((int *)v168 + 18));
  uint64_t v79 = v170;
  sub_1001C9BA4((uint64_t)v170, (uint64_t)v73, (void (*)(void))v70);
  uint64_t v80 = swift_allocObject();
  sub_1001CA430((uint64_t)v73, v80 + v72);
  unint64_t v81 = sub_100B7F13C();
  sub_1001CA990();
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_100178110(v74, &qword_100EB49F8);
  char v82 = (char *)v79 + *((int *)v78 + 27);
  uint64_t v83 = *(void *)v82;
  LOBYTE(v69) = v82[8];
  sub_100195B7C(*(void *)v82, v69);
  sub_100149AE8();
  LOBYTE(v63) = v84;
  sub_10018F6D8(v83, v69);
  LOBYTE(v174) = v63 & 1;
  uint64_t v85 = v169;
  sub_1001C9BA4((uint64_t)v79, (uint64_t)v73, (void (*)(void))v169);
  uint64_t v86 = swift_allocObject();
  sub_1001CA430((uint64_t)v73, v86 + v72);
  uint64_t v176 = v165;
  id v177 = &type metadata for Bool;
  unint64_t v178 = v81;
  uint64_t v179 = &protocol witness table for Bool;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_1001CA990();
  uint64_t v88 = v142;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_10018A1D8();
  sub_100162F0C();
  v89();
  uint64_t v90 = v149;
  sub_1001CAA60();
  sub_1001C9BA4((uint64_t)v79, (uint64_t)v73, (void (*)(void))v85);
  uint64_t v91 = swift_allocObject();
  uint64_t v169 = v73;
  sub_1001CA430((uint64_t)v73, v91 + v173);
  uint64_t v176 = v88;
  id v177 = &type metadata for Bool;
  unint64_t v178 = OpaqueTypeConformance2;
  uint64_t v179 = &protocol witness table for Bool;
  uint64_t v92 = swift_getOpaqueTypeConformance2();
  unint64_t v93 = sub_1001CA4F8();
  sub_1001CA990();
  uint64_t v94 = v144;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_100178110(v90, &qword_100EAA930);
  sub_10018A1D8();
  uint64_t v95 = v94;
  sub_100162F0C();
  v96();
  if (*v79)
  {
    swift_retain();
    uint64_t v97 = sub_1000C965C();
    int v99 = v98;
    uint64_t v100 = v97;
    swift_release();
    int v174 = v99;
    uint64_t v175 = v100;
    uint64_t v101 = v169;
    sub_1001C9BA4((uint64_t)v79, (uint64_t)v169, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
    uint64_t v102 = swift_allocObject();
    sub_1001CA430((uint64_t)v101, v102 + v173);
    uint64_t v176 = v95;
    id v177 = v167;
    unint64_t v178 = v92;
    uint64_t v179 = (void *)v93;
    swift_getOpaqueTypeConformance2();
    sub_1001CAAFC();
    uint64_t v103 = v150;
    sub_1001CA990();
    View.onChange<A>(of:initial:_:)();
    swift_release();
    swift_bridgeObjectRelease();
    sub_10018A1D8();
    sub_100162F0C();
    v104();
    sub_1001C9BA4((uint64_t)v79, (uint64_t)v101, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
    uint64_t v105 = swift_allocObject();
    uint64_t v106 = v173;
    sub_1001CA430((uint64_t)v101, v105 + v173);
    uint64_t v107 = v152;
    uint64_t v108 = v154;
    uint64_t v109 = v153;
    sub_100162808();
    v110();
    uint64_t v111 = (uint64_t (**)())(v108 + *(int *)(v146 + 36));
    *uint64_t v111 = sub_100225A08;
    v111[1] = (uint64_t (*)())v105;
    v111[2] = 0;
    v111[3] = 0;
    (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v103, v109);
    uint64_t v168 = type metadata accessor for WeatherConditionBackgroundModifier;
    sub_1001C9BA4((uint64_t)v79, (uint64_t)v101, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
    uint64_t v112 = swift_allocObject();
    sub_1001CA430((uint64_t)v101, v112 + v106);
    uint64_t v113 = v156;
    sub_10006DF38(v108, v156, &qword_100EB4A20);
    int v114 = (void *)(v113 + *(int *)(v151 + 36));
    *int v114 = 0;
    v114[1] = 0;
    v114[2] = sub_100B7F3A0;
    v114[3] = v112;
    sub_100178110(v108, &qword_100EB4A20);
    id v167 = self;
    id v115 = [v167 defaultCenter];
    uint64_t v116 = v160;
    NSNotificationCenter.publisher(for:object:)();

    uint64_t v117 = (uint64_t)v170;
    sub_1001C9BA4((uint64_t)v170, (uint64_t)v101, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
    uint64_t v118 = swift_allocObject();
    sub_1001CA430((uint64_t)v101, v118 + v106);
    uint64_t v119 = v159;
    sub_10006DF38(v113, v159, &qword_100EB4A28);
    uint64_t v120 = v155;
    uint64_t v121 = v119 + *(int *)(v155 + 52);
    uint64_t v122 = v161;
    uint64_t v166 = *(void (**)(uint64_t, uint64_t, uint64_t))(v161 + 16);
    uint64_t v123 = v162;
    v166(v121, v116, v162);
    uint64_t v124 = (uint64_t (**)(uint64_t))(v119 + *(int *)(v120 + 56));
    unsigned char *v124 = sub_100225B54;
    v124[1] = (uint64_t (*)(uint64_t))v118;
    unsigned __int8 v125 = *(void (**)(void))(v122 + 8);
    sub_100164944();
    v125();
    sub_100178110(v113, &qword_100EB4A28);
    id v126 = [v167 defaultCenter];
    NSNotificationCenter.publisher(for:object:)();

    sub_1001C9BA4(v117, (uint64_t)v101, (void (*)(void))v168);
    uint64_t v127 = swift_allocObject();
    sub_1001CA430((uint64_t)v101, v127 + v173);
    uint64_t v128 = v158;
    sub_10006DF38(v119, v158, &qword_100EB4A30);
    uint64_t v129 = v157;
    v166(v128 + *(int *)(v157 + 52), v116, v123);
    int v130 = (uint64_t (**)(uint64_t))(v128 + *(int *)(v129 + 56));
    *int v130 = sub_100B7F3C0;
    v130[1] = (uint64_t (*)(uint64_t))v127;
    sub_100164944();
    v125();
    sub_100178110(v119, &qword_100EB4A30);
    return sub_10020E72C(v128, v163, &qword_100EB49A8);
  }
  else
  {
    type metadata accessor for LocationViewCollisionOptions();
    sub_1001CA9B8(&qword_100E6D0B8, (void (*)(uint64_t))type metadata accessor for LocationViewCollisionOptions);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001C9BA4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t type metadata accessor for WeatherConditionBackgroundModifier(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100EB48D8);
}

void *sub_1001C9C18(void *a1, void *a2, int *a3)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a3[5];
  uint64_t v5 = (void *)((char *)a1 + v4);
  uint64_t v6 = (void *)((char *)a2 + v4);
  swift_retain();
  sub_10017DF08(&qword_100E62D60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  }
  else
  {
    *uint64_t v5 = *v6;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  sub_10017DF08(&qword_100E83C68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = type metadata accessor for TargetWindowSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
    {
      uint64_t v17 = sub_10017DF08(&qword_100EAA930);
      memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
    }
  }
  else
  {
    *uint64_t v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = a3[8];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = *(void *)v20;
  char v22 = v20[8];
  sub_100195B7C(*(void *)v20, v22);
  *(void *)uint64_t v19 = v21;
  v19[8] = v22;
  uint64_t v23 = a3[9];
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = *(void *)v25;
  char v27 = v25[8];
  sub_100195B7C(*(void *)v25, v27);
  *(void *)uint64_t v24 = v26;
  v24[8] = v27;
  uint64_t v28 = a3[10];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v100 = type metadata accessor for WeatherConditionBackgroundModel();
  int v99 = *(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16);
  v99(v29, v30, v100);
  uint64_t v31 = a3[12];
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  long long v34 = *(_OWORD *)((char *)a2 + v31 + 24);
  *(_OWORD *)(v32 + 24) = v34;
  uint64_t v35 = v34;
  uint64_t v36 = **(void (***)(char *, char *, uint64_t))(v34 - 8);
  swift_unknownObjectRetain();
  v36(v32, v33, v35);
  uint64_t v37 = a3[13];
  uint64_t v38 = a3[14];
  uint64_t v39 = (char *)a1 + v37;
  uint64_t v40 = (char *)a2 + v37;
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  *((void *)v39 + 2) = *((void *)v40 + 2);
  *(void *)((char *)a1 + v38) = *(void *)((char *)a2 + v38);
  uint64_t v41 = a3[16];
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  *((unsigned char *)a1 + v41) = *((unsigned char *)a2 + v41);
  uint64_t v42 = a3[17];
  uint64_t v43 = (char *)a1 + v42;
  uint64_t v44 = (char *)a2 + v42;
  uint64_t v45 = type metadata accessor for AnimatedGradient();
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  v46(v43, v44, v45);
  uint64_t v47 = sub_10017DF08(&qword_100EB4850);
  *(void *)&v43[*(int *)(v47 + 28)] = *(void *)&v44[*(int *)(v47 + 28)];
  uint64_t v48 = a3[18];
  uint64_t v49 = (char *)a1 + v48;
  uint64_t v50 = (char *)a2 + v48;
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v100))
  {
    uint64_t v51 = sub_10017DF08(&qword_100E64A60);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    v99(v49, v50, v100);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v100);
  }
  uint64_t v52 = sub_10017DF08(&qword_100EB4860);
  *(void *)&v49[*(int *)(v52 + 28)] = *(void *)&v50[*(int *)(v52 + 28)];
  uint64_t v53 = a3[19];
  uint64_t v54 = (char *)a1 + v53;
  uint64_t v55 = (char *)a2 + v53;
  uint64_t v56 = type metadata accessor for TargetWindowSizeClass();
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v55, 1, v56))
  {
    uint64_t v57 = sub_10017DF08(&qword_100EAA930);
    memcpy(v54, v55, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v54, 0, 1, v56);
  }
  uint64_t v58 = sub_10017DF08(&qword_100EB4868);
  *(void *)&v54[*(int *)(v58 + 28)] = *(void *)&v55[*(int *)(v58 + 28)];
  uint64_t v59 = a3[20];
  uint64_t v60 = (char *)a1 + v59;
  uint64_t v61 = (char *)a2 + v59;
  uint64_t v62 = type metadata accessor for CollisionViewMetrics();
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62))
  {
    uint64_t v63 = sub_10017DF08(&qword_100EB4848);
    memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v62);
  }
  uint64_t v64 = sub_10017DF08(&qword_100EB4870);
  *(void *)&v60[*(int *)(v64 + 28)] = *(void *)&v61[*(int *)(v64 + 28)];
  uint64_t v65 = a3[21];
  uint64_t v66 = a3[22];
  uint64_t v67 = (void *)((char *)a1 + v65);
  uint64_t v68 = (void *)((char *)a2 + v65);
  uint64_t v69 = v68[1];
  *uint64_t v67 = *v68;
  v67[1] = v69;
  uint64_t v70 = (void *)((char *)a1 + v66);
  uint64_t v71 = (void *)((char *)a2 + v66);
  uint64_t v72 = v71[1];
  *uint64_t v70 = *v71;
  v70[1] = v72;
  uint64_t v73 = a3[23];
  uint64_t v74 = a3[24];
  uint64_t v75 = (void *)((char *)a1 + v73);
  uint64_t v76 = (void *)((char *)a2 + v73);
  uint64_t v77 = v76[1];
  *uint64_t v75 = *v76;
  v75[1] = v77;
  int v78 = (char *)a1 + v74;
  uint64_t v79 = *(void *)((char *)a2 + v74);
  uint64_t v80 = *(void *)((char *)a2 + v74 + 8);
  char v101 = *((unsigned char *)a2 + v74 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100195B88();
  *(void *)int v78 = v79;
  *((void *)v78 + 1) = v80;
  v78[16] = v101;
  uint64_t v81 = a3[25];
  char v82 = (char *)a1 + v81;
  uint64_t v83 = (char *)a2 + v81;
  uint64_t v84 = *(void *)v83;
  LOBYTE(v69) = v83[8];
  sub_100195B7C(*(void *)v83, v69);
  *(void *)char v82 = v84;
  v82[8] = v69;
  uint64_t v85 = a3[26];
  uint64_t v86 = a3[27];
  uint64_t v87 = (void *)((char *)a1 + v85);
  uint64_t v88 = (void *)((char *)a2 + v85);
  uint64_t v89 = v88[1];
  *uint64_t v87 = *v88;
  v87[1] = v89;
  uint64_t v90 = (char *)a1 + v86;
  uint64_t v91 = *(void *)((char *)a2 + v86);
  uint64_t v92 = *(void *)((char *)a2 + v86 + 8);
  LOBYTE(v72) = *((unsigned char *)a2 + v86 + 16);
  swift_retain();
  sub_100195B88();
  *(void *)uint64_t v90 = v91;
  *((void *)v90 + 1) = v92;
  v90[16] = v72;
  uint64_t v93 = a3[28];
  uint64_t v94 = a3[29];
  uint64_t v95 = (void *)((char *)a1 + v93);
  uint64_t v96 = (void *)((char *)a2 + v93);
  uint64_t v97 = v96[1];
  *uint64_t v95 = *v96;
  v95[1] = v97;
  *(_DWORD *)((char *)a1 + v94) = *(_DWORD *)((char *)a2 + v94);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1001CA430(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001CA494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_1001CA4F8();

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

unint64_t sub_1001CA4F8()
{
  unint64_t result = qword_100E66020;
  if (!qword_100E66020)
  {
    sub_10018C6DC(&qword_100EAA930);
    sub_1000D8BC0(&qword_100E66028, (void (*)(uint64_t))&type metadata accessor for TargetWindowSizeClass);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E66020);
  }
  return result;
}

void sub_1001CA59C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_10010977C();
  a17 = v19;
  a18 = v20;
  type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(0);
  sub_100162E4C();
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&a9 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(0);
  sub_100162E4C();
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&a9 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(0);
  sub_100162E4C();
  __chkstk_darwin(v27);
  sub_100125FF8();
  sub_100184760(v28, v29, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
  uint64_t v30 = sub_100182544();
  if (v30 > 1)
  {
    sub_1001CA894(v30, v31, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
    sub_1001844D0();
    uint64_t v32 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel;
    uint64_t v33 = (uint64_t)v23;
  }
  else
  {
    sub_1001827D0(v18, (uint64_t)v26, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
    swift_bridgeObjectRetain();
    uint64_t v32 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel;
    uint64_t v33 = (uint64_t)v26;
  }
  sub_100184648(v33, (void (*)(void))v32);
  sub_100162714();
}

uint64_t sub_1001CA748()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void sub_1001CA768(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X7>, uint64_t a7@<X8>, unint64_t a8)
{
  sub_10020FA74(a1, a2, a3, a4, a5, 0xD000000000000013, (a7 - 32) | 0x8000000000000000, a6, a8);
}

void sub_1001CA788(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v6, v5, a4, v4, 2u);
}

uint64_t sub_1001CA7A8@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a3 - 256);
  return sub_100151718(a1, v4, a2);
}

uint64_t sub_1001CA7C0()
{
  *(unsigned char *)(v0 - 83) = 2;
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_1001CA7F8()
{
  return swift_allocObject();
}

uint64_t sub_1001CA828()
{
  return *(void *)(v0 - 88);
}

uint64_t sub_1001CA838()
{
  return type metadata accessor for AirPollutant();
}

uint64_t sub_1001CA858()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_1001CA884()
{
  return v0;
}

uint64_t sub_1001CA894(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return sub_1001827D0(v4, v3, a3);
}

uint64_t sub_1001CA8AC()
{
  return *(void *)(v0 - 72);
}

uint64_t sub_1001CA8B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *uint64_t v10 = a10;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001CA8D4()
{
  return v0;
}

uint64_t sub_1001CA8E8()
{
  return 0;
}

void sub_1001CA914()
{
  uint64_t v6[2] = v0;
  v6[3] = v1;
  v6[4] = v2;
  v6[5] = v3;
  v6[6] = v4;
  v6[7] = v5;
}

void sub_1001CA930()
{
  *(void *)(v1 - 72) = v0;
  sub_1007F3414();
}

uint64_t sub_1001CA954()
{
  return Measurement.init(value:unit:)();
}

uint64_t sub_1001CA978()
{
  return v0;
}

uint64_t sub_1001CA9B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for AnimatedBackgroundsUserDefaultsMonitor(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB46B0);
}

void sub_1001CAA20()
{
}

void sub_1001CAA60()
{
}

uint64_t sub_1001CAA88()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

unint64_t sub_1001CAAFC()
{
  unint64_t result = qword_100EB4A68;
  if (!qword_100EB4A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB4A68);
  }
  return result;
}

uint64_t sub_1001CAB48()
{
  uint64_t v0 = type metadata accessor for WeatherConditionBackgroundOptions();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for BackgroundAnimationData();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for BackgroundAnimationData.Model();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for WeatherConditionBackgroundModifier(0);
  WeatherConditionBackgroundModel.animationData.getter();
  if ((*(unsigned int (**)(char *, uint64_t))(v5 + 88))(v7, v4) == enum case for BackgroundAnimationData.loaded(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    BackgroundAnimationData.Model.options.getter();
    char v12 = WeatherConditionBackgroundOptions.applyLegibilityScrim.getter();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    char v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_1001CADE0@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v29 = a3;
  v28[1] = a2;
  uint64_t v6 = sub_10017DF08(&qword_100EB4AC8);
  uint64_t v7 = v6 - 8;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  char v12 = (char *)v28 - v11;
  uint64_t v13 = sub_10017DF08(&qword_100EB4AD0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100EB4AD8);
  uint64_t v17 = v16 - 8;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)v28 - v21;
  sub_100B79810(a1, v15);
  sub_10006DF38((uint64_t)v15, (uint64_t)v20, &qword_100EB4AD0);
  *(void *)&v20[*(int *)(v17 + 44)] = 0x409F400000000000;
  sub_100178110((uint64_t)v15, &qword_100EB4AD0);
  sub_10020E72C((uint64_t)v20, (uint64_t)v22, &qword_100EB4AD8);
  static Color.black.getter();
  uint64_t v23 = Color.opacity(_:)();
  swift_release();
  uint64_t v24 = sub_10017DF08(&qword_100EB49D0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v12, v29, v24);
  *(void *)&v12[*(int *)(v7 + 44)] = 0x409F480000000000;
  sub_10006DF38((uint64_t)v22, (uint64_t)v20, &qword_100EB4AD8);
  sub_10006DF38((uint64_t)v12, (uint64_t)v10, &qword_100EB4AC8);
  sub_10006DF38((uint64_t)v20, a4, &qword_100EB4AD8);
  uint64_t v25 = sub_10017DF08(&qword_100EB4AE0);
  uint64_t v26 = (uint64_t *)(a4 + *(int *)(v25 + 48));
  uint64_t *v26 = v23;
  v26[1] = 0x409F440000000000;
  sub_10006DF38((uint64_t)v10, a4 + *(int *)(v25 + 64), &qword_100EB4AC8);
  swift_retain();
  sub_100178110((uint64_t)v12, &qword_100EB4AC8);
  sub_100178110((uint64_t)v22, &qword_100EB4AD8);
  sub_100178110((uint64_t)v10, &qword_100EB4AC8);
  swift_release();
  return sub_100178110((uint64_t)v20, &qword_100EB4AD8);
}

unint64_t sub_1001CB0D4()
{
  unint64_t result = qword_100EB4B58;
  if (!qword_100EB4B58)
  {
    sub_10018C6DC(&qword_100EB4AE8);
    sub_1001CA9B8(&qword_100EB4B60, (void (*)(uint64_t))&type metadata accessor for MicaView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB4B58);
  }
  return result;
}

uint64_t sub_1001CB178()
{
  sub_1001CB1C0();

  return EnvironmentValues.subscript.getter();
}

unint64_t sub_1001CB1C0()
{
  unint64_t result = qword_100E82BE0;
  if (!qword_100E82BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E82BE0);
  }
  return result;
}

uint64_t sub_1001CB20C(uint64_t a1)
{
  return sub_100199EE0(a1, (void (*)(void))sub_10019C7A0);
}

uint64_t sub_1001CB22C(uint64_t a1)
{
  return sub_100199EE0(a1, (void (*)(void))sub_10019C7EC);
}

uint64_t sub_1001CB24C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DisplayMetrics();
  __chkstk_darwin(v3 - 8);
  sub_10011BFD8();
  sub_1001CB2DC(a1, v1);
  sub_100199A64();
  EnvironmentValues.subscript.setter();
  return sub_1001CB340(a1);
}

uint64_t sub_1001CB2DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DisplayMetrics();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001CB340(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DisplayMetrics();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001CB39C()
{
  return EnvironmentValues.subscript.setter();
}

double sub_1001CB3E4()
{
  v0.n128_f64[0] = sub_1001CB41C(v10);
  *(void *)&double result = sub_10017A3F0(v1, v2, v3, v4, v5, v6, v7, v8, v10[0], v10[1], v0).n128_u64[0];
  return result;
}

double sub_1001CB41C@<D0>(_OWORD *a1@<X8>)
{
  sub_1001CB470();
  EnvironmentValues.subscript.getter();
  double result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return result;
}

unint64_t sub_1001CB470()
{
  unint64_t result = qword_100E738F8;
  if (!qword_100E738F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E738F8);
  }
  return result;
}

unint64_t sub_1001CB4BC()
{
  unint64_t result = qword_100E8E218;
  if (!qword_100E8E218)
  {
    sub_10018C6DC(&qword_100E8E1D8);
    sub_1001CB570((uint64_t)&unk_100E8E208);
    sub_100219020();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8E218);
  }
  return result;
}

unint64_t sub_1001CB570(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    uint64_t v6 = v5;
    uint64_t v7 = v4;
    sub_10018C6DC(v3);
    v7();
    v6();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_1001CB5F4()
{
  unint64_t result = qword_100E8E1F0;
  if (!qword_100E8E1F0)
  {
    sub_10018C6DC(&qword_100E8E1C8);
    sub_10024D5E4((uint64_t)&unk_100E8E1F8);
    sub_10015180C((uint64_t)&unk_100E8E200);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8E1F0);
  }
  return result;
}

unint64_t sub_1001CB6C4()
{
  unint64_t result = qword_100E952D8;
  if (!qword_100E952D8)
  {
    sub_10018C6DC(&qword_100E952C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E952D8);
  }
  return result;
}

uint64_t sub_1001CB718()
{
  return sub_10079C8F8(v1, v0);
}

uint64_t sub_1001CB73C()
{
  return type metadata accessor for Location();
}

uint64_t sub_1001CB758()
{
  return 0;
}

uint64_t sub_1001CB76C()
{
  return type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
}

unint64_t sub_1001CB7B4()
{
  sub_100162F48();
  type metadata accessor for Location();
  sub_1001CF050(&qword_100E639A0, (void (*)(uint64_t))&type metadata accessor for Location);
  uint64_t v0 = sub_100189CAC();
  return sub_1001848D0(v0, v0, (uint64_t (*)(void))&type metadata accessor for Location, (unint64_t *)&qword_100E639A8, v1, (uint64_t)&protocol conformance descriptor for Location);
}

uint64_t sub_1001CB864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E663F0);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v58 = v8;
  uint64_t v9 = sub_10017DF08(&qword_100E66420);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v57 = v11;
  uint64_t v12 = sub_10017DF08(&qword_100E66428);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_10017DF08(&qword_100E66430);
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  sub_1001626E0();
  uint64_t v21 = v20 - v19;
  uint64_t v22 = sub_10017DF08(&qword_100E66438);
  uint64_t v23 = sub_100109308(v22);
  __chkstk_darwin(v23);
  sub_1001626E0();
  uint64_t v26 = v25 - v24;
  uint64_t v27 = sub_10017DF08(&qword_100E66440);
  uint64_t v28 = sub_100109308(v27);
  __chkstk_darwin(v28);
  sub_1001626E0();
  uint64_t v31 = v30 - v29;
  uint64_t v32 = sub_10017DF08(&qword_100E66418);
  uint64_t v33 = sub_100109308(v32);
  __chkstk_darwin(v33);
  sub_1001626E0();
  uint64_t v36 = v35 - v34;
  uint64_t v37 = type metadata accessor for LocationsState();
  sub_100162E4C();
  __chkstk_darwin(v38);
  sub_1001626E0();
  uint64_t v41 = v40 - v39;
  sub_1001CCF9C(a3, v56, a1, v40 - v39);
  sub_1001CBC48(a2, a3, a1, v41, v36);
  uint64_t v42 = type metadata accessor for AppConfigurationState();
  sub_100179C70(v31, v43, v44, v42);
  uint64_t v45 = type metadata accessor for EnvironmentState();
  _s7Weather24LocationCompositionStateOwst_0(v26, 1, 1, v45);
  sub_1001CEC74(v41, v21, (void (*)(void))type metadata accessor for LocationsState);
  _s7Weather24LocationCompositionStateOwst_0(v21, 0, 1, v37);
  uint64_t v46 = type metadata accessor for NotificationsOptInState();
  sub_100179C70(v16, v47, v48, v46);
  uint64_t v49 = type metadata accessor for TimeState();
  uint64_t v52 = sub_100179C70(v57, v50, v51, v49);
  uint64_t v53 = type metadata accessor for ModalViewState(v52);
  _s7Weather24LocationCompositionStateOwst_0(v58, 1, 1, v53);
  uint64_t v54 = sub_1001659F0(0, 3, v31, v26, v21, 0, 0, 0, 0, v16, v57, v36, v58, 0, 0, 0, 0, 0, 0, 0, a2);
  sub_1001781AC(v58, &qword_100E663F0);
  sub_1001781AC(v57, &qword_100E66420);
  sub_1001781AC(v16, &qword_100E66428);
  sub_1001781AC(v21, &qword_100E66430);
  sub_1001781AC(v26, &qword_100E66438);
  sub_1001781AC(v31, &qword_100E66440);
  sub_1001781AC(v36, &qword_100E66418);
  sub_1001CEE3C(v41, (void (*)(void))type metadata accessor for LocationsState);
  return v54;
}

uint64_t sub_1001CBC48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v128 = a4;
  uint64_t v129 = a3;
  uint64_t v131 = a2;
  uint64_t v132 = a5;
  uint64_t v133 = a1;
  uint64_t v5 = sub_10017DF08(&qword_100E663F8);
  __chkstk_darwin(v5 - 8);
  uint64_t v122 = (uint64_t)&v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E66400);
  __chkstk_darwin(v7 - 8);
  uint64_t v121 = (uint64_t)&v110 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E66408);
  __chkstk_darwin(v9 - 8);
  uint64_t v120 = (uint64_t)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E663D0);
  __chkstk_darwin(v11 - 8);
  uint64_t v117 = (char *)&v110 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100E66410);
  __chkstk_darwin(v13 - 8);
  uint64_t v119 = (uint64_t *)((char *)&v110 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  __chkstk_darwin(active);
  unsigned __int8 v125 = (char *)&v110 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v110 - v17;
  uint64_t v126 = type metadata accessor for Location.Identifier();
  uint64_t v124 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v20 = (char *)&v110 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v110 - v22;
  uint64_t v24 = type metadata accessor for SavedLocation();
  uint64_t v123 = *(void *)(v24 - 8);
  __chkstk_darwin(v24 - 8);
  uint64_t v111 = (uint64_t)&v110 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v130 = (uint64_t)&v110 - v27;
  uint64_t v28 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  __chkstk_darwin(v28 - 8);
  uint64_t v112 = (uint64_t)&v110 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v110 - v31;
  uint64_t v127 = type metadata accessor for CurrentLocation();
  __chkstk_darwin(v127);
  uint64_t v110 = (uint64_t)&v110 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v113 = (uint64_t)&v110 - v35;
  uint64_t v36 = type metadata accessor for LocationsAction();
  __chkstk_darwin(v36);
  uint64_t v38 = (unint64_t *)((char *)&v110 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v39 = type metadata accessor for ViewState.SecondaryViewState(0);
  __chkstk_darwin(v39);
  uint64_t v41 = (uint64_t *)((char *)&v110 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v42 = type metadata accessor for ViewState(0);
  __chkstk_darwin(v42);
  uint64_t v118 = (uint64_t)&v110 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  uint64_t v46 = (char *)&v110 - v45;
  uint64_t v114 = v133 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
  sub_1001CEC74(v133 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (uint64_t)&v110 - v45, (void (*)(void))type metadata accessor for ViewState);
  sub_1001CEC74((uint64_t)&v46[*(int *)(v42 + 20)], (uint64_t)v41, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
  uint64_t v115 = v39;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v134 = v42;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1001CEE3C((uint64_t)v41, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
LABEL_3:
    sub_1001CEE3C((uint64_t)v46, (void (*)(void))type metadata accessor for ViewState);
LABEL_4:
    uint64_t v48 = 1;
    uint64_t v49 = v132;
    return _s7Weather24LocationCompositionStateOwst_0(v49, v48, 1, v134);
  }
  uint64_t v133 = *v41;
  if (*(void *)&v46[*(int *)(v42 + 36) + 8] == 1)
  {
    id v51 = [self currentDevice];
    [v51 userInterfaceIdiom];

    if ((v46[*(int *)(v134 + 28)] & 1) == 0)
    {
      swift_release();
      goto LABEL_3;
    }
  }
  sub_1001CEE3C((uint64_t)v46, (void (*)(void))type metadata accessor for ViewState);
  sub_1001CEC74(v131, (uint64_t)v38, (void (*)(void))type metadata accessor for LocationsAction);
  if (swift_getEnumCaseMultiPayload() != 4)
  {
    sub_1001CEE3C((uint64_t)v38, (void (*)(void))type metadata accessor for LocationsAction);
    uint64_t v60 = v133;
    uint64_t v61 = v128;
    char v62 = sub_1001CF258(v133, v128);
    sub_10006DF38(v61, (uint64_t)v32, (uint64_t *)&unk_100EADD50);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v127) == 1)
    {
      swift_release();
      uint64_t v63 = (uint64_t)v32;
LABEL_15:
      sub_1001781AC(v63, (uint64_t *)&unk_100EADD50);
      goto LABEL_4;
    }
    uint64_t v64 = v113;
    sub_1001D107C((uint64_t)v32, v113, (void (*)(void))&type metadata accessor for CurrentLocation);
    uint64_t v49 = v132;
    if ((v62 & 1) == 0)
    {
      sub_1001CEE3C(v64, (void (*)(void))&type metadata accessor for CurrentLocation);
      swift_release();
      uint64_t v48 = 1;
      return _s7Weather24LocationCompositionStateOwst_0(v49, v48, 1, v134);
    }
    uint64_t v65 = v118;
    sub_1001CEC74(v114, v118, (void (*)(void))type metadata accessor for ViewState);
    uint64_t v66 = (uint64_t)v117;
    CurrentLocation.identifier.getter();
    _s7Weather24LocationCompositionStateOwst_0(v66, 0, 1, v126);
    _s7Weather24LocationCompositionStateOwst_0(v66, 0, 1, active);
    uint64_t v67 = sub_1001CCC58(v66, 3, 2, 4, 2, 3, v60);
    sub_1001781AC(v66, &qword_100E663D0);
    uint64_t v68 = (uint64_t)v119;
    uint64_t *v119 = v67;
    uint64_t v69 = v115;
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0(v68, 0, 1, v69);
    uint64_t v70 = type metadata accessor for SearchViewState(0);
    uint64_t v71 = v120;
    _s7Weather24LocationCompositionStateOwst_0(v120, 1, 1, v70);
    uint64_t v72 = type metadata accessor for DisplayMetrics();
    uint64_t v73 = v121;
    _s7Weather24LocationCompositionStateOwst_0(v121, 1, 1, v72);
    uint64_t v74 = type metadata accessor for WeatherMapPresentationState(0);
    uint64_t v75 = v122;
    _s7Weather24LocationCompositionStateOwst_0(v122, 1, 1, v74);
    sub_10011D8AC();
    swift_release();
    sub_1001781AC(v75, &qword_100E663F8);
    sub_1001781AC(v73, &qword_100E66400);
    sub_1001781AC(v71, &qword_100E66408);
    sub_1001781AC(v68, &qword_100E66410);
    sub_1001CEE3C(v65, (void (*)(void))type metadata accessor for ViewState);
    uint64_t v76 = &type metadata accessor for CurrentLocation;
    uint64_t v77 = v64;
LABEL_32:
    sub_1001CEE3C(v77, (void (*)(void))v76);
    uint64_t v48 = 0;
    return _s7Weather24LocationCompositionStateOwst_0(v49, v48, 1, v134);
  }
  unint64_t v52 = *v38;
  uint64_t result = type metadata accessor for LocationsState();
  if ((v52 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v131 = result;
  uint64_t v53 = *(int *)(result + 20);
  uint64_t v54 = *(void *)(v129 + v53);
  uint64_t v55 = (uint64_t)v125;
  if (v52 >= *(void *)(v54 + 16))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  unint64_t v56 = (*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80);
  uint64_t v57 = *(void *)(v123 + 72);
  sub_1001CEC74(v54 + v56 + v57 * v52, v130, (void (*)(void))&type metadata accessor for SavedLocation);
  SavedLocation.identifier.getter();
  sub_1001CEC74(v133 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, (uint64_t)v18, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  sub_1001CEC74((uint64_t)v18, v55, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  uint64_t v58 = v126;
  if (_s7Weather24LocationCompositionStateOwet_0(v55, 1, v126) == 1)
  {
    static CurrentLocation.placeholderIdentifier.getter();
    uint64_t v59 = v124;
  }
  else
  {
    uint64_t v59 = v124;
    (*(void (**)(char *, uint64_t, uint64_t))(v124 + 32))(v20, v55, v58);
  }
  sub_1001CEE3C((uint64_t)v18, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  char v78 = static Location.Identifier.== infix(_:_:)();
  uint64_t v79 = *(void (**)(char *, uint64_t))(v59 + 8);
  v79(v20, v58);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v79)(v23, v58);
  if ((v78 & 1) == 0)
  {
    sub_1001CEE3C(v130, (void (*)(void))&type metadata accessor for SavedLocation);
    swift_release();
    goto LABEL_4;
  }
  uint64_t v80 = *(void *)(*(void *)(v129 + v53) + 16);
  if (!v52 && v80 == 1)
  {
    uint64_t v81 = v112;
    sub_10006DF38(v129, v112, (uint64_t *)&unk_100EADD50);
    if (_s7Weather24LocationCompositionStateOwet_0(v81, 1, v127) == 1)
    {
      sub_1001CEE3C(v130, (void (*)(void))&type metadata accessor for SavedLocation);
      swift_release();
      uint64_t v63 = v81;
      goto LABEL_15;
    }
    uint64_t v98 = v110;
    sub_1001D107C(v81, v110, (void (*)(void))&type metadata accessor for CurrentLocation);
    uint64_t v99 = v118;
    sub_1001CEC74(v114, v118, (void (*)(void))type metadata accessor for ViewState);
    uint64_t v100 = (uint64_t)v117;
    CurrentLocation.identifier.getter();
    _s7Weather24LocationCompositionStateOwst_0(v100, 0, 1, v58);
    _s7Weather24LocationCompositionStateOwst_0(v100, 0, 1, active);
    uint64_t v101 = sub_1001CCC58(v100, 3, 2, 4, 2, 3, v133);
    sub_1001781AC(v100, &qword_100E663D0);
    uint64_t v102 = (uint64_t)v119;
    uint64_t *v119 = v101;
    uint64_t v103 = v115;
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0(v102, 0, 1, v103);
    uint64_t v104 = type metadata accessor for SearchViewState(0);
    uint64_t v105 = v120;
    _s7Weather24LocationCompositionStateOwst_0(v120, 1, 1, v104);
    uint64_t v106 = type metadata accessor for DisplayMetrics();
    uint64_t v107 = v121;
    _s7Weather24LocationCompositionStateOwst_0(v121, 1, 1, v106);
    uint64_t v108 = type metadata accessor for WeatherMapPresentationState(0);
    uint64_t v109 = v122;
    _s7Weather24LocationCompositionStateOwst_0(v122, 1, 1, v108);
    uint64_t v49 = v132;
    sub_10011D8AC();
    swift_release();
    sub_1001781AC(v109, &qword_100E663F8);
    sub_1001781AC(v107, &qword_100E66400);
    sub_1001781AC(v105, &qword_100E66408);
    sub_1001781AC(v102, &qword_100E66410);
    sub_1001CEE3C(v99, (void (*)(void))type metadata accessor for ViewState);
    sub_1001CEE3C(v98, (void (*)(void))&type metadata accessor for CurrentLocation);
    uint64_t v76 = &type metadata accessor for SavedLocation;
    uint64_t v77 = v130;
    goto LABEL_32;
  }
  uint64_t v82 = v80 - 2;
  if (v82 >= (uint64_t)(v52 - 1)) {
    uint64_t v82 = v52 - 1;
  }
  unint64_t v83 = v82 & ~(v82 >> 63);
  uint64_t v84 = *(void *)(v128 + *(int *)(v131 + 20));
  if (v83 < *(void *)(v84 + 16))
  {
    uint64_t v85 = v84 + v56 + v83 * v57;
    uint64_t v86 = v111;
    sub_1001CEC74(v85, v111, (void (*)(void))&type metadata accessor for SavedLocation);
    uint64_t v87 = v118;
    sub_1001CEC74(v114, v118, (void (*)(void))type metadata accessor for ViewState);
    uint64_t v88 = (uint64_t)v117;
    SavedLocation.identifier.getter();
    _s7Weather24LocationCompositionStateOwst_0(v88, 0, 1, v58);
    _s7Weather24LocationCompositionStateOwst_0(v88, 0, 1, active);
    uint64_t v89 = sub_1001CCC58(v88, 3, 2, 4, 2, 3, v133);
    sub_1001781AC(v88, &qword_100E663D0);
    uint64_t v90 = (uint64_t)v119;
    uint64_t *v119 = v89;
    uint64_t v91 = v115;
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0(v90, 0, 1, v91);
    uint64_t v92 = type metadata accessor for SearchViewState(0);
    uint64_t v93 = v120;
    _s7Weather24LocationCompositionStateOwst_0(v120, 1, 1, v92);
    uint64_t v94 = type metadata accessor for DisplayMetrics();
    uint64_t v95 = v121;
    _s7Weather24LocationCompositionStateOwst_0(v121, 1, 1, v94);
    uint64_t v96 = type metadata accessor for WeatherMapPresentationState(0);
    uint64_t v97 = v122;
    _s7Weather24LocationCompositionStateOwst_0(v122, 1, 1, v96);
    uint64_t v49 = v132;
    sub_10011D8AC();
    swift_release();
    sub_1001781AC(v97, &qword_100E663F8);
    sub_1001781AC(v95, &qword_100E66400);
    sub_1001781AC(v93, &qword_100E66408);
    sub_1001781AC(v90, &qword_100E66410);
    sub_1001CEE3C(v87, (void (*)(void))type metadata accessor for ViewState);
    sub_1001CEE3C(v86, (void (*)(void))&type metadata accessor for SavedLocation);
    uint64_t v77 = v130;
    uint64_t v76 = &type metadata accessor for SavedLocation;
    goto LABEL_32;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1001CCC44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B59DF4);
}

uint64_t sub_1001CCC58(uint64_t a1, char a2, char a3, char a4, int a5, char a6, uint64_t a7)
{
  int v27 = a5;
  uint64_t v14 = sub_10017DF08(&qword_100E663D0);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_100109370();
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  sub_100162880();
  __chkstk_darwin(v17);
  uint64_t v19 = &v26[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v20);
  uint64_t v22 = &v26[-v21];
  sub_1001CF81C(a1, v7);
  if (_s7Weather24LocationCompositionStateOwet_0(v7, 1, active) == 1)
  {
    sub_10016ECAC(a7 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, (uint64_t)v22);
    sub_100178200(v7, &qword_100E663D0);
  }
  else
  {
    sub_1001CCE94(v7, (uint64_t)v22);
  }
  sub_1001CCE94((uint64_t)v22, (uint64_t)v19);
  if (a2 == 3) {
    a2 = *(unsigned char *)(a7 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_notificationsOptInAlertState);
  }
  if (a3 == 2) {
    char v23 = *(unsigned char *)(a7 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_addLocationAlertState);
  }
  else {
    char v23 = a3 & 1;
  }
  if (a4 == 4) {
    a4 = *(unsigned char *)(a7 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_trigger);
  }
  if (v27 == 2) {
    char v24 = *(unsigned char *)(a7 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_reportWeatherDisplayToggle);
  }
  else {
    char v24 = v27 & 1;
  }
  if (a6 == 3) {
    a6 = *(unsigned char *)(a7 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_listToLocationViewTransitionState);
  }
  type metadata accessor for LocationViewerViewState._Storage(0);
  swift_allocObject();
  return sub_1001CCEF8((uint64_t)v19, a2, v23, a4, v24, a6);
}

uint64_t sub_1001CCE94(uint64_t a1, uint64_t a2)
{
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(active - 8) + 32))(a2, a1, active);
  return a2;
}

uint64_t sub_1001CCEF8(uint64_t a1, char a2, char a3, char a4, char a5, char a6)
{
  char v11 = a3 & 1;
  sub_10016EAB0();
  *(unsigned char *)(v6 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_notificationsOptInAlertState) = a2;
  *(unsigned char *)(v6 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_addLocationAlertState) = v11;
  *(unsigned char *)(v6 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_trigger) = a4;
  *(unsigned char *)(v6 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_reportWeatherDisplayToggle) = a5;
  *(unsigned char *)(v6 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_listToLocationViewTransitionState) = a6;
  return v6;
}

uint64_t sub_1001CCF9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v168 = a3;
  uint64_t v166 = a2;
  uint64_t v167 = a1;
  uint64_t v165 = a4;
  uint64_t v4 = sub_10017DF08(&qword_100E66678);
  __chkstk_darwin(v4 - 8);
  uint64_t v176 = (char *)&v151 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = type metadata accessor for SavedLocation();
  uint64_t v161 = *(void *)(v179 - 8);
  __chkstk_darwin(v179);
  uint64_t v174 = (uint64_t)&v151 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v180 = (uint64_t)&v151 - v8;
  __chkstk_darwin(v9);
  unint64_t v178 = (void (**)(char *, void))((char *)&v151 - v10);
  __chkstk_darwin(v11);
  uint64_t v175 = (uint64_t *)((char *)&v151 - v12);
  __chkstk_darwin(v13);
  uint64_t v152 = (uint64_t)&v151 - v14;
  uint64_t v159 = type metadata accessor for IndexSet();
  uint64_t v158 = *(void *)(v159 - 8);
  __chkstk_darwin(v159);
  unint64_t v157 = (unint64_t)&v151 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v160 = (char *)&v151 - v17;
  uint64_t v18 = sub_10017DF08(&qword_100E63A18);
  __chkstk_darwin(v18 - 8);
  uint64_t v155 = (uint64_t)&v151 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = type metadata accessor for Location.Identifier();
  uint64_t v170 = *(void *)(v181 - 8);
  __chkstk_darwin(v181);
  id v177 = (char *)&v151 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  char v23 = (char *)&v151 - v22;
  __chkstk_darwin(v24);
  uint64_t v162 = (char *)&v151 - v25;
  uint64_t v169 = sub_10017DF08(&qword_100E6DD18);
  __chkstk_darwin(v169);
  int v27 = (char *)&v151 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10017DF08(&qword_100E639E8);
  __chkstk_darwin(v28 - 8);
  uint64_t v30 = (char *)&v151 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_10017DF08(&qword_100E6DC08);
  __chkstk_darwin(v31 - 8);
  *(void *)&long long v173 = (char *)&v151 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)&v151 - v34;
  __chkstk_darwin(v36);
  uint64_t v38 = (char *)&v151 - v37;
  uint64_t v172 = (void (**)(void, void))type metadata accessor for Location();
  uint64_t v156 = (uint64_t)*(v172 - 1);
  __chkstk_darwin(v172);
  uint64_t v171 = (char *)&v151 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  __chkstk_darwin(v40 - 8);
  uint64_t v153 = (uint64_t)&v151 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = type metadata accessor for WeatherCoalescedLocationResult();
  uint64_t v42 = *(void *)(v164 - 8);
  __chkstk_darwin(v164);
  uint64_t v154 = (char *)&v151 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  uint64_t v163 = (char *)&v151 - v45;
  uint64_t v46 = type metadata accessor for CurrentLocation();
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v151 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for LocationsAction();
  __chkstk_darwin(v49);
  id v51 = (uint64_t *)((char *)&v151 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1001CEC74(v167, (uint64_t)v51, (void (*)(void))type metadata accessor for LocationsAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v167 = v42;
      LODWORD(v160) = *((unsigned __int8 *)v51 + *(int *)(sub_10017DF08(&qword_100E6F628) + 48));
      uint64_t v67 = v156;
      uint64_t v69 = v171;
      uint64_t v68 = v172;
      (*(void (**)(char *, uint64_t *, void (**)(void, void)))(v156 + 32))(v171, v51, v172);
      uint64_t v174 = type metadata accessor for LocationsState();
      uint64_t v70 = *(int *)(v174 + 20);
      uint64_t v71 = v168;
      uint64_t v72 = *(void *)(v168 + v70);
      uint64_t v73 = *(void *)(v72 + 16);
      if (!v73)
      {
        unint64_t v85 = (*(unsigned __int8 *)(v161 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v161 + 80);
        uint64_t v83 = v166;
        uint64_t v84 = v174;
        uint64_t v82 = *(void **)(v168 + v70);
        goto LABEL_44;
      }
      uint64_t v159 = *(int *)(v174 + 20);
      unint64_t v157 = *(unsigned __int8 *)(v161 + 80);
      uint64_t v158 = (v157 + 32) & ~v157;
      uint64_t v74 = v72 + v158;
      uint64_t v175 = (void *)(v170 + 32);
      id v177 = (char *)(v170 + 8);
      unint64_t v178 = (void (**)(char *, void))(v67 + 8);
      uint64_t v180 = *(void *)(v161 + 72);
      uint64_t v170 = v72;
      swift_bridgeObjectRetain();
      uint64_t v75 = v181;
      while (2)
      {
        SavedLocation.location.getter();
        uint64_t v76 = v172;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, (uint64_t)v172) == 1)
        {
          sub_1001781AC((uint64_t)v30, &qword_100E639E8);
          uint64_t v77 = 1;
        }
        else
        {
          Location.identifier.getter();
          (*v178)(v30, v76);
          uint64_t v77 = 0;
        }
        uint64_t v78 = v173;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, v77, 1, v75);
        Location.identifier.getter();
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v75);
        uint64_t v79 = (uint64_t)&v27[*(int *)(v169 + 48)];
        sub_10006DF38((uint64_t)v38, (uint64_t)v27, &qword_100E6DC08);
        sub_10006DF38((uint64_t)v35, v79, &qword_100E6DC08);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v75) != 1)
        {
          sub_10006DF38((uint64_t)v27, v78, &qword_100E6DC08);
          if (_s7Weather24LocationCompositionStateOwet_0(v79, 1, v75) != 1)
          {
            uint64_t v80 = v162;
            ((void (*)(char *, uint64_t, uint64_t))*v175)(v162, v79, v75);
            sub_1001CF7B8();
            LODWORD(v176) = dispatch thunk of static Equatable.== infix(_:_:)();
            uint64_t v81 = *(void (**)(void, uint64_t))v177;
            (*(void (**)(char *, uint64_t))v177)(v80, v181);
            sub_1001781AC((uint64_t)v35, &qword_100E6DC08);
            sub_1001781AC((uint64_t)v38, &qword_100E6DC08);
            v81(v173, v181);
            uint64_t v75 = v181;
            sub_1001781AC((uint64_t)v27, &qword_100E6DC08);
            if (v176) {
              goto LABEL_78;
            }
LABEL_20:
            v74 += v180;
            if (!--v73)
            {
              swift_bridgeObjectRelease();
              uint64_t v71 = v168;
              uint64_t v82 = *(void **)(v168 + v159);
              uint64_t v83 = v166;
              uint64_t v69 = v171;
              uint64_t v68 = v172;
              uint64_t v67 = v156;
              uint64_t v84 = v174;
              unint64_t v85 = v158;
LABEL_44:
              sub_10017DF08(&qword_100E94A48);
              uint64_t v115 = swift_allocObject();
              *(_OWORD *)(v115 + 16) = xmmword_100C251B0;
              (*(void (**)(unint64_t, char *, void (**)(void, void)))(v67 + 16))(v115 + v85, v69, v68);
              swift_storeEnumTagMultiPayload();
              uint64_t v184 = v82;
              swift_bridgeObjectRetain();
              sub_10037FDD8(v115);
              goto LABEL_79;
            }
            continue;
          }
          sub_1001781AC((uint64_t)v35, &qword_100E6DC08);
          sub_1001781AC((uint64_t)v38, &qword_100E6DC08);
          (*(void (**)(uint64_t, uint64_t))v177)(v78, v75);
LABEL_18:
          sub_1001781AC((uint64_t)v27, &qword_100E6DD18);
          goto LABEL_20;
        }
        break;
      }
      sub_1001781AC((uint64_t)v35, &qword_100E6DC08);
      sub_1001781AC((uint64_t)v38, &qword_100E6DC08);
      if (_s7Weather24LocationCompositionStateOwet_0(v79, 1, v75) != 1) {
        goto LABEL_18;
      }
      sub_1001781AC((uint64_t)v27, &qword_100E6DC08);
LABEL_78:
      swift_bridgeObjectRelease();
      uint64_t v71 = v168;
      swift_bridgeObjectRetain();
      uint64_t v83 = v166;
      uint64_t v67 = v156;
      uint64_t v69 = v171;
      uint64_t v84 = v174;
LABEL_79:
      uint64_t v184 = *(void **)(v71 + *(int *)(v84 + 52));
      swift_bridgeObjectRetain();
      Location.id.getter();
      uint64_t v147 = v155;
      LocationDisplayContext.init(canActAsLocationOfInterest:)();
      uint64_t v148 = type metadata accessor for LocationDisplayContext();
      _s7Weather24LocationCompositionStateOwst_0(v147, 0, 1, v148);
      sub_1002454E0();
      sub_1001B1E64((void *)(v83 + 16), *(void *)(v83 + 40));
      swift_bridgeObjectRetain();
      uint64_t v149 = v69;
      uint64_t v150 = v163;
      dispatch thunk of WeatherLocationCoalescenceManagerType.coalesceLocations(currentLocation:locationList:locationsOfInterest:displayContextByLocation:)();
      swift_bridgeObjectRelease();
      WeatherCoalescedLocationResult.coalescedLocations.getter();
      (*(void (**)(char *, uint64_t))(v167 + 8))(v150, v164);
      sub_1001E4A4C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, void))(v67 + 8))(v149, v172);
    case 2u:
      sub_1001B1E64((void *)(v166 + 16), *(void *)(v166 + 40));
      type metadata accessor for LocationsState();
      uint64_t v66 = v163;
      dispatch thunk of WeatherLocationCoalescenceManagerType.coalesceLocations(currentLocation:locationList:locationsOfInterest:displayContextByLocation:)();
      WeatherCoalescedLocationResult.coalescedLocations.getter();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v66, v164);
      sub_1001E4A4C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 3u:
      uint64_t v184 = *(void **)(v168 + *(int *)(type metadata accessor for LocationsState() + 20));
      swift_bridgeObjectRetain();
      IndexSet.init(integer:)();
      sub_10017DF08(&qword_100E97F18);
      sub_1007FAF28(&qword_100E97F20);
      MutableCollection.move(fromOffsets:toOffset:)();
      sub_1001B1E64((void *)(v166 + 16), *(void *)(v166 + 40));
      swift_bridgeObjectRetain();
      uint64_t v86 = v163;
      dispatch thunk of WeatherLocationCoalescenceManagerType.coalesceLocations(currentLocation:locationList:locationsOfInterest:displayContextByLocation:)();
      swift_bridgeObjectRelease();
      WeatherCoalescedLocationResult.coalescedLocations.getter();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v86, v164);
      sub_1001E4A4C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v158 + 8))(v160, v159);
    case 4u:
      uint64_t v167 = v42;
      unint64_t v55 = *v51;
      uint64_t v56 = type metadata accessor for LocationsState();
      uint64_t v57 = v168;
      uint64_t v58 = *(void **)(v168 + *(int *)(v56 + 20));
      uint64_t v184 = v58;
      swift_bridgeObjectRetain();
      IndexSet.init(integer:)();
      sub_10017DF08(&qword_100E97F18);
      sub_1007FAF28(&qword_100E97F20);
      sub_1007FAF28(&qword_100E97F28);
      RangeReplaceableCollection<>.remove(atOffsets:)();
      uint64_t v181 = v56;
      uint64_t v183 = *(void *)(v57 + *(int *)(v56 + 52));
      swift_bridgeObjectRetain();
      uint64_t v59 = IndexSet.first.getter();
      if ((v60 & 1) == 0 && v59 < v58[2])
      {
        if (v59 < 0) {
          __break(1u);
        }
        uint64_t v61 = v152;
        sub_1001CEC74((uint64_t)v58+ ((*(unsigned __int8 *)(v161 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v161 + 80))+ *(void *)(v161 + 72) * v59, v152, (void (*)(void))&type metadata accessor for SavedLocation);
        SavedLocation.id.getter();
        uint64_t v62 = type metadata accessor for LocationDisplayContext();
        _s7Weather24LocationCompositionStateOwst_0(v155, 1, 1, v62);
        sub_1002454E0();
        sub_1001CEE3C(v61, (void (*)(void))&type metadata accessor for SavedLocation);
        uint64_t v63 = v164;
        uint64_t v64 = v166;
        uint64_t v65 = v163;
        goto LABEL_41;
      }
      if (qword_100E627A0 != -1) {
        goto LABEL_85;
      }
      goto LABEL_38;
    case 5u:
      uint64_t v167 = v42;
      uint64_t v87 = *(void *)(*v51 + 16);
      if (v87)
      {
        unint64_t v55 = *v51 + ((*(unsigned __int8 *)(v161 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v161 + 80));
        uint64_t v88 = *(void *)(v161 + 72);
        uint64_t v172 = (void (**)(void, void))*v51;
        *(void *)&long long v173 = v170 + 16;
        uint64_t v89 = (void (**)(char *, uint64_t))(v170 + 8);
        swift_bridgeObjectRetain();
        uint64_t v90 = &_swiftEmptyDictionarySingleton;
        uint64_t v91 = (void (**)(void, void, void))v175;
        do
        {
          sub_1001CEC74(v55, (uint64_t)v91, (void (*)(void))&type metadata accessor for SavedLocation);
          SavedLocation.identifier.getter();
          sub_1001CEC74((uint64_t)v91, (uint64_t)v178, (void (*)(void))&type metadata accessor for SavedLocation);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v184 = v90;
          unint64_t v93 = sub_1001CEFA0();
          uint64_t v95 = v90[2];
          BOOL v96 = (v94 & 1) == 0;
          Swift::Int v97 = v95 + v96;
          if (__OFADD__(v95, v96))
          {
            __break(1u);
LABEL_82:
            __break(1u);
LABEL_83:
            __break(1u);
LABEL_84:
            __break(1u);
LABEL_85:
            swift_once();
LABEL_38:
            uint64_t v109 = type metadata accessor for Logger();
            sub_1002102B0(v109, (uint64_t)qword_100F51DF8);
            uint64_t v110 = Logger.logObject.getter();
            os_log_type_t v111 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v110, v111))
            {
              uint64_t v112 = (uint8_t *)swift_slowAlloc();
              uint64_t v185 = swift_slowAlloc();
              *(_DWORD *)uint64_t v112 = 136446210;
              uint64_t v182 = v55;
              uint64_t v113 = dispatch thunk of CustomStringConvertible.description.getter();
              uint64_t v182 = sub_10016414C(v113, v114, &v185);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v110, v111, "Failed to remove location display context due to invalid index=%{public}s", v112, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }

            uint64_t v63 = v164;
            uint64_t v64 = v166;
            uint64_t v65 = v163;
LABEL_41:
            sub_1001B1E64((void *)(v64 + 16), *(void *)(v64 + 40));
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            dispatch thunk of WeatherLocationCoalescenceManagerType.coalesceLocations(currentLocation:locationList:locationsOfInterest:displayContextByLocation:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            WeatherCoalescedLocationResult.coalescedLocations.getter();
            (*(void (**)(char *, uint64_t))(v167 + 8))(v65, v63);
            sub_1001E4A4C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return (*(uint64_t (**)(unint64_t, uint64_t))(v158 + 8))(v157, v159);
          }
          unint64_t v98 = v93;
          char v99 = v94;
          sub_10017DF08(&qword_100E97F10);
          if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v97))
          {
            unint64_t v100 = sub_1001CEFA0();
            if ((v99 & 1) != (v101 & 1))
            {
LABEL_88:
              uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
              __break(1u);
              return result;
            }
            unint64_t v98 = v100;
          }
          uint64_t v90 = v184;
          if (v99)
          {
            sub_1007FAEC4((uint64_t)v178, v184[7] + v98 * v88);
            uint64_t v102 = v180;
          }
          else
          {
            v184[(v98 >> 6) + 8] |= 1 << v98;
            (*(void (**)(unint64_t, char *, uint64_t))(v170 + 16))(v90[6] + *(void *)(v170 + 72) * v98, v23, v181);
            sub_1001D107C((uint64_t)v178, v90[7] + v98 * v88, (void (*)(void))&type metadata accessor for SavedLocation);
            uint64_t v103 = v90[2];
            BOOL v104 = __OFADD__(v103, 1);
            uint64_t v105 = v103 + 1;
            uint64_t v102 = v180;
            if (v104) {
              goto LABEL_82;
            }
            v90[2] = v105;
            uint64_t v90 = v184;
          }
          swift_bridgeObjectRelease();
          (*v89)(v23, v181);
          uint64_t v91 = (void (**)(void, void, void))v175;
          sub_1001CEE3C((uint64_t)v175, (void (*)(void))&type metadata accessor for SavedLocation);
          v55 += v88;
          --v87;
        }
        while (v87);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v90 = &_swiftEmptyDictionarySingleton;
        uint64_t v102 = v180;
      }
      swift_bridgeObjectRelease();
      uint64_t v116 = type metadata accessor for LocationsState();
      uint64_t v117 = *(void *)(v168 + *(int *)(v116 + 20));
      uint64_t v118 = *(void *)(v117 + 16);
      uint64_t v119 = (uint64_t)v176;
      if (v118)
      {
        uint64_t v171 = (char *)v116;
        uint64_t v120 = *(unsigned __int8 *)(v161 + 80);
        uint64_t v121 = (v120 + 32) & ~v120;
        uint64_t v122 = v117 + v121;
        uint64_t v123 = *(void *)(v161 + 72);
        uint64_t v172 = (void (**)(void, void))(v170 + 8);
        unint64_t v178 = (void (**)(char *, void))(v123 + v121);
        uint64_t v175 = (void *)(v120 | 7);
        uint64_t v170 = v117;
        swift_bridgeObjectRetain();
        uint64_t v124 = _swiftEmptyArrayStorage;
        long long v173 = xmmword_100C251B0;
        uint64_t v125 = v181;
        do
        {
          sub_1001CEC74(v122, v102, (void (*)(void))&type metadata accessor for SavedLocation);
          SavedLocation.identifier.getter();
          if (v90[2] && (unint64_t v126 = sub_1001CEFA0(), (v127 & 1) != 0))
          {
            sub_1001CEC74(v90[7] + v126 * v123, v119, (void (*)(void))&type metadata accessor for SavedLocation);
            uint64_t v128 = 0;
          }
          else
          {
            uint64_t v128 = 1;
          }
          uint64_t v129 = v179;
          _s7Weather24LocationCompositionStateOwst_0(v119, v128, 1, v179);
          (*v172)(v177, v125);
          if (_s7Weather24LocationCompositionStateOwet_0(v119, 1, v129) == 1)
          {
            sub_1001781AC(v119, &qword_100E66678);
            sub_10017DF08(&qword_100E94A48);
            uint64_t v130 = swift_allocObject();
            *(_OWORD *)(v130 + 16) = v173;
            unint64_t v55 = v130 + v121;
            sub_1001CEC74(v180, v130 + v121, (void (*)(void))&type metadata accessor for SavedLocation);
            unint64_t v131 = v124[2];
            uint64_t v132 = swift_isUniquelyReferenced_nonNull_native();
            if (!v132 || (unint64_t v133 = v124[3] >> 1, v133 <= v131))
            {
              uint64_t v124 = (void *)sub_10018A66C(v132, v131 + 1, 1, (uint64_t)v124);
              unint64_t v133 = v124[3] >> 1;
            }
            unint64_t v134 = v124[2];
            uint64_t v125 = v181;
            if (v133 <= v134) {
              goto LABEL_83;
            }
            uint64_t v135 = (char *)v124 + v121 + v134 * v123;
            if (v55 < (unint64_t)&v135[v123] && (unint64_t)v135 < v55 + v123) {
              goto LABEL_87;
            }
            swift_arrayInitWithCopy();
            ++v124[2];
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v137 = v174;
            sub_1001D107C(v119, v174, (void (*)(void))&type metadata accessor for SavedLocation);
            sub_10017DF08(&qword_100E94A48);
            uint64_t v138 = swift_allocObject();
            *(_OWORD *)(v138 + 16) = v173;
            unint64_t v55 = v138 + v121;
            sub_1001CEC74(v137, v138 + v121, (void (*)(void))&type metadata accessor for SavedLocation);
            unint64_t v139 = v124[2];
            uint64_t v140 = swift_isUniquelyReferenced_nonNull_native();
            if (!v140 || (unint64_t v141 = v124[3] >> 1, v141 <= v139))
            {
              uint64_t v124 = (void *)sub_10018A66C(v140, v139 + 1, 1, (uint64_t)v124);
              unint64_t v141 = v124[3] >> 1;
            }
            unint64_t v142 = v124[2];
            uint64_t v125 = v181;
            if (v141 <= v142) {
              goto LABEL_84;
            }
            uint64_t v143 = (char *)v124 + v121 + v142 * v123;
            if (v55 < (unint64_t)&v143[v123] && (unint64_t)v143 < v55 + v123)
            {
LABEL_87:
              _fatalErrorMessage(_:_:file:line:flags:)();
              __break(1u);
              goto LABEL_88;
            }
            swift_arrayInitWithCopy();
            ++v124[2];
            swift_bridgeObjectRelease();
            sub_1001CEE3C(v174, (void (*)(void))&type metadata accessor for SavedLocation);
          }
          uint64_t v102 = v180;
          sub_1001CEE3C(v180, (void (*)(void))&type metadata accessor for SavedLocation);
          v122 += v123;
          --v118;
          uint64_t v119 = (uint64_t)v176;
        }
        while (v118);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_1001B1E64((void *)(v166 + 16), *(void *)(v166 + 40));
      swift_bridgeObjectRetain();
      uint64_t v145 = v163;
      dispatch thunk of WeatherLocationCoalescenceManagerType.coalesceLocations(currentLocation:locationList:locationsOfInterest:displayContextByLocation:)();
      swift_bridgeObjectRelease();
      WeatherCoalescedLocationResult.coalescedLocations.getter();
      (*(void (**)(char *, uint64_t))(v167 + 8))(v145, v164);
      sub_1001E4A4C();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 6u:
      uint64_t v167 = v42;
      uint64_t v106 = *v51;
      uint64_t v107 = v51[1];
      unsigned int v108 = *((unsigned __int8 *)v51 + 16);
      sub_1001B1E64((void *)(v166 + 16), *(void *)(v166 + 40));
      type metadata accessor for LocationsState();
      if (v108 <= 2) {
        swift_bridgeObjectRetain();
      }
      uint64_t v146 = v154;
      dispatch thunk of WeatherLocationCoalescenceManagerType.coalesceLocations(currentLocation:locationList:locationsOfInterest:displayContextByLocation:)();
      swift_bridgeObjectRelease();
      WeatherCoalescedLocationResult.coalescedLocations.getter();
      (*(void (**)(char *, uint64_t))(v167 + 8))(v146, v164);
      sub_10001246C();
      swift_bridgeObjectRelease();
      return sub_10015303C(v106, v107, v108);
    default:
      sub_1001D107C((uint64_t)v51, (uint64_t)v48, (void (*)(void))&type metadata accessor for CurrentLocation);
      sub_1001B1E64((void *)(v166 + 16), *(void *)(v166 + 40));
      uint64_t v52 = v153;
      sub_1001CEC74((uint64_t)v48, v153, (void (*)(void))&type metadata accessor for CurrentLocation);
      _s7Weather24LocationCompositionStateOwst_0(v52, 0, 1, v46);
      type metadata accessor for LocationsState();
      uint64_t v53 = v163;
      dispatch thunk of WeatherLocationCoalescenceManagerType.coalesceLocations(currentLocation:locationList:locationsOfInterest:displayContextByLocation:)();
      sub_1001781AC(v52, (uint64_t *)&unk_100EADD50);
      WeatherCoalescedLocationResult.coalescedLocations.getter();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v53, v164);
      sub_1001CEC74((uint64_t)v48, v52, (void (*)(void))&type metadata accessor for CurrentLocation);
      _s7Weather24LocationCompositionStateOwst_0(v52, 0, 1, v46);
      sub_100901158();
      swift_bridgeObjectRelease();
      sub_1001781AC(v52, (uint64_t *)&unk_100EADD50);
      return sub_1001CEE3C((uint64_t)v48, (void (*)(void))&type metadata accessor for CurrentLocation);
  }
}

uint64_t sub_1001CEBC0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_1001CEC14(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1001CEC74(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_1001CECC8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1001CED28(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001CED90(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_1001CEDE4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001CEE3C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001CEE94(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_1001CEEE8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001CEF40(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1001CEFA0()
{
  sub_100162F48();
  type metadata accessor for Location.Identifier();
  sub_1001CF050(&qword_100E63A28, (void (*)(uint64_t))&type metadata accessor for Location.Identifier);
  uint64_t v0 = sub_100189CAC();
  return sub_1001848D0(v0, v0, (uint64_t (*)(void))&type metadata accessor for Location.Identifier, (unint64_t *)&qword_100E63A30, v1, (uint64_t)&protocol conformance descriptor for Location.Identifier);
}

uint64_t sub_1001CF050(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001CF098(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001CF0E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v26 = a5;
  uint64_t v27 = a6;
  uint64_t v25 = a4;
  v23[1] = a1;
  uint64_t v8 = a3(0);
  sub_100179C0C();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v23 - v12;
  uint64_t v24 = v6;
  uint64_t v14 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v15 = a2 & ~v14;
  v23[0] = v6 + 64;
  if ((*(void *)(v6 + 64 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
    uint64_t v18 = v10 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v13, *(void *)(v24 + 48) + v20 * v15, v8);
      sub_1001CF050(v25, v26);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v13, v8);
      if (v21) {
        break;
      }
      unint64_t v15 = (v15 + 1) & v16;
    }
    while (((*(void *)(v23[0] + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) != 0);
  }
  return v15;
}

uint64_t sub_1001CF258(uint64_t a1, uint64_t a2)
{
  uint64_t v53 = a2;
  uint64_t v3 = type metadata accessor for SavedLocation();
  uint64_t v52 = *(void *)(v3 - 8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Location.Identifier();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v54 = v6;
  uint64_t v55 = v7;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v48 - v11;
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  __chkstk_darwin(active - 8);
  unint64_t v15 = (char *)v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v48 - v17;
  __chkstk_darwin(v19);
  char v21 = (char *)v48 - v20;
  uint64_t v22 = a1 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState;
  sub_1001CEC74(a1 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, (uint64_t)v48 - v20, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  uint64_t v23 = sub_1001782AC();
  uint64_t v25 = v24;
  sub_1001CEE3C((uint64_t)v21, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  if (v23 == static Location.currentLocationID.getter() && v25 == v26)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  uint64_t v49 = v15;
  uint64_t v50 = v18;
  id v51 = v12;
  char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v28 & 1) == 0)
  {
    if ((static Settings.Features.homeAndWorkEnabled.getter() & 1) == 0) {
      return 0;
    }
    sub_1001C8200();
    uint64_t v32 = v31;
    uint64_t v33 = *(void *)(v31 + 16);
    if (v33)
    {
      uint64_t v56 = _swiftEmptyArrayStorage;
      sub_1001D2844();
      uint64_t v34 = *(unsigned __int8 *)(v52 + 80);
      v48[1] = v32;
      uint64_t v35 = v32 + ((v34 + 32) & ~v34);
      uint64_t v53 = *(void *)(v52 + 72);
      uint64_t v36 = v56;
      do
      {
        sub_1001CEC74(v35, (uint64_t)v5, (void (*)(void))&type metadata accessor for SavedLocation);
        SavedLocation.identifier.getter();
        sub_1001CEE3C((uint64_t)v5, (void (*)(void))&type metadata accessor for SavedLocation);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1001D2844();
          uint64_t v36 = v56;
        }
        unint64_t v37 = v36[2];
        if (v37 >= v36[3] >> 1)
        {
          sub_1001D2844();
          uint64_t v36 = v56;
        }
        void v36[2] = v37 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v55 + 32))((unint64_t)v36+ ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))+ *(void *)(v55 + 72) * v37, v9, v54);
        uint64_t v56 = v36;
        v35 += v53;
        --v33;
      }
      while (v33);
      uint64_t v38 = v22;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v36 = _swiftEmptyArrayStorage;
      uint64_t v38 = v22;
    }
    uint64_t v39 = (uint64_t)v50;
    sub_1001CEC74(v38, (uint64_t)v50, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
    uint64_t v40 = (uint64_t)v49;
    sub_1001CEC74(v39, (uint64_t)v49, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
    uint64_t v41 = v54;
    int v42 = _s7Weather24LocationCompositionStateOwet_0(v40, 1, v54);
    uint64_t v43 = v51;
    uint64_t v44 = v55;
    if (v42 == 1) {
      static CurrentLocation.placeholderIdentifier.getter();
    }
    else {
      (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v51, v40, v41);
    }
    sub_1001CEE3C(v39, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
    uint64_t v45 = v36[2];
    if (!v45)
    {
LABEL_30:
      (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v41);
      uint64_t v29 = 0;
      goto LABEL_9;
    }
    uint64_t v46 = (char *)v36 + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80));
    uint64_t v47 = *(void *)(v44 + 72);
    sub_1001CF7B8();
    swift_bridgeObjectRetain();
    while ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
    {
      v46 += v47;
      if (!--v45)
      {
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v41);
LABEL_8:
    uint64_t v29 = 1;
LABEL_9:
    swift_bridgeObjectRelease();
    return v29;
  }
  return 1;
}

unint64_t sub_1001CF7B8()
{
  unint64_t result = qword_100E63A30;
  if (!qword_100E63A30)
  {
    type metadata accessor for Location.Identifier();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E63A30);
  }
  return result;
}

uint64_t sub_1001CF808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003CDC7C);
}

uint64_t sub_1001CF81C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E663D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1001CF884()
{
  unint64_t result = qword_100E65FC8;
  if (!qword_100E65FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65FC8);
  }
  return result;
}

void sub_1001CF8D0()
{
  sub_100162EA0();
  unsigned __int16 v263 = v2;
  LODWORD(v262) = v3;
  uint64_t v260 = v4;
  uint64_t v261 = v5;
  uint64_t v221 = v6;
  uint64_t v246 = v7;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v14 = type metadata accessor for SavedLocation();
  uint64_t v15 = sub_100164920(v14);
  uint64_t v247 = v16;
  __chkstk_darwin(v15);
  sub_100162EF8();
  uint64_t v255 = v17;
  sub_1001626D4();
  __chkstk_darwin(v18);
  sub_100128F8C();
  uint64_t v259 = v19;
  uint64_t v20 = sub_10017DF08(&qword_100E639E8);
  uint64_t v21 = sub_100109308(v20);
  __chkstk_darwin(v21);
  sub_100162EF8();
  uint64_t v236 = v22;
  sub_1001626D4();
  __chkstk_darwin(v23);
  sub_100109770();
  uint64_t v231 = v24;
  sub_1001626D4();
  __chkstk_darwin(v25);
  sub_100191270(v26, v27, v28, v29, v30, v31, v32, v33, v217);
  uint64_t v253 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v244 = v34;
  __chkstk_darwin(v35);
  uint64_t v248 = (char *)&v217 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v37);
  sub_100109770();
  uint64_t v249 = v38;
  sub_1001626D4();
  __chkstk_darwin(v39);
  sub_100109770();
  uint64_t v240 = v40;
  sub_1001626D4();
  __chkstk_darwin(v41);
  sub_100109770();
  uint64_t v234 = v42;
  sub_1001626D4();
  __chkstk_darwin(v43);
  sub_100109770();
  uint64_t v235 = v44;
  sub_1001626D4();
  __chkstk_darwin(v45);
  sub_100109770();
  uint64_t v243 = v46;
  sub_1001626D4();
  __chkstk_darwin(v47);
  sub_100109770();
  uint64_t v233 = v48;
  sub_1001626D4();
  __chkstk_darwin(v49);
  sub_100128F8C();
  uint64_t v242 = v50;
  uint64_t v51 = sub_10017DF08(&qword_100EAC4A0);
  uint64_t v52 = sub_100109308(v51);
  __chkstk_darwin(v52);
  sub_100162EF8();
  uint64_t v238 = v53;
  sub_1001626D4();
  __chkstk_darwin(v54);
  sub_100109770();
  uint64_t v237 = v55;
  sub_1001626D4();
  __chkstk_darwin(v56);
  sub_100128F8C();
  uint64_t v232 = v57;
  uint64_t v58 = type metadata accessor for LocationModel();
  sub_100179C0C();
  uint64_t v245 = v59;
  __chkstk_darwin(v60);
  sub_100162EF8();
  uint64_t v250 = v61;
  sub_1001626D4();
  __chkstk_darwin(v62);
  sub_1001190EC();
  __chkstk_darwin(v63);
  uint64_t v257 = (char *)&v217 - v64;
  sub_1001626D4();
  __chkstk_darwin(v65);
  sub_100109770();
  uint64_t v254 = v66;
  sub_1001626D4();
  __chkstk_darwin(v67);
  sub_100128F8C();
  uint64_t v258 = v68;
  uint64_t v239 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v241 = v69;
  __chkstk_darwin(v70);
  sub_100162EF8();
  uint64_t v251 = v71;
  sub_1001626D4();
  __chkstk_darwin(v72);
  uint64_t v73 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  uint64_t v74 = sub_100109308(v73);
  __chkstk_darwin(v74);
  sub_10011C760();
  uint64_t v75 = type metadata accessor for CurrentLocation();
  sub_100162E4C();
  __chkstk_darwin(v76);
  sub_1001626E0();
  uint64_t v79 = (void *)(v78 - v77);
  sub_10006DF38(v11, v13, (uint64_t *)&unk_100EADD50);
  uint64_t v80 = (int *)type metadata accessor for LocationsState();
  *(void *)(v13 + v80[5]) = v9;
  uint64_t v81 = v13 + v80[12];
  uint64_t v82 = v261;
  *(void *)uint64_t v81 = v260;
  *(void *)(v81 + 8) = v82;
  *(unsigned char *)(v81 + 16) = (_BYTE)v262;
  uint64_t v218 = v80;
  uint64_t v83 = v80[13];
  uint64_t v220 = v13;
  *(void *)(v13 + v83) = v263;
  uint64_t v265 = &_swiftEmptyDictionarySingleton;
  uint64_t v266 = &_swiftEmptyDictionarySingleton;
  uint64_t v219 = v11;
  sub_10006DF38(v11, v0, (uint64_t *)&unk_100EADD50);
  sub_10012B520(v0, 1, v75);
  uint64_t v222 = v9;
  if (v84)
  {
    swift_bridgeObjectRetain();
    sub_100178110(v0, (uint64_t *)&unk_100EADD50);
    uint64_t v252 = _swiftEmptyArrayStorage;
    uint64_t v256 = _swiftEmptyArrayStorage;
    uint64_t v85 = v9;
    goto LABEL_11;
  }
  sub_1001D113C(v0, (uint64_t)v79);
  swift_bridgeObjectRetain();
  CurrentLocation.identifier.getter();
  uint64_t v86 = (void *)sub_1001D2674(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
  unint64_t v88 = v86[2];
  unint64_t v87 = v86[3];
  uint64_t v252 = v86;
  uint64_t v89 = (void (*)(void))(v88 + 1);
  if (v88 >= v87 >> 1) {
    goto LABEL_80;
  }
  while (1)
  {
    uint64_t v91 = (uint64_t)v258;
    uint64_t v90 = v259;
    uint64_t v92 = v232;
    v252[2] = v89;
    sub_1001627D4();
    v93();
    sub_1001D3158(v246, (uint64_t)v79, v91);
    CurrentLocation.id.getter();
    unsigned __int16 v263 = v79;
    uint64_t v94 = v245;
    sub_100162808();
    v95();
    _s7Weather24LocationCompositionStateOwst_0(v92, 0, 1, v58);
    uint64_t v96 = (uint64_t)v263;
    sub_1001D301C();
    uint64_t v97 = (uint64_t)v256;
    CurrentLocation.location.getter();
    uint64_t v98 = v253;
    sub_10012B520(v97, 1, v253);
    if (v84)
    {
      (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v91, v58);
      sub_1001D1298(v96, (void (*)(void))&type metadata accessor for CurrentLocation);
      sub_100178110(v97, &qword_100E639E8);
      uint64_t v256 = _swiftEmptyArrayStorage;
      uint64_t v85 = v222;
    }
    else
    {
      uint64_t v99 = v244;
      unint64_t v100 = *(void (**)(void (**)(void), uint64_t, uint64_t))(v244 + 32);
      char v101 = v242;
      v100(v242, v97, v98);
      uint64_t v102 = *(void (**)(uint64_t, void (**)(void), uint64_t))(v99 + 16);
      v102(v233, v101, v98);
      uint64_t v103 = sub_1001D262C(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
      unint64_t v105 = *(void *)(v103 + 16);
      unint64_t v104 = *(void *)(v103 + 24);
      uint64_t v256 = (void *)v103;
      uint64_t v262 = v102;
      if (v105 >= v104 >> 1) {
        uint64_t v256 = (void *)sub_1001A1944(v104);
      }
      v256[2] = v105 + 1;
      uint64_t v106 = v244;
      sub_100129058();
      v100((void (**)(void))(v108 + v107 + *(void *)(v106 + 72) * v105), v233, v98);
      uint64_t v109 = (uint64_t)v263;
      uint64_t v261 = CurrentLocation.id.getter();
      uint64_t v110 = v231;
      os_log_type_t v111 = v242;
      v262(v231, v242, v98);
      _s7Weather24LocationCompositionStateOwst_0(v110, 0, 1, v98);
      sub_1001D2EE0();
      (*(void (**)(void (**)(void), uint64_t))(v106 + 8))(v111, v98);
      (*(void (**)(void (**)(uint64_t, char *, uint64_t), uint64_t))(v245 + 8))(v258, v58);
      sub_1001D1298(v109, (void (*)(void))&type metadata accessor for CurrentLocation);
      uint64_t v85 = v222;
LABEL_11:
      uint64_t v90 = v259;
    }
    uint64_t v233 = *(void *)(v85 + 16);
    if (v233) {
      break;
    }
LABEL_56:
    swift_bridgeObjectRetain();
    uint64_t v183 = v246;
    swift_bridgeObjectRetain();
    uint64_t v184 = sub_1001D28A8(v85, v183, v85);
    swift_bridgeObjectRelease();
    uint64_t v185 = *(void **)(v184 + 16);
    if (!v185)
    {
      swift_bridgeObjectRelease();
LABEL_73:
      id v211 = v218;
      uint64_t v212 = v220;
      uint64_t v213 = v246;
      *(void *)(v220 + v218[6]) = v246;
      *(void *)(v212 + v211[8]) = v256;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v214 = sub_1001D26BC(v213);
      sub_100178110(v219, (uint64_t *)&unk_100EADD50);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v212 + v211[9]) = v214;
      uint64_t v215 = v265;
      *(void *)(v212 + v211[10]) = v266;
      swift_bridgeObjectRelease();
      *(void *)(v212 + v211[11]) = v215;
      *(void *)(v212 + v211[7]) = v221;
      sub_100162694();
      return;
    }
    uint64_t v257 = 0;
    uint64_t v186 = type metadata accessor for LocationOfInterest();
    sub_100164920(v186);
    unint64_t v188 = v184 + ((*(unsigned __int8 *)(v187 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80));
    uint64_t v261 = *(void *)(v189 + 72);
    int v190 = (void (**)(void))(v244 + 16);
    uint64_t v262 = (void (*)(uint64_t, void (**)(void), uint64_t))(v244 + 32);
    uint64_t v258 = (void (**)(uint64_t, char *, uint64_t))(v244 + 40);
    uint64_t v259 = v244 + 8;
    uint64_t v255 = v184;
    swift_bridgeObjectRetain();
    uint64_t v260 = v190;
    while (1)
    {
      LocationOfInterest.location.getter();
      uint64_t v191 = *v190;
      sub_1001CA8F4();
      v191();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v256 = (void *)sub_10019DFBC();
      }
      unint64_t v193 = v256[2];
      unint64_t v192 = v256[3];
      unsigned __int16 v263 = v185;
      if (v193 >= v192 >> 1) {
        uint64_t v256 = (void *)sub_1001A1944(v192);
      }
      sub_100186C50();
      uint64_t v58 = *(void *)(v194 + 72);
      uint64_t v89 = *(void (**)(void))(v194 + 32);
      sub_1001627D4();
      v89();
      uint64_t v195 = Location.id.getter();
      uint64_t v197 = v196;
      sub_1001CA8F4();
      v191();
      uint64_t v79 = v265;
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v264 = v79;
      uint64_t v265 = (void *)0x8000000000000000;
      unint64_t v198 = sub_100187340();
      unint64_t v87 = v79[2];
      BOOL v200 = (v199 & 1) == 0;
      Swift::Int v201 = v87 + v200;
      if (__OFADD__(v87, v200)) {
        break;
      }
      unint64_t v202 = v198;
      char v203 = v199;
      sub_10017DF08(&qword_100E639F0);
      uint64_t v79 = &v264;
      Swift::Bool v204 = _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v201);
      uint64_t isUniquelyReferenced_nonNull_native = v240;
      if (v204)
      {
        uint64_t v79 = v264;
        unint64_t v205 = sub_100187340();
        if ((v203 & 1) != (v206 & 1)) {
          goto LABEL_81;
        }
        unint64_t v202 = v205;
      }
      long long v207 = v264;
      if (v203)
      {
        (*v258)(v264[7] + v202 * v58, v248, v253);
      }
      else
      {
        v264[(v202 >> 6) + 8] |= 1 << v202;
        uint64_t v208 = (uint64_t *)(v207[6] + 16 * v202);
        *uint64_t v208 = v195;
        v208[1] = v197;
        sub_1001627D4();
        v89();
        uint64_t v209 = v207[2];
        BOOL v149 = __OFADD__(v209, 1);
        unint64_t v87 = v209 + 1;
        if (v149) {
          goto LABEL_78;
        }
        v207[2] = v87;
        swift_bridgeObjectRetain();
      }
      uint64_t v265 = v264;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100162F0C();
      v210();
      int v190 = v260;
      v188 += v261;
      uint64_t v185 = (void *)((char *)v263 - 1);
      if (v263 == (void *)1)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_73;
      }
    }
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    BOOL v216 = sub_10019AEC0(v87);
    uint64_t v252 = (void *)sub_1001D2674(v216, (uint64_t)v89, 1, (uint64_t)v252);
  }
  sub_100129058();
  uint64_t v232 = v85 + v112;
  uint64_t v231 = v241 + 32;
  uint64_t v258 = (void (**)(uint64_t, char *, uint64_t))(v245 + 16);
  unsigned __int16 v263 = (void *)(v245 + 88);
  LODWORD(v262) = enum case for LocationModel.current(_:);
  LODWORD(v260) = enum case for LocationModel.saved(_:);
  uint64_t v113 = (void (**)(uint64_t, uint64_t))(v245 + 8);
  uint64_t v261 = v245 + 96;
  uint64_t v226 = v245 + 32;
  uint64_t v230 = v245 + 104;
  uint64_t v225 = v245 + 40;
  uint64_t v242 = (void (**)(void))(v244 + 32);
  uint64_t v228 = (void (**)(void))(v244 + 16);
  uint64_t v223 = v244 + 40;
  uint64_t v224 = v244 + 8;
  uint64_t v229 = *(void *)(v114 + 72);
  swift_bridgeObjectRetain();
  uint64_t v115 = 0;
  while (1)
  {
    uint64_t v247 = v115;
    sub_10018D0C0(v232 + v229 * v115, v90);
    SavedLocation.identifier.getter();
    uint64_t v116 = v252;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v177 = sub_100183298();
      uint64_t v116 = (void *)sub_1001D2674(v177, v178, v179, (uint64_t)v116);
    }
    unint64_t v118 = v116[2];
    unint64_t v117 = v116[3];
    if (v118 >= v117 >> 1)
    {
      BOOL v180 = sub_10016534C(v117);
      uint64_t v116 = (void *)sub_1001D2674(v180, v181, v182, (uint64_t)v116);
    }
    v116[2] = v118 + 1;
    sub_100129058();
    uint64_t v252 = v116;
    sub_1001190D4();
    v119();
    uint64_t v120 = *(void *)(v246 + 16);
    if (v120)
    {
      sub_100129058();
      uint64_t v123 = v121 + v122;
      uint64_t v125 = *(void *)(v124 + 72);
      unint64_t v126 = *(void (**)(void))(v124 + 16);
      swift_bridgeObjectRetain();
      do
      {
        sub_1001D0F50();
        v126();
        sub_1001D0F50();
        v126();
        sub_1001D145C();
        int v128 = v127();
        if (v128 == v262)
        {
          sub_1001821D4();
          v129();
          uint64_t v130 = sub_10017DF08(&qword_100E63878);
          sub_100178110(isUniquelyReferenced_nonNull_native + *(int *)(v130 + 48), &qword_100E63508);
          sub_1001D1298(isUniquelyReferenced_nonNull_native, (void (*)(void))&type metadata accessor for CurrentLocation);
        }
        else if (v128 == v260)
        {
          sub_1001821D4();
          v131();
          uint64_t v132 = isUniquelyReferenced_nonNull_native + *(int *)(sub_10017DF08(&qword_100E63870) + 48);
          uint64_t v133 = v255;
          sub_1001D113C(isUniquelyReferenced_nonNull_native, v255);
          char v134 = static SavedLocation.== infix(_:_:)();
          sub_1001D1298(v133, (void (*)(void))&type metadata accessor for SavedLocation);
          sub_100178110(v132, &qword_100E63508);
          if (v134)
          {
            swift_bridgeObjectRelease();
            sub_100183C70();
            uint64_t v137 = v237;
            sub_1001190D4();
            v138();
            uint64_t v139 = 0;
            uint64_t v90 = v259;
            goto LABEL_29;
          }
        }
        else
        {
          (*v113)(isUniquelyReferenced_nonNull_native, v58);
        }
        uint64_t v135 = sub_1001D165C();
        v136(v135);
        v123 += v125;
        --v120;
      }
      while (v120);
      swift_bridgeObjectRelease();
      uint64_t v139 = 1;
      uint64_t v90 = v259;
      uint64_t v137 = v237;
    }
    else
    {
      uint64_t v139 = 1;
      uint64_t v137 = v237;
    }
LABEL_29:
    _s7Weather24LocationCompositionStateOwst_0(v137, v139, 1, v58);
    uint64_t v140 = sub_10017DF08(&qword_100E63870);
    uint64_t v141 = v254 + *(int *)(v140 + 48);
    sub_10018D0C0(v90, v254);
    uint64_t v142 = v238;
    sub_10006DF38(v137, v238, &qword_100EAC4A0);
    sub_10012B520(v142, 1, v58);
    if (v84)
    {
      sub_100178110(v137, &qword_100EAC4A0);
      sub_100178110(v142, &qword_100EAC4A0);
      uint64_t v143 = type metadata accessor for LocationOfInterest();
      _s7Weather24LocationCompositionStateOwst_0(v141, 1, 1, v143);
    }
    else
    {
      LocationModel.locationOfInterest.getter();
      sub_100178110(v137, &qword_100EAC4A0);
      uint64_t v144 = sub_1001D165C();
      v145(v144);
    }
    sub_100183C70();
    v146(v254, v260, v58);
    SavedLocation.id.getter();
    sub_1001D0F50();
    v147();
    uint64_t v79 = v266;
    uint64_t v89 = (void (*)(void))swift_isUniquelyReferenced_nonNull_native();
    uint64_t v264 = v79;
    uint64_t v266 = (void *)0x8000000000000000;
    sub_100187340();
    sub_10018A474();
    if (v149)
    {
      __break(1u);
      goto LABEL_75;
    }
    char v150 = v148;
    sub_10017DF08(&qword_100E639F8);
    BOOL v151 = sub_1001847F0();
    uint64_t v152 = v253;
    if (v151)
    {
      sub_100187340();
      if ((v150 & 1) != (v153 & 1)) {
        break;
      }
    }
    uint64_t v79 = v264;
    if (v150)
    {
      uint64_t v154 = sub_1001D25B8(v264[7]);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v155 + 40))(v154, v250, v58);
    }
    else
    {
      sub_100189540();
      sub_1001D25B8(v156);
      sub_1001190D4();
      v157();
      uint64_t v158 = v79[2];
      BOOL v149 = __OFADD__(v158, 1);
      unint64_t v87 = v158 + 1;
      if (v149) {
        goto LABEL_76;
      }
      v79[2] = v87;
      swift_bridgeObjectRetain();
    }
    uint64_t v266 = v264;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v159 = v236;
    uint64_t v90 = v259;
    SavedLocation.location.getter();
    sub_10012B520(v159, 1, v152);
    if (v84)
    {
      uint64_t v160 = sub_10018C5B0();
      v161(v160);
      sub_1001D1298(v90, (void (*)(void))&type metadata accessor for SavedLocation);
      sub_100178110(v159, &qword_100E639E8);
    }
    else
    {
      uint64_t v162 = *v242;
      sub_1001627D4();
      v162();
      uint64_t v163 = *v228;
      sub_100162808();
      v163();
      char v164 = swift_isUniquelyReferenced_nonNull_native();
      if ((v164 & 1) == 0) {
        uint64_t v256 = (void *)sub_10019DFBC();
      }
      unint64_t v165 = v256[3];
      if (v256[2] >= v165 >> 1) {
        uint64_t v256 = (void *)sub_1001A1944(v165);
      }
      sub_100186C50();
      uint64_t v227 = *(void *)(v166 + 72);
      sub_100183624();
      *(void *)(v167 - 256) = v162;
      sub_1001627D4();
      v162();
      SavedLocation.id.getter();
      sub_100162808();
      v163();
      uint64_t v79 = v265;
      uint64_t v89 = (void (*)(void))swift_isUniquelyReferenced_nonNull_native();
      uint64_t v264 = v79;
      uint64_t v265 = (void *)0x8000000000000000;
      sub_100187340();
      sub_10018A474();
      if (v149) {
        goto LABEL_77;
      }
      char v169 = v168;
      sub_10017DF08(&qword_100E639F0);
      if (sub_1001847F0())
      {
        sub_100187340();
        if ((v169 & 1) != (v170 & 1)) {
          break;
        }
      }
      uint64_t v79 = v264;
      if (v169)
      {
        sub_100183C70();
        v171();
      }
      else
      {
        sub_100189540();
        sub_100183624();
        sub_1001627D4();
        v172();
        uint64_t v173 = v79[2];
        BOOL v149 = __OFADD__(v173, 1);
        unint64_t v87 = v173 + 1;
        if (v149) {
          goto LABEL_79;
        }
        v79[2] = v87;
        swift_bridgeObjectRetain();
      }
      uint64_t v265 = v264;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100183C70();
      sub_100162F0C();
      v174();
      uint64_t v175 = sub_10018C5B0();
      v176(v175);
      uint64_t v90 = v259;
      sub_1001D1298(v259, (void (*)(void))&type metadata accessor for SavedLocation);
    }
    uint64_t v115 = v247 + 1;
    if (v247 + 1 == v233)
    {
      uint64_t v85 = v222;
      swift_bridgeObjectRelease();
      goto LABEL_56;
    }
  }
LABEL_81:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

BOOL sub_1001D0DB4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v10, v11);
}

double sub_1001D0DD4@<D0>(uint64_t a1@<X8>)
{
  double result = *(double *)(v2 + a1);
  *(double *)(v1 + a1) = result;
  return result;
}

uint64_t sub_1001D0DEC@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>, char a5, char a6, char a7, char a8, char a9)
{
  return sub_1001C6768(a1, a2, a3, 2, 2, 2, v9, 2, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1001D0E10()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

void sub_1001D0E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6 = *(_DWORD *)(v4 - 116);
  sub_10035067C(a1, a2, a3, v3, v6, 0);
}

uint64_t sub_1001D0E68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(a1 - 256);
  return sub_100178110(v3, v1);
}

uint64_t sub_1001D0E80()
{
  return type metadata accessor for ListLocationRowPrimaryText(0);
}

uint64_t sub_1001D0E9C()
{
  return v0;
}

uint64_t sub_1001D0EB4()
{
  return v0;
}

uint64_t sub_1001D0EC8()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_1001D0EEC()
{
  return swift_allocObject();
}

uint64_t sub_1001D0F04()
{
  return v0;
}

uint64_t sub_1001D0F10()
{
  return v0;
}

uint64_t sub_1001D0F28(uint64_t a1)
{
  **(void **)(v1 - 200) = a1;
  return type metadata accessor for ViewState.SecondaryViewState(0);
}

uint64_t sub_1001D0F60()
{
  return 0;
}

uint64_t sub_1001D0F80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + a1;
  uint64_t v4 = *(void *)v3;
  char v5 = *(unsigned char *)(v3 + 8);
  return sub_10018F6D8(v4, v5);
}

uint64_t sub_1001D0F9C()
{
  return v0;
}

uint64_t sub_1001D0FB8()
{
  return v0;
}

uint64_t sub_1001D0FCC()
{
  return String.hash(into:)();
}

uint64_t sub_1001D0FF4()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_1001D1028(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_1001D107C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1001D10DC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1001D113C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100162708();
  v4(v3);
  sub_100162E4C();
  sub_1001190D4();
  v5();
  return a2;
}

uint64_t sub_1001D1194(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_1001D11E8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001D1240(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001D1298(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_1001D12EC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001D1344()
{
  return sub_100178160(v0, v1);
}

uint64_t sub_1001D1374()
{
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
}

uint64_t sub_1001D13A8()
{
  return type metadata accessor for LocationComponentViewModel();
}

void sub_1001D13C8()
{
  *(unsigned char *)(v2 + v0) = *(_DWORD *)(v1 - 256);
}

uint64_t sub_1001D13D4(uint64_t result)
{
  *(unsigned char *)(result + 16) = 34;
  return result;
}

uint64_t sub_1001D13E4()
{
  *(void *)(v0 - 96) = 0;
  *(void *)(v0 - 88) = 0xE000000000000000;
  return 30067;
}

uint64_t sub_1001D13F8()
{
  return static URL.read(from:)();
}

void sub_1001D1410(uint64_t a1@<X8>)
{
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = 2 * (a1 / v1);
}

uint64_t sub_1001D1420()
{
  return SavedLocation.identifier.getter();
}

void sub_1001D143C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t sub_1001D1468()
{
  return type metadata accessor for Location();
}

void sub_1001D1480()
{
  *(void *)(v0 - 816) = 0;
}

uint64_t sub_1001D1498()
{
  return v0;
}

uint64_t sub_1001D14B0()
{
  return swift_release();
}

uint64_t sub_1001D14C8()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

void sub_1001D14EC()
{
  *uint64_t v0 = 0x8000000000000000;
}

void sub_1001D1500(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9)
{
  sub_10020FA74(a1, a2, a3, a4, a5, a6, 0xED00007475706E49, 0xD000000000000011, a9);
}

uint64_t sub_1001D1528(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(v2 - 1200);
  return sub_1001781AC(v4, a2);
}

uint64_t sub_1001D1540()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_1001D1574(uint64_t a1, uint64_t a2)
{
  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v2);
}

uint64_t sub_1001D158C()
{
  return v0;
}

uint64_t sub_1001D15A4(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v1);
}

BOOL sub_1001D15BC()
{
  os_log_type_t v2 = *(_DWORD *)(v0 - 168);
  uint64_t v3 = *(NSObject **)(v0 - 160);
  return os_log_type_enabled(v3, v2);
}

uint64_t sub_1001D15D8()
{
  return static Optional<A>.read(from:)();
}

void sub_1001D1604()
{
  Hasher._combine(_:)(1u);
}

__n128 sub_1001D161C()
{
  __n128 result = *(__n128 *)(v0 - 176);
  long long v2 = *(_OWORD *)(v0 - 160);
  *(__n128 *)(v0 - 256) = result;
  *(_OWORD *)(v0 - 240) = v2;
  return result;
}

uint64_t sub_1001D1628()
{
  return 0x7865646E497675;
}

uint64_t sub_1001D165C()
{
  return v0;
}

uint64_t sub_1001D1688()
{
  uint64_t v2 = *(void *)(v0 - 168);
  uint64_t v3 = *(void *)(v0 - 960);
  return _s7Weather24LocationCompositionStateOwst_0(v2, 1, 1, v3);
}

uint64_t sub_1001D16B8()
{
  return swift_release();
}

uint64_t sub_1001D16D0()
{
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

void sub_1001D1710(float a1)
{
  *uint64_t v1 = a1;
  *(unsigned char *)(v2 - 144) = *(_DWORD *)(v2 - 236);
}

uint64_t sub_1001D1728@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 - 136) + a1;
}

uint64_t sub_1001D1758(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 144), 1, 1, a1);
  uint64_t v2 = *(void *)(v1 - 136);
  uint64_t v3 = *(void *)(v1 - 88);
  return _s7Weather24LocationCompositionStateOwst_0(v2, 1, 1, v3);
}

void sub_1001D17A4(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 168) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1001D1808()
{
  return *(void *)(v0 + 1296);
}

uint64_t sub_1001D1824()
{
  *(void *)(v0 - 96) = 0;
  *(_OWORD *)(v0 - 128) = 0u;
  *(_OWORD *)(v0 - 112) = 0u;
  return swift_retain();
}

void sub_1001D1850()
{
  sub_1000A8368();
}

uint64_t sub_1001D1870(void *a1)
{
  sub_1001B1E64(a1, v1);
  return 0;
}

uint64_t sub_1001D1890()
{
  return sub_1001EC074();
}

__n128 *sub_1001D18A8(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 1684957547;
  result[2].n128_u64[1] = 0xE400000000000000;
  return result;
}

double sub_1001D18D4()
{
  return 0.0;
}

uint64_t sub_1001D18EC()
{
  return dispatch thunk of Collection.endIndex.getter();
}

uint64_t sub_1001D190C()
{
  return type metadata accessor for SevereAlertComponentViewModel();
}

uint64_t sub_1001D192C()
{
  return v0;
}

uint64_t sub_1001D193C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v6 = *(void *)(v4 - 304);
  return sub_100074750(v3, v6, a3);
}

uint64_t sub_1001D195C()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t sub_1001D1974@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 - 112) + a1;
}

uint64_t sub_1001D1980(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, *(void *)(v1 - 232));
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001D19CC(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(v1, 0, 1, a1);
  uint64_t v3 = *(void *)(v2 - 152);
  return sub_100488C48(v1, v3);
}

uint64_t sub_1001D1A08()
{
  return *(void *)(v0 + 8);
}

uint64_t sub_1001D1A1C()
{
  return type metadata accessor for TemperatureAveragesHeroChartView();
}

uint64_t sub_1001D1A38(uint64_t a1)
{
  *(void *)(v1 - 320) = a1;
  return v1 - 320;
}

uint64_t sub_1001D1A50(uint64_t a1, uint64_t a2)
{
  sub_1002102B0(v2, a2);
  return swift_beginAccess();
}

uint64_t sub_1001D1AA4(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, a1);
  return type metadata accessor for ModalViewState(0);
}

uint64_t sub_1001D1ADC()
{
  return v0;
}

uint64_t sub_1001D1AF0()
{
  *(void *)(v2 - 128) = 0;
  *(_OWORD *)(v2 - 160) = 0u;
  *(_OWORD *)(v2 - 144) = 0u;
  return sub_1001AAF58(v1, v2 - 160, v0);
}

uint64_t sub_1001D1B1C()
{
  return v0;
}

uint64_t sub_1001D1B30(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v3 - 112);
  return _s7Weather24LocationCompositionStateOwst_0(v2, a2, 1, v5);
}

void sub_1001D1B50()
{
  sub_10012B78C();
}

uint64_t sub_1001D1B74()
{
  return sub_100147E1C(v0, v1, v3, v2);
}

uint64_t sub_1001D1BA4()
{
  return v0;
}

uint64_t sub_1001D1BB8()
{
  *(void *)(v0 - 80) = 0;
  *(_OWORD *)(v0 - 112) = 0u;
  *(_OWORD *)(v0 - 96) = 0u;
  return swift_retain();
}

uint64_t sub_1001D1BD8()
{
  return Hasher.init(_seed:)();
}

uint64_t sub_1001D1BF0()
{
  return v0;
}

uint64_t sub_1001D1C18()
{
  return sub_10031F75C(v1, v0);
}

uint64_t sub_1001D1C30(uint64_t result)
{
  *(unsigned char *)(result + 16) = 34;
  return result;
}

uint64_t sub_1001D1C40()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_1001D1C64()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_1001D1C8C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(*(void *)(v2 - 96) + a2) = result & 1;
  return result;
}

uint64_t sub_1001D1C9C()
{
  return v0;
}

uint64_t sub_1001D1CB0()
{
  return *(void *)(v0 - 176);
}

uint64_t sub_1001D1CC4()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t sub_1001D1CE4(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 288), 1, 1, a1);
  return _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 296), 1, 1, *(void *)(v1 - 320));
}

uint64_t sub_1001D1D34()
{
  return v0;
}

uint64_t sub_1001D1D44()
{
  return _s10PolarModelVMa();
}

void sub_1001D1D70()
{
  sub_10012B78C();
}

uint64_t sub_1001D1D94()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1001D1DAC()
{
  return type metadata accessor for TimeZone();
}

uint64_t sub_1001D1DD4()
{
  return v0;
}

uint64_t sub_1001D1E18()
{
  return v0;
}

uint64_t sub_1001D1E30()
{
  return _ConditionalContent<>.init(storage:)();
}

__n128 sub_1001D1E54()
{
  __int16 v2 = *(unsigned __int8 *)(v1 - 224);
  if (*(unsigned char *)(v1 - 223)) {
    __int16 v3 = v0;
  }
  else {
    __int16 v3 = 0;
  }
  __n128 result = *(__n128 *)(v1 - 256);
  long long v5 = *(_OWORD *)(v1 - 240);
  *(__n128 *)(v1 - 304) = result;
  *(_OWORD *)(v1 - 288) = v5;
  *(_WORD *)(v1 - 272) = v3 | v2;
  return result;
}

uint64_t sub_1001D1E88()
{
  return 0x676E6964616F6CLL;
}

uint64_t sub_1001D1EA8()
{
  _s7Weather24LocationCompositionStateOwst_0(v0, 0, 1, *(void *)(v1 - 184));
  return type metadata accessor for ModalViewState(0);
}

uint64_t sub_1001D1EE0()
{
  return 0x6269737365636361;
}

uint64_t sub_1001D1EFC()
{
  return static FixedSizeTypeBinaryCodable.read(from:)();
}

uint64_t sub_1001D1F14(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 272), 1, 1, a1);
  return type metadata accessor for TimeState();
}

uint64_t sub_1001D1F64()
{
  return v0;
}

uint64_t sub_1001D1F7C()
{
  return v0;
}

uint64_t sub_1001D1F94()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_1001D1FB4(uint64_t a1)
{
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v1 - 184), 1, 1, a1);
  sub_10011D8AC();
}

uint64_t sub_1001D2014()
{
  return type metadata accessor for LocationContentView(0) - 8;
}

uint64_t sub_1001D2040()
{
  return v0;
}

uint64_t sub_1001D2058()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_1001D207C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 216);
  return _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v3);
}

uint64_t sub_1001D2098()
{
  return _s7Weather24LocationCompositionStateOwet_0(v0, 1, v1);
}

void sub_1001D20B4()
{
  *(unsigned char *)(v0 - 65) = 1;
}

uint64_t sub_1001D20C0()
{
  return swift_release();
}

uint64_t sub_1001D20D8@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1);
}

uint64_t sub_1001D20F0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001D2114()
{
  return sub_1000E0EF0();
}

char *sub_1001D2138@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1001D216C()
{
  return type metadata accessor for LocationViewerActiveLocationState();
}

uint64_t sub_1001D21B0(uint64_t a1, uint64_t a2)
{
  sub_1002102B0(a1, a2);
  return Logger.logObject.getter();
}

void sub_1001D21D8()
{
  sub_100155CD4();
}

uint64_t sub_1001D2200()
{
  return type metadata accessor for MainViewModel(0);
}

void sub_1001D2238()
{
  v0[28] = 0;
  v0[30] = 0;
  v0[26] = 1;
}

uint64_t sub_1001D2264()
{
  return v0;
}

uint64_t sub_1001D2278()
{
  return swift_task_dealloc();
}

uint64_t sub_1001D2294(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 184);
  return _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, v3);
}

uint64_t sub_1001D22B0()
{
  return v0;
}

uint64_t sub_1001D22C4()
{
  return v0;
}

uint64_t sub_1001D2300()
{
  sub_10018F6E4();
  sub_10018F6D8(*(void *)(v1 + *(int *)(v0 + 100)), *(unsigned char *)(v1 + *(int *)(v0 + 100) + 8));
  return swift_release();
}

uint64_t sub_1001D2368()
{
  return swift_release();
}

double sub_1001D238C(uint64_t a1)
{
  return *(double *)&a1;
}

unint64_t sub_1001D23B8()
{
  sub_10019D12C();
  sub_100188670();
  Hasher._finalize()();
  uint64_t v0 = sub_10017B204();

  return sub_1001D2418(v0, v1, v2);
}

unint64_t sub_1001D2418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_1001D24FC()
{
  return *(void *)(v0 + 1112);
}

uint64_t sub_1001D2508()
{
  return 255;
}

uint64_t sub_1001D2514(uint64_t result)
{
  *(unsigned char *)(result + 16) = v1;
  return result;
}

uint64_t sub_1001D2520()
{
  return swift_release();
}

void sub_1001D2544(Swift::UInt a1)
{
  Hasher._combine(_:)(a1);
}

uint64_t sub_1001D255C()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_1001D2574()
{
  return *(void *)(v0 - 336);
}

uint64_t sub_1001D2588()
{
  return 0x6465696E6564;
}

uint64_t sub_1001D259C()
{
  return FixedSizeTypeBinaryCodable.write(to:)();
}

uint64_t sub_1001D25B8@<X0>(uint64_t a1@<X8>)
{
  return a1 + *(void *)(*(void *)(v2 - 280) + 72) * v1;
}

uint64_t sub_1001D25CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *uint64_t v10 = a10;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001D25E8(uint64_t a1, void (*a2)(void))
{
  uint64_t v4 = *(void *)(v2 - 336);
  return sub_10019E1D8(v4, a2);
}

uint64_t sub_1001D2600()
{
  return *(void *)(v0 - 336);
}

__n128 sub_1001D2618(__n128 *a1)
{
  __n128 result = v1[33];
  a1[1] = result;
  return result;
}

uint64_t sub_1001D262C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E81490, (uint64_t (*)(void))&type metadata accessor for Location, (void (*)(void))&type metadata accessor for Location);
}

uint64_t sub_1001D2674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E96FE8, (uint64_t (*)(void))&type metadata accessor for Location.Identifier, (void (*)(void))&type metadata accessor for Location.Identifier);
}

void *sub_1001D26BC(uint64_t a1)
{
  uint64_t v15 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_100125FF8();
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    sub_1001D2844();
    uint64_t v7 = type metadata accessor for LocationModel();
    sub_100164920(v7);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v14 = *(void *)(v10 + 72);
    do
    {
      LocationModel.identifier.getter();
      unint64_t v11 = _swiftEmptyArrayStorage[2];
      if (v11 >= _swiftEmptyArrayStorage[3] >> 1) {
        sub_1001D2844();
      }
      _swiftEmptyArrayStorage[2] = v11 + 1;
      sub_100129058();
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))((char *)_swiftEmptyArrayStorage + v12 + *(void *)(v4 + 72) * v11, v1, v15);
      v9 += v14;
      --v6;
    }
    while (v6);
  }
  return _swiftEmptyArrayStorage;
}

void sub_1001D2844()
{
  sub_10018A6B4();
  *uint64_t v0 = v1;
}

uint64_t sub_1001D28A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v65 = a3;
  uint64_t v5 = type metadata accessor for LocationModel();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v57 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100EAC4A0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v46 - v12;
  uint64_t v14 = sub_10017DF08(&qword_100E63508);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for LocationOfInterest();
  __chkstk_darwin(v17);
  uint64_t v60 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v50 = (char *)&v46 - v21;
  uint64_t v59 = *(void *)(a1 + 16);
  if (v59)
  {
    uint64_t v22 = v20;
    uint64_t v23 = *(void *)(type metadata accessor for SavedLocation() - 8);
    uint64_t v52 = a1 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
    uint64_t v51 = *(void *)(v23 + 72);
    uint64_t v64 = v6 + 16;
    uint64_t v66 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v46 = a1;
    uint64_t v47 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
    uint64_t v49 = v22;
    uint64_t v58 = (void (**)(char *, char *, uint64_t))(v22 + 32);
    swift_bridgeObjectRetain();
    uint64_t v24 = 0;
    uint64_t v61 = v17;
    uint64_t v62 = _swiftEmptyArrayStorage;
    uint64_t v55 = v10;
    uint64_t v56 = v6;
    uint64_t v53 = v16;
    uint64_t v54 = v13;
    uint64_t v48 = v5;
    while (1)
    {
      uint64_t v25 = *(void *)(a2 + 16);
      uint64_t v63 = v24;
      if (v25) {
        break;
      }
      uint64_t v35 = 1;
LABEL_12:
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, v35, 1, v5);
      sub_10006DF38((uint64_t)v13, (uint64_t)v10, &qword_100EAC4A0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v5) == 1)
      {
        sub_100178110((uint64_t)v13, &qword_100EAC4A0);
        sub_100178110((uint64_t)v10, &qword_100EAC4A0);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 1, 1, v17);
      }
      else
      {
        LocationModel.locationOfInterest.getter();
        sub_100178110((uint64_t)v13, &qword_100EAC4A0);
        (*v66)(v10, v5);
      }
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17) == 1)
      {
        sub_100178110((uint64_t)v16, &qword_100E63508);
      }
      else
      {
        uint64_t v36 = *v58;
        uint64_t v37 = v50;
        (*v58)(v50, v16, v17);
        v36(v60, v37, v17);
        uint64_t v38 = v62;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v38 = (void *)sub_1007E95B0(0, v38[2] + 1, 1, (uint64_t)v38);
        }
        unint64_t v40 = v38[2];
        unint64_t v39 = v38[3];
        uint64_t v62 = v38;
        uint64_t v41 = v49;
        if (v40 >= v39 >> 1)
        {
          uint64_t v43 = (void *)sub_1007E95B0(v39 > 1, v40 + 1, 1, (uint64_t)v62);
          uint64_t v41 = v49;
          uint64_t v62 = v43;
        }
        uint64_t v42 = (char *)v62;
        v62[2] = v40 + 1;
        uint64_t v17 = v61;
        v36(&v42[((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(void *)(v41 + 72) * v40], v60, v61);
        uint64_t v5 = v48;
      }
      uint64_t v24 = v63 + 1;
      if (v63 + 1 == v59)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v44 = v62;
        goto LABEL_25;
      }
    }
    uint64_t v26 = v52 + v51 * v24;
    unint64_t v27 = a2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v28 = *(void *)(v6 + 72);
    uint64_t v29 = a2;
    uint64_t v30 = *(void (**)(uint64_t, unint64_t, uint64_t))(v6 + 16);
    uint64_t v31 = v29;
    swift_bridgeObjectRetain();
    uint64_t v32 = (uint64_t)v57;
    while (1)
    {
      v30(v32, v27, v5);
      uint64_t v33 = v67;
      char v34 = sub_10017BB34(v32, v26, v31, v65);
      if (v33) {
        break;
      }
      uint64_t v67 = 0;
      if (v34)
      {
        a2 = v31;
        swift_bridgeObjectRelease();
        uint64_t v13 = v54;
        (*v47)(v54, v32, v5);
        uint64_t v35 = 0;
        uint64_t v10 = v55;
        uint64_t v6 = v56;
        goto LABEL_11;
      }
      (*v66)((char *)v32, v5);
      v27 += v28;
      if (!--v25)
      {
        a2 = v31;
        swift_bridgeObjectRelease();
        uint64_t v35 = 1;
        uint64_t v10 = v55;
        uint64_t v6 = v56;
        uint64_t v13 = v54;
LABEL_11:
        uint64_t v16 = v53;
        uint64_t v17 = v61;
        goto LABEL_12;
      }
    }
    (*v66)((char *)v32, v5);
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = _swiftEmptyArrayStorage;
LABEL_25:
    swift_bridgeObjectRelease();
    return (uint64_t)v44;
  }
  return result;
}

void sub_1001D2EE0()
{
  sub_10010977C();
  sub_1001858C8();
  uint64_t v0 = sub_10017DF08(&qword_100E639E8);
  uint64_t v1 = sub_100109308(v0);
  __chkstk_darwin(v1);
  sub_10017C704();
  type metadata accessor for Location();
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_1001A148C();
  if (v3)
  {
    sub_100164EA0();
    sub_100166AB4();
    swift_bridgeObjectRelease();
    sub_100181DE8();
  }
  else
  {
    uint64_t v4 = sub_1001A1C10();
    v5(v4);
    sub_1001888A0();
    swift_bridgeObjectRelease();
  }
  sub_100162714();
}

void sub_1001D301C()
{
  sub_10010977C();
  sub_1001858C8();
  uint64_t v0 = sub_10017DF08(&qword_100EAC4A0);
  uint64_t v1 = sub_100109308(v0);
  __chkstk_darwin(v1);
  sub_10017C704();
  type metadata accessor for LocationModel();
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_1001A148C();
  if (v3)
  {
    sub_100164EA0();
    sub_100166AB4();
    swift_bridgeObjectRelease();
    sub_100181DE8();
  }
  else
  {
    uint64_t v4 = sub_1001A1C10();
    v5(v4);
    sub_1001888A0();
    swift_bridgeObjectRelease();
  }
  sub_100162714();
}

uint64_t sub_1001D3158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v5 = type metadata accessor for CurrentLocation();
  __chkstk_darwin(v5 - 8);
  uint64_t v49 = (uint64_t)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LocationModel();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v41 - v12;
  sub_10017DF08(&qword_100EAC4A0);
  __chkstk_darwin(a1);
  uint64_t v15 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v41 - v18;
  uint64_t v20 = *(void *)(a1 + 16);
  if (v20)
  {
    uint64_t v42 = (char *)v41 - v18;
    uint64_t v43 = v15;
    uint64_t v44 = v8;
    uint64_t v45 = a3;
    uint64_t v21 = v8 + 16;
    uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v23 = v17 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v24 = (uint64_t (**)(char *, uint64_t))(v8 + 88);
    uint64_t v25 = enum case for LocationModel.current(_:);
    int v46 = enum case for LocationModel.saved(_:);
    uint64_t v51 = (void (**)(char *, uint64_t))(v8 + 96);
    uint64_t v52 = *(void *)(v8 + 72);
    uint64_t v53 = (void (**)(char *, uint64_t))(v8 + 8);
    v41[1] = v17;
    swift_bridgeObjectRetain();
    uint64_t v47 = v13;
    uint64_t v48 = v7;
    do
    {
      v22(v13, v23, v7);
      v22(v10, (uint64_t)v13, v7);
      int v26 = (*v24)(v10, v7);
      if (v26 == v25)
      {
        (*v51)(v10, v7);
        uint64_t v27 = v21;
        uint64_t v28 = v22;
        uint64_t v29 = &v10[*(int *)(sub_10017DF08(&qword_100E63878) + 48)];
        uint64_t v30 = v25;
        uint64_t v31 = v24;
        uint64_t v32 = v49;
        sub_1001D113C((uint64_t)v10, v49);
        char v33 = static CurrentLocation.== infix(_:_:)();
        uint64_t v34 = v32;
        uint64_t v24 = v31;
        uint64_t v25 = v30;
        sub_1001D1298(v34, (void (*)(void))&type metadata accessor for CurrentLocation);
        uint64_t v35 = (uint64_t)v29;
        uint64_t v22 = v28;
        uint64_t v21 = v27;
        uint64_t v13 = v47;
        uint64_t v7 = v48;
        sub_100178110(v35, &qword_100E63508);
        if (v33)
        {
          swift_bridgeObjectRelease();
          uint64_t v8 = v44;
          uint64_t v19 = v42;
          (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v42, v13, v7);
          uint64_t v37 = 0;
          a3 = v45;
          uint64_t v15 = v43;
          goto LABEL_12;
        }
      }
      else if (v26 == v46)
      {
        (*v51)(v10, v7);
        uint64_t v36 = sub_10017DF08(&qword_100E63870);
        sub_100178110((uint64_t)&v10[*(int *)(v36 + 48)], &qword_100E63508);
        sub_1001D1298((uint64_t)v10, (void (*)(void))&type metadata accessor for SavedLocation);
      }
      else
      {
        (*v53)(v10, v7);
      }
      (*v53)(v13, v7);
      v23 += v52;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
    uint64_t v37 = 1;
    uint64_t v8 = v44;
    a3 = v45;
    uint64_t v19 = v42;
    uint64_t v15 = v43;
  }
  else
  {
    uint64_t v37 = 1;
  }
LABEL_12:
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, v37, 1, v7);
  uint64_t v38 = a3 + *(int *)(sub_10017DF08(&qword_100E63878) + 48);
  sub_10018D0C0(v50, a3);
  sub_10006DF38((uint64_t)v19, (uint64_t)v15, &qword_100EAC4A0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v7) == 1)
  {
    sub_100178110((uint64_t)v19, &qword_100EAC4A0);
    sub_100178110((uint64_t)v15, &qword_100EAC4A0);
    uint64_t v39 = type metadata accessor for LocationOfInterest();
    _s7Weather24LocationCompositionStateOwst_0(v38, 1, 1, v39);
  }
  else
  {
    LocationModel.locationOfInterest.getter();
    sub_100178110((uint64_t)v19, &qword_100EAC4A0);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v15, v7);
  }
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(v8 + 104))(a3, enum case for LocationModel.current(_:), v7);
}

void *sub_1001D3688(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = type metadata accessor for ListViewAction();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2) {
        goto LABEL_14;
      }
      if (EnumCaseMultiPayload) {
        goto LABEL_24;
      }
      uint64_t v8 = type metadata accessor for LocationModel();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = sub_10017DF08(&qword_100E6F640);
      *((unsigned char *)a1 + *(int *)(v9 + 48)) = *((unsigned char *)a2 + *(int *)(v9 + 48));
      goto LABEL_33;
    case 1u:
      uint64_t v6 = type metadata accessor for LocationViewerViewAction();
      int v10 = swift_getEnumCaseMultiPayload();
      if (v10 == 2)
      {
LABEL_14:
        uint64_t v18 = type metadata accessor for Location.Identifier();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
      }
      else if (v10 == 1)
      {
        uint64_t v19 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
      }
      else
      {
        if (v10)
        {
LABEL_24:
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
          goto LABEL_34;
        }
        uint64_t v11 = type metadata accessor for LocationModel();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      }
LABEL_33:
      swift_storeEnumTagMultiPayload();
LABEL_34:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 3u:
      uint64_t v6 = type metadata accessor for SearchViewAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v12 = type metadata accessor for CodableError();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
          goto LABEL_33;
        case 1u:
          *a1 = *a2;
          swift_bridgeObjectRetain();
          goto LABEL_33;
        case 2u:
          uint64_t v22 = a2[1];
          *a1 = *a2;
          a1[1] = v22;
          swift_bridgeObjectRetain();
          goto LABEL_33;
        case 3u:
        case 6u:
          uint64_t v23 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
          goto LABEL_33;
        case 4u:
          uint64_t v24 = type metadata accessor for LocationOfInterest();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
          goto LABEL_33;
        case 5u:
          int v26 = (void *)*a2;
          uint64_t v25 = a2[1];
          *a1 = *a2;
          a1[1] = v25;
          uint64_t v27 = a2[3];
          a1[2] = a2[2];
          a1[3] = v27;
          uint64_t v28 = a2[5];
          a1[4] = a2[4];
          a1[5] = v28;
          a1[6] = a2[6];
          uint64_t v29 = type metadata accessor for SearchLocation();
          uint64_t v30 = *(int *)(v29 + 32);
          __dst = (char *)a1 + v30;
          uint64_t v40 = v29;
          uint64_t v31 = (char *)a2 + v30;
          uint64_t v32 = type metadata accessor for Location();
          id v33 = v26;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v32))
          {
            uint64_t v34 = sub_10017DF08(&qword_100E639E8);
            memcpy(__dst, v31, *(void *)(*(void *)(v34 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(__dst, v31, v32);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v32);
          }
          uint64_t v35 = *(int *)(v40 + 36);
          uint64_t v36 = (char *)a1 + v35;
          uint64_t v37 = (char *)a2 + v35;
          *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
          v36[16] = v37[16];
          goto LABEL_33;
        default:
          goto LABEL_24;
      }
    case 4u:
      uint64_t v13 = type metadata accessor for InteractiveMapViewAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 4u:
          uint64_t v21 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
          goto LABEL_22;
        case 3u:
          uint64_t v20 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
LABEL_22:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
          break;
      }
      goto LABEL_34;
    case 5u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      *((unsigned char *)a1 + 17) = *((unsigned char *)a2 + 17);
      *((unsigned char *)a1 + 18) = *((unsigned char *)a2 + 18);
      uint64_t v14 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      goto LABEL_34;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
  }
}

uint64_t sub_1001D3EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t a6, uint64_t (*a7)(char *))
{
  uint64_t v8 = a5(0);
  __chkstk_darwin(v8 - 8);
  int v10 = (char *)&v12 - v9;
  sub_1001EC0BC();
  return a7(v10);
}

uint64_t sub_1001D3FB0()
{
  return type metadata accessor for WeatherDataOverrides();
}

uint64_t sub_1001D3FE4()
{
  return 0;
}

uint64_t sub_1001D4004(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5 = *(void *)(v3 + 648);
  return sub_10014FF5C(a1, v5, a3);
}

uint64_t sub_1001D402C()
{
  return v0;
}

void sub_1001D404C(float a1)
{
  *uint64_t v1 = a1;
}

char *sub_1001D4060@<X0>(unint64_t a1@<X8>)
{
  return sub_1007F3B50((char *)(a1 > 1), v1, 1);
}

void sub_1001D4084()
{
  *(void *)(v1 - 608) = v0;
}

uint64_t sub_1001D4090()
{
  return type metadata accessor for WeatherDataOverrides();
}

void sub_1001D40B0()
{
  *uint64_t v2 = v0;
  v2[1] = v1;
}

uint64_t sub_1001D40C4()
{
  return sub_1000C13A0(v0);
}

uint64_t sub_1001D40E8(uint64_t result)
{
  *(void *)uint64_t v1 = result;
  *(unsigned char *)(v1 + 8) = 0;
  return result;
}

uint64_t sub_1001D4110()
{
  return v0;
}

uint64_t sub_1001D411C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E790D8, type metadata accessor for ConditionPickerMenuViewModel.Row, (void (*)(void))type metadata accessor for ConditionPickerMenuViewModel.Row);
}

uint64_t sub_1001D4164(uint64_t a1, uint64_t a2)
{
  return sub_10018BE08(a1, a2);
}

uint64_t sub_1001D4180(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 32), *(float64x2_t *)(a2 + 32)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 48), *(float64x2_t *)(a2 + 48)))), 0xFuLL))) & 1) != 0&& *(double *)(a1 + 64) == *(double *)(a2 + 64))
  {
    uint64_t v5 = (float64x2_t *)(a2 + 104);
    uint64_t v6 = (double *)(a1 + 104);
    do
    {
      uint64_t result = --v2 == 0;
      if (!v2) {
        break;
      }
      if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v6 - 4), v5[-2]), (int32x4_t)vceqq_f64(*(float64x2_t *)(v6 - 2), v5[-1]))), 0xFuLL))) & 1) == 0)break; {
      double v7 = v5->f64[0];
      }
      uint64_t v5 = (float64x2_t *)((char *)v5 + 40);
      double v8 = v7;
      double v9 = *v6;
      v6 += 5;
    }
    while (v9 == v8);
  }
  return result;
}

uint64_t sub_1001D4240@<X0>(uint64_t a1@<X0>, Swift::String *a2@<X8>)
{
  uint64_t v82 = a2;
  type metadata accessor for WeatherFormatPlaceholder();
  sub_10017C83C();
  uint64_t v80 = v5;
  uint64_t v81 = v4;
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v79 = v7 - v6;
  type metadata accessor for WeatherFormatScaling();
  sub_10017C83C();
  uint64_t v72 = v9;
  uint64_t v73 = v8;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_10017DF08(&qword_100E63730);
  __chkstk_darwin(v13 - 8);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v69 = type metadata accessor for NSUnitLength.WeatherFormatUsage();
  sub_10017C83C();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  sub_1001626E0();
  uint64_t v22 = v21 - v20;
  uint64_t v71 = type metadata accessor for NSUnitLength.BaseWeatherFormatStyle();
  sub_10017C83C();
  uint64_t v84 = v23;
  __chkstk_darwin(v24);
  sub_100162EF8();
  uint64_t v70 = v25;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v68 - v27;
  uint64_t v83 = sub_10017DF08(&qword_100E6B648);
  sub_10017C83C();
  uint64_t v85 = v29;
  __chkstk_darwin(v30);
  sub_10011C760();
  uint64_t v68 = v2;
  uint64_t v31 = type metadata accessor for CurrentWeather();
  uint64_t v74 = v31;
  sub_10017C83C();
  uint64_t v33 = v32;
  __chkstk_darwin(v34);
  sub_100162EF8();
  uint64_t v78 = v35;
  __chkstk_darwin(v36);
  uint64_t v38 = (char *)&v68 - v37;
  uint64_t v77 = a1 + *(int *)(type metadata accessor for WeatherData(0) + 24);
  WeatherDataModel.currentWeather.getter();
  CurrentWeather.visibility.getter();
  uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
  uint64_t v75 = v33 + 8;
  uint64_t v76 = v39;
  v39((uint64_t)v38, v31);
  uint64_t v40 = v69;
  (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v22, enum case for NSUnitLength.WeatherFormatUsage.visibility(_:), v69);
  uint64_t v41 = type metadata accessor for Locale();
  _s7Weather24LocationCompositionStateOwst_0(v16, 1, 1, v41);
  static Set<>.full.getter();
  uint64_t v43 = v72;
  uint64_t v42 = v73;
  v72[13](v12, enum case for WeatherFormatScaling.automatic(_:), v73);
  static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:locale:)();
  swift_bridgeObjectRelease();
  ((void (*)(uint64_t, uint64_t))v43[1])(v12, v42);
  sub_10012B8A0(v16);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v22, v40);
  uint64_t v44 = v70;
  NSUnitLength.BaseWeatherFormatStyle.accessible.getter();
  uint64_t v45 = *(void (**)(char *, uint64_t))(v84 + 8);
  v84 += 8;
  uint64_t v46 = v71;
  v45(v28, v71);
  uint64_t v48 = v79;
  uint64_t v47 = v80;
  uint64_t v49 = v81;
  (*(void (**)(uint64_t, void, uint64_t))(v80 + 104))(v79, enum case for WeatherFormatPlaceholder.none(_:), v81);
  type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  sub_1001D482C();
  uint64_t v50 = v83;
  uint64_t v51 = v68;
  uint64_t v52 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v72 = v53;
  uint64_t v73 = v52;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v48, v49);
  v45(v44, v46);
  uint64_t v84 = *(void *)(v85 + 8);
  v85 += 8;
  uint64_t v54 = v51;
  ((void (*)(uint64_t, uint64_t))v84)(v51, v50);
  id v55 = [self mainBundle];
  v86._object = (void *)0x8000000100CB48D0;
  v56._uint64_t countAndFlagsBits = 0x696C696269736956;
  v56._object = (void *)0xEA00000000007974;
  v57._uint64_t countAndFlagsBits = 0;
  v57._object = (void *)0xE000000000000000;
  v86._uint64_t countAndFlagsBits = 0xD00000000000003CLL;
  Swift::String v58 = NSLocalizedString(_:tableName:bundle:value:comment:)(v56, (Swift::String_optional)0, (NSBundle)v55, v57, v86);

  WeatherDataModel.currentWeather.getter();
  CurrentWeather.visibility.getter();
  uint64_t v59 = v74;
  uint64_t v60 = v76;
  v76((uint64_t)v38, v74);
  uint64_t v61 = v78;
  WeatherDataModel.currentWeather.getter();
  uint64_t v62 = StringBuilder.makeString(for:data:formattedForAccessibility:)();
  uint64_t v64 = v63;
  v60(v61, v59);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v84)(v54, v83);
  uint64_t v66 = v82;
  *uint64_t v82 = v58;
  v66[1]._uint64_t countAndFlagsBits = v62;
  v66[1]._object = v64;
  uint64_t v67 = v72;
  v66[2]._uint64_t countAndFlagsBits = v73;
  v66[2]._object = v67;
  return result;
}

unint64_t sub_1001D482C()
{
  unint64_t result = qword_100E6B658;
  if (!qword_100E6B658)
  {
    type metadata accessor for NSUnitLength.BaseWeatherFormatStyle();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B658);
  }
  return result;
}

uint64_t sub_1001D487C(long double a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E6BF38);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 0.0) {
    a1 = remainder(a1, 360.0) + 360.0;
  }
  double v6 = floor(fmod(floor(a1 / 11.25) + 1.0, 32.0) * 0.5);
  if (v6 == 0.0)
  {
    uint64_t v7 = (objc_class *)[self mainBundle];
    unint64_t v8 = 0xD000000000000036;
    unint64_t v26 = 0x8000000100CB3130;
    uint64_t v9 = 1953656654;
LABEL_5:
    uint64_t v10 = v9 & 0xFFFF0000FFFFFFFFLL | 0x6800000000;
    unint64_t v11 = 0xE500000000000000;
LABEL_9:
    v13.super.Class isa = v7;
    uint64_t v14 = 0;
    unint64_t v15 = 0xE000000000000000;
LABEL_10:
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v10, (Swift::String_optional)0, v13, *(Swift::String *)&v14, *(Swift::String *)&v8)._countAndFlagsBits;

    return countAndFlagsBits;
  }
  if (v6 == 1.0)
  {
    uint64_t v7 = (objc_class *)[self mainBundle];
    unint64_t v8 = 0xD000000000000043;
    unint64_t v26 = 0x8000000100CB30E0;
    uint64_t v10 = 0x6F4E206874726F4ELL;
    uint64_t v12 = 0x736165687472;
LABEL_8:
    unint64_t v11 = v12 & 0xFFFFFFFFFFFFLL | 0xEF74000000000000;
    goto LABEL_9;
  }
  if (v6 == 2.0)
  {
    uint64_t v7 = (objc_class *)[self mainBundle];
    unint64_t v26 = 0x8000000100CB30A0;
    unsigned int v18 = 1953656654;
LABEL_13:
    uint64_t v10 = v18 | 0x7361656800000000;
LABEL_14:
    unint64_t v11 = 0xE900000000000074;
    v13.super.Class isa = v7;
    uint64_t v14 = 0;
    unint64_t v15 = 0xE000000000000000;
    unint64_t v8 = 0xD00000000000003ALL;
    goto LABEL_10;
  }
  if (v6 == 3.0)
  {
    uint64_t v7 = (objc_class *)[self mainBundle];
    unint64_t v8 = 0xD000000000000042;
    unint64_t v26 = 0x8000000100CB3050;
    uint64_t v10 = 0x726F4E2074736145;
LABEL_17:
    unsigned int v19 = 1634035828;
LABEL_18:
    unint64_t v11 = v19 | 0xEE00747300000000;
    goto LABEL_9;
  }
  if (v6 == 4.0)
  {
    uint64_t v7 = (objc_class *)[self mainBundle];
    unint64_t v8 = 0xD000000000000035;
    unint64_t v26 = 0x8000000100CB3010;
    uint64_t v10 = 1953718597;
LABEL_21:
    unint64_t v11 = 0xE400000000000000;
    goto LABEL_9;
  }
  if (v6 == 5.0)
  {
    uint64_t v7 = (objc_class *)[self mainBundle];
    unint64_t v8 = 0xD000000000000042;
    unint64_t v26 = 0x8000000100CB2FC0;
    uint64_t v10 = 0x756F532074736145;
    goto LABEL_17;
  }
  if (v6 == 6.0)
  {
    uint64_t v7 = (objc_class *)[self mainBundle];
    unint64_t v26 = 0x8000000100CB2F80;
    unsigned int v18 = 1953853267;
    goto LABEL_13;
  }
  if (v6 == 7.0)
  {
    uint64_t v7 = (objc_class *)[self mainBundle];
    unint64_t v8 = 0xD000000000000043;
    unint64_t v11 = 0xEF74736165687475;
    uint64_t v20 = "Accessibility description for south by southeast cardinal direction";
LABEL_28:
    unint64_t v26 = (unint64_t)(v20 - 32) | 0x8000000000000000;
    uint64_t v10 = 0x6F53206874756F53;
    goto LABEL_9;
  }
  if (v6 == 8.0)
  {
    uint64_t v7 = (objc_class *)[self mainBundle];
    unint64_t v8 = 0xD000000000000036;
    unint64_t v26 = 0x8000000100CB2EF0;
    uint64_t v9 = 1953853267;
    goto LABEL_5;
  }
  if (v6 == 9.0)
  {
    uint64_t v7 = (objc_class *)[self mainBundle];
    unint64_t v8 = 0xD000000000000043;
    unint64_t v11 = 0xEF74736577687475;
    uint64_t v20 = "Accessibility description for south by southwest cardinal direction";
    goto LABEL_28;
  }
  if (v6 == 10.0)
  {
    uint64_t v7 = (objc_class *)[self mainBundle];
    unint64_t v26 = 0x8000000100CB2E60;
    unsigned int v21 = 1953853267;
LABEL_35:
    uint64_t v10 = v21 | 0x7365776800000000;
    goto LABEL_14;
  }
  if (v6 == 11.0)
  {
    uint64_t v7 = (objc_class *)[self mainBundle];
    uint64_t v10 = 0x756F532074736557;
    unint64_t v8 = 0xD000000000000042;
    uint64_t v22 = "Accessibility description for west by southwest cardinal direction";
LABEL_38:
    unint64_t v26 = (unint64_t)(v22 - 32) | 0x8000000000000000;
    unsigned int v19 = 1702324340;
    goto LABEL_18;
  }
  if (v6 == 12.0)
  {
    uint64_t v7 = (objc_class *)[self mainBundle];
    uint64_t v10 = 1953719639;
    unint64_t v8 = 0xD000000000000035;
    unint64_t v26 = 0x8000000100CB2DD0;
    goto LABEL_21;
  }
  if (v6 == 13.0)
  {
    uint64_t v7 = (objc_class *)[self mainBundle];
    uint64_t v10 = 0x726F4E2074736557;
    unint64_t v8 = 0xD000000000000042;
    uint64_t v22 = "Accessibility description for west by northwest cardinal direction";
    goto LABEL_38;
  }
  if (v6 == 14.0)
  {
    uint64_t v7 = (objc_class *)[self mainBundle];
    unint64_t v26 = 0x8000000100CB2D40;
    unsigned int v21 = 1953656654;
    goto LABEL_35;
  }
  if (v6 == 15.0)
  {
    uint64_t v7 = (objc_class *)[self mainBundle];
    unint64_t v8 = 0xD000000000000043;
    unint64_t v26 = 0x8000000100CB2CF0;
    uint64_t v10 = 0x6F4E206874726F4ELL;
    uint64_t v12 = 0x736577687472;
    goto LABEL_8;
  }
  id v23 = [objc_allocWithZone((Class)NSMeasurementFormatter) init];
  [v23 setUnitStyle:3];
  [v23 setUnitOptions:1];
  id v24 = [self degrees];
  sub_1001C4428();
  Measurement.init(value:unit:)();
  uint64_t v25 = NSMeasurementFormatter.string<A>(from:)();

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v25;
}

uint64_t sub_1001D50D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = type metadata accessor for ConditionPickerMenuViewModel.Row(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v70 = (uint64_t *)(v11 - v10);
  uint64_t v67 = sub_10017DF08(&qword_100E790D0);
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_10016278C();
  uint64_t v66 = v13 - v14;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v65 = (unint64_t *)((char *)&v55 - v17);
  __chkstk_darwin(v16);
  uint64_t v71 = (uint64_t *)((char *)&v55 - v18);
  *a4 = a1;
  a4[1] = a2;
  uint64_t v56 = type metadata accessor for ConditionPickerMenuViewModel(0);
  uint64_t v57 = a3;
  uint64_t v19 = *(int *)(v56 + 20);
  Swift::String v58 = a4;
  sub_1000ACA10(a3, (uint64_t)a4 + v19);
  sub_10017DF08(&qword_100E790D8);
  uint64_t v20 = *(void *)(v9 + 72);
  unint64_t v21 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v63 = v20;
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_100C251B0;
  unint64_t v62 = v21;
  id v23 = (void *)(v22 + v21);
  uint64_t v64 = v8;
  uint64_t v24 = v22 + v21 + *(int *)(v8 + 20);
  uint64_t v25 = type metadata accessor for WeatherCondition();
  _s7Weather24LocationCompositionStateOwst_0(v24, 1, 1, v25);
  *id v23 = 0x302D776F72;
  v23[1] = 0xE500000000000000;
  uint64_t v26 = static WeatherCondition.allCases.getter();
  uint64_t v75 = _swiftEmptyArrayStorage;
  sub_1001D56AC();
  uint64_t v27 = (uint64_t)v75;
  uint64_t v28 = *(void *)(v26 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v61 = v28;
  uint64_t v55 = v22;
  if (v28)
  {
    unint64_t v30 = 0;
    uint64_t v59 = v26;
    uint64_t v60 = v25 - 8;
    uint64_t v32 = v66;
    uint64_t v31 = v67;
    uint64_t v33 = v71;
    while (v30 < *(void *)(v26 + 16))
    {
      uint64_t v34 = *(void *)(v25 - 8);
      uint64_t v35 = v34;
      unint64_t v36 = v26
          + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))
          + *(void *)(v34 + 72) * v30;
      uint64_t v37 = v32 + *(int *)(v31 + 48);
      uint64_t v38 = *(void (**)(uint64_t, unint64_t, uint64_t))(v34 + 16);
      v38(v37, v36, v25);
      uint64_t v39 = (uint64_t)v65;
      uint64_t v40 = (char *)v65 + *(int *)(v31 + 48);
      unint64_t v69 = v30;
      *uint64_t v65 = v30;
      uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 32);
      v41(v40, v37, v25);
      uint64_t result = sub_1001D55C0(v39, (uint64_t)v33);
      uint64_t v73 = 762802034;
      unint64_t v74 = 0xE400000000000000;
      if (__OFADD__(*v33, 1)) {
        goto LABEL_12;
      }
      uint64_t v72 = *v33 + 1;
      v42._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v42);
      swift_bridgeObjectRelease();
      uint64_t v43 = v31;
      uint64_t v44 = v73;
      unint64_t v68 = v74;
      uint64_t v45 = v70;
      uint64_t v46 = (uint64_t)v70 + *(int *)(v64 + 20);
      uint64_t v47 = *(int *)(v43 + 48);
      uint64_t v48 = v32 + v47;
      v38(v32 + v47, (unint64_t)v71 + v47, v25);
      v41((char *)v46, v48, v25);
      _s7Weather24LocationCompositionStateOwst_0(v46, 0, 1, v25);
      unint64_t v49 = v68;
      *uint64_t v45 = v44;
      v45[1] = v49;
      uint64_t v33 = v71;
      sub_1001781AC((uint64_t)v71, &qword_100E790D0);
      uint64_t v27 = (uint64_t)v75;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001D56AC();
        uint64_t v27 = (uint64_t)v75;
      }
      unint64_t v50 = *(void *)(v27 + 16);
      uint64_t v32 = v66;
      uint64_t v31 = v67;
      if (v50 >= *(void *)(v27 + 24) >> 1)
      {
        sub_1001D56AC();
        uint64_t v27 = (uint64_t)v75;
      }
      uint64_t v51 = (uint64_t)v70;
      unint64_t v52 = v69 + 1;
      *(void *)(v27 + 16) = v50 + 1;
      uint64_t v53 = v27 + v62 + v50 * v63;
      unint64_t v30 = v52;
      uint64_t result = sub_1001D5628(v51, v53);
      uint64_t v26 = v59;
      if (v61 == v30) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease_n();
    uint64_t v73 = v55;
    sub_1001D5710(v27);
    uint64_t v54 = v73;
    uint64_t result = sub_1001781AC(v57, &qword_100E63A50);
    *(void *)((char *)v58 + *(int *)(v56 + 24)) = v54;
  }
  return result;
}

uint64_t sub_1001D55C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E790D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001D5628(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConditionPickerMenuViewModel.Row(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ConditionPickerMenuViewModel.Row(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E79138);
}

void sub_1001D56AC()
{
  sub_10018A6B4();
  *uint64_t v0 = v1;
}

void sub_1001D5710(uint64_t a1)
{
}

void sub_1001D5750()
{
  sub_10010977C();
  char v1 = v0;
  uint64_t v3 = v2;
  type metadata accessor for ObservableResolver();
  sub_10013509C((uint64_t)&qword_100E70FD0);
  uint64_t v4 = EnvironmentObject.init()();
  uint64_t v6 = v5;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v8 = swift_getKeyPath();
  uint64_t v9 = swift_getKeyPath();
  uint64_t v10 = swift_getKeyPath();
  uint64_t v11 = swift_getKeyPath();
  *(void *)uint64_t v3 = v4;
  *(void *)(v3 + 8) = v6;
  *(void *)(v3 + 16) = KeyPath;
  *(unsigned char *)(v3 + 24) = 0;
  *(void *)(v3 + 32) = v8;
  *(unsigned char *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = v9;
  *(void *)(v3 + 56) = 0;
  *(unsigned char *)(v3 + 64) = 0;
  *(void *)(v3 + 72) = v10;
  *(unsigned char *)(v3 + 80) = 0;
  *(void *)(v3 + 88) = v11;
  *(unsigned char *)(v3 + 96) = 0;
  *(unsigned char *)(v3 + 97) = v1;
  sub_100162714();
}

uint64_t sub_1001D5854()
{
  return sub_1001D5874() & 1;
}

uint64_t sub_1001D5874()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  DayWeather.date.getter();
  char v4 = Calendar.isDateInToday(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4 & 1;
}

uint64_t sub_1001D5960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char v164 = (char *)a1;
  uint64_t v147 = a3;
  uint64_t v4 = sub_10017DF08(&qword_100E63730);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100109314();
  v131[0] = v6;
  sub_100129064();
  uint64_t v134 = type metadata accessor for Locale.Language();
  sub_100179C0C();
  uint64_t v133 = v7;
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v132 = v9;
  sub_100129064();
  uint64_t v150 = type metadata accessor for Locale();
  sub_100179C0C();
  v131[2] = v10;
  __chkstk_darwin(v11);
  sub_100109314();
  v131[1] = v12;
  sub_100129064();
  uint64_t v167 = type metadata accessor for WeatherFormatPlaceholder();
  sub_100179C0C();
  uint64_t v170 = v13;
  __chkstk_darwin(v14);
  sub_100109314();
  uint64_t v151 = v15;
  sub_100129064();
  uint64_t v152 = type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle();
  sub_100179C0C();
  uint64_t v166 = v16;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v144 = v18;
  sub_1001626D4();
  __chkstk_darwin(v19);
  sub_100128F8C();
  uint64_t v156 = v20;
  sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  uint64_t v168 = v21;
  unint64_t v169 = v22;
  __chkstk_darwin(v21);
  sub_100109314();
  uint64_t v163 = v23;
  uint64_t v157 = type metadata accessor for CurrentWeather();
  sub_100179C0C();
  uint64_t v165 = v24;
  __chkstk_darwin(v25);
  sub_1001626E0();
  uint64_t v28 = v27 - v26;
  sub_10017DF08(&qword_100E66CA0);
  sub_100179C0C();
  __chkstk_darwin(v29);
  sub_1001626E0();
  uint64_t v30 = sub_10017DF08(&qword_100E6B6C8);
  uint64_t v31 = sub_100109308(v30);
  __chkstk_darwin(v31);
  sub_100162EF8();
  uint64_t v140 = v32;
  sub_1001626D4();
  __chkstk_darwin(v33);
  sub_100109770();
  uint64_t v135 = v34;
  sub_1001626D4();
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)v131 - v36;
  type metadata accessor for TimeZone();
  sub_100179C0C();
  __chkstk_darwin(v38);
  sub_1001626E0();
  uint64_t v143 = type metadata accessor for Calendar();
  sub_100179C0C();
  uint64_t v142 = v39;
  __chkstk_darwin(v40);
  sub_1001626E0();
  uint64_t v43 = v42 - v41;
  uint64_t v146 = a2;
  Location.timeZone.getter();
  static Calendar.currentCalendar(with:)();
  sub_100164944();
  v44();
  uint64_t v45 = v170;
  uint64_t v46 = (uint64_t)&v164[*(int *)(type metadata accessor for WeatherData(0) + 24)];
  WeatherDataModel.dailyForecast.getter();
  uint64_t v141 = v43;
  uint64_t v171 = v43;
  uint64_t v47 = v151;
  char v164 = v37;
  sub_10019AB54();
  sub_10017E6A0();
  v48();
  uint64_t v149 = v46;
  WeatherDataModel.currentWeather.getter();
  uint64_t v138 = CurrentWeather.conditionDescription.getter();
  uint64_t v139 = v49;
  uint64_t v51 = v165 + 8;
  unint64_t v50 = *(void (**)(uint64_t, uint64_t))(v165 + 8);
  uint64_t v52 = v157;
  v50(v28, v157);
  char v148 = v50;
  uint64_t v165 = v51;
  WeatherDataModel.currentWeather.getter();
  CurrentWeather.apparentTemperature.getter();
  v50(v28, v52);
  static WeatherFormatStyle<>.weather.getter();
  uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 104);
  unsigned int v155 = enum case for WeatherFormatPlaceholder.none(_:);
  uint64_t v154 = v45 + 104;
  uint64_t v161 = v53;
  ((void (*)(uint64_t))v53)(v47);
  uint64_t v160 = type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  uint64_t v159 = sub_100186F78((unint64_t *)&qword_100E6BF60, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
  uint64_t v137 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  unint64_t v136 = v54;
  swift_release();
  uint64_t v55 = *(void (**)(void))(v45 + 8);
  uint64_t v170 = v45 + 8;
  char v153 = v55;
  sub_100164944();
  v56();
  uint64_t v57 = v166 + 8;
  sub_1001A3510();
  uint64_t v162 = v58;
  sub_100164944();
  v59();
  uint64_t v60 = *(void (**)(uint64_t, uint64_t))(v169 + 8);
  v169 += 8;
  uint64_t v158 = v60;
  sub_100127BA4();
  v61();
  static Locale.current.getter();
  Locale.language.getter();
  uint64_t v62 = v150;
  sub_100162F0C();
  v63();
  LOBYTE(v52) = Locale.Language.prefersFullTemperatureScale.getter();
  sub_100162F0C();
  v64();
  WeatherDataModel.currentWeather.getter();
  CurrentWeather.temperature.getter();
  uint64_t v132 = v28;
  sub_100162F0C();
  v65();
  uint64_t v166 = v57;
  if (v52)
  {
    static Set<>.value.getter();
    uint64_t v66 = v131[0];
    _s7Weather24LocationCompositionStateOwst_0(v131[0], 1, 1, v62);
    static WeatherFormatStyle<>.weather(_:locale:)();
    swift_bridgeObjectRelease();
    sub_100178110(v66, &qword_100E63730);
    uint64_t v67 = v151;
    v161(v151, v155, v167);
    static UnitManager.standard.getter();
    uint64_t v68 = v163;
    uint64_t v69 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    sub_100185ED0(v69, v70);
    uint64_t v71 = v153;
    sub_100127BA4();
    v71();
    sub_1001A3510();
    sub_100127BA4();
    v72();
    sub_100162F0C();
    v73();
    WeatherDataModel.currentWeather.getter();
    CurrentWeather.temperature.getter();
    sub_100127BA4();
    v74();
    static Set<>.unit.getter();
    _s7Weather24LocationCompositionStateOwst_0(v66, 1, 1, v150);
    static WeatherFormatStyle<>.weather(_:locale:)();
    swift_bridgeObjectRelease();
    sub_100178110(v66, &qword_100E63730);
    uint64_t v75 = v155;
    sub_10018572C();
    v76();
    static UnitManager.standard.getter();
    uint64_t v165 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    uint64_t v157 = v77;
    swift_release();
    sub_100127BA4();
    v71();
    sub_1001A3510();
    sub_100164944();
    v78();
    v158(v68, v168);
    uint64_t v79 = v67;
    uint64_t v80 = v75;
  }
  else
  {
    static WeatherFormatStyle<>.weather.getter();
    uint64_t v81 = v151;
    uint64_t v80 = v155;
    sub_10018572C();
    v82();
    static UnitManager.standard.getter();
    uint64_t v83 = v168;
    uint64_t v84 = v163;
    uint64_t v85 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    sub_100185ED0(v85, v86);
    sub_100127BA4();
    v87();
    sub_100164944();
    v88();
    v158(v84, v83);
    uint64_t v165 = 0;
    uint64_t v157 = 0;
    uint64_t v79 = v81;
  }
  uint64_t v89 = v135;
  sub_10006DF38((uint64_t)v164, v135, &qword_100E6B6C8);
  uint64_t v90 = type metadata accessor for DayWeather();
  sub_10012B520(v89, 1, v90);
  if (v91)
  {
    sub_100178110(v89, &qword_100E6B6C8);
    uint64_t v150 = 0;
    uint64_t v149 = 0xE000000000000000;
    uint64_t v101 = v140;
    uint64_t v94 = v162;
    unint64_t v100 = v158;
  }
  else
  {
    uint64_t v92 = v163;
    DayWeather.highTemperature.getter();
    sub_100162F0C();
    v93();
    static WeatherFormatStyle<>.weather.getter();
    NSUnitTemperature.BaseWeatherFormatStyle.secondary.getter();
    uint64_t v94 = v162;
    sub_100164944();
    v94();
    v161(v79, v80, v167);
    static UnitManager.standard.getter();
    uint64_t v95 = v168;
    uint64_t v150 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    uint64_t v149 = v96;
    swift_release();
    sub_100184DAC();
    uint64_t v98 = *(void (**)(void))(v97 - 256);
    sub_100127BA4();
    v98();
    sub_100164944();
    v94();
    uint64_t v99 = v95;
    unint64_t v100 = v158;
    v158(v92, v99);
    uint64_t v101 = v140;
  }
  sub_10006DF38((uint64_t)v164, v101, &qword_100E6B6C8);
  sub_10012B520(v101, 1, v90);
  if (v91)
  {
    sub_100178110(v101, &qword_100E6B6C8);
    uint64_t v107 = 0;
    unint64_t v109 = 0xE000000000000000;
  }
  else
  {
    uint64_t v102 = v163;
    DayWeather.lowTemperature.getter();
    sub_100162F0C();
    v103();
    static WeatherFormatStyle<>.weather.getter();
    NSUnitTemperature.BaseWeatherFormatStyle.secondary.getter();
    sub_100164944();
    v94();
    v161(v79, v155, v167);
    static UnitManager.standard.getter();
    uint64_t v104 = v102;
    uint64_t v105 = v168;
    uint64_t v106 = v100;
    uint64_t v107 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    unint64_t v109 = v108;
    swift_release();
    sub_100184DAC();
    sub_100127BA4();
    v110();
    sub_100127BA4();
    v111();
    v106(v104, v105);
  }
  unint64_t v169 = v109;
  uint64_t v170 = v107;
  uint64_t v129 = v107;
  uint64_t v130 = v109;
  uint64_t v112 = v134;
  uint64_t v113 = v133;
  uint64_t v114 = v137;
  unint64_t v115 = v136;
  uint64_t v116 = v150;
  uint64_t v117 = v149;
  uint64_t v118 = sub_1001D67AC(v134, v133, v137, v136, v138, v139, v150, v149, v129, v130);
  uint64_t v167 = v119;
  uint64_t v168 = v118;
  swift_bridgeObjectRelease();
  sub_1001B1E64((void *)(v145 + 176), *(void *)(v145 + 200));
  uint64_t v120 = dispatch thunk of LocationMetadataManagerType.availableAddress(for:)();
  uint64_t v122 = v121;
  sub_100178110((uint64_t)v164, &qword_100E6B6C8);
  sub_100162F0C();
  uint64_t result = v123();
  uint64_t v125 = v147;
  *uint64_t v147 = v112;
  v125[1] = v113;
  uint64_t v126 = v157;
  v125[2] = v165;
  v125[3] = v126;
  v125[4] = v114;
  v125[5] = v115;
  v125[6] = v116;
  v125[7] = v117;
  unint64_t v127 = v169;
  v125[8] = v170;
  v125[9] = v127;
  uint64_t v128 = v167;
  v125[10] = v168;
  v125[11] = v128;
  v125[12] = v120;
  v125[13] = v122;
  return result;
}

uint64_t sub_1001D678C()
{
  return Optional<A>.write(to:)();
}

uint64_t sub_1001D67AC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_10017DF08(&qword_100E66F98);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_100C251B0;
  *(void *)(v16 + 32) = a1;
  *(void *)(v16 + 40) = a2;
  uint64_t v17 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v17 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v17
    || (a3 == a1 ? (BOOL v18 = a4 == a2) : (BOOL v18 = 0), v18 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v34 = self;
    swift_bridgeObjectRetain();
    id v35 = [v34 mainBundle];
    v50._object = (void *)0x8000000100CBA190;
    v36._uint64_t countAndFlagsBits = 0x696C20736C656546;
    v36._object = (void *)0xED0000402520656BLL;
    v37._uint64_t countAndFlagsBits = 0;
    v37._object = (void *)0xE000000000000000;
    v50._uint64_t countAndFlagsBits = 0xD000000000000055;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v36, (Swift::String_optional)0, (NSBundle)v35, v37, v50);

    sub_10017DF08(&qword_100E64020);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_100C251B0;
    *(void *)(v38 + 56) = &type metadata for String;
    *(void *)(v38 + 64) = sub_10012B7C0();
    *(void *)(v38 + 32) = a3;
    *(void *)(v38 + 40) = a4;
    swift_bridgeObjectRetain();
    uint64_t v39 = String.init(format:_:)();
    uint64_t v41 = v40;
    swift_bridgeObjectRelease();
    unint64_t v42 = *(void *)(v16 + 16);
    if (v42 >= *(void *)(v16 + 24) >> 1)
    {
      sub_10012B78C();
      uint64_t v16 = v46;
    }
    *(void *)(v16 + 16) = v42 + 1;
    uint64_t v43 = v16 + 16 * v42;
    *(void *)(v43 + 32) = v39;
    *(void *)(v43 + 40) = v41;
  }
  unint64_t v19 = *(void *)(v16 + 16);
  unint64_t v20 = *(void *)(v16 + 24);
  swift_bridgeObjectRetain();
  if (v19 >= v20 >> 1)
  {
    sub_10012B78C();
    uint64_t v16 = v44;
  }
  *(void *)(v16 + 16) = v19 + 1;
  uint64_t v21 = v16 + 16 * v19;
  *(void *)(v21 + 32) = a5;
  *(void *)(v21 + 40) = a6;
  id v22 = [self mainBundle];
  v49._uint64_t countAndFlagsBits = 0xD00000000000005ALL;
  v49._object = (void *)0x8000000100CBA1F0;
  v23._uint64_t countAndFlagsBits = 0x2C40252068676948;
  v23._object = (void *)0xEF402520776F4C20;
  v24._uint64_t countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v23, (Swift::String_optional)0, (NSBundle)v22, v24, v49);

  sub_10017DF08(&qword_100E64020);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_100C25ED0;
  *(void *)(v25 + 56) = &type metadata for String;
  unint64_t v26 = sub_10012B7C0();
  *(void *)(v25 + 32) = a7;
  *(void *)(v25 + 40) = a8;
  *(void *)(v25 + 96) = &type metadata for String;
  *(void *)(v25 + 104) = v26;
  *(void *)(v25 + 64) = v26;
  *(void *)(v25 + 72) = a9;
  *(void *)(v25 + 80) = a10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v27 = String.init(format:_:)();
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  unint64_t v30 = *(void *)(v16 + 16);
  if (v30 >= *(void *)(v16 + 24) >> 1)
  {
    sub_10012B78C();
    uint64_t v16 = v45;
  }
  *(void *)(v16 + 16) = v30 + 1;
  uint64_t v31 = v16 + 16 * v30;
  *(void *)(v31 + 32) = v27;
  *(void *)(v31 + 40) = v29;
  sub_10017DF08(&qword_100E91BC0);
  sub_10012BB8C();
  uint64_t v32 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return v32;
}

uint64_t sub_1001D6B94@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v546 = a3;
  v553 = a1;
  uint64_t v548 = a4;
  type metadata accessor for LocationsConfiguration();
  sub_100179C0C();
  uint64_t v494 = v6;
  uint64_t v495 = v5;
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v493 = v7;
  sub_100129064();
  type metadata accessor for AppConfiguration();
  sub_100179C0C();
  uint64_t v491 = v9;
  uint64_t v492 = v8;
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v490 = v10;
  uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v487 = v13;
  uint64_t v14 = sub_10017DF08(&qword_100E6DC18);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_100109314();
  uint64_t v514 = v16;
  sub_100129064();
  uint64_t v17 = type metadata accessor for LocationCompositionState();
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  sub_100109314();
  v472 = v19;
  uint64_t v20 = sub_10017DF08(&qword_100E63508);
  uint64_t v21 = sub_100109308(v20);
  __chkstk_darwin(v21);
  sub_100162EF8();
  uint64_t v473 = v22;
  sub_1001626D4();
  __chkstk_darwin(v23);
  sub_100128F8C();
  uint64_t v471 = v24;
  uint64_t v25 = sub_10017DF08(&qword_100E6DC08);
  uint64_t v26 = sub_100109308(v25);
  __chkstk_darwin(v26);
  sub_100109314();
  uint64_t v507 = v27;
  sub_100129064();
  uint64_t v484 = type metadata accessor for LocationViewConfigurationInputs();
  sub_100162E4C();
  __chkstk_darwin(v28);
  sub_100109314();
  uint64_t v526 = v29;
  sub_100129064();
  uint64_t v483 = type metadata accessor for LocationContentState();
  sub_100162E4C();
  __chkstk_darwin(v30);
  sub_100109314();
  uint64_t v525 = v31;
  sub_100129064();
  uint64_t v32 = type metadata accessor for LearnMoreAttributorViewModel();
  uint64_t v33 = sub_100109308(v32);
  __chkstk_darwin(v33);
  sub_100109314();
  uint64_t v524 = v34;
  sub_100129064();
  uint64_t v513 = type metadata accessor for LocationEntity();
  sub_100179C0C();
  uint64_t v489 = v35;
  __chkstk_darwin(v36);
  sub_100162EF8();
  uint64_t v488 = v37;
  sub_1001626D4();
  __chkstk_darwin(v38);
  sub_100128F8C();
  uint64_t v523 = v39;
  sub_100129064();
  type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v481 = v41;
  uint64_t v482 = v40;
  __chkstk_darwin(v40);
  sub_100109314();
  uint64_t v480 = v42;
  uint64_t v509 = sub_10017DF08(&qword_100E66CA0);
  sub_100179C0C();
  uint64_t v522 = v43;
  __chkstk_darwin(v44);
  sub_100162EF8();
  uint64_t v508 = v45;
  sub_1001626D4();
  __chkstk_darwin(v46);
  sub_100128F8C();
  uint64_t v479 = v47;
  uint64_t v48 = sub_10017DF08(&qword_100E6B6C8);
  uint64_t v49 = sub_100109308(v48);
  __chkstk_darwin(v49);
  sub_100109314();
  uint64_t v512 = v50;
  sub_100129064();
  v505 = (void (*)(void))type metadata accessor for UUID();
  sub_100179C0C();
  uint64_t v504 = v51;
  __chkstk_darwin(v52);
  sub_100109314();
  uint64_t v449 = v53;
  uint64_t v452 = sub_10017DF08(&qword_100EA94F8);
  sub_100162E4C();
  __chkstk_darwin(v54);
  sub_100109314();
  uint64_t v455 = v55;
  uint64_t v56 = sub_10017DF08(&qword_100E855D0);
  uint64_t v57 = sub_100109308(v56);
  __chkstk_darwin(v57);
  sub_100162EF8();
  uint64_t v478 = v58;
  sub_1001626D4();
  __chkstk_darwin(v59);
  sub_100109770();
  uint64_t v451 = v60;
  sub_1001626D4();
  __chkstk_darwin(v61);
  sub_100128F8C();
  uint64_t v454 = v62;
  sub_100129064();
  uint64_t v458 = type metadata accessor for ForegroundEffect();
  sub_100179C0C();
  uint64_t v453 = v63;
  __chkstk_darwin(v64);
  sub_100109314();
  uint64_t v450 = v65;
  uint64_t v457 = sub_10017DF08(&qword_100EA0AF0);
  sub_100162E4C();
  __chkstk_darwin(v66);
  sub_100109314();
  uint64_t v459 = v67;
  uint64_t v68 = sub_10017DF08(&qword_100E64A18);
  uint64_t v69 = sub_100109308(v68);
  __chkstk_darwin(v69);
  sub_100162EF8();
  uint64_t v486 = v70;
  sub_1001626D4();
  __chkstk_darwin(v71);
  sub_100128F8C();
  uint64_t v462 = v72;
  sub_100129064();
  v521 = (int *)type metadata accessor for LocationViewModel();
  sub_100162E4C();
  __chkstk_darwin(v73);
  sub_100109314();
  uint64_t v460 = v74;
  uint64_t v465 = sub_10017DF08(&qword_100E67238);
  sub_100162E4C();
  __chkstk_darwin(v75);
  sub_100109314();
  uint64_t v466 = v76;
  uint64_t v502 = sub_10017DF08(&qword_100E75270);
  sub_100162E4C();
  __chkstk_darwin(v77);
  sub_100109314();
  v503 = v78;
  uint64_t v79 = sub_10017DF08(&qword_100E65FA8);
  uint64_t v80 = sub_100109308(v79);
  __chkstk_darwin(v80);
  sub_100162EF8();
  uint64_t v485 = v81;
  sub_1001626D4();
  __chkstk_darwin(v82);
  sub_100109770();
  uint64_t v456 = v83;
  sub_1001626D4();
  __chkstk_darwin(v84);
  sub_100128F8C();
  uint64_t v531 = v85;
  uint64_t v532 = type metadata accessor for CurrentWeather();
  sub_100179C0C();
  uint64_t v535 = v86;
  __chkstk_darwin(v87);
  sub_100162EF8();
  uint64_t v470 = v88;
  sub_1001626D4();
  __chkstk_darwin(v89);
  sub_100109770();
  uint64_t v511 = v90;
  sub_1001626D4();
  __chkstk_darwin(v91);
  sub_100128F8C();
  uint64_t v515 = v92;
  sub_100129064();
  uint64_t v549 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v551 = v93;
  __chkstk_darwin(v94);
  sub_100162EF8();
  uint64_t v510 = v95;
  sub_1001626D4();
  __chkstk_darwin(v96);
  sub_100128F8C();
  uint64_t v550 = v97;
  uint64_t v98 = sub_10017DF08(&qword_100E63A50);
  uint64_t v99 = sub_100109308(v98);
  __chkstk_darwin(v99);
  sub_100162EF8();
  uint64_t v501 = v100;
  sub_1001626D4();
  __chkstk_darwin(v101);
  sub_100128F8C();
  v500 = v102;
  sub_100129064();
  uint64_t v529 = type metadata accessor for WeatherCondition();
  sub_100179C0C();
  uint64_t v518 = v103;
  __chkstk_darwin(v104);
  sub_100109314();
  uint64_t v517 = v105;
  sub_100129064();
  uint64_t v536 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v528 = v106;
  __chkstk_darwin(v107);
  sub_100162EF8();
  uint64_t v527 = v108;
  sub_1001626D4();
  __chkstk_darwin(v109);
  sub_100128F8C();
  v519 = v110;
  sub_100129064();
  v547 = (int *)type metadata accessor for LocationInput();
  sub_100162E4C();
  __chkstk_darwin(v111);
  sub_100162EF8();
  uint64_t v468 = v112;
  sub_1001626D4();
  __chkstk_darwin(v113);
  sub_100128F8C();
  uint64_t v467 = v114;
  uint64_t v115 = sub_10017DF08(&qword_100E670F0);
  uint64_t v116 = sub_100109308(v115);
  __chkstk_darwin(v116);
  sub_100162EF8();
  uint64_t v477 = v117;
  sub_1001626D4();
  __chkstk_darwin(v118);
  sub_100109770();
  uint64_t v463 = v119;
  sub_1001626D4();
  __chkstk_darwin(v120);
  sub_100109770();
  uint64_t v496 = v121;
  sub_1001626D4();
  __chkstk_darwin(v122);
  sub_100128F8C();
  uint64_t v520 = v123;
  sub_100129064();
  uint64_t v530 = type metadata accessor for NewsDataModel();
  sub_100162E4C();
  __chkstk_darwin(v124);
  sub_100162EF8();
  uint64_t v461 = v125;
  sub_1001626D4();
  __chkstk_darwin(v126);
  sub_100128F8C();
  uint64_t v534 = v127;
  uint64_t v128 = sub_10017DF08(&qword_100E92848);
  uint64_t v129 = sub_100109308(v128);
  __chkstk_darwin(v129);
  sub_100109314();
  uint64_t v533 = v130;
  sub_100129064();
  v537 = (uint64_t *)type metadata accessor for PreprocessedWeatherData();
  sub_100162E4C();
  __chkstk_darwin(v131);
  sub_100109314();
  uint64_t v538 = v132;
  uint64_t v133 = sub_10017DF08(&qword_100E63850);
  uint64_t v134 = sub_100109308(v133);
  __chkstk_darwin(v134);
  sub_100162EF8();
  uint64_t v475 = v135;
  sub_1001626D4();
  __chkstk_darwin(v136);
  sub_100109770();
  v469 = (void *)v137;
  sub_1001626D4();
  __chkstk_darwin(v138);
  sub_100109770();
  uint64_t v499 = v139;
  sub_1001626D4();
  __chkstk_darwin(v140);
  sub_100128F8C();
  uint64_t v540 = v141;
  uint64_t v142 = sub_100129064();
  uint64_t v543 = type metadata accessor for WeatherData(v142);
  sub_100162E4C();
  __chkstk_darwin(v143);
  sub_100162EF8();
  v464 = (void *)v144;
  sub_1001626D4();
  __chkstk_darwin(v145);
  sub_100109770();
  uint64_t v498 = v146;
  sub_1001626D4();
  __chkstk_darwin(v147);
  sub_100128F8C();
  uint64_t v541 = v148;
  uint64_t v149 = sub_10017DF08(&qword_100E63770);
  uint64_t v150 = sub_100109308(v149);
  __chkstk_darwin(v150);
  sub_1001626E0();
  uint64_t v153 = v152 - v151;
  uint64_t v154 = type metadata accessor for LocationWeatherDataState(0);
  sub_100162E4C();
  __chkstk_darwin(v155);
  sub_100109314();
  uint64_t v542 = v156;
  sub_100129064();
  uint64_t v545 = type metadata accessor for OSSignpostID();
  sub_100179C0C();
  uint64_t v544 = v157;
  __chkstk_darwin(v158);
  sub_1001626E0();
  uint64_t v161 = v160 - v159;
  uint64_t v162 = sub_10017DF08(&qword_100E639E8);
  uint64_t v163 = sub_100109308(v162);
  __chkstk_darwin(v163);
  sub_100162EF8();
  uint64_t v476 = v164;
  sub_1001626D4();
  __chkstk_darwin(v165);
  uint64_t v167 = (char *)v437 - v166;
  __chkstk_darwin(v168);
  uint64_t v170 = (char *)v437 - v169;
  uint64_t v171 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v173 = v172;
  __chkstk_darwin(v174);
  sub_100162EF8();
  uint64_t v497 = v175;
  sub_1001626D4();
  __chkstk_darwin(v176);
  uint64_t v178 = (char *)v437 - v177;
  LocationModel.coalesceLocation.getter();
  sub_10012B520((uint64_t)v170, 1, v171);
  if (v197)
  {
    sub_100178110((uint64_t)v170, &qword_100E639E8);
    uint64_t v179 = v550;
    LocationModel.identifier.getter();
    uint64_t v180 = LocationModel.id.getter();
    char v182 = sub_1000092B4(v180, v181, v553);
    swift_bridgeObjectRelease();
    sub_10006CDBC(0, v182 & 1, 0, v548);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v551 + 8))(v179, v549);
  }
  v546 &= 1u;
  uint64_t v506 = v173;
  uint64_t v184 = *(void (**)(char *, char *, uint64_t))(v173 + 32);
  uint64_t v516 = v171;
  v184(v178, v170, v171);
  uint64_t v185 = LocationModel.coalesceLocationID.getter();
  uint64_t v448 = v154;
  uint64_t v186 = v185;
  uint64_t v188 = v187;
  v474 = v167;
  uint64_t v442 = a2;
  LocationModel.location.getter();
  id v189 = *(id *)((char *)v552 + OBJC_IVAR____TtC7Weather24LocationViewModelFactory_logger);
  OSSignpostID.init(log:)();
  static os_signpost_type_t.begin.getter();
  uint64_t v445 = sub_10017DF08(&qword_100E64020);
  uint64_t v190 = swift_allocObject();
  long long v444 = xmmword_100C251B0;
  *(_OWORD *)(v190 + 16) = xmmword_100C251B0;
  v539 = v178;
  id v191 = v189;
  uint64_t v192 = Location.name.getter();
  uint64_t v194 = v193;
  *(void *)(v190 + 56) = &type metadata for String;
  unint64_t v446 = sub_10012B7C0();
  *(void *)(v190 + 64) = v446;
  *(void *)(v190 + 32) = v192;
  *(void *)(v190 + 40) = v194;
  sub_10018ABE0();
  os_signpost(_:dso:log:name:signpostID:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v195 = &v553[v547[16]];
  uint64_t v196 = *((void *)v195 + 2);
  swift_bridgeObjectRetain();
  uint64_t v443 = v186;
  sub_1001BBE9C(v186, v188, v196);
  uint64_t v447 = v188;
  swift_bridgeObjectRelease();
  sub_10012B520(v153, 1, v448);
  if (v197)
  {
    sub_100178110(v153, &qword_100E63770);
LABEL_15:
    static os_signpost_type_t.end.getter();
    *(_OWORD *)(sub_10018A0E8() + 16) = v444;
    uint64_t v205 = (uint64_t)v539;
    uint64_t v206 = Location.name.getter();
    sub_10019DB2C(v206, v207);
    sub_10018ABE0();
    os_signpost(_:dso:log:name:signpostID:_:_:)();
    swift_bridgeObjectRelease();
    Location.identifier.getter();
    int v208 = v546;
    char v209 = sub_1000092B4(v443, v447, v553);
    swift_bridgeObjectRelease();
    sub_10006CDBC(v208 == 0, v209 & 1, v208, v548);
    sub_100164944();
    v210();
    sub_100162F0C();
    v211();
    sub_100178110((uint64_t)v474, &qword_100E639E8);
    uint64_t v212 = *(uint64_t (**)(uint64_t, uint64_t))(v506 + 8);
    uint64_t v213 = v205;
    return v212(v213, v516);
  }
  uint64_t v198 = v542;
  sub_1001E11B8(v153, v542, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  uint64_t v199 = v540;
  sub_1001177B0(v540);
  sub_10012B520(v199, 1, v543);
  if (v200)
  {
    sub_1001569A8(v198, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    Swift::Int v201 = &qword_100E63850;
LABEL_13:
    uint64_t v204 = v199;
LABEL_14:
    sub_100178110(v204, v201);
    goto LABEL_15;
  }
  uint64_t v202 = v541;
  sub_1001E11B8(v199, v541, (void (*)(void))type metadata accessor for WeatherData);
  uint64_t v199 = v533;
  sub_10006D6DC(v533);
  sub_10012B520(v199, 1, (uint64_t)v537);
  if (v203)
  {
    sub_1001569A8(v202, (void (*)(void))type metadata accessor for WeatherData);
    sub_1001569A8(v198, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    Swift::Int v201 = &qword_100E92848;
    goto LABEL_13;
  }
  uint64_t v214 = v199;
  uint64_t v215 = v538;
  sub_1001E11B8(v214, v538, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
  uint64_t v216 = v520;
  sub_1000547E4(v520);
  sub_10012B520(v216, 1, v530);
  if (v217)
  {
    sub_1001569A8(v215, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
    sub_1001569A8(v202, (void (*)(void))type metadata accessor for WeatherData);
    sub_1001569A8(v198, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    Swift::Int v201 = &qword_100E670F0;
    uint64_t v204 = v216;
    goto LABEL_14;
  }
  v440 = v195;
  id v441 = v191;
  uint64_t v443 = v161;
  swift_bridgeObjectRelease();
  sub_1001E11B8(v216, v534, (void (*)(void))type metadata accessor for NewsDataModel);
  uint64_t v218 = v552[30];
  uint64_t v219 = v552[31];
  uint64_t v220 = sub_1001B1E64(v552 + 27, v218);
  Location.kind.getter();
  uint64_t v221 = Location.Identifier.Kind.rawValue.getter();
  uint64_t v223 = v222;
  char v224 = 1;
  uint64_t v225 = Location.Identifier.Kind.rawValue.getter();
  if (v221 != v225 || v223 != v226) {
    char v224 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v228 = v553;
  uint64_t v229 = v553[1];
  uint64_t v230 = *((void *)v553 + 1);
  uint64_t v231 = Location.id.getter();
  sub_100215FB4(v231, v232, v230);
  uint64_t v234 = v233;
  swift_bridgeObjectRelease();
  uint64_t v235 = &v228[v547[7]];
  uint64_t v236 = v547[11];
  uint64_t v237 = v547[12];
  uint64_t v238 = v228[v547[8]];
  uint64_t v239 = *(uint64_t (**)(void, uint64_t, uint64_t, unsigned char *, void, void, uint64_t, uint64_t, uint64_t, uint64_t))(v219 + 16);
  uint64_t v447 = v547[9];
  uint64_t v240 = v228[v447];
  uint64_t v438 = v237;
  uint64_t v439 = v236;
  int v241 = v239(v224 & 1, v229, v234 & 1, v235, v228[v236], v228[v237], v238, v240, v218, v219);
  id v242 = [self currentDevice];
  id v243 = [v242 userInterfaceIdiom];

  if (v243 == (id)1)
  {
    uint64_t v234 = v467;
    sub_1001D9BA8((uint64_t)v228, v467, (void (*)(void))type metadata accessor for LocationInput);
    uint64_t v220 = v228;
    uint64_t v244 = (uint64_t)v521;
    uint64_t v245 = v541;
    LODWORD(v540) = 0;
    LODWORD(v448) = (v241 & 1) != 0 && *(unsigned __int8 *)(v234 + v547[10]) == 2;
    uint64_t v256 = v552;
    uint64_t v254 = v529;
    uint64_t v255 = v528;
  }
  else
  {
    LODWORD(v448) = v241;
    Location.kind.getter();
    uint64_t v246 = Location.Identifier.Kind.rawValue.getter();
    uint64_t v248 = v247;
    BOOL v250 = v246 == Location.Identifier.Kind.rawValue.getter() && v248 == v249;
    uint64_t v244 = (uint64_t)v521;
    uint64_t v245 = v541;
    if (v250)
    {
      uint64_t v257 = swift_bridgeObjectRelease_n();
      sub_100186D74(v257, v258, (void (*)(void))type metadata accessor for LocationInput);
      uint64_t v254 = v529;
      uint64_t v255 = v528;
    }
    else
    {
      uint64_t v220 = v249;
      char v251 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      uint64_t v252 = swift_bridgeObjectRelease();
      sub_100186D74(v252, v253, (void (*)(void))type metadata accessor for LocationInput);
      LODWORD(v540) = 0;
      uint64_t v254 = v529;
      uint64_t v255 = v528;
      if ((v251 & 1) == 0)
      {
        uint64_t v256 = v552;
        goto LABEL_38;
      }
    }
    LODWORD(v540) = *(unsigned __int8 *)(v234 + v547[13]);
    uint64_t v256 = v552;
  }
LABEL_38:
  sub_1001569A8(v234, (void (*)(void))type metadata accessor for LocationInput);
  uint64_t v259 = *(void *)(v255 + 16);
  uint64_t v520 = v255 + 16;
  uint64_t v468 = v259;
  sub_100162808();
  v260();
  uint64_t v261 = (uint64_t)v256 + OBJC_IVAR____TtC7Weather24LocationViewModelFactory_lastViewModel;
  sub_100126024();
  _s7Weather24LocationCompositionStateOwet_0(v261, 1, v244);
  uint64_t v467 = v261;
  uint64_t v262 = v519;
  LODWORD(v533) = sub_100027BA0();
  unsigned __int16 v263 = *(void (**)(char *, uint64_t))(v255 + 8);
  uint64_t v528 = v255 + 8;
  v437[1] = v263;
  v263(v262, v536);
  uint64_t v264 = *(void *)((char *)v220 + v547[22] + 8);
  Location.identifier.getter();
  uint64_t v265 = Location.Identifier.id.getter();
  uint64_t v266 = (uint64_t)v500;
  sub_100141760(v265, v267, v264);
  swift_bridgeObjectRelease();
  sub_100162F0C();
  v268();
  uint64_t v269 = v498;
  sub_1001D9BA8(v245, v498, (void (*)(void))type metadata accessor for WeatherData);
  sub_10012B520(v266, 1, v254);
  if (v197)
  {
    uint64_t v272 = v543;
    WeatherDataModel.currentWeather.getter();
    CurrentWeather.condition.getter();
    sub_100127BA4();
    v270();
    sub_1001569A8(v269, (void (*)(void))type metadata accessor for WeatherData);
    sub_100178110(v266, &qword_100E63A50);
    uint64_t v271 = v506;
  }
  else
  {
    sub_1001569A8(v269, (void (*)(void))type metadata accessor for WeatherData);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v518 + 32))(v517, v266, v254);
    uint64_t v271 = v506;
    uint64_t v272 = v543;
  }
  uint64_t v273 = *(void (**)(uint64_t, char *, uint64_t))(v271 + 16);
  uint64_t v550 = v271 + 16;
  v500 = v273;
  v273(v497, v539, v516);
  v519 = (char *)v220 + v547[21];
  sub_100162808();
  v274();
  uint64_t v551 = v245 + *(int *)(v272 + 24);
  WeatherDataModel.currentWeather.getter();
  uint64_t v275 = v529;
  sub_100162808();
  v276();
  sub_1001093B0();
  _s7Weather24LocationCompositionStateOwst_0(v277, v278, v279, v275);
  ForegroundEffect.init(for:at:currentWeather:weatherCondition:)();
  uint64_t v280 = v499;
  sub_1001D9BA8(v245, v499, (void (*)(void))type metadata accessor for WeatherData);
  sub_1001093B0();
  _s7Weather24LocationCompositionStateOwst_0(v281, v282, v283, v272);
  uint64_t v284 = (uint64_t)v552 + OBJC_IVAR____TtC7Weather24LocationViewModelFactory_lastWeatherData;
  sub_100126024();
  uint64_t v285 = v503;
  uint64_t v286 = (char *)v503 + *(int *)(v502 + 48);
  sub_10006DF38(v280, (uint64_t)v503, &qword_100E63850);
  sub_10006DF38(v284, (uint64_t)v286, &qword_100E63850);
  uint64_t v287 = &off_100EA9000;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v285, 1, v272) == 1)
  {
    sub_100178110(v280, &qword_100E63850);
    sub_10012B520((uint64_t)v286, 1, v272);
    uint64_t v288 = v530;
    uint64_t v289 = v496;
    if (!v197) {
      goto LABEL_48;
    }
    sub_100178110((uint64_t)v285, &qword_100E63850);
    uint64_t v290 = (void (*)(void))v288;
    uint64_t v291 = v541;
  }
  else
  {
    unsigned __int8 v292 = v469;
    sub_10006DF38((uint64_t)v285, (uint64_t)v469, &qword_100E63850);
    sub_10012B520((uint64_t)v286, 1, v272);
    uint64_t v288 = v530;
    uint64_t v289 = v496;
    if (v197)
    {
      sub_100178110(v280, &qword_100E63850);
      sub_1001569A8((uint64_t)v292, (void (*)(void))type metadata accessor for WeatherData);
LABEL_48:
      sub_100178110((uint64_t)v285, &qword_100E75270);
      uint64_t v290 = (void (*)(void))v288;
      uint64_t v291 = v541;
      goto LABEL_75;
    }
    uint64_t v293 = v284;
    uint64_t v294 = v464;
    sub_1001E11B8((uint64_t)v286, (uint64_t)v464, (void (*)(void))type metadata accessor for WeatherData);
    char v295 = sub_100A205E8(v292, v294);
    sub_1001569A8((uint64_t)v294, (void (*)(void))type metadata accessor for WeatherData);
    sub_100178110(v280, &qword_100E63850);
    sub_1001569A8((uint64_t)v292, (void (*)(void))type metadata accessor for WeatherData);
    uint64_t v284 = v293;
    sub_100178110((uint64_t)v285, &qword_100E63850);
    uint64_t v287 = &off_100EA9000;
    uint64_t v290 = (void (*)(void))v288;
    uint64_t v291 = v541;
    if ((v295 & 1) == 0)
    {
LABEL_75:
      uint64_t v530 = (uint64_t)type metadata accessor for WeatherData;
      uint64_t v314 = v475;
      sub_1001D9BA8(v291, v475, (void (*)(void))type metadata accessor for WeatherData);
      sub_1001093B0();
      _s7Weather24LocationCompositionStateOwst_0(v315, v316, v317, v543);
      swift_beginAccess();
      sub_1001DF004(v314, v284, &qword_100E63850);
      swift_endAccess();
      v503 = type metadata accessor for NewsDataModel;
      uint64_t v318 = v477;
      sub_1001D9BA8(v534, v477, (void (*)(void))type metadata accessor for NewsDataModel);
      _s7Weather24LocationCompositionStateOwst_0(v318, 0, 1, (uint64_t)v290);
      uint64_t v319 = (uint64_t)v552;
      sub_100182D1C();
      sub_1001DF004(v318, v314, &qword_100E670F0);
      swift_endAccess();
      uint64_t v320 = v478;
      uint64_t v321 = v505;
      (*(void (**)(uint64_t, uint64_t, void (*)(void)))(v504 + 16))(v478, v538, v505);
      sub_1001093B0();
      _s7Weather24LocationCompositionStateOwst_0(v322, v323, v324, (uint64_t)v321);
      sub_100182D1C();
      sub_1001DF004(v320, (uint64_t)v321, &qword_100E855D0);
      swift_endAccess();
      uint64_t v325 = (uint64_t)v539;
      sub_1000268D4();
      WeatherDataModel.currentWeather.getter();
      WeatherDataModel.dailyForecast.getter();
      CurrentWeather.date.getter();
      Location.timeZone.getter();
      Forecast<>.todaysWeather(today:timeZone:)();
      sub_100162F0C();
      v326();
      sub_100127BA4();
      v327();
      uint64_t v328 = *(void *)(v522 + 8);
      v522 += 8;
      uint64_t v543 = v328;
      sub_100127BA4();
      v329();
      static LocationEntity.makeFromLocation(_:name:)();
      swift_bridgeObjectRelease();
      sub_100062E4C(v319, v524);
      uint64_t v330 = v525;
      uint64_t v331 = v325;
      uint64_t v332 = v516;
      uint64_t v333 = v500;
      v500(v525, (char *)v331, v516);
      uint64_t v334 = (int *)v483;
      uint64_t v335 = (void (*)(void))v530;
      sub_1001D9BA8(v291, v330 + *(int *)(v483 + 20), (void (*)(void))v530);
      uint64_t v336 = v330 + v334[6];
      v505 = (void (*)(void))type metadata accessor for PreprocessedWeatherData;
      sub_1001D9BA8(v538, v336, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      uint64_t v337 = v534;
      uint64_t v338 = v503;
      sub_1001D9BA8(v534, v330 + v334[7], (void (*)(void))v503);
      char v339 = *v553;
      LODWORD(v528) = *v553;
      char v340 = v546;
      *(unsigned char *)(v330 + v334[8]) = v546;
      *(unsigned char *)(v330 + v334[9]) = v339;
      uint64_t v341 = v526;
      v333(v526, v539, v332);
      uint64_t v342 = (int *)v484;
      sub_1001D9BA8(v541, v341 + *(int *)(v484 + 20), v335);
      sub_1001D9BA8(v538, v341 + v342[6], v505);
      sub_1001D9BA8(v337, v341 + v342[7], (void (*)(void))v338);
      *(unsigned char *)(v341 + v342[8]) = v340;
      *(unsigned char *)(v341 + v342[9]) = v533;
      *(unsigned char *)(v341 + v342[10]) = v528;
      *(unsigned char *)(v341 + v342[11]) = v540;
      Location.identifier.getter();
      uint64_t v343 = v476;
      sub_10006DF38((uint64_t)v474, v476, &qword_100E639E8);
      sub_10012B520(v343, 1, v332);
      if (v197)
      {
        sub_100178110(v343, &qword_100E639E8);
        uint64_t v346 = 1;
        uint64_t v344 = v507;
      }
      else
      {
        uint64_t v344 = v507;
        Location.identifier.getter();
        sub_100127BA4();
        v345();
        uint64_t v346 = 0;
      }
      uint64_t v348 = v471;
      uint64_t v347 = v472;
      uint64_t v349 = v470;
      char v350 = 1;
      _s7Weather24LocationCompositionStateOwst_0(v344, v346, 1, v549);
      WeatherDataModel.currentWeather.getter();
      v537 = (uint64_t *)(v538 + *((int *)v537 + 15));
      memcpy(__dst, v537, 0x70uLL);
      sub_100026DA0((uint64_t)__dst);
      WeatherDataModel.dailyForecast.getter();
      LocationModel.kind.getter();
      uint64_t v351 = Location.Identifier.Kind.rawValue.getter();
      uint64_t v353 = v352;
      if (v351 != Location.Identifier.Kind.rawValue.getter() || v353 != v354) {
        char v350 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LocationModel.locationOfInterest.getter();
      LocationModel.locationCompositionState.getter(v347);
      uint64_t v356 = v547;
      uint64_t v357 = v553;
      uint64_t v530 = v547[23];
      char v358 = v350 & 1;
      uint64_t v359 = (uint64_t)v539;
      uint64_t v360 = v552;
      sub_10002F240(v349, __dst, (uint64_t)v539, v546, v358, (uint64_t)v347, (uint64_t)v554, v553[v530]);
      sub_100029A10((uint64_t)__dst);
      sub_1001569A8((uint64_t)v347, (void (*)(void))type metadata accessor for LocationCompositionState);
      sub_100178110(v348, &qword_100E63508);
      sub_100127BA4();
      v361();
      uint64_t v362 = *(void *)(v535 + 8);
      v535 += 8;
      uint64_t v550 = v362;
      sub_100127BA4();
      v363();
      uint64_t v549 = (uint64_t)sub_1009F98D4(v526, v359, v357[v356[13]]);
      sub_1001B1E64(v360 + 12, v360[15]);
      uint64_t v543 = sub_100028194(v525);
      Location.kind.getter();
      uint64_t v364 = Location.Identifier.Kind.rawValue.getter();
      uint64_t v366 = v365;
      int v367 = 1;
      if (v364 != Location.Identifier.Kind.rawValue.getter() || v366 != v368) {
        int v367 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      LODWORD(v528) = v367;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v370 = v553[v438];
      int v371 = v553[v439];
      uint64_t v372 = v487;
      sub_10006DF38((uint64_t)&v553[v547[17]], v487, (uint64_t *)&unk_100EADD50);
      uint64_t v373 = type metadata accessor for CurrentLocation();
      sub_10012B520(v372, 1, v373);
      if (v197)
      {
        sub_100178110(v372, (uint64_t *)&unk_100EADD50);
      }
      else
      {
        CurrentLocation.id.getter();
        sub_1001569A8(v372, (void (*)(void))&type metadata accessor for CurrentLocation);
      }
      sub_10013F4E8();
      char v375 = v374;
      swift_bridgeObjectRelease();
      int v376 = v553[v447];
      uint64_t v378 = v537[12];
      uint64_t v377 = v537[13];
      if (v553[v530] == 1)
      {
        swift_bridgeObjectRetain();
        uint64_t v379 = v473;
        LocationModel.locationOfInterest.getter();
      }
      else
      {
        uint64_t v380 = type metadata accessor for LocationOfInterest();
        uint64_t v379 = v473;
        _s7Weather24LocationCompositionStateOwst_0(v473, 1, 1, v380);
        swift_bridgeObjectRetain();
      }
      v381 = v552;
      sub_100045990((uint64_t)v539, v528 & 1, v370 == 1, v371 == 2, v524, v375 & 1, v376, v378, v514, v377, v379);
      swift_bridgeObjectRelease();
      sub_100178110(v379, &qword_100E63508);
      type metadata accessor for LocationFooterViewModel();
      sub_1001093B0();
      _s7Weather24LocationCompositionStateOwst_0(v382, v383, v384, v385);
      LODWORD(v552) = v546 == 0;
      type metadata accessor for UnitManager();
      static UnitManager.standard.getter();
      v547 = (int *)UnitManager.temperature.getter();
      swift_release();
      LODWORD(v553) = *v553;
      uint64_t v386 = v527;
      sub_100162808();
      v387();
      uint64_t v388 = v485;
      sub_10006DF38(v531, v485, &qword_100E65FA8);
      WeatherDataModel.currentWeather.getter();
      char v389 = CurrentWeather.isDaylight.getter();
      sub_100162F0C();
      v390();
      uint64_t v392 = v488;
      uint64_t v391 = v489;
      sub_100162808();
      v393();
      sub_1001B1E64(v381 + 17, v381[20]);
      dispatch thunk of AppConfigurationManagerType.appConfiguration.getter();
      AppConfiguration.locationsConfiguration.getter();
      sub_100162F0C();
      v394();
      char v395 = LocationsConfiguration.shouldTrackComponentExposureEvents.getter();
      sub_100162F0C();
      v396();
      char v436 = v395 & 1;
      uint64_t v397 = v548;
      sub_100083BB4(v510, v507, v554, v549, v543, v514, v448 & 1, v540, v548, v533, (char)v552, 3, v547, (char)v552, v546, (char)v553, v386, v388, (v389 & 1) == 0,
        v392,
        v436);
      uint64_t v398 = v397;
      uint64_t v399 = v486;
      sub_1001D9BA8(v398, v486, (void (*)(void))type metadata accessor for LocationViewModel);
      sub_1001093B0();
      _s7Weather24LocationCompositionStateOwst_0(v400, v401, v402, (uint64_t)v521);
      uint64_t v403 = v467;
      swift_beginAccess();
      sub_1001DF004(v399, v403, &qword_100E64A18);
      swift_endAccess();
      static os_signpost_type_t.end.getter();
      *(_OWORD *)(sub_10018A0E8() + 16) = v444;
      uint64_t v404 = (uint64_t)v539;
      uint64_t v405 = Location.name.getter();
      sub_10019DB2C(v405, v406);
      os_signpost(_:dso:log:name:signpostID:_:_:)();
      swift_bridgeObjectRelease();
      sub_1001569A8(v526, (void (*)(void))type metadata accessor for LocationViewConfigurationInputs);
      sub_1001569A8(v525, (void (*)(void))type metadata accessor for LocationContentState);
      sub_1001569A8(v524, (void (*)(void))type metadata accessor for LearnMoreAttributorViewModel);
      (*(void (**)(uint64_t, uint64_t))(v391 + 8))(v523, v513);
      sub_100178110(v512, &qword_100E6B6C8);
      sub_100162F0C();
      v407();
      sub_100178110(v531, &qword_100E65FA8);
      sub_100162F0C();
      v408();
      sub_1001569A8(v534, (void (*)(void))type metadata accessor for NewsDataModel);
      sub_1001569A8(v538, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      sub_1001569A8(v541, (void (*)(void))type metadata accessor for WeatherData);
      sub_1001569A8(v542, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      sub_100162F0C();
      v409();
      sub_100178110((uint64_t)v474, &qword_100E639E8);
      uint64_t v212 = *(uint64_t (**)(uint64_t, uint64_t))(v506 + 8);
      uint64_t v213 = v404;
      return v212(v213, v516);
    }
  }
  uint64_t v501 = v284;
  sub_1001D9BA8(v534, v289, (void (*)(void))type metadata accessor for NewsDataModel);
  _s7Weather24LocationCompositionStateOwst_0(v289, 0, 1, (uint64_t)v290);
  uint64_t v296 = (char *)v287[116] + (void)v552;
  sub_100126024();
  uint64_t v297 = (uint64_t)v290;
  uint64_t v298 = v466;
  uint64_t v299 = v466 + *(int *)(v465 + 48);
  sub_10006DF38(v289, v466, &qword_100E670F0);
  uint64_t v300 = (uint64_t)v296;
  uint64_t v301 = v298;
  uint64_t v290 = (void (*)(void))v297;
  sub_10006DF38(v300, v299, &qword_100E670F0);
  sub_10012B520(v301, 1, v297);
  if (v197)
  {
    sub_100178110(v289, &qword_100E670F0);
    sub_10012B520(v299, 1, v297);
    if (v197)
    {
      sub_100178110(v301, &qword_100E670F0);
      uint64_t v284 = v501;
      goto LABEL_61;
    }
LABEL_58:
    sub_100178110(v301, &qword_100E67238);
LABEL_59:
    uint64_t v284 = v501;
    goto LABEL_75;
  }
  uint64_t v302 = v463;
  sub_10006DF38(v301, v463, &qword_100E670F0);
  sub_10012B520(v299, 1, v297);
  if (v303)
  {
    sub_100178110(v289, &qword_100E670F0);
    sub_1001569A8(v302, (void (*)(void))type metadata accessor for NewsDataModel);
    goto LABEL_58;
  }
  uint64_t v304 = v299;
  uint64_t v305 = v461;
  sub_1001E11B8(v304, v461, (void (*)(void))type metadata accessor for NewsDataModel);
  LODWORD(v503) = sub_100BBEEE4(v302, v305);
  sub_1001569A8(v305, (void (*)(void))type metadata accessor for NewsDataModel);
  sub_100178110(v289, &qword_100E670F0);
  sub_1001569A8(v302, (void (*)(void))type metadata accessor for NewsDataModel);
  uint64_t v290 = (void (*)(void))v297;
  sub_100178110(v301, &qword_100E670F0);
  uint64_t v284 = v501;
  if ((v503 & 1) == 0) {
    goto LABEL_75;
  }
LABEL_61:
  uint64_t v306 = v462;
  sub_10006DF38(v467, v462, &qword_100E64A18);
  uint64_t v307 = v521;
  sub_10012B520(v306, 1, (uint64_t)v521);
  if (v197)
  {
    sub_100178110(v306, &qword_100E64A18);
    goto LABEL_75;
  }
  uint64_t v308 = v306;
  uint64_t v309 = v460;
  sub_1001E11B8(v308, v460, (void (*)(void))type metadata accessor for LocationViewModel);
  if ((v448 & 1) != *(unsigned char *)(v309 + v307[10])
    || v540 != *(unsigned __int8 *)(v309 + v307[11])
    || *(unsigned __int8 *)(v309 + v307[12]) != v533
    || *(unsigned __int8 *)(v309 + v307[18]) != *v553
    || (static Date.== infix(_:_:)() & 1) == 0)
  {
    sub_1001569A8(v309, (void (*)(void))type metadata accessor for LocationViewModel);
    goto LABEL_75;
  }
  uint64_t v310 = v309 + v307[20];
  uint64_t v311 = v459;
  uint64_t v312 = v459 + *(int *)(v457 + 48);
  sub_10006DF38(v310, v459, &qword_100E65FA8);
  sub_10006DF38(v531, v312, &qword_100E65FA8);
  uint64_t v313 = v458;
  sub_10012B520(v311, 1, v458);
  if (v197)
  {
    sub_10012B520(v312, 1, v313);
    if (v197)
    {
      sub_100178110(v459, &qword_100E65FA8);
      goto LABEL_100;
    }
LABEL_98:
    v411 = &qword_100EA0AF0;
    uint64_t v412 = v459;
LABEL_109:
    sub_100178110(v412, v411);
LABEL_110:
    sub_1001569A8(v460, (void (*)(void))type metadata accessor for LocationViewModel);
    uint64_t v291 = v541;
    uint64_t v290 = (void (*)(void))v530;
    goto LABEL_59;
  }
  sub_10006DF38(v459, v456, &qword_100E65FA8);
  sub_10012B520(v312, 1, v313);
  if (v410)
  {
    (*(void (**)(uint64_t, uint64_t))(v453 + 8))(v456, v458);
    goto LABEL_98;
  }
  uint64_t v413 = v453;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v453 + 32))(v450, v312, v458);
  sub_100186F78(&qword_100E66010, (void (*)(uint64_t))&type metadata accessor for ForegroundEffect);
  char v414 = dispatch thunk of static Equatable.== infix(_:_:)();
  v415 = *(void (**)(void))(v413 + 8);
  sub_10017E6A0();
  v415();
  sub_10017E6A0();
  v415();
  sub_100178110(v459, &qword_100E65FA8);
  if ((v414 & 1) == 0) {
    goto LABEL_110;
  }
LABEL_100:
  sub_100126024();
  uint64_t v416 = v454;
  v417 = v505;
  sub_100162808();
  v418();
  sub_1001093B0();
  _s7Weather24LocationCompositionStateOwst_0(v419, v420, v421, (uint64_t)v417);
  uint64_t v422 = v455;
  uint64_t v423 = v455 + *(int *)(v452 + 48);
  uint64_t v424 = sub_1001A3510();
  sub_10006DF38(v424, v425, &qword_100E855D0);
  sub_10006DF38(v416, v423, &qword_100E855D0);
  sub_10012B520(v422, 1, (uint64_t)v417);
  if (v197)
  {
    sub_100178110(v454, &qword_100E855D0);
    sub_10012B520(v423, 1, (uint64_t)v505);
    if (v197)
    {
      sub_100178110(v455, &qword_100E855D0);
      goto LABEL_112;
    }
    goto LABEL_108;
  }
  sub_10006DF38(v455, v451, &qword_100E855D0);
  sub_10012B520(v423, 1, (uint64_t)v505);
  if (v426)
  {
    sub_100178110(v454, &qword_100E855D0);
    (*(void (**)(uint64_t, void (*)(void)))(v504 + 8))(v451, v505);
LABEL_108:
    v411 = &qword_100EA94F8;
    uint64_t v412 = v455;
    goto LABEL_109;
  }
  uint64_t v427 = v504;
  v428 = v505;
  (*(void (**)(uint64_t, uint64_t, void (*)(void)))(v504 + 32))(v449, v423, v505);
  sub_100186F78(&qword_100E855E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v429 = v451;
  char v430 = dispatch thunk of static Equatable.== infix(_:_:)();
  v431 = *(void (**)(uint64_t))(v427 + 8);
  uint64_t v432 = sub_1001A3510();
  v431(v432);
  sub_100178110(v454, &qword_100E855D0);
  ((void (*)(uint64_t, void (*)(void)))v431)(v429, v428);
  sub_100178110(v455, &qword_100E855D0);
  if ((v430 & 1) == 0) {
    goto LABEL_110;
  }
LABEL_112:
  if (*(unsigned __int8 *)(v460 + v521[6] + 160) != v553[v547[23]]) {
    goto LABEL_110;
  }
  sub_100178110(v531, &qword_100E65FA8);
  sub_100162F0C();
  v433();
  sub_1001569A8(v534, (void (*)(void))type metadata accessor for NewsDataModel);
  sub_1001569A8(v538, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
  sub_1001569A8(v541, (void (*)(void))type metadata accessor for WeatherData);
  sub_1001569A8(v542, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  sub_100162F0C();
  v434();
  sub_100178110((uint64_t)v474, &qword_100E639E8);
  sub_100162F0C();
  v435();
  return sub_1001E11B8(v460, v548, (void (*)(void))type metadata accessor for LocationViewModel);
}

void sub_1001D9898()
{
  sub_10016314C();
  sub_1001A34E0();
  uint64_t v6 = sub_10017DF08(&qword_100E64E80);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_10011BA28();
  uint64_t v8 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100179C0C();
  __chkstk_darwin(v9);
  sub_100162A94();
  __chkstk_darwin(v10);
  sub_100181880(v11, v12, v13, v14, v15, v16, v17, v18, v31);
  if (v3)
  {
    uint64_t v19 = type metadata accessor for LocationViewComponent();
    sub_100164920(v19);
    uint64_t v21 = v1 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    uint64_t v35 = *(void *)(v22 + 72);
    swift_bridgeObjectRetain();
    uint64_t v23 = _swiftEmptyArrayStorage;
    uint64_t v33 = v5;
    uint64_t v32 = v8;
    while (1)
    {
      sub_10017AADC();
      v4();
      if (v0) {
        break;
      }
      if (_s7Weather24LocationCompositionStateOwet_0(v2, 1, v8) == 1)
      {
        sub_1000F3400(v2, &qword_100E64E80);
      }
      else
      {
        sub_1001D9AE4(v2, v34, (uint64_t (*)(void))type metadata accessor for LocationComponentContainerViewModel);
        sub_1001D9AE4(v34, v5, (uint64_t (*)(void))type metadata accessor for LocationComponentContainerViewModel);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v27 = sub_10019F328();
          uint64_t v23 = (void *)sub_1001D9B60(v27, v28, v29, v30);
        }
        unint64_t v25 = v23[2];
        unint64_t v24 = v23[3];
        if (v25 >= v24 >> 1) {
          uint64_t v23 = (void *)sub_1001D9B60(v24 > 1, v25 + 1, 1, (uint64_t)v23);
        }
        sub_100180594();
        uint64_t v5 = v33;
        sub_1001D9AE4(v33, v26, (uint64_t (*)(void))type metadata accessor for LocationComponentContainerViewModel);
        uint64_t v8 = v32;
      }
      v21 += v35;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_15:
  sub_1001894E8();
  sub_100163164();
}

uint64_t sub_1001D9AE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001D9B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B6B868);
}

uint64_t sub_1001D9B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&qword_100E6CCD0, (uint64_t (*)(void))type metadata accessor for LocationComponentContainerViewModel, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
}

uint64_t sub_1001D9BA8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_1001D9BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B6B90C);
}

uint64_t sub_1001D9C10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = type metadata accessor for WindComponent();
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v112 = v4;
  uint64_t v5 = type metadata accessor for VisibilityComponent();
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v111 = v7;
  uint64_t v8 = type metadata accessor for UVIndexComponent();
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v110 = v10;
  uint64_t v109 = type metadata accessor for SunriseSunsetModel();
  uint64_t v108 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  sub_100109314();
  sub_100109328(v11);
  uint64_t v12 = type metadata accessor for SevereAlertComponent();
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_100109314();
  sub_100109328(v14);
  uint64_t v15 = type metadata accessor for PressureComponent();
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_100109314();
  sub_100109328(v17);
  uint64_t v18 = type metadata accessor for NotificationsOptInComponent();
  uint64_t v19 = sub_100109308(v18);
  __chkstk_darwin(v19);
  sub_100109314();
  sub_100109328(v20);
  uint64_t HourPrecipitationComponent = type metadata accessor for NextHourPrecipitationComponent();
  uint64_t v22 = sub_100109308(HourPrecipitationComponent);
  __chkstk_darwin(v22);
  sub_100109314();
  sub_100109328(v23);
  uint64_t v24 = type metadata accessor for NewsArticleComponent();
  uint64_t v25 = sub_100109308(v24);
  __chkstk_darwin(v25);
  sub_100109314();
  sub_100109328(v26);
  uint64_t v27 = type metadata accessor for MoonComponent();
  uint64_t v28 = sub_100109308(v27);
  __chkstk_darwin(v28);
  sub_1001626E0();
  uint64_t v31 = v30 - v29;
  uint64_t v32 = type metadata accessor for MapComponent();
  uint64_t v33 = sub_100109308(v32);
  __chkstk_darwin(v33);
  sub_1001626E0();
  uint64_t v36 = v35 - v34;
  uint64_t v37 = type metadata accessor for HumidityComponent();
  uint64_t v38 = sub_100109308(v37);
  __chkstk_darwin(v38);
  sub_1001626E0();
  uint64_t v41 = v40 - v39;
  uint64_t v42 = type metadata accessor for HourlyForecastComponent();
  uint64_t v43 = sub_100109308(v42);
  __chkstk_darwin(v43);
  sub_1001626E0();
  uint64_t v46 = v45 - v44;
  uint64_t v47 = type metadata accessor for FeelsLikeComponent();
  uint64_t v48 = sub_100109308(v47);
  __chkstk_darwin(v48);
  sub_1001626E0();
  uint64_t v51 = v50 - v49;
  uint64_t v52 = type metadata accessor for DailyForecastComponent();
  uint64_t v53 = sub_100109308(v52);
  __chkstk_darwin(v53);
  sub_1001626E0();
  uint64_t v56 = v55 - v54;
  uint64_t v57 = type metadata accessor for AveragesComponent();
  uint64_t v58 = sub_100109308(v57);
  __chkstk_darwin(v58);
  sub_1001626E0();
  uint64_t v61 = v60 - v59;
  uint64_t v62 = type metadata accessor for AirQualityComponent();
  uint64_t v63 = sub_100109308(v62);
  __chkstk_darwin(v63);
  sub_1001626E0();
  uint64_t v66 = v65 - v64;
  type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v67);
  sub_1001626E0();
  uint64_t v70 = (char *)(v69 - v68);
  sub_1001DBA6C(a1, v69 - v68);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v71 = type metadata accessor for DailyForecastComponent;
      sub_1001DA8D8((uint64_t)v70, v56, (void (*)(void))type metadata accessor for DailyForecastComponent);
      sub_10017CD3C(v113 + 12, v113[15]);
      sub_100067EA4(v74, v75);
      goto LABEL_21;
    case 2u:
      uint64_t v71 = type metadata accessor for FeelsLikeComponent;
      sub_1001DA8D8((uint64_t)v70, v51, (void (*)(void))type metadata accessor for FeelsLikeComponent);
      sub_10019EAD8(v113 + 17, v113[20]);
      sub_10004F270(v51, v76);
      uint64_t v73 = v51;
      goto LABEL_22;
    case 3u:
      uint64_t v71 = type metadata accessor for HourlyForecastComponent;
      sub_1001DA8D8((uint64_t)v70, v46, (void (*)(void))type metadata accessor for HourlyForecastComponent);
      sub_10019EAD8(v113 + 22, v113[25]);
      sub_10005A1D4(v46, v77);
      uint64_t v73 = v46;
      goto LABEL_22;
    case 4u:
      uint64_t v71 = type metadata accessor for HumidityComponent;
      sub_1001DA8D8((uint64_t)v70, v41, (void (*)(void))type metadata accessor for HumidityComponent);
      sub_10019EAD8(v113 + 27, v113[30]);
      sub_100045E4C(v78);
      uint64_t v73 = v41;
      goto LABEL_22;
    case 5u:
      uint64_t v71 = type metadata accessor for MapComponent;
      sub_1001DA8D8((uint64_t)v70, v36, (void (*)(void))type metadata accessor for MapComponent);
      uint64_t v79 = sub_10019EAD8(v113 + 32, v113[35]);
      sub_100042EFC(v79, v36, v80);
      uint64_t v73 = v36;
      goto LABEL_22;
    case 6u:
      uint64_t v71 = type metadata accessor for MoonComponent;
      sub_1001DA8D8((uint64_t)v70, v31, (void (*)(void))type metadata accessor for MoonComponent);
      uint64_t v81 = sub_10019EAD8(v113 + 37, v113[40]);
      sub_10008B938(v81, v31, v82);
      uint64_t v73 = v31;
      goto LABEL_22;
    case 7u:
      uint64_t v71 = type metadata accessor for NewsArticleComponent;
      uint64_t v56 = v102;
      sub_1001DA8D8((uint64_t)v70, v102, (void (*)(void))type metadata accessor for NewsArticleComponent);
      sub_1001B1E64(v113 + 42, v113[45]);
      sub_1006BA5B0(v102, a2);
      goto LABEL_21;
    case 8u:
      uint64_t v71 = type metadata accessor for NextHourPrecipitationComponent;
      uint64_t v56 = v103;
      sub_1001DA8D8((uint64_t)v70, v103, (void (*)(void))type metadata accessor for NextHourPrecipitationComponent);
      uint64_t v83 = sub_10017CD3C(v113 + 47, v113[50]);
      sub_1007A0358(v83, v84, v85);
      goto LABEL_21;
    case 9u:
      uint64_t v71 = type metadata accessor for NotificationsOptInComponent;
      uint64_t v56 = v104;
      sub_1001DA8D8((uint64_t)v70, v104, (void (*)(void))type metadata accessor for NotificationsOptInComponent);
      sub_1001B1E64(v113 + 52, v113[55]);
      sub_100562D98(v104, a2);
      goto LABEL_21;
    case 0xAu:
      uint64_t v71 = type metadata accessor for PressureComponent;
      uint64_t v56 = v105;
      sub_1001DA8D8((uint64_t)v70, v105, (void (*)(void))type metadata accessor for PressureComponent);
      sub_10017CD3C(v113 + 62, v113[65]);
      sub_10005EDF4(v86, v87);
      goto LABEL_21;
    case 0xBu:
      memcpy(__dst, v70, 0x70uLL);
      sub_1001B1E64(v113 + 67, v113[70]);
      sub_100039CE4(__dst, a2);
      return sub_100025C28((uint64_t)__dst);
    case 0xCu:
      char v89 = *v70;
      sub_1001B1E64(v113 + 72, v113[75]);
      return sub_1008E3DCC(v89, a2);
    case 0xDu:
      uint64_t v71 = type metadata accessor for SevereAlertComponent;
      uint64_t v56 = v106;
      sub_1001DA8D8((uint64_t)v70, v106, (void (*)(void))type metadata accessor for SevereAlertComponent);
      sub_10017CD3C(v113 + 77, v113[80]);
      sub_1009CF2D0(v90, v91);
      goto LABEL_21;
    case 0xEu:
      (*(void (**)(uint64_t, char *, uint64_t))(v108 + 32))(v107, v70, v109);
      sub_10019EAD8(v113 + 82, v113[85]);
      sub_100030128(v92);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v108 + 8))(v107, v109);
    case 0xFu:
      sub_1001DA8D8((uint64_t)v70, v61, (void (*)(void))type metadata accessor for AveragesComponent);
      uint64_t v93 = sub_10019EAD8(v113 + 7, v113[10]);
      sub_100087A1C(v93, v61, v94);
      uint64_t v73 = v61;
      uint64_t v95 = type metadata accessor for AveragesComponent;
      return sub_1001DA880(v73, (void (*)(void))v95);
    case 0x10u:
      uint64_t v71 = type metadata accessor for UVIndexComponent;
      uint64_t v56 = v110;
      sub_1001DA8D8((uint64_t)v70, v110, (void (*)(void))type metadata accessor for UVIndexComponent);
      sub_10017CD3C(v113 + 87, v113[90]);
      sub_100061B58(v96, v97);
      goto LABEL_21;
    case 0x11u:
      uint64_t v71 = type metadata accessor for VisibilityComponent;
      uint64_t v56 = v111;
      sub_1001DA8D8((uint64_t)v70, v111, (void (*)(void))type metadata accessor for VisibilityComponent);
      sub_10017CD3C(v113 + 92, v113[95]);
      sub_100041F3C(v98, v99);
      goto LABEL_21;
    case 0x12u:
      uint64_t v71 = type metadata accessor for WindComponent;
      uint64_t v56 = v112;
      sub_1001DA8D8((uint64_t)v70, v112, (void (*)(void))type metadata accessor for WindComponent);
      sub_10017CD3C(v113 + 97, v113[100]);
      sub_10006AA18(v100, v101);
LABEL_21:
      uint64_t v73 = v56;
      goto LABEL_22;
    case 0x13u:
      sub_1001B1E64(v113 + 57, v113[60]);
      return sub_1003B1B14(a2);
    default:
      uint64_t v71 = type metadata accessor for AirQualityComponent;
      sub_1001DA8D8((uint64_t)v70, v66, (void (*)(void))type metadata accessor for AirQualityComponent);
      sub_10019EAD8(v113 + 2, v113[5]);
      sub_100B6C0B0(v72);
      uint64_t v73 = v66;
LABEL_22:
      uint64_t v95 = v71;
      return sub_1001DA880(v73, (void (*)(void))v95);
  }
}

uint64_t type metadata accessor for NextHourPrecipitationComponent()
{
  uint64_t result = qword_100E95450;
  if (!qword_100E95450) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for NotificationsOptInComponent()
{
  uint64_t result = qword_100E73970;
  if (!qword_100E73970) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for SevereAlertComponent()
{
  uint64_t result = qword_100E75590;
  if (!qword_100E75590) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for NewsArticleComponent()
{
  uint64_t result = qword_100E898B0;
  if (!qword_100E898B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for AirQualityComponent()
{
  uint64_t result = qword_100E7CE88;
  if (!qword_100E7CE88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FeelsLikeComponent()
{
  uint64_t result = qword_100EA8C78;
  if (!qword_100EA8C78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for HumidityComponent()
{
  uint64_t result = qword_100EA9AC0;
  if (!qword_100EA9AC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for AveragesComponent()
{
  uint64_t result = qword_100EAB260;
  if (!qword_100EAB260) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for MoonComponent()
{
  uint64_t result = qword_100E6F880;
  if (!qword_100E6F880) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001DA880(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001DA8D8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1001DA938(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1001DA998()
{
  type metadata accessor for LocationViewComponent();
  sub_10017CF70();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v25 - v7;
  swift_retain();
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_1001DD680(v9, v0);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 + 16);
  if (v12)
  {
    uint64_t v28 = v0;
    uint64_t v13 = *(void *)(v0 + 24);
    uint64_t v29 = _swiftEmptyArrayStorage;
    uint64_t v26 = v13;
    swift_bridgeObjectRetain();
    sub_1001DD5A8();
    uint64_t v14 = *(unsigned __int8 *)(v2 + 80);
    uint64_t v27 = v11;
    uint64_t v15 = v11 + ((v14 + 32) & ~v14);
    uint64_t v16 = *(void *)(v2 + 72);
    do
    {
      sub_1001DBA6C(v15, (uint64_t)v8);
      sub_1001DBA6C((uint64_t)v8, (uint64_t)v5);
      char v17 = 10;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          sub_1001DAD64((uint64_t)v5);
          char v17 = 1;
          break;
        case 2u:
          sub_1001DAD64((uint64_t)v5);
          char v17 = 2;
          break;
        case 3u:
          sub_1001DAD64((uint64_t)v5);
          char v17 = 3;
          break;
        case 4u:
          sub_1001DAD64((uint64_t)v5);
          char v17 = 4;
          break;
        case 5u:
          sub_1001DAD64((uint64_t)v5);
          char v17 = 5;
          break;
        case 6u:
          sub_1001DAD64((uint64_t)v5);
          char v17 = 6;
          break;
        case 7u:
          sub_1001DAD64((uint64_t)v5);
          char v17 = 7;
          break;
        case 8u:
          sub_1001DAD64((uint64_t)v5);
          char v17 = 8;
          break;
        case 9u:
          sub_1001DAD64((uint64_t)v5);
          char v17 = 9;
          break;
        case 0xAu:
          sub_1001DAD64((uint64_t)v5);
          char v17 = 11;
          break;
        case 0xBu:
          sub_1001DAD64((uint64_t)v5);
          char v17 = 12;
          break;
        case 0xCu:
          char v17 = 13;
          break;
        case 0xDu:
          sub_1001DAD64((uint64_t)v5);
          char v17 = 14;
          break;
        case 0xEu:
          sub_1001DAD64((uint64_t)v5);
          char v17 = 15;
          break;
        case 0xFu:
          sub_1001DAD64((uint64_t)v5);
          char v17 = 16;
          break;
        case 0x10u:
          sub_1001DAD64((uint64_t)v5);
          char v17 = 17;
          break;
        case 0x11u:
          sub_1001DAD64((uint64_t)v5);
          char v17 = 18;
          break;
        case 0x12u:
          sub_1001DAD64((uint64_t)v5);
          char v17 = 19;
          break;
        case 0x13u:
          break;
        default:
          sub_1001DAD64((uint64_t)v5);
          char v17 = 0;
          break;
      }
      sub_1001DAD64((uint64_t)v8);
      uint64_t v18 = (uint64_t)v29;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001DD5A8();
        uint64_t v18 = (uint64_t)v29;
      }
      unint64_t v19 = *(void *)(v18 + 16);
      if (v19 >= *(void *)(v18 + 24) >> 1)
      {
        sub_1001DD5A8();
        uint64_t v18 = (uint64_t)v29;
      }
      *(void *)(v18 + 16) = v19 + 1;
      *(unsigned char *)(v18 + v19 + 32) = v17;
      v15 += v16;
      --v12;
    }
    while (v12);
    uint64_t v20 = sub_1001DDC34(v18, v26);
    uint64_t v21 = v28;
    *(void *)(v28 + 24) = v20;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_100129E78((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10012C1A0);
    uint64_t v22 = *(void *)(*(void *)(v21 + 16) + 16);
    sub_1001DEFEC(v22);
    uint64_t v23 = *(void *)(v21 + 16);
    *(void *)(v23 + 16) = v22 + 1;
    *(void *)(v23 + 8 * v22 + 32) = v27;
    return swift_endAccess();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1001DAD64(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LocationViewComponent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001DADC0(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = type metadata accessor for AirQuality();
      goto LABEL_42;
    case 1:
      uint64_t v4 = type metadata accessor for CurrentWeather();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
      type metadata accessor for DailyForecastComponent();
      goto LABEL_48;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = a1 + *(int *)(type metadata accessor for FeelsLikeComponentPreprocessedDataModel() + 28);
      uint64_t v6 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6))
      {
        swift_bridgeObjectRelease();
        uint64_t v7 = v5 + *(int *)(v6 + 20);
        uint64_t v8 = type metadata accessor for TemperatureScaleConfiguration();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
        type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        swift_bridgeObjectRelease();
      }
      goto LABEL_48;
    case 3:
      uint64_t v9 = type metadata accessor for CurrentWeather();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
      uint64_t v10 = (int *)type metadata accessor for HourlyForecastComponent();
      uint64_t v11 = a1 + v10[5];
      swift_bridgeObjectRelease();
      uint64_t v12 = v11 + *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
      uint64_t v13 = type metadata accessor for WeatherDescription();
      if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v13)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      }
      uint64_t v14 = a1 + v10[6];
      uint64_t v15 = sub_10017DF08(&qword_100E66CC8);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
      uint64_t v16 = a1 + v10[7];
      uint64_t v17 = sub_10017DF08(&qword_100E66CA0);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
      a1 += v10[8];
      uint64_t v18 = type metadata accessor for WeatherChanges();
      goto LABEL_39;
    case 4:
      uint64_t v3 = type metadata accessor for CurrentWeather();
      goto LABEL_42;
    case 5:
      uint64_t v19 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(a1, v19);
      uint64_t v20 = a1 + *(int *)(type metadata accessor for MapComponent() + 20);
      swift_bridgeObjectRelease();
      uint64_t v21 = (int *)type metadata accessor for WeatherData(0);
      uint64_t v22 = v20 + v21[5];
      uint64_t v23 = type metadata accessor for Locale();
      if (!_s7Weather24LocationCompositionStateOwet_0(v22, 1, v23)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
      }
      uint64_t v24 = v20 + v21[6];
      uint64_t v25 = type metadata accessor for WeatherDataModel();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
      uint64_t v26 = v20 + v21[7];
      uint64_t v27 = sub_10017DF08(&qword_100E63738);
      if (!_s7Weather24LocationCompositionStateOwet_0(v26, 1, v27))
      {
        uint64_t v28 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v26, v28);
      }
      uint64_t v29 = v20 + v21[8];
      type metadata accessor for WeatherData.WeatherStatisticsState(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v69 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v69 - 8) + 8))(v29, v69);
      }
      else if (!EnumCaseMultiPayload)
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v70 = v20 + v21[9];
      goto LABEL_56;
    case 6:
      swift_bridgeObjectRelease();
      uint64_t v31 = (int *)type metadata accessor for WeatherData(0);
      uint64_t v32 = a1 + v31[5];
      uint64_t v33 = type metadata accessor for Locale();
      if (!_s7Weather24LocationCompositionStateOwet_0(v32, 1, v33)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
      }
      uint64_t v34 = a1 + v31[6];
      uint64_t v35 = type metadata accessor for WeatherDataModel();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
      uint64_t v36 = a1 + v31[7];
      uint64_t v37 = sub_10017DF08(&qword_100E63738);
      if (!_s7Weather24LocationCompositionStateOwet_0(v36, 1, v37))
      {
        uint64_t v38 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v36, v38);
      }
      uint64_t v39 = a1 + v31[8];
      type metadata accessor for WeatherData.WeatherStatisticsState(0);
      int v40 = swift_getEnumCaseMultiPayload();
      if (v40 == 1)
      {
        uint64_t v71 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v71 - 8) + 8))(v39, v71);
      }
      else if (!v40)
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v70 = a1 + v31[9];
LABEL_56:
      uint64_t v72 = type metadata accessor for WeatherDataOverrides();
      uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v70, 1, v72);
      if (result) {
        return result;
      }
      uint64_t v57 = type metadata accessor for Date();
      if (!_s7Weather24LocationCompositionStateOwet_0(v70, 1, v57)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v57 - 8) + 8))(v70, v57);
      }
      a1 = v70 + *(int *)(v72 + 20);
LABEL_60:
      uint64_t result = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v57);
      if (result) {
        return result;
      }
      uint64_t v64 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v57 - 8) + 8);
      uint64_t v66 = a1;
      uint64_t v65 = v57;
      goto LABEL_43;
    case 7:
      type metadata accessor for ArticleModel();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v41 = (int *)type metadata accessor for NewsArticle();
        uint64_t v42 = a1 + v41[6];
        uint64_t v43 = type metadata accessor for URL();
        if (!_s7Weather24LocationCompositionStateOwet_0(v42, 1, v43)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v42, v43);
        }
        uint64_t v44 = a1 + v41[7];
        uint64_t v45 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v44, v45);
        uint64_t v46 = *(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8);
        v46(a1 + v41[8], v43);
        uint64_t v47 = a1 + v41[9];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v48 = v47 + *(int *)(type metadata accessor for NewsChannel() + 24);
        if (!_s7Weather24LocationCompositionStateOwet_0(v48, 1, v43)) {
          v46(v48, v43);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_48:
        return swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v3 = type metadata accessor for Article();
LABEL_42:
        uint64_t v64 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
        uint64_t v65 = v3;
        uint64_t v66 = a1;
LABEL_43:
        return v64(v66, v65);
      }
    case 8:
      uint64_t v49 = type metadata accessor for CurrentWeather();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8))(a1, v49);
      uint64_t HourPrecipitationComponent = type metadata accessor for NextHourPrecipitationComponent();
      uint64_t v51 = a1 + *(int *)(HourPrecipitationComponent + 20);
      uint64_t v52 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v52 - 8) + 8))(v51, v52);
      a1 += *(int *)(HourPrecipitationComponent + 24);
      uint64_t v53 = &qword_100E6E900;
      goto LABEL_41;
    case 9:
      uint64_t v3 = type metadata accessor for Location();
      goto LABEL_42;
    case 10:
      uint64_t v54 = type metadata accessor for CurrentWeather();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8))(a1, v54);
      uint64_t v55 = a1 + *(int *)(type metadata accessor for PressureComponent() + 20);
      uint64_t v56 = type metadata accessor for PressureTrend();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v56 - 8) + 8))(v55, v56);
      type metadata accessor for PressureComponentPreprocessedDataModel();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_48;
    case 11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_48;
    case 13:
      swift_bridgeObjectRelease();
      a1 += *(int *)(type metadata accessor for SevereAlertComponent() + 24);
      uint64_t v3 = type metadata accessor for Date();
      goto LABEL_42;
    case 14:
      uint64_t v3 = type metadata accessor for SunriseSunsetModel();
      goto LABEL_42;
    case 15:
      uint64_t v18 = type metadata accessor for HistoricalComparisons();
LABEL_39:
      uint64_t v57 = v18;
      goto LABEL_60;
    case 16:
      uint64_t v58 = type metadata accessor for CurrentWeather();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v58 - 8) + 8))(a1, v58);
      uint64_t v59 = (int *)type metadata accessor for UVIndexComponent();
      uint64_t v60 = a1 + v59[5];
      uint64_t v61 = type metadata accessor for WeatherDescription();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v61 - 8) + 8))(v60, v61);
      type metadata accessor for UVIndexComponentPreprocessedDataModel();
      swift_bridgeObjectRelease();
      uint64_t v62 = a1 + v59[6];
      uint64_t v63 = sub_10017DF08(&qword_100E66CA0);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v63 - 8) + 8))(v62, v63);
      a1 += v59[7];
      uint64_t v53 = &qword_100E66CC8;
LABEL_41:
      uint64_t v3 = sub_10017DF08(v53);
      goto LABEL_42;
    case 17:
      uint64_t v67 = type metadata accessor for CurrentWeather();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v67 - 8) + 8))(a1, v67);
      type metadata accessor for VisibilityComponent();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_48;
    case 18:
      uint64_t v68 = type metadata accessor for CurrentWeather();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v68 - 8) + 8))(a1, v68);
      type metadata accessor for WindComponent();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_48;
    default:
      return result;
  }
}

uint64_t sub_1001DBA6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationViewComponent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for LocationViewComponent()
{
  uint64_t result = qword_100E94518;
  if (!qword_100E94518) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_1001DBB18(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = type metadata accessor for AirQuality();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_83;
    case 1u:
      uint64_t v7 = type metadata accessor for CurrentWeather();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = type metadata accessor for DailyForecastComponent();
      *(void *)((char *)a1 + *(int *)(v8 + 20)) = *(void *)((char *)a2 + *(int *)(v8 + 20));
      swift_bridgeObjectRetain();
      goto LABEL_83;
    case 2u:
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      uint64_t v10 = a2[3];
      a1[2] = a2[2];
      a1[3] = v10;
      uint64_t v11 = a2[5];
      a1[4] = a2[4];
      a1[5] = v11;
      uint64_t v12 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
      uint64_t v13 = *(int *)(v12 + 28);
      uint64_t v14 = (void *)((char *)a1 + v13);
      uint64_t v15 = (void *)((char *)a2 + v13);
      uint64_t v16 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
      {
        uint64_t v17 = sub_10017DF08(&qword_100E63750);
        memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        uint64_t v149 = v15[1];
        *uint64_t v14 = *v15;
        v14[1] = v149;
        uint64_t v150 = *(int *)(v16 + 20);
        uint64_t v151 = (char *)v14 + v150;
        uint64_t v152 = (char *)v15 + v150;
        uint64_t v153 = type metadata accessor for TemperatureScaleConfiguration();
        uint64_t v250 = v12;
        uint64_t v154 = *(void (**)(char *, char *, uint64_t))(*(void *)(v153 - 8) + 16);
        swift_bridgeObjectRetain();
        v154(v151, v152, v153);
        uint64_t v12 = v250;
        uint64_t v155 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        *(void *)&v151[v155[5]] = *(void *)&v152[v155[5]];
        *(void *)&v151[v155[6]] = *(void *)&v152[v155[6]];
        *(void *)&v151[v155[7]] = *(void *)&v152[v155[7]];
        uint64_t v156 = v155[8];
        uint64_t v157 = &v151[v156];
        uint64_t v158 = &v152[v156];
        uint64_t v160 = *(void *)v158;
        uint64_t v159 = *((void *)v158 + 1);
        *(void *)uint64_t v157 = v160;
        *((void *)v157 + 1) = v159;
        v151[v155[9]] = v152[v155[9]];
        swift_bridgeObjectRetain();
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
      }
      uint64_t v161 = *(int *)(v12 + 32);
      uint64_t v162 = (void *)((char *)a1 + v161);
      uint64_t v163 = (void *)((char *)a2 + v161);
      uint64_t v164 = v163[1];
      void *v162 = *v163;
      v162[1] = v164;
      swift_bridgeObjectRetain();
      goto LABEL_83;
    case 3u:
      uint64_t v18 = type metadata accessor for CurrentWeather();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
      uint64_t v19 = (int *)type metadata accessor for HourlyForecastComponent();
      uint64_t v20 = v19[5];
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      *(void *)((char *)a1 + v20) = *(void *)((char *)a2 + v20);
      uint64_t v23 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
      uint64_t v24 = &v21[v23];
      uint64_t v25 = &v22[v23];
      uint64_t v26 = type metadata accessor for WeatherDescription();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26))
      {
        uint64_t v27 = sub_10017DF08(&qword_100E63758);
        memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
      }
      uint64_t v165 = v19[6];
      uint64_t v166 = (char *)a1 + v165;
      uint64_t v167 = (char *)a2 + v165;
      uint64_t v168 = sub_10017DF08(&qword_100E66CC8);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 16))(v166, v167, v168);
      uint64_t v169 = v19[7];
      uint64_t v170 = (char *)a1 + v169;
      uint64_t v171 = (char *)a2 + v169;
      uint64_t v172 = sub_10017DF08(&qword_100E66CA0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v172 - 8) + 16))(v170, v171, v172);
      uint64_t v173 = v19[8];
      uint64_t v174 = (char *)a1 + v173;
      uint64_t v175 = (char *)a2 + v173;
      uint64_t v176 = type metadata accessor for WeatherChanges();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v175, 1, v176))
      {
        uint64_t v177 = sub_10017DF08(&qword_100E6D1C8);
        memcpy(v174, v175, *(void *)(*(void *)(v177 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 16))(v174, v175, v176);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v174, 0, 1, v176);
      }
      *((unsigned char *)a1 + v19[9]) = *((unsigned char *)a2 + v19[9]);
      *((unsigned char *)a1 + v19[10]) = *((unsigned char *)a2 + v19[10]);
      goto LABEL_83;
    case 4u:
      uint64_t v28 = type metadata accessor for CurrentWeather();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
      goto LABEL_83;
    case 5u:
      uint64_t v29 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(a1, a2, v29);
      uint64_t v30 = *(int *)(type metadata accessor for MapComponent() + 20);
      uint64_t v31 = (void *)((char *)a1 + v30);
      uint64_t v32 = (char *)a2 + v30;
      uint64_t v33 = *(void *)((char *)a2 + v30 + 8);
      *uint64_t v31 = *(void *)((char *)a2 + v30);
      v31[1] = v33;
      uint64_t v34 = (int *)type metadata accessor for WeatherData(0);
      uint64_t v35 = v34[5];
      uint64_t v36 = (char *)v31 + v35;
      uint64_t v37 = &v32[v35];
      uint64_t v38 = type metadata accessor for Locale();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v38))
      {
        uint64_t v39 = sub_10017DF08(&qword_100E63730);
        memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v38);
      }
      uint64_t v178 = v34[6];
      uint64_t v179 = (char *)v31 + v178;
      uint64_t v180 = &v32[v178];
      uint64_t v181 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v181 - 8) + 16))(v179, v180, v181);
      uint64_t v182 = v34[7];
      uint64_t v183 = (char *)v31 + v182;
      uint64_t v184 = &v32[v182];
      uint64_t v185 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v184, 1, v185))
      {
        uint64_t v186 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v183, v184, *(void *)(*(void *)(v186 - 8) + 64));
      }
      else
      {
        uint64_t v196 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v196 - 8) + 16))(v183, v184, v196);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v183, 0, 1, v185);
      }
      uint64_t v197 = v34[8];
      uint64_t v198 = (void *)((char *)v31 + v197);
      uint64_t v199 = &v32[v197];
      uint64_t v200 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v210 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v210 - 8) + 16))(v198, v199, v210);
        goto LABEL_53;
      }
      if (!EnumCaseMultiPayload)
      {
        uint64_t v202 = *((void *)v199 + 1);
        *uint64_t v198 = *(void *)v199;
        v198[1] = v202;
        swift_bridgeObjectRetain();
LABEL_53:
        swift_storeEnumTagMultiPayload();
        goto LABEL_55;
      }
      memcpy(v198, v199, *(void *)(*(void *)(v200 - 8) + 64));
LABEL_55:
      uint64_t v211 = v34[9];
      uint64_t v212 = (char *)v31 + v211;
      uint64_t v213 = &v32[v211];
      uint64_t v214 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v213, 1, v214))
      {
        uint64_t v215 = sub_10017DF08(&qword_100E63740);
        memcpy(v212, v213, *(void *)(*(void *)(v215 - 8) + 64));
      }
      else
      {
        uint64_t v216 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v213, 1, v216))
        {
          uint64_t v217 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v212, v213, *(void *)(*(void *)(v217 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v216 - 8) + 16))(v212, v213, v216);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v212, 0, 1, v216);
        }
        uint64_t v241 = *(int *)(v214 + 20);
        id v242 = &v212[v241];
        id v243 = &v213[v241];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v243, 1, v216))
        {
          uint64_t v244 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v242, v243, *(void *)(*(void *)(v244 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v216 - 8) + 16))(v242, v243, v216);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v242, 0, 1, v216);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v212, 0, 1, v214);
      }
      goto LABEL_83;
    case 6u:
      uint64_t v40 = a2[1];
      *a1 = *a2;
      a1[1] = v40;
      uint64_t v41 = (int *)type metadata accessor for WeatherData(0);
      uint64_t v42 = v41[5];
      uint64_t v43 = (char *)a1 + v42;
      uint64_t v44 = (char *)a2 + v42;
      uint64_t v45 = type metadata accessor for Locale();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45))
      {
        uint64_t v46 = sub_10017DF08(&qword_100E63730);
        memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
      }
      uint64_t v187 = v41[6];
      uint64_t v188 = (char *)a1 + v187;
      id v189 = (char *)a2 + v187;
      uint64_t v190 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v190 - 8) + 16))(v188, v189, v190);
      uint64_t v191 = v41[7];
      uint64_t v192 = (char *)a1 + v191;
      uint64_t v193 = (char *)a2 + v191;
      uint64_t v194 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v193, 1, v194))
      {
        uint64_t v195 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v192, v193, *(void *)(*(void *)(v195 - 8) + 64));
      }
      else
      {
        uint64_t v203 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v203 - 8) + 16))(v192, v193, v203);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v192, 0, 1, v194);
      }
      uint64_t v204 = v41[8];
      uint64_t v205 = (void *)((char *)a1 + v204);
      uint64_t v206 = (void *)((char *)a2 + v204);
      uint64_t v207 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      int v208 = swift_getEnumCaseMultiPayload();
      if (v208 == 1)
      {
        uint64_t v218 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v218 - 8) + 16))(v205, v206, v218);
        goto LABEL_60;
      }
      if (!v208)
      {
        uint64_t v209 = v206[1];
        *uint64_t v205 = *v206;
        v205[1] = v209;
        swift_bridgeObjectRetain();
LABEL_60:
        swift_storeEnumTagMultiPayload();
        goto LABEL_62;
      }
      memcpy(v205, v206, *(void *)(*(void *)(v207 - 8) + 64));
LABEL_62:
      uint64_t v219 = v41[9];
      uint64_t v220 = (char *)a1 + v219;
      uint64_t v221 = (char *)a2 + v219;
      uint64_t v222 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v221, 1, v222))
      {
        uint64_t v223 = sub_10017DF08(&qword_100E63740);
        memcpy(v220, v221, *(void *)(*(void *)(v223 - 8) + 64));
      }
      else
      {
        uint64_t v224 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v221, 1, v224))
        {
          uint64_t v225 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v220, v221, *(void *)(*(void *)(v225 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 16))(v220, v221, v224);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v220, 0, 1, v224);
        }
        uint64_t v245 = *(int *)(v222 + 20);
        uint64_t v246 = &v220[v245];
        uint64_t v247 = &v221[v245];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v247, 1, v224))
        {
          uint64_t v248 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v246, v247, *(void *)(*(void *)(v248 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 16))(v246, v247, v224);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v246, 0, 1, v224);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v220, 0, 1, v222);
      }
LABEL_83:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 7u:
      type metadata accessor for ArticleModel();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v47 = a2[1];
        *a1 = *a2;
        a1[1] = v47;
        uint64_t v48 = a2[3];
        a1[2] = a2[2];
        a1[3] = v48;
        uint64_t v49 = (int *)type metadata accessor for NewsArticle();
        uint64_t v50 = v49[6];
        uint64_t v51 = (char *)a1 + v50;
        uint64_t v52 = (char *)a2 + v50;
        uint64_t v53 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v53))
        {
          uint64_t v54 = sub_10017DF08(&qword_100E749B0);
          memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v51, 0, 1, v53);
        }
        uint64_t v226 = v49[7];
        uint64_t v227 = (char *)a1 + v226;
        uint64_t v228 = (char *)a2 + v226;
        uint64_t v229 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v229 - 8) + 16))(v227, v228, v229);
        uint64_t v230 = *(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16);
        v230((char *)a1 + v49[8], (char *)a2 + v49[8], v53);
        uint64_t v231 = v49[9];
        uint64_t v232 = (void *)((char *)a1 + v231);
        uint64_t v233 = (char *)a2 + v231;
        uint64_t v234 = *(void *)((char *)a2 + v231 + 8);
        void *v232 = *(void *)((char *)a2 + v231);
        v232[1] = v234;
        uint64_t v235 = *(void *)((char *)a2 + v231 + 24);
        v232[2] = *(void *)((char *)a2 + v231 + 16);
        v232[3] = v235;
        uint64_t v236 = *(int *)(type metadata accessor for NewsChannel() + 24);
        uint64_t v237 = (char *)v232 + v236;
        uint64_t v238 = &v233[v236];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v238, 1, v53))
        {
          uint64_t v239 = sub_10017DF08(&qword_100E749B0);
          memcpy(v237, v238, *(void *)(*(void *)(v239 - 8) + 64));
        }
        else
        {
          v230(v237, v238, v53);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v237, 0, 1, v53);
        }
        *(void *)((char *)a1 + v49[10]) = *(void *)((char *)a2 + v49[10]);
        *(void *)((char *)a1 + v49[11]) = *(void *)((char *)a2 + v49[11]);
        *(void *)((char *)a1 + v49[12]) = *(void *)((char *)a2 + v49[12]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v148 = type metadata accessor for Article();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v148 - 8) + 16))(a1, a2, v148);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v240 = type metadata accessor for NewsArticleComponent();
      *((unsigned char *)a1 + *(int *)(v240 + 20)) = *((unsigned char *)a2 + *(int *)(v240 + 20));
      goto LABEL_83;
    case 8u:
      uint64_t v55 = type metadata accessor for CurrentWeather();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v55 - 8) + 16))(a1, a2, v55);
      uint64_t HourPrecipitationComponent = type metadata accessor for NextHourPrecipitationComponent();
      uint64_t v57 = *(int *)(HourPrecipitationComponent + 20);
      uint64_t v58 = (char *)a1 + v57;
      uint64_t v59 = (char *)a2 + v57;
      uint64_t v60 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
      uint64_t v61 = *(int *)(HourPrecipitationComponent + 24);
      uint64_t v62 = (char *)a1 + v61;
      uint64_t v63 = (char *)a2 + v61;
      uint64_t v64 = sub_10017DF08(&qword_100E6E900);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v62, v63, v64);
      goto LABEL_83;
    case 9u:
      uint64_t v65 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v65 - 8) + 16))(a1, a2, v65);
      goto LABEL_83;
    case 0xAu:
      uint64_t v66 = type metadata accessor for CurrentWeather();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v66 - 8) + 16))(a1, a2, v66);
      uint64_t v67 = *(int *)(type metadata accessor for PressureComponent() + 20);
      uint64_t v68 = (char *)a1 + v67;
      uint64_t v69 = (char *)a2 + v67;
      uint64_t v70 = type metadata accessor for PressureTrend();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16))(v68, v69, v70);
      uint64_t v71 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
      uint64_t v72 = v71[5];
      uint64_t v73 = &v68[v72];
      uint64_t v74 = &v69[v72];
      uint64_t v76 = *(void *)v74;
      uint64_t v75 = *((void *)v74 + 1);
      *(void *)uint64_t v73 = v76;
      *((void *)v73 + 1) = v75;
      uint64_t v77 = v71[6];
      uint64_t v78 = &v68[v77];
      uint64_t v79 = &v69[v77];
      uint64_t v80 = *((void *)v79 + 1);
      *(void *)uint64_t v78 = *(void *)v79;
      *((void *)v78 + 1) = v80;
      uint64_t v81 = v71[7];
      uint64_t v82 = &v68[v81];
      uint64_t v83 = &v69[v81];
      uint64_t v84 = *((void *)v83 + 1);
      *(void *)uint64_t v82 = *(void *)v83;
      *((void *)v82 + 1) = v84;
      *(void *)&v68[v71[8]] = *(void *)&v69[v71[8]];
      uint64_t v85 = v71[9];
      uint64_t v86 = &v68[v85];
      uint64_t v87 = &v69[v85];
      uint64_t v88 = *((void *)v87 + 1);
      *(void *)uint64_t v86 = *(void *)v87;
      *((void *)v86 + 1) = v88;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_83;
    case 0xBu:
      uint64_t v89 = a2[1];
      *a1 = *a2;
      a1[1] = v89;
      uint64_t v90 = a2[3];
      a1[2] = a2[2];
      a1[3] = v90;
      uint64_t v91 = a2[5];
      a1[4] = a2[4];
      a1[5] = v91;
      uint64_t v92 = a2[7];
      a1[6] = a2[6];
      a1[7] = v92;
      uint64_t v93 = a2[9];
      a1[8] = a2[8];
      a1[9] = v93;
      uint64_t v94 = a2[11];
      a1[10] = a2[10];
      a1[11] = v94;
      uint64_t v95 = a2[12];
      uint64_t v96 = a2[13];
      a1[12] = v95;
      a1[13] = v96;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_83;
    case 0xDu:
      uint64_t v97 = a2[1];
      *a1 = *a2;
      a1[1] = v97;
      uint64_t v98 = *(int *)(type metadata accessor for SevereAlertComponent() + 24);
      uint64_t v99 = (char *)a1 + v98;
      uint64_t v100 = (char *)a2 + v98;
      uint64_t v101 = type metadata accessor for Date();
      uint64_t v102 = *(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16);
      swift_bridgeObjectRetain();
      v102(v99, v100, v101);
      goto LABEL_83;
    case 0xEu:
      uint64_t v103 = type metadata accessor for SunriseSunsetModel();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v103 - 8) + 16))(a1, a2, v103);
      goto LABEL_83;
    case 0xFu:
      uint64_t v104 = type metadata accessor for HistoricalComparisons();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v104))
      {
        uint64_t v105 = sub_10017DF08(&qword_100E6B8B8);
        memcpy(a1, a2, *(void *)(*(void *)(v105 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v104 - 8) + 16))(a1, a2, v104);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v104);
      }
      goto LABEL_83;
    case 0x10u:
      uint64_t v106 = type metadata accessor for CurrentWeather();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v106 - 8) + 16))(a1, a2, v106);
      uint64_t v107 = (int *)type metadata accessor for UVIndexComponent();
      uint64_t v108 = v107[5];
      uint64_t v109 = (char *)a1 + v108;
      uint64_t v110 = (char *)a2 + v108;
      uint64_t v111 = type metadata accessor for WeatherDescription();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 16))(v109, v110, v111);
      uint64_t v112 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
      uint64_t v113 = &v109[v112];
      uint64_t v114 = &v110[v112];
      uint64_t v115 = *((void *)v114 + 1);
      *(void *)uint64_t v113 = *(void *)v114;
      *((void *)v113 + 1) = v115;
      uint64_t v116 = v107[6];
      uint64_t v117 = (char *)a1 + v116;
      uint64_t v118 = (char *)a2 + v116;
      swift_bridgeObjectRetain();
      uint64_t v119 = sub_10017DF08(&qword_100E66CA0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 16))(v117, v118, v119);
      uint64_t v120 = v107[7];
      uint64_t v121 = (char *)a1 + v120;
      uint64_t v122 = (char *)a2 + v120;
      uint64_t v123 = sub_10017DF08(&qword_100E66CC8);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 16))(v121, v122, v123);
      goto LABEL_83;
    case 0x11u:
      uint64_t v124 = type metadata accessor for CurrentWeather();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v124 - 8) + 16))(a1, a2, v124);
      uint64_t v125 = *(int *)(type metadata accessor for VisibilityComponent() + 20);
      uint64_t v126 = (void *)((char *)a1 + v125);
      uint64_t v127 = (void *)((char *)a2 + v125);
      uint64_t v128 = v127[1];
      void *v126 = *v127;
      v126[1] = v128;
      uint64_t v129 = v127[3];
      v126[2] = v127[2];
      v126[3] = v129;
      uint64_t v130 = v127[5];
      v126[4] = v127[4];
      v126[5] = v130;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_83;
    case 0x12u:
      uint64_t v131 = type metadata accessor for CurrentWeather();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v131 - 8) + 16))(a1, a2, v131);
      uint64_t v132 = *(int *)(type metadata accessor for WindComponent() + 20);
      uint64_t v133 = (char *)a1 + v132;
      uint64_t v134 = (char *)a2 + v132;
      uint64_t v135 = *((void *)v134 + 1);
      *(void *)uint64_t v133 = *(void *)v134;
      *((void *)v133 + 1) = v135;
      uint64_t v136 = *((void *)v134 + 3);
      *((void *)v133 + 2) = *((void *)v134 + 2);
      *((void *)v133 + 3) = v136;
      uint64_t v137 = *((void *)v134 + 5);
      *((void *)v133 + 4) = *((void *)v134 + 4);
      *((void *)v133 + 5) = v137;
      uint64_t v138 = *((void *)v134 + 7);
      *((void *)v133 + 6) = *((void *)v134 + 6);
      *((void *)v133 + 7) = v138;
      uint64_t v139 = *((void *)v134 + 9);
      *((void *)v133 + 8) = *((void *)v134 + 8);
      *((void *)v133 + 9) = v139;
      uint64_t v140 = *((void *)v134 + 11);
      *((void *)v133 + 10) = *((void *)v134 + 10);
      *((void *)v133 + 11) = v140;
      uint64_t v141 = *((void *)v134 + 13);
      *((void *)v133 + 12) = *((void *)v134 + 12);
      *((void *)v133 + 13) = v141;
      uint64_t v142 = *((void *)v134 + 15);
      *((void *)v133 + 14) = *((void *)v134 + 14);
      *((void *)v133 + 15) = v142;
      uint64_t v143 = *((void *)v134 + 17);
      *((void *)v133 + 16) = *((void *)v134 + 16);
      *((void *)v133 + 17) = v143;
      uint64_t v144 = *((void *)v134 + 19);
      *((void *)v133 + 18) = *((void *)v134 + 18);
      *((void *)v133 + 19) = v144;
      uint64_t v145 = *((void *)v134 + 21);
      *((void *)v133 + 20) = *((void *)v134 + 20);
      *((void *)v133 + 21) = v145;
      uint64_t v146 = *((void *)v134 + 23);
      *((void *)v133 + 22) = *((void *)v134 + 22);
      *((void *)v133 + 23) = v146;
      uint64_t v147 = *((void *)v134 + 25);
      *((void *)v133 + 24) = *((void *)v134 + 24);
      *((void *)v133 + 25) = v147;
      *((_OWORD *)v133 + 13) = *((_OWORD *)v134 + 13);
      *((void *)v133 + 28) = *((void *)v134 + 28);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_83;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
  }
}

uint64_t type metadata accessor for HourlyForecastComponent()
{
  uint64_t result = qword_100EA0C10;
  if (!qword_100EA0C10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for DailyForecastComponent()
{
  uint64_t result = qword_100E883F8;
  if (!qword_100E883F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for VisibilityComponent()
{
  uint64_t result = qword_100E7CD90;
  if (!qword_100E7CD90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for PressureComponent()
{
  uint64_t result = qword_100E966E0;
  if (!qword_100E966E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for UVIndexComponent()
{
  uint64_t result = qword_100EB0278;
  if (!qword_100EB0278) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for WindComponent()
{
  uint64_t result = qword_100EB6690;
  if (!qword_100EB6690) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for MapComponent()
{
  uint64_t result = qword_100EA7718;
  if (!qword_100EA7718) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001DD5A8()
{
  sub_1001DD5D0();
  *uint64_t v0 = v1;
}

void sub_1001DD5D0()
{
  sub_10018C55C();
  if (v4)
  {
    sub_10017E9A4();
    if (v5 != v6)
    {
      sub_100183F88();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1001A24A0();
    }
  }
  sub_1001A2E3C();
  if (v3)
  {
    sub_10017DF08(v7);
    uint64_t v8 = (void *)swift_allocObject();
    size_t v9 = j__malloc_size(v8);
    _OWORD v8[2] = v2;
    v8[3] = 2 * v9 - 64;
  }
  uint64_t v10 = (char *)sub_10018A3F8();
  if (v1)
  {
    sub_1007EB24C(v10, v11, v12);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    sub_1001DDB90();
  }
  swift_release();
}

void sub_1001DD680(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = a2;
  uint64_t v25 = type metadata accessor for LocationViewComponent();
  uint64_t v4 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v24 = (uint64_t)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v21 - v7;
  __chkstk_darwin(v9);
  size_t v11 = (char *)&v21 - v10;
  uint64_t v27 = _swiftEmptyArrayStorage;
  uint64_t v23 = *(void *)(a1 + 16);
  if (v23)
  {
    uint64_t v21 = v2;
    unint64_t v12 = 0;
    uint64_t v22 = a1;
    while (v12 < *(void *)(a1 + 16))
    {
      unint64_t v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      uint64_t v14 = *(void *)(v4 + 72);
      unint64_t v15 = v12 + 1;
      sub_1001DBA6C(a1 + v13 + v14 * v12, (uint64_t)v11);
      uint64_t v16 = *(void *)(v26 + 24);
      sub_1001DBA6C((uint64_t)v11, (uint64_t)v8);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          swift_bridgeObjectRetain();
          sub_1001DAD64((uint64_t)v8);
          unsigned __int8 v17 = 1;
          break;
        case 2u:
          swift_bridgeObjectRetain();
          sub_1001DAD64((uint64_t)v8);
          unsigned __int8 v17 = 2;
          break;
        case 3u:
          swift_bridgeObjectRetain();
          sub_1001DAD64((uint64_t)v8);
          unsigned __int8 v17 = 3;
          break;
        case 4u:
          swift_bridgeObjectRetain();
          sub_1001DAD64((uint64_t)v8);
          unsigned __int8 v17 = 4;
          break;
        case 5u:
          swift_bridgeObjectRetain();
          sub_1001DAD64((uint64_t)v8);
          unsigned __int8 v17 = 5;
          break;
        case 6u:
          swift_bridgeObjectRetain();
          sub_1001DAD64((uint64_t)v8);
          unsigned __int8 v17 = 6;
          break;
        case 7u:
          swift_bridgeObjectRetain();
          sub_1001DAD64((uint64_t)v8);
          unsigned __int8 v17 = 7;
          break;
        case 8u:
          swift_bridgeObjectRetain();
          sub_1001DAD64((uint64_t)v8);
          unsigned __int8 v17 = 8;
          break;
        case 9u:
          swift_bridgeObjectRetain();
          sub_1001DAD64((uint64_t)v8);
          unsigned __int8 v17 = 9;
          break;
        case 0xAu:
          swift_bridgeObjectRetain();
          sub_1001DAD64((uint64_t)v8);
          unsigned __int8 v17 = 11;
          break;
        case 0xBu:
          swift_bridgeObjectRetain();
          sub_1001DAD64((uint64_t)v8);
          unsigned __int8 v17 = 12;
          break;
        case 0xCu:
          swift_bridgeObjectRetain();
          unsigned __int8 v17 = 13;
          break;
        case 0xDu:
          swift_bridgeObjectRetain();
          sub_1001DAD64((uint64_t)v8);
          unsigned __int8 v17 = 14;
          break;
        case 0xEu:
          swift_bridgeObjectRetain();
          sub_1001DAD64((uint64_t)v8);
          unsigned __int8 v17 = 15;
          break;
        case 0xFu:
          swift_bridgeObjectRetain();
          sub_1001DAD64((uint64_t)v8);
          unsigned __int8 v17 = 16;
          break;
        case 0x10u:
          swift_bridgeObjectRetain();
          sub_1001DAD64((uint64_t)v8);
          unsigned __int8 v17 = 17;
          break;
        case 0x11u:
          swift_bridgeObjectRetain();
          sub_1001DAD64((uint64_t)v8);
          unsigned __int8 v17 = 18;
          break;
        case 0x12u:
          swift_bridgeObjectRetain();
          sub_1001DAD64((uint64_t)v8);
          unsigned __int8 v17 = 19;
          break;
        case 0x13u:
          swift_bridgeObjectRetain();
          unsigned __int8 v17 = 10;
          break;
        default:
          swift_bridgeObjectRetain();
          sub_1001DAD64((uint64_t)v8);
          unsigned __int8 v17 = 0;
          break;
      }
      char v18 = sub_1001DE850(v17, v16);
      swift_bridgeObjectRelease();
      if (v18)
      {
        sub_1001DAD64((uint64_t)v11);
      }
      else
      {
        sub_1001DDAC8((uint64_t)v11, v24);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1001DDB2C();
        }
        uint64_t v19 = v27;
        unint64_t v20 = v27[2];
        if (v20 >= v27[3] >> 1)
        {
          sub_1001DDB2C();
          uint64_t v19 = v27;
        }
        void v19[2] = v20 + 1;
        sub_1001DDAC8(v24, (uint64_t)v19 + v13 + v20 * v14);
      }
      unint64_t v12 = v15;
      a1 = v22;
      if (v23 == v15) {
        goto LABEL_33;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_33:
    swift_release();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1001DDAC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationViewComponent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1001DDB2C()
{
  sub_10018A6B4();
  *uint64_t v0 = v1;
}

void *sub_1001DDB90()
{
  sub_1001EA87C();
  if (v3 < 0)
  {
    sub_100187288();
    sub_1001D1DF8();
LABEL_11:
    uint64_t result = (void *)sub_100163950();
    __break(1u);
    return result;
  }
  if (&v2[v1] > v0 && &v0[v1] > v2)
  {
    sub_100187288();
    sub_100181768();
    goto LABEL_11;
  }

  return memcpy(v2, v0, v1);
}

uint64_t sub_1001DDC34(uint64_t a1, uint64_t a2)
{
  uint64_t v9 = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      uint64_t v5 = a1 + i;
      sub_1001DDCB4(&v8, *(unsigned char *)(v5 + 32));
    }
    swift_bridgeObjectRelease();
    return v9;
  }
  else
  {
    uint64_t v6 = a2;
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_1001DDCB4(char *a1, char a2)
{
  uint64_t v7 = *v2;
  Hasher.init(_seed:)();
  sub_1001DEDB8(a2);
  sub_100119118();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._finalize()();
  sub_100189410();
  if (v8)
  {
    sub_10008B904();
    while (1)
    {
      unint64_t v9 = 0xEA00000000007974;
      switch(*(unsigned char *)(*(void *)(v7 + 48) + v3))
      {
        case 1:
          uint64_t v10 = 1935762277;
          goto LABEL_22;
        case 2:
          unint64_t v9 = 0xE900000000000065;
          break;
        case 3:
          unint64_t v9 = 0xEE00747361636572;
          break;
        case 4:
          unint64_t v9 = 0xE800000000000000;
          break;
        case 5:
          unint64_t v9 = 0xE300000000000000;
          break;
        case 6:
          unint64_t v9 = 0xE400000000000000;
          break;
        case 7:
          uint64_t v11 = 6646883;
          goto LABEL_20;
        case 8:
          sub_1001584F8();
          unint64_t v12 = "atureLow";
          goto LABEL_14;
        case 9:
          unint64_t v13 = "sLike";
          goto LABEL_17;
        case 0xA:
          sub_1001584F8();
          unint64_t v12 = "notificationsOptIn";
LABEL_14:
          unint64_t v9 = (unint64_t)v12 | 0x8000000000000000;
          break;
        case 0xB:
          unint64_t v9 = 0xE800000000000000;
          break;
        case 0xC:
          unint64_t v13 = "feelsLikeApparent";
LABEL_17:
          unint64_t v9 = (unint64_t)v13 | 0x8000000000000000;
          break;
        case 0xD:
          unint64_t v14 = 0x7265687461;
          goto LABEL_23;
        case 0xE:
          uint64_t v11 = 7631461;
LABEL_20:
          unint64_t v9 = v11 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 0xF:
          uint64_t v10 = 1702063733;
LABEL_22:
          unint64_t v14 = v10 & 0xFFFF0000FFFFFFFFLL | 0x7400000000;
LABEL_23:
          unint64_t v9 = v14 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
          break;
        case 0x10:
          unint64_t v9 = 0xE800000000000000;
          break;
        case 0x11:
          unint64_t v9 = 0xE700000000000000;
          break;
        case 0x13:
          unint64_t v9 = 0xE400000000000000;
          break;
        default:
          break;
      }
      sub_1001790E0();
      switch(v17)
      {
        case 1:
          unint64_t v16 = 0x726F46796C696164;
          uint64_t v18 = 1935762277;
          goto LABEL_46;
        case 2:
          unint64_t v16 = 0x6B694C736C656566;
          unint64_t v4 = 0xE900000000000065;
          break;
        case 3:
          unint64_t v16 = 0x6F46796C72756F68;
          unint64_t v4 = 0xEE00747361636572;
          break;
        case 4:
          unint64_t v4 = 0xE800000000000000;
          unint64_t v16 = 0x79746964696D7568;
          break;
        case 5:
          unint64_t v4 = 0xE300000000000000;
          unint64_t v16 = 7364973;
          break;
        case 6:
          unint64_t v4 = 0xE400000000000000;
          unint64_t v16 = 1852796781;
          break;
        case 7:
          unint64_t v16 = 0x697472417377656ELL;
          uint64_t v19 = 6646883;
          goto LABEL_44;
        case 8:
          sub_1001584F8();
          unint64_t v16 = v20 + 3;
          uint64_t v21 = "atureLow";
          goto LABEL_38;
        case 9:
          uint64_t v22 = "sLike";
          goto LABEL_41;
        case 10:
          sub_1001584F8();
          unint64_t v16 = v23 + 9;
          uint64_t v21 = "notificationsOptIn";
LABEL_38:
          unint64_t v4 = (unint64_t)v21 | 0x8000000000000000;
          break;
        case 11:
          unint64_t v4 = 0xE800000000000000;
          unint64_t v16 = 0x6572757373657270;
          break;
        case 12:
          uint64_t v22 = "feelsLikeApparent";
LABEL_41:
          unint64_t v4 = (unint64_t)v22 | 0x8000000000000000;
          unint64_t v16 = 0xD000000000000012;
          break;
        case 13:
          unint64_t v16 = 0x655774726F706572;
          unint64_t v24 = 0x7265687461;
          goto LABEL_47;
        case 14:
          unint64_t v16 = 0x6C41657265766573;
          uint64_t v19 = 7631461;
LABEL_44:
          unint64_t v4 = v19 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 15:
          unint64_t v16 = 0x53657369726E7573;
          uint64_t v18 = 1702063733;
LABEL_46:
          unint64_t v24 = v18 & 0xFFFF0000FFFFFFFFLL | 0x7400000000;
LABEL_47:
          unint64_t v4 = v24 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
          break;
        case 16:
          unint64_t v4 = 0xE800000000000000;
          unint64_t v16 = 0x7365676172657661;
          break;
        case 17:
          unint64_t v4 = 0xE700000000000000;
          unint64_t v16 = 0x7865646E497675;
          break;
        case 18:
          unint64_t v16 = 0x696C696269736976;
          break;
        case 19:
          unint64_t v4 = 0xE400000000000000;
          unint64_t v16 = 1684957559;
          break;
        default:
          break;
      }
      if (v15 == v16 && v9 == v4)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_61;
      }
      sub_10019B1A8();
      sub_10019CC08();
      swift_bridgeObjectRelease();
      if (v5) {
        break;
      }
      sub_100165260();
      if ((v26 & 1) == 0) {
        goto LABEL_58;
      }
    }
    swift_bridgeObjectRelease();
LABEL_61:
    uint64_t result = sub_1001C86E8();
  }
  else
  {
LABEL_58:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1001DE260(a2, v3, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v30;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
  }
  *a1 = a2;
  return result;
}

uint64_t sub_1001DE228()
{
  return v0;
}

uint64_t sub_1001DE240()
{
  return v0;
}

uint64_t sub_1001DE24C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  return a21;
}

void sub_1001DE260(char a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_66;
  }
  if (a3)
  {
    sub_100081324();
  }
  else
  {
    if (v7 > v6)
    {
      sub_10014F1FC(&qword_100E97000);
      goto LABEL_66;
    }
    sub_1001DF350();
  }
  uint64_t v8 = *v3;
  Hasher.init(_seed:)();
  sub_1001DEDB8(a1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v9 = Hasher._finalize()();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v11 = ~v10;
    do
    {
      unint64_t v12 = 0xEA00000000007974;
      unint64_t v13 = 0x696C617551726961;
      switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
      {
        case 1:
          unint64_t v13 = 0x726F46796C696164;
          uint64_t v14 = 1935762277;
          goto LABEL_24;
        case 2:
          unint64_t v13 = 0x6B694C736C656566;
          unint64_t v12 = 0xE900000000000065;
          break;
        case 3:
          unint64_t v13 = 0x6F46796C72756F68;
          unint64_t v12 = 0xEE00747361636572;
          break;
        case 4:
          unint64_t v12 = 0xE800000000000000;
          unint64_t v13 = 0x79746964696D7568;
          break;
        case 5:
          unint64_t v12 = 0xE300000000000000;
          unint64_t v13 = 7364973;
          break;
        case 6:
          unint64_t v12 = 0xE400000000000000;
          unint64_t v13 = 1852796781;
          break;
        case 7:
          unint64_t v13 = 0x697472417377656ELL;
          uint64_t v15 = 6646883;
          goto LABEL_22;
        case 8:
          unint64_t v13 = 0xD000000000000015;
          uint64_t v18 = "atureLow";
          goto LABEL_29;
        case 9:
          unint64_t v16 = "sLike";
          goto LABEL_18;
        case 0xA:
          unint64_t v13 = 0xD00000000000001BLL;
          uint64_t v18 = "notificationsOptIn";
LABEL_29:
          unint64_t v12 = (unint64_t)v18 | 0x8000000000000000;
          break;
        case 0xB:
          unint64_t v12 = 0xE800000000000000;
          unint64_t v13 = 0x6572757373657270;
          break;
        case 0xC:
          unint64_t v16 = "feelsLikeApparent";
LABEL_18:
          unint64_t v12 = (unint64_t)v16 | 0x8000000000000000;
          unint64_t v13 = 0xD000000000000012;
          break;
        case 0xD:
          unint64_t v13 = 0x655774726F706572;
          unint64_t v17 = 0x7265687461;
          goto LABEL_31;
        case 0xE:
          unint64_t v13 = 0x6C41657265766573;
          uint64_t v15 = 7631461;
LABEL_22:
          unint64_t v12 = v15 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 0xF:
          unint64_t v13 = 0x53657369726E7573;
          uint64_t v14 = 1702063733;
LABEL_24:
          unint64_t v17 = v14 & 0xFFFF0000FFFFFFFFLL | 0x7400000000;
LABEL_31:
          unint64_t v12 = v17 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
          break;
        case 0x10:
          unint64_t v12 = 0xE800000000000000;
          unint64_t v13 = 0x7365676172657661;
          break;
        case 0x11:
          unint64_t v12 = 0xE700000000000000;
          unint64_t v13 = 0x7865646E497675;
          break;
        case 0x12:
          unint64_t v13 = 0x696C696269736976;
          break;
        case 0x13:
          unint64_t v12 = 0xE400000000000000;
          unint64_t v13 = 1684957559;
          break;
        default:
          break;
      }
      unint64_t v19 = 0x696C617551726961;
      unint64_t v20 = 0xEA00000000007974;
      switch(a1)
      {
        case 1:
          unint64_t v19 = 0x726F46796C696164;
          uint64_t v21 = 1935762277;
          goto LABEL_49;
        case 2:
          unint64_t v19 = 0x6B694C736C656566;
          unint64_t v20 = 0xE900000000000065;
          break;
        case 3:
          unint64_t v19 = 0x6F46796C72756F68;
          unint64_t v20 = 0xEE00747361636572;
          break;
        case 4:
          unint64_t v20 = 0xE800000000000000;
          unint64_t v19 = 0x79746964696D7568;
          break;
        case 5:
          unint64_t v20 = 0xE300000000000000;
          unint64_t v19 = 7364973;
          break;
        case 6:
          unint64_t v20 = 0xE400000000000000;
          unint64_t v19 = 1852796781;
          break;
        case 7:
          unint64_t v19 = 0x697472417377656ELL;
          uint64_t v22 = 6646883;
          goto LABEL_47;
        case 8:
          unint64_t v19 = 0xD000000000000015;
          uint64_t v25 = "atureLow";
          goto LABEL_54;
        case 9:
          uint64_t v23 = "sLike";
          goto LABEL_43;
        case 10:
          unint64_t v19 = 0xD00000000000001BLL;
          uint64_t v25 = "notificationsOptIn";
LABEL_54:
          unint64_t v20 = (unint64_t)v25 | 0x8000000000000000;
          break;
        case 11:
          unint64_t v20 = 0xE800000000000000;
          unint64_t v19 = 0x6572757373657270;
          break;
        case 12:
          uint64_t v23 = "feelsLikeApparent";
LABEL_43:
          unint64_t v20 = (unint64_t)v23 | 0x8000000000000000;
          unint64_t v19 = 0xD000000000000012;
          break;
        case 13:
          unint64_t v19 = 0x655774726F706572;
          unint64_t v24 = 0x7265687461;
          goto LABEL_56;
        case 14:
          unint64_t v19 = 0x6C41657265766573;
          uint64_t v22 = 7631461;
LABEL_47:
          unint64_t v20 = v22 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 15:
          unint64_t v19 = 0x53657369726E7573;
          uint64_t v21 = 1702063733;
LABEL_49:
          unint64_t v24 = v21 & 0xFFFF0000FFFFFFFFLL | 0x7400000000;
LABEL_56:
          unint64_t v20 = v24 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
          break;
        case 16:
          unint64_t v20 = 0xE800000000000000;
          unint64_t v19 = 0x7365676172657661;
          break;
        case 17:
          unint64_t v20 = 0xE700000000000000;
          unint64_t v19 = 0x7865646E497675;
          break;
        case 18:
          unint64_t v19 = 0x696C696269736976;
          break;
        case 19:
          unint64_t v20 = 0xE400000000000000;
          unint64_t v19 = 1684957559;
          break;
        default:
          break;
      }
      if (v13 == v19 && v12 == v20) {
        goto LABEL_69;
      }
      char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v27) {
        goto LABEL_70;
      }
      a2 = (a2 + 1) & v11;
    }
    while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_66:
  uint64_t v28 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v28 + 48) + a2) = a1;
  uint64_t v29 = *(void *)(v28 + 16);
  BOOL v30 = __OFADD__(v29, 1);
  uint64_t v31 = v29 + 1;
  if (!v30)
  {
    *(void *)(v28 + 16) = v31;
    return;
  }
  __break(1u);
LABEL_69:
  swift_bridgeObjectRelease_n();
LABEL_70:
  ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

uint64_t sub_1001DE850(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)
    && (Hasher.init(_seed:)(),
        sub_1001DEDB8(a1),
        String.hash(into:)(),
        swift_bridgeObjectRelease(),
        Swift::Int v4 = Hasher._finalize()(),
        uint64_t v5 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v6 = v4 & ~v5,
        ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0))
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = a1;
    while (1)
    {
      unint64_t v9 = 0xEA00000000007974;
      unint64_t v10 = 0x696C617551726961;
      switch(*(unsigned char *)(*(void *)(a2 + 48) + v6))
      {
        case 1:
          unint64_t v10 = 0x726F46796C696164;
          uint64_t v11 = 1935762277;
          goto LABEL_22;
        case 2:
          unint64_t v10 = 0x6B694C736C656566;
          unint64_t v9 = 0xE900000000000065;
          break;
        case 3:
          unint64_t v10 = 0x6F46796C72756F68;
          unint64_t v9 = 0xEE00747361636572;
          break;
        case 4:
          unint64_t v9 = 0xE800000000000000;
          unint64_t v10 = 0x79746964696D7568;
          break;
        case 5:
          unint64_t v9 = 0xE300000000000000;
          unint64_t v10 = 7364973;
          break;
        case 6:
          unint64_t v9 = 0xE400000000000000;
          unint64_t v10 = 1852796781;
          break;
        case 7:
          unint64_t v10 = 0x697472417377656ELL;
          uint64_t v12 = 6646883;
          goto LABEL_20;
        case 8:
          unint64_t v10 = 0xD000000000000015;
          unint64_t v9 = 0x8000000100C95D30;
          break;
        case 9:
          unint64_t v9 = 0x8000000100C95FE0;
          goto LABEL_17;
        case 0xA:
          unint64_t v10 = 0xD00000000000001BLL;
          unint64_t v9 = 0x8000000100C96000;
          break;
        case 0xB:
          unint64_t v9 = 0xE800000000000000;
          unint64_t v10 = 0x6572757373657270;
          break;
        case 0xC:
          unint64_t v9 = 0x8000000100C95CD0;
LABEL_17:
          unint64_t v10 = 0xD000000000000012;
          break;
        case 0xD:
          unint64_t v10 = 0x655774726F706572;
          unint64_t v13 = 0x7265687461;
          goto LABEL_23;
        case 0xE:
          unint64_t v10 = 0x6C41657265766573;
          uint64_t v12 = 7631461;
LABEL_20:
          unint64_t v9 = v12 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 0xF:
          unint64_t v10 = 0x53657369726E7573;
          uint64_t v11 = 1702063733;
LABEL_22:
          unint64_t v13 = v11 & 0xFFFF0000FFFFFFFFLL | 0x7400000000;
LABEL_23:
          unint64_t v9 = v13 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
          break;
        case 0x10:
          unint64_t v9 = 0xE800000000000000;
          unint64_t v10 = 0x7365676172657661;
          break;
        case 0x11:
          unint64_t v9 = 0xE700000000000000;
          unint64_t v10 = 0x7865646E497675;
          break;
        case 0x12:
          unint64_t v10 = 0x696C696269736976;
          break;
        case 0x13:
          unint64_t v9 = 0xE400000000000000;
          unint64_t v10 = 1684957559;
          break;
        default:
          break;
      }
      unint64_t v14 = 0x696C617551726961;
      unint64_t v15 = 0xEA00000000007974;
      switch(v8)
      {
        case 1:
          unint64_t v14 = 0x726F46796C696164;
          uint64_t v16 = 1935762277;
          goto LABEL_46;
        case 2:
          unint64_t v14 = 0x6B694C736C656566;
          unint64_t v15 = 0xE900000000000065;
          break;
        case 3:
          unint64_t v14 = 0x6F46796C72756F68;
          unint64_t v15 = 0xEE00747361636572;
          break;
        case 4:
          unint64_t v15 = 0xE800000000000000;
          unint64_t v14 = 0x79746964696D7568;
          break;
        case 5:
          unint64_t v15 = 0xE300000000000000;
          unint64_t v14 = 7364973;
          break;
        case 6:
          unint64_t v15 = 0xE400000000000000;
          unint64_t v14 = 1852796781;
          break;
        case 7:
          unint64_t v14 = 0x697472417377656ELL;
          uint64_t v17 = 6646883;
          goto LABEL_44;
        case 8:
          unint64_t v14 = 0xD000000000000015;
          unint64_t v15 = 0x8000000100C95D30;
          break;
        case 9:
          unint64_t v15 = 0x8000000100C95FE0;
          goto LABEL_41;
        case 10:
          unint64_t v14 = 0xD00000000000001BLL;
          unint64_t v15 = 0x8000000100C96000;
          break;
        case 11:
          unint64_t v15 = 0xE800000000000000;
          unint64_t v14 = 0x6572757373657270;
          break;
        case 12:
          unint64_t v15 = 0x8000000100C95CD0;
LABEL_41:
          unint64_t v14 = 0xD000000000000012;
          break;
        case 13:
          unint64_t v14 = 0x655774726F706572;
          unint64_t v18 = 0x7265687461;
          goto LABEL_47;
        case 14:
          unint64_t v14 = 0x6C41657265766573;
          uint64_t v17 = 7631461;
LABEL_44:
          unint64_t v15 = v17 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 15:
          unint64_t v14 = 0x53657369726E7573;
          uint64_t v16 = 1702063733;
LABEL_46:
          unint64_t v18 = v16 & 0xFFFF0000FFFFFFFFLL | 0x7400000000;
LABEL_47:
          unint64_t v15 = v18 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
          break;
        case 16:
          unint64_t v15 = 0xE800000000000000;
          unint64_t v14 = 0x7365676172657661;
          break;
        case 17:
          unint64_t v15 = 0xE700000000000000;
          unint64_t v14 = 0x7865646E497675;
          break;
        case 18:
          unint64_t v14 = 0x696C696269736976;
          break;
        case 19:
          unint64_t v15 = 0xE400000000000000;
          unint64_t v14 = 1684957559;
          break;
        default:
          break;
      }
      if (v10 == v14 && v9 == v15) {
        break;
      }
      char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0)
      {
        unint64_t v6 = (v6 + 1) & v7;
        if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6)) {
          continue;
        }
      }
      return v20 & 1;
    }
    swift_bridgeObjectRelease_n();
    char v20 = 1;
  }
  else
  {
    char v20 = 0;
  }
  return v20 & 1;
}

unint64_t sub_1001DEDB8(char a1)
{
  unint64_t result = 0x696C617551726961;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x726F46796C696164;
      break;
    case 2:
      unint64_t result = 0x6B694C736C656566;
      break;
    case 3:
      unint64_t result = 0x6F46796C72756F68;
      break;
    case 4:
      unint64_t result = 0x79746964696D7568;
      break;
    case 5:
      unint64_t result = 7364973;
      break;
    case 6:
      unint64_t result = 1852796781;
      break;
    case 7:
      unint64_t result = 0x697472417377656ELL;
      break;
    case 8:
      unint64_t result = 0xD000000000000015;
      break;
    case 9:
    case 12:
      unint64_t result = 0xD000000000000012;
      break;
    case 10:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 11:
      unint64_t result = 0x6572757373657270;
      break;
    case 13:
      unint64_t result = 0x655774726F706572;
      break;
    case 14:
      unint64_t result = 0x6C41657265766573;
      break;
    case 15:
      unint64_t result = 0x53657369726E7573;
      break;
    case 16:
      unint64_t result = 0x7365676172657661;
      break;
    case 17:
      unint64_t result = 0x7865646E497675;
      break;
    case 18:
      unint64_t result = 0x696C696269736976;
      break;
    case 19:
      unint64_t result = 1684957559;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001DEFEC(uint64_t a1)
{
  return sub_100129E30(a1, (uint64_t (*)(BOOL))sub_10012C1A0);
}

uint64_t sub_1001DF004(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10017DF08(a3);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(a2, a1);
  return a2;
}

unsigned __int8 *sub_1001DF060(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v5 = *(void *)(a3 + 32);
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(void *)(v7 + 64);
    uint64_t v9 = *(void *)(v5 - 8);
    uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
    uint64_t v11 = v8 + v10;
    unint64_t v12 = *(void *)(v9 + 64);
    unint64_t v13 = ((v8 + v10) & ~v10) + v12;
    if (v13 <= v12) {
      unint64_t v13 = *(void *)(v9 + 64);
    }
    if (v13 <= 0x20) {
      uint64_t v14 = 32;
    }
    else {
      uint64_t v14 = v13;
    }
    unsigned int v15 = a1[v14];
    unsigned int v16 = v15 - 3;
    if (v15 >= 3)
    {
      if (v14 <= 3) {
        uint64_t v17 = v14;
      }
      else {
        uint64_t v17 = 4;
      }
      switch(v17)
      {
        case 1:
          int v18 = *a1;
          goto LABEL_16;
        case 2:
          int v18 = *(unsigned __int16 *)a1;
          goto LABEL_16;
        case 3:
          int v18 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_16;
        case 4:
          int v18 = *(_DWORD *)a1;
LABEL_16:
          int v19 = (v18 | (v16 << (8 * v14))) + 3;
          unsigned int v15 = v18 + 3;
          if (v14 < 4) {
            unsigned int v15 = v19;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v20 = ~v10;
    if (v15 == 2)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v9 + 8))(a1, v5);
    }
    else if (v15 == 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
      (*(void (**)(unint64_t, uint64_t))(v9 + 8))((unint64_t)&a1[v11] & v20, v5);
    }
    else
    {
      swift_release();
      swift_release();
    }
    unsigned int v21 = a2[v14];
    unsigned int v22 = v21 - 3;
    if (v21 >= 3)
    {
      if (v14 <= 3) {
        uint64_t v23 = v14;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *a2;
          goto LABEL_33;
        case 2:
          int v24 = *(unsigned __int16 *)a2;
          goto LABEL_33;
        case 3:
          int v24 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_33;
        case 4:
          int v24 = *(_DWORD *)a2;
LABEL_33:
          int v25 = (v24 | (v22 << (8 * v14))) + 3;
          unsigned int v21 = v24 + 3;
          if (v14 < 4) {
            unsigned int v21 = v25;
          }
          break;
        default:
          break;
      }
    }
    if (v21 == 2)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v9 + 32))(a1, a2, v5);
      char v26 = 2;
    }
    else if (v21 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 32))((unint64_t)&a1[v11] & v20, (unint64_t)&a2[v11] & v20, v5);
      char v26 = 1;
    }
    else
    {
      char v26 = 0;
      long long v27 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v27;
    }
    a1[v14] = v26;
  }
  return a1;
}

uint64_t sub_1001DF350()
{
  size_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10017DF08(&qword_100E97000);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *size_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + i);
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    uint64_t result = Hasher._finalize()();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) == 0)
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v21);
        if (v26 != -1)
        {
          unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(unsigned char *)(*(void *)(v4 + 48) + v22) = v18;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_36;
    }
    if (v15 >= v9) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v12;
    if (!v16)
    {
      int64_t v12 = v15 + 1;
      if (v15 + 1 >= v9) {
        goto LABEL_32;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v12);
      if (!v16)
      {
        int64_t v12 = v15 + 2;
        if (v15 + 2 >= v9) {
          goto LABEL_32;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v12);
        if (!v16) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v16 - 1) & v16;
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v9)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    size_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v12 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for LocationCompositionState()
{
  uint64_t result = qword_100EB1AD0;
  if (!qword_100EB1AD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *initializeWithCopy for LocationCompositionState(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = a2[1];
  if (EnumCaseMultiPayload != 1)
  {
    if (v5)
    {
      *a1 = *a2;
      a1[1] = v5;
      uint64_t v7 = a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v14 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v14;
    }
    uint64_t v15 = *(int *)(sub_10017DF08(&qword_100E85F90) + 48);
    uint64_t v10 = (char *)a1 + v15;
    uint64_t v11 = (char *)a2 + v15;
    uint64_t v12 = type metadata accessor for LocationOfInterest();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12)) {
      goto LABEL_8;
    }
LABEL_11:
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
    goto LABEL_12;
  }
  if (v5)
  {
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v8;
  }
  uint64_t v9 = *(int *)(sub_10017DF08(&qword_100E85F90) + 48);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for LocationOfInterest();
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12)) {
    goto LABEL_11;
  }
LABEL_8:
  uint64_t v13 = sub_10017DF08(&qword_100E63508);
  memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
LABEL_12:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1001DFA9C()
{
  uint64_t v2 = sub_100176CD4();
  v3(v2);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 40))(v0, v1);
  return v0;
}

uint64_t sub_1001DFAF0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v328 = a5;
  int v318 = a4;
  uint64_t v322 = a3;
  uint64_t v323 = a2;
  uint64_t v324 = a1;
  type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v316 = v8;
  uint64_t v317 = v7;
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v315 = v9;
  sub_100129064();
  type metadata accessor for NotificationSubscription.Kind();
  sub_100179C0C();
  uint64_t v320 = v11;
  uint64_t v321 = v10;
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v319 = v12;
  sub_100129064();
  type metadata accessor for NotificationSubscription.Location();
  sub_100179C0C();
  uint64_t v313 = v14;
  uint64_t v314 = v13;
  __chkstk_darwin(v13);
  sub_100109314();
  sub_100109338(v15);
  uint64_t v16 = sub_10017DF08(&qword_100E663F8);
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  sub_100109314();
  sub_100109338(v18);
  uint64_t v19 = sub_10017DF08(&qword_100E66400);
  uint64_t v20 = sub_100109308(v19);
  __chkstk_darwin(v20);
  sub_100109314();
  sub_100109338(v21);
  uint64_t v22 = sub_10017DF08(&qword_100E66408);
  uint64_t v23 = sub_100109308(v22);
  __chkstk_darwin(v23);
  sub_100109314();
  sub_100109338(v24);
  uint64_t v25 = sub_10017DF08(&qword_100E66410);
  uint64_t v26 = sub_100109308(v25);
  __chkstk_darwin(v26);
  sub_1001626E0();
  uint64_t v29 = (uint64_t *)(v28 - v27);
  uint64_t v325 = type metadata accessor for ViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v30);
  sub_1001626E0();
  uint64_t v33 = v32 - v31;
  uint64_t v326 = type metadata accessor for ModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v34);
  sub_100109314();
  uint64_t v312 = v35;
  sub_100129064();
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  uint64_t v37 = sub_100109308(active);
  __chkstk_darwin(v37);
  uint64_t v39 = &v302[-((v38 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v40);
  sub_100109338((uint64_t)&v302[-v41]);
  uint64_t v42 = sub_10017DF08(&qword_100E749B0);
  uint64_t v43 = sub_100109308(v42);
  __chkstk_darwin(v43);
  sub_100109314();
  uint64_t v45 = v44;
  sub_100129064();
  uint64_t v46 = type metadata accessor for NotificationLocation();
  uint64_t v47 = sub_100109308(v46);
  __chkstk_darwin(v47);
  sub_100109314();
  uint64_t v49 = v48;
  uint64_t v50 = sub_10017DF08(&qword_100E663F0);
  uint64_t v51 = sub_100109308(v50);
  __chkstk_darwin(v51);
  sub_100109314();
  uint64_t v327 = v52;
  uint64_t v53 = sub_10017DF08(&qword_100E66418);
  uint64_t v54 = sub_100109308(v53);
  __chkstk_darwin(v54);
  sub_100109314();
  uint64_t v329 = v55;
  uint64_t v56 = sub_10017DF08(&qword_100E66420);
  uint64_t v57 = sub_100109308(v56);
  __chkstk_darwin(v57);
  sub_100109314();
  uint64_t v330 = v58;
  uint64_t v59 = sub_10017DF08(&qword_100E66428);
  uint64_t v60 = sub_100109308(v59);
  __chkstk_darwin(v60);
  sub_100109314();
  uint64_t v331 = v61;
  uint64_t v62 = sub_10017DF08(&qword_100E66430);
  uint64_t v63 = sub_100109308(v62);
  __chkstk_darwin(v63);
  sub_100109314();
  uint64_t v332 = v64;
  uint64_t v65 = sub_10017DF08(&qword_100E66438);
  uint64_t v66 = sub_100109308(v65);
  __chkstk_darwin(v66);
  sub_100109314();
  uint64_t v68 = v67;
  uint64_t v69 = sub_10017DF08(&qword_100E66440);
  uint64_t v70 = sub_100109308(v69);
  __chkstk_darwin(v70);
  sub_100109314();
  uint64_t v72 = v71;
  sub_100129064();
  uint64_t v73 = type metadata accessor for NotificationsAction();
  sub_100162E4C();
  __chkstk_darwin(v74);
  sub_1001626E0();
  uint64_t v77 = (uint64_t *)(v76 - v75);
  sub_1001E0D40(a6, v76 - v75, (void (*)(void))type metadata accessor for NotificationsAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v103 = (uint64_t)v77 + *(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48);
      uint64_t v305 = v49;
      sub_1003CA45C((uint64_t)v77, v49);
      uint64_t v304 = v45;
      sub_1000F21C8(v103, v45);
      uint64_t v104 = v310;
      sub_1003CA130(v49, v310);
      sub_1003CA2C0(v45, v312);
      uint64_t v105 = type metadata accessor for AppConfigurationState();
      uint64_t v306 = v72;
      uint64_t v108 = sub_10019E9C0(v105, v106, v107, v105);
      uint64_t v303 = v68;
      uint64_t v111 = sub_10017CBA8(v108, v109, v110, v108);
      _s7Weather24LocationCompositionStateOwst_0(v332, 1, 1, v111);
      uint64_t v112 = type metadata accessor for NotificationsOptInState();
      uint64_t v113 = v331;
      uint64_t v116 = sub_10017A0E0(v331, v114, v115, v112);
      uint64_t v117 = v330;
      sub_100163050(v330, v118, v119, v116);
      uint64_t v120 = v328;
      sub_1001E0D40(v328 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v33, (void (*)(void))type metadata accessor for ViewState);
      sub_1001E0D40(v104, (uint64_t)v39, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
      type metadata accessor for LocationViewerViewState._Storage(0);
      swift_allocObject();
      *uint64_t v29 = sub_1001CCEF8((uint64_t)v39, 0, 0, 2, 0, 0);
      uint64_t v121 = type metadata accessor for ViewState.SecondaryViewState(0);
      swift_storeEnumTagMultiPayload();
      sub_1001093B0();
      _s7Weather24LocationCompositionStateOwst_0(v122, v123, v124, v121);
      uint64_t v125 = type metadata accessor for SearchViewState(0);
      uint64_t v126 = v307;
      _s7Weather24LocationCompositionStateOwst_0(v307, 1, 1, v125);
      uint64_t v127 = type metadata accessor for DisplayMetrics();
      uint64_t v45 = v308;
      _s7Weather24LocationCompositionStateOwst_0(v308, 1, 1, v127);
      uint64_t v128 = type metadata accessor for WeatherMapPresentationState(0);
      uint64_t v129 = v309;
      sub_100163050(v309, v130, v131, v128);
      uint64_t v132 = v329;
      sub_10011D8AC();
      sub_100178110(v129, &qword_100E663F8);
      sub_100178110(v45, &qword_100E66400);
      sub_100178110(v126, &qword_100E66408);
      sub_100178110((uint64_t)v29, &qword_100E66410);
      sub_10013EF64(v33, (void (*)(void))type metadata accessor for ViewState);
      sub_1001093B0();
      _s7Weather24LocationCompositionStateOwst_0(v133, v134, v135, v325);
      uint64_t v136 = v312;
      uint64_t v137 = v327;
      sub_1001E0D40((uint64_t)v312, (uint64_t)v327, (void (*)(void))type metadata accessor for ModalViewState);
      sub_1001093B0();
      _s7Weather24LocationCompositionStateOwst_0(v138, v139, v140, v326);
      uint64_t v299 = v120;
      sub_100183844();
      uint64_t v141 = v306;
      uint64_t v142 = v303;
      uint64_t v143 = v332;
      sub_1001659F0(0, 3, v306, v303, v332, 0, 0, 0, 0, v113, v117, v132, (uint64_t)v137, v293, v294, v295, v296, v297, v298,
        0,
        v299);
      sub_100185A74();
      sub_100178110((uint64_t)v137, &qword_100E663F0);
      sub_100178110(v132, &qword_100E66418);
      sub_100178110(v117, &qword_100E66420);
      sub_100178110(v113, &qword_100E66428);
      sub_100178110(v143, &qword_100E66430);
      sub_100178110(v142, &qword_100E66438);
      sub_100178110(v141, &qword_100E66440);
      sub_10013EF64((uint64_t)v136, (void (*)(void))type metadata accessor for ModalViewState);
      sub_10013EF64(v310, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
      sub_100178110(v304, &qword_100E749B0);
      sub_10013EF64(v305, (void (*)(void))type metadata accessor for NotificationLocation);
      return v45;
    case 2u:
      uint64_t v45 = (uint64_t)v77 + *(int *)(sub_10017DF08(&qword_100E6F630) + 48);
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v313 + 32))(v311, v77, v314);
      uint64_t v144 = sub_1001A45F0();
      v145(v144);
      uint64_t v146 = type metadata accessor for AppConfigurationState();
      uint64_t v306 = v72;
      uint64_t v149 = sub_10019E9C0(v146, v147, v148, v146);
      uint64_t v152 = sub_10017CBA8(v149, v150, v151, v149);
      uint64_t v153 = sub_10019FC64(v152);
      sub_10065BDAC(v153, v154, v155);
      uint64_t v156 = sub_100185A50();
      uint64_t v157 = v331;
      uint64_t v160 = sub_10017A0E0(v331, v158, v159, v156);
      uint64_t v161 = v330;
      _s7Weather24LocationCompositionStateOwst_0(v330, 1, 1, v160);
      uint64_t v162 = v329;
      _s7Weather24LocationCompositionStateOwst_0(v329, 1, 1, v325);
      uint64_t v163 = v327;
      uint64_t v164 = _s7Weather24LocationCompositionStateOwst_0((uint64_t)v327, 1, 1, v326);
      sub_1001A06CC(v164, v165, v166, v167, v168, v169, v170, v171, v302[0], v303, v304, v305, v306, v307, v308, v309, v310, v311, (uint64_t)v312,
        v313,
        v314);
      sub_100189050();
      swift_bridgeObjectRelease();
      sub_100178110((uint64_t)v163, &qword_100E663F0);
      sub_100178110(v162, &qword_100E66418);
      sub_100178110(v161, &qword_100E66420);
      sub_100178110(v157, &qword_100E66428);
      sub_100178110(v49, &qword_100E66430);
      sub_100178110(v68, &qword_100E66438);
      sub_100178110((uint64_t)v39, &qword_100E66440);
      sub_100162F0C();
      v172();
      goto LABEL_10;
    case 3u:
      uint64_t v323 = *v77;
      uint64_t v173 = type metadata accessor for AppConfigurationState();
      uint64_t v101 = v72;
      uint64_t v176 = sub_10019E9C0(v173, v174, v175, v173);
      uint64_t v177 = v68;
      uint64_t v180 = sub_10017CBA8(v176, v178, v179, v176);
      uint64_t v181 = sub_100183A10(v180);
      uint64_t v182 = v331;
      uint64_t v185 = sub_10017A0E0(v331, v183, v184, v181);
      sub_1001811DC(v185);
      uint64_t v186 = v322;
      swift_bridgeObjectRetain();
      uint64_t v187 = sub_1001A1DB8();
      sub_1001659F0(v187, v188, v189, v190, v191, v192, v323, v186, v302[0], v303, v304, v305, v306, v307, v308, v309, v310, v311, (uint64_t)v312,
        v313,
        v314);
      sub_100185A74();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 4u:
      uint64_t v322 = *v77;
      uint64_t v193 = type metadata accessor for AppConfigurationState();
      uint64_t v101 = v72;
      uint64_t v196 = sub_10019E9C0(v193, v194, v195, v193);
      uint64_t v177 = v68;
      uint64_t v199 = sub_10017CBA8(v196, v197, v198, v196);
      uint64_t v200 = sub_100183A10(v199);
      uint64_t v182 = v331;
      uint64_t v203 = sub_10017A0E0(v331, v201, v202, v200);
      sub_1001811DC(v203);
      uint64_t v204 = v323;
      swift_bridgeObjectRetain();
      uint64_t v205 = sub_1001A1DB8();
      sub_1001659F0(v205, v206, v207, v208, v209, v210, v204, v322, v302[0], v303, v304, v305, v306, v307, v308, v309, v310, v311, (uint64_t)v312,
        v313,
        v314);
      sub_100189050();
LABEL_7:
      swift_bridgeObjectRelease();
      sub_100178110(v73, &qword_100E663F0);
      sub_100178110((uint64_t)v29, &qword_100E66418);
      sub_100178110(a6, &qword_100E66420);
      sub_100178110(v182, &qword_100E66428);
      sub_100178110(v68, &qword_100E66430);
      uint64_t v102 = v177;
      goto LABEL_8;
    case 5u:
      uint64_t v45 = (uint64_t)v77 + *(int *)(sub_10017DF08(&qword_100E6F638) + 48);
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v316 + 32))(v315, v77, v317);
      uint64_t v212 = sub_1001A45F0();
      v213(v212);
      uint64_t v214 = type metadata accessor for AppConfigurationState();
      uint64_t v306 = v72;
      uint64_t v217 = sub_10019E9C0(v214, v215, v216, v214);
      uint64_t v220 = sub_10017CBA8(v217, v218, v219, v217);
      uint64_t v221 = sub_10019FC64(v220);
      sub_10065C0E4(v221, v222, v223, v224, v225, v226);
      uint64_t v227 = sub_100185A50();
      uint64_t v228 = v331;
      uint64_t v231 = sub_10017A0E0(v331, v229, v230, v227);
      uint64_t v232 = v330;
      _s7Weather24LocationCompositionStateOwst_0(v330, 1, 1, v231);
      uint64_t v233 = v329;
      _s7Weather24LocationCompositionStateOwst_0(v329, 1, 1, v325);
      uint64_t v234 = v327;
      uint64_t v235 = _s7Weather24LocationCompositionStateOwst_0((uint64_t)v327, 1, 1, v326);
      sub_1001A06CC(v235, v236, v237, v238, v239, v240, v241, v242, v302[0], v303, v304, v305, v306, v307, v308, v309, v310, v311, (uint64_t)v312,
        v313,
        v314);
      sub_100189050();
      swift_bridgeObjectRelease();
      sub_100178110((uint64_t)v234, &qword_100E663F0);
      sub_100178110(v233, &qword_100E66418);
      sub_100178110(v232, &qword_100E66420);
      sub_100178110(v228, &qword_100E66428);
      sub_100178110(v49, &qword_100E66430);
      sub_100178110(v68, &qword_100E66438);
      sub_100178110((uint64_t)v39, &qword_100E66440);
      sub_100162F0C();
      v243();
LABEL_10:
      sub_100162F0C();
      v244();
      return v45;
    case 6u:
      LODWORD(v321) = *(unsigned __int8 *)v77;
      uint64_t v245 = type metadata accessor for AppConfigurationState();
      uint64_t v246 = v72;
      uint64_t v249 = sub_10019E9C0(v245, v247, v248, v245);
      uint64_t v250 = v68;
      uint64_t v253 = sub_10017CBA8(v249, v251, v252, v249);
      uint64_t v254 = v332;
      _s7Weather24LocationCompositionStateOwst_0(v332, 1, 1, v253);
      uint64_t v45 = v324;
      uint64_t v255 = type metadata accessor for NotificationsOptInState();
      uint64_t v256 = v331;
      uint64_t v259 = sub_10017A0E0(v331, v257, v258, v255);
      uint64_t v260 = v330;
      sub_100163050(v330, v261, v262, v259);
      uint64_t v263 = v329;
      _s7Weather24LocationCompositionStateOwst_0(v329, 1, 1, v325);
      uint64_t v264 = v327;
      sub_100163050((uint64_t)v327, v265, v266, v326);
      uint64_t v267 = v323;
      swift_bridgeObjectRetain();
      uint64_t v268 = v322;
      swift_bridgeObjectRetain();
      uint64_t v300 = v328;
      sub_100183844();
      sub_1001659F0(0, 3, v246, v250, v254, v45, v267, v268, v321, v256, v260, v263, (uint64_t)v264, v293, v294, v295, v296, v297, v298,
        0,
        v300);
      sub_100185A74();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100178110((uint64_t)v264, &qword_100E663F0);
      sub_100178110(v263, &qword_100E66418);
      sub_100178110(v260, &qword_100E66420);
      sub_100178110(v256, &qword_100E66428);
      sub_100178110(v254, &qword_100E66430);
      sub_100178110(v250, &qword_100E66438);
      uint64_t v211 = v246;
      goto LABEL_13;
    case 7u:
      uint64_t v269 = type metadata accessor for AppConfigurationState();
      uint64_t v272 = sub_10019E9C0(v269, v270, v271, v269);
      uint64_t v273 = v68;
      uint64_t v276 = sub_10017CBA8(v272, v274, v275, v272);
      uint64_t v277 = v332;
      _s7Weather24LocationCompositionStateOwst_0(v332, 1, 1, v276);
      uint64_t v278 = type metadata accessor for NotificationsOptInState();
      uint64_t v279 = v331;
      uint64_t v282 = sub_10017A0E0(v331, v280, v281, v278);
      uint64_t v283 = v330;
      sub_100163050(v330, v284, v285, v282);
      uint64_t v286 = v329;
      _s7Weather24LocationCompositionStateOwst_0(v329, 1, 1, v325);
      uint64_t v45 = v326;
      uint64_t v287 = v327;
      _WORD *v327 = 0;
      swift_storeEnumTagMultiPayload();
      sub_1001093B0();
      _s7Weather24LocationCompositionStateOwst_0(v288, v289, v290, v45);
      uint64_t v301 = v328;
      sub_100183844();
      sub_1001659F0(0, 3, v72, v273, v277, 0, 0, 0, 0, v279, v283, v286, (uint64_t)v287, v293, v294, v295, v296, v297, v298,
        0,
        v301);
      sub_100185A74();
      sub_100178110((uint64_t)v287, &qword_100E663F0);
      sub_100178110(v286, &qword_100E66418);
      sub_100178110(v283, &qword_100E66420);
      sub_100178110(v279, &qword_100E66428);
      sub_100178110(v277, &qword_100E66430);
      sub_100178110(v273, &qword_100E66438);
      uint64_t v211 = v72;
      goto LABEL_13;
    default:
      uint64_t v324 = *(unsigned __int8 *)v77;
      uint64_t v78 = type metadata accessor for AppConfigurationState();
      uint64_t v306 = v72;
      uint64_t v81 = sub_10019E9C0(v78, v79, v80, v78);
      uint64_t v84 = sub_10017CBA8(v81, v82, v83, v81);
      uint64_t v85 = v332;
      sub_100163050(v332, v86, v87, v84);
      uint64_t v45 = v328;
      uint64_t v88 = *(void *)(v328 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications + 8);
      uint64_t v89 = *(void *)(v328 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications + 16);
      char v90 = *(unsigned char *)(v328 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications + 24);
      uint64_t v91 = type metadata accessor for NotificationsOptInState();
      uint64_t v92 = v331;
      uint64_t v95 = sub_10017A0E0(v331, v93, v94, v91);
      uint64_t v96 = v330;
      _s7Weather24LocationCompositionStateOwst_0(v330, 1, 1, v95);
      uint64_t v97 = v329;
      _s7Weather24LocationCompositionStateOwst_0(v329, 1, 1, v325);
      uint64_t v98 = v327;
      sub_100163050((uint64_t)v327, v99, v100, v326);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v292 = v90;
      uint64_t v101 = v306;
      sub_1001659F0(0, 3, v306, v68, v85, v324, v88, v89, v292, v92, v96, v97, (uint64_t)v98, 0, 0, 0, 0, 0, 0,
        0,
        v45);
      sub_100189050();
      swift_bridgeObjectRelease();
      sub_100178110((uint64_t)v98, &qword_100E663F0);
      sub_100178110(v97, &qword_100E66418);
      sub_100178110(v96, &qword_100E66420);
      sub_100178110(v92, &qword_100E66428);
      sub_100178110(v85, &qword_100E66430);
      uint64_t v102 = v68;
LABEL_8:
      sub_100178110(v102, &qword_100E66438);
      uint64_t v211 = v101;
LABEL_13:
      sub_100178110(v211, &qword_100E66440);
      return v45;
  }
}

uint64_t type metadata accessor for NotificationLocation()
{
  uint64_t result = qword_100EA29D0;
  if (!qword_100EA29D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for LocationContentState()
{
  uint64_t result = qword_100EB2558;
  if (!qword_100EB2558) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001E0D40(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1001E0DA0@<X0>(uint64_t a1@<X0>, char a2@<W2>, uint64_t a3@<X3>, char a4@<W4>, char a5@<W5>, char a6@<W6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, char a10, uint64_t a11, char a12, char a13, uint64_t a14, char a15, uint64_t a16)
{
  sub_1001E0F88(a1, a8, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  uint64_t v22 = (int *)type metadata accessor for LocationViewerInput();
  type metadata accessor for LocationModel();
  sub_100162E4C();
  sub_1001190D4();
  v23();
  *(unsigned char *)(a8 + v22[6]) = a2;
  sub_1001E0F88(a3, a8 + v22[7], (void (*)(void))type metadata accessor for LocationsState);
  *(unsigned char *)(a8 + v22[8]) = a4;
  *(unsigned char *)(a8 + v22[9]) = a5;
  uint64_t v24 = a8 + v22[10];
  *(unsigned char *)uint64_t v24 = a6;
  *(void *)(v24 + 8) = a7;
  type metadata accessor for Date();
  sub_100162E4C();
  sub_1001190D4();
  v25();
  *(unsigned char *)(a8 + v22[12]) = a10;
  *(void *)(a8 + v22[13]) = a11;
  *(unsigned char *)(a8 + v22[14]) = a12;
  *(unsigned char *)(a8 + v22[15]) = a13;
  *(void *)(a8 + v22[16]) = a14;
  *(unsigned char *)(a8 + v22[17]) = a15;
  return sub_1001278D0(a16, a8 + v22[18], &qword_100E63770);
}

uint64_t sub_1001E0F88(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  sub_1001190D4();
  v4();
  return a2;
}

uint64_t sub_1001E0FE4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1001E1044(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1001E10A4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1001E1104(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_1001E1158(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1001E11B8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1001E1218()
{
  uint64_t v1 = sub_10017DF08(&qword_100E63A10);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v18 - v5;
  uint64_t v7 = type metadata accessor for BannerStateComputer();
  uint64_t v8 = *(void *)(v0 + *(int *)(v7 + 20));
  uint64_t v9 = OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
  if (*(void *)(v8 + v9 + *(int *)(type metadata accessor for ViewState(0) + 36) + 8) == 1
    && *(unsigned char *)(v0 + *(int *)(v7 + 28)) == 1)
  {
    uint64_t v10 = v8 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
    swift_beginAccess();
    if (*(unsigned char *)(v10 + *(int *)(type metadata accessor for EnvironmentState() + 64))) {
      char v11 = 2;
    }
    else {
      char v11 = 1;
    }
    uint64_t v12 = swift_bridgeObjectRetain();
    uint64_t v13 = sub_100A04F34(v12);
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_100A054EC((uint64_t)v13);
    swift_bridgeObjectRelease();
    uint64_t v15 = type metadata accessor for ContentStatusBanner();
    sub_100A07FF0((uint64_t)v14, (uint64_t)&v6[*(int *)(v15 + 24)]);
    swift_bridgeObjectRelease();
    char *v6 = v11;
    *((void *)v6 + 1) = 0;
    *((void *)v6 + 2) = 0;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 0, 1, v15);
  }
  else
  {
    uint64_t v16 = type metadata accessor for ContentStatusBanner();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 1, 1, v16);
  }
  return sub_1001EB4CC();
}

BOOL sub_1001E1410(uint64_t a1, unsigned __int8 a2)
{
  return a2 < 2u;
}

uint64_t sub_1001E1420@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>, double a4@<D0>)
{
  int v44 = a2;
  uint64_t v43 = a1;
  uint64_t v46 = a3;
  uint64_t v6 = (int *)type metadata accessor for HighLowModifier(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E63F68);
  __chkstk_darwin(v9);
  char v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_10017DF08(&qword_100E63F70);
  uint64_t v12 = __chkstk_darwin(v45);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v42 - v15;
  uint64_t v17 = type metadata accessor for LocationHeaderView(0);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v4 + *(int *)(v18 + 64);
  uint64_t v23 = *(void *)(v21 + 104);
  unint64_t v22 = *(void *)(v21 + 112);
  uint64_t v24 = v23 & 0xFFFFFFFFFFFFLL;
  if ((v22 & 0x2000000000000000) != 0) {
    uint64_t v25 = HIBYTE(v22) & 0xF;
  }
  else {
    uint64_t v25 = v24;
  }
  sub_10014D0EC(v4, (uint64_t)v20, (void (*)(void))type metadata accessor for LocationHeaderView);
  if (!v25)
  {
    sub_10014CC74((uint64_t)v20, (void (*)(void))type metadata accessor for LocationHeaderView);
LABEL_17:
    uint64_t v40 = 1;
    uint64_t v38 = v45;
    uint64_t v39 = v46;
    return _s7Weather24LocationCompositionStateOwst_0(v39, v40, 1, v38);
  }
  uint64_t v26 = &v20[*(int *)(v17 + 64)];
  uint64_t v28 = *((void *)v26 + 15);
  unint64_t v27 = *((void *)v26 + 16);
  uint64_t v29 = v28 & 0xFFFFFFFFFFFFLL;
  if ((v27 & 0x2000000000000000) != 0) {
    uint64_t v30 = HIBYTE(v27) & 0xF;
  }
  else {
    uint64_t v30 = v29;
  }
  sub_10014CC74((uint64_t)v20, (void (*)(void))type metadata accessor for LocationHeaderView);
  if (!v30) {
    goto LABEL_17;
  }
  sub_10006DF38(v43, (uint64_t)v11, &qword_100E63E68);
  *(_OWORD *)&v11[*(int *)(v9 + 36)] = xmmword_100C26610;
  char v31 = sub_10014CAF4();
  if (v44) {
    double v32 = 0.6;
  }
  else {
    double v32 = 0.4;
  }
  if (v44) {
    double v33 = 0.4;
  }
  else {
    double v33 = 0.2;
  }
  type metadata accessor for LocationHeaderViewFrameCoordinator(0);
  sub_1000E7420((uint64_t)&unk_100E63D70);
  *(void *)uint64_t v8 = Environment.init<A>(_:)();
  v8[8] = v34 & 1;
  uint64_t v35 = (uint64_t *)&v8[v6[5]];
  *uint64_t v35 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63D98);
  swift_storeEnumTagMultiPayload();
  v8[v6[6]] = v31 & 1;
  *(double *)&v8[v6[7]] = a4;
  *(double *)&v8[v6[8]] = v33;
  *(double *)&v8[v6[9]] = v32;
  uint64_t v36 = &v8[v6[10]];
  uint64_t v47 = 0;
  State.init(wrappedValue:)();
  uint64_t v37 = v49;
  *(void *)uint64_t v36 = v48;
  *((void *)v36 + 1) = v37;
  sub_10006DF38((uint64_t)v11, (uint64_t)v14, &qword_100E63F68);
  uint64_t v38 = v45;
  sub_10014DEEC((uint64_t)v8, (uint64_t)&v14[*(int *)(v45 + 36)], (void (*)(void))type metadata accessor for HighLowModifier);
  sub_100178110((uint64_t)v11, &qword_100E63F68);
  sub_10024D364((uint64_t)v14, (uint64_t)v16, &qword_100E63F70);
  uint64_t v39 = v46;
  sub_10024D364((uint64_t)v16, v46, &qword_100E63F70);
  uint64_t v40 = 0;
  return _s7Weather24LocationCompositionStateOwst_0(v39, v40, 1, v38);
}

uint64_t type metadata accessor for HighLowModifier(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E64320);
}

int *sub_1001E1864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v525 = (int *)a2;
  uint64_t v526 = (int *)a1;
  uint64_t v4 = sub_10017DF08(&qword_100E663D0);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100109314();
  sub_100109328(v6);
  uint64_t v7 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v8 = sub_10017C81C(v7, (uint64_t)&v533);
  uint64_t v498 = v9;
  __chkstk_darwin(v8);
  sub_100109314();
  sub_100109328(v10);
  uint64_t v11 = type metadata accessor for Location();
  uint64_t v12 = sub_10017C81C(v11, (uint64_t)&v519);
  uint64_t v478 = v13;
  __chkstk_darwin(v12);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v14);
  sub_100128F8C();
  sub_100109328(v15);
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  sub_100162E4C();
  __chkstk_darwin(v16);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v17);
  sub_100128F8C();
  sub_100109328(v18);
  uint64_t v497 = type metadata accessor for InteractiveMapViewAction();
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v20);
  sub_100179C90();
  __chkstk_darwin(v21);
  sub_100128F8C();
  uint64_t v23 = sub_100109328(v22);
  uint64_t v508 = (int *)type metadata accessor for WeatherMapPresentationState(v23);
  sub_100162E4C();
  __chkstk_darwin(v24);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v25);
  sub_100128F8C();
  sub_100109338(v26);
  uint64_t v27 = sub_10017DF08(qword_100E66490);
  uint64_t v28 = sub_100109308(v27);
  __chkstk_darwin(v28);
  sub_100109314();
  sub_100109338(v29);
  uint64_t v30 = sub_10017DF08(&qword_100E65BC0);
  uint64_t v31 = sub_100109308(v30);
  __chkstk_darwin(v31);
  sub_100109314();
  uint64_t v33 = sub_100109328(v32);
  uint64_t v518 = type metadata accessor for ModalViewState(v33);
  sub_100162E4C();
  __chkstk_darwin(v34);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v35);
  sub_100179C90();
  __chkstk_darwin(v36);
  sub_100128F8C();
  sub_100109338(v37);
  uint64_t v38 = sub_10017DF08(&qword_100E663F8);
  uint64_t v39 = sub_100109308(v38);
  __chkstk_darwin(v39);
  sub_100109314();
  uint64_t v511 = v40;
  uint64_t v41 = sub_10017DF08(&qword_100E66400);
  uint64_t v42 = sub_100109308(v41);
  __chkstk_darwin(v42);
  sub_100109314();
  uint64_t v512 = (int *)v43;
  uint64_t v44 = sub_10017DF08(&qword_100E66410);
  uint64_t v45 = sub_100109308(v44);
  __chkstk_darwin(v45);
  sub_100109314();
  uint64_t v513 = v46;
  uint64_t v47 = sub_10017DF08(&qword_100E663F0);
  uint64_t v48 = sub_100109308(v47);
  __chkstk_darwin(v48);
  sub_100109314();
  uint64_t v515 = v49;
  uint64_t v50 = sub_10017DF08(&qword_100E66418);
  uint64_t v51 = sub_100109308(v50);
  __chkstk_darwin(v51);
  sub_100109314();
  uint64_t v516 = v52;
  uint64_t v53 = sub_10017DF08(&qword_100E66420);
  uint64_t v54 = sub_100109308(v53);
  __chkstk_darwin(v54);
  sub_100109314();
  uint64_t v517 = (char *)v55;
  uint64_t v56 = sub_10017DF08(&qword_100E66428);
  uint64_t v57 = sub_100109308(v56);
  __chkstk_darwin(v57);
  sub_100109314();
  uint64_t v519 = v58;
  uint64_t v59 = sub_10017DF08(&qword_100E66430);
  uint64_t v60 = sub_100109308(v59);
  __chkstk_darwin(v60);
  sub_100109314();
  uint64_t v520 = v61;
  uint64_t v62 = sub_10017DF08(&qword_100E66438);
  uint64_t v63 = sub_100109308(v62);
  __chkstk_darwin(v63);
  sub_100109314();
  uint64_t v521 = v64;
  uint64_t v65 = sub_10017DF08(&qword_100E66440);
  uint64_t v66 = sub_100109308(v65);
  __chkstk_darwin(v66);
  sub_100109314();
  uint64_t v523 = v67;
  uint64_t v509 = type metadata accessor for DisplayMetrics();
  sub_100162E4C();
  __chkstk_darwin(v68);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v69);
  sub_100128F8C();
  sub_100109328(v70);
  uint64_t v71 = type metadata accessor for DisplayMetricsChangeAction();
  uint64_t v72 = sub_100109308(v71);
  __chkstk_darwin(v72);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v73);
  sub_100128F8C();
  sub_100109338(v74);
  uint64_t v75 = sub_10017DF08(&qword_100E66408);
  uint64_t v76 = sub_100109308(v75);
  __chkstk_darwin(v76);
  sub_100162EF8();
  uint64_t v510 = v77;
  __chkstk_darwin(v78);
  sub_100128F8C();
  uint64_t v80 = sub_100109328(v79);
  uint64_t v514 = type metadata accessor for SearchViewState(v80);
  sub_100162E4C();
  __chkstk_darwin(v81);
  sub_100109314();
  sub_100109328(v82);
  uint64_t v83 = type metadata accessor for SearchViewAction();
  uint64_t v84 = sub_100109308(v83);
  __chkstk_darwin(v84);
  sub_100109314();
  uint64_t v86 = sub_100109328(v85);
  uint64_t v524 = (int *)type metadata accessor for ViewState(v86);
  sub_100162E4C();
  __chkstk_darwin(v87);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v88);
  sub_100128F8C();
  sub_100109338(v89);
  uint64_t v90 = sub_10017DF08(&qword_100E81558);
  uint64_t v91 = sub_100109308(v90);
  __chkstk_darwin(v91);
  uint64_t v93 = &v472[-((v92 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v522 = type metadata accessor for ViewState.SecondaryViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v94);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v95);
  uint64_t v97 = &v472[-v96];
  __chkstk_darwin(v98);
  uint64_t v100 = (uint64_t *)&v472[-v99];
  uint64_t v482 = type metadata accessor for LocationViewerViewAction();
  sub_100162E4C();
  __chkstk_darwin(v101);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v102);
  uint64_t v104 = &v472[-v103];
  uint64_t v105 = type metadata accessor for ListViewAction();
  uint64_t v106 = sub_100109308(v105);
  __chkstk_darwin(v106);
  uint64_t v108 = (uint64_t (*)(uint64_t))&v472[-((v107 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for ViewAction();
  sub_100162E4C();
  __chkstk_darwin(v109);
  uint64_t v111 = &v472[-((v110 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v112);
  uint64_t v114 = &v472[-v113];
  __chkstk_darwin(v115);
  uint64_t v117 = &v472[-v116];
  sub_1001E4534(a3, (uint64_t)&v472[-v116], (void (*)(void))type metadata accessor for ViewAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1001E45DC((uint64_t)v117, (uint64_t)v104, (void (*)(void))type metadata accessor for LocationViewerViewAction);
      uint64_t v122 = v524;
      uint64_t v123 = (uint64_t)v526;
      sub_1001E4534((uint64_t)v526 + v524[5], (uint64_t)v100, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1001E44DC((uint64_t)v100, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
        uint64_t v120 = v525;
LABEL_35:
        uint64_t v273 = type metadata accessor for LocationViewerViewAction;
        uint64_t v274 = (uint64_t)v104;
        goto LABEL_60;
      }
      uint64_t v271 = *v100;
      uint64_t v272 = *(void *)(v123 + v122[9] + 8);
      uint64_t v120 = v525;
      if (v272 == 1 && (sub_10001EE2C() & 1) == 0)
      {
        swift_release();
        goto LABEL_35;
      }
      sub_100166C28();
      uint64_t v120 = sub_100099E7C(v271, (uint64_t)v120, (uint64_t)v104);
      swift_release();
      uint64_t v276 = (void (*)(void))type metadata accessor for LocationViewerViewAction;
      uint64_t v277 = (uint64_t)v104;
LABEL_81:
      sub_1001E44DC(v277, v276);
      return v120;
    case 2u:
      if (qword_100E627B0 != -1) {
        swift_once();
      }
      uint64_t v124 = type metadata accessor for Logger();
      sub_1002102B0(v124, (uint64_t)qword_100F51E28);
      sub_1001E4534(a3, (uint64_t)v114, (void (*)(void))type metadata accessor for ViewAction);
      uint64_t v125 = v494;
      sub_1001E4534((uint64_t)v526, v494, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v126 = Logger.logObject.getter();
      os_log_type_t v127 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v126, v127))
      {
        uint64_t v128 = swift_slowAlloc();
        uint64_t v129 = swift_slowAlloc();
        *(_DWORD *)uint64_t v128 = 141558787;
        uint64_t v527 = 1752392040;
        uint64_t v528 = v129;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v128 + 12) = 2081;
        sub_1001E4534((uint64_t)v114, (uint64_t)v111, (void (*)(void))type metadata accessor for ViewAction);
        uint64_t v130 = String.init<A>(describing:)();
        uint64_t v527 = sub_10016414C(v130, v131, &v528);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_1001E44DC((uint64_t)v114, (void (*)(void))type metadata accessor for ViewAction);
        *(_WORD *)(v128 + 22) = 2160;
        uint64_t v527 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v128 + 32) = 2081;
        sub_10062D764();
        uint64_t v132 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v527 = sub_10016414C(v132, v133, &v528);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_1001E44DC(v125, (void (*)(void))type metadata accessor for ViewState);
        _os_log_impl((void *)&_mh_execute_header, v126, v127, "Cannot handle actions of views that are not visible; action=%{private,mask.hash}s, state=%{private,mask.hash}s",
          (uint8_t *)v128,
          0x2Au);
        swift_arrayDestroy();
        sub_100162EE0();
        sub_100162EE0();
      }
      else
      {
        sub_1001E44DC((uint64_t)v114, (void (*)(void))type metadata accessor for ViewAction);
        sub_1001E44DC(v125, (void (*)(void))type metadata accessor for ViewState);
      }

      goto LABEL_53;
    case 3u:
      uint64_t v108 = v490;
      sub_1001E45DC((uint64_t)v117, (uint64_t)v490, (void (*)(void))type metadata accessor for SearchViewAction);
      uint64_t v134 = v491;
      sub_10052E3A0((uint64_t)v526 + v524[8], v491);
      uint64_t v135 = v514;
      if (_s7Weather24LocationCompositionStateOwet_0(v134, 1, v514) == 1)
      {
        uint64_t v136 = v492;
        type metadata accessor for SearchViewState.ViewState(0);
        swift_storeEnumTagMultiPayload();
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v136 + *(int *)(v135 + 28), 1, 1, v487);
        *uint64_t v136 = 0;
        v136[1] = 0xE000000000000000;
        *((unsigned char *)v136 + *(int *)(v135 + 24)) = 0;
        sub_1001781AC(v134, &qword_100E66408);
      }
      else
      {
        uint64_t v136 = v492;
        sub_1001E45DC(v134, (uint64_t)v492, (void (*)(void))type metadata accessor for SearchViewState);
      }
      uint64_t v275 = (uint64_t)v525;
      sub_1001B1E64(v507 + 17, v507[20]);
      uint64_t v120 = (int *)sub_10091A75C((uint64_t)v136, v275, v108);
      sub_1001E44DC((uint64_t)v136, (void (*)(void))type metadata accessor for SearchViewState);
      uint64_t v121 = type metadata accessor for SearchViewAction;
      goto LABEL_40;
    case 4u:
      uint64_t v137 = v500;
      sub_1001E45DC((uint64_t)v117, v500, (void (*)(void))type metadata accessor for InteractiveMapViewAction);
      uint64_t v138 = (uint64_t)v526;
      if (*((unsigned __int8 *)v526 + v524[10] + 1) != 128)
      {
        uint64_t v139 = sub_100987050();
        if (v139)
        {
          uint64_t v140 = v139;
          uint64_t v141 = v479;
          sub_1001E4534(v137, v479, (void (*)(void))type metadata accessor for InteractiveMapViewAction);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v143 = (uint64_t)v525;
          uint64_t v144 = v486;
          uint64_t v145 = v485;
          uint64_t v146 = v484;
          switch(EnumCaseMultiPayload)
          {
            case 1:
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v478 + 32))(v484, v141, v487);
              sub_1001E4534(v140 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, v144, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
              type metadata accessor for PreviewLocation();
              swift_storeEnumTagMultiPayload();
              type metadata accessor for LocationPreviewViewState(0);
              type metadata accessor for LocationPreviewModalViewState(0);
              swift_storeEnumTagMultiPayload();
              uint64_t v372 = type metadata accessor for ModalViewState.MapViewModal(0);
              sub_100181FE4(v146, v373, v374, v372);
              goto LABEL_69;
            case 2:
              uint64_t v375 = v478;
              uint64_t v376 = v477;
              uint64_t v377 = v487;
              sub_1001627D4();
              v378();
              uint64_t v379 = (uint64_t)v474;
              Location.identifier.getter();
              (*(void (**)(uint64_t, uint64_t))(v375 + 8))(v376, v377);
              uint64_t v380 = type metadata accessor for Location.Identifier();
              sub_100181FE4(v379, v381, v382, v380);
              sub_1001E45DC(v379, v144, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
              sub_1001E4534(v143 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, v146, (void (*)(void))type metadata accessor for ModalViewState);
              goto LABEL_70;
            case 3:
              uint64_t v383 = v498;
              uint64_t v97 = v476;
              uint64_t v384 = v506;
              sub_1001627D4();
              v385();
              sub_1001E4534(v140 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, v144, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
              sub_1001E4534(v143 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, v146, (void (*)(void))type metadata accessor for ModalViewState);
              uint64_t v386 = sub_10017E6F0(OBJC_IVAR____TtCV7Weather9MainState8_Storage_view);
              sub_100165114(v386, v387, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
              uint64_t v388 = v502;
              (*(void (**)(uint64_t, char *, uint64_t))(v383 + 16))(v502, v97, v384);
              sub_1001093B0();
              _s7Weather24LocationCompositionStateOwst_0(v389, v390, v391, v384);
              type metadata accessor for WeatherMapTrackingState(0);
              uint64_t v392 = sub_1001830E4();
              sub_100189F20(v392, 1, v393, v394);
              sub_1001781AC(v143, qword_100E66490);
              sub_1001781AC(v388, &qword_100E65BC0);
              sub_1001E44DC(v138, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
              (*(void (**)(char *, uint64_t))(v383 + 8))(v97, v384);
              break;
            case 4:
              sub_10019B584();
              sub_1001627D4();
              v395();
              sub_1001E4534(v140 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, v144, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
              sub_1001E4534(v143 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, v146, (void (*)(void))type metadata accessor for ModalViewState);
              uint64_t v396 = sub_10017E6F0(OBJC_IVAR____TtCV7Weather9MainState8_Storage_view);
              uint64_t v397 = v499;
              sub_1001E4534(v396, (uint64_t)v499, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
              uint64_t v398 = v502;
              sub_100185434(v502);
              uint64_t v399 = Location.id.getter();
              uint64_t v401 = v400;
              type metadata accessor for WeatherMapTrackingState(0);
              uint64_t v402 = sub_100187194();
              _s7Weather24LocationCompositionStateOwst_0(v402, 1, 1, v403);
              sub_10006D9DC(6, 254, v398, v399, v401, (uint64_t)v114, v145);
              swift_bridgeObjectRelease();
              sub_1001781AC((uint64_t)v114, qword_100E66490);
              sub_1001781AC(v398, &qword_100E65BC0);
              sub_1001E44DC((uint64_t)v397, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
              uint64_t v404 = (void (*)(uint64_t, uint64_t))*((void *)v97 + 1);
              v97 += 8;
              v404(v477, v487);
              break;
            case 5:
              sub_1001E4534(v140 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, v486, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
LABEL_69:
              swift_storeEnumTagMultiPayload();
LABEL_70:
              uint64_t v405 = sub_10017E6F0(OBJC_IVAR____TtCV7Weather9MainState8_Storage_view);
              sub_1001E4534(v405, (uint64_t)v145, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
              break;
            case 6:
              sub_1001E4534(v140 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, v486, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
              sub_1001E4534(v143 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, v146, (void (*)(void))type metadata accessor for ModalViewState);
              uint64_t v406 = sub_10017E6F0(OBJC_IVAR____TtCV7Weather9MainState8_Storage_view);
              v407 = v499;
              sub_1001E4534(v406, (uint64_t)v499, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
              __int16 v408 = *(_WORD *)v407;
              v409 = v508;
              (*(void (**)(unsigned char *, char *, uint64_t))(v498 + 16))(&v145[v508[6]], &v407[v508[6]], v506);
              sub_1001E4534((uint64_t)&v407[v409[8]], (uint64_t)&v145[v409[8]], (void (*)(void))type metadata accessor for WeatherMapTrackingState);
              char v410 = v407[v409[9]];
              *(_WORD *)uint64_t v145 = v408;
              v411 = &v145[v409[7]];
              void *v411 = 0;
              v411[1] = 0;
              v145[v409[9]] = v410;
              sub_1001E44DC((uint64_t)v407, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
              goto LABEL_78;
            case 7:
              sub_1001E4534(v140 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, v486, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
              sub_1001E4534(v143 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, v146, (void (*)(void))type metadata accessor for ModalViewState);
              uint64_t v412 = sub_10017E6F0(OBJC_IVAR____TtCV7Weather9MainState8_Storage_view);
              sub_100165114(v412, v413, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
              uint64_t v414 = v502;
              sub_100185434(v502);
              sub_10017DF08(&qword_100E66460);
              uint64_t v415 = sub_1001830E4();
              uint64_t v417 = 2;
              goto LABEL_74;
            case 8:
              sub_1001E4534(v140 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, v486, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
              sub_1001E4534(v143 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, v146, (void (*)(void))type metadata accessor for ModalViewState);
              uint64_t v418 = sub_10017E6F0(OBJC_IVAR____TtCV7Weather9MainState8_Storage_view);
              sub_100165114(v418, v419, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
              uint64_t v414 = v502;
              sub_100185434(v502);
              sub_10017DF08(&qword_100E66460);
              uint64_t v415 = sub_1001830E4();
              uint64_t v417 = 3;
LABEL_74:
              _s7Weather24LocationCompositionStateOwst_0(v415, v417, 3, v416);
              uint64_t v420 = type metadata accessor for WeatherMapTrackingState(0);
              sub_100189F20(v143, 0, v421, v420);
              sub_1001781AC(v143, qword_100E66490);
              sub_1001781AC(v414, &qword_100E65BC0);
              sub_1001E44DC(v138, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
              break;
            default:
              sub_10019B584();
              uint64_t v147 = v475;
              uint64_t v148 = v487;
              sub_1001627D4();
              v149();
              Location.identifier.getter();
              uint64_t v150 = type metadata accessor for Location.Identifier();
              sub_100181FE4(v144, v151, v152, v150);
              uint64_t v153 = v143 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
              uint64_t v154 = v524;
              sub_1001E4534(v143 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view + v524[10], (uint64_t)v145, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
              uint64_t v155 = v153 + v154[9];
              uint64_t v156 = v473;
              sub_1001E4534(v155, v473, (void (*)(void))type metadata accessor for DisplayMetrics);
              LOBYTE(v153) = sub_10058BCBC();
              sub_1001E44DC(v156, (void (*)(void))type metadata accessor for DisplayMetrics);
              uint64_t v157 = (void (*)(uint64_t, uint64_t))*((void *)v97 + 1);
              v97 += 8;
              v157(v147, v148);
              if ((v153 & 1) == 0)
              {
                uint64_t v422 = type metadata accessor for ModalViewState.MapViewModal(0);
                _s7Weather24LocationCompositionStateOwst_0(v146, 1, 1, v422);
              }
              swift_storeEnumTagMultiPayload();
              break;
          }
          v409 = v508;
LABEL_78:
          uint64_t v423 = type metadata accessor for AppConfigurationState();
          uint64_t v424 = sub_1001A0B34(v423);
          uint64_t v425 = v521;
          uint64_t v428 = sub_1001630C0(v521, v426, v427, v424);
          uint64_t v429 = v520;
          uint64_t v432 = sub_10017A5E0(v520, v430, v431, v428);
          uint64_t v433 = v519;
          uint64_t v436 = sub_10017A0E0(v519, v434, v435, v432);
          sub_1001A2D0C(v436);
          uint64_t v437 = v481;
          sub_1001E4534(v144, v481, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
          sub_1001093B0();
          _s7Weather24LocationCompositionStateOwst_0(v438, v439, v440, active);
          uint64_t v441 = sub_1001CCC58(v437, 3, 2, 4, 2, 3, v140);
          sub_1001781AC(v437, &qword_100E663D0);
          uint64_t v508 = (int *)v140;
          uint64_t v442 = v513;
          *uint64_t v513 = v441;
          uint64_t v443 = v522;
          swift_storeEnumTagMultiPayload();
          sub_1001093B0();
          _s7Weather24LocationCompositionStateOwst_0(v444, v445, v446, v443);
          uint64_t v447 = v510;
          sub_100184A6C(v510);
          uint64_t v120 = v512;
          sub_100185454((uint64_t)v512);
          uint64_t v448 = (uint64_t)v145;
          uint64_t v449 = v511;
          sub_1001E4534(v448, (uint64_t)v511, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
          sub_1001093B0();
          _s7Weather24LocationCompositionStateOwst_0(v450, v451, v452, (uint64_t)v409);
          uint64_t v453 = v516;
          sub_1001A32F8();
          uint64_t v454 = (uint64_t)v526;
          sub_10011D8AC();
          sub_1001781AC((uint64_t)v449, &qword_100E663F8);
          sub_1001781AC((uint64_t)v120, &qword_100E66400);
          sub_1001781AC(v447, &qword_100E66408);
          sub_1001781AC((uint64_t)v442, &qword_100E66410);
          _s7Weather24LocationCompositionStateOwst_0(v453, 0, 1, (uint64_t)v524);
          sub_100184484((void (*)(void))type metadata accessor for ModalViewState, (uint64_t)&v516);
          _s7Weather24LocationCompositionStateOwst_0(v454, 0, 1, v518);
          sub_100186A7C();
          uint64_t v473 = v433;
          v474 = v97;
          uint64_t v455 = sub_10016356C();
          uint64_t v456 = v523;
          sub_100163034(v455, v457, v523, v425, v429, v458, v459, v460, v472[0], v473, (uint64_t)v474, v475, (uint64_t)v476, v477, v478, v479, active, v481, v482,
            v483,
            v484);
          sub_10017F4A8();
          swift_release();
          sub_1001781AC(v454, &qword_100E663F0);
          sub_1001781AC(v453, &qword_100E66418);
          sub_1001781AC((uint64_t)v97, &qword_100E66420);
          sub_1001781AC(v433, &qword_100E66428);
          sub_1001781AC(v429, &qword_100E66430);
          sub_1001781AC(v425, &qword_100E66438);
          sub_1001781AC(v456, &qword_100E66440);
          sub_1001E44DC((uint64_t)v485, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
          sub_1001E44DC(v447, (void (*)(void))type metadata accessor for ModalViewState);
          sub_1001E44DC(v486, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
          goto LABEL_79;
        }
      }
      uint64_t v230 = v488;
      sub_1001E4534(v137, v488, (void (*)(void))type metadata accessor for InteractiveMapViewAction);
      int v231 = swift_getEnumCaseMultiPayload();
      sub_1001E44DC(v230, (void (*)(void))type metadata accessor for InteractiveMapViewAction);
      if (v231 == 8)
      {
        uint64_t v232 = type metadata accessor for AppConfigurationState();
        uint64_t v233 = sub_1001A0B34(v232);
        uint64_t v236 = sub_1001630C0(v521, v234, v235, v233);
        uint64_t v239 = sub_10017A5E0(v520, v237, v238, v236);
        uint64_t v242 = sub_10017A0E0(v519, v240, v241, v239);
        uint64_t v243 = (uint64_t)v517;
        sub_100183CB0((uint64_t)v517, v244, v245, v242);
        uint64_t v246 = v510;
        sub_100184A6C(v510);
        uint64_t v247 = (uint64_t)v512;
        sub_100185454((uint64_t)v512);
        uint64_t v120 = v524;
        uint64_t v248 = (uint64_t)v525;
        sub_100165114((uint64_t)v525 + v524[10] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v249, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
        uint64_t v250 = v502;
        sub_100185434(v502);
        sub_10017DF08(&qword_100E66460);
        uint64_t v251 = sub_100187194();
        _s7Weather24LocationCompositionStateOwst_0(v251, 3, 3, v252);
        uint64_t v253 = type metadata accessor for WeatherMapTrackingState(0);
        sub_100181FE4((uint64_t)v114, v254, v255, v253);
        uint64_t v256 = v511;
        sub_10006D9DC(6, 254, v250, 0, 0, (uint64_t)v114, v511);
        sub_1001781AC((uint64_t)v114, qword_100E66490);
        sub_1001781AC(v250, &qword_100E65BC0);
        sub_1001E44DC(v138, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v256, 0, 1, (uint64_t)v508);
        uint64_t v257 = v516;
        sub_1001A32F8();
        sub_10011D8AC();
        sub_1001781AC((uint64_t)v256, &qword_100E663F8);
        sub_1001781AC(v247, &qword_100E66400);
        sub_1001781AC(v246, &qword_100E66408);
        sub_1001781AC((uint64_t)v93, &qword_100E66410);
        sub_1001093B0();
        _s7Weather24LocationCompositionStateOwst_0(v258, v259, v260, (uint64_t)v120);
        uint64_t v261 = v515;
        _s7Weather24LocationCompositionStateOwst_0(v515, 1, 1, v518);
        sub_100183844();
        uint64_t v262 = v519;
        sub_10019D6A0(v263, v264, v265, v266, v267, v268, v269, v270, v462, v519, v243, v257, v261, v463, v464, v465, v466, v467, v468,
          0,
          v248);
        sub_10017F4A8();
        sub_1001781AC(v261, &qword_100E663F0);
        sub_1001781AC(v257, &qword_100E66418);
        sub_1001781AC(v243, &qword_100E66420);
        sub_1001781AC(v262, &qword_100E66428);
        sub_1001781AC((uint64_t)v256, &qword_100E66430);
        sub_1001781AC(v247, &qword_100E66438);
        sub_1001781AC(v248, &qword_100E66440);
LABEL_79:
        uint64_t v276 = (void (*)(void))type metadata accessor for InteractiveMapViewAction;
        uint64_t v281 = &v530;
        goto LABEL_80;
      }
      uint64_t v120 = v525;
      if (qword_100E627B0 != -1) {
        swift_once();
      }
      uint64_t v367 = type metadata accessor for Logger();
      sub_1002102B0(v367, (uint64_t)qword_100F51E28);
      uint64_t v368 = Logger.logObject.getter();
      os_log_type_t v369 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v368, v369))
      {
        *(_WORD *)swift_slowAlloc() = 0;
        sub_100179C44((void *)&_mh_execute_header, v370, v371, "Can only process pinned map actions when pinned map and locationViewer states available");
        sub_100162EE0();
      }

      uint64_t v273 = type metadata accessor for InteractiveMapViewAction;
      uint64_t v274 = v137;
LABEL_60:
      sub_1001E44DC(v274, (void (*)(void))v273);
LABEL_61:
      swift_retain();
      return v120;
    case 5u:
      uint64_t v158 = v503;
      sub_1001E45DC((uint64_t)v117, v503, (void (*)(void))type metadata accessor for DisplayMetricsChangeAction);
      uint64_t v159 = v158;
      uint64_t v160 = v489;
      sub_1001E4534(v159, v489, (void (*)(void))type metadata accessor for DisplayMetricsChangeAction);
      sub_1001E45DC(v160, v504, (void (*)(void))type metadata accessor for DisplayMetrics);
      uint64_t v161 = type metadata accessor for AppConfigurationState();
      uint64_t v162 = v523;
      _s7Weather24LocationCompositionStateOwst_0(v523, 1, 1, v161);
      uint64_t v163 = type metadata accessor for EnvironmentState();
      uint64_t v164 = v521;
      uint64_t v167 = sub_1001630C0(v521, v165, v166, v163);
      uint64_t v168 = v520;
      uint64_t v171 = sub_10017A5E0(v520, v169, v170, v167);
      uint64_t v172 = v519;
      uint64_t v175 = sub_10017A0E0(v519, v173, v174, v171);
      uint64_t v176 = (uint64_t)v517;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v517, 1, 1, v175);
      uint64_t v177 = v516;
      sub_10007A298();
      sub_1001093B0();
      uint64_t v178 = v524;
      _s7Weather24LocationCompositionStateOwst_0(v179, v180, v181, (uint64_t)v524);
      uint64_t v182 = v515;
      _s7Weather24LocationCompositionStateOwst_0(v515, 1, 1, v518);
      uint64_t v183 = (uint64_t)v525;
      uint64_t v469 = (uint64_t)v525;
      sub_100183844();
      uint64_t v184 = sub_10016356C();
      uint64_t v189 = sub_100163034(v184, v185, v162, v164, v168, v186, v187, v188, v462, v172, v176, v177, v182, v463, v464, v465, v466, v467, v468,
               0,
               v469);
      sub_1001781AC(v182, &qword_100E663F0);
      sub_1001781AC(v177, &qword_100E66418);
      sub_1001781AC(v176, &qword_100E66420);
      sub_1001781AC(v172, &qword_100E66428);
      sub_1001781AC(v168, &qword_100E66430);
      sub_1001781AC(v164, &qword_100E66438);
      sub_1001781AC(v162, &qword_100E66440);
      uint64_t v190 = v495;
      sub_1001E4534(v183 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v495, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v191 = v493;
      sub_1001E4534(v190 + v178[5], (uint64_t)v493, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1001E44DC((uint64_t)v191, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
      }
      else
      {
        uint64_t v278 = *v191;
        if (*(void *)(v190 + v178[9] + 8) != 1
          || (id v279 = [self currentDevice],
              [v279 userInterfaceIdiom],
              v279,
              (*(unsigned char *)(v190 + v178[7]) & 1) != 0))
        {
          sub_1001E44DC(v190, (void (*)(void))type metadata accessor for ViewState);
          sub_100166C28();
          uint64_t v280 = v483;
          swift_storeEnumTagMultiPayload();
          uint64_t v120 = sub_100099E7C(v278, v189, v280);
          swift_release();
          swift_release();
          sub_1001E44DC(v280, (void (*)(void))type metadata accessor for LocationViewerViewAction);
          sub_1001E44DC(v504, (void (*)(void))type metadata accessor for DisplayMetrics);
          uint64_t v276 = (void (*)(void))type metadata accessor for DisplayMetricsChangeAction;
          uint64_t v281 = &v531;
          goto LABEL_80;
        }
        swift_release();
      }
      sub_1001E44DC(v190, (void (*)(void))type metadata accessor for ViewState);
      sub_1001E44DC(v504, (void (*)(void))type metadata accessor for DisplayMetrics);
      sub_1001E44DC(v503, (void (*)(void))type metadata accessor for DisplayMetricsChangeAction);
      return (int *)v189;
    case 6u:
      uint64_t v192 = type metadata accessor for AppConfigurationState();
      uint64_t v193 = sub_1001A0B34(v192);
      uint64_t v194 = v521;
      uint64_t v197 = sub_1001630C0(v521, v195, v196, v193);
      uint64_t v198 = v520;
      uint64_t v201 = sub_10017A5E0(v520, v199, v200, v197);
      uint64_t v202 = v519;
      uint64_t v205 = sub_10017A0E0(v519, v203, v204, v201);
      sub_1001A2D0C(v205);
      uint64_t v120 = (int *)v513;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v513, 1, 1, v522);
      uint64_t v206 = v510;
      sub_100184A6C(v510);
      uint64_t v207 = (uint64_t)v512;
      sub_100185454((uint64_t)v512);
      uint64_t v208 = v511;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v511, 1, 1, (uint64_t)v508);
      uint64_t v209 = v516;
      sub_10011D8AC();
      sub_1001781AC((uint64_t)v208, &qword_100E663F8);
      sub_1001781AC(v207, &qword_100E66400);
      sub_1001781AC(v206, &qword_100E66408);
      sub_1001781AC((uint64_t)v120, &qword_100E66410);
      _s7Weather24LocationCompositionStateOwst_0(v209, 0, 1, (uint64_t)v524);
      uint64_t v210 = v515;
      _s7Weather24LocationCompositionStateOwst_0(v515, 1, 1, v518);
      uint64_t v470 = (uint64_t)v525;
      sub_100183844();
      uint64_t v211 = sub_10016356C();
      uint64_t v212 = v523;
      sub_100163034(v211, v213, v523, v194, v198, v214, v215, v216, v462, v202, (uint64_t)v97, v209, v210, v463, v464, v465, v466, v467, v468,
        0,
        v470);
      sub_10017F4A8();
      sub_1001781AC(v210, &qword_100E663F0);
      sub_1001781AC(v209, &qword_100E66418);
      sub_1001781AC((uint64_t)v97, &qword_100E66420);
      sub_1001781AC(v202, &qword_100E66428);
      sub_1001781AC(v198, &qword_100E66430);
      sub_1001781AC(v194, &qword_100E66438);
      sub_1001781AC(v212, &qword_100E66440);
      return v120;
    case 7u:
      sub_1001E4534((uint64_t)v526 + v524[5], (uint64_t)v97, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1001E45DC((uint64_t)v97, (uint64_t)v93, (void (*)(void))type metadata accessor for VFXTestViewState);
        uint64_t v217 = type metadata accessor for VFXTestViewState();
        uint64_t v218 = (uint64_t)v93;
        uint64_t v219 = 0;
      }
      else
      {
        sub_1001E44DC((uint64_t)v97, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
        uint64_t v217 = type metadata accessor for VFXTestViewState();
        uint64_t v218 = (uint64_t)v93;
        uint64_t v219 = 1;
      }
      _s7Weather24LocationCompositionStateOwst_0(v218, v219, 1, v217);
      uint64_t v120 = v525;
      type metadata accessor for VFXTestViewState();
      _s7Weather24LocationCompositionStateOwet_0((uint64_t)v93, 1, v217);
      sub_1001781AC((uint64_t)v93, &qword_100E81558);
      goto LABEL_61;
    case 8u:
      uint64_t v220 = (uint64_t)v525 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView;
      uint64_t v221 = v505;
      sub_1001E4534((uint64_t)v525 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, v505, (void (*)(void))type metadata accessor for ModalViewState);
      uint64_t v222 = v496;
      sub_1001E4534(v220, v496, (void (*)(void))type metadata accessor for ModalViewState);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        sub_1001E44DC(v221, (void (*)(void))type metadata accessor for ModalViewState);
        sub_1001E44DC(v222, (void (*)(void))type metadata accessor for ModalViewState);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        sub_1001E44DC(v222, (void (*)(void))type metadata accessor for ModalViewState);
      }
      uint64_t v282 = (uint64_t)v526;
      uint64_t v283 = v514;
      uint64_t v284 = type metadata accessor for AppConfigurationState();
      uint64_t v285 = sub_1001A0B34(v284);
      uint64_t v288 = sub_1001630C0(v521, v286, v287, v285);
      uint64_t v291 = sub_10017A5E0(v520, v289, v290, v288);
      uint64_t v294 = sub_10017A0E0(v519, v292, v293, v291);
      sub_100183CB0((uint64_t)v517, v295, v296, v294);
      uint64_t v297 = v510;
      _s7Weather24LocationCompositionStateOwst_0(v510, 1, 1, v283);
      uint64_t v298 = (uint64_t)v512;
      sub_100185454((uint64_t)v512);
      uint64_t v299 = v524;
      uint64_t v300 = v282 + v524[10];
      uint64_t v301 = v502;
      uint64_t v302 = v506;
      _s7Weather24LocationCompositionStateOwst_0(v502, 1, 1, v506);
      uint64_t v303 = sub_10017DF08(&qword_100E66460);
      uint64_t v304 = v501;
      uint64_t v305 = &v501[*(int *)(v303 + 48)];
      *uint64_t v501 = (*(unsigned char *)(v300 + 1) & 0xC0) == 64;
      uint64_t v306 = (uint64_t)v508;
      (*(void (**)(BOOL *, uint64_t, uint64_t))(v498 + 16))(v305, v300 + v508[6], v302);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v304, 0, 3, v303);
      uint64_t v307 = type metadata accessor for WeatherMapTrackingState(0);
      sub_100181FE4((uint64_t)v304, v308, v309, v307);
      uint64_t v120 = (int *)v511;
      sub_10006D9DC(4, 128, v301, 0, 0, (uint64_t)v304, v511);
      sub_1001781AC((uint64_t)v304, qword_100E66490);
      sub_1001781AC(v301, &qword_100E65BC0);
      sub_1001093B0();
      _s7Weather24LocationCompositionStateOwst_0(v310, v311, v312, v306);
      uint64_t v313 = v516;
      sub_1001A32F8();
      uint64_t v314 = (uint64_t)v526;
      sub_10011D8AC();
      sub_1001781AC((uint64_t)v120, &qword_100E663F8);
      sub_1001781AC(v298, &qword_100E66400);
      sub_1001781AC(v297, &qword_100E66408);
      sub_1001781AC((uint64_t)v93, &qword_100E66410);
      sub_1001093B0();
      _s7Weather24LocationCompositionStateOwst_0(v315, v316, v317, (uint64_t)v299);
      sub_100184484((void (*)(void))type metadata accessor for ModalViewState, (uint64_t)&v532);
      _s7Weather24LocationCompositionStateOwst_0(v314, 0, 1, v518);
      sub_100186A7C();
      uint64_t v318 = (uint64_t)v517;
      v474 = v517;
      uint64_t v319 = v519;
      uint64_t v473 = v519;
      uint64_t v320 = sub_10016356C();
      uint64_t v321 = v523;
      uint64_t v323 = v520;
      uint64_t v322 = v521;
      sub_100163034(v320, v324, v523, v521, v520, v325, v326, v327, v472[0], v473, (uint64_t)v474, v475, (uint64_t)v476, v477, v478, v479, active, v481, v482,
        v483,
        v484);
      sub_10017F4A8();
      sub_1001781AC(v314, &qword_100E663F0);
      sub_1001781AC(v313, &qword_100E66418);
      sub_1001781AC(v318, &qword_100E66420);
      sub_1001781AC(v319, &qword_100E66428);
      sub_1001781AC(v323, &qword_100E66430);
      sub_1001781AC(v322, &qword_100E66438);
      sub_1001781AC(v321, &qword_100E66440);
      uint64_t v276 = (void (*)(void))type metadata accessor for ModalViewState;
      uint64_t v277 = (uint64_t)v299;
      goto LABEL_81;
    case 9u:
      unsigned int v223 = v524;
      uint64_t v120 = v526;
      uint64_t v224 = (unsigned __int8 *)v526 + v524[10];
      if (v224[1] == 128)
      {
        uint64_t v120 = v525;
        if (qword_100E627B0 != -1) {
          swift_once();
        }
        uint64_t v225 = type metadata accessor for Logger();
        sub_1002102B0(v225, (uint64_t)qword_100F51E28);
        int v226 = Logger.logObject.getter();
        os_log_type_t v227 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v226, v227))
        {
          *(_WORD *)swift_slowAlloc() = 0;
          sub_100179C44((void *)&_mh_execute_header, v228, v229, "Can only process interactive map actions");
          sub_100162EE0();
        }

        goto LABEL_61;
      }
      int v328 = *v224;
      uint64_t v329 = (uint64_t *)((char *)v526 + v524[9]);
      uint64_t v330 = v502;
      sub_100185434(v502);
      uint64_t v331 = type metadata accessor for WeatherMapTrackingState(0);
      uint64_t v332 = v501;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v501, 1, 1, v331);
      if (v328 == 5) {
        uint64_t v333 = 2;
      }
      else {
        uint64_t v333 = 5;
      }
      uint64_t v334 = v499;
      sub_100074324(v333, v329, v330, (uint64_t)v332, v499);
      sub_1001781AC((uint64_t)v332, qword_100E66490);
      sub_1001781AC(v330, &qword_100E65BC0);
      uint64_t v335 = type metadata accessor for AppConfigurationState();
      uint64_t v336 = sub_1001A0B34(v335);
      uint64_t v339 = sub_1001630C0(v521, v337, v338, v336);
      uint64_t v342 = sub_10017A5E0(v520, v340, v341, v339);
      uint64_t v343 = v519;
      uint64_t v346 = sub_10017A0E0(v519, v344, v345, v342);
      uint64_t v347 = (uint64_t)v517;
      sub_100183CB0((uint64_t)v517, v348, v349, v346);
      uint64_t v350 = v510;
      sub_100184A6C(v510);
      uint64_t v351 = (uint64_t)v512;
      sub_100185454((uint64_t)v512);
      uint64_t v352 = (uint64_t)v334;
      uint64_t v353 = v511;
      sub_1001E4534(v352, (uint64_t)v511, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v353, 0, 1, (uint64_t)v508);
      uint64_t v354 = v516;
      sub_1001A32F8();
      sub_10011D8AC();
      sub_1001781AC((uint64_t)v353, &qword_100E663F8);
      sub_1001781AC(v351, &qword_100E66400);
      sub_1001781AC(v350, &qword_100E66408);
      sub_1001781AC((uint64_t)v93, &qword_100E66410);
      sub_1001093B0();
      _s7Weather24LocationCompositionStateOwst_0(v355, v356, v357, (uint64_t)v223);
      uint64_t v358 = v515;
      _s7Weather24LocationCompositionStateOwst_0(v515, 1, 1, v518);
      uint64_t v471 = (uint64_t)v525;
      sub_100183844();
      sub_10019D6A0(v359, v360, v361, v362, v363, v364, v365, v366, v462, v343, v347, v354, v358, v463, v464, v465, v466, v467, v468,
        0,
        v471);
      sub_10017F4A8();
      sub_1001781AC(v358, &qword_100E663F0);
      sub_1001781AC(v354, &qword_100E66418);
      sub_1001781AC(v347, &qword_100E66420);
      sub_1001781AC(v343, &qword_100E66428);
      sub_1001781AC(v350, &qword_100E66430);
      sub_1001781AC((uint64_t)v353, &qword_100E66438);
      sub_1001781AC(v351, &qword_100E66440);
      uint64_t v276 = (void (*)(void))type metadata accessor for WeatherMapPresentationState;
      uint64_t v281 = &v529;
LABEL_80:
      uint64_t v277 = *(v281 - 32);
      goto LABEL_81;
    default:
      sub_1001E45DC((uint64_t)v117, (uint64_t)v108, (void (*)(void))type metadata accessor for ListViewAction);
      uint64_t v118 = sub_100986FE8();
      if (v118)
      {
        uint64_t v119 = v118;
        sub_1001B1E64(v507 + 2, v507[5]);
        uint64_t v120 = (int *)sub_100AA6710(v119, (uint64_t)v525, (uint64_t)v108);
        swift_release();
        uint64_t v121 = type metadata accessor for ListViewAction;
LABEL_40:
        uint64_t v276 = (void (*)(void))v121;
        uint64_t v277 = (uint64_t)v108;
        goto LABEL_81;
      }
      sub_1001E44DC((uint64_t)v108, (void (*)(void))type metadata accessor for ListViewAction);
LABEL_53:
      uint64_t v120 = v525;
      goto LABEL_61;
  }
}

uint64_t sub_1001E44DC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001E4534(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t type metadata accessor for DisplayMetricsChangeAction()
{
  uint64_t result = qword_100EACA90;
  if (!qword_100EACA90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001E45DC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t type metadata accessor for InteractiveMapViewAction()
{
  uint64_t result = qword_100E6CFC0;
  if (!qword_100E6CFC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for SearchViewAction()
{
  uint64_t result = qword_100E8B0C0;
  if (!qword_100E8B0C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001E46CC(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v43 = a3;
  uint64_t v7 = sub_10017DF08(&qword_100E634B0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100EABE80);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for News();
  sub_100179C0C();
  uint64_t v15 = v14;
  uint64_t v17 = *(void *)(v16 + 64);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v40 - v21;
  sub_1001E74D8(a1, (uint64_t)v12);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13) == 1)
  {
    sub_1000F3400((uint64_t)v12, &qword_100EABE80);
  }
  else
  {
    uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v42(v22, v12, v13);
    uint64_t v23 = *(void *)(News.placements.getter() + 16);
    swift_bridgeObjectRelease();
    if (v23)
    {
      uint64_t v24 = type metadata accessor for TaskPriority();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 1, 1, v24);
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v20, v22, v13);
      unint64_t v25 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      uint64_t v40 = a2;
      uint64_t v41 = v9;
      uint64_t v26 = v4;
      unint64_t v27 = (v17 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = 0;
      *(void *)(v28 + 24) = 0;
      v42((char *)(v28 + v25), v20, v13);
      *(void *)(v28 + v27) = v26;
      uint64_t v29 = (void *)(v28 + ((v27 + 15) & 0xFFFFFFFFFFFFFFF8));
      uint64_t v30 = v43;
      *uint64_t v29 = v40;
      v29[1] = v30;
      swift_retain();
      swift_retain();
      sub_1001BCCF0((uint64_t)v41, (uint64_t)&unk_100EB0F88, v28);
      swift_release();
      uint64_t v31 = sub_1001A4A18();
      return v32(v31);
    }
    uint64_t v34 = sub_1001A4A18();
    v35(v34);
  }
  if (qword_100E62868 != -1) {
    swift_once();
  }
  uint64_t v36 = type metadata accessor for Logger();
  sub_1002102B0(v36, (uint64_t)qword_100F52040);
  uint64_t v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v39 = 0;
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "No articles to fetch", v39, 2u);
    sub_100162EE0();
  }

  return a2(_swiftEmptyArrayStorage);
}

void sub_1001E4A4C()
{
  sub_100162EA0();
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_10011C760();
  sub_10006DF38(v0, v1, (uint64_t *)&unk_100EADD50);
  uint64_t v4 = v0 + *(int *)(type metadata accessor for LocationsState() + 48);
  uint64_t v5 = *(void *)v4;
  uint64_t v6 = *(void *)(v4 + 8);
  unsigned __int8 v7 = *(unsigned char *)(v4 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10015458C(v5, v6, v7);
  swift_bridgeObjectRetain();
  sub_1001CF8D0();
  sub_100162694();
}

uint64_t sub_1001E4B50(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10017DF08(a3);
  sub_100162880();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for ContentStatusBanner.Placement(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

void *sub_1001E4BF8(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1001E4CD0@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v40 = a2;
  uint64_t v42 = a3;
  uint64_t v4 = type metadata accessor for Location();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v6 = sub_10017DF08(&qword_100E63850);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_10017DF08(&qword_100E639E8);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_1001626E0();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v17 = sub_100109308(v16);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (void (*)(void))((char *)&v39 - v21);
  sub_1001B1E64((void *)(v3+ OBJC_IVAR____TtC7Weather43WeatherConditionBackgroundModelInputFactory_weatherConditionBackgroundTimeDataFactory), *(void *)(v3+ OBJC_IVAR____TtC7Weather43WeatherConditionBackgroundModelInputFactory_weatherConditionBackgroundTimeDataFactory+ 24));
  uint64_t v41 = v5;
  uint64_t v23 = *(void (**)(void))(v5 + 16);
  sub_1001A121C();
  v23();
  _s7Weather24LocationCompositionStateOwst_0(v15, 0, 1, v4);
  sub_10014FEA8(v39, v10, (void (*)(void))type metadata accessor for WeatherData);
  uint64_t v24 = type metadata accessor for WeatherData(0);
  _s7Weather24LocationCompositionStateOwst_0(v10, 0, 1, v24);
  sub_10020D9C0(v15, v10, v40, (uint64_t)v22);
  sub_1001781AC(v10, &qword_100E63850);
  sub_1001781AC(v15, &qword_100E639E8);
  if (qword_100E627D0 != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  sub_1002102B0(v25, (uint64_t)qword_100F51E88);
  sub_1001A121C();
  v23();
  sub_10014FEA8((uint64_t)v22, (uint64_t)v20, (void (*)(void))type metadata accessor for WeatherConditionBackgroundTimeData);
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v40 = v22;
    *(_DWORD *)uint64_t v28 = 141558531;
    uint64_t v43 = 1752392040;
    uint64_t v44 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v28 + 12) = 2081;
    uint64_t v30 = Location.name.getter();
    uint64_t v43 = sub_10016414C(v30, v31, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v32 = sub_10019F6BC();
    v33(v32);
    *(_WORD *)(v28 + 22) = 2082;
    uint64_t v34 = sub_1001E5488();
    uint64_t v43 = sub_10016414C(v34, v35, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10014148C((uint64_t)v20, (void (*)(void))type metadata accessor for WeatherConditionBackgroundTimeData);
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Preprocessed data for LocationViewer; location=%{private,mask.hash}s, data=%{public}s",
      (uint8_t *)v28,
      0x20u);
    swift_arrayDestroy();
    uint64_t v22 = v40;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v36 = sub_10019F6BC();
    v37(v36);
    sub_10014148C((uint64_t)v20, (void (*)(void))type metadata accessor for WeatherConditionBackgroundTimeData);
  }

  return sub_100150408((uint64_t)v22, v42, (void (*)(void))type metadata accessor for WeatherConditionBackgroundTimeData);
}

uint64_t sub_1001E5158(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v6 = type metadata accessor for ActivityAction();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for EnvironmentAction();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001669EC(a1, (uint64_t)v11, (void (*)(void))type metadata accessor for EnvironmentAction);
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_100164E28((uint64_t)v11, (uint64_t)v8, (void (*)(void))type metadata accessor for ActivityAction);
    sub_100C0B40C((uint64_t)v8, a2, a3);
    uint64_t v12 = type metadata accessor for ActivityAction;
    uint64_t v13 = (uint64_t)v8;
  }
  else
  {
    uint64_t v12 = type metadata accessor for EnvironmentAction;
    uint64_t v13 = (uint64_t)v11;
  }
  return sub_100159398(v13, (void (*)(void))v12);
}

uint64_t sub_1001E52C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Elevation();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E63760);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = type metadata accessor for BackgroundMoonData();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = sub_10017DF08(&qword_100E63768);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_1001E5488()
{
  uint64_t v2 = 7104878;
  uint64_t v3 = sub_10017DF08(&qword_100E63768);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E63760);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_10016279C();
  uint64_t v25 = 0;
  unint64_t v26 = 0xE000000000000000;
  _StringGuts.grow(_:)(36);
  swift_bridgeObjectRelease();
  uint64_t v25 = 0x3D657461647BLL;
  unint64_t v26 = 0xE600000000000000;
  type metadata accessor for Date();
  sub_1001E5798(&qword_100E656D8, (void (*)(uint64_t))&type metadata accessor for Date);
  v9._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v10._uint64_t countAndFlagsBits = 0x746176656C65202CLL;
  v10._object = (void *)0xEC0000003D6E6F69;
  String.append(_:)(v10);
  uint64_t v11 = type metadata accessor for WeatherConditionBackgroundTimeData();
  sub_1001262FC(v0 + *(int *)(v11 + 20), v1, &qword_100E63760);
  uint64_t v12 = type metadata accessor for Elevation();
  sub_10012B520(v1, 1, v12);
  if (v13)
  {
    sub_1001781AC(v1, &qword_100E63760);
    uint64_t v16 = (void *)0xE300000000000000;
    uint64_t v14 = 7104878;
  }
  else
  {
    uint64_t v14 = Elevation.description.getter();
    uint64_t v16 = v15;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v1, v12);
  }
  v17._uint64_t countAndFlagsBits = v14;
  v17._object = v16;
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  v18._uint64_t countAndFlagsBits = 0x61446E6F6F6D202CLL;
  v18._object = (void *)0xEB000000003D6174;
  String.append(_:)(v18);
  sub_1001262FC(v0 + *(int *)(v11 + 24), (uint64_t)v6, &qword_100E63768);
  uint64_t v19 = type metadata accessor for BackgroundMoonData();
  sub_10012B520((uint64_t)v6, 1, v19);
  if (v13)
  {
    sub_1001781AC((uint64_t)v6, &qword_100E63768);
    uint64_t v21 = (void *)0xE300000000000000;
  }
  else
  {
    uint64_t v2 = BackgroundMoonData.moonImageName.getter();
    uint64_t v21 = v20;
    (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v6, v19);
  }
  v22._uint64_t countAndFlagsBits = v2;
  v22._object = v21;
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  v23._uint64_t countAndFlagsBits = 125;
  v23._object = (void *)0xE100000000000000;
  String.append(_:)(v23);
  return v25;
}

uint64_t sub_1001E5798(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1001E57E0()
{
  *(_DWORD *)(v0 - 120) = 0;
}

uint64_t sub_1001E5804()
{
  return v0;
}

uint64_t sub_1001E5818(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, a1);
}

void sub_1001E5838(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  UnfairLock.lock()();
  swift_beginAccess();
  uint64_t v12 = *(void *)(v2 + 48);
  swift_bridgeObjectRetain();
  char v13 = sub_1001BA1DC(a1, a2, v12);
  swift_bridgeObjectRelease();
  if (v13)
  {
    uint64_t v23 = v7;
    swift_endAccess();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v14 = (void *)sub_1001E5BC4(a1, a2);
    swift_endAccess();
    swift_bridgeObjectRelease();

    [v13 invalidate];
    if (qword_100E62880 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_1002102B0(v15, (uint64_t)qword_100F52088);
    swift_bridgeObjectRetain_n();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 141558531;
      v24[0] = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v18 + 12) = 2081;
      swift_bridgeObjectRetain();
      sub_10016414C(a1, a2, v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 22) = 2080;
      Date.init()();
      sub_1000EF168(&qword_100E656D8, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v21 = v20;
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v11, v5);
      sub_10016414C(v19, v21, v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Stopped monitoring location load. ID=%{private,mask.hash}s, Now=%s", (uint8_t *)v18, 0x20u);
      swift_arrayDestroy();
      sub_100162EE0();
      sub_100162EE0();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    swift_endAccess();
  }
  UnfairLock.unlock()();
}

#error "1001E5C30: call analysis failed (funcsize=55)"

unint64_t sub_1001E5CA4()
{
  unint64_t result = qword_100E639B8;
  if (!qword_100E639B8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100E639B8);
  }
  return result;
}

uint64_t sub_1001E5CE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for Location.Identifier();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_100128EB4(&qword_100E63A28, (void (*)(uint64_t))&type metadata accessor for Location.Identifier);
  swift_bridgeObjectRetain();
  uint64_t v30 = a1;
  uint64_t v10 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v29 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    unint64_t v26 = v2;
    uint64_t v27 = a2;
    uint64_t v28 = ~v11;
    uint64_t v25 = v6;
    uint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v14 = v6 + 16;
    char v13 = v15;
    uint64_t v16 = *(void *)(v14 + 56);
    while (1)
    {
      v13(v8, *(void *)(v9 + 48) + v16 * v12, v5);
      sub_100128EB4((unint64_t *)&qword_100E63A30, (void (*)(uint64_t))&type metadata accessor for Location.Identifier);
      char v17 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v14 - 8))(v8, v5);
      if (v17) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v28;
      if (((*(void *)(v29 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = 1;
        a2 = v27;
        return _s7Weather24LocationCompositionStateOwst_0(a2, v18, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v19 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v19;
    uint64_t v31 = *v19;
    *uint64_t v19 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1007F0EFC();
      uint64_t v21 = v31;
    }
    unint64_t v22 = *(void *)(v21 + 48) + v16 * v12;
    a2 = v27;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v25 + 32))(v27, v22, v5);
    sub_1001E5FC0(v12);
    *uint64_t v19 = v31;
    swift_bridgeObjectRelease();
    uint64_t v18 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = 1;
  }
  return _s7Weather24LocationCompositionStateOwst_0(a2, v18, 1, v5);
}